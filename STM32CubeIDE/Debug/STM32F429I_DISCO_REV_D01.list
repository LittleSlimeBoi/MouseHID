
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002468c  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001d78  0802483c  0802483c  0002583c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  080265b4  080265b4  000275b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  0802675c  0802675c  0002775c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08026774  08026774  00027774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  08026782  08026782  00027782  2**0
                  ALLOC
  7 .ARM          00000008  08026784  08026784  00027784  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  0802678c  0802678c  00028480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  0802678c  0802678c  0002778c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  080267a0  080267a0  000277a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000274  20000000  080267a8  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000280  08026a1c  00028280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000380  08026b1c  00028380  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          00014900  20000480  08026c1c  00028480  2**2
                  ALLOC
 15 ._user_heap_stack 00001400  20014d80  08026c1c  00028d80  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  00028480  2**0
                  CONTENTS, READONLY
 17 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00029000  2**2
                  ALLOC
 18 .debug_line   000547d6  00000000  00000000  000284b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 0000005f  00000000  00000000  0007cc86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   000aec3e  00000000  00000000  0007cce5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000140b5  00000000  00000000  0012b923  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000032c8  00000000  00000000  0013f9d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00115d08  00000000  00000000  00142ca0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00003436  00000000  00000000  002589a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001ea16  00000000  00000000  0025bdde  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  000350cf  00000000  00000000  0027a7f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000c2  00000000  00000000  002af8c3  2**0
                  CONTENTS, READONLY
 28 .debug_frame  000094cc  00000000  00000000  002af988  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000480 	.word	0x20000480
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08024824 	.word	0x08024824

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000484 	.word	0x20000484
 80001ec:	08024824 	.word	0x08024824

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	@ 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_d2iz>:
 8000618:	ea4f 0241 	mov.w	r2, r1, lsl #1
 800061c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000620:	d215      	bcs.n	800064e <__aeabi_d2iz+0x36>
 8000622:	d511      	bpl.n	8000648 <__aeabi_d2iz+0x30>
 8000624:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000628:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 800062c:	d912      	bls.n	8000654 <__aeabi_d2iz+0x3c>
 800062e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000632:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000636:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800063a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 800063e:	fa23 f002 	lsr.w	r0, r3, r2
 8000642:	bf18      	it	ne
 8000644:	4240      	negne	r0, r0
 8000646:	4770      	bx	lr
 8000648:	f04f 0000 	mov.w	r0, #0
 800064c:	4770      	bx	lr
 800064e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000652:	d105      	bne.n	8000660 <__aeabi_d2iz+0x48>
 8000654:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000658:	bf08      	it	eq
 800065a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 800065e:	4770      	bx	lr
 8000660:	f04f 0000 	mov.w	r0, #0
 8000664:	4770      	bx	lr
 8000666:	bf00      	nop

08000668 <__aeabi_ldivmod>:
 8000668:	b97b      	cbnz	r3, 800068a <__aeabi_ldivmod+0x22>
 800066a:	b972      	cbnz	r2, 800068a <__aeabi_ldivmod+0x22>
 800066c:	2900      	cmp	r1, #0
 800066e:	bfbe      	ittt	lt
 8000670:	2000      	movlt	r0, #0
 8000672:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8000676:	e006      	blt.n	8000686 <__aeabi_ldivmod+0x1e>
 8000678:	bf08      	it	eq
 800067a:	2800      	cmpeq	r0, #0
 800067c:	bf1c      	itt	ne
 800067e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 8000682:	f04f 30ff 	movne.w	r0, #4294967295
 8000686:	f000 b9d3 	b.w	8000a30 <__aeabi_idiv0>
 800068a:	f1ad 0c08 	sub.w	ip, sp, #8
 800068e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000692:	2900      	cmp	r1, #0
 8000694:	db09      	blt.n	80006aa <__aeabi_ldivmod+0x42>
 8000696:	2b00      	cmp	r3, #0
 8000698:	db1a      	blt.n	80006d0 <__aeabi_ldivmod+0x68>
 800069a:	f000 f84d 	bl	8000738 <__udivmoddi4>
 800069e:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006a2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006a6:	b004      	add	sp, #16
 80006a8:	4770      	bx	lr
 80006aa:	4240      	negs	r0, r0
 80006ac:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006b0:	2b00      	cmp	r3, #0
 80006b2:	db1b      	blt.n	80006ec <__aeabi_ldivmod+0x84>
 80006b4:	f000 f840 	bl	8000738 <__udivmoddi4>
 80006b8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006bc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006c0:	b004      	add	sp, #16
 80006c2:	4240      	negs	r0, r0
 80006c4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006c8:	4252      	negs	r2, r2
 80006ca:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80006ce:	4770      	bx	lr
 80006d0:	4252      	negs	r2, r2
 80006d2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80006d6:	f000 f82f 	bl	8000738 <__udivmoddi4>
 80006da:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006de:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006e2:	b004      	add	sp, #16
 80006e4:	4240      	negs	r0, r0
 80006e6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006ea:	4770      	bx	lr
 80006ec:	4252      	negs	r2, r2
 80006ee:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80006f2:	f000 f821 	bl	8000738 <__udivmoddi4>
 80006f6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006fa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006fe:	b004      	add	sp, #16
 8000700:	4252      	negs	r2, r2
 8000702:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000706:	4770      	bx	lr

08000708 <__aeabi_uldivmod>:
 8000708:	b953      	cbnz	r3, 8000720 <__aeabi_uldivmod+0x18>
 800070a:	b94a      	cbnz	r2, 8000720 <__aeabi_uldivmod+0x18>
 800070c:	2900      	cmp	r1, #0
 800070e:	bf08      	it	eq
 8000710:	2800      	cmpeq	r0, #0
 8000712:	bf1c      	itt	ne
 8000714:	f04f 31ff 	movne.w	r1, #4294967295
 8000718:	f04f 30ff 	movne.w	r0, #4294967295
 800071c:	f000 b988 	b.w	8000a30 <__aeabi_idiv0>
 8000720:	f1ad 0c08 	sub.w	ip, sp, #8
 8000724:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000728:	f000 f806 	bl	8000738 <__udivmoddi4>
 800072c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000730:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000734:	b004      	add	sp, #16
 8000736:	4770      	bx	lr

08000738 <__udivmoddi4>:
 8000738:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800073c:	9d08      	ldr	r5, [sp, #32]
 800073e:	468e      	mov	lr, r1
 8000740:	4604      	mov	r4, r0
 8000742:	4688      	mov	r8, r1
 8000744:	2b00      	cmp	r3, #0
 8000746:	d14a      	bne.n	80007de <__udivmoddi4+0xa6>
 8000748:	428a      	cmp	r2, r1
 800074a:	4617      	mov	r7, r2
 800074c:	d962      	bls.n	8000814 <__udivmoddi4+0xdc>
 800074e:	fab2 f682 	clz	r6, r2
 8000752:	b14e      	cbz	r6, 8000768 <__udivmoddi4+0x30>
 8000754:	f1c6 0320 	rsb	r3, r6, #32
 8000758:	fa01 f806 	lsl.w	r8, r1, r6
 800075c:	fa20 f303 	lsr.w	r3, r0, r3
 8000760:	40b7      	lsls	r7, r6
 8000762:	ea43 0808 	orr.w	r8, r3, r8
 8000766:	40b4      	lsls	r4, r6
 8000768:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800076c:	fa1f fc87 	uxth.w	ip, r7
 8000770:	fbb8 f1fe 	udiv	r1, r8, lr
 8000774:	0c23      	lsrs	r3, r4, #16
 8000776:	fb0e 8811 	mls	r8, lr, r1, r8
 800077a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800077e:	fb01 f20c 	mul.w	r2, r1, ip
 8000782:	429a      	cmp	r2, r3
 8000784:	d909      	bls.n	800079a <__udivmoddi4+0x62>
 8000786:	18fb      	adds	r3, r7, r3
 8000788:	f101 30ff 	add.w	r0, r1, #4294967295
 800078c:	f080 80ea 	bcs.w	8000964 <__udivmoddi4+0x22c>
 8000790:	429a      	cmp	r2, r3
 8000792:	f240 80e7 	bls.w	8000964 <__udivmoddi4+0x22c>
 8000796:	3902      	subs	r1, #2
 8000798:	443b      	add	r3, r7
 800079a:	1a9a      	subs	r2, r3, r2
 800079c:	b2a3      	uxth	r3, r4
 800079e:	fbb2 f0fe 	udiv	r0, r2, lr
 80007a2:	fb0e 2210 	mls	r2, lr, r0, r2
 80007a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80007aa:	fb00 fc0c 	mul.w	ip, r0, ip
 80007ae:	459c      	cmp	ip, r3
 80007b0:	d909      	bls.n	80007c6 <__udivmoddi4+0x8e>
 80007b2:	18fb      	adds	r3, r7, r3
 80007b4:	f100 32ff 	add.w	r2, r0, #4294967295
 80007b8:	f080 80d6 	bcs.w	8000968 <__udivmoddi4+0x230>
 80007bc:	459c      	cmp	ip, r3
 80007be:	f240 80d3 	bls.w	8000968 <__udivmoddi4+0x230>
 80007c2:	443b      	add	r3, r7
 80007c4:	3802      	subs	r0, #2
 80007c6:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80007ca:	eba3 030c 	sub.w	r3, r3, ip
 80007ce:	2100      	movs	r1, #0
 80007d0:	b11d      	cbz	r5, 80007da <__udivmoddi4+0xa2>
 80007d2:	40f3      	lsrs	r3, r6
 80007d4:	2200      	movs	r2, #0
 80007d6:	e9c5 3200 	strd	r3, r2, [r5]
 80007da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007de:	428b      	cmp	r3, r1
 80007e0:	d905      	bls.n	80007ee <__udivmoddi4+0xb6>
 80007e2:	b10d      	cbz	r5, 80007e8 <__udivmoddi4+0xb0>
 80007e4:	e9c5 0100 	strd	r0, r1, [r5]
 80007e8:	2100      	movs	r1, #0
 80007ea:	4608      	mov	r0, r1
 80007ec:	e7f5      	b.n	80007da <__udivmoddi4+0xa2>
 80007ee:	fab3 f183 	clz	r1, r3
 80007f2:	2900      	cmp	r1, #0
 80007f4:	d146      	bne.n	8000884 <__udivmoddi4+0x14c>
 80007f6:	4573      	cmp	r3, lr
 80007f8:	d302      	bcc.n	8000800 <__udivmoddi4+0xc8>
 80007fa:	4282      	cmp	r2, r0
 80007fc:	f200 8105 	bhi.w	8000a0a <__udivmoddi4+0x2d2>
 8000800:	1a84      	subs	r4, r0, r2
 8000802:	eb6e 0203 	sbc.w	r2, lr, r3
 8000806:	2001      	movs	r0, #1
 8000808:	4690      	mov	r8, r2
 800080a:	2d00      	cmp	r5, #0
 800080c:	d0e5      	beq.n	80007da <__udivmoddi4+0xa2>
 800080e:	e9c5 4800 	strd	r4, r8, [r5]
 8000812:	e7e2      	b.n	80007da <__udivmoddi4+0xa2>
 8000814:	2a00      	cmp	r2, #0
 8000816:	f000 8090 	beq.w	800093a <__udivmoddi4+0x202>
 800081a:	fab2 f682 	clz	r6, r2
 800081e:	2e00      	cmp	r6, #0
 8000820:	f040 80a4 	bne.w	800096c <__udivmoddi4+0x234>
 8000824:	1a8a      	subs	r2, r1, r2
 8000826:	0c03      	lsrs	r3, r0, #16
 8000828:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800082c:	b280      	uxth	r0, r0
 800082e:	b2bc      	uxth	r4, r7
 8000830:	2101      	movs	r1, #1
 8000832:	fbb2 fcfe 	udiv	ip, r2, lr
 8000836:	fb0e 221c 	mls	r2, lr, ip, r2
 800083a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800083e:	fb04 f20c 	mul.w	r2, r4, ip
 8000842:	429a      	cmp	r2, r3
 8000844:	d907      	bls.n	8000856 <__udivmoddi4+0x11e>
 8000846:	18fb      	adds	r3, r7, r3
 8000848:	f10c 38ff 	add.w	r8, ip, #4294967295
 800084c:	d202      	bcs.n	8000854 <__udivmoddi4+0x11c>
 800084e:	429a      	cmp	r2, r3
 8000850:	f200 80e0 	bhi.w	8000a14 <__udivmoddi4+0x2dc>
 8000854:	46c4      	mov	ip, r8
 8000856:	1a9b      	subs	r3, r3, r2
 8000858:	fbb3 f2fe 	udiv	r2, r3, lr
 800085c:	fb0e 3312 	mls	r3, lr, r2, r3
 8000860:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000864:	fb02 f404 	mul.w	r4, r2, r4
 8000868:	429c      	cmp	r4, r3
 800086a:	d907      	bls.n	800087c <__udivmoddi4+0x144>
 800086c:	18fb      	adds	r3, r7, r3
 800086e:	f102 30ff 	add.w	r0, r2, #4294967295
 8000872:	d202      	bcs.n	800087a <__udivmoddi4+0x142>
 8000874:	429c      	cmp	r4, r3
 8000876:	f200 80ca 	bhi.w	8000a0e <__udivmoddi4+0x2d6>
 800087a:	4602      	mov	r2, r0
 800087c:	1b1b      	subs	r3, r3, r4
 800087e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000882:	e7a5      	b.n	80007d0 <__udivmoddi4+0x98>
 8000884:	f1c1 0620 	rsb	r6, r1, #32
 8000888:	408b      	lsls	r3, r1
 800088a:	fa22 f706 	lsr.w	r7, r2, r6
 800088e:	431f      	orrs	r7, r3
 8000890:	fa0e f401 	lsl.w	r4, lr, r1
 8000894:	fa20 f306 	lsr.w	r3, r0, r6
 8000898:	fa2e fe06 	lsr.w	lr, lr, r6
 800089c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80008a0:	4323      	orrs	r3, r4
 80008a2:	fa00 f801 	lsl.w	r8, r0, r1
 80008a6:	fa1f fc87 	uxth.w	ip, r7
 80008aa:	fbbe f0f9 	udiv	r0, lr, r9
 80008ae:	0c1c      	lsrs	r4, r3, #16
 80008b0:	fb09 ee10 	mls	lr, r9, r0, lr
 80008b4:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80008b8:	fb00 fe0c 	mul.w	lr, r0, ip
 80008bc:	45a6      	cmp	lr, r4
 80008be:	fa02 f201 	lsl.w	r2, r2, r1
 80008c2:	d909      	bls.n	80008d8 <__udivmoddi4+0x1a0>
 80008c4:	193c      	adds	r4, r7, r4
 80008c6:	f100 3aff 	add.w	sl, r0, #4294967295
 80008ca:	f080 809c 	bcs.w	8000a06 <__udivmoddi4+0x2ce>
 80008ce:	45a6      	cmp	lr, r4
 80008d0:	f240 8099 	bls.w	8000a06 <__udivmoddi4+0x2ce>
 80008d4:	3802      	subs	r0, #2
 80008d6:	443c      	add	r4, r7
 80008d8:	eba4 040e 	sub.w	r4, r4, lr
 80008dc:	fa1f fe83 	uxth.w	lr, r3
 80008e0:	fbb4 f3f9 	udiv	r3, r4, r9
 80008e4:	fb09 4413 	mls	r4, r9, r3, r4
 80008e8:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 80008ec:	fb03 fc0c 	mul.w	ip, r3, ip
 80008f0:	45a4      	cmp	ip, r4
 80008f2:	d908      	bls.n	8000906 <__udivmoddi4+0x1ce>
 80008f4:	193c      	adds	r4, r7, r4
 80008f6:	f103 3eff 	add.w	lr, r3, #4294967295
 80008fa:	f080 8082 	bcs.w	8000a02 <__udivmoddi4+0x2ca>
 80008fe:	45a4      	cmp	ip, r4
 8000900:	d97f      	bls.n	8000a02 <__udivmoddi4+0x2ca>
 8000902:	3b02      	subs	r3, #2
 8000904:	443c      	add	r4, r7
 8000906:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 800090a:	eba4 040c 	sub.w	r4, r4, ip
 800090e:	fba0 ec02 	umull	lr, ip, r0, r2
 8000912:	4564      	cmp	r4, ip
 8000914:	4673      	mov	r3, lr
 8000916:	46e1      	mov	r9, ip
 8000918:	d362      	bcc.n	80009e0 <__udivmoddi4+0x2a8>
 800091a:	d05f      	beq.n	80009dc <__udivmoddi4+0x2a4>
 800091c:	b15d      	cbz	r5, 8000936 <__udivmoddi4+0x1fe>
 800091e:	ebb8 0203 	subs.w	r2, r8, r3
 8000922:	eb64 0409 	sbc.w	r4, r4, r9
 8000926:	fa04 f606 	lsl.w	r6, r4, r6
 800092a:	fa22 f301 	lsr.w	r3, r2, r1
 800092e:	431e      	orrs	r6, r3
 8000930:	40cc      	lsrs	r4, r1
 8000932:	e9c5 6400 	strd	r6, r4, [r5]
 8000936:	2100      	movs	r1, #0
 8000938:	e74f      	b.n	80007da <__udivmoddi4+0xa2>
 800093a:	fbb1 fcf2 	udiv	ip, r1, r2
 800093e:	0c01      	lsrs	r1, r0, #16
 8000940:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000944:	b280      	uxth	r0, r0
 8000946:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 800094a:	463b      	mov	r3, r7
 800094c:	4638      	mov	r0, r7
 800094e:	463c      	mov	r4, r7
 8000950:	46b8      	mov	r8, r7
 8000952:	46be      	mov	lr, r7
 8000954:	2620      	movs	r6, #32
 8000956:	fbb1 f1f7 	udiv	r1, r1, r7
 800095a:	eba2 0208 	sub.w	r2, r2, r8
 800095e:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000962:	e766      	b.n	8000832 <__udivmoddi4+0xfa>
 8000964:	4601      	mov	r1, r0
 8000966:	e718      	b.n	800079a <__udivmoddi4+0x62>
 8000968:	4610      	mov	r0, r2
 800096a:	e72c      	b.n	80007c6 <__udivmoddi4+0x8e>
 800096c:	f1c6 0220 	rsb	r2, r6, #32
 8000970:	fa2e f302 	lsr.w	r3, lr, r2
 8000974:	40b7      	lsls	r7, r6
 8000976:	40b1      	lsls	r1, r6
 8000978:	fa20 f202 	lsr.w	r2, r0, r2
 800097c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000980:	430a      	orrs	r2, r1
 8000982:	fbb3 f8fe 	udiv	r8, r3, lr
 8000986:	b2bc      	uxth	r4, r7
 8000988:	fb0e 3318 	mls	r3, lr, r8, r3
 800098c:	0c11      	lsrs	r1, r2, #16
 800098e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000992:	fb08 f904 	mul.w	r9, r8, r4
 8000996:	40b0      	lsls	r0, r6
 8000998:	4589      	cmp	r9, r1
 800099a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 800099e:	b280      	uxth	r0, r0
 80009a0:	d93e      	bls.n	8000a20 <__udivmoddi4+0x2e8>
 80009a2:	1879      	adds	r1, r7, r1
 80009a4:	f108 3cff 	add.w	ip, r8, #4294967295
 80009a8:	d201      	bcs.n	80009ae <__udivmoddi4+0x276>
 80009aa:	4589      	cmp	r9, r1
 80009ac:	d81f      	bhi.n	80009ee <__udivmoddi4+0x2b6>
 80009ae:	eba1 0109 	sub.w	r1, r1, r9
 80009b2:	fbb1 f9fe 	udiv	r9, r1, lr
 80009b6:	fb09 f804 	mul.w	r8, r9, r4
 80009ba:	fb0e 1119 	mls	r1, lr, r9, r1
 80009be:	b292      	uxth	r2, r2
 80009c0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80009c4:	4542      	cmp	r2, r8
 80009c6:	d229      	bcs.n	8000a1c <__udivmoddi4+0x2e4>
 80009c8:	18ba      	adds	r2, r7, r2
 80009ca:	f109 31ff 	add.w	r1, r9, #4294967295
 80009ce:	d2c4      	bcs.n	800095a <__udivmoddi4+0x222>
 80009d0:	4542      	cmp	r2, r8
 80009d2:	d2c2      	bcs.n	800095a <__udivmoddi4+0x222>
 80009d4:	f1a9 0102 	sub.w	r1, r9, #2
 80009d8:	443a      	add	r2, r7
 80009da:	e7be      	b.n	800095a <__udivmoddi4+0x222>
 80009dc:	45f0      	cmp	r8, lr
 80009de:	d29d      	bcs.n	800091c <__udivmoddi4+0x1e4>
 80009e0:	ebbe 0302 	subs.w	r3, lr, r2
 80009e4:	eb6c 0c07 	sbc.w	ip, ip, r7
 80009e8:	3801      	subs	r0, #1
 80009ea:	46e1      	mov	r9, ip
 80009ec:	e796      	b.n	800091c <__udivmoddi4+0x1e4>
 80009ee:	eba7 0909 	sub.w	r9, r7, r9
 80009f2:	4449      	add	r1, r9
 80009f4:	f1a8 0c02 	sub.w	ip, r8, #2
 80009f8:	fbb1 f9fe 	udiv	r9, r1, lr
 80009fc:	fb09 f804 	mul.w	r8, r9, r4
 8000a00:	e7db      	b.n	80009ba <__udivmoddi4+0x282>
 8000a02:	4673      	mov	r3, lr
 8000a04:	e77f      	b.n	8000906 <__udivmoddi4+0x1ce>
 8000a06:	4650      	mov	r0, sl
 8000a08:	e766      	b.n	80008d8 <__udivmoddi4+0x1a0>
 8000a0a:	4608      	mov	r0, r1
 8000a0c:	e6fd      	b.n	800080a <__udivmoddi4+0xd2>
 8000a0e:	443b      	add	r3, r7
 8000a10:	3a02      	subs	r2, #2
 8000a12:	e733      	b.n	800087c <__udivmoddi4+0x144>
 8000a14:	f1ac 0c02 	sub.w	ip, ip, #2
 8000a18:	443b      	add	r3, r7
 8000a1a:	e71c      	b.n	8000856 <__udivmoddi4+0x11e>
 8000a1c:	4649      	mov	r1, r9
 8000a1e:	e79c      	b.n	800095a <__udivmoddi4+0x222>
 8000a20:	eba1 0109 	sub.w	r1, r1, r9
 8000a24:	46c4      	mov	ip, r8
 8000a26:	fbb1 f9fe 	udiv	r9, r1, lr
 8000a2a:	fb09 f804 	mul.w	r8, r9, r4
 8000a2e:	e7c4      	b.n	80009ba <__udivmoddi4+0x282>

08000a30 <__aeabi_idiv0>:
 8000a30:	4770      	bx	lr
 8000a32:	bf00      	nop

08000a34 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000a34:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000a6c <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000a38:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000a3a:	e003      	b.n	8000a44 <LoopCopyDataInit>

08000a3c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000a3c:	4b0c      	ldr	r3, [pc, #48]	@ (8000a70 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000a3e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000a40:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000a42:	3104      	adds	r1, #4

08000a44 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000a44:	480b      	ldr	r0, [pc, #44]	@ (8000a74 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000a46:	4b0c      	ldr	r3, [pc, #48]	@ (8000a78 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000a48:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000a4a:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000a4c:	d3f6      	bcc.n	8000a3c <CopyDataInit>
  ldr  r2, =_sbss
 8000a4e:	4a0b      	ldr	r2, [pc, #44]	@ (8000a7c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000a50:	e002      	b.n	8000a58 <LoopFillZerobss>

08000a52 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000a52:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000a54:	f842 3b04 	str.w	r3, [r2], #4

08000a58 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000a58:	4b09      	ldr	r3, [pc, #36]	@ (8000a80 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000a5a:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000a5c:	d3f9      	bcc.n	8000a52 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000a5e:	f003 faf5 	bl	800404c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000a62:	f022 ffc9 	bl	80239f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000a66:	f001 fac9 	bl	8001ffc <main>
  bx  lr    
 8000a6a:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000a6c:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000a70:	080267a8 	.word	0x080267a8
  ldr  r0, =_sdata
 8000a74:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000a78:	20000274 	.word	0x20000274
  ldr  r2, =_sbss
 8000a7c:	20000480 	.word	0x20000480
  ldr  r3, = _ebss
 8000a80:	20014d80 	.word	0x20014d80

08000a84 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000a84:	e7fe      	b.n	8000a84 <ADC_IRQHandler>

08000a86 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000a86:	4770      	bx	lr

08000a88 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000a88:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8000a8a:	f000 fdbb 	bl	8001604 <touchgfx_components_init>
    touchgfx_init();
}
 8000a8e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8000a92:	f000 bd3f 	b.w	8001514 <touchgfx_init>

08000a96 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8000a96:	f000 bdb7 	b.w	8001608 <touchgfx_taskEntry>

08000a9a <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000a9a:	4770      	bx	lr

08000a9c <_ZN20STM32TouchControllerD0Ev>:
 8000a9c:	b510      	push	{r4, lr}
 8000a9e:	2104      	movs	r1, #4
 8000aa0:	4604      	mov	r4, r0
 8000aa2:	f021 fce2 	bl	802246a <_ZdlPvj>
 8000aa6:	4620      	mov	r0, r4
 8000aa8:	bd10      	pop	{r4, pc}
	...

08000aac <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000aac:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000aae:	4b0c      	ldr	r3, [pc, #48]	@ (8000ae0 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000ab0:	4c0c      	ldr	r4, [pc, #48]	@ (8000ae4 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000ab2:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000ab4:	4b0c      	ldr	r3, [pc, #48]	@ (8000ae8 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000ab6:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8000ab8:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000aba:	6863      	ldr	r3, [r4, #4]
 8000abc:	4798      	blx	r3
 8000abe:	f640 0311 	movw	r3, #2065	@ 0x811
 8000ac2:	4298      	cmp	r0, r3
 8000ac4:	d10a      	bne.n	8000adc <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000ac6:	4d09      	ldr	r5, [pc, #36]	@ (8000aec <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000ac8:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000aca:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000acc:	2082      	movs	r0, #130	@ 0x82
 8000ace:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000ad0:	682b      	ldr	r3, [r5, #0]
 8000ad2:	2082      	movs	r0, #130	@ 0x82
 8000ad4:	68db      	ldr	r3, [r3, #12]
 8000ad6:	4798      	blx	r3
 8000ad8:	2000      	movs	r0, #0
    }

    return ret;
}
 8000ada:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000adc:	2001      	movs	r0, #1
 8000ade:	e7fc      	b.n	8000ada <_Z11BSP_TS_Inittt+0x2e>
 8000ae0:	200004a6 	.word	0x200004a6
 8000ae4:	2000009c 	.word	0x2000009c
 8000ae8:	200004a4 	.word	0x200004a4
 8000aec:	200004a8 	.word	0x200004a8

08000af0 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000af0:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8000af4:	20f0      	movs	r0, #240	@ 0xf0
 8000af6:	f7ff bfd9 	b.w	8000aac <_Z11BSP_TS_Inittt>
	...

08000afc <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000afc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000afe:	4d39      	ldr	r5, [pc, #228]	@ (8000be4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000b00:	682b      	ldr	r3, [r5, #0]
{
 8000b02:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000b04:	691b      	ldr	r3, [r3, #16]
 8000b06:	2082      	movs	r0, #130	@ 0x82
 8000b08:	4798      	blx	r3
 8000b0a:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000b0c:	2800      	cmp	r0, #0
 8000b0e:	d04e      	beq.n	8000bae <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000b10:	682b      	ldr	r3, [r5, #0]
 8000b12:	f10d 0206 	add.w	r2, sp, #6
 8000b16:	695b      	ldr	r3, [r3, #20]
 8000b18:	a901      	add	r1, sp, #4
 8000b1a:	2082      	movs	r0, #130	@ 0x82
 8000b1c:	4798      	blx	r3

        if (isRevD)
 8000b1e:	4b32      	ldr	r3, [pc, #200]	@ (8000be8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000b20:	781b      	ldrb	r3, [r3, #0]
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	d04b      	beq.n	8000bbe <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 8000b26:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000b2a:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000b2e:	429a      	cmp	r2, r3
 8000b30:	d93f      	bls.n	8000bb2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 8000b32:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 8000b36:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000b3a:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000b3c:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000b3e:	2b0a      	cmp	r3, #10
 8000b40:	d942      	bls.n	8000bc8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 8000b42:	220b      	movs	r2, #11
 8000b44:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000b48:	4a28      	ldr	r2, [pc, #160]	@ (8000bec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000b4a:	8812      	ldrh	r2, [r2, #0]
 8000b4c:	4293      	cmp	r3, r2
 8000b4e:	d901      	bls.n	8000b54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000b50:	3a01      	subs	r2, #1
 8000b52:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000b54:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000b58:	4825      	ldr	r0, [pc, #148]	@ (8000bf0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000b5a:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000b5e:	428a      	cmp	r2, r1
 8000b60:	d834      	bhi.n	8000bcc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 8000b62:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 8000b66:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000b68:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 8000b6a:	b292      	uxth	r2, r2
        xr = x / 15;
 8000b6c:	250f      	movs	r5, #15
 8000b6e:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 8000b72:	4d20      	ldr	r5, [pc, #128]	@ (8000bf4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 8000b74:	882d      	ldrh	r5, [r5, #0]
 8000b76:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 8000b78:	bf84      	itt	hi
 8000b7a:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8000b7e:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000b80:	428a      	cmp	r2, r1
 8000b82:	4615      	mov	r5, r2
 8000b84:	b28e      	uxth	r6, r1
 8000b86:	d92a      	bls.n	8000bde <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 8000b88:	1b92      	subs	r2, r2, r6
 8000b8a:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000b8c:	4e1a      	ldr	r6, [pc, #104]	@ (8000bf8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 8000b8e:	6837      	ldr	r7, [r6, #0]
 8000b90:	42bb      	cmp	r3, r7
 8000b92:	b2ba      	uxth	r2, r7
 8000b94:	bf8c      	ite	hi
 8000b96:	1a9a      	subhi	r2, r3, r2
 8000b98:	1ad2      	subls	r2, r2, r3
 8000b9a:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 8000b9c:	4411      	add	r1, r2
 8000b9e:	2905      	cmp	r1, #5
        {
            _x = x;
 8000ba0:	bfc4      	itt	gt
 8000ba2:	6005      	strgt	r5, [r0, #0]
            _y = y;
 8000ba4:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8000ba6:	6803      	ldr	r3, [r0, #0]
 8000ba8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000baa:	6833      	ldr	r3, [r6, #0]
 8000bac:	80a3      	strh	r3, [r4, #4]
    }
}
 8000bae:	b003      	add	sp, #12
 8000bb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 8000bb2:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 8000bb4:	bf9c      	itt	ls
 8000bb6:	22b4      	movls	r2, #180	@ 0xb4
 8000bb8:	f8ad 2006 	strhls.w	r2, [sp, #6]
 8000bbc:	e7bb      	b.n	8000b36 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 8000bbe:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000bc2:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8000bc6:	e7b9      	b.n	8000b3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8000bc8:	2300      	movs	r3, #0
 8000bca:	e7c3      	b.n	8000b54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8000bcc:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8000bd0:	3208      	adds	r2, #8
 8000bd2:	b292      	uxth	r2, r2
        if (xr <= 0)
 8000bd4:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000bd6:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000bd8:	d8c8      	bhi.n	8000b6c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000bda:	2500      	movs	r5, #0
            xr = 0;
 8000bdc:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000bde:	1a89      	subs	r1, r1, r2
 8000be0:	b289      	uxth	r1, r1
 8000be2:	e7d3      	b.n	8000b8c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 8000be4:	200004a8 	.word	0x200004a8
 8000be8:	20002f08 	.word	0x20002f08
 8000bec:	200004a4 	.word	0x200004a4
 8000bf0:	200004a0 	.word	0x200004a0
 8000bf4:	200004a6 	.word	0x200004a6
 8000bf8:	2000049c 	.word	0x2000049c

08000bfc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000bfc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000bfe:	4668      	mov	r0, sp
{
 8000c00:	460d      	mov	r5, r1
 8000c02:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000c04:	f7ff ff7a 	bl	8000afc <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000c08:	f8bd 0000 	ldrh.w	r0, [sp]
 8000c0c:	b130      	cbz	r0, 8000c1c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000c0e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000c12:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000c14:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000c18:	6023      	str	r3, [r4, #0]
        return true;
 8000c1a:	2001      	movs	r0, #1
}
 8000c1c:	b003      	add	sp, #12
 8000c1e:	bd30      	pop	{r4, r5, pc}

08000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000c20:	2803      	cmp	r0, #3
 8000c22:	d821      	bhi.n	8000c68 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000c24:	e8df f000 	tbb	[pc, r0]
 8000c28:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000c2c:	4b0f      	ldr	r3, [pc, #60]	@ (8000c6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000c2e:	681a      	ldr	r2, [r3, #0]
 8000c30:	fab2 f282 	clz	r2, r2
 8000c34:	0952      	lsrs	r2, r2, #5
 8000c36:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000c38:	480d      	ldr	r0, [pc, #52]	@ (8000c70 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000c3a:	f003 bc9b 	b.w	8004574 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000c3e:	4b0b      	ldr	r3, [pc, #44]	@ (8000c6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000c40:	685a      	ldr	r2, [r3, #4]
 8000c42:	fab2 f282 	clz	r2, r2
 8000c46:	0952      	lsrs	r2, r2, #5
 8000c48:	2108      	movs	r1, #8
 8000c4a:	e7f5      	b.n	8000c38 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000c4c:	4b07      	ldr	r3, [pc, #28]	@ (8000c6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000c4e:	689a      	ldr	r2, [r3, #8]
 8000c50:	fab2 f282 	clz	r2, r2
 8000c54:	0952      	lsrs	r2, r2, #5
 8000c56:	2110      	movs	r1, #16
 8000c58:	e7ee      	b.n	8000c38 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000c5a:	4b04      	ldr	r3, [pc, #16]	@ (8000c6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000c5c:	68da      	ldr	r2, [r3, #12]
 8000c5e:	fab2 f282 	clz	r2, r2
 8000c62:	0952      	lsrs	r2, r2, #5
 8000c64:	2120      	movs	r1, #32
 8000c66:	e7e7      	b.n	8000c38 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000c68:	4770      	bx	lr
 8000c6a:	bf00      	nop
 8000c6c:	200004ac 	.word	0x200004ac
 8000c70:	40021000 	.word	0x40021000

08000c74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000c74:	2803      	cmp	r0, #3
 8000c76:	d821      	bhi.n	8000cbc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8000c78:	e8df f000 	tbb	[pc, r0]
 8000c7c:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000c80:	4b0f      	ldr	r3, [pc, #60]	@ (8000cc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000c82:	681a      	ldr	r2, [r3, #0]
 8000c84:	3a00      	subs	r2, #0
 8000c86:	bf18      	it	ne
 8000c88:	2201      	movne	r2, #1
 8000c8a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000c8c:	480d      	ldr	r0, [pc, #52]	@ (8000cc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000c8e:	f003 bc71 	b.w	8004574 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000c92:	4b0b      	ldr	r3, [pc, #44]	@ (8000cc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000c94:	685a      	ldr	r2, [r3, #4]
 8000c96:	3a00      	subs	r2, #0
 8000c98:	bf18      	it	ne
 8000c9a:	2201      	movne	r2, #1
 8000c9c:	2108      	movs	r1, #8
 8000c9e:	e7f5      	b.n	8000c8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000ca0:	4b07      	ldr	r3, [pc, #28]	@ (8000cc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000ca2:	689a      	ldr	r2, [r3, #8]
 8000ca4:	3a00      	subs	r2, #0
 8000ca6:	bf18      	it	ne
 8000ca8:	2201      	movne	r2, #1
 8000caa:	2110      	movs	r1, #16
 8000cac:	e7ee      	b.n	8000c8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000cae:	4b04      	ldr	r3, [pc, #16]	@ (8000cc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000cb0:	68da      	ldr	r2, [r3, #12]
 8000cb2:	3a00      	subs	r2, #0
 8000cb4:	bf18      	it	ne
 8000cb6:	2201      	movne	r2, #1
 8000cb8:	2120      	movs	r1, #32
 8000cba:	e7e7      	b.n	8000c8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000cbc:	4770      	bx	lr
 8000cbe:	bf00      	nop
 8000cc0:	200004ac 	.word	0x200004ac
 8000cc4:	40021000 	.word	0x40021000

08000cc8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000cc8:	2803      	cmp	r0, #3
 8000cca:	d80d      	bhi.n	8000ce8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000ccc:	e8df f000 	tbb	[pc, r0]
 8000cd0:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000cd4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000cd6:	4805      	ldr	r0, [pc, #20]	@ (8000cec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000cd8:	f003 bc51 	b.w	800457e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000cdc:	2108      	movs	r1, #8
 8000cde:	e7fa      	b.n	8000cd6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000ce0:	2110      	movs	r1, #16
 8000ce2:	e7f8      	b.n	8000cd6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000ce4:	2120      	movs	r1, #32
 8000ce6:	e7f6      	b.n	8000cd6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000ce8:	4770      	bx	lr
 8000cea:	bf00      	nop
 8000cec:	40021000 	.word	0x40021000

08000cf0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000cf0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000cf2:	2803      	cmp	r0, #3
 8000cf4:	d811      	bhi.n	8000d1a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 8000cf6:	e8df f000 	tbb	[pc, r0]
 8000cfa:	0a02      	.short	0x0a02
 8000cfc:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000cfe:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000d00:	4807      	ldr	r0, [pc, #28]	@ (8000d20 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000d02:	f003 fc31 	bl	8004568 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000d06:	1e43      	subs	r3, r0, #1
 8000d08:	4258      	negs	r0, r3
 8000d0a:	4158      	adcs	r0, r3
 8000d0c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000d0e:	2108      	movs	r1, #8
 8000d10:	e7f6      	b.n	8000d00 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000d12:	2110      	movs	r1, #16
 8000d14:	e7f4      	b.n	8000d00 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000d16:	2120      	movs	r1, #32
 8000d18:	e7f2      	b.n	8000d00 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000d1a:	2000      	movs	r0, #0
 8000d1c:	e7f3      	b.n	8000d06 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000d1e:	bf00      	nop
 8000d20:	40021000 	.word	0x40021000

08000d24 <_ZN8touchgfx4GPIO4initEv>:
{
 8000d24:	b570      	push	{r4, r5, r6, lr}
 8000d26:	4d08      	ldr	r5, [pc, #32]	@ (8000d48 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000d28:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000d2a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000d2c:	b2e0      	uxtb	r0, r4
 8000d2e:	f7ff ffdf 	bl	8000cf0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000d32:	b118      	cbz	r0, 8000d3c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000d34:	682b      	ldr	r3, [r5, #0]
 8000d36:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000d38:	bf18      	it	ne
 8000d3a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000d3c:	3401      	adds	r4, #1
 8000d3e:	2c05      	cmp	r4, #5
 8000d40:	f105 0504 	add.w	r5, r5, #4
 8000d44:	d1f2      	bne.n	8000d2c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000d46:	bd70      	pop	{r4, r5, r6, pc}
 8000d48:	200004ac 	.word	0x200004ac

08000d4c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000d4c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000d4e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8000d52:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8000d56:	4770      	bx	lr

08000d58 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000d58:	4770      	bx	lr

08000d5a <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000d5a:	2000      	movs	r0, #0
 8000d5c:	4770      	bx	lr
	...

08000d60 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000d60:	4b03      	ldr	r3, [pc, #12]	@ (8000d70 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000d62:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000d64:	3900      	subs	r1, #0
 8000d66:	bf18      	it	ne
 8000d68:	2101      	movne	r1, #1
 8000d6a:	7019      	strb	r1, [r3, #0]
    }
 8000d6c:	4770      	bx	lr
 8000d6e:	bf00      	nop
 8000d70:	2001403d 	.word	0x2001403d

08000d74 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 8000d74:	4770      	bx	lr

08000d76 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000d76:	2000      	movs	r0, #0
 8000d78:	4770      	bx	lr

08000d7a <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000d7a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8000d7c:	b10b      	cbz	r3, 8000d82 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000d7e:	4608      	mov	r0, r1
 8000d80:	4718      	bx	r3
        }
    }
 8000d82:	4770      	bx	lr

08000d84 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000d84:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8000d88:	4770      	bx	lr

08000d8a <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000d8a:	6840      	ldr	r0, [r0, #4]
 8000d8c:	6803      	ldr	r3, [r0, #0]
 8000d8e:	699b      	ldr	r3, [r3, #24]
 8000d90:	4718      	bx	r3

08000d92 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 8000d92:	4770      	bx	lr

08000d94 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000d94:	4770      	bx	lr

08000d96 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000d96:	4770      	bx	lr

08000d98 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 8000d98:	4770      	bx	lr

08000d9a <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000d9a:	4770      	bx	lr

08000d9c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000d9c:	b510      	push	{r4, lr}
 8000d9e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8000da0:	f000 fd48 	bl	8001834 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000da4:	6823      	ldr	r3, [r4, #0]
 8000da6:	4903      	ldr	r1, [pc, #12]	@ (8000db4 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000da8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000dac:	4620      	mov	r0, r4
}
 8000dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8000db2:	4718      	bx	r3
 8000db4:	d0000000 	.word	0xd0000000

08000db8 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000db8:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000dba:	6803      	ldr	r3, [r0, #0]
{
 8000dbc:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000dbe:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8000dc2:	4798      	blx	r3
    enableInterrupts();
 8000dc4:	6823      	ldr	r3, [r4, #0]
 8000dc6:	4620      	mov	r0, r4
 8000dc8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8000dca:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000dcc:	f000 f8ec 	bl	8000fa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000dd0:	6823      	ldr	r3, [r4, #0]
 8000dd2:	4620      	mov	r0, r4
 8000dd4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000dd6:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000dd8:	2029      	movs	r0, #41	@ 0x29
 8000dda:	f001 fbd7 	bl	800258c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000dde:	f000 f8e3 	bl	8000fa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000de2:	6823      	ldr	r3, [r4, #0]
 8000de4:	4620      	mov	r0, r4
 8000de6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000de8:	4798      	blx	r3
    for (;;)
 8000dea:	e7f8      	b.n	8000dde <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000dec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000dec:	b510      	push	{r4, lr}
 8000dee:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000df0:	f00a fe8e 	bl	800bb10 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000df4:	6823      	ldr	r3, [r4, #0]
 8000df6:	4620      	mov	r0, r4
 8000df8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8000dfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000e00:	4718      	bx	r3

08000e02 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000e02:	f000 bcfb 	b.w	80017fc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000e06 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000e06:	f000 bcff 	b.w	8001808 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000e0a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000e0a:	f000 bd31 	b.w	8001870 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000e0e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000e0e:	f000 bcd1 	b.w	80017b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000e12 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000e12:	f000 bd41 	b.w	8001898 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000e16 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000e16:	f000 bd49 	b.w	80018ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000e1a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000e1a:	f000 bcd5 	b.w	80017c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000e1e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000e1e:	f00a b897 	b.w	800af50 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000e22 <_ZN11TouchGFXHALD0Ev>:
 8000e22:	b510      	push	{r4, lr}
 8000e24:	2184      	movs	r1, #132	@ 0x84
 8000e26:	4604      	mov	r4, r0
 8000e28:	f021 fb1f 	bl	802246a <_ZdlPvj>
 8000e2c:	4620      	mov	r0, r4
 8000e2e:	bd10      	pop	{r4, pc}

08000e30 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000e30:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000e32:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000e36:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000e3a:	4b0c      	ldr	r3, [pc, #48]	@ (8000e6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000e3c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000e3e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000e40:	d009      	beq.n	8000e56 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000e42:	b93a      	cbnz	r2, 8000e54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e44:	4a0a      	ldr	r2, [pc, #40]	@ (8000e70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000e46:	490b      	ldr	r1, [pc, #44]	@ (8000e74 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e48:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000e4a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000e4c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e4e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000e50:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000e52:	701a      	strb	r2, [r3, #0]
    }
 8000e54:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000e56:	2a00      	cmp	r2, #0
 8000e58:	d0fc      	beq.n	8000e54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e5a:	4a05      	ldr	r2, [pc, #20]	@ (8000e70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000e5c:	4905      	ldr	r1, [pc, #20]	@ (8000e74 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e5e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000e60:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000e62:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e64:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000e66:	2200      	movs	r2, #0
 8000e68:	e7f3      	b.n	8000e52 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000e6a:	bf00      	nop
 8000e6c:	20014036 	.word	0x20014036
 8000e70:	20014032 	.word	0x20014032
 8000e74:	20014034 	.word	0x20014034

08000e78 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000e78:	b570      	push	{r4, r5, r6, lr}
 8000e7a:	460d      	mov	r5, r1
 8000e7c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000e7e:	b935      	cbnz	r5, 8000e8e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000e80:	4b09      	ldr	r3, [pc, #36]	@ (8000ea8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000e82:	4a0a      	ldr	r2, [pc, #40]	@ (8000eac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000e84:	480a      	ldr	r0, [pc, #40]	@ (8000eb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000e86:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8000e8a:	f022 fa71 	bl	8023370 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000e8e:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000e92:	4b08      	ldr	r3, [pc, #32]	@ (8000eb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000e94:	3a00      	subs	r2, #0
 8000e96:	bf18      	it	ne
 8000e98:	2201      	movne	r2, #1
 8000e9a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000e9c:	6803      	ldr	r3, [r0, #0]
    }
 8000e9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000ea2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ea6:	4718      	bx	r3
 8000ea8:	08024894 	.word	0x08024894
 8000eac:	080248cc 	.word	0x080248cc
 8000eb0:	0802491a 	.word	0x0802491a
 8000eb4:	2001403c 	.word	0x2001403c

08000eb8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000eb8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000eba:	4b09      	ldr	r3, [pc, #36]	@ (8000ee0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000ebc:	881b      	ldrh	r3, [r3, #0]
 8000ebe:	428b      	cmp	r3, r1
 8000ec0:	d803      	bhi.n	8000eca <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000ec2:	4b08      	ldr	r3, [pc, #32]	@ (8000ee4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000ec4:	881b      	ldrh	r3, [r3, #0]
 8000ec6:	4293      	cmp	r3, r2
 8000ec8:	d905      	bls.n	8000ed6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000eca:	4b07      	ldr	r3, [pc, #28]	@ (8000ee8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000ecc:	4a07      	ldr	r2, [pc, #28]	@ (8000eec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000ece:	4808      	ldr	r0, [pc, #32]	@ (8000ef0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000ed0:	21a3      	movs	r1, #163	@ 0xa3
 8000ed2:	f022 fa4d 	bl	8023370 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000ed6:	4b07      	ldr	r3, [pc, #28]	@ (8000ef4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000ed8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000eda:	4b07      	ldr	r3, [pc, #28]	@ (8000ef8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000edc:	801a      	strh	r2, [r3, #0]
    }
 8000ede:	bd08      	pop	{r3, pc}
 8000ee0:	20014032 	.word	0x20014032
 8000ee4:	20014034 	.word	0x20014034
 8000ee8:	0802495f 	.word	0x0802495f
 8000eec:	080249c2 	.word	0x080249c2
 8000ef0:	0802491a 	.word	0x0802491a
 8000ef4:	20014038 	.word	0x20014038
 8000ef8:	2001403a 	.word	0x2001403a

08000efc <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000efc:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000efe:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000f02:	b118      	cbz	r0, 8000f0c <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000f04:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000f06:	6803      	ldr	r3, [r0, #0]
 8000f08:	681b      	ldr	r3, [r3, #0]
 8000f0a:	4718      	bx	r3
    }
 8000f0c:	4770      	bx	lr
	...

08000f10 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000f10:	2101      	movs	r1, #1
{
 8000f12:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000f14:	2200      	movs	r2, #0
 8000f16:	4608      	mov	r0, r1
 8000f18:	f006 fef2 	bl	8007d00 <osSemaphoreNew>
 8000f1c:	4b0a      	ldr	r3, [pc, #40]	@ (8000f48 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000f1e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000f20:	b928      	cbnz	r0, 8000f2e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000f22:	4b0a      	ldr	r3, [pc, #40]	@ (8000f4c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000f24:	4a0a      	ldr	r2, [pc, #40]	@ (8000f50 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000f26:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000f28:	480a      	ldr	r0, [pc, #40]	@ (8000f54 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000f2a:	f022 fa21 	bl	8023370 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000f2e:	2200      	movs	r2, #0
 8000f30:	2104      	movs	r1, #4
 8000f32:	2001      	movs	r0, #1
 8000f34:	f006 ff96 	bl	8007e64 <osMessageQueueNew>
 8000f38:	4b07      	ldr	r3, [pc, #28]	@ (8000f58 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000f3a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000f3c:	b918      	cbnz	r0, 8000f46 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000f3e:	4b07      	ldr	r3, [pc, #28]	@ (8000f5c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000f40:	4a03      	ldr	r2, [pc, #12]	@ (8000f50 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000f42:	212c      	movs	r1, #44	@ 0x2c
 8000f44:	e7f0      	b.n	8000f28 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000f46:	bd08      	pop	{r3, pc}
 8000f48:	200004c0 	.word	0x200004c0
 8000f4c:	08024a05 	.word	0x08024a05
 8000f50:	08024a4e 	.word	0x08024a4e
 8000f54:	08024a7d 	.word	0x08024a7d
 8000f58:	200004bc 	.word	0x200004bc
 8000f5c:	08024ac3 	.word	0x08024ac3

08000f60 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000f60:	4b02      	ldr	r3, [pc, #8]	@ (8000f6c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000f62:	f04f 31ff 	mov.w	r1, #4294967295
 8000f66:	6818      	ldr	r0, [r3, #0]
 8000f68:	f006 bf14 	b.w	8007d94 <osSemaphoreAcquire>
 8000f6c:	200004c0 	.word	0x200004c0

08000f70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000f70:	4b01      	ldr	r3, [pc, #4]	@ (8000f78 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000f72:	6818      	ldr	r0, [r3, #0]
 8000f74:	f006 bf3a 	b.w	8007dec <osSemaphoreRelease>
 8000f78:	200004c0 	.word	0x200004c0

08000f7c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000f7c:	4b02      	ldr	r3, [pc, #8]	@ (8000f88 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000f7e:	2100      	movs	r1, #0
 8000f80:	6818      	ldr	r0, [r3, #0]
 8000f82:	f006 bf07 	b.w	8007d94 <osSemaphoreAcquire>
 8000f86:	bf00      	nop
 8000f88:	200004c0 	.word	0x200004c0

08000f8c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000f8c:	f7ff bff0 	b.w	8000f70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000f90 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000f90:	4803      	ldr	r0, [pc, #12]	@ (8000fa0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000f92:	4904      	ldr	r1, [pc, #16]	@ (8000fa4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000f94:	6800      	ldr	r0, [r0, #0]
 8000f96:	2300      	movs	r3, #0
 8000f98:	461a      	mov	r2, r3
 8000f9a:	f006 bf9e 	b.w	8007eda <osMessageQueuePut>
 8000f9e:	bf00      	nop
 8000fa0:	200004bc 	.word	0x200004bc
 8000fa4:	20000004 	.word	0x20000004

08000fa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000fa8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000faa:	4c08      	ldr	r4, [pc, #32]	@ (8000fcc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000fac:	2300      	movs	r3, #0
 8000fae:	461a      	mov	r2, r3
 8000fb0:	a901      	add	r1, sp, #4
 8000fb2:	6820      	ldr	r0, [r4, #0]
 8000fb4:	f006 ffc2 	bl	8007f3c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000fb8:	6820      	ldr	r0, [r4, #0]
 8000fba:	f04f 33ff 	mov.w	r3, #4294967295
 8000fbe:	2200      	movs	r2, #0
 8000fc0:	a901      	add	r1, sp, #4
 8000fc2:	f006 ffbb 	bl	8007f3c <osMessageQueueGet>
}
 8000fc6:	b002      	add	sp, #8
 8000fc8:	bd10      	pop	{r4, pc}
 8000fca:	bf00      	nop
 8000fcc:	200004bc 	.word	0x200004bc

08000fd0 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000fd0:	6803      	ldr	r3, [r0, #0]
 8000fd2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000fd4:	4718      	bx	r3

08000fd6 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000fd6:	2001      	movs	r0, #1
 8000fd8:	4770      	bx	lr

08000fda <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000fda:	6803      	ldr	r3, [r0, #0]
 8000fdc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000fde:	4718      	bx	r3

08000fe0 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000fe0:	e7fe      	b.n	8000fe0 <DMA2D_XferErrorCallback>

08000fe2 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000fe2:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000fe6:	4770      	bx	lr

08000fe8 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000fe8:	4b05      	ldr	r3, [pc, #20]	@ (8001000 <_ZN8STM32DMAD1Ev+0x18>)
 8000fea:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000fec:	4b05      	ldr	r3, [pc, #20]	@ (8001004 <_ZN8STM32DMAD1Ev+0x1c>)
 8000fee:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000ff2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000ff6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000ffa:	f3bf 8f6f 	isb	sy
}
 8000ffe:	4770      	bx	lr
 8001000:	080254f8 	.word	0x080254f8
 8001004:	e000e100 	.word	0xe000e100

08001008 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001008:	b510      	push	{r4, lr}
 800100a:	4604      	mov	r4, r0
}
 800100c:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001010:	f7ff ffea 	bl	8000fe8 <_ZN8STM32DMAD1Ev>
 8001014:	4620      	mov	r0, r4
 8001016:	f021 fa28 	bl	802246a <_ZdlPvj>
 800101a:	4620      	mov	r0, r4
 800101c:	bd10      	pop	{r4, pc}
	...

08001020 <_ZN8STM32DMA10initializeEv>:
{
 8001020:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001022:	2300      	movs	r3, #0
 8001024:	9301      	str	r3, [sp, #4]
 8001026:	4b0e      	ldr	r3, [pc, #56]	@ (8001060 <_ZN8STM32DMA10initializeEv+0x40>)
 8001028:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800102a:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800102e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001030:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001032:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8001036:	9201      	str	r2, [sp, #4]
 8001038:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800103a:	691a      	ldr	r2, [r3, #16]
 800103c:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001040:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001042:	691a      	ldr	r2, [r3, #16]
 8001044:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8001048:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800104a:	4b06      	ldr	r3, [pc, #24]	@ (8001064 <_ZN8STM32DMA10initializeEv+0x44>)
 800104c:	4a06      	ldr	r2, [pc, #24]	@ (8001068 <_ZN8STM32DMA10initializeEv+0x48>)
 800104e:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8001050:	4a06      	ldr	r2, [pc, #24]	@ (800106c <_ZN8STM32DMA10initializeEv+0x4c>)
 8001052:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001054:	4b06      	ldr	r3, [pc, #24]	@ (8001070 <_ZN8STM32DMA10initializeEv+0x50>)
 8001056:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800105a:	609a      	str	r2, [r3, #8]
}
 800105c:	b002      	add	sp, #8
 800105e:	4770      	bx	lr
 8001060:	40023800 	.word	0x40023800
 8001064:	200030f0 	.word	0x200030f0
 8001068:	080012c1 	.word	0x080012c1
 800106c:	08000fe1 	.word	0x08000fe1
 8001070:	e000e100 	.word	0xe000e100

08001074 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8001074:	b508      	push	{r3, lr}
    switch (format)
 8001076:	280a      	cmp	r0, #10
 8001078:	d809      	bhi.n	800108e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 800107a:	e8df f000 	tbb	[pc, r0]
 800107e:	1006      	.short	0x1006
 8001080:	0808080e 	.word	0x0808080e
 8001084:	10101008 	.word	0x10101008
 8001088:	10          	.byte	0x10
 8001089:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800108a:	2002      	movs	r0, #2
}
 800108c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 800108e:	4b05      	ldr	r3, [pc, #20]	@ (80010a4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001090:	4a05      	ldr	r2, [pc, #20]	@ (80010a8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001092:	4806      	ldr	r0, [pc, #24]	@ (80010ac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001094:	2190      	movs	r1, #144	@ 0x90
 8001096:	f022 f96b 	bl	8023370 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800109a:	2000      	movs	r0, #0
 800109c:	e7f6      	b.n	800108c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800109e:	2001      	movs	r0, #1
    return dma2dColorMode;
 80010a0:	e7f4      	b.n	800108c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80010a2:	bf00      	nop
 80010a4:	08024b05 	.word	0x08024b05
 80010a8:	08024b20 	.word	0x08024b20
 80010ac:	08024b6b 	.word	0x08024b6b

080010b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80010b0:	b538      	push	{r3, r4, r5, lr}
 80010b2:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80010b4:	7f88      	ldrb	r0, [r1, #30]
 80010b6:	f7ff ffdd 	bl	8001074 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80010ba:	8aa5      	ldrh	r5, [r4, #20]
 80010bc:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80010be:	4b16      	ldr	r3, [pc, #88]	@ (8001118 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80010c0:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80010c2:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80010c4:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 80010c8:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80010ca:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80010cc:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80010ce:	1b52      	subs	r2, r2, r5
 80010d0:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80010d2:	6825      	ldr	r5, [r4, #0]
 80010d4:	2d08      	cmp	r5, #8
 80010d6:	d10e      	bne.n	80010f6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80010d8:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80010da:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80010dc:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80010de:	7f20      	ldrb	r0, [r4, #28]
 80010e0:	4a0e      	ldr	r2, [pc, #56]	@ (800111c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 80010e2:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80010e6:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 80010e8:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80010ea:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 80010ec:	4a0c      	ldr	r2, [pc, #48]	@ (8001120 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80010ee:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80010f0:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 80010f2:	601a      	str	r2, [r3, #0]
    }
}
 80010f4:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 80010f6:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80010f8:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 80010fa:	611a      	str	r2, [r3, #16]
 80010fc:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 80010fe:	0a0a      	lsrs	r2, r1, #8
 8001100:	0948      	lsrs	r0, r1, #5
 8001102:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001106:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800110a:	4302      	orrs	r2, r0
 800110c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001110:	430a      	orrs	r2, r1
 8001112:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001114:	4a03      	ldr	r2, [pc, #12]	@ (8001124 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001116:	e7ec      	b.n	80010f2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001118:	4002b000 	.word	0x4002b000
 800111c:	00010009 	.word	0x00010009
 8001120:	00022301 	.word	0x00022301
 8001124:	00032301 	.word	0x00032301

08001128 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001128:	b508      	push	{r3, lr}
    switch (format)
 800112a:	280b      	cmp	r0, #11
 800112c:	d80b      	bhi.n	8001146 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 800112e:	e8df f000 	tbb	[pc, r0]
 8001132:	1206      	.short	0x1206
 8001134:	0a0a0a10 	.word	0x0a0a0a10
 8001138:	0808080a 	.word	0x0808080a
 800113c:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800113e:	2002      	movs	r0, #2
}
 8001140:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001142:	2005      	movs	r0, #5
        break;
 8001144:	e7fc      	b.n	8001140 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001146:	4b05      	ldr	r3, [pc, #20]	@ (800115c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001148:	4a05      	ldr	r2, [pc, #20]	@ (8001160 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 800114a:	4806      	ldr	r0, [pc, #24]	@ (8001164 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 800114c:	216f      	movs	r1, #111	@ 0x6f
 800114e:	f022 f90f 	bl	8023370 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001152:	2000      	movs	r0, #0
 8001154:	e7f4      	b.n	8001140 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001156:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001158:	e7f2      	b.n	8001140 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 800115a:	bf00      	nop
 800115c:	08024b05 	.word	0x08024b05
 8001160:	08024baf 	.word	0x08024baf
 8001164:	08024b6b 	.word	0x08024b6b

08001168 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800116c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001170:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001172:	4640      	mov	r0, r8
 8001174:	f7ff ffd8 	bl	8001128 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001178:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800117a:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800117c:	4638      	mov	r0, r7
 800117e:	f7ff ffd3 	bl	8001128 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001182:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001184:	4638      	mov	r0, r7
 8001186:	f7ff ff75 	bl	8001074 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800118a:	8aa1      	ldrh	r1, [r4, #20]
 800118c:	8b62      	ldrh	r2, [r4, #26]
 800118e:	4b44      	ldr	r3, [pc, #272]	@ (80012a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001190:	1a52      	subs	r2, r2, r1
 8001192:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001194:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001196:	8b22      	ldrh	r2, [r4, #24]
 8001198:	1a52      	subs	r2, r2, r1
 800119a:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800119c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800119e:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80011a0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80011a4:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80011a6:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80011a8:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80011aa:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80011ac:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 80011ae:	6820      	ldr	r0, [r4, #0]
 80011b0:	2880      	cmp	r0, #128	@ 0x80
 80011b2:	d028      	beq.n	8001206 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 80011b4:	7f22      	ldrb	r2, [r4, #28]
 80011b6:	d80f      	bhi.n	80011d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 80011b8:	2820      	cmp	r0, #32
 80011ba:	d067      	beq.n	800128c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 80011bc:	2840      	cmp	r0, #64	@ 0x40
 80011be:	d065      	beq.n	800128c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 80011c0:	2804      	cmp	r0, #4
 80011c2:	d01a      	beq.n	80011fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011c4:	4b36      	ldr	r3, [pc, #216]	@ (80012a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80011c6:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 80011ca:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 80011ce:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011d0:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 80011d2:	d061      	beq.n	8001298 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80011d4:	4a33      	ldr	r2, [pc, #204]	@ (80012a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 80011d6:	e044      	b.n	8001262 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 80011d8:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 80011dc:	d004      	beq.n	80011e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 80011de:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 80011e2:	d1ef      	bne.n	80011c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011e4:	4830      	ldr	r0, [pc, #192]	@ (80012a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 80011e6:	e000      	b.n	80011ea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011e8:	4830      	ldr	r0, [pc, #192]	@ (80012ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011ea:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 80011ee:	61da      	str	r2, [r3, #28]
 80011f0:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80011f2:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80011f4:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80011f6:	6159      	str	r1, [r3, #20]
 80011f8:	e032      	b.n	8001260 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011fa:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 80011fe:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001202:	61da      	str	r2, [r3, #28]
 8001204:	e7f6      	b.n	80011f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001206:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001208:	1d02      	adds	r2, r0, #4
 800120a:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800120c:	7f22      	ldrb	r2, [r4, #28]
 800120e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001212:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001216:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001218:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800121a:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800121c:	7801      	ldrb	r1, [r0, #0]
 800121e:	b141      	cbz	r1, 8001232 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001220:	2901      	cmp	r1, #1
 8001222:	d021      	beq.n	8001268 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001224:	4b22      	ldr	r3, [pc, #136]	@ (80012b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001226:	4a23      	ldr	r2, [pc, #140]	@ (80012b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001228:	4823      	ldr	r0, [pc, #140]	@ (80012b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 800122a:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 800122e:	f022 f89f 	bl	8023370 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001232:	69da      	ldr	r2, [r3, #28]
 8001234:	8841      	ldrh	r1, [r0, #2]
 8001236:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 800123a:	3901      	subs	r1, #1
 800123c:	f022 0210 	bic.w	r2, r2, #16
 8001240:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001244:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8001246:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001248:	4b15      	ldr	r3, [pc, #84]	@ (80012a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800124a:	69da      	ldr	r2, [r3, #28]
 800124c:	f042 0220 	orr.w	r2, r2, #32
 8001250:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001252:	69da      	ldr	r2, [r3, #28]
 8001254:	0692      	lsls	r2, r2, #26
 8001256:	d4fc      	bmi.n	8001252 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001258:	2210      	movs	r2, #16
 800125a:	609a      	str	r2, [r3, #8]
            if (blend)
 800125c:	2900      	cmp	r1, #0
 800125e:	d0b9      	beq.n	80011d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001260:	4a16      	ldr	r2, [pc, #88]	@ (80012bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001262:	601a      	str	r2, [r3, #0]
}
 8001264:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001268:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800126c:	69da      	ldr	r2, [r3, #28]
 800126e:	8840      	ldrh	r0, [r0, #2]
 8001270:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001274:	f100 30ff 	add.w	r0, r0, #4294967295
 8001278:	f022 0210 	bic.w	r2, r2, #16
 800127c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001280:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8001284:	bf18      	it	ne
 8001286:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001288:	61da      	str	r2, [r3, #28]
                break;
 800128a:	e7dd      	b.n	8001248 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800128c:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001290:	4b03      	ldr	r3, [pc, #12]	@ (80012a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001292:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001296:	e7b4      	b.n	8001202 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001298:	f242 3201 	movw	r2, #8961	@ 0x2301
 800129c:	e7e1      	b.n	8001262 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800129e:	bf00      	nop
 80012a0:	4002b000 	.word	0x4002b000
 80012a4:	00012301 	.word	0x00012301
 80012a8:	00020009 	.word	0x00020009
 80012ac:	0002000a 	.word	0x0002000a
 80012b0:	08024bf9 	.word	0x08024bf9
 80012b4:	08024c13 	.word	0x08024c13
 80012b8:	08024b6b 	.word	0x08024b6b
 80012bc:	00022301 	.word	0x00022301

080012c0 <DMA2D_XferCpltCallback>:
        return instance;
 80012c0:	4b02      	ldr	r3, [pc, #8]	@ (80012cc <DMA2D_XferCpltCallback+0xc>)
 80012c2:	681b      	ldr	r3, [r3, #0]
 80012c4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80012c6:	6803      	ldr	r3, [r0, #0]
 80012c8:	695b      	ldr	r3, [r3, #20]
 80012ca:	4718      	bx	r3
 80012cc:	20014040 	.word	0x20014040

080012d0 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80012d0:	b570      	push	{r4, r5, r6, lr}
 80012d2:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80012d4:	4625      	mov	r5, r4
 80012d6:	4b0a      	ldr	r3, [pc, #40]	@ (8001300 <_ZN8STM32DMAC1Ev+0x30>)
 80012d8:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80012da:	2600      	movs	r6, #0
 80012dc:	6060      	str	r0, [r4, #4]
 80012de:	7226      	strb	r6, [r4, #8]
 80012e0:	7266      	strb	r6, [r4, #9]
 80012e2:	f845 3b20 	str.w	r3, [r5], #32
 80012e6:	2260      	movs	r2, #96	@ 0x60
 80012e8:	4629      	mov	r1, r5
 80012ea:	f00a fd67 	bl	800bdbc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80012ee:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 80012f2:	60ee      	str	r6, [r5, #12]
 80012f4:	3524      	adds	r5, #36	@ 0x24
 80012f6:	429d      	cmp	r5, r3
 80012f8:	d1fb      	bne.n	80012f2 <_ZN8STM32DMAC1Ev+0x22>
}
 80012fa:	4620      	mov	r0, r4
 80012fc:	bd70      	pop	{r4, r5, r6, pc}
 80012fe:	bf00      	nop
 8001300:	080254f8 	.word	0x080254f8

08001304 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001304:	4b03      	ldr	r3, [pc, #12]	@ (8001314 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8001306:	681a      	ldr	r2, [r3, #0]
 8001308:	07d2      	lsls	r2, r2, #31
 800130a:	d4fc      	bmi.n	8001306 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800130c:	2223      	movs	r2, #35	@ 0x23
 800130e:	609a      	str	r2, [r3, #8]
}
 8001310:	4770      	bx	lr
 8001312:	bf00      	nop
 8001314:	4002b000 	.word	0x4002b000

08001318 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8001318:	4770      	bx	lr
	...

0800131c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 800131c:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800131e:	4c0f      	ldr	r4, [pc, #60]	@ (800135c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8001320:	6825      	ldr	r5, [r4, #0]
 8001322:	07ed      	lsls	r5, r5, #31
 8001324:	d4fc      	bmi.n	8001320 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001326:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001328:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800132a:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800132c:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001330:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8001332:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001334:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001336:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001338:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 800133a:	d00a      	beq.n	8001352 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800133c:	4908      	ldr	r1, [pc, #32]	@ (8001360 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800133e:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001340:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8001344:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001346:	4b07      	ldr	r3, [pc, #28]	@ (8001364 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8001348:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 800134a:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 800134c:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 800134e:	6023      	str	r3, [r4, #0]
    }
}
 8001350:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001352:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8001354:	9b03      	ldr	r3, [sp, #12]
 8001356:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001358:	4b03      	ldr	r3, [pc, #12]	@ (8001368 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 800135a:	e7f8      	b.n	800134e <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 800135c:	4002b000 	.word	0x4002b000
 8001360:	00010009 	.word	0x00010009
 8001364:	00020001 	.word	0x00020001
 8001368:	00030001 	.word	0x00030001

0800136c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800136c:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800136e:	4c0e      	ldr	r4, [pc, #56]	@ (80013a8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8001370:	6825      	ldr	r5, [r4, #0]
 8001372:	07ed      	lsls	r5, r5, #31
 8001374:	d4fc      	bmi.n	8001370 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001376:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001378:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800137a:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800137c:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001380:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8001382:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001384:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001386:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001388:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800138a:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 800138c:	d008      	beq.n	80013a0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800138e:	061b      	lsls	r3, r3, #24
 8001390:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8001394:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001396:	4b05      	ldr	r3, [pc, #20]	@ (80013ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001398:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800139a:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 800139c:	6023      	str	r3, [r4, #0]
    }
}
 800139e:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80013a0:	4b03      	ldr	r3, [pc, #12]	@ (80013b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 80013a2:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80013a4:	2301      	movs	r3, #1
 80013a6:	e7f9      	b.n	800139c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 80013a8:	4002b000 	.word	0x4002b000
 80013ac:	00020001 	.word	0x00020001
 80013b0:	ff020002 	.word	0xff020002

080013b4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 80013b4:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80013b6:	4c0b      	ldr	r4, [pc, #44]	@ (80013e4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 80013b8:	6825      	ldr	r5, [r4, #0]
 80013ba:	07ed      	lsls	r5, r5, #31
 80013bc:	d4fc      	bmi.n	80013b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80013be:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80013c0:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80013c2:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80013c4:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80013c6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80013ca:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80013cc:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80013d0:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80013d2:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80013d4:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80013d6:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80013d8:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80013da:	4b03      	ldr	r3, [pc, #12]	@ (80013e8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80013dc:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80013de:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80013e0:	6023      	str	r3, [r4, #0]
}
 80013e2:	bd30      	pop	{r4, r5, pc}
 80013e4:	4002b000 	.word	0x4002b000
 80013e8:	00020001 	.word	0x00020001

080013ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80013ec:	2001      	movs	r0, #1
 80013ee:	4770      	bx	lr

080013f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80013f0:	200c      	movs	r0, #12
 80013f2:	4770      	bx	lr

080013f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80013f4:	230c      	movs	r3, #12
 80013f6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80013fa:	3008      	adds	r0, #8
 80013fc:	4770      	bx	lr

080013fe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80013fe:	230c      	movs	r3, #12
 8001400:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001404:	3008      	adds	r0, #8
 8001406:	4770      	bx	lr

08001408 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001408:	2001      	movs	r0, #1
 800140a:	4770      	bx	lr

0800140c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800140c:	f44f 6072 	mov.w	r0, #3872	@ 0xf20
 8001410:	4770      	bx	lr

08001412 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001412:	f44f 6372 	mov.w	r3, #3872	@ 0xf20
 8001416:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800141a:	3008      	adds	r0, #8
 800141c:	4770      	bx	lr

0800141e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800141e:	f44f 6372 	mov.w	r3, #3872	@ 0xf20
 8001422:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001426:	3008      	adds	r0, #8
 8001428:	4770      	bx	lr

0800142a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800142a:	2001      	movs	r0, #1
 800142c:	4770      	bx	lr

0800142e <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800142e:	2010      	movs	r0, #16
 8001430:	4770      	bx	lr

08001432 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001432:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001436:	3008      	adds	r0, #8
 8001438:	4770      	bx	lr

0800143a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800143a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800143e:	3008      	adds	r0, #8
 8001440:	4770      	bx	lr

08001442 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8001442:	4608      	mov	r0, r1
 8001444:	f001 bdc2 	b.w	8002fcc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001448 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001448:	b510      	push	{r4, lr}
 800144a:	4b03      	ldr	r3, [pc, #12]	@ (8001458 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800144c:	6003      	str	r3, [r0, #0]
 800144e:	4604      	mov	r4, r0
 8001450:	f009 fad2 	bl	800a9f8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001454:	4620      	mov	r0, r4
 8001456:	bd10      	pop	{r4, pc}
 8001458:	080255b0 	.word	0x080255b0

0800145c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800145c:	b510      	push	{r4, lr}
 800145e:	4604      	mov	r4, r0
 8001460:	f7ff fff2 	bl	8001448 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001464:	4620      	mov	r0, r4
 8001466:	2114      	movs	r1, #20
 8001468:	f020 ffff 	bl	802246a <_ZdlPvj>
 800146c:	4620      	mov	r0, r4
 800146e:	bd10      	pop	{r4, pc}

08001470 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001470:	b510      	push	{r4, lr}
 8001472:	4b03      	ldr	r3, [pc, #12]	@ (8001480 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001474:	6003      	str	r3, [r0, #0]
 8001476:	4604      	mov	r4, r0
 8001478:	f009 fabe 	bl	800a9f8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800147c:	4620      	mov	r0, r4
 800147e:	bd10      	pop	{r4, pc}
 8001480:	0802557c 	.word	0x0802557c

08001484 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001484:	b510      	push	{r4, lr}
 8001486:	4604      	mov	r4, r0
 8001488:	f7ff fff2 	bl	8001470 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800148c:	4620      	mov	r0, r4
 800148e:	f640 7128 	movw	r1, #3880	@ 0xf28
 8001492:	f020 ffea 	bl	802246a <_ZdlPvj>
 8001496:	4620      	mov	r0, r4
 8001498:	bd10      	pop	{r4, pc}
	...

0800149c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800149c:	b510      	push	{r4, lr}
 800149e:	4b03      	ldr	r3, [pc, #12]	@ (80014ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80014a0:	6003      	str	r3, [r0, #0]
 80014a2:	4604      	mov	r4, r0
 80014a4:	f009 faa8 	bl	800a9f8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80014a8:	4620      	mov	r0, r4
 80014aa:	bd10      	pop	{r4, pc}
 80014ac:	08025548 	.word	0x08025548

080014b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80014b0:	b510      	push	{r4, lr}
 80014b2:	4604      	mov	r4, r0
 80014b4:	f7ff fff2 	bl	800149c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014b8:	4620      	mov	r0, r4
 80014ba:	2118      	movs	r1, #24
 80014bc:	f020 ffd5 	bl	802246a <_ZdlPvj>
 80014c0:	4620      	mov	r0, r4
 80014c2:	bd10      	pop	{r4, pc}

080014c4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80014c4:	b510      	push	{r4, lr}
 80014c6:	4b08      	ldr	r3, [pc, #32]	@ (80014e8 <_ZN12FrontendHeapD1Ev+0x24>)
 80014c8:	6003      	str	r3, [r0, #0]
 80014ca:	4604      	mov	r4, r0
 80014cc:	f600 7054 	addw	r0, r0, #3924	@ 0xf54
 80014d0:	f7ff ffba 	bl	8001448 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014d4:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 80014d8:	f7ff ffca 	bl	8001470 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014dc:	f104 0014 	add.w	r0, r4, #20
 80014e0:	f7ff ffdc 	bl	800149c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014e4:	4620      	mov	r0, r4
 80014e6:	bd10      	pop	{r4, pc}
 80014e8:	080255e4 	.word	0x080255e4

080014ec <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80014ec:	b508      	push	{r3, lr}
 80014ee:	4802      	ldr	r0, [pc, #8]	@ (80014f8 <__tcf_0+0xc>)
 80014f0:	f7ff ffe8 	bl	80014c4 <_ZN12FrontendHeapD1Ev>
 80014f4:	bd08      	pop	{r3, pc}
 80014f6:	bf00      	nop
 80014f8:	2000139c 	.word	0x2000139c

080014fc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80014fc:	b510      	push	{r4, lr}
 80014fe:	4604      	mov	r4, r0
 8001500:	f7ff ffe0 	bl	80014c4 <_ZN12FrontendHeapD1Ev>
 8001504:	4620      	mov	r0, r4
 8001506:	f241 01c8 	movw	r1, #4296	@ 0x10c8
 800150a:	f020 ffae 	bl	802246a <_ZdlPvj>
 800150e:	4620      	mov	r0, r4
 8001510:	bd10      	pop	{r4, pc}
	...

08001514 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001514:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001518:	f001 fbda 	bl	8002cd0 <_ZN14BitmapDatabase11getInstanceEv>
 800151c:	4605      	mov	r5, r0
 800151e:	f001 fbdb 	bl	8002cd8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001522:	2400      	movs	r4, #0
 8001524:	4601      	mov	r1, r0
 8001526:	4623      	mov	r3, r4
 8001528:	4628      	mov	r0, r5
 800152a:	4622      	mov	r2, r4
 800152c:	9400      	str	r4, [sp, #0]
 800152e:	f011 ff09 	bl	8013344 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001532:	4b27      	ldr	r3, [pc, #156]	@ (80015d0 <touchgfx_init+0xbc>)
 8001534:	4a27      	ldr	r2, [pc, #156]	@ (80015d4 <touchgfx_init+0xc0>)
 8001536:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001538:	4620      	mov	r0, r4
 800153a:	f001 ff15 	bl	8003368 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 800153e:	4d26      	ldr	r5, [pc, #152]	@ (80015d8 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001540:	4b26      	ldr	r3, [pc, #152]	@ (80015dc <touchgfx_init+0xc8>)
 8001542:	4a27      	ldr	r2, [pc, #156]	@ (80015e0 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8001544:	4827      	ldr	r0, [pc, #156]	@ (80015e4 <touchgfx_init+0xd0>)
 8001546:	609a      	str	r2, [r3, #8]
 8001548:	f011 fe64 	bl	8013214 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800154c:	682b      	ldr	r3, [r5, #0]
 800154e:	f3bf 8f5b 	dmb	ish
 8001552:	07db      	lsls	r3, r3, #31
 8001554:	d435      	bmi.n	80015c2 <touchgfx_init+0xae>
 8001556:	4628      	mov	r0, r5
 8001558:	f020 ff89 	bl	802246e <__cxa_guard_acquire>
 800155c:	b388      	cbz	r0, 80015c2 <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800155e:	4c22      	ldr	r4, [pc, #136]	@ (80015e8 <touchgfx_init+0xd4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001560:	4b22      	ldr	r3, [pc, #136]	@ (80015ec <touchgfx_init+0xd8>)
 8001562:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001564:	f604 766c 	addw	r6, r4, #3948	@ 0xf6c
        : presenterStorage(pres),
 8001568:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800156c:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 8001570:	f604 7754 	addw	r7, r4, #3924	@ 0xf54
        : presenterStorage(pres),
 8001574:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001576:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 800157a:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 800157c:	6126      	str	r6, [r4, #16]
 800157e:	f009 fa3d 	bl	800a9fc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001582:	4b1b      	ldr	r3, [pc, #108]	@ (80015f0 <touchgfx_init+0xdc>)
 8001584:	6163      	str	r3, [r4, #20]
 8001586:	4640      	mov	r0, r8
 8001588:	f009 fa38 	bl	800a9fc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800158c:	4b19      	ldr	r3, [pc, #100]	@ (80015f4 <touchgfx_init+0xe0>)
 800158e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001590:	4638      	mov	r0, r7
 8001592:	f009 fa33 	bl	800a9fc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001596:	4b18      	ldr	r3, [pc, #96]	@ (80015f8 <touchgfx_init+0xe4>)
 8001598:	f8c4 3f54 	str.w	r3, [r4, #3924]	@ 0xf54
 800159c:	f604 7068 	addw	r0, r4, #3944	@ 0xf68
 80015a0:	f001 ff58 	bl	8003454 <_ZN5ModelC1Ev>
 80015a4:	4622      	mov	r2, r4
 80015a6:	f604 7168 	addw	r1, r4, #3944	@ 0xf68
 80015aa:	4630      	mov	r0, r6
 80015ac:	f001 ff48 	bl	8003440 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80015b0:	4630      	mov	r0, r6
 80015b2:	f001 fd0b 	bl	8002fcc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 80015b6:	4811      	ldr	r0, [pc, #68]	@ (80015fc <touchgfx_init+0xe8>)
 80015b8:	f021 fef8 	bl	80233ac <atexit>
 80015bc:	4628      	mov	r0, r5
 80015be:	f020 ff62 	bl	8022486 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80015c2:	480f      	ldr	r0, [pc, #60]	@ (8001600 <touchgfx_init+0xec>)
}
 80015c4:	b002      	add	sp, #8
 80015c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80015ca:	f7ff bbe7 	b.w	8000d9c <_ZN11TouchGFXHAL10initializeEv>
 80015ce:	bf00      	nop
 80015d0:	200140a4 	.word	0x200140a4
 80015d4:	20000548 	.word	0x20000548
 80015d8:	20001398 	.word	0x20001398
 80015dc:	20000568 	.word	0x20000568
 80015e0:	2000054c 	.word	0x2000054c
 80015e4:	20000008 	.word	0x20000008
 80015e8:	2000139c 	.word	0x2000139c
 80015ec:	080255e4 	.word	0x080255e4
 80015f0:	08025548 	.word	0x08025548
 80015f4:	0802557c 	.word	0x0802557c
 80015f8:	080255b0 	.word	0x080255b0
 80015fc:	080014ed 	.word	0x080014ed
 8001600:	200004c4 	.word	0x200004c4

08001604 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001604:	4770      	bx	lr
	...

08001608 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001608:	4801      	ldr	r0, [pc, #4]	@ (8001610 <touchgfx_taskEntry+0x8>)
 800160a:	f7ff bbd5 	b.w	8000db8 <_ZN11TouchGFXHAL9taskEntryEv>
 800160e:	bf00      	nop
 8001610:	200004c4 	.word	0x200004c4

08001614 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001614:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001616:	4e26      	ldr	r6, [pc, #152]	@ (80016b0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001618:	4c26      	ldr	r4, [pc, #152]	@ (80016b4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 800161a:	4d27      	ldr	r5, [pc, #156]	@ (80016b8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 800161c:	4b27      	ldr	r3, [pc, #156]	@ (80016bc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800161e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001620:	4630      	mov	r0, r6
 8001622:	f7ff fe55 	bl	80012d0 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001626:	4628      	mov	r0, r5
 8001628:	f016 ff92 	bl	8018550 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 800162c:	4824      	ldr	r0, [pc, #144]	@ (80016c0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 800162e:	f00f feef 	bl	8011410 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8001632:	4b24      	ldr	r3, [pc, #144]	@ (80016c4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8001634:	4824      	ldr	r0, [pc, #144]	@ (80016c8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 8001636:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001638:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800163a:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800163e:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001642:	4922      	ldr	r1, [pc, #136]	@ (80016cc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001644:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001646:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 800164a:	4921      	ldr	r1, [pc, #132]	@ (80016d0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 800164c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8001650:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 8001654:	491f      	ldr	r1, [pc, #124]	@ (80016d4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001656:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 800165a:	491f      	ldr	r1, [pc, #124]	@ (80016d8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800165c:	481f      	ldr	r0, [pc, #124]	@ (80016dc <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 800165e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001660:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 8001662:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001666:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800166a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800166e:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001672:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001676:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 800167a:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 800167e:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 8001682:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8001684:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8001688:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 800168a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800168e:	8001      	strh	r1, [r0, #0]
 8001690:	4813      	ldr	r0, [pc, #76]	@ (80016e0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 8001692:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001694:	4813      	ldr	r0, [pc, #76]	@ (80016e4 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8001696:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800169a:	8001      	strh	r1, [r0, #0]
 800169c:	4812      	ldr	r0, [pc, #72]	@ (80016e8 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 800169e:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80016a0:	4912      	ldr	r1, [pc, #72]	@ (80016ec <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80016a2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80016a4:	2201      	movs	r2, #1
 80016a6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80016aa:	4a11      	ldr	r2, [pc, #68]	@ (80016f0 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80016ac:	601a      	str	r2, [r3, #0]
}
 80016ae:	bd70      	pop	{r4, r5, r6, pc}
 80016b0:	200005f4 	.word	0x200005f4
 80016b4:	20001394 	.word	0x20001394
 80016b8:	20000568 	.word	0x20000568
 80016bc:	08024884 	.word	0x08024884
 80016c0:	2000054c 	.word	0x2000054c
 80016c4:	200004c4 	.word	0x200004c4
 80016c8:	01010000 	.word	0x01010000
 80016cc:	01000001 	.word	0x01000001
 80016d0:	00500400 	.word	0x00500400
 80016d4:	0014001a 	.word	0x0014001a
 80016d8:	20014040 	.word	0x20014040
 80016dc:	20014032 	.word	0x20014032
 80016e0:	20014038 	.word	0x20014038
 80016e4:	20014034 	.word	0x20014034
 80016e8:	2001403a 	.word	0x2001403a
 80016ec:	20014036 	.word	0x20014036
 80016f0:	0802540c 	.word	0x0802540c

080016f4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 80016f4:	4801      	ldr	r0, [pc, #4]	@ (80016fc <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80016f6:	f7ff bc77 	b.w	8000fe8 <_ZN8STM32DMAD1Ev>
 80016fa:	bf00      	nop
 80016fc:	200005f4 	.word	0x200005f4

08001700 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001700:	2000      	movs	r0, #0
 8001702:	4770      	bx	lr

08001704 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001704:	8081      	strh	r1, [r0, #4]
    }
 8001706:	4770      	bx	lr

08001708 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001708:	80c1      	strh	r1, [r0, #6]
    }
 800170a:	4770      	bx	lr

0800170c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800170c:	8101      	strh	r1, [r0, #8]
    }
 800170e:	4770      	bx	lr

08001710 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001710:	8141      	strh	r1, [r0, #10]
    }
 8001712:	4770      	bx	lr

08001714 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001714:	4770      	bx	lr

08001716 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001716:	4770      	bx	lr

08001718 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001718:	4770      	bx	lr

0800171a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800171a:	4770      	bx	lr

0800171c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800171c:	4770      	bx	lr

0800171e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800171e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001720:	88c4      	ldrh	r4, [r0, #6]
 8001722:	6803      	ldr	r3, [r0, #0]
 8001724:	1b12      	subs	r2, r2, r4
 8001726:	8884      	ldrh	r4, [r0, #4]
 8001728:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800172a:	1b09      	subs	r1, r1, r4
 800172c:	b212      	sxth	r2, r2
    }
 800172e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001732:	b209      	sxth	r1, r1
 8001734:	4718      	bx	r3

08001736 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001736:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800173a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800173c:	f04f 33ff 	mov.w	r3, #4294967295
 8001740:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001742:	6813      	ldr	r3, [r2, #0]
 8001744:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001746:	6010      	str	r0, [r2, #0]
    }
 8001748:	4770      	bx	lr

0800174a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800174a:	2000      	movs	r0, #0
 800174c:	4770      	bx	lr

0800174e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800174e:	888b      	ldrh	r3, [r1, #4]
 8001750:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001752:	2001      	movs	r0, #1
 8001754:	4770      	bx	lr

08001756 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001756:	4770      	bx	lr

08001758 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001758:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 800175c:	4770      	bx	lr

0800175e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800175e:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8001762:	4770      	bx	lr

08001764 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001764:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001766:	2200      	movs	r2, #0
        return rect.width;
 8001768:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800176c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001770:	8002      	strh	r2, [r0, #0]
 8001772:	8042      	strh	r2, [r0, #2]
 8001774:	8084      	strh	r4, [r0, #4]
 8001776:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001778:	bd10      	pop	{r4, pc}

0800177a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800177a:	2200      	movs	r2, #0
 800177c:	8002      	strh	r2, [r0, #0]
 800177e:	8042      	strh	r2, [r0, #2]
 8001780:	8082      	strh	r2, [r0, #4]
 8001782:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001784:	4770      	bx	lr

08001786 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8001786:	7701      	strb	r1, [r0, #28]
    }
 8001788:	4770      	bx	lr

0800178a <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 800178a:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 800178e:	4770      	bx	lr

08001790 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 8001790:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8001794:	4770      	bx	lr

08001796 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8001796:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 800179a:	4770      	bx	lr

0800179c <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 800179c:	2001      	movs	r0, #1
 800179e:	4770      	bx	lr

080017a0 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80017a0:	3098      	adds	r0, #152	@ 0x98
 80017a2:	4770      	bx	lr

080017a4 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80017a4:	308c      	adds	r0, #140	@ 0x8c
 80017a6:	4770      	bx	lr

080017a8 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80017a8:	3084      	adds	r0, #132	@ 0x84
 80017aa:	4770      	bx	lr

080017ac <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80017ac:	4770      	bx	lr

080017ae <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80017ae:	4770      	bx	lr

080017b0 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80017b0:	4770      	bx	lr
	...

080017b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80017b4:	4b03      	ldr	r3, [pc, #12]	@ (80017c4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80017b6:	2290      	movs	r2, #144	@ 0x90
 80017b8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80017bc:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80017c0:	4770      	bx	lr
 80017c2:	bf00      	nop
 80017c4:	e000e100 	.word	0xe000e100

080017c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80017c8:	4a09      	ldr	r2, [pc, #36]	@ (80017f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80017ca:	490a      	ldr	r1, [pc, #40]	@ (80017f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80017cc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 80017ce:	480a      	ldr	r0, [pc, #40]	@ (80017f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80017d0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80017d4:	3b01      	subs	r3, #1
 80017d6:	b29b      	uxth	r3, r3
 80017d8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 80017da:	6911      	ldr	r1, [r2, #16]
 80017dc:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80017e0:	3901      	subs	r1, #1
 80017e2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80017e4:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80017e6:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 80017e8:	f043 0301 	orr.w	r3, r3, #1
 80017ec:	6353      	str	r3, [r2, #52]	@ 0x34
}
 80017ee:	4770      	bx	lr
 80017f0:	40016800 	.word	0x40016800
 80017f4:	20002466 	.word	0x20002466
 80017f8:	20002464 	.word	0x20002464

080017fc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80017fc:	4b01      	ldr	r3, [pc, #4]	@ (8001804 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80017fe:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001802:	4770      	bx	lr
 8001804:	40016800 	.word	0x40016800

08001808 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001808:	4b02      	ldr	r3, [pc, #8]	@ (8001814 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800180a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800180c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001810:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001812:	4770      	bx	lr
 8001814:	40016800 	.word	0x40016800

08001818 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001818:	b510      	push	{r4, lr}
 800181a:	212c      	movs	r1, #44	@ 0x2c
 800181c:	4604      	mov	r4, r0
 800181e:	f020 fe24 	bl	802246a <_ZdlPvj>
 8001822:	4620      	mov	r0, r4
 8001824:	bd10      	pop	{r4, pc}

08001826 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001826:	b510      	push	{r4, lr}
 8001828:	21bc      	movs	r1, #188	@ 0xbc
 800182a:	4604      	mov	r4, r0
 800182c:	f020 fe1d 	bl	802246a <_ZdlPvj>
 8001830:	4620      	mov	r0, r4
 8001832:	bd10      	pop	{r4, pc}

08001834 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001834:	b570      	push	{r4, r5, r6, lr}
 8001836:	4604      	mov	r4, r0
    HAL::initialize();
 8001838:	f009 fbdf 	bl	800affa <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800183c:	6823      	ldr	r3, [r4, #0]
 800183e:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001840:	f00e fb7e 	bl	800ff40 <_ZN8touchgfx11Application11getInstanceEv>
 8001844:	4601      	mov	r1, r0
 8001846:	4620      	mov	r0, r4
 8001848:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800184a:	6823      	ldr	r3, [r4, #0]
 800184c:	4a05      	ldr	r2, [pc, #20]	@ (8001864 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800184e:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 8001852:	4620      	mov	r0, r4
 8001854:	46ac      	mov	ip, r5
 8001856:	2300      	movs	r3, #0
}
 8001858:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800185c:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001860:	4760      	bx	ip
 8001862:	bf00      	nop
 8001864:	d004b000 	.word	0xd004b000

08001868 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001868:	f009 bbae 	b.w	800afc8 <_ZN8touchgfx3HAL10beginFrameEv>

0800186c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800186c:	f009 bbb8 	b.w	800afe0 <_ZN8touchgfx3HAL8endFrameEv>

08001870 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001870:	f009 bb74 	b.w	800af5c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001874 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001874:	f009 bce3 	b.w	800b23e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001878 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001878:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800187c:	b112      	cbz	r2, 8001884 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800187e:	6803      	ldr	r3, [r0, #0]
 8001880:	695b      	ldr	r3, [r3, #20]
 8001882:	4718      	bx	r3
    }
 8001884:	4770      	bx	lr

08001886 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001886:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800188a:	b11a      	cbz	r2, 8001894 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800188c:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8001890:	b102      	cbz	r2, 8001894 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001892:	6018      	str	r0, [r3, #0]
        }
    }
 8001894:	4770      	bx	lr
	...

08001898 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001898:	4b03      	ldr	r3, [pc, #12]	@ (80018a8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800189a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800189e:	609a      	str	r2, [r3, #8]
 80018a0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80018a4:	609a      	str	r2, [r3, #8]
}
 80018a6:	4770      	bx	lr
 80018a8:	e000e100 	.word	0xe000e100

080018ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80018ac:	4b08      	ldr	r3, [pc, #32]	@ (80018d0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80018ae:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80018b2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80018b6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80018ba:	f3bf 8f6f 	isb	sy
 80018be:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80018c2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80018c6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80018ca:	f3bf 8f6f 	isb	sy
}
 80018ce:	4770      	bx	lr
 80018d0:	e000e100 	.word	0xe000e100

080018d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80018d4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80018d6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80018d8:	4e12      	ldr	r6, [pc, #72]	@ (8001924 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80018da:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80018dc:	4b12      	ldr	r3, [pc, #72]	@ (8001928 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80018de:	6003      	str	r3, [r0, #0]
 80018e0:	6833      	ldr	r3, [r6, #0]
 80018e2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 80018e6:	4605      	mov	r5, r0
 80018e8:	b10a      	cbz	r2, 80018ee <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80018ea:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80018ec:	b900      	cbnz	r0, 80018f0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80018ee:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80018f0:	6803      	ldr	r3, [r0, #0]
 80018f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80018f4:	4798      	blx	r3
        return auxiliaryLCD;
 80018f6:	6833      	ldr	r3, [r6, #0]
 80018f8:	fab0 f480 	clz	r4, r0
 80018fc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80018fe:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001900:	b130      	cbz	r0, 8001910 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001902:	6803      	ldr	r3, [r0, #0]
 8001904:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001906:	4798      	blx	r3
 8001908:	2800      	cmp	r0, #0
 800190a:	bf08      	it	eq
 800190c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001910:	b92c      	cbnz	r4, 800191e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001912:	4b06      	ldr	r3, [pc, #24]	@ (800192c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001914:	4a06      	ldr	r2, [pc, #24]	@ (8001930 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001916:	4807      	ldr	r0, [pc, #28]	@ (8001934 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001918:	212c      	movs	r1, #44	@ 0x2c
 800191a:	f021 fd29 	bl	8023370 <__assert_func>
    }
 800191e:	4628      	mov	r0, r5
 8001920:	bd70      	pop	{r4, r5, r6, pc}
 8001922:	bf00      	nop
 8001924:	20014040 	.word	0x20014040
 8001928:	080255f8 	.word	0x080255f8
 800192c:	08024c51 	.word	0x08024c51
 8001930:	08024caf 	.word	0x08024caf
 8001934:	08024ce8 	.word	0x08024ce8

08001938 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001938:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 800193a:	4e25      	ldr	r6, [pc, #148]	@ (80019d0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 800193c:	6835      	ldr	r5, [r6, #0]
 800193e:	f3bf 8f5b 	dmb	ish
 8001942:	f015 0501 	ands.w	r5, r5, #1
 8001946:	d140      	bne.n	80019ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001948:	4630      	mov	r0, r6
 800194a:	f020 fd90 	bl	802246e <__cxa_guard_acquire>
 800194e:	2800      	cmp	r0, #0
 8001950:	d03b      	beq.n	80019ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 8001952:	4c20      	ldr	r4, [pc, #128]	@ (80019d4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001954:	4b20      	ldr	r3, [pc, #128]	@ (80019d8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001956:	6125      	str	r5, [r4, #16]
 8001958:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800195c:	e9c4 3500 	strd	r3, r5, [r4]
 8001960:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001964:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001966:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001968:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 800196a:	f010 f836 	bl	80119da <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 800196e:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001972:	f00c fbad 	bl	800e0d0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8001976:	4b19      	ldr	r3, [pc, #100]	@ (80019dc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 8001978:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800197a:	4620      	mov	r0, r4
 800197c:	4b18      	ldr	r3, [pc, #96]	@ (80019e0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 800197e:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001982:	f7ff ffa7 	bl	80018d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001986:	4b17      	ldr	r3, [pc, #92]	@ (80019e4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 8001988:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 800198c:	3324      	adds	r3, #36	@ 0x24
 800198e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8001992:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8001996:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 800199a:	2300      	movs	r3, #0
 800199c:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 80019a0:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80019a4:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80019a8:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80019ac:	480e      	ldr	r0, [pc, #56]	@ (80019e8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80019ae:	4b0f      	ldr	r3, [pc, #60]	@ (80019ec <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80019b0:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80019b4:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80019b8:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80019bc:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80019c0:	f021 fcf4 	bl	80233ac <atexit>
 80019c4:	4630      	mov	r0, r6
 80019c6:	f020 fd5e 	bl	8022486 <__cxa_guard_release>
}
 80019ca:	4802      	ldr	r0, [pc, #8]	@ (80019d4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 80019cc:	bd70      	pop	{r4, r5, r6, pc}
 80019ce:	bf00      	nop
 80019d0:	20002468 	.word	0x20002468
 80019d4:	2000246c 	.word	0x2000246c
 80019d8:	08025afc 	.word	0x08025afc
 80019dc:	08025618 	.word	0x08025618
 80019e0:	08025690 	.word	0x08025690
 80019e4:	08025ab0 	.word	0x08025ab0
 80019e8:	080017b1 	.word	0x080017b1
 80019ec:	08025a90 	.word	0x08025a90

080019f0 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80019f0:	b538      	push	{r3, r4, r5, lr}
        return instance;
 80019f2:	4c18      	ldr	r4, [pc, #96]	@ (8001a54 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 80019f4:	6823      	ldr	r3, [r4, #0]
 80019f6:	b35b      	cbz	r3, 8001a50 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80019f8:	4b17      	ldr	r3, [pc, #92]	@ (8001a58 <HAL_LTDC_LineEventCallback+0x68>)
 80019fa:	4a18      	ldr	r2, [pc, #96]	@ (8001a5c <HAL_LTDC_LineEventCallback+0x6c>)
 80019fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019fe:	8811      	ldrh	r1, [r2, #0]
 8001a00:	428b      	cmp	r3, r1
 8001a02:	d116      	bne.n	8001a32 <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001a04:	4b16      	ldr	r3, [pc, #88]	@ (8001a60 <HAL_LTDC_LineEventCallback+0x70>)
 8001a06:	8819      	ldrh	r1, [r3, #0]
 8001a08:	f003 fb9e 	bl	8005148 <HAL_LTDC_ProgramLineEvent>
 8001a0c:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 8001a0e:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001a12:	2500      	movs	r5, #0
        vSyncCnt++;
 8001a14:	3201      	adds	r2, #1
 8001a16:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001a1a:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001a1e:	f7ff fab7 	bl	8000f90 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001a22:	6820      	ldr	r0, [r4, #0]
 8001a24:	f00a f874 	bl	800bb10 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001a28:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001a2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001a2e:	f7ff b8f7 	b.w	8000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001a32:	f003 fb89 	bl	8005148 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001a36:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001a38:	6823      	ldr	r3, [r4, #0]
 8001a3a:	4620      	mov	r0, r4
 8001a3c:	6a1b      	ldr	r3, [r3, #32]
 8001a3e:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001a40:	2301      	movs	r3, #1
 8001a42:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001a46:	2000      	movs	r0, #0
    }
 8001a48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001a4c:	f7ff b912 	b.w	8000c74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001a50:	bd38      	pop	{r3, r4, r5, pc}
 8001a52:	bf00      	nop
 8001a54:	20014040 	.word	0x20014040
 8001a58:	40016800 	.word	0x40016800
 8001a5c:	20002466 	.word	0x20002466
 8001a60:	20002464 	.word	0x20002464

08001a64 <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 8001a64:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceHS, &HS_Desc, DEVICE_HS) != USBD_OK)
 8001a66:	490c      	ldr	r1, [pc, #48]	@ (8001a98 <MX_USB_DEVICE_Init+0x34>)
 8001a68:	480c      	ldr	r0, [pc, #48]	@ (8001a9c <MX_USB_DEVICE_Init+0x38>)
 8001a6a:	2201      	movs	r2, #1
 8001a6c:	f008 fa54 	bl	8009f18 <USBD_Init>
 8001a70:	b108      	cbz	r0, 8001a76 <MX_USB_DEVICE_Init+0x12>
  {
    Error_Handler();
 8001a72:	f000 fde5 	bl	8002640 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceHS, &USBD_HID) != USBD_OK)
 8001a76:	490a      	ldr	r1, [pc, #40]	@ (8001aa0 <MX_USB_DEVICE_Init+0x3c>)
 8001a78:	4808      	ldr	r0, [pc, #32]	@ (8001a9c <MX_USB_DEVICE_Init+0x38>)
 8001a7a:	f008 fa60 	bl	8009f3e <USBD_RegisterClass>
 8001a7e:	b108      	cbz	r0, 8001a84 <MX_USB_DEVICE_Init+0x20>
  {
    Error_Handler();
 8001a80:	f000 fdde 	bl	8002640 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceHS) != USBD_OK)
 8001a84:	4805      	ldr	r0, [pc, #20]	@ (8001a9c <MX_USB_DEVICE_Init+0x38>)
 8001a86:	f008 fa73 	bl	8009f70 <USBD_Start>
 8001a8a:	b118      	cbz	r0, 8001a94 <MX_USB_DEVICE_Init+0x30>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 8001a8c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 8001a90:	f000 bdd6 	b.w	8002640 <Error_Handler>
}
 8001a94:	bd08      	pop	{r3, pc}
 8001a96:	bf00      	nop
 8001a98:	20000040 	.word	0x20000040
 8001a9c:	20002528 	.word	0x20002528
 8001aa0:	2000015c 	.word	0x2000015c

08001aa4 <USBD_HS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_HS_DeviceDesc);
 8001aa4:	2312      	movs	r3, #18
  return USBD_HS_DeviceDesc;
}
 8001aa6:	4801      	ldr	r0, [pc, #4]	@ (8001aac <USBD_HS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_HS_DeviceDesc);
 8001aa8:	800b      	strh	r3, [r1, #0]
}
 8001aaa:	4770      	bx	lr
 8001aac:	2000002c 	.word	0x2000002c

08001ab0 <USBD_HS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 8001ab0:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
 8001ab2:	4801      	ldr	r0, [pc, #4]	@ (8001ab8 <USBD_HS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
 8001ab4:	800b      	strh	r3, [r1, #0]
}
 8001ab6:	4770      	bx	lr
 8001ab8:	20000028 	.word	0x20000028

08001abc <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 8001abc:	2300      	movs	r3, #0
 8001abe:	b570      	push	{r4, r5, r6, lr}
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
 8001ac0:	1c4d      	adds	r5, r1, #1
 8001ac2:	461e      	mov	r6, r3
      pbuf[2 * idx] = (value >> 28) + '0';
 8001ac4:	0f04      	lsrs	r4, r0, #28
    if (((value >> 28)) < 0xA)
 8001ac6:	f1b0 4f20 	cmp.w	r0, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + '0';
 8001aca:	bf34      	ite	cc
 8001acc:	3430      	addcc	r4, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8001ace:	3437      	addcs	r4, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
 8001ad0:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    pbuf[2 * idx + 1] = 0;
 8001ad4:	f805 6013 	strb.w	r6, [r5, r3, lsl #1]
  for (idx = 0; idx < len; idx++)
 8001ad8:	3301      	adds	r3, #1
 8001ada:	b2dc      	uxtb	r4, r3
 8001adc:	42a2      	cmp	r2, r4
    value = value << 4;
 8001ade:	ea4f 1000 	mov.w	r0, r0, lsl #4
  for (idx = 0; idx < len; idx++)
 8001ae2:	d8ef      	bhi.n	8001ac4 <IntToUnicode+0x8>
  }
}
 8001ae4:	bd70      	pop	{r4, r5, r6, pc}
	...

08001ae8 <USBD_HS_SerialStrDescriptor>:
  *length = USB_SIZ_STRING_SERIAL;
 8001ae8:	231a      	movs	r3, #26
{
 8001aea:	b510      	push	{r4, lr}
  *length = USB_SIZ_STRING_SERIAL;
 8001aec:	800b      	strh	r3, [r1, #0]
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8001aee:	4b0a      	ldr	r3, [pc, #40]	@ (8001b18 <USBD_HS_SerialStrDescriptor+0x30>)
 8001af0:	f8d3 0a10 	ldr.w	r0, [r3, #2576]	@ 0xa10
  deviceserial0 += deviceserial2;
 8001af4:	f8d3 2a18 	ldr.w	r2, [r3, #2584]	@ 0xa18
  if (deviceserial0 != 0)
 8001af8:	1880      	adds	r0, r0, r2
 8001afa:	d00a      	beq.n	8001b12 <USBD_HS_SerialStrDescriptor+0x2a>
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8001afc:	f8d3 4a14 	ldr.w	r4, [r3, #2580]	@ 0xa14
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8001b00:	4906      	ldr	r1, [pc, #24]	@ (8001b1c <USBD_HS_SerialStrDescriptor+0x34>)
 8001b02:	2208      	movs	r2, #8
 8001b04:	f7ff ffda 	bl	8001abc <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8001b08:	2204      	movs	r2, #4
 8001b0a:	3110      	adds	r1, #16
 8001b0c:	4620      	mov	r0, r4
 8001b0e:	f7ff ffd5 	bl	8001abc <IntToUnicode>
}
 8001b12:	4803      	ldr	r0, [pc, #12]	@ (8001b20 <USBD_HS_SerialStrDescriptor+0x38>)
 8001b14:	bd10      	pop	{r4, pc}
 8001b16:	bf00      	nop
 8001b18:	1fff7000 	.word	0x1fff7000
 8001b1c:	2000000e 	.word	0x2000000e
 8001b20:	2000000c 	.word	0x2000000c

08001b24 <USBD_HS_ManufacturerStrDescriptor>:
{
 8001b24:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001b26:	4c04      	ldr	r4, [pc, #16]	@ (8001b38 <USBD_HS_ManufacturerStrDescriptor+0x14>)
 8001b28:	4804      	ldr	r0, [pc, #16]	@ (8001b3c <USBD_HS_ManufacturerStrDescriptor+0x18>)
{
 8001b2a:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001b2c:	4621      	mov	r1, r4
 8001b2e:	f008 fdee 	bl	800a70e <USBD_GetString>
}
 8001b32:	4620      	mov	r0, r4
 8001b34:	bd10      	pop	{r4, pc}
 8001b36:	bf00      	nop
 8001b38:	20002804 	.word	0x20002804
 8001b3c:	08024d4a 	.word	0x08024d4a

08001b40 <USBD_HS_ProductStrDescriptor>:
{
 8001b40:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001b42:	4c04      	ldr	r4, [pc, #16]	@ (8001b54 <USBD_HS_ProductStrDescriptor+0x14>)
 8001b44:	4804      	ldr	r0, [pc, #16]	@ (8001b58 <USBD_HS_ProductStrDescriptor+0x18>)
{
 8001b46:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001b48:	4621      	mov	r1, r4
 8001b4a:	f008 fde0 	bl	800a70e <USBD_GetString>
}
 8001b4e:	4620      	mov	r0, r4
 8001b50:	bd10      	pop	{r4, pc}
 8001b52:	bf00      	nop
 8001b54:	20002804 	.word	0x20002804
 8001b58:	08024d5d 	.word	0x08024d5d

08001b5c <USBD_HS_ConfigStrDescriptor>:
{
 8001b5c:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 8001b5e:	4c04      	ldr	r4, [pc, #16]	@ (8001b70 <USBD_HS_ConfigStrDescriptor+0x14>)
 8001b60:	4804      	ldr	r0, [pc, #16]	@ (8001b74 <USBD_HS_ConfigStrDescriptor+0x18>)
{
 8001b62:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 8001b64:	4621      	mov	r1, r4
 8001b66:	f008 fdd2 	bl	800a70e <USBD_GetString>
}
 8001b6a:	4620      	mov	r0, r4
 8001b6c:	bd10      	pop	{r4, pc}
 8001b6e:	bf00      	nop
 8001b70:	20002804 	.word	0x20002804
 8001b74:	08024d73 	.word	0x08024d73

08001b78 <USBD_HS_InterfaceStrDescriptor>:
{
 8001b78:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 8001b7a:	4c04      	ldr	r4, [pc, #16]	@ (8001b8c <USBD_HS_InterfaceStrDescriptor+0x14>)
 8001b7c:	4804      	ldr	r0, [pc, #16]	@ (8001b90 <USBD_HS_InterfaceStrDescriptor+0x18>)
{
 8001b7e:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 8001b80:	4621      	mov	r1, r4
 8001b82:	f008 fdc4 	bl	800a70e <USBD_GetString>
}
 8001b86:	4620      	mov	r0, r4
 8001b88:	bd10      	pop	{r4, pc}
 8001b8a:	bf00      	nop
 8001b8c:	20002804 	.word	0x20002804
 8001b90:	08024d7e 	.word	0x08024d7e

08001b94 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 8001b94:	b530      	push	{r4, r5, lr}
 8001b96:	4604      	mov	r4, r0
 8001b98:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b9a:	2214      	movs	r2, #20
 8001b9c:	2100      	movs	r1, #0
 8001b9e:	a803      	add	r0, sp, #12
 8001ba0:	f021 fe23 	bl	80237ea <memset>
  if(pcdHandle->Instance==USB_OTG_HS)
 8001ba4:	6822      	ldr	r2, [r4, #0]
 8001ba6:	4b1c      	ldr	r3, [pc, #112]	@ (8001c18 <HAL_PCD_MspInit+0x84>)
 8001ba8:	429a      	cmp	r2, r3
 8001baa:	d133      	bne.n	8001c14 <HAL_PCD_MspInit+0x80>
  {
  /* USER CODE BEGIN USB_OTG_HS_MspInit 0 */

  /* USER CODE END USB_OTG_HS_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001bac:	4c1b      	ldr	r4, [pc, #108]	@ (8001c1c <HAL_PCD_MspInit+0x88>)
    PB15     ------> USB_OTG_HS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bae:	481c      	ldr	r0, [pc, #112]	@ (8001c20 <HAL_PCD_MspInit+0x8c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001bb0:	2500      	movs	r5, #0
 8001bb2:	9501      	str	r5, [sp, #4]
 8001bb4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001bb6:	f043 0302 	orr.w	r3, r3, #2
 8001bba:	6323      	str	r3, [r4, #48]	@ 0x30
 8001bbc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001bbe:	f003 0302 	and.w	r3, r3, #2
 8001bc2:	9301      	str	r3, [sp, #4]
 8001bc4:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bc6:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001bc8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001bcc:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bce:	f002 fbe7 	bl	80043a0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bd2:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 8001bd6:	2302      	movs	r3, #2
 8001bd8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 8001bdc:	2103      	movs	r1, #3
 8001bde:	230c      	movs	r3, #12
 8001be0:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001be4:	480e      	ldr	r0, [pc, #56]	@ (8001c20 <HAL_PCD_MspInit+0x8c>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001be6:	9505      	str	r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001be8:	eb0d 0103 	add.w	r1, sp, r3
 8001bec:	f002 fbd8 	bl	80043a0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001bf0:	9502      	str	r5, [sp, #8]
 8001bf2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001bf4:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001bf8:	6323      	str	r3, [r4, #48]	@ 0x30
 8001bfa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001bfc:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8001c00:	9302      	str	r3, [sp, #8]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 8001c02:	204d      	movs	r0, #77	@ 0x4d
 8001c04:	462a      	mov	r2, r5
 8001c06:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001c08:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 8001c0a:	f002 fa7f 	bl	800410c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
 8001c0e:	204d      	movs	r0, #77	@ 0x4d
 8001c10:	f002 faae 	bl	8004170 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_HS_MspInit 1 */

  /* USER CODE END USB_OTG_HS_MspInit 1 */
  }
}
 8001c14:	b009      	add	sp, #36	@ 0x24
 8001c16:	bd30      	pop	{r4, r5, pc}
 8001c18:	40040000 	.word	0x40040000
 8001c1c:	40023800 	.word	0x40023800
 8001c20:	40020400 	.word	0x40020400

08001c24 <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 8001c24:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
 8001c28:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001c2c:	f008 b9b2 	b.w	8009f94 <USBD_LL_SetupStage>

08001c30 <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8001c30:	2324      	movs	r3, #36	@ 0x24
 8001c32:	fb03 0301 	mla	r3, r3, r1, r0
 8001c36:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001c3a:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 8001c3e:	f008 b9d9 	b.w	8009ff4 <USBD_LL_DataOutStage>

08001c42 <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 8001c42:	2324      	movs	r3, #36	@ 0x24
 8001c44:	fb03 0301 	mla	r3, r3, r1, r0
 8001c48:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001c4c:	6a1a      	ldr	r2, [r3, #32]
 8001c4e:	f008 ba0b 	b.w	800a068 <USBD_LL_DataInStage>

08001c52 <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 8001c52:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001c56:	f008 baa7 	b.w	800a1a8 <USBD_LL_SOF>

08001c5a <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8001c5a:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001c5c:	79c1      	ldrb	r1, [r0, #7]
{
 8001c5e:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001c60:	b121      	cbz	r1, 8001c6c <HAL_PCD_ResetCallback+0x12>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 8001c62:	2902      	cmp	r1, #2
 8001c64:	d001      	beq.n	8001c6a <HAL_PCD_ResetCallback+0x10>
  {
    speed = USBD_SPEED_FULL;
  }
  else
  {
    Error_Handler();
 8001c66:	f000 fceb 	bl	8002640 <Error_Handler>
    speed = USBD_SPEED_FULL;
 8001c6a:	2101      	movs	r1, #1
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 8001c6c:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
 8001c70:	f008 fa7e 	bl	800a170 <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8001c74:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
 8001c78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8001c7c:	f008 ba48 	b.w	800a110 <USBD_LL_Reset>

08001c80 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8001c80:	b510      	push	{r4, lr}
 8001c82:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 8001c84:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001c88:	f008 fa75 	bl	800a176 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 8001c8c:	6822      	ldr	r2, [r4, #0]
 8001c8e:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 8001c92:	f043 0301 	orr.w	r3, r3, #1
 8001c96:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 8001c9a:	7ae3      	ldrb	r3, [r4, #11]
 8001c9c:	b123      	cbz	r3, 8001ca8 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 8001c9e:	4a03      	ldr	r2, [pc, #12]	@ (8001cac <HAL_PCD_SuspendCallback+0x2c>)
 8001ca0:	6913      	ldr	r3, [r2, #16]
 8001ca2:	f043 0306 	orr.w	r3, r3, #6
 8001ca6:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 8001ca8:	bd10      	pop	{r4, pc}
 8001caa:	bf00      	nop
 8001cac:	e000ed00 	.word	0xe000ed00

08001cb0 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 8001cb0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001cb4:	f008 ba6d 	b.w	800a192 <USBD_LL_Resume>

08001cb8 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8001cb8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001cbc:	f008 ba94 	b.w	800a1e8 <USBD_LL_IsoOUTIncomplete>

08001cc0 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8001cc0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001cc4:	f008 ba7d 	b.w	800a1c2 <USBD_LL_IsoINIncomplete>

08001cc8 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 8001cc8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001ccc:	f008 ba9f 	b.w	800a20e <USBD_LL_DevConnected>

08001cd0 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8001cd0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001cd4:	f008 ba9d 	b.w	800a212 <USBD_LL_DevDisconnected>

08001cd8 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8001cd8:	b508      	push	{r3, lr}
  /* Init USB Ip. */
  if (pdev->id == DEVICE_HS) {
 8001cda:	7802      	ldrb	r2, [r0, #0]
 8001cdc:	2a01      	cmp	r2, #1
{
 8001cde:	4603      	mov	r3, r0
  if (pdev->id == DEVICE_HS) {
 8001ce0:	d127      	bne.n	8001d32 <USBD_LL_Init+0x5a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_HS.pData = pdev;
 8001ce2:	4815      	ldr	r0, [pc, #84]	@ (8001d38 <USBD_LL_Init+0x60>)
 8001ce4:	f8c0 34e0 	str.w	r3, [r0, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_HS;
 8001ce8:	f8c3 02c8 	str.w	r0, [r3, #712]	@ 0x2c8

  hpcd_USB_OTG_HS.Instance = USB_OTG_HS;
 8001cec:	4b13      	ldr	r3, [pc, #76]	@ (8001d3c <USBD_LL_Init+0x64>)
 8001cee:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_HS.Init.dev_endpoints = 6;
 8001cf0:	2306      	movs	r3, #6
 8001cf2:	7103      	strb	r3, [r0, #4]
  hpcd_USB_OTG_HS.Init.speed = PCD_SPEED_FULL;
  hpcd_USB_OTG_HS.Init.dma_enable = DISABLE;
 8001cf4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001cf8:	80c3      	strh	r3, [r0, #6]
  hpcd_USB_OTG_HS.Init.phy_itface = USB_OTG_EMBEDDED_PHY;
 8001cfa:	2302      	movs	r3, #2
 8001cfc:	7243      	strb	r3, [r0, #9]
  hpcd_USB_OTG_HS.Init.Sof_enable = DISABLE;
 8001cfe:	2300      	movs	r3, #0
 8001d00:	8143      	strh	r3, [r0, #10]
  hpcd_USB_OTG_HS.Init.low_power_enable = DISABLE;
  hpcd_USB_OTG_HS.Init.lpm_enable = DISABLE;
 8001d02:	7303      	strb	r3, [r0, #12]
  hpcd_USB_OTG_HS.Init.vbus_sensing_enable = ENABLE;
 8001d04:	81c2      	strh	r2, [r0, #14]
  hpcd_USB_OTG_HS.Init.use_dedicated_ep1 = DISABLE;
  hpcd_USB_OTG_HS.Init.use_external_vbus = DISABLE;
 8001d06:	7403      	strb	r3, [r0, #16]
  if (HAL_PCD_Init(&hpcd_USB_OTG_HS) != HAL_OK)
 8001d08:	f003 fa3c 	bl	8005184 <HAL_PCD_Init>
 8001d0c:	b108      	cbz	r0, 8001d12 <USBD_LL_Init+0x3a>
  {
    Error_Handler( );
 8001d0e:	f000 fc97 	bl	8002640 <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_HS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_HS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_HS, 0x200);
 8001d12:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001d16:	4808      	ldr	r0, [pc, #32]	@ (8001d38 <USBD_LL_Init+0x60>)
 8001d18:	f003 ff59 	bl	8005bce <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 0, 0x80);
 8001d1c:	2280      	movs	r2, #128	@ 0x80
 8001d1e:	2100      	movs	r1, #0
 8001d20:	4805      	ldr	r0, [pc, #20]	@ (8001d38 <USBD_LL_Init+0x60>)
 8001d22:	f003 ff35 	bl	8005b90 <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 1, 0x174);
 8001d26:	4804      	ldr	r0, [pc, #16]	@ (8001d38 <USBD_LL_Init+0x60>)
 8001d28:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8001d2c:	2101      	movs	r1, #1
 8001d2e:	f003 ff2f 	bl	8005b90 <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
}
 8001d32:	2000      	movs	r0, #0
 8001d34:	bd08      	pop	{r3, pc}
 8001d36:	bf00      	nop
 8001d38:	20002a18 	.word	0x20002a18
 8001d3c:	40040000 	.word	0x40040000

08001d40 <USBD_LL_IsStallEP>:
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;

  if((ep_addr & 0x80) == 0x80)
 8001d40:	f011 0f80 	tst.w	r1, #128	@ 0x80
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 8001d44:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 8001d48:	f04f 0224 	mov.w	r2, #36	@ 0x24
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001d4c:	bf1b      	ittet	ne
 8001d4e:	f001 017f 	andne.w	r1, r1, #127	@ 0x7f
 8001d52:	fb02 3301 	mlane	r3, r2, r1, r3
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8001d56:	fb02 3301 	mlaeq	r3, r2, r1, r3
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001d5a:	7d98      	ldrbne	r0, [r3, #22]
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8001d5c:	bf08      	it	eq
 8001d5e:	f893 0256 	ldrbeq.w	r0, [r3, #598]	@ 0x256
  }
}
 8001d62:	4770      	bx	lr

08001d64 <USBD_static_malloc>:
  */
void *USBD_static_malloc(uint32_t size)
{
  static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
}
 8001d64:	4800      	ldr	r0, [pc, #0]	@ (8001d68 <USBD_static_malloc+0x4>)
 8001d66:	4770      	bx	lr
 8001d68:	20002a04 	.word	0x20002a04

08001d6c <USBD_static_free>:
  * @retval None
  */
void USBD_static_free(void *p)
{

}
 8001d6c:	4770      	bx	lr

08001d6e <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 8001d6e:	b118      	cbz	r0, 8001d78 <USBD_Get_USB_Status+0xa>
 8001d70:	2802      	cmp	r0, #2
 8001d72:	bf0c      	ite	eq
 8001d74:	2001      	moveq	r0, #1
 8001d76:	2003      	movne	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 8001d78:	4770      	bx	lr

08001d7a <USBD_LL_Start>:
{
 8001d7a:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 8001d7c:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001d80:	f003 fa6f 	bl	8005262 <HAL_PCD_Start>
}
 8001d84:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001d88:	f7ff bff1 	b.w	8001d6e <USBD_Get_USB_Status>

08001d8c <USBD_LL_OpenEP>:
{
 8001d8c:	b510      	push	{r4, lr}
 8001d8e:	4614      	mov	r4, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8001d90:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
 8001d94:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8001d96:	4623      	mov	r3, r4
 8001d98:	f003 fa95 	bl	80052c6 <HAL_PCD_EP_Open>
}
 8001d9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001da0:	f7ff bfe5 	b.w	8001d6e <USBD_Get_USB_Status>

08001da4 <USBD_LL_CloseEP>:
{
 8001da4:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 8001da6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001daa:	f003 fac5 	bl	8005338 <HAL_PCD_EP_Close>
}
 8001dae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001db2:	f7ff bfdc 	b.w	8001d6e <USBD_Get_USB_Status>

08001db6 <USBD_LL_StallEP>:
{
 8001db6:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 8001db8:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001dbc:	f003 fb23 	bl	8005406 <HAL_PCD_EP_SetStall>
}
 8001dc0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001dc4:	f7ff bfd3 	b.w	8001d6e <USBD_Get_USB_Status>

08001dc8 <USBD_LL_ClearStallEP>:
{
 8001dc8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 8001dca:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001dce:	f003 fb51 	bl	8005474 <HAL_PCD_EP_ClrStall>
}
 8001dd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001dd6:	f7ff bfca 	b.w	8001d6e <USBD_Get_USB_Status>

08001dda <USBD_LL_SetUSBAddress>:
{
 8001dda:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8001ddc:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001de0:	f003 fa5e 	bl	80052a0 <HAL_PCD_SetAddress>
}
 8001de4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001de8:	f7ff bfc1 	b.w	8001d6e <USBD_Get_USB_Status>

08001dec <USBD_LL_Transmit>:
{
 8001dec:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8001dee:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001df2:	f003 faed 	bl	80053d0 <HAL_PCD_EP_Transmit>
}
 8001df6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001dfa:	f7ff bfb8 	b.w	8001d6e <USBD_Get_USB_Status>

08001dfe <USBD_LL_PrepareReceive>:
{
 8001dfe:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8001e00:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001e04:	f003 fac6 	bl	8005394 <HAL_PCD_EP_Receive>
}
 8001e08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001e0c:	f7ff bfaf 	b.w	8001d6e <USBD_Get_USB_Status>

08001e10 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001e10:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e12:	4b06      	ldr	r3, [pc, #24]	@ (8001e2c <SPI5_Write+0x1c>)
{
 8001e14:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	4805      	ldr	r0, [pc, #20]	@ (8001e30 <SPI5_Write+0x20>)
 8001e1c:	2201      	movs	r2, #1
 8001e1e:	f10d 0106 	add.w	r1, sp, #6
 8001e22:	f004 fc37 	bl	8006694 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001e26:	b003      	add	sp, #12
 8001e28:	f85d fb04 	ldr.w	pc, [sp], #4
 8001e2c:	2000005c 	.word	0x2000005c
 8001e30:	20002f9c 	.word	0x20002f9c

08001e34 <mouseProcessingTask>:
{
 8001e34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e38:	ed2d 8b02 	vpush	{d8}
        if(osMessageQueueGet(mouseEventQueueHandle, &event, NULL, osWaitForever) == osOK) {
 8001e3c:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 8001f4c <mouseProcessingTask+0x118>
                mousehid.button = 0;
 8001e40:	4c40      	ldr	r4, [pc, #256]	@ (8001f44 <mouseProcessingTask+0x110>)
                USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001e42:	4f41      	ldr	r7, [pc, #260]	@ (8001f48 <mouseProcessingTask+0x114>)
{
 8001e44:	b084      	sub	sp, #16
        if(osMessageQueueGet(mouseEventQueueHandle, &event, NULL, osWaitForever) == osOK) {
 8001e46:	f8d8 0000 	ldr.w	r0, [r8]
 8001e4a:	f04f 33ff 	mov.w	r3, #4294967295
 8001e4e:	2200      	movs	r2, #0
 8001e50:	a901      	add	r1, sp, #4
 8001e52:	f006 f873 	bl	8007f3c <osMessageQueueGet>
 8001e56:	2800      	cmp	r0, #0
 8001e58:	d1f5      	bne.n	8001e46 <mouseProcessingTask+0x12>
            if(event.eventType == 0) {
 8001e5a:	f89d 500c 	ldrb.w	r5, [sp, #12]
 8001e5e:	2d00      	cmp	r5, #0
 8001e60:	d155      	bne.n	8001f0e <mouseProcessingTask+0xda>
                accumulated_x += -event.deltaX * scale_x;
 8001e62:	f99d 3004 	ldrsb.w	r3, [sp, #4]
 8001e66:	f8df a0e8 	ldr.w	sl, [pc, #232]	@ 8001f50 <mouseProcessingTask+0x11c>
                accumulated_y += event.deltaY * scale_y;
 8001e6a:	f8df 90e8 	ldr.w	r9, [pc, #232]	@ 8001f54 <mouseProcessingTask+0x120>
                accumulated_x += -event.deltaX * scale_x;
 8001e6e:	edda 8a00 	vldr	s17, [sl]
                accumulated_y += event.deltaY * scale_y;
 8001e72:	ed99 8a00 	vldr	s16, [r9]
                accumulated_x += -event.deltaX * scale_x;
 8001e76:	425b      	negs	r3, r3
 8001e78:	ee07 3a90 	vmov	s15, r3
 8001e7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                accumulated_y += event.deltaY * scale_y;
 8001e80:	f99d 3005 	ldrsb.w	r3, [sp, #5]
                accumulated_x += -event.deltaX * scale_x;
 8001e84:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8001e88:	eee7 8a87 	vfma.f32	s17, s15, s14
                accumulated_y += event.deltaY * scale_y;
 8001e8c:	ee07 3a90 	vmov	s15, r3
 8001e90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                int8_t send_x = (int8_t)round(accumulated_x);
 8001e94:	ee18 0a90 	vmov	r0, s17
                accumulated_y += event.deltaY * scale_y;
 8001e98:	eea7 8a87 	vfma.f32	s16, s15, s14
                int8_t send_x = (int8_t)round(accumulated_x);
 8001e9c:	f7fe fb64 	bl	8000568 <__aeabi_f2d>
 8001ea0:	ec41 0b10 	vmov	d0, r0, r1
 8001ea4:	f020 fbb8 	bl	8022618 <round>
 8001ea8:	ec51 0b10 	vmov	r0, r1, d0
 8001eac:	f7fe fbb4 	bl	8000618 <__aeabi_d2iz>
 8001eb0:	b246      	sxtb	r6, r0
                int8_t send_y = (int8_t)round(accumulated_y);
 8001eb2:	ee18 0a10 	vmov	r0, s16
 8001eb6:	f7fe fb57 	bl	8000568 <__aeabi_f2d>
 8001eba:	ec41 0b10 	vmov	d0, r0, r1
 8001ebe:	f020 fbab 	bl	8022618 <round>
 8001ec2:	ec51 0b10 	vmov	r0, r1, d0
 8001ec6:	f7fe fba7 	bl	8000618 <__aeabi_d2iz>
                accumulated_x -= send_x;
 8001eca:	ee07 6a90 	vmov	s15, r6
 8001ece:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                int8_t send_y = (int8_t)round(accumulated_y);
 8001ed2:	b240      	sxtb	r0, r0
                accumulated_x -= send_x;
 8001ed4:	ee78 8ae7 	vsub.f32	s17, s17, s15
                accumulated_y -= send_y;
 8001ed8:	ee07 0a90 	vmov	s15, r0
 8001edc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                if(send_x != 0 || send_y != 0) {
 8001ee0:	ea56 0300 	orrs.w	r3, r6, r0
                accumulated_y -= send_y;
 8001ee4:	ee38 8a67 	vsub.f32	s16, s16, s15
                accumulated_x -= send_x;
 8001ee8:	edca 8a00 	vstr	s17, [sl]
                accumulated_y -= send_y;
 8001eec:	ed89 8a00 	vstr	s16, [r9]
                if(send_x != 0 || send_y != 0) {
 8001ef0:	d0a9      	beq.n	8001e46 <mouseProcessingTask+0x12>
                    mousehid.mouse_x = send_y;
 8001ef2:	7060      	strb	r0, [r4, #1]
                    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001ef4:	4913      	ldr	r1, [pc, #76]	@ (8001f44 <mouseProcessingTask+0x110>)
                    mousehid.button = 0;
 8001ef6:	7025      	strb	r5, [r4, #0]
                    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001ef8:	2204      	movs	r2, #4
 8001efa:	4638      	mov	r0, r7
                    mousehid.mouse_y = send_x;
 8001efc:	70a6      	strb	r6, [r4, #2]
                    mousehid.wheel = 0;
 8001efe:	70e5      	strb	r5, [r4, #3]
                    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001f00:	f008 fd0a 	bl	800a918 <USBD_HID_SendReport>
                    mousehid.button = 0;
 8001f04:	7025      	strb	r5, [r4, #0]
                    mousehid.mouse_x = 0;
 8001f06:	7065      	strb	r5, [r4, #1]
                    mousehid.mouse_y = 0;
 8001f08:	70a5      	strb	r5, [r4, #2]
                    mousehid.wheel = 0;
 8001f0a:	70e5      	strb	r5, [r4, #3]
 8001f0c:	e79b      	b.n	8001e46 <mouseProcessingTask+0x12>
            else if(event.eventType == 1) {
 8001f0e:	2d01      	cmp	r5, #1
 8001f10:	d10c      	bne.n	8001f2c <mouseProcessingTask+0xf8>
                mousehid.mouse_x = 0;
 8001f12:	7060      	strb	r0, [r4, #1]
                mousehid.mouse_y = 0;
 8001f14:	70a0      	strb	r0, [r4, #2]
                mousehid.wheel = 0;
 8001f16:	70e0      	strb	r0, [r4, #3]
                USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001f18:	490a      	ldr	r1, [pc, #40]	@ (8001f44 <mouseProcessingTask+0x110>)
                mousehid.button = 1;
 8001f1a:	7025      	strb	r5, [r4, #0]
                USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001f1c:	2204      	movs	r2, #4
 8001f1e:	4638      	mov	r0, r7
 8001f20:	f008 fcfa 	bl	800a918 <USBD_HID_SendReport>
                osDelay(50);
 8001f24:	2032      	movs	r0, #50	@ 0x32
 8001f26:	f005 fedf 	bl	8007ce8 <osDelay>
 8001f2a:	e78c      	b.n	8001e46 <mouseProcessingTask+0x12>
            else if(event.eventType == 2) {
 8001f2c:	2d02      	cmp	r5, #2
 8001f2e:	d18a      	bne.n	8001e46 <mouseProcessingTask+0x12>
                mousehid.button = 0;
 8001f30:	7020      	strb	r0, [r4, #0]
                mousehid.mouse_x = 0;
 8001f32:	7060      	strb	r0, [r4, #1]
                mousehid.mouse_y = 0;
 8001f34:	70a0      	strb	r0, [r4, #2]
                mousehid.wheel = 0;
 8001f36:	70e0      	strb	r0, [r4, #3]
                USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001f38:	4902      	ldr	r1, [pc, #8]	@ (8001f44 <mouseProcessingTask+0x110>)
 8001f3a:	2204      	movs	r2, #4
 8001f3c:	4638      	mov	r0, r7
 8001f3e:	f008 fceb 	bl	800a918 <USBD_HID_SendReport>
 8001f42:	e780      	b.n	8001e46 <mouseProcessingTask+0x12>
 8001f44:	20003138 	.word	0x20003138
 8001f48:	20002528 	.word	0x20002528
 8001f4c:	20002f10 	.word	0x20002f10
 8001f50:	20002f00 	.word	0x20002f00
 8001f54:	20002efc 	.word	0x20002efc

08001f58 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001f58:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001f5a:	2064      	movs	r0, #100	@ 0x64
 8001f5c:	f005 fec4 	bl	8007ce8 <osDelay>
  for(;;)
 8001f60:	e7fb      	b.n	8001f5a <StartDefaultTask+0x2>
	...

08001f64 <SystemClock_Config>:
{
 8001f64:	b530      	push	{r4, r5, lr}
 8001f66:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001f68:	2210      	movs	r2, #16
 8001f6a:	2100      	movs	r1, #0
 8001f6c:	a80a      	add	r0, sp, #40	@ 0x28
 8001f6e:	f021 fc3c 	bl	80237ea <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001f72:	2214      	movs	r2, #20
 8001f74:	2100      	movs	r1, #0
 8001f76:	a803      	add	r0, sp, #12
 8001f78:	f021 fc37 	bl	80237ea <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001f7c:	2400      	movs	r4, #0
 8001f7e:	4b1d      	ldr	r3, [pc, #116]	@ (8001ff4 <SystemClock_Config+0x90>)
 8001f80:	9401      	str	r4, [sp, #4]
 8001f82:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001f84:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8001f88:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f8c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001f90:	9301      	str	r3, [sp, #4]
 8001f92:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f94:	4b18      	ldr	r3, [pc, #96]	@ (8001ff8 <SystemClock_Config+0x94>)
 8001f96:	9402      	str	r4, [sp, #8]
 8001f98:	681a      	ldr	r2, [r3, #0]
 8001f9a:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001f9e:	601a      	str	r2, [r3, #0]
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001fa6:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001fa8:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001faa:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001fac:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001fb0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001fb4:	2502      	movs	r5, #2
 8001fb6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001fba:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 168;
 8001fbe:	2104      	movs	r1, #4
 8001fc0:	23a8      	movs	r3, #168	@ 0xa8
 8001fc2:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001fc6:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8001fc8:	2307      	movs	r3, #7
 8001fca:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001fcc:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001fce:	f003 fe03 	bl	8005bd8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001fd2:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001fd4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001fd8:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001fdc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001fe0:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001fe4:	2105      	movs	r1, #5
 8001fe6:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001fe8:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001fea:	f003 ffd1 	bl	8005f90 <HAL_RCC_ClockConfig>
}
 8001fee:	b015      	add	sp, #84	@ 0x54
 8001ff0:	bd30      	pop	{r4, r5, pc}
 8001ff2:	bf00      	nop
 8001ff4:	40023800 	.word	0x40023800
 8001ff8:	40007000 	.word	0x40007000

08001ffc <main>:
{
 8001ffc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8002000:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8002002:	f002 f831 	bl	8004068 <HAL_Init>
  SystemClock_Config();
 8002006:	f7ff ffad 	bl	8001f64 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800200a:	2214      	movs	r2, #20
 800200c:	2100      	movs	r1, #0
 800200e:	a80d      	add	r0, sp, #52	@ 0x34
 8002010:	f021 fbeb 	bl	80237ea <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002014:	2400      	movs	r4, #0
 8002016:	4bc7      	ldr	r3, [pc, #796]	@ (8002334 <main+0x338>)
 8002018:	9400      	str	r4, [sp, #0]
 800201a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800201c:	48c6      	ldr	r0, [pc, #792]	@ (8002338 <main+0x33c>)
  hi2c3.Instance = I2C3;
 800201e:	4dc7      	ldr	r5, [pc, #796]	@ (800233c <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002020:	f042 0210 	orr.w	r2, r2, #16
 8002024:	631a      	str	r2, [r3, #48]	@ 0x30
 8002026:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002028:	f002 0210 	and.w	r2, r2, #16
 800202c:	9200      	str	r2, [sp, #0]
 800202e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002030:	9401      	str	r4, [sp, #4]
 8002032:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002034:	f042 0220 	orr.w	r2, r2, #32
 8002038:	631a      	str	r2, [r3, #48]	@ 0x30
 800203a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800203c:	f002 0220 	and.w	r2, r2, #32
 8002040:	9201      	str	r2, [sp, #4]
 8002042:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002044:	9402      	str	r4, [sp, #8]
 8002046:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002048:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800204c:	631a      	str	r2, [r3, #48]	@ 0x30
 800204e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002050:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8002054:	9202      	str	r2, [sp, #8]
 8002056:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002058:	9403      	str	r4, [sp, #12]
 800205a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800205c:	f042 0204 	orr.w	r2, r2, #4
 8002060:	631a      	str	r2, [r3, #48]	@ 0x30
 8002062:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002064:	f002 0204 	and.w	r2, r2, #4
 8002068:	9203      	str	r2, [sp, #12]
 800206a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800206c:	9404      	str	r4, [sp, #16]
 800206e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002070:	f042 0201 	orr.w	r2, r2, #1
 8002074:	631a      	str	r2, [r3, #48]	@ 0x30
 8002076:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002078:	f002 0201 	and.w	r2, r2, #1
 800207c:	9204      	str	r2, [sp, #16]
 800207e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002080:	9405      	str	r4, [sp, #20]
 8002082:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002084:	f042 0202 	orr.w	r2, r2, #2
 8002088:	631a      	str	r2, [r3, #48]	@ 0x30
 800208a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800208c:	f002 0202 	and.w	r2, r2, #2
 8002090:	9205      	str	r2, [sp, #20]
 8002092:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8002094:	9406      	str	r4, [sp, #24]
 8002096:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002098:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800209c:	631a      	str	r2, [r3, #48]	@ 0x30
 800209e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020a0:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80020a4:	9206      	str	r2, [sp, #24]
 80020a6:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80020a8:	9407      	str	r4, [sp, #28]
 80020aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020ac:	f042 0208 	orr.w	r2, r2, #8
 80020b0:	631a      	str	r2, [r3, #48]	@ 0x30
 80020b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020b4:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80020b8:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80020ba:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80020bc:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80020be:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80020c0:	f002 fa58 	bl	8004574 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 80020c4:	489e      	ldr	r0, [pc, #632]	@ (8002340 <main+0x344>)
 80020c6:	2201      	movs	r2, #1
 80020c8:	2102      	movs	r1, #2
 80020ca:	f002 fa53 	bl	8004574 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020ce:	4622      	mov	r2, r4
 80020d0:	489b      	ldr	r0, [pc, #620]	@ (8002340 <main+0x344>)
 80020d2:	2104      	movs	r1, #4
 80020d4:	f002 fa4e 	bl	8004574 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80020d8:	4622      	mov	r2, r4
 80020da:	489a      	ldr	r0, [pc, #616]	@ (8002344 <main+0x348>)
 80020dc:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 80020e0:	f002 fa48 	bl	8004574 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80020e4:	2601      	movs	r6, #1
 80020e6:	233c      	movs	r3, #60	@ 0x3c
 80020e8:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020ec:	4892      	ldr	r0, [pc, #584]	@ (8002338 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020ee:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020f0:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020f2:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 80020f4:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020f6:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020f8:	f002 f952 	bl	80043a0 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 80020fc:	4890      	ldr	r0, [pc, #576]	@ (8002340 <main+0x344>)
 80020fe:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002100:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002104:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8002108:	f002 f94a 	bl	80043a0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800210c:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800210e:	488c      	ldr	r0, [pc, #560]	@ (8002340 <main+0x344>)
 8002110:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002112:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002116:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800211a:	f002 f941 	bl	80043a0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800211e:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8002120:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002124:	4887      	ldr	r0, [pc, #540]	@ (8002344 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002126:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800212a:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800212e:	f002 f937 	bl	80043a0 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8002132:	4885      	ldr	r0, [pc, #532]	@ (8002348 <main+0x34c>)
 8002134:	4b85      	ldr	r3, [pc, #532]	@ (800234c <main+0x350>)
 8002136:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8002138:	f002 f828 	bl	800418c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800213c:	f8df c234 	ldr.w	ip, [pc, #564]	@ 8002374 <main+0x378>
 8002140:	4b83      	ldr	r3, [pc, #524]	@ (8002350 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002142:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8002144:	e9c5 c300 	strd	ip, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8002148:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800214a:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800214e:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8002152:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002156:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800215a:	f002 fc19 	bl	8004990 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800215e:	2110      	movs	r1, #16
 8002160:	4628      	mov	r0, r5
 8002162:	f002 fe5d 	bl	8004e20 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8002166:	4621      	mov	r1, r4
 8002168:	4628      	mov	r0, r5
 800216a:	f002 fe78 	bl	8004e5e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800216e:	4d79      	ldr	r5, [pc, #484]	@ (8002354 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8002170:	f8df e204 	ldr.w	lr, [pc, #516]	@ 8002378 <main+0x37c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002174:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8002176:	f44f 7382 	mov.w	r3, #260	@ 0x104
 800217a:	e9c5 e300 	strd	lr, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800217e:	f44f 7800 	mov.w	r8, #512	@ 0x200
 8002182:	2318      	movs	r3, #24
 8002184:	e9c5 8306 	strd	r8, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8002188:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 800218a:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800218c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002190:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8002194:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCPolynomial = 10;
 8002198:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800219a:	f004 fa1f 	bl	80065dc <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 800219e:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 80021a0:	4622      	mov	r2, r4
 80021a2:	4639      	mov	r1, r7
 80021a4:	4866      	ldr	r0, [pc, #408]	@ (8002340 <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 80021a6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 80021aa:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 80021ae:	f002 f9e1 	bl	8004574 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 80021b2:	4632      	mov	r2, r6
 80021b4:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80021b8:	a909      	add	r1, sp, #36	@ 0x24
 80021ba:	4628      	mov	r0, r5
 80021bc:	f004 fa6a 	bl	8006694 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 80021c0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80021c4:	4632      	mov	r2, r6
 80021c6:	a90d      	add	r1, sp, #52	@ 0x34
 80021c8:	4628      	mov	r0, r5
 80021ca:	f004 fc0f 	bl	80069ec <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 80021ce:	4632      	mov	r2, r6
 80021d0:	4639      	mov	r1, r7
 80021d2:	485b      	ldr	r0, [pc, #364]	@ (8002340 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80021d4:	4d60      	ldr	r5, [pc, #384]	@ (8002358 <main+0x35c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 80021d6:	f002 f9cd 	bl	8004574 <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 80021da:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 80021de:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 80021e0:	bf04      	itt	eq
 80021e2:	4b5e      	ldreq	r3, [pc, #376]	@ (800235c <main+0x360>)
 80021e4:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80021e6:	4b5e      	ldr	r3, [pc, #376]	@ (8002360 <main+0x364>)
 80021e8:	2701      	movs	r7, #1
 80021ea:	e9c5 3700 	strd	r3, r7, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80021ee:	f04f 0910 	mov.w	r9, #16
 80021f2:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80021f4:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80021f6:	e9c5 9304 	strd	r9, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80021fa:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80021fe:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8002202:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8002206:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800220a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 800220e:	2602      	movs	r6, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8002210:	f04f 0a04 	mov.w	sl, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8002214:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8002216:	f04f 0b03 	mov.w	fp, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 800221a:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800221c:	a90d      	add	r1, sp, #52	@ 0x34
 800221e:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 8002220:	e9cd 630d 	strd	r6, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8002224:	e9cd a30f 	strd	sl, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002228:	f04f 0808 	mov.w	r8, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800222c:	e9c5 4a02 	strd	r4, sl, [r5, #8]
  SdramTiming.RPDelay = 2;
 8002230:	e9cd b611 	strd	fp, r6, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8002234:	9613      	str	r6, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002236:	f004 f8b5 	bl	80063a4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800223a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800223e:	a909      	add	r1, sp, #36	@ 0x24
 8002240:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8002242:	e9cd 870a 	strd	r8, r7, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8002246:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8002248:	9709      	str	r7, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 800224a:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800224c:	f004 f8ca 	bl	80063e4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8002250:	4638      	mov	r0, r7
 8002252:	f001 ff35 	bl	80040c0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002256:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800225a:	a909      	add	r1, sp, #36	@ 0x24
 800225c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800225e:	e9cd 6809 	strd	r6, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8002262:	e9cd 740b 	strd	r7, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002266:	f004 f8bd 	bl	80063e4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800226a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800226e:	a909      	add	r1, sp, #36	@ 0x24
 8002270:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002272:	e9cd b809 	strd	fp, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8002276:	e9cd a40b 	strd	sl, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800227a:	f004 f8b3 	bl	80063e4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800227e:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8002282:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8002284:	9b08      	ldr	r3, [sp, #32]
 8002286:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002288:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800228c:	a909      	add	r1, sp, #36	@ 0x24
 800228e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002290:	e9cd a809 	strd	sl, r8, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8002294:	970b      	str	r7, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002296:	f004 f8a5 	bl	80063e4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800229a:	f240 516a 	movw	r1, #1386	@ 0x56a
 800229e:	4628      	mov	r0, r5
 80022a0:	f004 f8be 	bl	8006420 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80022a4:	2234      	movs	r2, #52	@ 0x34
 80022a6:	4621      	mov	r1, r4
 80022a8:	eb0d 0002 	add.w	r0, sp, r2
 80022ac:	f021 fa9d 	bl	80237ea <memset>
  hltdc.Instance = LTDC;
 80022b0:	4d2c      	ldr	r5, [pc, #176]	@ (8002364 <main+0x368>)
 80022b2:	4b2d      	ldr	r3, [pc, #180]	@ (8002368 <main+0x36c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80022b4:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80022b6:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 80022ba:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 80022bc:	e9c5 3705 	strd	r3, r7, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80022c0:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 80022c2:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80022c6:	f240 120d 	movw	r2, #269	@ 0x10d
 80022ca:	f240 1343 	movw	r3, #323	@ 0x143
 80022ce:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 80022d2:	f240 1117 	movw	r1, #279	@ 0x117
 80022d6:	f240 1347 	movw	r3, #327	@ 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80022da:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80022dc:	e9c5 130b 	strd	r1, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80022e0:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 80022e4:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 80022e6:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80022ea:	f002 fe4b 	bl	8004f84 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80022ee:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 80022f0:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 80022f2:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80022f6:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 80022fa:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80022fc:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8002300:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY0 = 0;
 8002304:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002308:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.ImageWidth = 240;
 800230a:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800230e:	4628      	mov	r0, r5
 8002310:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8002312:	4d16      	ldr	r5, [pc, #88]	@ (800236c <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8002314:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8002316:	e9cd 3610 	strd	r3, r6, [sp, #64]	@ 0x40
  pLayerCfg.WindowX0 = 0;
 800231a:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 800231c:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8002320:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002324:	f002 fee2 	bl	80050ec <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8002328:	4b11      	ldr	r3, [pc, #68]	@ (8002370 <main+0x374>)
 800232a:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8002330:	682b      	ldr	r3, [r5, #0]
 8002332:	e023      	b.n	800237c <main+0x380>
 8002334:	40023800 	.word	0x40023800
 8002338:	40021000 	.word	0x40021000
 800233c:	2000309c 	.word	0x2000309c
 8002340:	40020800 	.word	0x40020800
 8002344:	40020c00 	.word	0x40020c00
 8002348:	20003130 	.word	0x20003130
 800234c:	40023000 	.word	0x40023000
 8002350:	000186a0 	.word	0x000186a0
 8002354:	20002f9c 	.word	0x20002f9c
 8002358:	20002f20 	.word	0x20002f20
 800235c:	20002f08 	.word	0x20002f08
 8002360:	a0000140 	.word	0xa0000140
 8002364:	20002ff4 	.word	0x20002ff4
 8002368:	40016800 	.word	0x40016800
 800236c:	20002f04 	.word	0x20002f04
 8002370:	20000064 	.word	0x20000064
 8002374:	40005c00 	.word	0x40005c00
 8002378:	40015000 	.word	0x40015000
  hdma2d.Instance = DMA2D;
 800237c:	4d27      	ldr	r5, [pc, #156]	@ (800241c <main+0x420>)
  LcdDrv->DisplayOff();
 800237e:	68db      	ldr	r3, [r3, #12]
 8002380:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8002382:	4b27      	ldr	r3, [pc, #156]	@ (8002420 <main+0x424>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002384:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8002386:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 800238a:	e9c5 6402 	strd	r6, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800238e:	e9c5 460a 	strd	r4, r6, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8002392:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002396:	f001 ff09 	bl	80041ac <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800239a:	4639      	mov	r1, r7
 800239c:	4628      	mov	r0, r5
 800239e:	f001 ffbb 	bl	8004318 <HAL_DMA2D_ConfigLayer>
  huart1.Init.BaudRate = 115200;
 80023a2:	4d20      	ldr	r5, [pc, #128]	@ (8002424 <main+0x428>)
  huart1.Instance = USART1;
 80023a4:	4820      	ldr	r0, [pc, #128]	@ (8002428 <main+0x42c>)
  huart1.Init.BaudRate = 115200;
 80023a6:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 80023aa:	e9c0 5300 	strd	r5, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80023ae:	250c      	movs	r5, #12
  huart1.Init.StopBits = UART_STOPBITS_1;
 80023b0:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80023b4:	e9c0 5405 	strd	r5, r4, [r0, #20]
  huart1.Init.Parity = UART_PARITY_NONE;
 80023b8:	6104      	str	r4, [r0, #16]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80023ba:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80023bc:	f004 fdcc 	bl	8006f58 <HAL_UART_Init>
  MX_TouchGFX_Init();
 80023c0:	f7fe fb62 	bl	8000a88 <MX_TouchGFX_Init>
  MX_USB_DEVICE_Init();
 80023c4:	f7ff fb4e 	bl	8001a64 <MX_USB_DEVICE_Init>
  MX_TouchGFX_PreOSInit();
 80023c8:	f7fe fb5d 	bl	8000a86 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80023cc:	f005 fc04 	bl	8007bd8 <osKernelInitialize>
  myQueue01Handle = osMessageQueueNew (16, sizeof(uint16_t), &myQueue01_attributes);
 80023d0:	4a16      	ldr	r2, [pc, #88]	@ (800242c <main+0x430>)
 80023d2:	4631      	mov	r1, r6
 80023d4:	4648      	mov	r0, r9
 80023d6:	f005 fd45 	bl	8007e64 <osMessageQueueNew>
 80023da:	4b15      	ldr	r3, [pc, #84]	@ (8002430 <main+0x434>)
  mouseEventQueueHandle = osMessageQueueNew (32, sizeof(MouseEvent), &mouseEventQueue_attributes);
 80023dc:	4a15      	ldr	r2, [pc, #84]	@ (8002434 <main+0x438>)
  myQueue01Handle = osMessageQueueNew (16, sizeof(uint16_t), &myQueue01_attributes);
 80023de:	6018      	str	r0, [r3, #0]
  mouseEventQueueHandle = osMessageQueueNew (32, sizeof(MouseEvent), &mouseEventQueue_attributes);
 80023e0:	4629      	mov	r1, r5
 80023e2:	2020      	movs	r0, #32
 80023e4:	f005 fd3e 	bl	8007e64 <osMessageQueueNew>
 80023e8:	4b13      	ldr	r3, [pc, #76]	@ (8002438 <main+0x43c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80023ea:	4a14      	ldr	r2, [pc, #80]	@ (800243c <main+0x440>)
  mouseEventQueueHandle = osMessageQueueNew (32, sizeof(MouseEvent), &mouseEventQueue_attributes);
 80023ec:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80023ee:	4621      	mov	r1, r4
 80023f0:	4813      	ldr	r0, [pc, #76]	@ (8002440 <main+0x444>)
 80023f2:	f005 fc1d 	bl	8007c30 <osThreadNew>
 80023f6:	4b13      	ldr	r3, [pc, #76]	@ (8002444 <main+0x448>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80023f8:	4a13      	ldr	r2, [pc, #76]	@ (8002448 <main+0x44c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80023fa:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80023fc:	4621      	mov	r1, r4
 80023fe:	4813      	ldr	r0, [pc, #76]	@ (800244c <main+0x450>)
 8002400:	f005 fc16 	bl	8007c30 <osThreadNew>
 8002404:	4b12      	ldr	r3, [pc, #72]	@ (8002450 <main+0x454>)
  mouseTaskHandle = osThreadNew(mouseProcessingTask, NULL, &mouseTask_attributes);
 8002406:	4a13      	ldr	r2, [pc, #76]	@ (8002454 <main+0x458>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002408:	6018      	str	r0, [r3, #0]
  mouseTaskHandle = osThreadNew(mouseProcessingTask, NULL, &mouseTask_attributes);
 800240a:	4621      	mov	r1, r4
 800240c:	4812      	ldr	r0, [pc, #72]	@ (8002458 <main+0x45c>)
 800240e:	f005 fc0f 	bl	8007c30 <osThreadNew>
 8002412:	4b12      	ldr	r3, [pc, #72]	@ (800245c <main+0x460>)
 8002414:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8002416:	f005 fbf1 	bl	8007bfc <osKernelStart>
  while (1)
 800241a:	e7fe      	b.n	800241a <main+0x41e>
 800241c:	200030f0 	.word	0x200030f0
 8002420:	4002b000 	.word	0x4002b000
 8002424:	40011000 	.word	0x40011000
 8002428:	20002f54 	.word	0x20002f54
 800242c:	08025710 	.word	0x08025710
 8002430:	20002f14 	.word	0x20002f14
 8002434:	080256f8 	.word	0x080256f8
 8002438:	20002f10 	.word	0x20002f10
 800243c:	0802574c 	.word	0x0802574c
 8002440:	08001f59 	.word	0x08001f59
 8002444:	20002f1c 	.word	0x20002f1c
 8002448:	08025728 	.word	0x08025728
 800244c:	08000a97 	.word	0x08000a97
 8002450:	20002f18 	.word	0x20002f18
 8002454:	080256d4 	.word	0x080256d4
 8002458:	08001e35 	.word	0x08001e35
 800245c:	20002f0c 	.word	0x20002f0c

08002460 <enqueueMouseEvent>:
{
 8002460:	b530      	push	{r4, r5, lr}
    if(mouseEventQueueHandle == NULL) return false;
 8002462:	4d0d      	ldr	r5, [pc, #52]	@ (8002498 <enqueueMouseEvent+0x38>)
{
 8002464:	4603      	mov	r3, r0
    if(mouseEventQueueHandle == NULL) return false;
 8002466:	6828      	ldr	r0, [r5, #0]
{
 8002468:	b085      	sub	sp, #20
 800246a:	4614      	mov	r4, r2
    if(mouseEventQueueHandle == NULL) return false;
 800246c:	b188      	cbz	r0, 8002492 <enqueueMouseEvent+0x32>
    event.deltaX = deltaX;
 800246e:	f88d 3004 	strb.w	r3, [sp, #4]
    event.deltaY = deltaY;
 8002472:	f88d 1005 	strb.w	r1, [sp, #5]
    event.timestamp = HAL_GetTick();
 8002476:	f001 fe1d 	bl	80040b4 <HAL_GetTick>
    return osMessageQueuePut(mouseEventQueueHandle, &event, 0, 0) == osOK;
 800247a:	2300      	movs	r3, #0
    event.timestamp = HAL_GetTick();
 800247c:	9002      	str	r0, [sp, #8]
    return osMessageQueuePut(mouseEventQueueHandle, &event, 0, 0) == osOK;
 800247e:	461a      	mov	r2, r3
 8002480:	6828      	ldr	r0, [r5, #0]
    event.eventType = eventType;
 8002482:	f88d 400c 	strb.w	r4, [sp, #12]
    return osMessageQueuePut(mouseEventQueueHandle, &event, 0, 0) == osOK;
 8002486:	a901      	add	r1, sp, #4
 8002488:	f005 fd27 	bl	8007eda <osMessageQueuePut>
 800248c:	fab0 f080 	clz	r0, r0
 8002490:	0940      	lsrs	r0, r0, #5
}
 8002492:	b005      	add	sp, #20
 8002494:	bd30      	pop	{r4, r5, pc}
 8002496:	bf00      	nop
 8002498:	20002f10 	.word	0x20002f10

0800249c <IOE_Init>:
void IOE_Init(void)
 800249c:	4770      	bx	lr

0800249e <IOE_ITConfig>:
void IOE_ITConfig(void)
 800249e:	4770      	bx	lr

080024a0 <IOE_Write>:
{
 80024a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80024a2:	4b09      	ldr	r3, [pc, #36]	@ (80024c8 <IOE_Write+0x28>)
 80024a4:	f88d 2017 	strb.w	r2, [sp, #23]
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	9302      	str	r3, [sp, #8]
 80024ac:	f10d 0217 	add.w	r2, sp, #23
 80024b0:	2301      	movs	r3, #1
 80024b2:	9200      	str	r2, [sp, #0]
 80024b4:	9301      	str	r3, [sp, #4]
 80024b6:	460a      	mov	r2, r1
 80024b8:	4601      	mov	r1, r0
 80024ba:	4804      	ldr	r0, [pc, #16]	@ (80024cc <IOE_Write+0x2c>)
 80024bc:	f002 fb10 	bl	8004ae0 <HAL_I2C_Mem_Write>
}
 80024c0:	b007      	add	sp, #28
 80024c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80024c6:	bf00      	nop
 80024c8:	20000060 	.word	0x20000060
 80024cc:	2000309c 	.word	0x2000309c

080024d0 <IOE_Read>:
{
 80024d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80024d2:	2300      	movs	r3, #0
 80024d4:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80024d8:	4b08      	ldr	r3, [pc, #32]	@ (80024fc <IOE_Read+0x2c>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	9302      	str	r3, [sp, #8]
{
 80024de:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80024e0:	2301      	movs	r3, #1
 80024e2:	f10d 0117 	add.w	r1, sp, #23
 80024e6:	9100      	str	r1, [sp, #0]
 80024e8:	9301      	str	r3, [sp, #4]
 80024ea:	4601      	mov	r1, r0
 80024ec:	4804      	ldr	r0, [pc, #16]	@ (8002500 <IOE_Read+0x30>)
 80024ee:	f002 fb87 	bl	8004c00 <HAL_I2C_Mem_Read>
}
 80024f2:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80024f6:	b007      	add	sp, #28
 80024f8:	f85d fb04 	ldr.w	pc, [sp], #4
 80024fc:	20000060 	.word	0x20000060
 8002500:	2000309c 	.word	0x2000309c

08002504 <IOE_ReadMultiple>:
{
 8002504:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8002506:	4c08      	ldr	r4, [pc, #32]	@ (8002528 <IOE_ReadMultiple+0x24>)
 8002508:	6824      	ldr	r4, [r4, #0]
 800250a:	9200      	str	r2, [sp, #0]
 800250c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002510:	460a      	mov	r2, r1
 8002512:	2301      	movs	r3, #1
 8002514:	4601      	mov	r1, r0
 8002516:	4805      	ldr	r0, [pc, #20]	@ (800252c <IOE_ReadMultiple+0x28>)
 8002518:	f002 fb72 	bl	8004c00 <HAL_I2C_Mem_Read>
}
 800251c:	3800      	subs	r0, #0
 800251e:	bf18      	it	ne
 8002520:	2001      	movne	r0, #1
 8002522:	b004      	add	sp, #16
 8002524:	bd10      	pop	{r4, pc}
 8002526:	bf00      	nop
 8002528:	20000060 	.word	0x20000060
 800252c:	2000309c 	.word	0x2000309c

08002530 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8002530:	f001 bdc6 	b.w	80040c0 <HAL_Delay>

08002534 <LCD_IO_Init>:
{
 8002534:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002536:	4c06      	ldr	r4, [pc, #24]	@ (8002550 <LCD_IO_Init+0x1c>)
 8002538:	2200      	movs	r2, #0
 800253a:	4620      	mov	r0, r4
 800253c:	2104      	movs	r1, #4
 800253e:	f002 f819 	bl	8004574 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002542:	4620      	mov	r0, r4
 8002544:	2201      	movs	r2, #1
}
 8002546:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800254a:	2104      	movs	r1, #4
 800254c:	f002 b812 	b.w	8004574 <HAL_GPIO_WritePin>
 8002550:	40020800 	.word	0x40020800

08002554 <LCD_IO_WriteData>:
{
 8002554:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002556:	4d0b      	ldr	r5, [pc, #44]	@ (8002584 <LCD_IO_WriteData+0x30>)
{
 8002558:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800255a:	2201      	movs	r2, #1
 800255c:	480a      	ldr	r0, [pc, #40]	@ (8002588 <LCD_IO_WriteData+0x34>)
 800255e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002562:	f002 f807 	bl	8004574 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002566:	2200      	movs	r2, #0
 8002568:	2104      	movs	r1, #4
 800256a:	4628      	mov	r0, r5
 800256c:	f002 f802 	bl	8004574 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002570:	4620      	mov	r0, r4
 8002572:	f7ff fc4d 	bl	8001e10 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002576:	4628      	mov	r0, r5
 8002578:	2201      	movs	r2, #1
}
 800257a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800257e:	2104      	movs	r1, #4
 8002580:	f001 bff8 	b.w	8004574 <HAL_GPIO_WritePin>
 8002584:	40020800 	.word	0x40020800
 8002588:	40020c00 	.word	0x40020c00

0800258c <LCD_IO_WriteReg>:
{
 800258c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800258e:	4d0b      	ldr	r5, [pc, #44]	@ (80025bc <LCD_IO_WriteReg+0x30>)
{
 8002590:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002592:	2200      	movs	r2, #0
 8002594:	480a      	ldr	r0, [pc, #40]	@ (80025c0 <LCD_IO_WriteReg+0x34>)
 8002596:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800259a:	f001 ffeb 	bl	8004574 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800259e:	2200      	movs	r2, #0
 80025a0:	2104      	movs	r1, #4
 80025a2:	4628      	mov	r0, r5
 80025a4:	f001 ffe6 	bl	8004574 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80025a8:	4620      	mov	r0, r4
 80025aa:	f7ff fc31 	bl	8001e10 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80025ae:	4628      	mov	r0, r5
 80025b0:	2201      	movs	r2, #1
}
 80025b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80025b6:	2104      	movs	r1, #4
 80025b8:	f001 bfdc 	b.w	8004574 <HAL_GPIO_WritePin>
 80025bc:	40020800 	.word	0x40020800
 80025c0:	40020c00 	.word	0x40020c00

080025c4 <LCD_IO_ReadData>:
{
 80025c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80025c6:	4e14      	ldr	r6, [pc, #80]	@ (8002618 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80025c8:	4f14      	ldr	r7, [pc, #80]	@ (800261c <LCD_IO_ReadData+0x58>)
{
 80025ca:	4605      	mov	r5, r0
 80025cc:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80025ce:	4630      	mov	r0, r6
 80025d0:	2200      	movs	r2, #0
 80025d2:	2104      	movs	r1, #4
 80025d4:	f001 ffce 	bl	8004574 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80025d8:	2200      	movs	r2, #0
 80025da:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80025de:	4638      	mov	r0, r7
 80025e0:	f001 ffc8 	bl	8004574 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80025e4:	4628      	mov	r0, r5
 80025e6:	f7ff fc13 	bl	8001e10 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80025ea:	4b0d      	ldr	r3, [pc, #52]	@ (8002620 <LCD_IO_ReadData+0x5c>)
 80025ec:	480d      	ldr	r0, [pc, #52]	@ (8002624 <LCD_IO_ReadData+0x60>)
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	4622      	mov	r2, r4
 80025f2:	a901      	add	r1, sp, #4
 80025f4:	f004 f9fa 	bl	80069ec <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80025f8:	4638      	mov	r0, r7
 80025fa:	2201      	movs	r2, #1
 80025fc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8002600:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002602:	f001 ffb7 	bl	8004574 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002606:	4630      	mov	r0, r6
 8002608:	2201      	movs	r2, #1
 800260a:	2104      	movs	r1, #4
 800260c:	f001 ffb2 	bl	8004574 <HAL_GPIO_WritePin>
}
 8002610:	4620      	mov	r0, r4
 8002612:	b003      	add	sp, #12
 8002614:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002616:	bf00      	nop
 8002618:	40020800 	.word	0x40020800
 800261c:	40020c00 	.word	0x40020c00
 8002620:	2000005c 	.word	0x2000005c
 8002624:	20002f9c 	.word	0x20002f9c

08002628 <LCD_Delay>:
  HAL_Delay(Delay);
 8002628:	f001 bd4a 	b.w	80040c0 <HAL_Delay>

0800262c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 800262c:	6802      	ldr	r2, [r0, #0]
 800262e:	4b03      	ldr	r3, [pc, #12]	@ (800263c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002630:	429a      	cmp	r2, r3
 8002632:	d101      	bne.n	8002638 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8002634:	f001 bd32 	b.w	800409c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002638:	4770      	bx	lr
 800263a:	bf00      	nop
 800263c:	40001000 	.word	0x40001000

08002640 <Error_Handler>:
void Error_Handler(void)
{  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

/* USER CODE END Error_Handler_Debug */
}
 8002640:	4770      	bx	lr
	...

08002644 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002644:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002646:	4b0e      	ldr	r3, [pc, #56]	@ (8002680 <HAL_MspInit+0x3c>)
 8002648:	2200      	movs	r2, #0
 800264a:	9200      	str	r2, [sp, #0]
 800264c:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800264e:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8002652:	6459      	str	r1, [r3, #68]	@ 0x44
 8002654:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002656:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 800265a:	9100      	str	r1, [sp, #0]
 800265c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800265e:	9201      	str	r2, [sp, #4]
 8002660:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8002662:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8002666:	6419      	str	r1, [r3, #64]	@ 0x40
 8002668:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800266a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800266e:	9301      	str	r3, [sp, #4]
 8002670:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002672:	210f      	movs	r1, #15
 8002674:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002678:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800267a:	f001 bd47 	b.w	800410c <HAL_NVIC_SetPriority>
 800267e:	bf00      	nop
 8002680:	40023800 	.word	0x40023800

08002684 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002684:	6802      	ldr	r2, [r0, #0]
 8002686:	4b09      	ldr	r3, [pc, #36]	@ (80026ac <HAL_CRC_MspInit+0x28>)
 8002688:	429a      	cmp	r2, r3
{
 800268a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800268c:	d10b      	bne.n	80026a6 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800268e:	2300      	movs	r3, #0
 8002690:	9301      	str	r3, [sp, #4]
 8002692:	4b07      	ldr	r3, [pc, #28]	@ (80026b0 <HAL_CRC_MspInit+0x2c>)
 8002694:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002696:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800269a:	631a      	str	r2, [r3, #48]	@ 0x30
 800269c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800269e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80026a2:	9301      	str	r3, [sp, #4]
 80026a4:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 80026a6:	b002      	add	sp, #8
 80026a8:	4770      	bx	lr
 80026aa:	bf00      	nop
 80026ac:	40023000 	.word	0x40023000
 80026b0:	40023800 	.word	0x40023800

080026b4 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80026b4:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80026b6:	4b0f      	ldr	r3, [pc, #60]	@ (80026f4 <HAL_DMA2D_MspInit+0x40>)
 80026b8:	6802      	ldr	r2, [r0, #0]
 80026ba:	429a      	cmp	r2, r3
 80026bc:	d116      	bne.n	80026ec <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80026be:	2200      	movs	r2, #0
 80026c0:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 80026c4:	9201      	str	r2, [sp, #4]
 80026c6:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80026c8:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 80026cc:	6319      	str	r1, [r3, #48]	@ 0x30
 80026ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026d0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80026d4:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80026d6:	2105      	movs	r1, #5
 80026d8:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80026da:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80026dc:	f001 fd16 	bl	800410c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80026e0:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 80026e2:	b003      	add	sp, #12
 80026e4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80026e8:	f001 bd42 	b.w	8004170 <HAL_NVIC_EnableIRQ>
}
 80026ec:	b003      	add	sp, #12
 80026ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80026f2:	bf00      	nop
 80026f4:	4002b000 	.word	0x4002b000

080026f8 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80026f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80026fc:	4604      	mov	r4, r0
 80026fe:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002700:	2214      	movs	r2, #20
 8002702:	2100      	movs	r1, #0
 8002704:	a803      	add	r0, sp, #12
 8002706:	f021 f870 	bl	80237ea <memset>
  if(hi2c->Instance==I2C3)
 800270a:	6822      	ldr	r2, [r4, #0]
 800270c:	4b24      	ldr	r3, [pc, #144]	@ (80027a0 <HAL_I2C_MspInit+0xa8>)
 800270e:	429a      	cmp	r2, r3
 8002710:	d143      	bne.n	800279a <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002712:	4c24      	ldr	r4, [pc, #144]	@ (80027a4 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002714:	4824      	ldr	r0, [pc, #144]	@ (80027a8 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002716:	2500      	movs	r5, #0
 8002718:	9500      	str	r5, [sp, #0]
 800271a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800271c:	f043 0304 	orr.w	r3, r3, #4
 8002720:	6323      	str	r3, [r4, #48]	@ 0x30
 8002722:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002724:	f003 0304 	and.w	r3, r3, #4
 8002728:	9300      	str	r3, [sp, #0]
 800272a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800272c:	9501      	str	r5, [sp, #4]
 800272e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002730:	f043 0301 	orr.w	r3, r3, #1
 8002734:	6323      	str	r3, [r4, #48]	@ 0x30
 8002736:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002738:	f003 0301 	and.w	r3, r3, #1
 800273c:	9301      	str	r3, [sp, #4]
 800273e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002740:	f04f 0912 	mov.w	r9, #18
 8002744:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002748:	f04f 0801 	mov.w	r8, #1
 800274c:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800274e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002750:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002752:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002756:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800275a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800275c:	f001 fe20 	bl	80043a0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002760:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002764:	4811      	ldr	r0, [pc, #68]	@ (80027ac <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002766:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002768:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800276a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800276e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002772:	f001 fe15 	bl	80043a0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002776:	9502      	str	r5, [sp, #8]
 8002778:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800277a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800277e:	6423      	str	r3, [r4, #64]	@ 0x40
 8002780:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002782:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002786:	9302      	str	r3, [sp, #8]
 8002788:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800278a:	6a23      	ldr	r3, [r4, #32]
 800278c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002790:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002792:	6a23      	ldr	r3, [r4, #32]
 8002794:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002798:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 800279a:	b009      	add	sp, #36	@ 0x24
 800279c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80027a0:	40005c00 	.word	0x40005c00
 80027a4:	40023800 	.word	0x40023800
 80027a8:	40020800 	.word	0x40020800
 80027ac:	40020000 	.word	0x40020000

080027b0 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80027b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80027b2:	b099      	sub	sp, #100	@ 0x64
 80027b4:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027b6:	2214      	movs	r2, #20
 80027b8:	2100      	movs	r1, #0
 80027ba:	a807      	add	r0, sp, #28
 80027bc:	f021 f815 	bl	80237ea <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80027c0:	2230      	movs	r2, #48	@ 0x30
 80027c2:	eb0d 0002 	add.w	r0, sp, r2
 80027c6:	2100      	movs	r1, #0
 80027c8:	f021 f80f 	bl	80237ea <memset>
  if(hltdc->Instance==LTDC)
 80027cc:	6822      	ldr	r2, [r4, #0]
 80027ce:	4b5e      	ldr	r3, [pc, #376]	@ (8002948 <HAL_LTDC_MspInit+0x198>)
 80027d0:	429a      	cmp	r2, r3
 80027d2:	f040 80b7 	bne.w	8002944 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80027d6:	2308      	movs	r3, #8
 80027d8:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80027da:	23c0      	movs	r3, #192	@ 0xc0
 80027dc:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80027de:	2304      	movs	r3, #4
 80027e0:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80027e2:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80027e4:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80027e8:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80027ea:	f003 fcaf 	bl	800614c <HAL_RCCEx_PeriphCLKConfig>
 80027ee:	b108      	cbz	r0, 80027f4 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 80027f0:	f7ff ff26 	bl	8002640 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80027f4:	4b55      	ldr	r3, [pc, #340]	@ (800294c <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027f6:	4856      	ldr	r0, [pc, #344]	@ (8002950 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80027f8:	2400      	movs	r4, #0
 80027fa:	9400      	str	r4, [sp, #0]
 80027fc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80027fe:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002802:	645a      	str	r2, [r3, #68]	@ 0x44
 8002804:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002806:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 800280a:	9200      	str	r2, [sp, #0]
 800280c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800280e:	9401      	str	r4, [sp, #4]
 8002810:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002812:	f042 0220 	orr.w	r2, r2, #32
 8002816:	631a      	str	r2, [r3, #48]	@ 0x30
 8002818:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800281a:	f002 0220 	and.w	r2, r2, #32
 800281e:	9201      	str	r2, [sp, #4]
 8002820:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002822:	9402      	str	r4, [sp, #8]
 8002824:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002826:	f042 0201 	orr.w	r2, r2, #1
 800282a:	631a      	str	r2, [r3, #48]	@ 0x30
 800282c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800282e:	f002 0201 	and.w	r2, r2, #1
 8002832:	9202      	str	r2, [sp, #8]
 8002834:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002836:	9403      	str	r4, [sp, #12]
 8002838:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800283a:	f042 0202 	orr.w	r2, r2, #2
 800283e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002840:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002842:	f002 0202 	and.w	r2, r2, #2
 8002846:	9203      	str	r2, [sp, #12]
 8002848:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800284a:	9404      	str	r4, [sp, #16]
 800284c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800284e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002852:	631a      	str	r2, [r3, #48]	@ 0x30
 8002854:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002856:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800285a:	9204      	str	r2, [sp, #16]
 800285c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800285e:	9405      	str	r4, [sp, #20]
 8002860:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002862:	f042 0204 	orr.w	r2, r2, #4
 8002866:	631a      	str	r2, [r3, #48]	@ 0x30
 8002868:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800286a:	f002 0204 	and.w	r2, r2, #4
 800286e:	9205      	str	r2, [sp, #20]
 8002870:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002872:	9406      	str	r4, [sp, #24]
 8002874:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002876:	f042 0208 	orr.w	r2, r2, #8
 800287a:	631a      	str	r2, [r3, #48]	@ 0x30
 800287c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800287e:	f003 0308 	and.w	r3, r3, #8
 8002882:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002884:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002886:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002888:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800288a:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800288c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002890:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002892:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002896:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800289a:	f001 fd81 	bl	80043a0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800289e:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028a2:	482c      	ldr	r0, [pc, #176]	@ (8002954 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028a4:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028a6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028a8:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80028ac:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028ae:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028b2:	f001 fd75 	bl	80043a0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80028b6:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028b8:	4827      	ldr	r0, [pc, #156]	@ (8002958 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80028ba:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028bc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028be:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028c2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028c6:	f001 fd6b 	bl	80043a0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80028ca:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028ce:	4822      	ldr	r0, [pc, #136]	@ (8002958 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028d0:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028d2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028d4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028d8:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028dc:	f001 fd60 	bl	80043a0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80028e0:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028e4:	481d      	ldr	r0, [pc, #116]	@ (800295c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028e6:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028e8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028ea:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028ee:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028f2:	f001 fd55 	bl	80043a0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80028f6:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028f8:	4819      	ldr	r0, [pc, #100]	@ (8002960 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028fa:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028fc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028fe:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002902:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002906:	f001 fd4b 	bl	80043a0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800290a:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800290c:	4815      	ldr	r0, [pc, #84]	@ (8002964 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800290e:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002910:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002912:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002916:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800291a:	f001 fd41 	bl	80043a0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800291e:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002922:	480e      	ldr	r0, [pc, #56]	@ (800295c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002924:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002926:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002928:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800292c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002930:	f001 fd36 	bl	80043a0 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002934:	2058      	movs	r0, #88	@ 0x58
 8002936:	4622      	mov	r2, r4
 8002938:	2105      	movs	r1, #5
 800293a:	f001 fbe7 	bl	800410c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800293e:	2058      	movs	r0, #88	@ 0x58
 8002940:	f001 fc16 	bl	8004170 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002944:	b019      	add	sp, #100	@ 0x64
 8002946:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002948:	40016800 	.word	0x40016800
 800294c:	40023800 	.word	0x40023800
 8002950:	40021400 	.word	0x40021400
 8002954:	40020000 	.word	0x40020000
 8002958:	40020400 	.word	0x40020400
 800295c:	40021800 	.word	0x40021800
 8002960:	40020800 	.word	0x40020800
 8002964:	40020c00 	.word	0x40020c00

08002968 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002968:	b510      	push	{r4, lr}
 800296a:	4604      	mov	r4, r0
 800296c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800296e:	2214      	movs	r2, #20
 8002970:	2100      	movs	r1, #0
 8002972:	a803      	add	r0, sp, #12
 8002974:	f020 ff39 	bl	80237ea <memset>
  if(hspi->Instance==SPI5)
 8002978:	6822      	ldr	r2, [r4, #0]
 800297a:	4b14      	ldr	r3, [pc, #80]	@ (80029cc <HAL_SPI_MspInit+0x64>)
 800297c:	429a      	cmp	r2, r3
 800297e:	d123      	bne.n	80029c8 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002980:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002984:	2100      	movs	r1, #0
 8002986:	9101      	str	r1, [sp, #4]
 8002988:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800298a:	4811      	ldr	r0, [pc, #68]	@ (80029d0 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 800298c:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002990:	645a      	str	r2, [r3, #68]	@ 0x44
 8002992:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002994:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002998:	9201      	str	r2, [sp, #4]
 800299a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800299c:	9102      	str	r1, [sp, #8]
 800299e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80029a0:	f042 0220 	orr.w	r2, r2, #32
 80029a4:	631a      	str	r2, [r3, #48]	@ 0x30
 80029a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80029a8:	f003 0320 	and.w	r3, r3, #32
 80029ac:	9302      	str	r3, [sp, #8]
 80029ae:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029b0:	f44f 7260 	mov.w	r2, #896	@ 0x380
 80029b4:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80029b6:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029b8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80029bc:	2305      	movs	r3, #5
 80029be:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80029c2:	a903      	add	r1, sp, #12
 80029c4:	f001 fcec 	bl	80043a0 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 80029c8:	b008      	add	sp, #32
 80029ca:	bd10      	pop	{r4, pc}
 80029cc:	40015000 	.word	0x40015000
 80029d0:	40021400 	.word	0x40021400

080029d4 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80029d4:	b510      	push	{r4, lr}
 80029d6:	4604      	mov	r4, r0
 80029d8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029da:	2214      	movs	r2, #20
 80029dc:	2100      	movs	r1, #0
 80029de:	a803      	add	r0, sp, #12
 80029e0:	f020 ff03 	bl	80237ea <memset>
  if(huart->Instance==USART1)
 80029e4:	6822      	ldr	r2, [r4, #0]
 80029e6:	4b14      	ldr	r3, [pc, #80]	@ (8002a38 <HAL_UART_MspInit+0x64>)
 80029e8:	429a      	cmp	r2, r3
 80029ea:	d123      	bne.n	8002a34 <HAL_UART_MspInit+0x60>
  {
    /* USER CODE BEGIN USART1_MspInit 0 */

    /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80029ec:	f503 3394 	add.w	r3, r3, #75776	@ 0x12800
 80029f0:	2100      	movs	r1, #0
 80029f2:	9101      	str	r1, [sp, #4]
 80029f4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029f6:	4811      	ldr	r0, [pc, #68]	@ (8002a3c <HAL_UART_MspInit+0x68>)
    __HAL_RCC_USART1_CLK_ENABLE();
 80029f8:	f042 0210 	orr.w	r2, r2, #16
 80029fc:	645a      	str	r2, [r3, #68]	@ 0x44
 80029fe:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002a00:	f002 0210 	and.w	r2, r2, #16
 8002a04:	9201      	str	r2, [sp, #4]
 8002a06:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a08:	9102      	str	r1, [sp, #8]
 8002a0a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002a0c:	f042 0201 	orr.w	r2, r2, #1
 8002a10:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a14:	f003 0301 	and.w	r3, r3, #1
 8002a18:	9302      	str	r3, [sp, #8]
 8002a1a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a1c:	f44f 62c0 	mov.w	r2, #1536	@ 0x600
 8002a20:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002a22:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a24:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002a28:	2307      	movs	r3, #7
 8002a2a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a2e:	a903      	add	r1, sp, #12
 8002a30:	f001 fcb6 	bl	80043a0 <HAL_GPIO_Init>

    /* USER CODE END USART1_MspInit 1 */

  }

}
 8002a34:	b008      	add	sp, #32
 8002a36:	bd10      	pop	{r4, pc}
 8002a38:	40011000 	.word	0x40011000
 8002a3c:	40020000 	.word	0x40020000

08002a40 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002a40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002a44:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002a46:	2300      	movs	r3, #0
 8002a48:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002a4a:	4b2b      	ldr	r3, [pc, #172]	@ (8002af8 <HAL_SDRAM_MspInit+0xb8>)
 8002a4c:	681c      	ldr	r4, [r3, #0]
 8002a4e:	2c00      	cmp	r4, #0
 8002a50:	d14f      	bne.n	8002af2 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8002a52:	f04f 0801 	mov.w	r8, #1
 8002a56:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a5a:	4b28      	ldr	r3, [pc, #160]	@ (8002afc <HAL_SDRAM_MspInit+0xbc>)
 8002a5c:	9400      	str	r4, [sp, #0]
 8002a5e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a60:	4827      	ldr	r0, [pc, #156]	@ (8002b00 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a62:	ea42 0208 	orr.w	r2, r2, r8
 8002a66:	639a      	str	r2, [r3, #56]	@ 0x38
 8002a68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002a6a:	ea03 0308 	and.w	r3, r3, r8
 8002a6e:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a70:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a72:	2603      	movs	r6, #3
 8002a74:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a76:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a78:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a7a:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8002a7e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a82:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a86:	f001 fc8b 	bl	80043a0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a8a:	481e      	ldr	r0, [pc, #120]	@ (8002b04 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a8c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a8e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a90:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a94:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a98:	f001 fc82 	bl	80043a0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002a9c:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002aa0:	4819      	ldr	r0, [pc, #100]	@ (8002b08 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002aa2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002aa4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002aa6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002aaa:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002aae:	f001 fc77 	bl	80043a0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002ab2:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002ab6:	4815      	ldr	r0, [pc, #84]	@ (8002b0c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ab8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002aba:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002abc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002ac0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002ac4:	f001 fc6c 	bl	80043a0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002ac8:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002acc:	4810      	ldr	r0, [pc, #64]	@ (8002b10 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ace:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ad0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ad2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002ad6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ada:	f001 fc61 	bl	80043a0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002ade:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002ae0:	480c      	ldr	r0, [pc, #48]	@ (8002b14 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ae2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002ae4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ae6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002aea:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002aee:	f001 fc57 	bl	80043a0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002af2:	b006      	add	sp, #24
 8002af4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002af8:	2000313c 	.word	0x2000313c
 8002afc:	40023800 	.word	0x40023800
 8002b00:	40021400 	.word	0x40021400
 8002b04:	40020800 	.word	0x40020800
 8002b08:	40021800 	.word	0x40021800
 8002b0c:	40021000 	.word	0x40021000
 8002b10:	40020c00 	.word	0x40020c00
 8002b14:	40020400 	.word	0x40020400

08002b18 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002b18:	b570      	push	{r4, r5, r6, lr}
 8002b1a:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002b1c:	2300      	movs	r3, #0
 8002b1e:	9302      	str	r3, [sp, #8]
 8002b20:	4b20      	ldr	r3, [pc, #128]	@ (8002ba4 <HAL_InitTick+0x8c>)
 8002b22:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002b24:	f042 0210 	orr.w	r2, r2, #16
 8002b28:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b2c:	f003 0310 	and.w	r3, r3, #16
 8002b30:	9302      	str	r3, [sp, #8]
{
 8002b32:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002b34:	a901      	add	r1, sp, #4
 8002b36:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002b38:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002b3a:	f003 fae9 	bl	8006110 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002b3e:	9b06      	ldr	r3, [sp, #24]
 8002b40:	bb4b      	cbnz	r3, 8002b96 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002b42:	f003 fac5 	bl	80060d0 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002b46:	4e18      	ldr	r6, [pc, #96]	@ (8002ba8 <HAL_InitTick+0x90>)
 8002b48:	4b18      	ldr	r3, [pc, #96]	@ (8002bac <HAL_InitTick+0x94>)
 8002b4a:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002b4c:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8002b50:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002b52:	4b17      	ldr	r3, [pc, #92]	@ (8002bb0 <HAL_InitTick+0x98>)
 8002b54:	fbb0 f3f3 	udiv	r3, r0, r3
 8002b58:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002b5a:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002b5c:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002b5e:	2300      	movs	r3, #0
 8002b60:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002b62:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002b64:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002b66:	f004 f90b 	bl	8006d80 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002b6a:	4604      	mov	r4, r0
 8002b6c:	b980      	cbnz	r0, 8002b90 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002b6e:	4630      	mov	r0, r6
 8002b70:	f003 ffe0 	bl	8006b34 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002b74:	4604      	mov	r4, r0
 8002b76:	b958      	cbnz	r0, 8002b90 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002b78:	2036      	movs	r0, #54	@ 0x36
 8002b7a:	f001 faf9 	bl	8004170 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002b7e:	2d0f      	cmp	r5, #15
 8002b80:	d80d      	bhi.n	8002b9e <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002b82:	4622      	mov	r2, r4
 8002b84:	4629      	mov	r1, r5
 8002b86:	2036      	movs	r0, #54	@ 0x36
 8002b88:	f001 fac0 	bl	800410c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002b8c:	4b09      	ldr	r3, [pc, #36]	@ (8002bb4 <HAL_InitTick+0x9c>)
 8002b8e:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002b90:	4620      	mov	r0, r4
 8002b92:	b008      	add	sp, #32
 8002b94:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002b96:	f003 fa9b 	bl	80060d0 <HAL_RCC_GetPCLK1Freq>
 8002b9a:	0040      	lsls	r0, r0, #1
 8002b9c:	e7d3      	b.n	8002b46 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002b9e:	2401      	movs	r4, #1
 8002ba0:	e7f6      	b.n	8002b90 <HAL_InitTick+0x78>
 8002ba2:	bf00      	nop
 8002ba4:	40023800 	.word	0x40023800
 8002ba8:	20003140 	.word	0x20003140
 8002bac:	40001000 	.word	0x40001000
 8002bb0:	000f4240 	.word	0x000f4240
 8002bb4:	200000cc 	.word	0x200000cc

08002bb8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002bb8:	4770      	bx	lr

08002bba <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002bba:	e7fe      	b.n	8002bba <HardFault_Handler>

08002bbc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002bbc:	e7fe      	b.n	8002bbc <MemManage_Handler>

08002bbe <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002bbe:	e7fe      	b.n	8002bbe <BusFault_Handler>

08002bc0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002bc0:	e7fe      	b.n	8002bc0 <UsageFault_Handler>

08002bc2 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8002bc2:	4770      	bx	lr

08002bc4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002bc4:	4801      	ldr	r0, [pc, #4]	@ (8002bcc <TIM6_DAC_IRQHandler+0x8>)
 8002bc6:	f003 bff3 	b.w	8006bb0 <HAL_TIM_IRQHandler>
 8002bca:	bf00      	nop
 8002bcc:	20003140 	.word	0x20003140

08002bd0 <OTG_HS_IRQHandler>:
void OTG_HS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 8002bd0:	4801      	ldr	r0, [pc, #4]	@ (8002bd8 <OTG_HS_IRQHandler+0x8>)
 8002bd2:	f002 bc95 	b.w	8005500 <HAL_PCD_IRQHandler>
 8002bd6:	bf00      	nop
 8002bd8:	20002a18 	.word	0x20002a18

08002bdc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002bdc:	4801      	ldr	r0, [pc, #4]	@ (8002be4 <LTDC_IRQHandler+0x8>)
 8002bde:	f002 ba28 	b.w	8005032 <HAL_LTDC_IRQHandler>
 8002be2:	bf00      	nop
 8002be4:	20002ff4 	.word	0x20002ff4

08002be8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002be8:	4801      	ldr	r0, [pc, #4]	@ (8002bf0 <DMA2D_IRQHandler+0x8>)
 8002bea:	f001 bb0b 	b.w	8004204 <HAL_DMA2D_IRQHandler>
 8002bee:	bf00      	nop
 8002bf0:	200030f0 	.word	0x200030f0

08002bf4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002bf4:	2001      	movs	r0, #1
 8002bf6:	4770      	bx	lr

08002bf8 <_kill>:

int _kill(int pid, int sig)
{
 8002bf8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002bfa:	f020 fef7 	bl	80239ec <__errno>
 8002bfe:	2316      	movs	r3, #22
 8002c00:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002c02:	f04f 30ff 	mov.w	r0, #4294967295
 8002c06:	bd08      	pop	{r3, pc}

08002c08 <_exit>:

void _exit (int status)
{
 8002c08:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002c0a:	f020 feef 	bl	80239ec <__errno>
 8002c0e:	2316      	movs	r3, #22
 8002c10:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002c12:	e7fe      	b.n	8002c12 <_exit+0xa>

08002c14 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002c14:	b570      	push	{r4, r5, r6, lr}
 8002c16:	460d      	mov	r5, r1
 8002c18:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c1a:	460e      	mov	r6, r1
 8002c1c:	1b73      	subs	r3, r6, r5
 8002c1e:	429c      	cmp	r4, r3
 8002c20:	dc01      	bgt.n	8002c26 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002c22:	4620      	mov	r0, r4
 8002c24:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002c26:	f3af 8000 	nop.w
 8002c2a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c2e:	e7f5      	b.n	8002c1c <_read+0x8>

08002c30 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002c30:	b570      	push	{r4, r5, r6, lr}
 8002c32:	460d      	mov	r5, r1
 8002c34:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c36:	460e      	mov	r6, r1
 8002c38:	1b73      	subs	r3, r6, r5
 8002c3a:	429c      	cmp	r4, r3
 8002c3c:	dc01      	bgt.n	8002c42 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002c3e:	4620      	mov	r0, r4
 8002c40:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002c42:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002c46:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c4a:	e7f5      	b.n	8002c38 <_write+0x8>

08002c4c <_close>:

int _close(int file)
{
	return -1;
}
 8002c4c:	f04f 30ff 	mov.w	r0, #4294967295
 8002c50:	4770      	bx	lr

08002c52 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002c52:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002c56:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002c58:	2000      	movs	r0, #0
 8002c5a:	4770      	bx	lr

08002c5c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002c5c:	2001      	movs	r0, #1
 8002c5e:	4770      	bx	lr

08002c60 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002c60:	2000      	movs	r0, #0
 8002c62:	4770      	bx	lr

08002c64 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002c64:	4a0a      	ldr	r2, [pc, #40]	@ (8002c90 <_sbrk+0x2c>)
 8002c66:	6811      	ldr	r1, [r2, #0]
{
 8002c68:	b508      	push	{r3, lr}
 8002c6a:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002c6c:	b909      	cbnz	r1, 8002c72 <_sbrk+0xe>
		heap_end = &end;
 8002c6e:	4909      	ldr	r1, [pc, #36]	@ (8002c94 <_sbrk+0x30>)
 8002c70:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002c72:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002c74:	4669      	mov	r1, sp
 8002c76:	4403      	add	r3, r0
 8002c78:	428b      	cmp	r3, r1
 8002c7a:	d906      	bls.n	8002c8a <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002c7c:	f020 feb6 	bl	80239ec <__errno>
 8002c80:	230c      	movs	r3, #12
 8002c82:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002c84:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002c88:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002c8a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002c8c:	e7fc      	b.n	8002c88 <_sbrk+0x24>
 8002c8e:	bf00      	nop
 8002c90:	20003188 	.word	0x20003188
 8002c94:	20014d80 	.word	0x20014d80

08002c98 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002c98:	4770      	bx	lr

08002c9a <_ZN23ApplicationFontProviderD0Ev>:
 8002c9a:	b510      	push	{r4, lr}
 8002c9c:	2104      	movs	r1, #4
 8002c9e:	4604      	mov	r4, r0
 8002ca0:	f01f fbe3 	bl	802246a <_ZdlPvj>
 8002ca4:	4620      	mov	r0, r4
 8002ca6:	bd10      	pop	{r4, pc}

08002ca8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002ca8:	2901      	cmp	r1, #1
{
 8002caa:	b508      	push	{r3, lr}
    switch (typography)
 8002cac:	d006      	beq.n	8002cbc <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002cae:	2902      	cmp	r1, #2
 8002cb0:	d008      	beq.n	8002cc4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002cb2:	b959      	cbnz	r1, 8002ccc <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002cb4:	f000 fb96 	bl	80033e4 <_ZN17TypedTextDatabase8getFontsEv>
 8002cb8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002cba:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002cbc:	f000 fb92 	bl	80033e4 <_ZN17TypedTextDatabase8getFontsEv>
 8002cc0:	6840      	ldr	r0, [r0, #4]
 8002cc2:	e7fa      	b.n	8002cba <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002cc4:	f000 fb8e 	bl	80033e4 <_ZN17TypedTextDatabase8getFontsEv>
 8002cc8:	6880      	ldr	r0, [r0, #8]
 8002cca:	e7f6      	b.n	8002cba <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002ccc:	2000      	movs	r0, #0
 8002cce:	e7f4      	b.n	8002cba <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002cd0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002cd0:	4800      	ldr	r0, [pc, #0]	@ (8002cd4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002cd2:	4770      	bx	lr
 8002cd4:	08025784 	.word	0x08025784

08002cd8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002cd8:	2001      	movs	r0, #1
 8002cda:	4770      	bx	lr

08002cdc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002cdc:	b513      	push	{r0, r1, r4, lr}
 8002cde:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002ce0:	b151      	cbz	r1, 8002cf8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002ce2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002ce4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002ce6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002cea:	aa01      	add	r2, sp, #4
 8002cec:	689c      	ldr	r4, [r3, #8]
 8002cee:	f10d 0303 	add.w	r3, sp, #3
 8002cf2:	47a0      	blx	r4
        return glyph;
    }
 8002cf4:	b002      	add	sp, #8
 8002cf6:	bd10      	pop	{r4, pc}
            return 0;
 8002cf8:	4608      	mov	r0, r1
 8002cfa:	e7fb      	b.n	8002cf4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002cfc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002cfc:	89c0      	ldrh	r0, [r0, #14]
 8002cfe:	4770      	bx	lr

08002d00 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002d00:	8a00      	ldrh	r0, [r0, #16]
 8002d02:	4770      	bx	lr

08002d04 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002d04:	88c0      	ldrh	r0, [r0, #6]
 8002d06:	4770      	bx	lr

08002d08 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002d08:	8880      	ldrh	r0, [r0, #4]
 8002d0a:	4770      	bx	lr

08002d0c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002d0c:	7a80      	ldrb	r0, [r0, #10]
    }
 8002d0e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002d12:	4770      	bx	lr

08002d14 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002d14:	7a80      	ldrb	r0, [r0, #10]
    }
 8002d16:	09c0      	lsrs	r0, r0, #7
 8002d18:	4770      	bx	lr

08002d1a <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002d1a:	2000      	movs	r0, #0
 8002d1c:	4770      	bx	lr
	...

08002d20 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002d20:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002d28 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002d24:	4770      	bx	lr
 8002d26:	bf00      	nop
 8002d28:	00000000 	.word	0x00000000

08002d2c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002d2c:	4770      	bx	lr

08002d2e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002d2e:	4770      	bx	lr

08002d30 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002d30:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002d34:	6808      	ldr	r0, [r1, #0]
 8002d36:	6849      	ldr	r1, [r1, #4]
 8002d38:	c303      	stmia	r3!, {r0, r1}
    }
 8002d3a:	4770      	bx	lr

08002d3c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002d3c:	4770      	bx	lr

08002d3e <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002d3e:	4770      	bx	lr

08002d40 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002d40:	6041      	str	r1, [r0, #4]
    }
 8002d42:	4770      	bx	lr

08002d44 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002d44:	4770      	bx	lr

08002d46 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002d46:	4770      	bx	lr

08002d48 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002d48:	4b06      	ldr	r3, [pc, #24]	@ (8002d64 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002d4a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002d4e:	2300      	movs	r3, #0
 8002d50:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002d54:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002d58:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002d5c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002d60:	4770      	bx	lr
 8002d62:	bf00      	nop
 8002d64:	08002e09 	.word	0x08002e09

08002d68 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002d68:	2301      	movs	r3, #1
 8002d6a:	7203      	strb	r3, [r0, #8]
    }
 8002d6c:	4770      	bx	lr

08002d6e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002d6e:	4770      	bx	lr

08002d70 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002d70:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002d72:	68c2      	ldr	r2, [r0, #12]
 8002d74:	6841      	ldr	r1, [r0, #4]
 8002d76:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002d78:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002d7a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002d7e:	07d2      	lsls	r2, r2, #31
 8002d80:	bf48      	it	mi
 8002d82:	590a      	ldrmi	r2, [r1, r4]
 8002d84:	689b      	ldr	r3, [r3, #8]
    }
 8002d86:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002d8a:	bf48      	it	mi
 8002d8c:	58d3      	ldrmi	r3, [r2, r3]
 8002d8e:	4718      	bx	r3

08002d90 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002d90:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002d92:	6840      	ldr	r0, [r0, #4]
 8002d94:	b130      	cbz	r0, 8002da4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002d96:	689a      	ldr	r2, [r3, #8]
 8002d98:	b91a      	cbnz	r2, 8002da2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002d9a:	68d8      	ldr	r0, [r3, #12]
 8002d9c:	f000 0001 	and.w	r0, r0, #1
 8002da0:	4770      	bx	lr
 8002da2:	2001      	movs	r0, #1
    }
 8002da4:	4770      	bx	lr

08002da6 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002da6:	b510      	push	{r4, lr}
 8002da8:	210c      	movs	r1, #12
 8002daa:	4604      	mov	r4, r0
 8002dac:	f01f fb5d 	bl	802246a <_ZdlPvj>
 8002db0:	4620      	mov	r0, r4
 8002db2:	bd10      	pop	{r4, pc}

08002db4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002db4:	b510      	push	{r4, lr}
 8002db6:	2110      	movs	r1, #16
 8002db8:	4604      	mov	r4, r0
 8002dba:	f01f fb56 	bl	802246a <_ZdlPvj>
 8002dbe:	4620      	mov	r0, r4
 8002dc0:	bd10      	pop	{r4, pc}

08002dc2 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002dc2:	b510      	push	{r4, lr}
 8002dc4:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002dc8:	4604      	mov	r4, r0
 8002dca:	f01f fb4e 	bl	802246a <_ZdlPvj>
 8002dce:	4620      	mov	r0, r4
 8002dd0:	bd10      	pop	{r4, pc}

08002dd2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002dd2:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002dd4:	f00d f8b4 	bl	800ff40 <_ZN8touchgfx11Application11getInstanceEv>
 8002dd8:	6803      	ldr	r3, [r0, #0]
    }
 8002dda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002dde:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002de0:	4718      	bx	r3

08002de2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002de2:	b510      	push	{r4, lr}
 8002de4:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002de6:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002dea:	b158      	cbz	r0, 8002e04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002dec:	6803      	ldr	r3, [r0, #0]
 8002dee:	68db      	ldr	r3, [r3, #12]
 8002df0:	4798      	blx	r3
 8002df2:	b138      	cbz	r0, 8002e04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002df4:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002df8:	6803      	ldr	r3, [r0, #0]
 8002dfa:	689b      	ldr	r3, [r3, #8]
 8002dfc:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002dfe:	2300      	movs	r3, #0
 8002e00:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8002e04:	bd10      	pop	{r4, pc}
	...

08002e08 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002e08:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002e0c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002e10:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002e12:	68b0      	ldr	r0, [r6, #8]
 8002e14:	6803      	ldr	r3, [r0, #0]
 8002e16:	6a1b      	ldr	r3, [r3, #32]
 8002e18:	4798      	blx	r3
 8002e1a:	f5b0 6f72 	cmp.w	r0, #3872	@ 0xf20
 8002e1e:	d205      	bcs.n	8002e2c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002e20:	4b44      	ldr	r3, [pc, #272]	@ (8002f34 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002e22:	4a45      	ldr	r2, [pc, #276]	@ (8002f38 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002e24:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002e26:	4845      	ldr	r0, [pc, #276]	@ (8002f3c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002e28:	f020 faa2 	bl	8023370 <__assert_func>
 8002e2c:	6870      	ldr	r0, [r6, #4]
 8002e2e:	6803      	ldr	r3, [r0, #0]
 8002e30:	6a1b      	ldr	r3, [r3, #32]
 8002e32:	4798      	blx	r3
 8002e34:	280f      	cmp	r0, #15
 8002e36:	d803      	bhi.n	8002e40 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002e38:	4b41      	ldr	r3, [pc, #260]	@ (8002f40 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002e3a:	4a3f      	ldr	r2, [pc, #252]	@ (8002f38 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002e3c:	21a4      	movs	r1, #164	@ 0xa4
 8002e3e:	e7f2      	b.n	8002e26 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002e40:	68f0      	ldr	r0, [r6, #12]
 8002e42:	6803      	ldr	r3, [r0, #0]
 8002e44:	6a1b      	ldr	r3, [r3, #32]
 8002e46:	4798      	blx	r3
 8002e48:	280b      	cmp	r0, #11
 8002e4a:	d803      	bhi.n	8002e54 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002e4c:	4b3d      	ldr	r3, [pc, #244]	@ (8002f44 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002e4e:	4a3a      	ldr	r2, [pc, #232]	@ (8002f38 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002e50:	21a5      	movs	r1, #165	@ 0xa5
 8002e52:	e7e8      	b.n	8002e26 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002e54:	f00d f874 	bl	800ff40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002e58:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002f4c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002e5c:	3004      	adds	r0, #4
 8002e5e:	f00d f894 	bl	800ff8a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002e62:	f8d9 0000 	ldr.w	r0, [r9]
 8002e66:	b110      	cbz	r0, 8002e6e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002e68:	6803      	ldr	r3, [r0, #0]
 8002e6a:	68db      	ldr	r3, [r3, #12]
 8002e6c:	4798      	blx	r3
    if (*currentTrans)
 8002e6e:	f8d9 0000 	ldr.w	r0, [r9]
 8002e72:	b110      	cbz	r0, 8002e7a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002e74:	6803      	ldr	r3, [r0, #0]
 8002e76:	681b      	ldr	r3, [r3, #0]
 8002e78:	4798      	blx	r3
    if (*currentScreen)
 8002e7a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002f50 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 8002e7e:	f8d8 0000 	ldr.w	r0, [r8]
 8002e82:	b110      	cbz	r0, 8002e8a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002e84:	6803      	ldr	r3, [r0, #0]
 8002e86:	695b      	ldr	r3, [r3, #20]
 8002e88:	4798      	blx	r3
    if (*currentPresenter)
 8002e8a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002e8e:	b110      	cbz	r0, 8002e96 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002e90:	6803      	ldr	r3, [r0, #0]
 8002e92:	685b      	ldr	r3, [r3, #4]
 8002e94:	4798      	blx	r3
    if (*currentScreen)
 8002e96:	f8d8 0000 	ldr.w	r0, [r8]
 8002e9a:	b110      	cbz	r0, 8002ea2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002e9c:	6803      	ldr	r3, [r0, #0]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	4798      	blx	r3
    if (*currentPresenter)
 8002ea2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002ea6:	b110      	cbz	r0, 8002eae <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002ea8:	6803      	ldr	r3, [r0, #0]
 8002eaa:	689b      	ldr	r3, [r3, #8]
 8002eac:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002eae:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002eb0:	6803      	ldr	r3, [r0, #0]
 8002eb2:	2100      	movs	r1, #0
 8002eb4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002eb6:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002eb8:	f04f 0b00 	mov.w	fp, #0
 8002ebc:	4b22      	ldr	r3, [pc, #136]	@ (8002f48 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002ebe:	f8c0 b004 	str.w	fp, [r0, #4]
 8002ec2:	4604      	mov	r4, r0
 8002ec4:	f880 b008 	strb.w	fp, [r0, #8]
 8002ec8:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002eca:	68b0      	ldr	r0, [r6, #8]
 8002ecc:	6803      	ldr	r3, [r0, #0]
 8002ece:	4659      	mov	r1, fp
 8002ed0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ed2:	4798      	blx	r3
 8002ed4:	4605      	mov	r5, r0
 8002ed6:	f000 fb1d 	bl	8003514 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002eda:	6870      	ldr	r0, [r6, #4]
 8002edc:	6803      	ldr	r3, [r0, #0]
 8002ede:	4659      	mov	r1, fp
 8002ee0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ee2:	4798      	blx	r3
 8002ee4:	4629      	mov	r1, r5
 8002ee6:	4606      	mov	r6, r0
 8002ee8:	f000 fac6 	bl	8003478 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002eec:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002eee:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002ef2:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002ef6:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002efa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002efe:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002f00:	f8c6 a008 	str.w	sl, [r6, #8]
 8002f04:	4628      	mov	r0, r5
 8002f06:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002f08:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002f0a:	4798      	blx	r3
    newPresenter->activate();
 8002f0c:	6833      	ldr	r3, [r6, #0]
 8002f0e:	4630      	mov	r0, r6
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002f14:	4621      	mov	r1, r4
 8002f16:	4628      	mov	r0, r5
 8002f18:	f00f fa4e 	bl	80123b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002f1c:	6823      	ldr	r3, [r4, #0]
 8002f1e:	4620      	mov	r0, r4
 8002f20:	691b      	ldr	r3, [r3, #16]
 8002f22:	4798      	blx	r3
    newTransition->invalidate();
 8002f24:	6823      	ldr	r3, [r4, #0]
 8002f26:	695b      	ldr	r3, [r3, #20]
 8002f28:	4620      	mov	r0, r4
}
 8002f2a:	b001      	add	sp, #4
 8002f2c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f30:	4718      	bx	r3
 8002f32:	bf00      	nop
 8002f34:	08024dc5 	.word	0x08024dc5
 8002f38:	08024e53 	.word	0x08024e53
 8002f3c:	08024f25 	.word	0x08024f25
 8002f40:	08024f6c 	.word	0x08024f6c
 8002f44:	0802500f 	.word	0x0802500f
 8002f48:	0802580c 	.word	0x0802580c
 8002f4c:	20014088 	.word	0x20014088
 8002f50:	20014084 	.word	0x20014084

08002f54 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002f54:	4b04      	ldr	r3, [pc, #16]	@ (8002f68 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002f5c:	b10a      	cbz	r2, 8002f62 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002f5e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002f60:	b900      	cbnz	r0, 8002f64 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002f62:	6898      	ldr	r0, [r3, #8]
    }
 8002f64:	4770      	bx	lr
 8002f66:	bf00      	nop
 8002f68:	20014040 	.word	0x20014040

08002f6c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002f6c:	b570      	push	{r4, r5, r6, lr}
 8002f6e:	4604      	mov	r4, r0
 8002f70:	460d      	mov	r5, r1
 8002f72:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8002f74:	f00d f8a6 	bl	80100c4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002f78:	4a10      	ldr	r2, [pc, #64]	@ (8002fbc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002f7a:	6014      	str	r4, [r2, #0]
      model(m)
 8002f7c:	4a10      	ldr	r2, [pc, #64]	@ (8002fc0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002f7e:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
 8002f80:	4a10      	ldr	r2, [pc, #64]	@ (8002fc4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002f82:	2300      	movs	r3, #0
 8002f84:	e9c4 2351 	strd	r2, r3, [r4, #324]	@ 0x144
 8002f88:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
          pendingScreenTransitionCallback(0)
 8002f8c:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
        return instance;
 8002f90:	4b0d      	ldr	r3, [pc, #52]	@ (8002fc8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002f92:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f94:	6803      	ldr	r3, [r0, #0]
 8002f96:	2101      	movs	r1, #1
 8002f98:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002f9a:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f9e:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002fa0:	f7ff ffd8 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 8002fa4:	f017 f97d 	bl	801a2a2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002fa8:	f7ff ffd4 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 8002fac:	f017 f9f4 	bl	801a398 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8002fb0:	f7ff ffd0 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 8002fb4:	f017 f9fc 	bl	801a3b0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8002fb8:	4620      	mov	r0, r4
 8002fba:	bd70      	pop	{r4, r5, r6, pc}
 8002fbc:	20014094 	.word	0x20014094
 8002fc0:	080257b8 	.word	0x080257b8
 8002fc4:	080257a0 	.word	0x080257a0
 8002fc8:	20014040 	.word	0x20014040

08002fcc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002fcc:	4b06      	ldr	r3, [pc, #24]	@ (8002fe8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002fce:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002fd2:	2300      	movs	r3, #0
 8002fd4:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002fd8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002fdc:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002fe0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002fe4:	4770      	bx	lr
 8002fe6:	bf00      	nop
 8002fe8:	08002e09 	.word	0x08002e09

08002fec <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002fec:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002fee:	4770      	bx	lr

08002ff0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002ff0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002ff2:	4770      	bx	lr

08002ff4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002ff4:	4770      	bx	lr

08002ff6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002ff6:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 8002ff8:	880b      	ldrh	r3, [r1, #0]
{
 8002ffa:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002ffc:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 8002ffe:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8003000:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8003002:	b29b      	uxth	r3, r3
    return pixels + offset;
 8003004:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 8003008:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 800300c:	4418      	add	r0, r3
 800300e:	bd10      	pop	{r4, pc}

08003010 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003010:	b510      	push	{r4, lr}
 8003012:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8003014:	b1ba      	cbz	r2, 8003046 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8003016:	7b10      	ldrb	r0, [r2, #12]
 8003018:	b168      	cbz	r0, 8003036 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800301a:	7b53      	ldrb	r3, [r2, #13]
 800301c:	7ad2      	ldrb	r2, [r2, #11]
 800301e:	021b      	lsls	r3, r3, #8
 8003020:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003024:	431a      	orrs	r2, r3
 8003026:	6a23      	ldr	r3, [r4, #32]
 8003028:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 800302c:	881a      	ldrh	r2, [r3, #0]
 800302e:	428a      	cmp	r2, r1
 8003030:	d102      	bne.n	8003038 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003032:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8003036:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8003038:	d805      	bhi.n	8003046 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800303a:	3801      	subs	r0, #1
 800303c:	b280      	uxth	r0, r0
 800303e:	3304      	adds	r3, #4
 8003040:	2800      	cmp	r0, #0
 8003042:	d1f3      	bne.n	800302c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003044:	e7f7      	b.n	8003036 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8003046:	2000      	movs	r0, #0
 8003048:	e7f5      	b.n	8003036 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800304a <_ZN8touchgfx13GeneratedFontD0Ev>:
 800304a:	b510      	push	{r4, lr}
 800304c:	212c      	movs	r1, #44	@ 0x2c
 800304e:	4604      	mov	r4, r0
 8003050:	f01f fa0b 	bl	802246a <_ZdlPvj>
 8003054:	4620      	mov	r0, r4
 8003056:	bd10      	pop	{r4, pc}

08003058 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8003058:	b530      	push	{r4, r5, lr}
 800305a:	b08b      	sub	sp, #44	@ 0x2c
 800305c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800305e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8003062:	9508      	str	r5, [sp, #32]
 8003064:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8003068:	9507      	str	r5, [sp, #28]
 800306a:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800306e:	9506      	str	r5, [sp, #24]
 8003070:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8003074:	9505      	str	r5, [sp, #20]
 8003076:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800307a:	9504      	str	r5, [sp, #16]
 800307c:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8003080:	9503      	str	r5, [sp, #12]
 8003082:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8003086:	9502      	str	r5, [sp, #8]
 8003088:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 800308c:	9501      	str	r5, [sp, #4]
 800308e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8003092:	9500      	str	r5, [sp, #0]
 8003094:	f00e fd5e 	bl	8011b54 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8003098:	4b06      	ldr	r3, [pc, #24]	@ (80030b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800309a:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 800309c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800309e:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80030a0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80030a2:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80030a4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80030a6:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80030a8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80030aa:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80030ac:	4620      	mov	r0, r4
 80030ae:	b00b      	add	sp, #44	@ 0x2c
 80030b0:	bd30      	pop	{r4, r5, pc}
 80030b2:	bf00      	nop
 80030b4:	08025830 	.word	0x08025830

080030b8 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80030b8:	4770      	bx	lr

080030ba <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80030ba:	4770      	bx	lr

080030bc <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80030bc:	4770      	bx	lr

080030be <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80030be:	4770      	bx	lr

080030c0 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80030c0:	4770      	bx	lr

080030c2 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 80030c2:	4770      	bx	lr

080030c4 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 80030c4:	4770      	bx	lr

080030c6 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 80030c6:	b510      	push	{r4, lr}
}
 80030c8:	216c      	movs	r1, #108	@ 0x6c
Screen1ViewBase::~Screen1ViewBase()
 80030ca:	4604      	mov	r4, r0
}
 80030cc:	f01f f9cd 	bl	802246a <_ZdlPvj>
 80030d0:	4620      	mov	r0, r4
 80030d2:	bd10      	pop	{r4, pc}

080030d4 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 80030d4:	b538      	push	{r3, r4, r5, lr}
 80030d6:	4604      	mov	r4, r0
        : presenter(0)
 80030d8:	f00e ffc2 	bl	8012060 <_ZN8touchgfx6ScreenC1Ev>
 80030dc:	2300      	movs	r3, #0
 80030de:	e9c4 3311 	strd	r3, r3, [r4, #68]	@ 0x44
 80030e2:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
          nextSibling(0),
 80030e6:	e9c4 3315 	strd	r3, r3, [r4, #84]	@ 0x54
          cachedAbsX(0),
 80030ea:	e9c4 3317 	strd	r3, r3, [r4, #92]	@ 0x5c
 80030ee:	63e3      	str	r3, [r4, #60]	@ 0x3c
        : color(col)
 80030f0:	66a3      	str	r3, [r4, #104]	@ 0x68
 80030f2:	4a0f      	ldr	r2, [pc, #60]	@ (8003130 <_ZN15Screen1ViewBaseC1Ev+0x5c>)
 80030f4:	6022      	str	r2, [r4, #0]
          touchable(false),
 80030f6:	f44f 7380 	mov.w	r3, #256	@ 0x100
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80030fa:	4a0e      	ldr	r2, [pc, #56]	@ (8003134 <_ZN15Screen1ViewBaseC1Ev+0x60>)
 80030fc:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
    __background.setPosition(0, 0, 240, 320);
 8003100:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8003104:	23ff      	movs	r3, #255	@ 0xff
 8003106:	6422      	str	r2, [r4, #64]	@ 0x40
 8003108:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
        setWidth(width);
 800310c:	4628      	mov	r0, r5
 800310e:	21f0      	movs	r1, #240	@ 0xf0
 8003110:	f7fe fafc 	bl	800170c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003114:	4628      	mov	r0, r5
 8003116:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800311a:	f7fe faf9 	bl	8001710 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800311e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003122:	1d20      	adds	r0, r4, #4
 8003124:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003126:	4629      	mov	r1, r5
 8003128:	f007 fc7c 	bl	800aa24 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800312c:	4620      	mov	r0, r4
 800312e:	bd38      	pop	{r3, r4, r5, pc}
 8003130:	08025898 	.word	0x08025898
 8003134:	08025cf0 	.word	0x08025cf0

08003138 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003138:	4770      	bx	lr
	...

0800313c <_Z23getFont_verdana_10_4bppv>:
{
 800313c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800313e:	4d16      	ldr	r5, [pc, #88]	@ (8003198 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8003140:	682c      	ldr	r4, [r5, #0]
 8003142:	f014 0401 	ands.w	r4, r4, #1
{
 8003146:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003148:	f3bf 8f5b 	dmb	ish
 800314c:	d120      	bne.n	8003190 <_Z23getFont_verdana_10_4bppv+0x54>
 800314e:	4628      	mov	r0, r5
 8003150:	f01f f98d 	bl	802246e <__cxa_guard_acquire>
 8003154:	b1e0      	cbz	r0, 8003190 <_Z23getFont_verdana_10_4bppv+0x54>
 8003156:	233f      	movs	r3, #63	@ 0x3f
 8003158:	9309      	str	r3, [sp, #36]	@ 0x24
 800315a:	4b10      	ldr	r3, [pc, #64]	@ (800319c <_Z23getFont_verdana_10_4bppv+0x60>)
 800315c:	9308      	str	r3, [sp, #32]
 800315e:	4b10      	ldr	r3, [pc, #64]	@ (80031a0 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003160:	4910      	ldr	r1, [pc, #64]	@ (80031a4 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003162:	4811      	ldr	r0, [pc, #68]	@ (80031a8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003164:	940a      	str	r4, [sp, #40]	@ 0x28
 8003166:	2201      	movs	r2, #1
 8003168:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800316c:	2304      	movs	r3, #4
 800316e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003172:	230a      	movs	r3, #10
 8003174:	9300      	str	r3, [sp, #0]
 8003176:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800317a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800317e:	9405      	str	r4, [sp, #20]
 8003180:	f7ff ff6a 	bl	8003058 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003184:	4809      	ldr	r0, [pc, #36]	@ (80031ac <_Z23getFont_verdana_10_4bppv+0x70>)
 8003186:	f020 f911 	bl	80233ac <atexit>
 800318a:	4628      	mov	r0, r5
 800318c:	f01f f97b 	bl	8022486 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003190:	4805      	ldr	r0, [pc, #20]	@ (80031a8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003192:	b00f      	add	sp, #60	@ 0x3c
 8003194:	bd30      	pop	{r4, r5, pc}
 8003196:	bf00      	nop
 8003198:	2000318c 	.word	0x2000318c
 800319c:	0802675c 	.word	0x0802675c
 80031a0:	08026768 	.word	0x08026768
 80031a4:	0802672c 	.word	0x0802672c
 80031a8:	20003190 	.word	0x20003190
 80031ac:	08003139 	.word	0x08003139

080031b0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80031b0:	4770      	bx	lr
	...

080031b4 <_Z23getFont_verdana_20_4bppv>:
{
 80031b4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80031b6:	4d16      	ldr	r5, [pc, #88]	@ (8003210 <_Z23getFont_verdana_20_4bppv+0x5c>)
 80031b8:	682c      	ldr	r4, [r5, #0]
 80031ba:	f014 0401 	ands.w	r4, r4, #1
{
 80031be:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80031c0:	f3bf 8f5b 	dmb	ish
 80031c4:	d120      	bne.n	8003208 <_Z23getFont_verdana_20_4bppv+0x54>
 80031c6:	4628      	mov	r0, r5
 80031c8:	f01f f951 	bl	802246e <__cxa_guard_acquire>
 80031cc:	b1e0      	cbz	r0, 8003208 <_Z23getFont_verdana_20_4bppv+0x54>
 80031ce:	233f      	movs	r3, #63	@ 0x3f
 80031d0:	9309      	str	r3, [sp, #36]	@ 0x24
 80031d2:	4b10      	ldr	r3, [pc, #64]	@ (8003214 <_Z23getFont_verdana_20_4bppv+0x60>)
 80031d4:	9308      	str	r3, [sp, #32]
 80031d6:	4b10      	ldr	r3, [pc, #64]	@ (8003218 <_Z23getFont_verdana_20_4bppv+0x64>)
 80031d8:	4910      	ldr	r1, [pc, #64]	@ (800321c <_Z23getFont_verdana_20_4bppv+0x68>)
 80031da:	4811      	ldr	r0, [pc, #68]	@ (8003220 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80031dc:	940a      	str	r4, [sp, #40]	@ 0x28
 80031de:	2201      	movs	r2, #1
 80031e0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80031e4:	2304      	movs	r3, #4
 80031e6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80031ea:	2314      	movs	r3, #20
 80031ec:	9300      	str	r3, [sp, #0]
 80031ee:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80031f2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80031f6:	9405      	str	r4, [sp, #20]
 80031f8:	f7ff ff2e 	bl	8003058 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80031fc:	4809      	ldr	r0, [pc, #36]	@ (8003224 <_Z23getFont_verdana_20_4bppv+0x70>)
 80031fe:	f020 f8d5 	bl	80233ac <atexit>
 8003202:	4628      	mov	r0, r5
 8003204:	f01f f93f 	bl	8022486 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8003208:	4805      	ldr	r0, [pc, #20]	@ (8003220 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800320a:	b00f      	add	sp, #60	@ 0x3c
 800320c:	bd30      	pop	{r4, r5, pc}
 800320e:	bf00      	nop
 8003210:	200031bc 	.word	0x200031bc
 8003214:	08026760 	.word	0x08026760
 8003218:	0802676c 	.word	0x0802676c
 800321c:	0802673c 	.word	0x0802673c
 8003220:	200031c0 	.word	0x200031c0
 8003224:	080031b1 	.word	0x080031b1

08003228 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003228:	4770      	bx	lr
	...

0800322c <_Z23getFont_verdana_40_4bppv>:
{
 800322c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800322e:	4d16      	ldr	r5, [pc, #88]	@ (8003288 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003230:	682c      	ldr	r4, [r5, #0]
 8003232:	f014 0401 	ands.w	r4, r4, #1
{
 8003236:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003238:	f3bf 8f5b 	dmb	ish
 800323c:	d120      	bne.n	8003280 <_Z23getFont_verdana_40_4bppv+0x54>
 800323e:	4628      	mov	r0, r5
 8003240:	f01f f915 	bl	802246e <__cxa_guard_acquire>
 8003244:	b1e0      	cbz	r0, 8003280 <_Z23getFont_verdana_40_4bppv+0x54>
 8003246:	233f      	movs	r3, #63	@ 0x3f
 8003248:	9309      	str	r3, [sp, #36]	@ 0x24
 800324a:	4b10      	ldr	r3, [pc, #64]	@ (800328c <_Z23getFont_verdana_40_4bppv+0x60>)
 800324c:	9308      	str	r3, [sp, #32]
 800324e:	4b10      	ldr	r3, [pc, #64]	@ (8003290 <_Z23getFont_verdana_40_4bppv+0x64>)
 8003250:	4910      	ldr	r1, [pc, #64]	@ (8003294 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003252:	4811      	ldr	r0, [pc, #68]	@ (8003298 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003254:	940a      	str	r4, [sp, #40]	@ 0x28
 8003256:	2201      	movs	r2, #1
 8003258:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800325c:	2304      	movs	r3, #4
 800325e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003262:	2328      	movs	r3, #40	@ 0x28
 8003264:	9300      	str	r3, [sp, #0]
 8003266:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800326a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800326e:	9405      	str	r4, [sp, #20]
 8003270:	f7ff fef2 	bl	8003058 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003274:	4809      	ldr	r0, [pc, #36]	@ (800329c <_Z23getFont_verdana_40_4bppv+0x70>)
 8003276:	f020 f899 	bl	80233ac <atexit>
 800327a:	4628      	mov	r0, r5
 800327c:	f01f f903 	bl	8022486 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003280:	4805      	ldr	r0, [pc, #20]	@ (8003298 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003282:	b00f      	add	sp, #60	@ 0x3c
 8003284:	bd30      	pop	{r4, r5, pc}
 8003286:	bf00      	nop
 8003288:	200031ec 	.word	0x200031ec
 800328c:	08026764 	.word	0x08026764
 8003290:	08026770 	.word	0x08026770
 8003294:	0802674c 	.word	0x0802674c
 8003298:	200031f0 	.word	0x200031f0
 800329c:	08003229 	.word	0x08003229

080032a0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 80032a0:	2000      	movs	r0, #0
 80032a2:	4770      	bx	lr

080032a4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 80032a4:	2000      	movs	r0, #0
 80032a6:	4770      	bx	lr

080032a8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80032a8:	b40e      	push	{r1, r2, r3}
 80032aa:	b503      	push	{r0, r1, lr}
 80032ac:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80032ae:	2100      	movs	r1, #0
{
 80032b0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80032b4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80032b6:	f00d fecb 	bl	8011050 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80032ba:	b002      	add	sp, #8
 80032bc:	f85d eb04 	ldr.w	lr, [sp], #4
 80032c0:	b003      	add	sp, #12
 80032c2:	4770      	bx	lr

080032c4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80032c4:	b40c      	push	{r2, r3}
 80032c6:	b507      	push	{r0, r1, r2, lr}
 80032c8:	ab04      	add	r3, sp, #16
 80032ca:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80032ce:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80032d0:	f00d febe 	bl	8011050 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80032d4:	b003      	add	sp, #12
 80032d6:	f85d eb04 	ldr.w	lr, [sp], #4
 80032da:	b002      	add	sp, #8
 80032dc:	4770      	bx	lr
	...

080032e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80032e0:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 80032e2:	b510      	push	{r4, lr}
 80032e4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80032e6:	b373      	cbz	r3, 8003346 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80032e8:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80032ea:	b92b      	cbnz	r3, 80032f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80032ec:	4b18      	ldr	r3, [pc, #96]	@ (8003350 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80032ee:	4a19      	ldr	r2, [pc, #100]	@ (8003354 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80032f0:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80032f2:	4819      	ldr	r0, [pc, #100]	@ (8003358 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80032f4:	f020 f83c 	bl	8023370 <__assert_func>
            return buffer[pos];
 80032f8:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80032fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80032fe:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8003300:	b30b      	cbz	r3, 8003346 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8003302:	f00f fd4c 	bl	8012d9e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8003306:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8003308:	2b01      	cmp	r3, #1
 800330a:	d803      	bhi.n	8003314 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800330c:	4b13      	ldr	r3, [pc, #76]	@ (800335c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800330e:	4a14      	ldr	r2, [pc, #80]	@ (8003360 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003310:	21cb      	movs	r1, #203	@ 0xcb
 8003312:	e7ee      	b.n	80032f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003314:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8003316:	1c53      	adds	r3, r2, #1
 8003318:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800331a:	2b09      	cmp	r3, #9
 800331c:	4619      	mov	r1, r3
 800331e:	bf88      	it	hi
 8003320:	f1a3 010a 	subhi.w	r1, r3, #10
 8003324:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8003328:	f640 103f 	movw	r0, #2367	@ 0x93f
 800332c:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 800332e:	4281      	cmp	r1, r0
 8003330:	d109      	bne.n	8003346 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003332:	2b0a      	cmp	r3, #10
 8003334:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003338:	bf28      	it	cs
 800333a:	2300      	movcs	r3, #0
 800333c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8003340:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8003342:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003344:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8003346:	4620      	mov	r0, r4
}
 8003348:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800334c:	f00f bc2a 	b.w	8012ba4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003350:	080250b2 	.word	0x080250b2
 8003354:	080250bb 	.word	0x080250bb
 8003358:	08025166 	.word	0x08025166
 800335c:	080251b0 	.word	0x080251b0
 8003360:	080251be 	.word	0x080251be

08003364 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003364:	f00f bbe5 	b.w	8012b32 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003368 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003368:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800336a:	bb18      	cbnz	r0, 80033b4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800336c:	4b12      	ldr	r3, [pc, #72]	@ (80033b8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800336e:	4813      	ldr	r0, [pc, #76]	@ (80033bc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003370:	681c      	ldr	r4, [r3, #0]
 8003372:	4913      	ldr	r1, [pc, #76]	@ (80033c0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003374:	b1b4      	cbz	r4, 80033a4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003376:	6822      	ldr	r2, [r4, #0]
 8003378:	4422      	add	r2, r4
 800337a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800337c:	6862      	ldr	r2, [r4, #4]
 800337e:	4422      	add	r2, r4
 8003380:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003382:	68a2      	ldr	r2, [r4, #8]
 8003384:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003386:	4b0f      	ldr	r3, [pc, #60]	@ (80033c4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003388:	2200      	movs	r2, #0
 800338a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800338c:	f000 f82a 	bl	80033e4 <_ZN17TypedTextDatabase8getFontsEv>
 8003390:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003392:	f000 f825 	bl	80033e0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003396:	4b0c      	ldr	r3, [pc, #48]	@ (80033c8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003398:	601c      	str	r4, [r3, #0]
        fonts = f;
 800339a:	4b0c      	ldr	r3, [pc, #48]	@ (80033cc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800339c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800339e:	4b0c      	ldr	r3, [pc, #48]	@ (80033d0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80033a0:	8018      	strh	r0, [r3, #0]
    }
}
 80033a2:	e007      	b.n	80033b4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80033a4:	4b0b      	ldr	r3, [pc, #44]	@ (80033d4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80033a6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80033a8:	4b0b      	ldr	r3, [pc, #44]	@ (80033d8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80033aa:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80033ac:	4b0b      	ldr	r3, [pc, #44]	@ (80033dc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80033ae:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80033b0:	2c00      	cmp	r4, #0
 80033b2:	d1e8      	bne.n	8003386 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80033b4:	bd38      	pop	{r3, r4, r5, pc}
 80033b6:	bf00      	nop
 80033b8:	20003228 	.word	0x20003228
 80033bc:	20003220 	.word	0x20003220
 80033c0:	2000321c 	.word	0x2000321c
 80033c4:	20003224 	.word	0x20003224
 80033c8:	20014098 	.word	0x20014098
 80033cc:	200140a0 	.word	0x200140a0
 80033d0:	2001409c 	.word	0x2001409c
 80033d4:	08026778 	.word	0x08026778
 80033d8:	08026774 	.word	0x08026774
 80033dc:	0802677c 	.word	0x0802677c

080033e0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 80033e0:	2000      	movs	r0, #0
 80033e2:	4770      	bx	lr

080033e4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80033e4:	4800      	ldr	r0, [pc, #0]	@ (80033e8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80033e6:	4770      	bx	lr
 80033e8:	2000322c 	.word	0x2000322c

080033ec <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80033ec:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80033ee:	f7ff fee1 	bl	80031b4 <_Z23getFont_verdana_20_4bppv>
};
 80033f2:	4c04      	ldr	r4, [pc, #16]	@ (8003404 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80033f4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80033f6:	f7ff ff19 	bl	800322c <_Z23getFont_verdana_40_4bppv>
};
 80033fa:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80033fc:	f7ff fe9e 	bl	800313c <_Z23getFont_verdana_10_4bppv>
};
 8003400:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8003402:	bd10      	pop	{r4, pc}
 8003404:	2000322c 	.word	0x2000322c

08003408 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8003408:	b510      	push	{r4, lr}
    pointArray = 0;
 800340a:	2400      	movs	r4, #0
 800340c:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 800340e:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8003410:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8003412:	601c      	str	r4, [r3, #0]
}
 8003414:	bd10      	pop	{r4, pc}

08003416 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003416:	4770      	bx	lr

08003418 <_ZN19FrontendApplicationD0Ev>:
 8003418:	b510      	push	{r4, lr}
 800341a:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800341e:	4604      	mov	r4, r0
 8003420:	f01f f823 	bl	802246a <_ZdlPvj>
 8003424:	4620      	mov	r0, r4
 8003426:	bd10      	pop	{r4, pc}

08003428 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003428:	b510      	push	{r4, lr}
 800342a:	4604      	mov	r4, r0
    {
        model.tick();
 800342c:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003430:	f000 f813 	bl	800345a <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003434:	4620      	mov	r0, r4
    }
 8003436:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800343a:	f00c be03 	b.w	8010044 <_ZN8touchgfx11Application15handleTickEventEv>
	...

08003440 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003440:	b510      	push	{r4, lr}
 8003442:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003444:	f7ff fd92 	bl	8002f6c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003448:	4b01      	ldr	r3, [pc, #4]	@ (8003450 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800344a:	6023      	str	r3, [r4, #0]
{

}
 800344c:	4620      	mov	r0, r4
 800344e:	bd10      	pop	{r4, pc}
 8003450:	080258cc 	.word	0x080258cc

08003454 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003454:	2200      	movs	r2, #0
 8003456:	6002      	str	r2, [r0, #0]
{

}
 8003458:	4770      	bx	lr

0800345a <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800345a:	4770      	bx	lr

0800345c <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 800345c:	4770      	bx	lr

0800345e <_ZThn4_N16Screen1PresenterD1Ev>:
 800345e:	3804      	subs	r0, #4
 8003460:	4770      	bx	lr

08003462 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8003462:	4770      	bx	lr

08003464 <_ZN16Screen1PresenterD0Ev>:
 8003464:	b510      	push	{r4, lr}
 8003466:	2110      	movs	r1, #16
 8003468:	4604      	mov	r4, r0
 800346a:	f01e fffe 	bl	802246a <_ZdlPvj>
 800346e:	4620      	mov	r0, r4
 8003470:	bd10      	pop	{r4, pc}

08003472 <_ZThn4_N16Screen1PresenterD0Ev>:
 8003472:	f1a0 0004 	sub.w	r0, r0, #4
 8003476:	e7f5      	b.n	8003464 <_ZN16Screen1PresenterD0Ev>

08003478 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8003478:	2200      	movs	r2, #0
 800347a:	6082      	str	r2, [r0, #8]
    : view(v)
 800347c:	4a02      	ldr	r2, [pc, #8]	@ (8003488 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 800347e:	6002      	str	r2, [r0, #0]
 8003480:	3218      	adds	r2, #24
 8003482:	6042      	str	r2, [r0, #4]
 8003484:	60c1      	str	r1, [r0, #12]
}
 8003486:	4770      	bx	lr
 8003488:	08025920 	.word	0x08025920

0800348c <_ZN11Screen1View14tearDownScreenEv>:
{
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), 10);
}

void Screen1View::tearDownScreen()
{
 800348c:	b510      	push	{r4, lr}
    Screen1ViewBase::tearDownScreen();
    
    if(mouseTaskHandle != NULL) {
 800348e:	4c07      	ldr	r4, [pc, #28]	@ (80034ac <_ZN11Screen1View14tearDownScreenEv+0x20>)
 8003490:	6820      	ldr	r0, [r4, #0]
 8003492:	b118      	cbz	r0, 800349c <_ZN11Screen1View14tearDownScreenEv+0x10>
        osThreadTerminate(mouseTaskHandle);
 8003494:	f004 fc10 	bl	8007cb8 <osThreadTerminate>
        mouseTaskHandle = NULL;
 8003498:	2300      	movs	r3, #0
 800349a:	6023      	str	r3, [r4, #0]
    }
    
    if(mouseEventQueueHandle != NULL) {
 800349c:	4c04      	ldr	r4, [pc, #16]	@ (80034b0 <_ZN11Screen1View14tearDownScreenEv+0x24>)
 800349e:	6820      	ldr	r0, [r4, #0]
 80034a0:	b118      	cbz	r0, 80034aa <_ZN11Screen1View14tearDownScreenEv+0x1e>
        osMessageQueueDelete(mouseEventQueueHandle);
 80034a2:	f004 fd7b 	bl	8007f9c <osMessageQueueDelete>
        mouseEventQueueHandle = NULL;
 80034a6:	2300      	movs	r3, #0
 80034a8:	6023      	str	r3, [r4, #0]
    }
}
 80034aa:	bd10      	pop	{r4, pc}
 80034ac:	20002f0c 	.word	0x20002f0c
 80034b0:	20002f10 	.word	0x20002f10

080034b4 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80034b4:	b510      	push	{r4, lr}
 80034b6:	4b03      	ldr	r3, [pc, #12]	@ (80034c4 <_ZN11Screen1ViewD1Ev+0x10>)
 80034b8:	6003      	str	r3, [r0, #0]
 80034ba:	4604      	mov	r4, r0
 80034bc:	f7ff fe01 	bl	80030c2 <_ZN15Screen1ViewBaseD1Ev>
 80034c0:	4620      	mov	r0, r4
 80034c2:	bd10      	pop	{r4, pc}
 80034c4:	08025948 	.word	0x08025948

080034c8 <_ZN11Screen1ViewD0Ev>:
 80034c8:	b510      	push	{r4, lr}
 80034ca:	4604      	mov	r4, r0
 80034cc:	f7ff fff2 	bl	80034b4 <_ZN11Screen1ViewD1Ev>
 80034d0:	4620      	mov	r0, r4
 80034d2:	f44f 6172 	mov.w	r1, #3872	@ 0xf20
 80034d6:	f01e ffc8 	bl	802246a <_ZdlPvj>
 80034da:	4620      	mov	r0, r4
 80034dc:	bd10      	pop	{r4, pc}

080034de <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80034de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80034e2:	461d      	mov	r5, r3
        setX(x);
 80034e4:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80034e6:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 80034ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80034ec:	4604      	mov	r4, r0
 80034ee:	4616      	mov	r6, r2
        setX(x);
 80034f0:	4798      	blx	r3
        setY(y);
 80034f2:	6823      	ldr	r3, [r4, #0]
 80034f4:	4631      	mov	r1, r6
 80034f6:	4620      	mov	r0, r4
 80034f8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80034fa:	4798      	blx	r3
        setWidth(width);
 80034fc:	6823      	ldr	r3, [r4, #0]
 80034fe:	4629      	mov	r1, r5
 8003500:	4620      	mov	r0, r4
 8003502:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003504:	4798      	blx	r3
        setHeight(height);
 8003506:	6823      	ldr	r3, [r4, #0]
 8003508:	4639      	mov	r1, r7
 800350a:	4620      	mov	r0, r4
 800350c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 800350e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8003512:	4718      	bx	r3

08003514 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8003514:	b510      	push	{r4, lr}
 8003516:	4604      	mov	r4, r0
 8003518:	f7ff fddc 	bl	80030d4 <_ZN15Screen1ViewBaseC1Ev>
 800351c:	4620      	mov	r0, r4
 800351e:	4b16      	ldr	r3, [pc, #88]	@ (8003578 <_ZN11Screen1ViewC1Ev+0x64>)
 8003520:	f840 3b6c 	str.w	r3, [r0], #108
 8003524:	f00a f8c6 	bl	800d6b4 <_ZN8touchgfx6CircleC1Ev>
 8003528:	f104 00b4 	add.w	r0, r4, #180	@ 0xb4
 800352c:	f7fe f9d2 	bl	80018d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003530:	4a12      	ldr	r2, [pc, #72]	@ (800357c <_ZN11Screen1ViewC1Ev+0x68>)
 8003532:	f8c4 20b4 	str.w	r2, [r4, #180]	@ 0xb4
 8003536:	3224      	adds	r2, #36	@ 0x24
 8003538:	f8c4 20bc 	str.w	r2, [r4, #188]	@ 0xbc
 800353c:	2214      	movs	r2, #20
 800353e:	2300      	movs	r3, #0
 8003540:	f8c4 20d0 	str.w	r2, [r4, #208]	@ 0xd0
 8003544:	2200      	movs	r2, #0
 8003546:	e9c4 3341 	strd	r3, r3, [r4, #260]	@ 0x104
        smoothing_x[i] = 0;
 800354a:	e9c4 3336 	strd	r3, r3, [r4, #216]	@ 0xd8
        smoothing_y[i] = 0;
 800354e:	e9c4 3338 	strd	r3, r3, [r4, #224]	@ 0xe0
 8003552:	e9c4 333a 	strd	r3, r3, [r4, #232]	@ 0xe8
Screen1View::Screen1View()
 8003556:	e9c4 333c 	strd	r3, r3, [r4, #240]	@ 0xf0
 800355a:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 800355e:	f884 30d4 	strb.w	r3, [r4, #212]	@ 0xd4
 8003562:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
 8003566:	f8c4 20f8 	str.w	r2, [r4, #248]	@ 0xf8
 800356a:	f8c4 20fc 	str.w	r2, [r4, #252]	@ 0xfc
 800356e:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
}
 8003572:	4620      	mov	r0, r4
 8003574:	bd10      	pop	{r4, pc}
 8003576:	bf00      	nop
 8003578:	08025948 	.word	0x08025948
 800357c:	08025ab0 	.word	0x08025ab0

08003580 <_Z9uartPrintPKc>:
{
 8003580:	b510      	push	{r4, lr}
 8003582:	4604      	mov	r4, r0
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), 10);
 8003584:	f7fc fe34 	bl	80001f0 <strlen>
 8003588:	4621      	mov	r1, r4
 800358a:	b282      	uxth	r2, r0
}
 800358c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), 10);
 8003590:	4801      	ldr	r0, [pc, #4]	@ (8003598 <_Z9uartPrintPKc+0x18>)
 8003592:	230a      	movs	r3, #10
 8003594:	f003 bd0f 	b.w	8006fb6 <HAL_UART_Transmit>
 8003598:	20002f54 	.word	0x20002f54

0800359c <_ZN11Screen1View15handleTickEventEv>:
        startTime = HAL_GetTick();
    }
}

void Screen1View::handleTickEvent()
{
 800359c:	b5f0      	push	{r4, r5, r6, r7, lr}

	//Xu ly hinh tron
    if (isScaling){
 800359e:	f890 30d4 	ldrb.w	r3, [r0, #212]	@ 0xd4
{
 80035a2:	b08f      	sub	sp, #60	@ 0x3c
 80035a4:	4604      	mov	r4, r0
    if (isScaling){
 80035a6:	b383      	cbz	r3, 800360a <_ZN11Screen1View15handleTickEventEv+0x6e>
    	int dentaTick = HAL_GetTick() - startTime;
 80035a8:	4d19      	ldr	r5, [pc, #100]	@ (8003610 <_ZN11Screen1View15handleTickEventEv+0x74>)
 80035aa:	f000 fd83 	bl	80040b4 <HAL_GetTick>
 80035ae:	682b      	ldr	r3, [r5, #0]
 80035b0:	1ac3      	subs	r3, r0, r3

    	//Xu ly voi denta
    	if(dentaTick <= 1000){
 80035b2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80035b6:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
 80035ba:	dc11      	bgt.n	80035e0 <_ZN11Screen1View15handleTickEventEv+0x44>
    		int newRadius = currentRadius - currentRadius * dentaTick / 1000;
 80035bc:	f8d4 20d0 	ldr.w	r2, [r4, #208]	@ 0xd0
 80035c0:	4914      	ldr	r1, [pc, #80]	@ (8003614 <_ZN11Screen1View15handleTickEventEv+0x78>)
 80035c2:	4353      	muls	r3, r2
 80035c4:	fb93 f3f1 	sdiv	r3, r3, r1
 80035c8:	4413      	add	r3, r2
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * (int)Rasterizer::POLY_BASE_SIZE));
 80035ca:	015b      	lsls	r3, r3, #5
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80035cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    		myCircle.setRadius(newRadius);
    		myCircle.invalidate();
 80035d0:	4630      	mov	r0, r6
 80035d2:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
            char msg1[50];
    		snprintf(msg1, sizeof(msg1), "lastTime = %lu\n", lastTime);
    		uartPrint(msg1);
    	}
    }
}
 80035d6:	b00f      	add	sp, #60	@ 0x3c
 80035d8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    		myCircle.invalidate();
 80035dc:	f00a bd5c 	b.w	800e098 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    		isScaling = false;
 80035e0:	2700      	movs	r7, #0
 80035e2:	f884 70d4 	strb.w	r7, [r4, #212]	@ 0xd4
    		int lastTime = HAL_GetTick() - startTime;
 80035e6:	f000 fd65 	bl	80040b4 <HAL_GetTick>
 80035ea:	682d      	ldr	r5, [r5, #0]
        visible = vis;
 80035ec:	f884 7091 	strb.w	r7, [r4, #145]	@ 0x91
 80035f0:	1b45      	subs	r5, r0, r5
    		myCircle.invalidate();
 80035f2:	4630      	mov	r0, r6
 80035f4:	f00a fd50 	bl	800e098 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    		snprintf(msg1, sizeof(msg1), "lastTime = %lu\n", lastTime);
 80035f8:	4a07      	ldr	r2, [pc, #28]	@ (8003618 <_ZN11Screen1View15handleTickEventEv+0x7c>)
 80035fa:	462b      	mov	r3, r5
 80035fc:	2132      	movs	r1, #50	@ 0x32
 80035fe:	a801      	add	r0, sp, #4
 8003600:	f020 f87a 	bl	80236f8 <sniprintf>
    		uartPrint(msg1);
 8003604:	a801      	add	r0, sp, #4
 8003606:	f7ff ffbb 	bl	8003580 <_Z9uartPrintPKc>
}
 800360a:	b00f      	add	sp, #60	@ 0x3c
 800360c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800360e:	bf00      	nop
 8003610:	20003238 	.word	0x20003238
 8003614:	fffffc18 	.word	0xfffffc18
 8003618:	08025290 	.word	0x08025290

0800361c <_ZN11Screen1View14applySmoothingERiS0_>:
    smoothing_x[smoothing_index] = deltaX;
 800361c:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
{
 8003620:	b570      	push	{r4, r5, r6, lr}
 8003622:	eb00 0483 	add.w	r4, r0, r3, lsl #2
    smoothing_x[smoothing_index] = deltaX;
 8003626:	680d      	ldr	r5, [r1, #0]
 8003628:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
    smoothing_y[smoothing_index] = deltaY;
 800362c:	6815      	ldr	r5, [r2, #0]
 800362e:	f8c4 50e4 	str.w	r5, [r4, #228]	@ 0xe4
    smoothing_index = (smoothing_index + 1) % SMOOTHING_BUFFER_SIZE;
 8003632:	3301      	adds	r3, #1
 8003634:	2503      	movs	r5, #3
 8003636:	fb93 f4f5 	sdiv	r4, r3, r5
 800363a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800363e:	1b1b      	subs	r3, r3, r4
 8003640:	f8c0 30f0 	str.w	r3, [r0, #240]	@ 0xf0
        sum_x += smoothing_x[i];
 8003644:	e9d0 3436 	ldrd	r3, r4, [r0, #216]	@ 0xd8
 8003648:	441c      	add	r4, r3
        sum_y += smoothing_y[i];
 800364a:	e9d0 3639 	ldrd	r3, r6, [r0, #228]	@ 0xe4
 800364e:	4433      	add	r3, r6
 8003650:	f8d0 60ec 	ldr.w	r6, [r0, #236]	@ 0xec
        sum_x += smoothing_x[i];
 8003654:	f8d0 00e0 	ldr.w	r0, [r0, #224]	@ 0xe0
        sum_y += smoothing_y[i];
 8003658:	4433      	add	r3, r6
        sum_x += smoothing_x[i];
 800365a:	4420      	add	r0, r4
    deltaY = sum_y / SMOOTHING_BUFFER_SIZE;
 800365c:	fb93 f3f5 	sdiv	r3, r3, r5
    deltaX = sum_x / SMOOTHING_BUFFER_SIZE;
 8003660:	fb90 f0f5 	sdiv	r0, r0, r5
 8003664:	6008      	str	r0, [r1, #0]
    deltaY = sum_y / SMOOTHING_BUFFER_SIZE;
 8003666:	6013      	str	r3, [r2, #0]
}
 8003668:	bd70      	pop	{r4, r5, r6, pc}

0800366a <_ZN11Screen1View15resetTouchStateEv>:
        smoothing_x[i] = 0;
 800366a:	2300      	movs	r3, #0
    velocity_x = 0.0f;
 800366c:	2200      	movs	r2, #0
        smoothing_x[i] = 0;
 800366e:	e9c0 3336 	strd	r3, r3, [r0, #216]	@ 0xd8
        smoothing_y[i] = 0;
 8003672:	e9c0 3338 	strd	r3, r3, [r0, #224]	@ 0xe0
 8003676:	e9c0 333a 	strd	r3, r3, [r0, #232]	@ 0xe8
    lastDragTime = 0;
 800367a:	e9c0 333c 	strd	r3, r3, [r0, #240]	@ 0xf0
    velocity_x = 0.0f;
 800367e:	f8c0 20f8 	str.w	r2, [r0, #248]	@ 0xf8
    velocity_y = 0.0f;
 8003682:	f8c0 20fc 	str.w	r2, [r0, #252]	@ 0xfc
{    isPotentialClick = false;
 8003686:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
    pressStartTime = 0;
 800368a:	f8c0 3104 	str.w	r3, [r0, #260]	@ 0x104
}
 800368e:	4770      	bx	lr

08003690 <_ZN11Screen1View14updateVelocityEiim>:
{
 8003690:	ee07 1a90 	vmov	s15, r1
 8003694:	ee06 2a10 	vmov	s12, r2
    if(timeDelta > 0) {
 8003698:	2b00      	cmp	r3, #0
 800369a:	d048      	beq.n	800372e <_ZN11Screen1View14updateVelocityEiim+0x9e>
        float current_vel_x = (float)deltaX / timeDelta * 1000.0f;
 800369c:	ee07 3a10 	vmov	s14, r3
 80036a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80036a4:	eef8 6a47 	vcvt.f32.u32	s13, s14
        float current_vel_y = (float)deltaY / timeDelta * 1000.0f;
 80036a8:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
        float current_vel_x = (float)deltaX / timeDelta * 1000.0f;
 80036ac:	ee87 7aa6 	vdiv.f32	s14, s15, s13
        float current_vel_y = (float)deltaY / timeDelta * 1000.0f;
 80036b0:	eec6 7a26 	vdiv.f32	s15, s12, s13
        if((velocity_x > 0 && current_vel_x > 0) || (velocity_x < 0 && current_vel_x < 0)) {
 80036b4:	ed90 6a3e 	vldr	s12, [r0, #248]	@ 0xf8
        float current_vel_x = (float)deltaX / timeDelta * 1000.0f;
 80036b8:	eddf 5a3b 	vldr	s11, [pc, #236]	@ 80037a8 <_ZN11Screen1View14updateVelocityEiim+0x118>
        if((velocity_x > 0 && current_vel_x > 0) || (velocity_x < 0 && current_vel_x < 0)) {
 80036bc:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80036c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        float current_vel_x = (float)deltaX / timeDelta * 1000.0f;
 80036c4:	ee27 7a25 	vmul.f32	s14, s14, s11
        float current_vel_y = (float)deltaY / timeDelta * 1000.0f;
 80036c8:	ee67 7aa5 	vmul.f32	s15, s15, s11
        if((velocity_x > 0 && current_vel_x > 0) || (velocity_x < 0 && current_vel_x < 0)) {
 80036cc:	dd30      	ble.n	8003730 <_ZN11Screen1View14updateVelocityEiim+0xa0>
 80036ce:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80036d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036d6:	dc31      	bgt.n	800373c <_ZN11Screen1View14updateVelocityEiim+0xac>
        if((velocity_y > 0 && current_vel_y > 0) || (velocity_y < 0 && current_vel_y < 0)) {
 80036d8:	edd0 6a3f 	vldr	s13, [r0, #252]	@ 0xfc
            velocity_x = velocity_x * DAMPING_FACTOR + current_vel_x * (1 - DAMPING_FACTOR);
 80036dc:	ed80 7a3e 	vstr	s14, [r0, #248]	@ 0xf8
        if((velocity_y > 0 && current_vel_y > 0) || (velocity_y < 0 && current_vel_y < 0)) {
 80036e0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80036e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036e8:	dd40      	ble.n	800376c <_ZN11Screen1View14updateVelocityEiim+0xdc>
 80036ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80036ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036f2:	dc41      	bgt.n	8003778 <_ZN11Screen1View14updateVelocityEiim+0xe8>
            velocity_y = velocity_y * DAMPING_FACTOR + current_vel_y * (1 - DAMPING_FACTOR);
 80036f4:	edc0 7a3f 	vstr	s15, [r0, #252]	@ 0xfc
  abs(double __x)
  { return __builtin_fabs(__x); }

  inline _GLIBCXX_CONSTEXPR float
  abs(float __x)
  { return __builtin_fabsf(__x); }
 80036f8:	edd0 7a3e 	vldr	s15, [r0, #248]	@ 0xf8
        if(abs(velocity_x) < MIN_VELOCITY_THRESHOLD) velocity_x = 0;
 80036fc:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 80037ac <_ZN11Screen1View14updateVelocityEiim+0x11c>
 8003700:	eef0 7ae7 	vabs.f32	s15, s15
 8003704:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003708:	edd0 7a3f 	vldr	s15, [r0, #252]	@ 0xfc
 800370c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003710:	eef0 7ae7 	vabs.f32	s15, s15
 8003714:	bf48      	it	mi
 8003716:	2300      	movmi	r3, #0
        if(abs(velocity_y) < MIN_VELOCITY_THRESHOLD) velocity_y = 0;
 8003718:	eef4 7ac7 	vcmpe.f32	s15, s14
        if(abs(velocity_x) < MIN_VELOCITY_THRESHOLD) velocity_x = 0;
 800371c:	bf48      	it	mi
 800371e:	f8c0 30f8 	strmi.w	r3, [r0, #248]	@ 0xf8
        if(abs(velocity_y) < MIN_VELOCITY_THRESHOLD) velocity_y = 0;
 8003722:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003726:	bf44      	itt	mi
 8003728:	2300      	movmi	r3, #0
 800372a:	f8c0 30fc 	strmi.w	r3, [r0, #252]	@ 0xfc
}
 800372e:	4770      	bx	lr
        if((velocity_x > 0 && current_vel_x > 0) || (velocity_x < 0 && current_vel_x < 0)) {
 8003730:	d5d2      	bpl.n	80036d8 <_ZN11Screen1View14updateVelocityEiim+0x48>
 8003732:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8003736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800373a:	d5cd      	bpl.n	80036d8 <_ZN11Screen1View14updateVelocityEiim+0x48>
            velocity_x = velocity_x * DAMPING_FACTOR + current_vel_x * (1 - DAMPING_FACTOR);
 800373c:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 80037b0 <_ZN11Screen1View14updateVelocityEiim+0x120>
 8003740:	eddf 5a1c 	vldr	s11, [pc, #112]	@ 80037b4 <_ZN11Screen1View14updateVelocityEiim+0x124>
 8003744:	ee67 6a26 	vmul.f32	s13, s14, s13
 8003748:	eeb0 7ac7 	vabs.f32	s14, s14
 800374c:	eee6 6a25 	vfma.f32	s13, s12, s11
 8003750:	eeb0 6ae6 	vabs.f32	s12, s13
            if(abs(velocity_x) > abs(current_vel_x)) {
 8003754:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8003758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                velocity_x *= ACCELERATION_FACTOR;
 800375c:	bfca      	itet	gt
 800375e:	ed9f 7a16 	vldrgt	s14, [pc, #88]	@ 80037b8 <_ZN11Screen1View14updateVelocityEiim+0x128>
 8003762:	eeb0 7a66 	vmovle.f32	s14, s13
 8003766:	ee26 7a87 	vmulgt.f32	s14, s13, s14
 800376a:	e7b5      	b.n	80036d8 <_ZN11Screen1View14updateVelocityEiim+0x48>
        if((velocity_y > 0 && current_vel_y > 0) || (velocity_y < 0 && current_vel_y < 0)) {
 800376c:	d5c2      	bpl.n	80036f4 <_ZN11Screen1View14updateVelocityEiim+0x64>
 800376e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003772:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003776:	d5bd      	bpl.n	80036f4 <_ZN11Screen1View14updateVelocityEiim+0x64>
            velocity_y = velocity_y * DAMPING_FACTOR + current_vel_y * (1 - DAMPING_FACTOR);
 8003778:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 80037b0 <_ZN11Screen1View14updateVelocityEiim+0x120>
 800377c:	ed9f 6a0d 	vldr	s12, [pc, #52]	@ 80037b4 <_ZN11Screen1View14updateVelocityEiim+0x124>
 8003780:	ee27 7a87 	vmul.f32	s14, s15, s14
 8003784:	eef0 7ae7 	vabs.f32	s15, s15
 8003788:	eea6 7a86 	vfma.f32	s14, s13, s12
 800378c:	eef0 6ac7 	vabs.f32	s13, s14
            if(abs(velocity_y) > abs(current_vel_y)) {
 8003790:	eef4 6ae7 	vcmpe.f32	s13, s15
 8003794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                velocity_y *= ACCELERATION_FACTOR;
 8003798:	bfca      	itet	gt
 800379a:	eddf 7a07 	vldrgt	s15, [pc, #28]	@ 80037b8 <_ZN11Screen1View14updateVelocityEiim+0x128>
 800379e:	eef0 7a47 	vmovle.f32	s15, s14
 80037a2:	ee67 7a27 	vmulgt.f32	s15, s14, s15
 80037a6:	e7a5      	b.n	80036f4 <_ZN11Screen1View14updateVelocityEiim+0x64>
 80037a8:	447a0000 	.word	0x447a0000
 80037ac:	3dcccccd 	.word	0x3dcccccd
 80037b0:	3d4cccd0 	.word	0x3d4cccd0
 80037b4:	3f733333 	.word	0x3f733333
 80037b8:	3f99999a 	.word	0x3f99999a

080037bc <_ZN11Screen1View11setupScreenEv>:
{
 80037bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80037be:	4604      	mov	r4, r0
    Screen1ViewBase::setupScreen();
 80037c0:	f7ff fc80 	bl	80030c4 <_ZN15Screen1ViewBase11setupScreenEv>
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80037c4:	f504 7088 	add.w	r0, r4, #272	@ 0x110
 80037c8:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 80037cc:	f00b fb68 	bl	800eea0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
 80037d0:	f04f 33ff 	mov.w	r3, #4294967295
 80037d4:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80037d8:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
    myCircle.setPosition(0, 0, currentRadius * 2, currentRadius * 2);
 80037dc:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 80037e0:	005b      	lsls	r3, r3, #1
 80037e2:	f104 056c 	add.w	r5, r4, #108	@ 0x6c
 80037e6:	b21b      	sxth	r3, r3
 80037e8:	2200      	movs	r2, #0
 80037ea:	9300      	str	r3, [sp, #0]
 80037ec:	4611      	mov	r1, r2
 80037ee:	4628      	mov	r0, r5
 80037f0:	f7ff fe75 	bl	80034de <_ZN8touchgfx8Drawable11setPositionEssss>
 80037f4:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 80037f8:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 80037fa:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80037fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003802:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
    myCircle.setPainter(circlePainter);
 8003806:	f104 02b4 	add.w	r2, r4, #180	@ 0xb4
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 800380a:	2300      	movs	r3, #0
 800380c:	4629      	mov	r1, r5
 800380e:	1d20      	adds	r0, r4, #4
 8003810:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
        canvasPainter = &painter;
 8003814:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 8003818:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
}
 800381c:	b003      	add	sp, #12
 800381e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003822:	f007 b8ff 	b.w	800aa24 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	...

08003828 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE>:
{
 8003828:	b5f0      	push	{r4, r5, r6, r7, lr}
 800382a:	460f      	mov	r7, r1
 800382c:	b093      	sub	sp, #76	@ 0x4c
 800382e:	4604      	mov	r4, r0
	Screen1ViewBase::handleDragEvent(evt);
 8003830:	f00e fb54 	bl	8011edc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaX() const
    {
        return dragNewX - dragOldX;
 8003834:	88fa      	ldrh	r2, [r7, #6]
 8003836:	897b      	ldrh	r3, [r7, #10]
 8003838:	1a9b      	subs	r3, r3, r2
	int deltaX = evt.getDeltaX();
 800383a:	b21b      	sxth	r3, r3
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 800383c:	893a      	ldrh	r2, [r7, #8]
 800383e:	9303      	str	r3, [sp, #12]
 8003840:	89bb      	ldrh	r3, [r7, #12]
 8003842:	1a9b      	subs	r3, r3, r2
	int deltaY = evt.getDeltaY();
 8003844:	b21b      	sxth	r3, r3
 8003846:	9304      	str	r3, [sp, #16]
	uint32_t currentTime = HAL_GetTick();
 8003848:	f000 fc34 	bl	80040b4 <HAL_GetTick>
	lastDragTime = currentTime;	if(isPotentialClick && !isDragging) {
 800384c:	f894 3100 	ldrb.w	r3, [r4, #256]	@ 0x100
	uint32_t timeDelta = currentTime - lastDragTime;
 8003850:	f8d4 60f4 	ldr.w	r6, [r4, #244]	@ 0xf4
	lastDragTime = currentTime;	if(isPotentialClick && !isDragging) {
 8003854:	f8c4 00f4 	str.w	r0, [r4, #244]	@ 0xf4
	uint32_t currentTime = HAL_GetTick();
 8003858:	4605      	mov	r5, r0
	lastDragTime = currentTime;	if(isPotentialClick && !isDragging) {
 800385a:	2b00      	cmp	r3, #0
 800385c:	d039      	beq.n	80038d2 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0xaa>
 800385e:	f894 3101 	ldrb.w	r3, [r4, #257]	@ 0x101
 8003862:	b17b      	cbz	r3, 8003884 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x5c>
	applySmoothing(deltaX, deltaY);
 8003864:	aa04      	add	r2, sp, #16
 8003866:	a903      	add	r1, sp, #12
 8003868:	4620      	mov	r0, r4
 800386a:	f7ff fed7 	bl	800361c <_ZN11Screen1View14applySmoothingERiS0_>
	updateVelocity(deltaX, deltaY, timeDelta);
 800386e:	e9dd 1203 	ldrd	r1, r2, [sp, #12]
 8003872:	1bab      	subs	r3, r5, r6
 8003874:	4620      	mov	r0, r4
 8003876:	f7ff ff0b 	bl	8003690 <_ZN11Screen1View14updateVelocityEiim>
	if(abs(deltaX) <= 0 && abs(deltaY) <= 0){
 800387a:	ea51 0302 	orrs.w	r3, r1, r2
 800387e:	d12d      	bne.n	80038dc <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0xb4>
}
 8003880:	b013      	add	sp, #76	@ 0x4c
 8003882:	bdf0      	pop	{r4, r5, r6, r7, pc}
		uint32_t timeSincePress = currentTime - pressStartTime;
 8003884:	f8d4 3104 	ldr.w	r3, [r4, #260]	@ 0x104
        return dragNewX;
 8003888:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
		int totalMovement = abs(evt.getNewX() - press_start_x) + abs(evt.getNewY() - press_start_y);
 800388c:	f8d4 c108 	ldr.w	ip, [r4, #264]	@ 0x108
        return dragNewY;
 8003890:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
		uint32_t timeSincePress = currentTime - pressStartTime;
 8003894:	1ac3      	subs	r3, r0, r3
		if(timeSincePress >= DRAG_MIN_TIME && totalMovement >= DRAG_THRESHOLD) {
 8003896:	2b63      	cmp	r3, #99	@ 0x63
		int totalMovement = abs(evt.getNewX() - press_start_x) + abs(evt.getNewY() - press_start_y);
 8003898:	f8d4 010c 	ldr.w	r0, [r4, #268]	@ 0x10c
		if(timeSincePress >= DRAG_MIN_TIME && totalMovement >= DRAG_THRESHOLD) {
 800389c:	d9f0      	bls.n	8003880 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x58>
		int totalMovement = abs(evt.getNewX() - press_start_x) + abs(evt.getNewY() - press_start_y);
 800389e:	eba2 020c 	sub.w	r2, r2, ip
 80038a2:	2a00      	cmp	r2, #0
 80038a4:	eba1 0100 	sub.w	r1, r1, r0
 80038a8:	bfb8      	it	lt
 80038aa:	4252      	neglt	r2, r2
 80038ac:	2900      	cmp	r1, #0
 80038ae:	bfb8      	it	lt
 80038b0:	4249      	neglt	r1, r1
 80038b2:	440a      	add	r2, r1
		if(timeSincePress >= DRAG_MIN_TIME && totalMovement >= DRAG_THRESHOLD) {
 80038b4:	2a07      	cmp	r2, #7
 80038b6:	dde3      	ble.n	8003880 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x58>
			isPotentialClick = false;
 80038b8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80038bc:	f8a4 1100 	strh.w	r1, [r4, #256]	@ 0x100
			snprintf(msg, sizeof(msg), "Drag started: time=%lums, move=%dpx\r\n", timeSincePress, totalMovement);
 80038c0:	a805      	add	r0, sp, #20
 80038c2:	9200      	str	r2, [sp, #0]
 80038c4:	2132      	movs	r1, #50	@ 0x32
 80038c6:	4a26      	ldr	r2, [pc, #152]	@ (8003960 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x138>)
 80038c8:	f01f ff16 	bl	80236f8 <sniprintf>
			uartPrint(msg);
 80038cc:	a805      	add	r0, sp, #20
 80038ce:	f7ff fe57 	bl	8003580 <_Z9uartPrintPKc>
	if(!isDragging) {
 80038d2:	f894 3101 	ldrb.w	r3, [r4, #257]	@ 0x101
 80038d6:	2b00      	cmp	r3, #0
 80038d8:	d0d2      	beq.n	8003880 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x58>
 80038da:	e7c3      	b.n	8003864 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x3c>
 80038dc:	edd4 7a3e 	vldr	s15, [r4, #248]	@ 0xf8
	if(abs(velocity_x) > 50.0f || abs(velocity_y) > 50.0f) {
 80038e0:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8003964 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x13c>
 80038e4:	eef0 7ae7 	vabs.f32	s15, s15
 80038e8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80038ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80038f0:	dc33      	bgt.n	800395a <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x132>
 80038f2:	edd4 7a3f 	vldr	s15, [r4, #252]	@ 0xfc
 80038f6:	eef0 7ae7 	vabs.f32	s15, s15
	float velocity_factor = 1.0f;
 80038fa:	eef4 7ac7 	vcmpe.f32	s15, s14
 80038fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003902:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8003906:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800390a:	bfd8      	it	le
 800390c:	eeb0 7a67 	vmovle.f32	s14, s15
	deltaX = (int)(deltaX * velocity_factor);
 8003910:	ee07 1a90 	vmov	s15, r1
 8003914:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	snprintf(msg, sizeof(msg), "Drag: %d, %d\r\n", deltaX, deltaY);
 8003918:	2132      	movs	r1, #50	@ 0x32
	deltaX = (int)(deltaX * velocity_factor);
 800391a:	ee67 7a87 	vmul.f32	s15, s15, s14
	snprintf(msg, sizeof(msg), "Drag: %d, %d\r\n", deltaX, deltaY);
 800391e:	a805      	add	r0, sp, #20
	deltaX = (int)(deltaX * velocity_factor);
 8003920:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003924:	ee17 4a90 	vmov	r4, s15
	deltaY = (int)(deltaY * velocity_factor);
 8003928:	ee07 2a90 	vmov	s15, r2
 800392c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	snprintf(msg, sizeof(msg), "Drag: %d, %d\r\n", deltaX, deltaY);
 8003930:	4a0d      	ldr	r2, [pc, #52]	@ (8003968 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x140>)
	deltaY = (int)(deltaY * velocity_factor);
 8003932:	ee67 7a87 	vmul.f32	s15, s15, s14
	snprintf(msg, sizeof(msg), "Drag: %d, %d\r\n", deltaX, deltaY);
 8003936:	4623      	mov	r3, r4
	deltaY = (int)(deltaY * velocity_factor);
 8003938:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800393c:	ee17 5a90 	vmov	r5, s15
	snprintf(msg, sizeof(msg), "Drag: %d, %d\r\n", deltaX, deltaY);
 8003940:	edcd 7a00 	vstr	s15, [sp]
 8003944:	f01f fed8 	bl	80236f8 <sniprintf>
	uartPrint(msg);
 8003948:	a805      	add	r0, sp, #20
 800394a:	f7ff fe19 	bl	8003580 <_Z9uartPrintPKc>
	enqueueMouseEvent(deltaX, deltaY, 0);
 800394e:	2200      	movs	r2, #0
 8003950:	b269      	sxtb	r1, r5
 8003952:	b260      	sxtb	r0, r4
 8003954:	f7fe fd84 	bl	8002460 <enqueueMouseEvent>
 8003958:	e792      	b.n	8003880 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x58>
		velocity_factor = 1.5f;
 800395a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800395e:	e7d7      	b.n	8003910 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0xe8>
 8003960:	080252a0 	.word	0x080252a0
 8003964:	42480000 	.word	0x42480000
 8003968:	080252c6 	.word	0x080252c6

0800396c <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 800396c:	b570      	push	{r4, r5, r6, lr}
 800396e:	4604      	mov	r4, r0
 8003970:	460d      	mov	r5, r1
 8003972:	b090      	sub	sp, #64	@ 0x40
    Screen1ViewBase::handleClickEvent(event);
 8003974:	f00e fa5e 	bl	8011e34 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
    currentRadius = 20;
 8003978:	2314      	movs	r3, #20
 800397a:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
    touch_x = event.getX();
 800397e:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8003982:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
    touch_y = event.getY();
 8003986:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 800398a:	792d      	ldrb	r5, [r5, #4]
 800398c:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
    if (event.getType() == ClickEvent::PRESSED)
 8003990:	2d00      	cmp	r5, #0
 8003992:	d143      	bne.n	8003a1c <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xb0>
    	resetTouchState();
 8003994:	4620      	mov	r0, r4
 8003996:	f7ff fe68 	bl	800366a <_ZN11Screen1View15resetTouchStateEv>
    	lastDragTime = HAL_GetTick();
 800399a:	f000 fb8b 	bl	80040b4 <HAL_GetTick>
    	isPotentialClick = true;
 800399e:	2501      	movs	r5, #1
    	lastDragTime = HAL_GetTick();
 80039a0:	f8c4 00f4 	str.w	r0, [r4, #244]	@ 0xf4
    	isPotentialClick = true;
 80039a4:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
    	pressStartTime = HAL_GetTick();
 80039a8:	f000 fb84 	bl	80040b4 <HAL_GetTick>
 80039ac:	f8c4 0104 	str.w	r0, [r4, #260]	@ 0x104
    	myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 80039b0:	f8b4 00d0 	ldrh.w	r0, [r4, #208]	@ 0xd0
    	press_start_x = touch_x;
 80039b4:	f8d4 10c8 	ldr.w	r1, [r4, #200]	@ 0xc8
    	press_start_y = touch_y;
 80039b8:	f8d4 20cc 	ldr.w	r2, [r4, #204]	@ 0xcc
    	press_start_x = touch_x;
 80039bc:	f8c4 1108 	str.w	r1, [r4, #264]	@ 0x108
    	myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 80039c0:	fa00 f305 	lsl.w	r3, r0, r5
    	press_start_y = touch_y;
 80039c4:	f8c4 210c 	str.w	r2, [r4, #268]	@ 0x10c
    	myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 80039c8:	b21b      	sxth	r3, r3
 80039ca:	1a12      	subs	r2, r2, r0
 80039cc:	1a09      	subs	r1, r1, r0
 80039ce:	b212      	sxth	r2, r2
 80039d0:	b209      	sxth	r1, r1
 80039d2:	9300      	str	r3, [sp, #0]
 80039d4:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 80039d8:	f7ff fd81 	bl	80034de <_ZN8touchgfx8Drawable11setPositionEssss>
 80039dc:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 80039e0:	f884 5091 	strb.w	r5, [r4, #145]	@ 0x91
 80039e4:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 80039e6:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80039ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80039ee:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
    	isScaling = true;
 80039f2:	f884 50d4 	strb.w	r5, [r4, #212]	@ 0xd4
    	startTime = HAL_GetTick();
 80039f6:	f000 fb5d 	bl	80040b4 <HAL_GetTick>
 80039fa:	4b3f      	ldr	r3, [pc, #252]	@ (8003af8 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x18c>)
    	snprintf(msg, sizeof(msg), "Touch started at: x=%d, y=%d\r\n", touch_x, touch_y);
 80039fc:	4a3f      	ldr	r2, [pc, #252]	@ (8003afc <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x190>)
    	startTime = HAL_GetTick();
 80039fe:	6018      	str	r0, [r3, #0]
    	snprintf(msg, sizeof(msg), "Touch started at: x=%d, y=%d\r\n", touch_x, touch_y);
 8003a00:	f8d4 30cc 	ldr.w	r3, [r4, #204]	@ 0xcc
 8003a04:	9300      	str	r3, [sp, #0]
 8003a06:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
 8003a0a:	2132      	movs	r1, #50	@ 0x32
 8003a0c:	a803      	add	r0, sp, #12
 8003a0e:	f01f fe73 	bl	80236f8 <sniprintf>
    	uartPrint(msg);
 8003a12:	a803      	add	r0, sp, #12
 8003a14:	f7ff fdb4 	bl	8003580 <_Z9uartPrintPKc>
}
 8003a18:	b010      	add	sp, #64	@ 0x40
 8003a1a:	bd70      	pop	{r4, r5, r6, pc}
    else if(event.getType() == ClickEvent::RELEASED)
 8003a1c:	2d01      	cmp	r5, #1
 8003a1e:	d1fb      	bne.n	8003a18 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xac>
        uint32_t pressDuration = HAL_GetTick() - pressStartTime;
 8003a20:	f000 fb48 	bl	80040b4 <HAL_GetTick>
        int totalMovement = abs(touch_x - press_start_x) + abs(touch_y - press_start_y);
 8003a24:	f8d4 1108 	ldr.w	r1, [r4, #264]	@ 0x108
        uint32_t pressDuration = HAL_GetTick() - pressStartTime;
 8003a28:	f8d4 3104 	ldr.w	r3, [r4, #260]	@ 0x104
        int totalMovement = abs(touch_x - press_start_x) + abs(touch_y - press_start_y);
 8003a2c:	f8d4 20c8 	ldr.w	r2, [r4, #200]	@ 0xc8
 8003a30:	f894 6101 	ldrb.w	r6, [r4, #257]	@ 0x101
 8003a34:	1a52      	subs	r2, r2, r1
        uint32_t pressDuration = HAL_GetTick() - pressStartTime;
 8003a36:	1ac3      	subs	r3, r0, r3
        int totalMovement = abs(touch_x - press_start_x) + abs(touch_y - press_start_y);
 8003a38:	f8d4 10cc 	ldr.w	r1, [r4, #204]	@ 0xcc
 8003a3c:	f8d4 010c 	ldr.w	r0, [r4, #268]	@ 0x10c
 8003a40:	2a00      	cmp	r2, #0
 8003a42:	eba1 0100 	sub.w	r1, r1, r0
 8003a46:	bfb8      	it	lt
 8003a48:	4252      	neglt	r2, r2
 8003a4a:	2900      	cmp	r1, #0
 8003a4c:	bfb8      	it	lt
 8003a4e:	4249      	neglt	r1, r1
 8003a50:	440a      	add	r2, r1
        if(isPotentialClick && !isDragging && 
 8003a52:	f894 1100 	ldrb.w	r1, [r4, #256]	@ 0x100
 8003a56:	2900      	cmp	r1, #0
 8003a58:	d040      	beq.n	8003adc <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x170>
 8003a5a:	2e00      	cmp	r6, #0
 8003a5c:	d13f      	bne.n	8003ade <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x172>
 8003a5e:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8003a62:	d846      	bhi.n	8003af2 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x186>
           pressDuration <= CLICK_MAX_DURATION && 
 8003a64:	2a07      	cmp	r2, #7
 8003a66:	dc44      	bgt.n	8003af2 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x186>
            snprintf(msg, sizeof(msg), "Click detected: duration=%lums, movement=%dpx\r\n", pressDuration, totalMovement);
 8003a68:	2132      	movs	r1, #50	@ 0x32
 8003a6a:	9200      	str	r2, [sp, #0]
 8003a6c:	a803      	add	r0, sp, #12
 8003a6e:	4a24      	ldr	r2, [pc, #144]	@ (8003b00 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x194>)
 8003a70:	f01f fe42 	bl	80236f8 <sniprintf>
            uartPrint(msg);
 8003a74:	a803      	add	r0, sp, #12
 8003a76:	f7ff fd83 	bl	8003580 <_Z9uartPrintPKc>
            enqueueMouseEvent(0, 0, 1);
 8003a7a:	462a      	mov	r2, r5
 8003a7c:	4631      	mov	r1, r6
 8003a7e:	4630      	mov	r0, r6
 8003a80:	f7fe fcee 	bl	8002460 <enqueueMouseEvent>
            enqueueMouseEvent(0, 0, 2);
 8003a84:	2202      	movs	r2, #2
 8003a86:	4631      	mov	r1, r6
 8003a88:	4630      	mov	r0, r6
 8003a8a:	f7fe fce9 	bl	8002460 <enqueueMouseEvent>
        resetTouchState();
 8003a8e:	4620      	mov	r0, r4
 8003a90:	f7ff fdeb 	bl	800366a <_ZN11Screen1View15resetTouchStateEv>
        myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 8003a94:	f8b4 00d0 	ldrh.w	r0, [r4, #208]	@ 0xd0
 8003a98:	f8d4 20cc 	ldr.w	r2, [r4, #204]	@ 0xcc
 8003a9c:	f8d4 10c8 	ldr.w	r1, [r4, #200]	@ 0xc8
 8003aa0:	0043      	lsls	r3, r0, #1
 8003aa2:	b21b      	sxth	r3, r3
 8003aa4:	1a12      	subs	r2, r2, r0
 8003aa6:	1a09      	subs	r1, r1, r0
 8003aa8:	9300      	str	r3, [sp, #0]
 8003aaa:	b212      	sxth	r2, r2
 8003aac:	b209      	sxth	r1, r1
 8003aae:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 8003ab2:	f7ff fd14 	bl	80034de <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ab6:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 8003aba:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 8003abc:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003ac0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003ac4:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 8003ac8:	2301      	movs	r3, #1
 8003aca:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
        isScaling = true;
 8003ace:	f884 30d4 	strb.w	r3, [r4, #212]	@ 0xd4
        startTime = HAL_GetTick();
 8003ad2:	f000 faef 	bl	80040b4 <HAL_GetTick>
 8003ad6:	4b08      	ldr	r3, [pc, #32]	@ (8003af8 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x18c>)
 8003ad8:	6018      	str	r0, [r3, #0]
}
 8003ada:	e79d      	b.n	8003a18 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xac>
        else if(isDragging)
 8003adc:	b14e      	cbz	r6, 8003af2 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x186>
            snprintf(msg, sizeof(msg), "Drag ended: duration=%lums, movement=%dpx\r\n", pressDuration, totalMovement);
 8003ade:	9200      	str	r2, [sp, #0]
 8003ae0:	4a08      	ldr	r2, [pc, #32]	@ (8003b04 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x198>)
            snprintf(msg, sizeof(msg), "Gesture cancelled: duration=%lums, movement=%dpx\r\n", pressDuration, totalMovement);
 8003ae2:	2132      	movs	r1, #50	@ 0x32
 8003ae4:	a803      	add	r0, sp, #12
 8003ae6:	f01f fe07 	bl	80236f8 <sniprintf>
            uartPrint(msg);
 8003aea:	a803      	add	r0, sp, #12
 8003aec:	f7ff fd48 	bl	8003580 <_Z9uartPrintPKc>
 8003af0:	e7cd      	b.n	8003a8e <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x122>
            snprintf(msg, sizeof(msg), "Gesture cancelled: duration=%lums, movement=%dpx\r\n", pressDuration, totalMovement);
 8003af2:	9200      	str	r2, [sp, #0]
 8003af4:	4a04      	ldr	r2, [pc, #16]	@ (8003b08 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x19c>)
 8003af6:	e7f4      	b.n	8003ae2 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x176>
 8003af8:	20003238 	.word	0x20003238
 8003afc:	080252d5 	.word	0x080252d5
 8003b00:	080252f4 	.word	0x080252f4
 8003b04:	08025324 	.word	0x08025324
 8003b08:	08025350 	.word	0x08025350

08003b0c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8003b0c:	20f0      	movs	r0, #240	@ 0xf0
 8003b0e:	4770      	bx	lr

08003b10 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8003b10:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8003b14:	4770      	bx	lr

08003b16 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8003b16:	2029      	movs	r0, #41	@ 0x29
 8003b18:	f7fe bd38 	b.w	800258c <LCD_IO_WriteReg>

08003b1c <ili9341_DisplayOff>:
 8003b1c:	2028      	movs	r0, #40	@ 0x28
 8003b1e:	f7fe bd35 	b.w	800258c <LCD_IO_WriteReg>

08003b22 <ili9341_Init>:
{
 8003b22:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003b24:	f7fe fd06 	bl	8002534 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8003b28:	20ca      	movs	r0, #202	@ 0xca
 8003b2a:	f7fe fd2f 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b2e:	20c3      	movs	r0, #195	@ 0xc3
 8003b30:	f7fe fd10 	bl	8002554 <LCD_IO_WriteData>
 8003b34:	2008      	movs	r0, #8
 8003b36:	f7fe fd0d 	bl	8002554 <LCD_IO_WriteData>
 8003b3a:	2050      	movs	r0, #80	@ 0x50
 8003b3c:	f7fe fd0a 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b40:	20cf      	movs	r0, #207	@ 0xcf
 8003b42:	f7fe fd23 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b46:	2000      	movs	r0, #0
 8003b48:	f7fe fd04 	bl	8002554 <LCD_IO_WriteData>
 8003b4c:	20c1      	movs	r0, #193	@ 0xc1
 8003b4e:	f7fe fd01 	bl	8002554 <LCD_IO_WriteData>
 8003b52:	2030      	movs	r0, #48	@ 0x30
 8003b54:	f7fe fcfe 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b58:	20ed      	movs	r0, #237	@ 0xed
 8003b5a:	f7fe fd17 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b5e:	2064      	movs	r0, #100	@ 0x64
 8003b60:	f7fe fcf8 	bl	8002554 <LCD_IO_WriteData>
 8003b64:	2003      	movs	r0, #3
 8003b66:	f7fe fcf5 	bl	8002554 <LCD_IO_WriteData>
 8003b6a:	2012      	movs	r0, #18
 8003b6c:	f7fe fcf2 	bl	8002554 <LCD_IO_WriteData>
 8003b70:	2081      	movs	r0, #129	@ 0x81
 8003b72:	f7fe fcef 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b76:	20e8      	movs	r0, #232	@ 0xe8
 8003b78:	f7fe fd08 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b7c:	2085      	movs	r0, #133	@ 0x85
 8003b7e:	f7fe fce9 	bl	8002554 <LCD_IO_WriteData>
 8003b82:	2000      	movs	r0, #0
 8003b84:	f7fe fce6 	bl	8002554 <LCD_IO_WriteData>
 8003b88:	2078      	movs	r0, #120	@ 0x78
 8003b8a:	f7fe fce3 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b8e:	20cb      	movs	r0, #203	@ 0xcb
 8003b90:	f7fe fcfc 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b94:	2039      	movs	r0, #57	@ 0x39
 8003b96:	f7fe fcdd 	bl	8002554 <LCD_IO_WriteData>
 8003b9a:	202c      	movs	r0, #44	@ 0x2c
 8003b9c:	f7fe fcda 	bl	8002554 <LCD_IO_WriteData>
 8003ba0:	2000      	movs	r0, #0
 8003ba2:	f7fe fcd7 	bl	8002554 <LCD_IO_WriteData>
 8003ba6:	2034      	movs	r0, #52	@ 0x34
 8003ba8:	f7fe fcd4 	bl	8002554 <LCD_IO_WriteData>
 8003bac:	2002      	movs	r0, #2
 8003bae:	f7fe fcd1 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bb2:	20f7      	movs	r0, #247	@ 0xf7
 8003bb4:	f7fe fcea 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bb8:	2020      	movs	r0, #32
 8003bba:	f7fe fccb 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bbe:	20ea      	movs	r0, #234	@ 0xea
 8003bc0:	f7fe fce4 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bc4:	2000      	movs	r0, #0
 8003bc6:	f7fe fcc5 	bl	8002554 <LCD_IO_WriteData>
 8003bca:	2000      	movs	r0, #0
 8003bcc:	f7fe fcc2 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bd0:	20b1      	movs	r0, #177	@ 0xb1
 8003bd2:	f7fe fcdb 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bd6:	2000      	movs	r0, #0
 8003bd8:	f7fe fcbc 	bl	8002554 <LCD_IO_WriteData>
 8003bdc:	201b      	movs	r0, #27
 8003bde:	f7fe fcb9 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003be2:	20b6      	movs	r0, #182	@ 0xb6
 8003be4:	f7fe fcd2 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003be8:	200a      	movs	r0, #10
 8003bea:	f7fe fcb3 	bl	8002554 <LCD_IO_WriteData>
 8003bee:	20a2      	movs	r0, #162	@ 0xa2
 8003bf0:	f7fe fcb0 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bf4:	20c0      	movs	r0, #192	@ 0xc0
 8003bf6:	f7fe fcc9 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bfa:	2010      	movs	r0, #16
 8003bfc:	f7fe fcaa 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c00:	20c1      	movs	r0, #193	@ 0xc1
 8003c02:	f7fe fcc3 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c06:	2010      	movs	r0, #16
 8003c08:	f7fe fca4 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c0c:	20c5      	movs	r0, #197	@ 0xc5
 8003c0e:	f7fe fcbd 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c12:	2045      	movs	r0, #69	@ 0x45
 8003c14:	f7fe fc9e 	bl	8002554 <LCD_IO_WriteData>
 8003c18:	2015      	movs	r0, #21
 8003c1a:	f7fe fc9b 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c1e:	20c7      	movs	r0, #199	@ 0xc7
 8003c20:	f7fe fcb4 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c24:	2090      	movs	r0, #144	@ 0x90
 8003c26:	f7fe fc95 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c2a:	2036      	movs	r0, #54	@ 0x36
 8003c2c:	f7fe fcae 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c30:	20c8      	movs	r0, #200	@ 0xc8
 8003c32:	f7fe fc8f 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c36:	20f2      	movs	r0, #242	@ 0xf2
 8003c38:	f7fe fca8 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c3c:	2000      	movs	r0, #0
 8003c3e:	f7fe fc89 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c42:	20b0      	movs	r0, #176	@ 0xb0
 8003c44:	f7fe fca2 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c48:	20c2      	movs	r0, #194	@ 0xc2
 8003c4a:	f7fe fc83 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c4e:	20b6      	movs	r0, #182	@ 0xb6
 8003c50:	f7fe fc9c 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c54:	200a      	movs	r0, #10
 8003c56:	f7fe fc7d 	bl	8002554 <LCD_IO_WriteData>
 8003c5a:	20a7      	movs	r0, #167	@ 0xa7
 8003c5c:	f7fe fc7a 	bl	8002554 <LCD_IO_WriteData>
 8003c60:	2027      	movs	r0, #39	@ 0x27
 8003c62:	f7fe fc77 	bl	8002554 <LCD_IO_WriteData>
 8003c66:	2004      	movs	r0, #4
 8003c68:	f7fe fc74 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c6c:	202a      	movs	r0, #42	@ 0x2a
 8003c6e:	f7fe fc8d 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c72:	2000      	movs	r0, #0
 8003c74:	f7fe fc6e 	bl	8002554 <LCD_IO_WriteData>
 8003c78:	2000      	movs	r0, #0
 8003c7a:	f7fe fc6b 	bl	8002554 <LCD_IO_WriteData>
 8003c7e:	2000      	movs	r0, #0
 8003c80:	f7fe fc68 	bl	8002554 <LCD_IO_WriteData>
 8003c84:	20ef      	movs	r0, #239	@ 0xef
 8003c86:	f7fe fc65 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c8a:	202b      	movs	r0, #43	@ 0x2b
 8003c8c:	f7fe fc7e 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c90:	2000      	movs	r0, #0
 8003c92:	f7fe fc5f 	bl	8002554 <LCD_IO_WriteData>
 8003c96:	2000      	movs	r0, #0
 8003c98:	f7fe fc5c 	bl	8002554 <LCD_IO_WriteData>
 8003c9c:	2001      	movs	r0, #1
 8003c9e:	f7fe fc59 	bl	8002554 <LCD_IO_WriteData>
 8003ca2:	203f      	movs	r0, #63	@ 0x3f
 8003ca4:	f7fe fc56 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003ca8:	20f6      	movs	r0, #246	@ 0xf6
 8003caa:	f7fe fc6f 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003cae:	2001      	movs	r0, #1
 8003cb0:	f7fe fc50 	bl	8002554 <LCD_IO_WriteData>
 8003cb4:	2000      	movs	r0, #0
 8003cb6:	f7fe fc4d 	bl	8002554 <LCD_IO_WriteData>
 8003cba:	2006      	movs	r0, #6
 8003cbc:	f7fe fc4a 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003cc0:	202c      	movs	r0, #44	@ 0x2c
 8003cc2:	f7fe fc63 	bl	800258c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003cc6:	20c8      	movs	r0, #200	@ 0xc8
 8003cc8:	f7fe fcae 	bl	8002628 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003ccc:	2026      	movs	r0, #38	@ 0x26
 8003cce:	f7fe fc5d 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003cd2:	2001      	movs	r0, #1
 8003cd4:	f7fe fc3e 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003cd8:	20e0      	movs	r0, #224	@ 0xe0
 8003cda:	f7fe fc57 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003cde:	200f      	movs	r0, #15
 8003ce0:	f7fe fc38 	bl	8002554 <LCD_IO_WriteData>
 8003ce4:	2029      	movs	r0, #41	@ 0x29
 8003ce6:	f7fe fc35 	bl	8002554 <LCD_IO_WriteData>
 8003cea:	2024      	movs	r0, #36	@ 0x24
 8003cec:	f7fe fc32 	bl	8002554 <LCD_IO_WriteData>
 8003cf0:	200c      	movs	r0, #12
 8003cf2:	f7fe fc2f 	bl	8002554 <LCD_IO_WriteData>
 8003cf6:	200e      	movs	r0, #14
 8003cf8:	f7fe fc2c 	bl	8002554 <LCD_IO_WriteData>
 8003cfc:	2009      	movs	r0, #9
 8003cfe:	f7fe fc29 	bl	8002554 <LCD_IO_WriteData>
 8003d02:	204e      	movs	r0, #78	@ 0x4e
 8003d04:	f7fe fc26 	bl	8002554 <LCD_IO_WriteData>
 8003d08:	2078      	movs	r0, #120	@ 0x78
 8003d0a:	f7fe fc23 	bl	8002554 <LCD_IO_WriteData>
 8003d0e:	203c      	movs	r0, #60	@ 0x3c
 8003d10:	f7fe fc20 	bl	8002554 <LCD_IO_WriteData>
 8003d14:	2009      	movs	r0, #9
 8003d16:	f7fe fc1d 	bl	8002554 <LCD_IO_WriteData>
 8003d1a:	2013      	movs	r0, #19
 8003d1c:	f7fe fc1a 	bl	8002554 <LCD_IO_WriteData>
 8003d20:	2005      	movs	r0, #5
 8003d22:	f7fe fc17 	bl	8002554 <LCD_IO_WriteData>
 8003d26:	2017      	movs	r0, #23
 8003d28:	f7fe fc14 	bl	8002554 <LCD_IO_WriteData>
 8003d2c:	2011      	movs	r0, #17
 8003d2e:	f7fe fc11 	bl	8002554 <LCD_IO_WriteData>
 8003d32:	2000      	movs	r0, #0
 8003d34:	f7fe fc0e 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003d38:	20e1      	movs	r0, #225	@ 0xe1
 8003d3a:	f7fe fc27 	bl	800258c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003d3e:	2000      	movs	r0, #0
 8003d40:	f7fe fc08 	bl	8002554 <LCD_IO_WriteData>
 8003d44:	2016      	movs	r0, #22
 8003d46:	f7fe fc05 	bl	8002554 <LCD_IO_WriteData>
 8003d4a:	201b      	movs	r0, #27
 8003d4c:	f7fe fc02 	bl	8002554 <LCD_IO_WriteData>
 8003d50:	2004      	movs	r0, #4
 8003d52:	f7fe fbff 	bl	8002554 <LCD_IO_WriteData>
 8003d56:	2011      	movs	r0, #17
 8003d58:	f7fe fbfc 	bl	8002554 <LCD_IO_WriteData>
 8003d5c:	2007      	movs	r0, #7
 8003d5e:	f7fe fbf9 	bl	8002554 <LCD_IO_WriteData>
 8003d62:	2031      	movs	r0, #49	@ 0x31
 8003d64:	f7fe fbf6 	bl	8002554 <LCD_IO_WriteData>
 8003d68:	2033      	movs	r0, #51	@ 0x33
 8003d6a:	f7fe fbf3 	bl	8002554 <LCD_IO_WriteData>
 8003d6e:	2042      	movs	r0, #66	@ 0x42
 8003d70:	f7fe fbf0 	bl	8002554 <LCD_IO_WriteData>
 8003d74:	2005      	movs	r0, #5
 8003d76:	f7fe fbed 	bl	8002554 <LCD_IO_WriteData>
 8003d7a:	200c      	movs	r0, #12
 8003d7c:	f7fe fbea 	bl	8002554 <LCD_IO_WriteData>
 8003d80:	200a      	movs	r0, #10
 8003d82:	f7fe fbe7 	bl	8002554 <LCD_IO_WriteData>
 8003d86:	2028      	movs	r0, #40	@ 0x28
 8003d88:	f7fe fbe4 	bl	8002554 <LCD_IO_WriteData>
 8003d8c:	202f      	movs	r0, #47	@ 0x2f
 8003d8e:	f7fe fbe1 	bl	8002554 <LCD_IO_WriteData>
 8003d92:	200f      	movs	r0, #15
 8003d94:	f7fe fbde 	bl	8002554 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003d98:	2011      	movs	r0, #17
 8003d9a:	f7fe fbf7 	bl	800258c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003d9e:	20c8      	movs	r0, #200	@ 0xc8
 8003da0:	f7fe fc42 	bl	8002628 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003da4:	2029      	movs	r0, #41	@ 0x29
 8003da6:	f7fe fbf1 	bl	800258c <LCD_IO_WriteReg>
}
 8003daa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8003dae:	202c      	movs	r0, #44	@ 0x2c
 8003db0:	f7fe bbec 	b.w	800258c <LCD_IO_WriteReg>

08003db4 <ili9341_ReadID>:
{
 8003db4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003db6:	f7fe fbbd 	bl	8002534 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8003dba:	2103      	movs	r1, #3
 8003dbc:	20d3      	movs	r0, #211	@ 0xd3
 8003dbe:	f7fe fc01 	bl	80025c4 <LCD_IO_ReadData>
}
 8003dc2:	b280      	uxth	r0, r0
 8003dc4:	bd08      	pop	{r3, pc}

08003dc6 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8003dc6:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8003dc8:	b2c4      	uxtb	r4, r0
 8003dca:	2202      	movs	r2, #2
 8003dcc:	2103      	movs	r1, #3
 8003dce:	4620      	mov	r0, r4
 8003dd0:	f7fe fb66 	bl	80024a0 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8003dd4:	200a      	movs	r0, #10
 8003dd6:	f7fe fbab 	bl	8002530 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8003dda:	4620      	mov	r0, r4
 8003ddc:	2200      	movs	r2, #0
 8003dde:	2103      	movs	r1, #3
 8003de0:	f7fe fb5e 	bl	80024a0 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8003de4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8003de8:	2002      	movs	r0, #2
 8003dea:	f7fe bba1 	b.w	8002530 <IOE_Delay>

08003dee <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8003dee:	b538      	push	{r3, r4, r5, lr}
 8003df0:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003df2:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8003df4:	f7fe fb52 	bl	800249c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003df8:	2100      	movs	r1, #0
 8003dfa:	4620      	mov	r0, r4
 8003dfc:	f7fe fb68 	bl	80024d0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003e00:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003e02:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003e04:	4620      	mov	r0, r4
 8003e06:	f7fe fb63 	bl	80024d0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003e0a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8003e0e:	b280      	uxth	r0, r0
 8003e10:	bd38      	pop	{r3, r4, r5, pc}

08003e12 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8003e12:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8003e14:	b2c4      	uxtb	r4, r0
 8003e16:	2140      	movs	r1, #64	@ 0x40
 8003e18:	4620      	mov	r0, r4
 8003e1a:	f7fe fb59 	bl	80024d0 <IOE_Read>
  
  if(state > 0)
 8003e1e:	0603      	lsls	r3, r0, #24
 8003e20:	d507      	bpl.n	8003e32 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8003e22:	214c      	movs	r1, #76	@ 0x4c
 8003e24:	4620      	mov	r0, r4
 8003e26:	f7fe fb53 	bl	80024d0 <IOE_Read>
 8003e2a:	3800      	subs	r0, #0
 8003e2c:	bf18      	it	ne
 8003e2e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8003e30:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003e32:	2201      	movs	r2, #1
 8003e34:	214b      	movs	r1, #75	@ 0x4b
 8003e36:	4620      	mov	r0, r4
 8003e38:	f7fe fb32 	bl	80024a0 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003e3c:	4620      	mov	r0, r4
 8003e3e:	2200      	movs	r2, #0
 8003e40:	214b      	movs	r1, #75	@ 0x4b
 8003e42:	f7fe fb2d 	bl	80024a0 <IOE_Write>
  uint8_t ret = 0;
 8003e46:	2000      	movs	r0, #0
 8003e48:	e7f2      	b.n	8003e30 <stmpe811_TS_DetectTouch+0x1e>

08003e4a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8003e4a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003e4c:	2304      	movs	r3, #4
 8003e4e:	b2c4      	uxtb	r4, r0
{
 8003e50:	460e      	mov	r6, r1
 8003e52:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003e54:	21d7      	movs	r1, #215	@ 0xd7
 8003e56:	eb0d 0203 	add.w	r2, sp, r3
 8003e5a:	4620      	mov	r0, r4
 8003e5c:	f7fe fb52 	bl	8002504 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8003e60:	9b01      	ldr	r3, [sp, #4]
 8003e62:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003e64:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003e66:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003e6a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003e6c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003e6e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003e70:	2201      	movs	r2, #1
 8003e72:	214b      	movs	r1, #75	@ 0x4b
 8003e74:	f7fe fb14 	bl	80024a0 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003e78:	2200      	movs	r2, #0
 8003e7a:	214b      	movs	r1, #75	@ 0x4b
 8003e7c:	4620      	mov	r0, r4
 8003e7e:	f7fe fb0f 	bl	80024a0 <IOE_Write>
}
 8003e82:	b002      	add	sp, #8
 8003e84:	bd70      	pop	{r4, r5, r6, pc}
	...

08003e88 <stmpe811_Init>:
{
 8003e88:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8003e8a:	4a0a      	ldr	r2, [pc, #40]	@ (8003eb4 <stmpe811_Init+0x2c>)
 8003e8c:	7813      	ldrb	r3, [r2, #0]
 8003e8e:	4298      	cmp	r0, r3
{
 8003e90:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8003e92:	d00d      	beq.n	8003eb0 <stmpe811_Init+0x28>
 8003e94:	7851      	ldrb	r1, [r2, #1]
 8003e96:	4288      	cmp	r0, r1
 8003e98:	d00a      	beq.n	8003eb0 <stmpe811_Init+0x28>
 8003e9a:	b10b      	cbz	r3, 8003ea0 <stmpe811_Init+0x18>
 8003e9c:	b941      	cbnz	r1, 8003eb0 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8003e9e:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8003ea0:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8003ea2:	f7fe fafb 	bl	800249c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8003ea6:	4620      	mov	r0, r4
}
 8003ea8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8003eac:	f7ff bf8b 	b.w	8003dc6 <stmpe811_Reset>
}
 8003eb0:	bd10      	pop	{r4, pc}
 8003eb2:	bf00      	nop
 8003eb4:	2000323c 	.word	0x2000323c

08003eb8 <stmpe811_EnableGlobalIT>:
{
 8003eb8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003eba:	b2c4      	uxtb	r4, r0
 8003ebc:	2109      	movs	r1, #9
 8003ebe:	4620      	mov	r0, r4
 8003ec0:	f7fe fb06 	bl	80024d0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8003ec4:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003ec8:	b2d2      	uxtb	r2, r2
 8003eca:	4620      	mov	r0, r4
 8003ecc:	2109      	movs	r1, #9
}
 8003ece:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003ed2:	f7fe bae5 	b.w	80024a0 <IOE_Write>

08003ed6 <stmpe811_DisableGlobalIT>:
{
 8003ed6:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003ed8:	b2c4      	uxtb	r4, r0
 8003eda:	2109      	movs	r1, #9
 8003edc:	4620      	mov	r0, r4
 8003ede:	f7fe faf7 	bl	80024d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003ee2:	2109      	movs	r1, #9
 8003ee4:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8003ee8:	4620      	mov	r0, r4
}
 8003eea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003eee:	f7fe bad7 	b.w	80024a0 <IOE_Write>

08003ef2 <stmpe811_EnableITSource>:
{
 8003ef2:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003ef4:	b2c4      	uxtb	r4, r0
{
 8003ef6:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003ef8:	4620      	mov	r0, r4
 8003efa:	210a      	movs	r1, #10
 8003efc:	f7fe fae8 	bl	80024d0 <IOE_Read>
  tmp |= Source; 
 8003f00:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003f04:	b2d2      	uxtb	r2, r2
 8003f06:	4620      	mov	r0, r4
 8003f08:	210a      	movs	r1, #10
}
 8003f0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003f0e:	f7fe bac7 	b.w	80024a0 <IOE_Write>

08003f12 <stmpe811_TS_EnableIT>:
{
 8003f12:	b510      	push	{r4, lr}
 8003f14:	4604      	mov	r4, r0
  IOE_ITConfig();
 8003f16:	f7fe fac2 	bl	800249e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003f1a:	4620      	mov	r0, r4
 8003f1c:	211f      	movs	r1, #31
 8003f1e:	f7ff ffe8 	bl	8003ef2 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003f22:	4620      	mov	r0, r4
}
 8003f24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003f28:	f7ff bfc6 	b.w	8003eb8 <stmpe811_EnableGlobalIT>

08003f2c <stmpe811_DisableITSource>:
{
 8003f2c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003f2e:	b2c4      	uxtb	r4, r0
{
 8003f30:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003f32:	4620      	mov	r0, r4
 8003f34:	210a      	movs	r1, #10
 8003f36:	f7fe facb 	bl	80024d0 <IOE_Read>
  tmp &= ~Source; 
 8003f3a:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003f3e:	b2d2      	uxtb	r2, r2
 8003f40:	4620      	mov	r0, r4
 8003f42:	210a      	movs	r1, #10
}
 8003f44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003f48:	f7fe baaa 	b.w	80024a0 <IOE_Write>

08003f4c <stmpe811_TS_DisableIT>:
{
 8003f4c:	b510      	push	{r4, lr}
 8003f4e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003f50:	f7ff ffc1 	bl	8003ed6 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003f54:	4620      	mov	r0, r4
 8003f56:	211f      	movs	r1, #31
}
 8003f58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003f5c:	f7ff bfe6 	b.w	8003f2c <stmpe811_DisableITSource>

08003f60 <stmpe811_ReadGITStatus>:
{
 8003f60:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003f62:	b2c0      	uxtb	r0, r0
{
 8003f64:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003f66:	210b      	movs	r1, #11
 8003f68:	f7fe fab2 	bl	80024d0 <IOE_Read>
}
 8003f6c:	4020      	ands	r0, r4
 8003f6e:	bd10      	pop	{r4, pc}

08003f70 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003f70:	211f      	movs	r1, #31
 8003f72:	f7ff bff5 	b.w	8003f60 <stmpe811_ReadGITStatus>

08003f76 <stmpe811_ClearGlobalIT>:
{
 8003f76:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003f78:	b2c0      	uxtb	r0, r0
 8003f7a:	210b      	movs	r1, #11
 8003f7c:	f7fe ba90 	b.w	80024a0 <IOE_Write>

08003f80 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003f80:	211f      	movs	r1, #31
 8003f82:	f7ff bff8 	b.w	8003f76 <stmpe811_ClearGlobalIT>

08003f86 <stmpe811_IO_EnableAF>:
{
 8003f86:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003f88:	b2c4      	uxtb	r4, r0
{
 8003f8a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003f8c:	4620      	mov	r0, r4
 8003f8e:	2117      	movs	r1, #23
 8003f90:	f7fe fa9e 	bl	80024d0 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8003f94:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003f98:	b2d2      	uxtb	r2, r2
 8003f9a:	4620      	mov	r0, r4
 8003f9c:	2117      	movs	r1, #23
}
 8003f9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003fa2:	f7fe ba7d 	b.w	80024a0 <IOE_Write>

08003fa6 <stmpe811_TS_Start>:
{
 8003fa6:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003fa8:	b2c4      	uxtb	r4, r0
{
 8003faa:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003fac:	2104      	movs	r1, #4
 8003fae:	4620      	mov	r0, r4
 8003fb0:	f7fe fa8e 	bl	80024d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003fb4:	2104      	movs	r1, #4
 8003fb6:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003fba:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003fbc:	4620      	mov	r0, r4
 8003fbe:	f7fe fa6f 	bl	80024a0 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8003fc2:	4630      	mov	r0, r6
 8003fc4:	21f0      	movs	r1, #240	@ 0xf0
 8003fc6:	f7ff ffde 	bl	8003f86 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003fca:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8003fce:	4620      	mov	r0, r4
 8003fd0:	2104      	movs	r1, #4
 8003fd2:	f7fe fa65 	bl	80024a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8003fd6:	2249      	movs	r2, #73	@ 0x49
 8003fd8:	2120      	movs	r1, #32
 8003fda:	4620      	mov	r0, r4
 8003fdc:	f7fe fa60 	bl	80024a0 <IOE_Write>
  IOE_Delay(2); 
 8003fe0:	2002      	movs	r0, #2
 8003fe2:	f7fe faa5 	bl	8002530 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8003fe6:	4620      	mov	r0, r4
 8003fe8:	2201      	movs	r2, #1
 8003fea:	2121      	movs	r1, #33	@ 0x21
 8003fec:	f7fe fa58 	bl	80024a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8003ff0:	4620      	mov	r0, r4
 8003ff2:	229a      	movs	r2, #154	@ 0x9a
 8003ff4:	2141      	movs	r1, #65	@ 0x41
 8003ff6:	f7fe fa53 	bl	80024a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8003ffa:	4620      	mov	r0, r4
 8003ffc:	2201      	movs	r2, #1
 8003ffe:	214a      	movs	r1, #74	@ 0x4a
 8004000:	f7fe fa4e 	bl	80024a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004004:	4620      	mov	r0, r4
 8004006:	2201      	movs	r2, #1
 8004008:	214b      	movs	r1, #75	@ 0x4b
 800400a:	f7fe fa49 	bl	80024a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800400e:	4620      	mov	r0, r4
 8004010:	2200      	movs	r2, #0
 8004012:	214b      	movs	r1, #75	@ 0x4b
 8004014:	f7fe fa44 	bl	80024a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8004018:	4620      	mov	r0, r4
 800401a:	2201      	movs	r2, #1
 800401c:	2156      	movs	r1, #86	@ 0x56
 800401e:	f7fe fa3f 	bl	80024a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8004022:	4620      	mov	r0, r4
 8004024:	2201      	movs	r2, #1
 8004026:	2158      	movs	r1, #88	@ 0x58
 8004028:	f7fe fa3a 	bl	80024a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800402c:	4620      	mov	r0, r4
 800402e:	2201      	movs	r2, #1
 8004030:	2140      	movs	r1, #64	@ 0x40
 8004032:	f7fe fa35 	bl	80024a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8004036:	4620      	mov	r0, r4
 8004038:	22ff      	movs	r2, #255	@ 0xff
 800403a:	210b      	movs	r1, #11
 800403c:	f7fe fa30 	bl	80024a0 <IOE_Write>
}
 8004040:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8004044:	2002      	movs	r0, #2
 8004046:	f7fe ba73 	b.w	8002530 <IOE_Delay>
	...

0800404c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800404c:	4b05      	ldr	r3, [pc, #20]	@ (8004064 <SystemInit+0x18>)
 800404e:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8004052:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8004056:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800405a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800405e:	609a      	str	r2, [r3, #8]
#endif
}
 8004060:	4770      	bx	lr
 8004062:	bf00      	nop
 8004064:	e000ed00 	.word	0xe000ed00

08004068 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004068:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800406a:	4b0b      	ldr	r3, [pc, #44]	@ (8004098 <HAL_Init+0x30>)
 800406c:	681a      	ldr	r2, [r3, #0]
 800406e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004072:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004074:	681a      	ldr	r2, [r3, #0]
 8004076:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800407a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800407c:	681a      	ldr	r2, [r3, #0]
 800407e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004082:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004084:	2003      	movs	r0, #3
 8004086:	f000 f82f 	bl	80040e8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800408a:	2000      	movs	r0, #0
 800408c:	f7fe fd44 	bl	8002b18 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004090:	f7fe fad8 	bl	8002644 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004094:	2000      	movs	r0, #0
 8004096:	bd08      	pop	{r3, pc}
 8004098:	40023c00 	.word	0x40023c00

0800409c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800409c:	4a03      	ldr	r2, [pc, #12]	@ (80040ac <HAL_IncTick+0x10>)
 800409e:	4b04      	ldr	r3, [pc, #16]	@ (80040b0 <HAL_IncTick+0x14>)
 80040a0:	6811      	ldr	r1, [r2, #0]
 80040a2:	781b      	ldrb	r3, [r3, #0]
 80040a4:	440b      	add	r3, r1
 80040a6:	6013      	str	r3, [r2, #0]
}
 80040a8:	4770      	bx	lr
 80040aa:	bf00      	nop
 80040ac:	20003240 	.word	0x20003240
 80040b0:	200000c8 	.word	0x200000c8

080040b4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80040b4:	4b01      	ldr	r3, [pc, #4]	@ (80040bc <HAL_GetTick+0x8>)
 80040b6:	6818      	ldr	r0, [r3, #0]
}
 80040b8:	4770      	bx	lr
 80040ba:	bf00      	nop
 80040bc:	20003240 	.word	0x20003240

080040c0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80040c0:	b538      	push	{r3, r4, r5, lr}
 80040c2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80040c4:	f7ff fff6 	bl	80040b4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80040c8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80040ca:	bf1c      	itt	ne
 80040cc:	4b05      	ldrne	r3, [pc, #20]	@ (80040e4 <HAL_Delay+0x24>)
 80040ce:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80040d0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80040d2:	bf18      	it	ne
 80040d4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80040d6:	f7ff ffed 	bl	80040b4 <HAL_GetTick>
 80040da:	1b43      	subs	r3, r0, r5
 80040dc:	42a3      	cmp	r3, r4
 80040de:	d3fa      	bcc.n	80040d6 <HAL_Delay+0x16>
  {
  }
}
 80040e0:	bd38      	pop	{r3, r4, r5, pc}
 80040e2:	bf00      	nop
 80040e4:	200000c8 	.word	0x200000c8

080040e8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80040e8:	4907      	ldr	r1, [pc, #28]	@ (8004108 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80040ea:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80040ec:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80040f0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80040f2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80040f4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80040f8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80040fa:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80040fc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004100:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004104:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004106:	4770      	bx	lr
 8004108:	e000ed00 	.word	0xe000ed00

0800410c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800410c:	4b16      	ldr	r3, [pc, #88]	@ (8004168 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800410e:	b530      	push	{r4, r5, lr}
 8004110:	68dc      	ldr	r4, [r3, #12]
 8004112:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004116:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800411a:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800411c:	2b04      	cmp	r3, #4
 800411e:	bf28      	it	cs
 8004120:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004122:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004124:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004128:	bf8c      	ite	hi
 800412a:	3c03      	subhi	r4, #3
 800412c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800412e:	fa05 f303 	lsl.w	r3, r5, r3
 8004132:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004136:	40a5      	lsls	r5, r4
 8004138:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800413c:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 800413e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004140:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004144:	bfac      	ite	ge
 8004146:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800414a:	4a08      	ldrlt	r2, [pc, #32]	@ (800416c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800414c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004150:	bfb8      	it	lt
 8004152:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004156:	b2db      	uxtb	r3, r3
 8004158:	bfaa      	itet	ge
 800415a:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800415e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004160:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004164:	bd30      	pop	{r4, r5, pc}
 8004166:	bf00      	nop
 8004168:	e000ed00 	.word	0xe000ed00
 800416c:	e000ed14 	.word	0xe000ed14

08004170 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004170:	2800      	cmp	r0, #0
 8004172:	db07      	blt.n	8004184 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004174:	4a04      	ldr	r2, [pc, #16]	@ (8004188 <HAL_NVIC_EnableIRQ+0x18>)
 8004176:	0941      	lsrs	r1, r0, #5
 8004178:	2301      	movs	r3, #1
 800417a:	f000 001f 	and.w	r0, r0, #31
 800417e:	4083      	lsls	r3, r0
 8004180:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004184:	4770      	bx	lr
 8004186:	bf00      	nop
 8004188:	e000e100 	.word	0xe000e100

0800418c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800418c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800418e:	4604      	mov	r4, r0
 8004190:	b150      	cbz	r0, 80041a8 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004192:	7943      	ldrb	r3, [r0, #5]
 8004194:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004198:	b913      	cbnz	r3, 80041a0 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800419a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800419c:	f7fe fa72 	bl	8002684 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80041a0:	2301      	movs	r3, #1
 80041a2:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80041a4:	2000      	movs	r0, #0
}
 80041a6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80041a8:	2001      	movs	r0, #1
 80041aa:	e7fc      	b.n	80041a6 <HAL_CRC_Init+0x1a>

080041ac <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80041ac:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80041ae:	4604      	mov	r4, r0
 80041b0:	b320      	cbz	r0, 80041fc <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80041b2:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 80041b6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80041ba:	b91b      	cbnz	r3, 80041c4 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80041bc:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80041c0:	f7fe fa78 	bl	80026b4 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80041c4:	2302      	movs	r3, #2
 80041c6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80041ca:	6823      	ldr	r3, [r4, #0]
 80041cc:	6861      	ldr	r1, [r4, #4]
 80041ce:	681a      	ldr	r2, [r3, #0]
 80041d0:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 80041d4:	430a      	orrs	r2, r1
 80041d6:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80041d8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80041da:	68a1      	ldr	r1, [r4, #8]
 80041dc:	f022 0207 	bic.w	r2, r2, #7
 80041e0:	430a      	orrs	r2, r1
 80041e2:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80041e4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80041e6:	68e1      	ldr	r1, [r4, #12]
 80041e8:	f36f 020d 	bfc	r2, #0, #14
 80041ec:	430a      	orrs	r2, r1
 80041ee:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80041f0:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80041f2:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80041f4:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80041f6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 80041fa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80041fc:	2001      	movs	r0, #1
 80041fe:	e7fc      	b.n	80041fa <HAL_DMA2D_Init+0x4e>

08004200 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004200:	4770      	bx	lr

08004202 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004202:	4770      	bx	lr

08004204 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004204:	6803      	ldr	r3, [r0, #0]
{
 8004206:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004208:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800420a:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800420c:	07f2      	lsls	r2, r6, #31
{
 800420e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004210:	d514      	bpl.n	800423c <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004212:	05e9      	lsls	r1, r5, #23
 8004214:	d512      	bpl.n	800423c <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004216:	681a      	ldr	r2, [r3, #0]
 8004218:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800421c:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800421e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004220:	f042 0201 	orr.w	r2, r2, #1
 8004224:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004226:	2201      	movs	r2, #1
 8004228:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800422a:	2304      	movs	r3, #4
 800422c:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004230:	2300      	movs	r3, #0
 8004232:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004236:	6943      	ldr	r3, [r0, #20]
 8004238:	b103      	cbz	r3, 800423c <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 800423a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800423c:	06b2      	lsls	r2, r6, #26
 800423e:	d516      	bpl.n	800426e <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004240:	04ab      	lsls	r3, r5, #18
 8004242:	d514      	bpl.n	800426e <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004244:	6823      	ldr	r3, [r4, #0]
 8004246:	681a      	ldr	r2, [r3, #0]
 8004248:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800424c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800424e:	2220      	movs	r2, #32
 8004250:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004252:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004254:	f043 0302 	orr.w	r3, r3, #2
 8004258:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800425a:	2304      	movs	r3, #4
 800425c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004260:	2300      	movs	r3, #0
 8004262:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004266:	6963      	ldr	r3, [r4, #20]
 8004268:	b10b      	cbz	r3, 800426e <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800426a:	4620      	mov	r0, r4
 800426c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800426e:	0730      	lsls	r0, r6, #28
 8004270:	d516      	bpl.n	80042a0 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004272:	0529      	lsls	r1, r5, #20
 8004274:	d514      	bpl.n	80042a0 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004276:	6823      	ldr	r3, [r4, #0]
 8004278:	681a      	ldr	r2, [r3, #0]
 800427a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800427e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004280:	2208      	movs	r2, #8
 8004282:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004284:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004286:	f043 0304 	orr.w	r3, r3, #4
 800428a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800428c:	2304      	movs	r3, #4
 800428e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004292:	2300      	movs	r3, #0
 8004294:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004298:	6963      	ldr	r3, [r4, #20]
 800429a:	b10b      	cbz	r3, 80042a0 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 800429c:	4620      	mov	r0, r4
 800429e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80042a0:	0772      	lsls	r2, r6, #29
 80042a2:	d50b      	bpl.n	80042bc <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 80042a4:	056b      	lsls	r3, r5, #21
 80042a6:	d509      	bpl.n	80042bc <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80042a8:	6823      	ldr	r3, [r4, #0]
 80042aa:	681a      	ldr	r2, [r3, #0]
 80042ac:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80042b0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80042b2:	2204      	movs	r2, #4
 80042b4:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80042b6:	4620      	mov	r0, r4
 80042b8:	f7ff ffa2 	bl	8004200 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80042bc:	07b0      	lsls	r0, r6, #30
 80042be:	d514      	bpl.n	80042ea <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80042c0:	05a9      	lsls	r1, r5, #22
 80042c2:	d512      	bpl.n	80042ea <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80042c4:	6823      	ldr	r3, [r4, #0]
 80042c6:	681a      	ldr	r2, [r3, #0]
 80042c8:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80042cc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80042ce:	2202      	movs	r2, #2
 80042d0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80042d2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80042d4:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80042d6:	2301      	movs	r3, #1
 80042d8:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80042dc:	2300      	movs	r3, #0
 80042de:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 80042e2:	6923      	ldr	r3, [r4, #16]
 80042e4:	b10b      	cbz	r3, 80042ea <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80042e6:	4620      	mov	r0, r4
 80042e8:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80042ea:	06f2      	lsls	r2, r6, #27
 80042ec:	d513      	bpl.n	8004316 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80042ee:	04eb      	lsls	r3, r5, #19
 80042f0:	d511      	bpl.n	8004316 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80042f2:	6823      	ldr	r3, [r4, #0]
 80042f4:	681a      	ldr	r2, [r3, #0]
 80042f6:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80042fa:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80042fc:	2210      	movs	r2, #16
 80042fe:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004300:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004302:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004304:	2301      	movs	r3, #1
 8004306:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800430a:	2300      	movs	r3, #0
 800430c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004310:	4620      	mov	r0, r4
 8004312:	f7ff ff76 	bl	8004202 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004316:	bd70      	pop	{r4, r5, r6, pc}

08004318 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004318:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800431a:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 800431e:	2a01      	cmp	r2, #1
{
 8004320:	4603      	mov	r3, r0
 8004322:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8004326:	d02b      	beq.n	8004380 <HAL_DMA2D_ConfigLayer+0x68>
 8004328:	2201      	movs	r2, #1
 800432a:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800432e:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004332:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8004336:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 800433a:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 800433c:	4f17      	ldr	r7, [pc, #92]	@ (800439c <HAL_DMA2D_ConfigLayer+0x84>)
 800433e:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004342:	3c09      	subs	r4, #9
 8004344:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004346:	bf9c      	itt	ls
 8004348:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 800434c:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800434e:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004352:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004354:	bf88      	it	hi
 8004356:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800435a:	b991      	cbnz	r1, 8004382 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800435c:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800435e:	4039      	ands	r1, r7
 8004360:	4301      	orrs	r1, r0
 8004362:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004364:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004366:	6999      	ldr	r1, [r3, #24]
 8004368:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800436a:	d803      	bhi.n	8004374 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800436c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800436e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8004372:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004374:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004376:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004378:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 800437c:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8004380:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004382:	69d1      	ldr	r1, [r2, #28]
 8004384:	4039      	ands	r1, r7
 8004386:	4301      	orrs	r1, r0
 8004388:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800438a:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800438c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800438e:	6989      	ldr	r1, [r1, #24]
 8004390:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004392:	bf9c      	itt	ls
 8004394:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8004398:	6215      	strls	r5, [r2, #32]
 800439a:	e7eb      	b.n	8004374 <HAL_DMA2D_ConfigLayer+0x5c>
 800439c:	00fcfff0 	.word	0x00fcfff0

080043a0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80043a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80043a4:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8004564 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80043a8:	4a6c      	ldr	r2, [pc, #432]	@ (800455c <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 80043aa:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80043ac:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 80043ae:	2401      	movs	r4, #1
 80043b0:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80043b2:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 80043b6:	43ac      	bics	r4, r5
 80043b8:	f040 80b7 	bne.w	800452a <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80043bc:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80043be:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80043c0:	f005 0403 	and.w	r4, r5, #3
 80043c4:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80043c8:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80043cc:	1e67      	subs	r7, r4, #1
 80043ce:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80043d0:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80043d4:	d834      	bhi.n	8004440 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80043d6:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80043d8:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 80043dc:	68cf      	ldr	r7, [r1, #12]
 80043de:	fa07 f708 	lsl.w	r7, r7, r8
 80043e2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80043e6:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80043e8:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80043ea:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80043ee:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80043f2:	409f      	lsls	r7, r3
 80043f4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80043f8:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80043fa:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80043fc:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004400:	688f      	ldr	r7, [r1, #8]
 8004402:	fa07 f708 	lsl.w	r7, r7, r8
 8004406:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800440a:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800440c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800440e:	d119      	bne.n	8004444 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004410:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004414:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004418:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800441c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004420:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004424:	f04f 0e0f 	mov.w	lr, #15
 8004428:	fa0e fe0b 	lsl.w	lr, lr, fp
 800442c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004430:	690f      	ldr	r7, [r1, #16]
 8004432:	fa07 f70b 	lsl.w	r7, r7, fp
 8004436:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800443a:	f8ca 7020 	str.w	r7, [sl, #32]
 800443e:	e001      	b.n	8004444 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004440:	2c03      	cmp	r4, #3
 8004442:	d1da      	bne.n	80043fa <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004444:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004446:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800444a:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800444e:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004450:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8004454:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004456:	d068      	beq.n	800452a <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004458:	2400      	movs	r4, #0
 800445a:	9401      	str	r4, [sp, #4]
 800445c:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8004460:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8004464:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8004468:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 800446c:	f023 0703 	bic.w	r7, r3, #3
 8004470:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8004474:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8004478:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 800447c:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800447e:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004482:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004484:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004488:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800448c:	240f      	movs	r4, #15
 800448e:	fa04 f40c 	lsl.w	r4, r4, ip
 8004492:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004496:	4c32      	ldr	r4, [pc, #200]	@ (8004560 <HAL_GPIO_Init+0x1c0>)
 8004498:	42a0      	cmp	r0, r4
 800449a:	d04d      	beq.n	8004538 <HAL_GPIO_Init+0x198>
 800449c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044a0:	42a0      	cmp	r0, r4
 80044a2:	d04b      	beq.n	800453c <HAL_GPIO_Init+0x19c>
 80044a4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044a8:	42a0      	cmp	r0, r4
 80044aa:	d049      	beq.n	8004540 <HAL_GPIO_Init+0x1a0>
 80044ac:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044b0:	42a0      	cmp	r0, r4
 80044b2:	d047      	beq.n	8004544 <HAL_GPIO_Init+0x1a4>
 80044b4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044b8:	42a0      	cmp	r0, r4
 80044ba:	d045      	beq.n	8004548 <HAL_GPIO_Init+0x1a8>
 80044bc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044c0:	42a0      	cmp	r0, r4
 80044c2:	d043      	beq.n	800454c <HAL_GPIO_Init+0x1ac>
 80044c4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044c8:	42a0      	cmp	r0, r4
 80044ca:	d041      	beq.n	8004550 <HAL_GPIO_Init+0x1b0>
 80044cc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044d0:	42a0      	cmp	r0, r4
 80044d2:	d03f      	beq.n	8004554 <HAL_GPIO_Init+0x1b4>
 80044d4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044d8:	42a0      	cmp	r0, r4
 80044da:	d03d      	beq.n	8004558 <HAL_GPIO_Init+0x1b8>
 80044dc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044e0:	42a0      	cmp	r0, r4
 80044e2:	bf14      	ite	ne
 80044e4:	240a      	movne	r4, #10
 80044e6:	2409      	moveq	r4, #9
 80044e8:	fa04 f40c 	lsl.w	r4, r4, ip
 80044ec:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 80044f0:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 80044f2:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80044f4:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80044f6:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 80044fa:	bf0c      	ite	eq
 80044fc:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80044fe:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8004500:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8004502:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004504:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8004508:	bf0c      	ite	eq
 800450a:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800450c:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 800450e:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8004510:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004512:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 8004516:	bf0c      	ite	eq
 8004518:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800451a:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 800451c:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800451e:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004520:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8004522:	bf54      	ite	pl
 8004524:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 8004526:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8004528:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800452a:	3301      	adds	r3, #1
 800452c:	2b10      	cmp	r3, #16
 800452e:	f47f af3d 	bne.w	80043ac <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004532:	b003      	add	sp, #12
 8004534:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004538:	2400      	movs	r4, #0
 800453a:	e7d5      	b.n	80044e8 <HAL_GPIO_Init+0x148>
 800453c:	2401      	movs	r4, #1
 800453e:	e7d3      	b.n	80044e8 <HAL_GPIO_Init+0x148>
 8004540:	2402      	movs	r4, #2
 8004542:	e7d1      	b.n	80044e8 <HAL_GPIO_Init+0x148>
 8004544:	2403      	movs	r4, #3
 8004546:	e7cf      	b.n	80044e8 <HAL_GPIO_Init+0x148>
 8004548:	2404      	movs	r4, #4
 800454a:	e7cd      	b.n	80044e8 <HAL_GPIO_Init+0x148>
 800454c:	2405      	movs	r4, #5
 800454e:	e7cb      	b.n	80044e8 <HAL_GPIO_Init+0x148>
 8004550:	2406      	movs	r4, #6
 8004552:	e7c9      	b.n	80044e8 <HAL_GPIO_Init+0x148>
 8004554:	2407      	movs	r4, #7
 8004556:	e7c7      	b.n	80044e8 <HAL_GPIO_Init+0x148>
 8004558:	2408      	movs	r4, #8
 800455a:	e7c5      	b.n	80044e8 <HAL_GPIO_Init+0x148>
 800455c:	40013c00 	.word	0x40013c00
 8004560:	40020000 	.word	0x40020000
 8004564:	40023800 	.word	0x40023800

08004568 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004568:	6903      	ldr	r3, [r0, #16]
 800456a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800456c:	bf14      	ite	ne
 800456e:	2001      	movne	r0, #1
 8004570:	2000      	moveq	r0, #0
 8004572:	4770      	bx	lr

08004574 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004574:	b10a      	cbz	r2, 800457a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004576:	6181      	str	r1, [r0, #24]
  }
}
 8004578:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800457a:	0409      	lsls	r1, r1, #16
 800457c:	e7fb      	b.n	8004576 <HAL_GPIO_WritePin+0x2>

0800457e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800457e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004580:	ea01 0203 	and.w	r2, r1, r3
 8004584:	ea21 0103 	bic.w	r1, r1, r3
 8004588:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800458c:	6181      	str	r1, [r0, #24]
}
 800458e:	4770      	bx	lr

08004590 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004590:	6801      	ldr	r1, [r0, #0]
 8004592:	694b      	ldr	r3, [r1, #20]
 8004594:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8004598:	f04f 0200 	mov.w	r2, #0
 800459c:	d010      	beq.n	80045c0 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800459e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80045a2:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80045a4:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80045a6:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80045a8:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80045ac:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80045b0:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80045b2:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80045b6:	f043 0304 	orr.w	r3, r3, #4
 80045ba:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 80045bc:	2001      	movs	r0, #1
 80045be:	4770      	bx	lr
  }
  return HAL_OK;
 80045c0:	4618      	mov	r0, r3
}
 80045c2:	4770      	bx	lr

080045c4 <I2C_WaitOnFlagUntilTimeout>:
{
 80045c4:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80045c8:	4606      	mov	r6, r0
 80045ca:	460f      	mov	r7, r1
 80045cc:	4691      	mov	r9, r2
 80045ce:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80045d0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80045d4:	6833      	ldr	r3, [r6, #0]
 80045d6:	f1ba 0f01 	cmp.w	sl, #1
 80045da:	bf0c      	ite	eq
 80045dc:	695c      	ldreq	r4, [r3, #20]
 80045de:	699c      	ldrne	r4, [r3, #24]
 80045e0:	ea27 0404 	bic.w	r4, r7, r4
 80045e4:	b2a4      	uxth	r4, r4
 80045e6:	fab4 f484 	clz	r4, r4
 80045ea:	0964      	lsrs	r4, r4, #5
 80045ec:	45a1      	cmp	r9, r4
 80045ee:	d001      	beq.n	80045f4 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80045f0:	2000      	movs	r0, #0
 80045f2:	e025      	b.n	8004640 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 80045f4:	1c6a      	adds	r2, r5, #1
 80045f6:	d0ee      	beq.n	80045d6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80045f8:	f7ff fd5c 	bl	80040b4 <HAL_GetTick>
 80045fc:	9b08      	ldr	r3, [sp, #32]
 80045fe:	1ac0      	subs	r0, r0, r3
 8004600:	42a8      	cmp	r0, r5
 8004602:	d801      	bhi.n	8004608 <I2C_WaitOnFlagUntilTimeout+0x44>
 8004604:	2d00      	cmp	r5, #0
 8004606:	d1e5      	bne.n	80045d4 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004608:	6833      	ldr	r3, [r6, #0]
 800460a:	f1ba 0f01 	cmp.w	sl, #1
 800460e:	bf0c      	ite	eq
 8004610:	695b      	ldreq	r3, [r3, #20]
 8004612:	699b      	ldrne	r3, [r3, #24]
 8004614:	ea27 0303 	bic.w	r3, r7, r3
 8004618:	b29b      	uxth	r3, r3
 800461a:	fab3 f383 	clz	r3, r3
 800461e:	095b      	lsrs	r3, r3, #5
 8004620:	4599      	cmp	r9, r3
 8004622:	d1d7      	bne.n	80045d4 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004624:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8004626:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004628:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800462a:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800462e:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004632:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004634:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004638:	f042 0220 	orr.w	r2, r2, #32
 800463c:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 800463e:	2001      	movs	r0, #1
}
 8004640:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004644 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004644:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004648:	4604      	mov	r4, r0
 800464a:	460f      	mov	r7, r1
 800464c:	4616      	mov	r6, r2
 800464e:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004650:	6825      	ldr	r5, [r4, #0]
 8004652:	6968      	ldr	r0, [r5, #20]
 8004654:	ea27 0000 	bic.w	r0, r7, r0
 8004658:	b280      	uxth	r0, r0
 800465a:	b1c0      	cbz	r0, 800468e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800465c:	696b      	ldr	r3, [r5, #20]
 800465e:	055a      	lsls	r2, r3, #21
 8004660:	d517      	bpl.n	8004692 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004662:	682b      	ldr	r3, [r5, #0]
 8004664:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004668:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800466a:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800466e:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004670:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004672:	2300      	movs	r3, #0
 8004674:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004676:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800467a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800467e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004680:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004684:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004686:	2300      	movs	r3, #0
 8004688:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 800468c:	2001      	movs	r0, #1
}
 800468e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004692:	1c73      	adds	r3, r6, #1
 8004694:	d0dd      	beq.n	8004652 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004696:	f7ff fd0d 	bl	80040b4 <HAL_GetTick>
 800469a:	eba0 0008 	sub.w	r0, r0, r8
 800469e:	42b0      	cmp	r0, r6
 80046a0:	d801      	bhi.n	80046a6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 80046a2:	2e00      	cmp	r6, #0
 80046a4:	d1d4      	bne.n	8004650 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 80046a6:	6823      	ldr	r3, [r4, #0]
 80046a8:	695a      	ldr	r2, [r3, #20]
 80046aa:	ea27 0202 	bic.w	r2, r7, r2
 80046ae:	b292      	uxth	r2, r2
 80046b0:	2a00      	cmp	r2, #0
 80046b2:	d0cd      	beq.n	8004650 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 80046b4:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 80046b6:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 80046b8:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80046ba:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80046be:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80046c2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80046c4:	4313      	orrs	r3, r2
 80046c6:	e7dd      	b.n	8004684 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080046c8 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80046c8:	b570      	push	{r4, r5, r6, lr}
 80046ca:	4604      	mov	r4, r0
 80046cc:	460d      	mov	r5, r1
 80046ce:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80046d0:	6823      	ldr	r3, [r4, #0]
 80046d2:	695b      	ldr	r3, [r3, #20]
 80046d4:	061b      	lsls	r3, r3, #24
 80046d6:	d501      	bpl.n	80046dc <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80046d8:	2000      	movs	r0, #0
 80046da:	e01e      	b.n	800471a <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80046dc:	4620      	mov	r0, r4
 80046de:	f7ff ff57 	bl	8004590 <I2C_IsAcknowledgeFailed>
 80046e2:	b9c8      	cbnz	r0, 8004718 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80046e4:	1c6a      	adds	r2, r5, #1
 80046e6:	d0f3      	beq.n	80046d0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80046e8:	f7ff fce4 	bl	80040b4 <HAL_GetTick>
 80046ec:	1b80      	subs	r0, r0, r6
 80046ee:	42a8      	cmp	r0, r5
 80046f0:	d801      	bhi.n	80046f6 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80046f2:	2d00      	cmp	r5, #0
 80046f4:	d1ec      	bne.n	80046d0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 80046f6:	6823      	ldr	r3, [r4, #0]
 80046f8:	695b      	ldr	r3, [r3, #20]
 80046fa:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 80046fe:	d1e7      	bne.n	80046d0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004700:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004702:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004704:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004708:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800470c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800470e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004712:	f042 0220 	orr.w	r2, r2, #32
 8004716:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004718:	2001      	movs	r0, #1
}
 800471a:	bd70      	pop	{r4, r5, r6, pc}

0800471c <I2C_RequestMemoryWrite>:
{
 800471c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004720:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004722:	6802      	ldr	r2, [r0, #0]
{
 8004724:	b085      	sub	sp, #20
 8004726:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 800472a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800472c:	6813      	ldr	r3, [r2, #0]
 800472e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004732:	6013      	str	r3, [r2, #0]
{
 8004734:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004736:	463b      	mov	r3, r7
 8004738:	f8cd 8000 	str.w	r8, [sp]
 800473c:	2200      	movs	r2, #0
 800473e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8004742:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004744:	f7ff ff3e 	bl	80045c4 <I2C_WaitOnFlagUntilTimeout>
 8004748:	6823      	ldr	r3, [r4, #0]
 800474a:	b138      	cbz	r0, 800475c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800474c:	681b      	ldr	r3, [r3, #0]
 800474e:	05db      	lsls	r3, r3, #23
 8004750:	d502      	bpl.n	8004758 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004752:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004756:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8004758:	2603      	movs	r6, #3
 800475a:	e020      	b.n	800479e <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800475c:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8004760:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004762:	491a      	ldr	r1, [pc, #104]	@ (80047cc <I2C_RequestMemoryWrite+0xb0>)
 8004764:	4643      	mov	r3, r8
 8004766:	463a      	mov	r2, r7
 8004768:	4620      	mov	r0, r4
 800476a:	f7ff ff6b 	bl	8004644 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800476e:	b9a8      	cbnz	r0, 800479c <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004770:	6823      	ldr	r3, [r4, #0]
 8004772:	9003      	str	r0, [sp, #12]
 8004774:	695a      	ldr	r2, [r3, #20]
 8004776:	9203      	str	r2, [sp, #12]
 8004778:	699b      	ldr	r3, [r3, #24]
 800477a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800477c:	4642      	mov	r2, r8
 800477e:	4639      	mov	r1, r7
 8004780:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004782:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004784:	f7ff ffa0 	bl	80046c8 <I2C_WaitOnTXEFlagUntilTimeout>
 8004788:	4606      	mov	r6, r0
 800478a:	b160      	cbz	r0, 80047a6 <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800478c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800478e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004790:	bf01      	itttt	eq
 8004792:	6822      	ldreq	r2, [r4, #0]
 8004794:	6813      	ldreq	r3, [r2, #0]
 8004796:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800479a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800479c:	2601      	movs	r6, #1
}
 800479e:	4630      	mov	r0, r6
 80047a0:	b005      	add	sp, #20
 80047a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80047a6:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047aa:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80047ac:	d102      	bne.n	80047b4 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80047ae:	b2ed      	uxtb	r5, r5
 80047b0:	611d      	str	r5, [r3, #16]
 80047b2:	e7f4      	b.n	800479e <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80047b4:	0a2a      	lsrs	r2, r5, #8
 80047b6:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80047b8:	4639      	mov	r1, r7
 80047ba:	4642      	mov	r2, r8
 80047bc:	4620      	mov	r0, r4
 80047be:	f7ff ff83 	bl	80046c8 <I2C_WaitOnTXEFlagUntilTimeout>
 80047c2:	2800      	cmp	r0, #0
 80047c4:	d1e2      	bne.n	800478c <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80047c6:	6823      	ldr	r3, [r4, #0]
 80047c8:	e7f1      	b.n	80047ae <I2C_RequestMemoryWrite+0x92>
 80047ca:	bf00      	nop
 80047cc:	00010002 	.word	0x00010002

080047d0 <I2C_RequestMemoryRead>:
{
 80047d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80047d4:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80047d6:	6803      	ldr	r3, [r0, #0]
{
 80047d8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80047da:	681a      	ldr	r2, [r3, #0]
 80047dc:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80047e0:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80047e2:	681a      	ldr	r2, [r3, #0]
{
 80047e4:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80047e8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80047ec:	601a      	str	r2, [r3, #0]
{
 80047ee:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80047f0:	463b      	mov	r3, r7
 80047f2:	f8cd 8000 	str.w	r8, [sp]
 80047f6:	2200      	movs	r2, #0
 80047f8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 80047fc:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80047fe:	f7ff fee1 	bl	80045c4 <I2C_WaitOnFlagUntilTimeout>
 8004802:	6823      	ldr	r3, [r4, #0]
 8004804:	b138      	cbz	r0, 8004816 <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004806:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004808:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800480a:	bf44      	itt	mi
 800480c:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8004810:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8004812:	2003      	movs	r0, #3
 8004814:	e021      	b.n	800485a <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004816:	fa5f f986 	uxtb.w	r9, r6
 800481a:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800481e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004820:	492b      	ldr	r1, [pc, #172]	@ (80048d0 <I2C_RequestMemoryRead+0x100>)
 8004822:	4643      	mov	r3, r8
 8004824:	463a      	mov	r2, r7
 8004826:	4620      	mov	r0, r4
 8004828:	f7ff ff0c 	bl	8004644 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800482c:	b9a0      	cbnz	r0, 8004858 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800482e:	6823      	ldr	r3, [r4, #0]
 8004830:	9003      	str	r0, [sp, #12]
 8004832:	695a      	ldr	r2, [r3, #20]
 8004834:	9203      	str	r2, [sp, #12]
 8004836:	699b      	ldr	r3, [r3, #24]
 8004838:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800483a:	4642      	mov	r2, r8
 800483c:	4639      	mov	r1, r7
 800483e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004840:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004842:	f7ff ff41 	bl	80046c8 <I2C_WaitOnTXEFlagUntilTimeout>
 8004846:	b158      	cbz	r0, 8004860 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004848:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800484a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800484c:	bf01      	itttt	eq
 800484e:	6822      	ldreq	r2, [r4, #0]
 8004850:	6813      	ldreq	r3, [r2, #0]
 8004852:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004856:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8004858:	2001      	movs	r0, #1
}
 800485a:	b004      	add	sp, #16
 800485c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004860:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004864:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004866:	d11a      	bne.n	800489e <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004868:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800486a:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800486c:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800486e:	4639      	mov	r1, r7
 8004870:	4620      	mov	r0, r4
 8004872:	f7ff ff29 	bl	80046c8 <I2C_WaitOnTXEFlagUntilTimeout>
 8004876:	4602      	mov	r2, r0
 8004878:	2800      	cmp	r0, #0
 800487a:	d1e5      	bne.n	8004848 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800487c:	6821      	ldr	r1, [r4, #0]
 800487e:	680b      	ldr	r3, [r1, #0]
 8004880:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004884:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004886:	4620      	mov	r0, r4
 8004888:	f8cd 8000 	str.w	r8, [sp]
 800488c:	463b      	mov	r3, r7
 800488e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004892:	f7ff fe97 	bl	80045c4 <I2C_WaitOnFlagUntilTimeout>
 8004896:	6822      	ldr	r2, [r4, #0]
 8004898:	b160      	cbz	r0, 80048b4 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800489a:	6813      	ldr	r3, [r2, #0]
 800489c:	e7b4      	b.n	8004808 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800489e:	0a2a      	lsrs	r2, r5, #8
 80048a0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80048a2:	4639      	mov	r1, r7
 80048a4:	4642      	mov	r2, r8
 80048a6:	4620      	mov	r0, r4
 80048a8:	f7ff ff0e 	bl	80046c8 <I2C_WaitOnTXEFlagUntilTimeout>
 80048ac:	2800      	cmp	r0, #0
 80048ae:	d1cb      	bne.n	8004848 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80048b0:	6823      	ldr	r3, [r4, #0]
 80048b2:	e7d9      	b.n	8004868 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80048b4:	f049 0301 	orr.w	r3, r9, #1
 80048b8:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80048ba:	4905      	ldr	r1, [pc, #20]	@ (80048d0 <I2C_RequestMemoryRead+0x100>)
 80048bc:	4643      	mov	r3, r8
 80048be:	463a      	mov	r2, r7
 80048c0:	4620      	mov	r0, r4
 80048c2:	f7ff febf 	bl	8004644 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80048c6:	3800      	subs	r0, #0
 80048c8:	bf18      	it	ne
 80048ca:	2001      	movne	r0, #1
 80048cc:	e7c5      	b.n	800485a <I2C_RequestMemoryRead+0x8a>
 80048ce:	bf00      	nop
 80048d0:	00010002 	.word	0x00010002

080048d4 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80048d4:	b570      	push	{r4, r5, r6, lr}
 80048d6:	4604      	mov	r4, r0
 80048d8:	460d      	mov	r5, r1
 80048da:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80048dc:	6823      	ldr	r3, [r4, #0]
 80048de:	695b      	ldr	r3, [r3, #20]
 80048e0:	075b      	lsls	r3, r3, #29
 80048e2:	d501      	bpl.n	80048e8 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80048e4:	2000      	movs	r0, #0
 80048e6:	e01e      	b.n	8004926 <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80048e8:	4620      	mov	r0, r4
 80048ea:	f7ff fe51 	bl	8004590 <I2C_IsAcknowledgeFailed>
 80048ee:	b9c8      	cbnz	r0, 8004924 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80048f0:	1c6a      	adds	r2, r5, #1
 80048f2:	d0f3      	beq.n	80048dc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80048f4:	f7ff fbde 	bl	80040b4 <HAL_GetTick>
 80048f8:	1b80      	subs	r0, r0, r6
 80048fa:	42a8      	cmp	r0, r5
 80048fc:	d801      	bhi.n	8004902 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80048fe:	2d00      	cmp	r5, #0
 8004900:	d1ec      	bne.n	80048dc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8004902:	6823      	ldr	r3, [r4, #0]
 8004904:	695b      	ldr	r3, [r3, #20]
 8004906:	f013 0304 	ands.w	r3, r3, #4
 800490a:	d1e7      	bne.n	80048dc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800490c:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800490e:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004910:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004914:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004918:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800491a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800491e:	f042 0220 	orr.w	r2, r2, #32
 8004922:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004924:	2001      	movs	r0, #1
}
 8004926:	bd70      	pop	{r4, r5, r6, pc}

08004928 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004928:	b570      	push	{r4, r5, r6, lr}
 800492a:	4604      	mov	r4, r0
 800492c:	460d      	mov	r5, r1
 800492e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004930:	6821      	ldr	r1, [r4, #0]
 8004932:	694b      	ldr	r3, [r1, #20]
 8004934:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8004938:	d001      	beq.n	800493e <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800493a:	2000      	movs	r0, #0
 800493c:	e011      	b.n	8004962 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800493e:	694a      	ldr	r2, [r1, #20]
 8004940:	06d2      	lsls	r2, r2, #27
 8004942:	d50f      	bpl.n	8004964 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004944:	f06f 0210 	mvn.w	r2, #16
 8004948:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800494a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800494c:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800494e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004952:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004956:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004958:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800495a:	2300      	movs	r3, #0
 800495c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8004960:	2001      	movs	r0, #1
}
 8004962:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004964:	f7ff fba6 	bl	80040b4 <HAL_GetTick>
 8004968:	1b80      	subs	r0, r0, r6
 800496a:	42a8      	cmp	r0, r5
 800496c:	d801      	bhi.n	8004972 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 800496e:	2d00      	cmp	r5, #0
 8004970:	d1de      	bne.n	8004930 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8004972:	6823      	ldr	r3, [r4, #0]
 8004974:	695b      	ldr	r3, [r3, #20]
 8004976:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800497a:	d1d9      	bne.n	8004930 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 800497c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800497e:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004980:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004984:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004988:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800498a:	4313      	orrs	r3, r2
 800498c:	e7e4      	b.n	8004958 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08004990 <HAL_I2C_Init>:
{
 8004990:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004992:	4604      	mov	r4, r0
 8004994:	b908      	cbnz	r0, 800499a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8004996:	2001      	movs	r0, #1
}
 8004998:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800499a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800499e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80049a2:	b91b      	cbnz	r3, 80049ac <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80049a4:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 80049a8:	f7fd fea6 	bl	80026f8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80049ac:	2324      	movs	r3, #36	@ 0x24
 80049ae:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80049b2:	6823      	ldr	r3, [r4, #0]
 80049b4:	681a      	ldr	r2, [r3, #0]
 80049b6:	f022 0201 	bic.w	r2, r2, #1
 80049ba:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80049bc:	681a      	ldr	r2, [r3, #0]
 80049be:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80049c2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80049c4:	681a      	ldr	r2, [r3, #0]
 80049c6:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80049ca:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80049cc:	f001 fb80 	bl	80060d0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80049d0:	4b3f      	ldr	r3, [pc, #252]	@ (8004ad0 <HAL_I2C_Init+0x140>)
 80049d2:	6865      	ldr	r5, [r4, #4]
 80049d4:	429d      	cmp	r5, r3
 80049d6:	bf94      	ite	ls
 80049d8:	4b3e      	ldrls	r3, [pc, #248]	@ (8004ad4 <HAL_I2C_Init+0x144>)
 80049da:	4b3f      	ldrhi	r3, [pc, #252]	@ (8004ad8 <HAL_I2C_Init+0x148>)
 80049dc:	4298      	cmp	r0, r3
 80049de:	bf8c      	ite	hi
 80049e0:	2300      	movhi	r3, #0
 80049e2:	2301      	movls	r3, #1
 80049e4:	2b00      	cmp	r3, #0
 80049e6:	d1d6      	bne.n	8004996 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80049e8:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80049ea:	4e39      	ldr	r6, [pc, #228]	@ (8004ad0 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80049ec:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80049ee:	4b3b      	ldr	r3, [pc, #236]	@ (8004adc <HAL_I2C_Init+0x14c>)
 80049f0:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80049f4:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 80049f8:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80049fa:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80049fc:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80049fe:	bf88      	it	hi
 8004a00:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8004a04:	6a11      	ldr	r1, [r2, #32]
 8004a06:	bf88      	it	hi
 8004a08:	4373      	mulhi	r3, r6
 8004a0a:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8004a0e:	bf84      	itt	hi
 8004a10:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8004a14:	fbb3 f3f6 	udivhi	r3, r3, r6
 8004a18:	3301      	adds	r3, #1
 8004a1a:	430b      	orrs	r3, r1
 8004a1c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004a1e:	69d1      	ldr	r1, [r2, #28]
 8004a20:	1e43      	subs	r3, r0, #1
 8004a22:	482b      	ldr	r0, [pc, #172]	@ (8004ad0 <HAL_I2C_Init+0x140>)
 8004a24:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8004a28:	4285      	cmp	r5, r0
 8004a2a:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004a2e:	d832      	bhi.n	8004a96 <HAL_I2C_Init+0x106>
 8004a30:	006d      	lsls	r5, r5, #1
 8004a32:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8004a36:	fbb3 f3f5 	udiv	r3, r3, r5
 8004a3a:	3301      	adds	r3, #1
 8004a3c:	4203      	tst	r3, r0
 8004a3e:	d042      	beq.n	8004ac6 <HAL_I2C_Init+0x136>
 8004a40:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004a44:	4319      	orrs	r1, r3
 8004a46:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004a48:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004a4c:	6811      	ldr	r1, [r2, #0]
 8004a4e:	4303      	orrs	r3, r0
 8004a50:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8004a54:	430b      	orrs	r3, r1
 8004a56:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004a58:	6891      	ldr	r1, [r2, #8]
 8004a5a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004a5e:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8004a62:	4303      	orrs	r3, r0
 8004a64:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004a68:	430b      	orrs	r3, r1
 8004a6a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004a6c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004a70:	68d1      	ldr	r1, [r2, #12]
 8004a72:	4303      	orrs	r3, r0
 8004a74:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004a78:	430b      	orrs	r3, r1
 8004a7a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004a7c:	6813      	ldr	r3, [r2, #0]
 8004a7e:	f043 0301 	orr.w	r3, r3, #1
 8004a82:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004a84:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004a86:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004a88:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004a8a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004a8e:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004a90:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8004a94:	e780      	b.n	8004998 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004a96:	68a0      	ldr	r0, [r4, #8]
 8004a98:	b950      	cbnz	r0, 8004ab0 <HAL_I2C_Init+0x120>
 8004a9a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004a9e:	fbb3 f3f5 	udiv	r3, r3, r5
 8004aa2:	3301      	adds	r3, #1
 8004aa4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004aa8:	b17b      	cbz	r3, 8004aca <HAL_I2C_Init+0x13a>
 8004aaa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004aae:	e7c9      	b.n	8004a44 <HAL_I2C_Init+0xb4>
 8004ab0:	2019      	movs	r0, #25
 8004ab2:	4368      	muls	r0, r5
 8004ab4:	fbb3 f3f0 	udiv	r3, r3, r0
 8004ab8:	3301      	adds	r3, #1
 8004aba:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004abe:	b123      	cbz	r3, 8004aca <HAL_I2C_Init+0x13a>
 8004ac0:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004ac4:	e7be      	b.n	8004a44 <HAL_I2C_Init+0xb4>
 8004ac6:	2304      	movs	r3, #4
 8004ac8:	e7bc      	b.n	8004a44 <HAL_I2C_Init+0xb4>
 8004aca:	2301      	movs	r3, #1
 8004acc:	e7ba      	b.n	8004a44 <HAL_I2C_Init+0xb4>
 8004ace:	bf00      	nop
 8004ad0:	000186a0 	.word	0x000186a0
 8004ad4:	001e847f 	.word	0x001e847f
 8004ad8:	003d08ff 	.word	0x003d08ff
 8004adc:	000f4240 	.word	0x000f4240

08004ae0 <HAL_I2C_Mem_Write>:
{
 8004ae0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004ae4:	4604      	mov	r4, r0
 8004ae6:	4699      	mov	r9, r3
 8004ae8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8004aea:	460f      	mov	r7, r1
 8004aec:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004aee:	f7ff fae1 	bl	80040b4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004af2:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8004af6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004af8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004afa:	d003      	beq.n	8004b04 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8004afc:	2002      	movs	r0, #2
}
 8004afe:	b003      	add	sp, #12
 8004b00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004b04:	9000      	str	r0, [sp, #0]
 8004b06:	493c      	ldr	r1, [pc, #240]	@ (8004bf8 <HAL_I2C_Mem_Write+0x118>)
 8004b08:	2319      	movs	r3, #25
 8004b0a:	2201      	movs	r2, #1
 8004b0c:	4620      	mov	r0, r4
 8004b0e:	f7ff fd59 	bl	80045c4 <I2C_WaitOnFlagUntilTimeout>
 8004b12:	2800      	cmp	r0, #0
 8004b14:	d1f2      	bne.n	8004afc <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004b16:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8004b1a:	2b01      	cmp	r3, #1
 8004b1c:	d0ee      	beq.n	8004afc <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004b1e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004b20:	2301      	movs	r3, #1
 8004b22:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004b26:	6803      	ldr	r3, [r0, #0]
 8004b28:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004b2a:	bf5e      	ittt	pl
 8004b2c:	6803      	ldrpl	r3, [r0, #0]
 8004b2e:	f043 0301 	orrpl.w	r3, r3, #1
 8004b32:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004b34:	6803      	ldr	r3, [r0, #0]
 8004b36:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004b3a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004b3c:	2321      	movs	r3, #33	@ 0x21
 8004b3e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004b42:	2340      	movs	r3, #64	@ 0x40
 8004b44:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004b48:	2300      	movs	r3, #0
 8004b4a:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004b4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004b4e:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004b50:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8004b54:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004b56:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004b58:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004b5a:	4b28      	ldr	r3, [pc, #160]	@ (8004bfc <HAL_I2C_Mem_Write+0x11c>)
 8004b5c:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004b5e:	4642      	mov	r2, r8
 8004b60:	e9cd 6500 	strd	r6, r5, [sp]
 8004b64:	464b      	mov	r3, r9
 8004b66:	4639      	mov	r1, r7
 8004b68:	4620      	mov	r0, r4
 8004b6a:	f7ff fdd7 	bl	800471c <I2C_RequestMemoryWrite>
 8004b6e:	2800      	cmp	r0, #0
 8004b70:	d02a      	beq.n	8004bc8 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004b72:	2001      	movs	r0, #1
 8004b74:	e7c3      	b.n	8004afe <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004b76:	f7ff fda7 	bl	80046c8 <I2C_WaitOnTXEFlagUntilTimeout>
 8004b7a:	b140      	cbz	r0, 8004b8e <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004b7c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004b7e:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b80:	bf01      	itttt	eq
 8004b82:	6822      	ldreq	r2, [r4, #0]
 8004b84:	6813      	ldreq	r3, [r2, #0]
 8004b86:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004b8a:	6013      	streq	r3, [r2, #0]
 8004b8c:	e7f1      	b.n	8004b72 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004b8e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004b90:	6827      	ldr	r7, [r4, #0]
 8004b92:	461a      	mov	r2, r3
 8004b94:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004b98:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004b9a:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004b9c:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004b9e:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004ba0:	3a01      	subs	r2, #1
 8004ba2:	b292      	uxth	r2, r2
 8004ba4:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004ba6:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004ba8:	1e48      	subs	r0, r1, #1
 8004baa:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004bac:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004bae:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004bb0:	d50a      	bpl.n	8004bc8 <HAL_I2C_Mem_Write+0xe8>
 8004bb2:	b148      	cbz	r0, 8004bc8 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004bb4:	785a      	ldrb	r2, [r3, #1]
 8004bb6:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004bb8:	3302      	adds	r3, #2
 8004bba:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8004bbc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004bbe:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004bc0:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004bc2:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004bc4:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8004bc6:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8004bc8:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004bca:	462a      	mov	r2, r5
 8004bcc:	4631      	mov	r1, r6
 8004bce:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004bd0:	2b00      	cmp	r3, #0
 8004bd2:	d1d0      	bne.n	8004b76 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004bd4:	f7ff fe7e 	bl	80048d4 <I2C_WaitOnBTFFlagUntilTimeout>
 8004bd8:	2800      	cmp	r0, #0
 8004bda:	d1cf      	bne.n	8004b7c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004bdc:	6822      	ldr	r2, [r4, #0]
 8004bde:	6813      	ldr	r3, [r2, #0]
 8004be0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004be4:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004be6:	2320      	movs	r3, #32
 8004be8:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8004bec:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004bf0:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8004bf4:	e783      	b.n	8004afe <HAL_I2C_Mem_Write+0x1e>
 8004bf6:	bf00      	nop
 8004bf8:	00100002 	.word	0x00100002
 8004bfc:	ffff0000 	.word	0xffff0000

08004c00 <HAL_I2C_Mem_Read>:
{
 8004c00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004c04:	4604      	mov	r4, r0
 8004c06:	b087      	sub	sp, #28
 8004c08:	4699      	mov	r9, r3
 8004c0a:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8004c0c:	460d      	mov	r5, r1
 8004c0e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004c10:	f7ff fa50 	bl	80040b4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c14:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8004c18:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004c1a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c1c:	d004      	beq.n	8004c28 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8004c1e:	2502      	movs	r5, #2
}
 8004c20:	4628      	mov	r0, r5
 8004c22:	b007      	add	sp, #28
 8004c24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004c28:	9000      	str	r0, [sp, #0]
 8004c2a:	497a      	ldr	r1, [pc, #488]	@ (8004e14 <HAL_I2C_Mem_Read+0x214>)
 8004c2c:	2319      	movs	r3, #25
 8004c2e:	2201      	movs	r2, #1
 8004c30:	4620      	mov	r0, r4
 8004c32:	f7ff fcc7 	bl	80045c4 <I2C_WaitOnFlagUntilTimeout>
 8004c36:	2800      	cmp	r0, #0
 8004c38:	d1f1      	bne.n	8004c1e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8004c3a:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8004c3e:	2b01      	cmp	r3, #1
 8004c40:	d0ed      	beq.n	8004c1e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004c42:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004c44:	2301      	movs	r3, #1
 8004c46:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004c4a:	6803      	ldr	r3, [r0, #0]
 8004c4c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004c4e:	bf5e      	ittt	pl
 8004c50:	6803      	ldrpl	r3, [r0, #0]
 8004c52:	f043 0301 	orrpl.w	r3, r3, #1
 8004c56:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004c58:	6803      	ldr	r3, [r0, #0]
 8004c5a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004c5e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004c60:	2322      	movs	r3, #34	@ 0x22
 8004c62:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004c66:	2340      	movs	r3, #64	@ 0x40
 8004c68:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004c6c:	2300      	movs	r3, #0
 8004c6e:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004c70:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004c72:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004c74:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8004c78:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004c7a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004c7c:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004c7e:	4b66      	ldr	r3, [pc, #408]	@ (8004e18 <HAL_I2C_Mem_Read+0x218>)
 8004c80:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004c82:	4629      	mov	r1, r5
 8004c84:	e9cd 7600 	strd	r7, r6, [sp]
 8004c88:	464b      	mov	r3, r9
 8004c8a:	4642      	mov	r2, r8
 8004c8c:	4620      	mov	r0, r4
 8004c8e:	f7ff fd9f 	bl	80047d0 <I2C_RequestMemoryRead>
 8004c92:	4605      	mov	r5, r0
 8004c94:	b108      	cbz	r0, 8004c9a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004c96:	2501      	movs	r5, #1
 8004c98:	e7c2      	b.n	8004c20 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8004c9a:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004c9c:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8004c9e:	b9b2      	cbnz	r2, 8004cce <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ca0:	9002      	str	r0, [sp, #8]
 8004ca2:	695a      	ldr	r2, [r3, #20]
 8004ca4:	9202      	str	r2, [sp, #8]
 8004ca6:	699a      	ldr	r2, [r3, #24]
 8004ca8:	9202      	str	r2, [sp, #8]
 8004caa:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cac:	681a      	ldr	r2, [r3, #0]
 8004cae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004cb2:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004cb4:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 8004e1c <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8004cb8:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004cba:	2b00      	cmp	r3, #0
 8004cbc:	d12c      	bne.n	8004d18 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8004cbe:	2220      	movs	r2, #32
 8004cc0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8004cc4:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004cc8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8004ccc:	e7a8      	b.n	8004c20 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004cce:	2a01      	cmp	r2, #1
 8004cd0:	d10a      	bne.n	8004ce8 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004cd2:	681a      	ldr	r2, [r3, #0]
 8004cd4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004cd8:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004cda:	9003      	str	r0, [sp, #12]
 8004cdc:	695a      	ldr	r2, [r3, #20]
 8004cde:	9203      	str	r2, [sp, #12]
 8004ce0:	699a      	ldr	r2, [r3, #24]
 8004ce2:	9203      	str	r2, [sp, #12]
 8004ce4:	9a03      	ldr	r2, [sp, #12]
 8004ce6:	e7e1      	b.n	8004cac <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8004ce8:	2a02      	cmp	r2, #2
 8004cea:	d10e      	bne.n	8004d0a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004cec:	681a      	ldr	r2, [r3, #0]
 8004cee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004cf2:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004cf4:	681a      	ldr	r2, [r3, #0]
 8004cf6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004cfa:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004cfc:	9004      	str	r0, [sp, #16]
 8004cfe:	695a      	ldr	r2, [r3, #20]
 8004d00:	9204      	str	r2, [sp, #16]
 8004d02:	699b      	ldr	r3, [r3, #24]
 8004d04:	9304      	str	r3, [sp, #16]
 8004d06:	9b04      	ldr	r3, [sp, #16]
 8004d08:	e7d4      	b.n	8004cb4 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004d0a:	9005      	str	r0, [sp, #20]
 8004d0c:	695a      	ldr	r2, [r3, #20]
 8004d0e:	9205      	str	r2, [sp, #20]
 8004d10:	699b      	ldr	r3, [r3, #24]
 8004d12:	9305      	str	r3, [sp, #20]
 8004d14:	9b05      	ldr	r3, [sp, #20]
 8004d16:	e7cd      	b.n	8004cb4 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8004d18:	2b03      	cmp	r3, #3
 8004d1a:	d856      	bhi.n	8004dca <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8004d1c:	2b01      	cmp	r3, #1
 8004d1e:	d115      	bne.n	8004d4c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004d20:	4632      	mov	r2, r6
 8004d22:	4639      	mov	r1, r7
 8004d24:	4620      	mov	r0, r4
 8004d26:	f7ff fdff 	bl	8004928 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004d2a:	2800      	cmp	r0, #0
 8004d2c:	d1b3      	bne.n	8004c96 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004d2e:	6823      	ldr	r3, [r4, #0]
 8004d30:	691a      	ldr	r2, [r3, #16]
 8004d32:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004d34:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004d36:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004d38:	3301      	adds	r3, #1
 8004d3a:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8004d3c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004d3e:	3b01      	subs	r3, #1
 8004d40:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004d42:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004d44:	3b01      	subs	r3, #1
 8004d46:	b29b      	uxth	r3, r3
 8004d48:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8004d4a:	e7b5      	b.n	8004cb8 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8004d4c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d4e:	9600      	str	r6, [sp, #0]
 8004d50:	463b      	mov	r3, r7
 8004d52:	f04f 0200 	mov.w	r2, #0
 8004d56:	4641      	mov	r1, r8
 8004d58:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8004d5a:	d119      	bne.n	8004d90 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d5c:	f7ff fc32 	bl	80045c4 <I2C_WaitOnFlagUntilTimeout>
 8004d60:	2800      	cmp	r0, #0
 8004d62:	d198      	bne.n	8004c96 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004d64:	6823      	ldr	r3, [r4, #0]
 8004d66:	681a      	ldr	r2, [r3, #0]
 8004d68:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004d6c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004d6e:	691a      	ldr	r2, [r3, #16]
 8004d70:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004d72:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004d74:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8004d76:	1c53      	adds	r3, r2, #1
 8004d78:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8004d7a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004d7c:	3b01      	subs	r3, #1
 8004d7e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004d80:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004d82:	3b01      	subs	r3, #1
 8004d84:	b29b      	uxth	r3, r3
 8004d86:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004d88:	6823      	ldr	r3, [r4, #0]
 8004d8a:	691b      	ldr	r3, [r3, #16]
 8004d8c:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8004d8e:	e7d2      	b.n	8004d36 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d90:	f7ff fc18 	bl	80045c4 <I2C_WaitOnFlagUntilTimeout>
 8004d94:	4602      	mov	r2, r0
 8004d96:	2800      	cmp	r0, #0
 8004d98:	f47f af7d 	bne.w	8004c96 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004d9c:	6823      	ldr	r3, [r4, #0]
 8004d9e:	6819      	ldr	r1, [r3, #0]
 8004da0:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8004da4:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004da6:	6919      	ldr	r1, [r3, #16]
 8004da8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004daa:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8004dac:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004dae:	3301      	adds	r3, #1
 8004db0:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8004db2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004db4:	3b01      	subs	r3, #1
 8004db6:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004db8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004dba:	3b01      	subs	r3, #1
 8004dbc:	b29b      	uxth	r3, r3
 8004dbe:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004dc0:	4641      	mov	r1, r8
 8004dc2:	9600      	str	r6, [sp, #0]
 8004dc4:	463b      	mov	r3, r7
 8004dc6:	4620      	mov	r0, r4
 8004dc8:	e7c8      	b.n	8004d5c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004dca:	4632      	mov	r2, r6
 8004dcc:	4639      	mov	r1, r7
 8004dce:	4620      	mov	r0, r4
 8004dd0:	f7ff fdaa 	bl	8004928 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004dd4:	2800      	cmp	r0, #0
 8004dd6:	f47f af5e 	bne.w	8004c96 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004dda:	6823      	ldr	r3, [r4, #0]
 8004ddc:	691a      	ldr	r2, [r3, #16]
 8004dde:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004de0:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8004de2:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8004de4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8004de6:	3a01      	subs	r2, #1
 8004de8:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8004dea:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8004dec:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004dee:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8004df0:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8004df2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004df4:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 8004df6:	3b01      	subs	r3, #1
 8004df8:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004dfa:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8004dfc:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004dfe:	f57f af5b 	bpl.w	8004cb8 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 8004e02:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004e04:	bf02      	ittt	eq
 8004e06:	6813      	ldreq	r3, [r2, #0]
 8004e08:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8004e0c:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004e0e:	6913      	ldr	r3, [r2, #16]
 8004e10:	704b      	strb	r3, [r1, #1]
 8004e12:	e790      	b.n	8004d36 <HAL_I2C_Mem_Read+0x136>
 8004e14:	00100002 	.word	0x00100002
 8004e18:	ffff0000 	.word	0xffff0000
 8004e1c:	00010004 	.word	0x00010004

08004e20 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004e20:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e22:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8004e26:	2b20      	cmp	r3, #32
 8004e28:	b2dc      	uxtb	r4, r3
 8004e2a:	d116      	bne.n	8004e5a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004e2c:	2324      	movs	r3, #36	@ 0x24
 8004e2e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004e32:	6803      	ldr	r3, [r0, #0]
 8004e34:	681a      	ldr	r2, [r3, #0]
 8004e36:	f022 0201 	bic.w	r2, r2, #1
 8004e3a:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8004e3c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004e3e:	f022 0210 	bic.w	r2, r2, #16
 8004e42:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004e44:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004e46:	4311      	orrs	r1, r2
 8004e48:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004e4a:	681a      	ldr	r2, [r3, #0]
 8004e4c:	f042 0201 	orr.w	r2, r2, #1
 8004e50:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004e52:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8004e56:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004e58:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8004e5a:	2002      	movs	r0, #2
 8004e5c:	e7fc      	b.n	8004e58 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08004e5e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004e5e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e60:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8004e64:	2b20      	cmp	r3, #32
 8004e66:	b2dc      	uxtb	r4, r3
 8004e68:	d116      	bne.n	8004e98 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004e6a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004e6c:	2324      	movs	r3, #36	@ 0x24
 8004e6e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8004e72:	6813      	ldr	r3, [r2, #0]
 8004e74:	f023 0301 	bic.w	r3, r3, #1
 8004e78:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8004e7a:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004e7c:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8004e80:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8004e82:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004e84:	b29b      	uxth	r3, r3
 8004e86:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004e88:	6813      	ldr	r3, [r2, #0]
 8004e8a:	f043 0301 	orr.w	r3, r3, #1
 8004e8e:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004e90:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8004e94:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004e96:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004e98:	2002      	movs	r0, #2
 8004e9a:	e7fc      	b.n	8004e96 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08004e9c <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004e9c:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004e9e:	01d2      	lsls	r2, r2, #7
 8004ea0:	3284      	adds	r2, #132	@ 0x84
 8004ea2:	1883      	adds	r3, r0, r2
{
 8004ea4:	b5f0      	push	{r4, r5, r6, r7, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004ea6:	68c7      	ldr	r7, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004ea8:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004eaa:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004eac:	680e      	ldr	r6, [r1, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004eae:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8004eb2:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004eb4:	68c5      	ldr	r5, [r0, #12]
 8004eb6:	f106 0c01 	add.w	ip, r6, #1
 8004eba:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004ebe:	f3c7 470b 	ubfx	r7, r7, #16, #12
 8004ec2:	4427      	add	r7, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004ec4:	4465      	add	r5, ip
 8004ec6:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004eca:	605d      	str	r5, [r3, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004ecc:	68c7      	ldr	r7, [r0, #12]
 8004ece:	68cd      	ldr	r5, [r1, #12]
 8004ed0:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8004ed4:	442f      	add	r7, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8004ed6:	689d      	ldr	r5, [r3, #8]
 8004ed8:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8004edc:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004ede:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8004ee2:	688d      	ldr	r5, [r1, #8]
 8004ee4:	f3cc 0c0a 	ubfx	ip, ip, #0, #11
 8004ee8:	3501      	adds	r5, #1
 8004eea:	4465      	add	r5, ip
 8004eec:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8004ef0:	609d      	str	r5, [r3, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004ef2:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004ef4:	f8d1 c010 	ldr.w	ip, [r1, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004ef8:	698f      	ldr	r7, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004efa:	f025 0507 	bic.w	r5, r5, #7
 8004efe:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004f00:	f8c3 c010 	str.w	ip, [r3, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8004f04:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8004f08:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8004f0c:	f891 7031 	ldrb.w	r7, [r1, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8004f10:	ea45 2507 	orr.w	r5, r5, r7, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8004f14:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8004f18:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8004f1c:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8004f1e:	695d      	ldr	r5, [r3, #20]
 8004f20:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8004f24:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004f26:	694d      	ldr	r5, [r1, #20]
 8004f28:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8004f2a:	69dd      	ldr	r5, [r3, #28]
 8004f2c:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8004f30:	f025 0507 	bic.w	r5, r5, #7
 8004f34:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004f36:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8004f3a:	433d      	orrs	r5, r7
 8004f3c:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 8004f3e:	f1bc 0f07 	cmp.w	ip, #7
 8004f42:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
 8004f44:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004f46:	bf9c      	itt	ls
 8004f48:	4d0d      	ldrls	r5, [pc, #52]	@ (8004f80 <LTDC_SetConfig+0xe4>)
 8004f4a:	f815 700c 	ldrbls.w	r7, [r5, ip]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004f4e:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8004f50:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8004f54:	62dd      	str	r5, [r3, #44]	@ 0x2c
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 8004f56:	bf88      	it	hi
 8004f58:	2701      	movhi	r7, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004f5a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004f5c:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004f5e:	1ba4      	subs	r4, r4, r6
 8004f60:	437c      	muls	r4, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004f62:	437d      	muls	r5, r7
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004f64:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004f66:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8004f6a:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004f6c:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8004f6e:	f36f 040a 	bfc	r4, #0, #11
 8004f72:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004f74:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004f76:	5883      	ldr	r3, [r0, r2]
 8004f78:	f043 0301 	orr.w	r3, r3, #1
 8004f7c:	5083      	str	r3, [r0, r2]
}
 8004f7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f80:	0802598c 	.word	0x0802598c

08004f84 <HAL_LTDC_Init>:
{
 8004f84:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8004f86:	4604      	mov	r4, r0
 8004f88:	2800      	cmp	r0, #0
 8004f8a:	d04e      	beq.n	800502a <HAL_LTDC_Init+0xa6>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004f8c:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8004f90:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004f94:	b91b      	cbnz	r3, 8004f9e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8004f96:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8004f9a:	f7fd fc09 	bl	80027b0 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004f9e:	2302      	movs	r3, #2
 8004fa0:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004fa4:	6823      	ldr	r3, [r4, #0]
 8004fa6:	699a      	ldr	r2, [r3, #24]
 8004fa8:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8004fac:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004fae:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8004fb2:	4302      	orrs	r2, r0
 8004fb4:	68e0      	ldr	r0, [r4, #12]
 8004fb6:	6999      	ldr	r1, [r3, #24]
 8004fb8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004fba:	6920      	ldr	r0, [r4, #16]
 8004fbc:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004fbe:	430a      	orrs	r2, r1
 8004fc0:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
 8004fc2:	e9d4 1205 	ldrd	r1, r2, [r4, #20]
 8004fc6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004fca:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
 8004fcc:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8004fd0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004fd4:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
 8004fd6:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	@ 0x24
 8004fda:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004fde:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
 8004fe0:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 8004fe4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004fe8:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004fea:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8004fec:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8004ff0:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004ff4:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8004ff8:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004ffa:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8004ffc:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8005000:	432a      	orrs	r2, r5
 8005002:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8005006:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800500a:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800500c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800500e:	f042 0206 	orr.w	r2, r2, #6
 8005012:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005014:	699a      	ldr	r2, [r3, #24]
 8005016:	f042 0201 	orr.w	r2, r2, #1
 800501a:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800501c:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800501e:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005020:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005024:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8005028:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800502a:	2001      	movs	r0, #1
 800502c:	e7fc      	b.n	8005028 <HAL_LTDC_Init+0xa4>

0800502e <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 800502e:	4770      	bx	lr

08005030 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8005030:	4770      	bx	lr

08005032 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005032:	6803      	ldr	r3, [r0, #0]
{
 8005034:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005036:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005038:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800503a:	0772      	lsls	r2, r6, #29
{
 800503c:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800503e:	d514      	bpl.n	800506a <HAL_LTDC_IRQHandler+0x38>
 8005040:	0769      	lsls	r1, r5, #29
 8005042:	d512      	bpl.n	800506a <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005044:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005046:	f022 0204 	bic.w	r2, r2, #4
 800504a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800504c:	2204      	movs	r2, #4
 800504e:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005050:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8005054:	f043 0301 	orr.w	r3, r3, #1
 8005058:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 800505c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800505e:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005062:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005066:	f7ff ffe2 	bl	800502e <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800506a:	07b2      	lsls	r2, r6, #30
 800506c:	d516      	bpl.n	800509c <HAL_LTDC_IRQHandler+0x6a>
 800506e:	07ab      	lsls	r3, r5, #30
 8005070:	d514      	bpl.n	800509c <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005072:	6823      	ldr	r3, [r4, #0]
 8005074:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005076:	f022 0202 	bic.w	r2, r2, #2
 800507a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800507c:	2202      	movs	r2, #2
 800507e:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005080:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8005084:	4313      	orrs	r3, r2
 8005086:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800508a:	2304      	movs	r3, #4
 800508c:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005090:	2300      	movs	r3, #0
 8005092:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005096:	4620      	mov	r0, r4
 8005098:	f7ff ffc9 	bl	800502e <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800509c:	07f0      	lsls	r0, r6, #31
 800509e:	d510      	bpl.n	80050c2 <HAL_LTDC_IRQHandler+0x90>
 80050a0:	07e9      	lsls	r1, r5, #31
 80050a2:	d50e      	bpl.n	80050c2 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80050a4:	6823      	ldr	r3, [r4, #0]
 80050a6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80050a8:	f022 0201 	bic.w	r2, r2, #1
 80050ac:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80050ae:	2201      	movs	r2, #1
 80050b0:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 80050b2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80050b4:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80050b8:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80050bc:	4620      	mov	r0, r4
 80050be:	f7fc fc97 	bl	80019f0 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80050c2:	0732      	lsls	r2, r6, #28
 80050c4:	d511      	bpl.n	80050ea <HAL_LTDC_IRQHandler+0xb8>
 80050c6:	072b      	lsls	r3, r5, #28
 80050c8:	d50f      	bpl.n	80050ea <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80050ca:	6823      	ldr	r3, [r4, #0]
 80050cc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80050ce:	f022 0208 	bic.w	r2, r2, #8
 80050d2:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80050d4:	2208      	movs	r2, #8
 80050d6:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80050d8:	2301      	movs	r3, #1
 80050da:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80050de:	2300      	movs	r3, #0
 80050e0:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80050e4:	4620      	mov	r0, r4
 80050e6:	f7ff ffa3 	bl	8005030 <HAL_LTDC_ReloadEventCallback>
}
 80050ea:	bd70      	pop	{r4, r5, r6, pc}

080050ec <HAL_LTDC_ConfigLayer>:
{
 80050ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80050f0:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 80050f4:	2b01      	cmp	r3, #1
{
 80050f6:	4606      	mov	r6, r0
 80050f8:	460f      	mov	r7, r1
 80050fa:	4694      	mov	ip, r2
 80050fc:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005100:	d01f      	beq.n	8005142 <HAL_LTDC_ConfigLayer+0x56>
 8005102:	f04f 0801 	mov.w	r8, #1
 8005106:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800510a:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800510e:	2434      	movs	r4, #52	@ 0x34
 8005110:	460d      	mov	r5, r1
 8005112:	fb04 6402 	mla	r4, r4, r2, r6
 8005116:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005118:	3438      	adds	r4, #56	@ 0x38
 800511a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800511c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800511e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005120:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005122:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005124:	682b      	ldr	r3, [r5, #0]
 8005126:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005128:	4630      	mov	r0, r6
 800512a:	4662      	mov	r2, ip
 800512c:	4639      	mov	r1, r7
 800512e:	f7ff feb5 	bl	8004e9c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005132:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005134:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005136:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800513a:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800513e:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8005142:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005148 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005148:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 800514c:	2a01      	cmp	r2, #1
{
 800514e:	4603      	mov	r3, r0
 8005150:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005154:	d012      	beq.n	800517c <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005156:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005158:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800515c:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 800515e:	f020 0001 	bic.w	r0, r0, #1
 8005162:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005164:	4806      	ldr	r0, [pc, #24]	@ (8005180 <HAL_LTDC_ProgramLineEvent+0x38>)
 8005166:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005168:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800516a:	f041 0101 	orr.w	r1, r1, #1
 800516e:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8005170:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005172:	2201      	movs	r2, #1
 8005174:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005178:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 800517c:	4770      	bx	lr
 800517e:	bf00      	nop
 8005180:	40016800 	.word	0x40016800

08005184 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 8005184:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 8005186:	4604      	mov	r4, r0
 8005188:	b310      	cbz	r0, 80051d0 <HAL_PCD_Init+0x4c>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 800518a:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
  USBx = hpcd->Instance;
 800518e:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8005190:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005194:	b91b      	cbnz	r3, 800519e <HAL_PCD_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 8005196:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 800519a:	f7fc fcfb 	bl	8001b94 <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 800519e:	2303      	movs	r3, #3

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
 80051a0:	f1b5 4fa0 	cmp.w	r5, #1342177280	@ 0x50000000
  hpcd->State = HAL_PCD_STATE_BUSY;
 80051a4:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  {
    hpcd->Init.dma_enable = 0U;
 80051a8:	bf04      	itt	eq
 80051aa:	2300      	moveq	r3, #0
 80051ac:	71a3      	strbeq	r3, [r4, #6]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 80051ae:	6820      	ldr	r0, [r4, #0]
 80051b0:	f002 f8ca 	bl	8007348 <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 80051b4:	7c23      	ldrb	r3, [r4, #16]
 80051b6:	f88d 3000 	strb.w	r3, [sp]
 80051ba:	1d25      	adds	r5, r4, #4
 80051bc:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 80051c0:	6820      	ldr	r0, [r4, #0]
 80051c2:	f002 f806 	bl	80071d2 <USB_CoreInit>
 80051c6:	4601      	mov	r1, r0
 80051c8:	b130      	cbz	r0, 80051d8 <HAL_PCD_Init+0x54>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 80051ca:	2302      	movs	r3, #2
 80051cc:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
 80051d0:	2501      	movs	r5, #1
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
 80051d2:	4628      	mov	r0, r5
 80051d4:	b003      	add	sp, #12
 80051d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 80051d8:	6820      	ldr	r0, [r4, #0]
 80051da:	f002 f8bb 	bl	8007354 <USB_SetCurrentMode>
 80051de:	2800      	cmp	r0, #0
 80051e0:	d1f3      	bne.n	80051ca <HAL_PCD_Init+0x46>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80051e2:	7926      	ldrb	r6, [r4, #4]
 80051e4:	f104 0314 	add.w	r3, r4, #20
    hpcd->IN_ep[i].is_in = 1U;
 80051e8:	2701      	movs	r7, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 80051ea:	4602      	mov	r2, r0
 80051ec:	b2c1      	uxtb	r1, r0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80051ee:	428e      	cmp	r6, r1
 80051f0:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 80051f4:	d81b      	bhi.n	800522e <HAL_PCD_Init+0xaa>
 80051f6:	2100      	movs	r1, #0
 80051f8:	f504 7315 	add.w	r3, r4, #596	@ 0x254
    hpcd->OUT_ep[i].is_in = 0U;
 80051fc:	460a      	mov	r2, r1
 80051fe:	b2c8      	uxtb	r0, r1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005200:	4286      	cmp	r6, r0
 8005202:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 8005206:	d820      	bhi.n	800524a <HAL_PCD_Init+0xc6>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8005208:	7c23      	ldrb	r3, [r4, #16]
 800520a:	f88d 3000 	strb.w	r3, [sp]
 800520e:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8005212:	6820      	ldr	r0, [r4, #0]
 8005214:	f002 f91a 	bl	800744c <USB_DevInit>
 8005218:	4605      	mov	r5, r0
 800521a:	2800      	cmp	r0, #0
 800521c:	d1d5      	bne.n	80051ca <HAL_PCD_Init+0x46>
  hpcd->State = HAL_PCD_STATE_READY;
 800521e:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
 8005220:	7460      	strb	r0, [r4, #17]
  (void)USB_DevDisconnect(hpcd->Instance);
 8005222:	6820      	ldr	r0, [r4, #0]
  hpcd->State = HAL_PCD_STATE_READY;
 8005224:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  (void)USB_DevDisconnect(hpcd->Instance);
 8005228:	f002 fc54 	bl	8007ad4 <USB_DevDisconnect>
  return HAL_OK;
 800522c:	e7d1      	b.n	80051d2 <HAL_PCD_Init+0x4e>
    hpcd->IN_ep[i].tx_fifo_num = i;
 800522e:	f823 0c0a 	strh.w	r0, [r3, #-10]
    hpcd->IN_ep[i].xfer_buff = 0U;
 8005232:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->IN_ep[i].is_in = 1U;
 8005236:	f803 7c23 	strb.w	r7, [r3, #-35]
    hpcd->IN_ep[i].num = i;
 800523a:	f803 1c24 	strb.w	r1, [r3, #-36]
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 800523e:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->IN_ep[i].xfer_len = 0U;
 8005242:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005246:	3001      	adds	r0, #1
 8005248:	e7d0      	b.n	80051ec <HAL_PCD_Init+0x68>
    hpcd->OUT_ep[i].xfer_buff = 0U;
 800524a:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->OUT_ep[i].is_in = 0U;
 800524e:	f803 2c23 	strb.w	r2, [r3, #-35]
    hpcd->OUT_ep[i].num = i;
 8005252:	f803 0c24 	strb.w	r0, [r3, #-36]
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 8005256:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->OUT_ep[i].xfer_len = 0U;
 800525a:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800525e:	3101      	adds	r1, #1
 8005260:	e7cd      	b.n	80051fe <HAL_PCD_Init+0x7a>

08005262 <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 8005262:	b510      	push	{r4, lr}
 8005264:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005266:	6800      	ldr	r0, [r0, #0]

  __HAL_LOCK(hpcd);
 8005268:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 800526c:	2b01      	cmp	r3, #1
 800526e:	d015      	beq.n	800529c <HAL_PCD_Start+0x3a>
 8005270:	2301      	movs	r3, #1
 8005272:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 8005276:	68c3      	ldr	r3, [r0, #12]
 8005278:	065b      	lsls	r3, r3, #25
 800527a:	d506      	bpl.n	800528a <HAL_PCD_Start+0x28>
 800527c:	7b63      	ldrb	r3, [r4, #13]
 800527e:	2b01      	cmp	r3, #1
      (hpcd->Init.battery_charging_enable == 1U))
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8005280:	bf02      	ittt	eq
 8005282:	6b83      	ldreq	r3, [r0, #56]	@ 0x38
 8005284:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
 8005288:	6383      	streq	r3, [r0, #56]	@ 0x38
  }

  __HAL_PCD_ENABLE(hpcd);
 800528a:	f002 f857 	bl	800733c <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 800528e:	6820      	ldr	r0, [r4, #0]
 8005290:	f002 fc12 	bl	8007ab8 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8005294:	2000      	movs	r0, #0
 8005296:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 800529a:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 800529c:	2002      	movs	r0, #2
 800529e:	e7fc      	b.n	800529a <HAL_PCD_Start+0x38>

080052a0 <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
 80052a0:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 80052a2:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
 80052a6:	2a01      	cmp	r2, #1
{
 80052a8:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 80052aa:	d00a      	beq.n	80052c2 <HAL_PCD_SetAddress+0x22>
 80052ac:	2201      	movs	r2, #1
 80052ae:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
  hpcd->USB_Address = address;
 80052b2:	7441      	strb	r1, [r0, #17]
  (void)USB_SetDevAddress(hpcd->Instance, address);
 80052b4:	6800      	ldr	r0, [r0, #0]
 80052b6:	f002 fbef 	bl	8007a98 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 80052ba:	2000      	movs	r0, #0
 80052bc:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 80052c0:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 80052c2:	2002      	movs	r0, #2
 80052c4:	e7fc      	b.n	80052c0 <HAL_PCD_SetAddress+0x20>

080052c6 <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
 80052c6:	b570      	push	{r4, r5, r6, lr}
 80052c8:	f001 060f 	and.w	r6, r1, #15
 80052cc:	eb06 04c6 	add.w	r4, r6, r6, lsl #3
  HAL_StatusTypeDef ret = HAL_OK;
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 80052d0:	f011 0f80 	tst.w	r1, #128	@ 0x80
{
 80052d4:	4605      	mov	r5, r0
 80052d6:	ea4f 0484 	mov.w	r4, r4, lsl #2
 80052da:	f04f 0024 	mov.w	r0, #36	@ 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 80052de:	d020      	beq.n	8005322 <HAL_PCD_EP_Open+0x5c>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 80052e0:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80052e4:	f104 0114 	add.w	r1, r4, #20
    ep->is_in = 1U;
 80052e8:	2401      	movs	r4, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80052ea:	4429      	add	r1, r5
    ep->is_in = 1U;
 80052ec:	7544      	strb	r4, [r0, #21]
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->num = ep_addr & EP_ADDR_MSK;
  ep->maxpacket = (uint32_t)ep_mps & 0x7FFU;
 80052ee:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80052f2:	608a      	str	r2, [r1, #8]
  ep->type = ep_type;

  if (ep->is_in != 0U)
 80052f4:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 80052f6:	700e      	strb	r6, [r1, #0]
  ep->type = ep_type;
 80052f8:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
 80052fa:	b102      	cbz	r2, 80052fe <HAL_PCD_EP_Open+0x38>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
 80052fc:	834e      	strh	r6, [r1, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
 80052fe:	2b02      	cmp	r3, #2
  {
    ep->data_pid_start = 0U;
 8005300:	bf04      	itt	eq
 8005302:	2300      	moveq	r3, #0
 8005304:	714b      	strbeq	r3, [r1, #5]
  }

  __HAL_LOCK(hpcd);
 8005306:	f895 3494 	ldrb.w	r3, [r5, #1172]	@ 0x494
 800530a:	2b01      	cmp	r3, #1
 800530c:	d012      	beq.n	8005334 <HAL_PCD_EP_Open+0x6e>
 800530e:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8005310:	6828      	ldr	r0, [r5, #0]
  __HAL_LOCK(hpcd);
 8005312:	f885 3494 	strb.w	r3, [r5, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8005316:	f002 f95e 	bl	80075d6 <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 800531a:	2000      	movs	r0, #0
 800531c:	f885 0494 	strb.w	r0, [r5, #1172]	@ 0x494

  return ret;
}
 8005320:	bd70      	pop	{r4, r5, r6, pc}
    ep->is_in = 0U;
 8005322:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005326:	f504 7115 	add.w	r1, r4, #596	@ 0x254
    ep->is_in = 0U;
 800532a:	2400      	movs	r4, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800532c:	4429      	add	r1, r5
    ep->is_in = 0U;
 800532e:	f880 4255 	strb.w	r4, [r0, #597]	@ 0x255
 8005332:	e7dc      	b.n	80052ee <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
 8005334:	2002      	movs	r0, #2
 8005336:	e7f3      	b.n	8005320 <HAL_PCD_EP_Open+0x5a>

08005338 <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8005338:	b510      	push	{r4, lr}
 800533a:	4604      	mov	r4, r0
 800533c:	f001 000f 	and.w	r0, r1, #15
 8005340:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8005344:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8005348:	ea4f 0383 	mov.w	r3, r3, lsl #2
 800534c:	f04f 0224 	mov.w	r2, #36	@ 0x24
 8005350:	d015      	beq.n	800537e <HAL_PCD_EP_Close+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8005352:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005356:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 800535a:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800535c:	4421      	add	r1, r4
    ep->is_in = 1U;
 800535e:	7553      	strb	r3, [r2, #21]
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }
  ep->num = ep_addr & EP_ADDR_MSK;
 8005360:	7008      	strb	r0, [r1, #0]

  __HAL_LOCK(hpcd);
 8005362:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8005366:	2b01      	cmp	r3, #1
 8005368:	d012      	beq.n	8005390 <HAL_PCD_EP_Close+0x58>
 800536a:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 800536c:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 800536e:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8005372:	f002 f96f 	bl	8007654 <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8005376:	2000      	movs	r0, #0
 8005378:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494
  return HAL_OK;
}
 800537c:	bd10      	pop	{r4, pc}
    ep->is_in = 0U;
 800537e:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005382:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8005386:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005388:	4421      	add	r1, r4
    ep->is_in = 0U;
 800538a:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 800538e:	e7e7      	b.n	8005360 <HAL_PCD_EP_Close+0x28>
  __HAL_LOCK(hpcd);
 8005390:	2002      	movs	r0, #2
 8005392:	e7f3      	b.n	800537c <HAL_PCD_EP_Close+0x44>

08005394 <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8005394:	b570      	push	{r4, r5, r6, lr}
 8005396:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800539a:	2424      	movs	r4, #36	@ 0x24
 800539c:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 80053a0:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 80053a4:	e9c4 2398 	strd	r2, r3, [r4, #608]	@ 0x260
  ep->xfer_count = 0U;
 80053a8:	2300      	movs	r3, #0
 80053aa:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
  ep->is_in = 0U;
 80053ae:	f884 3255 	strb.w	r3, [r4, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
 80053b2:	f884 5254 	strb.w	r5, [r4, #596]	@ 0x254
{
 80053b6:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 80053b8:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80053ba:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 80053bc:	2a01      	cmp	r2, #1
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80053be:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->dma_addr = (uint32_t)pBuf;
 80053c2:	bf08      	it	eq
 80053c4:	f8c4 6270 	streq.w	r6, [r4, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80053c8:	f002 f9f0 	bl	80077ac <USB_EPStartXfer>

  return HAL_OK;
}
 80053cc:	2000      	movs	r0, #0
 80053ce:	bd70      	pop	{r4, r5, r6, pc}

080053d0 <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 80053d0:	b570      	push	{r4, r5, r6, lr}
 80053d2:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80053d6:	2424      	movs	r4, #36	@ 0x24
 80053d8:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 80053dc:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 80053e0:	e9c4 2308 	strd	r2, r3, [r4, #32]
  ep->xfer_count = 0U;
 80053e4:	2300      	movs	r3, #0
 80053e6:	62a3      	str	r3, [r4, #40]	@ 0x28
  ep->is_in = 1U;
 80053e8:	2301      	movs	r3, #1
 80053ea:	7563      	strb	r3, [r4, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
 80053ec:	7525      	strb	r5, [r4, #20]
{
 80053ee:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 80053f0:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80053f2:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 80053f4:	429a      	cmp	r2, r3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80053f6:	f101 0114 	add.w	r1, r1, #20
    ep->dma_addr = (uint32_t)pBuf;
 80053fa:	bf08      	it	eq
 80053fc:	6326      	streq	r6, [r4, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80053fe:	f002 f9d5 	bl	80077ac <USB_EPStartXfer>

  return HAL_OK;
}
 8005402:	2000      	movs	r0, #0
 8005404:	bd70      	pop	{r4, r5, r6, pc}

08005406 <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8005406:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8005408:	7903      	ldrb	r3, [r0, #4]
 800540a:	f001 050f 	and.w	r5, r1, #15
 800540e:	42ab      	cmp	r3, r5
{
 8005410:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8005412:	d32b      	bcc.n	800546c <HAL_PCD_EP_SetStall+0x66>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8005414:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8005418:	f04f 0024 	mov.w	r0, #36	@ 0x24
 800541c:	d01d      	beq.n	800545a <HAL_PCD_EP_SetStall+0x54>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800541e:	fb00 4105 	mla	r1, r0, r5, r4
    ep->is_in = 1U;
 8005422:	fb00 4005 	mla	r0, r0, r5, r4
 8005426:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005428:	3114      	adds	r1, #20
    ep->is_in = 1U;
 800542a:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr];
    ep->is_in = 0U;
  }

  ep->is_stall = 1U;
 800542c:	2301      	movs	r3, #1
 800542e:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8005430:	700d      	strb	r5, [r1, #0]

  __HAL_LOCK(hpcd);
 8005432:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
 8005436:	429a      	cmp	r2, r3
 8005438:	d01a      	beq.n	8005470 <HAL_PCD_EP_SetStall+0x6a>

  (void)USB_EPSetStall(hpcd->Instance, ep);
 800543a:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 800543c:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
 8005440:	f002 fad6 	bl	80079f0 <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8005444:	b92d      	cbnz	r5, 8005452 <HAL_PCD_EP_SetStall+0x4c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8005446:	79a1      	ldrb	r1, [r4, #6]
 8005448:	6820      	ldr	r0, [r4, #0]
 800544a:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 800544e:	f002 fb8f 	bl	8007b70 <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
 8005452:	2000      	movs	r0, #0
 8005454:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8005458:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr];
 800545a:	fb00 4301 	mla	r3, r0, r1, r4
    ep->is_in = 0U;
 800545e:	461a      	mov	r2, r3
    ep = &hpcd->OUT_ep[ep_addr];
 8005460:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8005464:	2300      	movs	r3, #0
 8005466:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 800546a:	e7df      	b.n	800542c <HAL_PCD_EP_SetStall+0x26>
    return HAL_ERROR;
 800546c:	2001      	movs	r0, #1
 800546e:	e7f3      	b.n	8005458 <HAL_PCD_EP_SetStall+0x52>
  __HAL_LOCK(hpcd);
 8005470:	2002      	movs	r0, #2
 8005472:	e7f1      	b.n	8005458 <HAL_PCD_EP_SetStall+0x52>

08005474 <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8005474:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8005476:	7903      	ldrb	r3, [r0, #4]
 8005478:	f001 020f 	and.w	r2, r1, #15
 800547c:	4293      	cmp	r3, r2
{
 800547e:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8005480:	d329      	bcc.n	80054d6 <HAL_PCD_EP_ClrStall+0x62>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8005482:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
 8005486:	f011 0f80 	tst.w	r1, #128	@ 0x80
 800548a:	ea4f 0383 	mov.w	r3, r3, lsl #2
 800548e:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8005492:	d017      	beq.n	80054c4 <HAL_PCD_EP_ClrStall+0x50>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8005494:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005498:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 800549c:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800549e:	4421      	add	r1, r4
    ep->is_in = 1U;
 80054a0:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->is_stall = 0U;
 80054a2:	2500      	movs	r5, #0
 80054a4:	708d      	strb	r5, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 80054a6:	700a      	strb	r2, [r1, #0]

  __HAL_LOCK(hpcd);
 80054a8:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 80054ac:	2b01      	cmp	r3, #1
 80054ae:	d014      	beq.n	80054da <HAL_PCD_EP_ClrStall+0x66>
 80054b0:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
 80054b2:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 80054b4:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
 80054b8:	f002 fac5 	bl	8007a46 <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 80054bc:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494

  return HAL_OK;
 80054c0:	4628      	mov	r0, r5
}
 80054c2:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 0U;
 80054c4:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80054c8:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 80054cc:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80054ce:	4421      	add	r1, r4
    ep->is_in = 0U;
 80054d0:	f880 3255 	strb.w	r3, [r0, #597]	@ 0x255
 80054d4:	e7e5      	b.n	80054a2 <HAL_PCD_EP_ClrStall+0x2e>
    return HAL_ERROR;
 80054d6:	2001      	movs	r0, #1
 80054d8:	e7f3      	b.n	80054c2 <HAL_PCD_EP_ClrStall+0x4e>
  __HAL_LOCK(hpcd);
 80054da:	2002      	movs	r0, #2
 80054dc:	e7f1      	b.n	80054c2 <HAL_PCD_EP_ClrStall+0x4e>

080054de <HAL_PCD_EP_Abort>:
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
 80054de:	f001 030f 	and.w	r3, r1, #15
 80054e2:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 80054e6:	060a      	lsls	r2, r1, #24
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80054e8:	ea4f 0383 	mov.w	r3, r3, lsl #2
 80054ec:	bf4c      	ite	mi
 80054ee:	f103 0114 	addmi.w	r1, r3, #20
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80054f2:	f503 7115 	addpl.w	r1, r3, #596	@ 0x254
 80054f6:	4401      	add	r1, r0
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 80054f8:	6800      	ldr	r0, [r0, #0]
 80054fa:	f002 b901 	b.w	8007700 <USB_EPStopXfer>
	...

08005500 <HAL_PCD_IRQHandler>:
{
 8005500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005504:	6806      	ldr	r6, [r0, #0]
{
 8005506:	b089      	sub	sp, #36	@ 0x24
 8005508:	4604      	mov	r4, r0
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 800550a:	4630      	mov	r0, r6
 800550c:	f002 fb1e 	bl	8007b4c <USB_GetMode>
 8005510:	9003      	str	r0, [sp, #12]
 8005512:	2800      	cmp	r0, #0
 8005514:	f040 8156 	bne.w	80057c4 <HAL_PCD_IRQHandler+0x2c4>
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 8005518:	6820      	ldr	r0, [r4, #0]
 800551a:	f002 fae9 	bl	8007af0 <USB_ReadInterrupts>
 800551e:	2800      	cmp	r0, #0
 8005520:	f000 8150 	beq.w	80057c4 <HAL_PCD_IRQHandler+0x2c4>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8005524:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8005528:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 800552a:	f3c3 230d 	ubfx	r3, r3, #8, #14
 800552e:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8005532:	f002 fadd 	bl	8007af0 <USB_ReadInterrupts>
 8005536:	0787      	lsls	r7, r0, #30
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8005538:	bf48      	it	mi
 800553a:	6822      	ldrmi	r2, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 800553c:	6820      	ldr	r0, [r4, #0]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 800553e:	bf42      	ittt	mi
 8005540:	6953      	ldrmi	r3, [r2, #20]
 8005542:	f003 0302 	andmi.w	r3, r3, #2
 8005546:	6153      	strmi	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8005548:	f002 fad2 	bl	8007af0 <USB_ReadInterrupts>
 800554c:	06c0      	lsls	r0, r0, #27
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 800554e:	f506 6500 	add.w	r5, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8005552:	d52d      	bpl.n	80055b0 <HAL_PCD_IRQHandler+0xb0>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8005554:	6822      	ldr	r2, [r4, #0]
 8005556:	6993      	ldr	r3, [r2, #24]
 8005558:	f023 0310 	bic.w	r3, r3, #16
 800555c:	6193      	str	r3, [r2, #24]
      RegVal = USBx->GRXSTSP;
 800555e:	f8d6 8020 	ldr.w	r8, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8005562:	f408 13f0 	and.w	r3, r8, #1966080	@ 0x1e0000
 8005566:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 800556a:	f008 070f 	and.w	r7, r8, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 800556e:	f040 812c 	bne.w	80057ca <HAL_PCD_IRQHandler+0x2ca>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 8005572:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8005576:	ea18 0f03 	tst.w	r8, r3
 800557a:	d014      	beq.n	80055a6 <HAL_PCD_IRQHandler+0xa6>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 800557c:	2324      	movs	r3, #36	@ 0x24
 800557e:	fb03 4707 	mla	r7, r3, r7, r4
 8005582:	f3c8 190a 	ubfx	r9, r8, #4, #11
 8005586:	f8d7 1260 	ldr.w	r1, [r7, #608]	@ 0x260
 800558a:	464a      	mov	r2, r9
 800558c:	4630      	mov	r0, r6
 800558e:	f002 fa0f 	bl	80079b0 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8005592:	f8d7 3260 	ldr.w	r3, [r7, #608]	@ 0x260
 8005596:	444b      	add	r3, r9
 8005598:	f8c7 3260 	str.w	r3, [r7, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800559c:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 80055a0:	444b      	add	r3, r9
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 80055a2:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 80055a6:	6822      	ldr	r2, [r4, #0]
 80055a8:	6993      	ldr	r3, [r2, #24]
 80055aa:	f043 0310 	orr.w	r3, r3, #16
 80055ae:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 80055b0:	6820      	ldr	r0, [r4, #0]
 80055b2:	f002 fa9d 	bl	8007af0 <USB_ReadInterrupts>
 80055b6:	0301      	lsls	r1, r0, #12
 80055b8:	f100 811a 	bmi.w	80057f0 <HAL_PCD_IRQHandler+0x2f0>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 80055bc:	6820      	ldr	r0, [r4, #0]
 80055be:	f002 fa97 	bl	8007af0 <USB_ReadInterrupts>
 80055c2:	0342      	lsls	r2, r0, #13
 80055c4:	d50d      	bpl.n	80055e2 <HAL_PCD_IRQHandler+0xe2>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 80055c6:	6820      	ldr	r0, [r4, #0]
 80055c8:	f002 fa9e 	bl	8007b08 <USB_ReadDevAllInEpInterrupt>
 80055cc:	4627      	mov	r7, r4
 80055ce:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 80055d0:	f506 6b10 	add.w	fp, r6, #2304	@ 0x900
      epnum = 0U;
 80055d4:	f04f 0a00 	mov.w	sl, #0
      while (ep_intr != 0U)
 80055d8:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80055da:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 80055dc:	2b00      	cmp	r3, #0
 80055de:	f040 81d1 	bne.w	8005984 <HAL_PCD_IRQHandler+0x484>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 80055e2:	6820      	ldr	r0, [r4, #0]
 80055e4:	f002 fa84 	bl	8007af0 <USB_ReadInterrupts>
 80055e8:	2800      	cmp	r0, #0
 80055ea:	da13      	bge.n	8005614 <HAL_PCD_IRQHandler+0x114>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 80055ec:	686b      	ldr	r3, [r5, #4]
 80055ee:	f023 0301 	bic.w	r3, r3, #1
 80055f2:	606b      	str	r3, [r5, #4]
      if (hpcd->LPM_State == LPM_L1)
 80055f4:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
 80055f8:	2b01      	cmp	r3, #1
 80055fa:	f040 8269 	bne.w	8005ad0 <HAL_PCD_IRQHandler+0x5d0>
        hpcd->LPM_State = LPM_L0;
 80055fe:	2100      	movs	r1, #0
 8005600:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8005604:	4620      	mov	r0, r4
 8005606:	f000 fae6 	bl	8005bd6 <HAL_PCDEx_LPM_Callback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 800560a:	6822      	ldr	r2, [r4, #0]
 800560c:	6953      	ldr	r3, [r2, #20]
 800560e:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8005612:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8005614:	6820      	ldr	r0, [r4, #0]
 8005616:	f002 fa6b 	bl	8007af0 <USB_ReadInterrupts>
 800561a:	0507      	lsls	r7, r0, #20
 800561c:	d50a      	bpl.n	8005634 <HAL_PCD_IRQHandler+0x134>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 800561e:	68ab      	ldr	r3, [r5, #8]
 8005620:	07d8      	lsls	r0, r3, #31
 8005622:	d502      	bpl.n	800562a <HAL_PCD_IRQHandler+0x12a>
        HAL_PCD_SuspendCallback(hpcd);
 8005624:	4620      	mov	r0, r4
 8005626:	f7fc fb2b 	bl	8001c80 <HAL_PCD_SuspendCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 800562a:	6822      	ldr	r2, [r4, #0]
 800562c:	6953      	ldr	r3, [r2, #20]
 800562e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005632:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 8005634:	6820      	ldr	r0, [r4, #0]
 8005636:	f002 fa5b 	bl	8007af0 <USB_ReadInterrupts>
 800563a:	04c1      	lsls	r1, r0, #19
 800563c:	d533      	bpl.n	80056a6 <HAL_PCD_IRQHandler+0x1a6>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 800563e:	686b      	ldr	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8005640:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8005642:	f023 0301 	bic.w	r3, r3, #1
 8005646:	606b      	str	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8005648:	2110      	movs	r1, #16
 800564a:	f001 feb3 	bl	80073b4 <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800564e:	7920      	ldrb	r0, [r4, #4]
 8005650:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8005654:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005658:	9a03      	ldr	r2, [sp, #12]
 800565a:	4290      	cmp	r0, r2
 800565c:	f200 823c 	bhi.w	8005ad8 <HAL_PCD_IRQHandler+0x5d8>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 8005660:	69eb      	ldr	r3, [r5, #28]
 8005662:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 8005666:	61eb      	str	r3, [r5, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 8005668:	7be3      	ldrb	r3, [r4, #15]
 800566a:	2b00      	cmp	r3, #0
 800566c:	f000 8250 	beq.w	8005b10 <HAL_PCD_IRQHandler+0x610>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 8005670:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 8005674:	f043 030b 	orr.w	r3, r3, #11
 8005678:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 800567c:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 800567e:	f043 030b 	orr.w	r3, r3, #11
 8005682:	646b      	str	r3, [r5, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8005684:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8005688:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 800568a:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800568e:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8005692:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005696:	79a1      	ldrb	r1, [r4, #6]
 8005698:	f002 fa6a 	bl	8007b70 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 800569c:	6822      	ldr	r2, [r4, #0]
 800569e:	6953      	ldr	r3, [r2, #20]
 80056a0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80056a4:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 80056a6:	6820      	ldr	r0, [r4, #0]
 80056a8:	f002 fa22 	bl	8007af0 <USB_ReadInterrupts>
 80056ac:	0482      	lsls	r2, r0, #18
 80056ae:	d516      	bpl.n	80056de <HAL_PCD_IRQHandler+0x1de>
      (void)USB_ActivateSetup(hpcd->Instance);
 80056b0:	6820      	ldr	r0, [r4, #0]
 80056b2:	f002 fa4f 	bl	8007b54 <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 80056b6:	6820      	ldr	r0, [r4, #0]
 80056b8:	f001 ff82 	bl	80075c0 <USB_GetDevSpeed>
 80056bc:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 80056be:	6827      	ldr	r7, [r4, #0]
 80056c0:	f000 fd00 	bl	80060c4 <HAL_RCC_GetHCLKFreq>
 80056c4:	79e2      	ldrb	r2, [r4, #7]
 80056c6:	4601      	mov	r1, r0
 80056c8:	4638      	mov	r0, r7
 80056ca:	f001 fdc7 	bl	800725c <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 80056ce:	4620      	mov	r0, r4
 80056d0:	f7fc fac3 	bl	8001c5a <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 80056d4:	6822      	ldr	r2, [r4, #0]
 80056d6:	6953      	ldr	r3, [r2, #20]
 80056d8:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80056dc:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 80056de:	6820      	ldr	r0, [r4, #0]
 80056e0:	f002 fa06 	bl	8007af0 <USB_ReadInterrupts>
 80056e4:	0703      	lsls	r3, r0, #28
 80056e6:	d507      	bpl.n	80056f8 <HAL_PCD_IRQHandler+0x1f8>
      HAL_PCD_SOFCallback(hpcd);
 80056e8:	4620      	mov	r0, r4
 80056ea:	f7fc fab2 	bl	8001c52 <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 80056ee:	6822      	ldr	r2, [r4, #0]
 80056f0:	6953      	ldr	r3, [r2, #20]
 80056f2:	f003 0308 	and.w	r3, r3, #8
 80056f6:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 80056f8:	6820      	ldr	r0, [r4, #0]
 80056fa:	f002 f9f9 	bl	8007af0 <USB_ReadInterrupts>
 80056fe:	0607      	lsls	r7, r0, #24
 8005700:	f100 8211 	bmi.w	8005b26 <HAL_PCD_IRQHandler+0x626>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8005704:	6820      	ldr	r0, [r4, #0]
 8005706:	f002 f9f3 	bl	8007af0 <USB_ReadInterrupts>
 800570a:	02c0      	lsls	r0, r0, #11
 800570c:	d50c      	bpl.n	8005728 <HAL_PCD_IRQHandler+0x228>
 800570e:	46a0      	mov	r8, r4
 8005710:	f506 6912 	add.w	r9, r6, #2336	@ 0x920
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005714:	2701      	movs	r7, #1
 8005716:	7923      	ldrb	r3, [r4, #4]
 8005718:	42bb      	cmp	r3, r7
 800571a:	f200 821d 	bhi.w	8005b58 <HAL_PCD_IRQHandler+0x658>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 800571e:	6822      	ldr	r2, [r4, #0]
 8005720:	6953      	ldr	r3, [r2, #20]
 8005722:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8005726:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 8005728:	6820      	ldr	r0, [r4, #0]
 800572a:	f002 f9e1 	bl	8007af0 <USB_ReadInterrupts>
 800572e:	0281      	lsls	r1, r0, #10
 8005730:	d52b      	bpl.n	800578a <HAL_PCD_IRQHandler+0x28a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005732:	f894 e004 	ldrb.w	lr, [r4, #4]
 8005736:	4623      	mov	r3, r4
 8005738:	f506 6132 	add.w	r1, r6, #2848	@ 0xb20
 800573c:	f04f 0c01 	mov.w	ip, #1
 8005740:	45e6      	cmp	lr, ip
 8005742:	d91d      	bls.n	8005780 <HAL_PCD_IRQHandler+0x280>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8005744:	f893 727c 	ldrb.w	r7, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 8005748:	6808      	ldr	r0, [r1, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 800574a:	2f01      	cmp	r7, #1
 800574c:	f040 821a 	bne.w	8005b84 <HAL_PCD_IRQHandler+0x684>
 8005750:	2800      	cmp	r0, #0
 8005752:	f280 8217 	bge.w	8005b84 <HAL_PCD_IRQHandler+0x684>
            (((RegVal & (0x1U << 16)) >> 16U) == (hpcd->FrameNumber & 0x1U)))
 8005756:	f8d4 24d4 	ldr.w	r2, [r4, #1236]	@ 0x4d4
 800575a:	ea82 4010 	eor.w	r0, r2, r0, lsr #16
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 800575e:	07c2      	lsls	r2, r0, #31
 8005760:	f100 8210 	bmi.w	8005b84 <HAL_PCD_IRQHandler+0x684>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 8005764:	f883 727b 	strb.w	r7, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 8005768:	69b0      	ldr	r0, [r6, #24]
 800576a:	f040 0080 	orr.w	r0, r0, #128	@ 0x80
 800576e:	61b0      	str	r0, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 8005770:	6970      	ldr	r0, [r6, #20]
 8005772:	0600      	lsls	r0, r0, #24
 8005774:	f100 8206 	bmi.w	8005b84 <HAL_PCD_IRQHandler+0x684>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 8005778:	686b      	ldr	r3, [r5, #4]
 800577a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800577e:	606b      	str	r3, [r5, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 8005780:	6822      	ldr	r2, [r4, #0]
 8005782:	6953      	ldr	r3, [r2, #20]
 8005784:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8005788:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 800578a:	6820      	ldr	r0, [r4, #0]
 800578c:	f002 f9b0 	bl	8007af0 <USB_ReadInterrupts>
 8005790:	0041      	lsls	r1, r0, #1
 8005792:	d507      	bpl.n	80057a4 <HAL_PCD_IRQHandler+0x2a4>
      HAL_PCD_ConnectCallback(hpcd);
 8005794:	4620      	mov	r0, r4
 8005796:	f7fc fa97 	bl	8001cc8 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 800579a:	6822      	ldr	r2, [r4, #0]
 800579c:	6953      	ldr	r3, [r2, #20]
 800579e:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 80057a2:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 80057a4:	6820      	ldr	r0, [r4, #0]
 80057a6:	f002 f9a3 	bl	8007af0 <USB_ReadInterrupts>
 80057aa:	0742      	lsls	r2, r0, #29
 80057ac:	d50a      	bpl.n	80057c4 <HAL_PCD_IRQHandler+0x2c4>
      RegVal = hpcd->Instance->GOTGINT;
 80057ae:	6823      	ldr	r3, [r4, #0]
 80057b0:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 80057b2:	076b      	lsls	r3, r5, #29
 80057b4:	d502      	bpl.n	80057bc <HAL_PCD_IRQHandler+0x2bc>
        HAL_PCD_DisconnectCallback(hpcd);
 80057b6:	4620      	mov	r0, r4
 80057b8:	f7fc fa8a 	bl	8001cd0 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
 80057bc:	6822      	ldr	r2, [r4, #0]
 80057be:	6853      	ldr	r3, [r2, #4]
 80057c0:	432b      	orrs	r3, r5
 80057c2:	6053      	str	r3, [r2, #4]
}
 80057c4:	b009      	add	sp, #36	@ 0x24
 80057c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 80057ca:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 80057ce:	f47f aeea 	bne.w	80055a6 <HAL_PCD_IRQHandler+0xa6>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 80057d2:	2208      	movs	r2, #8
 80057d4:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
 80057d8:	4630      	mov	r0, r6
 80057da:	f002 f8e9 	bl	80079b0 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 80057de:	2324      	movs	r3, #36	@ 0x24
 80057e0:	fb03 4707 	mla	r7, r3, r7, r4
 80057e4:	f3c8 180a 	ubfx	r8, r8, #4, #11
 80057e8:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 80057ec:	4443      	add	r3, r8
 80057ee:	e6d8      	b.n	80055a2 <HAL_PCD_IRQHandler+0xa2>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 80057f0:	6820      	ldr	r0, [r4, #0]
 80057f2:	f002 f981 	bl	8007af8 <USB_ReadDevAllOutEpInterrupt>
 80057f6:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
 80057fa:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 80057fc:	46a2      	mov	sl, r4
      epnum = 0U;
 80057fe:	2700      	movs	r7, #0
      while (ep_intr != 0U)
 8005800:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005802:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8005804:	2b00      	cmp	r3, #0
 8005806:	f43f aed9 	beq.w	80055bc <HAL_PCD_IRQHandler+0xbc>
        if ((ep_intr & 0x1U) != 0U)
 800580a:	9b04      	ldr	r3, [sp, #16]
 800580c:	07db      	lsls	r3, r3, #31
 800580e:	d578      	bpl.n	8005902 <HAL_PCD_IRQHandler+0x402>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005810:	fa5f fb87 	uxtb.w	fp, r7
 8005814:	4659      	mov	r1, fp
 8005816:	f002 f97f 	bl	8007b18 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 800581a:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 800581e:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8005820:	d01f      	beq.n	8005862 <HAL_PCD_IRQHandler+0x362>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005822:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 8005824:	2301      	movs	r3, #1
 8005826:	f8c8 3008 	str.w	r3, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if (hpcd->Init.dma_enable == 1U)
 800582a:	f894 c006 	ldrb.w	ip, [r4, #6]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 800582e:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005830:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
 8005834:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if (hpcd->Init.dma_enable == 1U)
 8005838:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 800583c:	689a      	ldr	r2, [r3, #8]
  if (hpcd->Init.dma_enable == 1U)
 800583e:	f040 808b 	bne.w	8005958 <HAL_PCD_IRQHandler+0x458>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 8005842:	f012 0f08 	tst.w	r2, #8
 8005846:	d007      	beq.n	8005858 <HAL_PCD_IRQHandler+0x358>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005848:	48af      	ldr	r0, [pc, #700]	@ (8005b08 <HAL_PCD_IRQHandler+0x608>)
 800584a:	4281      	cmp	r1, r0
 800584c:	d909      	bls.n	8005862 <HAL_PCD_IRQHandler+0x362>
 800584e:	0412      	lsls	r2, r2, #16
 8005850:	d507      	bpl.n	8005862 <HAL_PCD_IRQHandler+0x362>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005852:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8005856:	e003      	b.n	8005860 <HAL_PCD_IRQHandler+0x360>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 8005858:	f012 0f20 	tst.w	r2, #32
 800585c:	d05a      	beq.n	8005914 <HAL_PCD_IRQHandler+0x414>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 800585e:	2220      	movs	r2, #32
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005860:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 8005862:	f019 0f08 	tst.w	r9, #8
 8005866:	d021      	beq.n	80058ac <HAL_PCD_IRQHandler+0x3ac>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 8005868:	2308      	movs	r3, #8
 800586a:	f8c8 3008 	str.w	r3, [r8, #8]
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800586e:	6823      	ldr	r3, [r4, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005870:	49a5      	ldr	r1, [pc, #660]	@ (8005b08 <HAL_PCD_IRQHandler+0x608>)
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8005872:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005874:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8005878:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 800587c:	428a      	cmp	r2, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 800587e:	6898      	ldr	r0, [r3, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005880:	d904      	bls.n	800588c <HAL_PCD_IRQHandler+0x38c>
 8005882:	0401      	lsls	r1, r0, #16
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005884:	bf44      	itt	mi
 8005886:	f44f 4000 	movmi.w	r0, #32768	@ 0x8000
 800588a:	6098      	strmi	r0, [r3, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 800588c:	4620      	mov	r0, r4
 800588e:	9205      	str	r2, [sp, #20]
 8005890:	f7fc f9c8 	bl	8001c24 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 8005894:	9a05      	ldr	r2, [sp, #20]
 8005896:	499c      	ldr	r1, [pc, #624]	@ (8005b08 <HAL_PCD_IRQHandler+0x608>)
 8005898:	428a      	cmp	r2, r1
 800589a:	d907      	bls.n	80058ac <HAL_PCD_IRQHandler+0x3ac>
 800589c:	79a1      	ldrb	r1, [r4, #6]
 800589e:	2901      	cmp	r1, #1
 80058a0:	d104      	bne.n	80058ac <HAL_PCD_IRQHandler+0x3ac>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80058a2:	6820      	ldr	r0, [r4, #0]
 80058a4:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80058a8:	f002 f962 	bl	8007b70 <USB_EP0_OutStart>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 80058ac:	f019 0f10 	tst.w	r9, #16
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 80058b0:	bf1c      	itt	ne
 80058b2:	2310      	movne	r3, #16
 80058b4:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 80058b8:	f019 0f02 	tst.w	r9, #2
 80058bc:	d014      	beq.n	80058e8 <HAL_PCD_IRQHandler+0x3e8>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 80058be:	6973      	ldr	r3, [r6, #20]
 80058c0:	061a      	lsls	r2, r3, #24
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 80058c2:	bf42      	ittt	mi
 80058c4:	686b      	ldrmi	r3, [r5, #4]
 80058c6:	f443 6380 	orrmi.w	r3, r3, #1024	@ 0x400
 80058ca:	606b      	strmi	r3, [r5, #4]
            if (ep->is_iso_incomplete == 1U)
 80058cc:	f89a 3257 	ldrb.w	r3, [sl, #599]	@ 0x257
 80058d0:	2b01      	cmp	r3, #1
 80058d2:	d106      	bne.n	80058e2 <HAL_PCD_IRQHandler+0x3e2>
              ep->is_iso_incomplete = 0U;
 80058d4:	2300      	movs	r3, #0
 80058d6:	f88a 3257 	strb.w	r3, [sl, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 80058da:	4659      	mov	r1, fp
 80058dc:	4620      	mov	r0, r4
 80058de:	f7fc f9eb 	bl	8001cb8 <HAL_PCD_ISOOUTIncompleteCallback>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 80058e2:	2302      	movs	r3, #2
 80058e4:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 80058e8:	f019 0f20 	tst.w	r9, #32
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80058ec:	bf1c      	itt	ne
 80058ee:	2320      	movne	r3, #32
 80058f0:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 80058f4:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 80058f8:	bf1c      	itt	ne
 80058fa:	f44f 5300 	movne.w	r3, #8192	@ 0x2000
 80058fe:	f8c8 3008 	strne.w	r3, [r8, #8]
        ep_intr >>= 1U;
 8005902:	9b04      	ldr	r3, [sp, #16]
 8005904:	085b      	lsrs	r3, r3, #1
        epnum++;
 8005906:	3701      	adds	r7, #1
        ep_intr >>= 1U;
 8005908:	9304      	str	r3, [sp, #16]
 800590a:	f108 0820 	add.w	r8, r8, #32
 800590e:	f10a 0a24 	add.w	sl, sl, #36	@ 0x24
 8005912:	e775      	b.n	8005800 <HAL_PCD_IRQHandler+0x300>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005914:	f8df c1f0 	ldr.w	ip, [pc, #496]	@ 8005b08 <HAL_PCD_IRQHandler+0x608>
 8005918:	4561      	cmp	r1, ip
 800591a:	d901      	bls.n	8005920 <HAL_PCD_IRQHandler+0x420>
 800591c:	0412      	lsls	r2, r2, #16
 800591e:	d498      	bmi.n	8005852 <HAL_PCD_IRQHandler+0x352>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 8005920:	691a      	ldr	r2, [r3, #16]
 8005922:	f8da 3274 	ldr.w	r3, [sl, #628]	@ 0x274
 8005926:	f3c2 0212 	ubfx	r2, r2, #0, #19
 800592a:	1a9b      	subs	r3, r3, r2
 800592c:	f8ca 3268 	str.w	r3, [sl, #616]	@ 0x268
        if (epnum == 0U)
 8005930:	b96f      	cbnz	r7, 800594e <HAL_PCD_IRQHandler+0x44e>
          if (ep->xfer_len == 0U)
 8005932:	f8d4 2264 	ldr.w	r2, [r4, #612]	@ 0x264
 8005936:	b92a      	cbnz	r2, 8005944 <HAL_PCD_IRQHandler+0x444>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8005938:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 800593c:	2101      	movs	r1, #1
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 800593e:	f002 f917 	bl	8007b70 <USB_EP0_OutStart>
 8005942:	e004      	b.n	800594e <HAL_PCD_IRQHandler+0x44e>
            ep->xfer_buff += ep->xfer_count;
 8005944:	f8d4 2260 	ldr.w	r2, [r4, #608]	@ 0x260
 8005948:	441a      	add	r2, r3
 800594a:	f8c4 2260 	str.w	r2, [r4, #608]	@ 0x260
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 800594e:	4659      	mov	r1, fp
 8005950:	4620      	mov	r0, r4
 8005952:	f7fc f96d 	bl	8001c30 <HAL_PCD_DataOutStageCallback>
 8005956:	e784      	b.n	8005862 <HAL_PCD_IRQHandler+0x362>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 8005958:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 8005b0c <HAL_PCD_IRQHandler+0x60c>
 800595c:	4561      	cmp	r1, ip
 800595e:	d107      	bne.n	8005970 <HAL_PCD_IRQHandler+0x470>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 8005960:	0411      	lsls	r1, r2, #16
 8005962:	f53f af76 	bmi.w	8005852 <HAL_PCD_IRQHandler+0x352>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8005966:	0690      	lsls	r0, r2, #26
 8005968:	d5f1      	bpl.n	800594e <HAL_PCD_IRQHandler+0x44e>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 800596a:	2220      	movs	r2, #32
 800596c:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 800596e:	e7ee      	b.n	800594e <HAL_PCD_IRQHandler+0x44e>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 8005970:	2f00      	cmp	r7, #0
 8005972:	d1ec      	bne.n	800594e <HAL_PCD_IRQHandler+0x44e>
 8005974:	f8d4 3264 	ldr.w	r3, [r4, #612]	@ 0x264
 8005978:	2b00      	cmp	r3, #0
 800597a:	d1e8      	bne.n	800594e <HAL_PCD_IRQHandler+0x44e>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 800597c:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005980:	4639      	mov	r1, r7
 8005982:	e7dc      	b.n	800593e <HAL_PCD_IRQHandler+0x43e>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 8005984:	9b04      	ldr	r3, [sp, #16]
 8005986:	07db      	lsls	r3, r3, #31
 8005988:	f140 8099 	bpl.w	8005abe <HAL_PCD_IRQHandler+0x5be>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 800598c:	fa5f f38a 	uxtb.w	r3, sl
 8005990:	4619      	mov	r1, r3
 8005992:	9305      	str	r3, [sp, #20]
 8005994:	f002 f8c9 	bl	8007b2a <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8005998:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 800599c:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 800599e:	d01f      	beq.n	80059e0 <HAL_PCD_IRQHandler+0x4e0>
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80059a0:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 80059a2:	2101      	movs	r1, #1
 80059a4:	f00a 020f 	and.w	r2, sl, #15
 80059a8:	fa01 f202 	lsl.w	r2, r1, r2
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80059ac:	ea23 0302 	bic.w	r3, r3, r2
 80059b0:	636b      	str	r3, [r5, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 80059b2:	f8cb 1008 	str.w	r1, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
 80059b6:	79a1      	ldrb	r1, [r4, #6]
 80059b8:	2901      	cmp	r1, #1
 80059ba:	d10d      	bne.n	80059d8 <HAL_PCD_IRQHandler+0x4d8>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 80059bc:	e9d7 2307 	ldrd	r2, r3, [r7, #28]
 80059c0:	4413      	add	r3, r2
 80059c2:	623b      	str	r3, [r7, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 80059c4:	f1ba 0f00 	cmp.w	sl, #0
 80059c8:	d106      	bne.n	80059d8 <HAL_PCD_IRQHandler+0x4d8>
 80059ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80059cc:	b923      	cbnz	r3, 80059d8 <HAL_PCD_IRQHandler+0x4d8>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80059ce:	6820      	ldr	r0, [r4, #0]
 80059d0:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80059d4:	f002 f8cc 	bl	8007b70 <USB_EP0_OutStart>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 80059d8:	9905      	ldr	r1, [sp, #20]
 80059da:	4620      	mov	r0, r4
 80059dc:	f7fc f931 	bl	8001c42 <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 80059e0:	f018 0f08 	tst.w	r8, #8
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 80059e4:	bf1c      	itt	ne
 80059e6:	2308      	movne	r3, #8
 80059e8:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 80059ec:	f018 0f10 	tst.w	r8, #16
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 80059f0:	bf1c      	itt	ne
 80059f2:	2310      	movne	r3, #16
 80059f4:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 80059f8:	f018 0f40 	tst.w	r8, #64	@ 0x40
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 80059fc:	bf1c      	itt	ne
 80059fe:	2340      	movne	r3, #64	@ 0x40
 8005a00:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 8005a04:	f018 0f02 	tst.w	r8, #2
 8005a08:	d00f      	beq.n	8005a2a <HAL_PCD_IRQHandler+0x52a>
            (void)USB_FlushTxFifo(USBx, epnum);
 8005a0a:	4651      	mov	r1, sl
 8005a0c:	4630      	mov	r0, r6
 8005a0e:	f001 fcd1 	bl	80073b4 <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
 8005a12:	7dfb      	ldrb	r3, [r7, #23]
 8005a14:	2b01      	cmp	r3, #1
 8005a16:	d105      	bne.n	8005a24 <HAL_PCD_IRQHandler+0x524>
              ep->is_iso_incomplete = 0U;
 8005a18:	2300      	movs	r3, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 8005a1a:	9905      	ldr	r1, [sp, #20]
              ep->is_iso_incomplete = 0U;
 8005a1c:	75fb      	strb	r3, [r7, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 8005a1e:	4620      	mov	r0, r4
 8005a20:	f7fc f94e 	bl	8001cc0 <HAL_PCD_ISOINIncompleteCallback>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 8005a24:	2302      	movs	r3, #2
 8005a26:	f8cb 3008 	str.w	r3, [fp, #8]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005a2a:	6823      	ldr	r3, [r4, #0]
 8005a2c:	9306      	str	r3, [sp, #24]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 8005a2e:	f018 0f80 	tst.w	r8, #128	@ 0x80
 8005a32:	d044      	beq.n	8005abe <HAL_PCD_IRQHandler+0x5be>
  if (ep->xfer_count > ep->xfer_len)
 8005a34:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 8005a38:	429a      	cmp	r2, r3
 8005a3a:	d840      	bhi.n	8005abe <HAL_PCD_IRQHandler+0x5be>
  len = ep->xfer_len - ep->xfer_count;
 8005a3c:	eba3 0802 	sub.w	r8, r3, r2
  if (len > ep->maxpacket)
 8005a40:	69fb      	ldr	r3, [r7, #28]
 8005a42:	4598      	cmp	r8, r3
 8005a44:	bf28      	it	cs
 8005a46:	4698      	movcs	r8, r3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005a48:	9b06      	ldr	r3, [sp, #24]
 8005a4a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
  len32b = (len + 3U) / 4U;
 8005a4e:	f108 0803 	add.w	r8, r8, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005a52:	eb03 134a 	add.w	r3, r3, sl, lsl #5
  len32b = (len + 3U) / 4U;
 8005a56:	ea4f 0898 	mov.w	r8, r8, lsr #2
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005a5a:	9307      	str	r3, [sp, #28]
 8005a5c:	9b07      	ldr	r3, [sp, #28]
 8005a5e:	6999      	ldr	r1, [r3, #24]
 8005a60:	b289      	uxth	r1, r1
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 8005a62:	4541      	cmp	r1, r8
 8005a64:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 8005a68:	d327      	bcc.n	8005aba <HAL_PCD_IRQHandler+0x5ba>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005a6a:	4293      	cmp	r3, r2
 8005a6c:	d80b      	bhi.n	8005a86 <HAL_PCD_IRQHandler+0x586>
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005a6e:	9b06      	ldr	r3, [sp, #24]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8005a70:	f00a 000f 	and.w	r0, sl, #15
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005a74:	f8d3 2834 	ldr.w	r2, [r3, #2100]	@ 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8005a78:	2101      	movs	r1, #1
 8005a7a:	4081      	lsls	r1, r0
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005a7c:	ea22 0201 	bic.w	r2, r2, r1
 8005a80:	f8c3 2834 	str.w	r2, [r3, #2100]	@ 0x834
 8005a84:	e01b      	b.n	8005abe <HAL_PCD_IRQHandler+0x5be>
    len = ep->xfer_len - ep->xfer_count;
 8005a86:	eba3 0902 	sub.w	r9, r3, r2
    if (len > ep->maxpacket)
 8005a8a:	69fb      	ldr	r3, [r7, #28]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8005a8c:	9a05      	ldr	r2, [sp, #20]
 8005a8e:	9806      	ldr	r0, [sp, #24]
    if (len > ep->maxpacket)
 8005a90:	4599      	cmp	r9, r3
 8005a92:	bf28      	it	cs
 8005a94:	4699      	movcs	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8005a96:	79a3      	ldrb	r3, [r4, #6]
 8005a98:	9300      	str	r3, [sp, #0]
 8005a9a:	6a39      	ldr	r1, [r7, #32]
 8005a9c:	fa1f f389 	uxth.w	r3, r9
 8005aa0:	f001 fe70 	bl	8007784 <USB_WritePacket>
    ep->xfer_buff  += len;
 8005aa4:	6a3b      	ldr	r3, [r7, #32]
 8005aa6:	444b      	add	r3, r9
 8005aa8:	623b      	str	r3, [r7, #32]
    ep->xfer_count += len;
 8005aaa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    len32b = (len + 3U) / 4U;
 8005aac:	f109 0803 	add.w	r8, r9, #3
    ep->xfer_count += len;
 8005ab0:	444b      	add	r3, r9
    len32b = (len + 3U) / 4U;
 8005ab2:	ea4f 0898 	mov.w	r8, r8, lsr #2
    ep->xfer_count += len;
 8005ab6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005ab8:	e7d0      	b.n	8005a5c <HAL_PCD_IRQHandler+0x55c>
  if (ep->xfer_len <= ep->xfer_count)
 8005aba:	4293      	cmp	r3, r2
 8005abc:	d9d7      	bls.n	8005a6e <HAL_PCD_IRQHandler+0x56e>
        ep_intr >>= 1U;
 8005abe:	9b04      	ldr	r3, [sp, #16]
 8005ac0:	085b      	lsrs	r3, r3, #1
        epnum++;
 8005ac2:	f10a 0a01 	add.w	sl, sl, #1
        ep_intr >>= 1U;
 8005ac6:	9304      	str	r3, [sp, #16]
 8005ac8:	3724      	adds	r7, #36	@ 0x24
 8005aca:	f10b 0b20 	add.w	fp, fp, #32
 8005ace:	e583      	b.n	80055d8 <HAL_PCD_IRQHandler+0xd8>
        HAL_PCD_ResumeCallback(hpcd);
 8005ad0:	4620      	mov	r0, r4
 8005ad2:	f7fc f8ed 	bl	8001cb0 <HAL_PCD_ResumeCallback>
 8005ad6:	e598      	b.n	800560a <HAL_PCD_IRQHandler+0x10a>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8005ad8:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8005ada:	681a      	ldr	r2, [r3, #0]
 8005adc:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8005ae0:	601a      	str	r2, [r3, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 8005ae2:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8005ae6:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8005aea:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8005aee:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8005af2:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8005af6:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8005afa:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005afe:	9a03      	ldr	r2, [sp, #12]
 8005b00:	3201      	adds	r2, #1
 8005b02:	9203      	str	r2, [sp, #12]
 8005b04:	3320      	adds	r3, #32
 8005b06:	e5a7      	b.n	8005658 <HAL_PCD_IRQHandler+0x158>
 8005b08:	4f54300a 	.word	0x4f54300a
 8005b0c:	4f54310a 	.word	0x4f54310a
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 8005b10:	696b      	ldr	r3, [r5, #20]
 8005b12:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8005b16:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 8005b1a:	616b      	str	r3, [r5, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 8005b1c:	692b      	ldr	r3, [r5, #16]
 8005b1e:	f043 030b 	orr.w	r3, r3, #11
 8005b22:	612b      	str	r3, [r5, #16]
 8005b24:	e5ae      	b.n	8005684 <HAL_PCD_IRQHandler+0x184>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 8005b26:	69b3      	ldr	r3, [r6, #24]
 8005b28:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005b2c:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005b2e:	2701      	movs	r7, #1
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 8005b30:	f204 2857 	addw	r8, r4, #599	@ 0x257
 8005b34:	f04f 0924 	mov.w	r9, #36	@ 0x24
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005b38:	7923      	ldrb	r3, [r4, #4]
 8005b3a:	42bb      	cmp	r3, r7
 8005b3c:	f67f ade2 	bls.w	8005704 <HAL_PCD_IRQHandler+0x204>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 8005b40:	fb09 f307 	mul.w	r3, r9, r7
 8005b44:	f818 3003 	ldrb.w	r3, [r8, r3]
 8005b48:	2b01      	cmp	r3, #1
 8005b4a:	d103      	bne.n	8005b54 <HAL_PCD_IRQHandler+0x654>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
 8005b4c:	b2f9      	uxtb	r1, r7
 8005b4e:	4620      	mov	r0, r4
 8005b50:	f7ff fcc5 	bl	80054de <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005b54:	3701      	adds	r7, #1
 8005b56:	e7ef      	b.n	8005b38 <HAL_PCD_IRQHandler+0x638>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8005b58:	f898 303c 	ldrb.w	r3, [r8, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 8005b5c:	f8d9 2000 	ldr.w	r2, [r9]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8005b60:	2b01      	cmp	r3, #1
 8005b62:	d109      	bne.n	8005b78 <HAL_PCD_IRQHandler+0x678>
 8005b64:	2a00      	cmp	r2, #0
 8005b66:	da07      	bge.n	8005b78 <HAL_PCD_IRQHandler+0x678>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8005b68:	f067 017f 	orn	r1, r7, #127	@ 0x7f
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 8005b6c:	f888 303b 	strb.w	r3, [r8, #59]	@ 0x3b
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8005b70:	b2c9      	uxtb	r1, r1
 8005b72:	4620      	mov	r0, r4
 8005b74:	f7ff fcb3 	bl	80054de <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005b78:	3701      	adds	r7, #1
 8005b7a:	f108 0824 	add.w	r8, r8, #36	@ 0x24
 8005b7e:	f109 0920 	add.w	r9, r9, #32
 8005b82:	e5c8      	b.n	8005716 <HAL_PCD_IRQHandler+0x216>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005b84:	f10c 0c01 	add.w	ip, ip, #1
 8005b88:	3324      	adds	r3, #36	@ 0x24
 8005b8a:	3120      	adds	r1, #32
 8005b8c:	e5d8      	b.n	8005740 <HAL_PCD_IRQHandler+0x240>
 8005b8e:	bf00      	nop

08005b90 <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8005b90:	6800      	ldr	r0, [r0, #0]
{
 8005b92:	b570      	push	{r4, r5, r6, lr}
  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8005b94:	6a43      	ldr	r3, [r0, #36]	@ 0x24

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8005b96:	0412      	lsls	r2, r2, #16
  if (fifo == 0U)
 8005b98:	b919      	cbnz	r1, 8005ba2 <HAL_PCDEx_SetTxFiFo+0x12>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8005b9a:	4313      	orrs	r3, r2
 8005b9c:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
 8005b9e:	2000      	movs	r0, #0
 8005ba0:	bd70      	pop	{r4, r5, r6, pc}
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8005ba2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
    for (i = 0U; i < (fifo - 1U); i++)
 8005ba4:	1e4e      	subs	r6, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8005ba6:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8005baa:	2400      	movs	r4, #0
 8005bac:	42b4      	cmp	r4, r6
 8005bae:	d305      	bcc.n	8005bbc <HAL_PCDEx_SetTxFiFo+0x2c>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 8005bb0:	313f      	adds	r1, #63	@ 0x3f
 8005bb2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8005bb6:	4313      	orrs	r3, r2
 8005bb8:	6043      	str	r3, [r0, #4]
 8005bba:	e7f0      	b.n	8005b9e <HAL_PCDEx_SetTxFiFo+0xe>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8005bbc:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8005bc0:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8005bc4:	3401      	adds	r4, #1
 8005bc6:	686d      	ldr	r5, [r5, #4]
 8005bc8:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8005bcc:	e7ee      	b.n	8005bac <HAL_PCDEx_SetTxFiFo+0x1c>

08005bce <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 8005bce:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8005bd0:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
 8005bd2:	6259      	str	r1, [r3, #36]	@ 0x24
}
 8005bd4:	4770      	bx	lr

08005bd6 <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 8005bd6:	4770      	bx	lr

08005bd8 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(const RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005bd8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005bdc:	4604      	mov	r4, r0
 8005bde:	b340      	cbz	r0, 8005c32 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005be0:	6803      	ldr	r3, [r0, #0]
 8005be2:	07de      	lsls	r6, r3, #31
 8005be4:	d410      	bmi.n	8005c08 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005be6:	6823      	ldr	r3, [r4, #0]
 8005be8:	079d      	lsls	r5, r3, #30
 8005bea:	d45b      	bmi.n	8005ca4 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005bec:	6823      	ldr	r3, [r4, #0]
 8005bee:	0719      	lsls	r1, r3, #28
 8005bf0:	f100 809d 	bmi.w	8005d2e <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005bf4:	6823      	ldr	r3, [r4, #0]
 8005bf6:	075a      	lsls	r2, r3, #29
 8005bf8:	f100 80bd 	bmi.w	8005d76 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005bfc:	69a3      	ldr	r3, [r4, #24]
 8005bfe:	2b00      	cmp	r3, #0
 8005c00:	f040 8124 	bne.w	8005e4c <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005c04:	2000      	movs	r0, #0
 8005c06:	e02c      	b.n	8005c62 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8005c08:	4b8d      	ldr	r3, [pc, #564]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
 8005c0a:	689a      	ldr	r2, [r3, #8]
 8005c0c:	f002 020c 	and.w	r2, r2, #12
 8005c10:	2a04      	cmp	r2, #4
 8005c12:	d007      	beq.n	8005c24 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005c14:	689a      	ldr	r2, [r3, #8]
 8005c16:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8005c1a:	2a08      	cmp	r2, #8
 8005c1c:	d10b      	bne.n	8005c36 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005c1e:	685b      	ldr	r3, [r3, #4]
 8005c20:	0259      	lsls	r1, r3, #9
 8005c22:	d508      	bpl.n	8005c36 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005c24:	4b86      	ldr	r3, [pc, #536]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
 8005c26:	681b      	ldr	r3, [r3, #0]
 8005c28:	039a      	lsls	r2, r3, #14
 8005c2a:	d5dc      	bpl.n	8005be6 <HAL_RCC_OscConfig+0xe>
 8005c2c:	6863      	ldr	r3, [r4, #4]
 8005c2e:	2b00      	cmp	r3, #0
 8005c30:	d1d9      	bne.n	8005be6 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8005c32:	2001      	movs	r0, #1
 8005c34:	e015      	b.n	8005c62 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005c36:	6863      	ldr	r3, [r4, #4]
 8005c38:	4d81      	ldr	r5, [pc, #516]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
 8005c3a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005c3e:	d113      	bne.n	8005c68 <HAL_RCC_OscConfig+0x90>
 8005c40:	682b      	ldr	r3, [r5, #0]
 8005c42:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005c46:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005c48:	f7fe fa34 	bl	80040b4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005c4c:	4e7c      	ldr	r6, [pc, #496]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005c4e:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005c50:	6833      	ldr	r3, [r6, #0]
 8005c52:	039b      	lsls	r3, r3, #14
 8005c54:	d4c7      	bmi.n	8005be6 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005c56:	f7fe fa2d 	bl	80040b4 <HAL_GetTick>
 8005c5a:	1b40      	subs	r0, r0, r5
 8005c5c:	2864      	cmp	r0, #100	@ 0x64
 8005c5e:	d9f7      	bls.n	8005c50 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8005c60:	2003      	movs	r0, #3
}
 8005c62:	b002      	add	sp, #8
 8005c64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005c68:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005c6c:	d104      	bne.n	8005c78 <HAL_RCC_OscConfig+0xa0>
 8005c6e:	682b      	ldr	r3, [r5, #0]
 8005c70:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005c74:	602b      	str	r3, [r5, #0]
 8005c76:	e7e3      	b.n	8005c40 <HAL_RCC_OscConfig+0x68>
 8005c78:	682a      	ldr	r2, [r5, #0]
 8005c7a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8005c7e:	602a      	str	r2, [r5, #0]
 8005c80:	682a      	ldr	r2, [r5, #0]
 8005c82:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8005c86:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005c88:	2b00      	cmp	r3, #0
 8005c8a:	d1dd      	bne.n	8005c48 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8005c8c:	f7fe fa12 	bl	80040b4 <HAL_GetTick>
 8005c90:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005c92:	682b      	ldr	r3, [r5, #0]
 8005c94:	039f      	lsls	r7, r3, #14
 8005c96:	d5a6      	bpl.n	8005be6 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005c98:	f7fe fa0c 	bl	80040b4 <HAL_GetTick>
 8005c9c:	1b80      	subs	r0, r0, r6
 8005c9e:	2864      	cmp	r0, #100	@ 0x64
 8005ca0:	d9f7      	bls.n	8005c92 <HAL_RCC_OscConfig+0xba>
 8005ca2:	e7dd      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8005ca4:	4b66      	ldr	r3, [pc, #408]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
 8005ca6:	689a      	ldr	r2, [r3, #8]
 8005ca8:	f012 0f0c 	tst.w	r2, #12
 8005cac:	d007      	beq.n	8005cbe <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005cae:	689a      	ldr	r2, [r3, #8]
 8005cb0:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8005cb4:	2a08      	cmp	r2, #8
 8005cb6:	d111      	bne.n	8005cdc <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005cb8:	685b      	ldr	r3, [r3, #4]
 8005cba:	025d      	lsls	r5, r3, #9
 8005cbc:	d40e      	bmi.n	8005cdc <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005cbe:	4a60      	ldr	r2, [pc, #384]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
 8005cc0:	6813      	ldr	r3, [r2, #0]
 8005cc2:	0799      	lsls	r1, r3, #30
 8005cc4:	d502      	bpl.n	8005ccc <HAL_RCC_OscConfig+0xf4>
 8005cc6:	68e3      	ldr	r3, [r4, #12]
 8005cc8:	2b01      	cmp	r3, #1
 8005cca:	d1b2      	bne.n	8005c32 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005ccc:	6813      	ldr	r3, [r2, #0]
 8005cce:	6921      	ldr	r1, [r4, #16]
 8005cd0:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005cd4:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005cd8:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005cda:	e787      	b.n	8005bec <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005cdc:	68e2      	ldr	r2, [r4, #12]
 8005cde:	4b59      	ldr	r3, [pc, #356]	@ (8005e44 <HAL_RCC_OscConfig+0x26c>)
 8005ce0:	b1b2      	cbz	r2, 8005d10 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8005ce2:	2201      	movs	r2, #1
 8005ce4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005ce6:	f7fe f9e5 	bl	80040b4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005cea:	4d55      	ldr	r5, [pc, #340]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005cec:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005cee:	682b      	ldr	r3, [r5, #0]
 8005cf0:	079b      	lsls	r3, r3, #30
 8005cf2:	d507      	bpl.n	8005d04 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005cf4:	682b      	ldr	r3, [r5, #0]
 8005cf6:	6922      	ldr	r2, [r4, #16]
 8005cf8:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005cfc:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005d00:	602b      	str	r3, [r5, #0]
 8005d02:	e773      	b.n	8005bec <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005d04:	f7fe f9d6 	bl	80040b4 <HAL_GetTick>
 8005d08:	1b80      	subs	r0, r0, r6
 8005d0a:	2802      	cmp	r0, #2
 8005d0c:	d9ef      	bls.n	8005cee <HAL_RCC_OscConfig+0x116>
 8005d0e:	e7a7      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8005d10:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005d12:	f7fe f9cf 	bl	80040b4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005d16:	4e4a      	ldr	r6, [pc, #296]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005d18:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005d1a:	6833      	ldr	r3, [r6, #0]
 8005d1c:	079f      	lsls	r7, r3, #30
 8005d1e:	f57f af65 	bpl.w	8005bec <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005d22:	f7fe f9c7 	bl	80040b4 <HAL_GetTick>
 8005d26:	1b40      	subs	r0, r0, r5
 8005d28:	2802      	cmp	r0, #2
 8005d2a:	d9f6      	bls.n	8005d1a <HAL_RCC_OscConfig+0x142>
 8005d2c:	e798      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005d2e:	6962      	ldr	r2, [r4, #20]
 8005d30:	4b44      	ldr	r3, [pc, #272]	@ (8005e44 <HAL_RCC_OscConfig+0x26c>)
 8005d32:	b182      	cbz	r2, 8005d56 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8005d34:	2201      	movs	r2, #1
 8005d36:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005d3a:	f7fe f9bb 	bl	80040b4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005d3e:	4e40      	ldr	r6, [pc, #256]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005d40:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005d42:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005d44:	079b      	lsls	r3, r3, #30
 8005d46:	f53f af55 	bmi.w	8005bf4 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005d4a:	f7fe f9b3 	bl	80040b4 <HAL_GetTick>
 8005d4e:	1b40      	subs	r0, r0, r5
 8005d50:	2802      	cmp	r0, #2
 8005d52:	d9f6      	bls.n	8005d42 <HAL_RCC_OscConfig+0x16a>
 8005d54:	e784      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8005d56:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005d5a:	f7fe f9ab 	bl	80040b4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005d5e:	4e38      	ldr	r6, [pc, #224]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005d60:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005d62:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005d64:	079f      	lsls	r7, r3, #30
 8005d66:	f57f af45 	bpl.w	8005bf4 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005d6a:	f7fe f9a3 	bl	80040b4 <HAL_GetTick>
 8005d6e:	1b40      	subs	r0, r0, r5
 8005d70:	2802      	cmp	r0, #2
 8005d72:	d9f6      	bls.n	8005d62 <HAL_RCC_OscConfig+0x18a>
 8005d74:	e774      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005d76:	4b32      	ldr	r3, [pc, #200]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
 8005d78:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005d7a:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 8005d7e:	d128      	bne.n	8005dd2 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005d80:	9201      	str	r2, [sp, #4]
 8005d82:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005d84:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005d88:	641a      	str	r2, [r3, #64]	@ 0x40
 8005d8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d8c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d90:	9301      	str	r3, [sp, #4]
 8005d92:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8005d94:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d96:	4d2c      	ldr	r5, [pc, #176]	@ (8005e48 <HAL_RCC_OscConfig+0x270>)
 8005d98:	682b      	ldr	r3, [r5, #0]
 8005d9a:	05d8      	lsls	r0, r3, #23
 8005d9c:	d51b      	bpl.n	8005dd6 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005d9e:	68a3      	ldr	r3, [r4, #8]
 8005da0:	4d27      	ldr	r5, [pc, #156]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
 8005da2:	2b01      	cmp	r3, #1
 8005da4:	d127      	bne.n	8005df6 <HAL_RCC_OscConfig+0x21e>
 8005da6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005da8:	f043 0301 	orr.w	r3, r3, #1
 8005dac:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8005dae:	f7fe f981 	bl	80040b4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005db2:	4e23      	ldr	r6, [pc, #140]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005db4:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005db6:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005dba:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8005dbc:	079a      	lsls	r2, r3, #30
 8005dbe:	d539      	bpl.n	8005e34 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 8005dc0:	2f00      	cmp	r7, #0
 8005dc2:	f43f af1b 	beq.w	8005bfc <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005dc6:	4a1e      	ldr	r2, [pc, #120]	@ (8005e40 <HAL_RCC_OscConfig+0x268>)
 8005dc8:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8005dca:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005dce:	6413      	str	r3, [r2, #64]	@ 0x40
 8005dd0:	e714      	b.n	8005bfc <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8005dd2:	2700      	movs	r7, #0
 8005dd4:	e7df      	b.n	8005d96 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005dd6:	682b      	ldr	r3, [r5, #0]
 8005dd8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005ddc:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005dde:	f7fe f969 	bl	80040b4 <HAL_GetTick>
 8005de2:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005de4:	682b      	ldr	r3, [r5, #0]
 8005de6:	05d9      	lsls	r1, r3, #23
 8005de8:	d4d9      	bmi.n	8005d9e <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005dea:	f7fe f963 	bl	80040b4 <HAL_GetTick>
 8005dee:	1b80      	subs	r0, r0, r6
 8005df0:	2802      	cmp	r0, #2
 8005df2:	d9f7      	bls.n	8005de4 <HAL_RCC_OscConfig+0x20c>
 8005df4:	e734      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005df6:	2b05      	cmp	r3, #5
 8005df8:	d104      	bne.n	8005e04 <HAL_RCC_OscConfig+0x22c>
 8005dfa:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005dfc:	f043 0304 	orr.w	r3, r3, #4
 8005e00:	672b      	str	r3, [r5, #112]	@ 0x70
 8005e02:	e7d0      	b.n	8005da6 <HAL_RCC_OscConfig+0x1ce>
 8005e04:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8005e06:	f022 0201 	bic.w	r2, r2, #1
 8005e0a:	672a      	str	r2, [r5, #112]	@ 0x70
 8005e0c:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8005e0e:	f022 0204 	bic.w	r2, r2, #4
 8005e12:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005e14:	2b00      	cmp	r3, #0
 8005e16:	d1ca      	bne.n	8005dae <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8005e18:	f7fe f94c 	bl	80040b4 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005e1c:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8005e20:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005e22:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005e24:	079b      	lsls	r3, r3, #30
 8005e26:	d5cb      	bpl.n	8005dc0 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005e28:	f7fe f944 	bl	80040b4 <HAL_GetTick>
 8005e2c:	1b80      	subs	r0, r0, r6
 8005e2e:	4540      	cmp	r0, r8
 8005e30:	d9f7      	bls.n	8005e22 <HAL_RCC_OscConfig+0x24a>
 8005e32:	e715      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005e34:	f7fe f93e 	bl	80040b4 <HAL_GetTick>
 8005e38:	1b40      	subs	r0, r0, r5
 8005e3a:	4540      	cmp	r0, r8
 8005e3c:	d9bd      	bls.n	8005dba <HAL_RCC_OscConfig+0x1e2>
 8005e3e:	e70f      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
 8005e40:	40023800 	.word	0x40023800
 8005e44:	42470000 	.word	0x42470000
 8005e48:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005e4c:	4d37      	ldr	r5, [pc, #220]	@ (8005f2c <HAL_RCC_OscConfig+0x354>)
 8005e4e:	68aa      	ldr	r2, [r5, #8]
 8005e50:	f002 020c 	and.w	r2, r2, #12
 8005e54:	2a08      	cmp	r2, #8
 8005e56:	d03e      	beq.n	8005ed6 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005e58:	2b02      	cmp	r3, #2
 8005e5a:	4b35      	ldr	r3, [pc, #212]	@ (8005f30 <HAL_RCC_OscConfig+0x358>)
 8005e5c:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8005e60:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005e62:	d12b      	bne.n	8005ebc <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8005e64:	f7fe f926 	bl	80040b4 <HAL_GetTick>
 8005e68:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005e6a:	682b      	ldr	r3, [r5, #0]
 8005e6c:	0199      	lsls	r1, r3, #6
 8005e6e:	d41f      	bmi.n	8005eb0 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005e70:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8005e74:	4313      	orrs	r3, r2
 8005e76:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005e78:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005e7c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005e7e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8005e82:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005e84:	0852      	lsrs	r2, r2, #1
 8005e86:	3a01      	subs	r2, #1
 8005e88:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005e8c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8005e8e:	4b28      	ldr	r3, [pc, #160]	@ (8005f30 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005e90:	4d26      	ldr	r5, [pc, #152]	@ (8005f2c <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8005e92:	2201      	movs	r2, #1
 8005e94:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8005e96:	f7fe f90d 	bl	80040b4 <HAL_GetTick>
 8005e9a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005e9c:	682b      	ldr	r3, [r5, #0]
 8005e9e:	019a      	lsls	r2, r3, #6
 8005ea0:	f53f aeb0 	bmi.w	8005c04 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005ea4:	f7fe f906 	bl	80040b4 <HAL_GetTick>
 8005ea8:	1b00      	subs	r0, r0, r4
 8005eaa:	2802      	cmp	r0, #2
 8005eac:	d9f6      	bls.n	8005e9c <HAL_RCC_OscConfig+0x2c4>
 8005eae:	e6d7      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005eb0:	f7fe f900 	bl	80040b4 <HAL_GetTick>
 8005eb4:	1b80      	subs	r0, r0, r6
 8005eb6:	2802      	cmp	r0, #2
 8005eb8:	d9d7      	bls.n	8005e6a <HAL_RCC_OscConfig+0x292>
 8005eba:	e6d1      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8005ebc:	f7fe f8fa 	bl	80040b4 <HAL_GetTick>
 8005ec0:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005ec2:	682b      	ldr	r3, [r5, #0]
 8005ec4:	019b      	lsls	r3, r3, #6
 8005ec6:	f57f ae9d 	bpl.w	8005c04 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005eca:	f7fe f8f3 	bl	80040b4 <HAL_GetTick>
 8005ece:	1b00      	subs	r0, r0, r4
 8005ed0:	2802      	cmp	r0, #2
 8005ed2:	d9f6      	bls.n	8005ec2 <HAL_RCC_OscConfig+0x2ea>
 8005ed4:	e6c4      	b.n	8005c60 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005ed6:	2b01      	cmp	r3, #1
 8005ed8:	f43f aeab 	beq.w	8005c32 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8005edc:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005ede:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005ee0:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005ee4:	4291      	cmp	r1, r2
 8005ee6:	f47f aea4 	bne.w	8005c32 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005eea:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005eec:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005ef0:	428a      	cmp	r2, r1
 8005ef2:	f47f ae9e 	bne.w	8005c32 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005ef6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005ef8:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8005efc:	401a      	ands	r2, r3
 8005efe:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8005f02:	f47f ae96 	bne.w	8005c32 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005f06:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005f08:	0852      	lsrs	r2, r2, #1
 8005f0a:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8005f0e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005f10:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8005f14:	f47f ae8d 	bne.w	8005c32 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8005f18:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005f1a:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005f1e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8005f22:	bf14      	ite	ne
 8005f24:	2001      	movne	r0, #1
 8005f26:	2000      	moveq	r0, #0
 8005f28:	e69b      	b.n	8005c62 <HAL_RCC_OscConfig+0x8a>
 8005f2a:	bf00      	nop
 8005f2c:	40023800 	.word	0x40023800
 8005f30:	42470000 	.word	0x42470000

08005f34 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005f34:	4913      	ldr	r1, [pc, #76]	@ (8005f84 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005f36:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005f38:	688b      	ldr	r3, [r1, #8]
 8005f3a:	f003 030c 	and.w	r3, r3, #12
 8005f3e:	2b04      	cmp	r3, #4
 8005f40:	d01c      	beq.n	8005f7c <HAL_RCC_GetSysClockFreq+0x48>
 8005f42:	2b08      	cmp	r3, #8
 8005f44:	d11c      	bne.n	8005f80 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005f46:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005f48:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005f4a:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005f4c:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005f50:	bf14      	ite	ne
 8005f52:	480d      	ldrne	r0, [pc, #52]	@ (8005f88 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005f54:	480d      	ldreq	r0, [pc, #52]	@ (8005f8c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005f56:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005f5a:	bf18      	it	ne
 8005f5c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005f5e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005f62:	fba1 0100 	umull	r0, r1, r1, r0
 8005f66:	f7fa fbcf 	bl	8000708 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8005f6a:	4b06      	ldr	r3, [pc, #24]	@ (8005f84 <HAL_RCC_GetSysClockFreq+0x50>)
 8005f6c:	685b      	ldr	r3, [r3, #4]
 8005f6e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005f72:	3301      	adds	r3, #1
 8005f74:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8005f76:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005f7a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005f7c:	4802      	ldr	r0, [pc, #8]	@ (8005f88 <HAL_RCC_GetSysClockFreq+0x54>)
 8005f7e:	e7fc      	b.n	8005f7a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005f80:	4802      	ldr	r0, [pc, #8]	@ (8005f8c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005f82:	e7fa      	b.n	8005f7a <HAL_RCC_GetSysClockFreq+0x46>
 8005f84:	40023800 	.word	0x40023800
 8005f88:	007a1200 	.word	0x007a1200
 8005f8c:	00f42400 	.word	0x00f42400

08005f90 <HAL_RCC_ClockConfig>:
{
 8005f90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005f94:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8005f96:	4604      	mov	r4, r0
 8005f98:	b910      	cbnz	r0, 8005fa0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005f9a:	2001      	movs	r0, #1
}
 8005f9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005fa0:	4b43      	ldr	r3, [pc, #268]	@ (80060b0 <HAL_RCC_ClockConfig+0x120>)
 8005fa2:	681a      	ldr	r2, [r3, #0]
 8005fa4:	f002 020f 	and.w	r2, r2, #15
 8005fa8:	428a      	cmp	r2, r1
 8005faa:	d328      	bcc.n	8005ffe <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005fac:	6821      	ldr	r1, [r4, #0]
 8005fae:	078f      	lsls	r7, r1, #30
 8005fb0:	d42d      	bmi.n	800600e <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005fb2:	07c8      	lsls	r0, r1, #31
 8005fb4:	d440      	bmi.n	8006038 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8005fb6:	4b3e      	ldr	r3, [pc, #248]	@ (80060b0 <HAL_RCC_ClockConfig+0x120>)
 8005fb8:	681a      	ldr	r2, [r3, #0]
 8005fba:	f002 020f 	and.w	r2, r2, #15
 8005fbe:	42aa      	cmp	r2, r5
 8005fc0:	d865      	bhi.n	800608e <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005fc2:	6822      	ldr	r2, [r4, #0]
 8005fc4:	0751      	lsls	r1, r2, #29
 8005fc6:	d46b      	bmi.n	80060a0 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005fc8:	0713      	lsls	r3, r2, #28
 8005fca:	d507      	bpl.n	8005fdc <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005fcc:	4a39      	ldr	r2, [pc, #228]	@ (80060b4 <HAL_RCC_ClockConfig+0x124>)
 8005fce:	6921      	ldr	r1, [r4, #16]
 8005fd0:	6893      	ldr	r3, [r2, #8]
 8005fd2:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8005fd6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005fda:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005fdc:	f7ff ffaa 	bl	8005f34 <HAL_RCC_GetSysClockFreq>
 8005fe0:	4b34      	ldr	r3, [pc, #208]	@ (80060b4 <HAL_RCC_ClockConfig+0x124>)
 8005fe2:	4a35      	ldr	r2, [pc, #212]	@ (80060b8 <HAL_RCC_ClockConfig+0x128>)
 8005fe4:	689b      	ldr	r3, [r3, #8]
 8005fe6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005fea:	5cd3      	ldrb	r3, [r2, r3]
 8005fec:	40d8      	lsrs	r0, r3
 8005fee:	4b33      	ldr	r3, [pc, #204]	@ (80060bc <HAL_RCC_ClockConfig+0x12c>)
 8005ff0:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8005ff2:	4b33      	ldr	r3, [pc, #204]	@ (80060c0 <HAL_RCC_ClockConfig+0x130>)
 8005ff4:	6818      	ldr	r0, [r3, #0]
 8005ff6:	f7fc fd8f 	bl	8002b18 <HAL_InitTick>
  return HAL_OK;
 8005ffa:	2000      	movs	r0, #0
 8005ffc:	e7ce      	b.n	8005f9c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005ffe:	b2ca      	uxtb	r2, r1
 8006000:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	f003 030f 	and.w	r3, r3, #15
 8006008:	428b      	cmp	r3, r1
 800600a:	d1c6      	bne.n	8005f9a <HAL_RCC_ClockConfig+0xa>
 800600c:	e7ce      	b.n	8005fac <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800600e:	4b29      	ldr	r3, [pc, #164]	@ (80060b4 <HAL_RCC_ClockConfig+0x124>)
 8006010:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006014:	bf1e      	ittt	ne
 8006016:	689a      	ldrne	r2, [r3, #8]
 8006018:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 800601c:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800601e:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006020:	bf42      	ittt	mi
 8006022:	689a      	ldrmi	r2, [r3, #8]
 8006024:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8006028:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800602a:	689a      	ldr	r2, [r3, #8]
 800602c:	68a0      	ldr	r0, [r4, #8]
 800602e:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8006032:	4302      	orrs	r2, r0
 8006034:	609a      	str	r2, [r3, #8]
 8006036:	e7bc      	b.n	8005fb2 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006038:	6862      	ldr	r2, [r4, #4]
 800603a:	4b1e      	ldr	r3, [pc, #120]	@ (80060b4 <HAL_RCC_ClockConfig+0x124>)
 800603c:	2a01      	cmp	r2, #1
 800603e:	d11c      	bne.n	800607a <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006040:	681b      	ldr	r3, [r3, #0]
 8006042:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006046:	d0a8      	beq.n	8005f9a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006048:	4e1a      	ldr	r6, [pc, #104]	@ (80060b4 <HAL_RCC_ClockConfig+0x124>)
 800604a:	68b3      	ldr	r3, [r6, #8]
 800604c:	f023 0303 	bic.w	r3, r3, #3
 8006050:	4313      	orrs	r3, r2
 8006052:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006054:	f7fe f82e 	bl	80040b4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006058:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 800605c:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800605e:	68b3      	ldr	r3, [r6, #8]
 8006060:	6862      	ldr	r2, [r4, #4]
 8006062:	f003 030c 	and.w	r3, r3, #12
 8006066:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800606a:	d0a4      	beq.n	8005fb6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800606c:	f7fe f822 	bl	80040b4 <HAL_GetTick>
 8006070:	1bc0      	subs	r0, r0, r7
 8006072:	4540      	cmp	r0, r8
 8006074:	d9f3      	bls.n	800605e <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8006076:	2003      	movs	r0, #3
 8006078:	e790      	b.n	8005f9c <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800607a:	1e91      	subs	r1, r2, #2
 800607c:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800607e:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006080:	d802      	bhi.n	8006088 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006082:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8006086:	e7de      	b.n	8006046 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006088:	f013 0f02 	tst.w	r3, #2
 800608c:	e7db      	b.n	8006046 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800608e:	b2ea      	uxtb	r2, r5
 8006090:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006092:	681b      	ldr	r3, [r3, #0]
 8006094:	f003 030f 	and.w	r3, r3, #15
 8006098:	42ab      	cmp	r3, r5
 800609a:	f47f af7e 	bne.w	8005f9a <HAL_RCC_ClockConfig+0xa>
 800609e:	e790      	b.n	8005fc2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80060a0:	4904      	ldr	r1, [pc, #16]	@ (80060b4 <HAL_RCC_ClockConfig+0x124>)
 80060a2:	68e0      	ldr	r0, [r4, #12]
 80060a4:	688b      	ldr	r3, [r1, #8]
 80060a6:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 80060aa:	4303      	orrs	r3, r0
 80060ac:	608b      	str	r3, [r1, #8]
 80060ae:	e78b      	b.n	8005fc8 <HAL_RCC_ClockConfig+0x38>
 80060b0:	40023c00 	.word	0x40023c00
 80060b4:	40023800 	.word	0x40023800
 80060b8:	0802597c 	.word	0x0802597c
 80060bc:	200000c4 	.word	0x200000c4
 80060c0:	200000cc 	.word	0x200000cc

080060c4 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 80060c4:	4b01      	ldr	r3, [pc, #4]	@ (80060cc <HAL_RCC_GetHCLKFreq+0x8>)
 80060c6:	6818      	ldr	r0, [r3, #0]
 80060c8:	4770      	bx	lr
 80060ca:	bf00      	nop
 80060cc:	200000c4 	.word	0x200000c4

080060d0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80060d0:	4b04      	ldr	r3, [pc, #16]	@ (80060e4 <HAL_RCC_GetPCLK1Freq+0x14>)
 80060d2:	4a05      	ldr	r2, [pc, #20]	@ (80060e8 <HAL_RCC_GetPCLK1Freq+0x18>)
 80060d4:	689b      	ldr	r3, [r3, #8]
 80060d6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80060da:	5cd3      	ldrb	r3, [r2, r3]
 80060dc:	4a03      	ldr	r2, [pc, #12]	@ (80060ec <HAL_RCC_GetPCLK1Freq+0x1c>)
 80060de:	6810      	ldr	r0, [r2, #0]
}
 80060e0:	40d8      	lsrs	r0, r3
 80060e2:	4770      	bx	lr
 80060e4:	40023800 	.word	0x40023800
 80060e8:	08025974 	.word	0x08025974
 80060ec:	200000c4 	.word	0x200000c4

080060f0 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 80060f0:	4b04      	ldr	r3, [pc, #16]	@ (8006104 <HAL_RCC_GetPCLK2Freq+0x14>)
 80060f2:	4a05      	ldr	r2, [pc, #20]	@ (8006108 <HAL_RCC_GetPCLK2Freq+0x18>)
 80060f4:	689b      	ldr	r3, [r3, #8]
 80060f6:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80060fa:	5cd3      	ldrb	r3, [r2, r3]
 80060fc:	4a03      	ldr	r2, [pc, #12]	@ (800610c <HAL_RCC_GetPCLK2Freq+0x1c>)
 80060fe:	6810      	ldr	r0, [r2, #0]
}
 8006100:	40d8      	lsrs	r0, r3
 8006102:	4770      	bx	lr
 8006104:	40023800 	.word	0x40023800
 8006108:	08025974 	.word	0x08025974
 800610c:	200000c4 	.word	0x200000c4

08006110 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006110:	230f      	movs	r3, #15
 8006112:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006114:	4b0b      	ldr	r3, [pc, #44]	@ (8006144 <HAL_RCC_GetClockConfig+0x34>)
 8006116:	689a      	ldr	r2, [r3, #8]
 8006118:	f002 0203 	and.w	r2, r2, #3
 800611c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800611e:	689a      	ldr	r2, [r3, #8]
 8006120:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8006124:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006126:	689a      	ldr	r2, [r3, #8]
 8006128:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 800612c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800612e:	689b      	ldr	r3, [r3, #8]
 8006130:	08db      	lsrs	r3, r3, #3
 8006132:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8006136:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006138:	4b03      	ldr	r3, [pc, #12]	@ (8006148 <HAL_RCC_GetClockConfig+0x38>)
 800613a:	681b      	ldr	r3, [r3, #0]
 800613c:	f003 030f 	and.w	r3, r3, #15
 8006140:	600b      	str	r3, [r1, #0]
}
 8006142:	4770      	bx	lr
 8006144:	40023800 	.word	0x40023800
 8006148:	40023c00 	.word	0x40023c00

0800614c <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800614c:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800614e:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8006152:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006154:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006156:	f040 8088 	bne.w	800626a <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800615a:	6823      	ldr	r3, [r4, #0]
 800615c:	f013 0f0c 	tst.w	r3, #12
 8006160:	d045      	beq.n	80061ee <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006162:	4b8c      	ldr	r3, [pc, #560]	@ (8006394 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006164:	4d8c      	ldr	r5, [pc, #560]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006166:	2200      	movs	r2, #0
 8006168:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800616a:	f7fd ffa3 	bl	80040b4 <HAL_GetTick>
 800616e:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006170:	682b      	ldr	r3, [r5, #0]
 8006172:	0099      	lsls	r1, r3, #2
 8006174:	f100 80cb 	bmi.w	800630e <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006178:	6821      	ldr	r1, [r4, #0]
 800617a:	074a      	lsls	r2, r1, #29
 800617c:	d515      	bpl.n	80061aa <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800617e:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006182:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006186:	061b      	lsls	r3, r3, #24
 8006188:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 800618c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006190:	4313      	orrs	r3, r2
 8006192:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006196:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 800619a:	6a22      	ldr	r2, [r4, #32]
 800619c:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 80061a0:	3a01      	subs	r2, #1
 80061a2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80061a6:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80061aa:	070b      	lsls	r3, r1, #28
 80061ac:	d514      	bpl.n	80061d8 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80061ae:	4a7a      	ldr	r2, [pc, #488]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80061b0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80061b2:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80061b6:	6920      	ldr	r0, [r4, #16]
 80061b8:	071b      	lsls	r3, r3, #28
 80061ba:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 80061be:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80061c2:	430b      	orrs	r3, r1
 80061c4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80061c8:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 80061cc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80061ce:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 80061d2:	430b      	orrs	r3, r1
 80061d4:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80061d8:	4b6e      	ldr	r3, [pc, #440]	@ (8006394 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80061da:	4e6f      	ldr	r6, [pc, #444]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 80061dc:	2201      	movs	r2, #1
 80061de:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 80061e0:	f7fd ff68 	bl	80040b4 <HAL_GetTick>
 80061e4:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80061e6:	6833      	ldr	r3, [r6, #0]
 80061e8:	009f      	lsls	r7, r3, #2
 80061ea:	f140 8097 	bpl.w	800631c <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80061ee:	6823      	ldr	r3, [r4, #0]
 80061f0:	0698      	lsls	r0, r3, #26
 80061f2:	d534      	bpl.n	800625e <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80061f4:	2300      	movs	r3, #0
 80061f6:	9301      	str	r3, [sp, #4]
 80061f8:	4b67      	ldr	r3, [pc, #412]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80061fa:	4d68      	ldr	r5, [pc, #416]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80061fc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80061fe:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006202:	641a      	str	r2, [r3, #64]	@ 0x40
 8006204:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006206:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800620a:	9301      	str	r3, [sp, #4]
 800620c:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800620e:	682b      	ldr	r3, [r5, #0]
 8006210:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006214:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8006216:	f7fd ff4d 	bl	80040b4 <HAL_GetTick>
 800621a:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 800621c:	682b      	ldr	r3, [r5, #0]
 800621e:	05d8      	lsls	r0, r3, #23
 8006220:	f140 8083 	bpl.w	800632a <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006224:	4d5c      	ldr	r5, [pc, #368]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006226:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006228:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800622a:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 800622e:	f040 8083 	bne.w	8006338 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006232:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8006234:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8006238:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 800623c:	4a56      	ldr	r2, [pc, #344]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800623e:	f040 809e 	bne.w	800637e <HAL_RCCEx_PeriphCLKConfig+0x232>
 8006242:	6891      	ldr	r1, [r2, #8]
 8006244:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8006248:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800624c:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8006250:	4301      	orrs	r1, r0
 8006252:	6091      	str	r1, [r2, #8]
 8006254:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8006256:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800625a:	430b      	orrs	r3, r1
 800625c:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800625e:	6823      	ldr	r3, [r4, #0]
 8006260:	06db      	lsls	r3, r3, #27
 8006262:	f100 8090 	bmi.w	8006386 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8006266:	2000      	movs	r0, #0
 8006268:	e04f      	b.n	800630a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800626a:	4b4a      	ldr	r3, [pc, #296]	@ (8006394 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800626c:	4e4a      	ldr	r6, [pc, #296]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 800626e:	2200      	movs	r2, #0
 8006270:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8006272:	f7fd ff1f 	bl	80040b4 <HAL_GetTick>
 8006276:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006278:	6833      	ldr	r3, [r6, #0]
 800627a:	011f      	lsls	r7, r3, #4
 800627c:	d43f      	bmi.n	80062fe <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800627e:	6821      	ldr	r1, [r4, #0]
 8006280:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8006282:	bf41      	itttt	mi
 8006284:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006288:	071b      	lslmi	r3, r3, #28
 800628a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800628e:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006292:	078a      	lsls	r2, r1, #30
 8006294:	d515      	bpl.n	80062c2 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006296:	4a40      	ldr	r2, [pc, #256]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8006298:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800629a:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800629e:	6865      	ldr	r5, [r4, #4]
 80062a0:	061b      	lsls	r3, r3, #24
 80062a2:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 80062a6:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80062aa:	4303      	orrs	r3, r0
 80062ac:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80062b0:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 80062b4:	69e3      	ldr	r3, [r4, #28]
 80062b6:	f020 001f 	bic.w	r0, r0, #31
 80062ba:	3b01      	subs	r3, #1
 80062bc:	4303      	orrs	r3, r0
 80062be:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80062c2:	064b      	lsls	r3, r1, #25
 80062c4:	d50a      	bpl.n	80062dc <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 80062c6:	68e3      	ldr	r3, [r4, #12]
 80062c8:	6862      	ldr	r2, [r4, #4]
 80062ca:	061b      	lsls	r3, r3, #24
 80062cc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80062d0:	68a2      	ldr	r2, [r4, #8]
 80062d2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80062d6:	4a30      	ldr	r2, [pc, #192]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 80062d8:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80062dc:	4b2d      	ldr	r3, [pc, #180]	@ (8006394 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80062de:	4e2e      	ldr	r6, [pc, #184]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 80062e0:	2201      	movs	r2, #1
 80062e2:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 80062e4:	f7fd fee6 	bl	80040b4 <HAL_GetTick>
 80062e8:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80062ea:	6833      	ldr	r3, [r6, #0]
 80062ec:	011f      	lsls	r7, r3, #4
 80062ee:	f53f af34 	bmi.w	800615a <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80062f2:	f7fd fedf 	bl	80040b4 <HAL_GetTick>
 80062f6:	1b40      	subs	r0, r0, r5
 80062f8:	2802      	cmp	r0, #2
 80062fa:	d9f6      	bls.n	80062ea <HAL_RCCEx_PeriphCLKConfig+0x19e>
 80062fc:	e004      	b.n	8006308 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80062fe:	f7fd fed9 	bl	80040b4 <HAL_GetTick>
 8006302:	1b40      	subs	r0, r0, r5
 8006304:	2802      	cmp	r0, #2
 8006306:	d9b7      	bls.n	8006278 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8006308:	2003      	movs	r0, #3
}
 800630a:	b003      	add	sp, #12
 800630c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800630e:	f7fd fed1 	bl	80040b4 <HAL_GetTick>
 8006312:	1b80      	subs	r0, r0, r6
 8006314:	2802      	cmp	r0, #2
 8006316:	f67f af2b 	bls.w	8006170 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800631a:	e7f5      	b.n	8006308 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800631c:	f7fd feca 	bl	80040b4 <HAL_GetTick>
 8006320:	1b40      	subs	r0, r0, r5
 8006322:	2802      	cmp	r0, #2
 8006324:	f67f af5f 	bls.w	80061e6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8006328:	e7ee      	b.n	8006308 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800632a:	f7fd fec3 	bl	80040b4 <HAL_GetTick>
 800632e:	1b80      	subs	r0, r0, r6
 8006330:	2802      	cmp	r0, #2
 8006332:	f67f af73 	bls.w	800621c <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8006336:	e7e7      	b.n	8006308 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006338:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 800633c:	4293      	cmp	r3, r2
 800633e:	f43f af78 	beq.w	8006232 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006342:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006344:	4a13      	ldr	r2, [pc, #76]	@ (8006394 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006346:	2101      	movs	r1, #1
 8006348:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800634c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006350:	2100      	movs	r1, #0
 8006352:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8006356:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006358:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800635a:	07d9      	lsls	r1, r3, #31
 800635c:	f57f af69 	bpl.w	8006232 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8006360:	f7fd fea8 	bl	80040b4 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006364:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8006368:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800636a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800636c:	079a      	lsls	r2, r3, #30
 800636e:	f53f af60 	bmi.w	8006232 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006372:	f7fd fe9f 	bl	80040b4 <HAL_GetTick>
 8006376:	1b80      	subs	r0, r0, r6
 8006378:	42b8      	cmp	r0, r7
 800637a:	d9f6      	bls.n	800636a <HAL_RCCEx_PeriphCLKConfig+0x21e>
 800637c:	e7c4      	b.n	8006308 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800637e:	6891      	ldr	r1, [r2, #8]
 8006380:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006384:	e765      	b.n	8006252 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006386:	4b06      	ldr	r3, [pc, #24]	@ (80063a0 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8006388:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800638c:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8006390:	e769      	b.n	8006266 <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8006392:	bf00      	nop
 8006394:	42470000 	.word	0x42470000
 8006398:	40023800 	.word	0x40023800
 800639c:	40007000 	.word	0x40007000
 80063a0:	42471000 	.word	0x42471000

080063a4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80063a4:	b538      	push	{r3, r4, r5, lr}
 80063a6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80063a8:	4604      	mov	r4, r0
 80063aa:	b1c8      	cbz	r0, 80063e0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 80063ac:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80063b0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80063b4:	b91b      	cbnz	r3, 80063be <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80063b6:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80063ba:	f7fc fb41 	bl	8002a40 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80063be:	2302      	movs	r3, #2
 80063c0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80063c4:	1d21      	adds	r1, r4, #4
 80063c6:	6820      	ldr	r0, [r4, #0]
 80063c8:	f000 fe43 	bl	8007052 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 80063cc:	6862      	ldr	r2, [r4, #4]
 80063ce:	6820      	ldr	r0, [r4, #0]
 80063d0:	4629      	mov	r1, r5
 80063d2:	f000 fe74 	bl	80070be <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80063d6:	2301      	movs	r3, #1
 80063d8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 80063dc:	2000      	movs	r0, #0
}
 80063de:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80063e0:	2001      	movs	r0, #1
 80063e2:	e7fc      	b.n	80063de <HAL_SDRAM_Init+0x3a>

080063e4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80063e4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80063e6:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 80063ea:	2b02      	cmp	r3, #2
{
 80063ec:	4605      	mov	r5, r0
 80063ee:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80063f0:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80063f2:	d012      	beq.n	800641a <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80063f4:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 80063f8:	2c01      	cmp	r4, #1
 80063fa:	d10f      	bne.n	800641c <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80063fc:	2302      	movs	r3, #2
 80063fe:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006402:	6828      	ldr	r0, [r5, #0]
 8006404:	f000 fe91 	bl	800712a <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006408:	6833      	ldr	r3, [r6, #0]
 800640a:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800640c:	bf06      	itte	eq
 800640e:	2305      	moveq	r3, #5
 8006410:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006414:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006418:	2000      	movs	r0, #0
}
 800641a:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800641c:	2001      	movs	r0, #1
 800641e:	e7fc      	b.n	800641a <HAL_SDRAM_SendCommand+0x36>

08006420 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006420:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006422:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006426:	2b02      	cmp	r3, #2
{
 8006428:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800642a:	b2d8      	uxtb	r0, r3
 800642c:	d00d      	beq.n	800644a <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800642e:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8006432:	2b01      	cmp	r3, #1
 8006434:	b2dd      	uxtb	r5, r3
 8006436:	d109      	bne.n	800644c <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006438:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800643a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800643c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006440:	f000 fe97 	bl	8007172 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006444:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006448:	2000      	movs	r0, #0
}
 800644a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800644c:	2001      	movs	r0, #1
 800644e:	e7fc      	b.n	800644a <HAL_SDRAM_ProgramRefreshRate+0x2a>

08006450 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006450:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006454:	461f      	mov	r7, r3
 8006456:	4689      	mov	r9, r1
 8006458:	4690      	mov	r8, r2
 800645a:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800645c:	f7fd fe2a 	bl	80040b4 <HAL_GetTick>
 8006460:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8006462:	443d      	add	r5, r7
 8006464:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8006466:	f7fd fe25 	bl	80040b4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800646a:	4b26      	ldr	r3, [pc, #152]	@ (8006504 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 800646c:	681e      	ldr	r6, [r3, #0]
 800646e:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8006472:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8006474:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006476:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006478:	6822      	ldr	r2, [r4, #0]
 800647a:	6893      	ldr	r3, [r2, #8]
 800647c:	ea39 0303 	bics.w	r3, r9, r3
 8006480:	bf0c      	ite	eq
 8006482:	2301      	moveq	r3, #1
 8006484:	2300      	movne	r3, #0
 8006486:	4543      	cmp	r3, r8
 8006488:	d101      	bne.n	800648e <SPI_WaitFlagStateUntilTimeout+0x3e>
        count--;
      }
    }
  }

  return HAL_OK;
 800648a:	2000      	movs	r0, #0
 800648c:	e02e      	b.n	80064ec <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 800648e:	1c7b      	adds	r3, r7, #1
 8006490:	d0f3      	beq.n	800647a <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006492:	f7fd fe0f 	bl	80040b4 <HAL_GetTick>
 8006496:	eba0 000a 	sub.w	r0, r0, sl
 800649a:	42a8      	cmp	r0, r5
 800649c:	d329      	bcc.n	80064f2 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800649e:	6823      	ldr	r3, [r4, #0]
 80064a0:	685a      	ldr	r2, [r3, #4]
 80064a2:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80064a6:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80064a8:	6862      	ldr	r2, [r4, #4]
 80064aa:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80064ae:	d10a      	bne.n	80064c6 <SPI_WaitFlagStateUntilTimeout+0x76>
 80064b0:	68a2      	ldr	r2, [r4, #8]
 80064b2:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 80064b6:	d002      	beq.n	80064be <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80064b8:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80064bc:	d103      	bne.n	80064c6 <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 80064be:	681a      	ldr	r2, [r3, #0]
 80064c0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80064c4:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80064c6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80064c8:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 80064cc:	d107      	bne.n	80064de <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 80064ce:	681a      	ldr	r2, [r3, #0]
 80064d0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80064d4:	601a      	str	r2, [r3, #0]
 80064d6:	681a      	ldr	r2, [r3, #0]
 80064d8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80064dc:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80064de:	2301      	movs	r3, #1
 80064e0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80064e4:	2300      	movs	r3, #0
 80064e6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 80064ea:	2003      	movs	r0, #3
}
 80064ec:	b002      	add	sp, #8
 80064ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 80064f2:	9b01      	ldr	r3, [sp, #4]
 80064f4:	b11b      	cbz	r3, 80064fe <SPI_WaitFlagStateUntilTimeout+0xae>
        count--;
 80064f6:	9b01      	ldr	r3, [sp, #4]
 80064f8:	3b01      	subs	r3, #1
 80064fa:	9301      	str	r3, [sp, #4]
 80064fc:	e7bc      	b.n	8006478 <SPI_WaitFlagStateUntilTimeout+0x28>
        tmp_timeout = 0U;
 80064fe:	461d      	mov	r5, r3
 8006500:	e7ba      	b.n	8006478 <SPI_WaitFlagStateUntilTimeout+0x28>
 8006502:	bf00      	nop
 8006504:	200000c4 	.word	0x200000c4

08006508 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006508:	b5f0      	push	{r4, r5, r6, r7, lr}
 800650a:	b085      	sub	sp, #20
  __IO uint32_t count;

  /* Wait until TXE flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800650c:	460b      	mov	r3, r1
 800650e:	9200      	str	r2, [sp, #0]
{
 8006510:	460e      	mov	r6, r1
 8006512:	4617      	mov	r7, r2
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006514:	2102      	movs	r1, #2
 8006516:	2201      	movs	r2, #1
{
 8006518:	4604      	mov	r4, r0
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800651a:	f7ff ff99 	bl	8006450 <SPI_WaitFlagStateUntilTimeout>
 800651e:	4605      	mov	r5, r0
 8006520:	b128      	cbz	r0, 800652e <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006522:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006524:	f043 0320 	orr.w	r3, r3, #32
 8006528:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 800652a:	2503      	movs	r5, #3
 800652c:	e015      	b.n	800655a <SPI_EndRxTxTransaction+0x52>
  count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800652e:	4b12      	ldr	r3, [pc, #72]	@ (8006578 <SPI_EndRxTxTransaction+0x70>)
 8006530:	6818      	ldr	r0, [r3, #0]
 8006532:	4b12      	ldr	r3, [pc, #72]	@ (800657c <SPI_EndRxTxTransaction+0x74>)
 8006534:	fbb0 f0f3 	udiv	r0, r0, r3
 8006538:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800653c:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800653e:	6863      	ldr	r3, [r4, #4]
  count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006540:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006542:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006546:	d10b      	bne.n	8006560 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006548:	9700      	str	r7, [sp, #0]
 800654a:	4633      	mov	r3, r6
 800654c:	462a      	mov	r2, r5
 800654e:	2180      	movs	r1, #128	@ 0x80
 8006550:	4620      	mov	r0, r4
 8006552:	f7ff ff7d 	bl	8006450 <SPI_WaitFlagStateUntilTimeout>
 8006556:	2800      	cmp	r0, #0
 8006558:	d1e3      	bne.n	8006522 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800655a:	4628      	mov	r0, r5
 800655c:	b005      	add	sp, #20
 800655e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8006560:	9b03      	ldr	r3, [sp, #12]
 8006562:	2b00      	cmp	r3, #0
 8006564:	d0f9      	beq.n	800655a <SPI_EndRxTxTransaction+0x52>
      count--;
 8006566:	9b03      	ldr	r3, [sp, #12]
 8006568:	3b01      	subs	r3, #1
 800656a:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800656c:	6823      	ldr	r3, [r4, #0]
 800656e:	689b      	ldr	r3, [r3, #8]
 8006570:	061b      	lsls	r3, r3, #24
 8006572:	d4f5      	bmi.n	8006560 <SPI_EndRxTxTransaction+0x58>
 8006574:	e7f1      	b.n	800655a <SPI_EndRxTxTransaction+0x52>
 8006576:	bf00      	nop
 8006578:	200000c4 	.word	0x200000c4
 800657c:	016e3600 	.word	0x016e3600

08006580 <SPI_EndRxTransaction>:
{
 8006580:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006582:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006584:	6841      	ldr	r1, [r0, #4]
 8006586:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 800658a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800658c:	d008      	beq.n	80065a0 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800658e:	9200      	str	r2, [sp, #0]
 8006590:	2101      	movs	r1, #1
 8006592:	2200      	movs	r2, #0
 8006594:	f7ff ff5c 	bl	8006450 <SPI_WaitFlagStateUntilTimeout>
 8006598:	b9d0      	cbnz	r0, 80065d0 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 800659a:	2000      	movs	r0, #0
}
 800659c:	b003      	add	sp, #12
 800659e:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80065a0:	6881      	ldr	r1, [r0, #8]
 80065a2:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 80065a6:	d002      	beq.n	80065ae <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80065a8:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80065ac:	d107      	bne.n	80065be <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 80065ae:	6825      	ldr	r5, [r4, #0]
 80065b0:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80065b2:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 80065b6:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 80065ba:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80065bc:	d004      	beq.n	80065c8 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80065be:	9200      	str	r2, [sp, #0]
 80065c0:	2180      	movs	r1, #128	@ 0x80
 80065c2:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80065c4:	4620      	mov	r0, r4
 80065c6:	e7e5      	b.n	8006594 <SPI_EndRxTransaction+0x14>
 80065c8:	9200      	str	r2, [sp, #0]
 80065ca:	2101      	movs	r1, #1
 80065cc:	2200      	movs	r2, #0
 80065ce:	e7f9      	b.n	80065c4 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80065d0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80065d2:	f043 0320 	orr.w	r3, r3, #32
 80065d6:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 80065d8:	2003      	movs	r0, #3
 80065da:	e7df      	b.n	800659c <SPI_EndRxTransaction+0x1c>

080065dc <HAL_SPI_Init>:
{
 80065dc:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80065de:	4604      	mov	r4, r0
 80065e0:	2800      	cmp	r0, #0
 80065e2:	d055      	beq.n	8006690 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80065e4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80065e6:	2b00      	cmp	r3, #0
 80065e8:	d14e      	bne.n	8006688 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80065ea:	6842      	ldr	r2, [r0, #4]
 80065ec:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80065f0:	d000      	beq.n	80065f4 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80065f2:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80065f4:	2300      	movs	r3, #0
 80065f6:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80065f8:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80065fc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006600:	b923      	cbnz	r3, 800660c <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8006602:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 8006606:	4620      	mov	r0, r4
 8006608:	f7fc f9ae 	bl	8002968 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800660c:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800660e:	68a0      	ldr	r0, [r4, #8]
 8006610:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8006612:	2302      	movs	r3, #2
 8006614:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 8006618:	680b      	ldr	r3, [r1, #0]
 800661a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800661e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006620:	6863      	ldr	r3, [r4, #4]
 8006622:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 8006626:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800662a:	4303      	orrs	r3, r0
 800662c:	68e0      	ldr	r0, [r4, #12]
 800662e:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8006632:	4303      	orrs	r3, r0
 8006634:	6920      	ldr	r0, [r4, #16]
 8006636:	f000 0002 	and.w	r0, r0, #2
 800663a:	4303      	orrs	r3, r0
 800663c:	6960      	ldr	r0, [r4, #20]
 800663e:	f000 0001 	and.w	r0, r0, #1
 8006642:	4303      	orrs	r3, r0
 8006644:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8006648:	4303      	orrs	r3, r0
 800664a:	69e0      	ldr	r0, [r4, #28]
 800664c:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8006650:	4303      	orrs	r3, r0
 8006652:	6a20      	ldr	r0, [r4, #32]
 8006654:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8006658:	4303      	orrs	r3, r0
 800665a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800665c:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8006660:	4303      	orrs	r3, r0
 8006662:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8006664:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006666:	0c12      	lsrs	r2, r2, #16
 8006668:	f003 0310 	and.w	r3, r3, #16
 800666c:	f002 0204 	and.w	r2, r2, #4
 8006670:	431a      	orrs	r2, r3
 8006672:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006674:	69cb      	ldr	r3, [r1, #28]
 8006676:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800667a:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800667c:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800667e:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006680:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8006682:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8006686:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8006688:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800668a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800668e:	e7b1      	b.n	80065f4 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8006690:	2001      	movs	r0, #1
 8006692:	e7f8      	b.n	8006686 <HAL_SPI_Init+0xaa>

08006694 <HAL_SPI_Transmit>:
{
 8006694:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006698:	4604      	mov	r4, r0
 800669a:	461f      	mov	r7, r3
 800669c:	460d      	mov	r5, r1
 800669e:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 80066a0:	f7fd fd08 	bl	80040b4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80066a4:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80066a8:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80066aa:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80066ac:	b2d8      	uxtb	r0, r3
 80066ae:	f040 809f 	bne.w	80067f0 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 80066b2:	2d00      	cmp	r5, #0
 80066b4:	d074      	beq.n	80067a0 <HAL_SPI_Transmit+0x10c>
 80066b6:	f1b8 0f00 	cmp.w	r8, #0
 80066ba:	d071      	beq.n	80067a0 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 80066bc:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80066c0:	2b01      	cmp	r3, #1
 80066c2:	f000 8095 	beq.w	80067f0 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80066c6:	2303      	movs	r3, #3
 80066c8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80066cc:	2300      	movs	r3, #0
 80066ce:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 80066d0:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 80066d4:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80066d8:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 80066da:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 80066dc:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80066de:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 80066e0:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 80066e2:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80066e6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 80066ea:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 80066ec:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80066f0:	d107      	bne.n	8006702 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 80066f2:	6833      	ldr	r3, [r6, #0]
 80066f4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80066f8:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 80066fa:	6833      	ldr	r3, [r6, #0]
 80066fc:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8006700:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006702:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006704:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006706:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8006708:	bf5e      	ittt	pl
 800670a:	6833      	ldrpl	r3, [r6, #0]
 800670c:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8006710:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006712:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006716:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006718:	d145      	bne.n	80067a6 <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800671a:	b113      	cbz	r3, 8006722 <HAL_SPI_Transmit+0x8e>
 800671c:	f1b8 0f01 	cmp.w	r8, #1
 8006720:	d107      	bne.n	8006732 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006722:	f835 3b02 	ldrh.w	r3, [r5], #2
 8006726:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006728:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800672a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800672c:	3b01      	subs	r3, #1
 800672e:	b29b      	uxth	r3, r3
 8006730:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8006732:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006734:	b29b      	uxth	r3, r3
 8006736:	b9d3      	cbnz	r3, 800676e <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006738:	464a      	mov	r2, r9
 800673a:	4639      	mov	r1, r7
 800673c:	4620      	mov	r0, r4
 800673e:	f7ff fee3 	bl	8006508 <SPI_EndRxTxTransaction>
 8006742:	2800      	cmp	r0, #0
 8006744:	d151      	bne.n	80067ea <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006746:	68a3      	ldr	r3, [r4, #8]
 8006748:	b933      	cbnz	r3, 8006758 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800674a:	9301      	str	r3, [sp, #4]
 800674c:	6823      	ldr	r3, [r4, #0]
 800674e:	68da      	ldr	r2, [r3, #12]
 8006750:	9201      	str	r2, [sp, #4]
 8006752:	689b      	ldr	r3, [r3, #8]
 8006754:	9301      	str	r3, [sp, #4]
 8006756:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8006758:	2301      	movs	r3, #1
 800675a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800675e:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8006760:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006762:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8006764:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006768:	bf18      	it	ne
 800676a:	2001      	movne	r0, #1
 800676c:	e018      	b.n	80067a0 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800676e:	6822      	ldr	r2, [r4, #0]
 8006770:	6893      	ldr	r3, [r2, #8]
 8006772:	0798      	lsls	r0, r3, #30
 8006774:	d505      	bpl.n	8006782 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006776:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006778:	f833 1b02 	ldrh.w	r1, [r3], #2
 800677c:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800677e:	6323      	str	r3, [r4, #48]	@ 0x30
 8006780:	e7d3      	b.n	800672a <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006782:	f7fd fc97 	bl	80040b4 <HAL_GetTick>
 8006786:	eba0 0009 	sub.w	r0, r0, r9
 800678a:	42b8      	cmp	r0, r7
 800678c:	d3d1      	bcc.n	8006732 <HAL_SPI_Transmit+0x9e>
 800678e:	1c79      	adds	r1, r7, #1
 8006790:	d0cf      	beq.n	8006732 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 8006792:	2301      	movs	r3, #1
 8006794:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006798:	2300      	movs	r3, #0
 800679a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800679e:	2003      	movs	r0, #3
}
 80067a0:	b003      	add	sp, #12
 80067a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80067a6:	b113      	cbz	r3, 80067ae <HAL_SPI_Transmit+0x11a>
 80067a8:	f1b8 0f01 	cmp.w	r8, #1
 80067ac:	d108      	bne.n	80067c0 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80067ae:	782b      	ldrb	r3, [r5, #0]
 80067b0:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80067b2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80067b4:	3301      	adds	r3, #1
 80067b6:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80067b8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80067ba:	3b01      	subs	r3, #1
 80067bc:	b29b      	uxth	r3, r3
 80067be:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 80067c0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80067c2:	b29b      	uxth	r3, r3
 80067c4:	2b00      	cmp	r3, #0
 80067c6:	d0b7      	beq.n	8006738 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80067c8:	6823      	ldr	r3, [r4, #0]
 80067ca:	689a      	ldr	r2, [r3, #8]
 80067cc:	0792      	lsls	r2, r2, #30
 80067ce:	d503      	bpl.n	80067d8 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80067d0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80067d2:	7812      	ldrb	r2, [r2, #0]
 80067d4:	731a      	strb	r2, [r3, #12]
 80067d6:	e7ec      	b.n	80067b2 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80067d8:	f7fd fc6c 	bl	80040b4 <HAL_GetTick>
 80067dc:	eba0 0009 	sub.w	r0, r0, r9
 80067e0:	42b8      	cmp	r0, r7
 80067e2:	d3ed      	bcc.n	80067c0 <HAL_SPI_Transmit+0x12c>
 80067e4:	1c7b      	adds	r3, r7, #1
 80067e6:	d0eb      	beq.n	80067c0 <HAL_SPI_Transmit+0x12c>
 80067e8:	e7d3      	b.n	8006792 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80067ea:	2320      	movs	r3, #32
 80067ec:	6563      	str	r3, [r4, #84]	@ 0x54
 80067ee:	e7aa      	b.n	8006746 <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 80067f0:	2002      	movs	r0, #2
 80067f2:	e7d5      	b.n	80067a0 <HAL_SPI_Transmit+0x10c>

080067f4 <HAL_SPI_TransmitReceive>:
{
 80067f4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80067f8:	4604      	mov	r4, r0
 80067fa:	460d      	mov	r5, r1
 80067fc:	4691      	mov	r9, r2
 80067fe:	461e      	mov	r6, r3
 8006800:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 8006804:	f7fd fc56 	bl	80040b4 <HAL_GetTick>
  tmp_state           = hspi->State;
 8006808:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 800680c:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800680e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006810:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8006812:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006814:	d00a      	beq.n	800682c <HAL_SPI_TransmitReceive+0x38>
 8006816:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800681a:	f040 80e5 	bne.w	80069e8 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) &&
 800681e:	68a3      	ldr	r3, [r4, #8]
 8006820:	2b00      	cmp	r3, #0
 8006822:	f040 80e1 	bne.w	80069e8 <HAL_SPI_TransmitReceive+0x1f4>
 8006826:	2904      	cmp	r1, #4
 8006828:	f040 80de 	bne.w	80069e8 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800682c:	2d00      	cmp	r5, #0
 800682e:	d04b      	beq.n	80068c8 <HAL_SPI_TransmitReceive+0xd4>
 8006830:	f1b9 0f00 	cmp.w	r9, #0
 8006834:	d048      	beq.n	80068c8 <HAL_SPI_TransmitReceive+0xd4>
 8006836:	2e00      	cmp	r6, #0
 8006838:	d046      	beq.n	80068c8 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 800683a:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800683e:	2b01      	cmp	r3, #1
 8006840:	f000 80d2 	beq.w	80069e8 <HAL_SPI_TransmitReceive+0x1f4>
 8006844:	2301      	movs	r3, #1
 8006846:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800684a:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800684e:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006852:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006854:	bf1c      	itt	ne
 8006856:	2305      	movne	r3, #5
 8006858:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800685c:	2300      	movs	r3, #0
 800685e:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8006860:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006864:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006866:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8006868:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800686a:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800686c:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800686e:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006870:	bf58      	it	pl
 8006872:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8006874:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 8006876:	bf58      	it	pl
 8006878:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 800687c:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 800687e:	bf58      	it	pl
 8006880:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006882:	68e1      	ldr	r1, [r4, #12]
 8006884:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8006888:	d155      	bne.n	8006936 <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800688a:	b10a      	cbz	r2, 8006890 <HAL_SPI_TransmitReceive+0x9c>
 800688c:	2e01      	cmp	r6, #1
 800688e:	d107      	bne.n	80068a0 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006890:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006894:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8006896:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006898:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800689a:	3b01      	subs	r3, #1
 800689c:	b29b      	uxth	r3, r3
 800689e:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 80068a0:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80068a2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80068a4:	b29b      	uxth	r3, r3
 80068a6:	b98b      	cbnz	r3, 80068cc <HAL_SPI_TransmitReceive+0xd8>
 80068a8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80068aa:	b29b      	uxth	r3, r3
 80068ac:	b973      	cbnz	r3, 80068cc <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80068ae:	463a      	mov	r2, r7
 80068b0:	4641      	mov	r1, r8
 80068b2:	4620      	mov	r0, r4
 80068b4:	f7ff fe28 	bl	8006508 <SPI_EndRxTxTransaction>
 80068b8:	2800      	cmp	r0, #0
 80068ba:	f000 8081 	beq.w	80069c0 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80068be:	2320      	movs	r3, #32
 80068c0:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80068c2:	2300      	movs	r3, #0
 80068c4:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 80068c8:	2001      	movs	r0, #1
 80068ca:	e031      	b.n	8006930 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80068cc:	6821      	ldr	r1, [r4, #0]
 80068ce:	688b      	ldr	r3, [r1, #8]
 80068d0:	079a      	lsls	r2, r3, #30
 80068d2:	d50d      	bpl.n	80068f0 <HAL_SPI_TransmitReceive+0xfc>
 80068d4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80068d6:	b29b      	uxth	r3, r3
 80068d8:	b153      	cbz	r3, 80068f0 <HAL_SPI_TransmitReceive+0xfc>
 80068da:	b145      	cbz	r5, 80068ee <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80068dc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80068de:	f833 2b02 	ldrh.w	r2, [r3], #2
 80068e2:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80068e4:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80068e6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80068e8:	3b01      	subs	r3, #1
 80068ea:	b29b      	uxth	r3, r3
 80068ec:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 80068ee:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80068f0:	688a      	ldr	r2, [r1, #8]
 80068f2:	f012 0201 	ands.w	r2, r2, #1
 80068f6:	d00c      	beq.n	8006912 <HAL_SPI_TransmitReceive+0x11e>
 80068f8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80068fa:	b29b      	uxth	r3, r3
 80068fc:	b14b      	cbz	r3, 8006912 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80068fe:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006900:	68c9      	ldr	r1, [r1, #12]
 8006902:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006906:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006908:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800690a:	3b01      	subs	r3, #1
 800690c:	b29b      	uxth	r3, r3
 800690e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006910:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006912:	f7fd fbcf 	bl	80040b4 <HAL_GetTick>
 8006916:	1bc0      	subs	r0, r0, r7
 8006918:	4540      	cmp	r0, r8
 800691a:	d3c2      	bcc.n	80068a2 <HAL_SPI_TransmitReceive+0xae>
 800691c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006920:	d0bf      	beq.n	80068a2 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 8006922:	2301      	movs	r3, #1
 8006924:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006928:	2300      	movs	r3, #0
 800692a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800692e:	2003      	movs	r0, #3
}
 8006930:	b003      	add	sp, #12
 8006932:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006936:	b10a      	cbz	r2, 800693c <HAL_SPI_TransmitReceive+0x148>
 8006938:	2e01      	cmp	r6, #1
 800693a:	d108      	bne.n	800694e <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800693c:	782a      	ldrb	r2, [r5, #0]
 800693e:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006940:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006942:	3301      	adds	r3, #1
 8006944:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006946:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006948:	3b01      	subs	r3, #1
 800694a:	b29b      	uxth	r3, r3
 800694c:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800694e:	2501      	movs	r5, #1
 8006950:	e02d      	b.n	80069ae <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006952:	6822      	ldr	r2, [r4, #0]
 8006954:	6893      	ldr	r3, [r2, #8]
 8006956:	079b      	lsls	r3, r3, #30
 8006958:	d50e      	bpl.n	8006978 <HAL_SPI_TransmitReceive+0x184>
 800695a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800695c:	b29b      	uxth	r3, r3
 800695e:	b15b      	cbz	r3, 8006978 <HAL_SPI_TransmitReceive+0x184>
 8006960:	b14d      	cbz	r5, 8006976 <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 8006962:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006964:	781b      	ldrb	r3, [r3, #0]
 8006966:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006968:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800696a:	3301      	adds	r3, #1
 800696c:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800696e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006970:	3b01      	subs	r3, #1
 8006972:	b29b      	uxth	r3, r3
 8006974:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006976:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006978:	6822      	ldr	r2, [r4, #0]
 800697a:	6891      	ldr	r1, [r2, #8]
 800697c:	f011 0101 	ands.w	r1, r1, #1
 8006980:	d00d      	beq.n	800699e <HAL_SPI_TransmitReceive+0x1aa>
 8006982:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006984:	b29b      	uxth	r3, r3
 8006986:	b153      	cbz	r3, 800699e <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006988:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800698a:	68d2      	ldr	r2, [r2, #12]
 800698c:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800698e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006990:	3301      	adds	r3, #1
 8006992:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006994:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006996:	3b01      	subs	r3, #1
 8006998:	b29b      	uxth	r3, r3
 800699a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800699c:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800699e:	f7fd fb89 	bl	80040b4 <HAL_GetTick>
 80069a2:	1bc0      	subs	r0, r0, r7
 80069a4:	4540      	cmp	r0, r8
 80069a6:	d302      	bcc.n	80069ae <HAL_SPI_TransmitReceive+0x1ba>
 80069a8:	f1b8 3fff 	cmp.w	r8, #4294967295
 80069ac:	d1b9      	bne.n	8006922 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80069ae:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80069b0:	b29b      	uxth	r3, r3
 80069b2:	2b00      	cmp	r3, #0
 80069b4:	d1cd      	bne.n	8006952 <HAL_SPI_TransmitReceive+0x15e>
 80069b6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80069b8:	b29b      	uxth	r3, r3
 80069ba:	2b00      	cmp	r3, #0
 80069bc:	d1c9      	bne.n	8006952 <HAL_SPI_TransmitReceive+0x15e>
 80069be:	e776      	b.n	80068ae <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80069c0:	68a3      	ldr	r3, [r4, #8]
 80069c2:	b933      	cbnz	r3, 80069d2 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80069c4:	9301      	str	r3, [sp, #4]
 80069c6:	6823      	ldr	r3, [r4, #0]
 80069c8:	68da      	ldr	r2, [r3, #12]
 80069ca:	9201      	str	r2, [sp, #4]
 80069cc:	689b      	ldr	r3, [r3, #8]
 80069ce:	9301      	str	r3, [sp, #4]
 80069d0:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 80069d2:	2301      	movs	r3, #1
 80069d4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80069d8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80069da:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80069dc:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 80069de:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80069e2:	bf18      	it	ne
 80069e4:	2001      	movne	r0, #1
 80069e6:	e7a3      	b.n	8006930 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 80069e8:	2002      	movs	r0, #2
 80069ea:	e7a1      	b.n	8006930 <HAL_SPI_TransmitReceive+0x13c>

080069ec <HAL_SPI_Receive>:
{
 80069ec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80069f0:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 80069f2:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 80069f6:	2b01      	cmp	r3, #1
{
 80069f8:	4604      	mov	r4, r0
 80069fa:	4689      	mov	r9, r1
 80069fc:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 80069fe:	b2dd      	uxtb	r5, r3
 8006a00:	d004      	beq.n	8006a0c <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 8006a02:	2502      	movs	r5, #2
}
 8006a04:	4628      	mov	r0, r5
 8006a06:	b003      	add	sp, #12
 8006a08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((pData == NULL) || (Size == 0U))
 8006a0c:	2900      	cmp	r1, #0
 8006a0e:	d0f9      	beq.n	8006a04 <HAL_SPI_Receive+0x18>
 8006a10:	2a00      	cmp	r2, #0
 8006a12:	d0f7      	beq.n	8006a04 <HAL_SPI_Receive+0x18>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006a14:	6843      	ldr	r3, [r0, #4]
 8006a16:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006a1a:	d10b      	bne.n	8006a34 <HAL_SPI_Receive+0x48>
 8006a1c:	6883      	ldr	r3, [r0, #8]
 8006a1e:	b94b      	cbnz	r3, 8006a34 <HAL_SPI_Receive+0x48>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006a20:	2304      	movs	r3, #4
 8006a22:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006a26:	4613      	mov	r3, r2
 8006a28:	9600      	str	r6, [sp, #0]
 8006a2a:	460a      	mov	r2, r1
 8006a2c:	f7ff fee2 	bl	80067f4 <HAL_SPI_TransmitReceive>
 8006a30:	4605      	mov	r5, r0
 8006a32:	e7e7      	b.n	8006a04 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 8006a34:	f7fd fb3e 	bl	80040b4 <HAL_GetTick>
  __HAL_LOCK(hspi);
 8006a38:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006a3c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006a3e:	4680      	mov	r8, r0
  __HAL_LOCK(hspi);
 8006a40:	d0df      	beq.n	8006a02 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a42:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006a44:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 8006a48:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006a4a:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 8006a4c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a50:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006a54:	f04f 0304 	mov.w	r3, #4
 8006a58:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8006a5c:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006a60:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8006a62:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006a64:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8006a66:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006a68:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006a6a:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8006a6c:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a6e:	d107      	bne.n	8006a80 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 8006a70:	681a      	ldr	r2, [r3, #0]
 8006a72:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006a76:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006a78:	681a      	ldr	r2, [r3, #0]
 8006a7a:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006a7e:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006a80:	681a      	ldr	r2, [r3, #0]
 8006a82:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006a84:	bf5e      	ittt	pl
 8006a86:	681a      	ldrpl	r2, [r3, #0]
 8006a88:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8006a8c:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006a8e:	68e3      	ldr	r3, [r4, #12]
 8006a90:	b1f3      	cbz	r3, 8006ad0 <HAL_SPI_Receive+0xe4>
    while (hspi->RxXferCount > 0U)
 8006a92:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006a94:	b29b      	uxth	r3, r3
 8006a96:	b1fb      	cbz	r3, 8006ad8 <HAL_SPI_Receive+0xec>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006a98:	6823      	ldr	r3, [r4, #0]
 8006a9a:	689a      	ldr	r2, [r3, #8]
 8006a9c:	07d2      	lsls	r2, r2, #31
 8006a9e:	d53c      	bpl.n	8006b1a <HAL_SPI_Receive+0x12e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006aa0:	68da      	ldr	r2, [r3, #12]
 8006aa2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006aa4:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006aa8:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006aaa:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006aac:	3b01      	subs	r3, #1
 8006aae:	b29b      	uxth	r3, r3
 8006ab0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8006ab2:	e7ee      	b.n	8006a92 <HAL_SPI_Receive+0xa6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006ab4:	6823      	ldr	r3, [r4, #0]
 8006ab6:	689a      	ldr	r2, [r3, #8]
 8006ab8:	07d0      	lsls	r0, r2, #31
 8006aba:	d51e      	bpl.n	8006afa <HAL_SPI_Receive+0x10e>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006abc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8006abe:	7b1b      	ldrb	r3, [r3, #12]
 8006ac0:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006ac2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006ac4:	3301      	adds	r3, #1
 8006ac6:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006ac8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006aca:	3b01      	subs	r3, #1
 8006acc:	b29b      	uxth	r3, r3
 8006ace:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8006ad0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006ad2:	b29b      	uxth	r3, r3
 8006ad4:	2b00      	cmp	r3, #0
 8006ad6:	d1ed      	bne.n	8006ab4 <HAL_SPI_Receive+0xc8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006ad8:	4642      	mov	r2, r8
 8006ada:	4631      	mov	r1, r6
 8006adc:	4620      	mov	r0, r4
 8006ade:	f7ff fd4f 	bl	8006580 <SPI_EndRxTransaction>
 8006ae2:	bb18      	cbnz	r0, 8006b2c <HAL_SPI_Receive+0x140>
  hspi->State = HAL_SPI_STATE_READY;
 8006ae4:	2301      	movs	r3, #1
 8006ae6:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006aea:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8006aec:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006aee:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 8006af0:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006af4:	bf18      	it	ne
 8006af6:	2501      	movne	r5, #1
 8006af8:	e784      	b.n	8006a04 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006afa:	f7fd fadb 	bl	80040b4 <HAL_GetTick>
 8006afe:	eba0 0008 	sub.w	r0, r0, r8
 8006b02:	42b0      	cmp	r0, r6
 8006b04:	d3e4      	bcc.n	8006ad0 <HAL_SPI_Receive+0xe4>
 8006b06:	1c71      	adds	r1, r6, #1
 8006b08:	d0e2      	beq.n	8006ad0 <HAL_SPI_Receive+0xe4>
          hspi->State = HAL_SPI_STATE_READY;
 8006b0a:	2301      	movs	r3, #1
 8006b0c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006b10:	2300      	movs	r3, #0
 8006b12:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006b16:	2503      	movs	r5, #3
 8006b18:	e774      	b.n	8006a04 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006b1a:	f7fd facb 	bl	80040b4 <HAL_GetTick>
 8006b1e:	eba0 0008 	sub.w	r0, r0, r8
 8006b22:	42b0      	cmp	r0, r6
 8006b24:	d3b5      	bcc.n	8006a92 <HAL_SPI_Receive+0xa6>
 8006b26:	1c73      	adds	r3, r6, #1
 8006b28:	d0b3      	beq.n	8006a92 <HAL_SPI_Receive+0xa6>
 8006b2a:	e7ee      	b.n	8006b0a <HAL_SPI_Receive+0x11e>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006b2c:	2320      	movs	r3, #32
 8006b2e:	6563      	str	r3, [r4, #84]	@ 0x54
 8006b30:	e7d8      	b.n	8006ae4 <HAL_SPI_Receive+0xf8>

08006b32 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006b32:	4770      	bx	lr

08006b34 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006b34:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006b38:	2b01      	cmp	r3, #1
 8006b3a:	d130      	bne.n	8006b9e <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006b3c:	2302      	movs	r3, #2
 8006b3e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006b42:	6803      	ldr	r3, [r0, #0]
 8006b44:	68da      	ldr	r2, [r3, #12]
 8006b46:	f042 0201 	orr.w	r2, r2, #1
 8006b4a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006b4c:	4a15      	ldr	r2, [pc, #84]	@ (8006ba4 <HAL_TIM_Base_Start_IT+0x70>)
 8006b4e:	4293      	cmp	r3, r2
 8006b50:	d01a      	beq.n	8006b88 <HAL_TIM_Base_Start_IT+0x54>
 8006b52:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006b56:	d017      	beq.n	8006b88 <HAL_TIM_Base_Start_IT+0x54>
 8006b58:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006b5c:	4293      	cmp	r3, r2
 8006b5e:	d013      	beq.n	8006b88 <HAL_TIM_Base_Start_IT+0x54>
 8006b60:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006b64:	4293      	cmp	r3, r2
 8006b66:	d00f      	beq.n	8006b88 <HAL_TIM_Base_Start_IT+0x54>
 8006b68:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006b6c:	4293      	cmp	r3, r2
 8006b6e:	d00b      	beq.n	8006b88 <HAL_TIM_Base_Start_IT+0x54>
 8006b70:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006b74:	4293      	cmp	r3, r2
 8006b76:	d007      	beq.n	8006b88 <HAL_TIM_Base_Start_IT+0x54>
 8006b78:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006b7c:	4293      	cmp	r3, r2
 8006b7e:	d003      	beq.n	8006b88 <HAL_TIM_Base_Start_IT+0x54>
 8006b80:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8006b84:	4293      	cmp	r3, r2
 8006b86:	d104      	bne.n	8006b92 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006b88:	689a      	ldr	r2, [r3, #8]
 8006b8a:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006b8e:	2a06      	cmp	r2, #6
 8006b90:	d003      	beq.n	8006b9a <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 8006b92:	681a      	ldr	r2, [r3, #0]
 8006b94:	f042 0201 	orr.w	r2, r2, #1
 8006b98:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006b9a:	2000      	movs	r0, #0
 8006b9c:	4770      	bx	lr
    return HAL_ERROR;
 8006b9e:	2001      	movs	r0, #1
}
 8006ba0:	4770      	bx	lr
 8006ba2:	bf00      	nop
 8006ba4:	40010000 	.word	0x40010000

08006ba8 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006ba8:	4770      	bx	lr

08006baa <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006baa:	4770      	bx	lr

08006bac <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006bac:	4770      	bx	lr

08006bae <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006bae:	4770      	bx	lr

08006bb0 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8006bb0:	6803      	ldr	r3, [r0, #0]
{
 8006bb2:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8006bb4:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8006bb6:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006bb8:	07b1      	lsls	r1, r6, #30
{
 8006bba:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006bbc:	d50d      	bpl.n	8006bda <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8006bbe:	07aa      	lsls	r2, r5, #30
 8006bc0:	d50b      	bpl.n	8006bda <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8006bc2:	f06f 0202 	mvn.w	r2, #2
 8006bc6:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006bc8:	2201      	movs	r2, #1
 8006bca:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006bcc:	699b      	ldr	r3, [r3, #24]
 8006bce:	079b      	lsls	r3, r3, #30
 8006bd0:	d069      	beq.n	8006ca6 <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 8006bd2:	f7ff ffea 	bl	8006baa <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006bd6:	2300      	movs	r3, #0
 8006bd8:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8006bda:	0771      	lsls	r1, r6, #29
 8006bdc:	d510      	bpl.n	8006c00 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8006bde:	076a      	lsls	r2, r5, #29
 8006be0:	d50e      	bpl.n	8006c00 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8006be2:	6823      	ldr	r3, [r4, #0]
 8006be4:	f06f 0204 	mvn.w	r2, #4
 8006be8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006bea:	2202      	movs	r2, #2
 8006bec:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006bee:	699b      	ldr	r3, [r3, #24]
 8006bf0:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8006bf4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006bf6:	d05c      	beq.n	8006cb2 <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8006bf8:	f7ff ffd7 	bl	8006baa <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006bfc:	2300      	movs	r3, #0
 8006bfe:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8006c00:	0733      	lsls	r3, r6, #28
 8006c02:	d50f      	bpl.n	8006c24 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8006c04:	0728      	lsls	r0, r5, #28
 8006c06:	d50d      	bpl.n	8006c24 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006c08:	6823      	ldr	r3, [r4, #0]
 8006c0a:	f06f 0208 	mvn.w	r2, #8
 8006c0e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006c10:	2204      	movs	r2, #4
 8006c12:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006c14:	69db      	ldr	r3, [r3, #28]
 8006c16:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8006c18:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006c1a:	d050      	beq.n	8006cbe <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006c1c:	f7ff ffc5 	bl	8006baa <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006c20:	2300      	movs	r3, #0
 8006c22:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8006c24:	06f2      	lsls	r2, r6, #27
 8006c26:	d510      	bpl.n	8006c4a <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8006c28:	06eb      	lsls	r3, r5, #27
 8006c2a:	d50e      	bpl.n	8006c4a <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8006c2c:	6823      	ldr	r3, [r4, #0]
 8006c2e:	f06f 0210 	mvn.w	r2, #16
 8006c32:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006c34:	2208      	movs	r2, #8
 8006c36:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006c38:	69db      	ldr	r3, [r3, #28]
 8006c3a:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8006c3e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006c40:	d043      	beq.n	8006cca <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006c42:	f7ff ffb2 	bl	8006baa <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006c46:	2300      	movs	r3, #0
 8006c48:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8006c4a:	07f0      	lsls	r0, r6, #31
 8006c4c:	d508      	bpl.n	8006c60 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8006c4e:	07e9      	lsls	r1, r5, #31
 8006c50:	d506      	bpl.n	8006c60 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8006c52:	6823      	ldr	r3, [r4, #0]
 8006c54:	f06f 0201 	mvn.w	r2, #1
 8006c58:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006c5a:	4620      	mov	r0, r4
 8006c5c:	f7fb fce6 	bl	800262c <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8006c60:	0632      	lsls	r2, r6, #24
 8006c62:	d508      	bpl.n	8006c76 <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006c64:	062b      	lsls	r3, r5, #24
 8006c66:	d506      	bpl.n	8006c76 <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8006c68:	6823      	ldr	r3, [r4, #0]
 8006c6a:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8006c6e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006c70:	4620      	mov	r0, r4
 8006c72:	f000 f8b2 	bl	8006dda <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8006c76:	0670      	lsls	r0, r6, #25
 8006c78:	d508      	bpl.n	8006c8c <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8006c7a:	0669      	lsls	r1, r5, #25
 8006c7c:	d506      	bpl.n	8006c8c <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006c7e:	6823      	ldr	r3, [r4, #0]
 8006c80:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006c84:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8006c86:	4620      	mov	r0, r4
 8006c88:	f7ff ff91 	bl	8006bae <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006c8c:	06b2      	lsls	r2, r6, #26
 8006c8e:	d522      	bpl.n	8006cd6 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006c90:	06ab      	lsls	r3, r5, #26
 8006c92:	d520      	bpl.n	8006cd6 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006c94:	6823      	ldr	r3, [r4, #0]
 8006c96:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006c9a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006c9c:	611a      	str	r2, [r3, #16]
}
 8006c9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006ca2:	f000 b899 	b.w	8006dd8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006ca6:	f7ff ff7f 	bl	8006ba8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006caa:	4620      	mov	r0, r4
 8006cac:	f7ff ff7e 	bl	8006bac <HAL_TIM_PWM_PulseFinishedCallback>
 8006cb0:	e791      	b.n	8006bd6 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006cb2:	f7ff ff79 	bl	8006ba8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006cb6:	4620      	mov	r0, r4
 8006cb8:	f7ff ff78 	bl	8006bac <HAL_TIM_PWM_PulseFinishedCallback>
 8006cbc:	e79e      	b.n	8006bfc <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006cbe:	f7ff ff73 	bl	8006ba8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006cc2:	4620      	mov	r0, r4
 8006cc4:	f7ff ff72 	bl	8006bac <HAL_TIM_PWM_PulseFinishedCallback>
 8006cc8:	e7aa      	b.n	8006c20 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006cca:	f7ff ff6d 	bl	8006ba8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006cce:	4620      	mov	r0, r4
 8006cd0:	f7ff ff6c 	bl	8006bac <HAL_TIM_PWM_PulseFinishedCallback>
 8006cd4:	e7b7      	b.n	8006c46 <HAL_TIM_IRQHandler+0x96>
}
 8006cd6:	bd70      	pop	{r4, r5, r6, pc}

08006cd8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006cd8:	4a27      	ldr	r2, [pc, #156]	@ (8006d78 <TIM_Base_SetConfig+0xa0>)
  tmpcr1 = TIMx->CR1;
 8006cda:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006cdc:	4290      	cmp	r0, r2
 8006cde:	d012      	beq.n	8006d06 <TIM_Base_SetConfig+0x2e>
 8006ce0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006ce4:	d00f      	beq.n	8006d06 <TIM_Base_SetConfig+0x2e>
 8006ce6:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006cea:	4290      	cmp	r0, r2
 8006cec:	d00b      	beq.n	8006d06 <TIM_Base_SetConfig+0x2e>
 8006cee:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006cf2:	4290      	cmp	r0, r2
 8006cf4:	d007      	beq.n	8006d06 <TIM_Base_SetConfig+0x2e>
 8006cf6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006cfa:	4290      	cmp	r0, r2
 8006cfc:	d003      	beq.n	8006d06 <TIM_Base_SetConfig+0x2e>
 8006cfe:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006d02:	4290      	cmp	r0, r2
 8006d04:	d108      	bne.n	8006d18 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006d06:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006d08:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8006d0c:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006d0e:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006d10:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006d14:	4313      	orrs	r3, r2
 8006d16:	e016      	b.n	8006d46 <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006d18:	4a18      	ldr	r2, [pc, #96]	@ (8006d7c <TIM_Base_SetConfig+0xa4>)
 8006d1a:	4290      	cmp	r0, r2
 8006d1c:	d0f7      	beq.n	8006d0e <TIM_Base_SetConfig+0x36>
 8006d1e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d22:	4290      	cmp	r0, r2
 8006d24:	d0f3      	beq.n	8006d0e <TIM_Base_SetConfig+0x36>
 8006d26:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d2a:	4290      	cmp	r0, r2
 8006d2c:	d0ef      	beq.n	8006d0e <TIM_Base_SetConfig+0x36>
 8006d2e:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8006d32:	4290      	cmp	r0, r2
 8006d34:	d0eb      	beq.n	8006d0e <TIM_Base_SetConfig+0x36>
 8006d36:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d3a:	4290      	cmp	r0, r2
 8006d3c:	d0e7      	beq.n	8006d0e <TIM_Base_SetConfig+0x36>
 8006d3e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d42:	4290      	cmp	r0, r2
 8006d44:	d0e3      	beq.n	8006d0e <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006d46:	694a      	ldr	r2, [r1, #20]
 8006d48:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006d4c:	4313      	orrs	r3, r2

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006d4e:	688a      	ldr	r2, [r1, #8]
 8006d50:	62c2      	str	r2, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006d52:	680a      	ldr	r2, [r1, #0]
 8006d54:	6282      	str	r2, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006d56:	4a08      	ldr	r2, [pc, #32]	@ (8006d78 <TIM_Base_SetConfig+0xa0>)
 8006d58:	4290      	cmp	r0, r2
 8006d5a:	d003      	beq.n	8006d64 <TIM_Base_SetConfig+0x8c>
 8006d5c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d60:	4290      	cmp	r0, r2
 8006d62:	d101      	bne.n	8006d68 <TIM_Base_SetConfig+0x90>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006d64:	690a      	ldr	r2, [r1, #16]
 8006d66:	6302      	str	r2, [r0, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
 8006d68:	6802      	ldr	r2, [r0, #0]
 8006d6a:	f042 0204 	orr.w	r2, r2, #4
 8006d6e:	6002      	str	r2, [r0, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006d70:	2201      	movs	r2, #1
 8006d72:	6142      	str	r2, [r0, #20]

  TIMx->CR1 = tmpcr1;
 8006d74:	6003      	str	r3, [r0, #0]
}
 8006d76:	4770      	bx	lr
 8006d78:	40010000 	.word	0x40010000
 8006d7c:	40014000 	.word	0x40014000

08006d80 <HAL_TIM_Base_Init>:
{
 8006d80:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006d82:	4604      	mov	r4, r0
 8006d84:	b330      	cbz	r0, 8006dd4 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006d86:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006d8a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006d8e:	b91b      	cbnz	r3, 8006d98 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006d90:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006d94:	f7ff fecd 	bl	8006b32 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006d98:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006d9a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006d9c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006da0:	1d21      	adds	r1, r4, #4
 8006da2:	f7ff ff99 	bl	8006cd8 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006da6:	2301      	movs	r3, #1
 8006da8:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8006dac:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006dae:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8006db2:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8006db6:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006dba:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006dbe:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006dc2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006dc6:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8006dca:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006dce:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8006dd2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006dd4:	2001      	movs	r0, #1
 8006dd6:	e7fc      	b.n	8006dd2 <HAL_TIM_Base_Init+0x52>

08006dd8 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006dd8:	4770      	bx	lr

08006dda <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006dda:	4770      	bx	lr

08006ddc <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006ddc:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006dde:	f102 030c 	add.w	r3, r2, #12
 8006de2:	e853 3f00 	ldrex	r3, [r3]
 8006de6:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006dea:	320c      	adds	r2, #12
 8006dec:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8006df0:	6802      	ldr	r2, [r0, #0]
 8006df2:	2900      	cmp	r1, #0
 8006df4:	d1f2      	bne.n	8006ddc <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006df6:	f102 0314 	add.w	r3, r2, #20
 8006dfa:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006dfe:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006e02:	f102 0c14 	add.w	ip, r2, #20
 8006e06:	e84c 3100 	strex	r1, r3, [ip]
 8006e0a:	2900      	cmp	r1, #0
 8006e0c:	d1f3      	bne.n	8006df6 <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006e0e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8006e10:	2b01      	cmp	r3, #1
 8006e12:	d10b      	bne.n	8006e2c <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006e14:	f102 030c 	add.w	r3, r2, #12
 8006e18:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006e1c:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006e20:	f102 0c0c 	add.w	ip, r2, #12
 8006e24:	e84c 3100 	strex	r1, r3, [ip]
 8006e28:	2900      	cmp	r1, #0
 8006e2a:	d1f3      	bne.n	8006e14 <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8006e2c:	2320      	movs	r3, #32
 8006e2e:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006e32:	2300      	movs	r3, #0
 8006e34:	6303      	str	r3, [r0, #48]	@ 0x30
}
 8006e36:	4770      	bx	lr

08006e38 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006e38:	6802      	ldr	r2, [r0, #0]
 8006e3a:	68c1      	ldr	r1, [r0, #12]
{
 8006e3c:	b538      	push	{r3, r4, r5, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006e3e:	6913      	ldr	r3, [r2, #16]
 8006e40:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8006e44:	430b      	orrs	r3, r1
 8006e46:	6113      	str	r3, [r2, #16]
{
 8006e48:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006e4a:	6883      	ldr	r3, [r0, #8]
 8006e4c:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 8006e4e:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006e50:	4303      	orrs	r3, r0
 8006e52:	6968      	ldr	r0, [r5, #20]
 8006e54:	4303      	orrs	r3, r0
 8006e56:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 8006e58:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
 8006e5c:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006e60:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 8006e62:	430b      	orrs	r3, r1
 8006e64:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006e66:	6953      	ldr	r3, [r2, #20]
 8006e68:	69a9      	ldr	r1, [r5, #24]
 8006e6a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006e6e:	430b      	orrs	r3, r1
 8006e70:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8006e72:	4b1f      	ldr	r3, [pc, #124]	@ (8006ef0 <UART_SetConfig+0xb8>)
 8006e74:	429a      	cmp	r2, r3
 8006e76:	d003      	beq.n	8006e80 <UART_SetConfig+0x48>
 8006e78:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006e7c:	429a      	cmp	r2, r3
 8006e7e:	d124      	bne.n	8006eca <UART_SetConfig+0x92>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8006e80:	f7ff f936 	bl	80060f0 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006e84:	69ea      	ldr	r2, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006e86:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006e88:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006e8c:	e9d5 4300 	ldrd	r4, r3, [r5]
 8006e90:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006e94:	d11c      	bne.n	8006ed0 <UART_SetConfig+0x98>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006e96:	18da      	adds	r2, r3, r3
 8006e98:	f04f 0500 	mov.w	r5, #0
 8006e9c:	eb45 0305 	adc.w	r3, r5, r5
 8006ea0:	f7f9 fc32 	bl	8000708 <__aeabi_uldivmod>
 8006ea4:	2264      	movs	r2, #100	@ 0x64
 8006ea6:	fbb0 f1f2 	udiv	r1, r0, r2
 8006eaa:	fb02 0311 	mls	r3, r2, r1, r0
 8006eae:	00db      	lsls	r3, r3, #3
 8006eb0:	3332      	adds	r3, #50	@ 0x32
 8006eb2:	fbb3 f3f2 	udiv	r3, r3, r2
 8006eb6:	f003 0207 	and.w	r2, r3, #7
 8006eba:	005b      	lsls	r3, r3, #1
 8006ebc:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8006ec0:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8006ec4:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006ec6:	60a3      	str	r3, [r4, #8]
  }
}
 8006ec8:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8006eca:	f7ff f901 	bl	80060d0 <HAL_RCC_GetPCLK1Freq>
 8006ece:	e7d9      	b.n	8006e84 <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006ed0:	009a      	lsls	r2, r3, #2
 8006ed2:	0f9b      	lsrs	r3, r3, #30
 8006ed4:	f7f9 fc18 	bl	8000708 <__aeabi_uldivmod>
 8006ed8:	2264      	movs	r2, #100	@ 0x64
 8006eda:	fbb0 f1f2 	udiv	r1, r0, r2
 8006ede:	fb02 0311 	mls	r3, r2, r1, r0
 8006ee2:	011b      	lsls	r3, r3, #4
 8006ee4:	3332      	adds	r3, #50	@ 0x32
 8006ee6:	fbb3 f3f2 	udiv	r3, r3, r2
 8006eea:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8006eee:	e7ea      	b.n	8006ec6 <UART_SetConfig+0x8e>
 8006ef0:	40011000 	.word	0x40011000

08006ef4 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
 8006ef4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006ef6:	4605      	mov	r5, r0
 8006ef8:	460c      	mov	r4, r1
 8006efa:	4617      	mov	r7, r2
 8006efc:	461e      	mov	r6, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006efe:	682a      	ldr	r2, [r5, #0]
 8006f00:	6813      	ldr	r3, [r2, #0]
 8006f02:	ea34 0303 	bics.w	r3, r4, r3
 8006f06:	d101      	bne.n	8006f0c <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 8006f08:	2000      	movs	r0, #0
 8006f0a:	e021      	b.n	8006f50 <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>
    if (Timeout != HAL_MAX_DELAY)
 8006f0c:	1c70      	adds	r0, r6, #1
 8006f0e:	d0f7      	beq.n	8006f00 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006f10:	f7fd f8d0 	bl	80040b4 <HAL_GetTick>
 8006f14:	1bc0      	subs	r0, r0, r7
 8006f16:	4286      	cmp	r6, r0
 8006f18:	d31c      	bcc.n	8006f54 <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
 8006f1a:	b1de      	cbz	r6, 8006f54 <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8006f1c:	682b      	ldr	r3, [r5, #0]
 8006f1e:	68da      	ldr	r2, [r3, #12]
 8006f20:	0751      	lsls	r1, r2, #29
 8006f22:	d5ec      	bpl.n	8006efe <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 8006f24:	2c80      	cmp	r4, #128	@ 0x80
 8006f26:	d0ea      	beq.n	8006efe <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 8006f28:	2c40      	cmp	r4, #64	@ 0x40
 8006f2a:	d0e8      	beq.n	8006efe <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8006f2c:	681a      	ldr	r2, [r3, #0]
 8006f2e:	0712      	lsls	r2, r2, #28
 8006f30:	d5e5      	bpl.n	8006efe <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
          __HAL_UART_CLEAR_OREFLAG(huart);
 8006f32:	2400      	movs	r4, #0
 8006f34:	9401      	str	r4, [sp, #4]
 8006f36:	681a      	ldr	r2, [r3, #0]
 8006f38:	9201      	str	r2, [sp, #4]
 8006f3a:	685b      	ldr	r3, [r3, #4]
 8006f3c:	9301      	str	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8006f3e:	4628      	mov	r0, r5
          __HAL_UART_CLEAR_OREFLAG(huart);
 8006f40:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8006f42:	f7ff ff4b 	bl	8006ddc <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8006f46:	2308      	movs	r3, #8
 8006f48:	646b      	str	r3, [r5, #68]	@ 0x44
          __HAL_UNLOCK(huart);
 8006f4a:	f885 4040 	strb.w	r4, [r5, #64]	@ 0x40
          return HAL_ERROR;
 8006f4e:	2001      	movs	r0, #1
}
 8006f50:	b003      	add	sp, #12
 8006f52:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
 8006f54:	2003      	movs	r0, #3
 8006f56:	e7fb      	b.n	8006f50 <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>

08006f58 <HAL_UART_Init>:
{
 8006f58:	b510      	push	{r4, lr}
  if (huart == NULL)
 8006f5a:	4604      	mov	r4, r0
 8006f5c:	b348      	cbz	r0, 8006fb2 <HAL_UART_Init+0x5a>
  if (huart->gState == HAL_UART_STATE_RESET)
 8006f5e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8006f62:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006f66:	b91b      	cbnz	r3, 8006f70 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8006f68:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_UART_MspInit(huart);
 8006f6c:	f7fb fd32 	bl	80029d4 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8006f70:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8006f72:	2324      	movs	r3, #36	@ 0x24
 8006f74:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UART_DISABLE(huart);
 8006f78:	68d3      	ldr	r3, [r2, #12]
 8006f7a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006f7e:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8006f80:	4620      	mov	r0, r4
 8006f82:	f7ff ff59 	bl	8006e38 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006f86:	6823      	ldr	r3, [r4, #0]
 8006f88:	691a      	ldr	r2, [r3, #16]
 8006f8a:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8006f8e:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006f90:	695a      	ldr	r2, [r3, #20]
 8006f92:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8006f96:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8006f98:	68da      	ldr	r2, [r3, #12]
 8006f9a:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006f9e:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006fa0:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8006fa2:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006fa4:	6460      	str	r0, [r4, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 8006fa6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8006faa:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8006fae:	6360      	str	r0, [r4, #52]	@ 0x34
}
 8006fb0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006fb2:	2001      	movs	r0, #1
 8006fb4:	e7fc      	b.n	8006fb0 <HAL_UART_Init+0x58>

08006fb6 <HAL_UART_Transmit>:
{
 8006fb6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006fba:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8006fbc:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8006fc0:	2b20      	cmp	r3, #32
{
 8006fc2:	4604      	mov	r4, r0
 8006fc4:	460e      	mov	r6, r1
 8006fc6:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8006fc8:	d13f      	bne.n	800704a <HAL_UART_Transmit+0x94>
    if ((pData == NULL) || (Size == 0U))
 8006fca:	2900      	cmp	r1, #0
 8006fcc:	d03f      	beq.n	800704e <HAL_UART_Transmit+0x98>
 8006fce:	2a00      	cmp	r2, #0
 8006fd0:	d03d      	beq.n	800704e <HAL_UART_Transmit+0x98>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006fd2:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006fd4:	2500      	movs	r5, #0
 8006fd6:	6445      	str	r5, [r0, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006fd8:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
    tickstart = HAL_GetTick();
 8006fdc:	f7fd f86a 	bl	80040b4 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006fe0:	68a3      	ldr	r3, [r4, #8]
    huart->TxXferSize = Size;
 8006fe2:	84a7      	strh	r7, [r4, #36]	@ 0x24
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006fe4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    tickstart = HAL_GetTick();
 8006fe8:	4681      	mov	r9, r0
    huart->TxXferCount = Size;
 8006fea:	84e7      	strh	r7, [r4, #38]	@ 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006fec:	d103      	bne.n	8006ff6 <HAL_UART_Transmit+0x40>
 8006fee:	6923      	ldr	r3, [r4, #16]
 8006ff0:	b90b      	cbnz	r3, 8006ff6 <HAL_UART_Transmit+0x40>
      pdata16bits = (const uint16_t *) pData;
 8006ff2:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8006ff4:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 8006ff6:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 8006ff8:	b29b      	uxth	r3, r3
 8006ffa:	b953      	cbnz	r3, 8007012 <HAL_UART_Transmit+0x5c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8006ffc:	4643      	mov	r3, r8
 8006ffe:	464a      	mov	r2, r9
 8007000:	2140      	movs	r1, #64	@ 0x40
 8007002:	4620      	mov	r0, r4
 8007004:	f7ff ff76 	bl	8006ef4 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8007008:	2320      	movs	r3, #32
 800700a:	b950      	cbnz	r0, 8007022 <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 800700c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    return HAL_OK;
 8007010:	e00a      	b.n	8007028 <HAL_UART_Transmit+0x72>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007012:	4643      	mov	r3, r8
 8007014:	464a      	mov	r2, r9
 8007016:	2180      	movs	r1, #128	@ 0x80
 8007018:	4620      	mov	r0, r4
 800701a:	f7ff ff6b 	bl	8006ef4 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800701e:	b128      	cbz	r0, 800702c <HAL_UART_Transmit+0x76>
        huart->gState = HAL_UART_STATE_READY;
 8007020:	2320      	movs	r3, #32
 8007022:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        return HAL_TIMEOUT;
 8007026:	2003      	movs	r0, #3
}
 8007028:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 800702c:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 800702e:	b94e      	cbnz	r6, 8007044 <HAL_UART_Transmit+0x8e>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007030:	f835 3b02 	ldrh.w	r3, [r5], #2
 8007034:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8007038:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 800703a:	8ce1      	ldrh	r1, [r4, #38]	@ 0x26
 800703c:	3901      	subs	r1, #1
 800703e:	b289      	uxth	r1, r1
 8007040:	84e1      	strh	r1, [r4, #38]	@ 0x26
 8007042:	e7d8      	b.n	8006ff6 <HAL_UART_Transmit+0x40>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8007044:	f816 3b01 	ldrb.w	r3, [r6], #1
 8007048:	e7f6      	b.n	8007038 <HAL_UART_Transmit+0x82>
    return HAL_BUSY;
 800704a:	2002      	movs	r0, #2
 800704c:	e7ec      	b.n	8007028 <HAL_UART_Transmit+0x72>
      return  HAL_ERROR;
 800704e:	2001      	movs	r0, #1
 8007050:	e7ea      	b.n	8007028 <HAL_UART_Transmit+0x72>

08007052 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
 8007052:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007056:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 800705a:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 800705e:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8007062:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8007066:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800706a:	6809      	ldr	r1, [r1, #0]
 800706c:	ea43 0308 	orr.w	r3, r3, r8
 8007070:	b981      	cbnz	r1, 8007094 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007072:	ea43 030e 	orr.w	r3, r3, lr
 8007076:	4313      	orrs	r3, r2
 8007078:	ea43 030c 	orr.w	r3, r3, ip
 800707c:	433b      	orrs	r3, r7
 800707e:	6801      	ldr	r1, [r0, #0]
 8007080:	4333      	orrs	r3, r6
 8007082:	432b      	orrs	r3, r5
 8007084:	4323      	orrs	r3, r4
 8007086:	f36f 010e 	bfc	r1, #0, #15
 800708a:	430b      	orrs	r3, r1
 800708c:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800708e:	2000      	movs	r0, #0
 8007090:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007094:	6801      	ldr	r1, [r0, #0]
 8007096:	ea43 030e 	orr.w	r3, r3, lr
 800709a:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 800709e:	430b      	orrs	r3, r1
 80070a0:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 80070a2:	ea42 030c 	orr.w	r3, r2, ip
 80070a6:	6841      	ldr	r1, [r0, #4]
 80070a8:	433b      	orrs	r3, r7
 80070aa:	4333      	orrs	r3, r6
 80070ac:	432b      	orrs	r3, r5
 80070ae:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 80070b2:	4323      	orrs	r3, r4
 80070b4:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 80070b8:	4313      	orrs	r3, r2
 80070ba:	6043      	str	r3, [r0, #4]
 80070bc:	e7e7      	b.n	800708e <FMC_SDRAM_Init+0x3c>

080070be <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80070be:	68cb      	ldr	r3, [r1, #12]
 80070c0:	f103 3cff 	add.w	ip, r3, #4294967295
 80070c4:	694b      	ldr	r3, [r1, #20]
{
 80070c6:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80070c8:	684c      	ldr	r4, [r1, #4]
 80070ca:	688f      	ldr	r7, [r1, #8]
 80070cc:	690e      	ldr	r6, [r1, #16]
 80070ce:	698d      	ldr	r5, [r1, #24]
 80070d0:	6809      	ldr	r1, [r1, #0]
 80070d2:	3b01      	subs	r3, #1
 80070d4:	051b      	lsls	r3, r3, #20
 80070d6:	3c01      	subs	r4, #1
 80070d8:	3f01      	subs	r7, #1
 80070da:	3e01      	subs	r6, #1
 80070dc:	3d01      	subs	r5, #1
 80070de:	0124      	lsls	r4, r4, #4
 80070e0:	023f      	lsls	r7, r7, #8
 80070e2:	0436      	lsls	r6, r6, #16
 80070e4:	062d      	lsls	r5, r5, #24
 80070e6:	3901      	subs	r1, #1
 80070e8:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 80070ec:	b95a      	cbnz	r2, 8007106 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80070ee:	430b      	orrs	r3, r1
 80070f0:	4323      	orrs	r3, r4
 80070f2:	6882      	ldr	r2, [r0, #8]
 80070f4:	433b      	orrs	r3, r7
 80070f6:	4333      	orrs	r3, r6
 80070f8:	432b      	orrs	r3, r5
 80070fa:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80070fe:	4313      	orrs	r3, r2
 8007100:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8007102:	2000      	movs	r0, #0
 8007104:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007106:	6882      	ldr	r2, [r0, #8]
 8007108:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800710c:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8007110:	4313      	orrs	r3, r2
 8007112:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007114:	ea44 0307 	orr.w	r3, r4, r7
 8007118:	68c2      	ldr	r2, [r0, #12]
 800711a:	430b      	orrs	r3, r1
 800711c:	4333      	orrs	r3, r6
 800711e:	432b      	orrs	r3, r5
 8007120:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007124:	4313      	orrs	r3, r2
 8007126:	60c3      	str	r3, [r0, #12]
 8007128:	e7eb      	b.n	8007102 <FMC_SDRAM_Timing_Init+0x44>

0800712a <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800712a:	b570      	push	{r4, r5, r6, lr}
 800712c:	4604      	mov	r4, r0
 800712e:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007130:	6902      	ldr	r2, [r0, #16]
 8007132:	e9d1 3000 	ldrd	r3, r0, [r1]
 8007136:	4303      	orrs	r3, r0
 8007138:	68c8      	ldr	r0, [r1, #12]
 800713a:	f36f 0215 	bfc	r2, #0, #22
 800713e:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8007142:	4313      	orrs	r3, r2
 8007144:	688a      	ldr	r2, [r1, #8]
 8007146:	3a01      	subs	r2, #1
 8007148:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800714c:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800714e:	f7fc ffb1 	bl	80040b4 <HAL_GetTick>
 8007152:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007154:	69a0      	ldr	r0, [r4, #24]
 8007156:	f010 0020 	ands.w	r0, r0, #32
 800715a:	d003      	beq.n	8007164 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800715c:	1c6b      	adds	r3, r5, #1
 800715e:	d0f9      	beq.n	8007154 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007160:	b90d      	cbnz	r5, 8007166 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 8007162:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 8007164:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007166:	f7fc ffa5 	bl	80040b4 <HAL_GetTick>
 800716a:	1b80      	subs	r0, r0, r6
 800716c:	42a8      	cmp	r0, r5
 800716e:	d9f1      	bls.n	8007154 <FMC_SDRAM_SendCommand+0x2a>
 8007170:	e7f7      	b.n	8007162 <FMC_SDRAM_SendCommand+0x38>

08007172 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8007172:	6943      	ldr	r3, [r0, #20]
 8007174:	f36f 034d 	bfc	r3, #1, #13
 8007178:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 800717c:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 800717e:	2000      	movs	r0, #0
 8007180:	4770      	bx	lr

08007182 <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 8007182:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8007184:	2300      	movs	r3, #0
{
 8007186:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8007188:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 800718a:	9b01      	ldr	r3, [sp, #4]
 800718c:	3301      	adds	r3, #1
 800718e:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8007190:	9b01      	ldr	r3, [sp, #4]
 8007192:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007196:	d81a      	bhi.n	80071ce <USB_CoreReset+0x4c>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8007198:	6913      	ldr	r3, [r2, #16]
 800719a:	2b00      	cmp	r3, #0
 800719c:	daf5      	bge.n	800718a <USB_CoreReset+0x8>

  count = 10U;
 800719e:	230a      	movs	r3, #10

  /* few cycles before setting core reset */
  while (count > 0U)
  {
    count--;
 80071a0:	9301      	str	r3, [sp, #4]
  while (count > 0U)
 80071a2:	9b01      	ldr	r3, [sp, #4]
 80071a4:	b983      	cbnz	r3, 80071c8 <USB_CoreReset+0x46>
  }

  /* Core Soft Reset */
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 80071a6:	6913      	ldr	r3, [r2, #16]
 80071a8:	f043 0301 	orr.w	r3, r3, #1
 80071ac:	6113      	str	r3, [r2, #16]

  do
  {
    count++;
 80071ae:	9b01      	ldr	r3, [sp, #4]
 80071b0:	3301      	adds	r3, #1
 80071b2:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 80071b4:	9b01      	ldr	r3, [sp, #4]
 80071b6:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80071ba:	d808      	bhi.n	80071ce <USB_CoreReset+0x4c>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 80071bc:	6910      	ldr	r0, [r2, #16]
 80071be:	f010 0001 	ands.w	r0, r0, #1
 80071c2:	d1f4      	bne.n	80071ae <USB_CoreReset+0x2c>

  return HAL_OK;
}
 80071c4:	b002      	add	sp, #8
 80071c6:	4770      	bx	lr
    count--;
 80071c8:	9b01      	ldr	r3, [sp, #4]
 80071ca:	3b01      	subs	r3, #1
 80071cc:	e7e8      	b.n	80071a0 <USB_CoreReset+0x1e>
      return HAL_TIMEOUT;
 80071ce:	2003      	movs	r0, #3
 80071d0:	e7f8      	b.n	80071c4 <USB_CoreReset+0x42>

080071d2 <USB_CoreInit>:
{
 80071d2:	b084      	sub	sp, #16
 80071d4:	b538      	push	{r3, r4, r5, lr}
 80071d6:	ad05      	add	r5, sp, #20
 80071d8:	e885 000e 	stmia.w	r5, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80071dc:	f89d 3019 	ldrb.w	r3, [sp, #25]
 80071e0:	2b01      	cmp	r3, #1
{
 80071e2:	4604      	mov	r4, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80071e4:	d127      	bne.n	8007236 <USB_CoreInit+0x64>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 80071e6:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80071e8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80071ec:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 80071ee:	68c3      	ldr	r3, [r0, #12]
 80071f0:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 80071f4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80071f8:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 80071fa:	68c3      	ldr	r3, [r0, #12]
 80071fc:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007200:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 8007202:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8007206:	2b01      	cmp	r3, #1
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 8007208:	bf02      	ittt	eq
 800720a:	68c3      	ldreq	r3, [r0, #12]
 800720c:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
 8007210:	60c3      	streq	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 8007212:	f7ff ffb6 	bl	8007182 <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 8007216:	f89d 3016 	ldrb.w	r3, [sp, #22]
 800721a:	2b01      	cmp	r3, #1
 800721c:	d107      	bne.n	800722e <USB_CoreInit+0x5c>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 800721e:	68a3      	ldr	r3, [r4, #8]
 8007220:	f043 0306 	orr.w	r3, r3, #6
 8007224:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 8007226:	68a3      	ldr	r3, [r4, #8]
 8007228:	f043 0320 	orr.w	r3, r3, #32
 800722c:	60a3      	str	r3, [r4, #8]
}
 800722e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007232:	b004      	add	sp, #16
 8007234:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 8007236:	68c3      	ldr	r3, [r0, #12]
 8007238:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800723c:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 800723e:	f7ff ffa0 	bl	8007182 <USB_CoreReset>
    if (cfg.battery_charging_enable == 0U)
 8007242:	f89d 301d 	ldrb.w	r3, [sp, #29]
 8007246:	b923      	cbnz	r3, 8007252 <USB_CoreInit+0x80>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8007248:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800724a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 800724e:	63a3      	str	r3, [r4, #56]	@ 0x38
 8007250:	e7e1      	b.n	8007216 <USB_CoreInit+0x44>
 8007252:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007254:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007258:	e7f9      	b.n	800724e <USB_CoreInit+0x7c>
	...

0800725c <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 800725c:	2a02      	cmp	r2, #2
 800725e:	d14a      	bne.n	80072f6 <USB_SetTurnaroundTime+0x9a>
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 8007260:	4b27      	ldr	r3, [pc, #156]	@ (8007300 <USB_SetTurnaroundTime+0xa4>)
 8007262:	4a28      	ldr	r2, [pc, #160]	@ (8007304 <USB_SetTurnaroundTime+0xa8>)
 8007264:	440b      	add	r3, r1
 8007266:	4293      	cmp	r3, r2
 8007268:	d939      	bls.n	80072de <USB_SetTurnaroundTime+0x82>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 800726a:	4b27      	ldr	r3, [pc, #156]	@ (8007308 <USB_SetTurnaroundTime+0xac>)
 800726c:	4a27      	ldr	r2, [pc, #156]	@ (800730c <USB_SetTurnaroundTime+0xb0>)
 800726e:	440b      	add	r3, r1
 8007270:	4293      	cmp	r3, r2
 8007272:	d936      	bls.n	80072e2 <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 8007274:	4a26      	ldr	r2, [pc, #152]	@ (8007310 <USB_SetTurnaroundTime+0xb4>)
 8007276:	f5a1 0374 	sub.w	r3, r1, #15990784	@ 0xf40000
 800727a:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
 800727e:	4293      	cmp	r3, r2
 8007280:	d931      	bls.n	80072e6 <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 8007282:	4a24      	ldr	r2, [pc, #144]	@ (8007314 <USB_SetTurnaroundTime+0xb8>)
 8007284:	f1a1 7383 	sub.w	r3, r1, #17170432	@ 0x1060000
 8007288:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
 800728c:	4293      	cmp	r3, r2
 800728e:	d32c      	bcc.n	80072ea <USB_SetTurnaroundTime+0x8e>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 8007290:	4b21      	ldr	r3, [pc, #132]	@ (8007318 <USB_SetTurnaroundTime+0xbc>)
 8007292:	4a22      	ldr	r2, [pc, #136]	@ (800731c <USB_SetTurnaroundTime+0xc0>)
 8007294:	440b      	add	r3, r1
 8007296:	4293      	cmp	r3, r2
 8007298:	d929      	bls.n	80072ee <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 800729a:	4b21      	ldr	r3, [pc, #132]	@ (8007320 <USB_SetTurnaroundTime+0xc4>)
 800729c:	4a21      	ldr	r2, [pc, #132]	@ (8007324 <USB_SetTurnaroundTime+0xc8>)
 800729e:	440b      	add	r3, r1
 80072a0:	4293      	cmp	r3, r2
 80072a2:	d326      	bcc.n	80072f2 <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 80072a4:	4b20      	ldr	r3, [pc, #128]	@ (8007328 <USB_SetTurnaroundTime+0xcc>)
 80072a6:	4a21      	ldr	r2, [pc, #132]	@ (800732c <USB_SetTurnaroundTime+0xd0>)
 80072a8:	440b      	add	r3, r1
 80072aa:	4293      	cmp	r3, r2
 80072ac:	d323      	bcc.n	80072f6 <USB_SetTurnaroundTime+0x9a>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 80072ae:	4a20      	ldr	r2, [pc, #128]	@ (8007330 <USB_SetTurnaroundTime+0xd4>)
 80072b0:	f1a1 73b7 	sub.w	r3, r1, #23986176	@ 0x16e0000
 80072b4:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
 80072b8:	4293      	cmp	r3, r2
 80072ba:	d31e      	bcc.n	80072fa <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 80072bc:	4b1d      	ldr	r3, [pc, #116]	@ (8007334 <USB_SetTurnaroundTime+0xd8>)
      UsbTrd = 0x7U;
 80072be:	4a1e      	ldr	r2, [pc, #120]	@ (8007338 <USB_SetTurnaroundTime+0xdc>)
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 80072c0:	440b      	add	r3, r1
      UsbTrd = 0x7U;
 80072c2:	4293      	cmp	r3, r2
 80072c4:	bf2c      	ite	cs
 80072c6:	2306      	movcs	r3, #6
 80072c8:	2307      	movcc	r3, #7
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 80072ca:	68c2      	ldr	r2, [r0, #12]
 80072cc:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
 80072d0:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 80072d2:	68c2      	ldr	r2, [r0, #12]
 80072d4:	ea42 2383 	orr.w	r3, r2, r3, lsl #10
 80072d8:	60c3      	str	r3, [r0, #12]
}
 80072da:	2000      	movs	r0, #0
 80072dc:	4770      	bx	lr
      UsbTrd = 0xFU;
 80072de:	230f      	movs	r3, #15
 80072e0:	e7f3      	b.n	80072ca <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xEU;
 80072e2:	230e      	movs	r3, #14
 80072e4:	e7f1      	b.n	80072ca <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xDU;
 80072e6:	230d      	movs	r3, #13
 80072e8:	e7ef      	b.n	80072ca <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xCU;
 80072ea:	230c      	movs	r3, #12
 80072ec:	e7ed      	b.n	80072ca <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xBU;
 80072ee:	230b      	movs	r3, #11
 80072f0:	e7eb      	b.n	80072ca <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xAU;
 80072f2:	230a      	movs	r3, #10
 80072f4:	e7e9      	b.n	80072ca <USB_SetTurnaroundTime+0x6e>
    UsbTrd = USBD_HS_TRDT_VALUE;
 80072f6:	2309      	movs	r3, #9
 80072f8:	e7e7      	b.n	80072ca <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0x8U;
 80072fa:	2308      	movs	r3, #8
 80072fc:	e7e5      	b.n	80072ca <USB_SetTurnaroundTime+0x6e>
 80072fe:	bf00      	nop
 8007300:	ff275340 	.word	0xff275340
 8007304:	000c34ff 	.word	0x000c34ff
 8007308:	ff1b1e40 	.word	0xff1b1e40
 800730c:	000f423f 	.word	0x000f423f
 8007310:	00124f7f 	.word	0x00124f7f
 8007314:	0013d620 	.word	0x0013d620
 8007318:	fee5b660 	.word	0xfee5b660
 800731c:	0016e35f 	.word	0x0016e35f
 8007320:	feced300 	.word	0xfeced300
 8007324:	001b7740 	.word	0x001b7740
 8007328:	feb35bc0 	.word	0xfeb35bc0
 800732c:	002191c0 	.word	0x002191c0
 8007330:	00387520 	.word	0x00387520
 8007334:	fe5954e0 	.word	0xfe5954e0
 8007338:	00419ce0 	.word	0x00419ce0

0800733c <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 800733c:	6883      	ldr	r3, [r0, #8]
 800733e:	f043 0301 	orr.w	r3, r3, #1
 8007342:	6083      	str	r3, [r0, #8]
}
 8007344:	2000      	movs	r0, #0
 8007346:	4770      	bx	lr

08007348 <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8007348:	6883      	ldr	r3, [r0, #8]
 800734a:	f023 0301 	bic.w	r3, r3, #1
 800734e:	6083      	str	r3, [r0, #8]
}
 8007350:	2000      	movs	r0, #0
 8007352:	4770      	bx	lr

08007354 <USB_SetCurrentMode>:
{
 8007354:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8007356:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8007358:	2901      	cmp	r1, #1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 800735a:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
{
 800735e:	4605      	mov	r5, r0
 8007360:	460c      	mov	r4, r1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8007362:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8007364:	d114      	bne.n	8007390 <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 8007366:	68c3      	ldr	r3, [r0, #12]
 8007368:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 800736c:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 800736e:	2400      	movs	r4, #0
      HAL_Delay(10U);
 8007370:	200a      	movs	r0, #10
 8007372:	f7fc fea5 	bl	80040c0 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8007376:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8007378:	07d9      	lsls	r1, r3, #31
      ms += 10U;
 800737a:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 800737e:	d402      	bmi.n	8007386 <USB_SetCurrentMode+0x32>
 8007380:	2cc8      	cmp	r4, #200	@ 0xc8
 8007382:	d1f5      	bne.n	8007370 <USB_SetCurrentMode+0x1c>
      ms += 10U;
 8007384:	24c8      	movs	r4, #200	@ 0xc8
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 8007386:	f1a4 03c8 	sub.w	r3, r4, #200	@ 0xc8
 800738a:	4258      	negs	r0, r3
 800738c:	4158      	adcs	r0, r3
}
 800738e:	bd38      	pop	{r3, r4, r5, pc}
  else if (mode == USB_DEVICE_MODE)
 8007390:	b971      	cbnz	r1, 80073b0 <USB_SetCurrentMode+0x5c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8007392:	68c3      	ldr	r3, [r0, #12]
 8007394:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8007398:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
 800739a:	200a      	movs	r0, #10
 800739c:	f7fc fe90 	bl	80040c0 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 80073a0:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 80073a2:	07da      	lsls	r2, r3, #31
      ms += 10U;
 80073a4:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 80073a8:	d5ed      	bpl.n	8007386 <USB_SetCurrentMode+0x32>
 80073aa:	2cc8      	cmp	r4, #200	@ 0xc8
 80073ac:	d1f5      	bne.n	800739a <USB_SetCurrentMode+0x46>
 80073ae:	e7e9      	b.n	8007384 <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 80073b0:	2001      	movs	r0, #1
 80073b2:	e7ec      	b.n	800738e <USB_SetCurrentMode+0x3a>

080073b4 <USB_FlushTxFifo>:
{
 80073b4:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 80073b6:	2300      	movs	r3, #0
{
 80073b8:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 80073ba:	9301      	str	r3, [sp, #4]
    count++;
 80073bc:	9b01      	ldr	r3, [sp, #4]
 80073be:	3301      	adds	r3, #1
 80073c0:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 80073c2:	9b01      	ldr	r3, [sp, #4]
 80073c4:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80073c8:	d815      	bhi.n	80073f6 <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 80073ca:	6913      	ldr	r3, [r2, #16]
 80073cc:	2b00      	cmp	r3, #0
 80073ce:	daf5      	bge.n	80073bc <USB_FlushTxFifo+0x8>
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 80073d0:	0189      	lsls	r1, r1, #6
  count = 0U;
 80073d2:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 80073d4:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
 80073d8:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 80073da:	6111      	str	r1, [r2, #16]
    count++;
 80073dc:	9b01      	ldr	r3, [sp, #4]
 80073de:	3301      	adds	r3, #1
 80073e0:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 80073e2:	9b01      	ldr	r3, [sp, #4]
 80073e4:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80073e8:	d805      	bhi.n	80073f6 <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 80073ea:	6910      	ldr	r0, [r2, #16]
 80073ec:	f010 0020 	ands.w	r0, r0, #32
 80073f0:	d1f4      	bne.n	80073dc <USB_FlushTxFifo+0x28>
}
 80073f2:	b002      	add	sp, #8
 80073f4:	4770      	bx	lr
      return HAL_TIMEOUT;
 80073f6:	2003      	movs	r0, #3
 80073f8:	e7fb      	b.n	80073f2 <USB_FlushTxFifo+0x3e>

080073fa <USB_FlushRxFifo>:
{
 80073fa:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 80073fc:	2300      	movs	r3, #0
{
 80073fe:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8007400:	9301      	str	r3, [sp, #4]
    count++;
 8007402:	9b01      	ldr	r3, [sp, #4]
 8007404:	3301      	adds	r3, #1
 8007406:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8007408:	9b01      	ldr	r3, [sp, #4]
 800740a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800740e:	d813      	bhi.n	8007438 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8007410:	6913      	ldr	r3, [r2, #16]
 8007412:	2b00      	cmp	r3, #0
 8007414:	daf5      	bge.n	8007402 <USB_FlushRxFifo+0x8>
  count = 0U;
 8007416:	2300      	movs	r3, #0
 8007418:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 800741a:	2310      	movs	r3, #16
 800741c:	6113      	str	r3, [r2, #16]
    count++;
 800741e:	9b01      	ldr	r3, [sp, #4]
 8007420:	3301      	adds	r3, #1
 8007422:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8007424:	9b01      	ldr	r3, [sp, #4]
 8007426:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800742a:	d805      	bhi.n	8007438 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 800742c:	6910      	ldr	r0, [r2, #16]
 800742e:	f010 0010 	ands.w	r0, r0, #16
 8007432:	d1f4      	bne.n	800741e <USB_FlushRxFifo+0x24>
}
 8007434:	b002      	add	sp, #8
 8007436:	4770      	bx	lr
      return HAL_TIMEOUT;
 8007438:	2003      	movs	r0, #3
 800743a:	e7fb      	b.n	8007434 <USB_FlushRxFifo+0x3a>

0800743c <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 800743c:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007440:	4319      	orrs	r1, r3
 8007442:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8007446:	2000      	movs	r0, #0
 8007448:	4770      	bx	lr
	...

0800744c <USB_DevInit>:
{
 800744c:	b084      	sub	sp, #16
 800744e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007452:	4604      	mov	r4, r0
 8007454:	a809      	add	r0, sp, #36	@ 0x24
 8007456:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
 800745a:	2300      	movs	r3, #0
 800745c:	f89d 6024 	ldrb.w	r6, [sp, #36]	@ 0x24
 8007460:	f89d 502e 	ldrb.w	r5, [sp, #46]	@ 0x2e
    USBx->DIEPTXF[i] = 0U;
 8007464:	4619      	mov	r1, r3
 8007466:	f103 0240 	add.w	r2, r3, #64	@ 0x40
 800746a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
 800746e:	3301      	adds	r3, #1
 8007470:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
 8007472:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 8007474:	d1f7      	bne.n	8007466 <USB_DevInit+0x1a>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007476:	f504 6700 	add.w	r7, r4, #2048	@ 0x800
  if (cfg.vbus_sensing_enable == 0U)
 800747a:	2d00      	cmp	r5, #0
 800747c:	d16c      	bne.n	8007558 <USB_DevInit+0x10c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800747e:	687b      	ldr	r3, [r7, #4]
 8007480:	f043 0302 	orr.w	r3, r3, #2
 8007484:	607b      	str	r3, [r7, #4]
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 8007486:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007488:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800748c:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 800748e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007490:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8007494:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 8007496:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007498:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 800749c:	63a3      	str	r3, [r4, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
 800749e:	2300      	movs	r3, #0
 80074a0:	f8c4 3e00 	str.w	r3, [r4, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80074a4:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 80074a8:	2b01      	cmp	r3, #1
 80074aa:	d15f      	bne.n	800756c <USB_DevInit+0x120>
    if (cfg.speed == USBD_HS_SPEED)
 80074ac:	f89d 1027 	ldrb.w	r1, [sp, #39]	@ 0x27
 80074b0:	2900      	cmp	r1, #0
 80074b2:	d159      	bne.n	8007568 <USB_DevInit+0x11c>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 80074b4:	4620      	mov	r0, r4
 80074b6:	f7ff ffc1 	bl	800743c <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 80074ba:	2110      	movs	r1, #16
 80074bc:	4620      	mov	r0, r4
 80074be:	f7ff ff79 	bl	80073b4 <USB_FlushTxFifo>
 80074c2:	4601      	mov	r1, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 80074c4:	4620      	mov	r0, r4
 80074c6:	f7ff ff98 	bl	80073fa <USB_FlushRxFifo>
 80074ca:	4308      	orrs	r0, r1
 80074cc:	b2c0      	uxtb	r0, r0
  USBx_DEVICE->DIEPMSK = 0U;
 80074ce:	2300      	movs	r3, #0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 80074d0:	3800      	subs	r0, #0
  USBx_DEVICE->DIEPMSK = 0U;
 80074d2:	613b      	str	r3, [r7, #16]
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 80074d4:	bf18      	it	ne
 80074d6:	2001      	movne	r0, #1
  USBx_DEVICE->DOEPMSK = 0U;
 80074d8:	617b      	str	r3, [r7, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 80074da:	f504 6210 	add.w	r2, r4, #2304	@ 0x900
 80074de:	61fb      	str	r3, [r7, #28]
      USBx_INEP(i)->DIEPCTL = 0U;
 80074e0:	4619      	mov	r1, r3
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 80074e2:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 80074e6:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 80074ea:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80074ee:	429e      	cmp	r6, r3
 80074f0:	d83e      	bhi.n	8007570 <USB_DevInit+0x124>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80074f2:	2200      	movs	r2, #0
 80074f4:	f504 6330 	add.w	r3, r4, #2816	@ 0xb00
      USBx_OUTEP(i)->DOEPCTL = 0U;
 80074f8:	4611      	mov	r1, r2
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 80074fa:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 80074fe:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8007502:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8007506:	4296      	cmp	r6, r2
 8007508:	d845      	bhi.n	8007596 <USB_DevInit+0x14a>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 800750a:	693b      	ldr	r3, [r7, #16]
 800750c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007510:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
 8007512:	2300      	movs	r3, #0
 8007514:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 8007516:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 800751a:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 800751c:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
 8007520:	b91b      	cbnz	r3, 800752a <USB_DevInit+0xde>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8007522:	69a3      	ldr	r3, [r4, #24]
 8007524:	f043 0310 	orr.w	r3, r3, #16
 8007528:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 800752a:	69a2      	ldr	r2, [r4, #24]
 800752c:	4b23      	ldr	r3, [pc, #140]	@ (80075bc <USB_DevInit+0x170>)
 800752e:	4313      	orrs	r3, r2
 8007530:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 8007532:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 8007536:	b11b      	cbz	r3, 8007540 <USB_DevInit+0xf4>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 8007538:	69a3      	ldr	r3, [r4, #24]
 800753a:	f043 0308 	orr.w	r3, r3, #8
 800753e:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 8007540:	2d01      	cmp	r5, #1
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 8007542:	bf01      	itttt	eq
 8007544:	69a3      	ldreq	r3, [r4, #24]
 8007546:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
 800754a:	f043 0304 	orreq.w	r3, r3, #4
 800754e:	61a3      	streq	r3, [r4, #24]
}
 8007550:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007554:	b004      	add	sp, #16
 8007556:	4770      	bx	lr
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 8007558:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800755a:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800755e:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8007560:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007562:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8007566:	e799      	b.n	800749c <USB_DevInit+0x50>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 8007568:	4619      	mov	r1, r3
 800756a:	e7a3      	b.n	80074b4 <USB_DevInit+0x68>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 800756c:	2103      	movs	r1, #3
 800756e:	e7a1      	b.n	80074b4 <USB_DevInit+0x68>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007570:	f8d2 9000 	ldr.w	r9, [r2]
 8007574:	f1b9 0f00 	cmp.w	r9, #0
 8007578:	da0b      	bge.n	8007592 <USB_DevInit+0x146>
      if (i == 0U)
 800757a:	b93b      	cbnz	r3, 800758c <USB_DevInit+0x140>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 800757c:	f8c2 e000 	str.w	lr, [r2]
    USBx_INEP(i)->DIEPTSIZ = 0U;
 8007580:	6111      	str	r1, [r2, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8007582:	3301      	adds	r3, #1
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8007584:	f8c2 8008 	str.w	r8, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8007588:	3220      	adds	r2, #32
 800758a:	e7b0      	b.n	80074ee <USB_DevInit+0xa2>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 800758c:	f8c2 c000 	str.w	ip, [r2]
 8007590:	e7f6      	b.n	8007580 <USB_DevInit+0x134>
      USBx_INEP(i)->DIEPCTL = 0U;
 8007592:	6011      	str	r1, [r2, #0]
 8007594:	e7f4      	b.n	8007580 <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007596:	f8d3 9000 	ldr.w	r9, [r3]
 800759a:	f1b9 0f00 	cmp.w	r9, #0
 800759e:	da0b      	bge.n	80075b8 <USB_DevInit+0x16c>
      if (i == 0U)
 80075a0:	b93a      	cbnz	r2, 80075b2 <USB_DevInit+0x166>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 80075a2:	f8c3 e000 	str.w	lr, [r3]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 80075a6:	6119      	str	r1, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80075a8:	3201      	adds	r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 80075aa:	f8c3 8008 	str.w	r8, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80075ae:	3320      	adds	r3, #32
 80075b0:	e7a9      	b.n	8007506 <USB_DevInit+0xba>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 80075b2:	f8c3 c000 	str.w	ip, [r3]
 80075b6:	e7f6      	b.n	80075a6 <USB_DevInit+0x15a>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 80075b8:	6019      	str	r1, [r3, #0]
 80075ba:	e7f4      	b.n	80075a6 <USB_DevInit+0x15a>
 80075bc:	803c3800 	.word	0x803c3800

080075c0 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 80075c0:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 80075c4:	f013 0006 	ands.w	r0, r3, #6
 80075c8:	d004      	beq.n	80075d4 <USB_GetDevSpeed+0x14>
    speed = 0xFU;
 80075ca:	f013 0f02 	tst.w	r3, #2
 80075ce:	bf14      	ite	ne
 80075d0:	2002      	movne	r0, #2
 80075d2:	200f      	moveq	r0, #15
}
 80075d4:	4770      	bx	lr

080075d6 <USB_ActivateEndpoint>:
{
 80075d6:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
 80075d8:	780c      	ldrb	r4, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 80075da:	2201      	movs	r2, #1
 80075dc:	f004 050f 	and.w	r5, r4, #15
 80075e0:	40aa      	lsls	r2, r5
  if (ep->is_in == 1U)
 80075e2:	784d      	ldrb	r5, [r1, #1]
 80075e4:	2d01      	cmp	r5, #1
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 80075e6:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 80075ea:	eb00 1044 	add.w	r0, r0, r4, lsl #5
  if (ep->is_in == 1U)
 80075ee:	d119      	bne.n	8007624 <USB_ActivateEndpoint+0x4e>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 80075f0:	69dd      	ldr	r5, [r3, #28]
 80075f2:	432a      	orrs	r2, r5
 80075f4:	61da      	str	r2, [r3, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 80075f6:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80075fa:	041a      	lsls	r2, r3, #16
 80075fc:	d410      	bmi.n	8007620 <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 80075fe:	688a      	ldr	r2, [r1, #8]
 8007600:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
 8007604:	f3c2 030a 	ubfx	r3, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8007608:	790a      	ldrb	r2, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 800760a:	432b      	orrs	r3, r5
 800760c:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8007610:	ea43 5384 	orr.w	r3, r3, r4, lsl #22
 8007614:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007618:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800761c:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8007620:	2000      	movs	r0, #0
 8007622:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 8007624:	69dc      	ldr	r4, [r3, #28]
 8007626:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 800762a:	61da      	str	r2, [r3, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 800762c:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8007630:	041b      	lsls	r3, r3, #16
 8007632:	d4f5      	bmi.n	8007620 <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8007634:	688b      	ldr	r3, [r1, #8]
 8007636:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 800763a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800763e:	4313      	orrs	r3, r2
                                    ((uint32_t)ep->type << 18) |
 8007640:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8007642:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8007646:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800764a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800764e:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8007652:	e7e5      	b.n	8007620 <USB_ActivateEndpoint+0x4a>

08007654 <USB_DeactivateEndpoint>:
{
 8007654:	b510      	push	{r4, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8007656:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8007658:	7849      	ldrb	r1, [r1, #1]
 800765a:	2901      	cmp	r1, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800765c:	eb00 1342 	add.w	r3, r0, r2, lsl #5
 8007660:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
 8007664:	f002 020f 	and.w	r2, r2, #15
  if (ep->is_in == 1U)
 8007668:	d122      	bne.n	80076b0 <USB_DeactivateEndpoint+0x5c>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800766a:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 800766e:	2900      	cmp	r1, #0
 8007670:	da0b      	bge.n	800768a <USB_DeactivateEndpoint+0x36>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 8007672:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8007676:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 800767a:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 800767e:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8007682:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8007686:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 800768a:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 800768c:	2101      	movs	r1, #1
 800768e:	fa01 f202 	lsl.w	r2, r1, r2
 8007692:	ea24 0402 	bic.w	r4, r4, r2
 8007696:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8007698:	69c1      	ldr	r1, [r0, #28]
 800769a:	ea21 0202 	bic.w	r2, r1, r2
 800769e:	61c2      	str	r2, [r0, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 80076a0:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 80076a4:	4a14      	ldr	r2, [pc, #80]	@ (80076f8 <USB_DeactivateEndpoint+0xa4>)
 80076a6:	400a      	ands	r2, r1
 80076a8:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
 80076ac:	2000      	movs	r0, #0
 80076ae:	bd10      	pop	{r4, pc}
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 80076b0:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 80076b4:	2900      	cmp	r1, #0
 80076b6:	da0b      	bge.n	80076d0 <USB_DeactivateEndpoint+0x7c>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 80076b8:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 80076bc:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 80076c0:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 80076c4:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 80076c8:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 80076cc:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 80076d0:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 80076d2:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80076d6:	fa01 f202 	lsl.w	r2, r1, r2
 80076da:	ea24 0402 	bic.w	r4, r4, r2
 80076de:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 80076e0:	69c1      	ldr	r1, [r0, #28]
 80076e2:	ea21 0202 	bic.w	r2, r1, r2
 80076e6:	61c2      	str	r2, [r0, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 80076e8:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 80076ec:	4a03      	ldr	r2, [pc, #12]	@ (80076fc <USB_DeactivateEndpoint+0xa8>)
 80076ee:	400a      	ands	r2, r1
 80076f0:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
 80076f4:	e7da      	b.n	80076ac <USB_DeactivateEndpoint+0x58>
 80076f6:	bf00      	nop
 80076f8:	ec337800 	.word	0xec337800
 80076fc:	eff37800 	.word	0xeff37800

08007700 <USB_EPStopXfer>:
{
 8007700:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8007702:	2300      	movs	r3, #0
  if (ep->is_in == 1U)
 8007704:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
 8007706:	9301      	str	r3, [sp, #4]
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007708:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 800770a:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800770c:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
 8007710:	d11e      	bne.n	8007750 <USB_EPStopXfer+0x50>
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007712:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 8007716:	18c1      	adds	r1, r0, r3
 8007718:	58c2      	ldr	r2, [r0, r3]
 800771a:	2a00      	cmp	r2, #0
 800771c:	db02      	blt.n	8007724 <USB_EPStopXfer+0x24>
  HAL_StatusTypeDef ret = HAL_OK;
 800771e:	2000      	movs	r0, #0
}
 8007720:	b002      	add	sp, #8
 8007722:	4770      	bx	lr
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 8007724:	58c2      	ldr	r2, [r0, r3]
 8007726:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 800772a:	50c2      	str	r2, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 800772c:	58c2      	ldr	r2, [r0, r3]
 800772e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8007732:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8007734:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8007738:	9b01      	ldr	r3, [sp, #4]
 800773a:	3301      	adds	r3, #1
 800773c:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 800773e:	9b01      	ldr	r3, [sp, #4]
 8007740:	4293      	cmp	r3, r2
 8007742:	d901      	bls.n	8007748 <USB_EPStopXfer+0x48>
          ret = HAL_ERROR;
 8007744:	2001      	movs	r0, #1
 8007746:	e7eb      	b.n	8007720 <USB_EPStopXfer+0x20>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 8007748:	680b      	ldr	r3, [r1, #0]
 800774a:	2b00      	cmp	r3, #0
 800774c:	dbf4      	blt.n	8007738 <USB_EPStopXfer+0x38>
 800774e:	e7e6      	b.n	800771e <USB_EPStopXfer+0x1e>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007750:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 8007754:	18c1      	adds	r1, r0, r3
 8007756:	58c2      	ldr	r2, [r0, r3]
 8007758:	2a00      	cmp	r2, #0
 800775a:	dae0      	bge.n	800771e <USB_EPStopXfer+0x1e>
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 800775c:	58c2      	ldr	r2, [r0, r3]
 800775e:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8007762:	50c2      	str	r2, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 8007764:	58c2      	ldr	r2, [r0, r3]
 8007766:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800776a:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 800776c:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8007770:	9b01      	ldr	r3, [sp, #4]
 8007772:	3301      	adds	r3, #1
 8007774:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8007776:	9b01      	ldr	r3, [sp, #4]
 8007778:	4293      	cmp	r3, r2
 800777a:	d8e3      	bhi.n	8007744 <USB_EPStopXfer+0x44>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 800777c:	680b      	ldr	r3, [r1, #0]
 800777e:	2b00      	cmp	r3, #0
 8007780:	dbf6      	blt.n	8007770 <USB_EPStopXfer+0x70>
 8007782:	e7cc      	b.n	800771e <USB_EPStopXfer+0x1e>

08007784 <USB_WritePacket>:
{
 8007784:	b510      	push	{r4, lr}
 8007786:	f89d 4008 	ldrb.w	r4, [sp, #8]
  if (dma == 0U)
 800778a:	b944      	cbnz	r4, 800779e <USB_WritePacket+0x1a>
    count32b = ((uint32_t)len + 3U) / 4U;
 800778c:	3303      	adds	r3, #3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 800778e:	3201      	adds	r2, #1
    count32b = ((uint32_t)len + 3U) / 4U;
 8007790:	089b      	lsrs	r3, r3, #2
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8007792:	eb00 3002 	add.w	r0, r0, r2, lsl #12
 8007796:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    for (i = 0U; i < count32b; i++)
 800779a:	4299      	cmp	r1, r3
 800779c:	d101      	bne.n	80077a2 <USB_WritePacket+0x1e>
}
 800779e:	2000      	movs	r0, #0
 80077a0:	bd10      	pop	{r4, pc}
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 80077a2:	f851 2b04 	ldr.w	r2, [r1], #4
 80077a6:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 80077a8:	e7f7      	b.n	800779a <USB_WritePacket+0x16>
	...

080077ac <USB_EPStartXfer>:
{
 80077ac:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if (ep->is_in == 1U)
 80077b0:	784b      	ldrb	r3, [r1, #1]
    if (ep->xfer_len == 0U)
 80077b2:	690c      	ldr	r4, [r1, #16]
        if (ep->type == EP_TYPE_ISOC)
 80077b4:	790f      	ldrb	r7, [r1, #4]
 80077b6:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 80079a8 <USB_EPStartXfer+0x1fc>
 80077ba:	f8df 81f0 	ldr.w	r8, [pc, #496]	@ 80079ac <USB_EPStartXfer+0x200>
{
 80077be:	4616      	mov	r6, r2
  uint32_t epnum = (uint32_t)ep->num;
 80077c0:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 80077c2:	2b01      	cmp	r3, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 80077c4:	eb00 1542 	add.w	r5, r0, r2, lsl #5
  if (ep->is_in == 1U)
 80077c8:	f040 8097 	bne.w	80078fa <USB_EPStartXfer+0x14e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 80077cc:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
 80077d0:	f8dc 3010 	ldr.w	r3, [ip, #16]
    if (ep->xfer_len == 0U)
 80077d4:	bb74      	cbnz	r4, 8007834 <USB_EPStartXfer+0x88>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 80077d6:	ea03 030e 	and.w	r3, r3, lr
 80077da:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 80077de:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80077e2:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80077e6:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 80077ea:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80077ee:	ea03 0308 	and.w	r3, r3, r8
    if (dma == 1U)
 80077f2:	2e01      	cmp	r6, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 80077f4:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 80077f8:	d157      	bne.n	80078aa <USB_EPStartXfer+0xfe>
      if ((uint32_t)ep->dma_addr != 0U)
 80077fa:	69cb      	ldr	r3, [r1, #28]
 80077fc:	b10b      	cbz	r3, 8007802 <USB_EPStartXfer+0x56>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 80077fe:	f8cc 3014 	str.w	r3, [ip, #20]
      if (ep->type == EP_TYPE_ISOC)
 8007802:	2f01      	cmp	r7, #1
 8007804:	d10c      	bne.n	8007820 <USB_EPStartXfer+0x74>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8007806:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 800780a:	f413 7f80 	tst.w	r3, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 800780e:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8007812:	bf0c      	ite	eq
 8007814:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8007818:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 800781c:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007820:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8007824:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007828:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
}
 800782c:	2000      	movs	r0, #0
 800782e:	b002      	add	sp, #8
 8007830:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8007834:	ea03 0308 	and.w	r3, r3, r8
 8007838:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800783c:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007840:	ea03 030e 	and.w	r3, r3, lr
 8007844:	f8cc 3010 	str.w	r3, [ip, #16]
        if (ep->xfer_len > ep->maxpacket)
 8007848:	688b      	ldr	r3, [r1, #8]
      if (epnum == 0U)
 800784a:	b97a      	cbnz	r2, 800786c <USB_EPStartXfer+0xc0>
        if (ep->xfer_len > ep->maxpacket)
 800784c:	42a3      	cmp	r3, r4
          ep->xfer_len = ep->maxpacket;
 800784e:	bf38      	it	cc
 8007850:	610b      	strcc	r3, [r1, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8007852:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007856:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & ((uint32_t)pktcnt << 29));
 800785a:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 800785e:	690b      	ldr	r3, [r1, #16]
 8007860:	f8dc 4010 	ldr.w	r4, [ip, #16]
 8007864:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007868:	4323      	orrs	r3, r4
 800786a:	e7c2      	b.n	80077f2 <USB_EPStartXfer+0x46>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 800786c:	441c      	add	r4, r3
 800786e:	3c01      	subs	r4, #1
 8007870:	fbb4 f4f3 	udiv	r4, r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19));
 8007874:	4b4b      	ldr	r3, [pc, #300]	@ (80079a4 <USB_EPStartXfer+0x1f8>)
 8007876:	f8dc e010 	ldr.w	lr, [ip, #16]
 800787a:	fa1f f884 	uxth.w	r8, r4
 800787e:	ea03 44c4 	and.w	r4, r3, r4, lsl #19
 8007882:	ea44 040e 	orr.w	r4, r4, lr
        if (ep->type == EP_TYPE_ISOC)
 8007886:	2f01      	cmp	r7, #1
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19));
 8007888:	f8cc 4010 	str.w	r4, [ip, #16]
        if (ep->type == EP_TYPE_ISOC)
 800788c:	d1e7      	bne.n	800785e <USB_EPStartXfer+0xb2>
          USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 800788e:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007892:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 8007896:	f8cc 3010 	str.w	r3, [ip, #16]
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & ((uint32_t)pktcnt << 29));
 800789a:	f8dc 4010 	ldr.w	r4, [ip, #16]
 800789e:	ea4f 7348 	mov.w	r3, r8, lsl #29
 80078a2:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 80078a6:	4323      	orrs	r3, r4
 80078a8:	e7d7      	b.n	800785a <USB_EPStartXfer+0xae>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 80078aa:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
 80078ae:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 80078b0:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80078b4:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
 80078b8:	690b      	ldr	r3, [r1, #16]
      if (ep->type != EP_TYPE_ISOC)
 80078ba:	d00b      	beq.n	80078d4 <USB_EPStartXfer+0x128>
        if (ep->xfer_len > 0U)
 80078bc:	2b00      	cmp	r3, #0
 80078be:	d0b5      	beq.n	800782c <USB_EPStartXfer+0x80>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 80078c0:	f8d0 1834 	ldr.w	r1, [r0, #2100]	@ 0x834
 80078c4:	f002 020f 	and.w	r2, r2, #15
 80078c8:	2301      	movs	r3, #1
 80078ca:	4093      	lsls	r3, r2
 80078cc:	430b      	orrs	r3, r1
 80078ce:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
 80078d2:	e7ab      	b.n	800782c <USB_EPStartXfer+0x80>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 80078d4:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
 80078d8:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 80078dc:	f8d5 4900 	ldr.w	r4, [r5, #2304]	@ 0x900
 80078e0:	bf0c      	ite	eq
 80078e2:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 80078e6:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
 80078ea:	f8c5 4900 	str.w	r4, [r5, #2304]	@ 0x900
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 80078ee:	9600      	str	r6, [sp, #0]
 80078f0:	68c9      	ldr	r1, [r1, #12]
 80078f2:	b29b      	uxth	r3, r3
 80078f4:	f7ff ff46 	bl	8007784 <USB_WritePacket>
 80078f8:	e798      	b.n	800782c <USB_EPStartXfer+0x80>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 80078fa:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 80078fe:	ea03 0308 	and.w	r3, r3, r8
 8007902:	f8c5 3b10 	str.w	r3, [r5, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8007906:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 800790a:	ea03 030e 	and.w	r3, r3, lr
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 800790e:	f505 6c30 	add.w	ip, r5, #2816	@ 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8007912:	f8cc 3010 	str.w	r3, [ip, #16]
        ep->xfer_len = ep->maxpacket;
 8007916:	688b      	ldr	r3, [r1, #8]
    if (epnum == 0U)
 8007918:	bb5a      	cbnz	r2, 8007972 <USB_EPStartXfer+0x1c6>
      if (ep->xfer_len > 0U)
 800791a:	b104      	cbz	r4, 800791e <USB_EPStartXfer+0x172>
        ep->xfer_len = ep->maxpacket;
 800791c:	610b      	str	r3, [r1, #16]
      ep->xfer_size = ep->maxpacket;
 800791e:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 8007920:	f8dc 2010 	ldr.w	r2, [ip, #16]
 8007924:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007928:	4313      	orrs	r3, r2
 800792a:	f8cc 3010 	str.w	r3, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 800792e:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007932:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
    if (dma == 1U)
 8007936:	2e01      	cmp	r6, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 8007938:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 800793c:	d103      	bne.n	8007946 <USB_EPStartXfer+0x19a>
      if ((uint32_t)ep->xfer_buff != 0U)
 800793e:	68cb      	ldr	r3, [r1, #12]
 8007940:	b10b      	cbz	r3, 8007946 <USB_EPStartXfer+0x19a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 8007942:	f8cc 3014 	str.w	r3, [ip, #20]
    if (ep->type == EP_TYPE_ISOC)
 8007946:	2f01      	cmp	r7, #1
 8007948:	d10c      	bne.n	8007964 <USB_EPStartXfer+0x1b8>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800794a:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 800794e:	f413 7f80 	tst.w	r3, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 8007952:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 8007956:	bf0c      	ite	eq
 8007958:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 800795c:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8007960:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 8007964:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 8007968:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 800796c:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
 8007970:	e75c      	b.n	800782c <USB_EPStartXfer+0x80>
      if (ep->xfer_len == 0U)
 8007972:	2c00      	cmp	r4, #0
 8007974:	d0d4      	beq.n	8007920 <USB_EPStartXfer+0x174>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007976:	441c      	add	r4, r3
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007978:	4a0a      	ldr	r2, [pc, #40]	@ (80079a4 <USB_EPStartXfer+0x1f8>)
 800797a:	f8dc e010 	ldr.w	lr, [ip, #16]
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 800797e:	3c01      	subs	r4, #1
 8007980:	fbb4 f4f3 	udiv	r4, r4, r3
 8007984:	b2a4      	uxth	r4, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007986:	ea02 42c4 	and.w	r2, r2, r4, lsl #19
        ep->xfer_size = ep->maxpacket * pktcnt;
 800798a:	4363      	muls	r3, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800798c:	ea42 020e 	orr.w	r2, r2, lr
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007990:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007992:	f8cc 2010 	str.w	r2, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 8007996:	f8dc 2010 	ldr.w	r2, [ip, #16]
 800799a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800799e:	4313      	orrs	r3, r2
 80079a0:	e7c9      	b.n	8007936 <USB_EPStartXfer+0x18a>
 80079a2:	bf00      	nop
 80079a4:	1ff80000 	.word	0x1ff80000
 80079a8:	e007ffff 	.word	0xe007ffff
 80079ac:	fff80000 	.word	0xfff80000

080079b0 <USB_ReadPacket>:
{
 80079b0:	4603      	mov	r3, r0
 80079b2:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
 80079b4:	2000      	movs	r0, #0
  uint32_t count32b = (uint32_t)len >> 2U;
 80079b6:	0894      	lsrs	r4, r2, #2
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 80079b8:	f503 5580 	add.w	r5, r3, #4096	@ 0x1000
  uint16_t remaining_bytes = len % 4U;
 80079bc:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 80079c0:	42a0      	cmp	r0, r4
 80079c2:	d310      	bcc.n	80079e6 <USB_ReadPacket+0x36>
 80079c4:	eb01 0084 	add.w	r0, r1, r4, lsl #2
  if (remaining_bytes != 0U)
 80079c8:	b162      	cbz	r2, 80079e4 <USB_ReadPacket+0x34>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 80079ca:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80079ce:	681c      	ldr	r4, [r3, #0]
    i = 0U;
 80079d0:	2300      	movs	r3, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 80079d2:	00d9      	lsls	r1, r3, #3
 80079d4:	fa24 f101 	lsr.w	r1, r4, r1
 80079d8:	54c1      	strb	r1, [r0, r3]
      i++;
 80079da:	3301      	adds	r3, #1
    } while (remaining_bytes != 0U);
 80079dc:	b299      	uxth	r1, r3
 80079de:	428a      	cmp	r2, r1
 80079e0:	d1f7      	bne.n	80079d2 <USB_ReadPacket+0x22>
 80079e2:	4410      	add	r0, r2
}
 80079e4:	bd70      	pop	{r4, r5, r6, pc}
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 80079e6:	682e      	ldr	r6, [r5, #0]
 80079e8:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
  for (i = 0U; i < count32b; i++)
 80079ec:	3001      	adds	r0, #1
 80079ee:	e7e7      	b.n	80079c0 <USB_ReadPacket+0x10>

080079f0 <USB_EPSetStall>:
  if (ep->is_in == 1U)
 80079f0:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 80079f2:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 80079f4:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 80079f6:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 80079fa:	d112      	bne.n	8007a22 <USB_EPSetStall+0x32>
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 80079fc:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 8007a00:	2a00      	cmp	r2, #0
 8007a02:	db06      	blt.n	8007a12 <USB_EPSetStall+0x22>
 8007a04:	b12b      	cbz	r3, 8007a12 <USB_EPSetStall+0x22>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 8007a06:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007a0a:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8007a0e:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 8007a12:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007a16:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8007a1a:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8007a1e:	2000      	movs	r0, #0
 8007a20:	4770      	bx	lr
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 8007a22:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007a26:	2a00      	cmp	r2, #0
 8007a28:	db06      	blt.n	8007a38 <USB_EPSetStall+0x48>
 8007a2a:	b12b      	cbz	r3, 8007a38 <USB_EPSetStall+0x48>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 8007a2c:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8007a30:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8007a34:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 8007a38:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8007a3c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8007a40:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8007a44:	e7eb      	b.n	8007a1e <USB_EPSetStall+0x2e>

08007a46 <USB_EPClearStall>:
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007a46:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8007a48:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007a4a:	eb00 1043 	add.w	r0, r0, r3, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007a4e:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
 8007a50:	2a01      	cmp	r2, #1
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007a52:	f1a3 0302 	sub.w	r3, r3, #2
 8007a56:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
 8007a58:	d10f      	bne.n	8007a7a <USB_EPClearStall+0x34>
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007a5a:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007a5e:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007a60:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8007a64:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007a68:	d805      	bhi.n	8007a76 <USB_EPClearStall+0x30>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007a6a:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007a6e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007a72:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8007a76:	2000      	movs	r0, #0
 8007a78:	4770      	bx	lr
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007a7a:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007a7e:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007a82:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007a84:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007a88:	bf9e      	ittt	ls
 8007a8a:	f8d0 3b00 	ldrls.w	r3, [r0, #2816]	@ 0xb00
 8007a8e:	f043 5380 	orrls.w	r3, r3, #268435456	@ 0x10000000
 8007a92:	f8c0 3b00 	strls.w	r3, [r0, #2816]	@ 0xb00
 8007a96:	e7ee      	b.n	8007a76 <USB_EPClearStall+0x30>

08007a98 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 8007a98:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007a9c:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8007aa0:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 8007aa4:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007aa8:	0109      	lsls	r1, r1, #4
 8007aaa:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
 8007aae:	4319      	orrs	r1, r3
 8007ab0:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8007ab4:	2000      	movs	r0, #0
 8007ab6:	4770      	bx	lr

08007ab8 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007ab8:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007abc:	f023 0303 	bic.w	r3, r3, #3
 8007ac0:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 8007ac4:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007ac8:	f023 0302 	bic.w	r3, r3, #2
 8007acc:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007ad0:	2000      	movs	r0, #0
 8007ad2:	4770      	bx	lr

08007ad4 <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007ad4:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007ad8:	f023 0303 	bic.w	r3, r3, #3
 8007adc:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007ae0:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007ae4:	f043 0302 	orr.w	r3, r3, #2
 8007ae8:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007aec:	2000      	movs	r0, #0
 8007aee:	4770      	bx	lr

08007af0 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 8007af0:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 8007af2:	6980      	ldr	r0, [r0, #24]
}
 8007af4:	4010      	ands	r0, r2
 8007af6:	4770      	bx	lr

08007af8 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8007af8:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8007afc:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007b00:	69c0      	ldr	r0, [r0, #28]
 8007b02:	4018      	ands	r0, r3
}
 8007b04:	0c00      	lsrs	r0, r0, #16
 8007b06:	4770      	bx	lr

08007b08 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8007b08:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8007b0c:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007b10:	69c0      	ldr	r0, [r0, #28]
 8007b12:	4018      	ands	r0, r3
}
 8007b14:	b280      	uxth	r0, r0
 8007b16:	4770      	bx	lr

08007b18 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 8007b18:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
 8007b1c:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 8007b20:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 8007b24:	6940      	ldr	r0, [r0, #20]
}
 8007b26:	4010      	ands	r0, r2
 8007b28:	4770      	bx	lr

08007b2a <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
 8007b2a:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 8007b2e:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8007b32:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8007b36:	f001 010f 	and.w	r1, r1, #15
 8007b3a:	40cb      	lsrs	r3, r1
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8007b3c:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8007b40:	01db      	lsls	r3, r3, #7
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8007b42:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8007b44:	b2db      	uxtb	r3, r3
 8007b46:	4313      	orrs	r3, r2
}
 8007b48:	4018      	ands	r0, r3
 8007b4a:	4770      	bx	lr

08007b4c <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 8007b4c:	6940      	ldr	r0, [r0, #20]
}
 8007b4e:	f000 0001 	and.w	r0, r0, #1
 8007b52:	4770      	bx	lr

08007b54 <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 8007b54:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007b58:	f36f 030a 	bfc	r3, #0, #11
 8007b5c:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 8007b60:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007b64:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007b68:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007b6c:	2000      	movs	r0, #0
 8007b6e:	4770      	bx	lr

08007b70 <USB_EP0_OutStart>:
{
 8007b70:	b530      	push	{r4, r5, lr}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8007b72:	6c05      	ldr	r5, [r0, #64]	@ 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8007b74:	4c10      	ldr	r4, [pc, #64]	@ (8007bb8 <USB_EP0_OutStart+0x48>)
 8007b76:	42a5      	cmp	r5, r4
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007b78:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8007b7c:	d903      	bls.n	8007b86 <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007b7e:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
 8007b82:	2c00      	cmp	r4, #0
 8007b84:	db16      	blt.n	8007bb4 <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 8007b86:	2400      	movs	r4, #0
 8007b88:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8007b8a:	691c      	ldr	r4, [r3, #16]
 8007b8c:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 8007b90:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 8007b92:	691c      	ldr	r4, [r3, #16]
 8007b94:	f044 0418 	orr.w	r4, r4, #24
 8007b98:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007b9a:	691c      	ldr	r4, [r3, #16]
  if (dma == 1U)
 8007b9c:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007b9e:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
 8007ba2:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 8007ba4:	bf01      	itttt	eq
 8007ba6:	615a      	streq	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 8007ba8:	f8d0 3b00 	ldreq.w	r3, [r0, #2816]	@ 0xb00
 8007bac:	f043 2380 	orreq.w	r3, r3, #2147516416	@ 0x80008000
 8007bb0:	f8c0 3b00 	streq.w	r3, [r0, #2816]	@ 0xb00
}
 8007bb4:	2000      	movs	r0, #0
 8007bb6:	bd30      	pop	{r4, r5, pc}
 8007bb8:	4f54300a 	.word	0x4f54300a

08007bbc <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007bbc:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007bbe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007bc2:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8007bc4:	f001 fed6 	bl	8009974 <xTaskGetSchedulerState>
 8007bc8:	2801      	cmp	r0, #1
 8007bca:	d003      	beq.n	8007bd4 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007bcc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007bd0:	f000 bc08 	b.w	80083e4 <xPortSysTickHandler>
}
 8007bd4:	bd08      	pop	{r3, pc}
	...

08007bd8 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007bd8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007bdc:	b92b      	cbnz	r3, 8007bea <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007bde:	4b06      	ldr	r3, [pc, #24]	@ (8007bf8 <osKernelInitialize+0x20>)
 8007be0:	6818      	ldr	r0, [r3, #0]
 8007be2:	b928      	cbnz	r0, 8007bf0 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007be4:	2201      	movs	r2, #1
 8007be6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007be8:	4770      	bx	lr
    stat = osErrorISR;
 8007bea:	f06f 0005 	mvn.w	r0, #5
 8007bee:	4770      	bx	lr
    } else {
      stat = osError;
 8007bf0:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007bf4:	4770      	bx	lr
 8007bf6:	bf00      	nop
 8007bf8:	2000399c 	.word	0x2000399c

08007bfc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007bfc:	b510      	push	{r4, lr}
 8007bfe:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007c02:	b95c      	cbnz	r4, 8007c1c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8007c04:	4b08      	ldr	r3, [pc, #32]	@ (8007c28 <osKernelStart+0x2c>)
 8007c06:	681a      	ldr	r2, [r3, #0]
 8007c08:	2a01      	cmp	r2, #1
 8007c0a:	d10a      	bne.n	8007c22 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007c0c:	4a07      	ldr	r2, [pc, #28]	@ (8007c2c <osKernelStart+0x30>)
 8007c0e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8007c10:	2202      	movs	r2, #2
 8007c12:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8007c14:	f001 fc1c 	bl	8009450 <vTaskStartScheduler>
      stat = osOK;
 8007c18:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8007c1a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007c1c:	f06f 0005 	mvn.w	r0, #5
 8007c20:	e7fb      	b.n	8007c1a <osKernelStart+0x1e>
      stat = osError;
 8007c22:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007c26:	e7f8      	b.n	8007c1a <osKernelStart+0x1e>
 8007c28:	2000399c 	.word	0x2000399c
 8007c2c:	e000ed00 	.word	0xe000ed00

08007c30 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007c30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c32:	b087      	sub	sp, #28
 8007c34:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007c36:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007c38:	460b      	mov	r3, r1
  hTask = NULL;
 8007c3a:	9205      	str	r2, [sp, #20]
 8007c3c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007c40:	b9fa      	cbnz	r2, 8007c82 <osThreadNew+0x52>
 8007c42:	b1f0      	cbz	r0, 8007c82 <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007c44:	b354      	cbz	r4, 8007c9c <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007c46:	69a5      	ldr	r5, [r4, #24]
 8007c48:	b125      	cbz	r5, 8007c54 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007c4a:	1e69      	subs	r1, r5, #1
 8007c4c:	2937      	cmp	r1, #55	@ 0x37
 8007c4e:	d902      	bls.n	8007c56 <osThreadNew+0x26>
        return (NULL);
 8007c50:	2000      	movs	r0, #0
 8007c52:	e017      	b.n	8007c84 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 8007c54:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007c56:	6862      	ldr	r2, [r4, #4]
 8007c58:	07d2      	lsls	r2, r2, #31
 8007c5a:	d4f9      	bmi.n	8007c50 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 8007c5c:	6966      	ldr	r6, [r4, #20]
 8007c5e:	b19e      	cbz	r6, 8007c88 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007c60:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007c62:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 8007c66:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007c68:	b187      	cbz	r7, 8007c8c <osThreadNew+0x5c>
 8007c6a:	f1bc 0fab 	cmp.w	ip, #171	@ 0xab
 8007c6e:	d908      	bls.n	8007c82 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007c70:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007c72:	b134      	cbz	r4, 8007c82 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007c74:	b12e      	cbz	r6, 8007c82 <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007c76:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007c7a:	9500      	str	r5, [sp, #0]
 8007c7c:	f001 fae8 	bl	8009250 <xTaskCreateStatic>
 8007c80:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007c82:	9805      	ldr	r0, [sp, #20]
}
 8007c84:	b007      	add	sp, #28
 8007c86:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007c88:	2280      	movs	r2, #128	@ 0x80
 8007c8a:	e7ea      	b.n	8007c62 <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007c8c:	f1bc 0f00 	cmp.w	ip, #0
 8007c90:	d1f7      	bne.n	8007c82 <osThreadNew+0x52>
 8007c92:	6924      	ldr	r4, [r4, #16]
 8007c94:	2c00      	cmp	r4, #0
 8007c96:	d1f4      	bne.n	8007c82 <osThreadNew+0x52>
 8007c98:	460c      	mov	r4, r1
 8007c9a:	e001      	b.n	8007ca0 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8007c9c:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 8007c9e:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007ca0:	a905      	add	r1, sp, #20
 8007ca2:	e9cd 5100 	strd	r5, r1, [sp]
 8007ca6:	b292      	uxth	r2, r2
 8007ca8:	4621      	mov	r1, r4
 8007caa:	f001 fb09 	bl	80092c0 <xTaskCreate>
 8007cae:	2801      	cmp	r0, #1
            hTask = NULL;
 8007cb0:	bf1c      	itt	ne
 8007cb2:	2300      	movne	r3, #0
 8007cb4:	9305      	strne	r3, [sp, #20]
 8007cb6:	e7e4      	b.n	8007c82 <osThreadNew+0x52>

08007cb8 <osThreadTerminate>:
  vTaskDelete (NULL);
#endif
  for (;;);
}

osStatus_t osThreadTerminate (osThreadId_t thread_id) {
 8007cb8:	b538      	push	{r3, r4, r5, lr}
 8007cba:	4605      	mov	r5, r0
 8007cbc:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;
#ifndef USE_FreeRTOS_HEAP_1
  eTaskState tstate;

  if (IS_IRQ()) {
 8007cc0:	b94c      	cbnz	r4, 8007cd6 <osThreadTerminate+0x1e>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
 8007cc2:	b158      	cbz	r0, 8007cdc <osThreadTerminate+0x24>
    stat = osErrorParameter;
  }
  else {
    tstate = eTaskGetState (hTask);
 8007cc4:	f001 fb82 	bl	80093cc <eTaskGetState>

    if (tstate != eDeleted) {
 8007cc8:	2804      	cmp	r0, #4
 8007cca:	d00a      	beq.n	8007ce2 <osThreadTerminate+0x2a>
      stat = osOK;
      vTaskDelete (hTask);
 8007ccc:	4628      	mov	r0, r5
 8007cce:	f001 fb25 	bl	800931c <vTaskDelete>
      stat = osOK;
 8007cd2:	4620      	mov	r0, r4
#else
  stat = osError;
#endif

  return (stat);
}
 8007cd4:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
 8007cd6:	f06f 0005 	mvn.w	r0, #5
 8007cda:	e7fb      	b.n	8007cd4 <osThreadTerminate+0x1c>
    stat = osErrorParameter;
 8007cdc:	f06f 0003 	mvn.w	r0, #3
 8007ce0:	e7f8      	b.n	8007cd4 <osThreadTerminate+0x1c>
      stat = osErrorResource;
 8007ce2:	f06f 0002 	mvn.w	r0, #2
  return (stat);
 8007ce6:	e7f5      	b.n	8007cd4 <osThreadTerminate+0x1c>

08007ce8 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8007ce8:	b508      	push	{r3, lr}
 8007cea:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007cee:	b922      	cbnz	r2, 8007cfa <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8007cf0:	b108      	cbz	r0, 8007cf6 <osDelay+0xe>
      vTaskDelay(ticks);
 8007cf2:	f001 fd15 	bl	8009720 <vTaskDelay>
    stat = osOK;
 8007cf6:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007cf8:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8007cfa:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8007cfe:	e7fb      	b.n	8007cf8 <osDelay+0x10>

08007d00 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007d00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007d02:	4604      	mov	r4, r0
 8007d04:	460e      	mov	r6, r1
 8007d06:	4615      	mov	r5, r2
 8007d08:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007d0c:	b942      	cbnz	r2, 8007d20 <osSemaphoreNew+0x20>
 8007d0e:	b138      	cbz	r0, 8007d20 <osSemaphoreNew+0x20>
 8007d10:	4288      	cmp	r0, r1
 8007d12:	d305      	bcc.n	8007d20 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8007d14:	b155      	cbz	r5, 8007d2c <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007d16:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8007d1a:	b12b      	cbz	r3, 8007d28 <osSemaphoreNew+0x28>
 8007d1c:	2f4f      	cmp	r7, #79	@ 0x4f
 8007d1e:	d822      	bhi.n	8007d66 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8007d20:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007d22:	4620      	mov	r0, r4
 8007d24:	b003      	add	sp, #12
 8007d26:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007d28:	2f00      	cmp	r7, #0
 8007d2a:	d1f9      	bne.n	8007d20 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8007d2c:	2c01      	cmp	r4, #1
 8007d2e:	d00c      	beq.n	8007d4a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007d30:	4620      	mov	r0, r4
 8007d32:	4631      	mov	r1, r6
 8007d34:	f000 fd8e 	bl	8008854 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007d38:	4604      	mov	r4, r0
 8007d3a:	2800      	cmp	r0, #0
 8007d3c:	d0f0      	beq.n	8007d20 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 8007d3e:	b985      	cbnz	r5, 8007d62 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8007d40:	4629      	mov	r1, r5
 8007d42:	4620      	mov	r0, r4
 8007d44:	f001 f8ac 	bl	8008ea0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007d48:	e7eb      	b.n	8007d22 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8007d4a:	2203      	movs	r2, #3
 8007d4c:	2100      	movs	r1, #0
 8007d4e:	2001      	movs	r0, #1
 8007d50:	f000 fd37 	bl	80087c2 <xQueueGenericCreate>
 8007d54:	e00e      	b.n	8007d74 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007d56:	461a      	mov	r2, r3
 8007d58:	f000 fd5a 	bl	8008810 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007d5c:	4604      	mov	r4, r0
 8007d5e:	2800      	cmp	r0, #0
 8007d60:	d0de      	beq.n	8007d20 <osSemaphoreNew+0x20>
          name = attr->name;
 8007d62:	682d      	ldr	r5, [r5, #0]
 8007d64:	e7ec      	b.n	8007d40 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 8007d66:	2801      	cmp	r0, #1
 8007d68:	d1f5      	bne.n	8007d56 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007d6a:	2103      	movs	r1, #3
 8007d6c:	9100      	str	r1, [sp, #0]
 8007d6e:	4611      	mov	r1, r2
 8007d70:	f000 fcd9 	bl	8008726 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8007d74:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007d76:	2800      	cmp	r0, #0
 8007d78:	d0d2      	beq.n	8007d20 <osSemaphoreNew+0x20>
 8007d7a:	2e00      	cmp	r6, #0
 8007d7c:	d0df      	beq.n	8007d3e <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007d7e:	2300      	movs	r3, #0
 8007d80:	461a      	mov	r2, r3
 8007d82:	4619      	mov	r1, r3
 8007d84:	f000 fd84 	bl	8008890 <xQueueGenericSend>
 8007d88:	2801      	cmp	r0, #1
 8007d8a:	d0d8      	beq.n	8007d3e <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8007d8c:	4620      	mov	r0, r4
 8007d8e:	f001 f8b1 	bl	8008ef4 <vQueueDelete>
      if (hSemaphore != NULL) {
 8007d92:	e7c5      	b.n	8007d20 <osSemaphoreNew+0x20>

08007d94 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007d94:	b513      	push	{r0, r1, r4, lr}
 8007d96:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007d98:	b328      	cbz	r0, 8007de6 <osSemaphoreAcquire+0x52>
 8007d9a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007d9e:	b1cb      	cbz	r3, 8007dd4 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8007da0:	bb09      	cbnz	r1, 8007de6 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007da2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007da4:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007da6:	f001 f82e 	bl	8008e06 <xQueueReceiveFromISR>
 8007daa:	2801      	cmp	r0, #1
 8007dac:	d003      	beq.n	8007db6 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8007dae:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007db2:	b002      	add	sp, #8
 8007db4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8007db6:	9b01      	ldr	r3, [sp, #4]
 8007db8:	b90b      	cbnz	r3, 8007dbe <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8007dba:	2000      	movs	r0, #0
 8007dbc:	e7f9      	b.n	8007db2 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 8007dbe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007dc2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007dc6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007dca:	f3bf 8f4f 	dsb	sy
 8007dce:	f3bf 8f6f 	isb	sy
 8007dd2:	e7f2      	b.n	8007dba <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007dd4:	f000 ff5a 	bl	8008c8c <xQueueSemaphoreTake>
 8007dd8:	2801      	cmp	r0, #1
 8007dda:	d0ee      	beq.n	8007dba <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8007ddc:	2c00      	cmp	r4, #0
 8007dde:	d0e6      	beq.n	8007dae <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 8007de0:	f06f 0001 	mvn.w	r0, #1
 8007de4:	e7e5      	b.n	8007db2 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 8007de6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007dea:	e7e2      	b.n	8007db2 <osSemaphoreAcquire+0x1e>

08007dec <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007dec:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007dee:	b318      	cbz	r0, 8007e38 <osSemaphoreRelease+0x4c>
 8007df0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007df4:	b1cb      	cbz	r3, 8007e2a <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 8007df6:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007df8:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007dfa:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007dfc:	f000 fe57 	bl	8008aae <xQueueGiveFromISR>
 8007e00:	2801      	cmp	r0, #1
 8007e02:	d004      	beq.n	8007e0e <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8007e04:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8007e08:	b003      	add	sp, #12
 8007e0a:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8007e0e:	9b01      	ldr	r3, [sp, #4]
 8007e10:	b14b      	cbz	r3, 8007e26 <osSemaphoreRelease+0x3a>
 8007e12:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e16:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007e1e:	f3bf 8f4f 	dsb	sy
 8007e22:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8007e26:	2000      	movs	r0, #0
 8007e28:	e7ee      	b.n	8007e08 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007e2a:	461a      	mov	r2, r3
 8007e2c:	4619      	mov	r1, r3
 8007e2e:	f000 fd2f 	bl	8008890 <xQueueGenericSend>
 8007e32:	2801      	cmp	r0, #1
 8007e34:	d0f7      	beq.n	8007e26 <osSemaphoreRelease+0x3a>
 8007e36:	e7e5      	b.n	8007e04 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8007e38:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007e3c:	e7e4      	b.n	8007e08 <osSemaphoreRelease+0x1c>

08007e3e <osSemaphoreDelete>:
  }

  return (count);
}

osStatus_t osSemaphoreDelete (osSemaphoreId_t semaphore_id) {
 8007e3e:	b538      	push	{r3, r4, r5, lr}
 8007e40:	4605      	mov	r5, r0
 8007e42:	f3ef 8405 	mrs	r4, IPSR
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  osStatus_t stat;

#ifndef USE_FreeRTOS_HEAP_1
  if (IS_IRQ()) {
 8007e46:	b93c      	cbnz	r4, 8007e58 <osSemaphoreDelete+0x1a>
    stat = osErrorISR;
  }
  else if (hSemaphore == NULL) {
 8007e48:	b148      	cbz	r0, 8007e5e <osSemaphoreDelete+0x20>
    stat = osErrorParameter;
  }
  else {
    #if (configQUEUE_REGISTRY_SIZE > 0)
    vQueueUnregisterQueue (hSemaphore);
 8007e4a:	f001 f83b 	bl	8008ec4 <vQueueUnregisterQueue>
    #endif

    stat = osOK;
    vSemaphoreDelete (hSemaphore);
 8007e4e:	4628      	mov	r0, r5
 8007e50:	f001 f850 	bl	8008ef4 <vQueueDelete>
    stat = osOK;
 8007e54:	4620      	mov	r0, r4
#else
  stat = osError;
#endif

  return (stat);
}
 8007e56:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
 8007e58:	f06f 0005 	mvn.w	r0, #5
 8007e5c:	e7fb      	b.n	8007e56 <osSemaphoreDelete+0x18>
    stat = osErrorParameter;
 8007e5e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007e62:	e7f8      	b.n	8007e56 <osSemaphoreDelete+0x18>

08007e64 <osMessageQueueNew>:

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007e64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007e66:	4605      	mov	r5, r0
 8007e68:	460e      	mov	r6, r1
 8007e6a:	4614      	mov	r4, r2
 8007e6c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007e70:	b11f      	cbz	r7, 8007e7a <osMessageQueueNew+0x16>
  hQueue = NULL;
 8007e72:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007e74:	4628      	mov	r0, r5
 8007e76:	b003      	add	sp, #12
 8007e78:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007e7a:	2800      	cmp	r0, #0
 8007e7c:	d0f9      	beq.n	8007e72 <osMessageQueueNew+0xe>
 8007e7e:	2900      	cmp	r1, #0
 8007e80:	d0f7      	beq.n	8007e72 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8007e82:	b1da      	cbz	r2, 8007ebc <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007e84:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8007e88:	b183      	cbz	r3, 8007eac <osMessageQueueNew+0x48>
 8007e8a:	2a4f      	cmp	r2, #79	@ 0x4f
 8007e8c:	d9f1      	bls.n	8007e72 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007e8e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007e90:	2a00      	cmp	r2, #0
 8007e92:	d0ee      	beq.n	8007e72 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007e94:	6966      	ldr	r6, [r4, #20]
 8007e96:	434d      	muls	r5, r1
 8007e98:	42ae      	cmp	r6, r5
 8007e9a:	d3ea      	bcc.n	8007e72 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007e9c:	9700      	str	r7, [sp, #0]
 8007e9e:	f000 fc42 	bl	8008726 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007ea2:	4605      	mov	r5, r0
 8007ea4:	2800      	cmp	r0, #0
 8007ea6:	d0e4      	beq.n	8007e72 <osMessageQueueNew+0xe>
        name = attr->name;
 8007ea8:	6824      	ldr	r4, [r4, #0]
 8007eaa:	e011      	b.n	8007ed0 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007eac:	2a00      	cmp	r2, #0
 8007eae:	d1e0      	bne.n	8007e72 <osMessageQueueNew+0xe>
 8007eb0:	6923      	ldr	r3, [r4, #16]
 8007eb2:	2b00      	cmp	r3, #0
 8007eb4:	d1dd      	bne.n	8007e72 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007eb6:	6963      	ldr	r3, [r4, #20]
 8007eb8:	2b00      	cmp	r3, #0
 8007eba:	d1da      	bne.n	8007e72 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8007ebc:	4628      	mov	r0, r5
 8007ebe:	2200      	movs	r2, #0
 8007ec0:	4631      	mov	r1, r6
 8007ec2:	f000 fc7e 	bl	80087c2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007ec6:	4605      	mov	r5, r0
 8007ec8:	2800      	cmp	r0, #0
 8007eca:	d0d2      	beq.n	8007e72 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8007ecc:	2c00      	cmp	r4, #0
 8007ece:	d1eb      	bne.n	8007ea8 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8007ed0:	4621      	mov	r1, r4
 8007ed2:	4628      	mov	r0, r5
 8007ed4:	f000 ffe4 	bl	8008ea0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007ed8:	e7cc      	b.n	8007e74 <osMessageQueueNew+0x10>

08007eda <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007eda:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007edc:	461c      	mov	r4, r3
 8007ede:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007ee2:	b1de      	cbz	r6, 8007f1c <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007ee4:	b338      	cbz	r0, 8007f36 <osMessageQueuePut+0x5c>
 8007ee6:	b331      	cbz	r1, 8007f36 <osMessageQueuePut+0x5c>
 8007ee8:	bb2b      	cbnz	r3, 8007f36 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007eea:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007eec:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007eee:	f000 fd81 	bl	80089f4 <xQueueGenericSendFromISR>
 8007ef2:	2801      	cmp	r0, #1
 8007ef4:	d003      	beq.n	8007efe <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8007ef6:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007efa:	b002      	add	sp, #8
 8007efc:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8007efe:	9b01      	ldr	r3, [sp, #4]
 8007f00:	b90b      	cbnz	r3, 8007f06 <osMessageQueuePut+0x2c>
  stat = osOK;
 8007f02:	2000      	movs	r0, #0
 8007f04:	e7f9      	b.n	8007efa <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8007f06:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007f0a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007f0e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007f12:	f3bf 8f4f 	dsb	sy
 8007f16:	f3bf 8f6f 	isb	sy
 8007f1a:	e7f2      	b.n	8007f02 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007f1c:	b158      	cbz	r0, 8007f36 <osMessageQueuePut+0x5c>
 8007f1e:	b151      	cbz	r1, 8007f36 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007f20:	4633      	mov	r3, r6
 8007f22:	4622      	mov	r2, r4
 8007f24:	f000 fcb4 	bl	8008890 <xQueueGenericSend>
 8007f28:	2801      	cmp	r0, #1
 8007f2a:	d0ea      	beq.n	8007f02 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 8007f2c:	2c00      	cmp	r4, #0
 8007f2e:	d0e2      	beq.n	8007ef6 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8007f30:	f06f 0001 	mvn.w	r0, #1
 8007f34:	e7e1      	b.n	8007efa <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8007f36:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007f3a:	e7de      	b.n	8007efa <osMessageQueuePut+0x20>

08007f3c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007f3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007f3e:	461c      	mov	r4, r3
 8007f40:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007f44:	b1db      	cbz	r3, 8007f7e <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007f46:	b330      	cbz	r0, 8007f96 <osMessageQueueGet+0x5a>
 8007f48:	b329      	cbz	r1, 8007f96 <osMessageQueueGet+0x5a>
 8007f4a:	bb24      	cbnz	r4, 8007f96 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007f4c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007f4e:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007f50:	f000 ff59 	bl	8008e06 <xQueueReceiveFromISR>
 8007f54:	2801      	cmp	r0, #1
 8007f56:	d003      	beq.n	8007f60 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 8007f58:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007f5c:	b003      	add	sp, #12
 8007f5e:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8007f60:	9b01      	ldr	r3, [sp, #4]
 8007f62:	b90b      	cbnz	r3, 8007f68 <osMessageQueueGet+0x2c>
  stat = osOK;
 8007f64:	2000      	movs	r0, #0
 8007f66:	e7f9      	b.n	8007f5c <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 8007f68:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007f6c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007f70:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007f74:	f3bf 8f4f 	dsb	sy
 8007f78:	f3bf 8f6f 	isb	sy
 8007f7c:	e7f2      	b.n	8007f64 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007f7e:	b150      	cbz	r0, 8007f96 <osMessageQueueGet+0x5a>
 8007f80:	b149      	cbz	r1, 8007f96 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007f82:	4622      	mov	r2, r4
 8007f84:	f000 fde4 	bl	8008b50 <xQueueReceive>
 8007f88:	2801      	cmp	r0, #1
 8007f8a:	d0eb      	beq.n	8007f64 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8007f8c:	2c00      	cmp	r4, #0
 8007f8e:	d0e3      	beq.n	8007f58 <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 8007f90:	f06f 0001 	mvn.w	r0, #1
 8007f94:	e7e2      	b.n	8007f5c <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 8007f96:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007f9a:	e7df      	b.n	8007f5c <osMessageQueueGet+0x20>

08007f9c <osMessageQueueDelete>:
  }

  return (stat);
}

osStatus_t osMessageQueueDelete (osMessageQueueId_t mq_id) {
 8007f9c:	f7ff bf4f 	b.w	8007e3e <osSemaphoreDelete>

08007fa0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007fa0:	4b03      	ldr	r3, [pc, #12]	@ (8007fb0 <vApplicationGetIdleTaskMemory+0x10>)
 8007fa2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007fa4:	4b03      	ldr	r3, [pc, #12]	@ (8007fb4 <vApplicationGetIdleTaskMemory+0x14>)
 8007fa6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007fa8:	2380      	movs	r3, #128	@ 0x80
 8007faa:	6013      	str	r3, [r2, #0]
}
 8007fac:	4770      	bx	lr
 8007fae:	bf00      	nop
 8007fb0:	200038f0 	.word	0x200038f0
 8007fb4:	200036f0 	.word	0x200036f0

08007fb8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007fb8:	4b03      	ldr	r3, [pc, #12]	@ (8007fc8 <vApplicationGetTimerTaskMemory+0x10>)
 8007fba:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007fbc:	4b03      	ldr	r3, [pc, #12]	@ (8007fcc <vApplicationGetTimerTaskMemory+0x14>)
 8007fbe:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007fc0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8007fc4:	6013      	str	r3, [r2, #0]
}
 8007fc6:	4770      	bx	lr
 8007fc8:	20003644 	.word	0x20003644
 8007fcc:	20003244 	.word	0x20003244

08007fd0 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007fd0:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007fd2:	4b10      	ldr	r3, [pc, #64]	@ (8008014 <prvInsertBlockIntoFreeList+0x44>)
 8007fd4:	461a      	mov	r2, r3
 8007fd6:	681b      	ldr	r3, [r3, #0]
 8007fd8:	4283      	cmp	r3, r0
 8007fda:	d3fb      	bcc.n	8007fd4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007fdc:	6854      	ldr	r4, [r2, #4]
 8007fde:	1911      	adds	r1, r2, r4
 8007fe0:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007fe2:	bf01      	itttt	eq
 8007fe4:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 8007fe6:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007fe8:	1909      	addeq	r1, r1, r4
 8007fea:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007fec:	6844      	ldr	r4, [r0, #4]
 8007fee:	1901      	adds	r1, r0, r4
 8007ff0:	428b      	cmp	r3, r1
 8007ff2:	d10c      	bne.n	800800e <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007ff4:	4908      	ldr	r1, [pc, #32]	@ (8008018 <prvInsertBlockIntoFreeList+0x48>)
 8007ff6:	6809      	ldr	r1, [r1, #0]
 8007ff8:	428b      	cmp	r3, r1
 8007ffa:	d003      	beq.n	8008004 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007ffc:	6859      	ldr	r1, [r3, #4]
 8007ffe:	4421      	add	r1, r4
 8008000:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008002:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8008004:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008006:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008008:	bf18      	it	ne
 800800a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800800c:	bd10      	pop	{r4, pc}
 800800e:	4619      	mov	r1, r3
 8008010:	e7f8      	b.n	8008004 <prvInsertBlockIntoFreeList+0x34>
 8008012:	bf00      	nop
 8008014:	200039b8 	.word	0x200039b8
 8008018:	200039b4 	.word	0x200039b4

0800801c <pvPortMalloc>:
{
 800801c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008020:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008022:	f001 fa65 	bl	80094f0 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008026:	4942      	ldr	r1, [pc, #264]	@ (8008130 <pvPortMalloc+0x114>)
 8008028:	4d42      	ldr	r5, [pc, #264]	@ (8008134 <pvPortMalloc+0x118>)
 800802a:	680b      	ldr	r3, [r1, #0]
 800802c:	bb0b      	cbnz	r3, 8008072 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800802e:	4a42      	ldr	r2, [pc, #264]	@ (8008138 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008030:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008032:	bf1f      	itttt	ne
 8008034:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008036:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800803a:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800803e:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008040:	bf0c      	ite	eq
 8008042:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008046:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008048:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800804a:	4e3c      	ldr	r6, [pc, #240]	@ (800813c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800804c:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800804e:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008052:	2000      	movs	r0, #0
 8008054:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008056:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008058:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800805c:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800805e:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8008062:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008064:	4b36      	ldr	r3, [pc, #216]	@ (8008140 <pvPortMalloc+0x124>)
 8008066:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008068:	4b36      	ldr	r3, [pc, #216]	@ (8008144 <pvPortMalloc+0x128>)
 800806a:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800806c:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8008070:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008072:	682e      	ldr	r6, [r5, #0]
 8008074:	4226      	tst	r6, r4
 8008076:	d155      	bne.n	8008124 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8008078:	2c00      	cmp	r4, #0
 800807a:	d046      	beq.n	800810a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800807c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008080:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008082:	bf1c      	itt	ne
 8008084:	f023 0307 	bicne.w	r3, r3, #7
 8008088:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800808a:	2b00      	cmp	r3, #0
 800808c:	d04a      	beq.n	8008124 <pvPortMalloc+0x108>
 800808e:	4f2d      	ldr	r7, [pc, #180]	@ (8008144 <pvPortMalloc+0x128>)
 8008090:	683c      	ldr	r4, [r7, #0]
 8008092:	429c      	cmp	r4, r3
 8008094:	d346      	bcc.n	8008124 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8008096:	4a29      	ldr	r2, [pc, #164]	@ (800813c <pvPortMalloc+0x120>)
 8008098:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800809a:	6868      	ldr	r0, [r5, #4]
 800809c:	4298      	cmp	r0, r3
 800809e:	d204      	bcs.n	80080aa <pvPortMalloc+0x8e>
 80080a0:	f8d5 c000 	ldr.w	ip, [r5]
 80080a4:	f1bc 0f00 	cmp.w	ip, #0
 80080a8:	d115      	bne.n	80080d6 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80080aa:	6809      	ldr	r1, [r1, #0]
 80080ac:	42a9      	cmp	r1, r5
 80080ae:	d039      	beq.n	8008124 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80080b0:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80080b2:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80080b6:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80080b8:	1ac2      	subs	r2, r0, r3
 80080ba:	2a10      	cmp	r2, #16
 80080bc:	d912      	bls.n	80080e4 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80080be:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80080c0:	0741      	lsls	r1, r0, #29
 80080c2:	d00b      	beq.n	80080dc <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80080c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80080c8:	f383 8811 	msr	BASEPRI, r3
 80080cc:	f3bf 8f6f 	isb	sy
 80080d0:	f3bf 8f4f 	dsb	sy
 80080d4:	e7fe      	b.n	80080d4 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 80080d6:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 80080d8:	4665      	mov	r5, ip
 80080da:	e7de      	b.n	800809a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80080dc:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80080de:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80080e0:	f7ff ff76 	bl	8007fd0 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80080e4:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80080e6:	4916      	ldr	r1, [pc, #88]	@ (8008140 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80080e8:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80080ea:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 80080ec:	4a16      	ldr	r2, [pc, #88]	@ (8008148 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80080ee:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80080f0:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 80080f2:	2300      	movs	r3, #0
 80080f4:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80080f6:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80080f8:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80080fa:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 80080fc:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008100:	bf38      	it	cc
 8008102:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8008104:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008106:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800810a:	f001 fa95 	bl	8009638 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800810e:	0763      	lsls	r3, r4, #29
 8008110:	d00a      	beq.n	8008128 <pvPortMalloc+0x10c>
 8008112:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008116:	f383 8811 	msr	BASEPRI, r3
 800811a:	f3bf 8f6f 	isb	sy
 800811e:	f3bf 8f4f 	dsb	sy
 8008122:	e7fe      	b.n	8008122 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8008124:	2400      	movs	r4, #0
 8008126:	e7f0      	b.n	800810a <pvPortMalloc+0xee>
}
 8008128:	4620      	mov	r0, r4
 800812a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800812e:	bf00      	nop
 8008130:	200039b4 	.word	0x200039b4
 8008134:	200039a0 	.word	0x200039a0
 8008138:	200039c0 	.word	0x200039c0
 800813c:	200039b8 	.word	0x200039b8
 8008140:	200039ac 	.word	0x200039ac
 8008144:	200039b0 	.word	0x200039b0
 8008148:	200039a8 	.word	0x200039a8

0800814c <vPortFree>:
{
 800814c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800814e:	4604      	mov	r4, r0
 8008150:	b390      	cbz	r0, 80081b8 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008152:	4a1a      	ldr	r2, [pc, #104]	@ (80081bc <vPortFree+0x70>)
 8008154:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008158:	6812      	ldr	r2, [r2, #0]
 800815a:	4213      	tst	r3, r2
 800815c:	d108      	bne.n	8008170 <vPortFree+0x24>
 800815e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008162:	f383 8811 	msr	BASEPRI, r3
 8008166:	f3bf 8f6f 	isb	sy
 800816a:	f3bf 8f4f 	dsb	sy
 800816e:	e7fe      	b.n	800816e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008170:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008174:	b141      	cbz	r1, 8008188 <vPortFree+0x3c>
 8008176:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800817a:	f383 8811 	msr	BASEPRI, r3
 800817e:	f3bf 8f6f 	isb	sy
 8008182:	f3bf 8f4f 	dsb	sy
 8008186:	e7fe      	b.n	8008186 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008188:	ea23 0302 	bic.w	r3, r3, r2
 800818c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008190:	f001 f9ae 	bl	80094f0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008194:	4a0a      	ldr	r2, [pc, #40]	@ (80081c0 <vPortFree+0x74>)
 8008196:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800819a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800819c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80081a0:	440b      	add	r3, r1
 80081a2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80081a4:	f7ff ff14 	bl	8007fd0 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80081a8:	4a06      	ldr	r2, [pc, #24]	@ (80081c4 <vPortFree+0x78>)
 80081aa:	6813      	ldr	r3, [r2, #0]
}
 80081ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80081b0:	3301      	adds	r3, #1
 80081b2:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80081b4:	f001 ba40 	b.w	8009638 <xTaskResumeAll>
}
 80081b8:	bd10      	pop	{r4, pc}
 80081ba:	bf00      	nop
 80081bc:	200039a0 	.word	0x200039a0
 80081c0:	200039b0 	.word	0x200039b0
 80081c4:	200039a4 	.word	0x200039a4

080081c8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80081c8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80081cc:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80081d0:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80081d4:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80081d6:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80081d8:	2300      	movs	r3, #0
 80081da:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80081dc:	4770      	bx	lr

080081de <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80081de:	2300      	movs	r3, #0
 80081e0:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80081e2:	4770      	bx	lr

080081e4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80081e4:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80081e6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80081e8:	689a      	ldr	r2, [r3, #8]
 80081ea:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80081ec:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80081ee:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80081f0:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80081f2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80081f4:	3301      	adds	r3, #1
 80081f6:	6003      	str	r3, [r0, #0]
}
 80081f8:	4770      	bx	lr

080081fa <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80081fa:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80081fc:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80081fe:	1c63      	adds	r3, r4, #1
 8008200:	d10a      	bne.n	8008218 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008202:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008204:	685a      	ldr	r2, [r3, #4]
 8008206:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008208:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800820a:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800820c:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800820e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008210:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008212:	3301      	adds	r3, #1
 8008214:	6003      	str	r3, [r0, #0]
}
 8008216:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008218:	f100 0208 	add.w	r2, r0, #8
 800821c:	4613      	mov	r3, r2
 800821e:	6852      	ldr	r2, [r2, #4]
 8008220:	6815      	ldr	r5, [r2, #0]
 8008222:	42a5      	cmp	r5, r4
 8008224:	d9fa      	bls.n	800821c <vListInsert+0x22>
 8008226:	e7ed      	b.n	8008204 <vListInsert+0xa>

08008228 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008228:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800822c:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800822e:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008230:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008232:	6859      	ldr	r1, [r3, #4]
 8008234:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008236:	bf08      	it	eq
 8008238:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800823a:	2200      	movs	r2, #0
 800823c:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800823e:	681a      	ldr	r2, [r3, #0]
 8008240:	3a01      	subs	r2, #1
 8008242:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008244:	6818      	ldr	r0, [r3, #0]
}
 8008246:	4770      	bx	lr

08008248 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008248:	4808      	ldr	r0, [pc, #32]	@ (800826c <prvPortStartFirstTask+0x24>)
 800824a:	6800      	ldr	r0, [r0, #0]
 800824c:	6800      	ldr	r0, [r0, #0]
 800824e:	f380 8808 	msr	MSP, r0
 8008252:	f04f 0000 	mov.w	r0, #0
 8008256:	f380 8814 	msr	CONTROL, r0
 800825a:	b662      	cpsie	i
 800825c:	b661      	cpsie	f
 800825e:	f3bf 8f4f 	dsb	sy
 8008262:	f3bf 8f6f 	isb	sy
 8008266:	df00      	svc	0
 8008268:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800826a:	0000      	.short	0x0000
 800826c:	e000ed08 	.word	0xe000ed08

08008270 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008270:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8008280 <vPortEnableVFP+0x10>
 8008274:	6801      	ldr	r1, [r0, #0]
 8008276:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800827a:	6001      	str	r1, [r0, #0]
 800827c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800827e:	0000      	.short	0x0000
 8008280:	e000ed88 	.word	0xe000ed88

08008284 <prvTaskExitError>:
{
 8008284:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008286:	2300      	movs	r3, #0
 8008288:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800828a:	4b0d      	ldr	r3, [pc, #52]	@ (80082c0 <prvTaskExitError+0x3c>)
 800828c:	681b      	ldr	r3, [r3, #0]
 800828e:	3301      	adds	r3, #1
 8008290:	d008      	beq.n	80082a4 <prvTaskExitError+0x20>
 8008292:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008296:	f383 8811 	msr	BASEPRI, r3
 800829a:	f3bf 8f6f 	isb	sy
 800829e:	f3bf 8f4f 	dsb	sy
 80082a2:	e7fe      	b.n	80082a2 <prvTaskExitError+0x1e>
 80082a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082a8:	f383 8811 	msr	BASEPRI, r3
 80082ac:	f3bf 8f6f 	isb	sy
 80082b0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80082b4:	9b01      	ldr	r3, [sp, #4]
 80082b6:	2b00      	cmp	r3, #0
 80082b8:	d0fc      	beq.n	80082b4 <prvTaskExitError+0x30>
}
 80082ba:	b002      	add	sp, #8
 80082bc:	4770      	bx	lr
 80082be:	bf00      	nop
 80082c0:	200000d0 	.word	0x200000d0

080082c4 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80082c4:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80082c8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80082cc:	4b07      	ldr	r3, [pc, #28]	@ (80082ec <pxPortInitialiseStack+0x28>)
 80082ce:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80082d2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80082d6:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80082da:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80082de:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80082e2:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80082e6:	3844      	subs	r0, #68	@ 0x44
 80082e8:	4770      	bx	lr
 80082ea:	bf00      	nop
 80082ec:	08008285 	.word	0x08008285

080082f0 <SVC_Handler>:
	__asm volatile (
 80082f0:	4b07      	ldr	r3, [pc, #28]	@ (8008310 <pxCurrentTCBConst2>)
 80082f2:	6819      	ldr	r1, [r3, #0]
 80082f4:	6808      	ldr	r0, [r1, #0]
 80082f6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80082fa:	f380 8809 	msr	PSP, r0
 80082fe:	f3bf 8f6f 	isb	sy
 8008302:	f04f 0000 	mov.w	r0, #0
 8008306:	f380 8811 	msr	BASEPRI, r0
 800830a:	4770      	bx	lr
 800830c:	f3af 8000 	nop.w

08008310 <pxCurrentTCBConst2>:
 8008310:	20013f00 	.word	0x20013f00

08008314 <vPortEnterCritical>:
 8008314:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008318:	f383 8811 	msr	BASEPRI, r3
 800831c:	f3bf 8f6f 	isb	sy
 8008320:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008324:	4a0a      	ldr	r2, [pc, #40]	@ (8008350 <vPortEnterCritical+0x3c>)
 8008326:	6813      	ldr	r3, [r2, #0]
 8008328:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800832a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800832c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800832e:	d10e      	bne.n	800834e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008330:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008334:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8008338:	b2db      	uxtb	r3, r3
 800833a:	b143      	cbz	r3, 800834e <vPortEnterCritical+0x3a>
 800833c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008340:	f383 8811 	msr	BASEPRI, r3
 8008344:	f3bf 8f6f 	isb	sy
 8008348:	f3bf 8f4f 	dsb	sy
 800834c:	e7fe      	b.n	800834c <vPortEnterCritical+0x38>
}
 800834e:	4770      	bx	lr
 8008350:	200000d0 	.word	0x200000d0

08008354 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008354:	4a08      	ldr	r2, [pc, #32]	@ (8008378 <vPortExitCritical+0x24>)
 8008356:	6813      	ldr	r3, [r2, #0]
 8008358:	b943      	cbnz	r3, 800836c <vPortExitCritical+0x18>
 800835a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800835e:	f383 8811 	msr	BASEPRI, r3
 8008362:	f3bf 8f6f 	isb	sy
 8008366:	f3bf 8f4f 	dsb	sy
 800836a:	e7fe      	b.n	800836a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800836c:	3b01      	subs	r3, #1
 800836e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008370:	b90b      	cbnz	r3, 8008376 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008372:	f383 8811 	msr	BASEPRI, r3
}
 8008376:	4770      	bx	lr
 8008378:	200000d0 	.word	0x200000d0
 800837c:	00000000 	.word	0x00000000

08008380 <PendSV_Handler>:
	__asm volatile
 8008380:	f3ef 8009 	mrs	r0, PSP
 8008384:	f3bf 8f6f 	isb	sy
 8008388:	4b15      	ldr	r3, [pc, #84]	@ (80083e0 <pxCurrentTCBConst>)
 800838a:	681a      	ldr	r2, [r3, #0]
 800838c:	f01e 0f10 	tst.w	lr, #16
 8008390:	bf08      	it	eq
 8008392:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008396:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800839a:	6010      	str	r0, [r2, #0]
 800839c:	e92d 0009 	stmdb	sp!, {r0, r3}
 80083a0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80083a4:	f380 8811 	msr	BASEPRI, r0
 80083a8:	f3bf 8f4f 	dsb	sy
 80083ac:	f3bf 8f6f 	isb	sy
 80083b0:	f001 f9da 	bl	8009768 <vTaskSwitchContext>
 80083b4:	f04f 0000 	mov.w	r0, #0
 80083b8:	f380 8811 	msr	BASEPRI, r0
 80083bc:	bc09      	pop	{r0, r3}
 80083be:	6819      	ldr	r1, [r3, #0]
 80083c0:	6808      	ldr	r0, [r1, #0]
 80083c2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80083c6:	f01e 0f10 	tst.w	lr, #16
 80083ca:	bf08      	it	eq
 80083cc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80083d0:	f380 8809 	msr	PSP, r0
 80083d4:	f3bf 8f6f 	isb	sy
 80083d8:	4770      	bx	lr
 80083da:	bf00      	nop
 80083dc:	f3af 8000 	nop.w

080083e0 <pxCurrentTCBConst>:
 80083e0:	20013f00 	.word	0x20013f00

080083e4 <xPortSysTickHandler>:
{
 80083e4:	b508      	push	{r3, lr}
	__asm volatile
 80083e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083ea:	f383 8811 	msr	BASEPRI, r3
 80083ee:	f3bf 8f6f 	isb	sy
 80083f2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80083f6:	f001 f889 	bl	800950c <xTaskIncrementTick>
 80083fa:	b128      	cbz	r0, 8008408 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80083fc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008400:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008404:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8008408:	2300      	movs	r3, #0
 800840a:	f383 8811 	msr	BASEPRI, r3
}
 800840e:	bd08      	pop	{r3, pc}

08008410 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008410:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008414:	2300      	movs	r3, #0
 8008416:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008418:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800841a:	4b05      	ldr	r3, [pc, #20]	@ (8008430 <vPortSetupTimerInterrupt+0x20>)
 800841c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8008420:	681b      	ldr	r3, [r3, #0]
 8008422:	fbb3 f3f1 	udiv	r3, r3, r1
 8008426:	3b01      	subs	r3, #1
 8008428:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800842a:	2307      	movs	r3, #7
 800842c:	6113      	str	r3, [r2, #16]
}
 800842e:	4770      	bx	lr
 8008430:	200000c4 	.word	0x200000c4

08008434 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008434:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8008438:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800843a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800843e:	4a38      	ldr	r2, [pc, #224]	@ (8008520 <xPortStartScheduler+0xec>)
 8008440:	4291      	cmp	r1, r2
 8008442:	d108      	bne.n	8008456 <xPortStartScheduler+0x22>
	__asm volatile
 8008444:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008448:	f383 8811 	msr	BASEPRI, r3
 800844c:	f3bf 8f6f 	isb	sy
 8008450:	f3bf 8f4f 	dsb	sy
 8008454:	e7fe      	b.n	8008454 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008456:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800845a:	4b32      	ldr	r3, [pc, #200]	@ (8008524 <xPortStartScheduler+0xf0>)
 800845c:	429a      	cmp	r2, r3
 800845e:	d108      	bne.n	8008472 <xPortStartScheduler+0x3e>
 8008460:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008464:	f383 8811 	msr	BASEPRI, r3
 8008468:	f3bf 8f6f 	isb	sy
 800846c:	f3bf 8f4f 	dsb	sy
 8008470:	e7fe      	b.n	8008470 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008472:	4b2d      	ldr	r3, [pc, #180]	@ (8008528 <xPortStartScheduler+0xf4>)
 8008474:	781a      	ldrb	r2, [r3, #0]
 8008476:	b2d2      	uxtb	r2, r2
 8008478:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800847a:	22ff      	movs	r2, #255	@ 0xff
 800847c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800847e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008480:	4a2a      	ldr	r2, [pc, #168]	@ (800852c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008482:	b2db      	uxtb	r3, r3
 8008484:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008488:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800848c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8008490:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008492:	4a27      	ldr	r2, [pc, #156]	@ (8008530 <xPortStartScheduler+0xfc>)
 8008494:	2307      	movs	r3, #7
 8008496:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008498:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800849c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800849e:	0609      	lsls	r1, r1, #24
 80084a0:	d40a      	bmi.n	80084b8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80084a2:	2b03      	cmp	r3, #3
 80084a4:	d011      	beq.n	80084ca <xPortStartScheduler+0x96>
 80084a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084aa:	f383 8811 	msr	BASEPRI, r3
 80084ae:	f3bf 8f6f 	isb	sy
 80084b2:	f3bf 8f4f 	dsb	sy
 80084b6:	e7fe      	b.n	80084b6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 80084b8:	3b01      	subs	r3, #1
 80084ba:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80084bc:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80084c0:	005b      	lsls	r3, r3, #1
 80084c2:	b2db      	uxtb	r3, r3
 80084c4:	f88d 3003 	strb.w	r3, [sp, #3]
 80084c8:	e7e6      	b.n	8008498 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80084ca:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80084ce:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80084d0:	9b01      	ldr	r3, [sp, #4]
 80084d2:	4a15      	ldr	r2, [pc, #84]	@ (8008528 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80084d4:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80084d8:	b2db      	uxtb	r3, r3
 80084da:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80084dc:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80084e0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80084e4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80084e8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80084ec:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 80084f0:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 80084f4:	f7ff ff8c 	bl	8008410 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80084f8:	4b0e      	ldr	r3, [pc, #56]	@ (8008534 <xPortStartScheduler+0x100>)
 80084fa:	2500      	movs	r5, #0
 80084fc:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 80084fe:	f7ff feb7 	bl	8008270 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008502:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8008506:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800850a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800850e:	f7ff fe9b 	bl	8008248 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008512:	f001 f929 	bl	8009768 <vTaskSwitchContext>
	prvTaskExitError();
 8008516:	f7ff feb5 	bl	8008284 <prvTaskExitError>
}
 800851a:	4628      	mov	r0, r5
 800851c:	b003      	add	sp, #12
 800851e:	bd30      	pop	{r4, r5, pc}
 8008520:	410fc271 	.word	0x410fc271
 8008524:	410fc270 	.word	0x410fc270
 8008528:	e000e400 	.word	0xe000e400
 800852c:	200139c4 	.word	0x200139c4
 8008530:	200139c0 	.word	0x200139c0
 8008534:	200000d0 	.word	0x200000d0

08008538 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008538:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800853c:	2b0f      	cmp	r3, #15
 800853e:	d90e      	bls.n	800855e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008540:	4a11      	ldr	r2, [pc, #68]	@ (8008588 <vPortValidateInterruptPriority+0x50>)
 8008542:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008544:	4a11      	ldr	r2, [pc, #68]	@ (800858c <vPortValidateInterruptPriority+0x54>)
 8008546:	7812      	ldrb	r2, [r2, #0]
 8008548:	429a      	cmp	r2, r3
 800854a:	d908      	bls.n	800855e <vPortValidateInterruptPriority+0x26>
 800854c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008550:	f383 8811 	msr	BASEPRI, r3
 8008554:	f3bf 8f6f 	isb	sy
 8008558:	f3bf 8f4f 	dsb	sy
 800855c:	e7fe      	b.n	800855c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800855e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008562:	4a0b      	ldr	r2, [pc, #44]	@ (8008590 <vPortValidateInterruptPriority+0x58>)
 8008564:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8008568:	6812      	ldr	r2, [r2, #0]
 800856a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800856e:	4293      	cmp	r3, r2
 8008570:	d908      	bls.n	8008584 <vPortValidateInterruptPriority+0x4c>
 8008572:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008576:	f383 8811 	msr	BASEPRI, r3
 800857a:	f3bf 8f6f 	isb	sy
 800857e:	f3bf 8f4f 	dsb	sy
 8008582:	e7fe      	b.n	8008582 <vPortValidateInterruptPriority+0x4a>
	}
 8008584:	4770      	bx	lr
 8008586:	bf00      	nop
 8008588:	e000e3f0 	.word	0xe000e3f0
 800858c:	200139c4 	.word	0x200139c4
 8008590:	200139c0 	.word	0x200139c0

08008594 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008594:	b510      	push	{r4, lr}
 8008596:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008598:	f7ff febc 	bl	8008314 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800859c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800859e:	f7ff fed9 	bl	8008354 <vPortExitCritical>

	return xReturn;
}
 80085a2:	fab4 f084 	clz	r0, r4
 80085a6:	0940      	lsrs	r0, r0, #5
 80085a8:	bd10      	pop	{r4, pc}

080085aa <prvCopyDataToQueue>:
{
 80085aa:	b570      	push	{r4, r5, r6, lr}
 80085ac:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80085ae:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80085b0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 80085b2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80085b4:	b942      	cbnz	r2, 80085c8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80085b6:	6806      	ldr	r6, [r0, #0]
 80085b8:	b99e      	cbnz	r6, 80085e2 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80085ba:	6880      	ldr	r0, [r0, #8]
 80085bc:	f001 fa28 	bl	8009a10 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80085c0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80085c2:	3501      	adds	r5, #1
 80085c4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 80085c6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80085c8:	b96e      	cbnz	r6, 80085e6 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80085ca:	6840      	ldr	r0, [r0, #4]
 80085cc:	f01b fa3b 	bl	8023a46 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80085d0:	6863      	ldr	r3, [r4, #4]
 80085d2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80085d4:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80085d6:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80085d8:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80085da:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80085dc:	bf24      	itt	cs
 80085de:	6823      	ldrcs	r3, [r4, #0]
 80085e0:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 80085e2:	2000      	movs	r0, #0
 80085e4:	e7ed      	b.n	80085c2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80085e6:	68c0      	ldr	r0, [r0, #12]
 80085e8:	f01b fa2d 	bl	8023a46 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80085ec:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80085ee:	68e3      	ldr	r3, [r4, #12]
 80085f0:	4251      	negs	r1, r2
 80085f2:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80085f4:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80085f6:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80085f8:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80085fa:	bf3e      	ittt	cc
 80085fc:	68a3      	ldrcc	r3, [r4, #8]
 80085fe:	185b      	addcc	r3, r3, r1
 8008600:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008602:	2e02      	cmp	r6, #2
 8008604:	d1ed      	bne.n	80085e2 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008606:	b10d      	cbz	r5, 800860c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8008608:	3d01      	subs	r5, #1
 800860a:	e7ea      	b.n	80085e2 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800860c:	4628      	mov	r0, r5
 800860e:	e7d8      	b.n	80085c2 <prvCopyDataToQueue+0x18>

08008610 <prvCopyDataFromQueue>:
{
 8008610:	4603      	mov	r3, r0
 8008612:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008614:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8008616:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008618:	b16a      	cbz	r2, 8008636 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800861a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800861c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800861e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008620:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008622:	bf28      	it	cs
 8008624:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008626:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008628:	bf28      	it	cs
 800862a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800862c:	68d9      	ldr	r1, [r3, #12]
}
 800862e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008632:	f01b ba08 	b.w	8023a46 <memcpy>
}
 8008636:	f85d 4b04 	ldr.w	r4, [sp], #4
 800863a:	4770      	bx	lr

0800863c <prvUnlockQueue>:
{
 800863c:	b570      	push	{r4, r5, r6, lr}
 800863e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008640:	f7ff fe68 	bl	8008314 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008644:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008648:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800864c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800864e:	2d00      	cmp	r5, #0
 8008650:	dd01      	ble.n	8008656 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008652:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008654:	b9b3      	cbnz	r3, 8008684 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8008656:	23ff      	movs	r3, #255	@ 0xff
 8008658:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800865c:	f7ff fe7a 	bl	8008354 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008660:	f7ff fe58 	bl	8008314 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008664:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008668:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800866c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800866e:	2d00      	cmp	r5, #0
 8008670:	dd01      	ble.n	8008676 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008672:	6923      	ldr	r3, [r4, #16]
 8008674:	b97b      	cbnz	r3, 8008696 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8008676:	23ff      	movs	r3, #255	@ 0xff
 8008678:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800867c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008680:	f7ff be68 	b.w	8008354 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008684:	4630      	mov	r0, r6
 8008686:	f001 f8e7 	bl	8009858 <xTaskRemoveFromEventList>
 800868a:	b108      	cbz	r0, 8008690 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 800868c:	f001 f96c 	bl	8009968 <vTaskMissedYield>
			--cTxLock;
 8008690:	3d01      	subs	r5, #1
 8008692:	b26d      	sxtb	r5, r5
 8008694:	e7db      	b.n	800864e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008696:	4630      	mov	r0, r6
 8008698:	f001 f8de 	bl	8009858 <xTaskRemoveFromEventList>
 800869c:	b108      	cbz	r0, 80086a2 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 800869e:	f001 f963 	bl	8009968 <vTaskMissedYield>
				--cRxLock;
 80086a2:	3d01      	subs	r5, #1
 80086a4:	b26d      	sxtb	r5, r5
 80086a6:	e7e2      	b.n	800866e <prvUnlockQueue+0x32>

080086a8 <xQueueGenericReset>:
{
 80086a8:	b538      	push	{r3, r4, r5, lr}
 80086aa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80086ac:	4604      	mov	r4, r0
 80086ae:	b940      	cbnz	r0, 80086c2 <xQueueGenericReset+0x1a>
 80086b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086b4:	f383 8811 	msr	BASEPRI, r3
 80086b8:	f3bf 8f6f 	isb	sy
 80086bc:	f3bf 8f4f 	dsb	sy
 80086c0:	e7fe      	b.n	80086c0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80086c2:	f7ff fe27 	bl	8008314 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086c6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 80086ca:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80086cc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086ce:	434b      	muls	r3, r1
 80086d0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086d2:	1a5b      	subs	r3, r3, r1
 80086d4:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086d6:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 80086d8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80086da:	2000      	movs	r0, #0
 80086dc:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086de:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 80086e0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80086e4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 80086e8:	b9a5      	cbnz	r5, 8008714 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80086ea:	6923      	ldr	r3, [r4, #16]
 80086ec:	b173      	cbz	r3, 800870c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80086ee:	f104 0010 	add.w	r0, r4, #16
 80086f2:	f001 f8b1 	bl	8009858 <xTaskRemoveFromEventList>
 80086f6:	b148      	cbz	r0, 800870c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 80086f8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80086fc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008700:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008704:	f3bf 8f4f 	dsb	sy
 8008708:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800870c:	f7ff fe22 	bl	8008354 <vPortExitCritical>
}
 8008710:	2001      	movs	r0, #1
 8008712:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008714:	f104 0010 	add.w	r0, r4, #16
 8008718:	f7ff fd56 	bl	80081c8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800871c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008720:	f7ff fd52 	bl	80081c8 <vListInitialise>
 8008724:	e7f2      	b.n	800870c <xQueueGenericReset+0x64>

08008726 <xQueueGenericCreateStatic>:
	{
 8008726:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008728:	460d      	mov	r5, r1
 800872a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800872c:	b940      	cbnz	r0, 8008740 <xQueueGenericCreateStatic+0x1a>
 800872e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008732:	f383 8811 	msr	BASEPRI, r3
 8008736:	f3bf 8f6f 	isb	sy
 800873a:	f3bf 8f4f 	dsb	sy
 800873e:	e7fe      	b.n	800873e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8008740:	b943      	cbnz	r3, 8008754 <xQueueGenericCreateStatic+0x2e>
 8008742:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008746:	f383 8811 	msr	BASEPRI, r3
 800874a:	f3bf 8f6f 	isb	sy
 800874e:	f3bf 8f4f 	dsb	sy
 8008752:	e7fe      	b.n	8008752 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008754:	b14a      	cbz	r2, 800876a <xQueueGenericCreateStatic+0x44>
 8008756:	b991      	cbnz	r1, 800877e <xQueueGenericCreateStatic+0x58>
 8008758:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800875c:	f383 8811 	msr	BASEPRI, r3
 8008760:	f3bf 8f6f 	isb	sy
 8008764:	f3bf 8f4f 	dsb	sy
 8008768:	e7fe      	b.n	8008768 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800876a:	b141      	cbz	r1, 800877e <xQueueGenericCreateStatic+0x58>
 800876c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008770:	f383 8811 	msr	BASEPRI, r3
 8008774:	f3bf 8f6f 	isb	sy
 8008778:	f3bf 8f4f 	dsb	sy
 800877c:	e7fe      	b.n	800877c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800877e:	2350      	movs	r3, #80	@ 0x50
 8008780:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008782:	9b01      	ldr	r3, [sp, #4]
 8008784:	2b50      	cmp	r3, #80	@ 0x50
 8008786:	d008      	beq.n	800879a <xQueueGenericCreateStatic+0x74>
 8008788:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800878c:	f383 8811 	msr	BASEPRI, r3
 8008790:	f3bf 8f6f 	isb	sy
 8008794:	f3bf 8f4f 	dsb	sy
 8008798:	e7fe      	b.n	8008798 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800879a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800879c:	2d00      	cmp	r5, #0
 800879e:	bf08      	it	eq
 80087a0:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 80087a2:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80087a6:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 80087aa:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80087ac:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80087ae:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80087b0:	f7ff ff7a 	bl	80086a8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80087b4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80087b8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 80087bc:	4620      	mov	r0, r4
 80087be:	b003      	add	sp, #12
 80087c0:	bd30      	pop	{r4, r5, pc}

080087c2 <xQueueGenericCreate>:
	{
 80087c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80087c4:	460d      	mov	r5, r1
 80087c6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80087c8:	4606      	mov	r6, r0
 80087ca:	b940      	cbnz	r0, 80087de <xQueueGenericCreate+0x1c>
 80087cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087d0:	f383 8811 	msr	BASEPRI, r3
 80087d4:	f3bf 8f6f 	isb	sy
 80087d8:	f3bf 8f4f 	dsb	sy
 80087dc:	e7fe      	b.n	80087dc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80087de:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80087e0:	3050      	adds	r0, #80	@ 0x50
 80087e2:	f7ff fc1b 	bl	800801c <pvPortMalloc>
		if( pxNewQueue != NULL )
 80087e6:	4604      	mov	r4, r0
 80087e8:	b170      	cbz	r0, 8008808 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80087ea:	2300      	movs	r3, #0
 80087ec:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80087f0:	b165      	cbz	r5, 800880c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80087f2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 80087f6:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 80087fa:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80087fc:	2101      	movs	r1, #1
 80087fe:	4620      	mov	r0, r4
 8008800:	f7ff ff52 	bl	80086a8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008804:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8008808:	4620      	mov	r0, r4
 800880a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800880c:	4603      	mov	r3, r0
 800880e:	e7f2      	b.n	80087f6 <xQueueGenericCreate+0x34>

08008810 <xQueueCreateCountingSemaphoreStatic>:
	{
 8008810:	b513      	push	{r0, r1, r4, lr}
 8008812:	4613      	mov	r3, r2
 8008814:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008816:	b940      	cbnz	r0, 800882a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008818:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800881c:	f383 8811 	msr	BASEPRI, r3
 8008820:	f3bf 8f6f 	isb	sy
 8008824:	f3bf 8f4f 	dsb	sy
 8008828:	e7fe      	b.n	8008828 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800882a:	4288      	cmp	r0, r1
 800882c:	d208      	bcs.n	8008840 <xQueueCreateCountingSemaphoreStatic+0x30>
 800882e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008832:	f383 8811 	msr	BASEPRI, r3
 8008836:	f3bf 8f6f 	isb	sy
 800883a:	f3bf 8f4f 	dsb	sy
 800883e:	e7fe      	b.n	800883e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008840:	2202      	movs	r2, #2
 8008842:	9200      	str	r2, [sp, #0]
 8008844:	2200      	movs	r2, #0
 8008846:	4611      	mov	r1, r2
 8008848:	f7ff ff6d 	bl	8008726 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800884c:	b100      	cbz	r0, 8008850 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800884e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008850:	b002      	add	sp, #8
 8008852:	bd10      	pop	{r4, pc}

08008854 <xQueueCreateCountingSemaphore>:
	{
 8008854:	b510      	push	{r4, lr}
 8008856:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008858:	b940      	cbnz	r0, 800886c <xQueueCreateCountingSemaphore+0x18>
 800885a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800885e:	f383 8811 	msr	BASEPRI, r3
 8008862:	f3bf 8f6f 	isb	sy
 8008866:	f3bf 8f4f 	dsb	sy
 800886a:	e7fe      	b.n	800886a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800886c:	4288      	cmp	r0, r1
 800886e:	d208      	bcs.n	8008882 <xQueueCreateCountingSemaphore+0x2e>
 8008870:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008874:	f383 8811 	msr	BASEPRI, r3
 8008878:	f3bf 8f6f 	isb	sy
 800887c:	f3bf 8f4f 	dsb	sy
 8008880:	e7fe      	b.n	8008880 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008882:	2202      	movs	r2, #2
 8008884:	2100      	movs	r1, #0
 8008886:	f7ff ff9c 	bl	80087c2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800888a:	b100      	cbz	r0, 800888e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800888c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800888e:	bd10      	pop	{r4, pc}

08008890 <xQueueGenericSend>:
{
 8008890:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008894:	460f      	mov	r7, r1
 8008896:	9201      	str	r2, [sp, #4]
 8008898:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800889a:	4604      	mov	r4, r0
 800889c:	b940      	cbnz	r0, 80088b0 <xQueueGenericSend+0x20>
 800889e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088a2:	f383 8811 	msr	BASEPRI, r3
 80088a6:	f3bf 8f6f 	isb	sy
 80088aa:	f3bf 8f4f 	dsb	sy
 80088ae:	e7fe      	b.n	80088ae <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80088b0:	b951      	cbnz	r1, 80088c8 <xQueueGenericSend+0x38>
 80088b2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80088b4:	b143      	cbz	r3, 80088c8 <xQueueGenericSend+0x38>
 80088b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088ba:	f383 8811 	msr	BASEPRI, r3
 80088be:	f3bf 8f6f 	isb	sy
 80088c2:	f3bf 8f4f 	dsb	sy
 80088c6:	e7fe      	b.n	80088c6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80088c8:	2e02      	cmp	r6, #2
 80088ca:	d10b      	bne.n	80088e4 <xQueueGenericSend+0x54>
 80088cc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80088ce:	2b01      	cmp	r3, #1
 80088d0:	d008      	beq.n	80088e4 <xQueueGenericSend+0x54>
 80088d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088d6:	f383 8811 	msr	BASEPRI, r3
 80088da:	f3bf 8f6f 	isb	sy
 80088de:	f3bf 8f4f 	dsb	sy
 80088e2:	e7fe      	b.n	80088e2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80088e4:	f001 f846 	bl	8009974 <xTaskGetSchedulerState>
 80088e8:	4605      	mov	r5, r0
 80088ea:	b320      	cbz	r0, 8008936 <xQueueGenericSend+0xa6>
 80088ec:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80088ee:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80088f2:	f7ff fd0f 	bl	8008314 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80088f6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80088f8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80088fa:	429a      	cmp	r2, r3
 80088fc:	d227      	bcs.n	800894e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80088fe:	4632      	mov	r2, r6
 8008900:	4639      	mov	r1, r7
 8008902:	4620      	mov	r0, r4
 8008904:	f7ff fe51 	bl	80085aa <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008908:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800890a:	b11b      	cbz	r3, 8008914 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800890c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008910:	f000 ffa2 	bl	8009858 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008914:	b148      	cbz	r0, 800892a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8008916:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800891a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800891e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008922:	f3bf 8f4f 	dsb	sy
 8008926:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800892a:	f7ff fd13 	bl	8008354 <vPortExitCritical>
				return pdPASS;
 800892e:	2001      	movs	r0, #1
}
 8008930:	b004      	add	sp, #16
 8008932:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008936:	9b01      	ldr	r3, [sp, #4]
 8008938:	2b00      	cmp	r3, #0
 800893a:	d0d8      	beq.n	80088ee <xQueueGenericSend+0x5e>
 800893c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008940:	f383 8811 	msr	BASEPRI, r3
 8008944:	f3bf 8f6f 	isb	sy
 8008948:	f3bf 8f4f 	dsb	sy
 800894c:	e7fe      	b.n	800894c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800894e:	2e02      	cmp	r6, #2
 8008950:	d0d5      	beq.n	80088fe <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008952:	9b01      	ldr	r3, [sp, #4]
 8008954:	b91b      	cbnz	r3, 800895e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8008956:	f7ff fcfd 	bl	8008354 <vPortExitCritical>
					return errQUEUE_FULL;
 800895a:	2000      	movs	r0, #0
 800895c:	e7e8      	b.n	8008930 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800895e:	b915      	cbnz	r5, 8008966 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008960:	a802      	add	r0, sp, #8
 8008962:	f000 ffb9 	bl	80098d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008966:	f7ff fcf5 	bl	8008354 <vPortExitCritical>
		vTaskSuspendAll();
 800896a:	f000 fdc1 	bl	80094f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800896e:	f7ff fcd1 	bl	8008314 <vPortEnterCritical>
 8008972:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008976:	2bff      	cmp	r3, #255	@ 0xff
 8008978:	bf08      	it	eq
 800897a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800897e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008982:	2bff      	cmp	r3, #255	@ 0xff
 8008984:	bf08      	it	eq
 8008986:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800898a:	f7ff fce3 	bl	8008354 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800898e:	a901      	add	r1, sp, #4
 8008990:	a802      	add	r0, sp, #8
 8008992:	f000 ffad 	bl	80098f0 <xTaskCheckForTimeOut>
 8008996:	bb38      	cbnz	r0, 80089e8 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008998:	f7ff fcbc 	bl	8008314 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800899c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800899e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80089a0:	429a      	cmp	r2, r3
 80089a2:	d10e      	bne.n	80089c2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80089a4:	f7ff fcd6 	bl	8008354 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80089a8:	9901      	ldr	r1, [sp, #4]
 80089aa:	f104 0010 	add.w	r0, r4, #16
 80089ae:	f000 ff1b 	bl	80097e8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80089b2:	4620      	mov	r0, r4
 80089b4:	f7ff fe42 	bl	800863c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80089b8:	f000 fe3e 	bl	8009638 <xTaskResumeAll>
 80089bc:	b148      	cbz	r0, 80089d2 <xQueueGenericSend+0x142>
 80089be:	2501      	movs	r5, #1
 80089c0:	e797      	b.n	80088f2 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 80089c2:	f7ff fcc7 	bl	8008354 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80089c6:	4620      	mov	r0, r4
 80089c8:	f7ff fe38 	bl	800863c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80089cc:	f000 fe34 	bl	8009638 <xTaskResumeAll>
 80089d0:	e7f5      	b.n	80089be <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 80089d2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80089d6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80089da:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80089de:	f3bf 8f4f 	dsb	sy
 80089e2:	f3bf 8f6f 	isb	sy
 80089e6:	e7ea      	b.n	80089be <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 80089e8:	4620      	mov	r0, r4
 80089ea:	f7ff fe27 	bl	800863c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80089ee:	f000 fe23 	bl	8009638 <xTaskResumeAll>
			return errQUEUE_FULL;
 80089f2:	e7b2      	b.n	800895a <xQueueGenericSend+0xca>

080089f4 <xQueueGenericSendFromISR>:
{
 80089f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80089f8:	4689      	mov	r9, r1
 80089fa:	4617      	mov	r7, r2
 80089fc:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80089fe:	4604      	mov	r4, r0
 8008a00:	b940      	cbnz	r0, 8008a14 <xQueueGenericSendFromISR+0x20>
 8008a02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a06:	f383 8811 	msr	BASEPRI, r3
 8008a0a:	f3bf 8f6f 	isb	sy
 8008a0e:	f3bf 8f4f 	dsb	sy
 8008a12:	e7fe      	b.n	8008a12 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008a14:	b951      	cbnz	r1, 8008a2c <xQueueGenericSendFromISR+0x38>
 8008a16:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008a18:	b143      	cbz	r3, 8008a2c <xQueueGenericSendFromISR+0x38>
 8008a1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a1e:	f383 8811 	msr	BASEPRI, r3
 8008a22:	f3bf 8f6f 	isb	sy
 8008a26:	f3bf 8f4f 	dsb	sy
 8008a2a:	e7fe      	b.n	8008a2a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008a2c:	2e02      	cmp	r6, #2
 8008a2e:	d10b      	bne.n	8008a48 <xQueueGenericSendFromISR+0x54>
 8008a30:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008a32:	2b01      	cmp	r3, #1
 8008a34:	d008      	beq.n	8008a48 <xQueueGenericSendFromISR+0x54>
 8008a36:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a3a:	f383 8811 	msr	BASEPRI, r3
 8008a3e:	f3bf 8f6f 	isb	sy
 8008a42:	f3bf 8f4f 	dsb	sy
 8008a46:	e7fe      	b.n	8008a46 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008a48:	f7ff fd76 	bl	8008538 <vPortValidateInterruptPriority>
	__asm volatile
 8008a4c:	f3ef 8811 	mrs	r8, BASEPRI
 8008a50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a54:	f383 8811 	msr	BASEPRI, r3
 8008a58:	f3bf 8f6f 	isb	sy
 8008a5c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008a60:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008a62:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008a64:	429a      	cmp	r2, r3
 8008a66:	d301      	bcc.n	8008a6c <xQueueGenericSendFromISR+0x78>
 8008a68:	2e02      	cmp	r6, #2
 8008a6a:	d11e      	bne.n	8008aaa <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008a6c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008a70:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8008a72:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008a74:	4632      	mov	r2, r6
 8008a76:	4649      	mov	r1, r9
 8008a78:	4620      	mov	r0, r4
 8008a7a:	f7ff fd96 	bl	80085aa <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008a7e:	1c6b      	adds	r3, r5, #1
 8008a80:	d10e      	bne.n	8008aa0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008a82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008a84:	b13b      	cbz	r3, 8008a96 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008a86:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008a8a:	f000 fee5 	bl	8009858 <xTaskRemoveFromEventList>
 8008a8e:	b110      	cbz	r0, 8008a96 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 8008a90:	b10f      	cbz	r7, 8008a96 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008a92:	2301      	movs	r3, #1
 8008a94:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8008a96:	2001      	movs	r0, #1
	__asm volatile
 8008a98:	f388 8811 	msr	BASEPRI, r8
}
 8008a9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008aa0:	3501      	adds	r5, #1
 8008aa2:	b26d      	sxtb	r5, r5
 8008aa4:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8008aa8:	e7f5      	b.n	8008a96 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 8008aaa:	2000      	movs	r0, #0
 8008aac:	e7f4      	b.n	8008a98 <xQueueGenericSendFromISR+0xa4>

08008aae <xQueueGiveFromISR>:
{
 8008aae:	b570      	push	{r4, r5, r6, lr}
 8008ab0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008ab2:	4604      	mov	r4, r0
 8008ab4:	b940      	cbnz	r0, 8008ac8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008ab6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008aba:	f383 8811 	msr	BASEPRI, r3
 8008abe:	f3bf 8f6f 	isb	sy
 8008ac2:	f3bf 8f4f 	dsb	sy
 8008ac6:	e7fe      	b.n	8008ac6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008ac8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008aca:	b143      	cbz	r3, 8008ade <xQueueGiveFromISR+0x30>
 8008acc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ad0:	f383 8811 	msr	BASEPRI, r3
 8008ad4:	f3bf 8f6f 	isb	sy
 8008ad8:	f3bf 8f4f 	dsb	sy
 8008adc:	e7fe      	b.n	8008adc <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008ade:	6803      	ldr	r3, [r0, #0]
 8008ae0:	b953      	cbnz	r3, 8008af8 <xQueueGiveFromISR+0x4a>
 8008ae2:	6883      	ldr	r3, [r0, #8]
 8008ae4:	b143      	cbz	r3, 8008af8 <xQueueGiveFromISR+0x4a>
 8008ae6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008aea:	f383 8811 	msr	BASEPRI, r3
 8008aee:	f3bf 8f6f 	isb	sy
 8008af2:	f3bf 8f4f 	dsb	sy
 8008af6:	e7fe      	b.n	8008af6 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008af8:	f7ff fd1e 	bl	8008538 <vPortValidateInterruptPriority>
	__asm volatile
 8008afc:	f3ef 8611 	mrs	r6, BASEPRI
 8008b00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b04:	f383 8811 	msr	BASEPRI, r3
 8008b08:	f3bf 8f6f 	isb	sy
 8008b0c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008b10:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008b12:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008b14:	4293      	cmp	r3, r2
 8008b16:	d919      	bls.n	8008b4c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008b18:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008b1c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008b1e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008b20:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008b22:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008b24:	d10d      	bne.n	8008b42 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008b26:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008b28:	b13b      	cbz	r3, 8008b3a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008b2a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008b2e:	f000 fe93 	bl	8009858 <xTaskRemoveFromEventList>
 8008b32:	b110      	cbz	r0, 8008b3a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008b34:	b10d      	cbz	r5, 8008b3a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008b36:	2301      	movs	r3, #1
 8008b38:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8008b3a:	2001      	movs	r0, #1
	__asm volatile
 8008b3c:	f386 8811 	msr	BASEPRI, r6
}
 8008b40:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008b42:	3301      	adds	r3, #1
 8008b44:	b25b      	sxtb	r3, r3
 8008b46:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8008b4a:	e7f6      	b.n	8008b3a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 8008b4c:	2000      	movs	r0, #0
 8008b4e:	e7f5      	b.n	8008b3c <xQueueGiveFromISR+0x8e>

08008b50 <xQueueReceive>:
{
 8008b50:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008b54:	460e      	mov	r6, r1
 8008b56:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008b58:	4604      	mov	r4, r0
 8008b5a:	b940      	cbnz	r0, 8008b6e <xQueueReceive+0x1e>
	__asm volatile
 8008b5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b60:	f383 8811 	msr	BASEPRI, r3
 8008b64:	f3bf 8f6f 	isb	sy
 8008b68:	f3bf 8f4f 	dsb	sy
 8008b6c:	e7fe      	b.n	8008b6c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008b6e:	b951      	cbnz	r1, 8008b86 <xQueueReceive+0x36>
 8008b70:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008b72:	b143      	cbz	r3, 8008b86 <xQueueReceive+0x36>
 8008b74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b78:	f383 8811 	msr	BASEPRI, r3
 8008b7c:	f3bf 8f6f 	isb	sy
 8008b80:	f3bf 8f4f 	dsb	sy
 8008b84:	e7fe      	b.n	8008b84 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008b86:	f000 fef5 	bl	8009974 <xTaskGetSchedulerState>
 8008b8a:	4605      	mov	r5, r0
 8008b8c:	b318      	cbz	r0, 8008bd6 <xQueueReceive+0x86>
 8008b8e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008b90:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008b94:	f7ff fbbe 	bl	8008314 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008b98:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008b9a:	b347      	cbz	r7, 8008bee <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008b9c:	4631      	mov	r1, r6
 8008b9e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008ba0:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008ba2:	f7ff fd35 	bl	8008610 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008ba6:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008ba8:	6923      	ldr	r3, [r4, #16]
 8008baa:	b173      	cbz	r3, 8008bca <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008bac:	f104 0010 	add.w	r0, r4, #16
 8008bb0:	f000 fe52 	bl	8009858 <xTaskRemoveFromEventList>
 8008bb4:	b148      	cbz	r0, 8008bca <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 8008bb6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008bba:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bbe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008bc2:	f3bf 8f4f 	dsb	sy
 8008bc6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008bca:	f7ff fbc3 	bl	8008354 <vPortExitCritical>
				return pdPASS;
 8008bce:	2001      	movs	r0, #1
}
 8008bd0:	b004      	add	sp, #16
 8008bd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008bd6:	9b01      	ldr	r3, [sp, #4]
 8008bd8:	2b00      	cmp	r3, #0
 8008bda:	d0d9      	beq.n	8008b90 <xQueueReceive+0x40>
 8008bdc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008be0:	f383 8811 	msr	BASEPRI, r3
 8008be4:	f3bf 8f6f 	isb	sy
 8008be8:	f3bf 8f4f 	dsb	sy
 8008bec:	e7fe      	b.n	8008bec <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008bee:	9b01      	ldr	r3, [sp, #4]
 8008bf0:	b91b      	cbnz	r3, 8008bfa <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8008bf2:	f7ff fbaf 	bl	8008354 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008bf6:	2000      	movs	r0, #0
 8008bf8:	e7ea      	b.n	8008bd0 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 8008bfa:	b915      	cbnz	r5, 8008c02 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008bfc:	a802      	add	r0, sp, #8
 8008bfe:	f000 fe6b 	bl	80098d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008c02:	f7ff fba7 	bl	8008354 <vPortExitCritical>
		vTaskSuspendAll();
 8008c06:	f000 fc73 	bl	80094f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008c0a:	f7ff fb83 	bl	8008314 <vPortEnterCritical>
 8008c0e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008c12:	2bff      	cmp	r3, #255	@ 0xff
 8008c14:	bf08      	it	eq
 8008c16:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8008c1a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008c1e:	2bff      	cmp	r3, #255	@ 0xff
 8008c20:	bf08      	it	eq
 8008c22:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8008c26:	f7ff fb95 	bl	8008354 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008c2a:	a901      	add	r1, sp, #4
 8008c2c:	a802      	add	r0, sp, #8
 8008c2e:	f000 fe5f 	bl	80098f0 <xTaskCheckForTimeOut>
 8008c32:	bb00      	cbnz	r0, 8008c76 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008c34:	4620      	mov	r0, r4
 8008c36:	f7ff fcad 	bl	8008594 <prvIsQueueEmpty>
 8008c3a:	b1b0      	cbz	r0, 8008c6a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008c3c:	9901      	ldr	r1, [sp, #4]
 8008c3e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008c42:	f000 fdd1 	bl	80097e8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008c46:	4620      	mov	r0, r4
 8008c48:	f7ff fcf8 	bl	800863c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008c4c:	f000 fcf4 	bl	8009638 <xTaskResumeAll>
 8008c50:	b948      	cbnz	r0, 8008c66 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8008c52:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c56:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008c5e:	f3bf 8f4f 	dsb	sy
 8008c62:	f3bf 8f6f 	isb	sy
 8008c66:	2501      	movs	r5, #1
 8008c68:	e794      	b.n	8008b94 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 8008c6a:	4620      	mov	r0, r4
 8008c6c:	f7ff fce6 	bl	800863c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008c70:	f000 fce2 	bl	8009638 <xTaskResumeAll>
 8008c74:	e7f7      	b.n	8008c66 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 8008c76:	4620      	mov	r0, r4
 8008c78:	f7ff fce0 	bl	800863c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008c7c:	f000 fcdc 	bl	8009638 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008c80:	4620      	mov	r0, r4
 8008c82:	f7ff fc87 	bl	8008594 <prvIsQueueEmpty>
 8008c86:	2800      	cmp	r0, #0
 8008c88:	d0ed      	beq.n	8008c66 <xQueueReceive+0x116>
 8008c8a:	e7b4      	b.n	8008bf6 <xQueueReceive+0xa6>

08008c8c <xQueueSemaphoreTake>:
{
 8008c8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c8e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008c90:	4604      	mov	r4, r0
{
 8008c92:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008c94:	b940      	cbnz	r0, 8008ca8 <xQueueSemaphoreTake+0x1c>
 8008c96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c9a:	f383 8811 	msr	BASEPRI, r3
 8008c9e:	f3bf 8f6f 	isb	sy
 8008ca2:	f3bf 8f4f 	dsb	sy
 8008ca6:	e7fe      	b.n	8008ca6 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008ca8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8008caa:	b145      	cbz	r5, 8008cbe <xQueueSemaphoreTake+0x32>
 8008cac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cb0:	f383 8811 	msr	BASEPRI, r3
 8008cb4:	f3bf 8f6f 	isb	sy
 8008cb8:	f3bf 8f4f 	dsb	sy
 8008cbc:	e7fe      	b.n	8008cbc <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008cbe:	f000 fe59 	bl	8009974 <xTaskGetSchedulerState>
 8008cc2:	4606      	mov	r6, r0
 8008cc4:	b320      	cbz	r0, 8008d10 <xQueueSemaphoreTake+0x84>
 8008cc6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008cc8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 8008cca:	f7ff fb23 	bl	8008314 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008cce:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008cd0:	b353      	cbz	r3, 8008d28 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008cd2:	3b01      	subs	r3, #1
 8008cd4:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008cd6:	6823      	ldr	r3, [r4, #0]
 8008cd8:	b913      	cbnz	r3, 8008ce0 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008cda:	f000 ff29 	bl	8009b30 <pvTaskIncrementMutexHeldCount>
 8008cde:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008ce0:	6923      	ldr	r3, [r4, #16]
 8008ce2:	b173      	cbz	r3, 8008d02 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008ce4:	f104 0010 	add.w	r0, r4, #16
 8008ce8:	f000 fdb6 	bl	8009858 <xTaskRemoveFromEventList>
 8008cec:	b148      	cbz	r0, 8008d02 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 8008cee:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008cf2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008cf6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008cfa:	f3bf 8f4f 	dsb	sy
 8008cfe:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008d02:	f7ff fb27 	bl	8008354 <vPortExitCritical>
				return pdPASS;
 8008d06:	2001      	movs	r0, #1
}
 8008d08:	b005      	add	sp, #20
 8008d0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d0c:	4635      	mov	r5, r6
 8008d0e:	e7db      	b.n	8008cc8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008d10:	9b01      	ldr	r3, [sp, #4]
 8008d12:	2b00      	cmp	r3, #0
 8008d14:	d0fa      	beq.n	8008d0c <xQueueSemaphoreTake+0x80>
 8008d16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d1a:	f383 8811 	msr	BASEPRI, r3
 8008d1e:	f3bf 8f6f 	isb	sy
 8008d22:	f3bf 8f4f 	dsb	sy
 8008d26:	e7fe      	b.n	8008d26 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008d28:	9b01      	ldr	r3, [sp, #4]
 8008d2a:	b953      	cbnz	r3, 8008d42 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008d2c:	2d00      	cmp	r5, #0
 8008d2e:	d066      	beq.n	8008dfe <xQueueSemaphoreTake+0x172>
 8008d30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d34:	f383 8811 	msr	BASEPRI, r3
 8008d38:	f3bf 8f6f 	isb	sy
 8008d3c:	f3bf 8f4f 	dsb	sy
 8008d40:	e7fe      	b.n	8008d40 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8008d42:	b916      	cbnz	r6, 8008d4a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008d44:	a802      	add	r0, sp, #8
 8008d46:	f000 fdc7 	bl	80098d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008d4a:	f7ff fb03 	bl	8008354 <vPortExitCritical>
		vTaskSuspendAll();
 8008d4e:	f000 fbcf 	bl	80094f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008d52:	f7ff fadf 	bl	8008314 <vPortEnterCritical>
 8008d56:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008d5a:	2bff      	cmp	r3, #255	@ 0xff
 8008d5c:	bf08      	it	eq
 8008d5e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8008d62:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008d66:	2bff      	cmp	r3, #255	@ 0xff
 8008d68:	bf08      	it	eq
 8008d6a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 8008d6e:	f7ff faf1 	bl	8008354 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008d72:	a901      	add	r1, sp, #4
 8008d74:	a802      	add	r0, sp, #8
 8008d76:	f000 fdbb 	bl	80098f0 <xTaskCheckForTimeOut>
 8008d7a:	bb50      	cbnz	r0, 8008dd2 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008d7c:	4620      	mov	r0, r4
 8008d7e:	f7ff fc09 	bl	8008594 <prvIsQueueEmpty>
 8008d82:	b300      	cbz	r0, 8008dc6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008d84:	6823      	ldr	r3, [r4, #0]
 8008d86:	b93b      	cbnz	r3, 8008d98 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 8008d88:	f7ff fac4 	bl	8008314 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008d8c:	68a0      	ldr	r0, [r4, #8]
 8008d8e:	f000 fe01 	bl	8009994 <xTaskPriorityInherit>
 8008d92:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008d94:	f7ff fade 	bl	8008354 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008d98:	9901      	ldr	r1, [sp, #4]
 8008d9a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008d9e:	f000 fd23 	bl	80097e8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008da2:	4620      	mov	r0, r4
 8008da4:	f7ff fc4a 	bl	800863c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008da8:	f000 fc46 	bl	8009638 <xTaskResumeAll>
 8008dac:	b948      	cbnz	r0, 8008dc2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 8008dae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008db2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008db6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008dba:	f3bf 8f4f 	dsb	sy
 8008dbe:	f3bf 8f6f 	isb	sy
 8008dc2:	2601      	movs	r6, #1
 8008dc4:	e781      	b.n	8008cca <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 8008dc6:	4620      	mov	r0, r4
 8008dc8:	f7ff fc38 	bl	800863c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008dcc:	f000 fc34 	bl	8009638 <xTaskResumeAll>
 8008dd0:	e7f7      	b.n	8008dc2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8008dd2:	4620      	mov	r0, r4
 8008dd4:	f7ff fc32 	bl	800863c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008dd8:	f000 fc2e 	bl	8009638 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008ddc:	4620      	mov	r0, r4
 8008dde:	f7ff fbd9 	bl	8008594 <prvIsQueueEmpty>
 8008de2:	2800      	cmp	r0, #0
 8008de4:	d0ed      	beq.n	8008dc2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8008de6:	b165      	cbz	r5, 8008e02 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8008de8:	f7ff fa94 	bl	8008314 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8008dec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8008dee:	b119      	cbz	r1, 8008df8 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008df0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008df2:	6819      	ldr	r1, [r3, #0]
 8008df4:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008df8:	68a0      	ldr	r0, [r4, #8]
 8008dfa:	f000 fe4b 	bl	8009a94 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 8008dfe:	f7ff faa9 	bl	8008354 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008e02:	2000      	movs	r0, #0
 8008e04:	e780      	b.n	8008d08 <xQueueSemaphoreTake+0x7c>

08008e06 <xQueueReceiveFromISR>:
{
 8008e06:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008e0a:	4689      	mov	r9, r1
 8008e0c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008e0e:	4604      	mov	r4, r0
 8008e10:	b940      	cbnz	r0, 8008e24 <xQueueReceiveFromISR+0x1e>
 8008e12:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e16:	f383 8811 	msr	BASEPRI, r3
 8008e1a:	f3bf 8f6f 	isb	sy
 8008e1e:	f3bf 8f4f 	dsb	sy
 8008e22:	e7fe      	b.n	8008e22 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008e24:	b951      	cbnz	r1, 8008e3c <xQueueReceiveFromISR+0x36>
 8008e26:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008e28:	b143      	cbz	r3, 8008e3c <xQueueReceiveFromISR+0x36>
 8008e2a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e2e:	f383 8811 	msr	BASEPRI, r3
 8008e32:	f3bf 8f6f 	isb	sy
 8008e36:	f3bf 8f4f 	dsb	sy
 8008e3a:	e7fe      	b.n	8008e3a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008e3c:	f7ff fb7c 	bl	8008538 <vPortValidateInterruptPriority>
	__asm volatile
 8008e40:	f3ef 8711 	mrs	r7, BASEPRI
 8008e44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e48:	f383 8811 	msr	BASEPRI, r3
 8008e4c:	f3bf 8f6f 	isb	sy
 8008e50:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008e54:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008e56:	b30d      	cbz	r5, 8008e9c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008e58:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008e5c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8008e5e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008e60:	4620      	mov	r0, r4
 8008e62:	f7ff fbd5 	bl	8008610 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008e66:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8008e68:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008e6a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 8008e6c:	d111      	bne.n	8008e92 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008e6e:	6923      	ldr	r3, [r4, #16]
 8008e70:	b153      	cbz	r3, 8008e88 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008e72:	f104 0010 	add.w	r0, r4, #16
 8008e76:	f000 fcef 	bl	8009858 <xTaskRemoveFromEventList>
 8008e7a:	b128      	cbz	r0, 8008e88 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 8008e7c:	f1b8 0f00 	cmp.w	r8, #0
 8008e80:	d002      	beq.n	8008e88 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008e82:	2301      	movs	r3, #1
 8008e84:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8008e88:	2001      	movs	r0, #1
	__asm volatile
 8008e8a:	f387 8811 	msr	BASEPRI, r7
}
 8008e8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008e92:	3601      	adds	r6, #1
 8008e94:	b276      	sxtb	r6, r6
 8008e96:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 8008e9a:	e7f5      	b.n	8008e88 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 8008e9c:	4628      	mov	r0, r5
 8008e9e:	e7f4      	b.n	8008e8a <xQueueReceiveFromISR+0x84>

08008ea0 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008ea0:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008ea2:	4a07      	ldr	r2, [pc, #28]	@ (8008ec0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008ea4:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008ea6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8008eaa:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8008eae:	b91d      	cbnz	r5, 8008eb8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008eb0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008eb4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008eb6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008eb8:	3301      	adds	r3, #1
 8008eba:	2b08      	cmp	r3, #8
 8008ebc:	d1f3      	bne.n	8008ea6 <vQueueAddToRegistry+0x6>
 8008ebe:	e7fa      	b.n	8008eb6 <vQueueAddToRegistry+0x16>
 8008ec0:	200139c8 	.word	0x200139c8

08008ec4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008ec4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008ec6:	4a09      	ldr	r2, [pc, #36]	@ (8008eec <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008ec8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008eca:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8008ece:	4281      	cmp	r1, r0
 8008ed0:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8008ed4:	d106      	bne.n	8008ee4 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008ed6:	4a06      	ldr	r2, [pc, #24]	@ (8008ef0 <vQueueUnregisterQueue+0x2c>)
 8008ed8:	2100      	movs	r1, #0
 8008eda:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008ede:	4422      	add	r2, r4
 8008ee0:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008ee2:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008ee4:	3301      	adds	r3, #1
 8008ee6:	2b08      	cmp	r3, #8
 8008ee8:	d1ef      	bne.n	8008eca <vQueueUnregisterQueue+0x6>
 8008eea:	e7fa      	b.n	8008ee2 <vQueueUnregisterQueue+0x1e>
 8008eec:	200139cc 	.word	0x200139cc
 8008ef0:	200139c8 	.word	0x200139c8

08008ef4 <vQueueDelete>:
{
 8008ef4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008ef6:	b940      	cbnz	r0, 8008f0a <vQueueDelete+0x16>
	__asm volatile
 8008ef8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008efc:	f383 8811 	msr	BASEPRI, r3
 8008f00:	f3bf 8f6f 	isb	sy
 8008f04:	f3bf 8f4f 	dsb	sy
 8008f08:	e7fe      	b.n	8008f08 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8008f0a:	f7ff ffdb 	bl	8008ec4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008f0e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008f12:	b91b      	cbnz	r3, 8008f1c <vQueueDelete+0x28>
}
 8008f14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008f18:	f7ff b918 	b.w	800814c <vPortFree>
}
 8008f1c:	bd10      	pop	{r4, pc}

08008f1e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008f1e:	b570      	push	{r4, r5, r6, lr}
 8008f20:	4604      	mov	r4, r0
 8008f22:	460d      	mov	r5, r1
 8008f24:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008f26:	f7ff f9f5 	bl	8008314 <vPortEnterCritical>
 8008f2a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008f2e:	2bff      	cmp	r3, #255	@ 0xff
 8008f30:	bf04      	itt	eq
 8008f32:	2300      	moveq	r3, #0
 8008f34:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8008f38:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008f3c:	2bff      	cmp	r3, #255	@ 0xff
 8008f3e:	bf04      	itt	eq
 8008f40:	2300      	moveq	r3, #0
 8008f42:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8008f46:	f7ff fa05 	bl	8008354 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8008f4a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8008f4c:	b92b      	cbnz	r3, 8008f5a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008f4e:	4632      	mov	r2, r6
 8008f50:	4629      	mov	r1, r5
 8008f52:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008f56:	f000 fc61 	bl	800981c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8008f5a:	4620      	mov	r0, r4
	}
 8008f5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008f60:	f7ff bb6c 	b.w	800863c <prvUnlockQueue>

08008f64 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008f64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008f68:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8008f6a:	f7ff f9d3 	bl	8008314 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008f6e:	4b30      	ldr	r3, [pc, #192]	@ (8009030 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008f70:	4e30      	ldr	r6, [pc, #192]	@ (8009034 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008f72:	681a      	ldr	r2, [r3, #0]
 8008f74:	4f30      	ldr	r7, [pc, #192]	@ (8009038 <prvAddNewTaskToReadyList+0xd4>)
 8008f76:	3201      	adds	r2, #1
 8008f78:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8008f7a:	6835      	ldr	r5, [r6, #0]
 8008f7c:	2d00      	cmp	r5, #0
 8008f7e:	d14b      	bne.n	8009018 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008f80:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008f82:	681b      	ldr	r3, [r3, #0]
 8008f84:	2b01      	cmp	r3, #1
 8008f86:	d11f      	bne.n	8008fc8 <prvAddNewTaskToReadyList+0x64>
 8008f88:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008f8a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008f8c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008f8e:	f7ff f91b 	bl	80081c8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008f92:	2d38      	cmp	r5, #56	@ 0x38
 8008f94:	f108 0814 	add.w	r8, r8, #20
 8008f98:	d1f7      	bne.n	8008f8a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8008f9a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8009060 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8008f9e:	4d27      	ldr	r5, [pc, #156]	@ (800903c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008fa0:	4640      	mov	r0, r8
 8008fa2:	f7ff f911 	bl	80081c8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008fa6:	4628      	mov	r0, r5
 8008fa8:	f7ff f90e 	bl	80081c8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8008fac:	4824      	ldr	r0, [pc, #144]	@ (8009040 <prvAddNewTaskToReadyList+0xdc>)
 8008fae:	f7ff f90b 	bl	80081c8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008fb2:	4824      	ldr	r0, [pc, #144]	@ (8009044 <prvAddNewTaskToReadyList+0xe0>)
 8008fb4:	f7ff f908 	bl	80081c8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008fb8:	4823      	ldr	r0, [pc, #140]	@ (8009048 <prvAddNewTaskToReadyList+0xe4>)
 8008fba:	f7ff f905 	bl	80081c8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008fbe:	4b23      	ldr	r3, [pc, #140]	@ (800904c <prvAddNewTaskToReadyList+0xe8>)
 8008fc0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008fc4:	4b22      	ldr	r3, [pc, #136]	@ (8009050 <prvAddNewTaskToReadyList+0xec>)
 8008fc6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008fc8:	4a22      	ldr	r2, [pc, #136]	@ (8009054 <prvAddNewTaskToReadyList+0xf0>)
 8008fca:	6813      	ldr	r3, [r2, #0]
 8008fcc:	3301      	adds	r3, #1
 8008fce:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008fd0:	4a21      	ldr	r2, [pc, #132]	@ (8009058 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008fd2:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008fd4:	6811      	ldr	r1, [r2, #0]
 8008fd6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008fd8:	2014      	movs	r0, #20
 8008fda:	428b      	cmp	r3, r1
 8008fdc:	fb00 7003 	mla	r0, r0, r3, r7
 8008fe0:	f104 0104 	add.w	r1, r4, #4
 8008fe4:	bf88      	it	hi
 8008fe6:	6013      	strhi	r3, [r2, #0]
 8008fe8:	f7ff f8fc 	bl	80081e4 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008fec:	f7ff f9b2 	bl	8008354 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008ff0:	4b1a      	ldr	r3, [pc, #104]	@ (800905c <prvAddNewTaskToReadyList+0xf8>)
 8008ff2:	681b      	ldr	r3, [r3, #0]
 8008ff4:	b173      	cbz	r3, 8009014 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008ff6:	6833      	ldr	r3, [r6, #0]
 8008ff8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008ffa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008ffc:	429a      	cmp	r2, r3
 8008ffe:	d209      	bcs.n	8009014 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009000:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009004:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009008:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800900c:	f3bf 8f4f 	dsb	sy
 8009010:	f3bf 8f6f 	isb	sy
}
 8009014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009018:	4b10      	ldr	r3, [pc, #64]	@ (800905c <prvAddNewTaskToReadyList+0xf8>)
 800901a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800901c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800901e:	2a00      	cmp	r2, #0
 8009020:	d1d2      	bne.n	8008fc8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009022:	6832      	ldr	r2, [r6, #0]
 8009024:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009026:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009028:	bf98      	it	ls
 800902a:	6034      	strls	r4, [r6, #0]
 800902c:	e7cc      	b.n	8008fc8 <prvAddNewTaskToReadyList+0x64>
 800902e:	bf00      	nop
 8009030:	20013a2c 	.word	0x20013a2c
 8009034:	20013f00 	.word	0x20013f00
 8009038:	20013aa0 	.word	0x20013aa0
 800903c:	20013a78 	.word	0x20013a78
 8009040:	20013a5c 	.word	0x20013a5c
 8009044:	20013a48 	.word	0x20013a48
 8009048:	20013a30 	.word	0x20013a30
 800904c:	20013a74 	.word	0x20013a74
 8009050:	20013a70 	.word	0x20013a70
 8009054:	20013a10 	.word	0x20013a10
 8009058:	20013a24 	.word	0x20013a24
 800905c:	20013a20 	.word	0x20013a20
 8009060:	20013a8c 	.word	0x20013a8c

08009064 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009066:	4b15      	ldr	r3, [pc, #84]	@ (80090bc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009068:	4d15      	ldr	r5, [pc, #84]	@ (80090c0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800906a:	681c      	ldr	r4, [r3, #0]
{
 800906c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800906e:	6828      	ldr	r0, [r5, #0]
 8009070:	3004      	adds	r0, #4
{
 8009072:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009074:	f7ff f8d8 	bl	8008228 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009078:	1c73      	adds	r3, r6, #1
 800907a:	d107      	bne.n	800908c <prvAddCurrentTaskToDelayedList+0x28>
 800907c:	b137      	cbz	r7, 800908c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800907e:	6829      	ldr	r1, [r5, #0]
 8009080:	4810      	ldr	r0, [pc, #64]	@ (80090c4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009082:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009086:	3104      	adds	r1, #4
 8009088:	f7ff b8ac 	b.w	80081e4 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800908c:	682b      	ldr	r3, [r5, #0]
 800908e:	19a4      	adds	r4, r4, r6
 8009090:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009092:	d307      	bcc.n	80090a4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009094:	4b0c      	ldr	r3, [pc, #48]	@ (80090c8 <prvAddCurrentTaskToDelayedList+0x64>)
 8009096:	6818      	ldr	r0, [r3, #0]
 8009098:	6829      	ldr	r1, [r5, #0]
}
 800909a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800909e:	3104      	adds	r1, #4
 80090a0:	f7ff b8ab 	b.w	80081fa <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80090a4:	4b09      	ldr	r3, [pc, #36]	@ (80090cc <prvAddCurrentTaskToDelayedList+0x68>)
 80090a6:	6818      	ldr	r0, [r3, #0]
 80090a8:	6829      	ldr	r1, [r5, #0]
 80090aa:	3104      	adds	r1, #4
 80090ac:	f7ff f8a5 	bl	80081fa <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80090b0:	4b07      	ldr	r3, [pc, #28]	@ (80090d0 <prvAddCurrentTaskToDelayedList+0x6c>)
 80090b2:	681a      	ldr	r2, [r3, #0]
 80090b4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80090b6:	bf88      	it	hi
 80090b8:	601c      	strhi	r4, [r3, #0]
}
 80090ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80090bc:	20013a28 	.word	0x20013a28
 80090c0:	20013f00 	.word	0x20013f00
 80090c4:	20013a30 	.word	0x20013a30
 80090c8:	20013a70 	.word	0x20013a70
 80090cc:	20013a74 	.word	0x20013a74
 80090d0:	20013a0c 	.word	0x20013a0c

080090d4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80090d4:	4a06      	ldr	r2, [pc, #24]	@ (80090f0 <prvResetNextTaskUnblockTime+0x1c>)
 80090d6:	6813      	ldr	r3, [r2, #0]
 80090d8:	6819      	ldr	r1, [r3, #0]
 80090da:	4b06      	ldr	r3, [pc, #24]	@ (80090f4 <prvResetNextTaskUnblockTime+0x20>)
 80090dc:	b919      	cbnz	r1, 80090e6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80090de:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80090e2:	601a      	str	r2, [r3, #0]
}
 80090e4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80090e6:	6812      	ldr	r2, [r2, #0]
 80090e8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80090ea:	68d2      	ldr	r2, [r2, #12]
 80090ec:	6852      	ldr	r2, [r2, #4]
 80090ee:	e7f8      	b.n	80090e2 <prvResetNextTaskUnblockTime+0xe>
 80090f0:	20013a74 	.word	0x20013a74
 80090f4:	20013a0c 	.word	0x20013a0c

080090f8 <prvDeleteTCB>:
	{
 80090f8:	b510      	push	{r4, lr}
 80090fa:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 80090fc:	3058      	adds	r0, #88	@ 0x58
 80090fe:	f01a fbbd 	bl	802387c <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009102:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
 8009106:	b93b      	cbnz	r3, 8009118 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009108:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800910a:	f7ff f81f 	bl	800814c <vPortFree>
				vPortFree( pxTCB );
 800910e:	4620      	mov	r0, r4
	}
 8009110:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009114:	f7ff b81a 	b.w	800814c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009118:	2b01      	cmp	r3, #1
 800911a:	d0f8      	beq.n	800910e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800911c:	2b02      	cmp	r3, #2
 800911e:	d008      	beq.n	8009132 <prvDeleteTCB+0x3a>
 8009120:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009124:	f383 8811 	msr	BASEPRI, r3
 8009128:	f3bf 8f6f 	isb	sy
 800912c:	f3bf 8f4f 	dsb	sy
 8009130:	e7fe      	b.n	8009130 <prvDeleteTCB+0x38>
	}
 8009132:	bd10      	pop	{r4, pc}

08009134 <prvIdleTask>:
{
 8009134:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009136:	4c13      	ldr	r4, [pc, #76]	@ (8009184 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009138:	4f13      	ldr	r7, [pc, #76]	@ (8009188 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800913a:	4d14      	ldr	r5, [pc, #80]	@ (800918c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800913c:	6823      	ldr	r3, [r4, #0]
 800913e:	b973      	cbnz	r3, 800915e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009140:	4b13      	ldr	r3, [pc, #76]	@ (8009190 <prvIdleTask+0x5c>)
 8009142:	681b      	ldr	r3, [r3, #0]
 8009144:	2b01      	cmp	r3, #1
 8009146:	d9f8      	bls.n	800913a <prvIdleTask+0x6>
				taskYIELD();
 8009148:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800914c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009150:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009154:	f3bf 8f4f 	dsb	sy
 8009158:	f3bf 8f6f 	isb	sy
 800915c:	e7ed      	b.n	800913a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800915e:	f7ff f8d9 	bl	8008314 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009162:	68fb      	ldr	r3, [r7, #12]
 8009164:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009166:	1d30      	adds	r0, r6, #4
 8009168:	f7ff f85e 	bl	8008228 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800916c:	682b      	ldr	r3, [r5, #0]
 800916e:	3b01      	subs	r3, #1
 8009170:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009172:	6823      	ldr	r3, [r4, #0]
 8009174:	3b01      	subs	r3, #1
 8009176:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009178:	f7ff f8ec 	bl	8008354 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800917c:	4630      	mov	r0, r6
 800917e:	f7ff ffbb 	bl	80090f8 <prvDeleteTCB>
 8009182:	e7db      	b.n	800913c <prvIdleTask+0x8>
 8009184:	20013a44 	.word	0x20013a44
 8009188:	20013a48 	.word	0x20013a48
 800918c:	20013a2c 	.word	0x20013a2c
 8009190:	20013aa0 	.word	0x20013aa0

08009194 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009194:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009198:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800919c:	0096      	lsls	r6, r2, #2
 800919e:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80091a0:	4607      	mov	r7, r0
 80091a2:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80091a4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80091a6:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80091a8:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80091aa:	f01a fb1e 	bl	80237ea <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80091ae:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80091b0:	3e04      	subs	r6, #4
 80091b2:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80091b4:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80091b8:	2d00      	cmp	r5, #0
 80091ba:	d043      	beq.n	8009244 <prvInitialiseNewTask.constprop.0+0xb0>
 80091bc:	1e6b      	subs	r3, r5, #1
 80091be:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 80091c2:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80091c4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80091c8:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 80091cc:	b109      	cbz	r1, 80091d2 <prvInitialiseNewTask.constprop.0+0x3e>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80091ce:	42ab      	cmp	r3, r5
 80091d0:	d1f8      	bne.n	80091c4 <prvInitialiseNewTask.constprop.0+0x30>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80091d2:	2300      	movs	r3, #0
 80091d4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80091d8:	9d08      	ldr	r5, [sp, #32]
 80091da:	2d37      	cmp	r5, #55	@ 0x37
 80091dc:	bf28      	it	cs
 80091de:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80091e0:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80091e4:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80091e6:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80091e8:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80091ea:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80091ee:	f7fe fff6 	bl	80081de <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80091f2:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80091f6:	f104 0018 	add.w	r0, r4, #24
 80091fa:	f7fe fff0 	bl	80081de <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80091fe:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009202:	224c      	movs	r2, #76	@ 0x4c
 8009204:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009206:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009208:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800920a:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800920c:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009210:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009214:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8009218:	f01a fae7 	bl	80237ea <memset>
 800921c:	4b0b      	ldr	r3, [pc, #44]	@ (800924c <prvInitialiseNewTask.constprop.0+0xb8>)
 800921e:	65e3      	str	r3, [r4, #92]	@ 0x5c
 8009220:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8009224:	33d0      	adds	r3, #208	@ 0xd0
 8009226:	6622      	str	r2, [r4, #96]	@ 0x60
 8009228:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800922a:	4642      	mov	r2, r8
 800922c:	4639      	mov	r1, r7
 800922e:	4630      	mov	r0, r6
 8009230:	f7ff f848 	bl	80082c4 <pxPortInitialiseStack>
 8009234:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009236:	f1b9 0f00 	cmp.w	r9, #0
 800923a:	d001      	beq.n	8009240 <prvInitialiseNewTask.constprop.0+0xac>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800923c:	f8c9 4000 	str.w	r4, [r9]
}
 8009240:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009244:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009248:	e7c6      	b.n	80091d8 <prvInitialiseNewTask.constprop.0+0x44>
 800924a:	bf00      	nop
 800924c:	20014aa4 	.word	0x20014aa4

08009250 <xTaskCreateStatic>:
	{
 8009250:	b570      	push	{r4, r5, r6, lr}
 8009252:	b086      	sub	sp, #24
 8009254:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009258:	b945      	cbnz	r5, 800926c <xTaskCreateStatic+0x1c>
 800925a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800925e:	f383 8811 	msr	BASEPRI, r3
 8009262:	f3bf 8f6f 	isb	sy
 8009266:	f3bf 8f4f 	dsb	sy
 800926a:	e7fe      	b.n	800926a <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800926c:	b944      	cbnz	r4, 8009280 <xTaskCreateStatic+0x30>
 800926e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009272:	f383 8811 	msr	BASEPRI, r3
 8009276:	f3bf 8f6f 	isb	sy
 800927a:	f3bf 8f4f 	dsb	sy
 800927e:	e7fe      	b.n	800927e <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009280:	26ac      	movs	r6, #172	@ 0xac
 8009282:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009284:	9e05      	ldr	r6, [sp, #20]
 8009286:	2eac      	cmp	r6, #172	@ 0xac
 8009288:	d008      	beq.n	800929c <xTaskCreateStatic+0x4c>
 800928a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800928e:	f383 8811 	msr	BASEPRI, r3
 8009292:	f3bf 8f6f 	isb	sy
 8009296:	f3bf 8f4f 	dsb	sy
 800929a:	e7fe      	b.n	800929a <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800929c:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800929e:	2502      	movs	r5, #2
 80092a0:	f884 50a9 	strb.w	r5, [r4, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80092a4:	ad04      	add	r5, sp, #16
 80092a6:	9501      	str	r5, [sp, #4]
 80092a8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80092aa:	9402      	str	r4, [sp, #8]
 80092ac:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80092ae:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80092b0:	f7ff ff70 	bl	8009194 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80092b4:	4620      	mov	r0, r4
 80092b6:	f7ff fe55 	bl	8008f64 <prvAddNewTaskToReadyList>
	}
 80092ba:	9804      	ldr	r0, [sp, #16]
 80092bc:	b006      	add	sp, #24
 80092be:	bd70      	pop	{r4, r5, r6, pc}

080092c0 <xTaskCreate>:
	{
 80092c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80092c4:	4607      	mov	r7, r0
 80092c6:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80092c8:	0090      	lsls	r0, r2, #2
	{
 80092ca:	4688      	mov	r8, r1
 80092cc:	4616      	mov	r6, r2
 80092ce:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80092d0:	f7fe fea4 	bl	800801c <pvPortMalloc>
			if( pxStack != NULL )
 80092d4:	4605      	mov	r5, r0
 80092d6:	b920      	cbnz	r0, 80092e2 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80092d8:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80092dc:	b005      	add	sp, #20
 80092de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80092e2:	20ac      	movs	r0, #172	@ 0xac
 80092e4:	f7fe fe9a 	bl	800801c <pvPortMalloc>
				if( pxNewTCB != NULL )
 80092e8:	4604      	mov	r4, r0
 80092ea:	b198      	cbz	r0, 8009314 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80092ec:	2300      	movs	r3, #0
 80092ee:	f880 30a9 	strb.w	r3, [r0, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80092f2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 80092f4:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80092f6:	9301      	str	r3, [sp, #4]
 80092f8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80092fa:	9002      	str	r0, [sp, #8]
 80092fc:	9300      	str	r3, [sp, #0]
 80092fe:	4632      	mov	r2, r6
 8009300:	464b      	mov	r3, r9
 8009302:	4641      	mov	r1, r8
 8009304:	4638      	mov	r0, r7
 8009306:	f7ff ff45 	bl	8009194 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800930a:	4620      	mov	r0, r4
 800930c:	f7ff fe2a 	bl	8008f64 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009310:	2001      	movs	r0, #1
 8009312:	e7e3      	b.n	80092dc <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8009314:	4628      	mov	r0, r5
 8009316:	f7fe ff19 	bl	800814c <vPortFree>
		if( pxNewTCB != NULL )
 800931a:	e7dd      	b.n	80092d8 <xTaskCreate+0x18>

0800931c <vTaskDelete>:
	{
 800931c:	b570      	push	{r4, r5, r6, lr}
 800931e:	4604      	mov	r4, r0
 8009320:	4d23      	ldr	r5, [pc, #140]	@ (80093b0 <vTaskDelete+0x94>)
		taskENTER_CRITICAL();
 8009322:	f7fe fff7 	bl	8008314 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
 8009326:	b904      	cbnz	r4, 800932a <vTaskDelete+0xe>
 8009328:	682c      	ldr	r4, [r5, #0]
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800932a:	1d26      	adds	r6, r4, #4
 800932c:	4630      	mov	r0, r6
 800932e:	f7fe ff7b 	bl	8008228 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009332:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8009334:	b11b      	cbz	r3, 800933e <vTaskDelete+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009336:	f104 0018 	add.w	r0, r4, #24
 800933a:	f7fe ff75 	bl	8008228 <uxListRemove>
			uxTaskNumber++;
 800933e:	4a1d      	ldr	r2, [pc, #116]	@ (80093b4 <vTaskDelete+0x98>)
 8009340:	6813      	ldr	r3, [r2, #0]
 8009342:	3301      	adds	r3, #1
 8009344:	6013      	str	r3, [r2, #0]
			if( pxTCB == pxCurrentTCB )
 8009346:	682b      	ldr	r3, [r5, #0]
 8009348:	42a3      	cmp	r3, r4
 800934a:	d11b      	bne.n	8009384 <vTaskDelete+0x68>
				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
 800934c:	481a      	ldr	r0, [pc, #104]	@ (80093b8 <vTaskDelete+0x9c>)
 800934e:	4631      	mov	r1, r6
 8009350:	f7fe ff48 	bl	80081e4 <vListInsertEnd>
				++uxDeletedTasksWaitingCleanUp;
 8009354:	4a19      	ldr	r2, [pc, #100]	@ (80093bc <vTaskDelete+0xa0>)
 8009356:	6813      	ldr	r3, [r2, #0]
 8009358:	3301      	adds	r3, #1
 800935a:	6013      	str	r3, [r2, #0]
		taskEXIT_CRITICAL();
 800935c:	f7fe fffa 	bl	8008354 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
 8009360:	4b17      	ldr	r3, [pc, #92]	@ (80093c0 <vTaskDelete+0xa4>)
 8009362:	681b      	ldr	r3, [r3, #0]
 8009364:	b313      	cbz	r3, 80093ac <vTaskDelete+0x90>
			if( pxTCB == pxCurrentTCB )
 8009366:	682b      	ldr	r3, [r5, #0]
 8009368:	42a3      	cmp	r3, r4
 800936a:	d11f      	bne.n	80093ac <vTaskDelete+0x90>
				configASSERT( uxSchedulerSuspended == 0 );
 800936c:	4b15      	ldr	r3, [pc, #84]	@ (80093c4 <vTaskDelete+0xa8>)
 800936e:	681b      	ldr	r3, [r3, #0]
 8009370:	b193      	cbz	r3, 8009398 <vTaskDelete+0x7c>
 8009372:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009376:	f383 8811 	msr	BASEPRI, r3
 800937a:	f3bf 8f6f 	isb	sy
 800937e:	f3bf 8f4f 	dsb	sy
 8009382:	e7fe      	b.n	8009382 <vTaskDelete+0x66>
				--uxCurrentNumberOfTasks;
 8009384:	4a10      	ldr	r2, [pc, #64]	@ (80093c8 <vTaskDelete+0xac>)
 8009386:	6813      	ldr	r3, [r2, #0]
				prvDeleteTCB( pxTCB );
 8009388:	4620      	mov	r0, r4
				--uxCurrentNumberOfTasks;
 800938a:	3b01      	subs	r3, #1
 800938c:	6013      	str	r3, [r2, #0]
				prvDeleteTCB( pxTCB );
 800938e:	f7ff feb3 	bl	80090f8 <prvDeleteTCB>
				prvResetNextTaskUnblockTime();
 8009392:	f7ff fe9f 	bl	80090d4 <prvResetNextTaskUnblockTime>
 8009396:	e7e1      	b.n	800935c <vTaskDelete+0x40>
				portYIELD_WITHIN_API();
 8009398:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800939c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80093a0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80093a4:	f3bf 8f4f 	dsb	sy
 80093a8:	f3bf 8f6f 	isb	sy
	}
 80093ac:	bd70      	pop	{r4, r5, r6, pc}
 80093ae:	bf00      	nop
 80093b0:	20013f00 	.word	0x20013f00
 80093b4:	20013a10 	.word	0x20013a10
 80093b8:	20013a48 	.word	0x20013a48
 80093bc:	20013a44 	.word	0x20013a44
 80093c0:	20013a20 	.word	0x20013a20
 80093c4:	20013a08 	.word	0x20013a08
 80093c8:	20013a2c 	.word	0x20013a2c

080093cc <eTaskGetState>:
	{
 80093cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( pxTCB );
 80093ce:	4604      	mov	r4, r0
 80093d0:	b940      	cbnz	r0, 80093e4 <eTaskGetState+0x18>
 80093d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093d6:	f383 8811 	msr	BASEPRI, r3
 80093da:	f3bf 8f6f 	isb	sy
 80093de:	f3bf 8f4f 	dsb	sy
 80093e2:	e7fe      	b.n	80093e2 <eTaskGetState+0x16>
		if( pxTCB == pxCurrentTCB )
 80093e4:	4b15      	ldr	r3, [pc, #84]	@ (800943c <eTaskGetState+0x70>)
 80093e6:	681b      	ldr	r3, [r3, #0]
 80093e8:	4283      	cmp	r3, r0
 80093ea:	d020      	beq.n	800942e <eTaskGetState+0x62>
			taskENTER_CRITICAL();
 80093ec:	f7fe ff92 	bl	8008314 <vPortEnterCritical>
				pxDelayedList = pxDelayedTaskList;
 80093f0:	4b13      	ldr	r3, [pc, #76]	@ (8009440 <eTaskGetState+0x74>)
				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
 80093f2:	6965      	ldr	r5, [r4, #20]
				pxDelayedList = pxDelayedTaskList;
 80093f4:	681f      	ldr	r7, [r3, #0]
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 80093f6:	4b13      	ldr	r3, [pc, #76]	@ (8009444 <eTaskGetState+0x78>)
 80093f8:	681e      	ldr	r6, [r3, #0]
			taskEXIT_CRITICAL();
 80093fa:	f7fe ffab 	bl	8008354 <vPortExitCritical>
			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
 80093fe:	42bd      	cmp	r5, r7
 8009400:	d017      	beq.n	8009432 <eTaskGetState+0x66>
 8009402:	42b5      	cmp	r5, r6
 8009404:	d015      	beq.n	8009432 <eTaskGetState+0x66>
				else if( pxStateList == &xSuspendedTaskList )
 8009406:	4b10      	ldr	r3, [pc, #64]	@ (8009448 <eTaskGetState+0x7c>)
 8009408:	429d      	cmp	r5, r3
 800940a:	d108      	bne.n	800941e <eTaskGetState+0x52>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
 800940c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800940e:	b983      	cbnz	r3, 8009432 <eTaskGetState+0x66>
							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 8009410:	f894 30a8 	ldrb.w	r3, [r4, #168]	@ 0xa8
								eReturn = eSuspended;
 8009414:	2b01      	cmp	r3, #1
 8009416:	bf0c      	ite	eq
 8009418:	2002      	moveq	r0, #2
 800941a:	2003      	movne	r0, #3
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 800941c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
 800941e:	4b0b      	ldr	r3, [pc, #44]	@ (800944c <eTaskGetState+0x80>)
 8009420:	429d      	cmp	r5, r3
 8009422:	d008      	beq.n	8009436 <eTaskGetState+0x6a>
				eReturn = eReady;
 8009424:	2d00      	cmp	r5, #0
 8009426:	bf0c      	ite	eq
 8009428:	2004      	moveq	r0, #4
 800942a:	2001      	movne	r0, #1
 800942c:	e7f6      	b.n	800941c <eTaskGetState+0x50>
			eReturn = eRunning;
 800942e:	2000      	movs	r0, #0
 8009430:	e7f4      	b.n	800941c <eTaskGetState+0x50>
				eReturn = eBlocked;
 8009432:	2002      	movs	r0, #2
 8009434:	e7f2      	b.n	800941c <eTaskGetState+0x50>
					eReturn = eDeleted;
 8009436:	2004      	movs	r0, #4
 8009438:	e7f0      	b.n	800941c <eTaskGetState+0x50>
 800943a:	bf00      	nop
 800943c:	20013f00 	.word	0x20013f00
 8009440:	20013a74 	.word	0x20013a74
 8009444:	20013a70 	.word	0x20013a70
 8009448:	20013a30 	.word	0x20013a30
 800944c:	20013a48 	.word	0x20013a48

08009450 <vTaskStartScheduler>:
{
 8009450:	b510      	push	{r4, lr}
 8009452:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009454:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009456:	aa07      	add	r2, sp, #28
 8009458:	a906      	add	r1, sp, #24
 800945a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800945c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009460:	f7fe fd9e 	bl	8007fa0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009464:	9b05      	ldr	r3, [sp, #20]
 8009466:	9302      	str	r3, [sp, #8]
 8009468:	9b06      	ldr	r3, [sp, #24]
 800946a:	9a07      	ldr	r2, [sp, #28]
 800946c:	4919      	ldr	r1, [pc, #100]	@ (80094d4 <vTaskStartScheduler+0x84>)
 800946e:	481a      	ldr	r0, [pc, #104]	@ (80094d8 <vTaskStartScheduler+0x88>)
 8009470:	e9cd 4300 	strd	r4, r3, [sp]
 8009474:	4623      	mov	r3, r4
 8009476:	f7ff feeb 	bl	8009250 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800947a:	b340      	cbz	r0, 80094ce <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800947c:	f000 fbb6 	bl	8009bec <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009480:	2801      	cmp	r0, #1
 8009482:	d119      	bne.n	80094b8 <vTaskStartScheduler+0x68>
 8009484:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009488:	f383 8811 	msr	BASEPRI, r3
 800948c:	f3bf 8f6f 	isb	sy
 8009490:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009494:	4b11      	ldr	r3, [pc, #68]	@ (80094dc <vTaskStartScheduler+0x8c>)
 8009496:	4a12      	ldr	r2, [pc, #72]	@ (80094e0 <vTaskStartScheduler+0x90>)
 8009498:	681b      	ldr	r3, [r3, #0]
 800949a:	3358      	adds	r3, #88	@ 0x58
 800949c:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800949e:	4b11      	ldr	r3, [pc, #68]	@ (80094e4 <vTaskStartScheduler+0x94>)
 80094a0:	f04f 32ff 	mov.w	r2, #4294967295
 80094a4:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80094a6:	4b10      	ldr	r3, [pc, #64]	@ (80094e8 <vTaskStartScheduler+0x98>)
 80094a8:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80094aa:	4b10      	ldr	r3, [pc, #64]	@ (80094ec <vTaskStartScheduler+0x9c>)
 80094ac:	601c      	str	r4, [r3, #0]
}
 80094ae:	b008      	add	sp, #32
 80094b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 80094b4:	f7fe bfbe 	b.w	8008434 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80094b8:	3001      	adds	r0, #1
 80094ba:	d108      	bne.n	80094ce <vTaskStartScheduler+0x7e>
 80094bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094c0:	f383 8811 	msr	BASEPRI, r3
 80094c4:	f3bf 8f6f 	isb	sy
 80094c8:	f3bf 8f4f 	dsb	sy
 80094cc:	e7fe      	b.n	80094cc <vTaskStartScheduler+0x7c>
}
 80094ce:	b008      	add	sp, #32
 80094d0:	bd10      	pop	{r4, pc}
 80094d2:	bf00      	nop
 80094d4:	08025383 	.word	0x08025383
 80094d8:	08009135 	.word	0x08009135
 80094dc:	20013f00 	.word	0x20013f00
 80094e0:	20000220 	.word	0x20000220
 80094e4:	20013a0c 	.word	0x20013a0c
 80094e8:	20013a20 	.word	0x20013a20
 80094ec:	20013a28 	.word	0x20013a28

080094f0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80094f0:	4a02      	ldr	r2, [pc, #8]	@ (80094fc <vTaskSuspendAll+0xc>)
 80094f2:	6813      	ldr	r3, [r2, #0]
 80094f4:	3301      	adds	r3, #1
 80094f6:	6013      	str	r3, [r2, #0]
}
 80094f8:	4770      	bx	lr
 80094fa:	bf00      	nop
 80094fc:	20013a08 	.word	0x20013a08

08009500 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009500:	4b01      	ldr	r3, [pc, #4]	@ (8009508 <xTaskGetTickCount+0x8>)
 8009502:	6818      	ldr	r0, [r3, #0]
}
 8009504:	4770      	bx	lr
 8009506:	bf00      	nop
 8009508:	20013a28 	.word	0x20013a28

0800950c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800950c:	4b3f      	ldr	r3, [pc, #252]	@ (800960c <xTaskIncrementTick+0x100>)
 800950e:	681b      	ldr	r3, [r3, #0]
{
 8009510:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009514:	2b00      	cmp	r3, #0
 8009516:	d172      	bne.n	80095fe <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009518:	4b3d      	ldr	r3, [pc, #244]	@ (8009610 <xTaskIncrementTick+0x104>)
 800951a:	681c      	ldr	r4, [r3, #0]
 800951c:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800951e:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009520:	b9bc      	cbnz	r4, 8009552 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009522:	4b3c      	ldr	r3, [pc, #240]	@ (8009614 <xTaskIncrementTick+0x108>)
 8009524:	681a      	ldr	r2, [r3, #0]
 8009526:	6812      	ldr	r2, [r2, #0]
 8009528:	b142      	cbz	r2, 800953c <xTaskIncrementTick+0x30>
 800952a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800952e:	f383 8811 	msr	BASEPRI, r3
 8009532:	f3bf 8f6f 	isb	sy
 8009536:	f3bf 8f4f 	dsb	sy
 800953a:	e7fe      	b.n	800953a <xTaskIncrementTick+0x2e>
 800953c:	4a36      	ldr	r2, [pc, #216]	@ (8009618 <xTaskIncrementTick+0x10c>)
 800953e:	6819      	ldr	r1, [r3, #0]
 8009540:	6810      	ldr	r0, [r2, #0]
 8009542:	6018      	str	r0, [r3, #0]
 8009544:	6011      	str	r1, [r2, #0]
 8009546:	4a35      	ldr	r2, [pc, #212]	@ (800961c <xTaskIncrementTick+0x110>)
 8009548:	6813      	ldr	r3, [r2, #0]
 800954a:	3301      	adds	r3, #1
 800954c:	6013      	str	r3, [r2, #0]
 800954e:	f7ff fdc1 	bl	80090d4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009552:	4d33      	ldr	r5, [pc, #204]	@ (8009620 <xTaskIncrementTick+0x114>)
 8009554:	4e33      	ldr	r6, [pc, #204]	@ (8009624 <xTaskIncrementTick+0x118>)
 8009556:	682b      	ldr	r3, [r5, #0]
 8009558:	4f33      	ldr	r7, [pc, #204]	@ (8009628 <xTaskIncrementTick+0x11c>)
 800955a:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 800955c:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009560:	d212      	bcs.n	8009588 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009562:	683a      	ldr	r2, [r7, #0]
 8009564:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009566:	2114      	movs	r1, #20
 8009568:	434a      	muls	r2, r1
 800956a:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 800956c:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 800956e:	4a2f      	ldr	r2, [pc, #188]	@ (800962c <xTaskIncrementTick+0x120>)
 8009570:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8009572:	bf28      	it	cs
 8009574:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8009578:	2a00      	cmp	r2, #0
 800957a:	bf18      	it	ne
 800957c:	f04f 0b01 	movne.w	fp, #1
}
 8009580:	4658      	mov	r0, fp
 8009582:	b003      	add	sp, #12
 8009584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009588:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8009614 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800958c:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8009634 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009590:	f8d9 2000 	ldr.w	r2, [r9]
 8009594:	6812      	ldr	r2, [r2, #0]
 8009596:	b91a      	cbnz	r2, 80095a0 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009598:	f04f 32ff 	mov.w	r2, #4294967295
 800959c:	602a      	str	r2, [r5, #0]
					break;
 800959e:	e7e0      	b.n	8009562 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80095a0:	f8d9 2000 	ldr.w	r2, [r9]
 80095a4:	68d2      	ldr	r2, [r2, #12]
 80095a6:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80095aa:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 80095ae:	428c      	cmp	r4, r1
 80095b0:	d201      	bcs.n	80095b6 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 80095b2:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80095b4:	e7d5      	b.n	8009562 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80095b6:	f108 0304 	add.w	r3, r8, #4
 80095ba:	4618      	mov	r0, r3
 80095bc:	9301      	str	r3, [sp, #4]
 80095be:	f7fe fe33 	bl	8008228 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80095c2:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 80095c6:	b119      	cbz	r1, 80095d0 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80095c8:	f108 0018 	add.w	r0, r8, #24
 80095cc:	f7fe fe2c 	bl	8008228 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80095d0:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 80095d4:	f8da 1000 	ldr.w	r1, [sl]
 80095d8:	2314      	movs	r3, #20
 80095da:	4288      	cmp	r0, r1
 80095dc:	bf88      	it	hi
 80095de:	f8ca 0000 	strhi.w	r0, [sl]
 80095e2:	9901      	ldr	r1, [sp, #4]
 80095e4:	fb03 6000 	mla	r0, r3, r0, r6
 80095e8:	f7fe fdfc 	bl	80081e4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80095ec:	6838      	ldr	r0, [r7, #0]
 80095ee:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 80095f2:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 80095f4:	4291      	cmp	r1, r2
 80095f6:	bf28      	it	cs
 80095f8:	f04f 0b01 	movcs.w	fp, #1
 80095fc:	e7c8      	b.n	8009590 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 80095fe:	4a0c      	ldr	r2, [pc, #48]	@ (8009630 <xTaskIncrementTick+0x124>)
 8009600:	6813      	ldr	r3, [r2, #0]
 8009602:	3301      	adds	r3, #1
 8009604:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009606:	f04f 0b00 	mov.w	fp, #0
 800960a:	e7b9      	b.n	8009580 <xTaskIncrementTick+0x74>
 800960c:	20013a08 	.word	0x20013a08
 8009610:	20013a28 	.word	0x20013a28
 8009614:	20013a74 	.word	0x20013a74
 8009618:	20013a70 	.word	0x20013a70
 800961c:	20013a14 	.word	0x20013a14
 8009620:	20013a0c 	.word	0x20013a0c
 8009624:	20013aa0 	.word	0x20013aa0
 8009628:	20013f00 	.word	0x20013f00
 800962c:	20013a18 	.word	0x20013a18
 8009630:	20013a1c 	.word	0x20013a1c
 8009634:	20013a24 	.word	0x20013a24

08009638 <xTaskResumeAll>:
{
 8009638:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800963c:	4c30      	ldr	r4, [pc, #192]	@ (8009700 <xTaskResumeAll+0xc8>)
 800963e:	6823      	ldr	r3, [r4, #0]
 8009640:	b943      	cbnz	r3, 8009654 <xTaskResumeAll+0x1c>
 8009642:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009646:	f383 8811 	msr	BASEPRI, r3
 800964a:	f3bf 8f6f 	isb	sy
 800964e:	f3bf 8f4f 	dsb	sy
 8009652:	e7fe      	b.n	8009652 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8009654:	f7fe fe5e 	bl	8008314 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009658:	6823      	ldr	r3, [r4, #0]
 800965a:	3b01      	subs	r3, #1
 800965c:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800965e:	6824      	ldr	r4, [r4, #0]
 8009660:	b12c      	cbz	r4, 800966e <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8009662:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009664:	f7fe fe76 	bl	8008354 <vPortExitCritical>
}
 8009668:	4620      	mov	r0, r4
 800966a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800966e:	4b25      	ldr	r3, [pc, #148]	@ (8009704 <xTaskResumeAll+0xcc>)
 8009670:	681b      	ldr	r3, [r3, #0]
 8009672:	2b00      	cmp	r3, #0
 8009674:	d0f5      	beq.n	8009662 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009676:	4d24      	ldr	r5, [pc, #144]	@ (8009708 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009678:	4e24      	ldr	r6, [pc, #144]	@ (800970c <xTaskResumeAll+0xd4>)
 800967a:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800971c <xTaskResumeAll+0xe4>
 800967e:	e01d      	b.n	80096bc <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009680:	68eb      	ldr	r3, [r5, #12]
 8009682:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009684:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009686:	f104 0018 	add.w	r0, r4, #24
 800968a:	f7fe fdcd 	bl	8008228 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800968e:	4638      	mov	r0, r7
 8009690:	f7fe fdca 	bl	8008228 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009694:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009696:	6832      	ldr	r2, [r6, #0]
 8009698:	2014      	movs	r0, #20
 800969a:	4293      	cmp	r3, r2
 800969c:	fb00 8003 	mla	r0, r0, r3, r8
 80096a0:	4639      	mov	r1, r7
 80096a2:	bf88      	it	hi
 80096a4:	6033      	strhi	r3, [r6, #0]
 80096a6:	f7fe fd9d 	bl	80081e4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80096aa:	4b19      	ldr	r3, [pc, #100]	@ (8009710 <xTaskResumeAll+0xd8>)
 80096ac:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80096ae:	681b      	ldr	r3, [r3, #0]
 80096b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80096b2:	429a      	cmp	r2, r3
 80096b4:	d302      	bcc.n	80096bc <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 80096b6:	4b17      	ldr	r3, [pc, #92]	@ (8009714 <xTaskResumeAll+0xdc>)
 80096b8:	2201      	movs	r2, #1
 80096ba:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80096bc:	682b      	ldr	r3, [r5, #0]
 80096be:	2b00      	cmp	r3, #0
 80096c0:	d1de      	bne.n	8009680 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 80096c2:	b10c      	cbz	r4, 80096c8 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 80096c4:	f7ff fd06 	bl	80090d4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 80096c8:	4d13      	ldr	r5, [pc, #76]	@ (8009718 <xTaskResumeAll+0xe0>)
 80096ca:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 80096cc:	b144      	cbz	r4, 80096e0 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 80096ce:	4e11      	ldr	r6, [pc, #68]	@ (8009714 <xTaskResumeAll+0xdc>)
 80096d0:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 80096d2:	f7ff ff1b 	bl	800950c <xTaskIncrementTick>
 80096d6:	b100      	cbz	r0, 80096da <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 80096d8:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80096da:	3c01      	subs	r4, #1
 80096dc:	d1f9      	bne.n	80096d2 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 80096de:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 80096e0:	4b0c      	ldr	r3, [pc, #48]	@ (8009714 <xTaskResumeAll+0xdc>)
 80096e2:	681b      	ldr	r3, [r3, #0]
 80096e4:	2b00      	cmp	r3, #0
 80096e6:	d0bc      	beq.n	8009662 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 80096e8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80096ec:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80096f0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80096f4:	f3bf 8f4f 	dsb	sy
 80096f8:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80096fc:	2401      	movs	r4, #1
 80096fe:	e7b1      	b.n	8009664 <xTaskResumeAll+0x2c>
 8009700:	20013a08 	.word	0x20013a08
 8009704:	20013a2c 	.word	0x20013a2c
 8009708:	20013a5c 	.word	0x20013a5c
 800970c:	20013a24 	.word	0x20013a24
 8009710:	20013f00 	.word	0x20013f00
 8009714:	20013a18 	.word	0x20013a18
 8009718:	20013a1c 	.word	0x20013a1c
 800971c:	20013aa0 	.word	0x20013aa0

08009720 <vTaskDelay>:
	{
 8009720:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009722:	b950      	cbnz	r0, 800973a <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009724:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009728:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800972c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009730:	f3bf 8f4f 	dsb	sy
 8009734:	f3bf 8f6f 	isb	sy
	}
 8009738:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800973a:	4b0a      	ldr	r3, [pc, #40]	@ (8009764 <vTaskDelay+0x44>)
 800973c:	6819      	ldr	r1, [r3, #0]
 800973e:	b141      	cbz	r1, 8009752 <vTaskDelay+0x32>
 8009740:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009744:	f383 8811 	msr	BASEPRI, r3
 8009748:	f3bf 8f6f 	isb	sy
 800974c:	f3bf 8f4f 	dsb	sy
 8009750:	e7fe      	b.n	8009750 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009752:	f7ff fecd 	bl	80094f0 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009756:	f7ff fc85 	bl	8009064 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800975a:	f7ff ff6d 	bl	8009638 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800975e:	2800      	cmp	r0, #0
 8009760:	d0e0      	beq.n	8009724 <vTaskDelay+0x4>
 8009762:	e7e9      	b.n	8009738 <vTaskDelay+0x18>
 8009764:	20013a08 	.word	0x20013a08

08009768 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009768:	4b19      	ldr	r3, [pc, #100]	@ (80097d0 <vTaskSwitchContext+0x68>)
 800976a:	681a      	ldr	r2, [r3, #0]
 800976c:	4b19      	ldr	r3, [pc, #100]	@ (80097d4 <vTaskSwitchContext+0x6c>)
{
 800976e:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009770:	b112      	cbz	r2, 8009778 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009772:	2201      	movs	r2, #1
 8009774:	601a      	str	r2, [r3, #0]
}
 8009776:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009778:	4d17      	ldr	r5, [pc, #92]	@ (80097d8 <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 800977a:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800977c:	682a      	ldr	r2, [r5, #0]
 800977e:	4917      	ldr	r1, [pc, #92]	@ (80097dc <vTaskSwitchContext+0x74>)
 8009780:	2614      	movs	r6, #20
 8009782:	fb06 f302 	mul.w	r3, r6, r2
 8009786:	18c8      	adds	r0, r1, r3
 8009788:	58cc      	ldr	r4, [r1, r3]
 800978a:	b1ac      	cbz	r4, 80097b8 <vTaskSwitchContext+0x50>
 800978c:	6844      	ldr	r4, [r0, #4]
 800978e:	3308      	adds	r3, #8
 8009790:	6864      	ldr	r4, [r4, #4]
 8009792:	6044      	str	r4, [r0, #4]
 8009794:	440b      	add	r3, r1
 8009796:	429c      	cmp	r4, r3
 8009798:	bf04      	itt	eq
 800979a:	6863      	ldreq	r3, [r4, #4]
 800979c:	6043      	streq	r3, [r0, #4]
 800979e:	2314      	movs	r3, #20
 80097a0:	fb03 1102 	mla	r1, r3, r2, r1
 80097a4:	684b      	ldr	r3, [r1, #4]
 80097a6:	68d9      	ldr	r1, [r3, #12]
 80097a8:	4b0d      	ldr	r3, [pc, #52]	@ (80097e0 <vTaskSwitchContext+0x78>)
 80097aa:	6019      	str	r1, [r3, #0]
 80097ac:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80097ae:	681b      	ldr	r3, [r3, #0]
 80097b0:	4a0c      	ldr	r2, [pc, #48]	@ (80097e4 <vTaskSwitchContext+0x7c>)
 80097b2:	3358      	adds	r3, #88	@ 0x58
 80097b4:	6013      	str	r3, [r2, #0]
}
 80097b6:	e7de      	b.n	8009776 <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097b8:	b942      	cbnz	r2, 80097cc <vTaskSwitchContext+0x64>
 80097ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097be:	f383 8811 	msr	BASEPRI, r3
 80097c2:	f3bf 8f6f 	isb	sy
 80097c6:	f3bf 8f4f 	dsb	sy
 80097ca:	e7fe      	b.n	80097ca <vTaskSwitchContext+0x62>
 80097cc:	3a01      	subs	r2, #1
 80097ce:	e7d8      	b.n	8009782 <vTaskSwitchContext+0x1a>
 80097d0:	20013a08 	.word	0x20013a08
 80097d4:	20013a18 	.word	0x20013a18
 80097d8:	20013a24 	.word	0x20013a24
 80097dc:	20013aa0 	.word	0x20013aa0
 80097e0:	20013f00 	.word	0x20013f00
 80097e4:	20000220 	.word	0x20000220

080097e8 <vTaskPlaceOnEventList>:
{
 80097e8:	b510      	push	{r4, lr}
 80097ea:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80097ec:	b940      	cbnz	r0, 8009800 <vTaskPlaceOnEventList+0x18>
 80097ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097f2:	f383 8811 	msr	BASEPRI, r3
 80097f6:	f3bf 8f6f 	isb	sy
 80097fa:	f3bf 8f4f 	dsb	sy
 80097fe:	e7fe      	b.n	80097fe <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009800:	4b05      	ldr	r3, [pc, #20]	@ (8009818 <vTaskPlaceOnEventList+0x30>)
 8009802:	6819      	ldr	r1, [r3, #0]
 8009804:	3118      	adds	r1, #24
 8009806:	f7fe fcf8 	bl	80081fa <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800980a:	4620      	mov	r0, r4
 800980c:	2101      	movs	r1, #1
}
 800980e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009812:	f7ff bc27 	b.w	8009064 <prvAddCurrentTaskToDelayedList>
 8009816:	bf00      	nop
 8009818:	20013f00 	.word	0x20013f00

0800981c <vTaskPlaceOnEventListRestricted>:
	{
 800981c:	b538      	push	{r3, r4, r5, lr}
 800981e:	460d      	mov	r5, r1
 8009820:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009822:	b940      	cbnz	r0, 8009836 <vTaskPlaceOnEventListRestricted+0x1a>
 8009824:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009828:	f383 8811 	msr	BASEPRI, r3
 800982c:	f3bf 8f6f 	isb	sy
 8009830:	f3bf 8f4f 	dsb	sy
 8009834:	e7fe      	b.n	8009834 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009836:	4b07      	ldr	r3, [pc, #28]	@ (8009854 <vTaskPlaceOnEventListRestricted+0x38>)
 8009838:	6819      	ldr	r1, [r3, #0]
 800983a:	3118      	adds	r1, #24
 800983c:	f7fe fcd2 	bl	80081e4 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009840:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009842:	4621      	mov	r1, r4
 8009844:	bf0c      	ite	eq
 8009846:	4628      	moveq	r0, r5
 8009848:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800984c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009850:	f7ff bc08 	b.w	8009064 <prvAddCurrentTaskToDelayedList>
 8009854:	20013f00 	.word	0x20013f00

08009858 <xTaskRemoveFromEventList>:
{
 8009858:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800985a:	68c3      	ldr	r3, [r0, #12]
 800985c:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800985e:	b944      	cbnz	r4, 8009872 <xTaskRemoveFromEventList+0x1a>
 8009860:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009864:	f383 8811 	msr	BASEPRI, r3
 8009868:	f3bf 8f6f 	isb	sy
 800986c:	f3bf 8f4f 	dsb	sy
 8009870:	e7fe      	b.n	8009870 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009872:	f104 0518 	add.w	r5, r4, #24
 8009876:	4628      	mov	r0, r5
 8009878:	f7fe fcd6 	bl	8008228 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800987c:	4b10      	ldr	r3, [pc, #64]	@ (80098c0 <xTaskRemoveFromEventList+0x68>)
 800987e:	681b      	ldr	r3, [r3, #0]
 8009880:	b9db      	cbnz	r3, 80098ba <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009882:	1d25      	adds	r5, r4, #4
 8009884:	4628      	mov	r0, r5
 8009886:	f7fe fccf 	bl	8008228 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800988a:	4a0e      	ldr	r2, [pc, #56]	@ (80098c4 <xTaskRemoveFromEventList+0x6c>)
 800988c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800988e:	6811      	ldr	r1, [r2, #0]
 8009890:	428b      	cmp	r3, r1
 8009892:	bf88      	it	hi
 8009894:	6013      	strhi	r3, [r2, #0]
 8009896:	4a0c      	ldr	r2, [pc, #48]	@ (80098c8 <xTaskRemoveFromEventList+0x70>)
 8009898:	2014      	movs	r0, #20
 800989a:	4629      	mov	r1, r5
 800989c:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80098a0:	f7fe fca0 	bl	80081e4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80098a4:	4b09      	ldr	r3, [pc, #36]	@ (80098cc <xTaskRemoveFromEventList+0x74>)
 80098a6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80098a8:	681b      	ldr	r3, [r3, #0]
 80098aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80098ac:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80098ae:	bf83      	ittte	hi
 80098b0:	4b07      	ldrhi	r3, [pc, #28]	@ (80098d0 <xTaskRemoveFromEventList+0x78>)
 80098b2:	2001      	movhi	r0, #1
 80098b4:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 80098b6:	2000      	movls	r0, #0
}
 80098b8:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80098ba:	4806      	ldr	r0, [pc, #24]	@ (80098d4 <xTaskRemoveFromEventList+0x7c>)
 80098bc:	4629      	mov	r1, r5
 80098be:	e7ef      	b.n	80098a0 <xTaskRemoveFromEventList+0x48>
 80098c0:	20013a08 	.word	0x20013a08
 80098c4:	20013a24 	.word	0x20013a24
 80098c8:	20013aa0 	.word	0x20013aa0
 80098cc:	20013f00 	.word	0x20013f00
 80098d0:	20013a18 	.word	0x20013a18
 80098d4:	20013a5c 	.word	0x20013a5c

080098d8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80098d8:	4b03      	ldr	r3, [pc, #12]	@ (80098e8 <vTaskInternalSetTimeOutState+0x10>)
 80098da:	681b      	ldr	r3, [r3, #0]
 80098dc:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80098de:	4b03      	ldr	r3, [pc, #12]	@ (80098ec <vTaskInternalSetTimeOutState+0x14>)
 80098e0:	681b      	ldr	r3, [r3, #0]
 80098e2:	6043      	str	r3, [r0, #4]
}
 80098e4:	4770      	bx	lr
 80098e6:	bf00      	nop
 80098e8:	20013a14 	.word	0x20013a14
 80098ec:	20013a28 	.word	0x20013a28

080098f0 <xTaskCheckForTimeOut>:
{
 80098f0:	b570      	push	{r4, r5, r6, lr}
 80098f2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80098f4:	4605      	mov	r5, r0
 80098f6:	b940      	cbnz	r0, 800990a <xTaskCheckForTimeOut+0x1a>
 80098f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80098fc:	f383 8811 	msr	BASEPRI, r3
 8009900:	f3bf 8f6f 	isb	sy
 8009904:	f3bf 8f4f 	dsb	sy
 8009908:	e7fe      	b.n	8009908 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800990a:	b941      	cbnz	r1, 800991e <xTaskCheckForTimeOut+0x2e>
 800990c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009910:	f383 8811 	msr	BASEPRI, r3
 8009914:	f3bf 8f6f 	isb	sy
 8009918:	f3bf 8f4f 	dsb	sy
 800991c:	e7fe      	b.n	800991c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800991e:	f7fe fcf9 	bl	8008314 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009922:	4b0f      	ldr	r3, [pc, #60]	@ (8009960 <xTaskCheckForTimeOut+0x70>)
 8009924:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009926:	6823      	ldr	r3, [r4, #0]
 8009928:	1c5a      	adds	r2, r3, #1
 800992a:	d010      	beq.n	800994e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800992c:	480d      	ldr	r0, [pc, #52]	@ (8009964 <xTaskCheckForTimeOut+0x74>)
 800992e:	682e      	ldr	r6, [r5, #0]
 8009930:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009932:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009934:	4286      	cmp	r6, r0
 8009936:	d001      	beq.n	800993c <xTaskCheckForTimeOut+0x4c>
 8009938:	428a      	cmp	r2, r1
 800993a:	d90f      	bls.n	800995c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800993c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800993e:	4283      	cmp	r3, r0
 8009940:	d90a      	bls.n	8009958 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009942:	1a5b      	subs	r3, r3, r1
 8009944:	4413      	add	r3, r2
 8009946:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009948:	4628      	mov	r0, r5
 800994a:	f7ff ffc5 	bl	80098d8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800994e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009950:	f7fe fd00 	bl	8008354 <vPortExitCritical>
}
 8009954:	4620      	mov	r0, r4
 8009956:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009958:	2300      	movs	r3, #0
 800995a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800995c:	2401      	movs	r4, #1
 800995e:	e7f7      	b.n	8009950 <xTaskCheckForTimeOut+0x60>
 8009960:	20013a28 	.word	0x20013a28
 8009964:	20013a14 	.word	0x20013a14

08009968 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009968:	4b01      	ldr	r3, [pc, #4]	@ (8009970 <vTaskMissedYield+0x8>)
 800996a:	2201      	movs	r2, #1
 800996c:	601a      	str	r2, [r3, #0]
}
 800996e:	4770      	bx	lr
 8009970:	20013a18 	.word	0x20013a18

08009974 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009974:	4b05      	ldr	r3, [pc, #20]	@ (800998c <xTaskGetSchedulerState+0x18>)
 8009976:	681b      	ldr	r3, [r3, #0]
 8009978:	b133      	cbz	r3, 8009988 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800997a:	4b05      	ldr	r3, [pc, #20]	@ (8009990 <xTaskGetSchedulerState+0x1c>)
 800997c:	6818      	ldr	r0, [r3, #0]
 800997e:	fab0 f080 	clz	r0, r0
 8009982:	0940      	lsrs	r0, r0, #5
 8009984:	0040      	lsls	r0, r0, #1
 8009986:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009988:	2001      	movs	r0, #1
	}
 800998a:	4770      	bx	lr
 800998c:	20013a20 	.word	0x20013a20
 8009990:	20013a08 	.word	0x20013a08

08009994 <xTaskPriorityInherit>:
	{
 8009994:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8009996:	4604      	mov	r4, r0
 8009998:	b338      	cbz	r0, 80099ea <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800999a:	4d1a      	ldr	r5, [pc, #104]	@ (8009a04 <xTaskPriorityInherit+0x70>)
 800999c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800999e:	682a      	ldr	r2, [r5, #0]
 80099a0:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80099a2:	4293      	cmp	r3, r2
 80099a4:	d226      	bcs.n	80099f4 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80099a6:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80099a8:	4e17      	ldr	r6, [pc, #92]	@ (8009a08 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80099aa:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80099ac:	bfa1      	itttt	ge
 80099ae:	682a      	ldrge	r2, [r5, #0]
 80099b0:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 80099b2:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 80099b6:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80099b8:	2214      	movs	r2, #20
 80099ba:	fb02 6303 	mla	r3, r2, r3, r6
 80099be:	6942      	ldr	r2, [r0, #20]
 80099c0:	429a      	cmp	r2, r3
 80099c2:	d113      	bne.n	80099ec <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099c4:	1d07      	adds	r7, r0, #4
 80099c6:	4638      	mov	r0, r7
 80099c8:	f7fe fc2e 	bl	8008228 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099cc:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80099ce:	4a0f      	ldr	r2, [pc, #60]	@ (8009a0c <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80099d2:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099d4:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80099d6:	2014      	movs	r0, #20
 80099d8:	428b      	cmp	r3, r1
 80099da:	fb00 6003 	mla	r0, r0, r3, r6
 80099de:	4639      	mov	r1, r7
 80099e0:	bf88      	it	hi
 80099e2:	6013      	strhi	r3, [r2, #0]
 80099e4:	f7fe fbfe 	bl	80081e4 <vListInsertEnd>
				xReturn = pdTRUE;
 80099e8:	2001      	movs	r0, #1
	}
 80099ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099ec:	682b      	ldr	r3, [r5, #0]
 80099ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80099f0:	62c3      	str	r3, [r0, #44]	@ 0x2c
 80099f2:	e7f9      	b.n	80099e8 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80099f4:	682b      	ldr	r3, [r5, #0]
 80099f6:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 80099f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80099fa:	4298      	cmp	r0, r3
 80099fc:	bf2c      	ite	cs
 80099fe:	2000      	movcs	r0, #0
 8009a00:	2001      	movcc	r0, #1
 8009a02:	e7f2      	b.n	80099ea <xTaskPriorityInherit+0x56>
 8009a04:	20013f00 	.word	0x20013f00
 8009a08:	20013aa0 	.word	0x20013aa0
 8009a0c:	20013a24 	.word	0x20013a24

08009a10 <xTaskPriorityDisinherit>:
	{
 8009a10:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009a12:	b908      	cbnz	r0, 8009a18 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8009a14:	2000      	movs	r0, #0
	}
 8009a16:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009a18:	4b1b      	ldr	r3, [pc, #108]	@ (8009a88 <xTaskPriorityDisinherit+0x78>)
 8009a1a:	681c      	ldr	r4, [r3, #0]
 8009a1c:	4284      	cmp	r4, r0
 8009a1e:	d008      	beq.n	8009a32 <xTaskPriorityDisinherit+0x22>
 8009a20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a24:	f383 8811 	msr	BASEPRI, r3
 8009a28:	f3bf 8f6f 	isb	sy
 8009a2c:	f3bf 8f4f 	dsb	sy
 8009a30:	e7fe      	b.n	8009a30 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8009a32:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009a34:	b943      	cbnz	r3, 8009a48 <xTaskPriorityDisinherit+0x38>
 8009a36:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a3a:	f383 8811 	msr	BASEPRI, r3
 8009a3e:	f3bf 8f6f 	isb	sy
 8009a42:	f3bf 8f4f 	dsb	sy
 8009a46:	e7fe      	b.n	8009a46 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009a48:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8009a4a:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009a4c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009a4e:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009a50:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009a52:	d0df      	beq.n	8009a14 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009a54:	2b00      	cmp	r3, #0
 8009a56:	d1dd      	bne.n	8009a14 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a58:	1d25      	adds	r5, r4, #4
 8009a5a:	4628      	mov	r0, r5
 8009a5c:	f7fe fbe4 	bl	8008228 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009a60:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009a62:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009a64:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009a68:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009a6a:	4a08      	ldr	r2, [pc, #32]	@ (8009a8c <xTaskPriorityDisinherit+0x7c>)
 8009a6c:	6811      	ldr	r1, [r2, #0]
 8009a6e:	428b      	cmp	r3, r1
 8009a70:	bf88      	it	hi
 8009a72:	6013      	strhi	r3, [r2, #0]
 8009a74:	4a06      	ldr	r2, [pc, #24]	@ (8009a90 <xTaskPriorityDisinherit+0x80>)
 8009a76:	2014      	movs	r0, #20
 8009a78:	fb00 2003 	mla	r0, r0, r3, r2
 8009a7c:	4629      	mov	r1, r5
 8009a7e:	f7fe fbb1 	bl	80081e4 <vListInsertEnd>
					xReturn = pdTRUE;
 8009a82:	2001      	movs	r0, #1
		return xReturn;
 8009a84:	e7c7      	b.n	8009a16 <xTaskPriorityDisinherit+0x6>
 8009a86:	bf00      	nop
 8009a88:	20013f00 	.word	0x20013f00
 8009a8c:	20013a24 	.word	0x20013a24
 8009a90:	20013aa0 	.word	0x20013aa0

08009a94 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009a94:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009a96:	4604      	mov	r4, r0
 8009a98:	2800      	cmp	r0, #0
 8009a9a:	d041      	beq.n	8009b20 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8009a9c:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8009a9e:	b942      	cbnz	r2, 8009ab2 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009aa0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009aa4:	f383 8811 	msr	BASEPRI, r3
 8009aa8:	f3bf 8f6f 	isb	sy
 8009aac:	f3bf 8f4f 	dsb	sy
 8009ab0:	e7fe      	b.n	8009ab0 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009ab2:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8009ab4:	4299      	cmp	r1, r3
 8009ab6:	bf38      	it	cc
 8009ab8:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009aba:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009abc:	428b      	cmp	r3, r1
 8009abe:	d02f      	beq.n	8009b20 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009ac0:	2a01      	cmp	r2, #1
 8009ac2:	d12d      	bne.n	8009b20 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8009ac4:	4a17      	ldr	r2, [pc, #92]	@ (8009b24 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8009ac6:	6812      	ldr	r2, [r2, #0]
 8009ac8:	4282      	cmp	r2, r0
 8009aca:	d108      	bne.n	8009ade <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009acc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ad0:	f383 8811 	msr	BASEPRI, r3
 8009ad4:	f3bf 8f6f 	isb	sy
 8009ad8:	f3bf 8f4f 	dsb	sy
 8009adc:	e7fe      	b.n	8009adc <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009ade:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009ae0:	4d11      	ldr	r5, [pc, #68]	@ (8009b28 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8009ae2:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009ae4:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009ae6:	f04f 0214 	mov.w	r2, #20
 8009aea:	fb02 5303 	mla	r3, r2, r3, r5
 8009aee:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009af0:	bfa4      	itt	ge
 8009af2:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 8009af6:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009af8:	429a      	cmp	r2, r3
 8009afa:	d111      	bne.n	8009b20 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009afc:	1d06      	adds	r6, r0, #4
 8009afe:	4630      	mov	r0, r6
 8009b00:	f7fe fb92 	bl	8008228 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009b04:	4a09      	ldr	r2, [pc, #36]	@ (8009b2c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009b06:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009b08:	6811      	ldr	r1, [r2, #0]
 8009b0a:	2014      	movs	r0, #20
 8009b0c:	428b      	cmp	r3, r1
 8009b0e:	fb00 5003 	mla	r0, r0, r3, r5
 8009b12:	4631      	mov	r1, r6
	}
 8009b14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8009b18:	bf88      	it	hi
 8009b1a:	6013      	strhi	r3, [r2, #0]
 8009b1c:	f7fe bb62 	b.w	80081e4 <vListInsertEnd>
	}
 8009b20:	bd70      	pop	{r4, r5, r6, pc}
 8009b22:	bf00      	nop
 8009b24:	20013f00 	.word	0x20013f00
 8009b28:	20013aa0 	.word	0x20013aa0
 8009b2c:	20013a24 	.word	0x20013a24

08009b30 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009b30:	4b04      	ldr	r3, [pc, #16]	@ (8009b44 <pvTaskIncrementMutexHeldCount+0x14>)
 8009b32:	681a      	ldr	r2, [r3, #0]
 8009b34:	b11a      	cbz	r2, 8009b3e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009b36:	6819      	ldr	r1, [r3, #0]
 8009b38:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8009b3a:	3201      	adds	r2, #1
 8009b3c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8009b3e:	6818      	ldr	r0, [r3, #0]
	}
 8009b40:	4770      	bx	lr
 8009b42:	bf00      	nop
 8009b44:	20013f00 	.word	0x20013f00

08009b48 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009b48:	4291      	cmp	r1, r2
{
 8009b4a:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009b4c:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009b4e:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009b50:	d80a      	bhi.n	8009b68 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b52:	1ad2      	subs	r2, r2, r3
 8009b54:	6983      	ldr	r3, [r0, #24]
 8009b56:	429a      	cmp	r2, r3
 8009b58:	d20d      	bcs.n	8009b76 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009b5a:	4b08      	ldr	r3, [pc, #32]	@ (8009b7c <prvInsertTimerInActiveList+0x34>)
 8009b5c:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009b5e:	6818      	ldr	r0, [r3, #0]
 8009b60:	f7fe fb4b 	bl	80081fa <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009b64:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009b66:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009b68:	429a      	cmp	r2, r3
 8009b6a:	d201      	bcs.n	8009b70 <prvInsertTimerInActiveList+0x28>
 8009b6c:	4299      	cmp	r1, r3
 8009b6e:	d202      	bcs.n	8009b76 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009b70:	4b03      	ldr	r3, [pc, #12]	@ (8009b80 <prvInsertTimerInActiveList+0x38>)
 8009b72:	1d01      	adds	r1, r0, #4
 8009b74:	e7f3      	b.n	8009b5e <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009b76:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009b78:	e7f5      	b.n	8009b66 <prvInsertTimerInActiveList+0x1e>
 8009b7a:	bf00      	nop
 8009b7c:	20014000 	.word	0x20014000
 8009b80:	20014004 	.word	0x20014004

08009b84 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009b84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009b86:	4c11      	ldr	r4, [pc, #68]	@ (8009bcc <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009b88:	f7fe fbc4 	bl	8008314 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009b8c:	6825      	ldr	r5, [r4, #0]
 8009b8e:	b9bd      	cbnz	r5, 8009bc0 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009b90:	4f0f      	ldr	r7, [pc, #60]	@ (8009bd0 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009b92:	4e10      	ldr	r6, [pc, #64]	@ (8009bd4 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009b94:	4638      	mov	r0, r7
 8009b96:	f7fe fb17 	bl	80081c8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009b9a:	4630      	mov	r0, r6
 8009b9c:	f7fe fb14 	bl	80081c8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009ba0:	4b0d      	ldr	r3, [pc, #52]	@ (8009bd8 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009ba2:	4a0e      	ldr	r2, [pc, #56]	@ (8009bdc <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009ba4:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009ba6:	4b0e      	ldr	r3, [pc, #56]	@ (8009be0 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009ba8:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009baa:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009bac:	200a      	movs	r0, #10
 8009bae:	4b0d      	ldr	r3, [pc, #52]	@ (8009be4 <prvCheckForValidListAndQueue+0x60>)
 8009bb0:	9500      	str	r5, [sp, #0]
 8009bb2:	f7fe fdb8 	bl	8008726 <xQueueGenericCreateStatic>
 8009bb6:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009bb8:	b110      	cbz	r0, 8009bc0 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009bba:	490b      	ldr	r1, [pc, #44]	@ (8009be8 <prvCheckForValidListAndQueue+0x64>)
 8009bbc:	f7ff f970 	bl	8008ea0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009bc0:	b003      	add	sp, #12
 8009bc2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009bc6:	f7fe bbc5 	b.w	8008354 <vPortExitCritical>
 8009bca:	bf00      	nop
 8009bcc:	20013ffc 	.word	0x20013ffc
 8009bd0:	2001401c 	.word	0x2001401c
 8009bd4:	20014008 	.word	0x20014008
 8009bd8:	20014004 	.word	0x20014004
 8009bdc:	20013f54 	.word	0x20013f54
 8009be0:	20014000 	.word	0x20014000
 8009be4:	20013f04 	.word	0x20013f04
 8009be8:	08025388 	.word	0x08025388

08009bec <xTimerCreateTimerTask>:
{
 8009bec:	b510      	push	{r4, lr}
 8009bee:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009bf0:	f7ff ffc8 	bl	8009b84 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009bf4:	4b12      	ldr	r3, [pc, #72]	@ (8009c40 <xTimerCreateTimerTask+0x54>)
 8009bf6:	681b      	ldr	r3, [r3, #0]
 8009bf8:	b1b3      	cbz	r3, 8009c28 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009bfa:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009bfc:	aa07      	add	r2, sp, #28
 8009bfe:	a906      	add	r1, sp, #24
 8009c00:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009c02:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009c06:	f7fe f9d7 	bl	8007fb8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009c0a:	9b05      	ldr	r3, [sp, #20]
 8009c0c:	9302      	str	r3, [sp, #8]
 8009c0e:	9b06      	ldr	r3, [sp, #24]
 8009c10:	9301      	str	r3, [sp, #4]
 8009c12:	2302      	movs	r3, #2
 8009c14:	9300      	str	r3, [sp, #0]
 8009c16:	9a07      	ldr	r2, [sp, #28]
 8009c18:	490a      	ldr	r1, [pc, #40]	@ (8009c44 <xTimerCreateTimerTask+0x58>)
 8009c1a:	480b      	ldr	r0, [pc, #44]	@ (8009c48 <xTimerCreateTimerTask+0x5c>)
 8009c1c:	4623      	mov	r3, r4
 8009c1e:	f7ff fb17 	bl	8009250 <xTaskCreateStatic>
 8009c22:	4b0a      	ldr	r3, [pc, #40]	@ (8009c4c <xTimerCreateTimerTask+0x60>)
 8009c24:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009c26:	b940      	cbnz	r0, 8009c3a <xTimerCreateTimerTask+0x4e>
 8009c28:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c2c:	f383 8811 	msr	BASEPRI, r3
 8009c30:	f3bf 8f6f 	isb	sy
 8009c34:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009c38:	e7fe      	b.n	8009c38 <xTimerCreateTimerTask+0x4c>
}
 8009c3a:	2001      	movs	r0, #1
 8009c3c:	b008      	add	sp, #32
 8009c3e:	bd10      	pop	{r4, pc}
 8009c40:	20013ffc 	.word	0x20013ffc
 8009c44:	0802538d 	.word	0x0802538d
 8009c48:	08009d4d 	.word	0x08009d4d
 8009c4c:	20013ff8 	.word	0x20013ff8

08009c50 <xTimerGenericCommand>:
{
 8009c50:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009c52:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009c54:	4604      	mov	r4, r0
{
 8009c56:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009c58:	b940      	cbnz	r0, 8009c6c <xTimerGenericCommand+0x1c>
 8009c5a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c5e:	f383 8811 	msr	BASEPRI, r3
 8009c62:	f3bf 8f6f 	isb	sy
 8009c66:	f3bf 8f4f 	dsb	sy
 8009c6a:	e7fe      	b.n	8009c6a <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009c6c:	4d0d      	ldr	r5, [pc, #52]	@ (8009ca4 <xTimerGenericCommand+0x54>)
 8009c6e:	6828      	ldr	r0, [r5, #0]
 8009c70:	b180      	cbz	r0, 8009c94 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009c72:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009c74:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009c78:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009c7a:	dc0d      	bgt.n	8009c98 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009c7c:	f7ff fe7a 	bl	8009974 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009c80:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009c82:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009c84:	bf08      	it	eq
 8009c86:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009c88:	6828      	ldr	r0, [r5, #0]
 8009c8a:	bf18      	it	ne
 8009c8c:	461a      	movne	r2, r3
 8009c8e:	4669      	mov	r1, sp
 8009c90:	f7fe fdfe 	bl	8008890 <xQueueGenericSend>
}
 8009c94:	b004      	add	sp, #16
 8009c96:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009c98:	2300      	movs	r3, #0
 8009c9a:	4669      	mov	r1, sp
 8009c9c:	f7fe feaa 	bl	80089f4 <xQueueGenericSendFromISR>
 8009ca0:	e7f8      	b.n	8009c94 <xTimerGenericCommand+0x44>
 8009ca2:	bf00      	nop
 8009ca4:	20013ffc 	.word	0x20013ffc

08009ca8 <prvSampleTimeNow>:
{
 8009ca8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009cac:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8009d48 <prvSampleTimeNow+0xa0>
{
 8009cb0:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009cb2:	f7ff fc25 	bl	8009500 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009cb6:	f8d8 3000 	ldr.w	r3, [r8]
 8009cba:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009cbc:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009cbe:	d909      	bls.n	8009cd4 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009cc0:	4f1f      	ldr	r7, [pc, #124]	@ (8009d40 <prvSampleTimeNow+0x98>)
 8009cc2:	683b      	ldr	r3, [r7, #0]
 8009cc4:	681a      	ldr	r2, [r3, #0]
 8009cc6:	b96a      	cbnz	r2, 8009ce4 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009cc8:	4a1e      	ldr	r2, [pc, #120]	@ (8009d44 <prvSampleTimeNow+0x9c>)
 8009cca:	6811      	ldr	r1, [r2, #0]
 8009ccc:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8009cce:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009cd0:	2301      	movs	r3, #1
 8009cd2:	e000      	b.n	8009cd6 <prvSampleTimeNow+0x2e>
 8009cd4:	2300      	movs	r3, #0
}
 8009cd6:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8009cd8:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009cda:	f8c8 5000 	str.w	r5, [r8]
}
 8009cde:	b002      	add	sp, #8
 8009ce0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009ce4:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ce6:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009ce8:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009cec:	f104 0a04 	add.w	sl, r4, #4
 8009cf0:	4650      	mov	r0, sl
 8009cf2:	f7fe fa99 	bl	8008228 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009cf6:	6a23      	ldr	r3, [r4, #32]
 8009cf8:	4620      	mov	r0, r4
 8009cfa:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009cfc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009d00:	075b      	lsls	r3, r3, #29
 8009d02:	d5de      	bpl.n	8009cc2 <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009d04:	69a3      	ldr	r3, [r4, #24]
 8009d06:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8009d08:	4599      	cmp	r9, r3
 8009d0a:	d206      	bcs.n	8009d1a <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009d0c:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009d0e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009d10:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009d12:	4651      	mov	r1, sl
 8009d14:	f7fe fa71 	bl	80081fa <vListInsert>
 8009d18:	e7d3      	b.n	8009cc2 <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009d1a:	2300      	movs	r3, #0
 8009d1c:	9300      	str	r3, [sp, #0]
 8009d1e:	464a      	mov	r2, r9
 8009d20:	4619      	mov	r1, r3
 8009d22:	4620      	mov	r0, r4
 8009d24:	f7ff ff94 	bl	8009c50 <xTimerGenericCommand>
				configASSERT( xResult );
 8009d28:	2800      	cmp	r0, #0
 8009d2a:	d1ca      	bne.n	8009cc2 <prvSampleTimeNow+0x1a>
 8009d2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d30:	f383 8811 	msr	BASEPRI, r3
 8009d34:	f3bf 8f6f 	isb	sy
 8009d38:	f3bf 8f4f 	dsb	sy
 8009d3c:	e7fe      	b.n	8009d3c <prvSampleTimeNow+0x94>
 8009d3e:	bf00      	nop
 8009d40:	20014004 	.word	0x20014004
 8009d44:	20014000 	.word	0x20014000
 8009d48:	20013ff4 	.word	0x20013ff4

08009d4c <prvTimerTask>:
{
 8009d4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009d50:	4d6e      	ldr	r5, [pc, #440]	@ (8009f0c <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009d52:	4e6f      	ldr	r6, [pc, #444]	@ (8009f10 <prvTimerTask+0x1c4>)
{
 8009d54:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009d56:	682b      	ldr	r3, [r5, #0]
 8009d58:	f8d3 8000 	ldr.w	r8, [r3]
 8009d5c:	f1b8 0f00 	cmp.w	r8, #0
 8009d60:	d035      	beq.n	8009dce <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009d62:	68db      	ldr	r3, [r3, #12]
 8009d64:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009d68:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009d6a:	f7ff fbc1 	bl	80094f0 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009d6e:	a804      	add	r0, sp, #16
 8009d70:	f7ff ff9a 	bl	8009ca8 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009d74:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009d76:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009d78:	2b00      	cmp	r3, #0
 8009d7a:	d169      	bne.n	8009e50 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009d7c:	2c00      	cmp	r4, #0
 8009d7e:	d14c      	bne.n	8009e1a <prvTimerTask+0xce>
 8009d80:	4540      	cmp	r0, r8
 8009d82:	d350      	bcc.n	8009e26 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009d84:	f7ff fc58 	bl	8009638 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d88:	682b      	ldr	r3, [r5, #0]
 8009d8a:	68db      	ldr	r3, [r3, #12]
 8009d8c:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009d8e:	1d38      	adds	r0, r7, #4
 8009d90:	f7fe fa4a 	bl	8008228 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009d94:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009d98:	0758      	lsls	r0, r3, #29
 8009d9a:	d51a      	bpl.n	8009dd2 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009d9c:	69b9      	ldr	r1, [r7, #24]
 8009d9e:	4643      	mov	r3, r8
 8009da0:	464a      	mov	r2, r9
 8009da2:	4441      	add	r1, r8
 8009da4:	4638      	mov	r0, r7
 8009da6:	f7ff fecf 	bl	8009b48 <prvInsertTimerInActiveList>
 8009daa:	b1b0      	cbz	r0, 8009dda <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009dac:	9400      	str	r4, [sp, #0]
 8009dae:	4623      	mov	r3, r4
 8009db0:	4642      	mov	r2, r8
 8009db2:	4621      	mov	r1, r4
 8009db4:	4638      	mov	r0, r7
 8009db6:	f7ff ff4b 	bl	8009c50 <xTimerGenericCommand>
			configASSERT( xResult );
 8009dba:	b970      	cbnz	r0, 8009dda <prvTimerTask+0x8e>
 8009dbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009dc0:	f383 8811 	msr	BASEPRI, r3
 8009dc4:	f3bf 8f6f 	isb	sy
 8009dc8:	f3bf 8f4f 	dsb	sy
 8009dcc:	e7fe      	b.n	8009dcc <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009dce:	2401      	movs	r4, #1
 8009dd0:	e7cb      	b.n	8009d6a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009dd2:	f023 0301 	bic.w	r3, r3, #1
 8009dd6:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009dda:	6a3b      	ldr	r3, [r7, #32]
 8009ddc:	4638      	mov	r0, r7
 8009dde:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009de0:	6830      	ldr	r0, [r6, #0]
 8009de2:	2200      	movs	r2, #0
 8009de4:	a904      	add	r1, sp, #16
 8009de6:	f7fe feb3 	bl	8008b50 <xQueueReceive>
 8009dea:	2800      	cmp	r0, #0
 8009dec:	d0b3      	beq.n	8009d56 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009dee:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009df0:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009df2:	2b00      	cmp	r3, #0
 8009df4:	db2f      	blt.n	8009e56 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009df6:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009df8:	6963      	ldr	r3, [r4, #20]
 8009dfa:	2b00      	cmp	r3, #0
 8009dfc:	d132      	bne.n	8009e64 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009dfe:	a803      	add	r0, sp, #12
 8009e00:	f7ff ff52 	bl	8009ca8 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009e04:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009e06:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009e08:	2b09      	cmp	r3, #9
 8009e0a:	d8e9      	bhi.n	8009de0 <prvTimerTask+0x94>
 8009e0c:	e8df f003 	tbb	[pc, r3]
 8009e10:	572e2e2e 	.word	0x572e2e2e
 8009e14:	2e2e765e 	.word	0x2e2e765e
 8009e18:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009e1a:	4b3e      	ldr	r3, [pc, #248]	@ (8009f14 <prvTimerTask+0x1c8>)
 8009e1c:	681b      	ldr	r3, [r3, #0]
 8009e1e:	681c      	ldr	r4, [r3, #0]
 8009e20:	fab4 f484 	clz	r4, r4
 8009e24:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009e26:	6830      	ldr	r0, [r6, #0]
 8009e28:	4622      	mov	r2, r4
 8009e2a:	eba8 0109 	sub.w	r1, r8, r9
 8009e2e:	f7ff f876 	bl	8008f1e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009e32:	f7ff fc01 	bl	8009638 <xTaskResumeAll>
 8009e36:	2800      	cmp	r0, #0
 8009e38:	d1d2      	bne.n	8009de0 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009e3a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009e3e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009e42:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009e46:	f3bf 8f4f 	dsb	sy
 8009e4a:	f3bf 8f6f 	isb	sy
 8009e4e:	e7c7      	b.n	8009de0 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009e50:	f7ff fbf2 	bl	8009638 <xTaskResumeAll>
}
 8009e54:	e7c4      	b.n	8009de0 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009e56:	9b05      	ldr	r3, [sp, #20]
 8009e58:	9907      	ldr	r1, [sp, #28]
 8009e5a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009e5c:	9b04      	ldr	r3, [sp, #16]
 8009e5e:	2b00      	cmp	r3, #0
 8009e60:	dbbe      	blt.n	8009de0 <prvTimerTask+0x94>
 8009e62:	e7c8      	b.n	8009df6 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009e64:	1d20      	adds	r0, r4, #4
 8009e66:	f7fe f9df 	bl	8008228 <uxListRemove>
 8009e6a:	e7c8      	b.n	8009dfe <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009e6c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009e70:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009e72:	f043 0301 	orr.w	r3, r3, #1
 8009e76:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009e7a:	9b05      	ldr	r3, [sp, #20]
 8009e7c:	4620      	mov	r0, r4
 8009e7e:	4419      	add	r1, r3
 8009e80:	f7ff fe62 	bl	8009b48 <prvInsertTimerInActiveList>
 8009e84:	2800      	cmp	r0, #0
 8009e86:	d0ab      	beq.n	8009de0 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009e88:	6a23      	ldr	r3, [r4, #32]
 8009e8a:	4620      	mov	r0, r4
 8009e8c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009e8e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009e92:	0759      	lsls	r1, r3, #29
 8009e94:	d5a4      	bpl.n	8009de0 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009e96:	69a2      	ldr	r2, [r4, #24]
 8009e98:	9905      	ldr	r1, [sp, #20]
 8009e9a:	2300      	movs	r3, #0
 8009e9c:	440a      	add	r2, r1
 8009e9e:	9300      	str	r3, [sp, #0]
 8009ea0:	4619      	mov	r1, r3
 8009ea2:	4620      	mov	r0, r4
 8009ea4:	f7ff fed4 	bl	8009c50 <xTimerGenericCommand>
							configASSERT( xResult );
 8009ea8:	2800      	cmp	r0, #0
 8009eaa:	d199      	bne.n	8009de0 <prvTimerTask+0x94>
 8009eac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009eb0:	f383 8811 	msr	BASEPRI, r3
 8009eb4:	f3bf 8f6f 	isb	sy
 8009eb8:	f3bf 8f4f 	dsb	sy
 8009ebc:	e7fe      	b.n	8009ebc <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009ebe:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009ec2:	f023 0301 	bic.w	r3, r3, #1
 8009ec6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8009eca:	e789      	b.n	8009de0 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009ecc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009ed0:	f043 0301 	orr.w	r3, r3, #1
 8009ed4:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009ed8:	9905      	ldr	r1, [sp, #20]
 8009eda:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009edc:	b941      	cbnz	r1, 8009ef0 <prvTimerTask+0x1a4>
 8009ede:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ee2:	f383 8811 	msr	BASEPRI, r3
 8009ee6:	f3bf 8f6f 	isb	sy
 8009eea:	f3bf 8f4f 	dsb	sy
 8009eee:	e7fe      	b.n	8009eee <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8009ef0:	4603      	mov	r3, r0
 8009ef2:	4401      	add	r1, r0
 8009ef4:	4620      	mov	r0, r4
 8009ef6:	f7ff fe27 	bl	8009b48 <prvInsertTimerInActiveList>
					break;
 8009efa:	e771      	b.n	8009de0 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009efc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009f00:	079a      	lsls	r2, r3, #30
 8009f02:	d4de      	bmi.n	8009ec2 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009f04:	4620      	mov	r0, r4
 8009f06:	f7fe f921 	bl	800814c <vPortFree>
 8009f0a:	e769      	b.n	8009de0 <prvTimerTask+0x94>
 8009f0c:	20014004 	.word	0x20014004
 8009f10:	20013ffc 	.word	0x20013ffc
 8009f14:	20014000 	.word	0x20014000

08009f18 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 8009f18:	b178      	cbz	r0, 8009f3a <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 8009f1a:	2300      	movs	r3, #0
 8009f1c:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
 8009f20:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 8009f24:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8009f28:	b109      	cbz	r1, 8009f2e <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
 8009f2a:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8009f2e:	2301      	movs	r3, #1
 8009f30:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  pdev->id = id;
 8009f34:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 8009f36:	f7f7 becf 	b.w	8001cd8 <USBD_LL_Init>

  return ret;
}
 8009f3a:	2003      	movs	r0, #3
 8009f3c:	4770      	bx	lr

08009f3e <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 8009f3e:	b513      	push	{r0, r1, r4, lr}
  uint16_t len = 0U;
 8009f40:	2300      	movs	r3, #0
{
 8009f42:	4604      	mov	r4, r0
  uint16_t len = 0U;
 8009f44:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 8009f48:	b181      	cbz	r1, 8009f6c <USBD_RegisterClass+0x2e>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009f4a:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
  pdev->pClass[0] = pclass;
 8009f4c:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009f50:	b123      	cbz	r3, 8009f5c <USBD_RegisterClass+0x1e>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 8009f52:	f10d 0006 	add.w	r0, sp, #6
 8009f56:	4798      	blx	r3
 8009f58:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
 8009f5c:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 8009f60:	3301      	adds	r3, #1
 8009f62:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
 8009f66:	2000      	movs	r0, #0
}
 8009f68:	b002      	add	sp, #8
 8009f6a:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8009f6c:	2003      	movs	r0, #3
 8009f6e:	e7fb      	b.n	8009f68 <USBD_RegisterClass+0x2a>

08009f70 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 8009f70:	f7f7 bf03 	b.w	8001d7a <USBD_LL_Start>

08009f74 <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 8009f74:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009f78:	b10b      	cbz	r3, 8009f7e <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 8009f7a:	681b      	ldr	r3, [r3, #0]
 8009f7c:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 8009f7e:	4618      	mov	r0, r3
 8009f80:	4770      	bx	lr

08009f82 <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8009f82:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 8009f84:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009f88:	685b      	ldr	r3, [r3, #4]
 8009f8a:	4798      	blx	r3
  {
    ret = USBD_FAIL;
 8009f8c:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 8009f8e:	bf18      	it	ne
 8009f90:	2003      	movne	r0, #3
 8009f92:	bd08      	pop	{r3, pc}

08009f94 <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 8009f94:	b538      	push	{r3, r4, r5, lr}
 8009f96:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 8009f98:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 8009f9c:	4628      	mov	r0, r5
 8009f9e:	f000 fba0 	bl	800a6e2 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 8009fa2:	2301      	movs	r3, #1

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
 8009fa4:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
 8009fa8:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
  pdev->ep0_data_len = pdev->request.wLength;
 8009fac:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0
 8009fb0:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
  switch (pdev->request.bmRequest & 0x1FU)
 8009fb4:	f001 031f 	and.w	r3, r1, #31
 8009fb8:	2b01      	cmp	r3, #1
 8009fba:	d008      	beq.n	8009fce <USBD_LL_SetupStage+0x3a>
 8009fbc:	2b02      	cmp	r3, #2
 8009fbe:	d00c      	beq.n	8009fda <USBD_LL_SetupStage+0x46>
 8009fc0:	b98b      	cbnz	r3, 8009fe6 <USBD_LL_SetupStage+0x52>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 8009fc2:	4629      	mov	r1, r5
 8009fc4:	4620      	mov	r0, r4
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
      break;
  }

  return ret;
}
 8009fc6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
 8009fca:	f000 b953 	b.w	800a274 <USBD_StdDevReq>
      ret = USBD_StdItfReq(pdev, &pdev->request);
 8009fce:	4629      	mov	r1, r5
 8009fd0:	4620      	mov	r0, r4
}
 8009fd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 8009fd6:	f000 bab1 	b.w	800a53c <USBD_StdItfReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 8009fda:	4629      	mov	r1, r5
 8009fdc:	4620      	mov	r0, r4
}
 8009fde:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
 8009fe2:	f000 bada 	b.w	800a59a <USBD_StdEPReq>
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 8009fe6:	4620      	mov	r0, r4
 8009fe8:	f001 0180 	and.w	r1, r1, #128	@ 0x80
}
 8009fec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 8009ff0:	f7f7 bee1 	b.w	8001db6 <USBD_LL_StallEP>

08009ff4 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 8009ff4:	b570      	push	{r4, r5, r6, lr}
 8009ff6:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  UNUSED(pdata);

  if (epnum == 0U)
 8009ff8:	bb39      	cbnz	r1, 800a04a <USBD_LL_DataOutStage+0x56>
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 8009ffa:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 8009ffe:	2b03      	cmp	r3, #3
 800a000:	d112      	bne.n	800a028 <USBD_LL_DataOutStage+0x34>
    {
      if (pep->rem_length > pep->maxpacket)
 800a002:	f8d0 3158 	ldr.w	r3, [r0, #344]	@ 0x158
 800a006:	f8b0 2160 	ldrh.w	r2, [r0, #352]	@ 0x160
 800a00a:	4293      	cmp	r3, r2
 800a00c:	d90e      	bls.n	800a02c <USBD_LL_DataOutStage+0x38>
      {
        pep->rem_length -= pep->maxpacket;
        pep->pbuffer += pep->maxpacket;
 800a00e:	f8d0 1164 	ldr.w	r1, [r0, #356]	@ 0x164
        pep->rem_length -= pep->maxpacket;
 800a012:	1a9b      	subs	r3, r3, r2
        pep->pbuffer += pep->maxpacket;
 800a014:	4411      	add	r1, r2

        (void)USBD_CtlContinueRx(pdev, pep->pbuffer, MAX(pep->rem_length, pep->maxpacket));
 800a016:	429a      	cmp	r2, r3
        pep->rem_length -= pep->maxpacket;
 800a018:	f8c0 3158 	str.w	r3, [r0, #344]	@ 0x158
        pep->pbuffer += pep->maxpacket;
 800a01c:	f8c0 1164 	str.w	r1, [r0, #356]	@ 0x164
        (void)USBD_CtlContinueRx(pdev, pep->pbuffer, MAX(pep->rem_length, pep->maxpacket));
 800a020:	bf38      	it	cc
 800a022:	461a      	movcc	r2, r3
 800a024:	f000 fca7 	bl	800a976 <USBD_CtlContinueRx>
      }
    }
  }

  return USBD_OK;
}
 800a028:	2000      	movs	r0, #0
 800a02a:	bd70      	pop	{r4, r5, r6, pc}
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a02c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a030:	2b03      	cmp	r3, #3
 800a032:	d106      	bne.n	800a042 <USBD_LL_DataOutStage+0x4e>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 800a034:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a038:	691b      	ldr	r3, [r3, #16]
 800a03a:	b113      	cbz	r3, 800a042 <USBD_LL_DataOutStage+0x4e>
              pdev->classId = idx;
 800a03c:	f8c0 12d4 	str.w	r1, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 800a040:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 800a042:	4620      	mov	r0, r4
 800a044:	f000 fc9f 	bl	800a986 <USBD_CtlSendStatus>
 800a048:	e7ee      	b.n	800a028 <USBD_LL_DataOutStage+0x34>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a04a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a04e:	2b03      	cmp	r3, #3
 800a050:	d1ea      	bne.n	800a028 <USBD_LL_DataOutStage+0x34>
        if (pdev->pClass[idx]->DataOut != NULL)
 800a052:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a056:	699b      	ldr	r3, [r3, #24]
 800a058:	2b00      	cmp	r3, #0
 800a05a:	d0e5      	beq.n	800a028 <USBD_LL_DataOutStage+0x34>
          pdev->classId = idx;
 800a05c:	2200      	movs	r2, #0
}
 800a05e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800a062:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 800a066:	4718      	bx	r3

0800a068 <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 800a068:	b570      	push	{r4, r5, r6, lr}
 800a06a:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;
  uint8_t idx;

  UNUSED(pdata);

  if (epnum == 0U)
 800a06c:	460d      	mov	r5, r1
 800a06e:	2900      	cmp	r1, #0
 800a070:	d13f      	bne.n	800a0f2 <USBD_LL_DataInStage+0x8a>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800a072:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 800a076:	2b02      	cmp	r3, #2
 800a078:	d110      	bne.n	800a09c <USBD_LL_DataInStage+0x34>
    {
      if (pep->rem_length > pep->maxpacket)
 800a07a:	6982      	ldr	r2, [r0, #24]
 800a07c:	8c03      	ldrh	r3, [r0, #32]
 800a07e:	429a      	cmp	r2, r3
 800a080:	d914      	bls.n	800a0ac <USBD_LL_DataInStage+0x44>
      {
        pep->rem_length -= pep->maxpacket;
        pep->pbuffer += pep->maxpacket;
 800a082:	6a41      	ldr	r1, [r0, #36]	@ 0x24
        pep->rem_length -= pep->maxpacket;
 800a084:	1ad2      	subs	r2, r2, r3
        pep->pbuffer += pep->maxpacket;
 800a086:	4419      	add	r1, r3
        pep->rem_length -= pep->maxpacket;
 800a088:	6182      	str	r2, [r0, #24]
        pep->pbuffer += pep->maxpacket;
 800a08a:	6241      	str	r1, [r0, #36]	@ 0x24

        (void)USBD_CtlContinueSendData(pdev, pep->pbuffer, pep->rem_length);
 800a08c:	f000 fc6b 	bl	800a966 <USBD_CtlContinueSendData>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
          pdev->ep0_data_len = 0U;

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a090:	462b      	mov	r3, r5
 800a092:	462a      	mov	r2, r5
 800a094:	4629      	mov	r1, r5
 800a096:	4620      	mov	r0, r4
 800a098:	f7f7 feb1 	bl	8001dfe <USBD_LL_PrepareReceive>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
 800a09c:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800a0a0:	b113      	cbz	r3, 800a0a8 <USBD_LL_DataInStage+0x40>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
 800a0a2:	2300      	movs	r3, #0
 800a0a4:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
 800a0a8:	2000      	movs	r0, #0
 800a0aa:	bd70      	pop	{r4, r5, r6, pc}
        if ((pep->maxpacket == pep->rem_length) &&
 800a0ac:	d10c      	bne.n	800a0c8 <USBD_LL_DataInStage+0x60>
            (pep->total_length >= pep->maxpacket) &&
 800a0ae:	6943      	ldr	r3, [r0, #20]
        if ((pep->maxpacket == pep->rem_length) &&
 800a0b0:	429a      	cmp	r2, r3
 800a0b2:	d809      	bhi.n	800a0c8 <USBD_LL_DataInStage+0x60>
            (pep->total_length >= pep->maxpacket) &&
 800a0b4:	f8d0 2298 	ldr.w	r2, [r0, #664]	@ 0x298
 800a0b8:	4293      	cmp	r3, r2
 800a0ba:	d205      	bcs.n	800a0c8 <USBD_LL_DataInStage+0x60>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 800a0bc:	460a      	mov	r2, r1
 800a0be:	f000 fc52 	bl	800a966 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800a0c2:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 800a0c6:	e7e3      	b.n	800a090 <USBD_LL_DataInStage+0x28>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a0c8:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800a0cc:	2b03      	cmp	r3, #3
 800a0ce:	d108      	bne.n	800a0e2 <USBD_LL_DataInStage+0x7a>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 800a0d0:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800a0d4:	68db      	ldr	r3, [r3, #12]
 800a0d6:	b123      	cbz	r3, 800a0e2 <USBD_LL_DataInStage+0x7a>
              pdev->classId = 0U;
 800a0d8:	2200      	movs	r2, #0
 800a0da:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 800a0de:	4620      	mov	r0, r4
 800a0e0:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 800a0e2:	2180      	movs	r1, #128	@ 0x80
 800a0e4:	4620      	mov	r0, r4
 800a0e6:	f7f7 fe66 	bl	8001db6 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 800a0ea:	4620      	mov	r0, r4
 800a0ec:	f000 fc56 	bl	800a99c <USBD_CtlReceiveStatus>
 800a0f0:	e7d4      	b.n	800a09c <USBD_LL_DataInStage+0x34>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a0f2:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a0f6:	2b03      	cmp	r3, #3
 800a0f8:	d1d6      	bne.n	800a0a8 <USBD_LL_DataInStage+0x40>
        if (pdev->pClass[idx]->DataIn != NULL)
 800a0fa:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a0fe:	695b      	ldr	r3, [r3, #20]
 800a100:	2b00      	cmp	r3, #0
 800a102:	d0d1      	beq.n	800a0a8 <USBD_LL_DataInStage+0x40>
          pdev->classId = idx;
 800a104:	2200      	movs	r2, #0
}
 800a106:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800a10a:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 800a10e:	4718      	bx	r3

0800a110 <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800a110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a112:	2301      	movs	r3, #1
 800a114:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 800a118:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
 800a11c:	2100      	movs	r1, #0
{
 800a11e:	4604      	mov	r4, r0
  pdev->ep0_state = USBD_EP0_IDLE;
 800a120:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_config = 0U;
 800a124:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 800a126:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
 800a12a:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
 800a12e:	b9bb      	cbnz	r3, 800a160 <USBD_LL_Reset+0x50>
  USBD_StatusTypeDef ret = USBD_OK;
 800a130:	2600      	movs	r6, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a132:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800a134:	2540      	movs	r5, #64	@ 0x40
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a136:	4611      	mov	r1, r2
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800a138:	2701      	movs	r7, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a13a:	2340      	movs	r3, #64	@ 0x40
 800a13c:	4620      	mov	r0, r4
 800a13e:	f7f7 fe25 	bl	8001d8c <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800a142:	f884 7163 	strb.w	r7, [r4, #355]	@ 0x163
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800a146:	f8a4 5160 	strh.w	r5, [r4, #352]	@ 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a14a:	462b      	mov	r3, r5
 800a14c:	2200      	movs	r2, #0
 800a14e:	2180      	movs	r1, #128	@ 0x80
 800a150:	4620      	mov	r0, r4
 800a152:	f7f7 fe1b 	bl	8001d8c <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 800a156:	f884 7023 	strb.w	r7, [r4, #35]	@ 0x23

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 800a15a:	8425      	strh	r5, [r4, #32]

  return ret;
}
 800a15c:	4630      	mov	r0, r6
 800a15e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pdev->pClass[0]->DeInit != NULL)
 800a160:	685b      	ldr	r3, [r3, #4]
 800a162:	2b00      	cmp	r3, #0
 800a164:	d0e4      	beq.n	800a130 <USBD_LL_Reset+0x20>
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 800a166:	4798      	blx	r3
 800a168:	2800      	cmp	r0, #0
 800a16a:	d0e1      	beq.n	800a130 <USBD_LL_Reset+0x20>
        ret = USBD_FAIL;
 800a16c:	2603      	movs	r6, #3
 800a16e:	e7e0      	b.n	800a132 <USBD_LL_Reset+0x22>

0800a170 <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 800a170:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 800a172:	2000      	movs	r0, #0
 800a174:	4770      	bx	lr

0800a176 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
 800a176:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a17a:	2b04      	cmp	r3, #4
  {
    pdev->dev_old_state = pdev->dev_state;
 800a17c:	bf1e      	ittt	ne
 800a17e:	f890 329c 	ldrbne.w	r3, [r0, #668]	@ 0x29c
 800a182:	b2db      	uxtbne	r3, r3
 800a184:	f880 329d 	strbne.w	r3, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
 800a188:	2304      	movs	r3, #4
 800a18a:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  return USBD_OK;
}
 800a18e:	2000      	movs	r0, #0
 800a190:	4770      	bx	lr

0800a192 <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800a192:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a196:	2b04      	cmp	r3, #4
  {
    pdev->dev_state = pdev->dev_old_state;
 800a198:	bf02      	ittt	eq
 800a19a:	f890 329d 	ldrbeq.w	r3, [r0, #669]	@ 0x29d
 800a19e:	b2db      	uxtbeq	r3, r3
 800a1a0:	f880 329c 	strbeq.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
 800a1a4:	2000      	movs	r0, #0
 800a1a6:	4770      	bx	lr

0800a1a8 <USBD_LL_SOF>:
  *         Handle SOF event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 800a1a8:	b508      	push	{r3, lr}
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a1aa:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800a1ae:	2a03      	cmp	r2, #3
 800a1b0:	d105      	bne.n	800a1be <USBD_LL_SOF+0x16>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 800a1b2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a1b6:	b113      	cbz	r3, 800a1be <USBD_LL_SOF+0x16>
    {
      if (pdev->pClass[0]->SOF != NULL)
 800a1b8:	69db      	ldr	r3, [r3, #28]
 800a1ba:	b103      	cbz	r3, 800a1be <USBD_LL_SOF+0x16>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 800a1bc:	4798      	blx	r3
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
 800a1be:	2000      	movs	r0, #0
 800a1c0:	bd08      	pop	{r3, pc}

0800a1c2 <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800a1c2:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800a1c6:	32ae      	adds	r2, #174	@ 0xae
{
 800a1c8:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800a1ca:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800a1ce:	b14a      	cbz	r2, 800a1e4 <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a1d0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a1d4:	2b03      	cmp	r3, #3
 800a1d6:	d101      	bne.n	800a1dc <USBD_LL_IsoINIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 800a1d8:	6a13      	ldr	r3, [r2, #32]
 800a1da:	b90b      	cbnz	r3, 800a1e0 <USBD_LL_IsoINIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800a1dc:	2000      	movs	r0, #0
}
 800a1de:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 800a1e0:	4798      	blx	r3
 800a1e2:	e7fb      	b.n	800a1dc <USBD_LL_IsoINIncomplete+0x1a>
    return USBD_FAIL;
 800a1e4:	2003      	movs	r0, #3
 800a1e6:	e7fa      	b.n	800a1de <USBD_LL_IsoINIncomplete+0x1c>

0800a1e8 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800a1e8:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800a1ec:	32ae      	adds	r2, #174	@ 0xae
{
 800a1ee:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800a1f0:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800a1f4:	b14a      	cbz	r2, 800a20a <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a1f6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a1fa:	2b03      	cmp	r3, #3
 800a1fc:	d101      	bne.n	800a202 <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 800a1fe:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 800a200:	b90b      	cbnz	r3, 800a206 <USBD_LL_IsoOUTIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800a202:	2000      	movs	r0, #0
}
 800a204:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 800a206:	4798      	blx	r3
 800a208:	e7fb      	b.n	800a202 <USBD_LL_IsoOUTIncomplete+0x1a>
    return USBD_FAIL;
 800a20a:	2003      	movs	r0, #3
 800a20c:	e7fa      	b.n	800a204 <USBD_LL_IsoOUTIncomplete+0x1c>

0800a20e <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
 800a20e:	2000      	movs	r0, #0
 800a210:	4770      	bx	lr

0800a212 <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a212:	2201      	movs	r2, #1
{
 800a214:	b508      	push	{r3, lr}
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a216:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800a21a:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 800a21e:	b90a      	cbnz	r2, 800a224 <USBD_LL_DevDisconnected+0x12>
  USBD_StatusTypeDef   ret = USBD_OK;
 800a220:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800a222:	bd08      	pop	{r3, pc}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 800a224:	6852      	ldr	r2, [r2, #4]
 800a226:	7901      	ldrb	r1, [r0, #4]
 800a228:	4790      	blx	r2
 800a22a:	2800      	cmp	r0, #0
 800a22c:	d0f8      	beq.n	800a220 <USBD_LL_DevDisconnected+0xe>
      ret = USBD_FAIL;
 800a22e:	2003      	movs	r0, #3
 800a230:	e7f7      	b.n	800a222 <USBD_LL_DevDisconnected+0x10>

0800a232 <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
 800a232:	2000      	movs	r0, #0
 800a234:	4770      	bx	lr

0800a236 <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
 800a236:	2000      	movs	r0, #0
 800a238:	4770      	bx	lr

0800a23a <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 800a23a:	b510      	push	{r4, lr}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 800a23c:	8842      	ldrh	r2, [r0, #2]
 800a23e:	7803      	ldrb	r3, [r0, #0]
 800a240:	429a      	cmp	r2, r3
 800a242:	d801      	bhi.n	800a248 <USBD_GetEpDesc+0xe>
  USBD_EpDescTypeDef *pEpDesc = NULL;
 800a244:	2000      	movs	r0, #0
      }
    }
  }

  return (void *)pEpDesc;
}
 800a246:	bd10      	pop	{r4, pc}
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
 800a248:	7804      	ldrb	r4, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 800a24a:	4420      	add	r0, r4
  *ptr += pnext->bLength;
 800a24c:	4423      	add	r3, r4
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800a24e:	7844      	ldrb	r4, [r0, #1]
 800a250:	2c05      	cmp	r4, #5
  *ptr += pnext->bLength;
 800a252:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800a254:	d1f4      	bne.n	800a240 <USBD_GetEpDesc+0x6>
        if (pEpDesc->bEndpointAddress == EpAddr)
 800a256:	7884      	ldrb	r4, [r0, #2]
 800a258:	428c      	cmp	r4, r1
 800a25a:	d1f1      	bne.n	800a240 <USBD_GetEpDesc+0x6>
 800a25c:	e7f3      	b.n	800a246 <USBD_GetEpDesc+0xc>

0800a25e <USBD_CtlError.constprop.0>:
  *         Handle USB low level Error
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800a25e:	b510      	push	{r4, lr}
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a260:	2180      	movs	r1, #128	@ 0x80
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800a262:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a264:	f7f7 fda7 	bl	8001db6 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800a268:	4620      	mov	r0, r4
 800a26a:	2100      	movs	r1, #0
}
 800a26c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800a270:	f7f7 bda1 	b.w	8001db6 <USBD_LL_StallEP>

0800a274 <USBD_StdDevReq>:
{
 800a274:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a276:	780b      	ldrb	r3, [r1, #0]
 800a278:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a27c:	2b20      	cmp	r3, #32
{
 800a27e:	4604      	mov	r4, r0
 800a280:	460d      	mov	r5, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a282:	d009      	beq.n	800a298 <USBD_StdDevReq+0x24>
 800a284:	2b40      	cmp	r3, #64	@ 0x40
 800a286:	d007      	beq.n	800a298 <USBD_StdDevReq+0x24>
 800a288:	b193      	cbz	r3, 800a2b0 <USBD_StdDevReq+0x3c>
      USBD_CtlError(pdev, req);
 800a28a:	4620      	mov	r0, r4
 800a28c:	f7ff ffe7 	bl	800a25e <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800a290:	2500      	movs	r5, #0
}
 800a292:	4628      	mov	r0, r5
 800a294:	b002      	add	sp, #8
 800a296:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800a298:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800a29c:	33ae      	adds	r3, #174	@ 0xae
 800a29e:	4629      	mov	r1, r5
 800a2a0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 800a2a4:	689b      	ldr	r3, [r3, #8]
 800a2a6:	4620      	mov	r0, r4
}
 800a2a8:	b002      	add	sp, #8
 800a2aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800a2ae:	4718      	bx	r3
      switch (req->bRequest)
 800a2b0:	784b      	ldrb	r3, [r1, #1]
 800a2b2:	2b09      	cmp	r3, #9
 800a2b4:	d8e9      	bhi.n	800a28a <USBD_StdDevReq+0x16>
 800a2b6:	a201      	add	r2, pc, #4	@ (adr r2, 800a2bc <USBD_StdDevReq+0x48>)
 800a2b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a2bc:	0800a4dd 	.word	0x0800a4dd
 800a2c0:	0800a521 	.word	0x0800a521
 800a2c4:	0800a28b 	.word	0x0800a28b
 800a2c8:	0800a505 	.word	0x0800a505
 800a2cc:	0800a28b 	.word	0x0800a28b
 800a2d0:	0800a3d7 	.word	0x0800a3d7
 800a2d4:	0800a2e5 	.word	0x0800a2e5
 800a2d8:	0800a28b 	.word	0x0800a28b
 800a2dc:	0800a4b1 	.word	0x0800a4b1
 800a2e0:	0800a419 	.word	0x0800a419
  uint16_t len = 0U;
 800a2e4:	2300      	movs	r3, #0
 800a2e6:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 800a2ea:	884b      	ldrh	r3, [r1, #2]
 800a2ec:	0a1a      	lsrs	r2, r3, #8
 800a2ee:	3a01      	subs	r2, #1
 800a2f0:	2a06      	cmp	r2, #6
 800a2f2:	d8ca      	bhi.n	800a28a <USBD_StdDevReq+0x16>
 800a2f4:	a101      	add	r1, pc, #4	@ (adr r1, 800a2fc <USBD_StdDevReq+0x88>)
 800a2f6:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800a2fa:	bf00      	nop
 800a2fc:	0800a319 	.word	0x0800a319
 800a300:	0800a34b 	.word	0x0800a34b
 800a304:	0800a365 	.word	0x0800a365
 800a308:	0800a28b 	.word	0x0800a28b
 800a30c:	0800a28b 	.word	0x0800a28b
 800a310:	0800a3a9 	.word	0x0800a3a9
 800a314:	0800a3bf 	.word	0x0800a3bf
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 800a318:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a31c:	681b      	ldr	r3, [r3, #0]
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800a31e:	7c20      	ldrb	r0, [r4, #16]
 800a320:	f10d 0106 	add.w	r1, sp, #6
 800a324:	4798      	blx	r3
  if (req->wLength != 0U)
 800a326:	88ea      	ldrh	r2, [r5, #6]
 800a328:	2a00      	cmp	r2, #0
 800a32a:	f000 80a4 	beq.w	800a476 <USBD_StdDevReq+0x202>
    if (len != 0U)
 800a32e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a332:	2b00      	cmp	r3, #0
 800a334:	d0a9      	beq.n	800a28a <USBD_StdDevReq+0x16>
      len = MIN(len, req->wLength);
 800a336:	429a      	cmp	r2, r3
 800a338:	bf28      	it	cs
 800a33a:	461a      	movcs	r2, r3
 800a33c:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800a340:	4601      	mov	r1, r0
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800a342:	4620      	mov	r0, r4
 800a344:	f000 fb01 	bl	800a94a <USBD_CtlSendData>
      break;
 800a348:	e7a2      	b.n	800a290 <USBD_StdDevReq+0x1c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a34a:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800a34c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a350:	b932      	cbnz	r2, 800a360 <USBD_StdDevReq+0xec>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800a352:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800a354:	f10d 0006 	add.w	r0, sp, #6
 800a358:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800a35a:	2302      	movs	r3, #2
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800a35c:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 800a35e:	e7e2      	b.n	800a326 <USBD_StdDevReq+0xb2>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800a360:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a362:	e7f7      	b.n	800a354 <USBD_StdDevReq+0xe0>
      switch ((uint8_t)(req->wValue))
 800a364:	b2db      	uxtb	r3, r3
 800a366:	2b05      	cmp	r3, #5
 800a368:	d88f      	bhi.n	800a28a <USBD_StdDevReq+0x16>
 800a36a:	e8df f003 	tbb	[pc, r3]
 800a36e:	0903      	.short	0x0903
 800a370:	1915110d 	.word	0x1915110d
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 800a374:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a378:	685b      	ldr	r3, [r3, #4]
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800a37a:	2b00      	cmp	r3, #0
 800a37c:	d1cf      	bne.n	800a31e <USBD_StdDevReq+0xaa>
 800a37e:	e784      	b.n	800a28a <USBD_StdDevReq+0x16>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 800a380:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a384:	689b      	ldr	r3, [r3, #8]
 800a386:	e7f8      	b.n	800a37a <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 800a388:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a38c:	68db      	ldr	r3, [r3, #12]
 800a38e:	e7f4      	b.n	800a37a <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800a390:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a394:	691b      	ldr	r3, [r3, #16]
 800a396:	e7f0      	b.n	800a37a <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 800a398:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a39c:	695b      	ldr	r3, [r3, #20]
 800a39e:	e7ec      	b.n	800a37a <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800a3a0:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a3a4:	699b      	ldr	r3, [r3, #24]
 800a3a6:	e7e8      	b.n	800a37a <USBD_StdDevReq+0x106>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a3a8:	7c03      	ldrb	r3, [r0, #16]
 800a3aa:	2b00      	cmp	r3, #0
 800a3ac:	f47f af6d 	bne.w	800a28a <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 800a3b0:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a3b4:	f10d 0006 	add.w	r0, sp, #6
 800a3b8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a3ba:	4798      	blx	r3
  if (err != 0U)
 800a3bc:	e7b3      	b.n	800a326 <USBD_StdDevReq+0xb2>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a3be:	7c03      	ldrb	r3, [r0, #16]
 800a3c0:	2b00      	cmp	r3, #0
 800a3c2:	f47f af62 	bne.w	800a28a <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 800a3c6:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a3ca:	f10d 0006 	add.w	r0, sp, #6
 800a3ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a3d0:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800a3d2:	2307      	movs	r3, #7
 800a3d4:	e7c2      	b.n	800a35c <USBD_StdDevReq+0xe8>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 800a3d6:	888b      	ldrh	r3, [r1, #4]
 800a3d8:	2b00      	cmp	r3, #0
 800a3da:	f47f af56 	bne.w	800a28a <USBD_StdDevReq+0x16>
 800a3de:	88cb      	ldrh	r3, [r1, #6]
 800a3e0:	2b00      	cmp	r3, #0
 800a3e2:	f47f af52 	bne.w	800a28a <USBD_StdDevReq+0x16>
 800a3e6:	884d      	ldrh	r5, [r1, #2]
 800a3e8:	2d7f      	cmp	r5, #127	@ 0x7f
 800a3ea:	f63f af4e 	bhi.w	800a28a <USBD_StdDevReq+0x16>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a3ee:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a3f2:	2b03      	cmp	r3, #3
 800a3f4:	f43f af49 	beq.w	800a28a <USBD_StdDevReq+0x16>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 800a3f8:	b2ed      	uxtb	r5, r5
      pdev->dev_address = dev_addr;
 800a3fa:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 800a3fe:	4629      	mov	r1, r5
 800a400:	f7f7 fceb 	bl	8001dda <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 800a404:	4620      	mov	r0, r4
 800a406:	f000 fabe 	bl	800a986 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 800a40a:	b11d      	cbz	r5, 800a414 <USBD_StdDevReq+0x1a0>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800a40c:	2302      	movs	r3, #2
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800a40e:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800a412:	e73d      	b.n	800a290 <USBD_StdDevReq+0x1c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 800a414:	2301      	movs	r3, #1
 800a416:	e7fa      	b.n	800a40e <USBD_StdDevReq+0x19a>
  cfgidx = (uint8_t)(req->wValue);
 800a418:	7889      	ldrb	r1, [r1, #2]
 800a41a:	4d47      	ldr	r5, [pc, #284]	@ (800a538 <USBD_StdDevReq+0x2c4>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800a41c:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
 800a41e:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800a420:	d903      	bls.n	800a42a <USBD_StdDevReq+0x1b6>
    USBD_CtlError(pdev, req);
 800a422:	f7ff ff1c 	bl	800a25e <USBD_CtlError.constprop.0>
    return USBD_FAIL;
 800a426:	2503      	movs	r5, #3
 800a428:	e733      	b.n	800a292 <USBD_StdDevReq+0x1e>
  switch (pdev->dev_state)
 800a42a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a42e:	2b02      	cmp	r3, #2
 800a430:	b2de      	uxtb	r6, r3
 800a432:	d008      	beq.n	800a446 <USBD_StdDevReq+0x1d2>
 800a434:	2e03      	cmp	r6, #3
 800a436:	d017      	beq.n	800a468 <USBD_StdDevReq+0x1f4>
      USBD_CtlError(pdev, req);
 800a438:	f7ff ff11 	bl	800a25e <USBD_CtlError.constprop.0>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 800a43c:	7829      	ldrb	r1, [r5, #0]
 800a43e:	4620      	mov	r0, r4
 800a440:	f7ff fd9f 	bl	8009f82 <USBD_ClrClassConfig>
      break;
 800a444:	e7ef      	b.n	800a426 <USBD_StdDevReq+0x1b2>
      if (cfgidx != 0U)
 800a446:	b1b1      	cbz	r1, 800a476 <USBD_StdDevReq+0x202>
        pdev->dev_config = cfgidx;
 800a448:	2101      	movs	r1, #1
 800a44a:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800a44c:	f7ff fd92 	bl	8009f74 <USBD_SetClassConfig>
        if (ret != USBD_OK)
 800a450:	4605      	mov	r5, r0
          USBD_CtlError(pdev, req);
 800a452:	4620      	mov	r0, r4
        if (ret != USBD_OK)
 800a454:	b125      	cbz	r5, 800a460 <USBD_StdDevReq+0x1ec>
          USBD_CtlError(pdev, req);
 800a456:	f7ff ff02 	bl	800a25e <USBD_CtlError.constprop.0>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800a45a:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 800a45e:	e718      	b.n	800a292 <USBD_StdDevReq+0x1e>
          (void)USBD_CtlSendStatus(pdev);
 800a460:	f000 fa91 	bl	800a986 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800a464:	2303      	movs	r3, #3
 800a466:	e7d2      	b.n	800a40e <USBD_StdDevReq+0x19a>
      if (cfgidx == 0U)
 800a468:	b949      	cbnz	r1, 800a47e <USBD_StdDevReq+0x20a>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800a46a:	2302      	movs	r3, #2
 800a46c:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        pdev->dev_config = cfgidx;
 800a470:	6041      	str	r1, [r0, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 800a472:	f7ff fd86 	bl	8009f82 <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 800a476:	4620      	mov	r0, r4
 800a478:	f000 fa85 	bl	800a986 <USBD_CtlSendStatus>
 800a47c:	e708      	b.n	800a290 <USBD_StdDevReq+0x1c>
      else if (cfgidx != pdev->dev_config)
 800a47e:	6841      	ldr	r1, [r0, #4]
 800a480:	2901      	cmp	r1, #1
 800a482:	d0f8      	beq.n	800a476 <USBD_StdDevReq+0x202>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800a484:	b2c9      	uxtb	r1, r1
 800a486:	f7ff fd7c 	bl	8009f82 <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 800a48a:	7829      	ldrb	r1, [r5, #0]
 800a48c:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800a48e:	4620      	mov	r0, r4
 800a490:	f7ff fd70 	bl	8009f74 <USBD_SetClassConfig>
        if (ret != USBD_OK)
 800a494:	4605      	mov	r5, r0
 800a496:	2800      	cmp	r0, #0
 800a498:	d0ed      	beq.n	800a476 <USBD_StdDevReq+0x202>
          USBD_CtlError(pdev, req);
 800a49a:	4620      	mov	r0, r4
 800a49c:	f7ff fedf 	bl	800a25e <USBD_CtlError.constprop.0>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800a4a0:	7921      	ldrb	r1, [r4, #4]
 800a4a2:	4620      	mov	r0, r4
 800a4a4:	f7ff fd6d 	bl	8009f82 <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800a4a8:	2302      	movs	r3, #2
 800a4aa:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800a4ae:	e6f0      	b.n	800a292 <USBD_StdDevReq+0x1e>
  if (req->wLength != 1U)
 800a4b0:	88ca      	ldrh	r2, [r1, #6]
 800a4b2:	2a01      	cmp	r2, #1
 800a4b4:	f47f aee9 	bne.w	800a28a <USBD_StdDevReq+0x16>
    switch (pdev->dev_state)
 800a4b8:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
 800a4bc:	2902      	cmp	r1, #2
 800a4be:	b2cb      	uxtb	r3, r1
 800a4c0:	d807      	bhi.n	800a4d2 <USBD_StdDevReq+0x25e>
 800a4c2:	2b00      	cmp	r3, #0
 800a4c4:	f43f aee1 	beq.w	800a28a <USBD_StdDevReq+0x16>
        pdev->dev_default_config = 0U;
 800a4c8:	4601      	mov	r1, r0
 800a4ca:	2300      	movs	r3, #0
 800a4cc:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 800a4d0:	e737      	b.n	800a342 <USBD_StdDevReq+0xce>
    switch (pdev->dev_state)
 800a4d2:	2b03      	cmp	r3, #3
 800a4d4:	f47f aed9 	bne.w	800a28a <USBD_StdDevReq+0x16>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 800a4d8:	1d01      	adds	r1, r0, #4
 800a4da:	e732      	b.n	800a342 <USBD_StdDevReq+0xce>
  switch (pdev->dev_state)
 800a4dc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a4e0:	3b01      	subs	r3, #1
 800a4e2:	2b02      	cmp	r3, #2
 800a4e4:	f63f aed1 	bhi.w	800a28a <USBD_StdDevReq+0x16>
      if (req->wLength != 0x2U)
 800a4e8:	88ca      	ldrh	r2, [r1, #6]
 800a4ea:	2a02      	cmp	r2, #2
 800a4ec:	f47f aecd 	bne.w	800a28a <USBD_StdDevReq+0x16>
      if (pdev->dev_remote_wakeup != 0U)
 800a4f0:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 800a4f4:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 800a4f6:	2b00      	cmp	r3, #0
 800a4f8:	bf0c      	ite	eq
 800a4fa:	2301      	moveq	r3, #1
 800a4fc:	2303      	movne	r3, #3
 800a4fe:	f841 3f0c 	str.w	r3, [r1, #12]!
 800a502:	e71e      	b.n	800a342 <USBD_StdDevReq+0xce>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800a504:	884b      	ldrh	r3, [r1, #2]
 800a506:	2b01      	cmp	r3, #1
 800a508:	d102      	bne.n	800a510 <USBD_StdDevReq+0x29c>
        pdev->dev_remote_wakeup = 0U;
 800a50a:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 800a50e:	e7b2      	b.n	800a476 <USBD_StdDevReq+0x202>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 800a510:	2b02      	cmp	r3, #2
 800a512:	f47f aeba 	bne.w	800a28a <USBD_StdDevReq+0x16>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
 800a516:	888b      	ldrh	r3, [r1, #4]
 800a518:	0a1b      	lsrs	r3, r3, #8
 800a51a:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 800a51e:	e7aa      	b.n	800a476 <USBD_StdDevReq+0x202>
  switch (pdev->dev_state)
 800a520:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a524:	3b01      	subs	r3, #1
 800a526:	2b02      	cmp	r3, #2
 800a528:	f63f aeaf 	bhi.w	800a28a <USBD_StdDevReq+0x16>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800a52c:	884b      	ldrh	r3, [r1, #2]
 800a52e:	2b01      	cmp	r3, #1
 800a530:	f47f aeae 	bne.w	800a290 <USBD_StdDevReq+0x1c>
        pdev->dev_remote_wakeup = 0U;
 800a534:	2300      	movs	r3, #0
 800a536:	e7e8      	b.n	800a50a <USBD_StdDevReq+0x296>
 800a538:	20014030 	.word	0x20014030

0800a53c <USBD_StdItfReq>:
{
 800a53c:	b570      	push	{r4, r5, r6, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a53e:	780b      	ldrb	r3, [r1, #0]
 800a540:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 800a544:	065b      	lsls	r3, r3, #25
{
 800a546:	4604      	mov	r4, r0
 800a548:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a54a:	d501      	bpl.n	800a550 <USBD_StdItfReq+0x14>
 800a54c:	2a40      	cmp	r2, #64	@ 0x40
 800a54e:	d11f      	bne.n	800a590 <USBD_StdItfReq+0x54>
      switch (pdev->dev_state)
 800a550:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800a554:	3b01      	subs	r3, #1
 800a556:	2b02      	cmp	r3, #2
 800a558:	d81a      	bhi.n	800a590 <USBD_StdItfReq+0x54>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800a55a:	7931      	ldrb	r1, [r6, #4]
 800a55c:	2901      	cmp	r1, #1
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800a55e:	4620      	mov	r0, r4
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800a560:	d817      	bhi.n	800a592 <USBD_StdItfReq+0x56>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800a562:	f7ff fe66 	bl	800a232 <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800a566:	b988      	cbnz	r0, 800a58c <USBD_StdItfReq+0x50>
              if (pdev->pClass[idx]->Setup != NULL)
 800a568:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800a56c:	689b      	ldr	r3, [r3, #8]
 800a56e:	b16b      	cbz	r3, 800a58c <USBD_StdItfReq+0x50>
                pdev->classId = idx;
 800a570:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800a574:	4631      	mov	r1, r6
 800a576:	4620      	mov	r0, r4
 800a578:	4798      	blx	r3
 800a57a:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
 800a57c:	88f3      	ldrh	r3, [r6, #6]
 800a57e:	b91b      	cbnz	r3, 800a588 <USBD_StdItfReq+0x4c>
 800a580:	b915      	cbnz	r5, 800a588 <USBD_StdItfReq+0x4c>
              (void)USBD_CtlSendStatus(pdev);
 800a582:	4620      	mov	r0, r4
 800a584:	f000 f9ff 	bl	800a986 <USBD_CtlSendStatus>
}
 800a588:	4628      	mov	r0, r5
 800a58a:	bd70      	pop	{r4, r5, r6, pc}
                ret = USBD_FAIL;
 800a58c:	2503      	movs	r5, #3
 800a58e:	e7f5      	b.n	800a57c <USBD_StdItfReq+0x40>
          USBD_CtlError(pdev, req);
 800a590:	4620      	mov	r0, r4
            USBD_CtlError(pdev, req);
 800a592:	f7ff fe64 	bl	800a25e <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800a596:	2500      	movs	r5, #0
 800a598:	e7f6      	b.n	800a588 <USBD_StdItfReq+0x4c>

0800a59a <USBD_StdEPReq>:
{
 800a59a:	b570      	push	{r4, r5, r6, lr}
 800a59c:	780b      	ldrb	r3, [r1, #0]
  ep_addr = LOBYTE(req->wIndex);
 800a59e:	888a      	ldrh	r2, [r1, #4]
 800a5a0:	790d      	ldrb	r5, [r1, #4]
 800a5a2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a5a6:	2b20      	cmp	r3, #32
{
 800a5a8:	4604      	mov	r4, r0
 800a5aa:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a5ac:	d059      	beq.n	800a662 <USBD_StdEPReq+0xc8>
 800a5ae:	2b40      	cmp	r3, #64	@ 0x40
 800a5b0:	d057      	beq.n	800a662 <USBD_StdEPReq+0xc8>
 800a5b2:	b11b      	cbz	r3, 800a5bc <USBD_StdEPReq+0x22>
              USBD_CtlError(pdev, req);
 800a5b4:	4620      	mov	r0, r4
 800a5b6:	f7ff fe52 	bl	800a25e <USBD_CtlError.constprop.0>
              break;
 800a5ba:	e03e      	b.n	800a63a <USBD_StdEPReq+0xa0>
      switch (req->bRequest)
 800a5bc:	784b      	ldrb	r3, [r1, #1]
 800a5be:	2b01      	cmp	r3, #1
 800a5c0:	d03d      	beq.n	800a63e <USBD_StdEPReq+0xa4>
 800a5c2:	2b03      	cmp	r3, #3
 800a5c4:	d026      	beq.n	800a614 <USBD_StdEPReq+0x7a>
 800a5c6:	2b00      	cmp	r3, #0
 800a5c8:	d1f4      	bne.n	800a5b4 <USBD_StdEPReq+0x1a>
          switch (pdev->dev_state)
 800a5ca:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a5ce:	2b02      	cmp	r3, #2
 800a5d0:	b2d9      	uxtb	r1, r3
 800a5d2:	d062      	beq.n	800a69a <USBD_StdEPReq+0x100>
 800a5d4:	2903      	cmp	r1, #3
 800a5d6:	d1ed      	bne.n	800a5b4 <USBD_StdEPReq+0x1a>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800a5d8:	f005 030f 	and.w	r3, r5, #15
              if ((ep_addr & 0x80U) == 0x80U)
 800a5dc:	f012 0f80 	tst.w	r2, #128	@ 0x80
 800a5e0:	f04f 0214 	mov.w	r2, #20
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800a5e4:	fb02 0303 	mla	r3, r2, r3, r0
              if ((ep_addr & 0x80U) == 0x80U)
 800a5e8:	d067      	beq.n	800a6ba <USBD_StdEPReq+0x120>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800a5ea:	f893 3023 	ldrb.w	r3, [r3, #35]	@ 0x23
 800a5ee:	2b00      	cmp	r3, #0
 800a5f0:	d0e0      	beq.n	800a5b4 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a5f2:	f005 067f 	and.w	r6, r5, #127	@ 0x7f
 800a5f6:	3601      	adds	r6, #1
 800a5f8:	eb06 0686 	add.w	r6, r6, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800a5fc:	2d80      	cmp	r5, #128	@ 0x80
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a5fe:	eb00 0686 	add.w	r6, r0, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800a602:	d066      	beq.n	800a6d2 <USBD_StdEPReq+0x138>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 800a604:	4629      	mov	r1, r5
 800a606:	4620      	mov	r0, r4
 800a608:	f7f7 fb9a 	bl	8001d40 <USBD_LL_IsStallEP>
 800a60c:	2800      	cmp	r0, #0
 800a60e:	d066      	beq.n	800a6de <USBD_StdEPReq+0x144>
                pep->status = 0x0001U;
 800a610:	2301      	movs	r3, #1
 800a612:	e05f      	b.n	800a6d4 <USBD_StdEPReq+0x13a>
          switch (pdev->dev_state)
 800a614:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a618:	2b02      	cmp	r3, #2
 800a61a:	b2da      	uxtb	r2, r3
 800a61c:	d033      	beq.n	800a686 <USBD_StdEPReq+0xec>
 800a61e:	2a03      	cmp	r2, #3
 800a620:	d1c8      	bne.n	800a5b4 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800a622:	884b      	ldrh	r3, [r1, #2]
 800a624:	b933      	cbnz	r3, 800a634 <USBD_StdEPReq+0x9a>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 800a626:	0669      	lsls	r1, r5, #25
 800a628:	d004      	beq.n	800a634 <USBD_StdEPReq+0x9a>
 800a62a:	88f3      	ldrh	r3, [r6, #6]
 800a62c:	b913      	cbnz	r3, 800a634 <USBD_StdEPReq+0x9a>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 800a62e:	4629      	mov	r1, r5
 800a630:	f7f7 fbc1 	bl	8001db6 <USBD_LL_StallEP>
              (void)USBD_CtlSendStatus(pdev);
 800a634:	4620      	mov	r0, r4
 800a636:	f000 f9a6 	bl	800a986 <USBD_CtlSendStatus>
}
 800a63a:	2000      	movs	r0, #0
 800a63c:	bd70      	pop	{r4, r5, r6, pc}
          switch (pdev->dev_state)
 800a63e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a642:	2b02      	cmp	r3, #2
 800a644:	b2da      	uxtb	r2, r3
 800a646:	d01e      	beq.n	800a686 <USBD_StdEPReq+0xec>
 800a648:	2a03      	cmp	r2, #3
 800a64a:	d1b3      	bne.n	800a5b4 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800a64c:	884b      	ldrh	r3, [r1, #2]
 800a64e:	2b00      	cmp	r3, #0
 800a650:	d1f3      	bne.n	800a63a <USBD_StdEPReq+0xa0>
                if ((ep_addr & 0x7FU) != 0x00U)
 800a652:	066b      	lsls	r3, r5, #25
 800a654:	d002      	beq.n	800a65c <USBD_StdEPReq+0xc2>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 800a656:	4629      	mov	r1, r5
 800a658:	f7f7 fbb6 	bl	8001dc8 <USBD_LL_ClearStallEP>
                (void)USBD_CtlSendStatus(pdev);
 800a65c:	4620      	mov	r0, r4
 800a65e:	f000 f992 	bl	800a986 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
 800a662:	4629      	mov	r1, r5
 800a664:	4620      	mov	r0, r4
 800a666:	f7ff fde6 	bl	800a236 <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800a66a:	2800      	cmp	r0, #0
 800a66c:	d1e5      	bne.n	800a63a <USBD_StdEPReq+0xa0>
                  if (pdev->pClass[idx]->Setup != NULL)
 800a66e:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
                  pdev->classId = idx;
 800a672:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
 800a676:	689b      	ldr	r3, [r3, #8]
 800a678:	2b00      	cmp	r3, #0
 800a67a:	d0de      	beq.n	800a63a <USBD_StdEPReq+0xa0>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800a67c:	4631      	mov	r1, r6
 800a67e:	4620      	mov	r0, r4
}
 800a680:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800a684:	4718      	bx	r3
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800a686:	066a      	lsls	r2, r5, #25
 800a688:	d094      	beq.n	800a5b4 <USBD_StdEPReq+0x1a>
                (void)USBD_LL_StallEP(pdev, ep_addr);
 800a68a:	4629      	mov	r1, r5
 800a68c:	f7f7 fb93 	bl	8001db6 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 800a690:	2180      	movs	r1, #128	@ 0x80
 800a692:	4620      	mov	r0, r4
 800a694:	f7f7 fb8f 	bl	8001db6 <USBD_LL_StallEP>
 800a698:	e7cf      	b.n	800a63a <USBD_StdEPReq+0xa0>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800a69a:	0669      	lsls	r1, r5, #25
 800a69c:	d18a      	bne.n	800a5b4 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a69e:	0613      	lsls	r3, r2, #24
 800a6a0:	bf4c      	ite	mi
 800a6a2:	f100 0114 	addmi.w	r1, r0, #20
 800a6a6:	f500 71aa 	addpl.w	r1, r0, #340	@ 0x154
              pep->status = 0x0000U;
 800a6aa:	2300      	movs	r3, #0
 800a6ac:	f801 3f0e 	strb.w	r3, [r1, #14]!
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800a6b0:	2202      	movs	r2, #2
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800a6b2:	4620      	mov	r0, r4
 800a6b4:	f000 f949 	bl	800a94a <USBD_CtlSendData>
              break;
 800a6b8:	e7bf      	b.n	800a63a <USBD_StdEPReq+0xa0>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800a6ba:	f893 3163 	ldrb.w	r3, [r3, #355]	@ 0x163
 800a6be:	2b00      	cmp	r3, #0
 800a6c0:	f43f af78 	beq.w	800a5b4 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a6c4:	2614      	movs	r6, #20
 800a6c6:	fb06 0605 	mla	r6, r6, r5, r0
 800a6ca:	f506 76aa 	add.w	r6, r6, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800a6ce:	2d00      	cmp	r5, #0
 800a6d0:	d198      	bne.n	800a604 <USBD_StdEPReq+0x6a>
                pep->status = 0x0000U;
 800a6d2:	2300      	movs	r3, #0
                pep->status = 0x0001U;
 800a6d4:	73b3      	strb	r3, [r6, #14]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800a6d6:	2202      	movs	r2, #2
 800a6d8:	f106 010e 	add.w	r1, r6, #14
 800a6dc:	e7e9      	b.n	800a6b2 <USBD_StdEPReq+0x118>
                pep->status = 0x0000U;
 800a6de:	73b0      	strb	r0, [r6, #14]
 800a6e0:	e7f9      	b.n	800a6d6 <USBD_StdEPReq+0x13c>

0800a6e2 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 800a6e2:	780b      	ldrb	r3, [r1, #0]
 800a6e4:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 800a6e6:	784b      	ldrb	r3, [r1, #1]
 800a6e8:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
 800a6ea:	884b      	ldrh	r3, [r1, #2]
 800a6ec:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
 800a6ee:	888b      	ldrh	r3, [r1, #4]
 800a6f0:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
 800a6f2:	88cb      	ldrh	r3, [r1, #6]
 800a6f4:	80c3      	strh	r3, [r0, #6]
}
 800a6f6:	4770      	bx	lr

0800a6f8 <USBD_CtlError>:
{
 800a6f8:	b510      	push	{r4, lr}
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a6fa:	2180      	movs	r1, #128	@ 0x80
{
 800a6fc:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a6fe:	f7f7 fb5a 	bl	8001db6 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800a702:	4620      	mov	r0, r4
 800a704:	2100      	movs	r1, #0
}
 800a706:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800a70a:	f7f7 bb54 	b.w	8001db6 <USBD_LL_StallEP>

0800a70e <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 800a70e:	b570      	push	{r4, r5, r6, lr}
 800a710:	460d      	mov	r5, r1
 800a712:	4616      	mov	r6, r2
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
 800a714:	4604      	mov	r4, r0
 800a716:	b170      	cbz	r0, 800a736 <USBD_GetString+0x28>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 800a718:	f7f5 fd6a 	bl	80001f0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
 800a71c:	b2c3      	uxtb	r3, r0
 800a71e:	3301      	adds	r3, #1
 800a720:	005b      	lsls	r3, r3, #1
 800a722:	8033      	strh	r3, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 800a724:	702b      	strb	r3, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 800a726:	2303      	movs	r3, #3
 800a728:	706b      	strb	r3, [r5, #1]
  while (*pdesc != (uint8_t)'\0')
 800a72a:	3c01      	subs	r4, #1
  idx++;
 800a72c:	2302      	movs	r3, #2
    unicode[idx] = 0U;
 800a72e:	2100      	movs	r1, #0
  while (*pdesc != (uint8_t)'\0')
 800a730:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800a734:	b902      	cbnz	r2, 800a738 <USBD_GetString+0x2a>
}
 800a736:	bd70      	pop	{r4, r5, r6, pc}
    unicode[idx] = *pdesc;
 800a738:	54ea      	strb	r2, [r5, r3]
    idx++;
 800a73a:	1c5a      	adds	r2, r3, #1
    unicode[idx] = 0U;
 800a73c:	b2d2      	uxtb	r2, r2
    idx++;
 800a73e:	3302      	adds	r3, #2
    unicode[idx] = 0U;
 800a740:	54a9      	strb	r1, [r5, r2]
    idx++;
 800a742:	b2db      	uxtb	r3, r3
 800a744:	e7f4      	b.n	800a730 <USBD_GetString+0x22>

0800a746 <USBD_HID_DataIn>:
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
 800a746:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800a74a:	33b0      	adds	r3, #176	@ 0xb0
 800a74c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800a750:	2000      	movs	r0, #0
 800a752:	7318      	strb	r0, [r3, #12]

  return (uint8_t)USBD_OK;
}
 800a754:	4770      	bx	lr
	...

0800a758 <USBD_HID_GetDeviceQualifierDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
 800a758:	230a      	movs	r3, #10
 800a75a:	8003      	strh	r3, [r0, #0]

  return USBD_HID_DeviceQualifierDesc;
}
 800a75c:	4800      	ldr	r0, [pc, #0]	@ (800a760 <USBD_HID_GetDeviceQualifierDesc+0x8>)
 800a75e:	4770      	bx	lr
 800a760:	20000120 	.word	0x20000120

0800a764 <USBD_HID_GetFSCfgDesc>:
{
 800a764:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800a766:	2181      	movs	r1, #129	@ 0x81
{
 800a768:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800a76a:	4805      	ldr	r0, [pc, #20]	@ (800a780 <USBD_HID_GetFSCfgDesc+0x1c>)
 800a76c:	f7ff fd65 	bl	800a23a <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 800a770:	b108      	cbz	r0, 800a776 <USBD_HID_GetFSCfgDesc+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
 800a772:	230a      	movs	r3, #10
 800a774:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800a776:	2322      	movs	r3, #34	@ 0x22
}
 800a778:	4801      	ldr	r0, [pc, #4]	@ (800a780 <USBD_HID_GetFSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800a77a:	8023      	strh	r3, [r4, #0]
}
 800a77c:	bd10      	pop	{r4, pc}
 800a77e:	bf00      	nop
 800a780:	20000138 	.word	0x20000138

0800a784 <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
 800a784:	f7ff bfee 	b.w	800a764 <USBD_HID_GetFSCfgDesc>

0800a788 <USBD_HID_GetHSCfgDesc>:
{
 800a788:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800a78a:	2181      	movs	r1, #129	@ 0x81
{
 800a78c:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800a78e:	4805      	ldr	r0, [pc, #20]	@ (800a7a4 <USBD_HID_GetHSCfgDesc+0x1c>)
 800a790:	f7ff fd53 	bl	800a23a <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 800a794:	b108      	cbz	r0, 800a79a <USBD_HID_GetHSCfgDesc+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
 800a796:	2307      	movs	r3, #7
 800a798:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800a79a:	2322      	movs	r3, #34	@ 0x22
}
 800a79c:	4801      	ldr	r0, [pc, #4]	@ (800a7a4 <USBD_HID_GetHSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800a79e:	8023      	strh	r3, [r4, #0]
}
 800a7a0:	bd10      	pop	{r4, pc}
 800a7a2:	bf00      	nop
 800a7a4:	20000138 	.word	0x20000138

0800a7a8 <USBD_HID_Setup>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a7a8:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
 800a7ac:	b513      	push	{r0, r1, r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a7ae:	33b0      	adds	r3, #176	@ 0xb0
  uint16_t status_info = 0U;
 800a7b0:	2200      	movs	r2, #0
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a7b2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  uint16_t status_info = 0U;
 800a7b6:	f8ad 2006 	strh.w	r2, [sp, #6]
  if (hhid == NULL)
 800a7ba:	2b00      	cmp	r3, #0
 800a7bc:	d04a      	beq.n	800a854 <USBD_HID_Setup+0xac>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a7be:	780a      	ldrb	r2, [r1, #0]
 800a7c0:	f012 0260 	ands.w	r2, r2, #96	@ 0x60
 800a7c4:	d01d      	beq.n	800a802 <USBD_HID_Setup+0x5a>
 800a7c6:	2a20      	cmp	r2, #32
 800a7c8:	d142      	bne.n	800a850 <USBD_HID_Setup+0xa8>
      switch (req->bRequest)
 800a7ca:	784a      	ldrb	r2, [r1, #1]
 800a7cc:	3a02      	subs	r2, #2
 800a7ce:	2a09      	cmp	r2, #9
 800a7d0:	d83e      	bhi.n	800a850 <USBD_HID_Setup+0xa8>
 800a7d2:	e8df f002 	tbb	[pc, r2]
 800a7d6:	0a13      	.short	0x0a13
 800a7d8:	3d3d3d3d 	.word	0x3d3d3d3d
 800a7dc:	050f3d3d 	.word	0x050f3d3d
          hhid->Protocol = (uint8_t)(req->wValue);
 800a7e0:	788a      	ldrb	r2, [r1, #2]
 800a7e2:	601a      	str	r2, [r3, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800a7e4:	2000      	movs	r0, #0
}
 800a7e6:	b002      	add	sp, #8
 800a7e8:	bd10      	pop	{r4, pc}
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
 800a7ea:	2201      	movs	r2, #1
 800a7ec:	4619      	mov	r1, r3
          (void)USBD_CtlSendData(pdev, pbuf, len);
 800a7ee:	f000 f8ac 	bl	800a94a <USBD_CtlSendData>
          break;
 800a7f2:	e7f7      	b.n	800a7e4 <USBD_HID_Setup+0x3c>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 800a7f4:	884a      	ldrh	r2, [r1, #2]
 800a7f6:	0a12      	lsrs	r2, r2, #8
 800a7f8:	605a      	str	r2, [r3, #4]
          break;
 800a7fa:	e7f3      	b.n	800a7e4 <USBD_HID_Setup+0x3c>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
 800a7fc:	2201      	movs	r2, #1
 800a7fe:	1d19      	adds	r1, r3, #4
 800a800:	e7f5      	b.n	800a7ee <USBD_HID_Setup+0x46>
      switch (req->bRequest)
 800a802:	784a      	ldrb	r2, [r1, #1]
 800a804:	2a0b      	cmp	r2, #11
 800a806:	d823      	bhi.n	800a850 <USBD_HID_Setup+0xa8>
 800a808:	a401      	add	r4, pc, #4	@ (adr r4, 800a810 <USBD_HID_Setup+0x68>)
 800a80a:	f854 f022 	ldr.w	pc, [r4, r2, lsl #2]
 800a80e:	bf00      	nop
 800a810:	0800a841 	.word	0x0800a841
 800a814:	0800a7e5 	.word	0x0800a7e5
 800a818:	0800a851 	.word	0x0800a851
 800a81c:	0800a851 	.word	0x0800a851
 800a820:	0800a851 	.word	0x0800a851
 800a824:	0800a851 	.word	0x0800a851
 800a828:	0800a859 	.word	0x0800a859
 800a82c:	0800a851 	.word	0x0800a851
 800a830:	0800a851 	.word	0x0800a851
 800a834:	0800a851 	.word	0x0800a851
 800a838:	0800a87d 	.word	0x0800a87d
 800a83c:	0800a88d 	.word	0x0800a88d
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a840:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a844:	2b03      	cmp	r3, #3
 800a846:	d103      	bne.n	800a850 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 800a848:	2202      	movs	r2, #2
 800a84a:	f10d 0106 	add.w	r1, sp, #6
 800a84e:	e7ce      	b.n	800a7ee <USBD_HID_Setup+0x46>
            USBD_CtlError(pdev, req);
 800a850:	f7ff ff52 	bl	800a6f8 <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
 800a854:	2003      	movs	r0, #3
 800a856:	e7c6      	b.n	800a7e6 <USBD_HID_Setup+0x3e>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
 800a858:	884b      	ldrh	r3, [r1, #2]
 800a85a:	0a1b      	lsrs	r3, r3, #8
 800a85c:	2b22      	cmp	r3, #34	@ 0x22
 800a85e:	d105      	bne.n	800a86c <USBD_HID_Setup+0xc4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 800a860:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
 800a862:	490e      	ldr	r1, [pc, #56]	@ (800a89c <USBD_HID_Setup+0xf4>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 800a864:	2a4a      	cmp	r2, #74	@ 0x4a
 800a866:	bf28      	it	cs
 800a868:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
 800a86a:	e7c0      	b.n	800a7ee <USBD_HID_Setup+0x46>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
 800a86c:	2b21      	cmp	r3, #33	@ 0x21
 800a86e:	d1ef      	bne.n	800a850 <USBD_HID_Setup+0xa8>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 800a870:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_Desc;
 800a872:	490b      	ldr	r1, [pc, #44]	@ (800a8a0 <USBD_HID_Setup+0xf8>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 800a874:	2a09      	cmp	r2, #9
 800a876:	bf28      	it	cs
 800a878:	2209      	movcs	r2, #9
 800a87a:	e7b8      	b.n	800a7ee <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a87c:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800a880:	2a03      	cmp	r2, #3
 800a882:	d1e5      	bne.n	800a850 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
 800a884:	2201      	movs	r2, #1
 800a886:	f103 0108 	add.w	r1, r3, #8
 800a88a:	e7b0      	b.n	800a7ee <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a88c:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800a890:	2a03      	cmp	r2, #3
 800a892:	d1dd      	bne.n	800a850 <USBD_HID_Setup+0xa8>
            hhid->AltSetting = (uint8_t)(req->wValue);
 800a894:	788a      	ldrb	r2, [r1, #2]
 800a896:	609a      	str	r2, [r3, #8]
 800a898:	e7a4      	b.n	800a7e4 <USBD_HID_Setup+0x3c>
 800a89a:	bf00      	nop
 800a89c:	200000d4 	.word	0x200000d4
 800a8a0:	2000012c 	.word	0x2000012c

0800a8a4 <USBD_HID_DeInit>:
{
 800a8a4:	b538      	push	{r3, r4, r5, lr}
 800a8a6:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
 800a8a8:	2181      	movs	r1, #129	@ 0x81
 800a8aa:	f7f7 fa7b 	bl	8001da4 <USBD_LL_CloseEP>
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a8ae:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800a8b2:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a8b4:	33b0      	adds	r3, #176	@ 0xb0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800a8b6:	f884 5037 	strb.w	r5, [r4, #55]	@ 0x37
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a8ba:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
  pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = 0U;
 800a8be:	6325      	str	r5, [r4, #48]	@ 0x30
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a8c0:	b130      	cbz	r0, 800a8d0 <USBD_HID_DeInit+0x2c>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 800a8c2:	f7f7 fa53 	bl	8001d6c <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800a8c6:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800a8ca:	33b0      	adds	r3, #176	@ 0xb0
 800a8cc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
 800a8d0:	2000      	movs	r0, #0
 800a8d2:	bd38      	pop	{r3, r4, r5, pc}

0800a8d4 <USBD_HID_Init>:
{
 800a8d4:	b538      	push	{r3, r4, r5, lr}
 800a8d6:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
 800a8d8:	2010      	movs	r0, #16
 800a8da:	f7f7 fa43 	bl	8001d64 <USBD_static_malloc>
  if (hhid == NULL)
 800a8de:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800a8e2:	33b0      	adds	r3, #176	@ 0xb0
  if (hhid == NULL)
 800a8e4:	4605      	mov	r5, r0
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800a8e6:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
  if (hhid == NULL)
 800a8ea:	b908      	cbnz	r0, 800a8f0 <USBD_HID_Init+0x1c>
    return (uint8_t)USBD_EMEM;
 800a8ec:	2002      	movs	r0, #2
}
 800a8ee:	bd38      	pop	{r3, r4, r5, pc}
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a8f0:	7c23      	ldrb	r3, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 800a8f2:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
 800a8f6:	2b00      	cmp	r3, #0
 800a8f8:	bf14      	ite	ne
 800a8fa:	230a      	movne	r3, #10
 800a8fc:	2307      	moveq	r3, #7
 800a8fe:	6323      	str	r3, [r4, #48]	@ 0x30
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
 800a900:	2203      	movs	r2, #3
 800a902:	2304      	movs	r3, #4
 800a904:	2181      	movs	r1, #129	@ 0x81
 800a906:	4620      	mov	r0, r4
 800a908:	f7f7 fa40 	bl	8001d8c <USBD_LL_OpenEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800a90c:	2301      	movs	r3, #1
  hhid->state = USBD_HID_IDLE;
 800a90e:	2000      	movs	r0, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800a910:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
  hhid->state = USBD_HID_IDLE;
 800a914:	7328      	strb	r0, [r5, #12]
  return (uint8_t)USBD_OK;
 800a916:	e7ea      	b.n	800a8ee <USBD_HID_Init+0x1a>

0800a918 <USBD_HID_SendReport>:
{
 800a918:	4613      	mov	r3, r2
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a91a:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800a91e:	32b0      	adds	r2, #176	@ 0xb0
{
 800a920:	b510      	push	{r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a922:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  if (hhid == NULL)
 800a926:	b172      	cbz	r2, 800a946 <USBD_HID_SendReport+0x2e>
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a928:	f890 429c 	ldrb.w	r4, [r0, #668]	@ 0x29c
 800a92c:	2c03      	cmp	r4, #3
 800a92e:	d101      	bne.n	800a934 <USBD_HID_SendReport+0x1c>
    if (hhid->state == USBD_HID_IDLE)
 800a930:	7b14      	ldrb	r4, [r2, #12]
 800a932:	b10c      	cbz	r4, 800a938 <USBD_HID_SendReport+0x20>
  return (uint8_t)USBD_OK;
 800a934:	2000      	movs	r0, #0
}
 800a936:	bd10      	pop	{r4, pc}
      hhid->state = USBD_HID_BUSY;
 800a938:	2401      	movs	r4, #1
 800a93a:	7314      	strb	r4, [r2, #12]
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
 800a93c:	460a      	mov	r2, r1
 800a93e:	2181      	movs	r1, #129	@ 0x81
 800a940:	f7f7 fa54 	bl	8001dec <USBD_LL_Transmit>
 800a944:	e7f6      	b.n	800a934 <USBD_HID_SendReport+0x1c>
    return (uint8_t)USBD_FAIL;
 800a946:	2003      	movs	r0, #3
 800a948:	e7f5      	b.n	800a936 <USBD_HID_SendReport+0x1e>

0800a94a <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 800a94a:	b510      	push	{r4, lr}
 800a94c:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800a94e:	2202      	movs	r2, #2
 800a950:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  pdev->ep_in[0].total_length = len;
 800a954:	6143      	str	r3, [r0, #20]
#else
  pdev->ep_in[0].rem_length = len;
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800a956:	460a      	mov	r2, r1
  pdev->ep_in[0].pbuffer = pbuf;
 800a958:	6241      	str	r1, [r0, #36]	@ 0x24
  pdev->ep_in[0].rem_length = len;
 800a95a:	6183      	str	r3, [r0, #24]
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800a95c:	2100      	movs	r1, #0
 800a95e:	f7f7 fa45 	bl	8001dec <USBD_LL_Transmit>

  return USBD_OK;
}
 800a962:	2000      	movs	r0, #0
 800a964:	bd10      	pop	{r4, pc}

0800a966 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800a966:	b508      	push	{r3, lr}
 800a968:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800a96a:	460a      	mov	r2, r1
 800a96c:	2100      	movs	r1, #0
 800a96e:	f7f7 fa3d 	bl	8001dec <USBD_LL_Transmit>

  return USBD_OK;
}
 800a972:	2000      	movs	r0, #0
 800a974:	bd08      	pop	{r3, pc}

0800a976 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 800a976:	b508      	push	{r3, lr}
 800a978:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800a97a:	460a      	mov	r2, r1
 800a97c:	2100      	movs	r1, #0
 800a97e:	f7f7 fa3e 	bl	8001dfe <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800a982:	2000      	movs	r0, #0
 800a984:	bd08      	pop	{r3, pc}

0800a986 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 800a986:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800a988:	2204      	movs	r2, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800a98a:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800a98c:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800a990:	4619      	mov	r1, r3
 800a992:	461a      	mov	r2, r3
 800a994:	f7f7 fa2a 	bl	8001dec <USBD_LL_Transmit>

  return USBD_OK;
}
 800a998:	2000      	movs	r0, #0
 800a99a:	bd08      	pop	{r3, pc}

0800a99c <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800a99c:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800a99e:	2205      	movs	r2, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a9a0:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800a9a2:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a9a6:	4619      	mov	r1, r3
 800a9a8:	461a      	mov	r2, r3
 800a9aa:	f7f7 fa28 	bl	8001dfe <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800a9ae:	2000      	movs	r0, #0
 800a9b0:	bd08      	pop	{r3, pc}

0800a9b2 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a9b2:	8880      	ldrh	r0, [r0, #4]
 800a9b4:	4770      	bx	lr

0800a9b6 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a9b6:	b570      	push	{r4, r5, r6, lr}
 800a9b8:	6803      	ldr	r3, [r0, #0]
 800a9ba:	4605      	mov	r5, r0
 800a9bc:	460c      	mov	r4, r1
 800a9be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9c0:	2100      	movs	r1, #0
 800a9c2:	4798      	blx	r3
 800a9c4:	682b      	ldr	r3, [r5, #0]
 800a9c6:	4606      	mov	r6, r0
 800a9c8:	6a1b      	ldr	r3, [r3, #32]
 800a9ca:	4628      	mov	r0, r5
 800a9cc:	4798      	blx	r3
 800a9ce:	1ba4      	subs	r4, r4, r6
 800a9d0:	b2a4      	uxth	r4, r4
 800a9d2:	fbb4 f0f0 	udiv	r0, r4, r0
 800a9d6:	bd70      	pop	{r4, r5, r6, pc}

0800a9d8 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a9d8:	2300      	movs	r3, #0
 800a9da:	8083      	strh	r3, [r0, #4]
 800a9dc:	4770      	bx	lr

0800a9de <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a9de:	b510      	push	{r4, lr}
 800a9e0:	6803      	ldr	r3, [r0, #0]
 800a9e2:	8881      	ldrh	r1, [r0, #4]
 800a9e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9e6:	4604      	mov	r4, r0
 800a9e8:	4798      	blx	r3
 800a9ea:	88a3      	ldrh	r3, [r4, #4]
 800a9ec:	3301      	adds	r3, #1
 800a9ee:	80a3      	strh	r3, [r4, #4]
 800a9f0:	bd10      	pop	{r4, pc}

0800a9f2 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a9f2:	6803      	ldr	r3, [r0, #0]
 800a9f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9f6:	4718      	bx	r3

0800a9f8 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a9f8:	4770      	bx	lr
	...

0800a9fc <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a9fc:	4a02      	ldr	r2, [pc, #8]	@ (800aa08 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a9fe:	6002      	str	r2, [r0, #0]
 800aa00:	2200      	movs	r2, #0
 800aa02:	8082      	strh	r2, [r0, #4]
 800aa04:	4770      	bx	lr
 800aa06:	bf00      	nop
 800aa08:	0802599c 	.word	0x0802599c

0800aa0c <_ZN8touchgfx9Container13getFirstChildEv>:
 800aa0c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800aa0e:	4770      	bx	lr

0800aa10 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800aa10:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa12:	2000      	movs	r0, #0
 800aa14:	b12b      	cbz	r3, 800aa22 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa16:	b920      	cbnz	r0, 800aa22 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa18:	1a5a      	subs	r2, r3, r1
 800aa1a:	4250      	negs	r0, r2
 800aa1c:	4150      	adcs	r0, r2
 800aa1e:	699b      	ldr	r3, [r3, #24]
 800aa20:	e7f8      	b.n	800aa14 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800aa22:	4770      	bx	lr

0800aa24 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800aa24:	2300      	movs	r3, #0
 800aa26:	6148      	str	r0, [r1, #20]
 800aa28:	618b      	str	r3, [r1, #24]
 800aa2a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa2c:	b913      	cbnz	r3, 800aa34 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800aa2e:	6281      	str	r1, [r0, #40]	@ 0x28
 800aa30:	4770      	bx	lr
 800aa32:	4613      	mov	r3, r2
 800aa34:	699a      	ldr	r2, [r3, #24]
 800aa36:	2a00      	cmp	r2, #0
 800aa38:	d1fb      	bne.n	800aa32 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800aa3a:	6199      	str	r1, [r3, #24]
 800aa3c:	4770      	bx	lr

0800aa3e <_ZN8touchgfx9Container9removeAllEv>:
 800aa3e:	2200      	movs	r2, #0
 800aa40:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa42:	b123      	cbz	r3, 800aa4e <_ZN8touchgfx9Container9removeAllEv+0x10>
 800aa44:	6999      	ldr	r1, [r3, #24]
 800aa46:	6281      	str	r1, [r0, #40]	@ 0x28
 800aa48:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800aa4c:	e7f8      	b.n	800aa40 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800aa4e:	4770      	bx	lr

0800aa50 <_ZN8touchgfx9Container6unlinkEv>:
 800aa50:	2300      	movs	r3, #0
 800aa52:	6283      	str	r3, [r0, #40]	@ 0x28
 800aa54:	4770      	bx	lr

0800aa56 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800aa56:	2200      	movs	r2, #0
 800aa58:	8002      	strh	r2, [r0, #0]
 800aa5a:	8042      	strh	r2, [r0, #2]
 800aa5c:	8082      	strh	r2, [r0, #4]
 800aa5e:	80c2      	strh	r2, [r0, #6]
 800aa60:	4770      	bx	lr

0800aa62 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800aa62:	b570      	push	{r4, r5, r6, lr}
 800aa64:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa66:	460d      	mov	r5, r1
 800aa68:	4616      	mov	r6, r2
 800aa6a:	b13c      	cbz	r4, 800aa7c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800aa6c:	6823      	ldr	r3, [r4, #0]
 800aa6e:	4620      	mov	r0, r4
 800aa70:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800aa72:	4632      	mov	r2, r6
 800aa74:	4629      	mov	r1, r5
 800aa76:	4798      	blx	r3
 800aa78:	69a4      	ldr	r4, [r4, #24]
 800aa7a:	e7f6      	b.n	800aa6a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800aa7c:	bd70      	pop	{r4, r5, r6, pc}

0800aa7e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800aa7e:	b538      	push	{r3, r4, r5, lr}
 800aa80:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa82:	460d      	mov	r5, r1
 800aa84:	b134      	cbz	r4, 800aa94 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800aa86:	682b      	ldr	r3, [r5, #0]
 800aa88:	4621      	mov	r1, r4
 800aa8a:	689b      	ldr	r3, [r3, #8]
 800aa8c:	4628      	mov	r0, r5
 800aa8e:	4798      	blx	r3
 800aa90:	69a4      	ldr	r4, [r4, #24]
 800aa92:	e7f7      	b.n	800aa84 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800aa94:	bd38      	pop	{r3, r4, r5, pc}

0800aa96 <_ZN8touchgfx9ContainerD1Ev>:
 800aa96:	4770      	bx	lr

0800aa98 <_ZN8touchgfx9ContainerD0Ev>:
 800aa98:	b510      	push	{r4, lr}
 800aa9a:	212c      	movs	r1, #44	@ 0x2c
 800aa9c:	4604      	mov	r4, r0
 800aa9e:	f017 fce4 	bl	802246a <_ZdlPvj>
 800aaa2:	4620      	mov	r0, r4
 800aaa4:	bd10      	pop	{r4, pc}

0800aaa6 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800aaa6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aaa8:	b19b      	cbz	r3, 800aad2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aaaa:	428b      	cmp	r3, r1
 800aaac:	d109      	bne.n	800aac2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800aaae:	699a      	ldr	r2, [r3, #24]
 800aab0:	2100      	movs	r1, #0
 800aab2:	6159      	str	r1, [r3, #20]
 800aab4:	6282      	str	r2, [r0, #40]	@ 0x28
 800aab6:	b902      	cbnz	r2, 800aaba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800aab8:	4770      	bx	lr
 800aaba:	6199      	str	r1, [r3, #24]
 800aabc:	4770      	bx	lr
 800aabe:	4613      	mov	r3, r2
 800aac0:	b13a      	cbz	r2, 800aad2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aac2:	699a      	ldr	r2, [r3, #24]
 800aac4:	428a      	cmp	r2, r1
 800aac6:	d1fa      	bne.n	800aabe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800aac8:	698a      	ldr	r2, [r1, #24]
 800aaca:	619a      	str	r2, [r3, #24]
 800aacc:	2300      	movs	r3, #0
 800aace:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800aad2:	4770      	bx	lr

0800aad4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800aad4:	b410      	push	{r4}
 800aad6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aad8:	4604      	mov	r4, r0
 800aada:	b92b      	cbnz	r3, 800aae8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aadc:	6803      	ldr	r3, [r0, #0]
 800aade:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aae2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aae4:	4611      	mov	r1, r2
 800aae6:	4718      	bx	r3
 800aae8:	b941      	cbnz	r1, 800aafc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aaea:	6193      	str	r3, [r2, #24]
 800aaec:	6282      	str	r2, [r0, #40]	@ 0x28
 800aaee:	6154      	str	r4, [r2, #20]
 800aaf0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aaf4:	4770      	bx	lr
 800aaf6:	4603      	mov	r3, r0
 800aaf8:	2800      	cmp	r0, #0
 800aafa:	d0f9      	beq.n	800aaf0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800aafc:	4299      	cmp	r1, r3
 800aafe:	6998      	ldr	r0, [r3, #24]
 800ab00:	d1f9      	bne.n	800aaf6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800ab02:	6190      	str	r0, [r2, #24]
 800ab04:	618a      	str	r2, [r1, #24]
 800ab06:	e7f2      	b.n	800aaee <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ab08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ab08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab0c:	461f      	mov	r7, r3
 800ab0e:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800ab12:	460d      	mov	r5, r1
 800ab14:	4616      	mov	r6, r2
 800ab16:	b103      	cbz	r3, 800ab1a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ab18:	6038      	str	r0, [r7, #0]
 800ab1a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ab1c:	b314      	cbz	r4, 800ab64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ab1e:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ab22:	b1eb      	cbz	r3, 800ab60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab24:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ab28:	428d      	cmp	r5, r1
 800ab2a:	db19      	blt.n	800ab60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab2c:	8923      	ldrh	r3, [r4, #8]
 800ab2e:	b289      	uxth	r1, r1
 800ab30:	440b      	add	r3, r1
 800ab32:	b21b      	sxth	r3, r3
 800ab34:	429d      	cmp	r5, r3
 800ab36:	da13      	bge.n	800ab60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab38:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ab3c:	4296      	cmp	r6, r2
 800ab3e:	db0f      	blt.n	800ab60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab40:	8963      	ldrh	r3, [r4, #10]
 800ab42:	b292      	uxth	r2, r2
 800ab44:	4413      	add	r3, r2
 800ab46:	b21b      	sxth	r3, r3
 800ab48:	429e      	cmp	r6, r3
 800ab4a:	da09      	bge.n	800ab60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab4c:	6823      	ldr	r3, [r4, #0]
 800ab4e:	1ab2      	subs	r2, r6, r2
 800ab50:	1a69      	subs	r1, r5, r1
 800ab52:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800ab56:	b212      	sxth	r2, r2
 800ab58:	463b      	mov	r3, r7
 800ab5a:	b209      	sxth	r1, r1
 800ab5c:	4620      	mov	r0, r4
 800ab5e:	47c0      	blx	r8
 800ab60:	69a4      	ldr	r4, [r4, #24]
 800ab62:	e7db      	b.n	800ab1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ab64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab68 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ab68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab6c:	4c6e      	ldr	r4, [pc, #440]	@ (800ad28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ab6e:	b0a1      	sub	sp, #132	@ 0x84
 800ab70:	6824      	ldr	r4, [r4, #0]
 800ab72:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800ab74:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800ab78:	9303      	str	r3, [sp, #12]
 800ab7a:	2400      	movs	r4, #0
 800ab7c:	802c      	strh	r4, [r5, #0]
 800ab7e:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800ab80:	802c      	strh	r4, [r5, #0]
 800ab82:	601c      	str	r4, [r3, #0]
 800ab84:	4606      	mov	r6, r0
 800ab86:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ab8a:	f7ff ffbd 	bl	800ab08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ab8e:	f1b9 0f03 	cmp.w	r9, #3
 800ab92:	f340 80c2 	ble.w	800ad1a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800ab96:	4631      	mov	r1, r6
 800ab98:	a80c      	add	r0, sp, #48	@ 0x30
 800ab9a:	f006 fc1f 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab9e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800aba2:	9306      	str	r3, [sp, #24]
 800aba4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800aba8:	9307      	str	r3, [sp, #28]
 800abaa:	9b03      	ldr	r3, [sp, #12]
 800abac:	f8d3 a000 	ldr.w	sl, [r3]
 800abb0:	f1ba 0f00 	cmp.w	sl, #0
 800abb4:	f000 80b4 	beq.w	800ad20 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800abb8:	4651      	mov	r1, sl
 800abba:	a810      	add	r0, sp, #64	@ 0x40
 800abbc:	f006 fc0e 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abc0:	9b01      	ldr	r3, [sp, #4]
 800abc2:	9a06      	ldr	r2, [sp, #24]
 800abc4:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800abc8:	189d      	adds	r5, r3, r2
 800abca:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800abce:	9a07      	ldr	r2, [sp, #28]
 800abd0:	2002      	movs	r0, #2
 800abd2:	fb91 f1f0 	sdiv	r1, r1, r0
 800abd6:	4419      	add	r1, r3
 800abd8:	1a6d      	subs	r5, r5, r1
 800abda:	9b02      	ldr	r3, [sp, #8]
 800abdc:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800abe0:	4413      	add	r3, r2
 800abe2:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800abe6:	fb92 f2f0 	sdiv	r2, r2, r0
 800abea:	440a      	add	r2, r1
 800abec:	1a9b      	subs	r3, r3, r2
 800abee:	435b      	muls	r3, r3
 800abf0:	fb05 3505 	mla	r5, r5, r5, r3
 800abf4:	4f4d      	ldr	r7, [pc, #308]	@ (800ad2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800abf6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800abf8:	ac10      	add	r4, sp, #64	@ 0x40
 800abfa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800abfc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800abfe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac00:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac02:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac04:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ac08:	f1b9 0f0c 	cmp.w	r9, #12
 800ac0c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ac10:	f04f 0303 	mov.w	r3, #3
 800ac14:	bfc8      	it	gt
 800ac16:	4698      	movgt	r8, r3
 800ac18:	f8cd 9000 	str.w	r9, [sp]
 800ac1c:	f04f 0400 	mov.w	r4, #0
 800ac20:	bfdc      	itt	le
 800ac22:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ac26:	fb92 f8f3 	sdivle	r8, r2, r3
 800ac2a:	1c63      	adds	r3, r4, #1
 800ac2c:	aa10      	add	r2, sp, #64	@ 0x40
 800ac2e:	f004 0401 	and.w	r4, r4, #1
 800ac32:	9308      	str	r3, [sp, #32]
 800ac34:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ac38:	9b00      	ldr	r3, [sp, #0]
 800ac3a:	fb93 f3f8 	sdiv	r3, r3, r8
 800ac3e:	b29b      	uxth	r3, r3
 800ac40:	3404      	adds	r4, #4
 800ac42:	f04f 0b00 	mov.w	fp, #0
 800ac46:	9304      	str	r3, [sp, #16]
 800ac48:	9a04      	ldr	r2, [sp, #16]
 800ac4a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ac4e:	fb13 f302 	smulbb	r3, r3, r2
 800ac52:	9a01      	ldr	r2, [sp, #4]
 800ac54:	b29b      	uxth	r3, r3
 800ac56:	1899      	adds	r1, r3, r2
 800ac58:	9305      	str	r3, [sp, #20]
 800ac5a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ac5e:	b209      	sxth	r1, r1
 800ac60:	4299      	cmp	r1, r3
 800ac62:	db4d      	blt.n	800ad00 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac64:	8932      	ldrh	r2, [r6, #8]
 800ac66:	4413      	add	r3, r2
 800ac68:	b21b      	sxth	r3, r3
 800ac6a:	4299      	cmp	r1, r3
 800ac6c:	da48      	bge.n	800ad00 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac6e:	9b04      	ldr	r3, [sp, #16]
 800ac70:	6827      	ldr	r7, [r4, #0]
 800ac72:	fb17 f703 	smulbb	r7, r7, r3
 800ac76:	9b02      	ldr	r3, [sp, #8]
 800ac78:	b2bf      	uxth	r7, r7
 800ac7a:	18fa      	adds	r2, r7, r3
 800ac7c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ac80:	b212      	sxth	r2, r2
 800ac82:	429a      	cmp	r2, r3
 800ac84:	db3c      	blt.n	800ad00 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac86:	8970      	ldrh	r0, [r6, #10]
 800ac88:	4403      	add	r3, r0
 800ac8a:	b21b      	sxth	r3, r3
 800ac8c:	429a      	cmp	r2, r3
 800ac8e:	da37      	bge.n	800ad00 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac90:	2300      	movs	r3, #0
 800ac92:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ac94:	4630      	mov	r0, r6
 800ac96:	ab0b      	add	r3, sp, #44	@ 0x2c
 800ac98:	f7ff ff36 	bl	800ab08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ac9c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ac9e:	b37a      	cbz	r2, 800ad00 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aca0:	4552      	cmp	r2, sl
 800aca2:	d02d      	beq.n	800ad00 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aca4:	4611      	mov	r1, r2
 800aca6:	a80e      	add	r0, sp, #56	@ 0x38
 800aca8:	9209      	str	r2, [sp, #36]	@ 0x24
 800acaa:	f006 fb97 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800acae:	9a06      	ldr	r2, [sp, #24]
 800acb0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800acb4:	9b01      	ldr	r3, [sp, #4]
 800acb6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800acba:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800acbe:	4413      	add	r3, r2
 800acc0:	f04f 0e02 	mov.w	lr, #2
 800acc4:	fb91 f1fe 	sdiv	r1, r1, lr
 800acc8:	4401      	add	r1, r0
 800acca:	1a58      	subs	r0, r3, r1
 800accc:	9a07      	ldr	r2, [sp, #28]
 800acce:	9b02      	ldr	r3, [sp, #8]
 800acd0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800acd4:	fb9c fcfe 	sdiv	ip, ip, lr
 800acd8:	4413      	add	r3, r2
 800acda:	448c      	add	ip, r1
 800acdc:	eba3 030c 	sub.w	r3, r3, ip
 800ace0:	435b      	muls	r3, r3
 800ace2:	fb00 3300 	mla	r3, r0, r0, r3
 800ace6:	42ab      	cmp	r3, r5
 800ace8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800acea:	d208      	bcs.n	800acfe <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800acec:	9803      	ldr	r0, [sp, #12]
 800acee:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800acf0:	6001      	str	r1, [r0, #0]
 800acf2:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800acf4:	9805      	ldr	r0, [sp, #20]
 800acf6:	8008      	strh	r0, [r1, #0]
 800acf8:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800acfa:	461d      	mov	r5, r3
 800acfc:	800f      	strh	r7, [r1, #0]
 800acfe:	4692      	mov	sl, r2
 800ad00:	f10b 0b01 	add.w	fp, fp, #1
 800ad04:	f1bb 0f04 	cmp.w	fp, #4
 800ad08:	f104 0408 	add.w	r4, r4, #8
 800ad0c:	d19c      	bne.n	800ac48 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ad0e:	9b00      	ldr	r3, [sp, #0]
 800ad10:	9c08      	ldr	r4, [sp, #32]
 800ad12:	444b      	add	r3, r9
 800ad14:	4544      	cmp	r4, r8
 800ad16:	9300      	str	r3, [sp, #0]
 800ad18:	d187      	bne.n	800ac2a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ad1a:	b021      	add	sp, #132	@ 0x84
 800ad1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad20:	f04f 35ff 	mov.w	r5, #4294967295
 800ad24:	e766      	b.n	800abf4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ad26:	bf00      	nop
 800ad28:	20014040 	.word	0x20014040
 800ad2c:	0802483c 	.word	0x0802483c

0800ad30 <_ZN8touchgfx4RectaNERKS0_>:
 800ad30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad34:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ad38:	888c      	ldrh	r4, [r1, #4]
 800ad3a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ad3e:	443c      	add	r4, r7
 800ad40:	b2a4      	uxth	r4, r4
 800ad42:	fa0f f884 	sxth.w	r8, r4
 800ad46:	45c1      	cmp	r9, r8
 800ad48:	da2f      	bge.n	800adaa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad4a:	8882      	ldrh	r2, [r0, #4]
 800ad4c:	444a      	add	r2, r9
 800ad4e:	b292      	uxth	r2, r2
 800ad50:	fa0f fe82 	sxth.w	lr, r2
 800ad54:	4577      	cmp	r7, lr
 800ad56:	da28      	bge.n	800adaa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad58:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ad5c:	88cb      	ldrh	r3, [r1, #6]
 800ad5e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ad62:	442b      	add	r3, r5
 800ad64:	b21b      	sxth	r3, r3
 800ad66:	429e      	cmp	r6, r3
 800ad68:	da1f      	bge.n	800adaa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad6a:	88c3      	ldrh	r3, [r0, #6]
 800ad6c:	4433      	add	r3, r6
 800ad6e:	b29b      	uxth	r3, r3
 800ad70:	fa0f fc83 	sxth.w	ip, r3
 800ad74:	4565      	cmp	r5, ip
 800ad76:	da18      	bge.n	800adaa <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad78:	454f      	cmp	r7, r9
 800ad7a:	bfb8      	it	lt
 800ad7c:	464f      	movlt	r7, r9
 800ad7e:	42b5      	cmp	r5, r6
 800ad80:	bfb8      	it	lt
 800ad82:	4635      	movlt	r5, r6
 800ad84:	45f0      	cmp	r8, lr
 800ad86:	bfd8      	it	le
 800ad88:	4622      	movle	r2, r4
 800ad8a:	1bd2      	subs	r2, r2, r7
 800ad8c:	8082      	strh	r2, [r0, #4]
 800ad8e:	884a      	ldrh	r2, [r1, #2]
 800ad90:	88c9      	ldrh	r1, [r1, #6]
 800ad92:	8007      	strh	r7, [r0, #0]
 800ad94:	440a      	add	r2, r1
 800ad96:	b292      	uxth	r2, r2
 800ad98:	b211      	sxth	r1, r2
 800ad9a:	458c      	cmp	ip, r1
 800ad9c:	bfa8      	it	ge
 800ad9e:	4613      	movge	r3, r2
 800ada0:	1b5b      	subs	r3, r3, r5
 800ada2:	80c3      	strh	r3, [r0, #6]
 800ada4:	8045      	strh	r5, [r0, #2]
 800ada6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800adaa:	2300      	movs	r3, #0
 800adac:	8003      	strh	r3, [r0, #0]
 800adae:	8043      	strh	r3, [r0, #2]
 800adb0:	8083      	strh	r3, [r0, #4]
 800adb2:	80c3      	strh	r3, [r0, #6]
 800adb4:	e7f7      	b.n	800ada6 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800adb6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800adba:	2b00      	cmp	r3, #0
 800adbc:	dd06      	ble.n	800adcc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800adbe:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800adc2:	2800      	cmp	r0, #0
 800adc4:	bfcc      	ite	gt
 800adc6:	2000      	movgt	r0, #0
 800adc8:	2001      	movle	r0, #1
 800adca:	4770      	bx	lr
 800adcc:	2001      	movs	r0, #1
 800adce:	4770      	bx	lr

0800add0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800add0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800add4:	2300      	movs	r3, #0
 800add6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800add8:	8003      	strh	r3, [r0, #0]
 800adda:	4604      	mov	r4, r0
 800addc:	8043      	strh	r3, [r0, #2]
 800adde:	8083      	strh	r3, [r0, #4]
 800ade0:	80c3      	strh	r3, [r0, #6]
 800ade2:	2d00      	cmp	r5, #0
 800ade4:	d040      	beq.n	800ae68 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ade6:	1d28      	adds	r0, r5, #4
 800ade8:	f7ff ffe5 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800adec:	b988      	cbnz	r0, 800ae12 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800adee:	4620      	mov	r0, r4
 800adf0:	f7ff ffe1 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800adf4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800adf8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800adfc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ae00:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ae04:	b138      	cbz	r0, 800ae16 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ae06:	8022      	strh	r2, [r4, #0]
 800ae08:	8063      	strh	r3, [r4, #2]
 800ae0a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ae0e:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ae12:	69ad      	ldr	r5, [r5, #24]
 800ae14:	e7e5      	b.n	800ade2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ae16:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ae1a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ae1e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ae22:	4290      	cmp	r0, r2
 800ae24:	4607      	mov	r7, r0
 800ae26:	bfa8      	it	ge
 800ae28:	4617      	movge	r7, r2
 800ae2a:	4472      	add	r2, lr
 800ae2c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ae30:	8027      	strh	r7, [r4, #0]
 800ae32:	4299      	cmp	r1, r3
 800ae34:	460e      	mov	r6, r1
 800ae36:	4440      	add	r0, r8
 800ae38:	bfa8      	it	ge
 800ae3a:	461e      	movge	r6, r3
 800ae3c:	4471      	add	r1, lr
 800ae3e:	4463      	add	r3, ip
 800ae40:	b200      	sxth	r0, r0
 800ae42:	b212      	sxth	r2, r2
 800ae44:	b209      	sxth	r1, r1
 800ae46:	b21b      	sxth	r3, r3
 800ae48:	4290      	cmp	r0, r2
 800ae4a:	bfac      	ite	ge
 800ae4c:	ebc7 0200 	rsbge	r2, r7, r0
 800ae50:	ebc7 0202 	rsblt	r2, r7, r2
 800ae54:	4299      	cmp	r1, r3
 800ae56:	bfac      	ite	ge
 800ae58:	ebc6 0301 	rsbge	r3, r6, r1
 800ae5c:	ebc6 0303 	rsblt	r3, r6, r3
 800ae60:	8066      	strh	r6, [r4, #2]
 800ae62:	80a2      	strh	r2, [r4, #4]
 800ae64:	80e3      	strh	r3, [r4, #6]
 800ae66:	e7d4      	b.n	800ae12 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ae68:	4620      	mov	r0, r4
 800ae6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae6e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ae6e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ae72:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800ae76:	b383      	cbz	r3, 800aeda <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae78:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ae7a:	b374      	cbz	r4, 800aeda <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae7c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ae80:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ae84:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ae88:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ae8c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ae90:	b303      	cbz	r3, 800aed4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ae92:	4668      	mov	r0, sp
 800ae94:	1d21      	adds	r1, r4, #4
 800ae96:	f8ad 5000 	strh.w	r5, [sp]
 800ae9a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ae9e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800aea2:	f8ad 8006 	strh.w	r8, [sp, #6]
 800aea6:	f7ff ff43 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 800aeaa:	4668      	mov	r0, sp
 800aeac:	f7ff ff83 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aeb0:	b980      	cbnz	r0, 800aed4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aeb2:	f8bd 3000 	ldrh.w	r3, [sp]
 800aeb6:	88a2      	ldrh	r2, [r4, #4]
 800aeb8:	1a9b      	subs	r3, r3, r2
 800aeba:	f8ad 3000 	strh.w	r3, [sp]
 800aebe:	88e2      	ldrh	r2, [r4, #6]
 800aec0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aec4:	1a9b      	subs	r3, r3, r2
 800aec6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800aeca:	6823      	ldr	r3, [r4, #0]
 800aecc:	4669      	mov	r1, sp
 800aece:	689b      	ldr	r3, [r3, #8]
 800aed0:	4620      	mov	r0, r4
 800aed2:	4798      	blx	r3
 800aed4:	69a4      	ldr	r4, [r4, #24]
 800aed6:	2c00      	cmp	r4, #0
 800aed8:	d1d8      	bne.n	800ae8c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800aeda:	b002      	add	sp, #8
 800aedc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aee0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800aee0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aee2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800aee6:	460d      	mov	r5, r1
 800aee8:	4616      	mov	r6, r2
 800aeea:	b323      	cbz	r3, 800af36 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aeec:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aeee:	b314      	cbz	r4, 800af36 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aef0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800aef4:	b1eb      	cbz	r3, 800af32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800aef6:	6828      	ldr	r0, [r5, #0]
 800aef8:	6869      	ldr	r1, [r5, #4]
 800aefa:	466b      	mov	r3, sp
 800aefc:	c303      	stmia	r3!, {r0, r1}
 800aefe:	4668      	mov	r0, sp
 800af00:	1d21      	adds	r1, r4, #4
 800af02:	f7ff ff15 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 800af06:	4668      	mov	r0, sp
 800af08:	f7ff ff55 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af0c:	b988      	cbnz	r0, 800af32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800af0e:	f8bd 3000 	ldrh.w	r3, [sp]
 800af12:	88a2      	ldrh	r2, [r4, #4]
 800af14:	1a9b      	subs	r3, r3, r2
 800af16:	f8ad 3000 	strh.w	r3, [sp]
 800af1a:	88e2      	ldrh	r2, [r4, #6]
 800af1c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800af20:	1a9b      	subs	r3, r3, r2
 800af22:	f8ad 3002 	strh.w	r3, [sp, #2]
 800af26:	6823      	ldr	r3, [r4, #0]
 800af28:	4632      	mov	r2, r6
 800af2a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800af2c:	4669      	mov	r1, sp
 800af2e:	4620      	mov	r0, r4
 800af30:	4798      	blx	r3
 800af32:	69a4      	ldr	r4, [r4, #24]
 800af34:	e7db      	b.n	800aeee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800af36:	b002      	add	sp, #8
 800af38:	bd70      	pop	{r4, r5, r6, pc}

0800af3a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800af3a:	b513      	push	{r0, r1, r4, lr}
 800af3c:	6803      	ldr	r3, [r0, #0]
 800af3e:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800af42:	2300      	movs	r3, #0
 800af44:	e9cd 3300 	strd	r3, r3, [sp]
 800af48:	466b      	mov	r3, sp
 800af4a:	47a0      	blx	r4
 800af4c:	b002      	add	sp, #8
 800af4e:	bd10      	pop	{r4, pc}

0800af50 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800af50:	2301      	movs	r3, #1
 800af52:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800af56:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800af5a:	4770      	bx	lr

0800af5c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800af5c:	2301      	movs	r3, #1
 800af5e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800af62:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800af66:	4770      	bx	lr

0800af68 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800af68:	6843      	ldr	r3, [r0, #4]
 800af6a:	2201      	movs	r2, #1
 800af6c:	725a      	strb	r2, [r3, #9]
 800af6e:	6840      	ldr	r0, [r0, #4]
 800af70:	6803      	ldr	r3, [r0, #0]
 800af72:	691b      	ldr	r3, [r3, #16]
 800af74:	4718      	bx	r3

0800af76 <_ZN8touchgfx3HAL8flushDMAEv>:
 800af76:	6840      	ldr	r0, [r0, #4]
 800af78:	6803      	ldr	r3, [r0, #0]
 800af7a:	689b      	ldr	r3, [r3, #8]
 800af7c:	4718      	bx	r3

0800af7e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800af7e:	b530      	push	{r4, r5, lr}
 800af80:	b08b      	sub	sp, #44	@ 0x2c
 800af82:	6804      	ldr	r4, [r0, #0]
 800af84:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800af88:	9509      	str	r5, [sp, #36]	@ 0x24
 800af8a:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800af8e:	9508      	str	r5, [sp, #32]
 800af90:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800af94:	9507      	str	r5, [sp, #28]
 800af96:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800af9a:	9506      	str	r5, [sp, #24]
 800af9c:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800afa0:	9505      	str	r5, [sp, #20]
 800afa2:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800afa6:	9504      	str	r5, [sp, #16]
 800afa8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800afac:	9503      	str	r5, [sp, #12]
 800afae:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800afb2:	9502      	str	r5, [sp, #8]
 800afb4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800afb8:	e9cd 3500 	strd	r3, r5, [sp]
 800afbc:	4613      	mov	r3, r2
 800afbe:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800afc0:	2200      	movs	r2, #0
 800afc2:	47a0      	blx	r4
 800afc4:	b00b      	add	sp, #44	@ 0x2c
 800afc6:	bd30      	pop	{r4, r5, pc}

0800afc8 <_ZN8touchgfx3HAL10beginFrameEv>:
 800afc8:	4b04      	ldr	r3, [pc, #16]	@ (800afdc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800afca:	781b      	ldrb	r3, [r3, #0]
 800afcc:	b123      	cbz	r3, 800afd8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800afce:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800afd2:	f080 0001 	eor.w	r0, r0, #1
 800afd6:	4770      	bx	lr
 800afd8:	2001      	movs	r0, #1
 800afda:	4770      	bx	lr
 800afdc:	2001403c 	.word	0x2001403c

0800afe0 <_ZN8touchgfx3HAL8endFrameEv>:
 800afe0:	b510      	push	{r4, lr}
 800afe2:	4604      	mov	r4, r0
 800afe4:	6840      	ldr	r0, [r0, #4]
 800afe6:	6803      	ldr	r3, [r0, #0]
 800afe8:	689b      	ldr	r3, [r3, #8]
 800afea:	4798      	blx	r3
 800afec:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800aff0:	b113      	cbz	r3, 800aff8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800aff2:	2301      	movs	r3, #1
 800aff4:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800aff8:	bd10      	pop	{r4, pc}

0800affa <_ZN8touchgfx3HAL10initializeEv>:
 800affa:	b510      	push	{r4, lr}
 800affc:	4604      	mov	r4, r0
 800affe:	f7f5 ff87 	bl	8000f10 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b002:	f7f5 fe8f 	bl	8000d24 <_ZN8touchgfx4GPIO4initEv>
 800b006:	6860      	ldr	r0, [r4, #4]
 800b008:	6803      	ldr	r3, [r0, #0]
 800b00a:	68db      	ldr	r3, [r3, #12]
 800b00c:	4798      	blx	r3
 800b00e:	68e0      	ldr	r0, [r4, #12]
 800b010:	6803      	ldr	r3, [r0, #0]
 800b012:	689b      	ldr	r3, [r3, #8]
 800b014:	4798      	blx	r3
 800b016:	6823      	ldr	r3, [r4, #0]
 800b018:	4620      	mov	r0, r4
 800b01a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b01c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b020:	4718      	bx	r3
	...

0800b024 <_ZN8touchgfx3HAL4tickEv>:
 800b024:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b026:	6803      	ldr	r3, [r0, #0]
 800b028:	4d62      	ldr	r5, [pc, #392]	@ (800b1b4 <_ZN8touchgfx3HAL4tickEv+0x190>)
 800b02a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800b02e:	4604      	mov	r4, r0
 800b030:	4798      	blx	r3
 800b032:	2800      	cmp	r0, #0
 800b034:	f000 809e 	beq.w	800b174 <_ZN8touchgfx3HAL4tickEv+0x150>
 800b038:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800b03c:	2b02      	cmp	r3, #2
 800b03e:	d002      	beq.n	800b046 <_ZN8touchgfx3HAL4tickEv+0x22>
 800b040:	2001      	movs	r0, #1
 800b042:	f7f5 fded 	bl	8000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b046:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800b04a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b04e:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800b052:	2600      	movs	r6, #0
 800b054:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800b058:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800b05c:	b133      	cbz	r3, 800b06c <_ZN8touchgfx3HAL4tickEv+0x48>
 800b05e:	6823      	ldr	r3, [r4, #0]
 800b060:	4620      	mov	r0, r4
 800b062:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800b066:	4798      	blx	r3
 800b068:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800b06c:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800b070:	6862      	ldr	r2, [r4, #4]
 800b072:	f083 0301 	eor.w	r3, r3, #1
 800b076:	7253      	strb	r3, [r2, #9]
 800b078:	2601      	movs	r6, #1
 800b07a:	702e      	strb	r6, [r5, #0]
 800b07c:	f004 ff60 	bl	800ff40 <_ZN8touchgfx11Application11getInstanceEv>
 800b080:	6803      	ldr	r3, [r0, #0]
 800b082:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b084:	4798      	blx	r3
 800b086:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b08a:	b90b      	cbnz	r3, 800b090 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800b08c:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800b090:	f004 ff56 	bl	800ff40 <_ZN8touchgfx11Application11getInstanceEv>
 800b094:	6803      	ldr	r3, [r0, #0]
 800b096:	695b      	ldr	r3, [r3, #20]
 800b098:	4798      	blx	r3
 800b09a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b09c:	6803      	ldr	r3, [r0, #0]
 800b09e:	691b      	ldr	r3, [r3, #16]
 800b0a0:	4798      	blx	r3
 800b0a2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b0a6:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800b0aa:	3b01      	subs	r3, #1
 800b0ac:	b2db      	uxtb	r3, r3
 800b0ae:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b0b2:	b10a      	cbz	r2, 800b0b8 <_ZN8touchgfx3HAL4tickEv+0x94>
 800b0b4:	2b00      	cmp	r3, #0
 800b0b6:	d1eb      	bne.n	800b090 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800b0b8:	4a3f      	ldr	r2, [pc, #252]	@ (800b1b8 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800b0ba:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800b0be:	7813      	ldrb	r3, [r2, #0]
 800b0c0:	3301      	adds	r3, #1
 800b0c2:	b25b      	sxtb	r3, r3
 800b0c4:	4299      	cmp	r1, r3
 800b0c6:	7013      	strb	r3, [r2, #0]
 800b0c8:	dc10      	bgt.n	800b0ec <_ZN8touchgfx3HAL4tickEv+0xc8>
 800b0ca:	68e0      	ldr	r0, [r4, #12]
 800b0cc:	2300      	movs	r3, #0
 800b0ce:	7013      	strb	r3, [r2, #0]
 800b0d0:	6803      	ldr	r3, [r0, #0]
 800b0d2:	aa03      	add	r2, sp, #12
 800b0d4:	68db      	ldr	r3, [r3, #12]
 800b0d6:	a902      	add	r1, sp, #8
 800b0d8:	4798      	blx	r3
 800b0da:	6823      	ldr	r3, [r4, #0]
 800b0dc:	2800      	cmp	r0, #0
 800b0de:	d059      	beq.n	800b194 <_ZN8touchgfx3HAL4tickEv+0x170>
 800b0e0:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800b0e4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b0e8:	4620      	mov	r0, r4
 800b0ea:	4798      	blx	r3
 800b0ec:	6960      	ldr	r0, [r4, #20]
 800b0ee:	2300      	movs	r3, #0
 800b0f0:	f88d 3007 	strb.w	r3, [sp, #7]
 800b0f4:	b158      	cbz	r0, 800b10e <_ZN8touchgfx3HAL4tickEv+0xea>
 800b0f6:	6803      	ldr	r3, [r0, #0]
 800b0f8:	f10d 0107 	add.w	r1, sp, #7
 800b0fc:	68db      	ldr	r3, [r3, #12]
 800b0fe:	4798      	blx	r3
 800b100:	b128      	cbz	r0, 800b10e <_ZN8touchgfx3HAL4tickEv+0xea>
 800b102:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b104:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b108:	6803      	ldr	r3, [r0, #0]
 800b10a:	68db      	ldr	r3, [r3, #12]
 800b10c:	4798      	blx	r3
 800b10e:	f104 001c 	add.w	r0, r4, #28
 800b112:	f016 fba9 	bl	8021868 <_ZN8touchgfx8Gestures4tickEv>
 800b116:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800b11a:	b30b      	cbz	r3, 800b160 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800b11c:	6920      	ldr	r0, [r4, #16]
 800b11e:	6803      	ldr	r3, [r0, #0]
 800b120:	691b      	ldr	r3, [r3, #16]
 800b122:	4798      	blx	r3
 800b124:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b126:	4606      	mov	r6, r0
 800b128:	b903      	cbnz	r3, 800b12c <_ZN8touchgfx3HAL4tickEv+0x108>
 800b12a:	6760      	str	r0, [r4, #116]	@ 0x74
 800b12c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b12e:	4a23      	ldr	r2, [pc, #140]	@ (800b1bc <_ZN8touchgfx3HAL4tickEv+0x198>)
 800b130:	1af3      	subs	r3, r6, r3
 800b132:	4293      	cmp	r3, r2
 800b134:	d914      	bls.n	800b160 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800b136:	6920      	ldr	r0, [r4, #16]
 800b138:	6803      	ldr	r3, [r0, #0]
 800b13a:	699b      	ldr	r3, [r3, #24]
 800b13c:	4798      	blx	r3
 800b13e:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b140:	2264      	movs	r2, #100	@ 0x64
 800b142:	1af3      	subs	r3, r6, r3
 800b144:	fbb3 f3f2 	udiv	r3, r3, r2
 800b148:	fbb0 f0f3 	udiv	r0, r0, r3
 800b14c:	2800      	cmp	r0, #0
 800b14e:	dc26      	bgt.n	800b19e <_ZN8touchgfx3HAL4tickEv+0x17a>
 800b150:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800b154:	6920      	ldr	r0, [r4, #16]
 800b156:	6803      	ldr	r3, [r0, #0]
 800b158:	2100      	movs	r1, #0
 800b15a:	69db      	ldr	r3, [r3, #28]
 800b15c:	4798      	blx	r3
 800b15e:	6766      	str	r6, [r4, #116]	@ 0x74
 800b160:	6823      	ldr	r3, [r4, #0]
 800b162:	4620      	mov	r0, r4
 800b164:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800b168:	4798      	blx	r3
 800b16a:	f004 fee9 	bl	800ff40 <_ZN8touchgfx11Application11getInstanceEv>
 800b16e:	6803      	ldr	r3, [r0, #0]
 800b170:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b172:	4798      	blx	r3
 800b174:	6823      	ldr	r3, [r4, #0]
 800b176:	4620      	mov	r0, r4
 800b178:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800b17c:	4798      	blx	r3
 800b17e:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800b182:	2b02      	cmp	r3, #2
 800b184:	d002      	beq.n	800b18c <_ZN8touchgfx3HAL4tickEv+0x168>
 800b186:	2001      	movs	r0, #1
 800b188:	f7f5 fd74 	bl	8000c74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b18c:	2300      	movs	r3, #0
 800b18e:	702b      	strb	r3, [r5, #0]
 800b190:	b004      	add	sp, #16
 800b192:	bd70      	pop	{r4, r5, r6, pc}
 800b194:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800b198:	4620      	mov	r0, r4
 800b19a:	4798      	blx	r3
 800b19c:	e7a6      	b.n	800b0ec <_ZN8touchgfx3HAL4tickEv+0xc8>
 800b19e:	2863      	cmp	r0, #99	@ 0x63
 800b1a0:	bfcb      	itete	gt
 800b1a2:	2300      	movgt	r3, #0
 800b1a4:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800b1a8:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800b1ac:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800b1b0:	e7d0      	b.n	800b154 <_ZN8touchgfx3HAL4tickEv+0x130>
 800b1b2:	bf00      	nop
 800b1b4:	20014044 	.word	0x20014044
 800b1b8:	20014045 	.word	0x20014045
 800b1bc:	05f5e100 	.word	0x05f5e100

0800b1c0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b1c0:	b510      	push	{r4, lr}
 800b1c2:	4604      	mov	r4, r0
 800b1c4:	f7f5 fed4 	bl	8000f70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800b1c8:	6863      	ldr	r3, [r4, #4]
 800b1ca:	2200      	movs	r2, #0
 800b1cc:	729a      	strb	r2, [r3, #10]
 800b1ce:	bd10      	pop	{r4, pc}

0800b1d0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b1d0:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800b1d2:	301c      	adds	r0, #28
 800b1d4:	f016 bb46 	b.w	8021864 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b1d8 <_ZN8touchgfx3HAL5touchEll>:
 800b1d8:	b530      	push	{r4, r5, lr}
 800b1da:	b087      	sub	sp, #28
 800b1dc:	4604      	mov	r4, r0
 800b1de:	a804      	add	r0, sp, #16
 800b1e0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b1e4:	f004 fc94 	bl	800fb10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b1e8:	9b04      	ldr	r3, [sp, #16]
 800b1ea:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b1ee:	a906      	add	r1, sp, #24
 800b1f0:	9b05      	ldr	r3, [sp, #20]
 800b1f2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b1f6:	a803      	add	r0, sp, #12
 800b1f8:	f004 fcdc 	bl	800fbb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b1fc:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800b200:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b204:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b208:	f104 001c 	add.w	r0, r4, #28
 800b20c:	b189      	cbz	r1, 800b232 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b20e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800b212:	9300      	str	r3, [sp, #0]
 800b214:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800b218:	4613      	mov	r3, r2
 800b21a:	462a      	mov	r2, r5
 800b21c:	f016 fb32 	bl	8021884 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b220:	b128      	cbz	r0, 800b22e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b222:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b226:	6623      	str	r3, [r4, #96]	@ 0x60
 800b228:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b22c:	6663      	str	r3, [r4, #100]	@ 0x64
 800b22e:	b007      	add	sp, #28
 800b230:	bd30      	pop	{r4, r5, pc}
 800b232:	f016 fb67 	bl	8021904 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b236:	2301      	movs	r3, #1
 800b238:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b23c:	e7f1      	b.n	800b222 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b23e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b23e:	b510      	push	{r4, lr}
 800b240:	2b00      	cmp	r3, #0
 800b242:	d046      	beq.n	800b2d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b244:	ea81 0002 	eor.w	r0, r1, r2
 800b248:	07c4      	lsls	r4, r0, #31
 800b24a:	d508      	bpl.n	800b25e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b24c:	440b      	add	r3, r1
 800b24e:	3a01      	subs	r2, #1
 800b250:	428b      	cmp	r3, r1
 800b252:	d93e      	bls.n	800b2d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b254:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b258:	f801 0b01 	strb.w	r0, [r1], #1
 800b25c:	e7f8      	b.n	800b250 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b25e:	07d0      	lsls	r0, r2, #31
 800b260:	bf42      	ittt	mi
 800b262:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b266:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b26a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b26e:	2b01      	cmp	r3, #1
 800b270:	d911      	bls.n	800b296 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b272:	ea81 0402 	eor.w	r4, r1, r2
 800b276:	07a4      	lsls	r4, r4, #30
 800b278:	4610      	mov	r0, r2
 800b27a:	d022      	beq.n	800b2c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b27c:	f023 0401 	bic.w	r4, r3, #1
 800b280:	440c      	add	r4, r1
 800b282:	428c      	cmp	r4, r1
 800b284:	4602      	mov	r2, r0
 800b286:	d904      	bls.n	800b292 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b288:	8812      	ldrh	r2, [r2, #0]
 800b28a:	f821 2b02 	strh.w	r2, [r1], #2
 800b28e:	3002      	adds	r0, #2
 800b290:	e7f7      	b.n	800b282 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b292:	f003 0301 	and.w	r3, r3, #1
 800b296:	f023 0003 	bic.w	r0, r3, #3
 800b29a:	4408      	add	r0, r1
 800b29c:	4288      	cmp	r0, r1
 800b29e:	4614      	mov	r4, r2
 800b2a0:	d904      	bls.n	800b2ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b2a2:	6824      	ldr	r4, [r4, #0]
 800b2a4:	f841 4b04 	str.w	r4, [r1], #4
 800b2a8:	3204      	adds	r2, #4
 800b2aa:	e7f7      	b.n	800b29c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b2ac:	f003 0303 	and.w	r3, r3, #3
 800b2b0:	440b      	add	r3, r1
 800b2b2:	3a01      	subs	r2, #1
 800b2b4:	428b      	cmp	r3, r1
 800b2b6:	d90c      	bls.n	800b2d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b2b8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b2bc:	f801 0b01 	strb.w	r0, [r1], #1
 800b2c0:	e7f8      	b.n	800b2b4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b2c2:	0790      	lsls	r0, r2, #30
 800b2c4:	d0e7      	beq.n	800b296 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2c6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b2ca:	f821 0b02 	strh.w	r0, [r1], #2
 800b2ce:	3b02      	subs	r3, #2
 800b2d0:	e7e1      	b.n	800b296 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2d2:	2001      	movs	r0, #1
 800b2d4:	bd10      	pop	{r4, pc}

0800b2d6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b2d6:	b510      	push	{r4, lr}
 800b2d8:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800b2dc:	4604      	mov	r4, r0
 800b2de:	b153      	cbz	r3, 800b2f6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b2e0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800b2e4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800b2e8:	2101      	movs	r1, #1
 800b2ea:	301c      	adds	r0, #28
 800b2ec:	f016 fb0a 	bl	8021904 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b2f0:	2300      	movs	r3, #0
 800b2f2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b2f6:	bd10      	pop	{r4, pc}

0800b2f8 <_ZN8touchgfx8Drawable5setXYEss>:
 800b2f8:	b570      	push	{r4, r5, r6, lr}
 800b2fa:	6803      	ldr	r3, [r0, #0]
 800b2fc:	4604      	mov	r4, r0
 800b2fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b300:	4615      	mov	r5, r2
 800b302:	4798      	blx	r3
 800b304:	6823      	ldr	r3, [r4, #0]
 800b306:	4629      	mov	r1, r5
 800b308:	4620      	mov	r0, r4
 800b30a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b30c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b310:	4718      	bx	r3
	...

0800b314 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b314:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b318:	b085      	sub	sp, #20
 800b31a:	ad04      	add	r5, sp, #16
 800b31c:	4604      	mov	r4, r0
 800b31e:	2000      	movs	r0, #0
 800b320:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b324:	69a0      	ldr	r0, [r4, #24]
 800b326:	6806      	ldr	r6, [r0, #0]
 800b328:	9501      	str	r5, [sp, #4]
 800b32a:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800b32e:	9500      	str	r5, [sp, #0]
 800b330:	6835      	ldr	r5, [r6, #0]
 800b332:	4699      	mov	r9, r3
 800b334:	460f      	mov	r7, r1
 800b336:	4690      	mov	r8, r2
 800b338:	47a8      	blx	r5
 800b33a:	4d10      	ldr	r5, [pc, #64]	@ (800b37c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b33c:	4606      	mov	r6, r0
 800b33e:	f8a5 9000 	strh.w	r9, [r5]
 800b342:	f7f7 fe07 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 800b346:	6803      	ldr	r3, [r0, #0]
 800b348:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b34a:	4798      	blx	r3
 800b34c:	b128      	cbz	r0, 800b35a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b34e:	2801      	cmp	r0, #1
 800b350:	d00b      	beq.n	800b36a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b352:	4630      	mov	r0, r6
 800b354:	b005      	add	sp, #20
 800b356:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b35a:	882b      	ldrh	r3, [r5, #0]
 800b35c:	fb08 7203 	mla	r2, r8, r3, r7
 800b360:	9b03      	ldr	r3, [sp, #12]
 800b362:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b366:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800b368:	e7f3      	b.n	800b352 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b36a:	882a      	ldrh	r2, [r5, #0]
 800b36c:	9b03      	ldr	r3, [sp, #12]
 800b36e:	fb08 7202 	mla	r2, r8, r2, r7
 800b372:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b376:	1a9a      	subs	r2, r3, r2
 800b378:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800b37a:	e7ea      	b.n	800b352 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b37c:	20014038 	.word	0x20014038

0800b380 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800b380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b382:	4b15      	ldr	r3, [pc, #84]	@ (800b3d8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800b384:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800b388:	881b      	ldrh	r3, [r3, #0]
 800b38a:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800b38c:	fb93 f4f4 	sdiv	r4, r3, r4
 800b390:	460f      	mov	r7, r1
 800b392:	4606      	mov	r6, r0
 800b394:	f7f7 fdde 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 800b398:	6803      	ldr	r3, [r0, #0]
 800b39a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b39c:	4798      	blx	r3
 800b39e:	2801      	cmp	r0, #1
 800b3a0:	d00b      	beq.n	800b3ba <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800b3a2:	d303      	bcc.n	800b3ac <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800b3a4:	2802      	cmp	r0, #2
 800b3a6:	d010      	beq.n	800b3ca <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800b3a8:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800b3aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b3ac:	4b0b      	ldr	r3, [pc, #44]	@ (800b3dc <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b3ae:	8819      	ldrh	r1, [r3, #0]
 800b3b0:	437c      	muls	r4, r7
 800b3b2:	434c      	muls	r4, r1
 800b3b4:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800b3b8:	e7f6      	b.n	800b3a8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b3ba:	4b08      	ldr	r3, [pc, #32]	@ (800b3dc <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b3bc:	8819      	ldrh	r1, [r3, #0]
 800b3be:	437c      	muls	r4, r7
 800b3c0:	434c      	muls	r4, r1
 800b3c2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800b3c6:	1b2d      	subs	r5, r5, r4
 800b3c8:	e7ee      	b.n	800b3a8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b3ca:	4b04      	ldr	r3, [pc, #16]	@ (800b3dc <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b3cc:	8819      	ldrh	r1, [r3, #0]
 800b3ce:	437c      	muls	r4, r7
 800b3d0:	434c      	muls	r4, r1
 800b3d2:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800b3d6:	e7e7      	b.n	800b3a8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b3d8:	2001403a 	.word	0x2001403a
 800b3dc:	20014038 	.word	0x20014038

0800b3e0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b3e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b3e2:	b08b      	sub	sp, #44	@ 0x2c
 800b3e4:	4617      	mov	r7, r2
 800b3e6:	4604      	mov	r4, r0
 800b3e8:	460e      	mov	r6, r1
 800b3ea:	461d      	mov	r5, r3
 800b3ec:	f7f7 fdb2 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 800b3f0:	6803      	ldr	r3, [r0, #0]
 800b3f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b3f4:	4798      	blx	r3
 800b3f6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b3fa:	9007      	str	r0, [sp, #28]
 800b3fc:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b400:	4b0d      	ldr	r3, [pc, #52]	@ (800b438 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b402:	6822      	ldr	r2, [r4, #0]
 800b404:	881b      	ldrh	r3, [r3, #0]
 800b406:	9306      	str	r3, [sp, #24]
 800b408:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b40c:	9305      	str	r3, [sp, #20]
 800b40e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800b412:	9304      	str	r3, [sp, #16]
 800b414:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b418:	9303      	str	r3, [sp, #12]
 800b41a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b41e:	9302      	str	r3, [sp, #8]
 800b420:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b424:	e9cd 5300 	strd	r5, r3, [sp]
 800b428:	4631      	mov	r1, r6
 800b42a:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800b42c:	463b      	mov	r3, r7
 800b42e:	2200      	movs	r2, #0
 800b430:	4620      	mov	r0, r4
 800b432:	47a8      	blx	r5
 800b434:	b00b      	add	sp, #44	@ 0x2c
 800b436:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b438:	20014038 	.word	0x20014038

0800b43c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b43c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b440:	4698      	mov	r8, r3
 800b442:	6803      	ldr	r3, [r0, #0]
 800b444:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800b446:	4b15      	ldr	r3, [pc, #84]	@ (800b49c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b448:	b08b      	sub	sp, #44	@ 0x2c
 800b44a:	4617      	mov	r7, r2
 800b44c:	f8b3 9000 	ldrh.w	r9, [r3]
 800b450:	460e      	mov	r6, r1
 800b452:	4604      	mov	r4, r0
 800b454:	f7f7 fd7e 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 800b458:	6803      	ldr	r3, [r0, #0]
 800b45a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b45c:	4798      	blx	r3
 800b45e:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b462:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b466:	2302      	movs	r3, #2
 800b468:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b46c:	2301      	movs	r3, #1
 800b46e:	9305      	str	r3, [sp, #20]
 800b470:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b474:	9304      	str	r3, [sp, #16]
 800b476:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b47a:	9303      	str	r3, [sp, #12]
 800b47c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b480:	9302      	str	r3, [sp, #8]
 800b482:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b486:	2200      	movs	r2, #0
 800b488:	e9cd 8300 	strd	r8, r3, [sp]
 800b48c:	4631      	mov	r1, r6
 800b48e:	463b      	mov	r3, r7
 800b490:	4620      	mov	r0, r4
 800b492:	47a8      	blx	r5
 800b494:	b00b      	add	sp, #44	@ 0x2c
 800b496:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b49a:	bf00      	nop
 800b49c:	20014038 	.word	0x20014038

0800b4a0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b4a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b4a4:	4698      	mov	r8, r3
 800b4a6:	6803      	ldr	r3, [r0, #0]
 800b4a8:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800b4aa:	4b11      	ldr	r3, [pc, #68]	@ (800b4f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b4ac:	b087      	sub	sp, #28
 800b4ae:	f8b3 9000 	ldrh.w	r9, [r3]
 800b4b2:	460e      	mov	r6, r1
 800b4b4:	4617      	mov	r7, r2
 800b4b6:	4604      	mov	r4, r0
 800b4b8:	f7f7 fd4c 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 800b4bc:	6803      	ldr	r3, [r0, #0]
 800b4be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4c0:	4798      	blx	r3
 800b4c2:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800b4c6:	f8cd 900c 	str.w	r9, [sp, #12]
 800b4ca:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b4ce:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800b4d2:	9302      	str	r3, [sp, #8]
 800b4d4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800b4d8:	9301      	str	r3, [sp, #4]
 800b4da:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800b4de:	9300      	str	r3, [sp, #0]
 800b4e0:	463a      	mov	r2, r7
 800b4e2:	4643      	mov	r3, r8
 800b4e4:	4631      	mov	r1, r6
 800b4e6:	4620      	mov	r0, r4
 800b4e8:	47a8      	blx	r5
 800b4ea:	b007      	add	sp, #28
 800b4ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b4f0:	20014038 	.word	0x20014038

0800b4f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b4f8:	4604      	mov	r4, r0
 800b4fa:	b08f      	sub	sp, #60	@ 0x3c
 800b4fc:	4610      	mov	r0, r2
 800b4fe:	460d      	mov	r5, r1
 800b500:	4691      	mov	r9, r2
 800b502:	461e      	mov	r6, r3
 800b504:	f007 fe9e 	bl	8013244 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b508:	2800      	cmp	r0, #0
 800b50a:	f000 809d 	beq.w	800b648 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b50e:	6823      	ldr	r3, [r4, #0]
 800b510:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800b6ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b514:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b516:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800b6b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b51a:	4f61      	ldr	r7, [pc, #388]	@ (800b6a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b51c:	4620      	mov	r0, r4
 800b51e:	4798      	blx	r3
 800b520:	6823      	ldr	r3, [r4, #0]
 800b522:	4620      	mov	r0, r4
 800b524:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b526:	4798      	blx	r3
 800b528:	f8bb 3000 	ldrh.w	r3, [fp]
 800b52c:	9301      	str	r3, [sp, #4]
 800b52e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800b532:	f8ba 3000 	ldrh.w	r3, [sl]
 800b536:	9302      	str	r3, [sp, #8]
 800b538:	883b      	ldrh	r3, [r7, #0]
 800b53a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b53e:	9303      	str	r3, [sp, #12]
 800b540:	4b58      	ldr	r3, [pc, #352]	@ (800b6a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b542:	9305      	str	r3, [sp, #20]
 800b544:	881a      	ldrh	r2, [r3, #0]
 800b546:	9204      	str	r2, [sp, #16]
 800b548:	4640      	mov	r0, r8
 800b54a:	f007 ff0f 	bl	801336c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b54e:	8038      	strh	r0, [r7, #0]
 800b550:	4640      	mov	r0, r8
 800b552:	f007 ff3f 	bl	80133d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b556:	9b05      	ldr	r3, [sp, #20]
 800b558:	b280      	uxth	r0, r0
 800b55a:	8018      	strh	r0, [r3, #0]
 800b55c:	4b52      	ldr	r3, [pc, #328]	@ (800b6a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b55e:	781b      	ldrb	r3, [r3, #0]
 800b560:	2b00      	cmp	r3, #0
 800b562:	d174      	bne.n	800b64e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b564:	883b      	ldrh	r3, [r7, #0]
 800b566:	f8ab 3000 	strh.w	r3, [fp]
 800b56a:	f8aa 0000 	strh.w	r0, [sl]
 800b56e:	4648      	mov	r0, r9
 800b570:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b574:	f007 fe66 	bl	8013244 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b578:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b57c:	2200      	movs	r2, #0
 800b57e:	4611      	mov	r1, r2
 800b580:	4628      	mov	r0, r5
 800b582:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b586:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b58a:	f7ff feb5 	bl	800b2f8 <_ZN8touchgfx8Drawable5setXYEss>
 800b58e:	2301      	movs	r3, #1
 800b590:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b594:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b598:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b59c:	2b00      	cmp	r3, #0
 800b59e:	dd5c      	ble.n	800b65a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b5a0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b5a4:	2b00      	cmp	r3, #0
 800b5a6:	dd58      	ble.n	800b65a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b5a8:	462a      	mov	r2, r5
 800b5aa:	ab0a      	add	r3, sp, #40	@ 0x28
 800b5ac:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b5b0:	6851      	ldr	r1, [r2, #4]
 800b5b2:	c303      	stmia	r3!, {r0, r1}
 800b5b4:	4631      	mov	r1, r6
 800b5b6:	a80a      	add	r0, sp, #40	@ 0x28
 800b5b8:	f7ff fbba 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 800b5bc:	4b38      	ldr	r3, [pc, #224]	@ (800b6a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b5be:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b5c2:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b5c6:	2100      	movs	r1, #0
 800b5c8:	aa0a      	add	r2, sp, #40	@ 0x28
 800b5ca:	4b36      	ldr	r3, [pc, #216]	@ (800b6a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b5cc:	910c      	str	r1, [sp, #48]	@ 0x30
 800b5ce:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b5d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b5d6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b5da:	ab08      	add	r3, sp, #32
 800b5dc:	e883 0003 	stmia.w	r3, {r0, r1}
 800b5e0:	4618      	mov	r0, r3
 800b5e2:	a90c      	add	r1, sp, #48	@ 0x30
 800b5e4:	f7ff fba4 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 800b5e8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b5ea:	2b00      	cmp	r3, #0
 800b5ec:	d13c      	bne.n	800b668 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b5ee:	2000      	movs	r0, #0
 800b5f0:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b5f4:	2600      	movs	r6, #0
 800b5f6:	682a      	ldr	r2, [r5, #0]
 800b5f8:	696b      	ldr	r3, [r5, #20]
 800b5fa:	616e      	str	r6, [r5, #20]
 800b5fc:	9305      	str	r3, [sp, #20]
 800b5fe:	6892      	ldr	r2, [r2, #8]
 800b600:	a908      	add	r1, sp, #32
 800b602:	4628      	mov	r0, r5
 800b604:	4790      	blx	r2
 800b606:	9b05      	ldr	r3, [sp, #20]
 800b608:	616b      	str	r3, [r5, #20]
 800b60a:	4652      	mov	r2, sl
 800b60c:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b610:	4649      	mov	r1, r9
 800b612:	4628      	mov	r0, r5
 800b614:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b618:	f7ff fe6e 	bl	800b2f8 <_ZN8touchgfx8Drawable5setXYEss>
 800b61c:	4b23      	ldr	r3, [pc, #140]	@ (800b6ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b61e:	9a01      	ldr	r2, [sp, #4]
 800b620:	801a      	strh	r2, [r3, #0]
 800b622:	4b23      	ldr	r3, [pc, #140]	@ (800b6b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b624:	9a02      	ldr	r2, [sp, #8]
 800b626:	801a      	strh	r2, [r3, #0]
 800b628:	4b1d      	ldr	r3, [pc, #116]	@ (800b6a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b62a:	9a03      	ldr	r2, [sp, #12]
 800b62c:	801a      	strh	r2, [r3, #0]
 800b62e:	4b1d      	ldr	r3, [pc, #116]	@ (800b6a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b630:	9a04      	ldr	r2, [sp, #16]
 800b632:	801a      	strh	r2, [r3, #0]
 800b634:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b638:	6823      	ldr	r3, [r4, #0]
 800b63a:	4620      	mov	r0, r4
 800b63c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b63e:	4798      	blx	r3
 800b640:	6823      	ldr	r3, [r4, #0]
 800b642:	4620      	mov	r0, r4
 800b644:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b646:	4798      	blx	r3
 800b648:	b00f      	add	sp, #60	@ 0x3c
 800b64a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b64e:	883b      	ldrh	r3, [r7, #0]
 800b650:	f8ab 0000 	strh.w	r0, [fp]
 800b654:	f8aa 3000 	strh.w	r3, [sl]
 800b658:	e789      	b.n	800b56e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b65a:	462a      	mov	r2, r5
 800b65c:	ab0a      	add	r3, sp, #40	@ 0x28
 800b65e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b662:	6851      	ldr	r1, [r2, #4]
 800b664:	c303      	stmia	r3!, {r0, r1}
 800b666:	e7a9      	b.n	800b5bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b668:	a807      	add	r0, sp, #28
 800b66a:	f007 fff5 	bl	8013658 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b66e:	4606      	mov	r6, r0
 800b670:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b672:	6803      	ldr	r3, [r0, #0]
 800b674:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b676:	4798      	blx	r3
 800b678:	4286      	cmp	r6, r0
 800b67a:	d1b8      	bne.n	800b5ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b67c:	f7f7 fc6a 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 800b680:	6803      	ldr	r3, [r0, #0]
 800b682:	4606      	mov	r6, r0
 800b684:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b686:	9305      	str	r3, [sp, #20]
 800b688:	a807      	add	r0, sp, #28
 800b68a:	f007 ffe5 	bl	8013658 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b68e:	9b05      	ldr	r3, [sp, #20]
 800b690:	4601      	mov	r1, r0
 800b692:	4630      	mov	r0, r6
 800b694:	4798      	blx	r3
 800b696:	f080 0001 	eor.w	r0, r0, #1
 800b69a:	b2c0      	uxtb	r0, r0
 800b69c:	e7a8      	b.n	800b5f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b69e:	bf00      	nop
 800b6a0:	20014032 	.word	0x20014032
 800b6a4:	20014034 	.word	0x20014034
 800b6a8:	20014036 	.word	0x20014036
 800b6ac:	20014038 	.word	0x20014038
 800b6b0:	2001403a 	.word	0x2001403a

0800b6b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b6b4:	b510      	push	{r4, lr}
 800b6b6:	4b07      	ldr	r3, [pc, #28]	@ (800b6d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b6b8:	781b      	ldrb	r3, [r3, #0]
 800b6ba:	4604      	mov	r4, r0
 800b6bc:	b13b      	cbz	r3, 800b6ce <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b6be:	6803      	ldr	r3, [r0, #0]
 800b6c0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b6c2:	4798      	blx	r3
 800b6c4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b6c6:	4283      	cmp	r3, r0
 800b6c8:	d101      	bne.n	800b6ce <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b6ca:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b6cc:	bd10      	pop	{r4, pc}
 800b6ce:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b6d0:	e7fc      	b.n	800b6cc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b6d2:	bf00      	nop
 800b6d4:	2001403c 	.word	0x2001403c

0800b6d8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b6d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b6dc:	b08a      	sub	sp, #40	@ 0x28
 800b6de:	461d      	mov	r5, r3
 800b6e0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b6e4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b6e8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b6ec:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b6f0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b6f4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b6f8:	2400      	movs	r4, #0
 800b6fa:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b6fe:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b702:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b706:	4690      	mov	r8, r2
 800b708:	4607      	mov	r7, r0
 800b70a:	9404      	str	r4, [sp, #16]
 800b70c:	f88d 4020 	strb.w	r4, [sp, #32]
 800b710:	f7ff ffd0 	bl	800b6b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b714:	fb06 8505 	mla	r5, r6, r5, r8
 800b718:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b71c:	6878      	ldr	r0, [r7, #4]
 800b71e:	9505      	str	r5, [sp, #20]
 800b720:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b724:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b728:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b72c:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b730:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b734:	6803      	ldr	r3, [r0, #0]
 800b736:	a901      	add	r1, sp, #4
 800b738:	685b      	ldr	r3, [r3, #4]
 800b73a:	4798      	blx	r3
 800b73c:	b00a      	add	sp, #40	@ 0x28
 800b73e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b742 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b742:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b746:	b08b      	sub	sp, #44	@ 0x2c
 800b748:	2400      	movs	r4, #0
 800b74a:	461d      	mov	r5, r3
 800b74c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b750:	4688      	mov	r8, r1
 800b752:	4691      	mov	r9, r2
 800b754:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b758:	9404      	str	r4, [sp, #16]
 800b75a:	4607      	mov	r7, r0
 800b75c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b760:	f7ff ffa8 	bl	800b6b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b764:	fb06 9505 	mla	r5, r6, r5, r9
 800b768:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b76c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b770:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b774:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b778:	6878      	ldr	r0, [r7, #4]
 800b77a:	9505      	str	r5, [sp, #20]
 800b77c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b780:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b784:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b788:	f8cd 8010 	str.w	r8, [sp, #16]
 800b78c:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b790:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b794:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b798:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b79c:	6803      	ldr	r3, [r0, #0]
 800b79e:	a901      	add	r1, sp, #4
 800b7a0:	685b      	ldr	r3, [r3, #4]
 800b7a2:	4798      	blx	r3
 800b7a4:	b00b      	add	sp, #44	@ 0x2c
 800b7a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b7ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b7ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7b0:	b08a      	sub	sp, #40	@ 0x28
 800b7b2:	4698      	mov	r8, r3
 800b7b4:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b7b8:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b7bc:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b7c0:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b7c4:	2300      	movs	r3, #0
 800b7c6:	2d0b      	cmp	r5, #11
 800b7c8:	4606      	mov	r6, r0
 800b7ca:	9304      	str	r3, [sp, #16]
 800b7cc:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b7d0:	d138      	bne.n	800b844 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b7d2:	2380      	movs	r3, #128	@ 0x80
 800b7d4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b7d8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b7dc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b7e0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b7e4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b7e8:	f88d 0020 	strb.w	r0, [sp, #32]
 800b7ec:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b7f0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b7f4:	4630      	mov	r0, r6
 800b7f6:	9203      	str	r2, [sp, #12]
 800b7f8:	f7ff ff5c 	bl	800b6b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7fc:	2c0b      	cmp	r4, #11
 800b7fe:	bf98      	it	ls
 800b800:	4b1b      	ldrls	r3, [pc, #108]	@ (800b870 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b802:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b806:	bf98      	it	ls
 800b808:	5d19      	ldrbls	r1, [r3, r4]
 800b80a:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b80e:	bf88      	it	hi
 800b810:	2100      	movhi	r1, #0
 800b812:	fb02 8307 	mla	r3, r2, r7, r8
 800b816:	10c9      	asrs	r1, r1, #3
 800b818:	fb01 0003 	mla	r0, r1, r3, r0
 800b81c:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b820:	9005      	str	r0, [sp, #20]
 800b822:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b826:	6870      	ldr	r0, [r6, #4]
 800b828:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b82c:	2300      	movs	r3, #0
 800b82e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b832:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b836:	6803      	ldr	r3, [r0, #0]
 800b838:	a901      	add	r1, sp, #4
 800b83a:	685b      	ldr	r3, [r3, #4]
 800b83c:	4798      	blx	r3
 800b83e:	b00a      	add	sp, #40	@ 0x28
 800b840:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b844:	2d02      	cmp	r5, #2
 800b846:	d109      	bne.n	800b85c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b848:	28ff      	cmp	r0, #255	@ 0xff
 800b84a:	d105      	bne.n	800b858 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b84c:	f1bc 0f00 	cmp.w	ip, #0
 800b850:	bf14      	ite	ne
 800b852:	2340      	movne	r3, #64	@ 0x40
 800b854:	2320      	moveq	r3, #32
 800b856:	e7bd      	b.n	800b7d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b858:	2340      	movs	r3, #64	@ 0x40
 800b85a:	e7bb      	b.n	800b7d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b85c:	28ff      	cmp	r0, #255	@ 0xff
 800b85e:	d105      	bne.n	800b86c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b860:	f1bc 0f00 	cmp.w	ip, #0
 800b864:	bf14      	ite	ne
 800b866:	2304      	movne	r3, #4
 800b868:	2301      	moveq	r3, #1
 800b86a:	e7b3      	b.n	800b7d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b86c:	2304      	movs	r3, #4
 800b86e:	e7b1      	b.n	800b7d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b870:	08025a58 	.word	0x08025a58

0800b874 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b878:	b08b      	sub	sp, #44	@ 0x2c
 800b87a:	461d      	mov	r5, r3
 800b87c:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b880:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b884:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b888:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b88c:	bf14      	ite	ne
 800b88e:	2308      	movne	r3, #8
 800b890:	2302      	moveq	r3, #2
 800b892:	2400      	movs	r4, #0
 800b894:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b898:	4688      	mov	r8, r1
 800b89a:	4693      	mov	fp, r2
 800b89c:	9404      	str	r4, [sp, #16]
 800b89e:	4607      	mov	r7, r0
 800b8a0:	f7ff ff08 	bl	800b6b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b8a4:	2e0b      	cmp	r6, #11
 800b8a6:	bf98      	it	ls
 800b8a8:	4b15      	ldrls	r3, [pc, #84]	@ (800b900 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b8aa:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b8ae:	bf98      	it	ls
 800b8b0:	5d9c      	ldrbls	r4, [r3, r6]
 800b8b2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b8b6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b8ba:	fb05 b50a 	mla	r5, r5, sl, fp
 800b8be:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b8c2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b8c6:	10e4      	asrs	r4, r4, #3
 800b8c8:	fb04 0405 	mla	r4, r4, r5, r0
 800b8cc:	2300      	movs	r3, #0
 800b8ce:	6878      	ldr	r0, [r7, #4]
 800b8d0:	9405      	str	r4, [sp, #20]
 800b8d2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b8d6:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b8da:	f8cd 8010 	str.w	r8, [sp, #16]
 800b8de:	f88d 9020 	strb.w	r9, [sp, #32]
 800b8e2:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b8e6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b8ea:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b8ee:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b8f2:	6803      	ldr	r3, [r0, #0]
 800b8f4:	a901      	add	r1, sp, #4
 800b8f6:	685b      	ldr	r3, [r3, #4]
 800b8f8:	4798      	blx	r3
 800b8fa:	b00b      	add	sp, #44	@ 0x2c
 800b8fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b900:	08025a58 	.word	0x08025a58

0800b904 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b908:	461e      	mov	r6, r3
 800b90a:	4b0a      	ldr	r3, [pc, #40]	@ (800b934 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b90c:	460f      	mov	r7, r1
 800b90e:	881d      	ldrh	r5, [r3, #0]
 800b910:	4690      	mov	r8, r2
 800b912:	f7f7 fb1f 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 800b916:	6803      	ldr	r3, [r0, #0]
 800b918:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b91a:	4798      	blx	r3
 800b91c:	280b      	cmp	r0, #11
 800b91e:	bf9a      	itte	ls
 800b920:	4b05      	ldrls	r3, [pc, #20]	@ (800b938 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b922:	5c1c      	ldrbls	r4, [r3, r0]
 800b924:	2400      	movhi	r4, #0
 800b926:	fb08 7005 	mla	r0, r8, r5, r7
 800b92a:	10e4      	asrs	r4, r4, #3
 800b92c:	fb04 6000 	mla	r0, r4, r0, r6
 800b930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b934:	20014038 	.word	0x20014038
 800b938:	08025a58 	.word	0x08025a58

0800b93c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b93c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b93e:	b08b      	sub	sp, #44	@ 0x2c
 800b940:	461f      	mov	r7, r3
 800b942:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b946:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b94a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b94e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b952:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b956:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b95a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b95e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b962:	2500      	movs	r5, #0
 800b964:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b968:	f88d 3020 	strb.w	r3, [sp, #32]
 800b96c:	4604      	mov	r4, r0
 800b96e:	4616      	mov	r6, r2
 800b970:	9504      	str	r5, [sp, #16]
 800b972:	f7ff fe9f 	bl	800b6b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b976:	463a      	mov	r2, r7
 800b978:	4631      	mov	r1, r6
 800b97a:	4603      	mov	r3, r0
 800b97c:	4620      	mov	r0, r4
 800b97e:	f7ff ffc1 	bl	800b904 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b982:	4b0e      	ldr	r3, [pc, #56]	@ (800b9bc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b984:	9005      	str	r0, [sp, #20]
 800b986:	881b      	ldrh	r3, [r3, #0]
 800b988:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b98c:	f7f7 fae2 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 800b990:	6803      	ldr	r3, [r0, #0]
 800b992:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b994:	4798      	blx	r3
 800b996:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b998:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b99c:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b9a0:	9304      	str	r3, [sp, #16]
 800b9a2:	6860      	ldr	r0, [r4, #4]
 800b9a4:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b9a8:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b9ac:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b9b0:	6803      	ldr	r3, [r0, #0]
 800b9b2:	a901      	add	r1, sp, #4
 800b9b4:	685b      	ldr	r3, [r3, #4]
 800b9b6:	4798      	blx	r3
 800b9b8:	b00b      	add	sp, #44	@ 0x2c
 800b9ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9bc:	20014038 	.word	0x20014038

0800b9c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b9c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b9c2:	b08d      	sub	sp, #52	@ 0x34
 800b9c4:	466b      	mov	r3, sp
 800b9c6:	e883 0006 	stmia.w	r3, {r1, r2}
 800b9ca:	2300      	movs	r3, #0
 800b9cc:	9306      	str	r3, [sp, #24]
 800b9ce:	6803      	ldr	r3, [r0, #0]
 800b9d0:	f8bd 6000 	ldrh.w	r6, [sp]
 800b9d4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b9d6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b9da:	2501      	movs	r5, #1
 800b9dc:	9503      	str	r5, [sp, #12]
 800b9de:	4604      	mov	r4, r0
 800b9e0:	4798      	blx	r3
 800b9e2:	463a      	mov	r2, r7
 800b9e4:	4631      	mov	r1, r6
 800b9e6:	4603      	mov	r3, r0
 800b9e8:	4620      	mov	r0, r4
 800b9ea:	f7ff ff8b 	bl	800b904 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b9ee:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800b9f0:	9307      	str	r3, [sp, #28]
 800b9f2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b9f6:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b9fa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b9fe:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800ba02:	4b0f      	ldr	r3, [pc, #60]	@ (800ba40 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800ba04:	9004      	str	r0, [sp, #16]
 800ba06:	881b      	ldrh	r3, [r3, #0]
 800ba08:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800ba0c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800ba10:	f7f7 faa0 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 800ba14:	6803      	ldr	r3, [r0, #0]
 800ba16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ba18:	4798      	blx	r3
 800ba1a:	23ff      	movs	r3, #255	@ 0xff
 800ba1c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800ba20:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800ba24:	6860      	ldr	r0, [r4, #4]
 800ba26:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800ba2a:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800ba2e:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800ba32:	6803      	ldr	r3, [r0, #0]
 800ba34:	a903      	add	r1, sp, #12
 800ba36:	685b      	ldr	r3, [r3, #4]
 800ba38:	4798      	blx	r3
 800ba3a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800ba3c:	b00d      	add	sp, #52	@ 0x34
 800ba3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba40:	20014038 	.word	0x20014038

0800ba44 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800ba44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba48:	b08c      	sub	sp, #48	@ 0x30
 800ba4a:	461e      	mov	r6, r3
 800ba4c:	466d      	mov	r5, sp
 800ba4e:	2300      	movs	r3, #0
 800ba50:	e885 0006 	stmia.w	r5, {r1, r2}
 800ba54:	9306      	str	r3, [sp, #24]
 800ba56:	6803      	ldr	r3, [r0, #0]
 800ba58:	f8bd 7000 	ldrh.w	r7, [sp]
 800ba5c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ba5e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800ba62:	2501      	movs	r5, #1
 800ba64:	9503      	str	r5, [sp, #12]
 800ba66:	4604      	mov	r4, r0
 800ba68:	4798      	blx	r3
 800ba6a:	4642      	mov	r2, r8
 800ba6c:	4639      	mov	r1, r7
 800ba6e:	4603      	mov	r3, r0
 800ba70:	4620      	mov	r0, r4
 800ba72:	f7ff ff47 	bl	800b904 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba76:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ba7a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ba7e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ba82:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800ba86:	4b11      	ldr	r3, [pc, #68]	@ (800bacc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800ba88:	9004      	str	r0, [sp, #16]
 800ba8a:	881b      	ldrh	r3, [r3, #0]
 800ba8c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800ba90:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800ba92:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800ba96:	9607      	str	r6, [sp, #28]
 800ba98:	f7f7 fa5c 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 800ba9c:	6803      	ldr	r3, [r0, #0]
 800ba9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800baa0:	4798      	blx	r3
 800baa2:	23ff      	movs	r3, #255	@ 0xff
 800baa4:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800baa8:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800baac:	6860      	ldr	r0, [r4, #4]
 800baae:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800bab2:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800bab6:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800baba:	6803      	ldr	r3, [r0, #0]
 800babc:	a903      	add	r1, sp, #12
 800babe:	685b      	ldr	r3, [r3, #4]
 800bac0:	4798      	blx	r3
 800bac2:	4630      	mov	r0, r6
 800bac4:	b00c      	add	sp, #48	@ 0x30
 800bac6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800baca:	bf00      	nop
 800bacc:	20014038 	.word	0x20014038

0800bad0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800bad0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bad2:	b085      	sub	sp, #20
 800bad4:	ac02      	add	r4, sp, #8
 800bad6:	e884 0006 	stmia.w	r4, {r1, r2}
 800bada:	4605      	mov	r5, r0
 800badc:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800bae0:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800bae4:	f7ff fde6 	bl	800b6b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bae8:	463a      	mov	r2, r7
 800baea:	4603      	mov	r3, r0
 800baec:	4631      	mov	r1, r6
 800baee:	4628      	mov	r0, r5
 800baf0:	f7ff ff08 	bl	800b904 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800baf4:	4a05      	ldr	r2, [pc, #20]	@ (800bb0c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800baf6:	682b      	ldr	r3, [r5, #0]
 800baf8:	8812      	ldrh	r2, [r2, #0]
 800bafa:	9200      	str	r2, [sp, #0]
 800bafc:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800bafe:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bb02:	4603      	mov	r3, r0
 800bb04:	4628      	mov	r0, r5
 800bb06:	47b0      	blx	r6
 800bb08:	b005      	add	sp, #20
 800bb0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb0c:	20014038 	.word	0x20014038

0800bb10 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bb10:	b570      	push	{r4, r5, r6, lr}
 800bb12:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800bb16:	4604      	mov	r4, r0
 800bb18:	b19b      	cbz	r3, 800bb42 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bb1a:	2002      	movs	r0, #2
 800bb1c:	f7f5 f8d4 	bl	8000cc8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bb20:	2300      	movs	r3, #0
 800bb22:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800bb26:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800bb2a:	6823      	ldr	r3, [r4, #0]
 800bb2c:	4620      	mov	r0, r4
 800bb2e:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800bb32:	f7ff fdbf 	bl	800b6b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb36:	462b      	mov	r3, r5
 800bb38:	4601      	mov	r1, r0
 800bb3a:	4620      	mov	r0, r4
 800bb3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb40:	4718      	bx	r3
 800bb42:	bd70      	pop	{r4, r5, r6, pc}

0800bb44 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bb44:	b538      	push	{r3, r4, r5, lr}
 800bb46:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800bb4a:	428b      	cmp	r3, r1
 800bb4c:	4604      	mov	r4, r0
 800bb4e:	460d      	mov	r5, r1
 800bb50:	d006      	beq.n	800bb60 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bb52:	6803      	ldr	r3, [r0, #0]
 800bb54:	b929      	cbnz	r1, 800bb62 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bb56:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800bb5a:	4798      	blx	r3
 800bb5c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800bb60:	bd38      	pop	{r3, r4, r5, pc}
 800bb62:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800bb66:	e7f8      	b.n	800bb5a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bb68 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bb68:	b510      	push	{r4, lr}
 800bb6a:	4b0c      	ldr	r3, [pc, #48]	@ (800bb9c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800bb6c:	781b      	ldrb	r3, [r3, #0]
 800bb6e:	4604      	mov	r4, r0
 800bb70:	b953      	cbnz	r3, 800bb88 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bb72:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800bb76:	b93b      	cbnz	r3, 800bb88 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bb78:	6840      	ldr	r0, [r0, #4]
 800bb7a:	f000 f92b 	bl	800bdd4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bb7e:	b118      	cbz	r0, 800bb88 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bb80:	6862      	ldr	r2, [r4, #4]
 800bb82:	7a53      	ldrb	r3, [r2, #9]
 800bb84:	2b00      	cmp	r3, #0
 800bb86:	d0fc      	beq.n	800bb82 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800bb88:	f7f5 f9ea 	bl	8000f60 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bb8c:	4620      	mov	r0, r4
 800bb8e:	2100      	movs	r1, #0
 800bb90:	f7ff ffd8 	bl	800bb44 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bb94:	4620      	mov	r0, r4
 800bb96:	f7ff fd8d 	bl	800b6b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb9a:	bd10      	pop	{r4, pc}
 800bb9c:	2001403c 	.word	0x2001403c

0800bba0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bba0:	b570      	push	{r4, r5, r6, lr}
 800bba2:	4604      	mov	r4, r0
 800bba4:	6803      	ldr	r3, [r0, #0]
 800bba6:	b919      	cbnz	r1, 800bbb0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bba8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bbaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbae:	4718      	bx	r3
 800bbb0:	2200      	movs	r2, #0
 800bbb2:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800bbb6:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800bbba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bbbc:	4798      	blx	r3
 800bbbe:	6863      	ldr	r3, [r4, #4]
 800bbc0:	2101      	movs	r1, #1
 800bbc2:	4605      	mov	r5, r0
 800bbc4:	7299      	strb	r1, [r3, #10]
 800bbc6:	4620      	mov	r0, r4
 800bbc8:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800bbcc:	f7ff ffba 	bl	800bb44 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bbd0:	4628      	mov	r0, r5
 800bbd2:	bd70      	pop	{r4, r5, r6, pc}

0800bbd4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bbd4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bbd8:	1a13      	subs	r3, r2, r0
 800bbda:	4258      	negs	r0, r3
 800bbdc:	4158      	adcs	r0, r3
 800bbde:	4770      	bx	lr

0800bbe0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bbe0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bbe4:	1a9b      	subs	r3, r3, r2
 800bbe6:	2b00      	cmp	r3, #0
 800bbe8:	bfdc      	itt	le
 800bbea:	6882      	ldrle	r2, [r0, #8]
 800bbec:	189b      	addle	r3, r3, r2
 800bbee:	2b01      	cmp	r3, #1
 800bbf0:	bfcc      	ite	gt
 800bbf2:	2000      	movgt	r0, #0
 800bbf4:	2001      	movle	r0, #1
 800bbf6:	4770      	bx	lr

0800bbf8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bbf8:	6902      	ldr	r2, [r0, #16]
 800bbfa:	6843      	ldr	r3, [r0, #4]
 800bbfc:	2024      	movs	r0, #36	@ 0x24
 800bbfe:	fb00 3002 	mla	r0, r0, r2, r3
 800bc02:	4770      	bx	lr

0800bc04 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bc04:	6803      	ldr	r3, [r0, #0]
 800bc06:	691b      	ldr	r3, [r3, #16]
 800bc08:	4718      	bx	r3

0800bc0a <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bc0a:	b570      	push	{r4, r5, r6, lr}
 800bc0c:	2301      	movs	r3, #1
 800bc0e:	7203      	strb	r3, [r0, #8]
 800bc10:	4604      	mov	r4, r0
 800bc12:	6840      	ldr	r0, [r0, #4]
 800bc14:	6803      	ldr	r3, [r0, #0]
 800bc16:	699b      	ldr	r3, [r3, #24]
 800bc18:	4798      	blx	r3
 800bc1a:	6803      	ldr	r3, [r0, #0]
 800bc1c:	2b40      	cmp	r3, #64	@ 0x40
 800bc1e:	4605      	mov	r5, r0
 800bc20:	d00c      	beq.n	800bc3c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc22:	d810      	bhi.n	800bc46 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bc24:	2b04      	cmp	r3, #4
 800bc26:	d01d      	beq.n	800bc64 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bc28:	d804      	bhi.n	800bc34 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bc2a:	2b01      	cmp	r3, #1
 800bc2c:	d006      	beq.n	800bc3c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc2e:	2b02      	cmp	r3, #2
 800bc30:	d02c      	beq.n	800bc8c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bc32:	bd70      	pop	{r4, r5, r6, pc}
 800bc34:	2b08      	cmp	r3, #8
 800bc36:	d01d      	beq.n	800bc74 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bc38:	2b20      	cmp	r3, #32
 800bc3a:	d1fa      	bne.n	800bc32 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bc3c:	6823      	ldr	r3, [r4, #0]
 800bc3e:	4620      	mov	r0, r4
 800bc40:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bc42:	4798      	blx	r3
 800bc44:	e013      	b.n	800bc6e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bc46:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800bc4a:	d0f7      	beq.n	800bc3c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc4c:	d804      	bhi.n	800bc58 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bc4e:	2b80      	cmp	r3, #128	@ 0x80
 800bc50:	d0f4      	beq.n	800bc3c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc52:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800bc56:	e7f0      	b.n	800bc3a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bc58:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800bc5c:	d0ee      	beq.n	800bc3c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc5e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bc62:	e7e5      	b.n	800bc30 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bc64:	6823      	ldr	r3, [r4, #0]
 800bc66:	7f01      	ldrb	r1, [r0, #28]
 800bc68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bc6a:	4620      	mov	r0, r4
 800bc6c:	4798      	blx	r3
 800bc6e:	6823      	ldr	r3, [r4, #0]
 800bc70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bc72:	e006      	b.n	800bc82 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bc74:	6823      	ldr	r3, [r4, #0]
 800bc76:	7f01      	ldrb	r1, [r0, #28]
 800bc78:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bc7a:	4620      	mov	r0, r4
 800bc7c:	4798      	blx	r3
 800bc7e:	6823      	ldr	r3, [r4, #0]
 800bc80:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bc82:	4629      	mov	r1, r5
 800bc84:	4620      	mov	r0, r4
 800bc86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc8a:	4718      	bx	r3
 800bc8c:	6823      	ldr	r3, [r4, #0]
 800bc8e:	4620      	mov	r0, r4
 800bc90:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bc92:	4798      	blx	r3
 800bc94:	e7f3      	b.n	800bc7e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bc96 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bc96:	4770      	bx	lr

0800bc98 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bc98:	4770      	bx	lr

0800bc9a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bc9a:	4770      	bx	lr

0800bc9c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bc9c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bca0:	1ad2      	subs	r2, r2, r3
 800bca2:	2a00      	cmp	r2, #0
 800bca4:	b510      	push	{r4, lr}
 800bca6:	bfdc      	itt	le
 800bca8:	6884      	ldrle	r4, [r0, #8]
 800bcaa:	1912      	addle	r2, r2, r4
 800bcac:	2a01      	cmp	r2, #1
 800bcae:	dd16      	ble.n	800bcde <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bcb0:	6842      	ldr	r2, [r0, #4]
 800bcb2:	2424      	movs	r4, #36	@ 0x24
 800bcb4:	fb04 2303 	mla	r3, r4, r3, r2
 800bcb8:	f101 0220 	add.w	r2, r1, #32
 800bcbc:	f851 4b04 	ldr.w	r4, [r1], #4
 800bcc0:	f843 4b04 	str.w	r4, [r3], #4
 800bcc4:	4291      	cmp	r1, r2
 800bcc6:	d1f9      	bne.n	800bcbc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bcc8:	780a      	ldrb	r2, [r1, #0]
 800bcca:	701a      	strb	r2, [r3, #0]
 800bccc:	68c3      	ldr	r3, [r0, #12]
 800bcce:	6882      	ldr	r2, [r0, #8]
 800bcd0:	f3bf 8f5b 	dmb	ish
 800bcd4:	3301      	adds	r3, #1
 800bcd6:	429a      	cmp	r2, r3
 800bcd8:	bfd8      	it	le
 800bcda:	1a9b      	suble	r3, r3, r2
 800bcdc:	60c3      	str	r3, [r0, #12]
 800bcde:	bd10      	pop	{r4, pc}

0800bce0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bce0:	6903      	ldr	r3, [r0, #16]
 800bce2:	6882      	ldr	r2, [r0, #8]
 800bce4:	f3bf 8f5b 	dmb	ish
 800bce8:	3301      	adds	r3, #1
 800bcea:	429a      	cmp	r2, r3
 800bcec:	bfd8      	it	le
 800bcee:	1a9b      	suble	r3, r3, r2
 800bcf0:	6103      	str	r3, [r0, #16]
 800bcf2:	4770      	bx	lr

0800bcf4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bcf4:	b570      	push	{r4, r5, r6, lr}
 800bcf6:	4604      	mov	r4, r0
 800bcf8:	460e      	mov	r6, r1
 800bcfa:	6860      	ldr	r0, [r4, #4]
 800bcfc:	6803      	ldr	r3, [r0, #0]
 800bcfe:	685b      	ldr	r3, [r3, #4]
 800bd00:	4798      	blx	r3
 800bd02:	2800      	cmp	r0, #0
 800bd04:	d1f9      	bne.n	800bcfa <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bd06:	4d0d      	ldr	r5, [pc, #52]	@ (800bd3c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bd08:	6828      	ldr	r0, [r5, #0]
 800bd0a:	6803      	ldr	r3, [r0, #0]
 800bd0c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800bd10:	4798      	blx	r3
 800bd12:	f7f5 f933 	bl	8000f7c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bd16:	6828      	ldr	r0, [r5, #0]
 800bd18:	2101      	movs	r1, #1
 800bd1a:	f7ff ff13 	bl	800bb44 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bd1e:	6860      	ldr	r0, [r4, #4]
 800bd20:	6803      	ldr	r3, [r0, #0]
 800bd22:	4631      	mov	r1, r6
 800bd24:	689b      	ldr	r3, [r3, #8]
 800bd26:	4798      	blx	r3
 800bd28:	6823      	ldr	r3, [r4, #0]
 800bd2a:	4620      	mov	r0, r4
 800bd2c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bd2e:	4798      	blx	r3
 800bd30:	6828      	ldr	r0, [r5, #0]
 800bd32:	6803      	ldr	r3, [r0, #0]
 800bd34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd38:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bd3a:	4718      	bx	r3
 800bd3c:	20014040 	.word	0x20014040

0800bd40 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bd40:	b508      	push	{r3, lr}
 800bd42:	f7f5 f90d 	bl	8000f60 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bd46:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bd4a:	f7f5 b911 	b.w	8000f70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bd4e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bd4e:	b510      	push	{r4, lr}
 800bd50:	2114      	movs	r1, #20
 800bd52:	4604      	mov	r4, r0
 800bd54:	f016 fb89 	bl	802246a <_ZdlPvj>
 800bd58:	4620      	mov	r0, r4
 800bd5a:	bd10      	pop	{r4, pc}

0800bd5c <_ZN8touchgfx13DMA_Interface5startEv>:
 800bd5c:	b510      	push	{r4, lr}
 800bd5e:	4604      	mov	r4, r0
 800bd60:	6840      	ldr	r0, [r0, #4]
 800bd62:	6803      	ldr	r3, [r0, #0]
 800bd64:	681b      	ldr	r3, [r3, #0]
 800bd66:	4798      	blx	r3
 800bd68:	b948      	cbnz	r0, 800bd7e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd6a:	7a63      	ldrb	r3, [r4, #9]
 800bd6c:	b13b      	cbz	r3, 800bd7e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd6e:	7a23      	ldrb	r3, [r4, #8]
 800bd70:	b92b      	cbnz	r3, 800bd7e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd72:	6823      	ldr	r3, [r4, #0]
 800bd74:	4620      	mov	r0, r4
 800bd76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bd78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd7c:	4718      	bx	r3
 800bd7e:	bd10      	pop	{r4, pc}

0800bd80 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bd80:	b570      	push	{r4, r5, r6, lr}
 800bd82:	4604      	mov	r4, r0
 800bd84:	6840      	ldr	r0, [r0, #4]
 800bd86:	6803      	ldr	r3, [r0, #0]
 800bd88:	681b      	ldr	r3, [r3, #0]
 800bd8a:	4798      	blx	r3
 800bd8c:	4605      	mov	r5, r0
 800bd8e:	b930      	cbnz	r0, 800bd9e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bd90:	7a23      	ldrb	r3, [r4, #8]
 800bd92:	b123      	cbz	r3, 800bd9e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bd94:	6860      	ldr	r0, [r4, #4]
 800bd96:	6803      	ldr	r3, [r0, #0]
 800bd98:	695b      	ldr	r3, [r3, #20]
 800bd9a:	4798      	blx	r3
 800bd9c:	7225      	strb	r5, [r4, #8]
 800bd9e:	6860      	ldr	r0, [r4, #4]
 800bda0:	6803      	ldr	r3, [r0, #0]
 800bda2:	681b      	ldr	r3, [r3, #0]
 800bda4:	4798      	blx	r3
 800bda6:	b928      	cbnz	r0, 800bdb4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bda8:	6823      	ldr	r3, [r4, #0]
 800bdaa:	4620      	mov	r0, r4
 800bdac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bdae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdb2:	4718      	bx	r3
 800bdb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdb8:	f7f5 b8e8 	b.w	8000f8c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bdbc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bdbc:	b510      	push	{r4, lr}
 800bdbe:	4c04      	ldr	r4, [pc, #16]	@ (800bdd0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bdc0:	6082      	str	r2, [r0, #8]
 800bdc2:	2200      	movs	r2, #0
 800bdc4:	e9c0 4100 	strd	r4, r1, [r0]
 800bdc8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bdcc:	bd10      	pop	{r4, pc}
 800bdce:	bf00      	nop
 800bdd0:	08025a6c 	.word	0x08025a6c

0800bdd4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bdd4:	6840      	ldr	r0, [r0, #4]
 800bdd6:	6803      	ldr	r3, [r0, #0]
 800bdd8:	681b      	ldr	r3, [r3, #0]
 800bdda:	4718      	bx	r3
 800bddc:	0000      	movs	r0, r0
	...

0800bde0 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800bde0:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800bde4:	4f20      	ldr	r7, [pc, #128]	@ (800be68 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800bde6:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800bdea:	fb80 0101 	smull	r0, r1, r0, r1
 800bdee:	fba0 bc07 	umull	fp, ip, r0, r7
 800bdf2:	fb07 cc01 	mla	ip, r7, r1, ip
 800bdf6:	fb0b f70c 	mul.w	r7, fp, ip
 800bdfa:	fbab 010b 	umull	r0, r1, fp, fp
 800bdfe:	461c      	mov	r4, r3
 800be00:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800be04:	fb00 f30c 	mul.w	r3, r0, ip
 800be08:	fb0b 3301 	mla	r3, fp, r1, r3
 800be0c:	fba0 010b 	umull	r0, r1, r0, fp
 800be10:	4616      	mov	r6, r2
 800be12:	4419      	add	r1, r3
 800be14:	a312      	add	r3, pc, #72	@ (adr r3, 800be60 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800be16:	e9d3 2300 	ldrd	r2, r3, [r3]
 800be1a:	f7f4 fc25 	bl	8000668 <__aeabi_ldivmod>
 800be1e:	2ef7      	cmp	r6, #247	@ 0xf7
 800be20:	b290      	uxth	r0, r2
 800be22:	bf9e      	ittt	ls
 800be24:	f002 0207 	andls.w	r2, r2, #7
 800be28:	18b6      	addls	r6, r6, r2
 800be2a:	b2f6      	uxtbls	r6, r6
 800be2c:	2cfb      	cmp	r4, #251	@ 0xfb
 800be2e:	bf9e      	ittt	ls
 800be30:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800be34:	18e4      	addls	r4, r4, r3
 800be36:	b2e4      	uxtbls	r4, r4
 800be38:	2df7      	cmp	r5, #247	@ 0xf7
 800be3a:	bf9c      	itt	ls
 800be3c:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800be40:	182d      	addls	r5, r5, r0
 800be42:	480a      	ldr	r0, [pc, #40]	@ (800be6c <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800be44:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800be48:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800be4c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800be50:	bf98      	it	ls
 800be52:	b2ed      	uxtbls	r5, r5
 800be54:	4304      	orrs	r4, r0
 800be56:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800be5a:	b280      	uxth	r0, r0
 800be5c:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800be60:	797a8d77 	.word	0x797a8d77
 800be64:	00000000 	.word	0x00000000
 800be68:	00ec4ba7 	.word	0x00ec4ba7
 800be6c:	fffff800 	.word	0xfffff800

0800be70 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800be70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be74:	ed2d 8b02 	vpush	{d8}
 800be78:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800be7c:	b087      	sub	sp, #28
 800be7e:	7c41      	ldrb	r1, [r0, #17]
 800be80:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800be84:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800be88:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800be8c:	4605      	mov	r5, r0
 800be8e:	2900      	cmp	r1, #0
 800be90:	f000 809a 	beq.w	800bfc8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800be94:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800be98:	ed90 7a08 	vldr	s14, [r0, #32]
 800be9c:	68c0      	ldr	r0, [r0, #12]
 800be9e:	454a      	cmp	r2, r9
 800bea0:	db25      	blt.n	800beee <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800bea2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800bea6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800beaa:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800beae:	bfc8      	it	gt
 800beb0:	2200      	movgt	r2, #0
 800beb2:	5882      	ldr	r2, [r0, r2]
 800beb4:	2100      	movs	r1, #0
 800beb6:	7c2d      	ldrb	r5, [r5, #16]
 800beb8:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800bebc:	0950      	lsrs	r0, r2, #5
 800bebe:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800bec2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800bec6:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800beca:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800bece:	2d00      	cmp	r5, #0
 800bed0:	d044      	beq.n	800bf5c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800bed2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800bed6:	d141      	bne.n	800bf5c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800bed8:	bb61      	cbnz	r1, 800bf34 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800beda:	ea4e 0000 	orr.w	r0, lr, r0
 800bede:	ea4c 0500 	orr.w	r5, ip, r0
 800bee2:	42bc      	cmp	r4, r7
 800bee4:	f080 8217 	bcs.w	800c316 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800bee8:	f824 5b02 	strh.w	r5, [r4], #2
 800beec:	e7f9      	b.n	800bee2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800beee:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800bef2:	454f      	cmp	r7, r9
 800bef4:	dc08      	bgt.n	800bf08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800bef6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800befa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800befe:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800bf02:	bfd8      	it	le
 800bf04:	2200      	movle	r2, #0
 800bf06:	e7d4      	b.n	800beb2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800bf08:	eba9 0202 	sub.w	r2, r9, r2
 800bf0c:	ee07 2a90 	vmov	s15, r2
 800bf10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bf14:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800bf18:	ee67 7a87 	vmul.f32	s15, s15, s14
 800bf1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bf24:	ee17 2a90 	vmov	r2, s15
 800bf28:	bfd8      	it	le
 800bf2a:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800bf2e:	0092      	lsls	r2, r2, #2
 800bf30:	5882      	ldr	r2, [r0, r2]
 800bf32:	e7c0      	b.n	800beb6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800bf34:	b2d5      	uxtb	r5, r2
 800bf36:	fa5f f888 	uxtb.w	r8, r8
 800bf3a:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800bf3e:	461e      	mov	r6, r3
 800bf40:	42bc      	cmp	r4, r7
 800bf42:	f080 81e8 	bcs.w	800c316 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800bf46:	4630      	mov	r0, r6
 800bf48:	9500      	str	r5, [sp, #0]
 800bf4a:	4643      	mov	r3, r8
 800bf4c:	4652      	mov	r2, sl
 800bf4e:	4649      	mov	r1, r9
 800bf50:	f7ff ff46 	bl	800bde0 <_ZN8touchgfxL10applyNoiseEiihhh>
 800bf54:	3601      	adds	r6, #1
 800bf56:	f824 0b02 	strh.w	r0, [r4], #2
 800bf5a:	e7f1      	b.n	800bf40 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800bf5c:	0e12      	lsrs	r2, r2, #24
 800bf5e:	fb02 f20a 	mul.w	r2, r2, sl
 800bf62:	1c53      	adds	r3, r2, #1
 800bf64:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800bf68:	1212      	asrs	r2, r2, #8
 800bf6a:	fb02 f50c 	mul.w	r5, r2, ip
 800bf6e:	fb02 f10e 	mul.w	r1, r2, lr
 800bf72:	4350      	muls	r0, r2
 800bf74:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800c328 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800bf78:	43d2      	mvns	r2, r2
 800bf7a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800bf7e:	26ff      	movs	r6, #255	@ 0xff
 800bf80:	42bc      	cmp	r4, r7
 800bf82:	f080 81c8 	bcs.w	800c316 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800bf86:	f8b4 e000 	ldrh.w	lr, [r4]
 800bf8a:	ea0e 030c 	and.w	r3, lr, ip
 800bf8e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800bf92:	fb02 1303 	mla	r3, r2, r3, r1
 800bf96:	fb02 0808 	mla	r8, r2, r8, r0
 800bf9a:	fb93 f3f6 	sdiv	r3, r3, r6
 800bf9e:	fb98 f8f6 	sdiv	r8, r8, r6
 800bfa2:	ea03 030c 	and.w	r3, r3, ip
 800bfa6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800bfaa:	f00e 0e1f 	and.w	lr, lr, #31
 800bfae:	ea43 0308 	orr.w	r3, r3, r8
 800bfb2:	fb02 5e0e 	mla	lr, r2, lr, r5
 800bfb6:	fb9e fef6 	sdiv	lr, lr, r6
 800bfba:	f00e 0e1f 	and.w	lr, lr, #31
 800bfbe:	ea43 030e 	orr.w	r3, r3, lr
 800bfc2:	f824 3b02 	strh.w	r3, [r4], #2
 800bfc6:	e7db      	b.n	800bf80 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800bfc8:	7c82      	ldrb	r2, [r0, #18]
 800bfca:	2a00      	cmp	r2, #0
 800bfcc:	d04f      	beq.n	800c06e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800bfce:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800bfd2:	ee07 2a90 	vmov	s15, r2
 800bfd6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bfda:	ee07 3a10 	vmov	s14, r3
 800bfde:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800bfe2:	461f      	mov	r7, r3
 800bfe4:	eef4 6ae7 	vcmpe.f32	s13, s15
 800bfe8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bfec:	f200 8095 	bhi.w	800c11a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800bff0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800bff4:	ee37 7a87 	vadd.f32	s14, s15, s14
 800bff8:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800bffc:	ee37 7a66 	vsub.f32	s14, s14, s13
 800c000:	ee06 6a90 	vmov	s13, r6
 800c004:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800c008:	68ea      	ldr	r2, [r5, #12]
 800c00a:	f895 c010 	ldrb.w	ip, [r5, #16]
 800c00e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800c012:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c016:	bf4a      	itet	mi
 800c018:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800c01c:	9602      	strpl	r6, [sp, #8]
 800c01e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800c022:	ed95 7a08 	vldr	s14, [r5, #32]
 800c026:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c02a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c02e:	bfc8      	it	gt
 800c030:	2100      	movgt	r1, #0
 800c032:	5852      	ldr	r2, [r2, r1]
 800c034:	9902      	ldr	r1, [sp, #8]
 800c036:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800c03a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800c03e:	0950      	lsrs	r0, r2, #5
 800c040:	9103      	str	r1, [sp, #12]
 800c042:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800c046:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800c04a:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800c04e:	f1bc 0f00 	cmp.w	ip, #0
 800c052:	d024      	beq.n	800c09e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800c054:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c058:	d121      	bne.n	800c09e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800c05a:	ea4b 0b00 	orr.w	fp, fp, r0
 800c05e:	ea41 010b 	orr.w	r1, r1, fp
 800c062:	9a03      	ldr	r2, [sp, #12]
 800c064:	4294      	cmp	r4, r2
 800c066:	d255      	bcs.n	800c114 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800c068:	f824 1b02 	strh.w	r1, [r4], #2
 800c06c:	e7f9      	b.n	800c062 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800c06e:	ee07 9a10 	vmov	s14, r9
 800c072:	edd0 7a06 	vldr	s15, [r0, #24]
 800c076:	edd0 6a05 	vldr	s13, [r0, #20]
 800c07a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c07e:	ee37 7a67 	vsub.f32	s14, s14, s15
 800c082:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800c086:	ed90 7a08 	vldr	s14, [r0, #32]
 800c08a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c08e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c092:	bf44      	itt	mi
 800c094:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800c098:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800c09c:	e79d      	b.n	800bfda <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800c09e:	0e12      	lsrs	r2, r2, #24
 800c0a0:	fb02 f20a 	mul.w	r2, r2, sl
 800c0a4:	f102 0c01 	add.w	ip, r2, #1
 800c0a8:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800c0ac:	1212      	asrs	r2, r2, #8
 800c0ae:	4350      	muls	r0, r2
 800c0b0:	4351      	muls	r1, r2
 800c0b2:	fb02 fb0b 	mul.w	fp, r2, fp
 800c0b6:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800c328 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c0ba:	9004      	str	r0, [sp, #16]
 800c0bc:	43d2      	mvns	r2, r2
 800c0be:	9105      	str	r1, [sp, #20]
 800c0c0:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800c0c4:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800c0c8:	9903      	ldr	r1, [sp, #12]
 800c0ca:	428c      	cmp	r4, r1
 800c0cc:	d222      	bcs.n	800c114 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800c0ce:	8820      	ldrh	r0, [r4, #0]
 800c0d0:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800c0d4:	460f      	mov	r7, r1
 800c0d6:	9904      	ldr	r1, [sp, #16]
 800c0d8:	ea00 0c08 	and.w	ip, r0, r8
 800c0dc:	fb02 bc0c 	mla	ip, r2, ip, fp
 800c0e0:	fb02 1107 	mla	r1, r2, r7, r1
 800c0e4:	fb9c fcfe 	sdiv	ip, ip, lr
 800c0e8:	fb91 f1fe 	sdiv	r1, r1, lr
 800c0ec:	ea0c 0c08 	and.w	ip, ip, r8
 800c0f0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800c0f4:	ea4c 0101 	orr.w	r1, ip, r1
 800c0f8:	f000 0c1f 	and.w	ip, r0, #31
 800c0fc:	9805      	ldr	r0, [sp, #20]
 800c0fe:	fb02 0c0c 	mla	ip, r2, ip, r0
 800c102:	fb9c fcfe 	sdiv	ip, ip, lr
 800c106:	f00c 0c1f 	and.w	ip, ip, #31
 800c10a:	ea41 010c 	orr.w	r1, r1, ip
 800c10e:	f824 1b02 	strh.w	r1, [r4], #2
 800c112:	e7d9      	b.n	800c0c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800c114:	9a02      	ldr	r2, [sp, #8]
 800c116:	441a      	add	r2, r3
 800c118:	4617      	mov	r7, r2
 800c11a:	441e      	add	r6, r3
 800c11c:	b236      	sxth	r6, r6
 800c11e:	42be      	cmp	r6, r7
 800c120:	f340 80f9 	ble.w	800c316 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c124:	ed95 7a07 	vldr	s14, [r5, #28]
 800c128:	ee06 7a90 	vmov	s13, r7
 800c12c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800c130:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800c134:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800c138:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c13c:	f340 80b5 	ble.w	800c2aa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800c140:	ee06 6a10 	vmov	s12, r6
 800c144:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800c148:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800c320 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800c14c:	7c2b      	ldrb	r3, [r5, #16]
 800c14e:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800c152:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c156:	bfd8      	it	le
 800c158:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800c15c:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800c324 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800c160:	bfd8      	it	le
 800c162:	ee17 8a10 	vmovle	r8, s14
 800c166:	ed95 7a08 	vldr	s14, [r5, #32]
 800c16a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c16e:	bfc8      	it	gt
 800c170:	46b0      	movgt	r8, r6
 800c172:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800c176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c17a:	eba8 0707 	sub.w	r7, r8, r7
 800c17e:	bfd8      	it	le
 800c180:	eeb0 8a46 	vmovle.f32	s16, s12
 800c184:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800c188:	eea7 8a27 	vfma.f32	s16, s14, s15
 800c18c:	b1db      	cbz	r3, 800c1c6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800c18e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c192:	d118      	bne.n	800c1c6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800c194:	42bc      	cmp	r4, r7
 800c196:	d262      	bcs.n	800c25e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800c198:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c19c:	68eb      	ldr	r3, [r5, #12]
 800c19e:	ee17 0a90 	vmov	r0, s15
 800c1a2:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800c1a6:	b2d3      	uxtb	r3, r2
 800c1a8:	9300      	str	r3, [sp, #0]
 800c1aa:	4649      	mov	r1, r9
 800c1ac:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800c1b0:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800c1b4:	f7ff fe14 	bl	800bde0 <_ZN8touchgfxL10applyNoiseEiihhh>
 800c1b8:	f824 0b02 	strh.w	r0, [r4], #2
 800c1bc:	edd5 7a08 	vldr	s15, [r5, #32]
 800c1c0:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c1c4:	e7e6      	b.n	800c194 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800c1c6:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800c328 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c1ca:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800c1ce:	42bc      	cmp	r4, r7
 800c1d0:	d245      	bcs.n	800c25e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800c1d2:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c1d6:	68eb      	ldr	r3, [r5, #12]
 800c1d8:	f8b4 e000 	ldrh.w	lr, [r4]
 800c1dc:	ee17 2a90 	vmov	r2, s15
 800c1e0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800c1e4:	0e13      	lsrs	r3, r2, #24
 800c1e6:	fb03 f30a 	mul.w	r3, r3, sl
 800c1ea:	1c58      	adds	r0, r3, #1
 800c1ec:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800c1f0:	1200      	asrs	r0, r0, #8
 800c1f2:	ea6f 0c00 	mvn.w	ip, r0
 800c1f6:	fa5f fc8c 	uxtb.w	ip, ip
 800c1fa:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800c1fe:	ea0e 030b 	and.w	r3, lr, fp
 800c202:	fb0c f303 	mul.w	r3, ip, r3
 800c206:	b289      	uxth	r1, r1
 800c208:	fb00 3101 	mla	r1, r0, r1, r3
 800c20c:	fb91 f1f9 	sdiv	r1, r1, r9
 800c210:	ea01 030b 	and.w	r3, r1, fp
 800c214:	9302      	str	r3, [sp, #8]
 800c216:	0953      	lsrs	r3, r2, #5
 800c218:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c21c:	4619      	mov	r1, r3
 800c21e:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800c222:	fb0c f303 	mul.w	r3, ip, r3
 800c226:	fb00 3301 	mla	r3, r0, r1, r3
 800c22a:	f00e 0e1f 	and.w	lr, lr, #31
 800c22e:	9902      	ldr	r1, [sp, #8]
 800c230:	fb93 f3f9 	sdiv	r3, r3, r9
 800c234:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800c238:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c23c:	fb0c fc0e 	mul.w	ip, ip, lr
 800c240:	4319      	orrs	r1, r3
 800c242:	fb00 c002 	mla	r0, r0, r2, ip
 800c246:	fb90 f0f9 	sdiv	r0, r0, r9
 800c24a:	f000 001f 	and.w	r0, r0, #31
 800c24e:	4301      	orrs	r1, r0
 800c250:	f824 1b02 	strh.w	r1, [r4], #2
 800c254:	edd5 7a08 	vldr	s15, [r5, #32]
 800c258:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c25c:	e7b7      	b.n	800c1ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800c25e:	4546      	cmp	r6, r8
 800c260:	dd59      	ble.n	800c316 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c262:	edd5 7a08 	vldr	s15, [r5, #32]
 800c266:	68ea      	ldr	r2, [r5, #12]
 800c268:	7c29      	ldrb	r1, [r5, #16]
 800c26a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c26e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c272:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800c276:	bfd8      	it	le
 800c278:	2300      	movle	r3, #0
 800c27a:	eba6 0608 	sub.w	r6, r6, r8
 800c27e:	58d2      	ldr	r2, [r2, r3]
 800c280:	0a10      	lsrs	r0, r2, #8
 800c282:	0953      	lsrs	r3, r2, #5
 800c284:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800c288:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800c28c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c290:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800c294:	b159      	cbz	r1, 800c2ae <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800c296:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c29a:	d108      	bne.n	800c2ae <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800c29c:	4318      	orrs	r0, r3
 800c29e:	4338      	orrs	r0, r7
 800c2a0:	42b4      	cmp	r4, r6
 800c2a2:	d238      	bcs.n	800c316 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c2a4:	f824 0b02 	strh.w	r0, [r4], #2
 800c2a8:	e7fa      	b.n	800c2a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800c2aa:	46b8      	mov	r8, r7
 800c2ac:	e7d9      	b.n	800c262 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800c2ae:	0e12      	lsrs	r2, r2, #24
 800c2b0:	fb02 f10a 	mul.w	r1, r2, sl
 800c2b4:	1c4a      	adds	r2, r1, #1
 800c2b6:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800c2ba:	1212      	asrs	r2, r2, #8
 800c2bc:	fb02 f507 	mul.w	r5, r2, r7
 800c2c0:	4350      	muls	r0, r2
 800c2c2:	4353      	muls	r3, r2
 800c2c4:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800c328 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c2c8:	43d2      	mvns	r2, r2
 800c2ca:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800c2ce:	27ff      	movs	r7, #255	@ 0xff
 800c2d0:	42b4      	cmp	r4, r6
 800c2d2:	d220      	bcs.n	800c316 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c2d4:	f8b4 e000 	ldrh.w	lr, [r4]
 800c2d8:	ea0e 010c 	and.w	r1, lr, ip
 800c2dc:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800c2e0:	fb02 0101 	mla	r1, r2, r1, r0
 800c2e4:	fb02 3808 	mla	r8, r2, r8, r3
 800c2e8:	fb91 f1f7 	sdiv	r1, r1, r7
 800c2ec:	fb98 f8f7 	sdiv	r8, r8, r7
 800c2f0:	ea01 010c 	and.w	r1, r1, ip
 800c2f4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800c2f8:	f00e 0e1f 	and.w	lr, lr, #31
 800c2fc:	ea41 0108 	orr.w	r1, r1, r8
 800c300:	fb02 5e0e 	mla	lr, r2, lr, r5
 800c304:	fb9e fef7 	sdiv	lr, lr, r7
 800c308:	f00e 0e1f 	and.w	lr, lr, #31
 800c30c:	ea41 010e 	orr.w	r1, r1, lr
 800c310:	f824 1b02 	strh.w	r1, [r4], #2
 800c314:	e7dc      	b.n	800c2d0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800c316:	b007      	add	sp, #28
 800c318:	ecbd 8b02 	vpop	{d8}
 800c31c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c320:	00000000 	.word	0x00000000
 800c324:	447ffffe 	.word	0x447ffffe
 800c328:	fffff800 	.word	0xfffff800

0800c32c <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800c32c:	4770      	bx	lr

0800c32e <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800c32e:	4770      	bx	lr

0800c330 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800c330:	b510      	push	{r4, lr}
 800c332:	2124      	movs	r1, #36	@ 0x24
 800c334:	4604      	mov	r4, r0
 800c336:	f016 f898 	bl	802246a <_ZdlPvj>
 800c33a:	4620      	mov	r0, r4
 800c33c:	bd10      	pop	{r4, pc}
	...

0800c340 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c340:	4b06      	ldr	r3, [pc, #24]	@ (800c35c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800c342:	60c1      	str	r1, [r0, #12]
 800c344:	094a      	lsrs	r2, r1, #5
 800c346:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800c34a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800c34e:	4313      	orrs	r3, r2
 800c350:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800c354:	4319      	orrs	r1, r3
 800c356:	8201      	strh	r1, [r0, #16]
 800c358:	4770      	bx	lr
 800c35a:	bf00      	nop
 800c35c:	fffff800 	.word	0xfffff800

0800c360 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c360:	f1a0 0008 	sub.w	r0, r0, #8
 800c364:	e7ec      	b.n	800c340 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800c366:	bf00      	nop

0800c368 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800c368:	b508      	push	{r3, lr}
 800c36a:	4b05      	ldr	r3, [pc, #20]	@ (800c380 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800c36c:	6818      	ldr	r0, [r3, #0]
 800c36e:	6803      	ldr	r3, [r0, #0]
 800c370:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c374:	4798      	blx	r3
 800c376:	1e43      	subs	r3, r0, #1
 800c378:	4258      	negs	r0, r3
 800c37a:	4158      	adcs	r0, r3
 800c37c:	bd08      	pop	{r3, pc}
 800c37e:	bf00      	nop
 800c380:	20014040 	.word	0x20014040

0800c384 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800c384:	4770      	bx	lr

0800c386 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800c386:	3808      	subs	r0, #8
 800c388:	4770      	bx	lr

0800c38a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800c38a:	b430      	push	{r4, r5}
 800c38c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800c390:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800c394:	8a02      	ldrh	r2, [r0, #16]
 800c396:	9202      	str	r2, [sp, #8]
 800c398:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800c39c:	68c2      	ldr	r2, [r0, #12]
 800c39e:	4629      	mov	r1, r5
 800c3a0:	4620      	mov	r0, r4
 800c3a2:	bc30      	pop	{r4, r5}
 800c3a4:	f7f4 bfba 	b.w	800131c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800c3a8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800c3a8:	f7f4 bfac 	b.w	8001304 <_ZN8touchgfx5paint8tearDownEv>

0800c3ac <_ZN8touchgfx13PainterRGB565D0Ev>:
 800c3ac:	b510      	push	{r4, lr}
 800c3ae:	2114      	movs	r1, #20
 800c3b0:	4604      	mov	r4, r0
 800c3b2:	f016 f85a 	bl	802246a <_ZdlPvj>
 800c3b6:	4620      	mov	r0, r4
 800c3b8:	bd10      	pop	{r4, pc}

0800c3ba <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800c3ba:	f1a0 0008 	sub.w	r0, r0, #8
 800c3be:	e7f5      	b.n	800c3ac <_ZN8touchgfx13PainterRGB565D0Ev>

0800c3c0 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800c3c0:	2300      	movs	r3, #0
 800c3c2:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800c3c4:	8503      	strh	r3, [r0, #40]	@ 0x28
 800c3c6:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800c3c8:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800c3ca:	6980      	ldr	r0, [r0, #24]
 800c3cc:	b110      	cbz	r0, 800c3d4 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800c3ce:	6803      	ldr	r3, [r0, #0]
 800c3d0:	691b      	ldr	r3, [r3, #16]
 800c3d2:	4718      	bx	r3
 800c3d4:	4770      	bx	lr

0800c3d6 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800c3d6:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800c3da:	4770      	bx	lr

0800c3dc <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800c3dc:	b538      	push	{r3, r4, r5, lr}
 800c3de:	0e0b      	lsrs	r3, r1, #24
 800c3e0:	7783      	strb	r3, [r0, #30]
 800c3e2:	6803      	ldr	r3, [r0, #0]
 800c3e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c3e6:	4604      	mov	r4, r0
 800c3e8:	460d      	mov	r5, r1
 800c3ea:	4798      	blx	r3
 800c3ec:	6803      	ldr	r3, [r0, #0]
 800c3ee:	4629      	mov	r1, r5
 800c3f0:	689b      	ldr	r3, [r3, #8]
 800c3f2:	4798      	blx	r3
 800c3f4:	6823      	ldr	r3, [r4, #0]
 800c3f6:	4620      	mov	r0, r4
 800c3f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c3fa:	4798      	blx	r3
 800c3fc:	61a0      	str	r0, [r4, #24]
 800c3fe:	bd38      	pop	{r3, r4, r5, pc}

0800c400 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800c400:	7741      	strb	r1, [r0, #29]
 800c402:	4770      	bx	lr

0800c404 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800c404:	b530      	push	{r4, r5, lr}
 800c406:	460d      	mov	r5, r1
 800c408:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800c40c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c40e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c410:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c412:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c414:	682b      	ldr	r3, [r5, #0]
 800c416:	6023      	str	r3, [r4, #0]
 800c418:	bd30      	pop	{r4, r5, pc}

0800c41a <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800c41a:	b538      	push	{r3, r4, r5, lr}
 800c41c:	4604      	mov	r4, r0
 800c41e:	1d03      	adds	r3, r0, #4
 800c420:	6808      	ldr	r0, [r1, #0]
 800c422:	6849      	ldr	r1, [r1, #4]
 800c424:	c303      	stmia	r3!, {r0, r1}
 800c426:	6813      	ldr	r3, [r2, #0]
 800c428:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800c42c:	6853      	ldr	r3, [r2, #4]
 800c42e:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800c432:	2500      	movs	r5, #0
 800c434:	61a5      	str	r5, [r4, #24]
 800c436:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800c43a:	f005 fac1 	bl	80119c0 <_ZN8touchgfx9Matrix3x35resetEv>
 800c43e:	23ff      	movs	r3, #255	@ 0xff
 800c440:	7763      	strb	r3, [r4, #29]
 800c442:	77a3      	strb	r3, [r4, #30]
 800c444:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800c448:	6323      	str	r3, [r4, #48]	@ 0x30
 800c44a:	2301      	movs	r3, #1
 800c44c:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800c450:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800c454:	bd38      	pop	{r3, r4, r5, pc}
	...

0800c458 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800c458:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c45c:	ed2d 8b0a 	vpush	{d8-d12}
 800c460:	ee70 7a41 	vsub.f32	s15, s0, s2
 800c464:	b087      	sub	sp, #28
 800c466:	eef5 7a40 	vcmp.f32	s15, #0.0
 800c46a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c46e:	4605      	mov	r5, r0
 800c470:	eef0 9a40 	vmov.f32	s19, s0
 800c474:	eeb0 aa60 	vmov.f32	s20, s1
 800c478:	eeb0 9a41 	vmov.f32	s18, s2
 800c47c:	eef0 8a61 	vmov.f32	s17, s3
 800c480:	eeb0 ca42 	vmov.f32	s24, s4
 800c484:	eef0 ca62 	vmov.f32	s25, s5
 800c488:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800c48c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800c48e:	6802      	ldr	r2, [r0, #0]
 800c490:	d112      	bne.n	800c4b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800c492:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800c496:	eef5 7a40 	vcmp.f32	s15, #0.0
 800c49a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c49e:	d10b      	bne.n	800c4b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800c4a0:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800c4a4:	3901      	subs	r1, #1
 800c4a6:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800c4a8:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800c4ac:	b007      	add	sp, #28
 800c4ae:	ecbd 8b0a 	vpop	{d8-d12}
 800c4b2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c4b6:	4710      	bx	r2
 800c4b8:	23ff      	movs	r3, #255	@ 0xff
 800c4ba:	77ab      	strb	r3, [r5, #30]
 800c4bc:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800c4be:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800c784 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800c4c2:	4628      	mov	r0, r5
 800c4c4:	4798      	blx	r3
 800c4c6:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800c4ca:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800c4ce:	80c3      	strh	r3, [r0, #6]
 800c4d0:	eef0 0a4a 	vmov.f32	s1, s20
 800c4d4:	eeb0 0a69 	vmov.f32	s0, s19
 800c4d8:	4604      	mov	r4, r0
 800c4da:	4640      	mov	r0, r8
 800c4dc:	f005 fb1f 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c4e0:	4640      	mov	r0, r8
 800c4e2:	eeb0 ba40 	vmov.f32	s22, s0
 800c4e6:	eef0 ba60 	vmov.f32	s23, s1
 800c4ea:	ed8d 0a00 	vstr	s0, [sp]
 800c4ee:	edcd 0a01 	vstr	s1, [sp, #4]
 800c4f2:	eeb0 0a49 	vmov.f32	s0, s18
 800c4f6:	eef0 0a68 	vmov.f32	s1, s17
 800c4fa:	f005 fb10 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c4fe:	eeb4 ba40 	vcmp.f32	s22, s0
 800c502:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c506:	eef4 ba60 	vcmp.f32	s23, s1
 800c50a:	bf0c      	ite	eq
 800c50c:	2301      	moveq	r3, #1
 800c50e:	2300      	movne	r3, #0
 800c510:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c514:	eeb4 ba40 	vcmp.f32	s22, s0
 800c518:	7463      	strb	r3, [r4, #17]
 800c51a:	bf0c      	ite	eq
 800c51c:	2301      	moveq	r3, #1
 800c51e:	2300      	movne	r3, #0
 800c520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c524:	eeb0 8a40 	vmov.f32	s16, s0
 800c528:	eef0 aa60 	vmov.f32	s21, s1
 800c52c:	ed8d 0a02 	vstr	s0, [sp, #8]
 800c530:	edcd 0a03 	vstr	s1, [sp, #12]
 800c534:	74a3      	strb	r3, [r4, #18]
 800c536:	d030      	beq.n	800c59a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c538:	eef4 ba60 	vcmp.f32	s23, s1
 800c53c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c540:	d02b      	beq.n	800c59a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c542:	ee39 9a69 	vsub.f32	s18, s18, s19
 800c546:	ee78 8aca 	vsub.f32	s17, s17, s20
 800c54a:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800c54e:	4640      	mov	r0, r8
 800c550:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800c554:	eef0 0a4a 	vmov.f32	s1, s20
 800c558:	eeb0 0a69 	vmov.f32	s0, s19
 800c55c:	eea7 0acc 	vfms.f32	s0, s15, s24
 800c560:	eeec 0a87 	vfma.f32	s1, s25, s14
 800c564:	f005 fadb 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c568:	f899 3000 	ldrb.w	r3, [r9]
 800c56c:	edcd 0a05 	vstr	s1, [sp, #20]
 800c570:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800c574:	2b01      	cmp	r3, #1
 800c576:	ed8d 0a04 	vstr	s0, [sp, #16]
 800c57a:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800c57e:	bf02      	ittt	eq
 800c580:	eef1 7a60 	vnegeq.f32	s15, s1
 800c584:	eef0 0a40 	vmoveq.f32	s1, s0
 800c588:	eeb0 0a67 	vmoveq.f32	s0, s15
 800c58c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800c590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c594:	d134      	bne.n	800c600 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800c596:	2301      	movs	r3, #1
 800c598:	74a3      	strb	r3, [r4, #18]
 800c59a:	f899 2000 	ldrb.w	r2, [r9]
 800c59e:	7c63      	ldrb	r3, [r4, #17]
 800c5a0:	2a01      	cmp	r2, #1
 800c5a2:	f040 80a3 	bne.w	800c6ec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800c5a6:	2b00      	cmp	r3, #0
 800c5a8:	d072      	beq.n	800c690 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800c5aa:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800c5ae:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800c77c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c5b2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c5b6:	eef4 baea 	vcmpe.f32	s23, s21
 800c5ba:	edc4 7a08 	vstr	s15, [r4, #32]
 800c5be:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800c5c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c5c6:	ee17 3a90 	vmov	r3, s15
 800c5ca:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800c5ce:	b21a      	sxth	r2, r3
 800c5d0:	ee17 3a90 	vmov	r3, s15
 800c5d4:	b21b      	sxth	r3, r3
 800c5d6:	bf47      	ittee	mi
 800c5d8:	8123      	strhmi	r3, [r4, #8]
 800c5da:	8162      	strhmi	r2, [r4, #10]
 800c5dc:	8122      	strhpl	r2, [r4, #8]
 800c5de:	8163      	strhpl	r3, [r4, #10]
 800c5e0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c5e4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c5e8:	1a9b      	subs	r3, r3, r2
 800c5ea:	ee07 3a90 	vmov	s15, r3
 800c5ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c5f2:	2300      	movs	r3, #0
 800c5f4:	7463      	strb	r3, [r4, #17]
 800c5f6:	edc4 7a07 	vstr	s15, [r4, #28]
 800c5fa:	2301      	movs	r3, #1
 800c5fc:	74a3      	strb	r3, [r4, #18]
 800c5fe:	e03f      	b.n	800c680 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c600:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800c604:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800c608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c60c:	ed84 7a05 	vstr	s14, [r4, #20]
 800c610:	d102      	bne.n	800c618 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800c612:	2301      	movs	r3, #1
 800c614:	7463      	strb	r3, [r4, #17]
 800c616:	e7c0      	b.n	800c59a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c618:	2b01      	cmp	r3, #1
 800c61a:	bf03      	ittte	eq
 800c61c:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800c620:	ee07 2a90 	vmoveq	s15, r2
 800c624:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800c628:	eef0 7a6b 	vmovne.f32	s15, s23
 800c62c:	bf0a      	itet	eq
 800c62e:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800c632:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800c636:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800c63a:	2b01      	cmp	r3, #1
 800c63c:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800c640:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800c644:	edc4 7a06 	vstr	s15, [r4, #24]
 800c648:	bf02      	ittt	eq
 800c64a:	eef1 7a48 	vnegeq.f32	s15, s16
 800c64e:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800c652:	eef0 aa67 	vmoveq.f32	s21, s15
 800c656:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800c65a:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800c780 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800c65e:	ee38 8a67 	vsub.f32	s16, s16, s15
 800c662:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800c666:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800c66a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c66e:	ed84 8a07 	vstr	s16, [r4, #28]
 800c672:	edc4 7a08 	vstr	s15, [r4, #32]
 800c676:	d503      	bpl.n	800c680 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c678:	eeb1 8a48 	vneg.f32	s16, s16
 800c67c:	ed84 8a07 	vstr	s16, [r4, #28]
 800c680:	60e7      	str	r7, [r4, #12]
 800c682:	7426      	strb	r6, [r4, #16]
 800c684:	61ac      	str	r4, [r5, #24]
 800c686:	b007      	add	sp, #28
 800c688:	ecbd 8b0a 	vpop	{d8-d12}
 800c68c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c690:	7ca3      	ldrb	r3, [r4, #18]
 800c692:	2b00      	cmp	r3, #0
 800c694:	d0f4      	beq.n	800c680 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c696:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c69a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800c77c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c69e:	ee00 3a10 	vmov	s0, r3
 800c6a2:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800c6a6:	ee30 8a48 	vsub.f32	s16, s0, s16
 800c6aa:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800c6ae:	ee38 7a40 	vsub.f32	s14, s16, s0
 800c6b2:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800c6b6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c6ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c6be:	edc4 7a08 	vstr	s15, [r4, #32]
 800c6c2:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c6c6:	ee17 3a90 	vmov	r3, s15
 800c6ca:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800c6ce:	b21a      	sxth	r2, r3
 800c6d0:	ee17 3a90 	vmov	r3, s15
 800c6d4:	b21b      	sxth	r3, r3
 800c6d6:	bfcc      	ite	gt
 800c6d8:	8123      	strhgt	r3, [r4, #8]
 800c6da:	8163      	strhle	r3, [r4, #10]
 800c6dc:	f04f 0301 	mov.w	r3, #1
 800c6e0:	7463      	strb	r3, [r4, #17]
 800c6e2:	bfcc      	ite	gt
 800c6e4:	8162      	strhgt	r2, [r4, #10]
 800c6e6:	8122      	strhle	r2, [r4, #8]
 800c6e8:	2300      	movs	r3, #0
 800c6ea:	e787      	b.n	800c5fc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800c6ec:	b1db      	cbz	r3, 800c726 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800c6ee:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800c6f2:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800c77c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c6f6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c6fa:	eef4 baea 	vcmpe.f32	s23, s21
 800c6fe:	edc4 7a08 	vstr	s15, [r4, #32]
 800c702:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800c706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c70a:	ee17 3a90 	vmov	r3, s15
 800c70e:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800c712:	b21a      	sxth	r2, r3
 800c714:	ee17 3a90 	vmov	r3, s15
 800c718:	b21b      	sxth	r3, r3
 800c71a:	bf47      	ittee	mi
 800c71c:	8123      	strhmi	r3, [r4, #8]
 800c71e:	8162      	strhmi	r2, [r4, #10]
 800c720:	8122      	strhpl	r2, [r4, #8]
 800c722:	8163      	strhpl	r3, [r4, #10]
 800c724:	e7ac      	b.n	800c680 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c726:	7ca3      	ldrb	r3, [r4, #18]
 800c728:	2b00      	cmp	r3, #0
 800c72a:	d0a9      	beq.n	800c680 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c72c:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800c730:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800c77c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c734:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c738:	eeb4 bac8 	vcmpe.f32	s22, s16
 800c73c:	edc4 7a08 	vstr	s15, [r4, #32]
 800c740:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c748:	ee17 3a90 	vmov	r3, s15
 800c74c:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800c750:	b21a      	sxth	r2, r3
 800c752:	ee17 3a90 	vmov	r3, s15
 800c756:	b21b      	sxth	r3, r3
 800c758:	bf47      	ittee	mi
 800c75a:	8123      	strhmi	r3, [r4, #8]
 800c75c:	8162      	strhmi	r2, [r4, #10]
 800c75e:	8122      	strhpl	r2, [r4, #8]
 800c760:	8163      	strhpl	r3, [r4, #10]
 800c762:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c766:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c76a:	1a9b      	subs	r3, r3, r2
 800c76c:	ee07 3a90 	vmov	s15, r3
 800c770:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c774:	edc4 7a07 	vstr	s15, [r4, #28]
 800c778:	e782      	b.n	800c680 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c77a:	bf00      	nop
 800c77c:	447ffffe 	.word	0x447ffffe
 800c780:	44800000 	.word	0x44800000
 800c784:	20014036 	.word	0x20014036

0800c788 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800c788:	b510      	push	{r4, lr}
 800c78a:	2100      	movs	r1, #0
 800c78c:	ed2d 8b02 	vpush	{d8}
 800c790:	eef0 8a62 	vmov.f32	s17, s5
 800c794:	4604      	mov	r4, r0
 800c796:	eeb0 8a42 	vmov.f32	s16, s4
 800c79a:	f015 fbf5 	bl	8021f88 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800c79e:	eef0 7a68 	vmov.f32	s15, s17
 800c7a2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7a6:	6823      	ldr	r3, [r4, #0]
 800c7a8:	ee17 2a90 	vmov	r2, s15
 800c7ac:	eef0 7a48 	vmov.f32	s15, s16
 800c7b0:	ecbd 8b02 	vpop	{d8}
 800c7b4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7b8:	4620      	mov	r0, r4
 800c7ba:	689b      	ldr	r3, [r3, #8]
 800c7bc:	ee17 1a90 	vmov	r1, s15
 800c7c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c7c4:	4718      	bx	r3

0800c7c6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800c7c6:	b510      	push	{r4, lr}
 800c7c8:	2100      	movs	r1, #0
 800c7ca:	ed2d 8b02 	vpush	{d8}
 800c7ce:	eef0 8a63 	vmov.f32	s17, s7
 800c7d2:	4604      	mov	r4, r0
 800c7d4:	eeb0 8a43 	vmov.f32	s16, s6
 800c7d8:	f015 fc98 	bl	802210c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800c7dc:	eef0 7a68 	vmov.f32	s15, s17
 800c7e0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7e4:	6823      	ldr	r3, [r4, #0]
 800c7e6:	ee17 2a90 	vmov	r2, s15
 800c7ea:	eef0 7a48 	vmov.f32	s15, s16
 800c7ee:	ecbd 8b02 	vpop	{d8}
 800c7f2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7f6:	4620      	mov	r0, r4
 800c7f8:	689b      	ldr	r3, [r3, #8]
 800c7fa:	ee17 1a90 	vmov	r1, s15
 800c7fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c802:	4718      	bx	r3

0800c804 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800c804:	b513      	push	{r0, r1, r4, lr}
 800c806:	4604      	mov	r4, r0
 800c808:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800c80a:	f005 f988 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c80e:	eef0 7a60 	vmov.f32	s15, s1
 800c812:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c816:	4620      	mov	r0, r4
 800c818:	ee17 2a90 	vmov	r2, s15
 800c81c:	eef0 7a40 	vmov.f32	s15, s0
 800c820:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c824:	ee17 1a90 	vmov	r1, s15
 800c828:	b002      	add	sp, #8
 800c82a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c82e:	f015 bb05 	b.w	8021e3c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800c832:	b513      	push	{r0, r1, r4, lr}
 800c834:	4604      	mov	r4, r0
 800c836:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800c838:	f005 f971 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c83c:	eef0 7a60 	vmov.f32	s15, s1
 800c840:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c844:	4620      	mov	r0, r4
 800c846:	ee17 2a90 	vmov	r2, s15
 800c84a:	eef0 7a40 	vmov.f32	s15, s0
 800c84e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c852:	ee17 1a90 	vmov	r1, s15
 800c856:	b002      	add	sp, #8
 800c858:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c85c:	f015 bb3b 	b.w	8021ed6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800c860 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800c860:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c862:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800c866:	2400      	movs	r4, #0
 800c868:	9f07      	ldr	r7, [sp, #28]
 800c86a:	4463      	add	r3, ip
 800c86c:	4626      	mov	r6, r4
 800c86e:	f04f 0e01 	mov.w	lr, #1
 800c872:	4563      	cmp	r3, ip
 800c874:	d02d      	beq.n	800c8d2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800c876:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800c87a:	2d06      	cmp	r5, #6
 800c87c:	d8f9      	bhi.n	800c872 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c87e:	fa0e f505 	lsl.w	r5, lr, r5
 800c882:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800c886:	d10d      	bne.n	800c8a4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800c888:	f015 0f10 	tst.w	r5, #16
 800c88c:	d117      	bne.n	800c8be <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800c88e:	072d      	lsls	r5, r5, #28
 800c890:	d5ef      	bpl.n	800c872 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c892:	3801      	subs	r0, #1
 800c894:	b91e      	cbnz	r6, 800c89e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800c896:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800c89a:	682d      	ldr	r5, [r5, #0]
 800c89c:	600d      	str	r5, [r1, #0]
 800c89e:	b96c      	cbnz	r4, 800c8bc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c8a0:	2601      	movs	r6, #1
 800c8a2:	e7e6      	b.n	800c872 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c8a4:	b926      	cbnz	r6, 800c8b0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800c8a6:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800c8aa:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800c8ae:	600b      	str	r3, [r1, #0]
 800c8b0:	b924      	cbnz	r4, 800c8bc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c8b2:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800c8b6:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800c8ba:	6013      	str	r3, [r2, #0]
 800c8bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c8be:	3801      	subs	r0, #1
 800c8c0:	b91c      	cbnz	r4, 800c8ca <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800c8c2:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800c8c6:	6824      	ldr	r4, [r4, #0]
 800c8c8:	6014      	str	r4, [r2, #0]
 800c8ca:	2e00      	cmp	r6, #0
 800c8cc:	d1f6      	bne.n	800c8bc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c8ce:	2401      	movs	r4, #1
 800c8d0:	e7cf      	b.n	800c872 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c8d2:	b90e      	cbnz	r6, 800c8d8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800c8d4:	2300      	movs	r3, #0
 800c8d6:	600b      	str	r3, [r1, #0]
 800c8d8:	2c00      	cmp	r4, #0
 800c8da:	d1ef      	bne.n	800c8bc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c8dc:	2300      	movs	r3, #0
 800c8de:	e7ec      	b.n	800c8ba <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800c8e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800c8e0:	b538      	push	{r3, r4, r5, lr}
 800c8e2:	4604      	mov	r4, r0
 800c8e4:	ed2d 8b0a 	vpush	{d8-d12}
 800c8e8:	460d      	mov	r5, r1
 800c8ea:	eef0 ba40 	vmov.f32	s23, s0
 800c8ee:	eeb0 ca60 	vmov.f32	s24, s1
 800c8f2:	eef0 aa41 	vmov.f32	s21, s2
 800c8f6:	eeb0 ba61 	vmov.f32	s22, s3
 800c8fa:	eeb0 9a42 	vmov.f32	s18, s4
 800c8fe:	eef0 9a62 	vmov.f32	s19, s5
 800c902:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800c906:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800c90a:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800c90e:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800c912:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800c916:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800c91a:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800c91e:	ee20 0a00 	vmul.f32	s0, s0, s0
 800c922:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800c926:	f015 fdcb 	bl	80224c0 <sqrtf>
 800c92a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800c92e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c932:	d12e      	bne.n	800c992 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800c934:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800c938:	ee39 7acb 	vsub.f32	s14, s19, s22
 800c93c:	eeb0 8a6a 	vmov.f32	s16, s21
 800c940:	eef0 8a4b 	vmov.f32	s17, s22
 800c944:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800c948:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800c94c:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800c950:	eee7 8aca 	vfms.f32	s17, s15, s20
 800c954:	2d02      	cmp	r5, #2
 800c956:	dc2f      	bgt.n	800c9b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800c958:	3501      	adds	r5, #1
 800c95a:	eef0 1a4b 	vmov.f32	s3, s22
 800c95e:	eeb0 1a6a 	vmov.f32	s2, s21
 800c962:	4629      	mov	r1, r5
 800c964:	eef0 2a68 	vmov.f32	s5, s17
 800c968:	eeb0 2a48 	vmov.f32	s4, s16
 800c96c:	eef0 0a4c 	vmov.f32	s1, s24
 800c970:	eeb0 0a6b 	vmov.f32	s0, s23
 800c974:	4620      	mov	r0, r4
 800c976:	f7ff ffb3 	bl	800c8e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800c97a:	eef0 0a68 	vmov.f32	s1, s17
 800c97e:	eeb0 0a48 	vmov.f32	s0, s16
 800c982:	4620      	mov	r0, r4
 800c984:	f7ff ff55 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c988:	eeb0 ba68 	vmov.f32	s22, s17
 800c98c:	eef0 aa48 	vmov.f32	s21, s16
 800c990:	e7b9      	b.n	800c906 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800c992:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800c996:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800c99a:	ee78 8acc 	vsub.f32	s17, s17, s24
 800c99e:	ee28 7a27 	vmul.f32	s14, s16, s15
 800c9a2:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800c9a6:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800c9aa:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800c9ae:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800c9b2:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800c9b6:	e7cd      	b.n	800c954 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800c9b8:	eef0 0a68 	vmov.f32	s1, s17
 800c9bc:	eeb0 0a48 	vmov.f32	s0, s16
 800c9c0:	4620      	mov	r0, r4
 800c9c2:	f7ff ff36 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c9c6:	ecbd 8b0a 	vpop	{d8-d12}
 800c9ca:	bd38      	pop	{r3, r4, r5, pc}

0800c9cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800c9cc:	b510      	push	{r4, lr}
 800c9ce:	ed2d 8b0a 	vpush	{d8-d12}
 800c9d2:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800c9d6:	2b02      	cmp	r3, #2
 800c9d8:	4604      	mov	r4, r0
 800c9da:	eeb0 ca40 	vmov.f32	s24, s0
 800c9de:	eeb0 9a60 	vmov.f32	s18, s1
 800c9e2:	eef0 9a41 	vmov.f32	s19, s2
 800c9e6:	eef0 8a61 	vmov.f32	s17, s3
 800c9ea:	eeb0 ba42 	vmov.f32	s22, s4
 800c9ee:	eef0 ba62 	vmov.f32	s23, s5
 800c9f2:	eeb0 aa43 	vmov.f32	s20, s6
 800c9f6:	eef0 aa63 	vmov.f32	s21, s7
 800c9fa:	eeb0 8a44 	vmov.f32	s16, s8
 800c9fe:	eef0 ca64 	vmov.f32	s25, s9
 800ca02:	d12c      	bne.n	800ca5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800ca04:	eef0 0a62 	vmov.f32	s1, s5
 800ca08:	eeb0 0a42 	vmov.f32	s0, s4
 800ca0c:	f7ff ff11 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ca10:	ee79 9acb 	vsub.f32	s19, s19, s22
 800ca14:	ee7a caec 	vsub.f32	s25, s21, s25
 800ca18:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800ca1c:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800ca20:	ee69 9aac 	vmul.f32	s19, s19, s25
 800ca24:	ee28 8a88 	vmul.f32	s16, s17, s16
 800ca28:	eef4 9ac8 	vcmpe.f32	s19, s16
 800ca2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca30:	db0f      	blt.n	800ca52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800ca32:	2101      	movs	r1, #1
 800ca34:	eef0 2a6a 	vmov.f32	s5, s21
 800ca38:	eeb0 2a4a 	vmov.f32	s4, s20
 800ca3c:	eef0 1a6b 	vmov.f32	s3, s23
 800ca40:	eeb0 1a4b 	vmov.f32	s2, s22
 800ca44:	eef0 0a49 	vmov.f32	s1, s18
 800ca48:	eeb0 0a4c 	vmov.f32	s0, s24
 800ca4c:	4620      	mov	r0, r4
 800ca4e:	f7ff ff47 	bl	800c8e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800ca52:	eef0 0a6a 	vmov.f32	s1, s21
 800ca56:	eeb0 0a4a 	vmov.f32	s0, s20
 800ca5a:	4620      	mov	r0, r4
 800ca5c:	e035      	b.n	800caca <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800ca5e:	2b01      	cmp	r3, #1
 800ca60:	d138      	bne.n	800cad4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ca62:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800ca66:	ee33 6a48 	vsub.f32	s12, s6, s16
 800ca6a:	ee71 7a42 	vsub.f32	s15, s2, s4
 800ca6e:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800ca72:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800ca76:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800ca7a:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800ca7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca82:	d027      	beq.n	800cad4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ca84:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800ca88:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800ca8c:	eea4 8a83 	vfma.f32	s16, s9, s6
 800ca90:	eee1 8a22 	vfma.f32	s17, s2, s5
 800ca94:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800ca98:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800ca9c:	eee6 7a28 	vfma.f32	s15, s12, s17
 800caa0:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800caa4:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800caa8:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800caac:	ee3c ca40 	vsub.f32	s24, s24, s0
 800cab0:	ee39 9a60 	vsub.f32	s18, s18, s1
 800cab4:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800cab8:	ee29 9a09 	vmul.f32	s18, s18, s18
 800cabc:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800cac0:	eef4 7ac9 	vcmpe.f32	s15, s18
 800cac4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cac8:	db04      	blt.n	800cad4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800caca:	f7ff feb2 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cace:	ecbd 8b0a 	vpop	{d8-d12}
 800cad2:	bd10      	pop	{r4, pc}
 800cad4:	eef0 0a6b 	vmov.f32	s1, s23
 800cad8:	eeb0 0a4b 	vmov.f32	s0, s22
 800cadc:	4620      	mov	r0, r4
 800cade:	f7ff fea8 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cae2:	e7b6      	b.n	800ca52 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800cae4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800cae4:	b510      	push	{r4, lr}
 800cae6:	ed2d 8b0c 	vpush	{d8-d13}
 800caea:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800caee:	4604      	mov	r4, r0
 800caf0:	eeb0 9a40 	vmov.f32	s18, s0
 800caf4:	eef0 9a60 	vmov.f32	s19, s1
 800caf8:	eef0 aa41 	vmov.f32	s21, s2
 800cafc:	eeb0 ba61 	vmov.f32	s22, s3
 800cb00:	b933      	cbnz	r3, 800cb10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800cb02:	f7ff fe96 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb06:	eef0 0a4b 	vmov.f32	s1, s22
 800cb0a:	eeb0 0a6a 	vmov.f32	s0, s21
 800cb0e:	e015      	b.n	800cb3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800cb10:	ee71 8a40 	vsub.f32	s17, s2, s0
 800cb14:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800cb18:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800cb1c:	2b02      	cmp	r3, #2
 800cb1e:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800cb22:	ee28 8a27 	vmul.f32	s16, s16, s15
 800cb26:	d10f      	bne.n	800cb48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800cb28:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800cb2c:	ee30 0a08 	vadd.f32	s0, s0, s16
 800cb30:	f7ff fe7f 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb34:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800cb38:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800cb3c:	4620      	mov	r0, r4
 800cb3e:	f7ff fe78 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb42:	ecbd 8b0c 	vpop	{d8-d13}
 800cb46:	bd10      	pop	{r4, pc}
 800cb48:	f7ff fe73 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb4c:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800cc84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800cb50:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800cc88 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800cb54:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800cc8c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800cb58:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800cc90 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800cb5c:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800cc94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800cb60:	eef0 0a69 	vmov.f32	s1, s19
 800cb64:	eeb0 0a49 	vmov.f32	s0, s18
 800cb68:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cb6c:	4620      	mov	r0, r4
 800cb6e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cb72:	eeb1 aa68 	vneg.f32	s20, s17
 800cb76:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800cb7a:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800cb7e:	f7ff fe58 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb82:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800cc98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800cb86:	eef0 0a69 	vmov.f32	s1, s19
 800cb8a:	eeb0 0a49 	vmov.f32	s0, s18
 800cb8e:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cb92:	4620      	mov	r0, r4
 800cb94:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cb98:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800cb9c:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800cba0:	f7ff fe47 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cba4:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800cc9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800cba8:	eef0 0a69 	vmov.f32	s1, s19
 800cbac:	eeb0 0a49 	vmov.f32	s0, s18
 800cbb0:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cbb4:	4620      	mov	r0, r4
 800cbb6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cbba:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800cbbe:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800cbc2:	f7ff fe36 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cbc6:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800cca0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800cbca:	eef0 0a69 	vmov.f32	s1, s19
 800cbce:	eeb0 0a49 	vmov.f32	s0, s18
 800cbd2:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cbd6:	4620      	mov	r0, r4
 800cbd8:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cbdc:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800cbe0:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800cbe4:	f7ff fe25 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cbe8:	ee79 0a88 	vadd.f32	s1, s19, s16
 800cbec:	ee39 0a28 	vadd.f32	s0, s18, s17
 800cbf0:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800cbf4:	ee30 0a08 	vadd.f32	s0, s0, s16
 800cbf8:	4620      	mov	r0, r4
 800cbfa:	f7ff fe1a 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cbfe:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800cca4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800cc02:	eef0 0a69 	vmov.f32	s1, s19
 800cc06:	eeb0 0a49 	vmov.f32	s0, s18
 800cc0a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc0e:	4620      	mov	r0, r4
 800cc10:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc14:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800cc18:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800cc1c:	f7ff fe09 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc20:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800cca8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800cc24:	eef0 0a69 	vmov.f32	s1, s19
 800cc28:	eeb0 0a49 	vmov.f32	s0, s18
 800cc2c:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc30:	4620      	mov	r0, r4
 800cc32:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc36:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800cc3a:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800cc3e:	f7ff fdf8 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc42:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800ccac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800cc46:	eef0 0a69 	vmov.f32	s1, s19
 800cc4a:	eeb0 0a49 	vmov.f32	s0, s18
 800cc4e:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc52:	4620      	mov	r0, r4
 800cc54:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc58:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800cc5c:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800cc60:	f7ff fde7 	bl	800c832 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc64:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800ccb0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800cc68:	eef0 0a69 	vmov.f32	s1, s19
 800cc6c:	eeb0 0a49 	vmov.f32	s0, s18
 800cc70:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc74:	4620      	mov	r0, r4
 800cc76:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc7a:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800cc7e:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800cc82:	e73e      	b.n	800cb02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800cc84:	3d23d70a 	.word	0x3d23d70a
 800cc88:	3e8f5c29 	.word	0x3e8f5c29
 800cc8c:	3f19999a 	.word	0x3f19999a
 800cc90:	3f4ccccd 	.word	0x3f4ccccd
 800cc94:	3f75c28f 	.word	0x3f75c28f
 800cc98:	3e4ccccd 	.word	0x3e4ccccd
 800cc9c:	3ecccccd 	.word	0x3ecccccd
 800cca0:	3f3851ec 	.word	0x3f3851ec
 800cca4:	3fa3d70a 	.word	0x3fa3d70a
 800cca8:	3fcccccd 	.word	0x3fcccccd
 800ccac:	3fe66666 	.word	0x3fe66666
 800ccb0:	3ffae148 	.word	0x3ffae148

0800ccb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800ccb4:	b570      	push	{r4, r5, r6, lr}
 800ccb6:	ed2d 8b06 	vpush	{d8-d10}
 800ccba:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800ccbe:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800ccc2:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800ccc6:	ee30 9a49 	vsub.f32	s18, s0, s18
 800ccca:	eef0 aa40 	vmov.f32	s21, s0
 800ccce:	ee28 0a08 	vmul.f32	s0, s16, s16
 800ccd2:	4604      	mov	r4, r0
 800ccd4:	eea9 0a09 	vfma.f32	s0, s18, s18
 800ccd8:	eeb0 aa60 	vmov.f32	s20, s1
 800ccdc:	f015 fbf0 	bl	80224c0 <sqrtf>
 800cce0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800cce4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cce8:	dd36      	ble.n	800cd58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800ccea:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800ccee:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800ccf2:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800ccf6:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800ccfa:	2600      	movs	r6, #0
 800ccfc:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800cd00:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800cd04:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800cd08:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800cd0c:	ee70 9a28 	vadd.f32	s19, s0, s17
 800cd10:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800cd14:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800cd18:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800cd1c:	b1fd      	cbz	r5, 800cd5e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800cd1e:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800cd22:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800cd26:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800cd2a:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800cd2e:	eef0 0a49 	vmov.f32	s1, s18
 800cd32:	eeb0 0a69 	vmov.f32	s0, s19
 800cd36:	4620      	mov	r0, r4
 800cd38:	f7ff fd64 	bl	800c804 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800cd3c:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800cd40:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800cd44:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800cd48:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800cd4c:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800cd50:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800cd54:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800cd58:	ecbd 8b06 	vpop	{d8-d10}
 800cd5c:	bd70      	pop	{r4, r5, r6, pc}
 800cd5e:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800cd62:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800cd66:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800cd6a:	b16b      	cbz	r3, 800cd88 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800cd6c:	eef0 1a49 	vmov.f32	s3, s18
 800cd70:	eeb0 1a69 	vmov.f32	s2, s19
 800cd74:	eef0 0a62 	vmov.f32	s1, s5
 800cd78:	eeb0 0a42 	vmov.f32	s0, s4
 800cd7c:	4620      	mov	r0, r4
 800cd7e:	f7ff feb1 	bl	800cae4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800cd82:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800cd86:	e7db      	b.n	800cd40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800cd88:	eef0 4a48 	vmov.f32	s9, s16
 800cd8c:	eeb0 4a68 	vmov.f32	s8, s17
 800cd90:	eef0 3a49 	vmov.f32	s7, s18
 800cd94:	eeb0 3a69 	vmov.f32	s6, s19
 800cd98:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800cd9c:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800cda0:	4620      	mov	r0, r4
 800cda2:	f7ff fe13 	bl	800c9cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800cda6:	e7cb      	b.n	800cd40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800cda8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800cda8:	ee07 2a90 	vmov	s15, r2
 800cdac:	ee07 1a10 	vmov	s14, r1
 800cdb0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800cdb4:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800cdb8:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800cdc8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800cdbc:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800cdc0:	ee20 0a27 	vmul.f32	s0, s0, s15
 800cdc4:	f7ff bf76 	b.w	800ccb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800cdc8:	3d000000 	.word	0x3d000000

0800cdcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800cdcc:	b538      	push	{r3, r4, r5, lr}
 800cdce:	ed2d 8b02 	vpush	{d8}
 800cdd2:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800cdd6:	4604      	mov	r4, r0
 800cdd8:	b31d      	cbz	r5, 800ce22 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800cdda:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800cdde:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800cde2:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800cde6:	ee78 8a67 	vsub.f32	s17, s16, s15
 800cdea:	ee38 8a27 	vadd.f32	s16, s16, s15
 800cdee:	eef0 0a68 	vmov.f32	s1, s17
 800cdf2:	f7ff fd07 	bl	800c804 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800cdf6:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800cdfa:	eef0 1a48 	vmov.f32	s3, s16
 800cdfe:	eeb0 0a41 	vmov.f32	s0, s2
 800ce02:	eef0 0a68 	vmov.f32	s1, s17
 800ce06:	4620      	mov	r0, r4
 800ce08:	f7ff fe6c 	bl	800cae4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800ce0c:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800ce10:	eef0 1a68 	vmov.f32	s3, s17
 800ce14:	eef0 0a48 	vmov.f32	s1, s16
 800ce18:	eeb0 0a41 	vmov.f32	s0, s2
 800ce1c:	4620      	mov	r0, r4
 800ce1e:	f7ff fe61 	bl	800cae4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800ce22:	ecbd 8b02 	vpop	{d8}
 800ce26:	4628      	mov	r0, r5
 800ce28:	bd38      	pop	{r3, r4, r5, pc}

0800ce2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800ce2a:	b510      	push	{r4, lr}
 800ce2c:	ed2d 8b02 	vpush	{d8}
 800ce30:	4604      	mov	r4, r0
 800ce32:	eeb0 8a40 	vmov.f32	s16, s0
 800ce36:	eef0 8a60 	vmov.f32	s17, s1
 800ce3a:	f7ff ffc7 	bl	800cdcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800ce3e:	b9d0      	cbnz	r0, 800ce76 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800ce40:	4620      	mov	r0, r4
 800ce42:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800ce46:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800ce4a:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800ce4e:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800ce52:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800ce56:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800ce5a:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800ce5e:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800ce62:	eef0 0a68 	vmov.f32	s1, s17
 800ce66:	eeb0 0a48 	vmov.f32	s0, s16
 800ce6a:	f7ff fdaf 	bl	800c9cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800ce6e:	2001      	movs	r0, #1
 800ce70:	ecbd 8b02 	vpop	{d8}
 800ce74:	bd10      	pop	{r4, pc}
 800ce76:	2000      	movs	r0, #0
 800ce78:	e7fa      	b.n	800ce70 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800ce7a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800ce7a:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800ce7e:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800ce82:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800ce86:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800ce8a:	f7ff be2b 	b.w	800cae4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800ce90 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800ce90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce94:	b089      	sub	sp, #36	@ 0x24
 800ce96:	461c      	mov	r4, r3
 800ce98:	f10d 0820 	add.w	r8, sp, #32
 800ce9c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800cea0:	9304      	str	r3, [sp, #16]
 800cea2:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800cea4:	9105      	str	r1, [sp, #20]
 800cea6:	2300      	movs	r3, #0
 800cea8:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800ceac:	9306      	str	r3, [sp, #24]
 800ceae:	f848 3d04 	str.w	r3, [r8, #-4]!
 800ceb2:	9b04      	ldr	r3, [sp, #16]
 800ceb4:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800ceb8:	4682      	mov	sl, r0
 800ceba:	4615      	mov	r5, r2
 800cebc:	9b05      	ldr	r3, [sp, #20]
 800cebe:	429d      	cmp	r5, r3
 800cec0:	d96d      	bls.n	800cf9e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800cec2:	3d01      	subs	r5, #1
 800cec4:	f819 3005 	ldrb.w	r3, [r9, r5]
 800cec8:	2b06      	cmp	r3, #6
 800ceca:	d8f7      	bhi.n	800cebc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800cecc:	a201      	add	r2, pc, #4	@ (adr r2, 800ced4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800cece:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ced2:	bf00      	nop
 800ced4:	0800cef3 	.word	0x0800cef3
 800ced8:	0800cebd 	.word	0x0800cebd
 800cedc:	0800cef1 	.word	0x0800cef1
 800cee0:	0800cf15 	.word	0x0800cf15
 800cee4:	0800cf15 	.word	0x0800cf15
 800cee8:	0800cf19 	.word	0x0800cf19
 800ceec:	0800cf59 	.word	0x0800cf59
 800cef0:	3c02      	subs	r4, #2
 800cef2:	4650      	mov	r0, sl
 800cef4:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800cef8:	9400      	str	r4, [sp, #0]
 800cefa:	462b      	mov	r3, r5
 800cefc:	4642      	mov	r2, r8
 800cefe:	a906      	add	r1, sp, #24
 800cf00:	f7ff fcae 	bl	800c860 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800cf04:	eddd 0a07 	vldr	s1, [sp, #28]
 800cf08:	ed9d 0a06 	vldr	s0, [sp, #24]
 800cf0c:	4630      	mov	r0, r6
 800cf0e:	f7ff fed1 	bl	800ccb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800cf12:	e7d3      	b.n	800cebc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800cf14:	3c01      	subs	r4, #1
 800cf16:	e7ec      	b.n	800cef2 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800cf18:	f1a4 0b04 	sub.w	fp, r4, #4
 800cf1c:	3c02      	subs	r4, #2
 800cf1e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800cf22:	4650      	mov	r0, sl
 800cf24:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800cf28:	f8cd b000 	str.w	fp, [sp]
 800cf2c:	462b      	mov	r3, r5
 800cf2e:	4642      	mov	r2, r8
 800cf30:	a906      	add	r1, sp, #24
 800cf32:	f7ff fc95 	bl	800c860 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800cf36:	eddd 2a07 	vldr	s5, [sp, #28]
 800cf3a:	ed9d 2a06 	vldr	s4, [sp, #24]
 800cf3e:	ed54 1a01 	vldr	s3, [r4, #-4]
 800cf42:	ed14 1a02 	vldr	s2, [r4, #-8]
 800cf46:	edd4 0a01 	vldr	s1, [r4, #4]
 800cf4a:	ed94 0a00 	vldr	s0, [r4]
 800cf4e:	4630      	mov	r0, r6
 800cf50:	f7ff fc1a 	bl	800c788 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800cf54:	465c      	mov	r4, fp
 800cf56:	e7b1      	b.n	800cebc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800cf58:	f1a4 0b06 	sub.w	fp, r4, #6
 800cf5c:	3c02      	subs	r4, #2
 800cf5e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800cf62:	4650      	mov	r0, sl
 800cf64:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800cf68:	f8cd b000 	str.w	fp, [sp]
 800cf6c:	462b      	mov	r3, r5
 800cf6e:	4642      	mov	r2, r8
 800cf70:	a906      	add	r1, sp, #24
 800cf72:	f7ff fc75 	bl	800c860 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800cf76:	eddd 3a07 	vldr	s7, [sp, #28]
 800cf7a:	ed9d 3a06 	vldr	s6, [sp, #24]
 800cf7e:	ed54 2a03 	vldr	s5, [r4, #-12]
 800cf82:	ed14 2a04 	vldr	s4, [r4, #-16]
 800cf86:	ed54 1a01 	vldr	s3, [r4, #-4]
 800cf8a:	ed14 1a02 	vldr	s2, [r4, #-8]
 800cf8e:	edd4 0a01 	vldr	s1, [r4, #4]
 800cf92:	ed94 0a00 	vldr	s0, [r4]
 800cf96:	4630      	mov	r0, r6
 800cf98:	f7ff fc15 	bl	800c7c6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800cf9c:	e7da      	b.n	800cf54 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800cf9e:	9b04      	ldr	r3, [sp, #16]
 800cfa0:	b113      	cbz	r3, 800cfa8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800cfa2:	4630      	mov	r0, r6
 800cfa4:	f7ff ff69 	bl	800ce7a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800cfa8:	b009      	add	sp, #36	@ 0x24
 800cfaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfae:	bf00      	nop

0800cfb0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800cfb0:	eef0 7a60 	vmov.f32	s15, s1
 800cfb4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800cfb8:	6803      	ldr	r3, [r0, #0]
 800cfba:	ee17 2a90 	vmov	r2, s15
 800cfbe:	eef0 7a40 	vmov.f32	s15, s0
 800cfc2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800cfc6:	689b      	ldr	r3, [r3, #8]
 800cfc8:	ee17 1a90 	vmov	r1, s15
 800cfcc:	4718      	bx	r3
	...

0800cfd0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800cfd0:	b510      	push	{r4, lr}
 800cfd2:	4b04      	ldr	r3, [pc, #16]	@ (800cfe4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800cfd4:	4604      	mov	r4, r0
 800cfd6:	f840 3b14 	str.w	r3, [r0], #20
 800cfda:	f001 f8d3 	bl	800e184 <_ZN8touchgfx7OutlineD1Ev>
 800cfde:	4620      	mov	r0, r4
 800cfe0:	bd10      	pop	{r4, pc}
 800cfe2:	bf00      	nop
 800cfe4:	0802619c 	.word	0x0802619c

0800cfe8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800cfe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfec:	ed2d 8b04 	vpush	{d8-d9}
 800cff0:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800cff4:	b0b5      	sub	sp, #212	@ 0xd4
 800cff6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800cffa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cffe:	4605      	mov	r5, r0
 800d000:	468b      	mov	fp, r1
 800d002:	9206      	str	r2, [sp, #24]
 800d004:	461e      	mov	r6, r3
 800d006:	f04f 0400 	mov.w	r4, #0
 800d00a:	f240 814e 	bls.w	800d2aa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800d00e:	23ff      	movs	r3, #255	@ 0xff
 800d010:	9300      	str	r3, [sp, #0]
 800d012:	1d02      	adds	r2, r0, #4
 800d014:	6981      	ldr	r1, [r0, #24]
 800d016:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800d018:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800d2b0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800d01c:	a808      	add	r0, sp, #32
 800d01e:	f014 fdc1 	bl	8021ba4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d022:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800d026:	4ba3      	ldr	r3, [pc, #652]	@ (800d2b4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800d028:	edd5 6a08 	vldr	s13, [r5, #32]
 800d02c:	9308      	str	r3, [sp, #32]
 800d02e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d036:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800d03a:	bf48      	it	mi
 800d03c:	eef1 7a67 	vnegmi.f32	s15, s15
 800d040:	ee67 7a87 	vmul.f32	s15, s15, s14
 800d044:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800d048:	2201      	movs	r2, #1
 800d04a:	9325      	str	r3, [sp, #148]	@ 0x94
 800d04c:	2300      	movs	r3, #0
 800d04e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800d052:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800d056:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800d05a:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800d05e:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800d062:	7f6a      	ldrb	r2, [r5, #29]
 800d064:	7fab      	ldrb	r3, [r5, #30]
 800d066:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800d06a:	435a      	muls	r2, r3
 800d06c:	ee27 7a26 	vmul.f32	s14, s14, s13
 800d070:	1c53      	adds	r3, r2, #1
 800d072:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800d076:	ee67 7a27 	vmul.f32	s15, s14, s15
 800d07a:	f04f 0800 	mov.w	r8, #0
 800d07e:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800d082:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800d086:	942a      	str	r4, [sp, #168]	@ 0xa8
 800d088:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800d08c:	942b      	str	r4, [sp, #172]	@ 0xac
 800d08e:	942c      	str	r4, [sp, #176]	@ 0xb0
 800d090:	942d      	str	r4, [sp, #180]	@ 0xb4
 800d092:	942e      	str	r4, [sp, #184]	@ 0xb8
 800d094:	942f      	str	r4, [sp, #188]	@ 0xbc
 800d096:	9430      	str	r4, [sp, #192]	@ 0xc0
 800d098:	9431      	str	r4, [sp, #196]	@ 0xc4
 800d09a:	9432      	str	r4, [sp, #200]	@ 0xc8
 800d09c:	9433      	str	r4, [sp, #204]	@ 0xcc
 800d09e:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800d0a2:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800d0a6:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800d0aa:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800d0ae:	eef0 9a49 	vmov.f32	s19, s18
 800d0b2:	eeb0 8a49 	vmov.f32	s16, s18
 800d0b6:	eef0 8a49 	vmov.f32	s17, s18
 800d0ba:	4644      	mov	r4, r8
 800d0bc:	46c1      	mov	r9, r8
 800d0be:	af08      	add	r7, sp, #32
 800d0c0:	f04f 0a01 	mov.w	sl, #1
 800d0c4:	9b06      	ldr	r3, [sp, #24]
 800d0c6:	454b      	cmp	r3, r9
 800d0c8:	f000 80cc 	beq.w	800d264 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800d0cc:	f109 0301 	add.w	r3, r9, #1
 800d0d0:	9305      	str	r3, [sp, #20]
 800d0d2:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800d0d6:	2b06      	cmp	r3, #6
 800d0d8:	d839      	bhi.n	800d14e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d0da:	e8df f003 	tbb	[pc, r3]
 800d0de:	3b04      	.short	0x3b04
 800d0e0:	817c6f60 	.word	0x817c6f60
 800d0e4:	a0          	.byte	0xa0
 800d0e5:	00          	.byte	0x00
 800d0e6:	45c1      	cmp	r9, r8
 800d0e8:	d92b      	bls.n	800d142 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800d0ea:	eef0 0a49 	vmov.f32	s1, s18
 800d0ee:	eeb0 0a69 	vmov.f32	s0, s19
 800d0f2:	4638      	mov	r0, r7
 800d0f4:	f7ff fdde 	bl	800ccb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d0f8:	4638      	mov	r0, r7
 800d0fa:	f7ff fe67 	bl	800cdcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d0fe:	4681      	mov	r9, r0
 800d100:	b9f8      	cbnz	r0, 800d142 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800d102:	eef0 0a49 	vmov.f32	s1, s18
 800d106:	eeb0 0a69 	vmov.f32	s0, s19
 800d10a:	4638      	mov	r0, r7
 800d10c:	f7ff fe8d 	bl	800ce2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800d110:	4628      	mov	r0, r5
 800d112:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800d116:	e9cd b600 	strd	fp, r6, [sp]
 800d11a:	4623      	mov	r3, r4
 800d11c:	9a05      	ldr	r2, [sp, #20]
 800d11e:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800d122:	4641      	mov	r1, r8
 800d124:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800d128:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800d12c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800d130:	f7ff feae 	bl	800ce90 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d134:	eef0 0a49 	vmov.f32	s1, s18
 800d138:	eeb0 0a69 	vmov.f32	s0, s19
 800d13c:	4638      	mov	r0, r7
 800d13e:	f7ff fe74 	bl	800ce2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800d142:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800d146:	eeb0 8a49 	vmov.f32	s16, s18
 800d14a:	eef0 8a69 	vmov.f32	s17, s19
 800d14e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800d152:	e7b7      	b.n	800d0c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800d154:	45c1      	cmp	r9, r8
 800d156:	d90d      	bls.n	800d174 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800d158:	4638      	mov	r0, r7
 800d15a:	f7ff fe37 	bl	800cdcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d15e:	b948      	cbnz	r0, 800d174 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800d160:	e9cd a702 	strd	sl, r7, [sp, #8]
 800d164:	e9cd b600 	strd	fp, r6, [sp]
 800d168:	4623      	mov	r3, r4
 800d16a:	464a      	mov	r2, r9
 800d16c:	4641      	mov	r1, r8
 800d16e:	4628      	mov	r0, r5
 800d170:	f7ff fe8e 	bl	800ce90 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d174:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d178:	edd3 8a00 	vldr	s17, [r3]
 800d17c:	ed93 8a01 	vldr	s16, [r3, #4]
 800d180:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800d184:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800d188:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800d18c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800d190:	3402      	adds	r4, #2
 800d192:	46c8      	mov	r8, r9
 800d194:	eeb0 9a48 	vmov.f32	s18, s16
 800d198:	eef0 9a68 	vmov.f32	s19, s17
 800d19c:	e7d7      	b.n	800d14e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d19e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d1a2:	edd3 8a00 	vldr	s17, [r3]
 800d1a6:	ed93 8a01 	vldr	s16, [r3, #4]
 800d1aa:	eeb0 0a68 	vmov.f32	s0, s17
 800d1ae:	eef0 0a48 	vmov.f32	s1, s16
 800d1b2:	4638      	mov	r0, r7
 800d1b4:	f7ff fd7e 	bl	800ccb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d1b8:	3402      	adds	r4, #2
 800d1ba:	e7c8      	b.n	800d14e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d1bc:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d1c0:	edd3 8a00 	vldr	s17, [r3]
 800d1c4:	eef0 0a48 	vmov.f32	s1, s16
 800d1c8:	eeb0 0a68 	vmov.f32	s0, s17
 800d1cc:	4638      	mov	r0, r7
 800d1ce:	f7ff fd71 	bl	800ccb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d1d2:	3401      	adds	r4, #1
 800d1d4:	e7bb      	b.n	800d14e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d1d6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d1da:	ed93 8a00 	vldr	s16, [r3]
 800d1de:	e7f1      	b.n	800d1c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800d1e0:	00a3      	lsls	r3, r4, #2
 800d1e2:	f103 0208 	add.w	r2, r3, #8
 800d1e6:	f103 090c 	add.w	r9, r3, #12
 800d1ea:	4432      	add	r2, r6
 800d1ec:	4433      	add	r3, r6
 800d1ee:	44b1      	add	r9, r6
 800d1f0:	ed92 2a00 	vldr	s4, [r2]
 800d1f4:	edd9 2a00 	vldr	s5, [r9]
 800d1f8:	edd3 1a01 	vldr	s3, [r3, #4]
 800d1fc:	ed93 1a00 	vldr	s2, [r3]
 800d200:	9207      	str	r2, [sp, #28]
 800d202:	eef0 0a48 	vmov.f32	s1, s16
 800d206:	eeb0 0a68 	vmov.f32	s0, s17
 800d20a:	4638      	mov	r0, r7
 800d20c:	f7ff fabc 	bl	800c788 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800d210:	9a07      	ldr	r2, [sp, #28]
 800d212:	ed99 8a00 	vldr	s16, [r9]
 800d216:	edd2 8a00 	vldr	s17, [r2]
 800d21a:	3404      	adds	r4, #4
 800d21c:	e797      	b.n	800d14e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d21e:	00a3      	lsls	r3, r4, #2
 800d220:	f103 0210 	add.w	r2, r3, #16
 800d224:	f103 0914 	add.w	r9, r3, #20
 800d228:	4432      	add	r2, r6
 800d22a:	4433      	add	r3, r6
 800d22c:	44b1      	add	r9, r6
 800d22e:	ed92 3a00 	vldr	s6, [r2]
 800d232:	edd9 3a00 	vldr	s7, [r9]
 800d236:	edd3 2a03 	vldr	s5, [r3, #12]
 800d23a:	ed93 2a02 	vldr	s4, [r3, #8]
 800d23e:	edd3 1a01 	vldr	s3, [r3, #4]
 800d242:	ed93 1a00 	vldr	s2, [r3]
 800d246:	9207      	str	r2, [sp, #28]
 800d248:	eef0 0a48 	vmov.f32	s1, s16
 800d24c:	eeb0 0a68 	vmov.f32	s0, s17
 800d250:	4638      	mov	r0, r7
 800d252:	f7ff fab8 	bl	800c7c6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800d256:	9a07      	ldr	r2, [sp, #28]
 800d258:	ed99 8a00 	vldr	s16, [r9]
 800d25c:	edd2 8a00 	vldr	s17, [r2]
 800d260:	3406      	adds	r4, #6
 800d262:	e774      	b.n	800d14e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d264:	9b06      	ldr	r3, [sp, #24]
 800d266:	4543      	cmp	r3, r8
 800d268:	af08      	add	r7, sp, #32
 800d26a:	d90f      	bls.n	800d28c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800d26c:	4638      	mov	r0, r7
 800d26e:	f7ff fdad 	bl	800cdcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d272:	b958      	cbnz	r0, 800d28c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800d274:	2301      	movs	r3, #1
 800d276:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800d27a:	9703      	str	r7, [sp, #12]
 800d27c:	f8cd b000 	str.w	fp, [sp]
 800d280:	4623      	mov	r3, r4
 800d282:	9a06      	ldr	r2, [sp, #24]
 800d284:	4641      	mov	r1, r8
 800d286:	4628      	mov	r0, r5
 800d288:	f7ff fe02 	bl	800ce90 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d28c:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800d290:	4638      	mov	r0, r7
 800d292:	f014 fd1b 	bl	8021ccc <_ZN8touchgfx6Canvas6renderEh>
 800d296:	4604      	mov	r4, r0
 800d298:	4638      	mov	r0, r7
 800d29a:	f7ff fe99 	bl	800cfd0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800d29e:	4620      	mov	r0, r4
 800d2a0:	b035      	add	sp, #212	@ 0xd4
 800d2a2:	ecbd 8b04 	vpop	{d8-d9}
 800d2a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2aa:	2401      	movs	r4, #1
 800d2ac:	e7f7      	b.n	800d29e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800d2ae:	bf00      	nop
 800d2b0:	00000000 	.word	0x00000000
 800d2b4:	08025ae8 	.word	0x08025ae8

0800d2b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800d2b8:	b510      	push	{r4, lr}
 800d2ba:	4604      	mov	r4, r0
 800d2bc:	f7ff fe88 	bl	800cfd0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800d2c0:	4620      	mov	r0, r4
 800d2c2:	21b0      	movs	r1, #176	@ 0xb0
 800d2c4:	f015 f8d1 	bl	802246a <_ZdlPvj>
 800d2c8:	4620      	mov	r0, r4
 800d2ca:	bd10      	pop	{r4, pc}

0800d2cc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800d2cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d2d0:	ed2d 8b06 	vpush	{d8-d10}
 800d2d4:	b0aa      	sub	sp, #168	@ 0xa8
 800d2d6:	4698      	mov	r8, r3
 800d2d8:	23ff      	movs	r3, #255	@ 0xff
 800d2da:	4607      	mov	r7, r0
 800d2dc:	9300      	str	r3, [sp, #0]
 800d2de:	4689      	mov	r9, r1
 800d2e0:	4692      	mov	sl, r2
 800d2e2:	6981      	ldr	r1, [r0, #24]
 800d2e4:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800d2e6:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800d4f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800d2ea:	1d02      	adds	r2, r0, #4
 800d2ec:	a80d      	add	r0, sp, #52	@ 0x34
 800d2ee:	f014 fc59 	bl	8021ba4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d2f2:	7f3b      	ldrb	r3, [r7, #28]
 800d2f4:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800d4f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800d2f8:	1e5a      	subs	r2, r3, #1
 800d2fa:	4253      	negs	r3, r2
 800d2fc:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800d300:	4153      	adcs	r3, r2
 800d302:	eeb0 0a60 	vmov.f32	s0, s1
 800d306:	4628      	mov	r0, r5
 800d308:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800d30c:	f004 fc07 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d310:	44ca      	add	sl, r9
 800d312:	eeb0 9a40 	vmov.f32	s18, s0
 800d316:	eef0 9a60 	vmov.f32	s19, s1
 800d31a:	eef0 8a48 	vmov.f32	s17, s16
 800d31e:	2400      	movs	r4, #0
 800d320:	45ca      	cmp	sl, r9
 800d322:	f000 80cd 	beq.w	800d4c0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800d326:	f819 3b01 	ldrb.w	r3, [r9], #1
 800d32a:	2b06      	cmp	r3, #6
 800d32c:	d8f8      	bhi.n	800d320 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d32e:	e8df f003 	tbb	[pc, r3]
 800d332:	0804      	.short	0x0804
 800d334:	58533f2a 	.word	0x58533f2a
 800d338:	8a          	.byte	0x8a
 800d339:	00          	.byte	0x00
 800d33a:	a80d      	add	r0, sp, #52	@ 0x34
 800d33c:	f014 fca4 	bl	8021c88 <_ZN8touchgfx6Canvas5closeEv>
 800d340:	e7ee      	b.n	800d320 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d342:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d346:	edd3 8a00 	vldr	s17, [r3]
 800d34a:	ed93 8a01 	vldr	s16, [r3, #4]
 800d34e:	eeb0 0a68 	vmov.f32	s0, s17
 800d352:	eef0 0a48 	vmov.f32	s1, s16
 800d356:	4628      	mov	r0, r5
 800d358:	f004 fbe1 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d35c:	eef0 7a60 	vmov.f32	s15, s1
 800d360:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d364:	a80d      	add	r0, sp, #52	@ 0x34
 800d366:	ee17 2a90 	vmov	r2, s15
 800d36a:	eef0 7a40 	vmov.f32	s15, s0
 800d36e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d372:	eeb0 9a40 	vmov.f32	s18, s0
 800d376:	ee17 1a90 	vmov	r1, s15
 800d37a:	eef0 9a60 	vmov.f32	s19, s1
 800d37e:	f014 fd5d 	bl	8021e3c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d382:	3402      	adds	r4, #2
 800d384:	e7cc      	b.n	800d320 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d386:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d38a:	edd3 8a00 	vldr	s17, [r3]
 800d38e:	ed93 8a01 	vldr	s16, [r3, #4]
 800d392:	eeb0 0a68 	vmov.f32	s0, s17
 800d396:	eef0 0a48 	vmov.f32	s1, s16
 800d39a:	4628      	mov	r0, r5
 800d39c:	f004 fbbf 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d3a0:	a80d      	add	r0, sp, #52	@ 0x34
 800d3a2:	eeb0 9a40 	vmov.f32	s18, s0
 800d3a6:	eef0 9a60 	vmov.f32	s19, s1
 800d3aa:	f7ff fe01 	bl	800cfb0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800d3ae:	e7e8      	b.n	800d382 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800d3b0:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d3b4:	edd3 8a00 	vldr	s17, [r3]
 800d3b8:	eef0 0a48 	vmov.f32	s1, s16
 800d3bc:	eeb0 0a68 	vmov.f32	s0, s17
 800d3c0:	4628      	mov	r0, r5
 800d3c2:	f004 fbac 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d3c6:	a80d      	add	r0, sp, #52	@ 0x34
 800d3c8:	eeb0 9a40 	vmov.f32	s18, s0
 800d3cc:	eef0 9a60 	vmov.f32	s19, s1
 800d3d0:	3401      	adds	r4, #1
 800d3d2:	f7ff fded 	bl	800cfb0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800d3d6:	e7a3      	b.n	800d320 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d3d8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d3dc:	ed93 8a00 	vldr	s16, [r3]
 800d3e0:	e7ea      	b.n	800d3b8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800d3e2:	1ca3      	adds	r3, r4, #2
 800d3e4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800d3e8:	ed53 0a01 	vldr	s1, [r3, #-4]
 800d3ec:	ed13 0a02 	vldr	s0, [r3, #-8]
 800d3f0:	edd3 8a00 	vldr	s17, [r3]
 800d3f4:	ed93 8a01 	vldr	s16, [r3, #4]
 800d3f8:	4628      	mov	r0, r5
 800d3fa:	f004 fb90 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d3fe:	4628      	mov	r0, r5
 800d400:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800d404:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800d408:	eeb0 0a68 	vmov.f32	s0, s17
 800d40c:	eef0 0a48 	vmov.f32	s1, s16
 800d410:	f004 fb85 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d414:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800d418:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800d41c:	eef0 2a60 	vmov.f32	s5, s1
 800d420:	eeb0 2a40 	vmov.f32	s4, s0
 800d424:	eeb0 aa40 	vmov.f32	s20, s0
 800d428:	eef0 aa60 	vmov.f32	s21, s1
 800d42c:	eeb0 0a49 	vmov.f32	s0, s18
 800d430:	eef0 0a69 	vmov.f32	s1, s19
 800d434:	a80d      	add	r0, sp, #52	@ 0x34
 800d436:	f7ff f9a7 	bl	800c788 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800d43a:	3404      	adds	r4, #4
 800d43c:	eef0 9a6a 	vmov.f32	s19, s21
 800d440:	eeb0 9a4a 	vmov.f32	s18, s20
 800d444:	e76c      	b.n	800d320 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d446:	1d26      	adds	r6, r4, #4
 800d448:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800d44c:	ed56 0a03 	vldr	s1, [r6, #-12]
 800d450:	ed16 0a04 	vldr	s0, [r6, #-16]
 800d454:	edd6 8a00 	vldr	s17, [r6]
 800d458:	ed96 8a01 	vldr	s16, [r6, #4]
 800d45c:	4628      	mov	r0, r5
 800d45e:	f004 fb5e 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d462:	4628      	mov	r0, r5
 800d464:	ed8d 0a07 	vstr	s0, [sp, #28]
 800d468:	edcd 0a08 	vstr	s1, [sp, #32]
 800d46c:	ed16 0a02 	vldr	s0, [r6, #-8]
 800d470:	ed56 0a01 	vldr	s1, [r6, #-4]
 800d474:	f004 fb53 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d478:	4628      	mov	r0, r5
 800d47a:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800d47e:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800d482:	eeb0 0a68 	vmov.f32	s0, s17
 800d486:	eef0 0a48 	vmov.f32	s1, s16
 800d48a:	f004 fb48 	bl	8011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d48e:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800d492:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800d496:	eddd 1a08 	vldr	s3, [sp, #32]
 800d49a:	ed9d 1a07 	vldr	s2, [sp, #28]
 800d49e:	eef0 3a60 	vmov.f32	s7, s1
 800d4a2:	eeb0 3a40 	vmov.f32	s6, s0
 800d4a6:	eeb0 aa40 	vmov.f32	s20, s0
 800d4aa:	eef0 aa60 	vmov.f32	s21, s1
 800d4ae:	eeb0 0a49 	vmov.f32	s0, s18
 800d4b2:	eef0 0a69 	vmov.f32	s1, s19
 800d4b6:	a80d      	add	r0, sp, #52	@ 0x34
 800d4b8:	f7ff f985 	bl	800c7c6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800d4bc:	3406      	adds	r4, #6
 800d4be:	e7bd      	b.n	800d43c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800d4c0:	7f7b      	ldrb	r3, [r7, #29]
 800d4c2:	7fb9      	ldrb	r1, [r7, #30]
 800d4c4:	4359      	muls	r1, r3
 800d4c6:	1c4b      	adds	r3, r1, #1
 800d4c8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800d4cc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800d4d0:	a80d      	add	r0, sp, #52	@ 0x34
 800d4d2:	f014 fbfb 	bl	8021ccc <_ZN8touchgfx6Canvas6renderEh>
 800d4d6:	4b07      	ldr	r3, [pc, #28]	@ (800d4f4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800d4d8:	930d      	str	r3, [sp, #52]	@ 0x34
 800d4da:	4604      	mov	r4, r0
 800d4dc:	a812      	add	r0, sp, #72	@ 0x48
 800d4de:	f000 fe51 	bl	800e184 <_ZN8touchgfx7OutlineD1Ev>
 800d4e2:	4620      	mov	r0, r4
 800d4e4:	b02a      	add	sp, #168	@ 0xa8
 800d4e6:	ecbd 8b06 	vpop	{d8-d10}
 800d4ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d4ee:	bf00      	nop
 800d4f0:	00000000 	.word	0x00000000
 800d4f4:	0802619c 	.word	0x0802619c

0800d4f8 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800d4f8:	b410      	push	{r4}
 800d4fa:	7f04      	ldrb	r4, [r0, #28]
 800d4fc:	b11c      	cbz	r4, 800d506 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800d4fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d502:	f7ff bee3 	b.w	800d2cc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800d506:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d50a:	f7ff bd6d 	b.w	800cfe8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800d510 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800d510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d514:	4691      	mov	r9, r2
 800d516:	4602      	mov	r2, r0
 800d518:	4605      	mov	r5, r0
 800d51a:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800d51e:	b085      	sub	sp, #20
 800d520:	4688      	mov	r8, r1
 800d522:	6851      	ldr	r1, [r2, #4]
 800d524:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800d528:	469a      	mov	sl, r3
 800d52a:	ab02      	add	r3, sp, #8
 800d52c:	c303      	stmia	r3!, {r0, r1}
 800d52e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d532:	2b00      	cmp	r3, #0
 800d534:	af02      	add	r7, sp, #8
 800d536:	dd08      	ble.n	800d54a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d538:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800d53c:	2c00      	cmp	r4, #0
 800d53e:	dd04      	ble.n	800d54a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d540:	4a2e      	ldr	r2, [pc, #184]	@ (800d5fc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800d542:	7812      	ldrb	r2, [r2, #0]
 800d544:	b122      	cbz	r2, 800d550 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800d546:	2a01      	cmp	r2, #1
 800d548:	d02d      	beq.n	800d5a6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800d54a:	b005      	add	sp, #20
 800d54c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d550:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d554:	441c      	add	r4, r3
 800d556:	b2a4      	uxth	r4, r4
 800d558:	b226      	sxth	r6, r4
 800d55a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800d55e:	42b3      	cmp	r3, r6
 800d560:	daf3      	bge.n	800d54a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d562:	e9cd b700 	strd	fp, r7, [sp]
 800d566:	4653      	mov	r3, sl
 800d568:	464a      	mov	r2, r9
 800d56a:	4641      	mov	r1, r8
 800d56c:	4628      	mov	r0, r5
 800d56e:	f7ff ffc3 	bl	800d4f8 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800d572:	b940      	cbnz	r0, 800d586 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800d574:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d578:	2b01      	cmp	r3, #1
 800d57a:	d004      	beq.n	800d586 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800d57c:	3301      	adds	r3, #1
 800d57e:	105b      	asrs	r3, r3, #1
 800d580:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d584:	e7ed      	b.n	800d562 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800d586:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d58a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d58e:	4413      	add	r3, r2
 800d590:	b29b      	uxth	r3, r3
 800d592:	441a      	add	r2, r3
 800d594:	b212      	sxth	r2, r2
 800d596:	4296      	cmp	r6, r2
 800d598:	f8ad 300a 	strh.w	r3, [sp, #10]
 800d59c:	dadd      	bge.n	800d55a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800d59e:	1ae3      	subs	r3, r4, r3
 800d5a0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d5a4:	e7d9      	b.n	800d55a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800d5a6:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800d5aa:	441c      	add	r4, r3
 800d5ac:	b2a4      	uxth	r4, r4
 800d5ae:	b226      	sxth	r6, r4
 800d5b0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800d5b4:	42b3      	cmp	r3, r6
 800d5b6:	dac8      	bge.n	800d54a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d5b8:	e9cd b700 	strd	fp, r7, [sp]
 800d5bc:	4653      	mov	r3, sl
 800d5be:	464a      	mov	r2, r9
 800d5c0:	4641      	mov	r1, r8
 800d5c2:	4628      	mov	r0, r5
 800d5c4:	f7ff ff98 	bl	800d4f8 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800d5c8:	b940      	cbnz	r0, 800d5dc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800d5ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d5ce:	2b01      	cmp	r3, #1
 800d5d0:	d004      	beq.n	800d5dc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800d5d2:	3301      	adds	r3, #1
 800d5d4:	105b      	asrs	r3, r3, #1
 800d5d6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d5da:	e7ed      	b.n	800d5b8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800d5dc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d5e0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d5e4:	4413      	add	r3, r2
 800d5e6:	b29b      	uxth	r3, r3
 800d5e8:	441a      	add	r2, r3
 800d5ea:	b212      	sxth	r2, r2
 800d5ec:	4296      	cmp	r6, r2
 800d5ee:	f8ad 3008 	strh.w	r3, [sp, #8]
 800d5f2:	dadd      	bge.n	800d5b0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800d5f4:	1ae3      	subs	r3, r4, r3
 800d5f6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d5fa:	e7d9      	b.n	800d5b0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800d5fc:	20014036 	.word	0x20014036

0800d600 <_ZN8touchgfx6CircleD1Ev>:
 800d600:	4770      	bx	lr

0800d602 <_ZN8touchgfx6CircleD0Ev>:
 800d602:	b510      	push	{r4, lr}
 800d604:	2148      	movs	r1, #72	@ 0x48
 800d606:	4604      	mov	r4, r0
 800d608:	f014 ff2f 	bl	802246a <_ZdlPvj>
 800d60c:	4620      	mov	r0, r4
 800d60e:	bd10      	pop	{r4, pc}

0800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800d610:	b507      	push	{r0, r1, r2, lr}
 800d612:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800d616:	ab01      	add	r3, sp, #4
 800d618:	6809      	ldr	r1, [r1, #0]
 800d61a:	6800      	ldr	r0, [r0, #0]
 800d61c:	f004 fb98 	bl	8011d50 <_ZN8touchgfx6muldivElllRl>
 800d620:	b003      	add	sp, #12
 800d622:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800d628 <_ZN8touchgfx7CWRUtil4sineEi>:
 800d628:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 800d62c:	fb90 f2f3 	sdiv	r2, r0, r3
 800d630:	fb02 0013 	mls	r0, r2, r3, r0
 800d634:	2800      	cmp	r0, #0
 800d636:	bfb8      	it	lt
 800d638:	18c0      	addlt	r0, r0, r3
 800d63a:	285a      	cmp	r0, #90	@ 0x5a
 800d63c:	4b09      	ldr	r3, [pc, #36]	@ (800d664 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800d63e:	dc02      	bgt.n	800d646 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800d640:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800d644:	4770      	bx	lr
 800d646:	28b4      	cmp	r0, #180	@ 0xb4
 800d648:	dc02      	bgt.n	800d650 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800d64a:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 800d64e:	e7f7      	b.n	800d640 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800d650:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 800d654:	bfd4      	ite	le
 800d656:	38b4      	suble	r0, #180	@ 0xb4
 800d658:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 800d65c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800d660:	4240      	negs	r0, r0
 800d662:	4770      	bx	lr
 800d664:	08025b40 	.word	0x08025b40

0800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800d668:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 800d66c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d66e:	fb90 f2f3 	sdiv	r2, r0, r3
 800d672:	fb02 0013 	mls	r0, r2, r3, r0
 800d676:	2800      	cmp	r0, #0
 800d678:	bfb8      	it	lt
 800d67a:	18c0      	addlt	r0, r0, r3
 800d67c:	1144      	asrs	r4, r0, #5
 800d67e:	f000 061f 	and.w	r6, r0, #31
 800d682:	4620      	mov	r0, r4
 800d684:	f7ff ffd0 	bl	800d628 <_ZN8touchgfx7CWRUtil4sineEi>
 800d688:	4605      	mov	r5, r0
 800d68a:	b90e      	cbnz	r6, 800d690 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800d68c:	b002      	add	sp, #8
 800d68e:	bd70      	pop	{r4, r5, r6, pc}
 800d690:	1c60      	adds	r0, r4, #1
 800d692:	f7ff ffc9 	bl	800d628 <_ZN8touchgfx7CWRUtil4sineEi>
 800d696:	ab01      	add	r3, sp, #4
 800d698:	2220      	movs	r2, #32
 800d69a:	4631      	mov	r1, r6
 800d69c:	1b40      	subs	r0, r0, r5
 800d69e:	f004 fb57 	bl	8011d50 <_ZN8touchgfx6muldivElllRl>
 800d6a2:	4428      	add	r0, r5
 800d6a4:	e7f2      	b.n	800d68c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800d6a6:	b508      	push	{r3, lr}
 800d6a8:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 800d6ac:	f7ff ffdc 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d6b0:	bd08      	pop	{r3, pc}
	...

0800d6b4 <_ZN8touchgfx6CircleC1Ev>:
 800d6b4:	b510      	push	{r4, lr}
 800d6b6:	4604      	mov	r4, r0
 800d6b8:	f000 fd0a 	bl	800e0d0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800d6bc:	4b08      	ldr	r3, [pc, #32]	@ (800d6e0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800d6be:	6023      	str	r3, [r4, #0]
 800d6c0:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 800d6c4:	2300      	movs	r3, #0
 800d6c6:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 800d6ca:	f24b 4205 	movw	r2, #46085	@ 0xb405
 800d6ce:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 800d6d2:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 800d6d6:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 800d6da:	60a3      	str	r3, [r4, #8]
 800d6dc:	4620      	mov	r0, r4
 800d6de:	bd10      	pop	{r4, pc}
 800d6e0:	08025c00 	.word	0x08025c00

0800d6e4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800d6e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6e8:	428a      	cmp	r2, r1
 800d6ea:	4680      	mov	r8, r0
 800d6ec:	4610      	mov	r0, r2
 800d6ee:	4699      	mov	r9, r3
 800d6f0:	bfa6      	itte	ge
 800d6f2:	460a      	movge	r2, r1
 800d6f4:	4603      	movge	r3, r0
 800d6f6:	460b      	movlt	r3, r1
 800d6f8:	1a99      	subs	r1, r3, r2
 800d6fa:	b085      	sub	sp, #20
 800d6fc:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 800d700:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 800d704:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 800d706:	bfa4      	itt	ge
 800d708:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 800d70c:	2200      	movge	r2, #0
 800d70e:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 800d712:	9300      	str	r3, [sp, #0]
 800d714:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 800d718:	f102 0b01 	add.w	fp, r2, #1
 800d71c:	2c00      	cmp	r4, #0
 800d71e:	f040 80af 	bne.w	800d880 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 800d722:	4610      	mov	r0, r2
 800d724:	9201      	str	r2, [sp, #4]
 800d726:	f7ff ff9f 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d72a:	a903      	add	r1, sp, #12
 800d72c:	9003      	str	r0, [sp, #12]
 800d72e:	4650      	mov	r0, sl
 800d730:	f7ff ff6e 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d734:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800d738:	9a01      	ldr	r2, [sp, #4]
 800d73a:	4408      	add	r0, r1
 800d73c:	f8d9 1000 	ldr.w	r1, [r9]
 800d740:	4281      	cmp	r1, r0
 800d742:	bfc8      	it	gt
 800d744:	f8c9 0000 	strgt.w	r0, [r9]
 800d748:	6839      	ldr	r1, [r7, #0]
 800d74a:	4288      	cmp	r0, r1
 800d74c:	bfc8      	it	gt
 800d74e:	6038      	strgt	r0, [r7, #0]
 800d750:	4610      	mov	r0, r2
 800d752:	f7ff ffa8 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d756:	a903      	add	r1, sp, #12
 800d758:	9003      	str	r0, [sp, #12]
 800d75a:	4650      	mov	r0, sl
 800d75c:	f7ff ff58 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d760:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d764:	1a10      	subs	r0, r2, r0
 800d766:	6832      	ldr	r2, [r6, #0]
 800d768:	4282      	cmp	r2, r0
 800d76a:	bfc8      	it	gt
 800d76c:	6030      	strgt	r0, [r6, #0]
 800d76e:	682a      	ldr	r2, [r5, #0]
 800d770:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800d774:	4290      	cmp	r0, r2
 800d776:	fb9b f2f1 	sdiv	r2, fp, r1
 800d77a:	fb01 b212 	mls	r2, r1, r2, fp
 800d77e:	eba1 0202 	sub.w	r2, r1, r2
 800d782:	bfc8      	it	gt
 800d784:	6028      	strgt	r0, [r5, #0]
 800d786:	fb92 f0f1 	sdiv	r0, r2, r1
 800d78a:	fb01 2210 	mls	r2, r1, r0, r2
 800d78e:	4493      	add	fp, r2
 800d790:	9b00      	ldr	r3, [sp, #0]
 800d792:	455b      	cmp	r3, fp
 800d794:	db2a      	blt.n	800d7ec <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 800d796:	4658      	mov	r0, fp
 800d798:	f7ff ff66 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d79c:	a903      	add	r1, sp, #12
 800d79e:	9003      	str	r0, [sp, #12]
 800d7a0:	4650      	mov	r0, sl
 800d7a2:	f7ff ff35 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d7a6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d7aa:	4410      	add	r0, r2
 800d7ac:	f8d9 2000 	ldr.w	r2, [r9]
 800d7b0:	4282      	cmp	r2, r0
 800d7b2:	bfc8      	it	gt
 800d7b4:	f8c9 0000 	strgt.w	r0, [r9]
 800d7b8:	683a      	ldr	r2, [r7, #0]
 800d7ba:	4290      	cmp	r0, r2
 800d7bc:	bfc8      	it	gt
 800d7be:	6038      	strgt	r0, [r7, #0]
 800d7c0:	4658      	mov	r0, fp
 800d7c2:	f7ff ff70 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d7c6:	a903      	add	r1, sp, #12
 800d7c8:	9003      	str	r0, [sp, #12]
 800d7ca:	4650      	mov	r0, sl
 800d7cc:	f7ff ff20 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d7d0:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d7d4:	1a10      	subs	r0, r2, r0
 800d7d6:	6832      	ldr	r2, [r6, #0]
 800d7d8:	4282      	cmp	r2, r0
 800d7da:	bfc8      	it	gt
 800d7dc:	6030      	strgt	r0, [r6, #0]
 800d7de:	682a      	ldr	r2, [r5, #0]
 800d7e0:	4290      	cmp	r0, r2
 800d7e2:	bfc8      	it	gt
 800d7e4:	6028      	strgt	r0, [r5, #0]
 800d7e6:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800d7ea:	e7d1      	b.n	800d790 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 800d7ec:	9b00      	ldr	r3, [sp, #0]
 800d7ee:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800d7f2:	455b      	cmp	r3, fp
 800d7f4:	dd27      	ble.n	800d846 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 800d7f6:	4618      	mov	r0, r3
 800d7f8:	f7ff ff36 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d7fc:	a903      	add	r1, sp, #12
 800d7fe:	9003      	str	r0, [sp, #12]
 800d800:	4650      	mov	r0, sl
 800d802:	f7ff ff05 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d806:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d80a:	4410      	add	r0, r2
 800d80c:	f8d9 2000 	ldr.w	r2, [r9]
 800d810:	4282      	cmp	r2, r0
 800d812:	bfc8      	it	gt
 800d814:	f8c9 0000 	strgt.w	r0, [r9]
 800d818:	683a      	ldr	r2, [r7, #0]
 800d81a:	4290      	cmp	r0, r2
 800d81c:	bfc8      	it	gt
 800d81e:	6038      	strgt	r0, [r7, #0]
 800d820:	9800      	ldr	r0, [sp, #0]
 800d822:	f7ff ff40 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d826:	a903      	add	r1, sp, #12
 800d828:	9003      	str	r0, [sp, #12]
 800d82a:	4650      	mov	r0, sl
 800d82c:	f7ff fef0 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d830:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d834:	1a10      	subs	r0, r2, r0
 800d836:	6832      	ldr	r2, [r6, #0]
 800d838:	4282      	cmp	r2, r0
 800d83a:	bfc8      	it	gt
 800d83c:	6030      	strgt	r0, [r6, #0]
 800d83e:	682a      	ldr	r2, [r5, #0]
 800d840:	4290      	cmp	r0, r2
 800d842:	bfc8      	it	gt
 800d844:	6028      	strgt	r0, [r5, #0]
 800d846:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d84a:	f8d9 1000 	ldr.w	r1, [r9]
 800d84e:	4291      	cmp	r1, r2
 800d850:	bfc8      	it	gt
 800d852:	f8c9 2000 	strgt.w	r2, [r9]
 800d856:	683a      	ldr	r2, [r7, #0]
 800d858:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 800d85c:	429a      	cmp	r2, r3
 800d85e:	bfb8      	it	lt
 800d860:	603b      	strlt	r3, [r7, #0]
 800d862:	6832      	ldr	r2, [r6, #0]
 800d864:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800d868:	429a      	cmp	r2, r3
 800d86a:	bfc8      	it	gt
 800d86c:	6033      	strgt	r3, [r6, #0]
 800d86e:	682a      	ldr	r2, [r5, #0]
 800d870:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800d874:	429a      	cmp	r2, r3
 800d876:	da00      	bge.n	800d87a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800d878:	602b      	str	r3, [r5, #0]
 800d87a:	b005      	add	sp, #20
 800d87c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d880:	2002      	movs	r0, #2
 800d882:	3401      	adds	r4, #1
 800d884:	fb94 f4f0 	sdiv	r4, r4, r0
 800d888:	4610      	mov	r0, r2
 800d88a:	9201      	str	r2, [sp, #4]
 800d88c:	f7ff feec 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d890:	a903      	add	r1, sp, #12
 800d892:	9003      	str	r0, [sp, #12]
 800d894:	4650      	mov	r0, sl
 800d896:	f7ff febb 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d89a:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800d89e:	9a01      	ldr	r2, [sp, #4]
 800d8a0:	4408      	add	r0, r1
 800d8a2:	f8d9 1000 	ldr.w	r1, [r9]
 800d8a6:	1b03      	subs	r3, r0, r4
 800d8a8:	4299      	cmp	r1, r3
 800d8aa:	bfc8      	it	gt
 800d8ac:	f8c9 3000 	strgt.w	r3, [r9]
 800d8b0:	6839      	ldr	r1, [r7, #0]
 800d8b2:	428b      	cmp	r3, r1
 800d8b4:	bfc8      	it	gt
 800d8b6:	603b      	strgt	r3, [r7, #0]
 800d8b8:	f8d9 1000 	ldr.w	r1, [r9]
 800d8bc:	4420      	add	r0, r4
 800d8be:	4281      	cmp	r1, r0
 800d8c0:	bfc8      	it	gt
 800d8c2:	f8c9 0000 	strgt.w	r0, [r9]
 800d8c6:	6839      	ldr	r1, [r7, #0]
 800d8c8:	4288      	cmp	r0, r1
 800d8ca:	bfc8      	it	gt
 800d8cc:	6038      	strgt	r0, [r7, #0]
 800d8ce:	4610      	mov	r0, r2
 800d8d0:	f7ff fee9 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d8d4:	a903      	add	r1, sp, #12
 800d8d6:	9003      	str	r0, [sp, #12]
 800d8d8:	4650      	mov	r0, sl
 800d8da:	f7ff fe99 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d8de:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d8e2:	1a10      	subs	r0, r2, r0
 800d8e4:	6832      	ldr	r2, [r6, #0]
 800d8e6:	1b01      	subs	r1, r0, r4
 800d8e8:	428a      	cmp	r2, r1
 800d8ea:	bfc8      	it	gt
 800d8ec:	6031      	strgt	r1, [r6, #0]
 800d8ee:	682a      	ldr	r2, [r5, #0]
 800d8f0:	4291      	cmp	r1, r2
 800d8f2:	bfc8      	it	gt
 800d8f4:	6029      	strgt	r1, [r5, #0]
 800d8f6:	6832      	ldr	r2, [r6, #0]
 800d8f8:	4420      	add	r0, r4
 800d8fa:	4282      	cmp	r2, r0
 800d8fc:	bfc8      	it	gt
 800d8fe:	6030      	strgt	r0, [r6, #0]
 800d900:	682a      	ldr	r2, [r5, #0]
 800d902:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800d906:	4290      	cmp	r0, r2
 800d908:	fb9b f2f1 	sdiv	r2, fp, r1
 800d90c:	fb01 b212 	mls	r2, r1, r2, fp
 800d910:	eba1 0202 	sub.w	r2, r1, r2
 800d914:	bfc8      	it	gt
 800d916:	6028      	strgt	r0, [r5, #0]
 800d918:	fb92 f0f1 	sdiv	r0, r2, r1
 800d91c:	fb01 2210 	mls	r2, r1, r0, r2
 800d920:	4493      	add	fp, r2
 800d922:	9b00      	ldr	r3, [sp, #0]
 800d924:	455b      	cmp	r3, fp
 800d926:	db40      	blt.n	800d9aa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 800d928:	4658      	mov	r0, fp
 800d92a:	f7ff fe9d 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d92e:	a903      	add	r1, sp, #12
 800d930:	9003      	str	r0, [sp, #12]
 800d932:	4650      	mov	r0, sl
 800d934:	f7ff fe6c 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d938:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d93c:	4410      	add	r0, r2
 800d93e:	f8d9 2000 	ldr.w	r2, [r9]
 800d942:	1b01      	subs	r1, r0, r4
 800d944:	428a      	cmp	r2, r1
 800d946:	bfc8      	it	gt
 800d948:	f8c9 1000 	strgt.w	r1, [r9]
 800d94c:	683a      	ldr	r2, [r7, #0]
 800d94e:	4291      	cmp	r1, r2
 800d950:	bfc8      	it	gt
 800d952:	6039      	strgt	r1, [r7, #0]
 800d954:	f8d9 2000 	ldr.w	r2, [r9]
 800d958:	4420      	add	r0, r4
 800d95a:	4282      	cmp	r2, r0
 800d95c:	bfc8      	it	gt
 800d95e:	f8c9 0000 	strgt.w	r0, [r9]
 800d962:	683a      	ldr	r2, [r7, #0]
 800d964:	4290      	cmp	r0, r2
 800d966:	bfc8      	it	gt
 800d968:	6038      	strgt	r0, [r7, #0]
 800d96a:	4658      	mov	r0, fp
 800d96c:	f7ff fe9b 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d970:	a903      	add	r1, sp, #12
 800d972:	9003      	str	r0, [sp, #12]
 800d974:	4650      	mov	r0, sl
 800d976:	f7ff fe4b 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d97a:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d97e:	1a10      	subs	r0, r2, r0
 800d980:	6832      	ldr	r2, [r6, #0]
 800d982:	1b01      	subs	r1, r0, r4
 800d984:	428a      	cmp	r2, r1
 800d986:	bfc8      	it	gt
 800d988:	6031      	strgt	r1, [r6, #0]
 800d98a:	682a      	ldr	r2, [r5, #0]
 800d98c:	4291      	cmp	r1, r2
 800d98e:	bfc8      	it	gt
 800d990:	6029      	strgt	r1, [r5, #0]
 800d992:	6832      	ldr	r2, [r6, #0]
 800d994:	4420      	add	r0, r4
 800d996:	4282      	cmp	r2, r0
 800d998:	bfc8      	it	gt
 800d99a:	6030      	strgt	r0, [r6, #0]
 800d99c:	682a      	ldr	r2, [r5, #0]
 800d99e:	4290      	cmp	r0, r2
 800d9a0:	bfc8      	it	gt
 800d9a2:	6028      	strgt	r0, [r5, #0]
 800d9a4:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800d9a8:	e7bb      	b.n	800d922 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 800d9aa:	9b00      	ldr	r3, [sp, #0]
 800d9ac:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800d9b0:	455b      	cmp	r3, fp
 800d9b2:	f77f af62 	ble.w	800d87a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800d9b6:	4618      	mov	r0, r3
 800d9b8:	f7ff fe56 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d9bc:	a903      	add	r1, sp, #12
 800d9be:	9003      	str	r0, [sp, #12]
 800d9c0:	4650      	mov	r0, sl
 800d9c2:	f7ff fe25 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d9c6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d9ca:	4410      	add	r0, r2
 800d9cc:	f8d9 2000 	ldr.w	r2, [r9]
 800d9d0:	1b01      	subs	r1, r0, r4
 800d9d2:	428a      	cmp	r2, r1
 800d9d4:	bfc8      	it	gt
 800d9d6:	f8c9 1000 	strgt.w	r1, [r9]
 800d9da:	683a      	ldr	r2, [r7, #0]
 800d9dc:	4291      	cmp	r1, r2
 800d9de:	bfc8      	it	gt
 800d9e0:	6039      	strgt	r1, [r7, #0]
 800d9e2:	f8d9 2000 	ldr.w	r2, [r9]
 800d9e6:	4420      	add	r0, r4
 800d9e8:	4282      	cmp	r2, r0
 800d9ea:	bfc8      	it	gt
 800d9ec:	f8c9 0000 	strgt.w	r0, [r9]
 800d9f0:	683b      	ldr	r3, [r7, #0]
 800d9f2:	4298      	cmp	r0, r3
 800d9f4:	bfc8      	it	gt
 800d9f6:	6038      	strgt	r0, [r7, #0]
 800d9f8:	9800      	ldr	r0, [sp, #0]
 800d9fa:	f7ff fe54 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d9fe:	a903      	add	r1, sp, #12
 800da00:	9003      	str	r0, [sp, #12]
 800da02:	4650      	mov	r0, sl
 800da04:	f7ff fe04 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800da08:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800da0c:	6832      	ldr	r2, [r6, #0]
 800da0e:	1a18      	subs	r0, r3, r0
 800da10:	1b03      	subs	r3, r0, r4
 800da12:	429a      	cmp	r2, r3
 800da14:	bfc8      	it	gt
 800da16:	6033      	strgt	r3, [r6, #0]
 800da18:	682a      	ldr	r2, [r5, #0]
 800da1a:	4293      	cmp	r3, r2
 800da1c:	bfc8      	it	gt
 800da1e:	602b      	strgt	r3, [r5, #0]
 800da20:	6833      	ldr	r3, [r6, #0]
 800da22:	4404      	add	r4, r0
 800da24:	42a3      	cmp	r3, r4
 800da26:	bfc8      	it	gt
 800da28:	6034      	strgt	r4, [r6, #0]
 800da2a:	682b      	ldr	r3, [r5, #0]
 800da2c:	429c      	cmp	r4, r3
 800da2e:	bfc8      	it	gt
 800da30:	602c      	strgt	r4, [r5, #0]
 800da32:	e722      	b.n	800d87a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0800da34 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800da34:	b530      	push	{r4, r5, lr}
 800da36:	4604      	mov	r4, r0
 800da38:	4608      	mov	r0, r1
 800da3a:	4611      	mov	r1, r2
 800da3c:	461a      	mov	r2, r3
 800da3e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800da42:	b089      	sub	sp, #36	@ 0x24
 800da44:	015b      	lsls	r3, r3, #5
 800da46:	9304      	str	r3, [sp, #16]
 800da48:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800da4c:	2500      	movs	r5, #0
 800da4e:	015b      	lsls	r3, r3, #5
 800da50:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800da54:	ab07      	add	r3, sp, #28
 800da56:	9302      	str	r3, [sp, #8]
 800da58:	ab06      	add	r3, sp, #24
 800da5a:	9301      	str	r3, [sp, #4]
 800da5c:	ab05      	add	r3, sp, #20
 800da5e:	9300      	str	r3, [sp, #0]
 800da60:	ab04      	add	r3, sp, #16
 800da62:	9505      	str	r5, [sp, #20]
 800da64:	f7ff fe3e 	bl	800d6e4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800da68:	2520      	movs	r5, #32
 800da6a:	9a04      	ldr	r2, [sp, #16]
 800da6c:	9805      	ldr	r0, [sp, #20]
 800da6e:	fb92 f2f5 	sdiv	r2, r2, r5
 800da72:	fb90 f0f5 	sdiv	r0, r0, r5
 800da76:	b292      	uxth	r2, r2
 800da78:	3002      	adds	r0, #2
 800da7a:	1a80      	subs	r0, r0, r2
 800da7c:	9b06      	ldr	r3, [sp, #24]
 800da7e:	9907      	ldr	r1, [sp, #28]
 800da80:	fb93 f3f5 	sdiv	r3, r3, r5
 800da84:	fb91 f1f5 	sdiv	r1, r1, r5
 800da88:	b29b      	uxth	r3, r3
 800da8a:	3102      	adds	r1, #2
 800da8c:	1ac9      	subs	r1, r1, r3
 800da8e:	3a01      	subs	r2, #1
 800da90:	3b01      	subs	r3, #1
 800da92:	80a0      	strh	r0, [r4, #4]
 800da94:	4620      	mov	r0, r4
 800da96:	8022      	strh	r2, [r4, #0]
 800da98:	8063      	strh	r3, [r4, #2]
 800da9a:	80e1      	strh	r1, [r4, #6]
 800da9c:	b009      	add	sp, #36	@ 0x24
 800da9e:	bd30      	pop	{r4, r5, pc}

0800daa0 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800daa0:	b510      	push	{r4, lr}
 800daa2:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 800daa6:	4604      	mov	r4, r0
 800daa8:	f7ff ffc4 	bl	800da34 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800daac:	4620      	mov	r0, r4
 800daae:	bd10      	pop	{r4, pc}

0800dab0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800dab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dab4:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 800dab8:	42b5      	cmp	r5, r6
 800daba:	bfa2      	ittt	ge
 800dabc:	462b      	movge	r3, r5
 800dabe:	4635      	movge	r5, r6
 800dac0:	461e      	movge	r6, r3
 800dac2:	1b73      	subs	r3, r6, r5
 800dac4:	468a      	mov	sl, r1
 800dac6:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 800dac8:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 800dacc:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 800dad0:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 800dad2:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800dad6:	b0af      	sub	sp, #188	@ 0xbc
 800dad8:	f04f 0320 	mov.w	r3, #32
 800dadc:	4604      	mov	r4, r0
 800dade:	bfa4      	itt	ge
 800dae0:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 800dae4:	2500      	movge	r5, #0
 800dae6:	fb99 f9f3 	sdiv	r9, r9, r3
 800daea:	fb9b fbf3 	sdiv	fp, fp, r3
 800daee:	2900      	cmp	r1, #0
 800daf0:	f000 80ff 	beq.w	800dcf2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 800daf4:	f9ba 0000 	ldrsh.w	r0, [sl]
 800daf8:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 800dafc:	eba9 0700 	sub.w	r7, r9, r0
 800db00:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 800db04:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 800db08:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 800db0c:	ebab 0803 	sub.w	r8, fp, r3
 800db10:	4407      	add	r7, r0
 800db12:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 800db16:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 800db1a:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 800db1e:	b23f      	sxth	r7, r7
 800db20:	4498      	add	r8, r3
 800db22:	eba9 0707 	sub.w	r7, r9, r7
 800db26:	fa0f f888 	sxth.w	r8, r8
 800db2a:	ebab 0808 	sub.w	r8, fp, r8
 800db2e:	2f00      	cmp	r7, #0
 800db30:	bfb8      	it	lt
 800db32:	427f      	neglt	r7, r7
 800db34:	f1b8 0f00 	cmp.w	r8, #0
 800db38:	bfb8      	it	lt
 800db3a:	f1c8 0800 	rsblt	r8, r8, #0
 800db3e:	45bc      	cmp	ip, r7
 800db40:	bfcc      	ite	gt
 800db42:	f10c 0701 	addgt.w	r7, ip, #1
 800db46:	3701      	addle	r7, #1
 800db48:	4540      	cmp	r0, r8
 800db4a:	bfc8      	it	gt
 800db4c:	f100 0801 	addgt.w	r8, r0, #1
 800db50:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 800db54:	f100 0001 	add.w	r0, r0, #1
 800db58:	ea4f 0060 	mov.w	r0, r0, asr #1
 800db5c:	f04f 0302 	mov.w	r3, #2
 800db60:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 800db64:	fb91 f1f3 	sdiv	r1, r1, r3
 800db68:	eba2 0201 	sub.w	r2, r2, r1
 800db6c:	bfd8      	it	le
 800db6e:	f108 0801 	addle.w	r8, r8, #1
 800db72:	9303      	str	r3, [sp, #12]
 800db74:	920f      	str	r2, [sp, #60]	@ 0x3c
 800db76:	f7ff fd57 	bl	800d628 <_ZN8touchgfx7CWRUtil4sineEi>
 800db7a:	a92e      	add	r1, sp, #184	@ 0xb8
 800db7c:	fb08 f808 	mul.w	r8, r8, r8
 800db80:	f841 0d74 	str.w	r0, [r1, #-116]!
 800db84:	a80f      	add	r0, sp, #60	@ 0x3c
 800db86:	f7ff fd43 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800db8a:	fb07 8707 	mla	r7, r7, r7, r8
 800db8e:	f04f 0c20 	mov.w	ip, #32
 800db92:	fb90 f0fc 	sdiv	r0, r0, ip
 800db96:	4340      	muls	r0, r0
 800db98:	4287      	cmp	r7, r0
 800db9a:	9b03      	ldr	r3, [sp, #12]
 800db9c:	da04      	bge.n	800dba8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 800db9e:	2401      	movs	r4, #1
 800dba0:	4620      	mov	r0, r4
 800dba2:	b02f      	add	sp, #188	@ 0xbc
 800dba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dba8:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800dbaa:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800dbac:	fb91 f2f3 	sdiv	r2, r1, r3
 800dbb0:	4402      	add	r2, r0
 800dbb2:	fb92 f2fc 	sdiv	r2, r2, ip
 800dbb6:	f9ba 1000 	ldrsh.w	r1, [sl]
 800dbba:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 800dbbe:	440b      	add	r3, r1
 800dbc0:	b21b      	sxth	r3, r3
 800dbc2:	454b      	cmp	r3, r9
 800dbc4:	bfa8      	it	ge
 800dbc6:	464b      	movge	r3, r9
 800dbc8:	428b      	cmp	r3, r1
 800dbca:	bfac      	ite	ge
 800dbcc:	eba9 0903 	subge.w	r9, r9, r3
 800dbd0:	eba9 0901 	sublt.w	r9, r9, r1
 800dbd4:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 800dbd8:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 800dbdc:	440b      	add	r3, r1
 800dbde:	b21b      	sxth	r3, r3
 800dbe0:	455b      	cmp	r3, fp
 800dbe2:	bfa8      	it	ge
 800dbe4:	465b      	movge	r3, fp
 800dbe6:	428b      	cmp	r3, r1
 800dbe8:	bfac      	ite	ge
 800dbea:	ebab 0b03 	subge.w	fp, fp, r3
 800dbee:	ebab 0b01 	sublt.w	fp, fp, r1
 800dbf2:	3201      	adds	r2, #1
 800dbf4:	fb0b fb0b 	mul.w	fp, fp, fp
 800dbf8:	fb09 b909 	mla	r9, r9, r9, fp
 800dbfc:	4352      	muls	r2, r2
 800dbfe:	4591      	cmp	r9, r2
 800dc00:	dccd      	bgt.n	800db9e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 800dc02:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 800dc06:	4621      	mov	r1, r4
 800dc08:	4648      	mov	r0, r9
 800dc0a:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 800dc0c:	f003 fbe6 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc10:	6823      	ldr	r3, [r4, #0]
 800dc12:	4620      	mov	r0, r4
 800dc14:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800dc16:	4798      	blx	r3
 800dc18:	4653      	mov	r3, sl
 800dc1a:	9000      	str	r0, [sp, #0]
 800dc1c:	464a      	mov	r2, r9
 800dc1e:	4639      	mov	r1, r7
 800dc20:	a811      	add	r0, sp, #68	@ 0x44
 800dc22:	f013 ffbf 	bl	8021ba4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800dc26:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 800dc28:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800dc2a:	920b      	str	r2, [sp, #44]	@ 0x2c
 800dc2c:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800dc30:	930c      	str	r3, [sp, #48]	@ 0x30
 800dc32:	dd07      	ble.n	800dc44 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 800dc34:	2102      	movs	r1, #2
 800dc36:	fb93 f3f1 	sdiv	r3, r3, r1
 800dc3a:	4413      	add	r3, r2
 800dc3c:	930c      	str	r3, [sp, #48]	@ 0x30
 800dc3e:	fb93 f3f1 	sdiv	r3, r3, r1
 800dc42:	930b      	str	r3, [sp, #44]	@ 0x2c
 800dc44:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800dc48:	4628      	mov	r0, r5
 800dc4a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800dc4e:	930d      	str	r3, [sp, #52]	@ 0x34
 800dc50:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 800dc54:	f7ff fd08 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dc58:	4649      	mov	r1, r9
 800dc5a:	900f      	str	r0, [sp, #60]	@ 0x3c
 800dc5c:	a80d      	add	r0, sp, #52	@ 0x34
 800dc5e:	f7ff fcd7 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dc62:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800dc64:	f04f 0a02 	mov.w	sl, #2
 800dc68:	fb90 f0fa 	sdiv	r0, r0, sl
 800dc6c:	eb00 0b03 	add.w	fp, r0, r3
 800dc70:	4628      	mov	r0, r5
 800dc72:	f7ff fd18 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800dc76:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 800dc7a:	017f      	lsls	r7, r7, #5
 800dc7c:	f848 0d80 	str.w	r0, [r8, #-128]!
 800dc80:	a80d      	add	r0, sp, #52	@ 0x34
 800dc82:	4641      	mov	r1, r8
 800dc84:	f7ff fcc4 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dc88:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800dc8a:	fb90 f0fa 	sdiv	r0, r0, sl
 800dc8e:	4659      	mov	r1, fp
 800dc90:	1a12      	subs	r2, r2, r0
 800dc92:	a811      	add	r0, sp, #68	@ 0x44
 800dc94:	f014 f8d2 	bl	8021e3c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800dc98:	f105 0a20 	add.w	sl, r5, #32
 800dc9c:	bb67      	cbnz	r7, 800dcf8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 800dc9e:	46ab      	mov	fp, r5
 800dca0:	45b2      	cmp	sl, r6
 800dca2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800dca4:	dc33      	bgt.n	800dd0e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 800dca6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800dca8:	4650      	mov	r0, sl
 800dcaa:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 800dcae:	920d      	str	r2, [sp, #52]	@ 0x34
 800dcb0:	f7ff fcda 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dcb4:	4641      	mov	r1, r8
 800dcb6:	900e      	str	r0, [sp, #56]	@ 0x38
 800dcb8:	a80d      	add	r0, sp, #52	@ 0x34
 800dcba:	f7ff fca9 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dcbe:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800dcc0:	2302      	movs	r3, #2
 800dcc2:	fb90 f0f3 	sdiv	r0, r0, r3
 800dcc6:	eb00 0b02 	add.w	fp, r0, r2
 800dcca:	4650      	mov	r0, sl
 800dccc:	f7ff fceb 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800dcd0:	4649      	mov	r1, r9
 800dcd2:	900f      	str	r0, [sp, #60]	@ 0x3c
 800dcd4:	a80d      	add	r0, sp, #52	@ 0x34
 800dcd6:	f7ff fc9b 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dcda:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800dcdc:	2302      	movs	r3, #2
 800dcde:	4659      	mov	r1, fp
 800dce0:	fb90 f0f3 	sdiv	r0, r0, r3
 800dce4:	1a12      	subs	r2, r2, r0
 800dce6:	a811      	add	r0, sp, #68	@ 0x44
 800dce8:	46d3      	mov	fp, sl
 800dcea:	f014 f8f4 	bl	8021ed6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800dcee:	44ba      	add	sl, r7
 800dcf0:	e7d6      	b.n	800dca0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 800dcf2:	fb92 f2f3 	sdiv	r2, r2, r3
 800dcf6:	e75e      	b.n	800dbb6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 800dcf8:	fb9a f2f7 	sdiv	r2, sl, r7
 800dcfc:	fb07 a212 	mls	r2, r7, r2, sl
 800dd00:	1aba      	subs	r2, r7, r2
 800dd02:	fb92 f1f7 	sdiv	r1, r2, r7
 800dd06:	fb07 2211 	mls	r2, r7, r1, r2
 800dd0a:	4492      	add	sl, r2
 800dd0c:	e7c7      	b.n	800dc9e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 800dd0e:	455e      	cmp	r6, fp
 800dd10:	dd23      	ble.n	800dd5a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 800dd12:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800dd14:	4630      	mov	r0, r6
 800dd16:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800dd1a:	920d      	str	r2, [sp, #52]	@ 0x34
 800dd1c:	f7ff fca4 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dd20:	4641      	mov	r1, r8
 800dd22:	900e      	str	r0, [sp, #56]	@ 0x38
 800dd24:	a80d      	add	r0, sp, #52	@ 0x34
 800dd26:	f7ff fc73 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dd2a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800dd2c:	f04f 0a02 	mov.w	sl, #2
 800dd30:	fb90 f0fa 	sdiv	r0, r0, sl
 800dd34:	4403      	add	r3, r0
 800dd36:	4630      	mov	r0, r6
 800dd38:	9303      	str	r3, [sp, #12]
 800dd3a:	f7ff fcb4 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800dd3e:	4649      	mov	r1, r9
 800dd40:	900f      	str	r0, [sp, #60]	@ 0x3c
 800dd42:	a80d      	add	r0, sp, #52	@ 0x34
 800dd44:	f7ff fc64 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dd48:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800dd4a:	9b03      	ldr	r3, [sp, #12]
 800dd4c:	fb90 f0fa 	sdiv	r0, r0, sl
 800dd50:	4619      	mov	r1, r3
 800dd52:	1a12      	subs	r2, r2, r0
 800dd54:	a811      	add	r0, sp, #68	@ 0x44
 800dd56:	f014 f8be 	bl	8021ed6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800dd5a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800dd5c:	b99b      	cbnz	r3, 800dd86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 800dd5e:	1b75      	subs	r5, r6, r5
 800dd60:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 800dd64:	da04      	bge.n	800dd70 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800dd66:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 800dd6a:	a811      	add	r0, sp, #68	@ 0x44
 800dd6c:	f014 f8b3 	bl	8021ed6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800dd70:	21ff      	movs	r1, #255	@ 0xff
 800dd72:	a811      	add	r0, sp, #68	@ 0x44
 800dd74:	f013 ffaa 	bl	8021ccc <_ZN8touchgfx6Canvas6renderEh>
 800dd78:	4604      	mov	r4, r0
 800dd7a:	4b8a      	ldr	r3, [pc, #552]	@ (800dfa4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 800dd7c:	9311      	str	r3, [sp, #68]	@ 0x44
 800dd7e:	a816      	add	r0, sp, #88	@ 0x58
 800dd80:	f000 fa00 	bl	800e184 <_ZN8touchgfx7OutlineD1Ev>
 800dd84:	e70c      	b.n	800dba0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 800dd86:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 800dd8a:	429a      	cmp	r2, r3
 800dd8c:	f0c0 8107 	bcc.w	800df9e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 800dd90:	1b73      	subs	r3, r6, r5
 800dd92:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 800dd96:	9303      	str	r3, [sp, #12]
 800dd98:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800dd9c:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 800dda0:	da43      	bge.n	800de2a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800dda2:	4630      	mov	r0, r6
 800dda4:	f7ff fc60 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dda8:	4649      	mov	r1, r9
 800ddaa:	900f      	str	r0, [sp, #60]	@ 0x3c
 800ddac:	a80b      	add	r0, sp, #44	@ 0x2c
 800ddae:	f7ff fc2f 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ddb2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ddb4:	18c3      	adds	r3, r0, r3
 800ddb6:	4630      	mov	r0, r6
 800ddb8:	9305      	str	r3, [sp, #20]
 800ddba:	f7ff fc74 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800ddbe:	4649      	mov	r1, r9
 800ddc0:	900f      	str	r0, [sp, #60]	@ 0x3c
 800ddc2:	a80b      	add	r0, sp, #44	@ 0x2c
 800ddc4:	f7ff fc24 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ddc8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800ddca:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 800ddce:	1a1b      	subs	r3, r3, r0
 800ddd0:	9304      	str	r3, [sp, #16]
 800ddd2:	9206      	str	r2, [sp, #24]
 800ddd4:	eb06 030a 	add.w	r3, r6, sl
 800ddd8:	9a06      	ldr	r2, [sp, #24]
 800ddda:	4293      	cmp	r3, r2
 800dddc:	da25      	bge.n	800de2a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800ddde:	4618      	mov	r0, r3
 800dde0:	9308      	str	r3, [sp, #32]
 800dde2:	f7ff fc41 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dde6:	4649      	mov	r1, r9
 800dde8:	900f      	str	r0, [sp, #60]	@ 0x3c
 800ddea:	a80c      	add	r0, sp, #48	@ 0x30
 800ddec:	f7ff fc10 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ddf0:	9b05      	ldr	r3, [sp, #20]
 800ddf2:	2202      	movs	r2, #2
 800ddf4:	fb90 f0f2 	sdiv	r0, r0, r2
 800ddf8:	18c3      	adds	r3, r0, r3
 800ddfa:	9307      	str	r3, [sp, #28]
 800ddfc:	9b08      	ldr	r3, [sp, #32]
 800ddfe:	9209      	str	r2, [sp, #36]	@ 0x24
 800de00:	4618      	mov	r0, r3
 800de02:	f7ff fc50 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800de06:	a92e      	add	r1, sp, #184	@ 0xb8
 800de08:	f841 0d80 	str.w	r0, [r1, #-128]!
 800de0c:	a80c      	add	r0, sp, #48	@ 0x30
 800de0e:	f7ff fbff 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800de12:	9b04      	ldr	r3, [sp, #16]
 800de14:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800de16:	9907      	ldr	r1, [sp, #28]
 800de18:	fb90 f2f2 	sdiv	r2, r0, r2
 800de1c:	a811      	add	r0, sp, #68	@ 0x44
 800de1e:	1a9a      	subs	r2, r3, r2
 800de20:	f014 f859 	bl	8021ed6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800de24:	9b08      	ldr	r3, [sp, #32]
 800de26:	4453      	add	r3, sl
 800de28:	e7d6      	b.n	800ddd8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 800de2a:	455e      	cmp	r6, fp
 800de2c:	dd25      	ble.n	800de7a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 800de2e:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800de32:	4630      	mov	r0, r6
 800de34:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800de38:	930d      	str	r3, [sp, #52]	@ 0x34
 800de3a:	f7ff fc15 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800de3e:	4641      	mov	r1, r8
 800de40:	900e      	str	r0, [sp, #56]	@ 0x38
 800de42:	a80d      	add	r0, sp, #52	@ 0x34
 800de44:	f7ff fbe4 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800de48:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800de4a:	2202      	movs	r2, #2
 800de4c:	fb90 f0f2 	sdiv	r0, r0, r2
 800de50:	eb00 0903 	add.w	r9, r0, r3
 800de54:	4630      	mov	r0, r6
 800de56:	9204      	str	r2, [sp, #16]
 800de58:	f7ff fc25 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800de5c:	a92e      	add	r1, sp, #184	@ 0xb8
 800de5e:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800de62:	a80d      	add	r0, sp, #52	@ 0x34
 800de64:	f7ff fbd4 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800de68:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800de6a:	9a04      	ldr	r2, [sp, #16]
 800de6c:	fb90 f2f2 	sdiv	r2, r0, r2
 800de70:	4649      	mov	r1, r9
 800de72:	1a9a      	subs	r2, r3, r2
 800de74:	a811      	add	r0, sp, #68	@ 0x44
 800de76:	f014 f82e 	bl	8021ed6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800de7a:	46d9      	mov	r9, fp
 800de7c:	2602      	movs	r6, #2
 800de7e:	45a9      	cmp	r9, r5
 800de80:	db25      	blt.n	800dece <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 800de82:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800de86:	4648      	mov	r0, r9
 800de88:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800de8c:	930d      	str	r3, [sp, #52]	@ 0x34
 800de8e:	f7ff fbeb 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800de92:	4641      	mov	r1, r8
 800de94:	900e      	str	r0, [sp, #56]	@ 0x38
 800de96:	a80d      	add	r0, sp, #52	@ 0x34
 800de98:	f7ff fbba 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800de9c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800de9e:	fb90 f0f6 	sdiv	r0, r0, r6
 800dea2:	eb00 0b03 	add.w	fp, r0, r3
 800dea6:	4648      	mov	r0, r9
 800dea8:	f7ff fbfd 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800deac:	a90f      	add	r1, sp, #60	@ 0x3c
 800deae:	900f      	str	r0, [sp, #60]	@ 0x3c
 800deb0:	a80d      	add	r0, sp, #52	@ 0x34
 800deb2:	f7ff fbad 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800deb6:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800deb8:	fb90 f0f6 	sdiv	r0, r0, r6
 800debc:	4659      	mov	r1, fp
 800debe:	1a12      	subs	r2, r2, r0
 800dec0:	a811      	add	r0, sp, #68	@ 0x44
 800dec2:	46cb      	mov	fp, r9
 800dec4:	f014 f807 	bl	8021ed6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800dec8:	eba9 0907 	sub.w	r9, r9, r7
 800decc:	e7d7      	b.n	800de7e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 800dece:	455d      	cmp	r5, fp
 800ded0:	da22      	bge.n	800df18 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 800ded2:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800ded6:	4628      	mov	r0, r5
 800ded8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800dedc:	930d      	str	r3, [sp, #52]	@ 0x34
 800dede:	f7ff fbc3 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dee2:	4641      	mov	r1, r8
 800dee4:	900e      	str	r0, [sp, #56]	@ 0x38
 800dee6:	a80d      	add	r0, sp, #52	@ 0x34
 800dee8:	f7ff fb92 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800deec:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800deee:	2602      	movs	r6, #2
 800def0:	fb90 f0f6 	sdiv	r0, r0, r6
 800def4:	4407      	add	r7, r0
 800def6:	4628      	mov	r0, r5
 800def8:	f7ff fbd5 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800defc:	a92e      	add	r1, sp, #184	@ 0xb8
 800defe:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800df02:	a80d      	add	r0, sp, #52	@ 0x34
 800df04:	f7ff fb84 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df08:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800df0a:	fb90 f0f6 	sdiv	r0, r0, r6
 800df0e:	4639      	mov	r1, r7
 800df10:	1a12      	subs	r2, r2, r0
 800df12:	a811      	add	r0, sp, #68	@ 0x44
 800df14:	f013 ffdf 	bl	8021ed6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800df18:	9b03      	ldr	r3, [sp, #12]
 800df1a:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800df1e:	f6bf af27 	bge.w	800dd70 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800df22:	4628      	mov	r0, r5
 800df24:	f7ff fba0 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800df28:	ae2e      	add	r6, sp, #184	@ 0xb8
 800df2a:	f04f 0b02 	mov.w	fp, #2
 800df2e:	f846 0d7c 	str.w	r0, [r6, #-124]!
 800df32:	a80b      	add	r0, sp, #44	@ 0x2c
 800df34:	4631      	mov	r1, r6
 800df36:	f7ff fb6b 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df3a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800df3c:	eb00 0903 	add.w	r9, r0, r3
 800df40:	4628      	mov	r0, r5
 800df42:	f7ff fbb0 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800df46:	4631      	mov	r1, r6
 800df48:	900f      	str	r0, [sp, #60]	@ 0x3c
 800df4a:	a80b      	add	r0, sp, #44	@ 0x2c
 800df4c:	f7ff fb60 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df50:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800df52:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 800df56:	eba3 0800 	sub.w	r8, r3, r0
 800df5a:	4454      	add	r4, sl
 800df5c:	42a5      	cmp	r5, r4
 800df5e:	f77f af07 	ble.w	800dd70 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800df62:	4620      	mov	r0, r4
 800df64:	f7ff fb80 	bl	800d668 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800df68:	4631      	mov	r1, r6
 800df6a:	900f      	str	r0, [sp, #60]	@ 0x3c
 800df6c:	a80c      	add	r0, sp, #48	@ 0x30
 800df6e:	f7ff fb4f 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df72:	fb90 f0fb 	sdiv	r0, r0, fp
 800df76:	eb00 0709 	add.w	r7, r0, r9
 800df7a:	4620      	mov	r0, r4
 800df7c:	f7ff fb93 	bl	800d6a6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800df80:	a90e      	add	r1, sp, #56	@ 0x38
 800df82:	900e      	str	r0, [sp, #56]	@ 0x38
 800df84:	a80c      	add	r0, sp, #48	@ 0x30
 800df86:	f7ff fb43 	bl	800d610 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df8a:	4639      	mov	r1, r7
 800df8c:	fb90 f2fb 	sdiv	r2, r0, fp
 800df90:	a811      	add	r0, sp, #68	@ 0x44
 800df92:	eba8 0202 	sub.w	r2, r8, r2
 800df96:	f013 ff9e 	bl	8021ed6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800df9a:	4454      	add	r4, sl
 800df9c:	e7de      	b.n	800df5c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 800df9e:	2400      	movs	r4, #0
 800dfa0:	e6eb      	b.n	800dd7a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 800dfa2:	bf00      	nop
 800dfa4:	0802619c 	.word	0x0802619c

0800dfa8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800dfa8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dfaa:	6803      	ldr	r3, [r0, #0]
 800dfac:	460d      	mov	r5, r1
 800dfae:	4604      	mov	r4, r0
 800dfb0:	4601      	mov	r1, r0
 800dfb2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800dfb4:	a802      	add	r0, sp, #8
 800dfb6:	4798      	blx	r3
 800dfb8:	6828      	ldr	r0, [r5, #0]
 800dfba:	6869      	ldr	r1, [r5, #4]
 800dfbc:	466b      	mov	r3, sp
 800dfbe:	c303      	stmia	r3!, {r0, r1}
 800dfc0:	4668      	mov	r0, sp
 800dfc2:	4619      	mov	r1, r3
 800dfc4:	f7fc feb4 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 800dfc8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800dfca:	b188      	cbz	r0, 800dff0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfcc:	6803      	ldr	r3, [r0, #0]
 800dfce:	1d21      	adds	r1, r4, #4
 800dfd0:	68db      	ldr	r3, [r3, #12]
 800dfd2:	4798      	blx	r3
 800dfd4:	b160      	cbz	r0, 800dff0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfd6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800dfda:	2b00      	cmp	r3, #0
 800dfdc:	dd08      	ble.n	800dff0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfde:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800dfe2:	2d00      	cmp	r5, #0
 800dfe4:	dd04      	ble.n	800dff0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfe6:	4a2b      	ldr	r2, [pc, #172]	@ (800e094 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800dfe8:	7812      	ldrb	r2, [r2, #0]
 800dfea:	b11a      	cbz	r2, 800dff4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800dfec:	2a01      	cmp	r2, #1
 800dfee:	d029      	beq.n	800e044 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800dff0:	b004      	add	sp, #16
 800dff2:	bd70      	pop	{r4, r5, r6, pc}
 800dff4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800dff8:	441d      	add	r5, r3
 800dffa:	b2ad      	uxth	r5, r5
 800dffc:	b22e      	sxth	r6, r5
 800dffe:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800e002:	42b3      	cmp	r3, r6
 800e004:	daf4      	bge.n	800dff0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800e006:	6823      	ldr	r3, [r4, #0]
 800e008:	4669      	mov	r1, sp
 800e00a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e00c:	4620      	mov	r0, r4
 800e00e:	4798      	blx	r3
 800e010:	b940      	cbnz	r0, 800e024 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800e012:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800e016:	2b01      	cmp	r3, #1
 800e018:	d004      	beq.n	800e024 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800e01a:	3301      	adds	r3, #1
 800e01c:	105b      	asrs	r3, r3, #1
 800e01e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e022:	e7f0      	b.n	800e006 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800e024:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e028:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e02c:	4413      	add	r3, r2
 800e02e:	b29b      	uxth	r3, r3
 800e030:	441a      	add	r2, r3
 800e032:	b212      	sxth	r2, r2
 800e034:	4296      	cmp	r6, r2
 800e036:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e03a:	dae0      	bge.n	800dffe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800e03c:	1aeb      	subs	r3, r5, r3
 800e03e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e042:	e7dc      	b.n	800dffe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800e044:	f8bd 5000 	ldrh.w	r5, [sp]
 800e048:	441d      	add	r5, r3
 800e04a:	b2ad      	uxth	r5, r5
 800e04c:	b22e      	sxth	r6, r5
 800e04e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800e052:	42b3      	cmp	r3, r6
 800e054:	dacc      	bge.n	800dff0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800e056:	6823      	ldr	r3, [r4, #0]
 800e058:	4669      	mov	r1, sp
 800e05a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e05c:	4620      	mov	r0, r4
 800e05e:	4798      	blx	r3
 800e060:	b940      	cbnz	r0, 800e074 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800e062:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800e066:	2b01      	cmp	r3, #1
 800e068:	d004      	beq.n	800e074 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800e06a:	3301      	adds	r3, #1
 800e06c:	105b      	asrs	r3, r3, #1
 800e06e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800e072:	e7f0      	b.n	800e056 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800e074:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800e078:	f8bd 3000 	ldrh.w	r3, [sp]
 800e07c:	4413      	add	r3, r2
 800e07e:	b29b      	uxth	r3, r3
 800e080:	441a      	add	r2, r3
 800e082:	b212      	sxth	r2, r2
 800e084:	4296      	cmp	r6, r2
 800e086:	f8ad 3000 	strh.w	r3, [sp]
 800e08a:	dae0      	bge.n	800e04e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800e08c:	1aeb      	subs	r3, r5, r3
 800e08e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800e092:	e7dc      	b.n	800e04e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800e094:	20014036 	.word	0x20014036

0800e098 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800e098:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e09a:	6803      	ldr	r3, [r0, #0]
 800e09c:	4604      	mov	r4, r0
 800e09e:	4601      	mov	r1, r0
 800e0a0:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800e0a2:	4668      	mov	r0, sp
 800e0a4:	4798      	blx	r3
 800e0a6:	2100      	movs	r1, #0
 800e0a8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800e0ac:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e0b0:	9102      	str	r1, [sp, #8]
 800e0b2:	4668      	mov	r0, sp
 800e0b4:	a902      	add	r1, sp, #8
 800e0b6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800e0ba:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e0be:	f7fc fe37 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 800e0c2:	6823      	ldr	r3, [r4, #0]
 800e0c4:	4669      	mov	r1, sp
 800e0c6:	691b      	ldr	r3, [r3, #16]
 800e0c8:	4620      	mov	r0, r4
 800e0ca:	4798      	blx	r3
 800e0cc:	b004      	add	sp, #16
 800e0ce:	bd10      	pop	{r4, pc}

0800e0d0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800e0d0:	2101      	movs	r1, #1
 800e0d2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800e0d6:	490b      	ldr	r1, [pc, #44]	@ (800e104 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800e0d8:	6001      	str	r1, [r0, #0]
 800e0da:	2200      	movs	r2, #0
 800e0dc:	21ff      	movs	r1, #255	@ 0xff
 800e0de:	8082      	strh	r2, [r0, #4]
 800e0e0:	80c2      	strh	r2, [r0, #6]
 800e0e2:	8102      	strh	r2, [r0, #8]
 800e0e4:	8142      	strh	r2, [r0, #10]
 800e0e6:	8182      	strh	r2, [r0, #12]
 800e0e8:	81c2      	strh	r2, [r0, #14]
 800e0ea:	8202      	strh	r2, [r0, #16]
 800e0ec:	8242      	strh	r2, [r0, #18]
 800e0ee:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e0f2:	61c2      	str	r2, [r0, #28]
 800e0f4:	8402      	strh	r2, [r0, #32]
 800e0f6:	8442      	strh	r2, [r0, #34]	@ 0x22
 800e0f8:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800e0fc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800e100:	6282      	str	r2, [r0, #40]	@ 0x28
 800e102:	4770      	bx	lr
 800e104:	08025c78 	.word	0x08025c78

0800e108 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e108:	2300      	movs	r3, #0
 800e10a:	8083      	strh	r3, [r0, #4]
 800e10c:	80c3      	strh	r3, [r0, #6]
 800e10e:	8003      	strh	r3, [r0, #0]
 800e110:	8043      	strh	r3, [r0, #2]
 800e112:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800e116:	2bff      	cmp	r3, #255	@ 0xff
 800e118:	bf01      	itttt	eq
 800e11a:	890b      	ldrheq	r3, [r1, #8]
 800e11c:	8083      	strheq	r3, [r0, #4]
 800e11e:	894b      	ldrheq	r3, [r1, #10]
 800e120:	80c3      	strheq	r3, [r0, #6]
 800e122:	4770      	bx	lr

0800e124 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e124:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e126:	4604      	mov	r4, r0
 800e128:	6808      	ldr	r0, [r1, #0]
 800e12a:	6849      	ldr	r1, [r1, #4]
 800e12c:	466b      	mov	r3, sp
 800e12e:	c303      	stmia	r3!, {r0, r1}
 800e130:	6823      	ldr	r3, [r4, #0]
 800e132:	4669      	mov	r1, sp
 800e134:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e136:	4620      	mov	r0, r4
 800e138:	4798      	blx	r3
 800e13a:	4b08      	ldr	r3, [pc, #32]	@ (800e15c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e13c:	681b      	ldr	r3, [r3, #0]
 800e13e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e142:	b10a      	cbz	r2, 800e148 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e144:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800e146:	b900      	cbnz	r0, 800e14a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e148:	6898      	ldr	r0, [r3, #8]
 800e14a:	6803      	ldr	r3, [r0, #0]
 800e14c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800e14e:	6a1d      	ldr	r5, [r3, #32]
 800e150:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800e154:	4669      	mov	r1, sp
 800e156:	47a8      	blx	r5
 800e158:	b003      	add	sp, #12
 800e15a:	bd30      	pop	{r4, r5, pc}
 800e15c:	20014040 	.word	0x20014040

0800e160 <_ZN8touchgfx3BoxD1Ev>:
 800e160:	4770      	bx	lr

0800e162 <_ZN8touchgfx3BoxD0Ev>:
 800e162:	b510      	push	{r4, lr}
 800e164:	212c      	movs	r1, #44	@ 0x2c
 800e166:	4604      	mov	r4, r0
 800e168:	f014 f97f 	bl	802246a <_ZdlPvj>
 800e16c:	4620      	mov	r0, r4
 800e16e:	bd10      	pop	{r4, pc}

0800e170 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e170:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800e174:	b12a      	cbz	r2, 800e182 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e176:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e17a:	b112      	cbz	r2, 800e182 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e17c:	6803      	ldr	r3, [r0, #0]
 800e17e:	695b      	ldr	r3, [r3, #20]
 800e180:	4718      	bx	r3
 800e182:	4770      	bx	lr

0800e184 <_ZN8touchgfx7OutlineD1Ev>:
 800e184:	4770      	bx	lr

0800e186 <_ZN8touchgfx7OutlineD0Ev>:
 800e186:	b510      	push	{r4, lr}
 800e188:	2130      	movs	r1, #48	@ 0x30
 800e18a:	4604      	mov	r4, r0
 800e18c:	f014 f96d 	bl	802246a <_ZdlPvj>
 800e190:	4620      	mov	r0, r4
 800e192:	bd10      	pop	{r4, pc}

0800e194 <_ZN8touchgfx7Outline5resetEv>:
 800e194:	b510      	push	{r4, lr}
 800e196:	4604      	mov	r4, r0
 800e198:	f000 fe8c 	bl	800eeb4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800e19c:	60e0      	str	r0, [r4, #12]
 800e19e:	f000 fe8f 	bl	800eec0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800e1a2:	68e3      	ldr	r3, [r4, #12]
 800e1a4:	6123      	str	r3, [r4, #16]
 800e1a6:	08c0      	lsrs	r0, r0, #3
 800e1a8:	2200      	movs	r2, #0
 800e1aa:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800e1ae:	3801      	subs	r0, #1
 800e1b0:	6060      	str	r0, [r4, #4]
 800e1b2:	60a2      	str	r2, [r4, #8]
 800e1b4:	8019      	strh	r1, [r3, #0]
 800e1b6:	8059      	strh	r1, [r3, #2]
 800e1b8:	809a      	strh	r2, [r3, #4]
 800e1ba:	80da      	strh	r2, [r3, #6]
 800e1bc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e1be:	f023 0301 	bic.w	r3, r3, #1
 800e1c2:	f043 0302 	orr.w	r3, r3, #2
 800e1c6:	6263      	str	r3, [r4, #36]	@ 0x24
 800e1c8:	bd10      	pop	{r4, pc}
	...

0800e1cc <_ZN8touchgfx7OutlineC1Ev>:
 800e1cc:	b510      	push	{r4, lr}
 800e1ce:	4b0a      	ldr	r3, [pc, #40]	@ (800e1f8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800e1d0:	6003      	str	r3, [r0, #0]
 800e1d2:	2300      	movs	r3, #0
 800e1d4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800e1d8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e1dc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e1e0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800e1e4:	6243      	str	r3, [r0, #36]	@ 0x24
 800e1e6:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800e1ea:	4604      	mov	r4, r0
 800e1ec:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800e1f0:	f7ff ffd0 	bl	800e194 <_ZN8touchgfx7Outline5resetEv>
 800e1f4:	4620      	mov	r0, r4
 800e1f6:	bd10      	pop	{r4, pc}
 800e1f8:	08025d58 	.word	0x08025d58

0800e1fc <_ZN8touchgfx7Outline10renderLineEiiii>:
 800e1fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e200:	b093      	sub	sp, #76	@ 0x4c
 800e202:	1156      	asrs	r6, r2, #5
 800e204:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800e206:	9305      	str	r3, [sp, #20]
 800e208:	f004 051f 	and.w	r5, r4, #31
 800e20c:	1153      	asrs	r3, r2, #5
 800e20e:	9504      	str	r5, [sp, #16]
 800e210:	1165      	asrs	r5, r4, #5
 800e212:	9303      	str	r3, [sp, #12]
 800e214:	42ae      	cmp	r6, r5
 800e216:	ea4f 1364 	mov.w	r3, r4, asr #5
 800e21a:	9306      	str	r3, [sp, #24]
 800e21c:	f002 031f 	and.w	r3, r2, #31
 800e220:	f040 80f8 	bne.w	800e414 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800e224:	9c04      	ldr	r4, [sp, #16]
 800e226:	9a05      	ldr	r2, [sp, #20]
 800e228:	42a3      	cmp	r3, r4
 800e22a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800e22e:	6902      	ldr	r2, [r0, #16]
 800e230:	d125      	bne.n	800e27e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800e232:	f9b2 3000 	ldrsh.w	r3, [r2]
 800e236:	459e      	cmp	lr, r3
 800e238:	d103      	bne.n	800e242 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800e23a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e23e:	429e      	cmp	r6, r3
 800e240:	d035      	beq.n	800e2ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e242:	88d1      	ldrh	r1, [r2, #6]
 800e244:	8893      	ldrh	r3, [r2, #4]
 800e246:	430b      	orrs	r3, r1
 800e248:	d010      	beq.n	800e26c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e24a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e24e:	2b00      	cmp	r3, #0
 800e250:	db0c      	blt.n	800e26c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e252:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800e254:	428b      	cmp	r3, r1
 800e256:	da09      	bge.n	800e26c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e258:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e25c:	428b      	cmp	r3, r1
 800e25e:	bf38      	it	cc
 800e260:	3208      	addcc	r2, #8
 800e262:	f103 0301 	add.w	r3, r3, #1
 800e266:	bf38      	it	cc
 800e268:	6102      	strcc	r2, [r0, #16]
 800e26a:	6083      	str	r3, [r0, #8]
 800e26c:	6903      	ldr	r3, [r0, #16]
 800e26e:	9a03      	ldr	r2, [sp, #12]
 800e270:	f8a3 e000 	strh.w	lr, [r3]
 800e274:	805a      	strh	r2, [r3, #2]
 800e276:	2200      	movs	r2, #0
 800e278:	809a      	strh	r2, [r3, #4]
 800e27a:	80da      	strh	r2, [r3, #6]
 800e27c:	e017      	b.n	800e2ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e27e:	9c05      	ldr	r4, [sp, #20]
 800e280:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800e284:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800e288:	f004 041f 	and.w	r4, r4, #31
 800e28c:	114e      	asrs	r6, r1, #5
 800e28e:	9402      	str	r4, [sp, #8]
 800e290:	9c04      	ldr	r4, [sp, #16]
 800e292:	4576      	cmp	r6, lr
 800e294:	f001 0c1f 	and.w	ip, r1, #31
 800e298:	eba4 0403 	sub.w	r4, r4, r3
 800e29c:	d10a      	bne.n	800e2b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800e29e:	9b02      	ldr	r3, [sp, #8]
 800e2a0:	449c      	add	ip, r3
 800e2a2:	44a0      	add	r8, r4
 800e2a4:	fb04 a40c 	mla	r4, r4, ip, sl
 800e2a8:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e2ac:	80d4      	strh	r4, [r2, #6]
 800e2ae:	b013      	add	sp, #76	@ 0x4c
 800e2b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2b4:	9d05      	ldr	r5, [sp, #20]
 800e2b6:	1a69      	subs	r1, r5, r1
 800e2b8:	bf5b      	ittet	pl
 800e2ba:	f1cc 0520 	rsbpl	r5, ip, #32
 800e2be:	436c      	mulpl	r4, r5
 800e2c0:	2500      	movmi	r5, #0
 800e2c2:	2520      	movpl	r5, #32
 800e2c4:	bf44      	itt	mi
 800e2c6:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e2ca:	4249      	negmi	r1, r1
 800e2cc:	9501      	str	r5, [sp, #4]
 800e2ce:	9f01      	ldr	r7, [sp, #4]
 800e2d0:	fb94 f5f1 	sdiv	r5, r4, r1
 800e2d4:	fb01 4415 	mls	r4, r1, r5, r4
 800e2d8:	bf54      	ite	pl
 800e2da:	f04f 0901 	movpl.w	r9, #1
 800e2de:	f04f 39ff 	movmi.w	r9, #4294967295
 800e2e2:	2c00      	cmp	r4, #0
 800e2e4:	bfb8      	it	lt
 800e2e6:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e2ea:	44bc      	add	ip, r7
 800e2ec:	44a8      	add	r8, r5
 800e2ee:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e2f2:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e2f6:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e2fa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e2fe:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e302:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800e306:	bfb8      	it	lt
 800e308:	1864      	addlt	r4, r4, r1
 800e30a:	ea58 0202 	orrs.w	r2, r8, r2
 800e30e:	444e      	add	r6, r9
 800e310:	d011      	beq.n	800e336 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e312:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e316:	f1b8 0f00 	cmp.w	r8, #0
 800e31a:	db0c      	blt.n	800e336 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e31c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800e31e:	4590      	cmp	r8, r2
 800e320:	da09      	bge.n	800e336 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e322:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800e326:	4590      	cmp	r8, r2
 800e328:	bf3c      	itt	cc
 800e32a:	f10c 0208 	addcc.w	r2, ip, #8
 800e32e:	6102      	strcc	r2, [r0, #16]
 800e330:	f108 0201 	add.w	r2, r8, #1
 800e334:	6082      	str	r2, [r0, #8]
 800e336:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e33a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e33e:	f8ac 6000 	strh.w	r6, [ip]
 800e342:	2700      	movs	r7, #0
 800e344:	45b6      	cmp	lr, r6
 800e346:	f8ac 2002 	strh.w	r2, [ip, #2]
 800e34a:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e34e:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e352:	442b      	add	r3, r5
 800e354:	d04d      	beq.n	800e3f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800e356:	9f04      	ldr	r7, [sp, #16]
 800e358:	1aff      	subs	r7, r7, r3
 800e35a:	443d      	add	r5, r7
 800e35c:	016d      	lsls	r5, r5, #5
 800e35e:	fb95 f8f1 	sdiv	r8, r5, r1
 800e362:	fb01 5518 	mls	r5, r1, r8, r5
 800e366:	2d00      	cmp	r5, #0
 800e368:	bfb8      	it	lt
 800e36a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e36e:	f108 0701 	add.w	r7, r8, #1
 800e372:	bfb8      	it	lt
 800e374:	186d      	addlt	r5, r5, r1
 800e376:	1a64      	subs	r4, r4, r1
 800e378:	9703      	str	r7, [sp, #12]
 800e37a:	f04f 0a00 	mov.w	sl, #0
 800e37e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e382:	1964      	adds	r4, r4, r5
 800e384:	bf58      	it	pl
 800e386:	9f03      	ldrpl	r7, [sp, #12]
 800e388:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e38c:	bf48      	it	mi
 800e38e:	4647      	movmi	r7, r8
 800e390:	44bb      	add	fp, r7
 800e392:	f8ac b004 	strh.w	fp, [ip, #4]
 800e396:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e39a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e39e:	f8ac b006 	strh.w	fp, [ip, #6]
 800e3a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e3a6:	443b      	add	r3, r7
 800e3a8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e3ac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e3b0:	bf58      	it	pl
 800e3b2:	1a64      	subpl	r4, r4, r1
 800e3b4:	ea5b 0707 	orrs.w	r7, fp, r7
 800e3b8:	444e      	add	r6, r9
 800e3ba:	d011      	beq.n	800e3e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e3bc:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e3c0:	f1bb 0f00 	cmp.w	fp, #0
 800e3c4:	db0c      	blt.n	800e3e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e3c6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e3c8:	45bb      	cmp	fp, r7
 800e3ca:	da09      	bge.n	800e3e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e3cc:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e3d0:	45bb      	cmp	fp, r7
 800e3d2:	bf3c      	itt	cc
 800e3d4:	f10c 0708 	addcc.w	r7, ip, #8
 800e3d8:	6107      	strcc	r7, [r0, #16]
 800e3da:	f10b 0701 	add.w	r7, fp, #1
 800e3de:	6087      	str	r7, [r0, #8]
 800e3e0:	6907      	ldr	r7, [r0, #16]
 800e3e2:	45b6      	cmp	lr, r6
 800e3e4:	803e      	strh	r6, [r7, #0]
 800e3e6:	807a      	strh	r2, [r7, #2]
 800e3e8:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e3ec:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e3f0:	d1c5      	bne.n	800e37e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800e3f2:	9a04      	ldr	r2, [sp, #16]
 800e3f4:	1ad3      	subs	r3, r2, r3
 800e3f6:	6902      	ldr	r2, [r0, #16]
 800e3f8:	8891      	ldrh	r1, [r2, #4]
 800e3fa:	88d6      	ldrh	r6, [r2, #6]
 800e3fc:	4419      	add	r1, r3
 800e3fe:	8091      	strh	r1, [r2, #4]
 800e400:	9902      	ldr	r1, [sp, #8]
 800e402:	f101 0c20 	add.w	ip, r1, #32
 800e406:	9901      	ldr	r1, [sp, #4]
 800e408:	ebac 0c01 	sub.w	ip, ip, r1
 800e40c:	fb03 630c 	mla	r3, r3, ip, r6
 800e410:	80d3      	strh	r3, [r2, #6]
 800e412:	e74c      	b.n	800e2ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e414:	9d05      	ldr	r5, [sp, #20]
 800e416:	1aa2      	subs	r2, r4, r2
 800e418:	eba5 0501 	sub.w	r5, r5, r1
 800e41c:	9508      	str	r5, [sp, #32]
 800e41e:	9202      	str	r2, [sp, #8]
 800e420:	f140 8128 	bpl.w	800e674 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800e424:	9a03      	ldr	r2, [sp, #12]
 800e426:	2a00      	cmp	r2, #0
 800e428:	f6ff af41 	blt.w	800e2ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e42c:	9a02      	ldr	r2, [sp, #8]
 800e42e:	4252      	negs	r2, r2
 800e430:	9202      	str	r2, [sp, #8]
 800e432:	9a06      	ldr	r2, [sp, #24]
 800e434:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800e438:	f04f 34ff 	mov.w	r4, #4294967295
 800e43c:	9206      	str	r2, [sp, #24]
 800e43e:	462a      	mov	r2, r5
 800e440:	940b      	str	r4, [sp, #44]	@ 0x2c
 800e442:	435a      	muls	r2, r3
 800e444:	2400      	movs	r4, #0
 800e446:	9d02      	ldr	r5, [sp, #8]
 800e448:	9401      	str	r4, [sp, #4]
 800e44a:	9c02      	ldr	r4, [sp, #8]
 800e44c:	fb92 f4f4 	sdiv	r4, r2, r4
 800e450:	fb05 2214 	mls	r2, r5, r4, r2
 800e454:	2a00      	cmp	r2, #0
 800e456:	9207      	str	r2, [sp, #28]
 800e458:	bfbc      	itt	lt
 800e45a:	1952      	addlt	r2, r2, r5
 800e45c:	9207      	strlt	r2, [sp, #28]
 800e45e:	9a01      	ldr	r2, [sp, #4]
 800e460:	6905      	ldr	r5, [r0, #16]
 800e462:	bfb8      	it	lt
 800e464:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e468:	eb04 0901 	add.w	r9, r4, r1
 800e46c:	429a      	cmp	r2, r3
 800e46e:	ea4f 1669 	mov.w	r6, r9, asr #5
 800e472:	f040 8112 	bne.w	800e69a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800e476:	f9b5 3000 	ldrsh.w	r3, [r5]
 800e47a:	429e      	cmp	r6, r3
 800e47c:	d104      	bne.n	800e488 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800e47e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e482:	9a03      	ldr	r2, [sp, #12]
 800e484:	429a      	cmp	r2, r3
 800e486:	d01b      	beq.n	800e4c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e488:	88ea      	ldrh	r2, [r5, #6]
 800e48a:	88ab      	ldrh	r3, [r5, #4]
 800e48c:	4313      	orrs	r3, r2
 800e48e:	d010      	beq.n	800e4b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e490:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e494:	2a00      	cmp	r2, #0
 800e496:	db0c      	blt.n	800e4b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e498:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e49a:	429a      	cmp	r2, r3
 800e49c:	da09      	bge.n	800e4b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e49e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800e4a2:	429a      	cmp	r2, r3
 800e4a4:	bf38      	it	cc
 800e4a6:	3508      	addcc	r5, #8
 800e4a8:	f102 0201 	add.w	r2, r2, #1
 800e4ac:	bf38      	it	cc
 800e4ae:	6105      	strcc	r5, [r0, #16]
 800e4b0:	6082      	str	r2, [r0, #8]
 800e4b2:	6903      	ldr	r3, [r0, #16]
 800e4b4:	9a03      	ldr	r2, [sp, #12]
 800e4b6:	805a      	strh	r2, [r3, #2]
 800e4b8:	2200      	movs	r2, #0
 800e4ba:	801e      	strh	r6, [r3, #0]
 800e4bc:	809a      	strh	r2, [r3, #4]
 800e4be:	80da      	strh	r2, [r3, #6]
 800e4c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e4c2:	9a03      	ldr	r2, [sp, #12]
 800e4c4:	6901      	ldr	r1, [r0, #16]
 800e4c6:	441a      	add	r2, r3
 800e4c8:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e4cc:	42b3      	cmp	r3, r6
 800e4ce:	d103      	bne.n	800e4d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800e4d0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e4d4:	429a      	cmp	r2, r3
 800e4d6:	d01a      	beq.n	800e50e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800e4d8:	88cc      	ldrh	r4, [r1, #6]
 800e4da:	888b      	ldrh	r3, [r1, #4]
 800e4dc:	4323      	orrs	r3, r4
 800e4de:	d010      	beq.n	800e502 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e4e0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e4e4:	2c00      	cmp	r4, #0
 800e4e6:	db0c      	blt.n	800e502 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e4e8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e4ea:	429c      	cmp	r4, r3
 800e4ec:	da09      	bge.n	800e502 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e4ee:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e4f2:	429c      	cmp	r4, r3
 800e4f4:	bf38      	it	cc
 800e4f6:	3108      	addcc	r1, #8
 800e4f8:	f104 0401 	add.w	r4, r4, #1
 800e4fc:	bf38      	it	cc
 800e4fe:	6101      	strcc	r1, [r0, #16]
 800e500:	6084      	str	r4, [r0, #8]
 800e502:	6903      	ldr	r3, [r0, #16]
 800e504:	2100      	movs	r1, #0
 800e506:	801e      	strh	r6, [r3, #0]
 800e508:	805a      	strh	r2, [r3, #2]
 800e50a:	8099      	strh	r1, [r3, #4]
 800e50c:	80d9      	strh	r1, [r3, #6]
 800e50e:	9b06      	ldr	r3, [sp, #24]
 800e510:	4293      	cmp	r3, r2
 800e512:	f000 8082 	beq.w	800e61a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800e516:	9b08      	ldr	r3, [sp, #32]
 800e518:	9c02      	ldr	r4, [sp, #8]
 800e51a:	9902      	ldr	r1, [sp, #8]
 800e51c:	015b      	lsls	r3, r3, #5
 800e51e:	fb93 f1f1 	sdiv	r1, r3, r1
 800e522:	fb04 3311 	mls	r3, r4, r1, r3
 800e526:	2b00      	cmp	r3, #0
 800e528:	9103      	str	r1, [sp, #12]
 800e52a:	9308      	str	r3, [sp, #32]
 800e52c:	da04      	bge.n	800e538 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800e52e:	1e4b      	subs	r3, r1, #1
 800e530:	9303      	str	r3, [sp, #12]
 800e532:	9b08      	ldr	r3, [sp, #32]
 800e534:	4423      	add	r3, r4
 800e536:	9308      	str	r3, [sp, #32]
 800e538:	9b07      	ldr	r3, [sp, #28]
 800e53a:	9902      	ldr	r1, [sp, #8]
 800e53c:	1a5b      	subs	r3, r3, r1
 800e53e:	9307      	str	r3, [sp, #28]
 800e540:	9b01      	ldr	r3, [sp, #4]
 800e542:	f1c3 0320 	rsb	r3, r3, #32
 800e546:	930e      	str	r3, [sp, #56]	@ 0x38
 800e548:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800e54a:	9b01      	ldr	r3, [sp, #4]
 800e54c:	1a5b      	subs	r3, r3, r1
 800e54e:	464f      	mov	r7, r9
 800e550:	930a      	str	r3, [sp, #40]	@ 0x28
 800e552:	2600      	movs	r6, #0
 800e554:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800e558:	185b      	adds	r3, r3, r1
 800e55a:	bf58      	it	pl
 800e55c:	9902      	ldrpl	r1, [sp, #8]
 800e55e:	9307      	str	r3, [sp, #28]
 800e560:	bf5d      	ittte	pl
 800e562:	1a5b      	subpl	r3, r3, r1
 800e564:	9307      	strpl	r3, [sp, #28]
 800e566:	9b03      	ldrpl	r3, [sp, #12]
 800e568:	9903      	ldrmi	r1, [sp, #12]
 800e56a:	bf58      	it	pl
 800e56c:	1c59      	addpl	r1, r3, #1
 800e56e:	4489      	add	r9, r1
 800e570:	2a00      	cmp	r2, #0
 800e572:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800e576:	db2e      	blt.n	800e5d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e578:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e57a:	4293      	cmp	r3, r2
 800e57c:	dd2b      	ble.n	800e5d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e57e:	9c01      	ldr	r4, [sp, #4]
 800e580:	6905      	ldr	r5, [r0, #16]
 800e582:	46a0      	mov	r8, r4
 800e584:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800e586:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800e58a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800e58e:	45a0      	cmp	r8, r4
 800e590:	f040 814f 	bne.w	800e832 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800e594:	f9b5 1000 	ldrsh.w	r1, [r5]
 800e598:	4551      	cmp	r1, sl
 800e59a:	d103      	bne.n	800e5a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800e59c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e5a0:	4291      	cmp	r1, r2
 800e5a2:	d018      	beq.n	800e5d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e5a4:	ea5c 010e 	orrs.w	r1, ip, lr
 800e5a8:	d00f      	beq.n	800e5ca <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e5aa:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e5ae:	2900      	cmp	r1, #0
 800e5b0:	db0b      	blt.n	800e5ca <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e5b2:	428b      	cmp	r3, r1
 800e5b4:	dd09      	ble.n	800e5ca <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e5b6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800e5ba:	4299      	cmp	r1, r3
 800e5bc:	bf38      	it	cc
 800e5be:	3508      	addcc	r5, #8
 800e5c0:	f101 0101 	add.w	r1, r1, #1
 800e5c4:	bf38      	it	cc
 800e5c6:	6105      	strcc	r5, [r0, #16]
 800e5c8:	6081      	str	r1, [r0, #8]
 800e5ca:	6903      	ldr	r3, [r0, #16]
 800e5cc:	f8a3 a000 	strh.w	sl, [r3]
 800e5d0:	805a      	strh	r2, [r3, #2]
 800e5d2:	809e      	strh	r6, [r3, #4]
 800e5d4:	80de      	strh	r6, [r3, #6]
 800e5d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e5d8:	6901      	ldr	r1, [r0, #16]
 800e5da:	441a      	add	r2, r3
 800e5dc:	88cc      	ldrh	r4, [r1, #6]
 800e5de:	888b      	ldrh	r3, [r1, #4]
 800e5e0:	4323      	orrs	r3, r4
 800e5e2:	d010      	beq.n	800e606 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e5e4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e5e8:	2c00      	cmp	r4, #0
 800e5ea:	db0c      	blt.n	800e606 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e5ec:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e5ee:	429c      	cmp	r4, r3
 800e5f0:	da09      	bge.n	800e606 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e5f2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e5f6:	429c      	cmp	r4, r3
 800e5f8:	bf38      	it	cc
 800e5fa:	3108      	addcc	r1, #8
 800e5fc:	f104 0401 	add.w	r4, r4, #1
 800e600:	bf38      	it	cc
 800e602:	6101      	strcc	r1, [r0, #16]
 800e604:	6084      	str	r4, [r0, #8]
 800e606:	6903      	ldr	r3, [r0, #16]
 800e608:	f8a3 a000 	strh.w	sl, [r3]
 800e60c:	805a      	strh	r2, [r3, #2]
 800e60e:	809e      	strh	r6, [r3, #4]
 800e610:	80de      	strh	r6, [r3, #6]
 800e612:	9b06      	ldr	r3, [sp, #24]
 800e614:	4293      	cmp	r3, r2
 800e616:	464f      	mov	r7, r9
 800e618:	d19c      	bne.n	800e554 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800e61a:	9b01      	ldr	r3, [sp, #4]
 800e61c:	6907      	ldr	r7, [r0, #16]
 800e61e:	f1c3 0620 	rsb	r6, r3, #32
 800e622:	9b05      	ldr	r3, [sp, #20]
 800e624:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800e628:	9b04      	ldr	r3, [sp, #16]
 800e62a:	429e      	cmp	r6, r3
 800e62c:	f040 81cc 	bne.w	800e9c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800e630:	f9b7 3000 	ldrsh.w	r3, [r7]
 800e634:	459e      	cmp	lr, r3
 800e636:	d104      	bne.n	800e642 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800e638:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e63c:	429a      	cmp	r2, r3
 800e63e:	f43f ae36 	beq.w	800e2ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e642:	88f9      	ldrh	r1, [r7, #6]
 800e644:	88bb      	ldrh	r3, [r7, #4]
 800e646:	430b      	orrs	r3, r1
 800e648:	d010      	beq.n	800e66c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e64a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e64e:	2b00      	cmp	r3, #0
 800e650:	db0c      	blt.n	800e66c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e652:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800e654:	428b      	cmp	r3, r1
 800e656:	da09      	bge.n	800e66c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e658:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e65c:	428b      	cmp	r3, r1
 800e65e:	bf38      	it	cc
 800e660:	3708      	addcc	r7, #8
 800e662:	f103 0301 	add.w	r3, r3, #1
 800e666:	bf38      	it	cc
 800e668:	6107      	strcc	r7, [r0, #16]
 800e66a:	6083      	str	r3, [r0, #8]
 800e66c:	6903      	ldr	r3, [r0, #16]
 800e66e:	f8a3 e000 	strh.w	lr, [r3]
 800e672:	e5ff      	b.n	800e274 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800e674:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800e676:	9c03      	ldr	r4, [sp, #12]
 800e678:	42a2      	cmp	r2, r4
 800e67a:	f6ff ae18 	blt.w	800e2ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e67e:	9c06      	ldr	r4, [sp, #24]
 800e680:	42a2      	cmp	r2, r4
 800e682:	bfb8      	it	lt
 800e684:	3201      	addlt	r2, #1
 800e686:	9c08      	ldr	r4, [sp, #32]
 800e688:	bfb8      	it	lt
 800e68a:	9206      	strlt	r2, [sp, #24]
 800e68c:	f1c3 0220 	rsb	r2, r3, #32
 800e690:	4362      	muls	r2, r4
 800e692:	2401      	movs	r4, #1
 800e694:	940b      	str	r4, [sp, #44]	@ 0x2c
 800e696:	2420      	movs	r4, #32
 800e698:	e6d5      	b.n	800e446 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800e69a:	f009 021f 	and.w	r2, r9, #31
 800e69e:	ea4f 1861 	mov.w	r8, r1, asr #5
 800e6a2:	920c      	str	r2, [sp, #48]	@ 0x30
 800e6a4:	9a01      	ldr	r2, [sp, #4]
 800e6a6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800e6aa:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800e6ae:	45b0      	cmp	r8, r6
 800e6b0:	f001 011f 	and.w	r1, r1, #31
 800e6b4:	eba2 0203 	sub.w	r2, r2, r3
 800e6b8:	d108      	bne.n	800e6cc <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800e6ba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e6bc:	4419      	add	r1, r3
 800e6be:	4496      	add	lr, r2
 800e6c0:	fb02 a101 	mla	r1, r2, r1, sl
 800e6c4:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e6c8:	80e9      	strh	r1, [r5, #6]
 800e6ca:	e6f9      	b.n	800e4c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e6cc:	2c00      	cmp	r4, #0
 800e6ce:	f2c0 80a9 	blt.w	800e824 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800e6d2:	2701      	movs	r7, #1
 800e6d4:	f1c1 0c20 	rsb	ip, r1, #32
 800e6d8:	970a      	str	r7, [sp, #40]	@ 0x28
 800e6da:	fb02 f20c 	mul.w	r2, r2, ip
 800e6de:	2720      	movs	r7, #32
 800e6e0:	9709      	str	r7, [sp, #36]	@ 0x24
 800e6e2:	fb92 fcf4 	sdiv	ip, r2, r4
 800e6e6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800e6e8:	fb04 221c 	mls	r2, r4, ip, r2
 800e6ec:	2a00      	cmp	r2, #0
 800e6ee:	bfb8      	it	lt
 800e6f0:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800e6f4:	4439      	add	r1, r7
 800e6f6:	fb0c a101 	mla	r1, ip, r1, sl
 800e6fa:	80e9      	strh	r1, [r5, #6]
 800e6fc:	44e6      	add	lr, ip
 800e6fe:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e700:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e704:	eb08 0501 	add.w	r5, r8, r1
 800e708:	6901      	ldr	r1, [r0, #16]
 800e70a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800e70e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800e712:	bfb8      	it	lt
 800e714:	1912      	addlt	r2, r2, r4
 800e716:	ea58 070e 	orrs.w	r7, r8, lr
 800e71a:	d010      	beq.n	800e73e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e71c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800e720:	f1be 0f00 	cmp.w	lr, #0
 800e724:	db0b      	blt.n	800e73e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e726:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e728:	45be      	cmp	lr, r7
 800e72a:	da08      	bge.n	800e73e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e72c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e730:	45be      	cmp	lr, r7
 800e732:	bf3c      	itt	cc
 800e734:	3108      	addcc	r1, #8
 800e736:	6101      	strcc	r1, [r0, #16]
 800e738:	f10e 0101 	add.w	r1, lr, #1
 800e73c:	6081      	str	r1, [r0, #8]
 800e73e:	6901      	ldr	r1, [r0, #16]
 800e740:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800e744:	800d      	strh	r5, [r1, #0]
 800e746:	f04f 0e00 	mov.w	lr, #0
 800e74a:	42ae      	cmp	r6, r5
 800e74c:	f8a1 8002 	strh.w	r8, [r1, #2]
 800e750:	f8a1 e004 	strh.w	lr, [r1, #4]
 800e754:	f8a1 e006 	strh.w	lr, [r1, #6]
 800e758:	4463      	add	r3, ip
 800e75a:	d054      	beq.n	800e806 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800e75c:	9901      	ldr	r1, [sp, #4]
 800e75e:	1ac9      	subs	r1, r1, r3
 800e760:	4461      	add	r1, ip
 800e762:	0149      	lsls	r1, r1, #5
 800e764:	fb91 fef4 	sdiv	lr, r1, r4
 800e768:	fb04 111e 	mls	r1, r4, lr, r1
 800e76c:	2900      	cmp	r1, #0
 800e76e:	bfb8      	it	lt
 800e770:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800e774:	f10e 0701 	add.w	r7, lr, #1
 800e778:	bfb8      	it	lt
 800e77a:	1909      	addlt	r1, r1, r4
 800e77c:	1b12      	subs	r2, r2, r4
 800e77e:	970d      	str	r7, [sp, #52]	@ 0x34
 800e780:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800e784:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800e786:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800e78a:	1852      	adds	r2, r2, r1
 800e78c:	bf54      	ite	pl
 800e78e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800e792:	46f4      	movmi	ip, lr
 800e794:	44e3      	add	fp, ip
 800e796:	f8aa b004 	strh.w	fp, [sl, #4]
 800e79a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800e79e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800e7a2:	f8aa b006 	strh.w	fp, [sl, #6]
 800e7a6:	4463      	add	r3, ip
 800e7a8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e7ac:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e7b0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800e7b4:	bf58      	it	pl
 800e7b6:	1b12      	subpl	r2, r2, r4
 800e7b8:	443d      	add	r5, r7
 800e7ba:	ea5b 070a 	orrs.w	r7, fp, sl
 800e7be:	d014      	beq.n	800e7ea <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e7c0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800e7c4:	f1ba 0f00 	cmp.w	sl, #0
 800e7c8:	db0f      	blt.n	800e7ea <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e7ca:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e7cc:	45ba      	cmp	sl, r7
 800e7ce:	da0c      	bge.n	800e7ea <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e7d0:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800e7d4:	45ba      	cmp	sl, r7
 800e7d6:	bf38      	it	cc
 800e7d8:	f10c 0c08 	addcc.w	ip, ip, #8
 800e7dc:	f10a 0a01 	add.w	sl, sl, #1
 800e7e0:	bf38      	it	cc
 800e7e2:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800e7e6:	f8c0 a008 	str.w	sl, [r0, #8]
 800e7ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e7ee:	f04f 0700 	mov.w	r7, #0
 800e7f2:	42ae      	cmp	r6, r5
 800e7f4:	f8ac 5000 	strh.w	r5, [ip]
 800e7f8:	f8ac 8002 	strh.w	r8, [ip, #2]
 800e7fc:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e800:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e804:	d1bc      	bne.n	800e780 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800e806:	6904      	ldr	r4, [r0, #16]
 800e808:	9a01      	ldr	r2, [sp, #4]
 800e80a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e80c:	1ad3      	subs	r3, r2, r3
 800e80e:	88a2      	ldrh	r2, [r4, #4]
 800e810:	441a      	add	r2, r3
 800e812:	80a2      	strh	r2, [r4, #4]
 800e814:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e816:	3120      	adds	r1, #32
 800e818:	1a89      	subs	r1, r1, r2
 800e81a:	88e2      	ldrh	r2, [r4, #6]
 800e81c:	fb03 2301 	mla	r3, r3, r1, r2
 800e820:	80e3      	strh	r3, [r4, #6]
 800e822:	e64d      	b.n	800e4c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e824:	f04f 37ff 	mov.w	r7, #4294967295
 800e828:	970a      	str	r7, [sp, #40]	@ 0x28
 800e82a:	434a      	muls	r2, r1
 800e82c:	4264      	negs	r4, r4
 800e82e:	2700      	movs	r7, #0
 800e830:	e756      	b.n	800e6e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800e832:	ea4f 1867 	mov.w	r8, r7, asr #5
 800e836:	f009 031f 	and.w	r3, r9, #31
 800e83a:	45d0      	cmp	r8, sl
 800e83c:	f007 071f 	and.w	r7, r7, #31
 800e840:	930f      	str	r3, [sp, #60]	@ 0x3c
 800e842:	fa1f fc8c 	uxth.w	ip, ip
 800e846:	fa1f fe8e 	uxth.w	lr, lr
 800e84a:	d10a      	bne.n	800e862 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800e84c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e84e:	449c      	add	ip, r3
 800e850:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e852:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e856:	441f      	add	r7, r3
 800e858:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e85a:	fb03 e707 	mla	r7, r3, r7, lr
 800e85e:	80ef      	strh	r7, [r5, #6]
 800e860:	e6b9      	b.n	800e5d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e862:	2900      	cmp	r1, #0
 800e864:	f2c0 80a8 	blt.w	800e9b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800e868:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800e86a:	f1c7 0320 	rsb	r3, r7, #32
 800e86e:	4363      	muls	r3, r4
 800e870:	2401      	movs	r4, #1
 800e872:	940d      	str	r4, [sp, #52]	@ 0x34
 800e874:	2420      	movs	r4, #32
 800e876:	940c      	str	r4, [sp, #48]	@ 0x30
 800e878:	fb93 f4f1 	sdiv	r4, r3, r1
 800e87c:	fb01 3b14 	mls	fp, r1, r4, r3
 800e880:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e882:	f1bb 0f00 	cmp.w	fp, #0
 800e886:	bfb8      	it	lt
 800e888:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e88c:	441f      	add	r7, r3
 800e88e:	fb04 e707 	mla	r7, r4, r7, lr
 800e892:	44a4      	add	ip, r4
 800e894:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e898:	80ef      	strh	r7, [r5, #6]
 800e89a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e89e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e8a0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800e8a4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e8a8:	bfb8      	it	lt
 800e8aa:	448b      	addlt	fp, r1
 800e8ac:	eb08 0503 	add.w	r5, r8, r3
 800e8b0:	ea5e 0307 	orrs.w	r3, lr, r7
 800e8b4:	d011      	beq.n	800e8da <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e8b6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800e8ba:	f1be 0f00 	cmp.w	lr, #0
 800e8be:	db0c      	blt.n	800e8da <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e8c0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e8c2:	45be      	cmp	lr, r7
 800e8c4:	da09      	bge.n	800e8da <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e8c6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e8ca:	45be      	cmp	lr, r7
 800e8cc:	bf3c      	itt	cc
 800e8ce:	f10c 0708 	addcc.w	r7, ip, #8
 800e8d2:	6107      	strcc	r7, [r0, #16]
 800e8d4:	f10e 0701 	add.w	r7, lr, #1
 800e8d8:	6087      	str	r7, [r0, #8]
 800e8da:	6907      	ldr	r7, [r0, #16]
 800e8dc:	b213      	sxth	r3, r2
 800e8de:	9310      	str	r3, [sp, #64]	@ 0x40
 800e8e0:	807b      	strh	r3, [r7, #2]
 800e8e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e8e4:	803d      	strh	r5, [r7, #0]
 800e8e6:	4555      	cmp	r5, sl
 800e8e8:	80be      	strh	r6, [r7, #4]
 800e8ea:	80fe      	strh	r6, [r7, #6]
 800e8ec:	eb04 0c03 	add.w	ip, r4, r3
 800e8f0:	d051      	beq.n	800e996 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800e8f2:	9b01      	ldr	r3, [sp, #4]
 800e8f4:	eba3 070c 	sub.w	r7, r3, ip
 800e8f8:	443c      	add	r4, r7
 800e8fa:	0164      	lsls	r4, r4, #5
 800e8fc:	fb94 f8f1 	sdiv	r8, r4, r1
 800e900:	fb01 4418 	mls	r4, r1, r8, r4
 800e904:	2c00      	cmp	r4, #0
 800e906:	bfb8      	it	lt
 800e908:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e90c:	ebab 0301 	sub.w	r3, fp, r1
 800e910:	f108 0701 	add.w	r7, r8, #1
 800e914:	bfb8      	it	lt
 800e916:	1864      	addlt	r4, r4, r1
 800e918:	9309      	str	r3, [sp, #36]	@ 0x24
 800e91a:	9711      	str	r7, [sp, #68]	@ 0x44
 800e91c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e91e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e922:	191b      	adds	r3, r3, r4
 800e924:	bf58      	it	pl
 800e926:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800e928:	f8be b004 	ldrh.w	fp, [lr, #4]
 800e92c:	9309      	str	r3, [sp, #36]	@ 0x24
 800e92e:	bf48      	it	mi
 800e930:	4647      	movmi	r7, r8
 800e932:	44bb      	add	fp, r7
 800e934:	f8ae b004 	strh.w	fp, [lr, #4]
 800e938:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e93c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e940:	f8ae b006 	strh.w	fp, [lr, #6]
 800e944:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e948:	44bc      	add	ip, r7
 800e94a:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800e94c:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e950:	443d      	add	r5, r7
 800e952:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800e956:	bf5c      	itt	pl
 800e958:	1a5b      	subpl	r3, r3, r1
 800e95a:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800e95c:	ea5b 0307 	orrs.w	r3, fp, r7
 800e960:	d011      	beq.n	800e986 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e962:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800e966:	f1bb 0f00 	cmp.w	fp, #0
 800e96a:	db0c      	blt.n	800e986 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e96c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e96e:	45bb      	cmp	fp, r7
 800e970:	da09      	bge.n	800e986 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e972:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e976:	45bb      	cmp	fp, r7
 800e978:	bf3c      	itt	cc
 800e97a:	f10e 0708 	addcc.w	r7, lr, #8
 800e97e:	6107      	strcc	r7, [r0, #16]
 800e980:	f10b 0701 	add.w	r7, fp, #1
 800e984:	6087      	str	r7, [r0, #8]
 800e986:	6907      	ldr	r7, [r0, #16]
 800e988:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e98a:	803d      	strh	r5, [r7, #0]
 800e98c:	4555      	cmp	r5, sl
 800e98e:	807b      	strh	r3, [r7, #2]
 800e990:	80be      	strh	r6, [r7, #4]
 800e992:	80fe      	strh	r6, [r7, #6]
 800e994:	d1c2      	bne.n	800e91c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800e996:	9b01      	ldr	r3, [sp, #4]
 800e998:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800e99a:	eba3 0c0c 	sub.w	ip, r3, ip
 800e99e:	6903      	ldr	r3, [r0, #16]
 800e9a0:	8899      	ldrh	r1, [r3, #4]
 800e9a2:	4461      	add	r1, ip
 800e9a4:	8099      	strh	r1, [r3, #4]
 800e9a6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e9a8:	3720      	adds	r7, #32
 800e9aa:	1a7f      	subs	r7, r7, r1
 800e9ac:	88d9      	ldrh	r1, [r3, #6]
 800e9ae:	fb0c 1c07 	mla	ip, ip, r7, r1
 800e9b2:	f8a3 c006 	strh.w	ip, [r3, #6]
 800e9b6:	e60e      	b.n	800e5d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e9b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e9ba:	f04f 34ff 	mov.w	r4, #4294967295
 800e9be:	940d      	str	r4, [sp, #52]	@ 0x34
 800e9c0:	437b      	muls	r3, r7
 800e9c2:	4249      	negs	r1, r1
 800e9c4:	2400      	movs	r4, #0
 800e9c6:	e756      	b.n	800e876 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800e9c8:	9905      	ldr	r1, [sp, #20]
 800e9ca:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800e9ce:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800e9d2:	f001 011f 	and.w	r1, r1, #31
 800e9d6:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800e9da:	9102      	str	r1, [sp, #8]
 800e9dc:	9904      	ldr	r1, [sp, #16]
 800e9de:	45f3      	cmp	fp, lr
 800e9e0:	f009 0c1f 	and.w	ip, r9, #31
 800e9e4:	eba1 0406 	sub.w	r4, r1, r6
 800e9e8:	d108      	bne.n	800e9fc <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800e9ea:	9b02      	ldr	r3, [sp, #8]
 800e9ec:	449c      	add	ip, r3
 800e9ee:	44a0      	add	r8, r4
 800e9f0:	fb04 a40c 	mla	r4, r4, ip, sl
 800e9f4:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e9f8:	80fc      	strh	r4, [r7, #6]
 800e9fa:	e458      	b.n	800e2ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e9fc:	9905      	ldr	r1, [sp, #20]
 800e9fe:	ebb1 0109 	subs.w	r1, r1, r9
 800ea02:	bf5b      	ittet	pl
 800ea04:	f1cc 0520 	rsbpl	r5, ip, #32
 800ea08:	436c      	mulpl	r4, r5
 800ea0a:	2500      	movmi	r5, #0
 800ea0c:	2520      	movpl	r5, #32
 800ea0e:	bf44      	itt	mi
 800ea10:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ea14:	4249      	negmi	r1, r1
 800ea16:	9501      	str	r5, [sp, #4]
 800ea18:	9b01      	ldr	r3, [sp, #4]
 800ea1a:	fb94 f5f1 	sdiv	r5, r4, r1
 800ea1e:	fb01 4415 	mls	r4, r1, r5, r4
 800ea22:	bf54      	ite	pl
 800ea24:	f04f 0901 	movpl.w	r9, #1
 800ea28:	f04f 39ff 	movmi.w	r9, #4294967295
 800ea2c:	2c00      	cmp	r4, #0
 800ea2e:	bfb8      	it	lt
 800ea30:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ea34:	449c      	add	ip, r3
 800ea36:	44a8      	add	r8, r5
 800ea38:	fb05 ac0c 	mla	ip, r5, ip, sl
 800ea3c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800ea40:	f8a7 c006 	strh.w	ip, [r7, #6]
 800ea44:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ea48:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ea4c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ea50:	bfb8      	it	lt
 800ea52:	1864      	addlt	r4, r4, r1
 800ea54:	ea58 0707 	orrs.w	r7, r8, r7
 800ea58:	eb0b 0309 	add.w	r3, fp, r9
 800ea5c:	d011      	beq.n	800ea82 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ea5e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800ea62:	f1b8 0f00 	cmp.w	r8, #0
 800ea66:	db0c      	blt.n	800ea82 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ea68:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ea6a:	45b8      	cmp	r8, r7
 800ea6c:	da09      	bge.n	800ea82 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ea6e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800ea72:	45b8      	cmp	r8, r7
 800ea74:	bf3c      	itt	cc
 800ea76:	f10c 0708 	addcc.w	r7, ip, #8
 800ea7a:	6107      	strcc	r7, [r0, #16]
 800ea7c:	f108 0701 	add.w	r7, r8, #1
 800ea80:	6087      	str	r7, [r0, #8]
 800ea82:	6907      	ldr	r7, [r0, #16]
 800ea84:	f04f 0c00 	mov.w	ip, #0
 800ea88:	b212      	sxth	r2, r2
 800ea8a:	459e      	cmp	lr, r3
 800ea8c:	803b      	strh	r3, [r7, #0]
 800ea8e:	807a      	strh	r2, [r7, #2]
 800ea90:	f8a7 c004 	strh.w	ip, [r7, #4]
 800ea94:	f8a7 c006 	strh.w	ip, [r7, #6]
 800ea98:	442e      	add	r6, r5
 800ea9a:	d04d      	beq.n	800eb38 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800ea9c:	9f04      	ldr	r7, [sp, #16]
 800ea9e:	1bbf      	subs	r7, r7, r6
 800eaa0:	443d      	add	r5, r7
 800eaa2:	016d      	lsls	r5, r5, #5
 800eaa4:	fb95 f8f1 	sdiv	r8, r5, r1
 800eaa8:	fb01 5518 	mls	r5, r1, r8, r5
 800eaac:	4565      	cmp	r5, ip
 800eaae:	bfb8      	it	lt
 800eab0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800eab4:	f108 0701 	add.w	r7, r8, #1
 800eab8:	bfb8      	it	lt
 800eaba:	186d      	addlt	r5, r5, r1
 800eabc:	1a64      	subs	r4, r4, r1
 800eabe:	9703      	str	r7, [sp, #12]
 800eac0:	f04f 0a00 	mov.w	sl, #0
 800eac4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eac8:	1964      	adds	r4, r4, r5
 800eaca:	bf58      	it	pl
 800eacc:	9f03      	ldrpl	r7, [sp, #12]
 800eace:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ead2:	bf48      	it	mi
 800ead4:	4647      	movmi	r7, r8
 800ead6:	44bb      	add	fp, r7
 800ead8:	f8ac b004 	strh.w	fp, [ip, #4]
 800eadc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800eae0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800eae4:	f8ac b006 	strh.w	fp, [ip, #6]
 800eae8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eaec:	443e      	add	r6, r7
 800eaee:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800eaf2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800eaf6:	bf58      	it	pl
 800eaf8:	1a64      	subpl	r4, r4, r1
 800eafa:	ea5b 0707 	orrs.w	r7, fp, r7
 800eafe:	444b      	add	r3, r9
 800eb00:	d011      	beq.n	800eb26 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800eb02:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800eb06:	f1bb 0f00 	cmp.w	fp, #0
 800eb0a:	db0c      	blt.n	800eb26 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800eb0c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800eb0e:	45bb      	cmp	fp, r7
 800eb10:	da09      	bge.n	800eb26 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800eb12:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800eb16:	45bb      	cmp	fp, r7
 800eb18:	bf3c      	itt	cc
 800eb1a:	f10c 0708 	addcc.w	r7, ip, #8
 800eb1e:	6107      	strcc	r7, [r0, #16]
 800eb20:	f10b 0701 	add.w	r7, fp, #1
 800eb24:	6087      	str	r7, [r0, #8]
 800eb26:	6907      	ldr	r7, [r0, #16]
 800eb28:	459e      	cmp	lr, r3
 800eb2a:	803b      	strh	r3, [r7, #0]
 800eb2c:	807a      	strh	r2, [r7, #2]
 800eb2e:	f8a7 a004 	strh.w	sl, [r7, #4]
 800eb32:	f8a7 a006 	strh.w	sl, [r7, #6]
 800eb36:	d1c5      	bne.n	800eac4 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800eb38:	9b04      	ldr	r3, [sp, #16]
 800eb3a:	1b9e      	subs	r6, r3, r6
 800eb3c:	6903      	ldr	r3, [r0, #16]
 800eb3e:	889a      	ldrh	r2, [r3, #4]
 800eb40:	4432      	add	r2, r6
 800eb42:	809a      	strh	r2, [r3, #4]
 800eb44:	9a02      	ldr	r2, [sp, #8]
 800eb46:	f102 0c20 	add.w	ip, r2, #32
 800eb4a:	9a01      	ldr	r2, [sp, #4]
 800eb4c:	ebac 0c02 	sub.w	ip, ip, r2
 800eb50:	88da      	ldrh	r2, [r3, #6]
 800eb52:	fb06 260c 	mla	r6, r6, ip, r2
 800eb56:	80de      	strh	r6, [r3, #6]
 800eb58:	f7ff bba9 	b.w	800e2ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800eb5c <_ZN8touchgfx7Outline6lineToEii>:
 800eb5c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eb5e:	079b      	lsls	r3, r3, #30
 800eb60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800eb62:	460e      	mov	r6, r1
 800eb64:	4615      	mov	r5, r2
 800eb66:	d511      	bpl.n	800eb8c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800eb68:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800eb6c:	ea86 0701 	eor.w	r7, r6, r1
 800eb70:	ea85 0302 	eor.w	r3, r5, r2
 800eb74:	433b      	orrs	r3, r7
 800eb76:	d009      	beq.n	800eb8c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800eb78:	4633      	mov	r3, r6
 800eb7a:	9500      	str	r5, [sp, #0]
 800eb7c:	f7ff fb3e 	bl	800e1fc <_ZN8touchgfx7Outline10renderLineEiiii>
 800eb80:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eb82:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800eb86:	f043 0301 	orr.w	r3, r3, #1
 800eb8a:	6243      	str	r3, [r0, #36]	@ 0x24
 800eb8c:	b003      	add	sp, #12
 800eb8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800eb90 <_ZN8touchgfx7Outline6moveToEii>:
 800eb90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eb92:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eb94:	4615      	mov	r5, r2
 800eb96:	079a      	lsls	r2, r3, #30
 800eb98:	4604      	mov	r4, r0
 800eb9a:	460e      	mov	r6, r1
 800eb9c:	d401      	bmi.n	800eba2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800eb9e:	f7ff faf9 	bl	800e194 <_ZN8touchgfx7Outline5resetEv>
 800eba2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800eba4:	07db      	lsls	r3, r3, #31
 800eba6:	d504      	bpl.n	800ebb2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800eba8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800ebac:	4620      	mov	r0, r4
 800ebae:	f7ff ffd5 	bl	800eb5c <_ZN8touchgfx7Outline6lineToEii>
 800ebb2:	6923      	ldr	r3, [r4, #16]
 800ebb4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ebb8:	1170      	asrs	r0, r6, #5
 800ebba:	4290      	cmp	r0, r2
 800ebbc:	ea4f 1165 	mov.w	r1, r5, asr #5
 800ebc0:	d103      	bne.n	800ebca <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800ebc2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ebc6:	4291      	cmp	r1, r2
 800ebc8:	d01a      	beq.n	800ec00 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800ebca:	88df      	ldrh	r7, [r3, #6]
 800ebcc:	889a      	ldrh	r2, [r3, #4]
 800ebce:	433a      	orrs	r2, r7
 800ebd0:	d010      	beq.n	800ebf4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800ebd2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ebd6:	2a00      	cmp	r2, #0
 800ebd8:	db0c      	blt.n	800ebf4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800ebda:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800ebdc:	42ba      	cmp	r2, r7
 800ebde:	da09      	bge.n	800ebf4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800ebe0:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800ebe4:	42ba      	cmp	r2, r7
 800ebe6:	bf38      	it	cc
 800ebe8:	3308      	addcc	r3, #8
 800ebea:	f102 0201 	add.w	r2, r2, #1
 800ebee:	bf38      	it	cc
 800ebf0:	6123      	strcc	r3, [r4, #16]
 800ebf2:	60a2      	str	r2, [r4, #8]
 800ebf4:	6923      	ldr	r3, [r4, #16]
 800ebf6:	2200      	movs	r2, #0
 800ebf8:	8018      	strh	r0, [r3, #0]
 800ebfa:	8059      	strh	r1, [r3, #2]
 800ebfc:	809a      	strh	r2, [r3, #4]
 800ebfe:	80da      	strh	r2, [r3, #6]
 800ec00:	6166      	str	r6, [r4, #20]
 800ec02:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800ec06:	6225      	str	r5, [r4, #32]
 800ec08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ec0a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800ec0a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ec0e:	b0d0      	sub	sp, #320	@ 0x140
 800ec10:	466c      	mov	r4, sp
 800ec12:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800ec16:	4627      	mov	r7, r4
 800ec18:	1a0d      	subs	r5, r1, r0
 800ec1a:	2d48      	cmp	r5, #72	@ 0x48
 800ec1c:	f100 0308 	add.w	r3, r0, #8
 800ec20:	f340 80d5 	ble.w	800edce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800ec24:	112d      	asrs	r5, r5, #4
 800ec26:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800ec2a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ec2e:	6816      	ldr	r6, [r2, #0]
 800ec30:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800ec34:	6006      	str	r6, [r0, #0]
 800ec36:	6856      	ldr	r6, [r2, #4]
 800ec38:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800ec3c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800ec40:	6046      	str	r6, [r0, #4]
 800ec42:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800ec46:	f8a2 8002 	strh.w	r8, [r2, #2]
 800ec4a:	f8a2 e004 	strh.w	lr, [r2, #4]
 800ec4e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ec52:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800ec56:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800ec5a:	4565      	cmp	r5, ip
 800ec5c:	f1a1 0208 	sub.w	r2, r1, #8
 800ec60:	db06      	blt.n	800ec70 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800ec62:	d119      	bne.n	800ec98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800ec64:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800ec68:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800ec6c:	42ae      	cmp	r6, r5
 800ec6e:	dd13      	ble.n	800ec98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800ec70:	460e      	mov	r6, r1
 800ec72:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800ec76:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800ec7a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800ec7e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800ec82:	601d      	str	r5, [r3, #0]
 800ec84:	6875      	ldr	r5, [r6, #4]
 800ec86:	605d      	str	r5, [r3, #4]
 800ec88:	f821 9c08 	strh.w	r9, [r1, #-8]
 800ec8c:	f821 cc06 	strh.w	ip, [r1, #-6]
 800ec90:	f821 8c04 	strh.w	r8, [r1, #-4]
 800ec94:	f821 ec02 	strh.w	lr, [r1, #-2]
 800ec98:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ec9c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800eca0:	42ae      	cmp	r6, r5
 800eca2:	db06      	blt.n	800ecb2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800eca4:	d116      	bne.n	800ecd4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800eca6:	f9b0 c000 	ldrsh.w	ip, [r0]
 800ecaa:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800ecae:	45ac      	cmp	ip, r5
 800ecb0:	da10      	bge.n	800ecd4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800ecb2:	681d      	ldr	r5, [r3, #0]
 800ecb4:	f9b0 8000 	ldrsh.w	r8, [r0]
 800ecb8:	6005      	str	r5, [r0, #0]
 800ecba:	685d      	ldr	r5, [r3, #4]
 800ecbc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800ecc0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800ecc4:	f8a0 8008 	strh.w	r8, [r0, #8]
 800ecc8:	6045      	str	r5, [r0, #4]
 800ecca:	8146      	strh	r6, [r0, #10]
 800eccc:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800ecd0:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800ecd4:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800ecd8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800ecdc:	4565      	cmp	r5, ip
 800ecde:	db06      	blt.n	800ecee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800ece0:	d119      	bne.n	800ed16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ece2:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800ece6:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ecea:	42ae      	cmp	r6, r5
 800ecec:	da13      	bge.n	800ed16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ecee:	460e      	mov	r6, r1
 800ecf0:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ecf4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800ecf8:	6005      	str	r5, [r0, #0]
 800ecfa:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800ecfe:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800ed02:	6875      	ldr	r5, [r6, #4]
 800ed04:	6045      	str	r5, [r0, #4]
 800ed06:	f821 9c08 	strh.w	r9, [r1, #-8]
 800ed0a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800ed0e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800ed12:	f821 ec02 	strh.w	lr, [r1, #-2]
 800ed16:	3308      	adds	r3, #8
 800ed18:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800ed1c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800ed20:	45e6      	cmp	lr, ip
 800ed22:	dbf8      	blt.n	800ed16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ed24:	d105      	bne.n	800ed32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ed26:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ed2a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ed2e:	42ae      	cmp	r6, r5
 800ed30:	dbf1      	blt.n	800ed16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ed32:	4615      	mov	r5, r2
 800ed34:	3a08      	subs	r2, #8
 800ed36:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800ed3a:	45b4      	cmp	ip, r6
 800ed3c:	dbf9      	blt.n	800ed32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ed3e:	d105      	bne.n	800ed4c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800ed40:	f9b0 8000 	ldrsh.w	r8, [r0]
 800ed44:	f9b2 6000 	ldrsh.w	r6, [r2]
 800ed48:	45b0      	cmp	r8, r6
 800ed4a:	dbf2      	blt.n	800ed32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ed4c:	4293      	cmp	r3, r2
 800ed4e:	f1a5 0608 	sub.w	r6, r5, #8
 800ed52:	d816      	bhi.n	800ed82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800ed54:	f8d6 c000 	ldr.w	ip, [r6]
 800ed58:	f9b3 a000 	ldrsh.w	sl, [r3]
 800ed5c:	f8c3 c000 	str.w	ip, [r3]
 800ed60:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800ed64:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800ed68:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800ed6c:	f8c3 c004 	str.w	ip, [r3, #4]
 800ed70:	f825 ac08 	strh.w	sl, [r5, #-8]
 800ed74:	f825 ec06 	strh.w	lr, [r5, #-6]
 800ed78:	f825 9c04 	strh.w	r9, [r5, #-4]
 800ed7c:	f825 8c02 	strh.w	r8, [r5, #-2]
 800ed80:	e7c9      	b.n	800ed16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ed82:	f8d6 e000 	ldr.w	lr, [r6]
 800ed86:	f9b0 a000 	ldrsh.w	sl, [r0]
 800ed8a:	f8c0 e000 	str.w	lr, [r0]
 800ed8e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800ed92:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800ed96:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800ed9a:	f8c0 e004 	str.w	lr, [r0, #4]
 800ed9e:	f825 ac08 	strh.w	sl, [r5, #-8]
 800eda2:	f825 cc06 	strh.w	ip, [r5, #-6]
 800eda6:	f825 9c04 	strh.w	r9, [r5, #-4]
 800edaa:	f825 8c02 	strh.w	r8, [r5, #-2]
 800edae:	1acd      	subs	r5, r1, r3
 800edb0:	1a16      	subs	r6, r2, r0
 800edb2:	10ed      	asrs	r5, r5, #3
 800edb4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800edb8:	bfb5      	itete	lt
 800edba:	e9c4 0200 	strdlt	r0, r2, [r4]
 800edbe:	e9c4 3100 	strdge	r3, r1, [r4]
 800edc2:	460a      	movlt	r2, r1
 800edc4:	4603      	movge	r3, r0
 800edc6:	3408      	adds	r4, #8
 800edc8:	4618      	mov	r0, r3
 800edca:	4611      	mov	r1, r2
 800edcc:	e724      	b.n	800ec18 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800edce:	4299      	cmp	r1, r3
 800edd0:	d928      	bls.n	800ee24 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800edd2:	f1a3 0210 	sub.w	r2, r3, #16
 800edd6:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800edda:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800edde:	45ac      	cmp	ip, r5
 800ede0:	db06      	blt.n	800edf0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800ede2:	d11d      	bne.n	800ee20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800ede4:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800ede8:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800edec:	42ae      	cmp	r6, r5
 800edee:	da17      	bge.n	800ee20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800edf0:	4615      	mov	r5, r2
 800edf2:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800edf6:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800edfa:	6116      	str	r6, [r2, #16]
 800edfc:	686e      	ldr	r6, [r5, #4]
 800edfe:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800ee02:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800ee06:	f8a2 9008 	strh.w	r9, [r2, #8]
 800ee0a:	42a8      	cmp	r0, r5
 800ee0c:	6156      	str	r6, [r2, #20]
 800ee0e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800ee12:	f8a2 800c 	strh.w	r8, [r2, #12]
 800ee16:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800ee1a:	f1a2 0208 	sub.w	r2, r2, #8
 800ee1e:	d1da      	bne.n	800edd6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800ee20:	3308      	adds	r3, #8
 800ee22:	e7d4      	b.n	800edce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800ee24:	42bc      	cmp	r4, r7
 800ee26:	d903      	bls.n	800ee30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800ee28:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800ee2c:	3c08      	subs	r4, #8
 800ee2e:	e6f3      	b.n	800ec18 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800ee30:	b050      	add	sp, #320	@ 0x140
 800ee32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800ee36 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800ee36:	b510      	push	{r4, lr}
 800ee38:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ee3a:	07da      	lsls	r2, r3, #31
 800ee3c:	4604      	mov	r4, r0
 800ee3e:	d507      	bpl.n	800ee50 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800ee40:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800ee44:	f7ff fe8a 	bl	800eb5c <_ZN8touchgfx7Outline6lineToEii>
 800ee48:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ee4a:	f023 0301 	bic.w	r3, r3, #1
 800ee4e:	6243      	str	r3, [r0, #36]	@ 0x24
 800ee50:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ee52:	079b      	lsls	r3, r3, #30
 800ee54:	d521      	bpl.n	800ee9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800ee56:	6923      	ldr	r3, [r4, #16]
 800ee58:	88d9      	ldrh	r1, [r3, #6]
 800ee5a:	889a      	ldrh	r2, [r3, #4]
 800ee5c:	430a      	orrs	r2, r1
 800ee5e:	d010      	beq.n	800ee82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ee60:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ee64:	2a00      	cmp	r2, #0
 800ee66:	db0c      	blt.n	800ee82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ee68:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800ee6a:	428a      	cmp	r2, r1
 800ee6c:	da09      	bge.n	800ee82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ee6e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800ee72:	4291      	cmp	r1, r2
 800ee74:	bf88      	it	hi
 800ee76:	3308      	addhi	r3, #8
 800ee78:	f102 0201 	add.w	r2, r2, #1
 800ee7c:	bf88      	it	hi
 800ee7e:	6123      	strhi	r3, [r4, #16]
 800ee80:	60a2      	str	r2, [r4, #8]
 800ee82:	68a1      	ldr	r1, [r4, #8]
 800ee84:	b129      	cbz	r1, 800ee92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800ee86:	6863      	ldr	r3, [r4, #4]
 800ee88:	4299      	cmp	r1, r3
 800ee8a:	d802      	bhi.n	800ee92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800ee8c:	68e0      	ldr	r0, [r4, #12]
 800ee8e:	f7ff febc 	bl	800ec0a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800ee92:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ee94:	f023 0302 	bic.w	r3, r3, #2
 800ee98:	6263      	str	r3, [r4, #36]	@ 0x24
 800ee9a:	68e0      	ldr	r0, [r4, #12]
 800ee9c:	bd10      	pop	{r4, pc}
	...

0800eea0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800eea0:	4b02      	ldr	r3, [pc, #8]	@ (800eeac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800eea2:	6018      	str	r0, [r3, #0]
 800eea4:	4b02      	ldr	r3, [pc, #8]	@ (800eeb0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800eea6:	6019      	str	r1, [r3, #0]
 800eea8:	4770      	bx	lr
 800eeaa:	bf00      	nop
 800eeac:	20014048 	.word	0x20014048
 800eeb0:	2001404c 	.word	0x2001404c

0800eeb4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800eeb4:	4b01      	ldr	r3, [pc, #4]	@ (800eebc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800eeb6:	6818      	ldr	r0, [r3, #0]
 800eeb8:	4770      	bx	lr
 800eeba:	bf00      	nop
 800eebc:	20014048 	.word	0x20014048

0800eec0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800eec0:	4b01      	ldr	r3, [pc, #4]	@ (800eec8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800eec2:	6818      	ldr	r0, [r3, #0]
 800eec4:	4770      	bx	lr
 800eec6:	bf00      	nop
 800eec8:	2001404c 	.word	0x2001404c

0800eecc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800eecc:	b510      	push	{r4, lr}
 800eece:	6803      	ldr	r3, [r0, #0]
 800eed0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eed2:	460c      	mov	r4, r1
 800eed4:	4798      	blx	r3
 800eed6:	1b03      	subs	r3, r0, r4
 800eed8:	4258      	negs	r0, r3
 800eeda:	4158      	adcs	r0, r3
 800eedc:	bd10      	pop	{r4, pc}
	...

0800eee0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800eee0:	4b01      	ldr	r3, [pc, #4]	@ (800eee8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800eee2:	6019      	str	r1, [r3, #0]
 800eee4:	4770      	bx	lr
 800eee6:	bf00      	nop
 800eee8:	20014050 	.word	0x20014050

0800eeec <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800eeec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eef0:	4696      	mov	lr, r2
 800eef2:	4605      	mov	r5, r0
 800eef4:	4614      	mov	r4, r2
 800eef6:	460e      	mov	r6, r1
 800eef8:	461f      	mov	r7, r3
 800eefa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800eefe:	b097      	sub	sp, #92	@ 0x5c
 800ef00:	f10d 0c1c 	add.w	ip, sp, #28
 800ef04:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef08:	f8de 3000 	ldr.w	r3, [lr]
 800ef0c:	f8cc 3000 	str.w	r3, [ip]
 800ef10:	f104 0e14 	add.w	lr, r4, #20
 800ef14:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef18:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ef1c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef20:	f8de 3000 	ldr.w	r3, [lr]
 800ef24:	f8cc 3000 	str.w	r3, [ip]
 800ef28:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ef2c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef30:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ef34:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef38:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800ef3c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800ef40:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800ef44:	f8de 3000 	ldr.w	r3, [lr]
 800ef48:	f8cc 3000 	str.w	r3, [ip]
 800ef4c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ef4e:	682b      	ldr	r3, [r5, #0]
 800ef50:	9201      	str	r2, [sp, #4]
 800ef52:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ef56:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ef58:	9200      	str	r2, [sp, #0]
 800ef5a:	f8cd 8008 	str.w	r8, [sp, #8]
 800ef5e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800ef62:	aa07      	add	r2, sp, #28
 800ef64:	463b      	mov	r3, r7
 800ef66:	4631      	mov	r1, r6
 800ef68:	4628      	mov	r0, r5
 800ef6a:	47d8      	blx	fp
 800ef6c:	46a6      	mov	lr, r4
 800ef6e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef72:	f10d 0c1c 	add.w	ip, sp, #28
 800ef76:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef7a:	f8de 3000 	ldr.w	r3, [lr]
 800ef7e:	f8cc 3000 	str.w	r3, [ip]
 800ef82:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ef86:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef8a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ef8e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef92:	343c      	adds	r4, #60	@ 0x3c
 800ef94:	f8de 3000 	ldr.w	r3, [lr]
 800ef98:	f8cc 3000 	str.w	r3, [ip]
 800ef9c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ef9e:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800efa2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800efa6:	6823      	ldr	r3, [r4, #0]
 800efa8:	f8cc 3000 	str.w	r3, [ip]
 800efac:	682b      	ldr	r3, [r5, #0]
 800efae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800efb2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800efb4:	9201      	str	r2, [sp, #4]
 800efb6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800efb8:	9200      	str	r2, [sp, #0]
 800efba:	f8cd 8008 	str.w	r8, [sp, #8]
 800efbe:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800efc0:	aa07      	add	r2, sp, #28
 800efc2:	463b      	mov	r3, r7
 800efc4:	4631      	mov	r1, r6
 800efc6:	4628      	mov	r0, r5
 800efc8:	47a0      	blx	r4
 800efca:	b017      	add	sp, #92	@ 0x5c
 800efcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800efd0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800efd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efd4:	b08d      	sub	sp, #52	@ 0x34
 800efd6:	4688      	mov	r8, r1
 800efd8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800efda:	f8d3 c000 	ldr.w	ip, [r3]
 800efde:	680f      	ldr	r7, [r1, #0]
 800efe0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800efe4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800efe8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800efec:	edd3 6a07 	vldr	s13, [r3, #28]
 800eff0:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800eff2:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800eff6:	f9b1 9000 	ldrsh.w	r9, [r1]
 800effa:	f9ba 1000 	ldrsh.w	r1, [sl]
 800effe:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800f002:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800f006:	eba7 070c 	sub.w	r7, r7, ip
 800f00a:	42bc      	cmp	r4, r7
 800f00c:	bfa8      	it	ge
 800f00e:	463c      	movge	r4, r7
 800f010:	ee07 4a90 	vmov	s15, r4
 800f014:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f018:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800f01c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f020:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f024:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f028:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800f02c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f030:	eb09 0e0c 	add.w	lr, r9, ip
 800f034:	4571      	cmp	r1, lr
 800f036:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f03a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f03e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f042:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f046:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f04a:	f340 808d 	ble.w	800f168 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f04e:	eba1 060e 	sub.w	r6, r1, lr
 800f052:	fb96 f5f4 	sdiv	r5, r6, r4
 800f056:	ee07 5a10 	vmov	s14, r5
 800f05a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f05e:	2d00      	cmp	r5, #0
 800f060:	fb04 6615 	mls	r6, r4, r5, r6
 800f064:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f068:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f06c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f070:	dd13      	ble.n	800f09a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f072:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f076:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f07a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f07e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f082:	bf18      	it	ne
 800f084:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f088:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f08c:	bf08      	it	eq
 800f08e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f092:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f096:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f09a:	fb05 f204 	mul.w	r2, r5, r4
 800f09e:	1abf      	subs	r7, r7, r2
 800f0a0:	4494      	add	ip, r2
 800f0a2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f0a6:	4411      	add	r1, r2
 800f0a8:	eb09 020c 	add.w	r2, r9, ip
 800f0ac:	443a      	add	r2, r7
 800f0ae:	b209      	sxth	r1, r1
 800f0b0:	428a      	cmp	r2, r1
 800f0b2:	bfc4      	itt	gt
 800f0b4:	eba1 0209 	subgt.w	r2, r1, r9
 800f0b8:	eba2 070c 	subgt.w	r7, r2, ip
 800f0bc:	2f00      	cmp	r7, #0
 800f0be:	dd50      	ble.n	800f162 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f0c0:	fb97 f1f4 	sdiv	r1, r7, r4
 800f0c4:	fb04 7211 	mls	r2, r4, r1, r7
 800f0c8:	b90a      	cbnz	r2, 800f0ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f0ca:	3901      	subs	r1, #1
 800f0cc:	4622      	mov	r2, r4
 800f0ce:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f0d2:	6840      	ldr	r0, [r0, #4]
 800f0d4:	900b      	str	r0, [sp, #44]	@ 0x2c
 800f0d6:	f8d0 a000 	ldr.w	sl, [r0]
 800f0da:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800f0dc:	9008      	str	r0, [sp, #32]
 800f0de:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800f0e2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800f0e4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800f0e8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f0ec:	695b      	ldr	r3, [r3, #20]
 800f0ee:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800f0f0:	445b      	add	r3, fp
 800f0f2:	eef0 6a42 	vmov.f32	s13, s4
 800f0f6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f0fa:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f0fe:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f102:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f106:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f10a:	9307      	str	r3, [sp, #28]
 800f10c:	ee17 7a90 	vmov	r7, s15
 800f110:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f114:	eeb0 7a61 	vmov.f32	s14, s3
 800f118:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f11c:	ee16 3a90 	vmov	r3, s13
 800f120:	fb97 f7f4 	sdiv	r7, r7, r4
 800f124:	ee17 ca90 	vmov	ip, s15
 800f128:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f12c:	fb9c fcf4 	sdiv	ip, ip, r4
 800f130:	fb0c 3306 	mla	r3, ip, r6, r3
 800f134:	9302      	str	r3, [sp, #8]
 800f136:	ee17 3a10 	vmov	r3, s14
 800f13a:	44b6      	add	lr, r6
 800f13c:	fb04 e505 	mla	r5, r4, r5, lr
 800f140:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f144:	fb07 3706 	mla	r7, r7, r6, r3
 800f148:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f14c:	e9cd 4700 	strd	r4, r7, [sp]
 800f150:	2900      	cmp	r1, #0
 800f152:	bfcc      	ite	gt
 800f154:	46a1      	movgt	r9, r4
 800f156:	4691      	movle	r9, r2
 800f158:	eba9 0306 	sub.w	r3, r9, r6
 800f15c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f160:	47a0      	blx	r4
 800f162:	b00d      	add	sp, #52	@ 0x34
 800f164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f168:	2500      	movs	r5, #0
 800f16a:	462e      	mov	r6, r5
 800f16c:	e799      	b.n	800f0a2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f174:	b0db      	sub	sp, #364	@ 0x16c
 800f176:	461d      	mov	r5, r3
 800f178:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800f17c:	930a      	str	r3, [sp, #40]	@ 0x28
 800f17e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800f182:	930b      	str	r3, [sp, #44]	@ 0x2c
 800f184:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800f188:	9310      	str	r3, [sp, #64]	@ 0x40
 800f18a:	6803      	ldr	r3, [r0, #0]
 800f18c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800f18e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800f190:	9009      	str	r0, [sp, #36]	@ 0x24
 800f192:	4614      	mov	r4, r2
 800f194:	4629      	mov	r1, r5
 800f196:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800f19a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800f19e:	47b8      	blx	r7
 800f1a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f1a2:	6058      	str	r0, [r3, #4]
 800f1a4:	2800      	cmp	r0, #0
 800f1a6:	f000 83a1 	beq.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1aa:	682b      	ldr	r3, [r5, #0]
 800f1ac:	9314      	str	r3, [sp, #80]	@ 0x50
 800f1ae:	686b      	ldr	r3, [r5, #4]
 800f1b0:	9315      	str	r3, [sp, #84]	@ 0x54
 800f1b2:	4bc4      	ldr	r3, [pc, #784]	@ (800f4c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f1b4:	ed94 7a02 	vldr	s14, [r4, #8]
 800f1b8:	7819      	ldrb	r1, [r3, #0]
 800f1ba:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f1be:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800f1c2:	2900      	cmp	r1, #0
 800f1c4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1c8:	bf16      	itet	ne
 800f1ca:	4619      	movne	r1, r3
 800f1cc:	4611      	moveq	r1, r2
 800f1ce:	4613      	movne	r3, r2
 800f1d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1d4:	9116      	str	r1, [sp, #88]	@ 0x58
 800f1d6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800f1da:	f240 8387 	bls.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1de:	ed94 7a07 	vldr	s14, [r4, #28]
 800f1e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1ea:	f240 837f 	bls.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1ee:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800f1f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1fa:	f240 8377 	bls.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1fe:	6822      	ldr	r2, [r4, #0]
 800f200:	4bb1      	ldr	r3, [pc, #708]	@ (800f4c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f202:	429a      	cmp	r2, r3
 800f204:	f2c0 8372 	blt.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f208:	49b0      	ldr	r1, [pc, #704]	@ (800f4cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f20a:	6963      	ldr	r3, [r4, #20]
 800f20c:	428a      	cmp	r2, r1
 800f20e:	f300 836d 	bgt.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f212:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f216:	48ae      	ldr	r0, [pc, #696]	@ (800f4d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f218:	33ff      	adds	r3, #255	@ 0xff
 800f21a:	4283      	cmp	r3, r0
 800f21c:	f200 8366 	bhi.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f220:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800f222:	4dac      	ldr	r5, [pc, #688]	@ (800f4d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f224:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f228:	33ff      	adds	r3, #255	@ 0xff
 800f22a:	42ab      	cmp	r3, r5
 800f22c:	f200 835e 	bhi.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f230:	6862      	ldr	r2, [r4, #4]
 800f232:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800f236:	33ff      	adds	r3, #255	@ 0xff
 800f238:	4283      	cmp	r3, r0
 800f23a:	f200 8357 	bhi.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f23e:	69a1      	ldr	r1, [r4, #24]
 800f240:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800f244:	33ff      	adds	r3, #255	@ 0xff
 800f246:	4283      	cmp	r3, r0
 800f248:	f200 8350 	bhi.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f24c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f24e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800f252:	30ff      	adds	r0, #255	@ 0xff
 800f254:	42a8      	cmp	r0, r5
 800f256:	f200 8349 	bhi.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f25a:	428a      	cmp	r2, r1
 800f25c:	f280 8110 	bge.w	800f480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f260:	429a      	cmp	r2, r3
 800f262:	f300 8119 	bgt.w	800f498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f266:	4299      	cmp	r1, r3
 800f268:	f280 811d 	bge.w	800f4a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f26c:	2502      	movs	r5, #2
 800f26e:	2701      	movs	r7, #1
 800f270:	46a9      	mov	r9, r5
 800f272:	46b8      	mov	r8, r7
 800f274:	f04f 0a00 	mov.w	sl, #0
 800f278:	4621      	mov	r1, r4
 800f27a:	a849      	add	r0, sp, #292	@ 0x124
 800f27c:	f003 fdae 	bl	8012ddc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f280:	4622      	mov	r2, r4
 800f282:	4653      	mov	r3, sl
 800f284:	a949      	add	r1, sp, #292	@ 0x124
 800f286:	f8cd 9000 	str.w	r9, [sp]
 800f28a:	a819      	add	r0, sp, #100	@ 0x64
 800f28c:	f003 fed6 	bl	801303c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f290:	4622      	mov	r2, r4
 800f292:	4653      	mov	r3, sl
 800f294:	a949      	add	r1, sp, #292	@ 0x124
 800f296:	f8cd 8000 	str.w	r8, [sp]
 800f29a:	a829      	add	r0, sp, #164	@ 0xa4
 800f29c:	f003 fece 	bl	801303c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f2a0:	4643      	mov	r3, r8
 800f2a2:	4622      	mov	r2, r4
 800f2a4:	a949      	add	r1, sp, #292	@ 0x124
 800f2a6:	f8cd 9000 	str.w	r9, [sp]
 800f2aa:	a839      	add	r0, sp, #228	@ 0xe4
 800f2ac:	f003 fec6 	bl	801303c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f2b0:	42af      	cmp	r7, r5
 800f2b2:	bfb5      	itete	lt
 800f2b4:	2300      	movlt	r3, #0
 800f2b6:	2301      	movge	r3, #1
 800f2b8:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800f2ba:	930e      	strge	r3, [sp, #56]	@ 0x38
 800f2bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f2be:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f2c2:	af12      	add	r7, sp, #72	@ 0x48
 800f2c4:	bfb9      	ittee	lt
 800f2c6:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800f2c8:	ac19      	addlt	r4, sp, #100	@ 0x64
 800f2ca:	ad19      	addge	r5, sp, #100	@ 0x64
 800f2cc:	ac29      	addge	r4, sp, #164	@ 0xa4
 800f2ce:	e887 0003 	stmia.w	r7, {r0, r1}
 800f2d2:	b928      	cbnz	r0, 800f2e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f2d4:	4b80      	ldr	r3, [pc, #512]	@ (800f4d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f2d6:	6818      	ldr	r0, [r3, #0]
 800f2d8:	6803      	ldr	r3, [r0, #0]
 800f2da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f2dc:	4798      	blx	r3
 800f2de:	6038      	str	r0, [r7, #0]
 800f2e0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f2e2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f2e6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f2ea:	930c      	str	r3, [sp, #48]	@ 0x30
 800f2ec:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f2ee:	6963      	ldr	r3, [r4, #20]
 800f2f0:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800f2f2:	440b      	add	r3, r1
 800f2f4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f2f8:	4408      	add	r0, r1
 800f2fa:	b200      	sxth	r0, r0
 800f2fc:	4283      	cmp	r3, r0
 800f2fe:	900d      	str	r0, [sp, #52]	@ 0x34
 800f300:	f280 80dd 	bge.w	800f4be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f304:	428b      	cmp	r3, r1
 800f306:	da08      	bge.n	800f31a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f308:	2a00      	cmp	r2, #0
 800f30a:	dd06      	ble.n	800f31a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f30c:	1acb      	subs	r3, r1, r3
 800f30e:	429a      	cmp	r2, r3
 800f310:	f2c0 80e4 	blt.w	800f4dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f314:	2b00      	cmp	r3, #0
 800f316:	f300 80e2 	bgt.w	800f4de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f31a:	6967      	ldr	r7, [r4, #20]
 800f31c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f31e:	443b      	add	r3, r7
 800f320:	461f      	mov	r7, r3
 800f322:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f324:	1bdf      	subs	r7, r3, r7
 800f326:	4297      	cmp	r7, r2
 800f328:	bfa8      	it	ge
 800f32a:	4617      	movge	r7, r2
 800f32c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f330:	2f00      	cmp	r7, #0
 800f332:	f340 8166 	ble.w	800f602 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f336:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f338:	6829      	ldr	r1, [r5, #0]
 800f33a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f33e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f342:	6820      	ldr	r0, [r4, #0]
 800f344:	4411      	add	r1, r2
 800f346:	4299      	cmp	r1, r3
 800f348:	dd1a      	ble.n	800f380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f34a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f34e:	440b      	add	r3, r1
 800f350:	4402      	add	r2, r0
 800f352:	b21b      	sxth	r3, r3
 800f354:	429a      	cmp	r2, r3
 800f356:	dc13      	bgt.n	800f380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f358:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f35a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f35c:	681b      	ldr	r3, [r3, #0]
 800f35e:	9206      	str	r2, [sp, #24]
 800f360:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f362:	9205      	str	r2, [sp, #20]
 800f364:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f366:	9500      	str	r5, [sp, #0]
 800f368:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f36c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f36e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f370:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f374:	a912      	add	r1, sp, #72	@ 0x48
 800f376:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f37a:	aa49      	add	r2, sp, #292	@ 0x124
 800f37c:	4623      	mov	r3, r4
 800f37e:	47c8      	blx	r9
 800f380:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f384:	441a      	add	r2, r3
 800f386:	6963      	ldr	r3, [r4, #20]
 800f388:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f38c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f390:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f394:	68a1      	ldr	r1, [r4, #8]
 800f396:	ed94 6a08 	vldr	s12, [r4, #32]
 800f39a:	6022      	str	r2, [r4, #0]
 800f39c:	3301      	adds	r3, #1
 800f39e:	6163      	str	r3, [r4, #20]
 800f3a0:	69a3      	ldr	r3, [r4, #24]
 800f3a2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f3a6:	3b01      	subs	r3, #1
 800f3a8:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f3ac:	61a3      	str	r3, [r4, #24]
 800f3ae:	6923      	ldr	r3, [r4, #16]
 800f3b0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f3b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f3b8:	edd4 6a07 	vldr	s13, [r4, #28]
 800f3bc:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f3c0:	440b      	add	r3, r1
 800f3c2:	68e1      	ldr	r1, [r4, #12]
 800f3c4:	6123      	str	r3, [r4, #16]
 800f3c6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f3ca:	428b      	cmp	r3, r1
 800f3cc:	edc4 6a07 	vstr	s13, [r4, #28]
 800f3d0:	db15      	blt.n	800f3fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f3d2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f3d6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f3da:	3201      	adds	r2, #1
 800f3dc:	edc4 6a07 	vstr	s13, [r4, #28]
 800f3e0:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f3e4:	6022      	str	r2, [r4, #0]
 800f3e6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f3ea:	1a5b      	subs	r3, r3, r1
 800f3ec:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f3f0:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f3f4:	6123      	str	r3, [r4, #16]
 800f3f6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f3fa:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f3fe:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f402:	441a      	add	r2, r3
 800f404:	696b      	ldr	r3, [r5, #20]
 800f406:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f40a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f40e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f412:	68a9      	ldr	r1, [r5, #8]
 800f414:	ed95 6a08 	vldr	s12, [r5, #32]
 800f418:	602a      	str	r2, [r5, #0]
 800f41a:	3301      	adds	r3, #1
 800f41c:	616b      	str	r3, [r5, #20]
 800f41e:	69ab      	ldr	r3, [r5, #24]
 800f420:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f424:	3b01      	subs	r3, #1
 800f426:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f42a:	61ab      	str	r3, [r5, #24]
 800f42c:	692b      	ldr	r3, [r5, #16]
 800f42e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f432:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f436:	edd5 6a07 	vldr	s13, [r5, #28]
 800f43a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f43e:	440b      	add	r3, r1
 800f440:	68e9      	ldr	r1, [r5, #12]
 800f442:	612b      	str	r3, [r5, #16]
 800f444:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f448:	428b      	cmp	r3, r1
 800f44a:	edc5 6a07 	vstr	s13, [r5, #28]
 800f44e:	db15      	blt.n	800f47c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f450:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f454:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f458:	3201      	adds	r2, #1
 800f45a:	edc5 6a07 	vstr	s13, [r5, #28]
 800f45e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f462:	602a      	str	r2, [r5, #0]
 800f464:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f468:	1a5b      	subs	r3, r3, r1
 800f46a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f46e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f472:	612b      	str	r3, [r5, #16]
 800f474:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f478:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f47c:	3f01      	subs	r7, #1
 800f47e:	e757      	b.n	800f330 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f480:	4299      	cmp	r1, r3
 800f482:	dc13      	bgt.n	800f4ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f484:	429a      	cmp	r2, r3
 800f486:	da14      	bge.n	800f4b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f488:	2502      	movs	r5, #2
 800f48a:	2703      	movs	r7, #3
 800f48c:	46a9      	mov	r9, r5
 800f48e:	f04f 0800 	mov.w	r8, #0
 800f492:	f04f 0a01 	mov.w	sl, #1
 800f496:	e6ef      	b.n	800f278 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f498:	2501      	movs	r5, #1
 800f49a:	2700      	movs	r7, #0
 800f49c:	46a9      	mov	r9, r5
 800f49e:	46b8      	mov	r8, r7
 800f4a0:	f04f 0a02 	mov.w	sl, #2
 800f4a4:	e6e8      	b.n	800f278 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f4a6:	2501      	movs	r5, #1
 800f4a8:	2702      	movs	r7, #2
 800f4aa:	e6e1      	b.n	800f270 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f4ac:	2500      	movs	r5, #0
 800f4ae:	2701      	movs	r7, #1
 800f4b0:	e7f4      	b.n	800f49c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f4b2:	2702      	movs	r7, #2
 800f4b4:	2503      	movs	r5, #3
 800f4b6:	f04f 0900 	mov.w	r9, #0
 800f4ba:	46b8      	mov	r8, r7
 800f4bc:	e7e9      	b.n	800f492 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f4be:	4613      	mov	r3, r2
 800f4c0:	e728      	b.n	800f314 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f4c2:	bf00      	nop
 800f4c4:	20014036 	.word	0x20014036
 800f4c8:	fffd8f01 	.word	0xfffd8f01
 800f4cc:	00027100 	.word	0x00027100
 800f4d0:	0004e1ff 	.word	0x0004e1ff
 800f4d4:	0004e1fe 	.word	0x0004e1fe
 800f4d8:	20014040 	.word	0x20014040
 800f4dc:	4613      	mov	r3, r2
 800f4de:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800f4e0:	9111      	str	r1, [sp, #68]	@ 0x44
 800f4e2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800f4e6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800f4ea:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800f4ec:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800f4f0:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800f4f4:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800f4f8:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800f4fc:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800f500:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800f504:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800f508:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800f50c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800f510:	469e      	mov	lr, r3
 800f512:	469c      	mov	ip, r3
 800f514:	f04f 0900 	mov.w	r9, #0
 800f518:	f1bc 0f00 	cmp.w	ip, #0
 800f51c:	d147      	bne.n	800f5ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f51e:	eb03 0c07 	add.w	ip, r3, r7
 800f522:	1ad7      	subs	r7, r2, r3
 800f524:	f1b9 0f00 	cmp.w	r9, #0
 800f528:	d009      	beq.n	800f53e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f52a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800f52e:	9029      	str	r0, [sp, #164]	@ 0xa4
 800f530:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800f534:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800f538:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800f53c:	912d      	str	r1, [sp, #180]	@ 0xb4
 800f53e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f540:	9111      	str	r1, [sp, #68]	@ 0x44
 800f542:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f546:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f54a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f54e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f552:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f556:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f55a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f55e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f562:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f566:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f56a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f56e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f572:	f04f 0800 	mov.w	r8, #0
 800f576:	f1be 0f00 	cmp.w	lr, #0
 800f57a:	d031      	beq.n	800f5e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f57c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f57e:	4431      	add	r1, r6
 800f580:	4549      	cmp	r1, r9
 800f582:	4450      	add	r0, sl
 800f584:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f588:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f58c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f590:	db08      	blt.n	800f5a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f592:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f596:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f59a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f59e:	3001      	adds	r0, #1
 800f5a0:	eba1 0109 	sub.w	r1, r1, r9
 800f5a4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f5a8:	f04f 0801 	mov.w	r8, #1
 800f5ac:	e7e3      	b.n	800f576 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f5ae:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f5b0:	4431      	add	r1, r6
 800f5b2:	4541      	cmp	r1, r8
 800f5b4:	4450      	add	r0, sl
 800f5b6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f5ba:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f5be:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f5c2:	db08      	blt.n	800f5d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f5c4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f5c8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f5cc:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f5d0:	3001      	adds	r0, #1
 800f5d2:	eba1 0108 	sub.w	r1, r1, r8
 800f5d6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f5da:	f04f 0901 	mov.w	r9, #1
 800f5de:	e79b      	b.n	800f518 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f5e0:	449c      	add	ip, r3
 800f5e2:	1aff      	subs	r7, r7, r3
 800f5e4:	f1b8 0f00 	cmp.w	r8, #0
 800f5e8:	d009      	beq.n	800f5fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f5ea:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f5ee:	9019      	str	r0, [sp, #100]	@ 0x64
 800f5f0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f5f4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f5f8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f5fc:	911d      	str	r1, [sp, #116]	@ 0x74
 800f5fe:	1ad2      	subs	r2, r2, r3
 800f600:	e68b      	b.n	800f31a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f602:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f604:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800f606:	2b00      	cmp	r3, #0
 800f608:	f000 80d1 	beq.w	800f7ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f60c:	ad19      	add	r5, sp, #100	@ 0x64
 800f60e:	ac39      	add	r4, sp, #228	@ 0xe4
 800f610:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f612:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f616:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f61a:	930c      	str	r3, [sp, #48]	@ 0x30
 800f61c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f61e:	6963      	ldr	r3, [r4, #20]
 800f620:	440b      	add	r3, r1
 800f622:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f626:	4408      	add	r0, r1
 800f628:	b200      	sxth	r0, r0
 800f62a:	4283      	cmp	r3, r0
 800f62c:	900d      	str	r0, [sp, #52]	@ 0x34
 800f62e:	f280 80c1 	bge.w	800f7b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f632:	428b      	cmp	r3, r1
 800f634:	da08      	bge.n	800f648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f636:	2a00      	cmp	r2, #0
 800f638:	dd06      	ble.n	800f648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f63a:	1acb      	subs	r3, r1, r3
 800f63c:	429a      	cmp	r2, r3
 800f63e:	f2c0 80bb 	blt.w	800f7b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f642:	2b00      	cmp	r3, #0
 800f644:	f300 80b9 	bgt.w	800f7ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f648:	6967      	ldr	r7, [r4, #20]
 800f64a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f64c:	443b      	add	r3, r7
 800f64e:	461f      	mov	r7, r3
 800f650:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f652:	1bdf      	subs	r7, r3, r7
 800f654:	4297      	cmp	r7, r2
 800f656:	bfa8      	it	ge
 800f658:	4617      	movge	r7, r2
 800f65a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f65e:	2f00      	cmp	r7, #0
 800f660:	f340 813c 	ble.w	800f8dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f664:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f666:	6829      	ldr	r1, [r5, #0]
 800f668:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f66c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f670:	6820      	ldr	r0, [r4, #0]
 800f672:	4411      	add	r1, r2
 800f674:	4299      	cmp	r1, r3
 800f676:	dd1a      	ble.n	800f6ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f678:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f67c:	440b      	add	r3, r1
 800f67e:	4402      	add	r2, r0
 800f680:	b21b      	sxth	r3, r3
 800f682:	429a      	cmp	r2, r3
 800f684:	dc13      	bgt.n	800f6ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f686:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f688:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f68a:	681b      	ldr	r3, [r3, #0]
 800f68c:	9206      	str	r2, [sp, #24]
 800f68e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f690:	9205      	str	r2, [sp, #20]
 800f692:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f694:	9500      	str	r5, [sp, #0]
 800f696:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f69a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f69c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f69e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f6a2:	a912      	add	r1, sp, #72	@ 0x48
 800f6a4:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f6a8:	aa49      	add	r2, sp, #292	@ 0x124
 800f6aa:	4623      	mov	r3, r4
 800f6ac:	47c8      	blx	r9
 800f6ae:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f6b2:	441a      	add	r2, r3
 800f6b4:	6963      	ldr	r3, [r4, #20]
 800f6b6:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f6ba:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f6be:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f6c2:	68a1      	ldr	r1, [r4, #8]
 800f6c4:	ed94 6a08 	vldr	s12, [r4, #32]
 800f6c8:	6022      	str	r2, [r4, #0]
 800f6ca:	3301      	adds	r3, #1
 800f6cc:	6163      	str	r3, [r4, #20]
 800f6ce:	69a3      	ldr	r3, [r4, #24]
 800f6d0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f6d4:	3b01      	subs	r3, #1
 800f6d6:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f6da:	61a3      	str	r3, [r4, #24]
 800f6dc:	6923      	ldr	r3, [r4, #16]
 800f6de:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f6e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f6e6:	edd4 6a07 	vldr	s13, [r4, #28]
 800f6ea:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f6ee:	440b      	add	r3, r1
 800f6f0:	68e1      	ldr	r1, [r4, #12]
 800f6f2:	6123      	str	r3, [r4, #16]
 800f6f4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f6f8:	428b      	cmp	r3, r1
 800f6fa:	edc4 6a07 	vstr	s13, [r4, #28]
 800f6fe:	db15      	blt.n	800f72c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f700:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f704:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f708:	3201      	adds	r2, #1
 800f70a:	edc4 6a07 	vstr	s13, [r4, #28]
 800f70e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f712:	6022      	str	r2, [r4, #0]
 800f714:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f718:	1a5b      	subs	r3, r3, r1
 800f71a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f71e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f722:	6123      	str	r3, [r4, #16]
 800f724:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f728:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f72c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f730:	441a      	add	r2, r3
 800f732:	696b      	ldr	r3, [r5, #20]
 800f734:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f738:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f73c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f740:	68a9      	ldr	r1, [r5, #8]
 800f742:	ed95 6a08 	vldr	s12, [r5, #32]
 800f746:	602a      	str	r2, [r5, #0]
 800f748:	3301      	adds	r3, #1
 800f74a:	616b      	str	r3, [r5, #20]
 800f74c:	69ab      	ldr	r3, [r5, #24]
 800f74e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f752:	3b01      	subs	r3, #1
 800f754:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f758:	61ab      	str	r3, [r5, #24]
 800f75a:	692b      	ldr	r3, [r5, #16]
 800f75c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f760:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f764:	edd5 6a07 	vldr	s13, [r5, #28]
 800f768:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f76c:	440b      	add	r3, r1
 800f76e:	68e9      	ldr	r1, [r5, #12]
 800f770:	612b      	str	r3, [r5, #16]
 800f772:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f776:	428b      	cmp	r3, r1
 800f778:	edc5 6a07 	vstr	s13, [r5, #28]
 800f77c:	db15      	blt.n	800f7aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f77e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f782:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f786:	3201      	adds	r2, #1
 800f788:	edc5 6a07 	vstr	s13, [r5, #28]
 800f78c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f790:	602a      	str	r2, [r5, #0]
 800f792:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f796:	1a5b      	subs	r3, r3, r1
 800f798:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f79c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f7a0:	612b      	str	r3, [r5, #16]
 800f7a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f7a6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f7aa:	3f01      	subs	r7, #1
 800f7ac:	e757      	b.n	800f65e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f7ae:	ad39      	add	r5, sp, #228	@ 0xe4
 800f7b0:	ac19      	add	r4, sp, #100	@ 0x64
 800f7b2:	e72d      	b.n	800f610 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f7b4:	4613      	mov	r3, r2
 800f7b6:	e744      	b.n	800f642 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f7b8:	4613      	mov	r3, r2
 800f7ba:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800f7be:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800f7c0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800f7c4:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800f7c8:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800f7cc:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800f7d0:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800f7d4:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800f7d8:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800f7dc:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800f7de:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800f7e2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800f7e6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800f7ea:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800f7ee:	960e      	str	r6, [sp, #56]	@ 0x38
 800f7f0:	469e      	mov	lr, r3
 800f7f2:	461f      	mov	r7, r3
 800f7f4:	f04f 0900 	mov.w	r9, #0
 800f7f8:	2f00      	cmp	r7, #0
 800f7fa:	d146      	bne.n	800f88a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f7fc:	449c      	add	ip, r3
 800f7fe:	1ad7      	subs	r7, r2, r3
 800f800:	f1b9 0f00 	cmp.w	r9, #0
 800f804:	d009      	beq.n	800f81a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f806:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800f80a:	9039      	str	r0, [sp, #228]	@ 0xe4
 800f80c:	913d      	str	r1, [sp, #244]	@ 0xf4
 800f80e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800f812:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800f816:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800f81a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f81c:	910e      	str	r1, [sp, #56]	@ 0x38
 800f81e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f822:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f826:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f82a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f82e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f832:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f836:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f83a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f83e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f842:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f846:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f84a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f84e:	f04f 0800 	mov.w	r8, #0
 800f852:	f1be 0f00 	cmp.w	lr, #0
 800f856:	d030      	beq.n	800f8ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f858:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f85a:	4431      	add	r1, r6
 800f85c:	4549      	cmp	r1, r9
 800f85e:	4450      	add	r0, sl
 800f860:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f864:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f868:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f86c:	db08      	blt.n	800f880 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f86e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f872:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f876:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f87a:	3001      	adds	r0, #1
 800f87c:	eba1 0109 	sub.w	r1, r1, r9
 800f880:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f884:	f04f 0801 	mov.w	r8, #1
 800f888:	e7e3      	b.n	800f852 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f88a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f88c:	4431      	add	r1, r6
 800f88e:	4541      	cmp	r1, r8
 800f890:	4450      	add	r0, sl
 800f892:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f896:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f89a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f89e:	db08      	blt.n	800f8b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f8a0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f8a4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f8a8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f8ac:	3001      	adds	r0, #1
 800f8ae:	eba1 0108 	sub.w	r1, r1, r8
 800f8b2:	3f01      	subs	r7, #1
 800f8b4:	f04f 0901 	mov.w	r9, #1
 800f8b8:	e79e      	b.n	800f7f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f8ba:	449c      	add	ip, r3
 800f8bc:	1aff      	subs	r7, r7, r3
 800f8be:	f1b8 0f00 	cmp.w	r8, #0
 800f8c2:	d009      	beq.n	800f8d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f8c4:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f8c8:	9019      	str	r0, [sp, #100]	@ 0x64
 800f8ca:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f8ce:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f8d2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f8d6:	911d      	str	r1, [sp, #116]	@ 0x74
 800f8d8:	1ad2      	subs	r2, r2, r3
 800f8da:	e6b5      	b.n	800f648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f8dc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f8de:	681b      	ldr	r3, [r3, #0]
 800f8e0:	b923      	cbnz	r3, 800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f8e2:	4b04      	ldr	r3, [pc, #16]	@ (800f8f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f8e4:	6818      	ldr	r0, [r3, #0]
 800f8e6:	6803      	ldr	r3, [r0, #0]
 800f8e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f8ea:	4798      	blx	r3
 800f8ec:	b05b      	add	sp, #364	@ 0x16c
 800f8ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8f2:	bf00      	nop
 800f8f4:	20014040 	.word	0x20014040

0800f8f8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f8f8:	2b03      	cmp	r3, #3
 800f8fa:	d818      	bhi.n	800f92e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f8fc:	e8df f003 	tbb	[pc, r3]
 800f900:	130d0602 	.word	0x130d0602
 800f904:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f908:	1850      	adds	r0, r2, r1
 800f90a:	4770      	bx	lr
 800f90c:	8803      	ldrh	r3, [r0, #0]
 800f90e:	8880      	ldrh	r0, [r0, #4]
 800f910:	4418      	add	r0, r3
 800f912:	b200      	sxth	r0, r0
 800f914:	1a80      	subs	r0, r0, r2
 800f916:	3801      	subs	r0, #1
 800f918:	4770      	bx	lr
 800f91a:	8803      	ldrh	r3, [r0, #0]
 800f91c:	8880      	ldrh	r0, [r0, #4]
 800f91e:	4418      	add	r0, r3
 800f920:	b200      	sxth	r0, r0
 800f922:	1a40      	subs	r0, r0, r1
 800f924:	e7f7      	b.n	800f916 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f926:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f92a:	4410      	add	r0, r2
 800f92c:	4770      	bx	lr
 800f92e:	2000      	movs	r0, #0
 800f930:	4770      	bx	lr

0800f932 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f932:	2b03      	cmp	r3, #3
 800f934:	d817      	bhi.n	800f966 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f936:	e8df f003 	tbb	[pc, r3]
 800f93a:	0602      	.short	0x0602
 800f93c:	1009      	.short	0x1009
 800f93e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f942:	1850      	adds	r0, r2, r1
 800f944:	4770      	bx	lr
 800f946:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f94a:	e7fa      	b.n	800f942 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f94c:	8843      	ldrh	r3, [r0, #2]
 800f94e:	88c0      	ldrh	r0, [r0, #6]
 800f950:	4418      	add	r0, r3
 800f952:	b200      	sxth	r0, r0
 800f954:	1a80      	subs	r0, r0, r2
 800f956:	3801      	subs	r0, #1
 800f958:	4770      	bx	lr
 800f95a:	8843      	ldrh	r3, [r0, #2]
 800f95c:	88c0      	ldrh	r0, [r0, #6]
 800f95e:	4418      	add	r0, r3
 800f960:	b200      	sxth	r0, r0
 800f962:	1a40      	subs	r0, r0, r1
 800f964:	e7f7      	b.n	800f956 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f966:	2000      	movs	r0, #0
 800f968:	4770      	bx	lr
	...

0800f96c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f96c:	4b01      	ldr	r3, [pc, #4]	@ (800f974 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f96e:	2200      	movs	r2, #0
 800f970:	601a      	str	r2, [r3, #0]
 800f972:	4770      	bx	lr
 800f974:	20014050 	.word	0x20014050

0800f978 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f978:	4603      	mov	r3, r0
 800f97a:	b1c8      	cbz	r0, 800f9b0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f97c:	0c02      	lsrs	r2, r0, #16
 800f97e:	0412      	lsls	r2, r2, #16
 800f980:	b9a2      	cbnz	r2, 800f9ac <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f982:	0403      	lsls	r3, r0, #16
 800f984:	2010      	movs	r0, #16
 800f986:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800f98a:	bf04      	itt	eq
 800f98c:	021b      	lsleq	r3, r3, #8
 800f98e:	3008      	addeq	r0, #8
 800f990:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800f994:	bf04      	itt	eq
 800f996:	011b      	lsleq	r3, r3, #4
 800f998:	3004      	addeq	r0, #4
 800f99a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800f99e:	bf04      	itt	eq
 800f9a0:	009b      	lsleq	r3, r3, #2
 800f9a2:	3002      	addeq	r0, #2
 800f9a4:	2b00      	cmp	r3, #0
 800f9a6:	db04      	blt.n	800f9b2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f9a8:	3001      	adds	r0, #1
 800f9aa:	4770      	bx	lr
 800f9ac:	2000      	movs	r0, #0
 800f9ae:	e7ea      	b.n	800f986 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f9b0:	2020      	movs	r0, #32
 800f9b2:	4770      	bx	lr

0800f9b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f9b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9b8:	b087      	sub	sp, #28
 800f9ba:	460d      	mov	r5, r1
 800f9bc:	4616      	mov	r6, r2
 800f9be:	4698      	mov	r8, r3
 800f9c0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800f9c4:	4601      	mov	r1, r0
 800f9c6:	b120      	cbz	r0, 800f9d2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f9c8:	b11a      	cbz	r2, 800f9d2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f9ca:	2d1f      	cmp	r5, #31
 800f9cc:	d801      	bhi.n	800f9d2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f9ce:	2b1f      	cmp	r3, #31
 800f9d0:	d904      	bls.n	800f9dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800f9d2:	2000      	movs	r0, #0
 800f9d4:	6038      	str	r0, [r7, #0]
 800f9d6:	b007      	add	sp, #28
 800f9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9dc:	b97d      	cbnz	r5, 800f9fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800f9de:	b143      	cbz	r3, 800f9f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800f9e0:	4602      	mov	r2, r0
 800f9e2:	e9cd 4700 	strd	r4, r7, [sp]
 800f9e6:	462b      	mov	r3, r5
 800f9e8:	4641      	mov	r1, r8
 800f9ea:	4630      	mov	r0, r6
 800f9ec:	f7ff ffe2 	bl	800f9b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f9f0:	e7f1      	b.n	800f9d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f9f2:	f04f 33ff 	mov.w	r3, #4294967295
 800f9f6:	603b      	str	r3, [r7, #0]
 800f9f8:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800f9fc:	e7eb      	b.n	800f9d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f9fe:	fa32 fa05 	lsrs.w	sl, r2, r5
 800fa02:	d106      	bne.n	800fa12 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800fa04:	4346      	muls	r6, r0
 800fa06:	fbb6 f0f4 	udiv	r0, r6, r4
 800fa0a:	fb04 6610 	mls	r6, r4, r0, r6
 800fa0e:	603e      	str	r6, [r7, #0]
 800fa10:	e7e1      	b.n	800f9d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fa12:	2201      	movs	r2, #1
 800fa14:	40aa      	lsls	r2, r5
 800fa16:	3a01      	subs	r2, #1
 800fa18:	4016      	ands	r6, r2
 800fa1a:	fa00 fb05 	lsl.w	fp, r0, r5
 800fa1e:	4630      	mov	r0, r6
 800fa20:	fbbb f9f4 	udiv	r9, fp, r4
 800fa24:	fb0a f309 	mul.w	r3, sl, r9
 800fa28:	9303      	str	r3, [sp, #12]
 800fa2a:	f7ff ffa5 	bl	800f978 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fa2e:	462b      	mov	r3, r5
 800fa30:	460a      	mov	r2, r1
 800fa32:	e9cd 4700 	strd	r4, r7, [sp]
 800fa36:	4601      	mov	r1, r0
 800fa38:	4630      	mov	r0, r6
 800fa3a:	f7ff ffbb 	bl	800f9b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fa3e:	fb04 b919 	mls	r9, r4, r9, fp
 800fa42:	4606      	mov	r6, r0
 800fa44:	4648      	mov	r0, r9
 800fa46:	eb05 0108 	add.w	r1, r5, r8
 800fa4a:	f7ff ff95 	bl	800f978 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fa4e:	ab05      	add	r3, sp, #20
 800fa50:	e9cd 4300 	strd	r4, r3, [sp]
 800fa54:	464a      	mov	r2, r9
 800fa56:	4603      	mov	r3, r0
 800fa58:	4650      	mov	r0, sl
 800fa5a:	f7ff ffab 	bl	800f9b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fa5e:	6839      	ldr	r1, [r7, #0]
 800fa60:	9a05      	ldr	r2, [sp, #20]
 800fa62:	9b03      	ldr	r3, [sp, #12]
 800fa64:	4411      	add	r1, r2
 800fa66:	fbb1 f2f4 	udiv	r2, r1, r4
 800fa6a:	18d3      	adds	r3, r2, r3
 800fa6c:	441e      	add	r6, r3
 800fa6e:	fb04 1412 	mls	r4, r4, r2, r1
 800fa72:	4430      	add	r0, r6
 800fa74:	603c      	str	r4, [r7, #0]
 800fa76:	e7ae      	b.n	800f9d6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800fa78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800fa78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa7c:	b085      	sub	sp, #20
 800fa7e:	f1b0 0900 	subs.w	r9, r0, #0
 800fa82:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800fa84:	461d      	mov	r5, r3
 800fa86:	bfbf      	itttt	lt
 800fa88:	6823      	ldrlt	r3, [r4, #0]
 800fa8a:	425b      	neglt	r3, r3
 800fa8c:	f1c9 0900 	rsblt	r9, r9, #0
 800fa90:	6023      	strlt	r3, [r4, #0]
 800fa92:	bfb4      	ite	lt
 800fa94:	f04f 36ff 	movlt.w	r6, #4294967295
 800fa98:	2601      	movge	r6, #1
 800fa9a:	2a00      	cmp	r2, #0
 800fa9c:	4617      	mov	r7, r2
 800fa9e:	da04      	bge.n	800faaa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800faa0:	6823      	ldr	r3, [r4, #0]
 800faa2:	425b      	negs	r3, r3
 800faa4:	4257      	negs	r7, r2
 800faa6:	4276      	negs	r6, r6
 800faa8:	6023      	str	r3, [r4, #0]
 800faaa:	2d00      	cmp	r5, #0
 800faac:	4638      	mov	r0, r7
 800faae:	bfba      	itte	lt
 800fab0:	426d      	neglt	r5, r5
 800fab2:	f04f 38ff 	movlt.w	r8, #4294967295
 800fab6:	f04f 0801 	movge.w	r8, #1
 800faba:	f7ff ff5d 	bl	800f978 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fabe:	ab03      	add	r3, sp, #12
 800fac0:	e9cd 5300 	strd	r5, r3, [sp]
 800fac4:	463a      	mov	r2, r7
 800fac6:	4603      	mov	r3, r0
 800fac8:	4648      	mov	r0, r9
 800faca:	f7ff ff73 	bl	800f9b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800face:	6823      	ldr	r3, [r4, #0]
 800fad0:	9a03      	ldr	r2, [sp, #12]
 800fad2:	4546      	cmp	r6, r8
 800fad4:	441a      	add	r2, r3
 800fad6:	fb92 f3f5 	sdiv	r3, r2, r5
 800fada:	4418      	add	r0, r3
 800fadc:	bf18      	it	ne
 800fade:	4240      	negne	r0, r0
 800fae0:	fb05 2313 	mls	r3, r5, r3, r2
 800fae4:	1c72      	adds	r2, r6, #1
 800fae6:	6023      	str	r3, [r4, #0]
 800fae8:	d105      	bne.n	800faf6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800faea:	2b00      	cmp	r3, #0
 800faec:	f1c3 0200 	rsb	r2, r3, #0
 800faf0:	db0b      	blt.n	800fb0a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800faf2:	6022      	str	r2, [r4, #0]
 800faf4:	e006      	b.n	800fb04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800faf6:	2e01      	cmp	r6, #1
 800faf8:	d104      	bne.n	800fb04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fafa:	2b00      	cmp	r3, #0
 800fafc:	da02      	bge.n	800fb04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fafe:	442b      	add	r3, r5
 800fb00:	3801      	subs	r0, #1
 800fb02:	6023      	str	r3, [r4, #0]
 800fb04:	b005      	add	sp, #20
 800fb06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fb0a:	3801      	subs	r0, #1
 800fb0c:	1b52      	subs	r2, r2, r5
 800fb0e:	e7f0      	b.n	800faf2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800fb10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800fb10:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800fb14:	4c1c      	ldr	r4, [pc, #112]	@ (800fb88 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800fb16:	6807      	ldr	r7, [r0, #0]
 800fb18:	69a3      	ldr	r3, [r4, #24]
 800fb1a:	4605      	mov	r5, r0
 800fb1c:	b92b      	cbnz	r3, 800fb2a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800fb1e:	6840      	ldr	r0, [r0, #4]
 800fb20:	e9c5 7000 	strd	r7, r0, [r5]
 800fb24:	b004      	add	sp, #16
 800fb26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fb2a:	68a2      	ldr	r2, [r4, #8]
 800fb2c:	6820      	ldr	r0, [r4, #0]
 800fb2e:	ae04      	add	r6, sp, #16
 800fb30:	f04f 0802 	mov.w	r8, #2
 800fb34:	fb93 f1f8 	sdiv	r1, r3, r8
 800fb38:	440a      	add	r2, r1
 800fb3a:	f846 2d04 	str.w	r2, [r6, #-4]!
 800fb3e:	69e1      	ldr	r1, [r4, #28]
 800fb40:	9600      	str	r6, [sp, #0]
 800fb42:	463a      	mov	r2, r7
 800fb44:	f7ff ff98 	bl	800fa78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fb48:	69a3      	ldr	r3, [r4, #24]
 800fb4a:	686a      	ldr	r2, [r5, #4]
 800fb4c:	6a21      	ldr	r1, [r4, #32]
 800fb4e:	9600      	str	r6, [sp, #0]
 800fb50:	4607      	mov	r7, r0
 800fb52:	6860      	ldr	r0, [r4, #4]
 800fb54:	f7ff ff90 	bl	800fa78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fb58:	6962      	ldr	r2, [r4, #20]
 800fb5a:	69a3      	ldr	r3, [r4, #24]
 800fb5c:	fb93 f8f8 	sdiv	r8, r3, r8
 800fb60:	4442      	add	r2, r8
 800fb62:	9203      	str	r2, [sp, #12]
 800fb64:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800fb66:	682a      	ldr	r2, [r5, #0]
 800fb68:	9600      	str	r6, [sp, #0]
 800fb6a:	4407      	add	r7, r0
 800fb6c:	68e0      	ldr	r0, [r4, #12]
 800fb6e:	f7ff ff83 	bl	800fa78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fb72:	9600      	str	r6, [sp, #0]
 800fb74:	4680      	mov	r8, r0
 800fb76:	69a3      	ldr	r3, [r4, #24]
 800fb78:	686a      	ldr	r2, [r5, #4]
 800fb7a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800fb7c:	6920      	ldr	r0, [r4, #16]
 800fb7e:	f7ff ff7b 	bl	800fa78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fb82:	4440      	add	r0, r8
 800fb84:	e7cc      	b.n	800fb20 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800fb86:	bf00      	nop
 800fb88:	20014054 	.word	0x20014054

0800fb8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800fb8c:	4b07      	ldr	r3, [pc, #28]	@ (800fbac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800fb8e:	781b      	ldrb	r3, [r3, #0]
 800fb90:	2b01      	cmp	r3, #1
 800fb92:	d109      	bne.n	800fba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800fb94:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fb98:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fb9c:	8003      	strh	r3, [r0, #0]
 800fb9e:	4b04      	ldr	r3, [pc, #16]	@ (800fbb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800fba0:	881b      	ldrh	r3, [r3, #0]
 800fba2:	3b01      	subs	r3, #1
 800fba4:	1a9b      	subs	r3, r3, r2
 800fba6:	800b      	strh	r3, [r1, #0]
 800fba8:	4770      	bx	lr
 800fbaa:	bf00      	nop
 800fbac:	20014036 	.word	0x20014036
 800fbb0:	20014032 	.word	0x20014032

0800fbb4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800fbb4:	b510      	push	{r4, lr}
 800fbb6:	4b07      	ldr	r3, [pc, #28]	@ (800fbd4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800fbb8:	781b      	ldrb	r3, [r3, #0]
 800fbba:	2b01      	cmp	r3, #1
 800fbbc:	d108      	bne.n	800fbd0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800fbbe:	4b06      	ldr	r3, [pc, #24]	@ (800fbd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800fbc0:	880c      	ldrh	r4, [r1, #0]
 800fbc2:	881b      	ldrh	r3, [r3, #0]
 800fbc4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fbc8:	3b01      	subs	r3, #1
 800fbca:	1b1b      	subs	r3, r3, r4
 800fbcc:	8003      	strh	r3, [r0, #0]
 800fbce:	800a      	strh	r2, [r1, #0]
 800fbd0:	bd10      	pop	{r4, pc}
 800fbd2:	bf00      	nop
 800fbd4:	20014036 	.word	0x20014036
 800fbd8:	20014032 	.word	0x20014032

0800fbdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800fbdc:	b510      	push	{r4, lr}
 800fbde:	4b0a      	ldr	r3, [pc, #40]	@ (800fc08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800fbe0:	781b      	ldrb	r3, [r3, #0]
 800fbe2:	2b01      	cmp	r3, #1
 800fbe4:	d10e      	bne.n	800fc04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800fbe6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fbea:	8843      	ldrh	r3, [r0, #2]
 800fbec:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fbf0:	8044      	strh	r4, [r0, #2]
 800fbf2:	18ca      	adds	r2, r1, r3
 800fbf4:	4b05      	ldr	r3, [pc, #20]	@ (800fc0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800fbf6:	881b      	ldrh	r3, [r3, #0]
 800fbf8:	1a9b      	subs	r3, r3, r2
 800fbfa:	8003      	strh	r3, [r0, #0]
 800fbfc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fc00:	80c3      	strh	r3, [r0, #6]
 800fc02:	8081      	strh	r1, [r0, #4]
 800fc04:	bd10      	pop	{r4, pc}
 800fc06:	bf00      	nop
 800fc08:	20014036 	.word	0x20014036
 800fc0c:	20014032 	.word	0x20014032

0800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800fc10:	4b08      	ldr	r3, [pc, #32]	@ (800fc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800fc12:	781b      	ldrb	r3, [r3, #0]
 800fc14:	2b01      	cmp	r3, #1
 800fc16:	d10c      	bne.n	800fc32 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800fc18:	8803      	ldrh	r3, [r0, #0]
 800fc1a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800fc1e:	8842      	ldrh	r2, [r0, #2]
 800fc20:	8002      	strh	r2, [r0, #0]
 800fc22:	185a      	adds	r2, r3, r1
 800fc24:	4b04      	ldr	r3, [pc, #16]	@ (800fc38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800fc26:	881b      	ldrh	r3, [r3, #0]
 800fc28:	1a9b      	subs	r3, r3, r2
 800fc2a:	8043      	strh	r3, [r0, #2]
 800fc2c:	88c3      	ldrh	r3, [r0, #6]
 800fc2e:	8083      	strh	r3, [r0, #4]
 800fc30:	80c1      	strh	r1, [r0, #6]
 800fc32:	4770      	bx	lr
 800fc34:	20014036 	.word	0x20014036
 800fc38:	20014032 	.word	0x20014032

0800fc3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800fc3c:	b510      	push	{r4, lr}
 800fc3e:	4b07      	ldr	r3, [pc, #28]	@ (800fc5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800fc40:	781b      	ldrb	r3, [r3, #0]
 800fc42:	2b01      	cmp	r3, #1
 800fc44:	d108      	bne.n	800fc58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800fc46:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fc4a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fc4e:	8003      	strh	r3, [r0, #0]
 800fc50:	8893      	ldrh	r3, [r2, #4]
 800fc52:	3b01      	subs	r3, #1
 800fc54:	1b1b      	subs	r3, r3, r4
 800fc56:	800b      	strh	r3, [r1, #0]
 800fc58:	bd10      	pop	{r4, pc}
 800fc5a:	bf00      	nop
 800fc5c:	20014036 	.word	0x20014036

0800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800fc60:	b510      	push	{r4, lr}
 800fc62:	4b0a      	ldr	r3, [pc, #40]	@ (800fc8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800fc64:	781b      	ldrb	r3, [r3, #0]
 800fc66:	2b01      	cmp	r3, #1
 800fc68:	460a      	mov	r2, r1
 800fc6a:	d10d      	bne.n	800fc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800fc6c:	8881      	ldrh	r1, [r0, #4]
 800fc6e:	8803      	ldrh	r3, [r0, #0]
 800fc70:	440b      	add	r3, r1
 800fc72:	4601      	mov	r1, r0
 800fc74:	3b01      	subs	r3, #1
 800fc76:	f821 3b02 	strh.w	r3, [r1], #2
 800fc7a:	f7ff ffdf 	bl	800fc3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800fc7e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fc82:	88c2      	ldrh	r2, [r0, #6]
 800fc84:	8082      	strh	r2, [r0, #4]
 800fc86:	80c3      	strh	r3, [r0, #6]
 800fc88:	bd10      	pop	{r4, pc}
 800fc8a:	bf00      	nop
 800fc8c:	20014036 	.word	0x20014036

0800fc90 <_ZN8touchgfx11Application13requestRedrawEv>:
 800fc90:	4b06      	ldr	r3, [pc, #24]	@ (800fcac <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800fc92:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fc96:	4b06      	ldr	r3, [pc, #24]	@ (800fcb0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800fc98:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800fc9c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fca0:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800fca4:	2100      	movs	r1, #0
 800fca6:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800fcaa:	4770      	bx	lr
 800fcac:	20014032 	.word	0x20014032
 800fcb0:	20014034 	.word	0x20014034

0800fcb4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800fcb4:	4b03      	ldr	r3, [pc, #12]	@ (800fcc4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800fcb6:	6818      	ldr	r0, [r3, #0]
 800fcb8:	b110      	cbz	r0, 800fcc0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800fcba:	6803      	ldr	r3, [r0, #0]
 800fcbc:	699b      	ldr	r3, [r3, #24]
 800fcbe:	4718      	bx	r3
 800fcc0:	4770      	bx	lr
 800fcc2:	bf00      	nop
 800fcc4:	20014084 	.word	0x20014084

0800fcc8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800fcc8:	4770      	bx	lr
	...

0800fccc <_ZN8touchgfx11Application4drawEv>:
 800fccc:	b507      	push	{r0, r1, r2, lr}
 800fcce:	4b09      	ldr	r3, [pc, #36]	@ (800fcf4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800fcd0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fcd4:	4b08      	ldr	r3, [pc, #32]	@ (800fcf8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800fcd6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fcda:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fcde:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fce2:	6803      	ldr	r3, [r0, #0]
 800fce4:	2100      	movs	r1, #0
 800fce6:	9100      	str	r1, [sp, #0]
 800fce8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800fcea:	4669      	mov	r1, sp
 800fcec:	4798      	blx	r3
 800fcee:	b003      	add	sp, #12
 800fcf0:	f85d fb04 	ldr.w	pc, [sp], #4
 800fcf4:	20014032 	.word	0x20014032
 800fcf8:	20014034 	.word	0x20014034

0800fcfc <_ZN8touchgfx11Application10invalidateEv>:
 800fcfc:	4b09      	ldr	r3, [pc, #36]	@ (800fd24 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800fcfe:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fd02:	4b09      	ldr	r3, [pc, #36]	@ (800fd28 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800fd04:	b082      	sub	sp, #8
 800fd06:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fd0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fd0e:	2100      	movs	r1, #0
 800fd10:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fd14:	9100      	str	r1, [sp, #0]
 800fd16:	6803      	ldr	r3, [r0, #0]
 800fd18:	aa02      	add	r2, sp, #8
 800fd1a:	e912 0006 	ldmdb	r2, {r1, r2}
 800fd1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fd20:	b002      	add	sp, #8
 800fd22:	4718      	bx	r3
 800fd24:	20014032 	.word	0x20014032
 800fd28:	20014034 	.word	0x20014034

0800fd2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800fd2c:	4b03      	ldr	r3, [pc, #12]	@ (800fd3c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800fd2e:	6818      	ldr	r0, [r3, #0]
 800fd30:	b110      	cbz	r0, 800fd38 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800fd32:	6803      	ldr	r3, [r0, #0]
 800fd34:	69db      	ldr	r3, [r3, #28]
 800fd36:	4718      	bx	r3
 800fd38:	4770      	bx	lr
 800fd3a:	bf00      	nop
 800fd3c:	20014084 	.word	0x20014084

0800fd40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800fd40:	4b03      	ldr	r3, [pc, #12]	@ (800fd50 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800fd42:	6818      	ldr	r0, [r3, #0]
 800fd44:	b110      	cbz	r0, 800fd4c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800fd46:	6803      	ldr	r3, [r0, #0]
 800fd48:	6a1b      	ldr	r3, [r3, #32]
 800fd4a:	4718      	bx	r3
 800fd4c:	4770      	bx	lr
 800fd4e:	bf00      	nop
 800fd50:	20014084 	.word	0x20014084

0800fd54 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800fd54:	2300      	movs	r3, #0
 800fd56:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800fd5a:	4770      	bx	lr

0800fd5c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800fd5c:	4b03      	ldr	r3, [pc, #12]	@ (800fd6c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800fd5e:	6818      	ldr	r0, [r3, #0]
 800fd60:	b110      	cbz	r0, 800fd68 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800fd62:	6803      	ldr	r3, [r0, #0]
 800fd64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fd66:	4718      	bx	r3
 800fd68:	4770      	bx	lr
 800fd6a:	bf00      	nop
 800fd6c:	20014084 	.word	0x20014084

0800fd70 <_ZN8touchgfx11ApplicationD1Ev>:
 800fd70:	4770      	bx	lr

0800fd72 <_ZN8touchgfx11ApplicationD0Ev>:
 800fd72:	b510      	push	{r4, lr}
 800fd74:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800fd78:	4604      	mov	r4, r0
 800fd7a:	f012 fb76 	bl	802246a <_ZdlPvj>
 800fd7e:	4620      	mov	r0, r4
 800fd80:	bd10      	pop	{r4, pc}

0800fd82 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800fd82:	b510      	push	{r4, lr}
 800fd84:	f9b1 4000 	ldrsh.w	r4, [r1]
 800fd88:	888a      	ldrh	r2, [r1, #4]
 800fd8a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fd8e:	4422      	add	r2, r4
 800fd90:	b212      	sxth	r2, r2
 800fd92:	4293      	cmp	r3, r2
 800fd94:	da15      	bge.n	800fdc2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fd96:	8882      	ldrh	r2, [r0, #4]
 800fd98:	4413      	add	r3, r2
 800fd9a:	b21b      	sxth	r3, r3
 800fd9c:	429c      	cmp	r4, r3
 800fd9e:	da10      	bge.n	800fdc2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fda0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800fda4:	88c9      	ldrh	r1, [r1, #6]
 800fda6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800fdaa:	4419      	add	r1, r3
 800fdac:	b209      	sxth	r1, r1
 800fdae:	428a      	cmp	r2, r1
 800fdb0:	da07      	bge.n	800fdc2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fdb2:	88c0      	ldrh	r0, [r0, #6]
 800fdb4:	4410      	add	r0, r2
 800fdb6:	b200      	sxth	r0, r0
 800fdb8:	4283      	cmp	r3, r0
 800fdba:	bfac      	ite	ge
 800fdbc:	2000      	movge	r0, #0
 800fdbe:	2001      	movlt	r0, #1
 800fdc0:	bd10      	pop	{r4, pc}
 800fdc2:	2000      	movs	r0, #0
 800fdc4:	e7fc      	b.n	800fdc0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800fdc6 <_ZN8touchgfx4Rect10restrictToEss>:
 800fdc6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fdca:	2b00      	cmp	r3, #0
 800fdcc:	b510      	push	{r4, lr}
 800fdce:	da04      	bge.n	800fdda <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800fdd0:	8884      	ldrh	r4, [r0, #4]
 800fdd2:	4423      	add	r3, r4
 800fdd4:	8083      	strh	r3, [r0, #4]
 800fdd6:	2300      	movs	r3, #0
 800fdd8:	8003      	strh	r3, [r0, #0]
 800fdda:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fdde:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fde2:	1b09      	subs	r1, r1, r4
 800fde4:	428b      	cmp	r3, r1
 800fde6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800fdea:	bfc8      	it	gt
 800fdec:	8081      	strhgt	r1, [r0, #4]
 800fdee:	2b00      	cmp	r3, #0
 800fdf0:	da04      	bge.n	800fdfc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800fdf2:	88c1      	ldrh	r1, [r0, #6]
 800fdf4:	440b      	add	r3, r1
 800fdf6:	80c3      	strh	r3, [r0, #6]
 800fdf8:	2300      	movs	r3, #0
 800fdfa:	8043      	strh	r3, [r0, #2]
 800fdfc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800fe00:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800fe04:	1a52      	subs	r2, r2, r1
 800fe06:	4293      	cmp	r3, r2
 800fe08:	bfc8      	it	gt
 800fe0a:	80c2      	strhgt	r2, [r0, #6]
 800fe0c:	bd10      	pop	{r4, pc}
	...

0800fe10 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800fe10:	b510      	push	{r4, lr}
 800fe12:	4b10      	ldr	r3, [pc, #64]	@ (800fe54 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800fe14:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fe18:	4b0f      	ldr	r3, [pc, #60]	@ (800fe58 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800fe1a:	460c      	mov	r4, r1
 800fe1c:	4620      	mov	r0, r4
 800fe1e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fe22:	f7ff ffd0 	bl	800fdc6 <_ZN8touchgfx4Rect10restrictToEss>
 800fe26:	4b0d      	ldr	r3, [pc, #52]	@ (800fe5c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800fe28:	6818      	ldr	r0, [r3, #0]
 800fe2a:	b190      	cbz	r0, 800fe52 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800fe2c:	6803      	ldr	r3, [r0, #0]
 800fe2e:	4621      	mov	r1, r4
 800fe30:	689b      	ldr	r3, [r3, #8]
 800fe32:	4798      	blx	r3
 800fe34:	4b0a      	ldr	r3, [pc, #40]	@ (800fe60 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800fe36:	6818      	ldr	r0, [r3, #0]
 800fe38:	b118      	cbz	r0, 800fe42 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800fe3a:	6803      	ldr	r3, [r0, #0]
 800fe3c:	4621      	mov	r1, r4
 800fe3e:	689b      	ldr	r3, [r3, #8]
 800fe40:	4798      	blx	r3
 800fe42:	4b08      	ldr	r3, [pc, #32]	@ (800fe64 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800fe44:	6818      	ldr	r0, [r3, #0]
 800fe46:	6803      	ldr	r3, [r0, #0]
 800fe48:	4621      	mov	r1, r4
 800fe4a:	69db      	ldr	r3, [r3, #28]
 800fe4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe50:	4718      	bx	r3
 800fe52:	bd10      	pop	{r4, pc}
 800fe54:	20014034 	.word	0x20014034
 800fe58:	20014032 	.word	0x20014032
 800fe5c:	20014084 	.word	0x20014084
 800fe60:	20014080 	.word	0x20014080
 800fe64:	20014040 	.word	0x20014040

0800fe68 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800fe68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fe6a:	4606      	mov	r6, r0
 800fe6c:	4608      	mov	r0, r1
 800fe6e:	460f      	mov	r7, r1
 800fe70:	f7fa ffa1 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe74:	b9e8      	cbnz	r0, 800feb2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe76:	f9b7 5000 	ldrsh.w	r5, [r7]
 800fe7a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800fe7e:	42a5      	cmp	r5, r4
 800fe80:	db17      	blt.n	800feb2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe82:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800fe86:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800fe8a:	429a      	cmp	r2, r3
 800fe8c:	db11      	blt.n	800feb2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe8e:	88b9      	ldrh	r1, [r7, #4]
 800fe90:	440d      	add	r5, r1
 800fe92:	88b1      	ldrh	r1, [r6, #4]
 800fe94:	440c      	add	r4, r1
 800fe96:	b22d      	sxth	r5, r5
 800fe98:	b224      	sxth	r4, r4
 800fe9a:	42a5      	cmp	r5, r4
 800fe9c:	dc09      	bgt.n	800feb2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe9e:	88f8      	ldrh	r0, [r7, #6]
 800fea0:	4410      	add	r0, r2
 800fea2:	88f2      	ldrh	r2, [r6, #6]
 800fea4:	4413      	add	r3, r2
 800fea6:	b200      	sxth	r0, r0
 800fea8:	b21b      	sxth	r3, r3
 800feaa:	4298      	cmp	r0, r3
 800feac:	bfcc      	ite	gt
 800feae:	2000      	movgt	r0, #0
 800feb0:	2001      	movle	r0, #1
 800feb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800feb4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800feb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800feb6:	4604      	mov	r4, r0
 800feb8:	4608      	mov	r0, r1
 800feba:	460d      	mov	r5, r1
 800febc:	f7fa ff7b 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fec0:	b978      	cbnz	r0, 800fee2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800fec2:	4620      	mov	r0, r4
 800fec4:	f7fa ff77 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fec8:	f9b5 6000 	ldrsh.w	r6, [r5]
 800fecc:	b150      	cbz	r0, 800fee4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800fece:	8026      	strh	r6, [r4, #0]
 800fed0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800fed4:	8063      	strh	r3, [r4, #2]
 800fed6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800feda:	80a3      	strh	r3, [r4, #4]
 800fedc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fee0:	80e3      	strh	r3, [r4, #6]
 800fee2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fee4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fee8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800feec:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800fef0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800fef4:	88ed      	ldrh	r5, [r5, #6]
 800fef6:	42b1      	cmp	r1, r6
 800fef8:	460f      	mov	r7, r1
 800fefa:	bfa8      	it	ge
 800fefc:	4637      	movge	r7, r6
 800fefe:	4293      	cmp	r3, r2
 800ff00:	4618      	mov	r0, r3
 800ff02:	4466      	add	r6, ip
 800ff04:	bfa8      	it	ge
 800ff06:	4610      	movge	r0, r2
 800ff08:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ff0c:	8027      	strh	r7, [r4, #0]
 800ff0e:	442a      	add	r2, r5
 800ff10:	88e5      	ldrh	r5, [r4, #6]
 800ff12:	8060      	strh	r0, [r4, #2]
 800ff14:	4461      	add	r1, ip
 800ff16:	442b      	add	r3, r5
 800ff18:	b236      	sxth	r6, r6
 800ff1a:	b209      	sxth	r1, r1
 800ff1c:	b212      	sxth	r2, r2
 800ff1e:	b21b      	sxth	r3, r3
 800ff20:	428e      	cmp	r6, r1
 800ff22:	bfac      	ite	ge
 800ff24:	ebc7 0106 	rsbge	r1, r7, r6
 800ff28:	ebc7 0101 	rsblt	r1, r7, r1
 800ff2c:	429a      	cmp	r2, r3
 800ff2e:	bfac      	ite	ge
 800ff30:	ebc0 0202 	rsbge	r2, r0, r2
 800ff34:	ebc0 0203 	rsblt	r2, r0, r3
 800ff38:	80a1      	strh	r1, [r4, #4]
 800ff3a:	80e2      	strh	r2, [r4, #6]
 800ff3c:	e7d1      	b.n	800fee2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800ff40 <_ZN8touchgfx11Application11getInstanceEv>:
 800ff40:	4b01      	ldr	r3, [pc, #4]	@ (800ff48 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800ff42:	6818      	ldr	r0, [r3, #0]
 800ff44:	4770      	bx	lr
 800ff46:	bf00      	nop
 800ff48:	20014094 	.word	0x20014094

0800ff4c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800ff4c:	b510      	push	{r4, lr}
 800ff4e:	2300      	movs	r3, #0
 800ff50:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800ff54:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800ff58:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800ff5c:	4604      	mov	r4, r0
 800ff5e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800ff62:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800ff66:	429a      	cmp	r2, r3
 800ff68:	d90e      	bls.n	800ff88 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800ff6a:	18e2      	adds	r2, r4, r3
 800ff6c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800ff70:	b122      	cbz	r2, 800ff7c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800ff72:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800ff76:	6803      	ldr	r3, [r0, #0]
 800ff78:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ff7a:	4798      	blx	r3
 800ff7c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800ff80:	3301      	adds	r3, #1
 800ff82:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800ff86:	e7ea      	b.n	800ff5e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800ff88:	bd10      	pop	{r4, pc}

0800ff8a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800ff8a:	2300      	movs	r3, #0
 800ff8c:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800ff90:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800ff94:	30a4      	adds	r0, #164	@ 0xa4
 800ff96:	f802 3b01 	strb.w	r3, [r2], #1
 800ff9a:	4282      	cmp	r2, r0
 800ff9c:	d1fb      	bne.n	800ff96 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800ff9e:	4770      	bx	lr

0800ffa0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800ffa0:	b570      	push	{r4, r5, r6, lr}
 800ffa2:	4c0b      	ldr	r4, [pc, #44]	@ (800ffd0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800ffa4:	4605      	mov	r5, r0
 800ffa6:	6820      	ldr	r0, [r4, #0]
 800ffa8:	460e      	mov	r6, r1
 800ffaa:	b110      	cbz	r0, 800ffb2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800ffac:	6803      	ldr	r3, [r0, #0]
 800ffae:	695b      	ldr	r3, [r3, #20]
 800ffb0:	4798      	blx	r3
 800ffb2:	1d28      	adds	r0, r5, #4
 800ffb4:	f7ff ffe9 	bl	800ff8a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800ffb8:	6026      	str	r6, [r4, #0]
 800ffba:	6833      	ldr	r3, [r6, #0]
 800ffbc:	4630      	mov	r0, r6
 800ffbe:	68db      	ldr	r3, [r3, #12]
 800ffc0:	4798      	blx	r3
 800ffc2:	682b      	ldr	r3, [r5, #0]
 800ffc4:	4628      	mov	r0, r5
 800ffc6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ffc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ffcc:	4718      	bx	r3
 800ffce:	bf00      	nop
 800ffd0:	20014084 	.word	0x20014084

0800ffd4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800ffd4:	2300      	movs	r3, #0
 800ffd6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800ffda:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800ffde:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ffe0:	461a      	mov	r2, r3
 800ffe2:	461c      	mov	r4, r3
 800ffe4:	461d      	mov	r5, r3
 800ffe6:	459c      	cmp	ip, r3
 800ffe8:	dd1a      	ble.n	8010020 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800ffea:	18c6      	adds	r6, r0, r3
 800ffec:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800fff0:	b16e      	cbz	r6, 801000e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800fff2:	429a      	cmp	r2, r3
 800fff4:	d008      	beq.n	8010008 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800fff6:	fa1f fe82 	uxth.w	lr, r2
 800fffa:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800fffe:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8010002:	1887      	adds	r7, r0, r2
 8010004:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8010008:	3201      	adds	r2, #1
 801000a:	3301      	adds	r3, #1
 801000c:	e7eb      	b.n	800ffe6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801000e:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8010012:	4299      	cmp	r1, r3
 8010014:	bfa8      	it	ge
 8010016:	3501      	addge	r5, #1
 8010018:	429e      	cmp	r6, r3
 801001a:	bfc8      	it	gt
 801001c:	3401      	addgt	r4, #1
 801001e:	e7f4      	b.n	801000a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8010020:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8010024:	1b49      	subs	r1, r1, r5
 8010026:	1b1b      	subs	r3, r3, r4
 8010028:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 801002c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8010030:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010034:	4293      	cmp	r3, r2
 8010036:	dd03      	ble.n	8010040 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8010038:	3b01      	subs	r3, #1
 801003a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801003e:	e7f7      	b.n	8010030 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8010040:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010044 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010044:	b570      	push	{r4, r5, r6, lr}
 8010046:	4d16      	ldr	r5, [pc, #88]	@ (80100a0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8010048:	4604      	mov	r4, r0
 801004a:	6828      	ldr	r0, [r5, #0]
 801004c:	b140      	cbz	r0, 8010060 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801004e:	7a03      	ldrb	r3, [r0, #8]
 8010050:	b933      	cbnz	r3, 8010060 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010052:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8010056:	6803      	ldr	r3, [r0, #0]
 8010058:	689b      	ldr	r3, [r3, #8]
 801005a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801005e:	4718      	bx	r3
 8010060:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8010064:	4e0f      	ldr	r6, [pc, #60]	@ (80100a4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8010066:	b973      	cbnz	r3, 8010086 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010068:	b168      	cbz	r0, 8010086 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801006a:	7a03      	ldrb	r3, [r0, #8]
 801006c:	b15b      	cbz	r3, 8010086 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801006e:	6830      	ldr	r0, [r6, #0]
 8010070:	b110      	cbz	r0, 8010078 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010072:	6803      	ldr	r3, [r0, #0]
 8010074:	691b      	ldr	r3, [r3, #16]
 8010076:	4798      	blx	r3
 8010078:	6828      	ldr	r0, [r5, #0]
 801007a:	6803      	ldr	r3, [r0, #0]
 801007c:	68db      	ldr	r3, [r3, #12]
 801007e:	4798      	blx	r3
 8010080:	2301      	movs	r3, #1
 8010082:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8010086:	3404      	adds	r4, #4
 8010088:	4620      	mov	r0, r4
 801008a:	f7ff ff5f 	bl	800ff4c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801008e:	4620      	mov	r0, r4
 8010090:	f7ff ffa0 	bl	800ffd4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8010094:	6830      	ldr	r0, [r6, #0]
 8010096:	b110      	cbz	r0, 801009e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8010098:	6803      	ldr	r3, [r0, #0]
 801009a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801009c:	e7dd      	b.n	801005a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801009e:	bd70      	pop	{r4, r5, r6, pc}
 80100a0:	20014088 	.word	0x20014088
 80100a4:	20014084 	.word	0x20014084

080100a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80100a8:	4603      	mov	r3, r0
 80100aa:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 80100ae:	2200      	movs	r2, #0
 80100b0:	801a      	strh	r2, [r3, #0]
 80100b2:	805a      	strh	r2, [r3, #2]
 80100b4:	809a      	strh	r2, [r3, #4]
 80100b6:	80da      	strh	r2, [r3, #6]
 80100b8:	3308      	adds	r3, #8
 80100ba:	428b      	cmp	r3, r1
 80100bc:	d1f8      	bne.n	80100b0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80100be:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 80100c2:	4770      	bx	lr

080100c4 <_ZN8touchgfx11ApplicationC1Ev>:
 80100c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80100c6:	4606      	mov	r6, r0
 80100c8:	4b1c      	ldr	r3, [pc, #112]	@ (801013c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80100ca:	f846 3b04 	str.w	r3, [r6], #4
 80100ce:	4604      	mov	r4, r0
 80100d0:	2500      	movs	r5, #0
 80100d2:	22a8      	movs	r2, #168	@ 0xa8
 80100d4:	2100      	movs	r1, #0
 80100d6:	4630      	mov	r0, r6
 80100d8:	f013 fb87 	bl	80237ea <memset>
 80100dc:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 80100e0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80100e4:	f7ff ffe0 	bl	80100a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80100e8:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80100ec:	f7ff ffdc 	bl	80100a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80100f0:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 80100f4:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 80100f8:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 80100fc:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8010100:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8010104:	490e      	ldr	r1, [pc, #56]	@ (8010140 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010106:	480f      	ldr	r0, [pc, #60]	@ (8010144 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010108:	4f0f      	ldr	r7, [pc, #60]	@ (8010148 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801010a:	f011 fb39 	bl	8021780 <CRC_Lock>
 801010e:	4b0f      	ldr	r3, [pc, #60]	@ (801014c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8010110:	b158      	cbz	r0, 801012a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8010112:	801d      	strh	r5, [r3, #0]
 8010114:	4a0e      	ldr	r2, [pc, #56]	@ (8010150 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8010116:	2300      	movs	r3, #0
 8010118:	6013      	str	r3, [r2, #0]
 801011a:	4a0e      	ldr	r2, [pc, #56]	@ (8010154 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 801011c:	603b      	str	r3, [r7, #0]
 801011e:	4630      	mov	r0, r6
 8010120:	6013      	str	r3, [r2, #0]
 8010122:	f7ff ff32 	bl	800ff8a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010126:	4620      	mov	r0, r4
 8010128:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801012a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801012e:	2002      	movs	r0, #2
 8010130:	801a      	strh	r2, [r3, #0]
 8010132:	6038      	str	r0, [r7, #0]
 8010134:	f001 ffcc 	bl	80120d0 <_ZN8touchgfx6Screen4drawEv>
 8010138:	e7ec      	b.n	8010114 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801013a:	bf00      	nop
 801013c:	08025d68 	.word	0x08025d68
 8010140:	b5e8b5cd 	.word	0xb5e8b5cd
 8010144:	f407a5c2 	.word	0xf407a5c2
 8010148:	20014084 	.word	0x20014084
 801014c:	20000194 	.word	0x20000194
 8010150:	20014094 	.word	0x20014094
 8010154:	20014088 	.word	0x20014088

08010158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010158:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 801015c:	3b01      	subs	r3, #1
 801015e:	b29b      	uxth	r3, r3
 8010160:	428b      	cmp	r3, r1
 8010162:	b510      	push	{r4, lr}
 8010164:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8010168:	d908      	bls.n	801017c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801016a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801016e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010172:	681a      	ldr	r2, [r3, #0]
 8010174:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010178:	685a      	ldr	r2, [r3, #4]
 801017a:	6062      	str	r2, [r4, #4]
 801017c:	bd10      	pop	{r4, pc}
	...

08010180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010184:	4b92      	ldr	r3, [pc, #584]	@ (80103d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 8010186:	b08f      	sub	sp, #60	@ 0x3c
 8010188:	ac0a      	add	r4, sp, #40	@ 0x28
 801018a:	e884 0006 	stmia.w	r4, {r1, r2}
 801018e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010192:	4b90      	ldr	r3, [pc, #576]	@ (80103d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 8010194:	4683      	mov	fp, r0
 8010196:	f9b3 1000 	ldrsh.w	r1, [r3]
 801019a:	4620      	mov	r0, r4
 801019c:	f7ff fe13 	bl	800fdc6 <_ZN8touchgfx4Rect10restrictToEss>
 80101a0:	4620      	mov	r0, r4
 80101a2:	f7fa fe08 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80101a6:	2800      	cmp	r0, #0
 80101a8:	d170      	bne.n	801028c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80101aa:	4b8b      	ldr	r3, [pc, #556]	@ (80103d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 80101ac:	681b      	ldr	r3, [r3, #0]
 80101ae:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 80101b2:	2b02      	cmp	r3, #2
 80101b4:	d06a      	beq.n	801028c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80101b6:	9403      	str	r4, [sp, #12]
 80101b8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80101bc:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80101c0:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80101c4:	35a4      	adds	r5, #164	@ 0xa4
 80101c6:	9301      	str	r3, [sp, #4]
 80101c8:	b15c      	cbz	r4, 80101e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 80101ca:	4629      	mov	r1, r5
 80101cc:	9803      	ldr	r0, [sp, #12]
 80101ce:	f7ff fe4b 	bl	800fe68 <_ZNK8touchgfx4Rect8includesERKS0_>
 80101d2:	3c01      	subs	r4, #1
 80101d4:	b118      	cbz	r0, 80101de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80101d6:	b2a1      	uxth	r1, r4
 80101d8:	9801      	ldr	r0, [sp, #4]
 80101da:	f7ff ffbd 	bl	8010158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80101de:	3d08      	subs	r5, #8
 80101e0:	e7f2      	b.n	80101c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 80101e2:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 80101e6:	f8cd a010 	str.w	sl, [sp, #16]
 80101ea:	f10a 33ff 	add.w	r3, sl, #4294967295
 80101ee:	9302      	str	r3, [sp, #8]
 80101f0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80101f4:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 80101f8:	9306      	str	r3, [sp, #24]
 80101fa:	445c      	add	r4, fp
 80101fc:	2500      	movs	r5, #0
 80101fe:	4626      	mov	r6, r4
 8010200:	f8cd a014 	str.w	sl, [sp, #20]
 8010204:	462f      	mov	r7, r5
 8010206:	9b05      	ldr	r3, [sp, #20]
 8010208:	2b00      	cmp	r3, #0
 801020a:	d073      	beq.n	80102f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 801020c:	9903      	ldr	r1, [sp, #12]
 801020e:	4630      	mov	r0, r6
 8010210:	f7ff fdb7 	bl	800fd82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010214:	b350      	cbz	r0, 801026c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 8010216:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 801021a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801021e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8010222:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8010226:	45e6      	cmp	lr, ip
 8010228:	db33      	blt.n	8010292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 801022a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801022e:	88b3      	ldrh	r3, [r6, #4]
 8010230:	4472      	add	r2, lr
 8010232:	4463      	add	r3, ip
 8010234:	b212      	sxth	r2, r2
 8010236:	b21b      	sxth	r3, r3
 8010238:	429a      	cmp	r2, r3
 801023a:	dc2a      	bgt.n	8010292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 801023c:	88f3      	ldrh	r3, [r6, #6]
 801023e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010242:	fa1f f289 	uxth.w	r2, r9
 8010246:	4413      	add	r3, r2
 8010248:	b29b      	uxth	r3, r3
 801024a:	45c8      	cmp	r8, r9
 801024c:	fa1f fc88 	uxth.w	ip, r8
 8010250:	fa0f fe83 	sxth.w	lr, r3
 8010254:	db0f      	blt.n	8010276 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 8010256:	eba3 030c 	sub.w	r3, r3, ip
 801025a:	1ac9      	subs	r1, r1, r3
 801025c:	b209      	sxth	r1, r1
 801025e:	2900      	cmp	r1, #0
 8010260:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010264:	dd12      	ble.n	801028c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8010266:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 801026a:	4605      	mov	r5, r0
 801026c:	9b05      	ldr	r3, [sp, #20]
 801026e:	3b01      	subs	r3, #1
 8010270:	9305      	str	r3, [sp, #20]
 8010272:	3e08      	subs	r6, #8
 8010274:	e7c7      	b.n	8010206 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 8010276:	4461      	add	r1, ip
 8010278:	b209      	sxth	r1, r1
 801027a:	4571      	cmp	r1, lr
 801027c:	dc38      	bgt.n	80102f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801027e:	eba2 020c 	sub.w	r2, r2, ip
 8010282:	b212      	sxth	r2, r2
 8010284:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010288:	2a00      	cmp	r2, #0
 801028a:	dcee      	bgt.n	801026a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801028c:	b00f      	add	sp, #60	@ 0x3c
 801028e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010292:	45c8      	cmp	r8, r9
 8010294:	db2c      	blt.n	80102f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8010296:	88f3      	ldrh	r3, [r6, #6]
 8010298:	4499      	add	r9, r3
 801029a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 801029e:	4498      	add	r8, r3
 80102a0:	fa0f f989 	sxth.w	r9, r9
 80102a4:	fa0f f888 	sxth.w	r8, r8
 80102a8:	45c1      	cmp	r9, r8
 80102aa:	db21      	blt.n	80102f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80102ac:	88b3      	ldrh	r3, [r6, #4]
 80102ae:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80102b2:	fa1f f28c 	uxth.w	r2, ip
 80102b6:	4413      	add	r3, r2
 80102b8:	b29b      	uxth	r3, r3
 80102ba:	45e6      	cmp	lr, ip
 80102bc:	fa1f f88e 	uxth.w	r8, lr
 80102c0:	fa0f f983 	sxth.w	r9, r3
 80102c4:	db0a      	blt.n	80102dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 80102c6:	eba3 0308 	sub.w	r3, r3, r8
 80102ca:	1ac9      	subs	r1, r1, r3
 80102cc:	b209      	sxth	r1, r1
 80102ce:	2900      	cmp	r1, #0
 80102d0:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80102d4:	ddda      	ble.n	801028c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80102d6:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80102da:	e7c6      	b.n	801026a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80102dc:	4441      	add	r1, r8
 80102de:	b209      	sxth	r1, r1
 80102e0:	4549      	cmp	r1, r9
 80102e2:	dc05      	bgt.n	80102f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80102e4:	eba2 0208 	sub.w	r2, r2, r8
 80102e8:	b212      	sxth	r2, r2
 80102ea:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80102ee:	e7cb      	b.n	8010288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 80102f0:	4607      	mov	r7, r0
 80102f2:	e7bb      	b.n	801026c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 80102f4:	2d00      	cmp	r5, #0
 80102f6:	d181      	bne.n	80101fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 80102f8:	2f00      	cmp	r7, #0
 80102fa:	f000 81df 	beq.w	80106bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80102fe:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8010302:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8010306:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 801030a:	b2b3      	uxth	r3, r6
 801030c:	9305      	str	r3, [sp, #20]
 801030e:	9a05      	ldr	r2, [sp, #20]
 8010310:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8010314:	4413      	add	r3, r2
 8010316:	b2ba      	uxth	r2, r7
 8010318:	4492      	add	sl, r2
 801031a:	b29b      	uxth	r3, r3
 801031c:	fa1f fa8a 	uxth.w	sl, sl
 8010320:	fa0f f883 	sxth.w	r8, r3
 8010324:	fa0f f98a 	sxth.w	r9, sl
 8010328:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801032c:	9b04      	ldr	r3, [sp, #16]
 801032e:	2b00      	cmp	r3, #0
 8010330:	d054      	beq.n	80103dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 8010332:	9903      	ldr	r1, [sp, #12]
 8010334:	4620      	mov	r0, r4
 8010336:	f7ff fd24 	bl	800fd82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801033a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801033e:	b1c0      	cbz	r0, 8010372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010340:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010344:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010348:	4576      	cmp	r6, lr
 801034a:	dc22      	bgt.n	8010392 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801034c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010350:	44f4      	add	ip, lr
 8010352:	fa0f fc8c 	sxth.w	ip, ip
 8010356:	45e0      	cmp	r8, ip
 8010358:	db1b      	blt.n	8010392 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801035a:	428f      	cmp	r7, r1
 801035c:	fa1f fc81 	uxth.w	ip, r1
 8010360:	88e1      	ldrh	r1, [r4, #6]
 8010362:	dc0d      	bgt.n	8010380 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 8010364:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010368:	eba1 010c 	sub.w	r1, r1, ip
 801036c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8010370:	80e1      	strh	r1, [r4, #6]
 8010372:	4628      	mov	r0, r5
 8010374:	9904      	ldr	r1, [sp, #16]
 8010376:	3901      	subs	r1, #1
 8010378:	9104      	str	r1, [sp, #16]
 801037a:	3c08      	subs	r4, #8
 801037c:	4605      	mov	r5, r0
 801037e:	e7d3      	b.n	8010328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 8010380:	4461      	add	r1, ip
 8010382:	b209      	sxth	r1, r1
 8010384:	4549      	cmp	r1, r9
 8010386:	dcf5      	bgt.n	8010374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010388:	eba2 0c0c 	sub.w	ip, r2, ip
 801038c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010390:	e7ef      	b.n	8010372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010392:	428f      	cmp	r7, r1
 8010394:	dcee      	bgt.n	8010374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010396:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801039a:	4461      	add	r1, ip
 801039c:	b209      	sxth	r1, r1
 801039e:	4589      	cmp	r9, r1
 80103a0:	dbe8      	blt.n	8010374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80103a2:	4576      	cmp	r6, lr
 80103a4:	fa1f fc8e 	uxth.w	ip, lr
 80103a8:	88a1      	ldrh	r1, [r4, #4]
 80103aa:	dc07      	bgt.n	80103bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 80103ac:	eba3 0c0c 	sub.w	ip, r3, ip
 80103b0:	eba1 010c 	sub.w	r1, r1, ip
 80103b4:	f8a4 8000 	strh.w	r8, [r4]
 80103b8:	80a1      	strh	r1, [r4, #4]
 80103ba:	e7da      	b.n	8010372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 80103bc:	4461      	add	r1, ip
 80103be:	b209      	sxth	r1, r1
 80103c0:	4588      	cmp	r8, r1
 80103c2:	dbd7      	blt.n	8010374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80103c4:	9905      	ldr	r1, [sp, #20]
 80103c6:	eba1 0c0c 	sub.w	ip, r1, ip
 80103ca:	f8a4 c004 	strh.w	ip, [r4, #4]
 80103ce:	e7d0      	b.n	8010372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 80103d0:	20014034 	.word	0x20014034
 80103d4:	20014032 	.word	0x20014032
 80103d8:	20014040 	.word	0x20014040
 80103dc:	2d00      	cmp	r5, #0
 80103de:	f000 816d 	beq.w	80106bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80103e2:	9b06      	ldr	r3, [sp, #24]
 80103e4:	445b      	add	r3, fp
 80103e6:	461c      	mov	r4, r3
 80103e8:	9b02      	ldr	r3, [sp, #8]
 80103ea:	3301      	adds	r3, #1
 80103ec:	f000 8166 	beq.w	80106bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80103f0:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 80103f4:	4629      	mov	r1, r5
 80103f6:	9803      	ldr	r0, [sp, #12]
 80103f8:	f7ff fd36 	bl	800fe68 <_ZNK8touchgfx4Rect8includesERKS0_>
 80103fc:	b120      	cbz	r0, 8010408 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 80103fe:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8010402:	9801      	ldr	r0, [sp, #4]
 8010404:	f7ff fea8 	bl	8010158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010408:	9903      	ldr	r1, [sp, #12]
 801040a:	4628      	mov	r0, r5
 801040c:	f7ff fcb9 	bl	800fd82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010410:	2800      	cmp	r0, #0
 8010412:	f000 809c 	beq.w	801054e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 8010416:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 801041a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801041e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010422:	9309      	str	r3, [sp, #36]	@ 0x24
 8010424:	fa1f f189 	uxth.w	r1, r9
 8010428:	eb01 0c03 	add.w	ip, r1, r3
 801042c:	fa1f fa8c 	uxth.w	sl, ip
 8010430:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8010434:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8010438:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 801043c:	b283      	uxth	r3, r0
 801043e:	eb03 050c 	add.w	r5, r3, ip
 8010442:	b2ad      	uxth	r5, r5
 8010444:	9505      	str	r5, [sp, #20]
 8010446:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801044a:	9504      	str	r5, [sp, #16]
 801044c:	4548      	cmp	r0, r9
 801044e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8010452:	f340 8099 	ble.w	8010588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8010456:	1a5b      	subs	r3, r3, r1
 8010458:	b29b      	uxth	r3, r3
 801045a:	4596      	cmp	lr, r2
 801045c:	fa0f f08a 	sxth.w	r0, sl
 8010460:	b21e      	sxth	r6, r3
 8010462:	dd2e      	ble.n	80104c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 8010464:	9f02      	ldr	r7, [sp, #8]
 8010466:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801046a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801046e:	9f04      	ldr	r7, [sp, #16]
 8010470:	1a3f      	subs	r7, r7, r0
 8010472:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8010476:	fa1f fe8e 	uxth.w	lr, lr
 801047a:	b292      	uxth	r2, r2
 801047c:	ebae 0102 	sub.w	r1, lr, r2
 8010480:	44a6      	add	lr, r4
 8010482:	4402      	add	r2, r0
 8010484:	b289      	uxth	r1, r1
 8010486:	fa0f fe8e 	sxth.w	lr, lr
 801048a:	b212      	sxth	r2, r2
 801048c:	b20d      	sxth	r5, r1
 801048e:	ebae 0202 	sub.w	r2, lr, r2
 8010492:	436f      	muls	r7, r5
 8010494:	4372      	muls	r2, r6
 8010496:	4297      	cmp	r7, r2
 8010498:	db09      	blt.n	80104ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 801049a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 801049e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 80104a2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80104a6:	449c      	add	ip, r3
 80104a8:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80104ac:	e684      	b.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80104ae:	4421      	add	r1, r4
 80104b0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 80104b4:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 80104b8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80104bc:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80104c0:	e67a      	b.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80104c2:	9f04      	ldr	r7, [sp, #16]
 80104c4:	42b8      	cmp	r0, r7
 80104c6:	da27      	bge.n	8010518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 80104c8:	9902      	ldr	r1, [sp, #8]
 80104ca:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 80104ce:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80104d2:	eb05 010e 	add.w	r1, r5, lr
 80104d6:	fa1f f881 	uxth.w	r8, r1
 80104da:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 80104de:	4411      	add	r1, r2
 80104e0:	eba1 0108 	sub.w	r1, r1, r8
 80104e4:	b289      	uxth	r1, r1
 80104e6:	fa0f f988 	sxth.w	r9, r8
 80104ea:	eba2 020e 	sub.w	r2, r2, lr
 80104ee:	fa0f f881 	sxth.w	r8, r1
 80104f2:	1a3f      	subs	r7, r7, r0
 80104f4:	4372      	muls	r2, r6
 80104f6:	fb08 f707 	mul.w	r7, r8, r7
 80104fa:	42ba      	cmp	r2, r7
 80104fc:	dc06      	bgt.n	801050c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 80104fe:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8010502:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8010506:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 801050a:	e7ca      	b.n	80104a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 801050c:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8010510:	4429      	add	r1, r5
 8010512:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010516:	e64f      	b.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8010518:	9805      	ldr	r0, [sp, #20]
 801051a:	ebaa 0000 	sub.w	r0, sl, r0
 801051e:	b280      	uxth	r0, r0
 8010520:	2d06      	cmp	r5, #6
 8010522:	fa0f fe80 	sxth.w	lr, r0
 8010526:	d817      	bhi.n	8010558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 8010528:	9b04      	ldr	r3, [sp, #16]
 801052a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801052e:	1c6b      	adds	r3, r5, #1
 8010530:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8010534:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8010538:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801053c:	9b01      	ldr	r3, [sp, #4]
 801053e:	9801      	ldr	r0, [sp, #4]
 8010540:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010544:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010548:	805a      	strh	r2, [r3, #2]
 801054a:	809e      	strh	r6, [r3, #4]
 801054c:	80d9      	strh	r1, [r3, #6]
 801054e:	9b02      	ldr	r3, [sp, #8]
 8010550:	3b01      	subs	r3, #1
 8010552:	9302      	str	r3, [sp, #8]
 8010554:	3c08      	subs	r4, #8
 8010556:	e747      	b.n	80103e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 8010558:	9a02      	ldr	r2, [sp, #8]
 801055a:	45b6      	cmp	lr, r6
 801055c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010560:	db0d      	blt.n	801057e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 8010562:	449c      	add	ip, r3
 8010564:	fa1f fc8c 	uxth.w	ip, ip
 8010568:	445a      	add	r2, fp
 801056a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801056e:	448c      	add	ip, r1
 8010570:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010574:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8010578:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 801057c:	e61c      	b.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801057e:	445a      	add	r2, fp
 8010580:	4484      	add	ip, r0
 8010582:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8010586:	e78f      	b.n	80104a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8010588:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 801058c:	fa1f f18e 	uxth.w	r1, lr
 8010590:	eb01 0806 	add.w	r8, r1, r6
 8010594:	b293      	uxth	r3, r2
 8010596:	fa1f f888 	uxth.w	r8, r8
 801059a:	9306      	str	r3, [sp, #24]
 801059c:	fa0f f388 	sxth.w	r3, r8
 80105a0:	9307      	str	r3, [sp, #28]
 80105a2:	9f06      	ldr	r7, [sp, #24]
 80105a4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80105a8:	443b      	add	r3, r7
 80105aa:	b29b      	uxth	r3, r3
 80105ac:	4596      	cmp	lr, r2
 80105ae:	9308      	str	r3, [sp, #32]
 80105b0:	da24      	bge.n	80105fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80105b2:	9905      	ldr	r1, [sp, #20]
 80105b4:	eba3 0308 	sub.w	r3, r3, r8
 80105b8:	ebaa 0401 	sub.w	r4, sl, r1
 80105bc:	b2a4      	uxth	r4, r4
 80105be:	b29b      	uxth	r3, r3
 80105c0:	b225      	sxth	r5, r4
 80105c2:	b219      	sxth	r1, r3
 80105c4:	eba2 020e 	sub.w	r2, r2, lr
 80105c8:	eba9 0000 	sub.w	r0, r9, r0
 80105cc:	436a      	muls	r2, r5
 80105ce:	4348      	muls	r0, r1
 80105d0:	4282      	cmp	r2, r0
 80105d2:	9a02      	ldr	r2, [sp, #8]
 80105d4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80105d8:	445a      	add	r2, fp
 80105da:	dc06      	bgt.n	80105ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80105dc:	9b07      	ldr	r3, [sp, #28]
 80105de:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 80105e2:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 80105e6:	44a4      	add	ip, r4
 80105e8:	e75e      	b.n	80104a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 80105ea:	9904      	ldr	r1, [sp, #16]
 80105ec:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 80105f0:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 80105f4:	4433      	add	r3, r6
 80105f6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80105fa:	e5dd      	b.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80105fc:	9f06      	ldr	r7, [sp, #24]
 80105fe:	9b04      	ldr	r3, [sp, #16]
 8010600:	1bc9      	subs	r1, r1, r7
 8010602:	fa0f f78a 	sxth.w	r7, sl
 8010606:	b289      	uxth	r1, r1
 8010608:	429f      	cmp	r7, r3
 801060a:	fa0f fe81 	sxth.w	lr, r1
 801060e:	dd23      	ble.n	8010658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 8010610:	9a05      	ldr	r2, [sp, #20]
 8010612:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010616:	9d07      	ldr	r5, [sp, #28]
 8010618:	ebaa 0202 	sub.w	r2, sl, r2
 801061c:	b292      	uxth	r2, r2
 801061e:	eba5 0a03 	sub.w	sl, r5, r3
 8010622:	b214      	sxth	r4, r2
 8010624:	eba9 0000 	sub.w	r0, r9, r0
 8010628:	9b02      	ldr	r3, [sp, #8]
 801062a:	fb0e f000 	mul.w	r0, lr, r0
 801062e:	fb04 fa0a 	mul.w	sl, r4, sl
 8010632:	00db      	lsls	r3, r3, #3
 8010634:	4550      	cmp	r0, sl
 8010636:	445b      	add	r3, fp
 8010638:	db03      	blt.n	8010642 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 801063a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 801063e:	4494      	add	ip, r2
 8010640:	e732      	b.n	80104a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8010642:	9a04      	ldr	r2, [sp, #16]
 8010644:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8010648:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801064c:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8010650:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010654:	4431      	add	r1, r6
 8010656:	e75c      	b.n	8010512 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 8010658:	9b08      	ldr	r3, [sp, #32]
 801065a:	eba3 0308 	sub.w	r3, r3, r8
 801065e:	b29b      	uxth	r3, r3
 8010660:	2d06      	cmp	r5, #6
 8010662:	b218      	sxth	r0, r3
 8010664:	d813      	bhi.n	801068e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 8010666:	9b07      	ldr	r3, [sp, #28]
 8010668:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 801066c:	1c6b      	adds	r3, r5, #1
 801066e:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8010672:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010676:	9b01      	ldr	r3, [sp, #4]
 8010678:	9901      	ldr	r1, [sp, #4]
 801067a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801067e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010682:	805a      	strh	r2, [r3, #2]
 8010684:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010686:	809a      	strh	r2, [r3, #4]
 8010688:	f8a3 e006 	strh.w	lr, [r3, #6]
 801068c:	e75f      	b.n	801054e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 801068e:	9c02      	ldr	r4, [sp, #8]
 8010690:	4570      	cmp	r0, lr
 8010692:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8010696:	db0d      	blt.n	80106b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 8010698:	4431      	add	r1, r6
 801069a:	9b06      	ldr	r3, [sp, #24]
 801069c:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80106a0:	b289      	uxth	r1, r1
 80106a2:	445c      	add	r4, fp
 80106a4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80106a8:	4419      	add	r1, r3
 80106aa:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 80106ae:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 80106b2:	e581      	b.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80106b4:	445c      	add	r4, fp
 80106b6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 80106ba:	e79b      	b.n	80105f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 80106bc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80106c0:	1e65      	subs	r5, r4, #1
 80106c2:	b2ad      	uxth	r5, r5
 80106c4:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80106c8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80106cc:	42b5      	cmp	r5, r6
 80106ce:	d044      	beq.n	801075a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 80106d0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80106d4:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 80106d8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80106dc:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 80106e0:	4282      	cmp	r2, r0
 80106e2:	d11f      	bne.n	8010724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 80106e4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 80106e8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80106ec:	459c      	cmp	ip, r3
 80106ee:	d119      	bne.n	8010724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 80106f0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 80106f4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80106f8:	19d8      	adds	r0, r3, r7
 80106fa:	b200      	sxth	r0, r0
 80106fc:	4288      	cmp	r0, r1
 80106fe:	d109      	bne.n	8010714 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010700:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8010704:	4413      	add	r3, r2
 8010706:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801070a:	4629      	mov	r1, r5
 801070c:	9801      	ldr	r0, [sp, #4]
 801070e:	f7ff fd23 	bl	8010158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010712:	e003      	b.n	801071c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8010714:	4411      	add	r1, r2
 8010716:	b209      	sxth	r1, r1
 8010718:	42b9      	cmp	r1, r7
 801071a:	d0f3      	beq.n	8010704 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801071c:	3d01      	subs	r5, #1
 801071e:	b2ad      	uxth	r5, r5
 8010720:	3c08      	subs	r4, #8
 8010722:	e7d3      	b.n	80106cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 8010724:	42b9      	cmp	r1, r7
 8010726:	d1f9      	bne.n	801071c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8010728:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 801072c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010730:	4299      	cmp	r1, r3
 8010732:	d1f3      	bne.n	801071c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8010734:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8010738:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801073c:	181f      	adds	r7, r3, r0
 801073e:	b23f      	sxth	r7, r7
 8010740:	42ba      	cmp	r2, r7
 8010742:	d105      	bne.n	8010750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 8010744:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8010748:	440b      	add	r3, r1
 801074a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801074e:	e7dc      	b.n	801070a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 8010750:	440a      	add	r2, r1
 8010752:	b212      	sxth	r2, r2
 8010754:	4290      	cmp	r0, r2
 8010756:	d1e1      	bne.n	801071c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8010758:	e7f6      	b.n	8010748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 801075a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 801075e:	2e07      	cmp	r6, #7
 8010760:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010764:	d812      	bhi.n	801078c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 8010766:	1c75      	adds	r5, r6, #1
 8010768:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 801076c:	9d01      	ldr	r5, [sp, #4]
 801076e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010772:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8010776:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801077a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801077e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010782:	442c      	add	r4, r5
 8010784:	8061      	strh	r1, [r4, #2]
 8010786:	80a2      	strh	r2, [r4, #4]
 8010788:	80e3      	strh	r3, [r4, #6]
 801078a:	e57f      	b.n	801028c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801078c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010790:	3e01      	subs	r6, #1
 8010792:	445c      	add	r4, fp
 8010794:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8010798:	f04f 37ff 	mov.w	r7, #4294967295
 801079c:	2500      	movs	r5, #0
 801079e:	9305      	str	r3, [sp, #20]
 80107a0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80107a4:	9302      	str	r3, [sp, #8]
 80107a6:	1e72      	subs	r2, r6, #1
 80107a8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80107ac:	9304      	str	r3, [sp, #16]
 80107ae:	4691      	mov	r9, r2
 80107b0:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 80107b4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80107b8:	bf14      	ite	ne
 80107ba:	9905      	ldrne	r1, [sp, #20]
 80107bc:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80107c0:	6818      	ldr	r0, [r3, #0]
 80107c2:	9207      	str	r2, [sp, #28]
 80107c4:	bf18      	it	ne
 80107c6:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80107ca:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80107ce:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80107d2:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80107d6:	9306      	str	r3, [sp, #24]
 80107d8:	fb18 f801 	smulbb	r8, r8, r1
 80107dc:	6859      	ldr	r1, [r3, #4]
 80107de:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80107e2:	4671      	mov	r1, lr
 80107e4:	a80c      	add	r0, sp, #48	@ 0x30
 80107e6:	f7ff fb65 	bl	800feb4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80107ea:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 80107ee:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 80107f2:	9b04      	ldr	r3, [sp, #16]
 80107f4:	9a02      	ldr	r2, [sp, #8]
 80107f6:	fb10 f001 	smulbb	r0, r0, r1
 80107fa:	fb02 8803 	mla	r8, r2, r3, r8
 80107fe:	eba0 0108 	sub.w	r1, r0, r8
 8010802:	f04f 0c08 	mov.w	ip, #8
 8010806:	fb90 f0fc 	sdiv	r0, r0, ip
 801080a:	4288      	cmp	r0, r1
 801080c:	dc20      	bgt.n	8010850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 801080e:	4551      	cmp	r1, sl
 8010810:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8010814:	da03      	bge.n	801081e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 8010816:	b1d9      	cbz	r1, 8010850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 8010818:	468a      	mov	sl, r1
 801081a:	464f      	mov	r7, r9
 801081c:	4635      	mov	r5, r6
 801081e:	f109 39ff 	add.w	r9, r9, #4294967295
 8010822:	f119 0f02 	cmn.w	r9, #2
 8010826:	d1c5      	bne.n	80107b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 8010828:	4616      	mov	r6, r2
 801082a:	3201      	adds	r2, #1
 801082c:	f1a4 0408 	sub.w	r4, r4, #8
 8010830:	d1b6      	bne.n	80107a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 8010832:	9b01      	ldr	r3, [sp, #4]
 8010834:	b2ac      	uxth	r4, r5
 8010836:	00ed      	lsls	r5, r5, #3
 8010838:	1958      	adds	r0, r3, r5
 801083a:	1c7b      	adds	r3, r7, #1
 801083c:	d10b      	bne.n	8010856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 801083e:	4601      	mov	r1, r0
 8010840:	9803      	ldr	r0, [sp, #12]
 8010842:	f7ff fb37 	bl	800feb4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010846:	4621      	mov	r1, r4
 8010848:	9801      	ldr	r0, [sp, #4]
 801084a:	f7ff fc85 	bl	8010158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801084e:	e4b3      	b.n	80101b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8010850:	464f      	mov	r7, r9
 8010852:	4635      	mov	r5, r6
 8010854:	e7ed      	b.n	8010832 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 8010856:	9b01      	ldr	r3, [sp, #4]
 8010858:	00ff      	lsls	r7, r7, #3
 801085a:	19d9      	adds	r1, r3, r7
 801085c:	f7ff fb2a 	bl	800feb4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010860:	9b03      	ldr	r3, [sp, #12]
 8010862:	cb03      	ldmia	r3!, {r0, r1}
 8010864:	445f      	add	r7, fp
 8010866:	445d      	add	r5, fp
 8010868:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 801086c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8010870:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010874:	9b03      	ldr	r3, [sp, #12]
 8010876:	6869      	ldr	r1, [r5, #4]
 8010878:	c303      	stmia	r3!, {r0, r1}
 801087a:	e7e4      	b.n	8010846 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

0801087c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801087c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010880:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8010884:	b0a1      	sub	sp, #132	@ 0x84
 8010886:	4604      	mov	r4, r0
 8010888:	4630      	mov	r0, r6
 801088a:	f7fa fa94 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801088e:	4605      	mov	r5, r0
 8010890:	b948      	cbnz	r0, 80108a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8010892:	6823      	ldr	r3, [r4, #0]
 8010894:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010898:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801089a:	4620      	mov	r0, r4
 801089c:	4798      	blx	r3
 801089e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 80108a2:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 80108a6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80108aa:	2b00      	cmp	r3, #0
 80108ac:	d149      	bne.n	8010942 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 80108ae:	4bb1      	ldr	r3, [pc, #708]	@ (8010b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 80108b0:	681b      	ldr	r3, [r3, #0]
 80108b2:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 80108b6:	1ebb      	subs	r3, r7, #2
 80108b8:	425f      	negs	r7, r3
 80108ba:	415f      	adcs	r7, r3
 80108bc:	4bae      	ldr	r3, [pc, #696]	@ (8010b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 80108be:	681b      	ldr	r3, [r3, #0]
 80108c0:	2b00      	cmp	r3, #0
 80108c2:	d040      	beq.n	8010946 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 80108c4:	4dad      	ldr	r5, [pc, #692]	@ (8010b7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 80108c6:	4628      	mov	r0, r5
 80108c8:	f7fa fa75 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80108cc:	4606      	mov	r6, r0
 80108ce:	2800      	cmp	r0, #0
 80108d0:	d139      	bne.n	8010946 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 80108d2:	4628      	mov	r0, r5
 80108d4:	f7ff f982 	bl	800fbdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80108d8:	6823      	ldr	r3, [r4, #0]
 80108da:	6829      	ldr	r1, [r5, #0]
 80108dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80108de:	686a      	ldr	r2, [r5, #4]
 80108e0:	4620      	mov	r0, r4
 80108e2:	4798      	blx	r3
 80108e4:	802e      	strh	r6, [r5, #0]
 80108e6:	806e      	strh	r6, [r5, #2]
 80108e8:	80ae      	strh	r6, [r5, #4]
 80108ea:	80ee      	strh	r6, [r5, #6]
 80108ec:	af0f      	add	r7, sp, #60	@ 0x3c
 80108ee:	4ea4      	ldr	r6, [pc, #656]	@ (8010b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 80108f0:	4638      	mov	r0, r7
 80108f2:	f7ff fbd9 	bl	80100a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80108f6:	8835      	ldrh	r5, [r6, #0]
 80108f8:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 80108fc:	462b      	mov	r3, r5
 80108fe:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8010902:	4563      	cmp	r3, ip
 8010904:	d224      	bcs.n	8010950 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8010906:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 801090a:	2907      	cmp	r1, #7
 801090c:	d816      	bhi.n	801093c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801090e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010912:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8010916:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801091a:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 801091e:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 8010922:	1c4a      	adds	r2, r1, #1
 8010924:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 8010928:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 801092c:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 8010930:	f8a2 a002 	strh.w	sl, [r2, #2]
 8010934:	f8a2 8004 	strh.w	r8, [r2, #4]
 8010938:	f8a2 e006 	strh.w	lr, [r2, #6]
 801093c:	3301      	adds	r3, #1
 801093e:	b29b      	uxth	r3, r3
 8010940:	e7df      	b.n	8010902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8010942:	2701      	movs	r7, #1
 8010944:	e7ba      	b.n	80108bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 8010946:	2f00      	cmp	r7, #0
 8010948:	d1d0      	bne.n	80108ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 801094a:	b021      	add	sp, #132	@ 0x84
 801094c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010950:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8010954:	42ab      	cmp	r3, r5
 8010956:	d90c      	bls.n	8010972 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 8010958:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801095c:	6822      	ldr	r2, [r4, #0]
 801095e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8010962:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8010964:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8010968:	4620      	mov	r0, r4
 801096a:	3501      	adds	r5, #1
 801096c:	47b8      	blx	r7
 801096e:	b2ad      	uxth	r5, r5
 8010970:	e7ee      	b.n	8010950 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8010972:	4d80      	ldr	r5, [pc, #512]	@ (8010b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8010974:	6828      	ldr	r0, [r5, #0]
 8010976:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801097a:	2b01      	cmp	r3, #1
 801097c:	f040 813b 	bne.w	8010bf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 8010980:	4a80      	ldr	r2, [pc, #512]	@ (8010b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 8010982:	8833      	ldrh	r3, [r6, #0]
 8010984:	7812      	ldrb	r2, [r2, #0]
 8010986:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 801098a:	2a01      	cmp	r2, #1
 801098c:	d014      	beq.n	80109b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 801098e:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 8010992:	32ae      	adds	r2, #174	@ 0xae
 8010994:	f04f 0900 	mov.w	r9, #0
 8010998:	4283      	cmp	r3, r0
 801099a:	f102 0208 	add.w	r2, r2, #8
 801099e:	f280 8082 	bge.w	8010aa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 80109a2:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 80109a6:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 80109aa:	4439      	add	r1, r7
 80109ac:	b209      	sxth	r1, r1
 80109ae:	4589      	cmp	r9, r1
 80109b0:	bfb8      	it	lt
 80109b2:	4689      	movlt	r9, r1
 80109b4:	3301      	adds	r3, #1
 80109b6:	e7ef      	b.n	8010998 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 80109b8:	4f73      	ldr	r7, [pc, #460]	@ (8010b88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 80109ba:	883a      	ldrh	r2, [r7, #0]
 80109bc:	4693      	mov	fp, r2
 80109be:	4283      	cmp	r3, r0
 80109c0:	da08      	bge.n	80109d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 80109c2:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 80109c6:	3301      	adds	r3, #1
 80109c8:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 80109cc:	458b      	cmp	fp, r1
 80109ce:	bfa8      	it	ge
 80109d0:	468b      	movge	fp, r1
 80109d2:	e7f4      	b.n	80109be <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 80109d4:	2300      	movs	r3, #0
 80109d6:	2a0f      	cmp	r2, #15
 80109d8:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 8010b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 80109dc:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80109e0:	bf8c      	ite	hi
 80109e2:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 80109e6:	f04f 0801 	movls.w	r8, #1
 80109ea:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80109ee:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 80109f2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80109f6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80109fa:	6828      	ldr	r0, [r5, #0]
 80109fc:	455b      	cmp	r3, fp
 80109fe:	f340 80c7 	ble.w	8010b90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8010a02:	6803      	ldr	r3, [r0, #0]
 8010a04:	f8b7 a000 	ldrh.w	sl, [r7]
 8010a08:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010a0c:	4798      	blx	r3
 8010a0e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8010a12:	682b      	ldr	r3, [r5, #0]
 8010a14:	ebaa 0000 	sub.w	r0, sl, r0
 8010a18:	b280      	uxth	r0, r0
 8010a1a:	ebac 0e08 	sub.w	lr, ip, r8
 8010a1e:	4570      	cmp	r0, lr
 8010a20:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 8010a24:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 8010a28:	dd05      	ble.n	8010a36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8010a2a:	4558      	cmp	r0, fp
 8010a2c:	dd03      	ble.n	8010a36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8010a2e:	b901      	cbnz	r1, 8010a32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010a30:	b392      	cbz	r2, 8010a98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 8010a32:	4658      	mov	r0, fp
 8010a34:	e006      	b.n	8010a44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 8010a36:	2900      	cmp	r1, #0
 8010a38:	d1fb      	bne.n	8010a32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010a3a:	2a00      	cmp	r2, #0
 8010a3c:	d1f9      	bne.n	8010a32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010a3e:	4558      	cmp	r0, fp
 8010a40:	bfb8      	it	lt
 8010a42:	4658      	movlt	r0, fp
 8010a44:	f9b9 3000 	ldrsh.w	r3, [r9]
 8010a48:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 8010a4c:	2200      	movs	r2, #0
 8010a4e:	ebac 0000 	sub.w	r0, ip, r0
 8010a52:	f8b6 a000 	ldrh.w	sl, [r6]
 8010a56:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010a5a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8010a5e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010a62:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010a66:	4553      	cmp	r3, sl
 8010a68:	ddc5      	ble.n	80109f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8010a6a:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8010a6e:	ab0d      	add	r3, sp, #52	@ 0x34
 8010a70:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010a74:	6851      	ldr	r1, [r2, #4]
 8010a76:	c303      	stmia	r3!, {r0, r1}
 8010a78:	a80d      	add	r0, sp, #52	@ 0x34
 8010a7a:	a90b      	add	r1, sp, #44	@ 0x2c
 8010a7c:	f7fa f958 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 8010a80:	a80d      	add	r0, sp, #52	@ 0x34
 8010a82:	f7fa f998 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a86:	b920      	cbnz	r0, 8010a92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 8010a88:	6823      	ldr	r3, [r4, #0]
 8010a8a:	a90d      	add	r1, sp, #52	@ 0x34
 8010a8c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010a8e:	4620      	mov	r0, r4
 8010a90:	4798      	blx	r3
 8010a92:	f10a 0a01 	add.w	sl, sl, #1
 8010a96:	e7e4      	b.n	8010a62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 8010a98:	681a      	ldr	r2, [r3, #0]
 8010a9a:	2101      	movs	r1, #1
 8010a9c:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 8010aa0:	4618      	mov	r0, r3
 8010aa2:	4790      	blx	r2
 8010aa4:	e7a7      	b.n	80109f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8010aa6:	4b39      	ldr	r3, [pc, #228]	@ (8010b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 8010aa8:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 8010b88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 8010aac:	881f      	ldrh	r7, [r3, #0]
 8010aae:	2300      	movs	r3, #0
 8010ab0:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 8010ab4:	2f0f      	cmp	r7, #15
 8010ab6:	bf8c      	ite	hi
 8010ab8:	08ff      	lsrhi	r7, r7, #3
 8010aba:	2701      	movls	r7, #1
 8010abc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010ac0:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 8010ac4:	6828      	ldr	r0, [r5, #0]
 8010ac6:	4413      	add	r3, r2
 8010ac8:	b21b      	sxth	r3, r3
 8010aca:	454b      	cmp	r3, r9
 8010acc:	da60      	bge.n	8010b90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8010ace:	6803      	ldr	r3, [r0, #0]
 8010ad0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010ad4:	4798      	blx	r3
 8010ad6:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 8010ada:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010ade:	682a      	ldr	r2, [r5, #0]
 8010ae0:	4473      	add	r3, lr
 8010ae2:	b21b      	sxth	r3, r3
 8010ae4:	eb03 0e07 	add.w	lr, r3, r7
 8010ae8:	4570      	cmp	r0, lr
 8010aea:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 8010aee:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 8010af2:	da0d      	bge.n	8010b10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8010af4:	4548      	cmp	r0, r9
 8010af6:	da0b      	bge.n	8010b10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8010af8:	f1bc 0f00 	cmp.w	ip, #0
 8010afc:	d138      	bne.n	8010b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010afe:	2900      	cmp	r1, #0
 8010b00:	d136      	bne.n	8010b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010b02:	6813      	ldr	r3, [r2, #0]
 8010b04:	2101      	movs	r1, #1
 8010b06:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8010b0a:	4610      	mov	r0, r2
 8010b0c:	4798      	blx	r3
 8010b0e:	e7d5      	b.n	8010abc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010b10:	f1bc 0f00 	cmp.w	ip, #0
 8010b14:	d12c      	bne.n	8010b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010b16:	bb59      	cbnz	r1, 8010b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010b18:	4548      	cmp	r0, r9
 8010b1a:	bfa8      	it	ge
 8010b1c:	4648      	movge	r0, r9
 8010b1e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8010b22:	f8b6 a000 	ldrh.w	sl, [r6]
 8010b26:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010b2a:	2100      	movs	r1, #0
 8010b2c:	1ac0      	subs	r0, r0, r3
 8010b2e:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8010b32:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8010b36:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8010b3a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010b3e:	4553      	cmp	r3, sl
 8010b40:	ddbc      	ble.n	8010abc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010b42:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8010b46:	ab0d      	add	r3, sp, #52	@ 0x34
 8010b48:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010b4c:	6851      	ldr	r1, [r2, #4]
 8010b4e:	c303      	stmia	r3!, {r0, r1}
 8010b50:	a80d      	add	r0, sp, #52	@ 0x34
 8010b52:	a90b      	add	r1, sp, #44	@ 0x2c
 8010b54:	f7fa f8ec 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 8010b58:	a80d      	add	r0, sp, #52	@ 0x34
 8010b5a:	f7fa f92c 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b5e:	b920      	cbnz	r0, 8010b6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 8010b60:	6823      	ldr	r3, [r4, #0]
 8010b62:	a90d      	add	r1, sp, #52	@ 0x34
 8010b64:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010b66:	4620      	mov	r0, r4
 8010b68:	4798      	blx	r3
 8010b6a:	f10a 0a01 	add.w	sl, sl, #1
 8010b6e:	e7e4      	b.n	8010b3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 8010b70:	4648      	mov	r0, r9
 8010b72:	e7d4      	b.n	8010b1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 8010b74:	20014040 	.word	0x20014040
 8010b78:	20014080 	.word	0x20014080
 8010b7c:	2001408c 	.word	0x2001408c
 8010b80:	20000194 	.word	0x20000194
 8010b84:	20014036 	.word	0x20014036
 8010b88:	20014032 	.word	0x20014032
 8010b8c:	20014034 	.word	0x20014034
 8010b90:	6828      	ldr	r0, [r5, #0]
 8010b92:	6803      	ldr	r3, [r0, #0]
 8010b94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010b96:	4798      	blx	r3
 8010b98:	4ba5      	ldr	r3, [pc, #660]	@ (8010e30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 8010b9a:	781b      	ldrb	r3, [r3, #0]
 8010b9c:	2b00      	cmp	r3, #0
 8010b9e:	f43f aed4 	beq.w	801094a <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010ba2:	2300      	movs	r3, #0
 8010ba4:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8010ba8:	4ba2      	ldr	r3, [pc, #648]	@ (8010e34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 8010baa:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 8010bae:	881b      	ldrh	r3, [r3, #0]
 8010bb0:	a80f      	add	r0, sp, #60	@ 0x3c
 8010bb2:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 8010bb6:	42b3      	cmp	r3, r6
 8010bb8:	f4bf aec7 	bcs.w	801094a <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010bbc:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8010bc0:	2907      	cmp	r1, #7
 8010bc2:	d815      	bhi.n	8010bf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 8010bc4:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010bc8:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8010bcc:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8010bd0:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8010bd4:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8010bd8:	1c4a      	adds	r2, r1, #1
 8010bda:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8010bde:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 8010be2:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 8010be6:	f8a2 e002 	strh.w	lr, [r2, #2]
 8010bea:	f8a2 c004 	strh.w	ip, [r2, #4]
 8010bee:	80d7      	strh	r7, [r2, #6]
 8010bf0:	3301      	adds	r3, #1
 8010bf2:	b29b      	uxth	r3, r3
 8010bf4:	e7df      	b.n	8010bb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8010bf6:	2b02      	cmp	r3, #2
 8010bf8:	f040 80d1 	bne.w	8010d9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8010bfc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010c00:	9308      	str	r3, [sp, #32]
 8010c02:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 8010c06:	9307      	str	r3, [sp, #28]
 8010c08:	6803      	ldr	r3, [r0, #0]
 8010c0a:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 8010c0e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010c12:	4798      	blx	r3
 8010c14:	4b88      	ldr	r3, [pc, #544]	@ (8010e38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 8010c16:	881b      	ldrh	r3, [r3, #0]
 8010c18:	9302      	str	r3, [sp, #8]
 8010c1a:	4b88      	ldr	r3, [pc, #544]	@ (8010e3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 8010c1c:	881e      	ldrh	r6, [r3, #0]
 8010c1e:	4b88      	ldr	r3, [pc, #544]	@ (8010e40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010c20:	781b      	ldrb	r3, [r3, #0]
 8010c22:	f10b 37ff 	add.w	r7, fp, #4294967295
 8010c26:	2b01      	cmp	r3, #1
 8010c28:	bf1c      	itt	ne
 8010c2a:	9b02      	ldrne	r3, [sp, #8]
 8010c2c:	9602      	strne	r6, [sp, #8]
 8010c2e:	b2bf      	uxth	r7, r7
 8010c30:	fa0f f887 	sxth.w	r8, r7
 8010c34:	4682      	mov	sl, r0
 8010c36:	f04f 0000 	mov.w	r0, #0
 8010c3a:	bf18      	it	ne
 8010c3c:	461e      	movne	r6, r3
 8010c3e:	f7ef ffef 	bl	8000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010c42:	fb96 fbfb 	sdiv	fp, r6, fp
 8010c46:	fb0b f808 	mul.w	r8, fp, r8
 8010c4a:	45c2      	cmp	sl, r8
 8010c4c:	da0c      	bge.n	8010c68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 8010c4e:	6828      	ldr	r0, [r5, #0]
 8010c50:	6803      	ldr	r3, [r0, #0]
 8010c52:	210a      	movs	r1, #10
 8010c54:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010c58:	4798      	blx	r3
 8010c5a:	6828      	ldr	r0, [r5, #0]
 8010c5c:	6803      	ldr	r3, [r0, #0]
 8010c5e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010c62:	4798      	blx	r3
 8010c64:	4682      	mov	sl, r0
 8010c66:	e7f0      	b.n	8010c4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 8010c68:	2000      	movs	r0, #0
 8010c6a:	f7f0 f803 	bl	8000c74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010c6e:	fa1f f38b 	uxth.w	r3, fp
 8010c72:	fb17 f703 	smulbb	r7, r7, r3
 8010c76:	9304      	str	r3, [sp, #16]
 8010c78:	b2bb      	uxth	r3, r7
 8010c7a:	9305      	str	r3, [sp, #20]
 8010c7c:	f04f 0800 	mov.w	r8, #0
 8010c80:	0973      	lsrs	r3, r6, #5
 8010c82:	4f70      	ldr	r7, [pc, #448]	@ (8010e44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 8010c84:	9306      	str	r3, [sp, #24]
 8010c86:	4645      	mov	r5, r8
 8010c88:	42b5      	cmp	r5, r6
 8010c8a:	d085      	beq.n	8010b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010c8c:	6838      	ldr	r0, [r7, #0]
 8010c8e:	6803      	ldr	r3, [r0, #0]
 8010c90:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010c94:	4798      	blx	r3
 8010c96:	4582      	cmp	sl, r0
 8010c98:	4681      	mov	r9, r0
 8010c9a:	d907      	bls.n	8010cac <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 8010c9c:	f1b8 0f00 	cmp.w	r8, #0
 8010ca0:	d007      	beq.n	8010cb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 8010ca2:	6838      	ldr	r0, [r7, #0]
 8010ca4:	6803      	ldr	r3, [r0, #0]
 8010ca6:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8010caa:	e774      	b.n	8010b96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8010cac:	f1b8 0f00 	cmp.w	r8, #0
 8010cb0:	d003      	beq.n	8010cba <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 8010cb2:	454d      	cmp	r5, r9
 8010cb4:	d3f5      	bcc.n	8010ca2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 8010cb6:	f04f 0801 	mov.w	r8, #1
 8010cba:	9a04      	ldr	r2, [sp, #16]
 8010cbc:	fb95 f3fb 	sdiv	r3, r5, fp
 8010cc0:	9303      	str	r3, [sp, #12]
 8010cc2:	3301      	adds	r3, #1
 8010cc4:	fb13 f302 	smulbb	r3, r3, r2
 8010cc8:	b299      	uxth	r1, r3
 8010cca:	f1b8 0f00 	cmp.w	r8, #0
 8010cce:	d04e      	beq.n	8010d6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 8010cd0:	eb09 030b 	add.w	r3, r9, fp
 8010cd4:	42b3      	cmp	r3, r6
 8010cd6:	bfa8      	it	ge
 8010cd8:	4633      	movge	r3, r6
 8010cda:	9807      	ldr	r0, [sp, #28]
 8010cdc:	b29b      	uxth	r3, r3
 8010cde:	428b      	cmp	r3, r1
 8010ce0:	bf94      	ite	ls
 8010ce2:	ebc5 0203 	rsbls	r2, r5, r3
 8010ce6:	ebc5 0201 	rsbhi	r2, r5, r1
 8010cea:	4282      	cmp	r2, r0
 8010cec:	bfa8      	it	ge
 8010cee:	4602      	movge	r2, r0
 8010cf0:	9808      	ldr	r0, [sp, #32]
 8010cf2:	fa1f fa82 	uxth.w	sl, r2
 8010cf6:	4582      	cmp	sl, r0
 8010cf8:	d205      	bcs.n	8010d06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8010cfa:	fa15 f082 	uxtah	r0, r5, r2
 8010cfe:	4286      	cmp	r6, r0
 8010d00:	d001      	beq.n	8010d06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8010d02:	4299      	cmp	r1, r3
 8010d04:	d240      	bcs.n	8010d88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 8010d06:	2001      	movs	r0, #1
 8010d08:	9209      	str	r2, [sp, #36]	@ 0x24
 8010d0a:	f7ef ff89 	bl	8000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010d0e:	6838      	ldr	r0, [r7, #0]
 8010d10:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8010d14:	6803      	ldr	r3, [r0, #0]
 8010d16:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010d1a:	4798      	blx	r3
 8010d1c:	4b48      	ldr	r3, [pc, #288]	@ (8010e40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010d1e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010d20:	781b      	ldrb	r3, [r3, #0]
 8010d22:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8010d26:	2b01      	cmp	r3, #1
 8010d28:	b212      	sxth	r2, r2
 8010d2a:	f04f 0000 	mov.w	r0, #0
 8010d2e:	d122      	bne.n	8010d76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 8010d30:	1b73      	subs	r3, r6, r5
 8010d32:	eba3 030a 	sub.w	r3, r3, sl
 8010d36:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8010d3a:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 8010d3e:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8010d42:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 8010d46:	6823      	ldr	r3, [r4, #0]
 8010d48:	a90d      	add	r1, sp, #52	@ 0x34
 8010d4a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010d4c:	4620      	mov	r0, r4
 8010d4e:	4798      	blx	r3
 8010d50:	6838      	ldr	r0, [r7, #0]
 8010d52:	9b03      	ldr	r3, [sp, #12]
 8010d54:	4259      	negs	r1, r3
 8010d56:	6803      	ldr	r3, [r0, #0]
 8010d58:	b209      	sxth	r1, r1
 8010d5a:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010d5e:	4798      	blx	r3
 8010d60:	4455      	add	r5, sl
 8010d62:	2001      	movs	r0, #1
 8010d64:	b2ad      	uxth	r5, r5
 8010d66:	f7ef ff85 	bl	8000c74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010d6a:	46ca      	mov	sl, r9
 8010d6c:	e78c      	b.n	8010c88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 8010d6e:	9b05      	ldr	r3, [sp, #20]
 8010d70:	eba9 0303 	sub.w	r3, r9, r3
 8010d74:	e7b1      	b.n	8010cda <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8010d76:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8010d7a:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 8010d7e:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 8010d82:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8010d86:	e7de      	b.n	8010d46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 8010d88:	6838      	ldr	r0, [r7, #0]
 8010d8a:	6803      	ldr	r3, [r0, #0]
 8010d8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010d8e:	4798      	blx	r3
 8010d90:	6838      	ldr	r0, [r7, #0]
 8010d92:	9906      	ldr	r1, [sp, #24]
 8010d94:	6803      	ldr	r3, [r0, #0]
 8010d96:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010d9a:	4798      	blx	r3
 8010d9c:	e7e5      	b.n	8010d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 8010d9e:	2b03      	cmp	r3, #3
 8010da0:	f040 8130 	bne.w	8011004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 8010da4:	4b26      	ldr	r3, [pc, #152]	@ (8010e40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010da6:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 8010daa:	781b      	ldrb	r3, [r3, #0]
 8010dac:	2b01      	cmp	r3, #1
 8010dae:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8010db2:	f000 8093 	beq.w	8010edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010db6:	8832      	ldrh	r2, [r6, #0]
 8010db8:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8010dbc:	3201      	adds	r2, #1
 8010dbe:	b292      	uxth	r2, r2
 8010dc0:	2900      	cmp	r1, #0
 8010dc2:	f43f aee9 	beq.w	8010b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010dc6:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 8010dca:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 8010dce:	441d      	add	r5, r3
 8010dd0:	b22d      	sxth	r5, r5
 8010dd2:	4694      	mov	ip, r2
 8010dd4:	f04f 0800 	mov.w	r8, #0
 8010dd8:	fa1f f38c 	uxth.w	r3, ip
 8010ddc:	4299      	cmp	r1, r3
 8010dde:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8010de2:	f240 80ba 	bls.w	8010f5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 8010de6:	4427      	add	r7, r4
 8010de8:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8010dec:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8010df0:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8010df4:	4283      	cmp	r3, r0
 8010df6:	f340 809c 	ble.w	8010f32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 8010dfa:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 8010dfe:	4405      	add	r5, r0
 8010e00:	b22d      	sxth	r5, r5
 8010e02:	429d      	cmp	r5, r3
 8010e04:	bfa8      	it	ge
 8010e06:	461d      	movge	r5, r3
 8010e08:	46e0      	mov	r8, ip
 8010e0a:	f10c 0c01 	add.w	ip, ip, #1
 8010e0e:	e7e3      	b.n	8010dd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 8010e10:	d10a      	bne.n	8010e28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 8010e12:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 8010e16:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8010e1a:	4562      	cmp	r2, ip
 8010e1c:	bfb8      	it	lt
 8010e1e:	4662      	movlt	r2, ip
 8010e20:	4288      	cmp	r0, r1
 8010e22:	bfb8      	it	lt
 8010e24:	4698      	movlt	r8, r3
 8010e26:	e082      	b.n	8010f2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010e28:	428a      	cmp	r2, r1
 8010e2a:	bfb8      	it	lt
 8010e2c:	460a      	movlt	r2, r1
 8010e2e:	e07e      	b.n	8010f2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010e30:	2001403c 	.word	0x2001403c
 8010e34:	20000194 	.word	0x20000194
 8010e38:	20014034 	.word	0x20014034
 8010e3c:	20014032 	.word	0x20014032
 8010e40:	20014036 	.word	0x20014036
 8010e44:	20014040 	.word	0x20014040
 8010e48:	19e1      	adds	r1, r4, r7
 8010e4a:	ab0d      	add	r3, sp, #52	@ 0x34
 8010e4c:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8010e50:	6849      	ldr	r1, [r1, #4]
 8010e52:	c303      	stmia	r3!, {r0, r1}
 8010e54:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8010e58:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010e5c:	454b      	cmp	r3, r9
 8010e5e:	bfb8      	it	lt
 8010e60:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 8010e64:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8010e68:	440b      	add	r3, r1
 8010e6a:	1a9b      	subs	r3, r3, r2
 8010e6c:	a80d      	add	r0, sp, #52	@ 0x34
 8010e6e:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010e72:	f7fe fecd 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010e76:	a80d      	add	r0, sp, #52	@ 0x34
 8010e78:	f7f9 ff9d 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010e7c:	bb70      	cbnz	r0, 8010edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010e7e:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 8010e82:	6828      	ldr	r0, [r5, #0]
 8010e84:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8010e88:	f8d0 e000 	ldr.w	lr, [r0]
 8010e8c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8010e90:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010e94:	45cc      	cmp	ip, r9
 8010e96:	bfd4      	ite	le
 8010e98:	fa1f fc8c 	uxthle.w	ip, ip
 8010e9c:	fa1f fc89 	uxthgt.w	ip, r9
 8010ea0:	f8cd c000 	str.w	ip, [sp]
 8010ea4:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 8010ea8:	47d8      	blx	fp
 8010eaa:	4683      	mov	fp, r0
 8010eac:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010eb0:	a80d      	add	r0, sp, #52	@ 0x34
 8010eb2:	f7fe fe93 	bl	800fbdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010eb6:	6823      	ldr	r3, [r4, #0]
 8010eb8:	4427      	add	r7, r4
 8010eba:	4620      	mov	r0, r4
 8010ebc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010ebe:	a90d      	add	r1, sp, #52	@ 0x34
 8010ec0:	4798      	blx	r3
 8010ec2:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 8010ec6:	eba0 000b 	sub.w	r0, r0, fp
 8010eca:	b200      	sxth	r0, r0
 8010ecc:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 8010ed0:	b920      	cbnz	r0, 8010edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010ed2:	fa1f f188 	uxth.w	r1, r8
 8010ed6:	4650      	mov	r0, sl
 8010ed8:	f7ff f93e 	bl	8010158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010edc:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8010ee0:	f1bb 0f00 	cmp.w	fp, #0
 8010ee4:	f43f ae58 	beq.w	8010b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010ee8:	8833      	ldrh	r3, [r6, #0]
 8010eea:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8010eee:	3301      	adds	r3, #1
 8010ef0:	b29b      	uxth	r3, r3
 8010ef2:	f04f 0800 	mov.w	r8, #0
 8010ef6:	b299      	uxth	r1, r3
 8010ef8:	458b      	cmp	fp, r1
 8010efa:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8010efe:	d9a3      	bls.n	8010e48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 8010f00:	4427      	add	r7, r4
 8010f02:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8010f06:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 8010f0a:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 8010f0e:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8010f12:	4408      	add	r0, r1
 8010f14:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8010f18:	4461      	add	r1, ip
 8010f1a:	b200      	sxth	r0, r0
 8010f1c:	b209      	sxth	r1, r1
 8010f1e:	4288      	cmp	r0, r1
 8010f20:	f6bf af76 	bge.w	8010e10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 8010f24:	4584      	cmp	ip, r0
 8010f26:	4662      	mov	r2, ip
 8010f28:	4698      	mov	r8, r3
 8010f2a:	bfb8      	it	lt
 8010f2c:	4602      	movlt	r2, r0
 8010f2e:	3301      	adds	r3, #1
 8010f30:	e7e1      	b.n	8010ef6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 8010f32:	d10e      	bne.n	8010f52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 8010f34:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8010f38:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8010f3c:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8010f40:	4473      	add	r3, lr
 8010f42:	b21b      	sxth	r3, r3
 8010f44:	429d      	cmp	r5, r3
 8010f46:	bfa8      	it	ge
 8010f48:	461d      	movge	r5, r3
 8010f4a:	4287      	cmp	r7, r0
 8010f4c:	bfb8      	it	lt
 8010f4e:	46e0      	movlt	r8, ip
 8010f50:	e75b      	b.n	8010e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8010f52:	4285      	cmp	r5, r0
 8010f54:	bfa8      	it	ge
 8010f56:	4605      	movge	r5, r0
 8010f58:	e757      	b.n	8010e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8010f5a:	eb0a 0007 	add.w	r0, sl, r7
 8010f5e:	4427      	add	r7, r4
 8010f60:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8010f64:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8010f68:	45cb      	cmp	fp, r9
 8010f6a:	bfbe      	ittt	lt
 8010f6c:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 8010f70:	445d      	addlt	r5, fp
 8010f72:	b22d      	sxthlt	r5, r5
 8010f74:	f7f9 ff1f 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010f78:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8010f7c:	2800      	cmp	r0, #0
 8010f7e:	f47f af1f 	bne.w	8010dc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 8010f82:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8010f86:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010f8a:	482b      	ldr	r0, [pc, #172]	@ (8011038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 8010f8c:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8010f90:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8010f94:	6800      	ldr	r0, [r0, #0]
 8010f96:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 8010f9a:	1aad      	subs	r5, r5, r2
 8010f9c:	454d      	cmp	r5, r9
 8010f9e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8010fa2:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010fa6:	bfa8      	it	ge
 8010fa8:	464d      	movge	r5, r9
 8010faa:	f8d0 c000 	ldr.w	ip, [r0]
 8010fae:	b2ad      	uxth	r5, r5
 8010fb0:	fa1f fb8b 	uxth.w	fp, fp
 8010fb4:	455d      	cmp	r5, fp
 8010fb6:	bf94      	ite	ls
 8010fb8:	9500      	strls	r5, [sp, #0]
 8010fba:	f8cd b000 	strhi.w	fp, [sp]
 8010fbe:	b292      	uxth	r2, r2
 8010fc0:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 8010fc4:	b29b      	uxth	r3, r3
 8010fc6:	b289      	uxth	r1, r1
 8010fc8:	47a8      	blx	r5
 8010fca:	6823      	ldr	r3, [r4, #0]
 8010fcc:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010fd0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010fd2:	a90d      	add	r1, sp, #52	@ 0x34
 8010fd4:	4620      	mov	r0, r4
 8010fd6:	4798      	blx	r3
 8010fd8:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8010fdc:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8010fe0:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8010fe4:	1a5b      	subs	r3, r3, r1
 8010fe6:	440a      	add	r2, r1
 8010fe8:	b21b      	sxth	r3, r3
 8010fea:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8010fee:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8010ff2:	2b00      	cmp	r3, #0
 8010ff4:	f47f aedf 	bne.w	8010db6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8010ff8:	fa1f f188 	uxth.w	r1, r8
 8010ffc:	4650      	mov	r0, sl
 8010ffe:	f7ff f8ab 	bl	8010158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011002:	e6d8      	b.n	8010db6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8011004:	8835      	ldrh	r5, [r6, #0]
 8011006:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801100a:	42ab      	cmp	r3, r5
 801100c:	f67f adc4 	bls.w	8010b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8011010:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011014:	ab0d      	add	r3, sp, #52	@ 0x34
 8011016:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801101a:	6851      	ldr	r1, [r2, #4]
 801101c:	c303      	stmia	r3!, {r0, r1}
 801101e:	a80d      	add	r0, sp, #52	@ 0x34
 8011020:	f7f9 fec9 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011024:	b920      	cbnz	r0, 8011030 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 8011026:	6823      	ldr	r3, [r4, #0]
 8011028:	a90d      	add	r1, sp, #52	@ 0x34
 801102a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801102c:	4620      	mov	r0, r4
 801102e:	4798      	blx	r3
 8011030:	3501      	adds	r5, #1
 8011032:	b2ad      	uxth	r5, r5
 8011034:	e7e7      	b.n	8011006 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 8011036:	bf00      	nop
 8011038:	20014040 	.word	0x20014040

0801103c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801103c:	4b03      	ldr	r3, [pc, #12]	@ (801104c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801103e:	2200      	movs	r2, #0
 8011040:	801a      	strh	r2, [r3, #0]
 8011042:	805a      	strh	r2, [r3, #2]
 8011044:	809a      	strh	r2, [r3, #4]
 8011046:	80da      	strh	r2, [r3, #6]
 8011048:	4770      	bx	lr
 801104a:	bf00      	nop
 801104c:	2001408c 	.word	0x2001408c

08011050 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011054:	4606      	mov	r6, r0
 8011056:	b09d      	sub	sp, #116	@ 0x74
 8011058:	a803      	add	r0, sp, #12
 801105a:	4614      	mov	r4, r2
 801105c:	468a      	mov	sl, r1
 801105e:	461d      	mov	r5, r3
 8011060:	f001 f9b0 	bl	80123c4 <_ZN8touchgfx12TextProviderC1Ev>
 8011064:	6833      	ldr	r3, [r6, #0]
 8011066:	4630      	mov	r0, r6
 8011068:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801106a:	4798      	blx	r3
 801106c:	6833      	ldr	r3, [r6, #0]
 801106e:	4607      	mov	r7, r0
 8011070:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011072:	4630      	mov	r0, r6
 8011074:	4798      	blx	r3
 8011076:	462a      	mov	r2, r5
 8011078:	9000      	str	r0, [sp, #0]
 801107a:	4621      	mov	r1, r4
 801107c:	463b      	mov	r3, r7
 801107e:	a803      	add	r0, sp, #12
 8011080:	f001 f9f3 	bl	801246a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011084:	2500      	movs	r5, #0
 8011086:	462c      	mov	r4, r5
 8011088:	46a9      	mov	r9, r5
 801108a:	46a8      	mov	r8, r5
 801108c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8011090:	2300      	movs	r3, #0
 8011092:	9302      	str	r3, [sp, #8]
 8011094:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8011098:	429c      	cmp	r4, r3
 801109a:	d002      	beq.n	80110a2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801109c:	455c      	cmp	r4, fp
 801109e:	bf18      	it	ne
 80110a0:	4625      	movne	r5, r4
 80110a2:	ab02      	add	r3, sp, #8
 80110a4:	4632      	mov	r2, r6
 80110a6:	4651      	mov	r1, sl
 80110a8:	a803      	add	r0, sp, #12
 80110aa:	f001 fcf9 	bl	8012aa0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80110ae:	4604      	mov	r4, r0
 80110b0:	b108      	cbz	r0, 80110b6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80110b2:	280a      	cmp	r0, #10
 80110b4:	d10a      	bne.n	80110cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80110b6:	45c1      	cmp	r9, r8
 80110b8:	bf38      	it	cc
 80110ba:	46c1      	movcc	r9, r8
 80110bc:	f04f 0800 	mov.w	r8, #0
 80110c0:	2c00      	cmp	r4, #0
 80110c2:	d1e5      	bne.n	8011090 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80110c4:	4648      	mov	r0, r9
 80110c6:	b01d      	add	sp, #116	@ 0x74
 80110c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110cc:	9a02      	ldr	r2, [sp, #8]
 80110ce:	2a00      	cmp	r2, #0
 80110d0:	d0de      	beq.n	8011090 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80110d2:	7b57      	ldrb	r7, [r2, #13]
 80110d4:	6833      	ldr	r3, [r6, #0]
 80110d6:	8894      	ldrh	r4, [r2, #4]
 80110d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80110da:	007f      	lsls	r7, r7, #1
 80110dc:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 80110e0:	7a97      	ldrb	r7, [r2, #10]
 80110e2:	4629      	mov	r1, r5
 80110e4:	4307      	orrs	r7, r0
 80110e6:	4630      	mov	r0, r6
 80110e8:	4798      	blx	r3
 80110ea:	4438      	add	r0, r7
 80110ec:	4480      	add	r8, r0
 80110ee:	fa1f f888 	uxth.w	r8, r8
 80110f2:	e7e5      	b.n	80110c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080110f4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80110f4:	b508      	push	{r3, lr}
 80110f6:	6803      	ldr	r3, [r0, #0]
 80110f8:	68db      	ldr	r3, [r3, #12]
 80110fa:	4798      	blx	r3
 80110fc:	b128      	cbz	r0, 801110a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80110fe:	7b43      	ldrb	r3, [r0, #13]
 8011100:	7a80      	ldrb	r0, [r0, #10]
 8011102:	005b      	lsls	r3, r3, #1
 8011104:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011108:	4318      	orrs	r0, r3
 801110a:	bd08      	pop	{r3, pc}

0801110c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801110c:	b40e      	push	{r1, r2, r3}
 801110e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011110:	b09e      	sub	sp, #120	@ 0x78
 8011112:	ab23      	add	r3, sp, #140	@ 0x8c
 8011114:	4605      	mov	r5, r0
 8011116:	f853 4b04 	ldr.w	r4, [r3], #4
 801111a:	9303      	str	r3, [sp, #12]
 801111c:	a805      	add	r0, sp, #20
 801111e:	f001 f951 	bl	80123c4 <_ZN8touchgfx12TextProviderC1Ev>
 8011122:	682b      	ldr	r3, [r5, #0]
 8011124:	4628      	mov	r0, r5
 8011126:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011128:	4798      	blx	r3
 801112a:	682b      	ldr	r3, [r5, #0]
 801112c:	4606      	mov	r6, r0
 801112e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011130:	4628      	mov	r0, r5
 8011132:	4798      	blx	r3
 8011134:	4633      	mov	r3, r6
 8011136:	ae1e      	add	r6, sp, #120	@ 0x78
 8011138:	4621      	mov	r1, r4
 801113a:	9000      	str	r0, [sp, #0]
 801113c:	9a03      	ldr	r2, [sp, #12]
 801113e:	2400      	movs	r4, #0
 8011140:	a805      	add	r0, sp, #20
 8011142:	f001 f992 	bl	801246a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011146:	f846 4d68 	str.w	r4, [r6, #-104]!
 801114a:	462a      	mov	r2, r5
 801114c:	4633      	mov	r3, r6
 801114e:	4621      	mov	r1, r4
 8011150:	a805      	add	r0, sp, #20
 8011152:	f001 fca5 	bl	8012aa0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011156:	b1f0      	cbz	r0, 8011196 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011158:	280a      	cmp	r0, #10
 801115a:	d018      	beq.n	801118e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801115c:	9f04      	ldr	r7, [sp, #16]
 801115e:	b1b7      	cbz	r7, 801118e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011160:	7b78      	ldrb	r0, [r7, #13]
 8011162:	7a3b      	ldrb	r3, [r7, #8]
 8011164:	88ea      	ldrh	r2, [r5, #6]
 8011166:	00c1      	lsls	r1, r0, #3
 8011168:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801116c:	4319      	orrs	r1, r3
 801116e:	0643      	lsls	r3, r0, #25
 8011170:	bf44      	itt	mi
 8011172:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8011176:	b219      	sxthmi	r1, r3
 8011178:	0100      	lsls	r0, r0, #4
 801117a:	79fb      	ldrb	r3, [r7, #7]
 801117c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8011180:	4303      	orrs	r3, r0
 8011182:	4413      	add	r3, r2
 8011184:	1a5b      	subs	r3, r3, r1
 8011186:	b21b      	sxth	r3, r3
 8011188:	429c      	cmp	r4, r3
 801118a:	bfb8      	it	lt
 801118c:	461c      	movlt	r4, r3
 801118e:	4633      	mov	r3, r6
 8011190:	462a      	mov	r2, r5
 8011192:	2100      	movs	r1, #0
 8011194:	e7dc      	b.n	8011150 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011196:	b2a0      	uxth	r0, r4
 8011198:	b01e      	add	sp, #120	@ 0x78
 801119a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801119e:	b003      	add	sp, #12
 80111a0:	4770      	bx	lr

080111a2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80111a2:	7a43      	ldrb	r3, [r0, #9]
 80111a4:	8880      	ldrh	r0, [r0, #4]
 80111a6:	4418      	add	r0, r3
 80111a8:	b280      	uxth	r0, r0
 80111aa:	4770      	bx	lr

080111ac <_ZNK8touchgfx4Font13getFontHeightEv>:
 80111ac:	6803      	ldr	r3, [r0, #0]
 80111ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80111b0:	4718      	bx	r3

080111b2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80111b2:	b40e      	push	{r1, r2, r3}
 80111b4:	b570      	push	{r4, r5, r6, lr}
 80111b6:	b09d      	sub	sp, #116	@ 0x74
 80111b8:	ab21      	add	r3, sp, #132	@ 0x84
 80111ba:	4604      	mov	r4, r0
 80111bc:	f853 5b04 	ldr.w	r5, [r3], #4
 80111c0:	9302      	str	r3, [sp, #8]
 80111c2:	a803      	add	r0, sp, #12
 80111c4:	f001 f8fe 	bl	80123c4 <_ZN8touchgfx12TextProviderC1Ev>
 80111c8:	6823      	ldr	r3, [r4, #0]
 80111ca:	4620      	mov	r0, r4
 80111cc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80111ce:	4798      	blx	r3
 80111d0:	6823      	ldr	r3, [r4, #0]
 80111d2:	4606      	mov	r6, r0
 80111d4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80111d6:	4620      	mov	r0, r4
 80111d8:	4798      	blx	r3
 80111da:	4633      	mov	r3, r6
 80111dc:	9000      	str	r0, [sp, #0]
 80111de:	9a02      	ldr	r2, [sp, #8]
 80111e0:	4629      	mov	r1, r5
 80111e2:	a803      	add	r0, sp, #12
 80111e4:	f001 f941 	bl	801246a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80111e8:	a803      	add	r0, sp, #12
 80111ea:	f001 fcdb 	bl	8012ba4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80111ee:	2401      	movs	r4, #1
 80111f0:	b2a3      	uxth	r3, r4
 80111f2:	b140      	cbz	r0, 8011206 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80111f4:	280a      	cmp	r0, #10
 80111f6:	bf08      	it	eq
 80111f8:	3301      	addeq	r3, #1
 80111fa:	a803      	add	r0, sp, #12
 80111fc:	bf08      	it	eq
 80111fe:	b21c      	sxtheq	r4, r3
 8011200:	f001 fcd0 	bl	8012ba4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011204:	e7f4      	b.n	80111f0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011206:	4618      	mov	r0, r3
 8011208:	b01d      	add	sp, #116	@ 0x74
 801120a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801120e:	b003      	add	sp, #12
 8011210:	4770      	bx	lr

08011212 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011212:	b40e      	push	{r1, r2, r3}
 8011214:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011216:	b09e      	sub	sp, #120	@ 0x78
 8011218:	ab23      	add	r3, sp, #140	@ 0x8c
 801121a:	4604      	mov	r4, r0
 801121c:	f853 5b04 	ldr.w	r5, [r3], #4
 8011220:	9303      	str	r3, [sp, #12]
 8011222:	a805      	add	r0, sp, #20
 8011224:	f001 f8ce 	bl	80123c4 <_ZN8touchgfx12TextProviderC1Ev>
 8011228:	6823      	ldr	r3, [r4, #0]
 801122a:	4620      	mov	r0, r4
 801122c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801122e:	4798      	blx	r3
 8011230:	6823      	ldr	r3, [r4, #0]
 8011232:	4606      	mov	r6, r0
 8011234:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011236:	4620      	mov	r0, r4
 8011238:	4798      	blx	r3
 801123a:	4633      	mov	r3, r6
 801123c:	4629      	mov	r1, r5
 801123e:	9000      	str	r0, [sp, #0]
 8011240:	9a03      	ldr	r2, [sp, #12]
 8011242:	a805      	add	r0, sp, #20
 8011244:	ad1e      	add	r5, sp, #120	@ 0x78
 8011246:	f001 f910 	bl	801246a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801124a:	2100      	movs	r1, #0
 801124c:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011250:	4622      	mov	r2, r4
 8011252:	462b      	mov	r3, r5
 8011254:	a805      	add	r0, sp, #20
 8011256:	f001 fc23 	bl	8012aa0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801125a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801125e:	b1d8      	cbz	r0, 8011298 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8011260:	280a      	cmp	r0, #10
 8011262:	d012      	beq.n	801128a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011264:	9804      	ldr	r0, [sp, #16]
 8011266:	b180      	cbz	r0, 801128a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011268:	7b47      	ldrb	r7, [r0, #13]
 801126a:	88e2      	ldrh	r2, [r4, #6]
 801126c:	00fb      	lsls	r3, r7, #3
 801126e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011272:	7a03      	ldrb	r3, [r0, #8]
 8011274:	430b      	orrs	r3, r1
 8011276:	0679      	lsls	r1, r7, #25
 8011278:	bf44      	itt	mi
 801127a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801127e:	b21b      	sxthmi	r3, r3
 8011280:	1ad3      	subs	r3, r2, r3
 8011282:	b21b      	sxth	r3, r3
 8011284:	429e      	cmp	r6, r3
 8011286:	bfa8      	it	ge
 8011288:	461e      	movge	r6, r3
 801128a:	462b      	mov	r3, r5
 801128c:	4622      	mov	r2, r4
 801128e:	2100      	movs	r1, #0
 8011290:	a805      	add	r0, sp, #20
 8011292:	f001 fc05 	bl	8012aa0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011296:	e7e2      	b.n	801125e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8011298:	4630      	mov	r0, r6
 801129a:	b01e      	add	sp, #120	@ 0x78
 801129c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80112a0:	b003      	add	sp, #12
 80112a2:	4770      	bx	lr

080112a4 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80112a4:	b513      	push	{r0, r1, r4, lr}
 80112a6:	6803      	ldr	r3, [r0, #0]
 80112a8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80112ac:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80112b0:	f8ad 1004 	strh.w	r1, [sp, #4]
 80112b4:	2400      	movs	r4, #0
 80112b6:	9400      	str	r4, [sp, #0]
 80112b8:	f8ad 2006 	strh.w	r2, [sp, #6]
 80112bc:	691b      	ldr	r3, [r3, #16]
 80112be:	4669      	mov	r1, sp
 80112c0:	4798      	blx	r3
 80112c2:	b002      	add	sp, #8
 80112c4:	bd10      	pop	{r4, pc}

080112c6 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80112c6:	b538      	push	{r3, r4, r5, lr}
 80112c8:	680b      	ldr	r3, [r1, #0]
 80112ca:	460c      	mov	r4, r1
 80112cc:	68db      	ldr	r3, [r3, #12]
 80112ce:	4605      	mov	r5, r0
 80112d0:	4798      	blx	r3
 80112d2:	6823      	ldr	r3, [r4, #0]
 80112d4:	4620      	mov	r0, r4
 80112d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80112d8:	4629      	mov	r1, r5
 80112da:	4798      	blx	r3
 80112dc:	4628      	mov	r0, r5
 80112de:	bd38      	pop	{r3, r4, r5, pc}

080112e0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80112e0:	b410      	push	{r4}
 80112e2:	880a      	ldrh	r2, [r1, #0]
 80112e4:	8884      	ldrh	r4, [r0, #4]
 80112e6:	4422      	add	r2, r4
 80112e8:	800a      	strh	r2, [r1, #0]
 80112ea:	88c4      	ldrh	r4, [r0, #6]
 80112ec:	884a      	ldrh	r2, [r1, #2]
 80112ee:	4422      	add	r2, r4
 80112f0:	804a      	strh	r2, [r1, #2]
 80112f2:	6940      	ldr	r0, [r0, #20]
 80112f4:	b120      	cbz	r0, 8011300 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80112f6:	6803      	ldr	r3, [r0, #0]
 80112f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80112fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80112fe:	4718      	bx	r3
 8011300:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011304:	4770      	bx	lr

08011306 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8011306:	b570      	push	{r4, r5, r6, lr}
 8011308:	8882      	ldrh	r2, [r0, #4]
 801130a:	880b      	ldrh	r3, [r1, #0]
 801130c:	4413      	add	r3, r2
 801130e:	800b      	strh	r3, [r1, #0]
 8011310:	88c2      	ldrh	r2, [r0, #6]
 8011312:	884b      	ldrh	r3, [r1, #2]
 8011314:	460c      	mov	r4, r1
 8011316:	4413      	add	r3, r2
 8011318:	804b      	strh	r3, [r1, #2]
 801131a:	4605      	mov	r5, r0
 801131c:	1d01      	adds	r1, r0, #4
 801131e:	4620      	mov	r0, r4
 8011320:	f7f9 fd06 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 8011324:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011328:	2b00      	cmp	r3, #0
 801132a:	dd0b      	ble.n	8011344 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801132c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011330:	2b00      	cmp	r3, #0
 8011332:	dd07      	ble.n	8011344 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011334:	6968      	ldr	r0, [r5, #20]
 8011336:	b128      	cbz	r0, 8011344 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011338:	6803      	ldr	r3, [r0, #0]
 801133a:	4621      	mov	r1, r4
 801133c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801133e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011342:	4718      	bx	r3
 8011344:	bd70      	pop	{r4, r5, r6, pc}
	...

08011348 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011348:	b570      	push	{r4, r5, r6, lr}
 801134a:	8882      	ldrh	r2, [r0, #4]
 801134c:	880b      	ldrh	r3, [r1, #0]
 801134e:	4413      	add	r3, r2
 8011350:	800b      	strh	r3, [r1, #0]
 8011352:	88c2      	ldrh	r2, [r0, #6]
 8011354:	884b      	ldrh	r3, [r1, #2]
 8011356:	460c      	mov	r4, r1
 8011358:	4413      	add	r3, r2
 801135a:	804b      	strh	r3, [r1, #2]
 801135c:	4605      	mov	r5, r0
 801135e:	1d01      	adds	r1, r0, #4
 8011360:	4620      	mov	r0, r4
 8011362:	f7f9 fce5 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 8011366:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801136a:	2b00      	cmp	r3, #0
 801136c:	dd19      	ble.n	80113a2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801136e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011372:	2b00      	cmp	r3, #0
 8011374:	dd15      	ble.n	80113a2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011376:	6968      	ldr	r0, [r5, #20]
 8011378:	b128      	cbz	r0, 8011386 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801137a:	6803      	ldr	r3, [r0, #0]
 801137c:	4621      	mov	r1, r4
 801137e:	691b      	ldr	r3, [r3, #16]
 8011380:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011384:	4718      	bx	r3
 8011386:	4b07      	ldr	r3, [pc, #28]	@ (80113a4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8011388:	681b      	ldr	r3, [r3, #0]
 801138a:	3304      	adds	r3, #4
 801138c:	429d      	cmp	r5, r3
 801138e:	d108      	bne.n	80113a2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011390:	f7fe fdd6 	bl	800ff40 <_ZN8touchgfx11Application11getInstanceEv>
 8011394:	6803      	ldr	r3, [r0, #0]
 8011396:	6821      	ldr	r1, [r4, #0]
 8011398:	6862      	ldr	r2, [r4, #4]
 801139a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801139c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113a0:	4718      	bx	r3
 80113a2:	bd70      	pop	{r4, r5, r6, pc}
 80113a4:	20014084 	.word	0x20014084

080113a8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80113a8:	b570      	push	{r4, r5, r6, lr}
 80113aa:	4604      	mov	r4, r0
 80113ac:	4616      	mov	r6, r2
 80113ae:	460d      	mov	r5, r1
 80113b0:	b901      	cbnz	r1, 80113b4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80113b2:	b192      	cbz	r2, 80113da <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80113b4:	6823      	ldr	r3, [r4, #0]
 80113b6:	4620      	mov	r0, r4
 80113b8:	699b      	ldr	r3, [r3, #24]
 80113ba:	4798      	blx	r3
 80113bc:	88e2      	ldrh	r2, [r4, #6]
 80113be:	88a1      	ldrh	r1, [r4, #4]
 80113c0:	4432      	add	r2, r6
 80113c2:	4429      	add	r1, r5
 80113c4:	4620      	mov	r0, r4
 80113c6:	b212      	sxth	r2, r2
 80113c8:	b209      	sxth	r1, r1
 80113ca:	f7f9 ff95 	bl	800b2f8 <_ZN8touchgfx8Drawable5setXYEss>
 80113ce:	6823      	ldr	r3, [r4, #0]
 80113d0:	4620      	mov	r0, r4
 80113d2:	699b      	ldr	r3, [r3, #24]
 80113d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113d8:	4718      	bx	r3
 80113da:	bd70      	pop	{r4, r5, r6, pc}

080113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80113dc:	b510      	push	{r4, lr}
 80113de:	4604      	mov	r4, r0
 80113e0:	4608      	mov	r0, r1
 80113e2:	2300      	movs	r3, #0
 80113e4:	8023      	strh	r3, [r4, #0]
 80113e6:	8063      	strh	r3, [r4, #2]
 80113e8:	6803      	ldr	r3, [r0, #0]
 80113ea:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80113ee:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80113f2:	80a1      	strh	r1, [r4, #4]
 80113f4:	80e2      	strh	r2, [r4, #6]
 80113f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80113f8:	4621      	mov	r1, r4
 80113fa:	4798      	blx	r3
 80113fc:	4620      	mov	r0, r4
 80113fe:	bd10      	pop	{r4, pc}

08011400 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 8011400:	4770      	bx	lr

08011402 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 8011402:	b510      	push	{r4, lr}
 8011404:	211c      	movs	r1, #28
 8011406:	4604      	mov	r4, r0
 8011408:	f011 f82f 	bl	802246a <_ZdlPvj>
 801140c:	4620      	mov	r0, r4
 801140e:	bd10      	pop	{r4, pc}

08011410 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8011410:	4a04      	ldr	r2, [pc, #16]	@ (8011424 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 8011412:	6002      	str	r2, [r0, #0]
 8011414:	2200      	movs	r2, #0
 8011416:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801141a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801141e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011422:	4770      	bx	lr
 8011424:	08025dbc 	.word	0x08025dbc

08011428 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8011428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801142c:	4604      	mov	r4, r0
 801142e:	b087      	sub	sp, #28
 8011430:	8b45      	ldrh	r5, [r0, #26]
 8011432:	f8b2 c000 	ldrh.w	ip, [r2]
 8011436:	9105      	str	r1, [sp, #20]
 8011438:	68e1      	ldr	r1, [r4, #12]
 801143a:	9203      	str	r2, [sp, #12]
 801143c:	1c68      	adds	r0, r5, #1
 801143e:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8011442:	f01c 0501 	ands.w	r5, ip, #1
 8011446:	f9b3 2000 	ldrsh.w	r2, [r3]
 801144a:	9502      	str	r5, [sp, #8]
 801144c:	b280      	uxth	r0, r0
 801144e:	d07d      	beq.n	801154c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8011450:	ee07 2a90 	vmov	s15, r2
 8011454:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8011458:	8360      	strh	r0, [r4, #26]
 801145a:	edc1 6a00 	vstr	s13, [r1]
 801145e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8011462:	8b61      	ldrh	r1, [r4, #26]
 8011464:	ee07 2a10 	vmov	s14, r2
 8011468:	68e2      	ldr	r2, [r4, #12]
 801146a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801146e:	f04f 0e00 	mov.w	lr, #0
 8011472:	1c48      	adds	r0, r1, #1
 8011474:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8011478:	ee06 ea10 	vmov	s12, lr
 801147c:	8360      	strh	r0, [r4, #26]
 801147e:	ed82 7a00 	vstr	s14, [r2]
 8011482:	8b21      	ldrh	r1, [r4, #24]
 8011484:	68a2      	ldr	r2, [r4, #8]
 8011486:	2501      	movs	r5, #1
 8011488:	1c48      	adds	r0, r1, #1
 801148a:	8320      	strh	r0, [r4, #24]
 801148c:	5455      	strb	r5, [r2, r1]
 801148e:	2200      	movs	r2, #0
 8011490:	3304      	adds	r3, #4
 8011492:	ee07 2a90 	vmov	s15, r2
 8011496:	9300      	str	r3, [sp, #0]
 8011498:	46aa      	mov	sl, r5
 801149a:	4613      	mov	r3, r2
 801149c:	4611      	mov	r1, r2
 801149e:	462e      	mov	r6, r5
 80114a0:	9201      	str	r2, [sp, #4]
 80114a2:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 80114a6:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 80114aa:	9805      	ldr	r0, [sp, #20]
 80114ac:	f8d4 b008 	ldr.w	fp, [r4, #8]
 80114b0:	f108 0701 	add.w	r7, r8, #1
 80114b4:	42a8      	cmp	r0, r5
 80114b6:	b2bf      	uxth	r7, r7
 80114b8:	eb0b 0908 	add.w	r9, fp, r8
 80114bc:	f340 80db 	ble.w	8011676 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 80114c0:	fa4c f906 	asr.w	r9, ip, r6
 80114c4:	f009 0901 	and.w	r9, r9, #1
 80114c8:	fa5f f389 	uxtb.w	r3, r9
 80114cc:	9304      	str	r3, [sp, #16]
 80114ce:	9b00      	ldr	r3, [sp, #0]
 80114d0:	f9b3 1000 	ldrsh.w	r1, [r3]
 80114d4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80114d8:	f1b9 0f00 	cmp.w	r9, #0
 80114dc:	d07d      	beq.n	80115da <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 80114de:	ee05 1a10 	vmov	s10, r1
 80114e2:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 80114e6:	ee05 3a10 	vmov	s10, r3
 80114ea:	8327      	strh	r7, [r4, #24]
 80114ec:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 80114f0:	f1ba 0f00 	cmp.w	sl, #0
 80114f4:	d050      	beq.n	8011598 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 80114f6:	f04f 0002 	mov.w	r0, #2
 80114fa:	f80b 0008 	strb.w	r0, [fp, r8]
 80114fe:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011502:	68e7      	ldr	r7, [r4, #12]
 8011504:	f108 0901 	add.w	r9, r8, #1
 8011508:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801150c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8011510:	edc7 4a00 	vstr	s9, [r7]
 8011514:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011518:	68e7      	ldr	r7, [r4, #12]
 801151a:	f108 0901 	add.w	r9, r8, #1
 801151e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8011522:	f8a4 901a 	strh.w	r9, [r4, #26]
 8011526:	ed87 5a00 	vstr	s10, [r7]
 801152a:	3601      	adds	r6, #1
 801152c:	2e10      	cmp	r6, #16
 801152e:	d106      	bne.n	801153e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8011530:	9e01      	ldr	r6, [sp, #4]
 8011532:	9803      	ldr	r0, [sp, #12]
 8011534:	3601      	adds	r6, #1
 8011536:	9601      	str	r6, [sp, #4]
 8011538:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 801153c:	2600      	movs	r6, #0
 801153e:	9800      	ldr	r0, [sp, #0]
 8011540:	f8dd a010 	ldr.w	sl, [sp, #16]
 8011544:	3004      	adds	r0, #4
 8011546:	3501      	adds	r5, #1
 8011548:	9000      	str	r0, [sp, #0]
 801154a:	e7ac      	b.n	80114a6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 801154c:	ee06 2a10 	vmov	s12, r2
 8011550:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8011554:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8011558:	ee16 5a10 	vmov	r5, s12
 801155c:	442a      	add	r2, r5
 801155e:	ee06 2a90 	vmov	s13, r2
 8011562:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8011566:	8360      	strh	r0, [r4, #26]
 8011568:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801156c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8011570:	4472      	add	r2, lr
 8011572:	ee07 2a10 	vmov	s14, r2
 8011576:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801157a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801157e:	edc1 6a00 	vstr	s13, [r1]
 8011582:	8b61      	ldrh	r1, [r4, #26]
 8011584:	68e2      	ldr	r2, [r4, #12]
 8011586:	ee27 7a27 	vmul.f32	s14, s14, s15
 801158a:	1c48      	adds	r0, r1, #1
 801158c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8011590:	8360      	strh	r0, [r4, #26]
 8011592:	ed82 7a00 	vstr	s14, [r2]
 8011596:	e774      	b.n	8011482 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 8011598:	f04f 0005 	mov.w	r0, #5
 801159c:	f80b 0008 	strb.w	r0, [fp, r8]
 80115a0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80115a4:	68e7      	ldr	r7, [r4, #12]
 80115a6:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 80115aa:	f108 0901 	add.w	r9, r8, #1
 80115ae:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80115b2:	f8a4 901a 	strh.w	r9, [r4, #26]
 80115b6:	ed87 4a00 	vstr	s8, [r7]
 80115ba:	ee04 2a10 	vmov	s8, r2
 80115be:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80115c2:	68e7      	ldr	r7, [r4, #12]
 80115c4:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 80115c8:	f108 0901 	add.w	r9, r8, #1
 80115cc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80115d0:	f8a4 901a 	strh.w	r9, [r4, #26]
 80115d4:	ed87 4a00 	vstr	s8, [r7]
 80115d8:	e791      	b.n	80114fe <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 80115da:	f1ba 0f00 	cmp.w	sl, #0
 80115de:	d146      	bne.n	801166e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 80115e0:	f04f 0005 	mov.w	r0, #5
 80115e4:	8327      	strh	r7, [r4, #24]
 80115e6:	f80b 0008 	strb.w	r0, [fp, r8]
 80115ea:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80115ee:	68e7      	ldr	r7, [r4, #12]
 80115f0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80115f4:	f108 0901 	add.w	r9, r8, #1
 80115f8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80115fc:	ee17 0a90 	vmov	r0, s15
 8011600:	f8a4 901a 	strh.w	r9, [r4, #26]
 8011604:	ed87 5a00 	vstr	s10, [r7]
 8011608:	ee05 2a10 	vmov	s10, r2
 801160c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011610:	68e7      	ldr	r7, [r4, #12]
 8011612:	4408      	add	r0, r1
 8011614:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8011618:	ee07 0a90 	vmov	s15, r0
 801161c:	f108 0901 	add.w	r9, r8, #1
 8011620:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8011624:	f8a4 901a 	strh.w	r9, [r4, #26]
 8011628:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801162c:	ed87 5a00 	vstr	s10, [r7]
 8011630:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011634:	68e7      	ldr	r7, [r4, #12]
 8011636:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801163a:	f108 0901 	add.w	r9, r8, #1
 801163e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8011642:	441a      	add	r2, r3
 8011644:	f8a4 901a 	strh.w	r9, [r4, #26]
 8011648:	edc7 7a00 	vstr	s15, [r7]
 801164c:	ee07 2a90 	vmov	s15, r2
 8011650:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011654:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011658:	68e7      	ldr	r7, [r4, #12]
 801165a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801165e:	f108 0901 	add.w	r9, r8, #1
 8011662:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8011666:	f8a4 901a 	strh.w	r9, [r4, #26]
 801166a:	edc7 7a00 	vstr	s15, [r7]
 801166e:	461a      	mov	r2, r3
 8011670:	ee07 1a90 	vmov	s15, r1
 8011674:	e759      	b.n	801152a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 8011676:	f1ba 0f00 	cmp.w	sl, #0
 801167a:	d045      	beq.n	8011708 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 801167c:	ee05 1a90 	vmov	s11, r1
 8011680:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8011684:	eef4 5a66 	vcmp.f32	s11, s13
 8011688:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801168c:	d108      	bne.n	80116a0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 801168e:	ee05 3a90 	vmov	s11, r3
 8011692:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8011696:	eef4 5a47 	vcmp.f32	s11, s14
 801169a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801169e:	d033      	beq.n	8011708 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 80116a0:	9b02      	ldr	r3, [sp, #8]
 80116a2:	8327      	strh	r7, [r4, #24]
 80116a4:	b1b3      	cbz	r3, 80116d4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 80116a6:	2302      	movs	r3, #2
 80116a8:	f889 3000 	strb.w	r3, [r9]
 80116ac:	8b62      	ldrh	r2, [r4, #26]
 80116ae:	68e3      	ldr	r3, [r4, #12]
 80116b0:	1c51      	adds	r1, r2, #1
 80116b2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80116b6:	8361      	strh	r1, [r4, #26]
 80116b8:	edc3 6a00 	vstr	s13, [r3]
 80116bc:	8b62      	ldrh	r2, [r4, #26]
 80116be:	68e3      	ldr	r3, [r4, #12]
 80116c0:	1c51      	adds	r1, r2, #1
 80116c2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80116c6:	8361      	strh	r1, [r4, #26]
 80116c8:	ed83 7a00 	vstr	s14, [r3]
 80116cc:	9800      	ldr	r0, [sp, #0]
 80116ce:	b007      	add	sp, #28
 80116d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116d4:	2305      	movs	r3, #5
 80116d6:	f889 3000 	strb.w	r3, [r9]
 80116da:	8b62      	ldrh	r2, [r4, #26]
 80116dc:	68e3      	ldr	r3, [r4, #12]
 80116de:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80116e2:	1c51      	adds	r1, r2, #1
 80116e4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80116e8:	8361      	strh	r1, [r4, #26]
 80116ea:	ee07 ea90 	vmov	s15, lr
 80116ee:	ed83 6a00 	vstr	s12, [r3]
 80116f2:	8b62      	ldrh	r2, [r4, #26]
 80116f4:	68e3      	ldr	r3, [r4, #12]
 80116f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80116fa:	1c51      	adds	r1, r2, #1
 80116fc:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8011700:	8361      	strh	r1, [r4, #26]
 8011702:	edc3 7a00 	vstr	s15, [r3]
 8011706:	e7d1      	b.n	80116ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8011708:	ee05 2a90 	vmov	s11, r2
 801170c:	9902      	ldr	r1, [sp, #8]
 801170e:	8327      	strh	r7, [r4, #24]
 8011710:	2305      	movs	r3, #5
 8011712:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8011716:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801171a:	f889 3000 	strb.w	r3, [r9]
 801171e:	b181      	cbz	r1, 8011742 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 8011720:	8b62      	ldrh	r2, [r4, #26]
 8011722:	68e3      	ldr	r3, [r4, #12]
 8011724:	1c51      	adds	r1, r2, #1
 8011726:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801172a:	8361      	strh	r1, [r4, #26]
 801172c:	ed83 5a00 	vstr	s10, [r3]
 8011730:	8b62      	ldrh	r2, [r4, #26]
 8011732:	68e3      	ldr	r3, [r4, #12]
 8011734:	1c51      	adds	r1, r2, #1
 8011736:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801173a:	8361      	strh	r1, [r4, #26]
 801173c:	edc3 5a00 	vstr	s11, [r3]
 8011740:	e7b4      	b.n	80116ac <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8011742:	8b65      	ldrh	r5, [r4, #26]
 8011744:	68e1      	ldr	r1, [r4, #12]
 8011746:	1c6e      	adds	r6, r5, #1
 8011748:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801174c:	8366      	strh	r6, [r4, #26]
 801174e:	ed81 5a00 	vstr	s10, [r1]
 8011752:	8b65      	ldrh	r5, [r4, #26]
 8011754:	68e1      	ldr	r1, [r4, #12]
 8011756:	1c6e      	adds	r6, r5, #1
 8011758:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801175c:	8366      	strh	r6, [r4, #26]
 801175e:	edc1 5a00 	vstr	s11, [r1]
 8011762:	8b65      	ldrh	r5, [r4, #26]
 8011764:	68e1      	ldr	r1, [r4, #12]
 8011766:	1c6e      	adds	r6, r5, #1
 8011768:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801176c:	ee17 0a90 	vmov	r0, s15
 8011770:	ee16 5a10 	vmov	r5, s12
 8011774:	4428      	add	r0, r5
 8011776:	ee07 0a90 	vmov	s15, r0
 801177a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801177e:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8011782:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8011786:	4472      	add	r2, lr
 8011788:	8366      	strh	r6, [r4, #26]
 801178a:	edc1 7a00 	vstr	s15, [r1]
 801178e:	ee07 2a90 	vmov	s15, r2
 8011792:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011796:	8b61      	ldrh	r1, [r4, #26]
 8011798:	68e5      	ldr	r5, [r4, #12]
 801179a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801179e:	1c4e      	adds	r6, r1, #1
 80117a0:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 80117a4:	8366      	strh	r6, [r4, #26]
 80117a6:	edc1 7a00 	vstr	s15, [r1]
 80117aa:	8b22      	ldrh	r2, [r4, #24]
 80117ac:	68a1      	ldr	r1, [r4, #8]
 80117ae:	1c55      	adds	r5, r2, #1
 80117b0:	8325      	strh	r5, [r4, #24]
 80117b2:	548b      	strb	r3, [r1, r2]
 80117b4:	e791      	b.n	80116da <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

080117b8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 80117b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80117bc:	b08e      	sub	sp, #56	@ 0x38
 80117be:	4604      	mov	r4, r0
 80117c0:	4688      	mov	r8, r1
 80117c2:	4615      	mov	r5, r2
 80117c4:	4699      	mov	r9, r3
 80117c6:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 80117c8:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 80117cc:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 80117ce:	f7f0 f8b3 	bl	8001938 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 80117d2:	6060      	str	r0, [r4, #4]
 80117d4:	f1b9 0f00 	cmp.w	r9, #0
 80117d8:	f000 80e8 	beq.w	80119ac <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 80117dc:	2800      	cmp	r0, #0
 80117de:	f000 80e5 	beq.w	80119ac <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 80117e2:	a805      	add	r0, sp, #20
 80117e4:	f000 f8f9 	bl	80119da <_ZN8touchgfx9Matrix3x3C1Ev>
 80117e8:	6833      	ldr	r3, [r6, #0]
 80117ea:	4630      	mov	r0, r6
 80117ec:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80117ee:	4798      	blx	r3
 80117f0:	a805      	add	r0, sp, #20
 80117f2:	eef0 0a40 	vmov.f32	s1, s0
 80117f6:	f000 f8f4 	bl	80119e2 <_ZN8touchgfx9Matrix3x35scaleEff>
 80117fa:	6860      	ldr	r0, [r4, #4]
 80117fc:	f1ba 0f03 	cmp.w	sl, #3
 8011800:	d83b      	bhi.n	801187a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 8011802:	e8df f00a 	tbb	[pc, sl]
 8011806:	1002      	.short	0x1002
 8011808:	9f71      	.short	0x9f71
 801180a:	6803      	ldr	r3, [r0, #0]
 801180c:	462a      	mov	r2, r5
 801180e:	689b      	ldr	r3, [r3, #8]
 8011810:	4641      	mov	r1, r8
 8011812:	4798      	blx	r3
 8011814:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8011818:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801181c:	ee07 7a90 	vmov	s15, r7
 8011820:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8011824:	e026      	b.n	8011874 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 8011826:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 801182a:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 801182e:	8869      	ldrh	r1, [r5, #2]
 8011830:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011834:	1a9b      	subs	r3, r3, r2
 8011836:	1a5b      	subs	r3, r3, r1
 8011838:	f8ad 300c 	strh.w	r3, [sp, #12]
 801183c:	882b      	ldrh	r3, [r5, #0]
 801183e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011842:	88ab      	ldrh	r3, [r5, #4]
 8011844:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011848:	6803      	ldr	r3, [r0, #0]
 801184a:	aa03      	add	r2, sp, #12
 801184c:	689b      	ldr	r3, [r3, #8]
 801184e:	4641      	mov	r1, r8
 8011850:	4798      	blx	r3
 8011852:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 80119b4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 8011856:	a805      	add	r0, sp, #20
 8011858:	f000 f8e8 	bl	8011a2c <_ZN8touchgfx9Matrix3x36rotateEf>
 801185c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8011860:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8011862:	ee07 7a90 	vmov	s15, r7
 8011866:	1a9b      	subs	r3, r3, r2
 8011868:	ee00 3a10 	vmov	s0, r3
 801186c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8011870:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8011874:	a805      	add	r0, sp, #20
 8011876:	f000 f927 	bl	8011ac8 <_ZN8touchgfx9Matrix3x39translateEff>
 801187a:	6860      	ldr	r0, [r4, #4]
 801187c:	6803      	ldr	r3, [r0, #0]
 801187e:	a905      	add	r1, sp, #20
 8011880:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011882:	4798      	blx	r3
 8011884:	6860      	ldr	r0, [r4, #4]
 8011886:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8011888:	6803      	ldr	r3, [r0, #0]
 801188a:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 801188e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011890:	4798      	blx	r3
 8011892:	6860      	ldr	r0, [r4, #4]
 8011894:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 8011898:	6803      	ldr	r3, [r0, #0]
 801189a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801189c:	4798      	blx	r3
 801189e:	6860      	ldr	r0, [r4, #4]
 80118a0:	6803      	ldr	r3, [r0, #0]
 80118a2:	2101      	movs	r1, #1
 80118a4:	68db      	ldr	r3, [r3, #12]
 80118a6:	2500      	movs	r5, #0
 80118a8:	4798      	blx	r3
 80118aa:	f8b9 7000 	ldrh.w	r7, [r9]
 80118ae:	61a5      	str	r5, [r4, #24]
 80118b0:	f104 0310 	add.w	r3, r4, #16
 80118b4:	f104 0208 	add.w	r2, r4, #8
 80118b8:	f104 0114 	add.w	r1, r4, #20
 80118bc:	f104 000c 	add.w	r0, r4, #12
 80118c0:	f109 0602 	add.w	r6, r9, #2
 80118c4:	f7f1 fda0 	bl	8003408 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 80118c8:	42af      	cmp	r7, r5
 80118ca:	dd60      	ble.n	801198e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 80118cc:	8831      	ldrh	r1, [r6, #0]
 80118ce:	f101 030f 	add.w	r3, r1, #15
 80118d2:	1cb2      	adds	r2, r6, #2
 80118d4:	f3c3 1307 	ubfx	r3, r3, #4, #8
 80118d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80118dc:	4620      	mov	r0, r4
 80118de:	f7ff fda3 	bl	8011428 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 80118e2:	3501      	adds	r5, #1
 80118e4:	4606      	mov	r6, r0
 80118e6:	e7ef      	b.n	80118c8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 80118e8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80118ec:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 80118f0:	8829      	ldrh	r1, [r5, #0]
 80118f2:	f8ad 2010 	strh.w	r2, [sp, #16]
 80118f6:	1a9b      	subs	r3, r3, r2
 80118f8:	1a5b      	subs	r3, r3, r1
 80118fa:	f8ad 300c 	strh.w	r3, [sp, #12]
 80118fe:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011902:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011906:	886d      	ldrh	r5, [r5, #2]
 8011908:	f8ad 1012 	strh.w	r1, [sp, #18]
 801190c:	1a5b      	subs	r3, r3, r1
 801190e:	1b5b      	subs	r3, r3, r5
 8011910:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011914:	6803      	ldr	r3, [r0, #0]
 8011916:	aa03      	add	r2, sp, #12
 8011918:	689b      	ldr	r3, [r3, #8]
 801191a:	4641      	mov	r1, r8
 801191c:	4798      	blx	r3
 801191e:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 80119b8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 8011922:	a805      	add	r0, sp, #20
 8011924:	f000 f882 	bl	8011a2c <_ZN8touchgfx9Matrix3x36rotateEf>
 8011928:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801192c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801192e:	1a9b      	subs	r3, r3, r2
 8011930:	ee00 3a90 	vmov	s1, r3
 8011934:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8011938:	1bdb      	subs	r3, r3, r7
 801193a:	ee00 3a10 	vmov	s0, r3
 801193e:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8011942:	e795      	b.n	8011870 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8011944:	886b      	ldrh	r3, [r5, #2]
 8011946:	f8ad 300c 	strh.w	r3, [sp, #12]
 801194a:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801194e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011952:	8829      	ldrh	r1, [r5, #0]
 8011954:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011958:	1a9b      	subs	r3, r3, r2
 801195a:	1a5b      	subs	r3, r3, r1
 801195c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011960:	88eb      	ldrh	r3, [r5, #6]
 8011962:	f8ad 3010 	strh.w	r3, [sp, #16]
 8011966:	6803      	ldr	r3, [r0, #0]
 8011968:	aa03      	add	r2, sp, #12
 801196a:	689b      	ldr	r3, [r3, #8]
 801196c:	4641      	mov	r1, r8
 801196e:	4798      	blx	r3
 8011970:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 80119bc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8011974:	a805      	add	r0, sp, #20
 8011976:	f000 f859 	bl	8011a2c <_ZN8touchgfx9Matrix3x36rotateEf>
 801197a:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801197e:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8011982:	1bdb      	subs	r3, r3, r7
 8011984:	ee00 3a90 	vmov	s1, r3
 8011988:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801198c:	e748      	b.n	8011820 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 801198e:	6860      	ldr	r0, [r4, #4]
 8011990:	8b22      	ldrh	r2, [r4, #24]
 8011992:	6803      	ldr	r3, [r0, #0]
 8011994:	2100      	movs	r1, #0
 8011996:	9101      	str	r1, [sp, #4]
 8011998:	8b61      	ldrh	r1, [r4, #26]
 801199a:	9100      	str	r1, [sp, #0]
 801199c:	6a1d      	ldr	r5, [r3, #32]
 801199e:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 80119a2:	47a8      	blx	r5
 80119a4:	6860      	ldr	r0, [r4, #4]
 80119a6:	6803      	ldr	r3, [r0, #0]
 80119a8:	69db      	ldr	r3, [r3, #28]
 80119aa:	4798      	blx	r3
 80119ac:	b00e      	add	sp, #56	@ 0x38
 80119ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80119b2:	bf00      	nop
 80119b4:	42b40000 	.word	0x42b40000
 80119b8:	43340000 	.word	0x43340000
 80119bc:	43870000 	.word	0x43870000

080119c0 <_ZN8touchgfx9Matrix3x35resetEv>:
 80119c0:	2300      	movs	r3, #0
 80119c2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80119c6:	6002      	str	r2, [r0, #0]
 80119c8:	6043      	str	r3, [r0, #4]
 80119ca:	6083      	str	r3, [r0, #8]
 80119cc:	60c3      	str	r3, [r0, #12]
 80119ce:	6102      	str	r2, [r0, #16]
 80119d0:	6143      	str	r3, [r0, #20]
 80119d2:	6183      	str	r3, [r0, #24]
 80119d4:	61c3      	str	r3, [r0, #28]
 80119d6:	6202      	str	r2, [r0, #32]
 80119d8:	4770      	bx	lr

080119da <_ZN8touchgfx9Matrix3x3C1Ev>:
 80119da:	b508      	push	{r3, lr}
 80119dc:	f7ff fff0 	bl	80119c0 <_ZN8touchgfx9Matrix3x35resetEv>
 80119e0:	bd08      	pop	{r3, pc}

080119e2 <_ZN8touchgfx9Matrix3x35scaleEff>:
 80119e2:	edd0 7a00 	vldr	s15, [r0]
 80119e6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80119ea:	edc0 7a00 	vstr	s15, [r0]
 80119ee:	edd0 7a01 	vldr	s15, [r0, #4]
 80119f2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80119f6:	edc0 7a01 	vstr	s15, [r0, #4]
 80119fa:	edd0 7a02 	vldr	s15, [r0, #8]
 80119fe:	ee27 0a80 	vmul.f32	s0, s15, s0
 8011a02:	edd0 7a03 	vldr	s15, [r0, #12]
 8011a06:	ed80 0a02 	vstr	s0, [r0, #8]
 8011a0a:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8011a0e:	edc0 7a03 	vstr	s15, [r0, #12]
 8011a12:	edd0 7a04 	vldr	s15, [r0, #16]
 8011a16:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8011a1a:	edc0 7a04 	vstr	s15, [r0, #16]
 8011a1e:	edd0 7a05 	vldr	s15, [r0, #20]
 8011a22:	ee67 0aa0 	vmul.f32	s1, s15, s1
 8011a26:	edc0 0a05 	vstr	s1, [r0, #20]
 8011a2a:	4770      	bx	lr

08011a2c <_ZN8touchgfx9Matrix3x36rotateEf>:
 8011a2c:	b510      	push	{r4, lr}
 8011a2e:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8011ac0 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 8011a32:	ee20 0a27 	vmul.f32	s0, s0, s15
 8011a36:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8011ac4 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8011a3a:	ed2d 8b02 	vpush	{d8}
 8011a3e:	eec0 8a27 	vdiv.f32	s17, s0, s15
 8011a42:	4604      	mov	r4, r0
 8011a44:	eeb0 0a68 	vmov.f32	s0, s17
 8011a48:	f010 fd58 	bl	80224fc <cosf>
 8011a4c:	eeb0 8a40 	vmov.f32	s16, s0
 8011a50:	eeb0 0a68 	vmov.f32	s0, s17
 8011a54:	f010 fd96 	bl	8022584 <sinf>
 8011a58:	edd4 6a03 	vldr	s13, [r4, #12]
 8011a5c:	edd4 4a00 	vldr	s9, [r4]
 8011a60:	ed94 7a04 	vldr	s14, [r4, #16]
 8011a64:	ed94 5a01 	vldr	s10, [r4, #4]
 8011a68:	edd4 5a02 	vldr	s11, [r4, #8]
 8011a6c:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8011a70:	ee66 6a88 	vmul.f32	s13, s13, s16
 8011a74:	eee8 7a24 	vfma.f32	s15, s16, s9
 8011a78:	eee0 6a24 	vfma.f32	s13, s0, s9
 8011a7c:	edc4 7a00 	vstr	s15, [r4]
 8011a80:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8011a84:	ee27 7a08 	vmul.f32	s14, s14, s16
 8011a88:	eee8 7a05 	vfma.f32	s15, s16, s10
 8011a8c:	eea0 7a05 	vfma.f32	s14, s0, s10
 8011a90:	edc4 7a01 	vstr	s15, [r4, #4]
 8011a94:	edd4 7a05 	vldr	s15, [r4, #20]
 8011a98:	edc4 6a03 	vstr	s13, [r4, #12]
 8011a9c:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8011aa0:	ee67 7a88 	vmul.f32	s15, s15, s16
 8011aa4:	eea8 6a25 	vfma.f32	s12, s16, s11
 8011aa8:	ecbd 8b02 	vpop	{d8}
 8011aac:	eee0 7a25 	vfma.f32	s15, s0, s11
 8011ab0:	ed84 6a02 	vstr	s12, [r4, #8]
 8011ab4:	ed84 7a04 	vstr	s14, [r4, #16]
 8011ab8:	edc4 7a05 	vstr	s15, [r4, #20]
 8011abc:	bd10      	pop	{r4, pc}
 8011abe:	bf00      	nop
 8011ac0:	40490fdb 	.word	0x40490fdb
 8011ac4:	43340000 	.word	0x43340000

08011ac8 <_ZN8touchgfx9Matrix3x39translateEff>:
 8011ac8:	ed90 6a06 	vldr	s12, [r0, #24]
 8011acc:	edd0 7a00 	vldr	s15, [r0]
 8011ad0:	edd0 6a07 	vldr	s13, [r0, #28]
 8011ad4:	ed90 7a08 	vldr	s14, [r0, #32]
 8011ad8:	eee6 7a00 	vfma.f32	s15, s12, s0
 8011adc:	edc0 7a00 	vstr	s15, [r0]
 8011ae0:	edd0 7a01 	vldr	s15, [r0, #4]
 8011ae4:	eee6 7a80 	vfma.f32	s15, s13, s0
 8011ae8:	edc0 7a01 	vstr	s15, [r0, #4]
 8011aec:	edd0 7a02 	vldr	s15, [r0, #8]
 8011af0:	eee7 7a00 	vfma.f32	s15, s14, s0
 8011af4:	edc0 7a02 	vstr	s15, [r0, #8]
 8011af8:	edd0 7a03 	vldr	s15, [r0, #12]
 8011afc:	eee6 7a20 	vfma.f32	s15, s12, s1
 8011b00:	edc0 7a03 	vstr	s15, [r0, #12]
 8011b04:	edd0 7a04 	vldr	s15, [r0, #16]
 8011b08:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8011b0c:	edc0 7a04 	vstr	s15, [r0, #16]
 8011b10:	edd0 7a05 	vldr	s15, [r0, #20]
 8011b14:	eee7 7a20 	vfma.f32	s15, s14, s1
 8011b18:	edc0 7a05 	vstr	s15, [r0, #20]
 8011b1c:	4770      	bx	lr

08011b1e <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8011b1e:	edd0 6a01 	vldr	s13, [r0, #4]
 8011b22:	edd0 7a04 	vldr	s15, [r0, #16]
 8011b26:	ed90 7a03 	vldr	s14, [r0, #12]
 8011b2a:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8011b2e:	ee60 0aa6 	vmul.f32	s1, s1, s13
 8011b32:	edd0 6a00 	vldr	s13, [r0]
 8011b36:	eee7 7a00 	vfma.f32	s15, s14, s0
 8011b3a:	b084      	sub	sp, #16
 8011b3c:	eee6 0a80 	vfma.f32	s1, s13, s0
 8011b40:	ed90 7a05 	vldr	s14, [r0, #20]
 8011b44:	ed90 0a02 	vldr	s0, [r0, #8]
 8011b48:	ee30 0a80 	vadd.f32	s0, s1, s0
 8011b4c:	ee77 0a87 	vadd.f32	s1, s15, s14
 8011b50:	b004      	add	sp, #16
 8011b52:	4770      	bx	lr

08011b54 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8011b54:	b530      	push	{r4, r5, lr}
 8011b56:	8083      	strh	r3, [r0, #4]
 8011b58:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011b5c:	80c3      	strh	r3, [r0, #6]
 8011b5e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011b62:	7203      	strb	r3, [r0, #8]
 8011b64:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011b68:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8011b6c:	7243      	strb	r3, [r0, #9]
 8011b6e:	7a83      	ldrb	r3, [r0, #10]
 8011b70:	6141      	str	r1, [r0, #20]
 8011b72:	f365 0306 	bfi	r3, r5, #0, #7
 8011b76:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8011b7a:	8302      	strh	r2, [r0, #24]
 8011b7c:	f365 13c7 	bfi	r3, r5, #7, #1
 8011b80:	7283      	strb	r3, [r0, #10]
 8011b82:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011b86:	72c3      	strb	r3, [r0, #11]
 8011b88:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8011b8c:	7303      	strb	r3, [r0, #12]
 8011b8e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8011b92:	81c3      	strh	r3, [r0, #14]
 8011b94:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8011b98:	8203      	strh	r3, [r0, #16]
 8011b9a:	4b01      	ldr	r3, [pc, #4]	@ (8011ba0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011b9c:	6003      	str	r3, [r0, #0]
 8011b9e:	bd30      	pop	{r4, r5, pc}
 8011ba0:	08025dd0 	.word	0x08025dd0

08011ba4 <_ZNK8touchgfx9ConstFont4findEt>:
 8011ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011ba6:	6944      	ldr	r4, [r0, #20]
 8011ba8:	b3bc      	cbz	r4, 8011c1a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011baa:	88a3      	ldrh	r3, [r4, #4]
 8011bac:	8b02      	ldrh	r2, [r0, #24]
 8011bae:	1acb      	subs	r3, r1, r3
 8011bb0:	f102 32ff 	add.w	r2, r2, #4294967295
 8011bb4:	d431      	bmi.n	8011c1a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011bb6:	4293      	cmp	r3, r2
 8011bb8:	dd0c      	ble.n	8011bd4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011bba:	230e      	movs	r3, #14
 8011bbc:	fb03 4302 	mla	r3, r3, r2, r4
 8011bc0:	889b      	ldrh	r3, [r3, #4]
 8011bc2:	1a5b      	subs	r3, r3, r1
 8011bc4:	1ad3      	subs	r3, r2, r3
 8011bc6:	429a      	cmp	r2, r3
 8011bc8:	db27      	blt.n	8011c1a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011bca:	2b00      	cmp	r3, #0
 8011bcc:	bfbc      	itt	lt
 8011bce:	2302      	movlt	r3, #2
 8011bd0:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011bd4:	2500      	movs	r5, #0
 8011bd6:	260e      	movs	r6, #14
 8011bd8:	4295      	cmp	r5, r2
 8011bda:	dc1e      	bgt.n	8011c1a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011bdc:	fb06 4003 	mla	r0, r6, r3, r4
 8011be0:	8887      	ldrh	r7, [r0, #4]
 8011be2:	42b9      	cmp	r1, r7
 8011be4:	d01a      	beq.n	8011c1c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011be6:	d20d      	bcs.n	8011c04 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011be8:	1e5a      	subs	r2, r3, #1
 8011bea:	4295      	cmp	r5, r2
 8011bec:	dc15      	bgt.n	8011c1a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011bee:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011bf2:	1a5b      	subs	r3, r3, r1
 8011bf4:	1ad3      	subs	r3, r2, r3
 8011bf6:	429a      	cmp	r2, r3
 8011bf8:	db0f      	blt.n	8011c1a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011bfa:	429d      	cmp	r5, r3
 8011bfc:	ddec      	ble.n	8011bd8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011bfe:	1953      	adds	r3, r2, r5
 8011c00:	105b      	asrs	r3, r3, #1
 8011c02:	e7e9      	b.n	8011bd8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011c04:	1c5d      	adds	r5, r3, #1
 8011c06:	42aa      	cmp	r2, r5
 8011c08:	db07      	blt.n	8011c1a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011c0a:	8a43      	ldrh	r3, [r0, #18]
 8011c0c:	1acb      	subs	r3, r1, r3
 8011c0e:	442b      	add	r3, r5
 8011c10:	429d      	cmp	r5, r3
 8011c12:	dc02      	bgt.n	8011c1a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011c14:	429a      	cmp	r2, r3
 8011c16:	dadf      	bge.n	8011bd8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011c18:	e7f1      	b.n	8011bfe <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011c1a:	2000      	movs	r0, #0
 8011c1c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011c1e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011c1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011c20:	4604      	mov	r4, r0
 8011c22:	4617      	mov	r7, r2
 8011c24:	461e      	mov	r6, r3
 8011c26:	b911      	cbnz	r1, 8011c2e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011c28:	2500      	movs	r5, #0
 8011c2a:	4628      	mov	r0, r5
 8011c2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011c2e:	290a      	cmp	r1, #10
 8011c30:	d0fa      	beq.n	8011c28 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011c32:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8011c36:	4291      	cmp	r1, r2
 8011c38:	d0f6      	beq.n	8011c28 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011c3a:	f242 020b 	movw	r2, #8203	@ 0x200b
 8011c3e:	4291      	cmp	r1, r2
 8011c40:	d0f2      	beq.n	8011c28 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011c42:	f7ff ffaf 	bl	8011ba4 <_ZNK8touchgfx9ConstFont4findEt>
 8011c46:	4605      	mov	r5, r0
 8011c48:	b950      	cbnz	r0, 8011c60 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011c4a:	6823      	ldr	r3, [r4, #0]
 8011c4c:	4620      	mov	r0, r4
 8011c4e:	691b      	ldr	r3, [r3, #16]
 8011c50:	4798      	blx	r3
 8011c52:	4601      	mov	r1, r0
 8011c54:	4620      	mov	r0, r4
 8011c56:	f7ff ffa5 	bl	8011ba4 <_ZNK8touchgfx9ConstFont4findEt>
 8011c5a:	4605      	mov	r5, r0
 8011c5c:	2800      	cmp	r0, #0
 8011c5e:	d0e3      	beq.n	8011c28 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011c60:	6823      	ldr	r3, [r4, #0]
 8011c62:	4629      	mov	r1, r5
 8011c64:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011c66:	4620      	mov	r0, r4
 8011c68:	4798      	blx	r3
 8011c6a:	6038      	str	r0, [r7, #0]
 8011c6c:	6823      	ldr	r3, [r4, #0]
 8011c6e:	4620      	mov	r0, r4
 8011c70:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011c72:	4798      	blx	r3
 8011c74:	7030      	strb	r0, [r6, #0]
 8011c76:	e7d8      	b.n	8011c2a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011c78 <_ZN8touchgfx4clzuEm>:
 8011c78:	4603      	mov	r3, r0
 8011c7a:	b1c8      	cbz	r0, 8011cb0 <_ZN8touchgfx4clzuEm+0x38>
 8011c7c:	0c02      	lsrs	r2, r0, #16
 8011c7e:	0412      	lsls	r2, r2, #16
 8011c80:	b9a2      	cbnz	r2, 8011cac <_ZN8touchgfx4clzuEm+0x34>
 8011c82:	0403      	lsls	r3, r0, #16
 8011c84:	2010      	movs	r0, #16
 8011c86:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8011c8a:	bf04      	itt	eq
 8011c8c:	021b      	lsleq	r3, r3, #8
 8011c8e:	3008      	addeq	r0, #8
 8011c90:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8011c94:	bf04      	itt	eq
 8011c96:	011b      	lsleq	r3, r3, #4
 8011c98:	3004      	addeq	r0, #4
 8011c9a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8011c9e:	bf04      	itt	eq
 8011ca0:	009b      	lsleq	r3, r3, #2
 8011ca2:	3002      	addeq	r0, #2
 8011ca4:	2b00      	cmp	r3, #0
 8011ca6:	db04      	blt.n	8011cb2 <_ZN8touchgfx4clzuEm+0x3a>
 8011ca8:	3001      	adds	r0, #1
 8011caa:	4770      	bx	lr
 8011cac:	2000      	movs	r0, #0
 8011cae:	e7ea      	b.n	8011c86 <_ZN8touchgfx4clzuEm+0xe>
 8011cb0:	2020      	movs	r0, #32
 8011cb2:	4770      	bx	lr

08011cb4 <_ZN8touchgfx7muldivuEmmmRm>:
 8011cb4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011cb8:	460f      	mov	r7, r1
 8011cba:	4615      	mov	r5, r2
 8011cbc:	461e      	mov	r6, r3
 8011cbe:	4601      	mov	r1, r0
 8011cc0:	b100      	cbz	r0, 8011cc4 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8011cc2:	b927      	cbnz	r7, 8011cce <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8011cc4:	2000      	movs	r0, #0
 8011cc6:	6030      	str	r0, [r6, #0]
 8011cc8:	b002      	add	sp, #8
 8011cca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011cce:	f7ff ffd3 	bl	8011c78 <_ZN8touchgfx4clzuEm>
 8011cd2:	b980      	cbnz	r0, 8011cf6 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8011cd4:	4638      	mov	r0, r7
 8011cd6:	f7ff ffcf 	bl	8011c78 <_ZN8touchgfx4clzuEm>
 8011cda:	2800      	cmp	r0, #0
 8011cdc:	dd05      	ble.n	8011cea <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8011cde:	4633      	mov	r3, r6
 8011ce0:	462a      	mov	r2, r5
 8011ce2:	4638      	mov	r0, r7
 8011ce4:	f7ff ffe6 	bl	8011cb4 <_ZN8touchgfx7muldivuEmmmRm>
 8011ce8:	e7ee      	b.n	8011cc8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011cea:	f04f 33ff 	mov.w	r3, #4294967295
 8011cee:	6033      	str	r3, [r6, #0]
 8011cf0:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8011cf4:	e7e8      	b.n	8011cc8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011cf6:	fa37 f800 	lsrs.w	r8, r7, r0
 8011cfa:	fb07 f301 	mul.w	r3, r7, r1
 8011cfe:	d105      	bne.n	8011d0c <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8011d00:	fbb3 f0f5 	udiv	r0, r3, r5
 8011d04:	fb05 3510 	mls	r5, r5, r0, r3
 8011d08:	6035      	str	r5, [r6, #0]
 8011d0a:	e7dd      	b.n	8011cc8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011d0c:	2301      	movs	r3, #1
 8011d0e:	fa01 fa00 	lsl.w	sl, r1, r0
 8011d12:	fa03 f000 	lsl.w	r0, r3, r0
 8011d16:	3801      	subs	r0, #1
 8011d18:	462a      	mov	r2, r5
 8011d1a:	4633      	mov	r3, r6
 8011d1c:	4038      	ands	r0, r7
 8011d1e:	f7ff ffc9 	bl	8011cb4 <_ZN8touchgfx7muldivuEmmmRm>
 8011d22:	fbba f9f5 	udiv	r9, sl, r5
 8011d26:	462a      	mov	r2, r5
 8011d28:	4607      	mov	r7, r0
 8011d2a:	ab01      	add	r3, sp, #4
 8011d2c:	fb05 a119 	mls	r1, r5, r9, sl
 8011d30:	4640      	mov	r0, r8
 8011d32:	f7ff ffbf 	bl	8011cb4 <_ZN8touchgfx7muldivuEmmmRm>
 8011d36:	9b01      	ldr	r3, [sp, #4]
 8011d38:	6832      	ldr	r2, [r6, #0]
 8011d3a:	fb08 f409 	mul.w	r4, r8, r9
 8011d3e:	441a      	add	r2, r3
 8011d40:	fbb2 f3f5 	udiv	r3, r2, r5
 8011d44:	441c      	add	r4, r3
 8011d46:	443c      	add	r4, r7
 8011d48:	4420      	add	r0, r4
 8011d4a:	fb05 2513 	mls	r5, r5, r3, r2
 8011d4e:	e7db      	b.n	8011d08 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08011d50 <_ZN8touchgfx6muldivElllRl>:
 8011d50:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011d52:	2800      	cmp	r0, #0
 8011d54:	bfba      	itte	lt
 8011d56:	4240      	neglt	r0, r0
 8011d58:	f04f 34ff 	movlt.w	r4, #4294967295
 8011d5c:	2401      	movge	r4, #1
 8011d5e:	2900      	cmp	r1, #0
 8011d60:	bfbc      	itt	lt
 8011d62:	4249      	neglt	r1, r1
 8011d64:	4264      	neglt	r4, r4
 8011d66:	2a00      	cmp	r2, #0
 8011d68:	bfb6      	itet	lt
 8011d6a:	4265      	neglt	r5, r4
 8011d6c:	4625      	movge	r5, r4
 8011d6e:	4252      	neglt	r2, r2
 8011d70:	4288      	cmp	r0, r1
 8011d72:	461e      	mov	r6, r3
 8011d74:	bfc2      	ittt	gt
 8011d76:	4603      	movgt	r3, r0
 8011d78:	4608      	movgt	r0, r1
 8011d7a:	4619      	movgt	r1, r3
 8011d7c:	ab01      	add	r3, sp, #4
 8011d7e:	f7ff ff99 	bl	8011cb4 <_ZN8touchgfx7muldivuEmmmRm>
 8011d82:	9b01      	ldr	r3, [sp, #4]
 8011d84:	4368      	muls	r0, r5
 8011d86:	435c      	muls	r4, r3
 8011d88:	6034      	str	r4, [r6, #0]
 8011d8a:	b002      	add	sp, #8
 8011d8c:	bd70      	pop	{r4, r5, r6, pc}

08011d8e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8011d8e:	2000      	movs	r0, #0
 8011d90:	4770      	bx	lr

08011d92 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011d92:	2001      	movs	r0, #1
 8011d94:	4770      	bx	lr

08011d96 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011d96:	2002      	movs	r0, #2
 8011d98:	4770      	bx	lr

08011d9a <_ZN8touchgfx6ScreenD1Ev>:
 8011d9a:	4770      	bx	lr

08011d9c <_ZN8touchgfx12GestureEventD1Ev>:
 8011d9c:	4770      	bx	lr

08011d9e <_ZN8touchgfx9DragEventD1Ev>:
 8011d9e:	4770      	bx	lr

08011da0 <_ZN8touchgfx10ClickEventD1Ev>:
 8011da0:	4770      	bx	lr

08011da2 <_ZN8touchgfx10ClickEventD0Ev>:
 8011da2:	b510      	push	{r4, lr}
 8011da4:	210c      	movs	r1, #12
 8011da6:	4604      	mov	r4, r0
 8011da8:	f010 fb5f 	bl	802246a <_ZdlPvj>
 8011dac:	4620      	mov	r0, r4
 8011dae:	bd10      	pop	{r4, pc}

08011db0 <_ZN8touchgfx9DragEventD0Ev>:
 8011db0:	b510      	push	{r4, lr}
 8011db2:	2110      	movs	r1, #16
 8011db4:	4604      	mov	r4, r0
 8011db6:	f010 fb58 	bl	802246a <_ZdlPvj>
 8011dba:	4620      	mov	r0, r4
 8011dbc:	bd10      	pop	{r4, pc}

08011dbe <_ZN8touchgfx12GestureEventD0Ev>:
 8011dbe:	b510      	push	{r4, lr}
 8011dc0:	210c      	movs	r1, #12
 8011dc2:	4604      	mov	r4, r0
 8011dc4:	f010 fb51 	bl	802246a <_ZdlPvj>
 8011dc8:	4620      	mov	r0, r4
 8011dca:	bd10      	pop	{r4, pc}

08011dcc <_ZN8touchgfx6ScreenD0Ev>:
 8011dcc:	b510      	push	{r4, lr}
 8011dce:	213c      	movs	r1, #60	@ 0x3c
 8011dd0:	4604      	mov	r4, r0
 8011dd2:	f010 fb4a 	bl	802246a <_ZdlPvj>
 8011dd6:	4620      	mov	r0, r4
 8011dd8:	bd10      	pop	{r4, pc}
	...

08011ddc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011ddc:	b530      	push	{r4, r5, lr}
 8011dde:	460d      	mov	r5, r1
 8011de0:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011de2:	b087      	sub	sp, #28
 8011de4:	4604      	mov	r4, r0
 8011de6:	b301      	cbz	r1, 8011e2a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011de8:	a801      	add	r0, sp, #4
 8011dea:	f7ff faf7 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011dee:	892a      	ldrh	r2, [r5, #8]
 8011df0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011df4:	7928      	ldrb	r0, [r5, #4]
 8011df6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011dfa:	f88d 0010 	strb.w	r0, [sp, #16]
 8011dfe:	1ad2      	subs	r2, r2, r3
 8011e00:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8011e02:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011e04:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011e08:	441a      	add	r2, r3
 8011e0a:	896b      	ldrh	r3, [r5, #10]
 8011e0c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011e10:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011e14:	1b5b      	subs	r3, r3, r5
 8011e16:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8011e18:	442b      	add	r3, r5
 8011e1a:	4d05      	ldr	r5, [pc, #20]	@ (8011e30 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011e1c:	9503      	str	r5, [sp, #12]
 8011e1e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011e22:	6803      	ldr	r3, [r0, #0]
 8011e24:	a903      	add	r1, sp, #12
 8011e26:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011e28:	4798      	blx	r3
 8011e2a:	b007      	add	sp, #28
 8011e2c:	bd30      	pop	{r4, r5, pc}
 8011e2e:	bf00      	nop
 8011e30:	08025e60 	.word	0x08025e60

08011e34 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011e34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e38:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8011e3a:	b08a      	sub	sp, #40	@ 0x28
 8011e3c:	4604      	mov	r4, r0
 8011e3e:	460d      	mov	r5, r1
 8011e40:	b113      	cbz	r3, 8011e48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8011e42:	790b      	ldrb	r3, [r1, #4]
 8011e44:	2b00      	cmp	r3, #0
 8011e46:	d044      	beq.n	8011ed2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011e48:	f104 0804 	add.w	r8, r4, #4
 8011e4c:	4641      	mov	r1, r8
 8011e4e:	a803      	add	r0, sp, #12
 8011e50:	f7ff fac4 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e54:	792b      	ldrb	r3, [r5, #4]
 8011e56:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011e5a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8011e5e:	b983      	cbnz	r3, 8011e82 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011e60:	892a      	ldrh	r2, [r5, #8]
 8011e62:	88e9      	ldrh	r1, [r5, #6]
 8011e64:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8011e68:	1b92      	subs	r2, r2, r6
 8011e6a:	1bc9      	subs	r1, r1, r7
 8011e6c:	9301      	str	r3, [sp, #4]
 8011e6e:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8011e72:	9300      	str	r3, [sp, #0]
 8011e74:	b212      	sxth	r2, r2
 8011e76:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8011e7a:	b209      	sxth	r1, r1
 8011e7c:	4640      	mov	r0, r8
 8011e7e:	f7f8 fe73 	bl	800ab68 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8011e82:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011e84:	b329      	cbz	r1, 8011ed2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011e86:	a805      	add	r0, sp, #20
 8011e88:	f7ff faa8 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e8c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011e90:	792b      	ldrb	r3, [r5, #4]
 8011e92:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011e94:	f88d 3020 	strb.w	r3, [sp, #32]
 8011e98:	1abf      	subs	r7, r7, r2
 8011e9a:	88ea      	ldrh	r2, [r5, #6]
 8011e9c:	4417      	add	r7, r2
 8011e9e:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8011ea0:	4417      	add	r7, r2
 8011ea2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011ea6:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8011eaa:	1ab6      	subs	r6, r6, r2
 8011eac:	892a      	ldrh	r2, [r5, #8]
 8011eae:	4416      	add	r6, r2
 8011eb0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011eb2:	4416      	add	r6, r2
 8011eb4:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8011eb8:	4a07      	ldr	r2, [pc, #28]	@ (8011ed8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011eba:	9207      	str	r2, [sp, #28]
 8011ebc:	2600      	movs	r6, #0
 8011ebe:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8011ec2:	6803      	ldr	r3, [r0, #0]
 8011ec4:	a907      	add	r1, sp, #28
 8011ec6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011ec8:	4798      	blx	r3
 8011eca:	792b      	ldrb	r3, [r5, #4]
 8011ecc:	b10b      	cbz	r3, 8011ed2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011ece:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8011ed2:	b00a      	add	sp, #40	@ 0x28
 8011ed4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ed8:	08025e38 	.word	0x08025e38

08011edc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011edc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ee0:	460c      	mov	r4, r1
 8011ee2:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011ee4:	b088      	sub	sp, #32
 8011ee6:	4605      	mov	r5, r0
 8011ee8:	2900      	cmp	r1, #0
 8011eea:	d06d      	beq.n	8011fc8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011eec:	4668      	mov	r0, sp
 8011eee:	f7ff fa75 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ef2:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8011ef4:	88e3      	ldrh	r3, [r4, #6]
 8011ef6:	f9bd 8000 	ldrsh.w	r8, [sp]
 8011efa:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011efe:	440b      	add	r3, r1
 8011f00:	b21b      	sxth	r3, r3
 8011f02:	4543      	cmp	r3, r8
 8011f04:	db31      	blt.n	8011f6a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011f06:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011f0a:	44c4      	add	ip, r8
 8011f0c:	fa0f fc8c 	sxth.w	ip, ip
 8011f10:	4563      	cmp	r3, ip
 8011f12:	da2a      	bge.n	8011f6a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011f14:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8011f16:	8926      	ldrh	r6, [r4, #8]
 8011f18:	4416      	add	r6, r2
 8011f1a:	b236      	sxth	r6, r6
 8011f1c:	42be      	cmp	r6, r7
 8011f1e:	db24      	blt.n	8011f6a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011f20:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011f24:	4438      	add	r0, r7
 8011f26:	b200      	sxth	r0, r0
 8011f28:	4286      	cmp	r6, r0
 8011f2a:	da1e      	bge.n	8011f6a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011f2c:	8963      	ldrh	r3, [r4, #10]
 8011f2e:	4419      	add	r1, r3
 8011f30:	b209      	sxth	r1, r1
 8011f32:	4541      	cmp	r1, r8
 8011f34:	db08      	blt.n	8011f48 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011f36:	4561      	cmp	r1, ip
 8011f38:	da06      	bge.n	8011f48 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011f3a:	89a3      	ldrh	r3, [r4, #12]
 8011f3c:	441a      	add	r2, r3
 8011f3e:	b212      	sxth	r2, r2
 8011f40:	42ba      	cmp	r2, r7
 8011f42:	db01      	blt.n	8011f48 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011f44:	4282      	cmp	r2, r0
 8011f46:	db10      	blt.n	8011f6a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011f48:	4b21      	ldr	r3, [pc, #132]	@ (8011fd0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011f4a:	9304      	str	r3, [sp, #16]
 8011f4c:	2302      	movs	r3, #2
 8011f4e:	f88d 3014 	strb.w	r3, [sp, #20]
 8011f52:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011f54:	2300      	movs	r3, #0
 8011f56:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011f5a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011f5e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011f62:	6803      	ldr	r3, [r0, #0]
 8011f64:	a904      	add	r1, sp, #16
 8011f66:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011f68:	4798      	blx	r3
 8011f6a:	1d29      	adds	r1, r5, #4
 8011f6c:	a802      	add	r0, sp, #8
 8011f6e:	f7ff fa35 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f72:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011f76:	88e0      	ldrh	r0, [r4, #6]
 8011f78:	7921      	ldrb	r1, [r4, #4]
 8011f7a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8011f7e:	8922      	ldrh	r2, [r4, #8]
 8011f80:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8011f82:	f88d 1014 	strb.w	r1, [sp, #20]
 8011f86:	eba3 0808 	sub.w	r8, r3, r8
 8011f8a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011f8e:	1bdf      	subs	r7, r3, r7
 8011f90:	b2bb      	uxth	r3, r7
 8011f92:	fa1f f888 	uxth.w	r8, r8
 8011f96:	8967      	ldrh	r7, [r4, #10]
 8011f98:	89a4      	ldrh	r4, [r4, #12]
 8011f9a:	4440      	add	r0, r8
 8011f9c:	4460      	add	r0, ip
 8011f9e:	441a      	add	r2, r3
 8011fa0:	44b8      	add	r8, r7
 8011fa2:	4423      	add	r3, r4
 8011fa4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011fa8:	4433      	add	r3, r6
 8011faa:	4432      	add	r2, r6
 8011fac:	44e0      	add	r8, ip
 8011fae:	4c09      	ldr	r4, [pc, #36]	@ (8011fd4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011fb0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011fb2:	9404      	str	r4, [sp, #16]
 8011fb4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011fb8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011fbc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011fc0:	6803      	ldr	r3, [r0, #0]
 8011fc2:	a904      	add	r1, sp, #16
 8011fc4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011fc6:	4798      	blx	r3
 8011fc8:	b008      	add	sp, #32
 8011fca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011fce:	bf00      	nop
 8011fd0:	08025e38 	.word	0x08025e38
 8011fd4:	08025e4c 	.word	0x08025e4c

08011fd8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011fd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011fda:	4604      	mov	r4, r0
 8011fdc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011fe0:	3201      	adds	r2, #1
 8011fe2:	d112      	bne.n	801200a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011fe4:	6803      	ldr	r3, [r0, #0]
 8011fe6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011fea:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011fee:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011ff2:	2500      	movs	r5, #0
 8011ff4:	9500      	str	r5, [sp, #0]
 8011ff6:	466d      	mov	r5, sp
 8011ff8:	4629      	mov	r1, r5
 8011ffa:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011ffe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012000:	4798      	blx	r3
 8012002:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012006:	e884 0003 	stmia.w	r4, {r0, r1}
 801200a:	4620      	mov	r0, r4
 801200c:	b003      	add	sp, #12
 801200e:	bd30      	pop	{r4, r5, pc}

08012010 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012010:	b513      	push	{r0, r1, r4, lr}
 8012012:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8012016:	3301      	adds	r3, #1
 8012018:	4604      	mov	r4, r0
 801201a:	d109      	bne.n	8012030 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801201c:	4601      	mov	r1, r0
 801201e:	4668      	mov	r0, sp
 8012020:	f7ff f9dc 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012024:	f8bd 3000 	ldrh.w	r3, [sp]
 8012028:	8423      	strh	r3, [r4, #32]
 801202a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801202e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8012030:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012034:	b002      	add	sp, #8
 8012036:	bd10      	pop	{r4, pc}

08012038 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012038:	b513      	push	{r0, r1, r4, lr}
 801203a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801203e:	3301      	adds	r3, #1
 8012040:	4604      	mov	r4, r0
 8012042:	d109      	bne.n	8012058 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012044:	4601      	mov	r1, r0
 8012046:	4668      	mov	r0, sp
 8012048:	f7ff f9c8 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801204c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012050:	8423      	strh	r3, [r4, #32]
 8012052:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012056:	8463      	strh	r3, [r4, #34]	@ 0x22
 8012058:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 801205c:	b002      	add	sp, #8
 801205e:	bd10      	pop	{r4, pc}

08012060 <_ZN8touchgfx6ScreenC1Ev>:
 8012060:	b570      	push	{r4, r5, r6, lr}
 8012062:	4605      	mov	r5, r0
 8012064:	4b16      	ldr	r3, [pc, #88]	@ (80120c0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8012066:	f845 3b04 	str.w	r3, [r5], #4
 801206a:	2300      	movs	r3, #0
 801206c:	8103      	strh	r3, [r0, #8]
 801206e:	8143      	strh	r3, [r0, #10]
 8012070:	8183      	strh	r3, [r0, #12]
 8012072:	81c3      	strh	r3, [r0, #14]
 8012074:	8203      	strh	r3, [r0, #16]
 8012076:	8243      	strh	r3, [r0, #18]
 8012078:	8283      	strh	r3, [r0, #20]
 801207a:	82c3      	strh	r3, [r0, #22]
 801207c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012080:	6203      	str	r3, [r0, #32]
 8012082:	8483      	strh	r3, [r0, #36]	@ 0x24
 8012084:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8012086:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801208a:	4a0e      	ldr	r2, [pc, #56]	@ (80120c4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801208c:	6343      	str	r3, [r0, #52]	@ 0x34
 801208e:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8012092:	4b0d      	ldr	r3, [pc, #52]	@ (80120c8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8012094:	6042      	str	r2, [r0, #4]
 8012096:	f9b3 6000 	ldrsh.w	r6, [r3]
 801209a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 801209c:	4a0b      	ldr	r2, [pc, #44]	@ (80120cc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801209e:	4604      	mov	r4, r0
 80120a0:	2101      	movs	r1, #1
 80120a2:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80120a6:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80120aa:	f9b2 1000 	ldrsh.w	r1, [r2]
 80120ae:	4628      	mov	r0, r5
 80120b0:	4798      	blx	r3
 80120b2:	6863      	ldr	r3, [r4, #4]
 80120b4:	4628      	mov	r0, r5
 80120b6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80120b8:	4631      	mov	r1, r6
 80120ba:	4798      	blx	r3
 80120bc:	4620      	mov	r0, r4
 80120be:	bd70      	pop	{r4, r5, r6, pc}
 80120c0:	08025e74 	.word	0x08025e74
 80120c4:	080259d0 	.word	0x080259d0
 80120c8:	20014034 	.word	0x20014034
 80120cc:	20014032 	.word	0x20014032

080120d0 <_ZN8touchgfx6Screen4drawEv>:
 80120d0:	b507      	push	{r0, r1, r2, lr}
 80120d2:	4b09      	ldr	r3, [pc, #36]	@ (80120f8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80120d4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80120d8:	4b08      	ldr	r3, [pc, #32]	@ (80120fc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80120da:	f8ad 2004 	strh.w	r2, [sp, #4]
 80120de:	f9b3 3000 	ldrsh.w	r3, [r3]
 80120e2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80120e6:	6803      	ldr	r3, [r0, #0]
 80120e8:	2100      	movs	r1, #0
 80120ea:	9100      	str	r1, [sp, #0]
 80120ec:	689b      	ldr	r3, [r3, #8]
 80120ee:	4669      	mov	r1, sp
 80120f0:	4798      	blx	r3
 80120f2:	b003      	add	sp, #12
 80120f4:	f85d fb04 	ldr.w	pc, [sp], #4
 80120f8:	20014032 	.word	0x20014032
 80120fc:	20014034 	.word	0x20014034

08012100 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012104:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012108:	2b00      	cmp	r3, #0
 801210a:	b089      	sub	sp, #36	@ 0x24
 801210c:	4680      	mov	r8, r0
 801210e:	460c      	mov	r4, r1
 8012110:	4615      	mov	r5, r2
 8012112:	dd0e      	ble.n	8012132 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012114:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012118:	2b00      	cmp	r3, #0
 801211a:	dd0a      	ble.n	8012132 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801211c:	4628      	mov	r0, r5
 801211e:	f7ff ff5b 	bl	8011fd8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012122:	4621      	mov	r1, r4
 8012124:	f7fd fe2d 	bl	800fd82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012128:	69eb      	ldr	r3, [r5, #28]
 801212a:	b928      	cbnz	r0, 8012138 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801212c:	461d      	mov	r5, r3
 801212e:	2b00      	cmp	r3, #0
 8012130:	d1f4      	bne.n	801211c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012132:	b009      	add	sp, #36	@ 0x24
 8012134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012138:	ae04      	add	r6, sp, #16
 801213a:	2b00      	cmp	r3, #0
 801213c:	f000 80b5 	beq.w	80122aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012140:	682b      	ldr	r3, [r5, #0]
 8012142:	4629      	mov	r1, r5
 8012144:	68db      	ldr	r3, [r3, #12]
 8012146:	a802      	add	r0, sp, #8
 8012148:	4798      	blx	r3
 801214a:	4628      	mov	r0, r5
 801214c:	f7ff ff60 	bl	8012010 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012150:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012154:	4407      	add	r7, r0
 8012156:	4628      	mov	r0, r5
 8012158:	f7ff ff6e 	bl	8012038 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801215c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012160:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012164:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012168:	4418      	add	r0, r3
 801216a:	4621      	mov	r1, r4
 801216c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012170:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012174:	b23f      	sxth	r7, r7
 8012176:	4630      	mov	r0, r6
 8012178:	f8ad 3016 	strh.w	r3, [sp, #22]
 801217c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012180:	f7f8 fdd6 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 8012184:	4628      	mov	r0, r5
 8012186:	f7ff ff27 	bl	8011fd8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801218a:	4602      	mov	r2, r0
 801218c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012190:	ab06      	add	r3, sp, #24
 8012192:	e883 0003 	stmia.w	r3, {r0, r1}
 8012196:	4611      	mov	r1, r2
 8012198:	4618      	mov	r0, r3
 801219a:	f7f8 fdc9 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 801219e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80121a2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80121a6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80121aa:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80121ae:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80121b2:	4299      	cmp	r1, r3
 80121b4:	d10b      	bne.n	80121ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80121b6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80121ba:	4552      	cmp	r2, sl
 80121bc:	d107      	bne.n	80121ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80121be:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80121c2:	455a      	cmp	r2, fp
 80121c4:	d103      	bne.n	80121ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80121c6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80121ca:	454a      	cmp	r2, r9
 80121cc:	d06d      	beq.n	80122aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80121ce:	f1bb 0f00 	cmp.w	fp, #0
 80121d2:	dd65      	ble.n	80122a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80121d4:	f1b9 0f00 	cmp.w	r9, #0
 80121d8:	dd62      	ble.n	80122a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80121da:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80121de:	fa1f f08a 	uxth.w	r0, sl
 80121e2:	4552      	cmp	r2, sl
 80121e4:	9000      	str	r0, [sp, #0]
 80121e6:	da12      	bge.n	801220e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80121e8:	9301      	str	r3, [sp, #4]
 80121ea:	9b00      	ldr	r3, [sp, #0]
 80121ec:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80121f0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80121f4:	1a9a      	subs	r2, r3, r2
 80121f6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80121fa:	f8ad 0014 	strh.w	r0, [sp, #20]
 80121fe:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012202:	69ea      	ldr	r2, [r5, #28]
 8012204:	4631      	mov	r1, r6
 8012206:	4640      	mov	r0, r8
 8012208:	f7ff ff7a 	bl	8012100 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801220c:	9b01      	ldr	r3, [sp, #4]
 801220e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012212:	429a      	cmp	r2, r3
 8012214:	b29f      	uxth	r7, r3
 8012216:	da0d      	bge.n	8012234 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012218:	f8ad 2010 	strh.w	r2, [sp, #16]
 801221c:	1aba      	subs	r2, r7, r2
 801221e:	f8ad a012 	strh.w	sl, [sp, #18]
 8012222:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012226:	f8ad 9016 	strh.w	r9, [sp, #22]
 801222a:	69ea      	ldr	r2, [r5, #28]
 801222c:	4631      	mov	r1, r6
 801222e:	4640      	mov	r0, r8
 8012230:	f7ff ff66 	bl	8012100 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012234:	8822      	ldrh	r2, [r4, #0]
 8012236:	88a3      	ldrh	r3, [r4, #4]
 8012238:	445f      	add	r7, fp
 801223a:	4413      	add	r3, r2
 801223c:	b29b      	uxth	r3, r3
 801223e:	b2bf      	uxth	r7, r7
 8012240:	b23a      	sxth	r2, r7
 8012242:	b219      	sxth	r1, r3
 8012244:	4291      	cmp	r1, r2
 8012246:	dd0d      	ble.n	8012264 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012248:	1bdb      	subs	r3, r3, r7
 801224a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801224e:	f8ad a012 	strh.w	sl, [sp, #18]
 8012252:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012256:	f8ad 9016 	strh.w	r9, [sp, #22]
 801225a:	69ea      	ldr	r2, [r5, #28]
 801225c:	4631      	mov	r1, r6
 801225e:	4640      	mov	r0, r8
 8012260:	f7ff ff4e 	bl	8012100 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012264:	88e2      	ldrh	r2, [r4, #6]
 8012266:	8863      	ldrh	r3, [r4, #2]
 8012268:	4413      	add	r3, r2
 801226a:	9a00      	ldr	r2, [sp, #0]
 801226c:	444a      	add	r2, r9
 801226e:	b29b      	uxth	r3, r3
 8012270:	fa1f f982 	uxth.w	r9, r2
 8012274:	fa0f f289 	sxth.w	r2, r9
 8012278:	b219      	sxth	r1, r3
 801227a:	428a      	cmp	r2, r1
 801227c:	da15      	bge.n	80122aa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801227e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012282:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012286:	f8ad 1014 	strh.w	r1, [sp, #20]
 801228a:	eba3 0309 	sub.w	r3, r3, r9
 801228e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012292:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012296:	f8ad 3016 	strh.w	r3, [sp, #22]
 801229a:	69ea      	ldr	r2, [r5, #28]
 801229c:	4631      	mov	r1, r6
 801229e:	e001      	b.n	80122a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80122a0:	69ea      	ldr	r2, [r5, #28]
 80122a2:	4621      	mov	r1, r4
 80122a4:	4640      	mov	r0, r8
 80122a6:	f7ff ff2b 	bl	8012100 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80122aa:	4628      	mov	r0, r5
 80122ac:	f7ff fe94 	bl	8011fd8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80122b0:	6861      	ldr	r1, [r4, #4]
 80122b2:	4602      	mov	r2, r0
 80122b4:	6820      	ldr	r0, [r4, #0]
 80122b6:	4633      	mov	r3, r6
 80122b8:	c303      	stmia	r3!, {r0, r1}
 80122ba:	4611      	mov	r1, r2
 80122bc:	4630      	mov	r0, r6
 80122be:	f7f8 fd37 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 80122c2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80122c6:	2b00      	cmp	r3, #0
 80122c8:	f77f af33 	ble.w	8012132 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80122cc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80122d0:	2b00      	cmp	r3, #0
 80122d2:	f77f af2e 	ble.w	8012132 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80122d6:	4628      	mov	r0, r5
 80122d8:	f7ff fe9a 	bl	8012010 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80122dc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80122e0:	1a18      	subs	r0, r3, r0
 80122e2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80122e6:	4628      	mov	r0, r5
 80122e8:	f7ff fea6 	bl	8012038 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80122ec:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80122f0:	1a18      	subs	r0, r3, r0
 80122f2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80122f6:	682b      	ldr	r3, [r5, #0]
 80122f8:	4631      	mov	r1, r6
 80122fa:	689b      	ldr	r3, [r3, #8]
 80122fc:	4628      	mov	r0, r5
 80122fe:	4798      	blx	r3
 8012300:	e717      	b.n	8012132 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012302 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012302:	b570      	push	{r4, r5, r6, lr}
 8012304:	460c      	mov	r4, r1
 8012306:	b086      	sub	sp, #24
 8012308:	1d06      	adds	r6, r0, #4
 801230a:	2300      	movs	r3, #0
 801230c:	4631      	mov	r1, r6
 801230e:	4605      	mov	r5, r0
 8012310:	a802      	add	r0, sp, #8
 8012312:	9301      	str	r3, [sp, #4]
 8012314:	f7ff f862 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012318:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801231c:	8822      	ldrh	r2, [r4, #0]
 801231e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012322:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012326:	f8ad 0014 	strh.w	r0, [sp, #20]
 801232a:	1ad2      	subs	r2, r2, r3
 801232c:	8863      	ldrh	r3, [r4, #2]
 801232e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012332:	1a5b      	subs	r3, r3, r1
 8012334:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012338:	f8ad 1016 	strh.w	r1, [sp, #22]
 801233c:	aa01      	add	r2, sp, #4
 801233e:	a904      	add	r1, sp, #16
 8012340:	4630      	mov	r0, r6
 8012342:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012346:	f7f8 fdcb 	bl	800aee0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801234a:	9a01      	ldr	r2, [sp, #4]
 801234c:	b11a      	cbz	r2, 8012356 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801234e:	4621      	mov	r1, r4
 8012350:	4628      	mov	r0, r5
 8012352:	f7ff fed5 	bl	8012100 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012356:	b006      	add	sp, #24
 8012358:	bd70      	pop	{r4, r5, r6, pc}

0801235a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801235a:	b530      	push	{r4, r5, lr}
 801235c:	4602      	mov	r2, r0
 801235e:	4604      	mov	r4, r0
 8012360:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012364:	b085      	sub	sp, #20
 8012366:	460d      	mov	r5, r1
 8012368:	6851      	ldr	r1, [r2, #4]
 801236a:	466b      	mov	r3, sp
 801236c:	c303      	stmia	r3!, {r0, r1}
 801236e:	4629      	mov	r1, r5
 8012370:	4668      	mov	r0, sp
 8012372:	f7f8 fcdd 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 8012376:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801237a:	b12b      	cbz	r3, 8012388 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801237c:	4669      	mov	r1, sp
 801237e:	4620      	mov	r0, r4
 8012380:	f7ff ffbf 	bl	8012302 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012384:	b005      	add	sp, #20
 8012386:	bd30      	pop	{r4, r5, pc}
 8012388:	3404      	adds	r4, #4
 801238a:	4621      	mov	r1, r4
 801238c:	a802      	add	r0, sp, #8
 801238e:	f7ff f825 	bl	80113dc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012392:	f8bd 3000 	ldrh.w	r3, [sp]
 8012396:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801239a:	1a9b      	subs	r3, r3, r2
 801239c:	f8ad 3000 	strh.w	r3, [sp]
 80123a0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80123a4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80123a8:	4669      	mov	r1, sp
 80123aa:	1a9b      	subs	r3, r3, r2
 80123ac:	4620      	mov	r0, r4
 80123ae:	f8ad 3002 	strh.w	r3, [sp, #2]
 80123b2:	f7f8 fd5c 	bl	800ae6e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80123b6:	e7e5      	b.n	8012384 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080123b8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80123b8:	680a      	ldr	r2, [r1, #0]
 80123ba:	460b      	mov	r3, r1
 80123bc:	6992      	ldr	r2, [r2, #24]
 80123be:	1d01      	adds	r1, r0, #4
 80123c0:	4618      	mov	r0, r3
 80123c2:	4710      	bx	r2

080123c4 <_ZN8touchgfx12TextProviderC1Ev>:
 80123c4:	b538      	push	{r3, r4, r5, lr}
 80123c6:	2500      	movs	r5, #0
 80123c8:	2302      	movs	r3, #2
 80123ca:	4604      	mov	r4, r0
 80123cc:	e9c0 5500 	strd	r5, r5, [r0]
 80123d0:	7403      	strb	r3, [r0, #16]
 80123d2:	6145      	str	r5, [r0, #20]
 80123d4:	7605      	strb	r5, [r0, #24]
 80123d6:	83c5      	strh	r5, [r0, #30]
 80123d8:	8405      	strh	r5, [r0, #32]
 80123da:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80123dc:	8705      	strh	r5, [r0, #56]	@ 0x38
 80123de:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 80123e0:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 80123e4:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 80123e8:	220e      	movs	r2, #14
 80123ea:	4629      	mov	r1, r5
 80123ec:	304c      	adds	r0, #76	@ 0x4c
 80123ee:	f011 f9fc 	bl	80237ea <memset>
 80123f2:	2301      	movs	r3, #1
 80123f4:	4620      	mov	r0, r4
 80123f6:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 80123fa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80123fe:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8012402:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8012406:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801240a:	f7f0 ffab 	bl	8003364 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801240e:	4620      	mov	r0, r4
 8012410:	bd38      	pop	{r3, r4, r5, pc}

08012412 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012412:	b530      	push	{r4, r5, lr}
 8012414:	2500      	movs	r5, #0
 8012416:	2401      	movs	r4, #1
 8012418:	6843      	ldr	r3, [r0, #4]
 801241a:	b913      	cbnz	r3, 8012422 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801241c:	6803      	ldr	r3, [r0, #0]
 801241e:	b313      	cbz	r3, 8012466 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012420:	6043      	str	r3, [r0, #4]
 8012422:	7e03      	ldrb	r3, [r0, #24]
 8012424:	b143      	cbz	r3, 8012438 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012426:	6943      	ldr	r3, [r0, #20]
 8012428:	b12b      	cbz	r3, 8012436 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801242a:	881a      	ldrh	r2, [r3, #0]
 801242c:	b11a      	cbz	r2, 8012436 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801242e:	1c9a      	adds	r2, r3, #2
 8012430:	6142      	str	r2, [r0, #20]
 8012432:	8818      	ldrh	r0, [r3, #0]
 8012434:	bd30      	pop	{r4, r5, pc}
 8012436:	7605      	strb	r5, [r0, #24]
 8012438:	6843      	ldr	r3, [r0, #4]
 801243a:	8819      	ldrh	r1, [r3, #0]
 801243c:	b199      	cbz	r1, 8012466 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801243e:	1c9a      	adds	r2, r3, #2
 8012440:	2902      	cmp	r1, #2
 8012442:	6042      	str	r2, [r0, #4]
 8012444:	d1f5      	bne.n	8012432 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012446:	7c03      	ldrb	r3, [r0, #16]
 8012448:	2b01      	cmp	r3, #1
 801244a:	d8e5      	bhi.n	8012418 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801244c:	1c5a      	adds	r2, r3, #1
 801244e:	3302      	adds	r3, #2
 8012450:	7402      	strb	r2, [r0, #16]
 8012452:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012456:	6143      	str	r3, [r0, #20]
 8012458:	2b00      	cmp	r3, #0
 801245a:	d0dd      	beq.n	8012418 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801245c:	881b      	ldrh	r3, [r3, #0]
 801245e:	2b00      	cmp	r3, #0
 8012460:	d0da      	beq.n	8012418 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012462:	7604      	strb	r4, [r0, #24]
 8012464:	e7d8      	b.n	8012418 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012466:	2000      	movs	r0, #0
 8012468:	e7e4      	b.n	8012434 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801246a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801246a:	b430      	push	{r4, r5}
 801246c:	6001      	str	r1, [r0, #0]
 801246e:	2100      	movs	r1, #0
 8012470:	6041      	str	r1, [r0, #4]
 8012472:	6815      	ldr	r5, [r2, #0]
 8012474:	6085      	str	r5, [r0, #8]
 8012476:	6852      	ldr	r2, [r2, #4]
 8012478:	6443      	str	r3, [r0, #68]	@ 0x44
 801247a:	9b02      	ldr	r3, [sp, #8]
 801247c:	60c2      	str	r2, [r0, #12]
 801247e:	7401      	strb	r1, [r0, #16]
 8012480:	6141      	str	r1, [r0, #20]
 8012482:	7601      	strb	r1, [r0, #24]
 8012484:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012486:	8401      	strh	r1, [r0, #32]
 8012488:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 801248c:	6483      	str	r3, [r0, #72]	@ 0x48
 801248e:	bc30      	pop	{r4, r5}
 8012490:	f7f0 bf68 	b.w	8003364 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08012494 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012494:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012496:	4605      	mov	r5, r0
 8012498:	4608      	mov	r0, r1
 801249a:	b1e9      	cbz	r1, 80124d8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801249c:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 80124a0:	460b      	mov	r3, r1
 80124a2:	f101 0708 	add.w	r7, r1, #8
 80124a6:	4622      	mov	r2, r4
 80124a8:	6818      	ldr	r0, [r3, #0]
 80124aa:	6859      	ldr	r1, [r3, #4]
 80124ac:	4626      	mov	r6, r4
 80124ae:	c603      	stmia	r6!, {r0, r1}
 80124b0:	3308      	adds	r3, #8
 80124b2:	42bb      	cmp	r3, r7
 80124b4:	4634      	mov	r4, r6
 80124b6:	d1f7      	bne.n	80124a8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80124b8:	6818      	ldr	r0, [r3, #0]
 80124ba:	6030      	str	r0, [r6, #0]
 80124bc:	889b      	ldrh	r3, [r3, #4]
 80124be:	80b3      	strh	r3, [r6, #4]
 80124c0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80124c4:	015b      	lsls	r3, r3, #5
 80124c6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80124ca:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 80124ce:	430b      	orrs	r3, r1
 80124d0:	425b      	negs	r3, r3
 80124d2:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 80124d6:	4610      	mov	r0, r2
 80124d8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080124da <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80124da:	b538      	push	{r3, r4, r5, lr}
 80124dc:	460c      	mov	r4, r1
 80124de:	6811      	ldr	r1, [r2, #0]
 80124e0:	4610      	mov	r0, r2
 80124e2:	68cd      	ldr	r5, [r1, #12]
 80124e4:	4619      	mov	r1, r3
 80124e6:	47a8      	blx	r5
 80124e8:	2800      	cmp	r0, #0
 80124ea:	bf08      	it	eq
 80124ec:	4620      	moveq	r0, r4
 80124ee:	bd38      	pop	{r3, r4, r5, pc}

080124f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80124f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124f4:	468c      	mov	ip, r1
 80124f6:	4605      	mov	r5, r0
 80124f8:	4614      	mov	r4, r2
 80124fa:	b942      	cbnz	r2, 801250e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 80124fc:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8012500:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8012504:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8012508:	4620      	mov	r0, r4
 801250a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801250e:	7b50      	ldrb	r0, [r2, #13]
 8012510:	8893      	ldrh	r3, [r2, #4]
 8012512:	0106      	lsls	r6, r0, #4
 8012514:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8012518:	79e6      	ldrb	r6, [r4, #7]
 801251a:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 801251e:	4316      	orrs	r6, r2
 8012520:	185a      	adds	r2, r3, r1
 8012522:	b291      	uxth	r1, r2
 8012524:	291d      	cmp	r1, #29
 8012526:	b2b7      	uxth	r7, r6
 8012528:	d87e      	bhi.n	8012628 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801252a:	2201      	movs	r2, #1
 801252c:	408a      	lsls	r2, r1
 801252e:	498a      	ldr	r1, [pc, #552]	@ (8012758 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8012530:	420a      	tst	r2, r1
 8012532:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8012536:	d12d      	bne.n	8012594 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012538:	f412 7f60 	tst.w	r2, #896	@ 0x380
 801253c:	d074      	beq.n	8012628 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801253e:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8012542:	4623      	mov	r3, r4
 8012544:	f104 0e08 	add.w	lr, r4, #8
 8012548:	4614      	mov	r4, r2
 801254a:	6818      	ldr	r0, [r3, #0]
 801254c:	6859      	ldr	r1, [r3, #4]
 801254e:	4694      	mov	ip, r2
 8012550:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012554:	3308      	adds	r3, #8
 8012556:	4573      	cmp	r3, lr
 8012558:	4662      	mov	r2, ip
 801255a:	d1f6      	bne.n	801254a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801255c:	6818      	ldr	r0, [r3, #0]
 801255e:	f8cc 0000 	str.w	r0, [ip]
 8012562:	889b      	ldrh	r3, [r3, #4]
 8012564:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012568:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 801256c:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8012570:	b2b3      	uxth	r3, r6
 8012572:	1aca      	subs	r2, r1, r3
 8012574:	b292      	uxth	r2, r2
 8012576:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 801257a:	10d2      	asrs	r2, r2, #3
 801257c:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8012580:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8012584:	4302      	orrs	r2, r0
 8012586:	1bcf      	subs	r7, r1, r7
 8012588:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 801258c:	1afb      	subs	r3, r7, r3
 801258e:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8012592:	e7b9      	b.n	8012508 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8012594:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8012598:	4623      	mov	r3, r4
 801259a:	f104 0808 	add.w	r8, r4, #8
 801259e:	4614      	mov	r4, r2
 80125a0:	6818      	ldr	r0, [r3, #0]
 80125a2:	6859      	ldr	r1, [r3, #4]
 80125a4:	4696      	mov	lr, r2
 80125a6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80125aa:	3308      	adds	r3, #8
 80125ac:	4543      	cmp	r3, r8
 80125ae:	4672      	mov	r2, lr
 80125b0:	d1f6      	bne.n	80125a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 80125b2:	6818      	ldr	r0, [r3, #0]
 80125b4:	f8ce 0000 	str.w	r0, [lr]
 80125b8:	889b      	ldrh	r3, [r3, #4]
 80125ba:	f8ae 3004 	strh.w	r3, [lr, #4]
 80125be:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 80125c0:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80125c4:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 80125c6:	f640 6333 	movw	r3, #3635	@ 0xe33
 80125ca:	4299      	cmp	r1, r3
 80125cc:	d111      	bne.n	80125f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80125ce:	f8dc 3000 	ldr.w	r3, [ip]
 80125d2:	4660      	mov	r0, ip
 80125d4:	68db      	ldr	r3, [r3, #12]
 80125d6:	4798      	blx	r3
 80125d8:	7b41      	ldrb	r1, [r0, #13]
 80125da:	00cb      	lsls	r3, r1, #3
 80125dc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80125e0:	7a03      	ldrb	r3, [r0, #8]
 80125e2:	4313      	orrs	r3, r2
 80125e4:	064a      	lsls	r2, r1, #25
 80125e6:	bf44      	itt	mi
 80125e8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80125ec:	b21b      	sxthmi	r3, r3
 80125ee:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80125f2:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 80125f6:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 80125fa:	443b      	add	r3, r7
 80125fc:	4433      	add	r3, r6
 80125fe:	b29b      	uxth	r3, r3
 8012600:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8012604:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8012608:	10db      	asrs	r3, r3, #3
 801260a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801260e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012612:	4313      	orrs	r3, r2
 8012614:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8012618:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 801261c:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8012620:	1a9b      	subs	r3, r3, r2
 8012622:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8012626:	e76f      	b.n	8012508 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8012628:	f023 0204 	bic.w	r2, r3, #4
 801262c:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8012630:	428a      	cmp	r2, r1
 8012632:	d003      	beq.n	801263c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8012634:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8012638:	4293      	cmp	r3, r2
 801263a:	d137      	bne.n	80126ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 801263c:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8012640:	4622      	mov	r2, r4
 8012642:	f104 0808 	add.w	r8, r4, #8
 8012646:	4634      	mov	r4, r6
 8012648:	6810      	ldr	r0, [r2, #0]
 801264a:	6851      	ldr	r1, [r2, #4]
 801264c:	46b6      	mov	lr, r6
 801264e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012652:	3208      	adds	r2, #8
 8012654:	4542      	cmp	r2, r8
 8012656:	4676      	mov	r6, lr
 8012658:	d1f6      	bne.n	8012648 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 801265a:	6810      	ldr	r0, [r2, #0]
 801265c:	f8ce 0000 	str.w	r0, [lr]
 8012660:	8892      	ldrh	r2, [r2, #4]
 8012662:	f8ae 2004 	strh.w	r2, [lr, #4]
 8012666:	3b01      	subs	r3, #1
 8012668:	b29b      	uxth	r3, r3
 801266a:	4662      	mov	r2, ip
 801266c:	4621      	mov	r1, r4
 801266e:	4628      	mov	r0, r5
 8012670:	f7ff ff33 	bl	80124da <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012674:	7b41      	ldrb	r1, [r0, #13]
 8012676:	00cb      	lsls	r3, r1, #3
 8012678:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801267c:	7a03      	ldrb	r3, [r0, #8]
 801267e:	0648      	lsls	r0, r1, #25
 8012680:	ea43 0302 	orr.w	r3, r3, r2
 8012684:	bf44      	itt	mi
 8012686:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801268a:	b21b      	sxthmi	r3, r3
 801268c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8012690:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8012694:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8012698:	005b      	lsls	r3, r3, #1
 801269a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801269e:	4313      	orrs	r3, r2
 80126a0:	115a      	asrs	r2, r3, #5
 80126a2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80126a6:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 80126aa:	e046      	b.n	801273a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 80126ac:	00c2      	lsls	r2, r0, #3
 80126ae:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80126b2:	7a22      	ldrb	r2, [r4, #8]
 80126b4:	430a      	orrs	r2, r1
 80126b6:	0641      	lsls	r1, r0, #25
 80126b8:	bf44      	itt	mi
 80126ba:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 80126be:	b212      	sxthmi	r2, r2
 80126c0:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 80126c4:	f640 6109 	movw	r1, #3593	@ 0xe09
 80126c8:	f023 0210 	bic.w	r2, r3, #16
 80126cc:	428a      	cmp	r2, r1
 80126ce:	d003      	beq.n	80126d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 80126d0:	f640 6213 	movw	r2, #3603	@ 0xe13
 80126d4:	4293      	cmp	r3, r2
 80126d6:	d13d      	bne.n	8012754 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 80126d8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80126dc:	f104 0808 	add.w	r8, r4, #8
 80126e0:	4696      	mov	lr, r2
 80126e2:	6820      	ldr	r0, [r4, #0]
 80126e4:	6861      	ldr	r1, [r4, #4]
 80126e6:	4616      	mov	r6, r2
 80126e8:	c603      	stmia	r6!, {r0, r1}
 80126ea:	3408      	adds	r4, #8
 80126ec:	4544      	cmp	r4, r8
 80126ee:	4632      	mov	r2, r6
 80126f0:	d1f7      	bne.n	80126e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 80126f2:	6820      	ldr	r0, [r4, #0]
 80126f4:	6030      	str	r0, [r6, #0]
 80126f6:	88a1      	ldrh	r1, [r4, #4]
 80126f8:	80b1      	strh	r1, [r6, #4]
 80126fa:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 80126fe:	0076      	lsls	r6, r6, #1
 8012700:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8012704:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8012708:	4316      	orrs	r6, r2
 801270a:	f640 6213 	movw	r2, #3603	@ 0xe13
 801270e:	4293      	cmp	r3, r2
 8012710:	bf1a      	itte	ne
 8012712:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012716:	b29b      	uxthne	r3, r3
 8012718:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 801271c:	4662      	mov	r2, ip
 801271e:	4671      	mov	r1, lr
 8012720:	4628      	mov	r0, r5
 8012722:	4674      	mov	r4, lr
 8012724:	f7ff fed9 	bl	80124da <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012728:	7b43      	ldrb	r3, [r0, #13]
 801272a:	7a82      	ldrb	r2, [r0, #10]
 801272c:	005b      	lsls	r3, r3, #1
 801272e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012732:	4313      	orrs	r3, r2
 8012734:	1af6      	subs	r6, r6, r3
 8012736:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 801273a:	7b61      	ldrb	r1, [r4, #13]
 801273c:	00cb      	lsls	r3, r1, #3
 801273e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012742:	7a23      	ldrb	r3, [r4, #8]
 8012744:	4313      	orrs	r3, r2
 8012746:	064a      	lsls	r2, r1, #25
 8012748:	bf44      	itt	mi
 801274a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801274e:	b21b      	sxthmi	r3, r3
 8012750:	1bdb      	subs	r3, r3, r7
 8012752:	e71c      	b.n	801258e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012754:	2300      	movs	r3, #0
 8012756:	e7a6      	b.n	80126a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8012758:	3fc00079 	.word	0x3fc00079

0801275c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801275c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012760:	4604      	mov	r4, r0
 8012762:	b942      	cbnz	r2, 8012776 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012764:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012768:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 801276c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8012770:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8012774:	e047      	b.n	8012806 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012776:	7b51      	ldrb	r1, [r2, #13]
 8012778:	8893      	ldrh	r3, [r2, #4]
 801277a:	010d      	lsls	r5, r1, #4
 801277c:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8012780:	79d5      	ldrb	r5, [r2, #7]
 8012782:	4305      	orrs	r5, r0
 8012784:	2d04      	cmp	r5, #4
 8012786:	bfcc      	ite	gt
 8012788:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801278c:	f04f 0e01 	movle.w	lr, #1
 8012790:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8012794:	f200 80ab 	bhi.w	80128ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012798:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 801279c:	4283      	cmp	r3, r0
 801279e:	d216      	bcs.n	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127a0:	f240 605b 	movw	r0, #1627	@ 0x65b
 80127a4:	4283      	cmp	r3, r0
 80127a6:	d859      	bhi.n	801285c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80127a8:	f240 6057 	movw	r0, #1623	@ 0x657
 80127ac:	4283      	cmp	r3, r0
 80127ae:	d20e      	bcs.n	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127b0:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80127b4:	d24a      	bcs.n	801284c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80127b6:	f240 604e 	movw	r0, #1614	@ 0x64e
 80127ba:	4283      	cmp	r3, r0
 80127bc:	d207      	bcs.n	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127be:	f240 601a 	movw	r0, #1562	@ 0x61a
 80127c2:	4283      	cmp	r3, r0
 80127c4:	d02a      	beq.n	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80127c6:	d821      	bhi.n	801280c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80127c8:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 80127cc:	d35b      	bcc.n	8012886 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80127ce:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 80127d2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80127d6:	f040 80d0 	bne.w	801297a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80127da:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 80127de:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80127e2:	f040 80ca 	bne.w	801297a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80127e6:	00cb      	lsls	r3, r1, #3
 80127e8:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80127ec:	7a13      	ldrb	r3, [r2, #8]
 80127ee:	0649      	lsls	r1, r1, #25
 80127f0:	ea43 0300 	orr.w	r3, r3, r0
 80127f4:	bf44      	itt	mi
 80127f6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80127fa:	b21b      	sxthmi	r3, r3
 80127fc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012800:	1b5d      	subs	r5, r3, r5
 8012802:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012806:	4610      	mov	r0, r2
 8012808:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801280c:	f240 604b 	movw	r0, #1611	@ 0x64b
 8012810:	4283      	cmp	r3, r0
 8012812:	d338      	bcc.n	8012886 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012814:	f240 604c 	movw	r0, #1612	@ 0x64c
 8012818:	4283      	cmp	r3, r0
 801281a:	d9d8      	bls.n	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801281c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8012820:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8012824:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012828:	f040 80f2 	bne.w	8012a10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801282c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012830:	f040 80ee 	bne.w	8012a10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012834:	00cb      	lsls	r3, r1, #3
 8012836:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801283a:	7a13      	ldrb	r3, [r2, #8]
 801283c:	064e      	lsls	r6, r1, #25
 801283e:	ea43 0300 	orr.w	r3, r3, r0
 8012842:	bf44      	itt	mi
 8012844:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012848:	b21b      	sxthmi	r3, r3
 801284a:	e7d9      	b.n	8012800 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801284c:	f240 6054 	movw	r0, #1620	@ 0x654
 8012850:	4283      	cmp	r3, r0
 8012852:	d8e3      	bhi.n	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012854:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8012858:	d9e0      	bls.n	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801285a:	e7b8      	b.n	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801285c:	f240 6074 	movw	r0, #1652	@ 0x674
 8012860:	4283      	cmp	r3, r0
 8012862:	d0b4      	beq.n	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012864:	d82d      	bhi.n	80128c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012866:	f240 605e 	movw	r0, #1630	@ 0x65e
 801286a:	4283      	cmp	r3, r0
 801286c:	d804      	bhi.n	8012878 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801286e:	f240 605d 	movw	r0, #1629	@ 0x65d
 8012872:	4283      	cmp	r3, r0
 8012874:	d3d2      	bcc.n	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012876:	e7aa      	b.n	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012878:	f240 605f 	movw	r0, #1631	@ 0x65f
 801287c:	4283      	cmp	r3, r0
 801287e:	d0cd      	beq.n	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012880:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8012884:	d0a3      	beq.n	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012886:	00cb      	lsls	r3, r1, #3
 8012888:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801288c:	7a13      	ldrb	r3, [r2, #8]
 801288e:	0649      	lsls	r1, r1, #25
 8012890:	ea43 0300 	orr.w	r3, r3, r0
 8012894:	bf44      	itt	mi
 8012896:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801289a:	b21b      	sxthmi	r3, r3
 801289c:	1b5d      	subs	r5, r3, r5
 801289e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80128a2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80128a6:	7b53      	ldrb	r3, [r2, #13]
 80128a8:	015b      	lsls	r3, r3, #5
 80128aa:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80128ae:	7993      	ldrb	r3, [r2, #6]
 80128b0:	430b      	orrs	r3, r1
 80128b2:	005b      	lsls	r3, r3, #1
 80128b4:	2105      	movs	r1, #5
 80128b6:	fb93 f3f1 	sdiv	r3, r3, r1
 80128ba:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80128be:	440b      	add	r3, r1
 80128c0:	e756      	b.n	8012770 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80128c2:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 80128c6:	4283      	cmp	r3, r0
 80128c8:	d809      	bhi.n	80128de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80128ca:	f240 60df 	movw	r0, #1759	@ 0x6df
 80128ce:	4283      	cmp	r3, r0
 80128d0:	f4bf af7d 	bcs.w	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80128d4:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 80128d8:	2b05      	cmp	r3, #5
 80128da:	d8d4      	bhi.n	8012886 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80128dc:	e777      	b.n	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80128de:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 80128e2:	4283      	cmp	r3, r0
 80128e4:	d09a      	beq.n	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80128e6:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 80128ea:	4283      	cmp	r3, r0
 80128ec:	e7ca      	b.n	8012884 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80128ee:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 80128f2:	d22b      	bcs.n	801294c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80128f4:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 80128f8:	4283      	cmp	r3, r0
 80128fa:	d28f      	bcs.n	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80128fc:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8012900:	4283      	cmp	r3, r0
 8012902:	d816      	bhi.n	8012932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012904:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8012908:	4283      	cmp	r3, r0
 801290a:	f4bf af60 	bcs.w	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801290e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8012912:	4283      	cmp	r3, r0
 8012914:	d80a      	bhi.n	801292c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012916:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801291a:	4283      	cmp	r3, r0
 801291c:	f4bf af57 	bcs.w	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012920:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8012924:	4283      	cmp	r3, r0
 8012926:	f43f af79 	beq.w	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801292a:	e7ac      	b.n	8012886 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801292c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8012930:	e7f8      	b.n	8012924 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012932:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8012936:	4283      	cmp	r3, r0
 8012938:	d802      	bhi.n	8012940 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801293a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801293e:	e798      	b.n	8012872 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012940:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8012944:	4283      	cmp	r3, r0
 8012946:	f47f af42 	bne.w	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801294a:	e767      	b.n	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801294c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8012950:	4283      	cmp	r3, r0
 8012952:	f43f af63 	beq.w	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012956:	d802      	bhi.n	801295e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012958:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 801295c:	e7f2      	b.n	8012944 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801295e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8012962:	4283      	cmp	r3, r0
 8012964:	d805      	bhi.n	8012972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012966:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801296a:	4283      	cmp	r3, r0
 801296c:	f4ff af2f 	bcc.w	80127ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012970:	e754      	b.n	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012972:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8012976:	4283      	cmp	r3, r0
 8012978:	e7af      	b.n	80128da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801297a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801297e:	4617      	mov	r7, r2
 8012980:	f102 0808 	add.w	r8, r2, #8
 8012984:	4666      	mov	r6, ip
 8012986:	6838      	ldr	r0, [r7, #0]
 8012988:	6879      	ldr	r1, [r7, #4]
 801298a:	46e6      	mov	lr, ip
 801298c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012990:	3708      	adds	r7, #8
 8012992:	4547      	cmp	r7, r8
 8012994:	46f4      	mov	ip, lr
 8012996:	d1f6      	bne.n	8012986 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8012998:	6838      	ldr	r0, [r7, #0]
 801299a:	f8ce 0000 	str.w	r0, [lr]
 801299e:	88b9      	ldrh	r1, [r7, #4]
 80129a0:	f8ae 1004 	strh.w	r1, [lr, #4]
 80129a4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80129a8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80129ac:	d009      	beq.n	80129c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80129ae:	7b51      	ldrb	r1, [r2, #13]
 80129b0:	7992      	ldrb	r2, [r2, #6]
 80129b2:	0149      	lsls	r1, r1, #5
 80129b4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80129b8:	4311      	orrs	r1, r2
 80129ba:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80129be:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80129c2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80129c6:	b2ad      	uxth	r5, r5
 80129c8:	d00d      	beq.n	80129e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80129ca:	442b      	add	r3, r5
 80129cc:	b29b      	uxth	r3, r3
 80129ce:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80129d2:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80129d6:	10db      	asrs	r3, r3, #3
 80129d8:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80129dc:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80129e0:	4313      	orrs	r3, r2
 80129e2:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80129e6:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80129ea:	00cb      	lsls	r3, r1, #3
 80129ec:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80129f0:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80129f4:	064f      	lsls	r7, r1, #25
 80129f6:	ea43 0302 	orr.w	r3, r3, r2
 80129fa:	bf44      	itt	mi
 80129fc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012a00:	b21b      	sxthmi	r3, r3
 8012a02:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012a06:	1b5b      	subs	r3, r3, r5
 8012a08:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8012a0c:	4632      	mov	r2, r6
 8012a0e:	e6fa      	b.n	8012806 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012a10:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8012a14:	4617      	mov	r7, r2
 8012a16:	f102 0908 	add.w	r9, r2, #8
 8012a1a:	4666      	mov	r6, ip
 8012a1c:	6838      	ldr	r0, [r7, #0]
 8012a1e:	6879      	ldr	r1, [r7, #4]
 8012a20:	46e0      	mov	r8, ip
 8012a22:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8012a26:	3708      	adds	r7, #8
 8012a28:	454f      	cmp	r7, r9
 8012a2a:	46c4      	mov	ip, r8
 8012a2c:	d1f6      	bne.n	8012a1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8012a2e:	6838      	ldr	r0, [r7, #0]
 8012a30:	f8c8 0000 	str.w	r0, [r8]
 8012a34:	88b9      	ldrh	r1, [r7, #4]
 8012a36:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012a3a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8012a3e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012a42:	d009      	beq.n	8012a58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8012a44:	7b51      	ldrb	r1, [r2, #13]
 8012a46:	7992      	ldrb	r2, [r2, #6]
 8012a48:	0149      	lsls	r1, r1, #5
 8012a4a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012a4e:	4311      	orrs	r1, r2
 8012a50:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012a54:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8012a58:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012a5c:	d00e      	beq.n	8012a7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8012a5e:	eba3 030e 	sub.w	r3, r3, lr
 8012a62:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8012a66:	b29b      	uxth	r3, r3
 8012a68:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012a6c:	10db      	asrs	r3, r3, #3
 8012a6e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012a72:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012a76:	4313      	orrs	r3, r2
 8012a78:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8012a7c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8012a80:	00cb      	lsls	r3, r1, #3
 8012a82:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012a86:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8012a8a:	0648      	lsls	r0, r1, #25
 8012a8c:	ea43 0302 	orr.w	r3, r3, r2
 8012a90:	bf44      	itt	mi
 8012a92:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012a96:	b21b      	sxthmi	r3, r3
 8012a98:	1b5d      	subs	r5, r3, r5
 8012a9a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012a9e:	e7b5      	b.n	8012a0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012aa0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012aa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012aa4:	461e      	mov	r6, r3
 8012aa6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012aa8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012aac:	4604      	mov	r4, r0
 8012aae:	4617      	mov	r7, r2
 8012ab0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012ab4:	f7f0 fc14 	bl	80032e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012ab8:	4605      	mov	r5, r0
 8012aba:	b918      	cbnz	r0, 8012ac4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012abc:	6030      	str	r0, [r6, #0]
 8012abe:	4628      	mov	r0, r5
 8012ac0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ac4:	683b      	ldr	r3, [r7, #0]
 8012ac6:	4601      	mov	r1, r0
 8012ac8:	68db      	ldr	r3, [r3, #12]
 8012aca:	4638      	mov	r0, r7
 8012acc:	4798      	blx	r3
 8012ace:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8012ad2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8012ad6:	4602      	mov	r2, r0
 8012ad8:	6030      	str	r0, [r6, #0]
 8012ada:	d213      	bcs.n	8012b04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012adc:	4643      	mov	r3, r8
 8012ade:	4639      	mov	r1, r7
 8012ae0:	4620      	mov	r0, r4
 8012ae2:	f7ff fe3b 	bl	801275c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012ae6:	6030      	str	r0, [r6, #0]
 8012ae8:	6833      	ldr	r3, [r6, #0]
 8012aea:	b143      	cbz	r3, 8012afe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012aec:	7b5a      	ldrb	r2, [r3, #13]
 8012aee:	7a9b      	ldrb	r3, [r3, #10]
 8012af0:	0052      	lsls	r2, r2, #1
 8012af2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8012af6:	4313      	orrs	r3, r2
 8012af8:	bf0c      	ite	eq
 8012afa:	2301      	moveq	r3, #1
 8012afc:	2300      	movne	r3, #0
 8012afe:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8012b02:	e7dc      	b.n	8012abe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012b04:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012b08:	b29b      	uxth	r3, r3
 8012b0a:	2b7f      	cmp	r3, #127	@ 0x7f
 8012b0c:	d804      	bhi.n	8012b18 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012b0e:	4639      	mov	r1, r7
 8012b10:	4620      	mov	r0, r4
 8012b12:	f7ff fced 	bl	80124f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012b16:	e7e6      	b.n	8012ae6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012b18:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8012b1c:	2b00      	cmp	r3, #0
 8012b1e:	d0e3      	beq.n	8012ae8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012b20:	f640 1302 	movw	r3, #2306	@ 0x902
 8012b24:	429d      	cmp	r5, r3
 8012b26:	d1df      	bne.n	8012ae8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012b28:	4601      	mov	r1, r0
 8012b2a:	4620      	mov	r0, r4
 8012b2c:	f7ff fcb2 	bl	8012494 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012b30:	e7d9      	b.n	8012ae6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08012b32 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012b32:	b510      	push	{r4, lr}
 8012b34:	4604      	mov	r4, r0
 8012b36:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8012b3a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012b3c:	b1f1      	cbz	r1, 8012b7c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012b3e:	2b0a      	cmp	r3, #10
 8012b40:	d02f      	beq.n	8012ba2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012b42:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8012b44:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012b48:	3901      	subs	r1, #1
 8012b4a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8012b4c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8012b50:	1c51      	adds	r1, r2, #1
 8012b52:	b289      	uxth	r1, r1
 8012b54:	2901      	cmp	r1, #1
 8012b56:	bf84      	itt	hi
 8012b58:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012b5c:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8012b5e:	f103 0201 	add.w	r2, r3, #1
 8012b62:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012b64:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012b66:	bf98      	it	ls
 8012b68:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8012b6a:	4413      	add	r3, r2
 8012b6c:	b29b      	uxth	r3, r3
 8012b6e:	2b09      	cmp	r3, #9
 8012b70:	bf88      	it	hi
 8012b72:	3b0a      	subhi	r3, #10
 8012b74:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012b78:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012b7a:	e7dc      	b.n	8012b36 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012b7c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012b7e:	2b0a      	cmp	r3, #10
 8012b80:	d00f      	beq.n	8012ba2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012b82:	4620      	mov	r0, r4
 8012b84:	f7ff fc45 	bl	8012412 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012b88:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012b8a:	1c5a      	adds	r2, r3, #1
 8012b8c:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012b8e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012b90:	4413      	add	r3, r2
 8012b92:	b29b      	uxth	r3, r3
 8012b94:	2b09      	cmp	r3, #9
 8012b96:	bf88      	it	hi
 8012b98:	3b0a      	subhi	r3, #10
 8012b9a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012b9e:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012ba0:	e7ec      	b.n	8012b7c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012ba2:	bd10      	pop	{r4, pc}

08012ba4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012ba4:	b538      	push	{r3, r4, r5, lr}
 8012ba6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012ba8:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012bac:	4604      	mov	r4, r0
 8012bae:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8012bb0:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8012bb2:	3a01      	subs	r2, #1
 8012bb4:	8702      	strh	r2, [r0, #56]	@ 0x38
 8012bb6:	1c5a      	adds	r2, r3, #1
 8012bb8:	b292      	uxth	r2, r2
 8012bba:	2a09      	cmp	r2, #9
 8012bbc:	bf86      	itte	hi
 8012bbe:	3b09      	subhi	r3, #9
 8012bc0:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8012bc2:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8012bc4:	f7ff ffb5 	bl	8012b32 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012bc8:	8c23      	ldrh	r3, [r4, #32]
 8012bca:	2b01      	cmp	r3, #1
 8012bcc:	bf9c      	itt	ls
 8012bce:	3301      	addls	r3, #1
 8012bd0:	8423      	strhls	r3, [r4, #32]
 8012bd2:	8be3      	ldrh	r3, [r4, #30]
 8012bd4:	b90b      	cbnz	r3, 8012bda <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012bd6:	2302      	movs	r3, #2
 8012bd8:	83e3      	strh	r3, [r4, #30]
 8012bda:	8be3      	ldrh	r3, [r4, #30]
 8012bdc:	3b01      	subs	r3, #1
 8012bde:	b29b      	uxth	r3, r3
 8012be0:	83e3      	strh	r3, [r4, #30]
 8012be2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012be6:	4628      	mov	r0, r5
 8012be8:	8365      	strh	r5, [r4, #26]
 8012bea:	bd38      	pop	{r3, r4, r5, pc}

08012bec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012bec:	428a      	cmp	r2, r1
 8012bee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012bf2:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8012bf4:	d931      	bls.n	8012c5a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8012bf6:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8012bf8:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8012bfc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8012c00:	19ee      	adds	r6, r5, r7
 8012c02:	1a54      	subs	r4, r2, r1
 8012c04:	3e01      	subs	r6, #1
 8012c06:	fa1f fe84 	uxth.w	lr, r4
 8012c0a:	b2b4      	uxth	r4, r6
 8012c0c:	eba4 090e 	sub.w	r9, r4, lr
 8012c10:	fa1f f989 	uxth.w	r9, r9
 8012c14:	2c09      	cmp	r4, #9
 8012c16:	4626      	mov	r6, r4
 8012c18:	bf88      	it	hi
 8012c1a:	f1a4 060a 	subhi.w	r6, r4, #10
 8012c1e:	f1bc 0f00 	cmp.w	ip, #0
 8012c22:	bf08      	it	eq
 8012c24:	f04f 0c02 	moveq.w	ip, #2
 8012c28:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012c2c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012c30:	fa1f fc8c 	uxth.w	ip, ip
 8012c34:	3c01      	subs	r4, #1
 8012c36:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8012c3a:	b2a4      	uxth	r4, r4
 8012c3c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012c40:	454c      	cmp	r4, r9
 8012c42:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8012c46:	d1e5      	bne.n	8012c14 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012c48:	eba5 050e 	sub.w	r5, r5, lr
 8012c4c:	eb0e 0408 	add.w	r4, lr, r8
 8012c50:	8705      	strh	r5, [r0, #56]	@ 0x38
 8012c52:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8012c56:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8012c5a:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8012c5c:	1a64      	subs	r4, r4, r1
 8012c5e:	4439      	add	r1, r7
 8012c60:	b289      	uxth	r1, r1
 8012c62:	2909      	cmp	r1, #9
 8012c64:	bf88      	it	hi
 8012c66:	390a      	subhi	r1, #10
 8012c68:	8704      	strh	r4, [r0, #56]	@ 0x38
 8012c6a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012c6c:	250a      	movs	r5, #10
 8012c6e:	b18a      	cbz	r2, 8012c94 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8012c70:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8012c72:	3a01      	subs	r2, #1
 8012c74:	b292      	uxth	r2, r2
 8012c76:	3101      	adds	r1, #1
 8012c78:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012c7c:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012c7e:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012c80:	b901      	cbnz	r1, 8012c84 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8012c82:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012c84:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012c86:	3901      	subs	r1, #1
 8012c88:	b289      	uxth	r1, r1
 8012c8a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012c8c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012c90:	844c      	strh	r4, [r1, #34]	@ 0x22
 8012c92:	e7ec      	b.n	8012c6e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8012c94:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012c98:	f7ff bf4b 	b.w	8012b32 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08012c9c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8012c9c:	b570      	push	{r4, r5, r6, lr}
 8012c9e:	2500      	movs	r5, #0
 8012ca0:	4295      	cmp	r5, r2
 8012ca2:	d011      	beq.n	8012cc8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8012ca4:	8bc4      	ldrh	r4, [r0, #30]
 8012ca6:	f831 6b02 	ldrh.w	r6, [r1], #2
 8012caa:	4414      	add	r4, r2
 8012cac:	3c01      	subs	r4, #1
 8012cae:	1b64      	subs	r4, r4, r5
 8012cb0:	b2a4      	uxth	r4, r4
 8012cb2:	2c01      	cmp	r4, #1
 8012cb4:	bf88      	it	hi
 8012cb6:	3c02      	subhi	r4, #2
 8012cb8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012cbc:	8b64      	ldrh	r4, [r4, #26]
 8012cbe:	42b4      	cmp	r4, r6
 8012cc0:	d117      	bne.n	8012cf2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012cc2:	3501      	adds	r5, #1
 8012cc4:	b2ad      	uxth	r5, r5
 8012cc6:	e7eb      	b.n	8012ca0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012cc8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012ccc:	2400      	movs	r4, #0
 8012cce:	4413      	add	r3, r2
 8012cd0:	b2a2      	uxth	r2, r4
 8012cd2:	429a      	cmp	r2, r3
 8012cd4:	da0f      	bge.n	8012cf6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8012cd6:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8012cd8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8012cdc:	4432      	add	r2, r6
 8012cde:	b292      	uxth	r2, r2
 8012ce0:	2a09      	cmp	r2, #9
 8012ce2:	bf88      	it	hi
 8012ce4:	3a0a      	subhi	r2, #10
 8012ce6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012cea:	3401      	adds	r4, #1
 8012cec:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8012cee:	42aa      	cmp	r2, r5
 8012cf0:	d0ee      	beq.n	8012cd0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8012cf2:	2000      	movs	r0, #0
 8012cf4:	bd70      	pop	{r4, r5, r6, pc}
 8012cf6:	2001      	movs	r0, #1
 8012cf8:	e7fc      	b.n	8012cf4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08012cfa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012cfa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cfe:	4605      	mov	r5, r0
 8012d00:	4616      	mov	r6, r2
 8012d02:	1c8c      	adds	r4, r1, #2
 8012d04:	8809      	ldrh	r1, [r1, #0]
 8012d06:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012d0a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012d0e:	42b3      	cmp	r3, r6
 8012d10:	d124      	bne.n	8012d5c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012d12:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012d16:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012d1a:	f001 070f 	and.w	r7, r1, #15
 8012d1e:	f8cd 8000 	str.w	r8, [sp]
 8012d22:	464b      	mov	r3, r9
 8012d24:	4652      	mov	r2, sl
 8012d26:	4621      	mov	r1, r4
 8012d28:	4628      	mov	r0, r5
 8012d2a:	f7ff ffb7 	bl	8012c9c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012d2e:	4683      	mov	fp, r0
 8012d30:	b168      	cbz	r0, 8012d4e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012d32:	eb0a 0109 	add.w	r1, sl, r9
 8012d36:	4441      	add	r1, r8
 8012d38:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012d3c:	463a      	mov	r2, r7
 8012d3e:	4649      	mov	r1, r9
 8012d40:	4628      	mov	r0, r5
 8012d42:	f7ff ff53 	bl	8012bec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012d46:	4658      	mov	r0, fp
 8012d48:	b003      	add	sp, #12
 8012d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d4e:	eb07 010a 	add.w	r1, r7, sl
 8012d52:	4449      	add	r1, r9
 8012d54:	4441      	add	r1, r8
 8012d56:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012d5a:	e7d2      	b.n	8012d02 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012d5c:	f04f 0b00 	mov.w	fp, #0
 8012d60:	e7f1      	b.n	8012d46 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012d62 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012d62:	b570      	push	{r4, r5, r6, lr}
 8012d64:	8810      	ldrh	r0, [r2, #0]
 8012d66:	4298      	cmp	r0, r3
 8012d68:	d817      	bhi.n	8012d9a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012d6a:	1e48      	subs	r0, r1, #1
 8012d6c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012d70:	4298      	cmp	r0, r3
 8012d72:	d312      	bcc.n	8012d9a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012d74:	2400      	movs	r4, #0
 8012d76:	428c      	cmp	r4, r1
 8012d78:	d20f      	bcs.n	8012d9a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012d7a:	1860      	adds	r0, r4, r1
 8012d7c:	1040      	asrs	r0, r0, #1
 8012d7e:	0085      	lsls	r5, r0, #2
 8012d80:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012d84:	42b3      	cmp	r3, r6
 8012d86:	d902      	bls.n	8012d8e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012d88:	3001      	adds	r0, #1
 8012d8a:	b284      	uxth	r4, r0
 8012d8c:	e7f3      	b.n	8012d76 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012d8e:	d201      	bcs.n	8012d94 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012d90:	b281      	uxth	r1, r0
 8012d92:	e7f0      	b.n	8012d76 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012d94:	442a      	add	r2, r5
 8012d96:	8850      	ldrh	r0, [r2, #2]
 8012d98:	bd70      	pop	{r4, r5, r6, pc}
 8012d9a:	2000      	movs	r0, #0
 8012d9c:	e7fc      	b.n	8012d98 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012d9e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012d9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012da2:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8012da4:	886f      	ldrh	r7, [r5, #2]
 8012da6:	4604      	mov	r4, r0
 8012da8:	087f      	lsrs	r7, r7, #1
 8012daa:	260b      	movs	r6, #11
 8012dac:	3e01      	subs	r6, #1
 8012dae:	d013      	beq.n	8012dd8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012db0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012db2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012db6:	462a      	mov	r2, r5
 8012db8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012dbc:	4639      	mov	r1, r7
 8012dbe:	4643      	mov	r3, r8
 8012dc0:	4620      	mov	r0, r4
 8012dc2:	f7ff ffce 	bl	8012d62 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012dc6:	b138      	cbz	r0, 8012dd8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012dc8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012dcc:	4642      	mov	r2, r8
 8012dce:	4620      	mov	r0, r4
 8012dd0:	f7ff ff93 	bl	8012cfa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012dd4:	2800      	cmp	r0, #0
 8012dd6:	d1e9      	bne.n	8012dac <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012dd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012ddc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012ddc:	b570      	push	{r4, r5, r6, lr}
 8012dde:	694a      	ldr	r2, [r1, #20]
 8012de0:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8012de2:	684b      	ldr	r3, [r1, #4]
 8012de4:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8012de6:	1b54      	subs	r4, r2, r5
 8012de8:	f000 8106 	beq.w	8012ff8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8012dec:	1b9b      	subs	r3, r3, r6
 8012dee:	d003      	beq.n	8012df8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012df0:	4363      	muls	r3, r4
 8012df2:	2210      	movs	r2, #16
 8012df4:	fb93 f3f2 	sdiv	r3, r3, r2
 8012df8:	680c      	ldr	r4, [r1, #0]
 8012dfa:	698a      	ldr	r2, [r1, #24]
 8012dfc:	1b65      	subs	r5, r4, r5
 8012dfe:	f000 80fd 	beq.w	8012ffc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8012e02:	1b92      	subs	r2, r2, r6
 8012e04:	d003      	beq.n	8012e0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012e06:	436a      	muls	r2, r5
 8012e08:	2410      	movs	r4, #16
 8012e0a:	fb92 f2f4 	sdiv	r2, r2, r4
 8012e0e:	1a9b      	subs	r3, r3, r2
 8012e10:	ee07 3a90 	vmov	s15, r3
 8012e14:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8013038 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012e18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e1c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012e20:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012e24:	460a      	mov	r2, r1
 8012e26:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012e2a:	4603      	mov	r3, r0
 8012e2c:	f100 040c 	add.w	r4, r0, #12
 8012e30:	eeb1 6a43 	vneg.f32	s12, s6
 8012e34:	edd2 7a02 	vldr	s15, [r2, #8]
 8012e38:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012e3c:	3214      	adds	r2, #20
 8012e3e:	ece3 6a01 	vstmia	r3!, {s13}
 8012e42:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012e46:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012e4a:	429c      	cmp	r4, r3
 8012e4c:	edc3 7a02 	vstr	s15, [r3, #8]
 8012e50:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012e54:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012e58:	edc3 7a05 	vstr	s15, [r3, #20]
 8012e5c:	d1ea      	bne.n	8012e34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012e5e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012e60:	698b      	ldr	r3, [r1, #24]
 8012e62:	edd0 4a02 	vldr	s9, [r0, #8]
 8012e66:	edd0 3a00 	vldr	s7, [r0]
 8012e6a:	edd0 6a01 	vldr	s13, [r0, #4]
 8012e6e:	ed90 5a05 	vldr	s10, [r0, #20]
 8012e72:	ed90 2a03 	vldr	s4, [r0, #12]
 8012e76:	edd0 5a04 	vldr	s11, [r0, #16]
 8012e7a:	ed90 1a07 	vldr	s2, [r0, #28]
 8012e7e:	edd0 2a06 	vldr	s5, [r0, #24]
 8012e82:	1a9b      	subs	r3, r3, r2
 8012e84:	ee07 3a90 	vmov	s15, r3
 8012e88:	684b      	ldr	r3, [r1, #4]
 8012e8a:	1a9b      	subs	r3, r3, r2
 8012e8c:	ee07 3a10 	vmov	s14, r3
 8012e90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e94:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012e98:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012e9c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012ea0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ea4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012ea8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012eac:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012eb0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012eb4:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012eb8:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012ebc:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8012ec0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012ec2:	694a      	ldr	r2, [r1, #20]
 8012ec4:	1b13      	subs	r3, r2, r4
 8012ec6:	ee07 3a10 	vmov	s14, r3
 8012eca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ece:	680b      	ldr	r3, [r1, #0]
 8012ed0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012ed4:	1b1b      	subs	r3, r3, r4
 8012ed6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012eda:	ee07 3a10 	vmov	s14, r3
 8012ede:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ee2:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012ee6:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012eea:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012eee:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8012ef2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012ef4:	698b      	ldr	r3, [r1, #24]
 8012ef6:	1a9b      	subs	r3, r3, r2
 8012ef8:	ee06 3a90 	vmov	s13, r3
 8012efc:	684b      	ldr	r3, [r1, #4]
 8012efe:	1a9b      	subs	r3, r3, r2
 8012f00:	ee07 3a10 	vmov	s14, r3
 8012f04:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012f08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f0c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012f10:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012f14:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012f18:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012f1c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012f20:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8012f24:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012f26:	694a      	ldr	r2, [r1, #20]
 8012f28:	1b13      	subs	r3, r2, r4
 8012f2a:	ee07 3a10 	vmov	s14, r3
 8012f2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f32:	680b      	ldr	r3, [r1, #0]
 8012f34:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012f38:	1b1b      	subs	r3, r3, r4
 8012f3a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012f3e:	ee07 3a10 	vmov	s14, r3
 8012f42:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f46:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012f4a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012f4e:	edd0 5a08 	vldr	s11, [r0, #32]
 8012f52:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012f56:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012f5a:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8012f5e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012f60:	698b      	ldr	r3, [r1, #24]
 8012f62:	1a9b      	subs	r3, r3, r2
 8012f64:	ee07 3a10 	vmov	s14, r3
 8012f68:	684b      	ldr	r3, [r1, #4]
 8012f6a:	1a9b      	subs	r3, r3, r2
 8012f6c:	ee01 3a90 	vmov	s3, r3
 8012f70:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f74:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012f78:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012f7c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012f80:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012f84:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012f88:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012f8c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012f90:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012f94:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012f96:	694a      	ldr	r2, [r1, #20]
 8012f98:	1b13      	subs	r3, r2, r4
 8012f9a:	ee03 3a10 	vmov	s6, r3
 8012f9e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012fa2:	680b      	ldr	r3, [r1, #0]
 8012fa4:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012fa8:	1b1b      	subs	r3, r3, r4
 8012faa:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012fae:	ee03 3a10 	vmov	s6, r3
 8012fb2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012fb6:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012fba:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012fbe:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012fc2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012fc6:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8012fca:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012fce:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012fd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012fd6:	dd13      	ble.n	8013000 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012fd8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012fdc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012fe0:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012fe2:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012fe6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012fea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012fee:	dd15      	ble.n	801301c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012ff0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012ff4:	6403      	str	r3, [r0, #64]	@ 0x40
 8012ff6:	bd70      	pop	{r4, r5, r6, pc}
 8012ff8:	4623      	mov	r3, r4
 8012ffa:	e6fd      	b.n	8012df8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012ffc:	462a      	mov	r2, r5
 8012ffe:	e706      	b.n	8012e0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013000:	d502      	bpl.n	8013008 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013002:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8013006:	e7e9      	b.n	8012fdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013008:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801300c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013010:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013018:	dade      	bge.n	8012fd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801301a:	e7f2      	b.n	8013002 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801301c:	d502      	bpl.n	8013024 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801301e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8013022:	e7e7      	b.n	8012ff4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013024:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013028:	eee3 4a86 	vfma.f32	s9, s7, s12
 801302c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013030:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013034:	dadc      	bge.n	8012ff0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013036:	e7f2      	b.n	801301e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013038:	3d800000 	.word	0x3d800000

0801303c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801303c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013040:	2714      	movs	r7, #20
 8013042:	435f      	muls	r7, r3
 8013044:	eb02 0c07 	add.w	ip, r2, r7
 8013048:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801304c:	f115 0e0f 	adds.w	lr, r5, #15
 8013050:	f100 80a2 	bmi.w	8013198 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013054:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013058:	9c08      	ldr	r4, [sp, #32]
 801305a:	f8c0 e014 	str.w	lr, [r0, #20]
 801305e:	2614      	movs	r6, #20
 8013060:	4366      	muls	r6, r4
 8013062:	eb02 0806 	add.w	r8, r2, r6
 8013066:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801306a:	f115 040f 	adds.w	r4, r5, #15
 801306e:	f100 809f 	bmi.w	80131b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013072:	1124      	asrs	r4, r4, #4
 8013074:	eba4 040e 	sub.w	r4, r4, lr
 8013078:	6184      	str	r4, [r0, #24]
 801307a:	2c00      	cmp	r4, #0
 801307c:	f000 808a 	beq.w	8013194 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013080:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013084:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013088:	5995      	ldr	r5, [r2, r6]
 801308a:	eba4 0809 	sub.w	r8, r4, r9
 801308e:	59d4      	ldr	r4, [r2, r7]
 8013090:	eba5 0a04 	sub.w	sl, r5, r4
 8013094:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013098:	fb0e fe05 	mul.w	lr, lr, r5
 801309c:	fb0a ee19 	mls	lr, sl, r9, lr
 80130a0:	fb08 e404 	mla	r4, r8, r4, lr
 80130a4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80130a8:	3c01      	subs	r4, #1
 80130aa:	19a4      	adds	r4, r4, r6
 80130ac:	f100 808c 	bmi.w	80131c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80130b0:	fb94 fef6 	sdiv	lr, r4, r6
 80130b4:	f8c0 e000 	str.w	lr, [r0]
 80130b8:	fb06 441e 	mls	r4, r6, lr, r4
 80130bc:	6104      	str	r4, [r0, #16]
 80130be:	2d00      	cmp	r5, #0
 80130c0:	f2c0 8095 	blt.w	80131ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80130c4:	fb95 f4f6 	sdiv	r4, r5, r6
 80130c8:	6044      	str	r4, [r0, #4]
 80130ca:	fb06 5514 	mls	r5, r6, r4, r5
 80130ce:	6085      	str	r5, [r0, #8]
 80130d0:	60c6      	str	r6, [r0, #12]
 80130d2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80130d6:	6945      	ldr	r5, [r0, #20]
 80130d8:	59d2      	ldr	r2, [r2, r7]
 80130da:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8013210 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80130de:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80130e2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80130e6:	ee07 4a10 	vmov	s14, r4
 80130ea:	6804      	ldr	r4, [r0, #0]
 80130ec:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80130f0:	ee07 2a90 	vmov	s15, r2
 80130f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80130f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80130fc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013100:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013104:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013108:	edd3 6a00 	vldr	s13, [r3]
 801310c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013110:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8013114:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013118:	edc0 6a07 	vstr	s13, [r0, #28]
 801311c:	edd0 6a01 	vldr	s13, [r0, #4]
 8013120:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8013124:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8013128:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801312c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013130:	ed80 6a08 	vstr	s12, [r0, #32]
 8013134:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8013136:	6242      	str	r2, [r0, #36]	@ 0x24
 8013138:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 801313c:	ed93 6a03 	vldr	s12, [r3, #12]
 8013140:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013144:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8013148:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801314c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8013150:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8013154:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8013158:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801315c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8013160:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8013162:	6302      	str	r2, [r0, #48]	@ 0x30
 8013164:	ed93 6a06 	vldr	s12, [r3, #24]
 8013168:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 801316c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013170:	eeb0 7a46 	vmov.f32	s14, s12
 8013174:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8013178:	eea6 7a27 	vfma.f32	s14, s12, s15
 801317c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8013180:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8013184:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8013188:	eee6 7a87 	vfma.f32	s15, s13, s14
 801318c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8013190:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8013192:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8013194:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013198:	f1c5 0501 	rsb	r5, r5, #1
 801319c:	f015 050f 	ands.w	r5, r5, #15
 80131a0:	bf18      	it	ne
 80131a2:	2501      	movne	r5, #1
 80131a4:	2410      	movs	r4, #16
 80131a6:	fb9e fef4 	sdiv	lr, lr, r4
 80131aa:	ebae 0e05 	sub.w	lr, lr, r5
 80131ae:	e753      	b.n	8013058 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80131b0:	f1c5 0501 	rsb	r5, r5, #1
 80131b4:	f015 050f 	ands.w	r5, r5, #15
 80131b8:	bf18      	it	ne
 80131ba:	2501      	movne	r5, #1
 80131bc:	f04f 0910 	mov.w	r9, #16
 80131c0:	fb94 f4f9 	sdiv	r4, r4, r9
 80131c4:	1b64      	subs	r4, r4, r5
 80131c6:	e755      	b.n	8013074 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80131c8:	4264      	negs	r4, r4
 80131ca:	fb94 fef6 	sdiv	lr, r4, r6
 80131ce:	f1ce 0800 	rsb	r8, lr, #0
 80131d2:	fb06 441e 	mls	r4, r6, lr, r4
 80131d6:	f8c0 8000 	str.w	r8, [r0]
 80131da:	6104      	str	r4, [r0, #16]
 80131dc:	2c00      	cmp	r4, #0
 80131de:	f43f af6e 	beq.w	80130be <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80131e2:	ea6f 0e0e 	mvn.w	lr, lr
 80131e6:	f8c0 e000 	str.w	lr, [r0]
 80131ea:	1b34      	subs	r4, r6, r4
 80131ec:	e766      	b.n	80130bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80131ee:	426d      	negs	r5, r5
 80131f0:	fb95 f4f6 	sdiv	r4, r5, r6
 80131f4:	f1c4 0e00 	rsb	lr, r4, #0
 80131f8:	fb06 5514 	mls	r5, r6, r4, r5
 80131fc:	f8c0 e004 	str.w	lr, [r0, #4]
 8013200:	6085      	str	r5, [r0, #8]
 8013202:	2d00      	cmp	r5, #0
 8013204:	f43f af64 	beq.w	80130d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013208:	43e4      	mvns	r4, r4
 801320a:	6044      	str	r4, [r0, #4]
 801320c:	1b75      	subs	r5, r6, r5
 801320e:	e75e      	b.n	80130ce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013210:	3d800000 	.word	0x3d800000

08013214 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8013214:	4b01      	ldr	r3, [pc, #4]	@ (801321c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8013216:	6018      	str	r0, [r3, #0]
 8013218:	4770      	bx	lr
 801321a:	bf00      	nop
 801321c:	200140a8 	.word	0x200140a8

08013220 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8013220:	4b06      	ldr	r3, [pc, #24]	@ (801323c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8013222:	881a      	ldrh	r2, [r3, #0]
 8013224:	4282      	cmp	r2, r0
 8013226:	d807      	bhi.n	8013238 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8013228:	4b05      	ldr	r3, [pc, #20]	@ (8013240 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801322a:	881b      	ldrh	r3, [r3, #0]
 801322c:	4413      	add	r3, r2
 801322e:	4298      	cmp	r0, r3
 8013230:	bfac      	ite	ge
 8013232:	2000      	movge	r0, #0
 8013234:	2001      	movlt	r0, #1
 8013236:	4770      	bx	lr
 8013238:	2000      	movs	r0, #0
 801323a:	4770      	bx	lr
 801323c:	200140c8 	.word	0x200140c8
 8013240:	200140cc 	.word	0x200140cc

08013244 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8013244:	b508      	push	{r3, lr}
 8013246:	4601      	mov	r1, r0
 8013248:	f7ff ffea 	bl	8013220 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801324c:	b118      	cbz	r0, 8013256 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801324e:	4b02      	ldr	r3, [pc, #8]	@ (8013258 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013250:	681b      	ldr	r3, [r3, #0]
 8013252:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8013256:	bd08      	pop	{r3, pc}
 8013258:	200140ac 	.word	0x200140ac

0801325c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801325c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801325e:	4c24      	ldr	r4, [pc, #144]	@ (80132f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8013260:	6823      	ldr	r3, [r4, #0]
 8013262:	2b00      	cmp	r3, #0
 8013264:	d042      	beq.n	80132ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013266:	4a23      	ldr	r2, [pc, #140]	@ (80132f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8013268:	4d23      	ldr	r5, [pc, #140]	@ (80132f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801326a:	8811      	ldrh	r1, [r2, #0]
 801326c:	f8b5 c000 	ldrh.w	ip, [r5]
 8013270:	4822      	ldr	r0, [pc, #136]	@ (80132fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8013272:	4461      	add	r1, ip
 8013274:	1c4a      	adds	r2, r1, #1
 8013276:	f022 0201 	bic.w	r2, r2, #1
 801327a:	008f      	lsls	r7, r1, #2
 801327c:	0412      	lsls	r2, r2, #16
 801327e:	19de      	adds	r6, r3, r7
 8013280:	0c12      	lsrs	r2, r2, #16
 8013282:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8013286:	6006      	str	r6, [r0, #0]
 8013288:	4e1d      	ldr	r6, [pc, #116]	@ (8013300 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801328a:	19da      	adds	r2, r3, r7
 801328c:	6032      	str	r2, [r6, #0]
 801328e:	220e      	movs	r2, #14
 8013290:	fb02 f20c 	mul.w	r2, r2, ip
 8013294:	3203      	adds	r2, #3
 8013296:	f022 0203 	bic.w	r2, r2, #3
 801329a:	443a      	add	r2, r7
 801329c:	4f19      	ldr	r7, [pc, #100]	@ (8013304 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801329e:	4413      	add	r3, r2
 80132a0:	603b      	str	r3, [r7, #0]
 80132a2:	4f19      	ldr	r7, [pc, #100]	@ (8013308 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80132a4:	2300      	movs	r3, #0
 80132a6:	803b      	strh	r3, [r7, #0]
 80132a8:	4f18      	ldr	r7, [pc, #96]	@ (801330c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80132aa:	683f      	ldr	r7, [r7, #0]
 80132ac:	1aba      	subs	r2, r7, r2
 80132ae:	4f18      	ldr	r7, [pc, #96]	@ (8013310 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80132b0:	603a      	str	r2, [r7, #0]
 80132b2:	4a18      	ldr	r2, [pc, #96]	@ (8013314 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80132b4:	469c      	mov	ip, r3
 80132b6:	8013      	strh	r3, [r2, #0]
 80132b8:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80132bc:	428b      	cmp	r3, r1
 80132be:	d10d      	bne.n	80132dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80132c0:	882d      	ldrh	r5, [r5, #0]
 80132c2:	6830      	ldr	r0, [r6, #0]
 80132c4:	2300      	movs	r3, #0
 80132c6:	240e      	movs	r4, #14
 80132c8:	429d      	cmp	r5, r3
 80132ca:	d90f      	bls.n	80132ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80132cc:	fb04 0203 	mla	r2, r4, r3, r0
 80132d0:	3301      	adds	r3, #1
 80132d2:	7b11      	ldrb	r1, [r2, #12]
 80132d4:	f36f 1145 	bfc	r1, #5, #1
 80132d8:	7311      	strb	r1, [r2, #12]
 80132da:	e7f5      	b.n	80132c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80132dc:	6822      	ldr	r2, [r4, #0]
 80132de:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80132e2:	6802      	ldr	r2, [r0, #0]
 80132e4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80132e8:	3301      	adds	r3, #1
 80132ea:	e7e7      	b.n	80132bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80132ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80132ee:	bf00      	nop
 80132f0:	200140ac 	.word	0x200140ac
 80132f4:	200140c8 	.word	0x200140c8
 80132f8:	200140cc 	.word	0x200140cc
 80132fc:	200140c0 	.word	0x200140c0
 8013300:	200140b0 	.word	0x200140b0
 8013304:	200140b8 	.word	0x200140b8
 8013308:	200140ca 	.word	0x200140ca
 801330c:	200140b4 	.word	0x200140b4
 8013310:	200140c4 	.word	0x200140c4
 8013314:	200140bc 	.word	0x200140bc

08013318 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8013318:	4b06      	ldr	r3, [pc, #24]	@ (8013334 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801331a:	681b      	ldr	r3, [r3, #0]
 801331c:	b943      	cbnz	r3, 8013330 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801331e:	b139      	cbz	r1, 8013330 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013320:	4b05      	ldr	r3, [pc, #20]	@ (8013338 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8013322:	801a      	strh	r2, [r3, #0]
 8013324:	4b05      	ldr	r3, [pc, #20]	@ (801333c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8013326:	6019      	str	r1, [r3, #0]
 8013328:	4b05      	ldr	r3, [pc, #20]	@ (8013340 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801332a:	6018      	str	r0, [r3, #0]
 801332c:	f7ff bf96 	b.w	801325c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013330:	4770      	bx	lr
 8013332:	bf00      	nop
 8013334:	200140b8 	.word	0x200140b8
 8013338:	200140cc 	.word	0x200140cc
 801333c:	200140b4 	.word	0x200140b4
 8013340:	200140ac 	.word	0x200140ac

08013344 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013344:	b470      	push	{r4, r5, r6}
 8013346:	4c07      	ldr	r4, [pc, #28]	@ (8013364 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8013348:	6826      	ldr	r6, [r4, #0]
 801334a:	4605      	mov	r5, r0
 801334c:	4610      	mov	r0, r2
 801334e:	9a03      	ldr	r2, [sp, #12]
 8013350:	b936      	cbnz	r6, 8013360 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013352:	6025      	str	r5, [r4, #0]
 8013354:	4c04      	ldr	r4, [pc, #16]	@ (8013368 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8013356:	8021      	strh	r1, [r4, #0]
 8013358:	bc70      	pop	{r4, r5, r6}
 801335a:	4619      	mov	r1, r3
 801335c:	f7ff bfdc 	b.w	8013318 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013360:	bc70      	pop	{r4, r5, r6}
 8013362:	4770      	bx	lr
 8013364:	200140d0 	.word	0x200140d0
 8013368:	200140c8 	.word	0x200140c8

0801336c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801336c:	4a12      	ldr	r2, [pc, #72]	@ (80133b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801336e:	8803      	ldrh	r3, [r0, #0]
 8013370:	8812      	ldrh	r2, [r2, #0]
 8013372:	4293      	cmp	r3, r2
 8013374:	d207      	bcs.n	8013386 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8013376:	4a11      	ldr	r2, [pc, #68]	@ (80133bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8013378:	6812      	ldr	r2, [r2, #0]
 801337a:	2114      	movs	r1, #20
 801337c:	fb01 2303 	mla	r3, r1, r3, r2
 8013380:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8013384:	4770      	bx	lr
 8013386:	490e      	ldr	r1, [pc, #56]	@ (80133c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013388:	8809      	ldrh	r1, [r1, #0]
 801338a:	4411      	add	r1, r2
 801338c:	428b      	cmp	r3, r1
 801338e:	da04      	bge.n	801339a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8013390:	1a9b      	subs	r3, r3, r2
 8013392:	4a0c      	ldr	r2, [pc, #48]	@ (80133c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8013394:	210e      	movs	r1, #14
 8013396:	6812      	ldr	r2, [r2, #0]
 8013398:	e7f0      	b.n	801337c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801339a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801339e:	4293      	cmp	r3, r2
 80133a0:	d108      	bne.n	80133b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80133a2:	4b09      	ldr	r3, [pc, #36]	@ (80133c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80133a4:	781b      	ldrb	r3, [r3, #0]
 80133a6:	b91b      	cbnz	r3, 80133b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80133a8:	4b08      	ldr	r3, [pc, #32]	@ (80133cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80133aa:	f9b3 0000 	ldrsh.w	r0, [r3]
 80133ae:	4770      	bx	lr
 80133b0:	4b07      	ldr	r3, [pc, #28]	@ (80133d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80133b2:	e7fa      	b.n	80133aa <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80133b4:	2000      	movs	r0, #0
 80133b6:	4770      	bx	lr
 80133b8:	200140c8 	.word	0x200140c8
 80133bc:	200140d0 	.word	0x200140d0
 80133c0:	200140cc 	.word	0x200140cc
 80133c4:	200140b0 	.word	0x200140b0
 80133c8:	20014036 	.word	0x20014036
 80133cc:	20014038 	.word	0x20014038
 80133d0:	2001403a 	.word	0x2001403a

080133d4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80133d4:	4a12      	ldr	r2, [pc, #72]	@ (8013420 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80133d6:	8803      	ldrh	r3, [r0, #0]
 80133d8:	8812      	ldrh	r2, [r2, #0]
 80133da:	4293      	cmp	r3, r2
 80133dc:	d207      	bcs.n	80133ee <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80133de:	4a11      	ldr	r2, [pc, #68]	@ (8013424 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80133e0:	6812      	ldr	r2, [r2, #0]
 80133e2:	2114      	movs	r1, #20
 80133e4:	fb01 2303 	mla	r3, r1, r3, r2
 80133e8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80133ec:	4770      	bx	lr
 80133ee:	490e      	ldr	r1, [pc, #56]	@ (8013428 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80133f0:	8809      	ldrh	r1, [r1, #0]
 80133f2:	4411      	add	r1, r2
 80133f4:	428b      	cmp	r3, r1
 80133f6:	da04      	bge.n	8013402 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80133f8:	1a9b      	subs	r3, r3, r2
 80133fa:	4a0c      	ldr	r2, [pc, #48]	@ (801342c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80133fc:	210e      	movs	r1, #14
 80133fe:	6812      	ldr	r2, [r2, #0]
 8013400:	e7f0      	b.n	80133e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8013402:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013406:	4293      	cmp	r3, r2
 8013408:	d108      	bne.n	801341c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801340a:	4b09      	ldr	r3, [pc, #36]	@ (8013430 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801340c:	781b      	ldrb	r3, [r3, #0]
 801340e:	b91b      	cbnz	r3, 8013418 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8013410:	4b08      	ldr	r3, [pc, #32]	@ (8013434 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013412:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013416:	4770      	bx	lr
 8013418:	4b07      	ldr	r3, [pc, #28]	@ (8013438 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801341a:	e7fa      	b.n	8013412 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801341c:	2000      	movs	r0, #0
 801341e:	4770      	bx	lr
 8013420:	200140c8 	.word	0x200140c8
 8013424:	200140d0 	.word	0x200140d0
 8013428:	200140cc 	.word	0x200140cc
 801342c:	200140b0 	.word	0x200140b0
 8013430:	20014036 	.word	0x20014036
 8013434:	2001403a 	.word	0x2001403a
 8013438:	20014038 	.word	0x20014038

0801343c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801343c:	b530      	push	{r4, r5, lr}
 801343e:	4a22      	ldr	r2, [pc, #136]	@ (80134c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8013440:	880b      	ldrh	r3, [r1, #0]
 8013442:	8812      	ldrh	r2, [r2, #0]
 8013444:	4293      	cmp	r3, r2
 8013446:	d213      	bcs.n	8013470 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8013448:	4a20      	ldr	r2, [pc, #128]	@ (80134cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801344a:	6812      	ldr	r2, [r2, #0]
 801344c:	2114      	movs	r1, #20
 801344e:	fb01 2303 	mla	r3, r1, r3, r2
 8013452:	8a1a      	ldrh	r2, [r3, #16]
 8013454:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013458:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801345c:	8a5b      	ldrh	r3, [r3, #18]
 801345e:	8004      	strh	r4, [r0, #0]
 8013460:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013464:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013468:	8041      	strh	r1, [r0, #2]
 801346a:	8082      	strh	r2, [r0, #4]
 801346c:	80c3      	strh	r3, [r0, #6]
 801346e:	e024      	b.n	80134ba <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8013470:	4917      	ldr	r1, [pc, #92]	@ (80134d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013472:	8809      	ldrh	r1, [r1, #0]
 8013474:	4411      	add	r1, r2
 8013476:	428b      	cmp	r3, r1
 8013478:	da10      	bge.n	801349c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801347a:	1a9b      	subs	r3, r3, r2
 801347c:	220e      	movs	r2, #14
 801347e:	4353      	muls	r3, r2
 8013480:	4a14      	ldr	r2, [pc, #80]	@ (80134d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8013482:	6811      	ldr	r1, [r2, #0]
 8013484:	18ca      	adds	r2, r1, r3
 8013486:	5ecd      	ldrsh	r5, [r1, r3]
 8013488:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801348c:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8013490:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8013494:	8005      	strh	r5, [r0, #0]
 8013496:	8044      	strh	r4, [r0, #2]
 8013498:	8081      	strh	r1, [r0, #4]
 801349a:	e7e7      	b.n	801346c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801349c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80134a0:	4293      	cmp	r3, r2
 80134a2:	d10b      	bne.n	80134bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 80134a4:	4b0c      	ldr	r3, [pc, #48]	@ (80134d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80134a6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80134aa:	4b0c      	ldr	r3, [pc, #48]	@ (80134dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80134ac:	8081      	strh	r1, [r0, #4]
 80134ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 80134b2:	80c2      	strh	r2, [r0, #6]
 80134b4:	2300      	movs	r3, #0
 80134b6:	8003      	strh	r3, [r0, #0]
 80134b8:	8043      	strh	r3, [r0, #2]
 80134ba:	bd30      	pop	{r4, r5, pc}
 80134bc:	2300      	movs	r3, #0
 80134be:	8003      	strh	r3, [r0, #0]
 80134c0:	8043      	strh	r3, [r0, #2]
 80134c2:	8083      	strh	r3, [r0, #4]
 80134c4:	e7d2      	b.n	801346c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80134c6:	bf00      	nop
 80134c8:	200140c8 	.word	0x200140c8
 80134cc:	200140d0 	.word	0x200140d0
 80134d0:	200140cc 	.word	0x200140cc
 80134d4:	200140b0 	.word	0x200140b0
 80134d8:	20014032 	.word	0x20014032
 80134dc:	20014034 	.word	0x20014034

080134e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80134e0:	4a17      	ldr	r2, [pc, #92]	@ (8013540 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80134e2:	8803      	ldrh	r3, [r0, #0]
 80134e4:	8812      	ldrh	r2, [r2, #0]
 80134e6:	4293      	cmp	r3, r2
 80134e8:	d213      	bcs.n	8013512 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80134ea:	4a16      	ldr	r2, [pc, #88]	@ (8013544 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80134ec:	6812      	ldr	r2, [r2, #0]
 80134ee:	2114      	movs	r1, #20
 80134f0:	fb01 2303 	mla	r3, r1, r3, r2
 80134f4:	8a1a      	ldrh	r2, [r3, #16]
 80134f6:	8919      	ldrh	r1, [r3, #8]
 80134f8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80134fc:	428a      	cmp	r2, r1
 80134fe:	db1d      	blt.n	801353c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013500:	8a58      	ldrh	r0, [r3, #18]
 8013502:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013506:	895b      	ldrh	r3, [r3, #10]
 8013508:	4298      	cmp	r0, r3
 801350a:	bfac      	ite	ge
 801350c:	2000      	movge	r0, #0
 801350e:	2001      	movlt	r0, #1
 8013510:	4770      	bx	lr
 8013512:	490d      	ldr	r1, [pc, #52]	@ (8013548 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013514:	8809      	ldrh	r1, [r1, #0]
 8013516:	4411      	add	r1, r2
 8013518:	428b      	cmp	r3, r1
 801351a:	da0d      	bge.n	8013538 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801351c:	1a9b      	subs	r3, r3, r2
 801351e:	4a0b      	ldr	r2, [pc, #44]	@ (801354c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013520:	6812      	ldr	r2, [r2, #0]
 8013522:	210e      	movs	r1, #14
 8013524:	fb01 2303 	mla	r3, r1, r3, r2
 8013528:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801352c:	891a      	ldrh	r2, [r3, #8]
 801352e:	4291      	cmp	r1, r2
 8013530:	db04      	blt.n	801353c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013532:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8013536:	e7e6      	b.n	8013506 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8013538:	2000      	movs	r0, #0
 801353a:	4770      	bx	lr
 801353c:	2001      	movs	r0, #1
 801353e:	4770      	bx	lr
 8013540:	200140c8 	.word	0x200140c8
 8013544:	200140d0 	.word	0x200140d0
 8013548:	200140cc 	.word	0x200140cc
 801354c:	200140b0 	.word	0x200140b0

08013550 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013550:	4a12      	ldr	r2, [pc, #72]	@ (801359c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013552:	8803      	ldrh	r3, [r0, #0]
 8013554:	8811      	ldrh	r1, [r2, #0]
 8013556:	428b      	cmp	r3, r1
 8013558:	d20b      	bcs.n	8013572 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801355a:	4a11      	ldr	r2, [pc, #68]	@ (80135a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801355c:	6812      	ldr	r2, [r2, #0]
 801355e:	b112      	cbz	r2, 8013566 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013560:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013564:	b9c0      	cbnz	r0, 8013598 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8013566:	4a0f      	ldr	r2, [pc, #60]	@ (80135a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013568:	6811      	ldr	r1, [r2, #0]
 801356a:	2214      	movs	r2, #20
 801356c:	4353      	muls	r3, r2
 801356e:	58c8      	ldr	r0, [r1, r3]
 8013570:	4770      	bx	lr
 8013572:	4a0d      	ldr	r2, [pc, #52]	@ (80135a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013574:	8812      	ldrh	r2, [r2, #0]
 8013576:	440a      	add	r2, r1
 8013578:	4293      	cmp	r3, r2
 801357a:	da04      	bge.n	8013586 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801357c:	4a08      	ldr	r2, [pc, #32]	@ (80135a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801357e:	6812      	ldr	r2, [r2, #0]
 8013580:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013584:	4770      	bx	lr
 8013586:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801358a:	4293      	cmp	r3, r2
 801358c:	d103      	bne.n	8013596 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801358e:	4b07      	ldr	r3, [pc, #28]	@ (80135ac <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8013590:	681b      	ldr	r3, [r3, #0]
 8013592:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8013594:	4770      	bx	lr
 8013596:	2000      	movs	r0, #0
 8013598:	4770      	bx	lr
 801359a:	bf00      	nop
 801359c:	200140c8 	.word	0x200140c8
 80135a0:	200140ac 	.word	0x200140ac
 80135a4:	200140d0 	.word	0x200140d0
 80135a8:	200140cc 	.word	0x200140cc
 80135ac:	20014040 	.word	0x20014040

080135b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80135b0:	4b24      	ldr	r3, [pc, #144]	@ (8013644 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80135b2:	8802      	ldrh	r2, [r0, #0]
 80135b4:	8818      	ldrh	r0, [r3, #0]
 80135b6:	4282      	cmp	r2, r0
 80135b8:	d221      	bcs.n	80135fe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80135ba:	4b23      	ldr	r3, [pc, #140]	@ (8013648 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80135bc:	6819      	ldr	r1, [r3, #0]
 80135be:	2314      	movs	r3, #20
 80135c0:	fb03 1302 	mla	r3, r3, r2, r1
 80135c4:	6858      	ldr	r0, [r3, #4]
 80135c6:	2800      	cmp	r0, #0
 80135c8:	d03a      	beq.n	8013640 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80135ca:	4920      	ldr	r1, [pc, #128]	@ (801364c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80135cc:	6809      	ldr	r1, [r1, #0]
 80135ce:	2900      	cmp	r1, #0
 80135d0:	d036      	beq.n	8013640 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80135d2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80135d6:	2900      	cmp	r1, #0
 80135d8:	d032      	beq.n	8013640 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80135da:	891a      	ldrh	r2, [r3, #8]
 80135dc:	8958      	ldrh	r0, [r3, #10]
 80135de:	4350      	muls	r0, r2
 80135e0:	7c5a      	ldrb	r2, [r3, #17]
 80135e2:	7cdb      	ldrb	r3, [r3, #19]
 80135e4:	0952      	lsrs	r2, r2, #5
 80135e6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80135ea:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80135ee:	2b0b      	cmp	r3, #11
 80135f0:	bf18      	it	ne
 80135f2:	0040      	lslne	r0, r0, #1
 80135f4:	3003      	adds	r0, #3
 80135f6:	f020 0003 	bic.w	r0, r0, #3
 80135fa:	4408      	add	r0, r1
 80135fc:	4770      	bx	lr
 80135fe:	4b14      	ldr	r3, [pc, #80]	@ (8013650 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013600:	881b      	ldrh	r3, [r3, #0]
 8013602:	4403      	add	r3, r0
 8013604:	429a      	cmp	r2, r3
 8013606:	da1a      	bge.n	801363e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013608:	4b12      	ldr	r3, [pc, #72]	@ (8013654 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801360a:	681b      	ldr	r3, [r3, #0]
 801360c:	1a10      	subs	r0, r2, r0
 801360e:	210e      	movs	r1, #14
 8013610:	fb01 3000 	mla	r0, r1, r0, r3
 8013614:	7b03      	ldrb	r3, [r0, #12]
 8013616:	f003 031f 	and.w	r3, r3, #31
 801361a:	2b0b      	cmp	r3, #11
 801361c:	d10b      	bne.n	8013636 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801361e:	8903      	ldrh	r3, [r0, #8]
 8013620:	8940      	ldrh	r0, [r0, #10]
 8013622:	4358      	muls	r0, r3
 8013624:	4b09      	ldr	r3, [pc, #36]	@ (801364c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013626:	6819      	ldr	r1, [r3, #0]
 8013628:	3003      	adds	r0, #3
 801362a:	f020 0303 	bic.w	r3, r0, #3
 801362e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013632:	4418      	add	r0, r3
 8013634:	4770      	bx	lr
 8013636:	2b0d      	cmp	r3, #13
 8013638:	d101      	bne.n	801363e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801363a:	300d      	adds	r0, #13
 801363c:	4770      	bx	lr
 801363e:	2000      	movs	r0, #0
 8013640:	4770      	bx	lr
 8013642:	bf00      	nop
 8013644:	200140c8 	.word	0x200140c8
 8013648:	200140d0 	.word	0x200140d0
 801364c:	200140ac 	.word	0x200140ac
 8013650:	200140cc 	.word	0x200140cc
 8013654:	200140b0 	.word	0x200140b0

08013658 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013658:	b510      	push	{r4, lr}
 801365a:	4b1f      	ldr	r3, [pc, #124]	@ (80136d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 801365c:	8802      	ldrh	r2, [r0, #0]
 801365e:	881b      	ldrh	r3, [r3, #0]
 8013660:	429a      	cmp	r2, r3
 8013662:	d21a      	bcs.n	801369a <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8013664:	4b1d      	ldr	r3, [pc, #116]	@ (80136dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8013666:	681b      	ldr	r3, [r3, #0]
 8013668:	2114      	movs	r1, #20
 801366a:	fb01 3102 	mla	r1, r1, r2, r3
 801366e:	7c4b      	ldrb	r3, [r1, #17]
 8013670:	0958      	lsrs	r0, r3, #5
 8013672:	7ccb      	ldrb	r3, [r1, #19]
 8013674:	491a      	ldr	r1, [pc, #104]	@ (80136e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8013676:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801367a:	6809      	ldr	r1, [r1, #0]
 801367c:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8013680:	b2d8      	uxtb	r0, r3
 8013682:	b149      	cbz	r1, 8013698 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8013684:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8013688:	b132      	cbz	r2, 8013698 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801368a:	2b0e      	cmp	r3, #14
 801368c:	d021      	beq.n	80136d2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801368e:	280f      	cmp	r0, #15
 8013690:	d01d      	beq.n	80136ce <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8013692:	2810      	cmp	r0, #16
 8013694:	bf08      	it	eq
 8013696:	2002      	moveq	r0, #2
 8013698:	bd10      	pop	{r4, pc}
 801369a:	4912      	ldr	r1, [pc, #72]	@ (80136e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 801369c:	8809      	ldrh	r1, [r1, #0]
 801369e:	4419      	add	r1, r3
 80136a0:	428a      	cmp	r2, r1
 80136a2:	da09      	bge.n	80136b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 80136a4:	1ad3      	subs	r3, r2, r3
 80136a6:	4a10      	ldr	r2, [pc, #64]	@ (80136e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 80136a8:	6812      	ldr	r2, [r2, #0]
 80136aa:	210e      	movs	r1, #14
 80136ac:	fb01 2303 	mla	r3, r1, r3, r2
 80136b0:	7b18      	ldrb	r0, [r3, #12]
 80136b2:	f000 001f 	and.w	r0, r0, #31
 80136b6:	e7ef      	b.n	8013698 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80136b8:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 80136bc:	429a      	cmp	r2, r3
 80136be:	d108      	bne.n	80136d2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80136c0:	f7ef fc48 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 80136c4:	6803      	ldr	r3, [r0, #0]
 80136c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80136cc:	4718      	bx	r3
 80136ce:	2001      	movs	r0, #1
 80136d0:	e7e2      	b.n	8013698 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80136d2:	2000      	movs	r0, #0
 80136d4:	e7e0      	b.n	8013698 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80136d6:	bf00      	nop
 80136d8:	200140c8 	.word	0x200140c8
 80136dc:	200140d0 	.word	0x200140d0
 80136e0:	200140ac 	.word	0x200140ac
 80136e4:	200140cc 	.word	0x200140cc
 80136e8:	200140b0 	.word	0x200140b0

080136ec <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80136ec:	2010      	movs	r0, #16
 80136ee:	4770      	bx	lr

080136f0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80136f0:	2000      	movs	r0, #0
 80136f2:	4770      	bx	lr

080136f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80136f4:	4b02      	ldr	r3, [pc, #8]	@ (8013700 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80136f6:	8818      	ldrh	r0, [r3, #0]
 80136f8:	0040      	lsls	r0, r0, #1
 80136fa:	b280      	uxth	r0, r0
 80136fc:	4770      	bx	lr
 80136fe:	bf00      	nop
 8013700:	20014038 	.word	0x20014038

08013704 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013704:	2bff      	cmp	r3, #255	@ 0xff
 8013706:	d05e      	beq.n	80137c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8013708:	2a0b      	cmp	r2, #11
 801370a:	d058      	beq.n	80137be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801370c:	d80e      	bhi.n	801372c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801370e:	2a03      	cmp	r2, #3
 8013710:	d04d      	beq.n	80137ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8013712:	d804      	bhi.n	801371e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8013714:	2a01      	cmp	r2, #1
 8013716:	d04c      	beq.n	80137b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8013718:	d94d      	bls.n	80137b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801371a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 801371c:	e031      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801371e:	2a09      	cmp	r2, #9
 8013720:	d04d      	beq.n	80137be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8013722:	d84a      	bhi.n	80137ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8013724:	2a08      	cmp	r2, #8
 8013726:	d048      	beq.n	80137ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8013728:	2300      	movs	r3, #0
 801372a:	e02a      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801372c:	2a2f      	cmp	r2, #47	@ 0x2f
 801372e:	d02c      	beq.n	801378a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8013730:	d811      	bhi.n	8013756 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8013732:	2a2d      	cmp	r2, #45	@ 0x2d
 8013734:	d018      	beq.n	8013768 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8013736:	d831      	bhi.n	801379c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8013738:	2a2c      	cmp	r2, #44	@ 0x2c
 801373a:	d1f5      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801373c:	684a      	ldr	r2, [r1, #4]
 801373e:	7813      	ldrb	r3, [r2, #0]
 8013740:	7852      	ldrb	r2, [r2, #1]
 8013742:	2a00      	cmp	r2, #0
 8013744:	d1f0      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013746:	2b01      	cmp	r3, #1
 8013748:	d01d      	beq.n	8013786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801374a:	2b00      	cmp	r3, #0
 801374c:	d02d      	beq.n	80137aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801374e:	2b02      	cmp	r3, #2
 8013750:	d1ea      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013752:	68c3      	ldr	r3, [r0, #12]
 8013754:	e015      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013756:	2a31      	cmp	r2, #49	@ 0x31
 8013758:	d004      	beq.n	8013764 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801375a:	d332      	bcc.n	80137c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801375c:	2a32      	cmp	r2, #50	@ 0x32
 801375e:	d030      	beq.n	80137c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8013760:	2a33      	cmp	r2, #51	@ 0x33
 8013762:	d1e1      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013764:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8013766:	e00c      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013768:	684a      	ldr	r2, [r1, #4]
 801376a:	7813      	ldrb	r3, [r2, #0]
 801376c:	7852      	ldrb	r2, [r2, #1]
 801376e:	2a00      	cmp	r2, #0
 8013770:	d1da      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013772:	2b01      	cmp	r3, #1
 8013774:	d004      	beq.n	8013780 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8013776:	d30f      	bcc.n	8013798 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8013778:	2b02      	cmp	r3, #2
 801377a:	d1d5      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801377c:	6943      	ldr	r3, [r0, #20]
 801377e:	e000      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013780:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8013782:	4618      	mov	r0, r3
 8013784:	4770      	bx	lr
 8013786:	69c3      	ldr	r3, [r0, #28]
 8013788:	e7fb      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801378a:	684b      	ldr	r3, [r1, #4]
 801378c:	781a      	ldrb	r2, [r3, #0]
 801378e:	785b      	ldrb	r3, [r3, #1]
 8013790:	2b00      	cmp	r3, #0
 8013792:	d1c9      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013794:	2a00      	cmp	r2, #0
 8013796:	d1f4      	bne.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013798:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801379a:	e7f2      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801379c:	684b      	ldr	r3, [r1, #4]
 801379e:	781a      	ldrb	r2, [r3, #0]
 80137a0:	785b      	ldrb	r3, [r3, #1]
 80137a2:	2b00      	cmp	r3, #0
 80137a4:	d1c0      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137a6:	2a00      	cmp	r2, #0
 80137a8:	d1eb      	bne.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137aa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80137ac:	e7e9      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137ae:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 80137b0:	e7e7      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137b2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80137b4:	e7e5      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137b6:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80137b8:	e7e3      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137ba:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 80137bc:	e7e1      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137be:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80137c0:	e7df      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137c2:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 80137c4:	e7dd      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137c6:	2a0b      	cmp	r2, #11
 80137c8:	d059      	beq.n	801387e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80137ca:	d80e      	bhi.n	80137ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 80137cc:	2a03      	cmp	r2, #3
 80137ce:	d050      	beq.n	8013872 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 80137d0:	d804      	bhi.n	80137dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80137d2:	2a01      	cmp	r2, #1
 80137d4:	d04f      	beq.n	8013876 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 80137d6:	d950      	bls.n	801387a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80137d8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80137da:	e7d2      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137dc:	2a09      	cmp	r2, #9
 80137de:	d04e      	beq.n	801387e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80137e0:	d801      	bhi.n	80137e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80137e2:	2a08      	cmp	r2, #8
 80137e4:	d1a0      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137e6:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80137e8:	e7cb      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137ea:	2a2f      	cmp	r2, #47	@ 0x2f
 80137ec:	d02d      	beq.n	801384a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 80137ee:	d811      	bhi.n	8013814 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80137f0:	2a2d      	cmp	r2, #45	@ 0x2d
 80137f2:	d018      	beq.n	8013826 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 80137f4:	d833      	bhi.n	801385e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 80137f6:	2a2c      	cmp	r2, #44	@ 0x2c
 80137f8:	d196      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137fa:	684a      	ldr	r2, [r1, #4]
 80137fc:	7813      	ldrb	r3, [r2, #0]
 80137fe:	7852      	ldrb	r2, [r2, #1]
 8013800:	2a00      	cmp	r2, #0
 8013802:	d191      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013804:	2b01      	cmp	r3, #1
 8013806:	d01e      	beq.n	8013846 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013808:	2b00      	cmp	r3, #0
 801380a:	d030      	beq.n	801386e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 801380c:	2b02      	cmp	r3, #2
 801380e:	d18b      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013810:	6903      	ldr	r3, [r0, #16]
 8013812:	e7b6      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013814:	2a31      	cmp	r2, #49	@ 0x31
 8013816:	d004      	beq.n	8013822 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8013818:	d333      	bcc.n	8013882 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801381a:	2a32      	cmp	r2, #50	@ 0x32
 801381c:	d031      	beq.n	8013882 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801381e:	2a33      	cmp	r2, #51	@ 0x33
 8013820:	d182      	bne.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013822:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8013824:	e7ad      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013826:	684a      	ldr	r2, [r1, #4]
 8013828:	7813      	ldrb	r3, [r2, #0]
 801382a:	7852      	ldrb	r2, [r2, #1]
 801382c:	2a00      	cmp	r2, #0
 801382e:	f47f af7b 	bne.w	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013832:	2b01      	cmp	r3, #1
 8013834:	d005      	beq.n	8013842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013836:	d310      	bcc.n	801385a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8013838:	2b02      	cmp	r3, #2
 801383a:	f47f af75 	bne.w	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801383e:	6983      	ldr	r3, [r0, #24]
 8013840:	e79f      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013842:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8013844:	e79d      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013846:	6a03      	ldr	r3, [r0, #32]
 8013848:	e79b      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801384a:	684b      	ldr	r3, [r1, #4]
 801384c:	781a      	ldrb	r2, [r3, #0]
 801384e:	785b      	ldrb	r3, [r3, #1]
 8013850:	2b00      	cmp	r3, #0
 8013852:	f47f af69 	bne.w	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013856:	2a00      	cmp	r2, #0
 8013858:	d193      	bne.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801385a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801385c:	e791      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801385e:	684b      	ldr	r3, [r1, #4]
 8013860:	781a      	ldrb	r2, [r3, #0]
 8013862:	785b      	ldrb	r3, [r3, #1]
 8013864:	2b00      	cmp	r3, #0
 8013866:	f47f af5f 	bne.w	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801386a:	2a00      	cmp	r2, #0
 801386c:	d189      	bne.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801386e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8013870:	e787      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013872:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8013874:	e785      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013876:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8013878:	e783      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801387a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801387c:	e781      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801387e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8013880:	e77f      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013882:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8013884:	e77d      	b.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08013886 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013886:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801388a:	b087      	sub	sp, #28
 801388c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801388e:	9205      	str	r2, [sp, #20]
 8013890:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013894:	9202      	str	r2, [sp, #8]
 8013896:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801389a:	9101      	str	r1, [sp, #4]
 801389c:	6841      	ldr	r1, [r0, #4]
 801389e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80138a2:	fb01 2404 	mla	r4, r1, r4, r2
 80138a6:	6802      	ldr	r2, [r0, #0]
 80138a8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80138ac:	f8de 2000 	ldr.w	r2, [lr]
 80138b0:	9203      	str	r2, [sp, #12]
 80138b2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80138b6:	3204      	adds	r2, #4
 80138b8:	9204      	str	r2, [sp, #16]
 80138ba:	9a02      	ldr	r2, [sp, #8]
 80138bc:	43d6      	mvns	r6, r2
 80138be:	b2f6      	uxtb	r6, r6
 80138c0:	9a01      	ldr	r2, [sp, #4]
 80138c2:	2a00      	cmp	r2, #0
 80138c4:	dc03      	bgt.n	80138ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80138c6:	9a05      	ldr	r2, [sp, #20]
 80138c8:	2a00      	cmp	r2, #0
 80138ca:	f340 8129 	ble.w	8013b20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80138ce:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80138d0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80138d4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80138d8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80138dc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80138de:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80138e2:	2b00      	cmp	r3, #0
 80138e4:	dd0e      	ble.n	8013904 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80138e6:	1408      	asrs	r0, r1, #16
 80138e8:	d405      	bmi.n	80138f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80138ea:	4560      	cmp	r0, ip
 80138ec:	da03      	bge.n	80138f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80138ee:	1410      	asrs	r0, r2, #16
 80138f0:	d401      	bmi.n	80138f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80138f2:	42b8      	cmp	r0, r7
 80138f4:	db07      	blt.n	8013906 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80138f6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80138f8:	4401      	add	r1, r0
 80138fa:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80138fc:	3b01      	subs	r3, #1
 80138fe:	4402      	add	r2, r0
 8013900:	3402      	adds	r4, #2
 8013902:	e7ee      	b.n	80138e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013904:	d071      	beq.n	80139ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013906:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013908:	1e58      	subs	r0, r3, #1
 801390a:	fb05 1500 	mla	r5, r5, r0, r1
 801390e:	142d      	asrs	r5, r5, #16
 8013910:	d45f      	bmi.n	80139d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013912:	4565      	cmp	r5, ip
 8013914:	da5d      	bge.n	80139d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013916:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013918:	fb05 2000 	mla	r0, r5, r0, r2
 801391c:	1400      	asrs	r0, r0, #16
 801391e:	d458      	bmi.n	80139d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013920:	42b8      	cmp	r0, r7
 8013922:	da56      	bge.n	80139d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013924:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8013928:	4699      	mov	r9, r3
 801392a:	46a2      	mov	sl, r4
 801392c:	f1b9 0f00 	cmp.w	r9, #0
 8013930:	dd57      	ble.n	80139e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8013932:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013936:	9803      	ldr	r0, [sp, #12]
 8013938:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801393c:	140d      	asrs	r5, r1, #16
 801393e:	fb07 000c 	mla	r0, r7, ip, r0
 8013942:	f109 39ff 	add.w	r9, r9, #4294967295
 8013946:	5d40      	ldrb	r0, [r0, r5]
 8013948:	9d04      	ldr	r5, [sp, #16]
 801394a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801394e:	f8ba 5000 	ldrh.w	r5, [sl]
 8013952:	122f      	asrs	r7, r5, #8
 8013954:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013958:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801395c:	fb17 f706 	smulbb	r7, r7, r6
 8013960:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013964:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013968:	00ed      	lsls	r5, r5, #3
 801396a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801396e:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8013972:	10c7      	asrs	r7, r0, #3
 8013974:	b2ed      	uxtb	r5, r5
 8013976:	00c0      	lsls	r0, r0, #3
 8013978:	fb18 f806 	smulbb	r8, r8, r6
 801397c:	fb15 f506 	smulbb	r5, r5, r6
 8013980:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013984:	b2c0      	uxtb	r0, r0
 8013986:	fa1f fc8c 	uxth.w	ip, ip
 801398a:	fb07 870b 	mla	r7, r7, fp, r8
 801398e:	fb00 500b 	mla	r0, r0, fp, r5
 8013992:	b280      	uxth	r0, r0
 8013994:	b2bf      	uxth	r7, r7
 8013996:	f10c 0501 	add.w	r5, ip, #1
 801399a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801399e:	f107 0801 	add.w	r8, r7, #1
 80139a2:	1c45      	adds	r5, r0, #1
 80139a4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80139a8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80139ac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80139ae:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80139b2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80139b6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80139ba:	ea45 0c0c 	orr.w	ip, r5, ip
 80139be:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80139c2:	4401      	add	r1, r0
 80139c4:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80139c6:	ea4c 0c08 	orr.w	ip, ip, r8
 80139ca:	f82a cb02 	strh.w	ip, [sl], #2
 80139ce:	4402      	add	r2, r0
 80139d0:	e7ac      	b.n	801392c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80139d2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80139d6:	f04f 0800 	mov.w	r8, #0
 80139da:	eb03 0008 	add.w	r0, r3, r8
 80139de:	2800      	cmp	r0, #0
 80139e0:	dc41      	bgt.n	8013a66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80139e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80139e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80139ea:	9b01      	ldr	r3, [sp, #4]
 80139ec:	2b00      	cmp	r3, #0
 80139ee:	f340 8097 	ble.w	8013b20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80139f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80139f6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80139fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80139fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013a00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013a04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013a08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013a0c:	eef0 6a62 	vmov.f32	s13, s5
 8013a10:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013a14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013a18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013a1c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013a20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013a24:	eef0 6a43 	vmov.f32	s13, s6
 8013a28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013a2c:	ee12 2a90 	vmov	r2, s5
 8013a30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013a34:	fb92 f3f3 	sdiv	r3, r2, r3
 8013a38:	ee13 2a10 	vmov	r2, s6
 8013a3c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013a3e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013a40:	fb92 f3f3 	sdiv	r3, r2, r3
 8013a44:	9314      	str	r3, [sp, #80]	@ 0x50
 8013a46:	9b01      	ldr	r3, [sp, #4]
 8013a48:	9a05      	ldr	r2, [sp, #20]
 8013a4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013a4e:	3b01      	subs	r3, #1
 8013a50:	9301      	str	r3, [sp, #4]
 8013a52:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013a56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013a58:	eeb0 3a67 	vmov.f32	s6, s15
 8013a5c:	bf08      	it	eq
 8013a5e:	4613      	moveq	r3, r2
 8013a60:	eef0 2a47 	vmov.f32	s5, s14
 8013a64:	e72c      	b.n	80138c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013a66:	140f      	asrs	r7, r1, #16
 8013a68:	d453      	bmi.n	8013b12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a6a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013a6e:	42bd      	cmp	r5, r7
 8013a70:	dd4f      	ble.n	8013b12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a72:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013a76:	d44c      	bmi.n	8013b12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a78:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013a7c:	4560      	cmp	r0, ip
 8013a7e:	dd48      	ble.n	8013b12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a80:	9803      	ldr	r0, [sp, #12]
 8013a82:	b22d      	sxth	r5, r5
 8013a84:	fb0c 0505 	mla	r5, ip, r5, r0
 8013a88:	5de8      	ldrb	r0, [r5, r7]
 8013a8a:	9d04      	ldr	r5, [sp, #16]
 8013a8c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013a90:	f06f 0501 	mvn.w	r5, #1
 8013a94:	fb05 fb08 	mul.w	fp, r5, r8
 8013a98:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013a9c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013aa0:	122f      	asrs	r7, r5, #8
 8013aa2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013aa6:	fb17 f706 	smulbb	r7, r7, r6
 8013aaa:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013aae:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013ab2:	00ed      	lsls	r5, r5, #3
 8013ab4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013ab8:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013abc:	10c7      	asrs	r7, r0, #3
 8013abe:	b2ed      	uxtb	r5, r5
 8013ac0:	00c0      	lsls	r0, r0, #3
 8013ac2:	fb19 f906 	smulbb	r9, r9, r6
 8013ac6:	fb15 f506 	smulbb	r5, r5, r6
 8013aca:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013ace:	b2c0      	uxtb	r0, r0
 8013ad0:	fa1f fc8c 	uxth.w	ip, ip
 8013ad4:	fb07 970a 	mla	r7, r7, sl, r9
 8013ad8:	fb00 500a 	mla	r0, r0, sl, r5
 8013adc:	b2bf      	uxth	r7, r7
 8013ade:	b280      	uxth	r0, r0
 8013ae0:	f10c 0501 	add.w	r5, ip, #1
 8013ae4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013ae8:	f107 0901 	add.w	r9, r7, #1
 8013aec:	1c45      	adds	r5, r0, #1
 8013aee:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013af2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013af6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013afa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013afe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013b02:	ea45 0c0c 	orr.w	ip, r5, ip
 8013b06:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013b0a:	ea4c 0c09 	orr.w	ip, ip, r9
 8013b0e:	f824 c00b 	strh.w	ip, [r4, fp]
 8013b12:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013b14:	4401      	add	r1, r0
 8013b16:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013b18:	f108 38ff 	add.w	r8, r8, #4294967295
 8013b1c:	4402      	add	r2, r0
 8013b1e:	e75c      	b.n	80139da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013b20:	b007      	add	sp, #28
 8013b22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013b26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b2a:	b085      	sub	sp, #20
 8013b2c:	4693      	mov	fp, r2
 8013b2e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013b30:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013b32:	6870      	ldr	r0, [r6, #4]
 8013b34:	9100      	str	r1, [sp, #0]
 8013b36:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013b3a:	fb00 2404 	mla	r4, r0, r4, r2
 8013b3e:	6832      	ldr	r2, [r6, #0]
 8013b40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013b44:	682a      	ldr	r2, [r5, #0]
 8013b46:	9201      	str	r2, [sp, #4]
 8013b48:	686a      	ldr	r2, [r5, #4]
 8013b4a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8013b4e:	3204      	adds	r2, #4
 8013b50:	9202      	str	r2, [sp, #8]
 8013b52:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013b56:	9a00      	ldr	r2, [sp, #0]
 8013b58:	2a00      	cmp	r2, #0
 8013b5a:	dc03      	bgt.n	8013b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013b5c:	f1bb 0f00 	cmp.w	fp, #0
 8013b60:	f340 80a0 	ble.w	8013ca4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013b64:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013b66:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013b6a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013b6e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013b72:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013b74:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013b78:	2b00      	cmp	r3, #0
 8013b7a:	dd0c      	ble.n	8013b96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013b7c:	1406      	asrs	r6, r0, #16
 8013b7e:	d405      	bmi.n	8013b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013b80:	454e      	cmp	r6, r9
 8013b82:	da03      	bge.n	8013b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013b84:	1416      	asrs	r6, r2, #16
 8013b86:	d401      	bmi.n	8013b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013b88:	4546      	cmp	r6, r8
 8013b8a:	db05      	blt.n	8013b98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013b8c:	4470      	add	r0, lr
 8013b8e:	4462      	add	r2, ip
 8013b90:	3b01      	subs	r3, #1
 8013b92:	3402      	adds	r4, #2
 8013b94:	e7f0      	b.n	8013b78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013b96:	d00f      	beq.n	8013bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013b98:	1e5e      	subs	r6, r3, #1
 8013b9a:	fb0e 0706 	mla	r7, lr, r6, r0
 8013b9e:	143f      	asrs	r7, r7, #16
 8013ba0:	d541      	bpl.n	8013c26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013ba2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013ba6:	4698      	mov	r8, r3
 8013ba8:	9603      	str	r6, [sp, #12]
 8013baa:	f1b8 0f00 	cmp.w	r8, #0
 8013bae:	dc59      	bgt.n	8013c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013bb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013bb4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013bb8:	9b00      	ldr	r3, [sp, #0]
 8013bba:	2b00      	cmp	r3, #0
 8013bbc:	dd72      	ble.n	8013ca4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013bbe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013bc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013bc6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013bca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013bcc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013bd0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013bd4:	eeb0 6a62 	vmov.f32	s12, s5
 8013bd8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013bdc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013be0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013be4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013be8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013bec:	eeb0 6a43 	vmov.f32	s12, s6
 8013bf0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013bf4:	ee12 2a90 	vmov	r2, s5
 8013bf8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013bfc:	fb92 fef3 	sdiv	lr, r2, r3
 8013c00:	ee13 2a10 	vmov	r2, s6
 8013c04:	fb92 fcf3 	sdiv	ip, r2, r3
 8013c08:	9b00      	ldr	r3, [sp, #0]
 8013c0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013c0e:	3b01      	subs	r3, #1
 8013c10:	9300      	str	r3, [sp, #0]
 8013c12:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013c16:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013c18:	eeb0 3a67 	vmov.f32	s6, s15
 8013c1c:	bf08      	it	eq
 8013c1e:	465b      	moveq	r3, fp
 8013c20:	eef0 2a47 	vmov.f32	s5, s14
 8013c24:	e797      	b.n	8013b56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8013c26:	454f      	cmp	r7, r9
 8013c28:	dabb      	bge.n	8013ba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013c2a:	fb0c 2606 	mla	r6, ip, r6, r2
 8013c2e:	1436      	asrs	r6, r6, #16
 8013c30:	d4b7      	bmi.n	8013ba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013c32:	4546      	cmp	r6, r8
 8013c34:	dab5      	bge.n	8013ba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013c36:	461e      	mov	r6, r3
 8013c38:	46a0      	mov	r8, r4
 8013c3a:	2e00      	cmp	r6, #0
 8013c3c:	ddb8      	ble.n	8013bb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013c3e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013c42:	9901      	ldr	r1, [sp, #4]
 8013c44:	1417      	asrs	r7, r2, #16
 8013c46:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013c4a:	fb0a 1707 	mla	r7, sl, r7, r1
 8013c4e:	9902      	ldr	r1, [sp, #8]
 8013c50:	f817 7009 	ldrb.w	r7, [r7, r9]
 8013c54:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013c58:	f828 7b02 	strh.w	r7, [r8], #2
 8013c5c:	4470      	add	r0, lr
 8013c5e:	4462      	add	r2, ip
 8013c60:	3e01      	subs	r6, #1
 8013c62:	e7ea      	b.n	8013c3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013c64:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013c68:	d417      	bmi.n	8013c9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c6a:	68ae      	ldr	r6, [r5, #8]
 8013c6c:	454e      	cmp	r6, r9
 8013c6e:	dd14      	ble.n	8013c9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c70:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013c74:	d411      	bmi.n	8013c9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c76:	68ef      	ldr	r7, [r5, #12]
 8013c78:	4557      	cmp	r7, sl
 8013c7a:	dd0e      	ble.n	8013c9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c7c:	9f01      	ldr	r7, [sp, #4]
 8013c7e:	b236      	sxth	r6, r6
 8013c80:	fb0a 7606 	mla	r6, sl, r6, r7
 8013c84:	9f02      	ldr	r7, [sp, #8]
 8013c86:	f816 6009 	ldrb.w	r6, [r6, r9]
 8013c8a:	f06f 0101 	mvn.w	r1, #1
 8013c8e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013c92:	fb01 f608 	mul.w	r6, r1, r8
 8013c96:	9903      	ldr	r1, [sp, #12]
 8013c98:	538f      	strh	r7, [r1, r6]
 8013c9a:	4470      	add	r0, lr
 8013c9c:	4462      	add	r2, ip
 8013c9e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013ca2:	e782      	b.n	8013baa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013ca4:	b005      	add	sp, #20
 8013ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013caa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013caa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cae:	b087      	sub	sp, #28
 8013cb0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013cb2:	9205      	str	r2, [sp, #20]
 8013cb4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013cb8:	9203      	str	r2, [sp, #12]
 8013cba:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013cbe:	9102      	str	r1, [sp, #8]
 8013cc0:	6861      	ldr	r1, [r4, #4]
 8013cc2:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013cc6:	fb01 2000 	mla	r0, r1, r0, r2
 8013cca:	6822      	ldr	r2, [r4, #0]
 8013ccc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013cd0:	9200      	str	r2, [sp, #0]
 8013cd2:	f8dc 2000 	ldr.w	r2, [ip]
 8013cd6:	9204      	str	r2, [sp, #16]
 8013cd8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013cdc:	3204      	adds	r2, #4
 8013cde:	9201      	str	r2, [sp, #4]
 8013ce0:	9a03      	ldr	r2, [sp, #12]
 8013ce2:	43d5      	mvns	r5, r2
 8013ce4:	b2ed      	uxtb	r5, r5
 8013ce6:	9a02      	ldr	r2, [sp, #8]
 8013ce8:	2a00      	cmp	r2, #0
 8013cea:	dc03      	bgt.n	8013cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013cec:	9a05      	ldr	r2, [sp, #20]
 8013cee:	2a00      	cmp	r2, #0
 8013cf0:	f340 812c 	ble.w	8013f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013cf4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013cf6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8013cfa:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013cfe:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013d02:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013d04:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013d08:	2b00      	cmp	r3, #0
 8013d0a:	dd10      	ble.n	8013d2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013d0c:	140c      	asrs	r4, r1, #16
 8013d0e:	d405      	bmi.n	8013d1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013d10:	4574      	cmp	r4, lr
 8013d12:	da03      	bge.n	8013d1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013d14:	1414      	asrs	r4, r2, #16
 8013d16:	d401      	bmi.n	8013d1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013d18:	42bc      	cmp	r4, r7
 8013d1a:	db09      	blt.n	8013d30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013d1c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013d1e:	9800      	ldr	r0, [sp, #0]
 8013d20:	4421      	add	r1, r4
 8013d22:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013d24:	3002      	adds	r0, #2
 8013d26:	4422      	add	r2, r4
 8013d28:	3b01      	subs	r3, #1
 8013d2a:	9000      	str	r0, [sp, #0]
 8013d2c:	e7ec      	b.n	8013d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013d2e:	d071      	beq.n	8013e14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013d30:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013d32:	1e5c      	subs	r4, r3, #1
 8013d34:	fb06 1604 	mla	r6, r6, r4, r1
 8013d38:	1436      	asrs	r6, r6, #16
 8013d3a:	d45d      	bmi.n	8013df8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013d3c:	4576      	cmp	r6, lr
 8013d3e:	da5b      	bge.n	8013df8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013d40:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8013d42:	fb06 2404 	mla	r4, r6, r4, r2
 8013d46:	1424      	asrs	r4, r4, #16
 8013d48:	d456      	bmi.n	8013df8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013d4a:	42bc      	cmp	r4, r7
 8013d4c:	da54      	bge.n	8013df8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013d4e:	f8dd 9000 	ldr.w	r9, [sp]
 8013d52:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8013d56:	4698      	mov	r8, r3
 8013d58:	f1b8 0f00 	cmp.w	r8, #0
 8013d5c:	dd54      	ble.n	8013e08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013d5e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013d62:	9804      	ldr	r0, [sp, #16]
 8013d64:	1414      	asrs	r4, r2, #16
 8013d66:	fb07 0404 	mla	r4, r7, r4, r0
 8013d6a:	140e      	asrs	r6, r1, #16
 8013d6c:	9801      	ldr	r0, [sp, #4]
 8013d6e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8013d72:	f8b9 4000 	ldrh.w	r4, [r9]
 8013d76:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013d7a:	eb00 0b0e 	add.w	fp, r0, lr
 8013d7e:	1227      	asrs	r7, r4, #8
 8013d80:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013d84:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013d88:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013d8c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013d8e:	fb16 f60a 	smulbb	r6, r6, sl
 8013d92:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013d96:	fb07 6705 	mla	r7, r7, r5, r6
 8013d9a:	10e6      	asrs	r6, r4, #3
 8013d9c:	00e4      	lsls	r4, r4, #3
 8013d9e:	b2e4      	uxtb	r4, r4
 8013da0:	fb1b fb0a 	smulbb	fp, fp, sl
 8013da4:	fb14 f405 	smulbb	r4, r4, r5
 8013da8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013dac:	b2bf      	uxth	r7, r7
 8013dae:	fb06 b605 	mla	r6, r6, r5, fp
 8013db2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013db6:	b2b6      	uxth	r6, r6
 8013db8:	fa1f fe8e 	uxth.w	lr, lr
 8013dbc:	1c7c      	adds	r4, r7, #1
 8013dbe:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013dc2:	f106 0b01 	add.w	fp, r6, #1
 8013dc6:	f10e 0401 	add.w	r4, lr, #1
 8013dca:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8013dce:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013dd2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013dd6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013dda:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013dde:	4327      	orrs	r7, r4
 8013de0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013de4:	4401      	add	r1, r0
 8013de6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013de8:	ea47 070b 	orr.w	r7, r7, fp
 8013dec:	f829 7b02 	strh.w	r7, [r9], #2
 8013df0:	4402      	add	r2, r0
 8013df2:	f108 38ff 	add.w	r8, r8, #4294967295
 8013df6:	e7af      	b.n	8013d58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013df8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8013dfc:	f04f 0e00 	mov.w	lr, #0
 8013e00:	eb03 040e 	add.w	r4, r3, lr
 8013e04:	2c00      	cmp	r4, #0
 8013e06:	dc43      	bgt.n	8013e90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8013e08:	9a00      	ldr	r2, [sp, #0]
 8013e0a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013e0e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013e12:	9300      	str	r3, [sp, #0]
 8013e14:	9b02      	ldr	r3, [sp, #8]
 8013e16:	2b00      	cmp	r3, #0
 8013e18:	f340 8098 	ble.w	8013f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013e1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013e20:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013e24:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013e28:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013e2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013e2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013e32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013e36:	eef0 6a62 	vmov.f32	s13, s5
 8013e3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013e3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013e42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013e46:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013e4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013e4e:	eef0 6a43 	vmov.f32	s13, s6
 8013e52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013e56:	ee12 2a90 	vmov	r2, s5
 8013e5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013e5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e62:	ee13 2a10 	vmov	r2, s6
 8013e66:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013e68:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013e6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e6e:	9314      	str	r3, [sp, #80]	@ 0x50
 8013e70:	9b02      	ldr	r3, [sp, #8]
 8013e72:	9a05      	ldr	r2, [sp, #20]
 8013e74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013e78:	3b01      	subs	r3, #1
 8013e7a:	9302      	str	r3, [sp, #8]
 8013e7c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013e80:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013e82:	eeb0 3a67 	vmov.f32	s6, s15
 8013e86:	bf08      	it	eq
 8013e88:	4613      	moveq	r3, r2
 8013e8a:	eef0 2a47 	vmov.f32	s5, s14
 8013e8e:	e72a      	b.n	8013ce6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013e90:	140f      	asrs	r7, r1, #16
 8013e92:	d454      	bmi.n	8013f3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013e94:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013e98:	42be      	cmp	r6, r7
 8013e9a:	dd50      	ble.n	8013f3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013e9c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013ea0:	d44d      	bmi.n	8013f3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013ea2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013ea6:	4544      	cmp	r4, r8
 8013ea8:	dd49      	ble.n	8013f3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013eaa:	9c04      	ldr	r4, [sp, #16]
 8013eac:	b236      	sxth	r6, r6
 8013eae:	fb08 4606 	mla	r6, r8, r6, r4
 8013eb2:	f06f 0001 	mvn.w	r0, #1
 8013eb6:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013eba:	9c01      	ldr	r4, [sp, #4]
 8013ebc:	fb00 fa0e 	mul.w	sl, r0, lr
 8013ec0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013ec4:	9800      	ldr	r0, [sp, #0]
 8013ec6:	eb04 0b08 	add.w	fp, r4, r8
 8013eca:	f830 400a 	ldrh.w	r4, [r0, sl]
 8013ece:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013ed2:	9801      	ldr	r0, [sp, #4]
 8013ed4:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013ed8:	f810 8008 	ldrb.w	r8, [r0, r8]
 8013edc:	9800      	ldr	r0, [sp, #0]
 8013ede:	1227      	asrs	r7, r4, #8
 8013ee0:	fb16 f609 	smulbb	r6, r6, r9
 8013ee4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013ee8:	fb07 6705 	mla	r7, r7, r5, r6
 8013eec:	10e6      	asrs	r6, r4, #3
 8013eee:	00e4      	lsls	r4, r4, #3
 8013ef0:	b2e4      	uxtb	r4, r4
 8013ef2:	fb1b fb09 	smulbb	fp, fp, r9
 8013ef6:	fb14 f405 	smulbb	r4, r4, r5
 8013efa:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013efe:	b2bf      	uxth	r7, r7
 8013f00:	fb06 b605 	mla	r6, r6, r5, fp
 8013f04:	fb08 4809 	mla	r8, r8, r9, r4
 8013f08:	b2b6      	uxth	r6, r6
 8013f0a:	fa1f f888 	uxth.w	r8, r8
 8013f0e:	1c7c      	adds	r4, r7, #1
 8013f10:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013f14:	f106 0b01 	add.w	fp, r6, #1
 8013f18:	f108 0401 	add.w	r4, r8, #1
 8013f1c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8013f20:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013f24:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013f28:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013f2c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013f30:	4327      	orrs	r7, r4
 8013f32:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013f36:	ea47 070b 	orr.w	r7, r7, fp
 8013f3a:	f820 700a 	strh.w	r7, [r0, sl]
 8013f3e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013f40:	4401      	add	r1, r0
 8013f42:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013f44:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013f48:	4402      	add	r2, r0
 8013f4a:	e759      	b.n	8013e00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013f4c:	b007      	add	sp, #28
 8013f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013f54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f58:	b085      	sub	sp, #20
 8013f5a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013f5e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013f60:	9203      	str	r2, [sp, #12]
 8013f62:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013f66:	6870      	ldr	r0, [r6, #4]
 8013f68:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013f6a:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8013f6e:	686f      	ldr	r7, [r5, #4]
 8013f70:	9101      	str	r1, [sp, #4]
 8013f72:	fb00 2404 	mla	r4, r0, r4, r2
 8013f76:	6832      	ldr	r2, [r6, #0]
 8013f78:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013f7c:	682a      	ldr	r2, [r5, #0]
 8013f7e:	9202      	str	r2, [sp, #8]
 8013f80:	3704      	adds	r7, #4
 8013f82:	9a01      	ldr	r2, [sp, #4]
 8013f84:	2a00      	cmp	r2, #0
 8013f86:	dc03      	bgt.n	8013f90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013f88:	9a03      	ldr	r2, [sp, #12]
 8013f8a:	2a00      	cmp	r2, #0
 8013f8c:	f340 80cc 	ble.w	8014128 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013f90:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013f92:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013f96:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013f9a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013f9e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013fa0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013fa4:	2b00      	cmp	r3, #0
 8013fa6:	dd0d      	ble.n	8013fc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013fa8:	1406      	asrs	r6, r0, #16
 8013faa:	d405      	bmi.n	8013fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013fac:	454e      	cmp	r6, r9
 8013fae:	da03      	bge.n	8013fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013fb0:	1416      	asrs	r6, r2, #16
 8013fb2:	d401      	bmi.n	8013fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013fb4:	4546      	cmp	r6, r8
 8013fb6:	db06      	blt.n	8013fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013fb8:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8013fba:	4460      	add	r0, ip
 8013fbc:	4432      	add	r2, r6
 8013fbe:	3b01      	subs	r3, #1
 8013fc0:	3402      	adds	r4, #2
 8013fc2:	e7ef      	b.n	8013fa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013fc4:	d00f      	beq.n	8013fe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013fc6:	1e5e      	subs	r6, r3, #1
 8013fc8:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013fcc:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013fd0:	d543      	bpl.n	801405a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8013fd2:	4698      	mov	r8, r3
 8013fd4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013fd8:	f1b8 0f00 	cmp.w	r8, #0
 8013fdc:	dc71      	bgt.n	80140c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8013fde:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013fe2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013fe6:	9b01      	ldr	r3, [sp, #4]
 8013fe8:	2b00      	cmp	r3, #0
 8013fea:	f340 809d 	ble.w	8014128 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013fee:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013ff2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013ff6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013ffa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013ffc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014000:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014004:	eeb0 6a62 	vmov.f32	s12, s5
 8014008:	ee61 7a27 	vmul.f32	s15, s2, s15
 801400c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014010:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014014:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014018:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801401c:	eeb0 6a43 	vmov.f32	s12, s6
 8014020:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014024:	ee12 2a90 	vmov	r2, s5
 8014028:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801402c:	fb92 fcf3 	sdiv	ip, r2, r3
 8014030:	ee13 2a10 	vmov	r2, s6
 8014034:	fb92 f3f3 	sdiv	r3, r2, r3
 8014038:	9312      	str	r3, [sp, #72]	@ 0x48
 801403a:	9b01      	ldr	r3, [sp, #4]
 801403c:	9a03      	ldr	r2, [sp, #12]
 801403e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014042:	3b01      	subs	r3, #1
 8014044:	9301      	str	r3, [sp, #4]
 8014046:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801404a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801404c:	eeb0 3a67 	vmov.f32	s6, s15
 8014050:	bf08      	it	eq
 8014052:	4613      	moveq	r3, r2
 8014054:	eef0 2a47 	vmov.f32	s5, s14
 8014058:	e793      	b.n	8013f82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801405a:	45ce      	cmp	lr, r9
 801405c:	dab9      	bge.n	8013fd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801405e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014060:	fb01 2606 	mla	r6, r1, r6, r2
 8014064:	1436      	asrs	r6, r6, #16
 8014066:	d4b4      	bmi.n	8013fd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014068:	4546      	cmp	r6, r8
 801406a:	dab2      	bge.n	8013fd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801406c:	4698      	mov	r8, r3
 801406e:	46a2      	mov	sl, r4
 8014070:	f1b8 0f00 	cmp.w	r8, #0
 8014074:	ddb3      	ble.n	8013fde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014076:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801407a:	9902      	ldr	r1, [sp, #8]
 801407c:	1416      	asrs	r6, r2, #16
 801407e:	fb09 1606 	mla	r6, r9, r6, r1
 8014082:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8014086:	492a      	ldr	r1, [pc, #168]	@ (8014130 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014088:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801408c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014090:	eb07 0b0e 	add.w	fp, r7, lr
 8014094:	4460      	add	r0, ip
 8014096:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801409a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801409e:	00f6      	lsls	r6, r6, #3
 80140a0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80140a4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80140a8:	ea49 0606 	orr.w	r6, r9, r6
 80140ac:	f817 900e 	ldrb.w	r9, [r7, lr]
 80140b0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80140b2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80140b6:	f82a 6b02 	strh.w	r6, [sl], #2
 80140ba:	440a      	add	r2, r1
 80140bc:	f108 38ff 	add.w	r8, r8, #4294967295
 80140c0:	e7d6      	b.n	8014070 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80140c2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80140c6:	d429      	bmi.n	801411c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80140c8:	68ae      	ldr	r6, [r5, #8]
 80140ca:	454e      	cmp	r6, r9
 80140cc:	dd26      	ble.n	801411c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80140ce:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80140d2:	d423      	bmi.n	801411c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80140d4:	68e9      	ldr	r1, [r5, #12]
 80140d6:	4559      	cmp	r1, fp
 80140d8:	dd20      	ble.n	801411c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80140da:	9902      	ldr	r1, [sp, #8]
 80140dc:	fa0f fe86 	sxth.w	lr, r6
 80140e0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80140e4:	f06f 0101 	mvn.w	r1, #1
 80140e8:	f81e e009 	ldrb.w	lr, [lr, r9]
 80140ec:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80140f0:	eb07 060e 	add.w	r6, r7, lr
 80140f4:	fb01 f908 	mul.w	r9, r1, r8
 80140f8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80140fc:	7876      	ldrb	r6, [r6, #1]
 80140fe:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8014102:	00f6      	lsls	r6, r6, #3
 8014104:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8014108:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801410c:	ea4b 0606 	orr.w	r6, fp, r6
 8014110:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014114:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8014118:	f82a 6009 	strh.w	r6, [sl, r9]
 801411c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801411e:	4460      	add	r0, ip
 8014120:	440a      	add	r2, r1
 8014122:	f108 38ff 	add.w	r8, r8, #4294967295
 8014126:	e757      	b.n	8013fd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014128:	b005      	add	sp, #20
 801412a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801412e:	bf00      	nop
 8014130:	fffff800 	.word	0xfffff800

08014134 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014138:	b087      	sub	sp, #28
 801413a:	468b      	mov	fp, r1
 801413c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801413e:	9204      	str	r2, [sp, #16]
 8014140:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014144:	9205      	str	r2, [sp, #20]
 8014146:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801414a:	6841      	ldr	r1, [r0, #4]
 801414c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8014150:	fb01 2404 	mla	r4, r1, r4, r2
 8014154:	6802      	ldr	r2, [r0, #0]
 8014156:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801415a:	f8dc 2000 	ldr.w	r2, [ip]
 801415e:	9201      	str	r2, [sp, #4]
 8014160:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014164:	3204      	adds	r2, #4
 8014166:	9202      	str	r2, [sp, #8]
 8014168:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801416c:	f1bb 0f00 	cmp.w	fp, #0
 8014170:	dc03      	bgt.n	801417a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014172:	9a04      	ldr	r2, [sp, #16]
 8014174:	2a00      	cmp	r2, #0
 8014176:	f340 8138 	ble.w	80143ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801417a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801417c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014180:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8014184:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014188:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801418a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801418e:	2b00      	cmp	r3, #0
 8014190:	dd0e      	ble.n	80141b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014192:	1402      	asrs	r2, r0, #16
 8014194:	d405      	bmi.n	80141a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014196:	42ba      	cmp	r2, r7
 8014198:	da03      	bge.n	80141a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801419a:	140a      	asrs	r2, r1, #16
 801419c:	d401      	bmi.n	80141a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801419e:	42b2      	cmp	r2, r6
 80141a0:	db07      	blt.n	80141b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80141a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80141a4:	4410      	add	r0, r2
 80141a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80141a8:	3b01      	subs	r3, #1
 80141aa:	4411      	add	r1, r2
 80141ac:	3402      	adds	r4, #2
 80141ae:	e7ee      	b.n	801418e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80141b0:	d019      	beq.n	80141e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80141b2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80141b4:	1e5a      	subs	r2, r3, #1
 80141b6:	fb05 0502 	mla	r5, r5, r2, r0
 80141ba:	142d      	asrs	r5, r5, #16
 80141bc:	d409      	bmi.n	80141d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80141be:	42bd      	cmp	r5, r7
 80141c0:	da07      	bge.n	80141d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80141c2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80141c4:	fb05 1202 	mla	r2, r5, r2, r1
 80141c8:	1412      	asrs	r2, r2, #16
 80141ca:	d402      	bmi.n	80141d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80141cc:	42b2      	cmp	r2, r6
 80141ce:	f2c0 80ac 	blt.w	801432a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80141d2:	f04f 0e00 	mov.w	lr, #0
 80141d6:	eb03 020e 	add.w	r2, r3, lr
 80141da:	2a00      	cmp	r2, #0
 80141dc:	dc3e      	bgt.n	801425c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80141de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80141e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80141e6:	f1bb 0f00 	cmp.w	fp, #0
 80141ea:	f340 80fe 	ble.w	80143ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80141ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80141f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80141f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80141fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80141fc:	f1bb 0b01 	subs.w	fp, fp, #1
 8014200:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014204:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014208:	eeb0 6a62 	vmov.f32	s12, s5
 801420c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014210:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014214:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014218:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801421c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014220:	eeb0 6a43 	vmov.f32	s12, s6
 8014224:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014228:	ee12 2a90 	vmov	r2, s5
 801422c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014230:	fb92 f3f3 	sdiv	r3, r2, r3
 8014234:	ee13 2a10 	vmov	r2, s6
 8014238:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801423c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801423e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014240:	fb92 f3f3 	sdiv	r3, r2, r3
 8014244:	9a04      	ldr	r2, [sp, #16]
 8014246:	9314      	str	r3, [sp, #80]	@ 0x50
 8014248:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801424c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801424e:	eeb0 3a67 	vmov.f32	s6, s15
 8014252:	bf08      	it	eq
 8014254:	4613      	moveq	r3, r2
 8014256:	eef0 2a47 	vmov.f32	s5, s14
 801425a:	e787      	b.n	801416c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801425c:	1406      	asrs	r6, r0, #16
 801425e:	d45d      	bmi.n	801431c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014260:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014264:	42b5      	cmp	r5, r6
 8014266:	dd59      	ble.n	801431c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014268:	140f      	asrs	r7, r1, #16
 801426a:	d457      	bmi.n	801431c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801426c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014270:	42ba      	cmp	r2, r7
 8014272:	dd53      	ble.n	801431c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014274:	9a01      	ldr	r2, [sp, #4]
 8014276:	b22d      	sxth	r5, r5
 8014278:	fb07 2505 	mla	r5, r7, r5, r2
 801427c:	5daa      	ldrb	r2, [r5, r6]
 801427e:	9d02      	ldr	r5, [sp, #8]
 8014280:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014284:	0e2e      	lsrs	r6, r5, #24
 8014286:	d049      	beq.n	801431c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014288:	f06f 0201 	mvn.w	r2, #1
 801428c:	fb02 f20e 	mul.w	r2, r2, lr
 8014290:	9203      	str	r2, [sp, #12]
 8014292:	f834 8002 	ldrh.w	r8, [r4, r2]
 8014296:	9a05      	ldr	r2, [sp, #20]
 8014298:	4356      	muls	r6, r2
 801429a:	1c72      	adds	r2, r6, #1
 801429c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80142a0:	1212      	asrs	r2, r2, #8
 80142a2:	fa1f f982 	uxth.w	r9, r2
 80142a6:	ea4f 2728 	mov.w	r7, r8, asr #8
 80142aa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80142ae:	43d2      	mvns	r2, r2
 80142b0:	b2d2      	uxtb	r2, r2
 80142b2:	fb16 f609 	smulbb	r6, r6, r9
 80142b6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80142ba:	fb07 6702 	mla	r7, r7, r2, r6
 80142be:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80142c2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80142c6:	b2ed      	uxtb	r5, r5
 80142c8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80142cc:	fa5f f888 	uxtb.w	r8, r8
 80142d0:	fb15 f509 	smulbb	r5, r5, r9
 80142d4:	fb08 5502 	mla	r5, r8, r2, r5
 80142d8:	b2bf      	uxth	r7, r7
 80142da:	fb1a fa09 	smulbb	sl, sl, r9
 80142de:	b2ad      	uxth	r5, r5
 80142e0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80142e4:	fb06 a602 	mla	r6, r6, r2, sl
 80142e8:	1c7a      	adds	r2, r7, #1
 80142ea:	f105 0a01 	add.w	sl, r5, #1
 80142ee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80142f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80142f6:	b2b6      	uxth	r6, r6
 80142f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80142fc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014300:	ea4a 0707 	orr.w	r7, sl, r7
 8014304:	f106 0a01 	add.w	sl, r6, #1
 8014308:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801430c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014310:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014314:	9a03      	ldr	r2, [sp, #12]
 8014316:	ea47 070a 	orr.w	r7, r7, sl
 801431a:	52a7      	strh	r7, [r4, r2]
 801431c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801431e:	4410      	add	r0, r2
 8014320:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014322:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014326:	4411      	add	r1, r2
 8014328:	e755      	b.n	80141d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801432a:	f04f 0800 	mov.w	r8, #0
 801432e:	eba3 0208 	sub.w	r2, r3, r8
 8014332:	2a00      	cmp	r2, #0
 8014334:	f77f af53 	ble.w	80141de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014338:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801433c:	9f01      	ldr	r7, [sp, #4]
 801433e:	140a      	asrs	r2, r1, #16
 8014340:	1405      	asrs	r5, r0, #16
 8014342:	fb06 7202 	mla	r2, r6, r2, r7
 8014346:	5d52      	ldrb	r2, [r2, r5]
 8014348:	9d02      	ldr	r5, [sp, #8]
 801434a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801434e:	0e2e      	lsrs	r6, r5, #24
 8014350:	d044      	beq.n	80143dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8014352:	9a05      	ldr	r2, [sp, #20]
 8014354:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014358:	4356      	muls	r6, r2
 801435a:	1c72      	adds	r2, r6, #1
 801435c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014360:	1212      	asrs	r2, r2, #8
 8014362:	fa1f f982 	uxth.w	r9, r2
 8014366:	ea4f 272e 	mov.w	r7, lr, asr #8
 801436a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801436e:	43d2      	mvns	r2, r2
 8014370:	b2d2      	uxtb	r2, r2
 8014372:	fb16 f609 	smulbb	r6, r6, r9
 8014376:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801437a:	fb07 6702 	mla	r7, r7, r2, r6
 801437e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014382:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014386:	b2ed      	uxtb	r5, r5
 8014388:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801438c:	fa5f fe8e 	uxtb.w	lr, lr
 8014390:	fb15 f509 	smulbb	r5, r5, r9
 8014394:	fb0e 5502 	mla	r5, lr, r2, r5
 8014398:	b2bf      	uxth	r7, r7
 801439a:	fb1a fa09 	smulbb	sl, sl, r9
 801439e:	b2ad      	uxth	r5, r5
 80143a0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80143a4:	fb06 a602 	mla	r6, r6, r2, sl
 80143a8:	1c7a      	adds	r2, r7, #1
 80143aa:	f105 0a01 	add.w	sl, r5, #1
 80143ae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80143b2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80143b6:	b2b6      	uxth	r6, r6
 80143b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80143bc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80143c0:	ea4a 0707 	orr.w	r7, sl, r7
 80143c4:	f106 0a01 	add.w	sl, r6, #1
 80143c8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80143cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80143d0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80143d4:	ea47 070a 	orr.w	r7, r7, sl
 80143d8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80143dc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80143de:	4410      	add	r0, r2
 80143e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80143e2:	f108 0801 	add.w	r8, r8, #1
 80143e6:	4411      	add	r1, r2
 80143e8:	e7a1      	b.n	801432e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80143ea:	b007      	add	sp, #28
 80143ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080143f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80143f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143f4:	b085      	sub	sp, #20
 80143f6:	468b      	mov	fp, r1
 80143f8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80143fa:	9203      	str	r2, [sp, #12]
 80143fc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014400:	6841      	ldr	r1, [r0, #4]
 8014402:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014406:	fb01 2404 	mla	r4, r1, r4, r2
 801440a:	6802      	ldr	r2, [r0, #0]
 801440c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014410:	f8de 2000 	ldr.w	r2, [lr]
 8014414:	9200      	str	r2, [sp, #0]
 8014416:	f8de 2004 	ldr.w	r2, [lr, #4]
 801441a:	3204      	adds	r2, #4
 801441c:	9201      	str	r2, [sp, #4]
 801441e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014422:	f1bb 0f00 	cmp.w	fp, #0
 8014426:	dc03      	bgt.n	8014430 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014428:	9a03      	ldr	r2, [sp, #12]
 801442a:	2a00      	cmp	r2, #0
 801442c:	f340 8153 	ble.w	80146d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014430:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014432:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014436:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801443a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801443e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014440:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014444:	2b00      	cmp	r3, #0
 8014446:	dd0e      	ble.n	8014466 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014448:	1408      	asrs	r0, r1, #16
 801444a:	d405      	bmi.n	8014458 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801444c:	42b8      	cmp	r0, r7
 801444e:	da03      	bge.n	8014458 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014450:	1410      	asrs	r0, r2, #16
 8014452:	d401      	bmi.n	8014458 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014454:	42b0      	cmp	r0, r6
 8014456:	db07      	blt.n	8014468 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014458:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801445a:	4401      	add	r1, r0
 801445c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801445e:	3b01      	subs	r3, #1
 8014460:	4402      	add	r2, r0
 8014462:	3402      	adds	r4, #2
 8014464:	e7ee      	b.n	8014444 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014466:	d017      	beq.n	8014498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014468:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801446a:	1e58      	subs	r0, r3, #1
 801446c:	fb05 1500 	mla	r5, r5, r0, r1
 8014470:	142d      	asrs	r5, r5, #16
 8014472:	d409      	bmi.n	8014488 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014474:	42bd      	cmp	r5, r7
 8014476:	da07      	bge.n	8014488 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014478:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801447a:	fb05 2000 	mla	r0, r5, r0, r2
 801447e:	1400      	asrs	r0, r0, #16
 8014480:	d402      	bmi.n	8014488 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014482:	42b0      	cmp	r0, r6
 8014484:	f2c0 80bc 	blt.w	8014600 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8014488:	2600      	movs	r6, #0
 801448a:	1998      	adds	r0, r3, r6
 801448c:	2800      	cmp	r0, #0
 801448e:	dc3e      	bgt.n	801450e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8014490:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014494:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014498:	f1bb 0f00 	cmp.w	fp, #0
 801449c:	f340 811b 	ble.w	80146d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80144a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80144a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80144a8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80144ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80144ae:	f1bb 0b01 	subs.w	fp, fp, #1
 80144b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80144b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80144ba:	eeb0 6a62 	vmov.f32	s12, s5
 80144be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80144c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80144c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80144ca:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80144ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80144d2:	eeb0 6a43 	vmov.f32	s12, s6
 80144d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80144da:	ee12 2a90 	vmov	r2, s5
 80144de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80144e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80144e6:	ee13 2a10 	vmov	r2, s6
 80144ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80144ee:	9311      	str	r3, [sp, #68]	@ 0x44
 80144f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80144f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80144f6:	9a03      	ldr	r2, [sp, #12]
 80144f8:	9312      	str	r3, [sp, #72]	@ 0x48
 80144fa:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80144fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014500:	eeb0 3a67 	vmov.f32	s6, s15
 8014504:	bf08      	it	eq
 8014506:	4613      	moveq	r3, r2
 8014508:	eef0 2a47 	vmov.f32	s5, s14
 801450c:	e789      	b.n	8014422 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801450e:	140f      	asrs	r7, r1, #16
 8014510:	d426      	bmi.n	8014560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014512:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014516:	42bd      	cmp	r5, r7
 8014518:	dd22      	ble.n	8014560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801451a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801451e:	d41f      	bmi.n	8014560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014520:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014524:	4560      	cmp	r0, ip
 8014526:	dd1b      	ble.n	8014560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014528:	9800      	ldr	r0, [sp, #0]
 801452a:	b22d      	sxth	r5, r5
 801452c:	fb0c 0505 	mla	r5, ip, r5, r0
 8014530:	5de8      	ldrb	r0, [r5, r7]
 8014532:	9d01      	ldr	r5, [sp, #4]
 8014534:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014538:	0e07      	lsrs	r7, r0, #24
 801453a:	2fff      	cmp	r7, #255	@ 0xff
 801453c:	d116      	bne.n	801456c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801453e:	f06f 0501 	mvn.w	r5, #1
 8014542:	fb05 f706 	mul.w	r7, r5, r6
 8014546:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801454a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801454e:	0945      	lsrs	r5, r0, #5
 8014550:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014554:	ea4c 0505 	orr.w	r5, ip, r5
 8014558:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801455c:	4305      	orrs	r5, r0
 801455e:	53e5      	strh	r5, [r4, r7]
 8014560:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014562:	4401      	add	r1, r0
 8014564:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014566:	3e01      	subs	r6, #1
 8014568:	4402      	add	r2, r0
 801456a:	e78e      	b.n	801448a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801456c:	b2fd      	uxtb	r5, r7
 801456e:	2f00      	cmp	r7, #0
 8014570:	d0f6      	beq.n	8014560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014572:	f06f 0701 	mvn.w	r7, #1
 8014576:	4377      	muls	r7, r6
 8014578:	fa1f f985 	uxth.w	r9, r5
 801457c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014580:	9702      	str	r7, [sp, #8]
 8014582:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014586:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801458a:	43ed      	mvns	r5, r5
 801458c:	b2ed      	uxtb	r5, r5
 801458e:	fb17 f709 	smulbb	r7, r7, r9
 8014592:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014596:	fb0c 7c05 	mla	ip, ip, r5, r7
 801459a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801459e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80145a2:	b2c0      	uxtb	r0, r0
 80145a4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80145a8:	fa5f f888 	uxtb.w	r8, r8
 80145ac:	fb10 f009 	smulbb	r0, r0, r9
 80145b0:	fb08 0005 	mla	r0, r8, r5, r0
 80145b4:	b280      	uxth	r0, r0
 80145b6:	fa1f fc8c 	uxth.w	ip, ip
 80145ba:	fb1a fa09 	smulbb	sl, sl, r9
 80145be:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80145c2:	fb07 a705 	mla	r7, r7, r5, sl
 80145c6:	f100 0a01 	add.w	sl, r0, #1
 80145ca:	f10c 0501 	add.w	r5, ip, #1
 80145ce:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80145d2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80145d6:	b2bf      	uxth	r7, r7
 80145d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80145dc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80145e0:	ea4a 0c0c 	orr.w	ip, sl, ip
 80145e4:	f107 0a01 	add.w	sl, r7, #1
 80145e8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80145ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80145f0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80145f4:	9802      	ldr	r0, [sp, #8]
 80145f6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80145fa:	f824 c000 	strh.w	ip, [r4, r0]
 80145fe:	e7af      	b.n	8014560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014600:	f04f 0800 	mov.w	r8, #0
 8014604:	eba3 0008 	sub.w	r0, r3, r8
 8014608:	2800      	cmp	r0, #0
 801460a:	f77f af41 	ble.w	8014490 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801460e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014612:	9f00      	ldr	r7, [sp, #0]
 8014614:	1410      	asrs	r0, r2, #16
 8014616:	140d      	asrs	r5, r1, #16
 8014618:	fb06 7000 	mla	r0, r6, r0, r7
 801461c:	5d40      	ldrb	r0, [r0, r5]
 801461e:	9d01      	ldr	r5, [sp, #4]
 8014620:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014624:	0e2e      	lsrs	r6, r5, #24
 8014626:	2eff      	cmp	r6, #255	@ 0xff
 8014628:	d112      	bne.n	8014650 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801462a:	482c      	ldr	r0, [pc, #176]	@ (80146dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801462c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014630:	0968      	lsrs	r0, r5, #5
 8014632:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014636:	4330      	orrs	r0, r6
 8014638:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801463c:	4328      	orrs	r0, r5
 801463e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8014642:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014644:	4401      	add	r1, r0
 8014646:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014648:	f108 0801 	add.w	r8, r8, #1
 801464c:	4402      	add	r2, r0
 801464e:	e7d9      	b.n	8014604 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014650:	b2f0      	uxtb	r0, r6
 8014652:	2e00      	cmp	r6, #0
 8014654:	d0f5      	beq.n	8014642 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014656:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801465a:	fa1f f980 	uxth.w	r9, r0
 801465e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014662:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014666:	43c0      	mvns	r0, r0
 8014668:	b2c0      	uxtb	r0, r0
 801466a:	fb16 f609 	smulbb	r6, r6, r9
 801466e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014672:	fb07 6700 	mla	r7, r7, r0, r6
 8014676:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801467a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801467e:	b2ed      	uxtb	r5, r5
 8014680:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014684:	fa5f fc8c 	uxtb.w	ip, ip
 8014688:	fb15 f509 	smulbb	r5, r5, r9
 801468c:	fb0c 5500 	mla	r5, ip, r0, r5
 8014690:	b2bf      	uxth	r7, r7
 8014692:	fb1a fa09 	smulbb	sl, sl, r9
 8014696:	b2ad      	uxth	r5, r5
 8014698:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801469c:	fb06 a600 	mla	r6, r6, r0, sl
 80146a0:	1c78      	adds	r0, r7, #1
 80146a2:	f105 0a01 	add.w	sl, r5, #1
 80146a6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80146aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80146ae:	b2b6      	uxth	r6, r6
 80146b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80146b4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80146b8:	ea4a 0707 	orr.w	r7, sl, r7
 80146bc:	f106 0a01 	add.w	sl, r6, #1
 80146c0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80146c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80146c8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80146cc:	ea47 070a 	orr.w	r7, r7, sl
 80146d0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80146d4:	e7b5      	b.n	8014642 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80146d6:	b005      	add	sp, #20
 80146d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146dc:	fffff800 	.word	0xfffff800

080146e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80146e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146e4:	b087      	sub	sp, #28
 80146e6:	468b      	mov	fp, r1
 80146e8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80146ea:	9204      	str	r2, [sp, #16]
 80146ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80146f0:	9205      	str	r2, [sp, #20]
 80146f2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80146f6:	6861      	ldr	r1, [r4, #4]
 80146f8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80146fc:	fb01 2000 	mla	r0, r1, r0, r2
 8014700:	6822      	ldr	r2, [r4, #0]
 8014702:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014706:	f8de 2000 	ldr.w	r2, [lr]
 801470a:	9201      	str	r2, [sp, #4]
 801470c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014710:	9202      	str	r2, [sp, #8]
 8014712:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014716:	f1bb 0f00 	cmp.w	fp, #0
 801471a:	dc03      	bgt.n	8014724 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801471c:	9a04      	ldr	r2, [sp, #16]
 801471e:	2a00      	cmp	r2, #0
 8014720:	f340 8142 	ble.w	80149a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014724:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014726:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801472a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801472e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014732:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014734:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014738:	2b00      	cmp	r3, #0
 801473a:	dd0e      	ble.n	801475a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801473c:	140c      	asrs	r4, r1, #16
 801473e:	d405      	bmi.n	801474c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014740:	42bc      	cmp	r4, r7
 8014742:	da03      	bge.n	801474c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014744:	1414      	asrs	r4, r2, #16
 8014746:	d401      	bmi.n	801474c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014748:	42b4      	cmp	r4, r6
 801474a:	db07      	blt.n	801475c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801474c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801474e:	4421      	add	r1, r4
 8014750:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014752:	3b01      	subs	r3, #1
 8014754:	4422      	add	r2, r4
 8014756:	3002      	adds	r0, #2
 8014758:	e7ee      	b.n	8014738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801475a:	d019      	beq.n	8014790 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801475c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801475e:	1e5c      	subs	r4, r3, #1
 8014760:	fb05 1504 	mla	r5, r5, r4, r1
 8014764:	142d      	asrs	r5, r5, #16
 8014766:	d409      	bmi.n	801477c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014768:	42bd      	cmp	r5, r7
 801476a:	da07      	bge.n	801477c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801476c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801476e:	fb05 2404 	mla	r4, r5, r4, r2
 8014772:	1424      	asrs	r4, r4, #16
 8014774:	d402      	bmi.n	801477c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014776:	42b4      	cmp	r4, r6
 8014778:	f2c0 80b1 	blt.w	80148de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801477c:	f04f 0800 	mov.w	r8, #0
 8014780:	eb03 0408 	add.w	r4, r3, r8
 8014784:	2c00      	cmp	r4, #0
 8014786:	dc3e      	bgt.n	8014806 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8014788:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801478c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014790:	f1bb 0f00 	cmp.w	fp, #0
 8014794:	f340 8108 	ble.w	80149a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014798:	ee30 0a04 	vadd.f32	s0, s0, s8
 801479c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80147a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80147a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80147a6:	f1bb 0b01 	subs.w	fp, fp, #1
 80147aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80147ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80147b2:	eeb0 6a62 	vmov.f32	s12, s5
 80147b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80147ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80147be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80147c2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80147c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80147ca:	eeb0 6a43 	vmov.f32	s12, s6
 80147ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80147d2:	ee12 2a90 	vmov	r2, s5
 80147d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80147da:	fb92 f3f3 	sdiv	r3, r2, r3
 80147de:	ee13 2a10 	vmov	r2, s6
 80147e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80147e6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80147e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80147ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80147ee:	9a04      	ldr	r2, [sp, #16]
 80147f0:	9314      	str	r3, [sp, #80]	@ 0x50
 80147f2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80147f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80147f8:	eeb0 3a67 	vmov.f32	s6, s15
 80147fc:	bf08      	it	eq
 80147fe:	4613      	moveq	r3, r2
 8014800:	eef0 2a47 	vmov.f32	s5, s14
 8014804:	e787      	b.n	8014716 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8014806:	140e      	asrs	r6, r1, #16
 8014808:	d462      	bmi.n	80148d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801480a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801480e:	42b5      	cmp	r5, r6
 8014810:	dd5e      	ble.n	80148d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014812:	1417      	asrs	r7, r2, #16
 8014814:	d45c      	bmi.n	80148d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014816:	f8de 400c 	ldr.w	r4, [lr, #12]
 801481a:	42bc      	cmp	r4, r7
 801481c:	dd58      	ble.n	80148d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801481e:	b22d      	sxth	r5, r5
 8014820:	fb07 6505 	mla	r5, r7, r5, r6
 8014824:	9c02      	ldr	r4, [sp, #8]
 8014826:	5d66      	ldrb	r6, [r4, r5]
 8014828:	2e00      	cmp	r6, #0
 801482a:	d051      	beq.n	80148d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801482c:	9c01      	ldr	r4, [sp, #4]
 801482e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8014832:	f06f 0401 	mvn.w	r4, #1
 8014836:	fb04 f408 	mul.w	r4, r4, r8
 801483a:	9403      	str	r4, [sp, #12]
 801483c:	5b05      	ldrh	r5, [r0, r4]
 801483e:	9c05      	ldr	r4, [sp, #20]
 8014840:	4366      	muls	r6, r4
 8014842:	1c74      	adds	r4, r6, #1
 8014844:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014848:	1224      	asrs	r4, r4, #8
 801484a:	b2a7      	uxth	r7, r4
 801484c:	122e      	asrs	r6, r5, #8
 801484e:	43e4      	mvns	r4, r4
 8014850:	b2e4      	uxtb	r4, r4
 8014852:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8014856:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801485a:	fb16 f604 	smulbb	r6, r6, r4
 801485e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014862:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014866:	00ed      	lsls	r5, r5, #3
 8014868:	fb0c 6c07 	mla	ip, ip, r7, r6
 801486c:	b2ed      	uxtb	r5, r5
 801486e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8014872:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014876:	fb15 f504 	smulbb	r5, r5, r4
 801487a:	fa5f f989 	uxtb.w	r9, r9
 801487e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014882:	fb09 5507 	mla	r5, r9, r7, r5
 8014886:	fb1a fa04 	smulbb	sl, sl, r4
 801488a:	fa1f fc8c 	uxth.w	ip, ip
 801488e:	b2ad      	uxth	r5, r5
 8014890:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014894:	fb06 a607 	mla	r6, r6, r7, sl
 8014898:	f10c 0401 	add.w	r4, ip, #1
 801489c:	f105 0a01 	add.w	sl, r5, #1
 80148a0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80148a4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80148a8:	b2b6      	uxth	r6, r6
 80148aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80148ae:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80148b2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80148b6:	f106 0a01 	add.w	sl, r6, #1
 80148ba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80148be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80148c2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80148c6:	9c03      	ldr	r4, [sp, #12]
 80148c8:	ea4c 0c0a 	orr.w	ip, ip, sl
 80148cc:	f820 c004 	strh.w	ip, [r0, r4]
 80148d0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80148d2:	4421      	add	r1, r4
 80148d4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80148d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80148da:	4422      	add	r2, r4
 80148dc:	e750      	b.n	8014780 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80148de:	f04f 0900 	mov.w	r9, #0
 80148e2:	eba3 0409 	sub.w	r4, r3, r9
 80148e6:	2c00      	cmp	r4, #0
 80148e8:	f77f af4e 	ble.w	8014788 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80148ec:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80148f0:	140d      	asrs	r5, r1, #16
 80148f2:	1414      	asrs	r4, r2, #16
 80148f4:	fb06 5404 	mla	r4, r6, r4, r5
 80148f8:	9d02      	ldr	r5, [sp, #8]
 80148fa:	5d2e      	ldrb	r6, [r5, r4]
 80148fc:	2e00      	cmp	r6, #0
 80148fe:	d04c      	beq.n	801499a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8014900:	9d01      	ldr	r5, [sp, #4]
 8014902:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8014906:	9c05      	ldr	r4, [sp, #20]
 8014908:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801490c:	4366      	muls	r6, r4
 801490e:	1c74      	adds	r4, r6, #1
 8014910:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014914:	1224      	asrs	r4, r4, #8
 8014916:	b2a7      	uxth	r7, r4
 8014918:	122e      	asrs	r6, r5, #8
 801491a:	43e4      	mvns	r4, r4
 801491c:	b2e4      	uxtb	r4, r4
 801491e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014922:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014926:	fb16 f604 	smulbb	r6, r6, r4
 801492a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801492e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014932:	00ed      	lsls	r5, r5, #3
 8014934:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014938:	b2ed      	uxtb	r5, r5
 801493a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801493e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014942:	fb15 f504 	smulbb	r5, r5, r4
 8014946:	fa5f f888 	uxtb.w	r8, r8
 801494a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801494e:	fb08 5507 	mla	r5, r8, r7, r5
 8014952:	fb1a fa04 	smulbb	sl, sl, r4
 8014956:	fa1f fc8c 	uxth.w	ip, ip
 801495a:	b2ad      	uxth	r5, r5
 801495c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014960:	fb06 a607 	mla	r6, r6, r7, sl
 8014964:	f10c 0401 	add.w	r4, ip, #1
 8014968:	f105 0a01 	add.w	sl, r5, #1
 801496c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014970:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014974:	b2b6      	uxth	r6, r6
 8014976:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801497a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801497e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014982:	f106 0a01 	add.w	sl, r6, #1
 8014986:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801498a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801498e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014992:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014996:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801499a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801499c:	4421      	add	r1, r4
 801499e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80149a0:	f109 0901 	add.w	r9, r9, #1
 80149a4:	4422      	add	r2, r4
 80149a6:	e79c      	b.n	80148e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80149a8:	b007      	add	sp, #28
 80149aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080149ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80149ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149b2:	b085      	sub	sp, #20
 80149b4:	468b      	mov	fp, r1
 80149b6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80149b8:	9203      	str	r2, [sp, #12]
 80149ba:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 80149be:	6861      	ldr	r1, [r4, #4]
 80149c0:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80149c4:	fb01 2000 	mla	r0, r1, r0, r2
 80149c8:	6822      	ldr	r2, [r4, #0]
 80149ca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80149ce:	f8d8 2000 	ldr.w	r2, [r8]
 80149d2:	9200      	str	r2, [sp, #0]
 80149d4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80149d8:	9201      	str	r2, [sp, #4]
 80149da:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80149de:	f1bb 0f00 	cmp.w	fp, #0
 80149e2:	dc03      	bgt.n	80149ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80149e4:	9a03      	ldr	r2, [sp, #12]
 80149e6:	2a00      	cmp	r2, #0
 80149e8:	f340 8146 	ble.w	8014c78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80149ec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80149ee:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80149f2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80149f6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80149fa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80149fc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014a00:	2b00      	cmp	r3, #0
 8014a02:	dd0e      	ble.n	8014a22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014a04:	140c      	asrs	r4, r1, #16
 8014a06:	d405      	bmi.n	8014a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a08:	42bc      	cmp	r4, r7
 8014a0a:	da03      	bge.n	8014a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a0c:	1414      	asrs	r4, r2, #16
 8014a0e:	d401      	bmi.n	8014a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a10:	42b4      	cmp	r4, r6
 8014a12:	db07      	blt.n	8014a24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014a14:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014a16:	4421      	add	r1, r4
 8014a18:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014a1a:	3b01      	subs	r3, #1
 8014a1c:	4422      	add	r2, r4
 8014a1e:	3002      	adds	r0, #2
 8014a20:	e7ee      	b.n	8014a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014a22:	d017      	beq.n	8014a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014a24:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014a26:	1e5c      	subs	r4, r3, #1
 8014a28:	fb05 1504 	mla	r5, r5, r4, r1
 8014a2c:	142d      	asrs	r5, r5, #16
 8014a2e:	d409      	bmi.n	8014a44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014a30:	42bd      	cmp	r5, r7
 8014a32:	da07      	bge.n	8014a44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014a34:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014a36:	fb05 2404 	mla	r4, r5, r4, r2
 8014a3a:	1424      	asrs	r4, r4, #16
 8014a3c:	d402      	bmi.n	8014a44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014a3e:	42b4      	cmp	r4, r6
 8014a40:	f2c0 80b3 	blt.w	8014baa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8014a44:	2600      	movs	r6, #0
 8014a46:	199c      	adds	r4, r3, r6
 8014a48:	2c00      	cmp	r4, #0
 8014a4a:	dc3e      	bgt.n	8014aca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014a4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014a50:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014a54:	f1bb 0f00 	cmp.w	fp, #0
 8014a58:	f340 810e 	ble.w	8014c78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014a5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a64:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014a68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a6a:	f1bb 0b01 	subs.w	fp, fp, #1
 8014a6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a76:	eeb0 6a62 	vmov.f32	s12, s5
 8014a7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a86:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014a8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a8e:	eeb0 6a43 	vmov.f32	s12, s6
 8014a92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a96:	ee12 2a90 	vmov	r2, s5
 8014a9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014aa2:	ee13 2a10 	vmov	r2, s6
 8014aa6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014aaa:	9311      	str	r3, [sp, #68]	@ 0x44
 8014aac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014aae:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ab2:	9a03      	ldr	r2, [sp, #12]
 8014ab4:	9312      	str	r3, [sp, #72]	@ 0x48
 8014ab6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014aba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014abc:	eeb0 3a67 	vmov.f32	s6, s15
 8014ac0:	bf08      	it	eq
 8014ac2:	4613      	moveq	r3, r2
 8014ac4:	eef0 2a47 	vmov.f32	s5, s14
 8014ac8:	e789      	b.n	80149de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014aca:	140f      	asrs	r7, r1, #16
 8014acc:	d418      	bmi.n	8014b00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014ace:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014ad2:	42bd      	cmp	r5, r7
 8014ad4:	dd14      	ble.n	8014b00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014ad6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014ada:	d411      	bmi.n	8014b00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014adc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014ae0:	4564      	cmp	r4, ip
 8014ae2:	dd0d      	ble.n	8014b00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014ae4:	b22d      	sxth	r5, r5
 8014ae6:	fb0c 7505 	mla	r5, ip, r5, r7
 8014aea:	9c01      	ldr	r4, [sp, #4]
 8014aec:	5d64      	ldrb	r4, [r4, r5]
 8014aee:	2cff      	cmp	r4, #255	@ 0xff
 8014af0:	d10c      	bne.n	8014b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014af2:	9c00      	ldr	r4, [sp, #0]
 8014af4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8014af8:	f06f 0401 	mvn.w	r4, #1
 8014afc:	4374      	muls	r4, r6
 8014afe:	5305      	strh	r5, [r0, r4]
 8014b00:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014b02:	4421      	add	r1, r4
 8014b04:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014b06:	3e01      	subs	r6, #1
 8014b08:	4422      	add	r2, r4
 8014b0a:	e79c      	b.n	8014a46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014b0c:	2c00      	cmp	r4, #0
 8014b0e:	d0f7      	beq.n	8014b00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014b10:	9f00      	ldr	r7, [sp, #0]
 8014b12:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8014b16:	f06f 0501 	mvn.w	r5, #1
 8014b1a:	4375      	muls	r5, r6
 8014b1c:	9502      	str	r5, [sp, #8]
 8014b1e:	5b45      	ldrh	r5, [r0, r5]
 8014b20:	fa1f fc84 	uxth.w	ip, r4
 8014b24:	122f      	asrs	r7, r5, #8
 8014b26:	43e4      	mvns	r4, r4
 8014b28:	b2e4      	uxtb	r4, r4
 8014b2a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8014b2e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014b32:	fb17 f704 	smulbb	r7, r7, r4
 8014b36:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014b3a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014b3e:	00ed      	lsls	r5, r5, #3
 8014b40:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8014b44:	b2ed      	uxtb	r5, r5
 8014b46:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014b4a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014b4e:	fb15 f504 	smulbb	r5, r5, r4
 8014b52:	fa5f f989 	uxtb.w	r9, r9
 8014b56:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014b5a:	fb09 550c 	mla	r5, r9, ip, r5
 8014b5e:	fb1a fa04 	smulbb	sl, sl, r4
 8014b62:	fa1f fe8e 	uxth.w	lr, lr
 8014b66:	b2ad      	uxth	r5, r5
 8014b68:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014b6c:	fb07 a70c 	mla	r7, r7, ip, sl
 8014b70:	f10e 0401 	add.w	r4, lr, #1
 8014b74:	f105 0a01 	add.w	sl, r5, #1
 8014b78:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8014b7c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014b80:	b2bf      	uxth	r7, r7
 8014b82:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014b86:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014b8a:	ea4a 0e0e 	orr.w	lr, sl, lr
 8014b8e:	f107 0a01 	add.w	sl, r7, #1
 8014b92:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014b96:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014b9a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014b9e:	9c02      	ldr	r4, [sp, #8]
 8014ba0:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014ba4:	f820 e004 	strh.w	lr, [r0, r4]
 8014ba8:	e7aa      	b.n	8014b00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014baa:	f04f 0900 	mov.w	r9, #0
 8014bae:	eba3 0409 	sub.w	r4, r3, r9
 8014bb2:	2c00      	cmp	r4, #0
 8014bb4:	f77f af4a 	ble.w	8014a4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014bb8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014bbc:	1414      	asrs	r4, r2, #16
 8014bbe:	140d      	asrs	r5, r1, #16
 8014bc0:	fb06 5504 	mla	r5, r6, r4, r5
 8014bc4:	9c01      	ldr	r4, [sp, #4]
 8014bc6:	5d64      	ldrb	r4, [r4, r5]
 8014bc8:	2cff      	cmp	r4, #255	@ 0xff
 8014bca:	d10b      	bne.n	8014be4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014bcc:	9c00      	ldr	r4, [sp, #0]
 8014bce:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8014bd2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8014bd6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014bd8:	4421      	add	r1, r4
 8014bda:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014bdc:	f109 0901 	add.w	r9, r9, #1
 8014be0:	4422      	add	r2, r4
 8014be2:	e7e4      	b.n	8014bae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8014be4:	2c00      	cmp	r4, #0
 8014be6:	d0f6      	beq.n	8014bd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014be8:	9e00      	ldr	r6, [sp, #0]
 8014bea:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8014bee:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014bf2:	b2a7      	uxth	r7, r4
 8014bf4:	122e      	asrs	r6, r5, #8
 8014bf6:	43e4      	mvns	r4, r4
 8014bf8:	b2e4      	uxtb	r4, r4
 8014bfa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014bfe:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014c02:	fb16 f604 	smulbb	r6, r6, r4
 8014c06:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014c0a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014c0e:	00ed      	lsls	r5, r5, #3
 8014c10:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014c14:	b2ed      	uxtb	r5, r5
 8014c16:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014c1a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014c1e:	fb15 f504 	smulbb	r5, r5, r4
 8014c22:	fa5f fe8e 	uxtb.w	lr, lr
 8014c26:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014c2a:	fb0e 5507 	mla	r5, lr, r7, r5
 8014c2e:	fb1a fa04 	smulbb	sl, sl, r4
 8014c32:	fa1f fc8c 	uxth.w	ip, ip
 8014c36:	b2ad      	uxth	r5, r5
 8014c38:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014c3c:	fb06 a607 	mla	r6, r6, r7, sl
 8014c40:	f10c 0401 	add.w	r4, ip, #1
 8014c44:	f105 0a01 	add.w	sl, r5, #1
 8014c48:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014c4c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014c50:	b2b6      	uxth	r6, r6
 8014c52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014c56:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014c5a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014c5e:	f106 0a01 	add.w	sl, r6, #1
 8014c62:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014c66:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014c6a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014c6e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014c72:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014c76:	e7ae      	b.n	8014bd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014c78:	b005      	add	sp, #20
 8014c7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c82:	b085      	sub	sp, #20
 8014c84:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014c86:	9203      	str	r2, [sp, #12]
 8014c88:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8014c8c:	9201      	str	r2, [sp, #4]
 8014c8e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014c92:	9100      	str	r1, [sp, #0]
 8014c94:	6841      	ldr	r1, [r0, #4]
 8014c96:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014c9a:	fb01 2404 	mla	r4, r1, r4, r2
 8014c9e:	6802      	ldr	r2, [r0, #0]
 8014ca0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014ca4:	f8de 2000 	ldr.w	r2, [lr]
 8014ca8:	9202      	str	r2, [sp, #8]
 8014caa:	9a01      	ldr	r2, [sp, #4]
 8014cac:	43d6      	mvns	r6, r2
 8014cae:	b2f6      	uxtb	r6, r6
 8014cb0:	9a00      	ldr	r2, [sp, #0]
 8014cb2:	2a00      	cmp	r2, #0
 8014cb4:	dc03      	bgt.n	8014cbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014cb6:	9a03      	ldr	r2, [sp, #12]
 8014cb8:	2a00      	cmp	r2, #0
 8014cba:	f340 8124 	ble.w	8014f06 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014cbe:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014cc0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014cc4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014cc8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014ccc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014cce:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014cd2:	2b00      	cmp	r3, #0
 8014cd4:	dd0e      	ble.n	8014cf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014cd6:	1408      	asrs	r0, r1, #16
 8014cd8:	d405      	bmi.n	8014ce6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014cda:	4560      	cmp	r0, ip
 8014cdc:	da03      	bge.n	8014ce6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014cde:	1410      	asrs	r0, r2, #16
 8014ce0:	d401      	bmi.n	8014ce6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014ce2:	42b8      	cmp	r0, r7
 8014ce4:	db07      	blt.n	8014cf6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014ce6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014ce8:	4401      	add	r1, r0
 8014cea:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014cec:	3b01      	subs	r3, #1
 8014cee:	4402      	add	r2, r0
 8014cf0:	3402      	adds	r4, #2
 8014cf2:	e7ee      	b.n	8014cd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014cf4:	d06e      	beq.n	8014dd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014cf6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014cf8:	1e58      	subs	r0, r3, #1
 8014cfa:	fb05 1500 	mla	r5, r5, r0, r1
 8014cfe:	142d      	asrs	r5, r5, #16
 8014d00:	d45c      	bmi.n	8014dbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014d02:	4565      	cmp	r5, ip
 8014d04:	da5a      	bge.n	8014dbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014d06:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014d08:	fb05 2000 	mla	r0, r5, r0, r2
 8014d0c:	1400      	asrs	r0, r0, #16
 8014d0e:	d455      	bmi.n	8014dbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014d10:	42b8      	cmp	r0, r7
 8014d12:	da53      	bge.n	8014dbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014d14:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8014d18:	4699      	mov	r9, r3
 8014d1a:	46a2      	mov	sl, r4
 8014d1c:	f1b9 0f00 	cmp.w	r9, #0
 8014d20:	dd54      	ble.n	8014dcc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014d22:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014d26:	140d      	asrs	r5, r1, #16
 8014d28:	1410      	asrs	r0, r2, #16
 8014d2a:	fb07 5000 	mla	r0, r7, r0, r5
 8014d2e:	9d02      	ldr	r5, [sp, #8]
 8014d30:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014d34:	f8ba 5000 	ldrh.w	r5, [sl]
 8014d38:	122f      	asrs	r7, r5, #8
 8014d3a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014d3e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014d42:	fb17 f706 	smulbb	r7, r7, r6
 8014d46:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014d4a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014d4e:	00ed      	lsls	r5, r5, #3
 8014d50:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014d54:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014d58:	10c7      	asrs	r7, r0, #3
 8014d5a:	b2ed      	uxtb	r5, r5
 8014d5c:	00c0      	lsls	r0, r0, #3
 8014d5e:	fb18 f806 	smulbb	r8, r8, r6
 8014d62:	fb15 f506 	smulbb	r5, r5, r6
 8014d66:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014d6a:	b2c0      	uxtb	r0, r0
 8014d6c:	fa1f fc8c 	uxth.w	ip, ip
 8014d70:	fb07 870b 	mla	r7, r7, fp, r8
 8014d74:	fb00 500b 	mla	r0, r0, fp, r5
 8014d78:	b280      	uxth	r0, r0
 8014d7a:	b2bf      	uxth	r7, r7
 8014d7c:	f10c 0501 	add.w	r5, ip, #1
 8014d80:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014d84:	f107 0801 	add.w	r8, r7, #1
 8014d88:	1c45      	adds	r5, r0, #1
 8014d8a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014d8e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014d92:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014d94:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014d98:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014d9c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014da0:	ea45 0c0c 	orr.w	ip, r5, ip
 8014da4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014da8:	4401      	add	r1, r0
 8014daa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014dac:	ea4c 0c08 	orr.w	ip, ip, r8
 8014db0:	f82a cb02 	strh.w	ip, [sl], #2
 8014db4:	4402      	add	r2, r0
 8014db6:	f109 39ff 	add.w	r9, r9, #4294967295
 8014dba:	e7af      	b.n	8014d1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014dbc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014dc0:	f04f 0800 	mov.w	r8, #0
 8014dc4:	eb03 0008 	add.w	r0, r3, r8
 8014dc8:	2800      	cmp	r0, #0
 8014dca:	dc41      	bgt.n	8014e50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014dcc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014dd0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014dd4:	9b00      	ldr	r3, [sp, #0]
 8014dd6:	2b00      	cmp	r3, #0
 8014dd8:	f340 8095 	ble.w	8014f06 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014ddc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014de0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014de4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014de8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014dea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014dee:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014df2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014df6:	eef0 6a62 	vmov.f32	s13, s5
 8014dfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014dfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e02:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014e06:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8014e0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014e0e:	eef0 6a43 	vmov.f32	s13, s6
 8014e12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014e16:	ee12 2a90 	vmov	r2, s5
 8014e1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014e1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e22:	ee13 2a10 	vmov	r2, s6
 8014e26:	9311      	str	r3, [sp, #68]	@ 0x44
 8014e28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014e2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e2e:	9312      	str	r3, [sp, #72]	@ 0x48
 8014e30:	9b00      	ldr	r3, [sp, #0]
 8014e32:	9a03      	ldr	r2, [sp, #12]
 8014e34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e38:	3b01      	subs	r3, #1
 8014e3a:	9300      	str	r3, [sp, #0]
 8014e3c:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014e40:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014e42:	eeb0 3a67 	vmov.f32	s6, s15
 8014e46:	bf08      	it	eq
 8014e48:	4613      	moveq	r3, r2
 8014e4a:	eef0 2a47 	vmov.f32	s5, s14
 8014e4e:	e72f      	b.n	8014cb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014e50:	140f      	asrs	r7, r1, #16
 8014e52:	d451      	bmi.n	8014ef8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e54:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014e58:	42bd      	cmp	r5, r7
 8014e5a:	dd4d      	ble.n	8014ef8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e5c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014e60:	d44a      	bmi.n	8014ef8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e62:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014e66:	4560      	cmp	r0, ip
 8014e68:	dd46      	ble.n	8014ef8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e6a:	b22d      	sxth	r5, r5
 8014e6c:	fb0c 7505 	mla	r5, ip, r5, r7
 8014e70:	9802      	ldr	r0, [sp, #8]
 8014e72:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014e76:	f06f 0501 	mvn.w	r5, #1
 8014e7a:	fb05 fb08 	mul.w	fp, r5, r8
 8014e7e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014e82:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014e86:	122f      	asrs	r7, r5, #8
 8014e88:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014e8c:	fb17 f706 	smulbb	r7, r7, r6
 8014e90:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014e94:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014e98:	00ed      	lsls	r5, r5, #3
 8014e9a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014e9e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014ea2:	10c7      	asrs	r7, r0, #3
 8014ea4:	b2ed      	uxtb	r5, r5
 8014ea6:	00c0      	lsls	r0, r0, #3
 8014ea8:	fb19 f906 	smulbb	r9, r9, r6
 8014eac:	fb15 f506 	smulbb	r5, r5, r6
 8014eb0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014eb4:	b2c0      	uxtb	r0, r0
 8014eb6:	fa1f fc8c 	uxth.w	ip, ip
 8014eba:	fb07 970a 	mla	r7, r7, sl, r9
 8014ebe:	fb00 500a 	mla	r0, r0, sl, r5
 8014ec2:	b2bf      	uxth	r7, r7
 8014ec4:	b280      	uxth	r0, r0
 8014ec6:	f10c 0501 	add.w	r5, ip, #1
 8014eca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ece:	f107 0901 	add.w	r9, r7, #1
 8014ed2:	1c45      	adds	r5, r0, #1
 8014ed4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014ed8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014edc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014ee0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014ee4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014ee8:	ea45 0c0c 	orr.w	ip, r5, ip
 8014eec:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014ef0:	ea4c 0c09 	orr.w	ip, ip, r9
 8014ef4:	f824 c00b 	strh.w	ip, [r4, fp]
 8014ef8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014efa:	4401      	add	r1, r0
 8014efc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014efe:	f108 38ff 	add.w	r8, r8, #4294967295
 8014f02:	4402      	add	r2, r0
 8014f04:	e75e      	b.n	8014dc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8014f06:	b005      	add	sp, #20
 8014f08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014f0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f10:	b085      	sub	sp, #20
 8014f12:	4693      	mov	fp, r2
 8014f14:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014f16:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014f18:	6870      	ldr	r0, [r6, #4]
 8014f1a:	9101      	str	r1, [sp, #4]
 8014f1c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014f20:	fb00 2404 	mla	r4, r0, r4, r2
 8014f24:	6832      	ldr	r2, [r6, #0]
 8014f26:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8014f2a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014f2e:	682a      	ldr	r2, [r5, #0]
 8014f30:	9202      	str	r2, [sp, #8]
 8014f32:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014f36:	9a01      	ldr	r2, [sp, #4]
 8014f38:	2a00      	cmp	r2, #0
 8014f3a:	dc03      	bgt.n	8014f44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014f3c:	f1bb 0f00 	cmp.w	fp, #0
 8014f40:	f340 809a 	ble.w	8015078 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014f44:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014f46:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014f4a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014f4e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014f52:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014f54:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014f58:	2b00      	cmp	r3, #0
 8014f5a:	dd0c      	ble.n	8014f76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014f5c:	1406      	asrs	r6, r0, #16
 8014f5e:	d405      	bmi.n	8014f6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f60:	454e      	cmp	r6, r9
 8014f62:	da03      	bge.n	8014f6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f64:	1416      	asrs	r6, r2, #16
 8014f66:	d401      	bmi.n	8014f6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f68:	4546      	cmp	r6, r8
 8014f6a:	db05      	blt.n	8014f78 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014f6c:	4470      	add	r0, lr
 8014f6e:	4462      	add	r2, ip
 8014f70:	3b01      	subs	r3, #1
 8014f72:	3402      	adds	r4, #2
 8014f74:	e7f0      	b.n	8014f58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014f76:	d00f      	beq.n	8014f98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014f78:	1e5e      	subs	r6, r3, #1
 8014f7a:	fb0e 0706 	mla	r7, lr, r6, r0
 8014f7e:	143f      	asrs	r7, r7, #16
 8014f80:	d541      	bpl.n	8015006 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014f82:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014f86:	4698      	mov	r8, r3
 8014f88:	9603      	str	r6, [sp, #12]
 8014f8a:	f1b8 0f00 	cmp.w	r8, #0
 8014f8e:	dc56      	bgt.n	801503e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014f90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014f98:	9b01      	ldr	r3, [sp, #4]
 8014f9a:	2b00      	cmp	r3, #0
 8014f9c:	dd6c      	ble.n	8015078 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014f9e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014fa2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014fa6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014faa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014fac:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014fb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014fb4:	eeb0 6a62 	vmov.f32	s12, s5
 8014fb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014fbc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014fc0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014fc4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014fc8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014fcc:	eeb0 6a43 	vmov.f32	s12, s6
 8014fd0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014fd4:	ee12 2a90 	vmov	r2, s5
 8014fd8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014fdc:	fb92 fef3 	sdiv	lr, r2, r3
 8014fe0:	ee13 2a10 	vmov	r2, s6
 8014fe4:	fb92 fcf3 	sdiv	ip, r2, r3
 8014fe8:	9b01      	ldr	r3, [sp, #4]
 8014fea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014fee:	3b01      	subs	r3, #1
 8014ff0:	9301      	str	r3, [sp, #4]
 8014ff2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014ff6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014ff8:	eeb0 3a67 	vmov.f32	s6, s15
 8014ffc:	bf08      	it	eq
 8014ffe:	465b      	moveq	r3, fp
 8015000:	eef0 2a47 	vmov.f32	s5, s14
 8015004:	e797      	b.n	8014f36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015006:	454f      	cmp	r7, r9
 8015008:	dabb      	bge.n	8014f82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801500a:	fb0c 2606 	mla	r6, ip, r6, r2
 801500e:	1436      	asrs	r6, r6, #16
 8015010:	d4b7      	bmi.n	8014f82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015012:	4546      	cmp	r6, r8
 8015014:	dab5      	bge.n	8014f82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015016:	461e      	mov	r6, r3
 8015018:	46a0      	mov	r8, r4
 801501a:	2e00      	cmp	r6, #0
 801501c:	ddb8      	ble.n	8014f90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801501e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015022:	9902      	ldr	r1, [sp, #8]
 8015024:	1417      	asrs	r7, r2, #16
 8015026:	ea4f 4920 	mov.w	r9, r0, asr #16
 801502a:	fb0a 9707 	mla	r7, sl, r7, r9
 801502e:	4470      	add	r0, lr
 8015030:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015034:	f828 7b02 	strh.w	r7, [r8], #2
 8015038:	4462      	add	r2, ip
 801503a:	3e01      	subs	r6, #1
 801503c:	e7ed      	b.n	801501a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801503e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015042:	d414      	bmi.n	801506e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015044:	68ae      	ldr	r6, [r5, #8]
 8015046:	454e      	cmp	r6, r9
 8015048:	dd11      	ble.n	801506e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801504a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801504e:	d40e      	bmi.n	801506e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015050:	68ef      	ldr	r7, [r5, #12]
 8015052:	4557      	cmp	r7, sl
 8015054:	dd0b      	ble.n	801506e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015056:	b236      	sxth	r6, r6
 8015058:	fb0a 9606 	mla	r6, sl, r6, r9
 801505c:	9f02      	ldr	r7, [sp, #8]
 801505e:	f06f 0101 	mvn.w	r1, #1
 8015062:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015066:	fb01 f608 	mul.w	r6, r1, r8
 801506a:	9903      	ldr	r1, [sp, #12]
 801506c:	538f      	strh	r7, [r1, r6]
 801506e:	4470      	add	r0, lr
 8015070:	4462      	add	r2, ip
 8015072:	f108 38ff 	add.w	r8, r8, #4294967295
 8015076:	e788      	b.n	8014f8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015078:	b005      	add	sp, #20
 801507a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801507e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801507e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015082:	b087      	sub	sp, #28
 8015084:	468b      	mov	fp, r1
 8015086:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015088:	9203      	str	r2, [sp, #12]
 801508a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801508e:	9204      	str	r2, [sp, #16]
 8015090:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8015094:	6841      	ldr	r1, [r0, #4]
 8015096:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801509a:	fb01 2505 	mla	r5, r1, r5, r2
 801509e:	6802      	ldr	r2, [r0, #0]
 80150a0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80150a4:	f8d9 2000 	ldr.w	r2, [r9]
 80150a8:	9201      	str	r2, [sp, #4]
 80150aa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80150ae:	f1bb 0f00 	cmp.w	fp, #0
 80150b2:	dc03      	bgt.n	80150bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80150b4:	9a03      	ldr	r2, [sp, #12]
 80150b6:	2a00      	cmp	r2, #0
 80150b8:	f340 8159 	ble.w	801536e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80150bc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80150be:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80150c2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80150c6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80150ca:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80150cc:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80150d0:	2b00      	cmp	r3, #0
 80150d2:	dd0e      	ble.n	80150f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80150d4:	1402      	asrs	r2, r0, #16
 80150d6:	d405      	bmi.n	80150e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80150d8:	42ba      	cmp	r2, r7
 80150da:	da03      	bge.n	80150e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80150dc:	140a      	asrs	r2, r1, #16
 80150de:	d401      	bmi.n	80150e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80150e0:	42b2      	cmp	r2, r6
 80150e2:	db07      	blt.n	80150f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80150e4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80150e6:	4410      	add	r0, r2
 80150e8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80150ea:	3b01      	subs	r3, #1
 80150ec:	4411      	add	r1, r2
 80150ee:	3502      	adds	r5, #2
 80150f0:	e7ee      	b.n	80150d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80150f2:	d017      	beq.n	8015124 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80150f4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80150f6:	1e5a      	subs	r2, r3, #1
 80150f8:	fb04 0402 	mla	r4, r4, r2, r0
 80150fc:	1424      	asrs	r4, r4, #16
 80150fe:	d409      	bmi.n	8015114 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015100:	42bc      	cmp	r4, r7
 8015102:	da07      	bge.n	8015114 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015104:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015106:	fb04 1202 	mla	r2, r4, r2, r1
 801510a:	1412      	asrs	r2, r2, #16
 801510c:	d402      	bmi.n	8015114 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801510e:	42b2      	cmp	r2, r6
 8015110:	f2c0 80bf 	blt.w	8015292 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015114:	2700      	movs	r7, #0
 8015116:	19da      	adds	r2, r3, r7
 8015118:	2a00      	cmp	r2, #0
 801511a:	dc3e      	bgt.n	801519a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801511c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015120:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015124:	f1bb 0f00 	cmp.w	fp, #0
 8015128:	f340 8121 	ble.w	801536e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801512c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015130:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015134:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015138:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801513a:	f1bb 0b01 	subs.w	fp, fp, #1
 801513e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015142:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015146:	eeb0 6a62 	vmov.f32	s12, s5
 801514a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801514e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015152:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015156:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801515a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801515e:	eeb0 6a43 	vmov.f32	s12, s6
 8015162:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015166:	ee12 2a90 	vmov	r2, s5
 801516a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801516e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015172:	ee13 2a10 	vmov	r2, s6
 8015176:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801517a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801517c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801517e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015182:	9a03      	ldr	r2, [sp, #12]
 8015184:	9314      	str	r3, [sp, #80]	@ 0x50
 8015186:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801518a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801518c:	eeb0 3a67 	vmov.f32	s6, s15
 8015190:	bf08      	it	eq
 8015192:	4613      	moveq	r3, r2
 8015194:	eef0 2a47 	vmov.f32	s5, s14
 8015198:	e789      	b.n	80150ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801519a:	1406      	asrs	r6, r0, #16
 801519c:	d42d      	bmi.n	80151fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801519e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80151a2:	42b4      	cmp	r4, r6
 80151a4:	dd29      	ble.n	80151fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80151a6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80151aa:	d426      	bmi.n	80151fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80151ac:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80151b0:	4562      	cmp	r2, ip
 80151b2:	dd22      	ble.n	80151fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80151b4:	b224      	sxth	r4, r4
 80151b6:	9a01      	ldr	r2, [sp, #4]
 80151b8:	fb0c 6404 	mla	r4, ip, r4, r6
 80151bc:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80151c0:	0e22      	lsrs	r2, r4, #24
 80151c2:	d01a      	beq.n	80151fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80151c4:	9e04      	ldr	r6, [sp, #16]
 80151c6:	4372      	muls	r2, r6
 80151c8:	1c56      	adds	r6, r2, #1
 80151ca:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80151ce:	1212      	asrs	r2, r2, #8
 80151d0:	0a26      	lsrs	r6, r4, #8
 80151d2:	2aff      	cmp	r2, #255	@ 0xff
 80151d4:	9605      	str	r6, [sp, #20]
 80151d6:	d116      	bne.n	8015206 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80151d8:	f06f 0201 	mvn.w	r2, #1
 80151dc:	fb02 fc07 	mul.w	ip, r2, r7
 80151e0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80151e4:	0962      	lsrs	r2, r4, #5
 80151e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80151ea:	f026 0607 	bic.w	r6, r6, #7
 80151ee:	4316      	orrs	r6, r2
 80151f0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80151f4:	4326      	orrs	r6, r4
 80151f6:	f825 600c 	strh.w	r6, [r5, ip]
 80151fa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80151fc:	4410      	add	r0, r2
 80151fe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015200:	3f01      	subs	r7, #1
 8015202:	4411      	add	r1, r2
 8015204:	e787      	b.n	8015116 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015206:	f06f 0601 	mvn.w	r6, #1
 801520a:	437e      	muls	r6, r7
 801520c:	fa1f fa82 	uxth.w	sl, r2
 8015210:	f835 8006 	ldrh.w	r8, [r5, r6]
 8015214:	9602      	str	r6, [sp, #8]
 8015216:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801521a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801521e:	43d2      	mvns	r2, r2
 8015220:	b2d2      	uxtb	r2, r2
 8015222:	fb1c fc0a 	smulbb	ip, ip, sl
 8015226:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801522a:	fb0e ce02 	mla	lr, lr, r2, ip
 801522e:	b2e4      	uxtb	r4, r4
 8015230:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015234:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015238:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801523c:	fa5f f888 	uxtb.w	r8, r8
 8015240:	fb14 f40a 	smulbb	r4, r4, sl
 8015244:	fb08 4402 	mla	r4, r8, r2, r4
 8015248:	fa1f fe8e 	uxth.w	lr, lr
 801524c:	fb16 f60a 	smulbb	r6, r6, sl
 8015250:	b2a4      	uxth	r4, r4
 8015252:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015256:	fb0c 6c02 	mla	ip, ip, r2, r6
 801525a:	f10e 0201 	add.w	r2, lr, #1
 801525e:	1c66      	adds	r6, r4, #1
 8015260:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015264:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015268:	fa1f fc8c 	uxth.w	ip, ip
 801526c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015270:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015274:	ea46 0e0e 	orr.w	lr, r6, lr
 8015278:	f10c 0601 	add.w	r6, ip, #1
 801527c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015280:	0976      	lsrs	r6, r6, #5
 8015282:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015286:	9a02      	ldr	r2, [sp, #8]
 8015288:	ea4e 0e06 	orr.w	lr, lr, r6
 801528c:	f825 e002 	strh.w	lr, [r5, r2]
 8015290:	e7b3      	b.n	80151fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015292:	f04f 0800 	mov.w	r8, #0
 8015296:	eba3 0208 	sub.w	r2, r3, r8
 801529a:	2a00      	cmp	r2, #0
 801529c:	f77f af3e 	ble.w	801511c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152a0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80152a4:	1404      	asrs	r4, r0, #16
 80152a6:	140a      	asrs	r2, r1, #16
 80152a8:	fb06 4202 	mla	r2, r6, r2, r4
 80152ac:	9c01      	ldr	r4, [sp, #4]
 80152ae:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80152b2:	0e22      	lsrs	r2, r4, #24
 80152b4:	d016      	beq.n	80152e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80152b6:	9e04      	ldr	r6, [sp, #16]
 80152b8:	4372      	muls	r2, r6
 80152ba:	1c56      	adds	r6, r2, #1
 80152bc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80152c0:	1212      	asrs	r2, r2, #8
 80152c2:	2aff      	cmp	r2, #255	@ 0xff
 80152c4:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80152c8:	d113      	bne.n	80152f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80152ca:	0962      	lsrs	r2, r4, #5
 80152cc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80152d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80152d4:	f026 0607 	bic.w	r6, r6, #7
 80152d8:	4316      	orrs	r6, r2
 80152da:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80152de:	4326      	orrs	r6, r4
 80152e0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80152e4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80152e6:	4410      	add	r0, r2
 80152e8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80152ea:	f108 0801 	add.w	r8, r8, #1
 80152ee:	4411      	add	r1, r2
 80152f0:	e7d1      	b.n	8015296 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80152f2:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80152f6:	fa1f fa82 	uxth.w	sl, r2
 80152fa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80152fe:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8015302:	43d2      	mvns	r2, r2
 8015304:	b2d2      	uxtb	r2, r2
 8015306:	fb17 f70a 	smulbb	r7, r7, sl
 801530a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801530e:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015312:	b2e4      	uxtb	r4, r4
 8015314:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015318:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801531c:	fa5f fe8e 	uxtb.w	lr, lr
 8015320:	fb14 f40a 	smulbb	r4, r4, sl
 8015324:	fb0e 4402 	mla	r4, lr, r2, r4
 8015328:	b2f6      	uxtb	r6, r6
 801532a:	fa1f fc8c 	uxth.w	ip, ip
 801532e:	fb16 f60a 	smulbb	r6, r6, sl
 8015332:	b2a4      	uxth	r4, r4
 8015334:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015338:	fb07 6702 	mla	r7, r7, r2, r6
 801533c:	f10c 0201 	add.w	r2, ip, #1
 8015340:	1c66      	adds	r6, r4, #1
 8015342:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015346:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801534a:	b2bf      	uxth	r7, r7
 801534c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015350:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015354:	ea46 0c0c 	orr.w	ip, r6, ip
 8015358:	1c7e      	adds	r6, r7, #1
 801535a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801535e:	0976      	lsrs	r6, r6, #5
 8015360:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015364:	ea4c 0c06 	orr.w	ip, ip, r6
 8015368:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801536c:	e7ba      	b.n	80152e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801536e:	b007      	add	sp, #28
 8015370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015374 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015378:	b085      	sub	sp, #20
 801537a:	468b      	mov	fp, r1
 801537c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801537e:	9203      	str	r2, [sp, #12]
 8015380:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015384:	6841      	ldr	r1, [r0, #4]
 8015386:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801538a:	fb01 2404 	mla	r4, r1, r4, r2
 801538e:	6802      	ldr	r2, [r0, #0]
 8015390:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015394:	f8d8 2000 	ldr.w	r2, [r8]
 8015398:	9201      	str	r2, [sp, #4]
 801539a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801539e:	f1bb 0f00 	cmp.w	fp, #0
 80153a2:	dc03      	bgt.n	80153ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80153a4:	9a03      	ldr	r2, [sp, #12]
 80153a6:	2a00      	cmp	r2, #0
 80153a8:	f340 814f 	ble.w	801564a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80153ac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80153ae:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80153b2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80153b6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80153ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80153bc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80153c0:	2b00      	cmp	r3, #0
 80153c2:	dd0e      	ble.n	80153e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80153c4:	1408      	asrs	r0, r1, #16
 80153c6:	d405      	bmi.n	80153d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80153c8:	42b8      	cmp	r0, r7
 80153ca:	da03      	bge.n	80153d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80153cc:	1410      	asrs	r0, r2, #16
 80153ce:	d401      	bmi.n	80153d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80153d0:	42b0      	cmp	r0, r6
 80153d2:	db07      	blt.n	80153e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80153d4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80153d6:	4401      	add	r1, r0
 80153d8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80153da:	3b01      	subs	r3, #1
 80153dc:	4402      	add	r2, r0
 80153de:	3402      	adds	r4, #2
 80153e0:	e7ee      	b.n	80153c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80153e2:	d017      	beq.n	8015414 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80153e4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80153e6:	1e58      	subs	r0, r3, #1
 80153e8:	fb05 1500 	mla	r5, r5, r0, r1
 80153ec:	142d      	asrs	r5, r5, #16
 80153ee:	d409      	bmi.n	8015404 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80153f0:	42bd      	cmp	r5, r7
 80153f2:	da07      	bge.n	8015404 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80153f4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80153f6:	fb05 2000 	mla	r0, r5, r0, r2
 80153fa:	1400      	asrs	r0, r0, #16
 80153fc:	d402      	bmi.n	8015404 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80153fe:	42b0      	cmp	r0, r6
 8015400:	f2c0 80ba 	blt.w	8015578 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015404:	2600      	movs	r6, #0
 8015406:	1998      	adds	r0, r3, r6
 8015408:	2800      	cmp	r0, #0
 801540a:	dc3e      	bgt.n	801548a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801540c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015410:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015414:	f1bb 0f00 	cmp.w	fp, #0
 8015418:	f340 8117 	ble.w	801564a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801541c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015420:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015424:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015428:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801542a:	f1bb 0b01 	subs.w	fp, fp, #1
 801542e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015432:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015436:	eeb0 6a62 	vmov.f32	s12, s5
 801543a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801543e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015442:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015446:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801544a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801544e:	eeb0 6a43 	vmov.f32	s12, s6
 8015452:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015456:	ee12 2a90 	vmov	r2, s5
 801545a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801545e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015462:	ee13 2a10 	vmov	r2, s6
 8015466:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801546a:	9311      	str	r3, [sp, #68]	@ 0x44
 801546c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801546e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015472:	9a03      	ldr	r2, [sp, #12]
 8015474:	9312      	str	r3, [sp, #72]	@ 0x48
 8015476:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801547a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801547c:	eeb0 3a67 	vmov.f32	s6, s15
 8015480:	bf08      	it	eq
 8015482:	4613      	moveq	r3, r2
 8015484:	eef0 2a47 	vmov.f32	s5, s14
 8015488:	e789      	b.n	801539e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801548a:	140f      	asrs	r7, r1, #16
 801548c:	d424      	bmi.n	80154d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801548e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015492:	42bd      	cmp	r5, r7
 8015494:	dd20      	ble.n	80154d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015496:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801549a:	d41d      	bmi.n	80154d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801549c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80154a0:	4560      	cmp	r0, ip
 80154a2:	dd19      	ble.n	80154d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80154a4:	b22d      	sxth	r5, r5
 80154a6:	fb0c 7505 	mla	r5, ip, r5, r7
 80154aa:	9801      	ldr	r0, [sp, #4]
 80154ac:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80154b0:	0e07      	lsrs	r7, r0, #24
 80154b2:	2fff      	cmp	r7, #255	@ 0xff
 80154b4:	d116      	bne.n	80154e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80154b6:	f06f 0501 	mvn.w	r5, #1
 80154ba:	fb05 f706 	mul.w	r7, r5, r6
 80154be:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80154c2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80154c6:	0945      	lsrs	r5, r0, #5
 80154c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80154cc:	ea4c 0505 	orr.w	r5, ip, r5
 80154d0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80154d4:	4305      	orrs	r5, r0
 80154d6:	53e5      	strh	r5, [r4, r7]
 80154d8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80154da:	4401      	add	r1, r0
 80154dc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80154de:	3e01      	subs	r6, #1
 80154e0:	4402      	add	r2, r0
 80154e2:	e790      	b.n	8015406 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80154e4:	b2fd      	uxtb	r5, r7
 80154e6:	2f00      	cmp	r7, #0
 80154e8:	d0f6      	beq.n	80154d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80154ea:	f06f 0701 	mvn.w	r7, #1
 80154ee:	4377      	muls	r7, r6
 80154f0:	fa1f f985 	uxth.w	r9, r5
 80154f4:	f834 e007 	ldrh.w	lr, [r4, r7]
 80154f8:	9702      	str	r7, [sp, #8]
 80154fa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80154fe:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015502:	43ed      	mvns	r5, r5
 8015504:	b2ed      	uxtb	r5, r5
 8015506:	fb17 f709 	smulbb	r7, r7, r9
 801550a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801550e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015512:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015516:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801551a:	b2c0      	uxtb	r0, r0
 801551c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015520:	fa5f fe8e 	uxtb.w	lr, lr
 8015524:	fb10 f009 	smulbb	r0, r0, r9
 8015528:	fb0e 0005 	mla	r0, lr, r5, r0
 801552c:	b280      	uxth	r0, r0
 801552e:	fa1f fc8c 	uxth.w	ip, ip
 8015532:	fb1a fa09 	smulbb	sl, sl, r9
 8015536:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801553a:	fb07 a705 	mla	r7, r7, r5, sl
 801553e:	f100 0a01 	add.w	sl, r0, #1
 8015542:	f10c 0501 	add.w	r5, ip, #1
 8015546:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801554a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801554e:	b2bf      	uxth	r7, r7
 8015550:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015554:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015558:	ea4a 0c0c 	orr.w	ip, sl, ip
 801555c:	f107 0a01 	add.w	sl, r7, #1
 8015560:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015564:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015568:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801556c:	9802      	ldr	r0, [sp, #8]
 801556e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015572:	f824 c000 	strh.w	ip, [r4, r0]
 8015576:	e7af      	b.n	80154d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015578:	f04f 0e00 	mov.w	lr, #0
 801557c:	eba3 000e 	sub.w	r0, r3, lr
 8015580:	2800      	cmp	r0, #0
 8015582:	f77f af43 	ble.w	801540c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015586:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801558a:	140d      	asrs	r5, r1, #16
 801558c:	1410      	asrs	r0, r2, #16
 801558e:	fb06 5000 	mla	r0, r6, r0, r5
 8015592:	9d01      	ldr	r5, [sp, #4]
 8015594:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015598:	0e2e      	lsrs	r6, r5, #24
 801559a:	2eff      	cmp	r6, #255	@ 0xff
 801559c:	d112      	bne.n	80155c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801559e:	482c      	ldr	r0, [pc, #176]	@ (8015650 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80155a0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80155a4:	0968      	lsrs	r0, r5, #5
 80155a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80155aa:	4330      	orrs	r0, r6
 80155ac:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80155b0:	4328      	orrs	r0, r5
 80155b2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80155b6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80155b8:	4401      	add	r1, r0
 80155ba:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80155bc:	f10e 0e01 	add.w	lr, lr, #1
 80155c0:	4402      	add	r2, r0
 80155c2:	e7db      	b.n	801557c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80155c4:	b2f0      	uxtb	r0, r6
 80155c6:	2e00      	cmp	r6, #0
 80155c8:	d0f5      	beq.n	80155b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80155ca:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80155ce:	fa1f f980 	uxth.w	r9, r0
 80155d2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80155d6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80155da:	43c0      	mvns	r0, r0
 80155dc:	b2c0      	uxtb	r0, r0
 80155de:	fb16 f609 	smulbb	r6, r6, r9
 80155e2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80155e6:	fb07 6700 	mla	r7, r7, r0, r6
 80155ea:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80155ee:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80155f2:	b2ed      	uxtb	r5, r5
 80155f4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80155f8:	fa5f fc8c 	uxtb.w	ip, ip
 80155fc:	fb15 f509 	smulbb	r5, r5, r9
 8015600:	fb0c 5500 	mla	r5, ip, r0, r5
 8015604:	b2bf      	uxth	r7, r7
 8015606:	fb1a fa09 	smulbb	sl, sl, r9
 801560a:	b2ad      	uxth	r5, r5
 801560c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015610:	fb06 a600 	mla	r6, r6, r0, sl
 8015614:	1c78      	adds	r0, r7, #1
 8015616:	f105 0a01 	add.w	sl, r5, #1
 801561a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801561e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015622:	b2b6      	uxth	r6, r6
 8015624:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015628:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801562c:	ea4a 0707 	orr.w	r7, sl, r7
 8015630:	f106 0a01 	add.w	sl, r6, #1
 8015634:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015638:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801563c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015640:	ea47 070a 	orr.w	r7, r7, sl
 8015644:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8015648:	e7b5      	b.n	80155b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801564a:	b005      	add	sp, #20
 801564c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015650:	fffff800 	.word	0xfffff800

08015654 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015658:	b087      	sub	sp, #28
 801565a:	468b      	mov	fp, r1
 801565c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801565e:	9203      	str	r2, [sp, #12]
 8015660:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015664:	9204      	str	r2, [sp, #16]
 8015666:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801566a:	6841      	ldr	r1, [r0, #4]
 801566c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8015670:	fb01 2404 	mla	r4, r1, r4, r2
 8015674:	6802      	ldr	r2, [r0, #0]
 8015676:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801567a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801567e:	3201      	adds	r2, #1
 8015680:	f022 0201 	bic.w	r2, r2, #1
 8015684:	9200      	str	r2, [sp, #0]
 8015686:	f8d9 2000 	ldr.w	r2, [r9]
 801568a:	9201      	str	r2, [sp, #4]
 801568c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015690:	f1bb 0f00 	cmp.w	fp, #0
 8015694:	dc03      	bgt.n	801569e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015696:	9a03      	ldr	r2, [sp, #12]
 8015698:	2a00      	cmp	r2, #0
 801569a:	f340 8169 	ble.w	8015970 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801569e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80156a0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80156a4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80156a8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80156ac:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80156ae:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80156b2:	2b00      	cmp	r3, #0
 80156b4:	dd0e      	ble.n	80156d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80156b6:	1402      	asrs	r2, r0, #16
 80156b8:	d405      	bmi.n	80156c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80156ba:	42ba      	cmp	r2, r7
 80156bc:	da03      	bge.n	80156c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80156be:	140a      	asrs	r2, r1, #16
 80156c0:	d401      	bmi.n	80156c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80156c2:	42b2      	cmp	r2, r6
 80156c4:	db07      	blt.n	80156d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80156c6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80156c8:	4410      	add	r0, r2
 80156ca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80156cc:	3b01      	subs	r3, #1
 80156ce:	4411      	add	r1, r2
 80156d0:	3402      	adds	r4, #2
 80156d2:	e7ee      	b.n	80156b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80156d4:	d017      	beq.n	8015706 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80156d6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80156d8:	1e5a      	subs	r2, r3, #1
 80156da:	fb05 0502 	mla	r5, r5, r2, r0
 80156de:	142d      	asrs	r5, r5, #16
 80156e0:	d409      	bmi.n	80156f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80156e2:	42bd      	cmp	r5, r7
 80156e4:	da07      	bge.n	80156f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80156e6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80156e8:	fb05 1202 	mla	r2, r5, r2, r1
 80156ec:	1412      	asrs	r2, r2, #16
 80156ee:	d402      	bmi.n	80156f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80156f0:	42b2      	cmp	r2, r6
 80156f2:	f2c0 80c7 	blt.w	8015884 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80156f6:	2700      	movs	r7, #0
 80156f8:	19da      	adds	r2, r3, r7
 80156fa:	2a00      	cmp	r2, #0
 80156fc:	dc3e      	bgt.n	801577c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80156fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015702:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015706:	f1bb 0f00 	cmp.w	fp, #0
 801570a:	f340 8131 	ble.w	8015970 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801570e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015712:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015716:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801571a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801571c:	f1bb 0b01 	subs.w	fp, fp, #1
 8015720:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015724:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015728:	eeb0 6a62 	vmov.f32	s12, s5
 801572c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015730:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015734:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015738:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801573c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015740:	eeb0 6a43 	vmov.f32	s12, s6
 8015744:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015748:	ee12 2a90 	vmov	r2, s5
 801574c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015750:	fb92 f3f3 	sdiv	r3, r2, r3
 8015754:	ee13 2a10 	vmov	r2, s6
 8015758:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801575c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801575e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015760:	fb92 f3f3 	sdiv	r3, r2, r3
 8015764:	9a03      	ldr	r2, [sp, #12]
 8015766:	9314      	str	r3, [sp, #80]	@ 0x50
 8015768:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801576c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801576e:	eeb0 3a67 	vmov.f32	s6, s15
 8015772:	bf08      	it	eq
 8015774:	4613      	moveq	r3, r2
 8015776:	eef0 2a47 	vmov.f32	s5, s14
 801577a:	e789      	b.n	8015690 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801577c:	1405      	asrs	r5, r0, #16
 801577e:	d435      	bmi.n	80157ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015780:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015784:	42aa      	cmp	r2, r5
 8015786:	dd31      	ble.n	80157ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015788:	140e      	asrs	r6, r1, #16
 801578a:	d42f      	bmi.n	80157ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801578c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015790:	42b2      	cmp	r2, r6
 8015792:	dd2b      	ble.n	80157ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015794:	9a00      	ldr	r2, [sp, #0]
 8015796:	fb06 5502 	mla	r5, r6, r2, r5
 801579a:	086a      	lsrs	r2, r5, #1
 801579c:	9e01      	ldr	r6, [sp, #4]
 801579e:	5cb2      	ldrb	r2, [r6, r2]
 80157a0:	07ee      	lsls	r6, r5, #31
 80157a2:	bf54      	ite	pl
 80157a4:	f002 020f 	andpl.w	r2, r2, #15
 80157a8:	1112      	asrmi	r2, r2, #4
 80157aa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80157ae:	b2d2      	uxtb	r2, r2
 80157b0:	b1e2      	cbz	r2, 80157ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80157b2:	9d04      	ldr	r5, [sp, #16]
 80157b4:	436a      	muls	r2, r5
 80157b6:	1c55      	adds	r5, r2, #1
 80157b8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80157bc:	4d6e      	ldr	r5, [pc, #440]	@ (8015978 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80157be:	682d      	ldr	r5, [r5, #0]
 80157c0:	1212      	asrs	r2, r2, #8
 80157c2:	0a2e      	lsrs	r6, r5, #8
 80157c4:	2aff      	cmp	r2, #255	@ 0xff
 80157c6:	9605      	str	r6, [sp, #20]
 80157c8:	d116      	bne.n	80157f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80157ca:	f06f 0201 	mvn.w	r2, #1
 80157ce:	fb02 fc07 	mul.w	ip, r2, r7
 80157d2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80157d6:	096a      	lsrs	r2, r5, #5
 80157d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80157dc:	f026 0607 	bic.w	r6, r6, #7
 80157e0:	4316      	orrs	r6, r2
 80157e2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80157e6:	432e      	orrs	r6, r5
 80157e8:	f824 600c 	strh.w	r6, [r4, ip]
 80157ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80157ee:	4410      	add	r0, r2
 80157f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80157f2:	3f01      	subs	r7, #1
 80157f4:	4411      	add	r1, r2
 80157f6:	e77f      	b.n	80156f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80157f8:	f06f 0601 	mvn.w	r6, #1
 80157fc:	437e      	muls	r6, r7
 80157fe:	fa1f fa82 	uxth.w	sl, r2
 8015802:	f834 8006 	ldrh.w	r8, [r4, r6]
 8015806:	9602      	str	r6, [sp, #8]
 8015808:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801580c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8015810:	43d2      	mvns	r2, r2
 8015812:	b2d2      	uxtb	r2, r2
 8015814:	fb1c fc0a 	smulbb	ip, ip, sl
 8015818:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801581c:	fb0e ce02 	mla	lr, lr, r2, ip
 8015820:	b2ed      	uxtb	r5, r5
 8015822:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015826:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801582a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801582e:	fa5f f888 	uxtb.w	r8, r8
 8015832:	fb15 f50a 	smulbb	r5, r5, sl
 8015836:	fb08 5502 	mla	r5, r8, r2, r5
 801583a:	fa1f fe8e 	uxth.w	lr, lr
 801583e:	fb16 f60a 	smulbb	r6, r6, sl
 8015842:	b2ad      	uxth	r5, r5
 8015844:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015848:	fb0c 6c02 	mla	ip, ip, r2, r6
 801584c:	f10e 0201 	add.w	r2, lr, #1
 8015850:	1c6e      	adds	r6, r5, #1
 8015852:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015856:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801585a:	fa1f fc8c 	uxth.w	ip, ip
 801585e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015862:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015866:	ea46 0e0e 	orr.w	lr, r6, lr
 801586a:	f10c 0601 	add.w	r6, ip, #1
 801586e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015872:	0976      	lsrs	r6, r6, #5
 8015874:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015878:	9a02      	ldr	r2, [sp, #8]
 801587a:	ea4e 0e06 	orr.w	lr, lr, r6
 801587e:	f824 e002 	strh.w	lr, [r4, r2]
 8015882:	e7b3      	b.n	80157ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015884:	f04f 0800 	mov.w	r8, #0
 8015888:	eba3 0208 	sub.w	r2, r3, r8
 801588c:	2a00      	cmp	r2, #0
 801588e:	f77f af36 	ble.w	80156fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015892:	9e00      	ldr	r6, [sp, #0]
 8015894:	1402      	asrs	r2, r0, #16
 8015896:	140d      	asrs	r5, r1, #16
 8015898:	fb06 2505 	mla	r5, r6, r5, r2
 801589c:	086a      	lsrs	r2, r5, #1
 801589e:	9e01      	ldr	r6, [sp, #4]
 80158a0:	5cb2      	ldrb	r2, [r6, r2]
 80158a2:	07ed      	lsls	r5, r5, #31
 80158a4:	bf54      	ite	pl
 80158a6:	f002 020f 	andpl.w	r2, r2, #15
 80158aa:	1112      	asrmi	r2, r2, #4
 80158ac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80158b0:	b2d2      	uxtb	r2, r2
 80158b2:	b1c2      	cbz	r2, 80158e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80158b4:	9d04      	ldr	r5, [sp, #16]
 80158b6:	436a      	muls	r2, r5
 80158b8:	1c55      	adds	r5, r2, #1
 80158ba:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80158be:	4d2e      	ldr	r5, [pc, #184]	@ (8015978 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80158c0:	1212      	asrs	r2, r2, #8
 80158c2:	682e      	ldr	r6, [r5, #0]
 80158c4:	2aff      	cmp	r2, #255	@ 0xff
 80158c6:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80158ca:	d113      	bne.n	80158f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80158cc:	0972      	lsrs	r2, r6, #5
 80158ce:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80158d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80158d6:	f025 0507 	bic.w	r5, r5, #7
 80158da:	4315      	orrs	r5, r2
 80158dc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80158e0:	4335      	orrs	r5, r6
 80158e2:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80158e6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80158e8:	4410      	add	r0, r2
 80158ea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80158ec:	f108 0801 	add.w	r8, r8, #1
 80158f0:	4411      	add	r1, r2
 80158f2:	e7c9      	b.n	8015888 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80158f4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80158f8:	fa1f fa82 	uxth.w	sl, r2
 80158fc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015900:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8015904:	43d2      	mvns	r2, r2
 8015906:	b2d2      	uxtb	r2, r2
 8015908:	fb17 f70a 	smulbb	r7, r7, sl
 801590c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015910:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015914:	b2f6      	uxtb	r6, r6
 8015916:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801591a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801591e:	fa5f fe8e 	uxtb.w	lr, lr
 8015922:	fb16 f60a 	smulbb	r6, r6, sl
 8015926:	fb0e 6602 	mla	r6, lr, r2, r6
 801592a:	b2ed      	uxtb	r5, r5
 801592c:	fa1f fc8c 	uxth.w	ip, ip
 8015930:	fb15 f50a 	smulbb	r5, r5, sl
 8015934:	b2b6      	uxth	r6, r6
 8015936:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801593a:	fb07 5702 	mla	r7, r7, r2, r5
 801593e:	f10c 0201 	add.w	r2, ip, #1
 8015942:	1c75      	adds	r5, r6, #1
 8015944:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015948:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801594c:	b2bf      	uxth	r7, r7
 801594e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015952:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015956:	ea45 0c0c 	orr.w	ip, r5, ip
 801595a:	1c7d      	adds	r5, r7, #1
 801595c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8015960:	096d      	lsrs	r5, r5, #5
 8015962:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015966:	ea4c 0c05 	orr.w	ip, ip, r5
 801596a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801596e:	e7ba      	b.n	80158e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015970:	b007      	add	sp, #28
 8015972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015976:	bf00      	nop
 8015978:	20014050 	.word	0x20014050

0801597c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801597c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015980:	b087      	sub	sp, #28
 8015982:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8015c90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015986:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015988:	9205      	str	r2, [sp, #20]
 801598a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801598e:	9101      	str	r1, [sp, #4]
 8015990:	6841      	ldr	r1, [r0, #4]
 8015992:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8015996:	fb01 2404 	mla	r4, r1, r4, r2
 801599a:	6802      	ldr	r2, [r0, #0]
 801599c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80159a0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80159a4:	3201      	adds	r2, #1
 80159a6:	f022 0201 	bic.w	r2, r2, #1
 80159aa:	9202      	str	r2, [sp, #8]
 80159ac:	f8db 2000 	ldr.w	r2, [fp]
 80159b0:	9203      	str	r2, [sp, #12]
 80159b2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80159b6:	9a01      	ldr	r2, [sp, #4]
 80159b8:	2a00      	cmp	r2, #0
 80159ba:	dc03      	bgt.n	80159c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80159bc:	9a05      	ldr	r2, [sp, #20]
 80159be:	2a00      	cmp	r2, #0
 80159c0:	f340 8162 	ble.w	8015c88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80159c4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80159c6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80159ca:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80159ce:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80159d2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80159d4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80159d8:	2b00      	cmp	r3, #0
 80159da:	dd0e      	ble.n	80159fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80159dc:	1402      	asrs	r2, r0, #16
 80159de:	d405      	bmi.n	80159ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80159e0:	42ba      	cmp	r2, r7
 80159e2:	da03      	bge.n	80159ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80159e4:	140a      	asrs	r2, r1, #16
 80159e6:	d401      	bmi.n	80159ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80159e8:	42b2      	cmp	r2, r6
 80159ea:	db07      	blt.n	80159fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80159ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80159ee:	4410      	add	r0, r2
 80159f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80159f2:	3b01      	subs	r3, #1
 80159f4:	4411      	add	r1, r2
 80159f6:	3402      	adds	r4, #2
 80159f8:	e7ee      	b.n	80159d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80159fa:	d017      	beq.n	8015a2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80159fc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80159fe:	1e5a      	subs	r2, r3, #1
 8015a00:	fb05 0502 	mla	r5, r5, r2, r0
 8015a04:	142d      	asrs	r5, r5, #16
 8015a06:	d409      	bmi.n	8015a1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015a08:	42bd      	cmp	r5, r7
 8015a0a:	da07      	bge.n	8015a1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015a0c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015a0e:	fb05 1202 	mla	r2, r5, r2, r1
 8015a12:	1412      	asrs	r2, r2, #16
 8015a14:	d402      	bmi.n	8015a1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015a16:	42b2      	cmp	r2, r6
 8015a18:	f2c0 80c3 	blt.w	8015ba2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8015a1c:	2500      	movs	r5, #0
 8015a1e:	195a      	adds	r2, r3, r5
 8015a20:	2a00      	cmp	r2, #0
 8015a22:	dc3f      	bgt.n	8015aa4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015a24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015a28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015a2c:	9b01      	ldr	r3, [sp, #4]
 8015a2e:	2b00      	cmp	r3, #0
 8015a30:	f340 812a 	ble.w	8015c88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015a34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015a38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015a3c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015a40:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a42:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015a46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015a4a:	eeb0 6a62 	vmov.f32	s12, s5
 8015a4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015a52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a56:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015a5a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015a5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015a62:	eeb0 6a43 	vmov.f32	s12, s6
 8015a66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015a6a:	ee12 2a90 	vmov	r2, s5
 8015a6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a72:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a76:	ee13 2a10 	vmov	r2, s6
 8015a7a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015a7c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a82:	9314      	str	r3, [sp, #80]	@ 0x50
 8015a84:	9b01      	ldr	r3, [sp, #4]
 8015a86:	9a05      	ldr	r2, [sp, #20]
 8015a88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a8c:	3b01      	subs	r3, #1
 8015a8e:	9301      	str	r3, [sp, #4]
 8015a90:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015a94:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a96:	eeb0 3a67 	vmov.f32	s6, s15
 8015a9a:	bf08      	it	eq
 8015a9c:	4613      	moveq	r3, r2
 8015a9e:	eef0 2a47 	vmov.f32	s5, s14
 8015aa2:	e788      	b.n	80159b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015aa4:	1406      	asrs	r6, r0, #16
 8015aa6:	d42c      	bmi.n	8015b02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015aa8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015aac:	42b2      	cmp	r2, r6
 8015aae:	dd28      	ble.n	8015b02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015ab0:	140f      	asrs	r7, r1, #16
 8015ab2:	d426      	bmi.n	8015b02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015ab4:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015ab8:	42ba      	cmp	r2, r7
 8015aba:	dd22      	ble.n	8015b02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015abc:	9a02      	ldr	r2, [sp, #8]
 8015abe:	fb07 6602 	mla	r6, r7, r2, r6
 8015ac2:	0872      	lsrs	r2, r6, #1
 8015ac4:	9f03      	ldr	r7, [sp, #12]
 8015ac6:	5cba      	ldrb	r2, [r7, r2]
 8015ac8:	07f6      	lsls	r6, r6, #31
 8015aca:	bf54      	ite	pl
 8015acc:	f002 020f 	andpl.w	r2, r2, #15
 8015ad0:	1112      	asrmi	r2, r2, #4
 8015ad2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015ad6:	b2d2      	uxtb	r2, r2
 8015ad8:	2aff      	cmp	r2, #255	@ 0xff
 8015ada:	d118      	bne.n	8015b0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015adc:	f8d8 2000 	ldr.w	r2, [r8]
 8015ae0:	f06f 0601 	mvn.w	r6, #1
 8015ae4:	fb06 f705 	mul.w	r7, r6, r5
 8015ae8:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8015aec:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8015af0:	0956      	lsrs	r6, r2, #5
 8015af2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015af6:	ea4c 0606 	orr.w	r6, ip, r6
 8015afa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015afe:	4316      	orrs	r6, r2
 8015b00:	53e6      	strh	r6, [r4, r7]
 8015b02:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015b04:	4410      	add	r0, r2
 8015b06:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015b08:	3d01      	subs	r5, #1
 8015b0a:	4411      	add	r1, r2
 8015b0c:	e787      	b.n	8015a1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015b0e:	2a00      	cmp	r2, #0
 8015b10:	d0f7      	beq.n	8015b02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015b12:	f06f 0601 	mvn.w	r6, #1
 8015b16:	436e      	muls	r6, r5
 8015b18:	f8d8 c000 	ldr.w	ip, [r8]
 8015b1c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8015b20:	9604      	str	r6, [sp, #16]
 8015b22:	fa1f f982 	uxth.w	r9, r2
 8015b26:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015b2a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8015b2e:	43d2      	mvns	r2, r2
 8015b30:	b2d2      	uxtb	r2, r2
 8015b32:	fb16 f609 	smulbb	r6, r6, r9
 8015b36:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015b3a:	fb07 6702 	mla	r7, r7, r2, r6
 8015b3e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8015b42:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015b46:	fa5f fc8c 	uxtb.w	ip, ip
 8015b4a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015b4e:	fa5f fe8e 	uxtb.w	lr, lr
 8015b52:	fb1c fc09 	smulbb	ip, ip, r9
 8015b56:	fb0e cc02 	mla	ip, lr, r2, ip
 8015b5a:	b2bf      	uxth	r7, r7
 8015b5c:	fb1a fa09 	smulbb	sl, sl, r9
 8015b60:	fa1f fc8c 	uxth.w	ip, ip
 8015b64:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015b68:	fb06 a602 	mla	r6, r6, r2, sl
 8015b6c:	1c7a      	adds	r2, r7, #1
 8015b6e:	f10c 0a01 	add.w	sl, ip, #1
 8015b72:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015b76:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8015b7a:	b2b6      	uxth	r6, r6
 8015b7c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015b80:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015b84:	ea4a 0707 	orr.w	r7, sl, r7
 8015b88:	f106 0a01 	add.w	sl, r6, #1
 8015b8c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015b90:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015b94:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015b98:	9a04      	ldr	r2, [sp, #16]
 8015b9a:	ea47 070a 	orr.w	r7, r7, sl
 8015b9e:	52a7      	strh	r7, [r4, r2]
 8015ba0:	e7af      	b.n	8015b02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015ba2:	f04f 0e00 	mov.w	lr, #0
 8015ba6:	eba3 020e 	sub.w	r2, r3, lr
 8015baa:	2a00      	cmp	r2, #0
 8015bac:	f77f af3a 	ble.w	8015a24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015bb0:	9e02      	ldr	r6, [sp, #8]
 8015bb2:	1402      	asrs	r2, r0, #16
 8015bb4:	140d      	asrs	r5, r1, #16
 8015bb6:	fb06 2505 	mla	r5, r6, r5, r2
 8015bba:	086a      	lsrs	r2, r5, #1
 8015bbc:	9e03      	ldr	r6, [sp, #12]
 8015bbe:	5cb2      	ldrb	r2, [r6, r2]
 8015bc0:	07ed      	lsls	r5, r5, #31
 8015bc2:	bf54      	ite	pl
 8015bc4:	f002 020f 	andpl.w	r2, r2, #15
 8015bc8:	1112      	asrmi	r2, r2, #4
 8015bca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015bce:	b2d2      	uxtb	r2, r2
 8015bd0:	2aff      	cmp	r2, #255	@ 0xff
 8015bd2:	d115      	bne.n	8015c00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015bd4:	f8d8 5000 	ldr.w	r5, [r8]
 8015bd8:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8015bdc:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8015be0:	096a      	lsrs	r2, r5, #5
 8015be2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015be6:	4332      	orrs	r2, r6
 8015be8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015bec:	432a      	orrs	r2, r5
 8015bee:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8015bf2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015bf4:	4410      	add	r0, r2
 8015bf6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015bf8:	f10e 0e01 	add.w	lr, lr, #1
 8015bfc:	4411      	add	r1, r2
 8015bfe:	e7d2      	b.n	8015ba6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015c00:	2a00      	cmp	r2, #0
 8015c02:	d0f6      	beq.n	8015bf2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015c04:	f8d8 7000 	ldr.w	r7, [r8]
 8015c08:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015c0c:	fa1f f982 	uxth.w	r9, r2
 8015c10:	ea4f 262c 	mov.w	r6, ip, asr #8
 8015c14:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8015c18:	43d2      	mvns	r2, r2
 8015c1a:	b2d2      	uxtb	r2, r2
 8015c1c:	fb15 f509 	smulbb	r5, r5, r9
 8015c20:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015c24:	fb06 5602 	mla	r6, r6, r2, r5
 8015c28:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8015c2c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015c30:	b2ff      	uxtb	r7, r7
 8015c32:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015c36:	fa5f fc8c 	uxtb.w	ip, ip
 8015c3a:	fb17 f709 	smulbb	r7, r7, r9
 8015c3e:	fb0c 7702 	mla	r7, ip, r2, r7
 8015c42:	b2b6      	uxth	r6, r6
 8015c44:	fb1a fa09 	smulbb	sl, sl, r9
 8015c48:	b2bf      	uxth	r7, r7
 8015c4a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015c4e:	fb05 a502 	mla	r5, r5, r2, sl
 8015c52:	1c72      	adds	r2, r6, #1
 8015c54:	f107 0a01 	add.w	sl, r7, #1
 8015c58:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015c5c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015c60:	b2ad      	uxth	r5, r5
 8015c62:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015c66:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015c6a:	ea4a 0606 	orr.w	r6, sl, r6
 8015c6e:	f105 0a01 	add.w	sl, r5, #1
 8015c72:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015c76:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015c7a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015c7e:	ea46 060a 	orr.w	r6, r6, sl
 8015c82:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015c86:	e7b4      	b.n	8015bf2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015c88:	b007      	add	sp, #28
 8015c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c8e:	bf00      	nop
 8015c90:	20014050 	.word	0x20014050

08015c94 <_ZN8touchgfx8LCD16bppD1Ev>:
 8015c94:	4770      	bx	lr

08015c96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8015c96:	4770      	bx	lr

08015c98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8015c98:	4770      	bx	lr

08015c9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8015c9a:	4770      	bx	lr

08015c9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8015c9c:	4770      	bx	lr

08015c9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8015c9e:	4770      	bx	lr

08015ca0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8015ca0:	4770      	bx	lr

08015ca2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015ca2:	4770      	bx	lr

08015ca4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015ca4:	4770      	bx	lr

08015ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015ca6:	4770      	bx	lr

08015ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015ca8:	4770      	bx	lr

08015caa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015caa:	4770      	bx	lr

08015cac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015cac:	4770      	bx	lr

08015cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015cae:	4770      	bx	lr

08015cb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015cb0:	4770      	bx	lr

08015cb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015cb2:	4770      	bx	lr

08015cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015cb4:	4770      	bx	lr

08015cb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015cb6:	4770      	bx	lr

08015cb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015cb8:	4770      	bx	lr

08015cba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015cba:	4770      	bx	lr

08015cbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015cbc:	4770      	bx	lr

08015cbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015cbe:	4770      	bx	lr

08015cc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015cc0:	4770      	bx	lr

08015cc2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015cc2:	4770      	bx	lr

08015cc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015cc4:	4770      	bx	lr

08015cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015cc6:	4770      	bx	lr

08015cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015cc8:	4770      	bx	lr

08015cca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015cca:	4770      	bx	lr

08015ccc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8015ccc:	4770      	bx	lr

08015cce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015cce:	4770      	bx	lr

08015cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015cd0:	4770      	bx	lr

08015cd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015cd2:	4770      	bx	lr

08015cd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015cd4:	4770      	bx	lr

08015cd6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8015cd6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015cda:	b088      	sub	sp, #32
 8015cdc:	ac08      	add	r4, sp, #32
 8015cde:	4606      	mov	r6, r0
 8015ce0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8015ce4:	4620      	mov	r0, r4
 8015ce6:	4688      	mov	r8, r1
 8015ce8:	4691      	mov	r9, r2
 8015cea:	f7fd fc31 	bl	8013550 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015cee:	6833      	ldr	r3, [r6, #0]
 8015cf0:	4605      	mov	r5, r0
 8015cf2:	4620      	mov	r0, r4
 8015cf4:	699f      	ldr	r7, [r3, #24]
 8015cf6:	f7fd fb39 	bl	801336c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015cfa:	4682      	mov	sl, r0
 8015cfc:	4620      	mov	r0, r4
 8015cfe:	f7fd fb69 	bl	80133d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015d02:	9500      	str	r5, [sp, #0]
 8015d04:	e9cd a001 	strd	sl, r0, [sp, #4]
 8015d08:	464b      	mov	r3, r9
 8015d0a:	a806      	add	r0, sp, #24
 8015d0c:	4642      	mov	r2, r8
 8015d0e:	4631      	mov	r1, r6
 8015d10:	47b8      	blx	r7
 8015d12:	4628      	mov	r0, r5
 8015d14:	b008      	add	sp, #32
 8015d16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08015d1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8015d1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015d20:	2300      	movs	r3, #0
 8015d22:	9300      	str	r3, [sp, #0]
 8015d24:	4b3d      	ldr	r3, [pc, #244]	@ (8015e1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8015d26:	781b      	ldrb	r3, [r3, #0]
 8015d28:	2b00      	cmp	r3, #0
 8015d2a:	d137      	bne.n	8015d9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8015d2c:	4a3c      	ldr	r2, [pc, #240]	@ (8015e20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015d2e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015d32:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015d36:	2b00      	cmp	r3, #0
 8015d38:	d132      	bne.n	8015da0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015d3a:	4b3a      	ldr	r3, [pc, #232]	@ (8015e24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015d3c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015d40:	6808      	ldr	r0, [r1, #0]
 8015d42:	6849      	ldr	r1, [r1, #4]
 8015d44:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015d48:	ac02      	add	r4, sp, #8
 8015d4a:	ab02      	add	r3, sp, #8
 8015d4c:	c303      	stmia	r3!, {r0, r1}
 8015d4e:	4669      	mov	r1, sp
 8015d50:	4620      	mov	r0, r4
 8015d52:	f7f9 ff85 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015d56:	4668      	mov	r0, sp
 8015d58:	f7f9 ff5a 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015d5c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015d60:	f8bd 2000 	ldrh.w	r2, [sp]
 8015d64:	4d30      	ldr	r5, [pc, #192]	@ (8015e28 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015d66:	4413      	add	r3, r2
 8015d68:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015d6c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8015d70:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015d74:	6828      	ldr	r0, [r5, #0]
 8015d76:	4413      	add	r3, r2
 8015d78:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015d7c:	6803      	ldr	r3, [r0, #0]
 8015d7e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015d80:	4798      	blx	r3
 8015d82:	f010 0f01 	tst.w	r0, #1
 8015d86:	462f      	mov	r7, r5
 8015d88:	d00c      	beq.n	8015da4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015d8a:	6828      	ldr	r0, [r5, #0]
 8015d8c:	6803      	ldr	r3, [r0, #0]
 8015d8e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8015d92:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8015d94:	4798      	blx	r3
 8015d96:	b004      	add	sp, #16
 8015d98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015d9c:	4a21      	ldr	r2, [pc, #132]	@ (8015e24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015d9e:	e7c6      	b.n	8015d2e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8015da0:	4b1f      	ldr	r3, [pc, #124]	@ (8015e20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015da2:	e7cb      	b.n	8015d3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015da4:	6838      	ldr	r0, [r7, #0]
 8015da6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015daa:	6803      	ldr	r3, [r0, #0]
 8015dac:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8015db0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015db2:	4798      	blx	r3
 8015db4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015db8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015dbc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8015dc0:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015dc4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015dc8:	6838      	ldr	r0, [r7, #0]
 8015dca:	6803      	ldr	r3, [r0, #0]
 8015dcc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015dce:	4798      	blx	r3
 8015dd0:	4a13      	ldr	r2, [pc, #76]	@ (8015e20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015dd2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8015dd6:	8813      	ldrh	r3, [r2, #0]
 8015dd8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015ddc:	fb03 1404 	mla	r4, r3, r4, r1
 8015de0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015de4:	435d      	muls	r5, r3
 8015de6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015dea:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015dee:	4691      	mov	r9, r2
 8015df0:	6838      	ldr	r0, [r7, #0]
 8015df2:	42ac      	cmp	r4, r5
 8015df4:	6803      	ldr	r3, [r0, #0]
 8015df6:	d20e      	bcs.n	8015e16 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8015df8:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 8015dfc:	4632      	mov	r2, r6
 8015dfe:	4643      	mov	r3, r8
 8015e00:	4621      	mov	r1, r4
 8015e02:	47d0      	blx	sl
 8015e04:	f8b9 3000 	ldrh.w	r3, [r9]
 8015e08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e0c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8015e10:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015e14:	e7ec      	b.n	8015df0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8015e16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015e18:	4798      	blx	r3
 8015e1a:	e7bc      	b.n	8015d96 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8015e1c:	20014036 	.word	0x20014036
 8015e20:	20014038 	.word	0x20014038
 8015e24:	2001403a 	.word	0x2001403a
 8015e28:	20014040 	.word	0x20014040

08015e2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8015e2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e30:	b08b      	sub	sp, #44	@ 0x2c
 8015e32:	460f      	mov	r7, r1
 8015e34:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8015e38:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8015e3c:	4616      	mov	r6, r2
 8015e3e:	f1bb 0f00 	cmp.w	fp, #0
 8015e42:	d04a      	beq.n	8015eda <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015e44:	6810      	ldr	r0, [r2, #0]
 8015e46:	6851      	ldr	r1, [r2, #4]
 8015e48:	ad06      	add	r5, sp, #24
 8015e4a:	c503      	stmia	r5!, {r0, r1}
 8015e4c:	6818      	ldr	r0, [r3, #0]
 8015e4e:	6859      	ldr	r1, [r3, #4]
 8015e50:	ad08      	add	r5, sp, #32
 8015e52:	c503      	stmia	r5!, {r0, r1}
 8015e54:	a806      	add	r0, sp, #24
 8015e56:	f7f9 fedb 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015e5a:	4631      	mov	r1, r6
 8015e5c:	a808      	add	r0, sp, #32
 8015e5e:	f7f9 feff 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015e62:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015e66:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8015e6a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8015e6e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8015e72:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8015e76:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015e7a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8015e7e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8015e82:	4f5f      	ldr	r7, [pc, #380]	@ (8016000 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015e84:	440a      	add	r2, r1
 8015e86:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015e8a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015e8e:	6838      	ldr	r0, [r7, #0]
 8015e90:	4413      	add	r3, r2
 8015e92:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8015e96:	6803      	ldr	r3, [r0, #0]
 8015e98:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015e9a:	4798      	blx	r3
 8015e9c:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8015ea0:	46b9      	mov	r9, r7
 8015ea2:	d11d      	bne.n	8015ee0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015ea4:	b9fc      	cbnz	r4, 8015ee6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015ea6:	f010 0f01 	tst.w	r0, #1
 8015eaa:	d01c      	beq.n	8015ee6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015eac:	f8d9 0000 	ldr.w	r0, [r9]
 8015eb0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8015eb4:	6801      	ldr	r1, [r0, #0]
 8015eb6:	f8cd b00c 	str.w	fp, [sp, #12]
 8015eba:	2700      	movs	r7, #0
 8015ebc:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8015ec0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015ec4:	9402      	str	r4, [sp, #8]
 8015ec6:	b2ad      	uxth	r5, r5
 8015ec8:	fa1f f488 	uxth.w	r4, r8
 8015ecc:	9501      	str	r5, [sp, #4]
 8015ece:	9400      	str	r4, [sp, #0]
 8015ed0:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 8015ed2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015ed6:	4631      	mov	r1, r6
 8015ed8:	47a0      	blx	r4
 8015eda:	b00b      	add	sp, #44	@ 0x2c
 8015edc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ee0:	f010 0f04 	tst.w	r0, #4
 8015ee4:	e7e1      	b.n	8015eaa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8015ee6:	f8d9 0000 	ldr.w	r0, [r9]
 8015eea:	6803      	ldr	r3, [r0, #0]
 8015eec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015eee:	4798      	blx	r3
 8015ef0:	4b44      	ldr	r3, [pc, #272]	@ (8016004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8015ef2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8015ef6:	881a      	ldrh	r2, [r3, #0]
 8015ef8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8015efc:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8015f00:	fb02 1404 	mla	r4, r2, r4, r1
 8015f04:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015f08:	469a      	mov	sl, r3
 8015f0a:	fb05 f502 	mul.w	r5, r5, r2
 8015f0e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8015f12:	d059      	beq.n	8015fc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8015f14:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8015f18:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015f1c:	fa1f f28b 	uxth.w	r2, fp
 8015f20:	fa1f f989 	uxth.w	r9, r9
 8015f24:	469e      	mov	lr, r3
 8015f26:	42ac      	cmp	r4, r5
 8015f28:	d264      	bcs.n	8015ff4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015f2a:	eb04 0a07 	add.w	sl, r4, r7
 8015f2e:	4554      	cmp	r4, sl
 8015f30:	d23d      	bcs.n	8015fae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8015f32:	8821      	ldrh	r1, [r4, #0]
 8015f34:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015f38:	1208      	asrs	r0, r1, #8
 8015f3a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015f3e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8015f42:	fb10 f009 	smulbb	r0, r0, r9
 8015f46:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015f4a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015f4e:	00c9      	lsls	r1, r1, #3
 8015f50:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015f54:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015f58:	10d8      	asrs	r0, r3, #3
 8015f5a:	b2c9      	uxtb	r1, r1
 8015f5c:	00db      	lsls	r3, r3, #3
 8015f5e:	fa1f fc8c 	uxth.w	ip, ip
 8015f62:	fb1b fb09 	smulbb	fp, fp, r9
 8015f66:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8015f6a:	b2db      	uxtb	r3, r3
 8015f6c:	fb11 f109 	smulbb	r1, r1, r9
 8015f70:	fb00 b002 	mla	r0, r0, r2, fp
 8015f74:	fb03 1302 	mla	r3, r3, r2, r1
 8015f78:	f10c 0b01 	add.w	fp, ip, #1
 8015f7c:	b29b      	uxth	r3, r3
 8015f7e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8015f82:	b280      	uxth	r0, r0
 8015f84:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8015f88:	f103 0c01 	add.w	ip, r3, #1
 8015f8c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015f90:	1c43      	adds	r3, r0, #1
 8015f92:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015f96:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015f9a:	0940      	lsrs	r0, r0, #5
 8015f9c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015fa0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015fa4:	ea4c 0c00 	orr.w	ip, ip, r0
 8015fa8:	f824 cb02 	strh.w	ip, [r4], #2
 8015fac:	e7bf      	b.n	8015f2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8015fae:	f8be 3000 	ldrh.w	r3, [lr]
 8015fb2:	eba3 0308 	sub.w	r3, r3, r8
 8015fb6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015fba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015fbe:	eba3 0308 	sub.w	r3, r3, r8
 8015fc2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015fc6:	e7ae      	b.n	8015f26 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015fc8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015fcc:	f8d9 0000 	ldr.w	r0, [r9]
 8015fd0:	42ac      	cmp	r4, r5
 8015fd2:	6803      	ldr	r3, [r0, #0]
 8015fd4:	d20e      	bcs.n	8015ff4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015fd6:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 8015fda:	4632      	mov	r2, r6
 8015fdc:	463b      	mov	r3, r7
 8015fde:	4621      	mov	r1, r4
 8015fe0:	47c0      	blx	r8
 8015fe2:	f8ba 3000 	ldrh.w	r3, [sl]
 8015fe6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015fea:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015fee:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015ff2:	e7eb      	b.n	8015fcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8015ff4:	4b02      	ldr	r3, [pc, #8]	@ (8016000 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015ff6:	6818      	ldr	r0, [r3, #0]
 8015ff8:	6803      	ldr	r3, [r0, #0]
 8015ffa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015ffc:	4798      	blx	r3
 8015ffe:	e76c      	b.n	8015eda <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8016000:	20014040 	.word	0x20014040
 8016004:	20014038 	.word	0x20014038

08016008 <_ZN8touchgfx8LCD16bppD0Ev>:
 8016008:	b510      	push	{r4, lr}
 801600a:	218c      	movs	r1, #140	@ 0x8c
 801600c:	4604      	mov	r4, r0
 801600e:	f00c fa2c 	bl	802246a <_ZdlPvj>
 8016012:	4620      	mov	r0, r4
 8016014:	bd10      	pop	{r4, pc}

08016016 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8016016:	b510      	push	{r4, lr}
 8016018:	2104      	movs	r1, #4
 801601a:	4604      	mov	r4, r0
 801601c:	f00c fa25 	bl	802246a <_ZdlPvj>
 8016020:	4620      	mov	r0, r4
 8016022:	bd10      	pop	{r4, pc}

08016024 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8016024:	b510      	push	{r4, lr}
 8016026:	2104      	movs	r1, #4
 8016028:	4604      	mov	r4, r0
 801602a:	f00c fa1e 	bl	802246a <_ZdlPvj>
 801602e:	4620      	mov	r0, r4
 8016030:	bd10      	pop	{r4, pc}

08016032 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8016032:	b510      	push	{r4, lr}
 8016034:	f640 0144 	movw	r1, #2116	@ 0x844
 8016038:	4604      	mov	r4, r0
 801603a:	f00c fa16 	bl	802246a <_ZdlPvj>
 801603e:	4620      	mov	r0, r4
 8016040:	bd10      	pop	{r4, pc}

08016042 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8016042:	b510      	push	{r4, lr}
 8016044:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8016048:	4604      	mov	r4, r0
 801604a:	f00c fa0e 	bl	802246a <_ZdlPvj>
 801604e:	4620      	mov	r0, r4
 8016050:	bd10      	pop	{r4, pc}

08016052 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016052:	b510      	push	{r4, lr}
 8016054:	2104      	movs	r1, #4
 8016056:	4604      	mov	r4, r0
 8016058:	f00c fa07 	bl	802246a <_ZdlPvj>
 801605c:	4620      	mov	r0, r4
 801605e:	bd10      	pop	{r4, pc}

08016060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016060:	b510      	push	{r4, lr}
 8016062:	2104      	movs	r1, #4
 8016064:	4604      	mov	r4, r0
 8016066:	f00c fa00 	bl	802246a <_ZdlPvj>
 801606a:	4620      	mov	r0, r4
 801606c:	bd10      	pop	{r4, pc}

0801606e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801606e:	b510      	push	{r4, lr}
 8016070:	2104      	movs	r1, #4
 8016072:	4604      	mov	r4, r0
 8016074:	f00c f9f9 	bl	802246a <_ZdlPvj>
 8016078:	4620      	mov	r0, r4
 801607a:	bd10      	pop	{r4, pc}

0801607c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801607c:	b510      	push	{r4, lr}
 801607e:	2104      	movs	r1, #4
 8016080:	4604      	mov	r4, r0
 8016082:	f00c f9f2 	bl	802246a <_ZdlPvj>
 8016086:	4620      	mov	r0, r4
 8016088:	bd10      	pop	{r4, pc}

0801608a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801608a:	b510      	push	{r4, lr}
 801608c:	2104      	movs	r1, #4
 801608e:	4604      	mov	r4, r0
 8016090:	f00c f9eb 	bl	802246a <_ZdlPvj>
 8016094:	4620      	mov	r0, r4
 8016096:	bd10      	pop	{r4, pc}

08016098 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016098:	b510      	push	{r4, lr}
 801609a:	2104      	movs	r1, #4
 801609c:	4604      	mov	r4, r0
 801609e:	f00c f9e4 	bl	802246a <_ZdlPvj>
 80160a2:	4620      	mov	r0, r4
 80160a4:	bd10      	pop	{r4, pc}

080160a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80160a6:	b510      	push	{r4, lr}
 80160a8:	2104      	movs	r1, #4
 80160aa:	4604      	mov	r4, r0
 80160ac:	f00c f9dd 	bl	802246a <_ZdlPvj>
 80160b0:	4620      	mov	r0, r4
 80160b2:	bd10      	pop	{r4, pc}

080160b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80160b4:	b510      	push	{r4, lr}
 80160b6:	2104      	movs	r1, #4
 80160b8:	4604      	mov	r4, r0
 80160ba:	f00c f9d6 	bl	802246a <_ZdlPvj>
 80160be:	4620      	mov	r0, r4
 80160c0:	bd10      	pop	{r4, pc}

080160c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80160c2:	b510      	push	{r4, lr}
 80160c4:	2104      	movs	r1, #4
 80160c6:	4604      	mov	r4, r0
 80160c8:	f00c f9cf 	bl	802246a <_ZdlPvj>
 80160cc:	4620      	mov	r0, r4
 80160ce:	bd10      	pop	{r4, pc}

080160d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80160d0:	b510      	push	{r4, lr}
 80160d2:	2104      	movs	r1, #4
 80160d4:	4604      	mov	r4, r0
 80160d6:	f00c f9c8 	bl	802246a <_ZdlPvj>
 80160da:	4620      	mov	r0, r4
 80160dc:	bd10      	pop	{r4, pc}

080160de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80160de:	b510      	push	{r4, lr}
 80160e0:	2104      	movs	r1, #4
 80160e2:	4604      	mov	r4, r0
 80160e4:	f00c f9c1 	bl	802246a <_ZdlPvj>
 80160e8:	4620      	mov	r0, r4
 80160ea:	bd10      	pop	{r4, pc}

080160ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80160ec:	b510      	push	{r4, lr}
 80160ee:	2104      	movs	r1, #4
 80160f0:	4604      	mov	r4, r0
 80160f2:	f00c f9ba 	bl	802246a <_ZdlPvj>
 80160f6:	4620      	mov	r0, r4
 80160f8:	bd10      	pop	{r4, pc}

080160fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80160fa:	b510      	push	{r4, lr}
 80160fc:	2104      	movs	r1, #4
 80160fe:	4604      	mov	r4, r0
 8016100:	f00c f9b3 	bl	802246a <_ZdlPvj>
 8016104:	4620      	mov	r0, r4
 8016106:	bd10      	pop	{r4, pc}

08016108 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016108:	b510      	push	{r4, lr}
 801610a:	2104      	movs	r1, #4
 801610c:	4604      	mov	r4, r0
 801610e:	f00c f9ac 	bl	802246a <_ZdlPvj>
 8016112:	4620      	mov	r0, r4
 8016114:	bd10      	pop	{r4, pc}

08016116 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016116:	b510      	push	{r4, lr}
 8016118:	2104      	movs	r1, #4
 801611a:	4604      	mov	r4, r0
 801611c:	f00c f9a5 	bl	802246a <_ZdlPvj>
 8016120:	4620      	mov	r0, r4
 8016122:	bd10      	pop	{r4, pc}

08016124 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016124:	b510      	push	{r4, lr}
 8016126:	2104      	movs	r1, #4
 8016128:	4604      	mov	r4, r0
 801612a:	f00c f99e 	bl	802246a <_ZdlPvj>
 801612e:	4620      	mov	r0, r4
 8016130:	bd10      	pop	{r4, pc}

08016132 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016132:	b510      	push	{r4, lr}
 8016134:	2104      	movs	r1, #4
 8016136:	4604      	mov	r4, r0
 8016138:	f00c f997 	bl	802246a <_ZdlPvj>
 801613c:	4620      	mov	r0, r4
 801613e:	bd10      	pop	{r4, pc}

08016140 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016140:	b510      	push	{r4, lr}
 8016142:	2104      	movs	r1, #4
 8016144:	4604      	mov	r4, r0
 8016146:	f00c f990 	bl	802246a <_ZdlPvj>
 801614a:	4620      	mov	r0, r4
 801614c:	bd10      	pop	{r4, pc}

0801614e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801614e:	b510      	push	{r4, lr}
 8016150:	2104      	movs	r1, #4
 8016152:	4604      	mov	r4, r0
 8016154:	f00c f989 	bl	802246a <_ZdlPvj>
 8016158:	4620      	mov	r0, r4
 801615a:	bd10      	pop	{r4, pc}

0801615c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801615c:	b510      	push	{r4, lr}
 801615e:	2104      	movs	r1, #4
 8016160:	4604      	mov	r4, r0
 8016162:	f00c f982 	bl	802246a <_ZdlPvj>
 8016166:	4620      	mov	r0, r4
 8016168:	bd10      	pop	{r4, pc}

0801616a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801616a:	b510      	push	{r4, lr}
 801616c:	2104      	movs	r1, #4
 801616e:	4604      	mov	r4, r0
 8016170:	f00c f97b 	bl	802246a <_ZdlPvj>
 8016174:	4620      	mov	r0, r4
 8016176:	bd10      	pop	{r4, pc}

08016178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016178:	b510      	push	{r4, lr}
 801617a:	2104      	movs	r1, #4
 801617c:	4604      	mov	r4, r0
 801617e:	f00c f974 	bl	802246a <_ZdlPvj>
 8016182:	4620      	mov	r0, r4
 8016184:	bd10      	pop	{r4, pc}

08016186 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016186:	b510      	push	{r4, lr}
 8016188:	2104      	movs	r1, #4
 801618a:	4604      	mov	r4, r0
 801618c:	f00c f96d 	bl	802246a <_ZdlPvj>
 8016190:	4620      	mov	r0, r4
 8016192:	bd10      	pop	{r4, pc}

08016194 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016194:	b510      	push	{r4, lr}
 8016196:	2104      	movs	r1, #4
 8016198:	4604      	mov	r4, r0
 801619a:	f00c f966 	bl	802246a <_ZdlPvj>
 801619e:	4620      	mov	r0, r4
 80161a0:	bd10      	pop	{r4, pc}

080161a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80161a2:	b510      	push	{r4, lr}
 80161a4:	2104      	movs	r1, #4
 80161a6:	4604      	mov	r4, r0
 80161a8:	f00c f95f 	bl	802246a <_ZdlPvj>
 80161ac:	4620      	mov	r0, r4
 80161ae:	bd10      	pop	{r4, pc}

080161b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80161b0:	b510      	push	{r4, lr}
 80161b2:	2104      	movs	r1, #4
 80161b4:	4604      	mov	r4, r0
 80161b6:	f00c f958 	bl	802246a <_ZdlPvj>
 80161ba:	4620      	mov	r0, r4
 80161bc:	bd10      	pop	{r4, pc}

080161be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80161be:	b510      	push	{r4, lr}
 80161c0:	2104      	movs	r1, #4
 80161c2:	4604      	mov	r4, r0
 80161c4:	f00c f951 	bl	802246a <_ZdlPvj>
 80161c8:	4620      	mov	r0, r4
 80161ca:	bd10      	pop	{r4, pc}

080161cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80161cc:	b510      	push	{r4, lr}
 80161ce:	2104      	movs	r1, #4
 80161d0:	4604      	mov	r4, r0
 80161d2:	f00c f94a 	bl	802246a <_ZdlPvj>
 80161d6:	4620      	mov	r0, r4
 80161d8:	bd10      	pop	{r4, pc}
	...

080161dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 80161dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161e0:	b08f      	sub	sp, #60	@ 0x3c
 80161e2:	4616      	mov	r6, r2
 80161e4:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80161e8:	9205      	str	r2, [sp, #20]
 80161ea:	4682      	mov	sl, r0
 80161ec:	460d      	mov	r5, r1
 80161ee:	2a00      	cmp	r2, #0
 80161f0:	f000 82b7 	beq.w	8016762 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80161f4:	6830      	ldr	r0, [r6, #0]
 80161f6:	6871      	ldr	r1, [r6, #4]
 80161f8:	ac0a      	add	r4, sp, #40	@ 0x28
 80161fa:	c403      	stmia	r4!, {r0, r1}
 80161fc:	6818      	ldr	r0, [r3, #0]
 80161fe:	6859      	ldr	r1, [r3, #4]
 8016200:	ac0c      	add	r4, sp, #48	@ 0x30
 8016202:	c403      	stmia	r4!, {r0, r1}
 8016204:	a80a      	add	r0, sp, #40	@ 0x28
 8016206:	f7f9 fd03 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801620a:	4631      	mov	r1, r6
 801620c:	a80c      	add	r0, sp, #48	@ 0x30
 801620e:	f7f9 fd27 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016212:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8016216:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801621a:	bfd7      	itett	le
 801621c:	b293      	uxthle	r3, r2
 801621e:	2301      	movgt	r3, #1
 8016220:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016224:	fb91 f3f3 	sdivle	r3, r1, r3
 8016228:	9300      	str	r3, [sp, #0]
 801622a:	f105 0308 	add.w	r3, r5, #8
 801622e:	9900      	ldr	r1, [sp, #0]
 8016230:	9306      	str	r3, [sp, #24]
 8016232:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8016236:	440b      	add	r3, r1
 8016238:	3b01      	subs	r3, #1
 801623a:	fb93 f3f1 	sdiv	r3, r3, r1
 801623e:	9906      	ldr	r1, [sp, #24]
 8016240:	3b01      	subs	r3, #1
 8016242:	b29b      	uxth	r3, r3
 8016244:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016248:	9307      	str	r3, [sp, #28]
 801624a:	9900      	ldr	r1, [sp, #0]
 801624c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016250:	fb93 f0f1 	sdiv	r0, r3, r1
 8016254:	b284      	uxth	r4, r0
 8016256:	9402      	str	r4, [sp, #8]
 8016258:	9d02      	ldr	r5, [sp, #8]
 801625a:	9c00      	ldr	r4, [sp, #0]
 801625c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8016260:	fb05 3414 	mls	r4, r5, r4, r3
 8016264:	fb14 f402 	smulbb	r4, r4, r2
 8016268:	440c      	add	r4, r1
 801626a:	b2a4      	uxth	r4, r4
 801626c:	2d00      	cmp	r5, #0
 801626e:	d06c      	beq.n	801634a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8016270:	1e6a      	subs	r2, r5, #1
 8016272:	9806      	ldr	r0, [sp, #24]
 8016274:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8016278:	9a07      	ldr	r2, [sp, #28]
 801627a:	ba36      	rev	r6, r6
 801627c:	4416      	add	r6, r2
 801627e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8016282:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8016286:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 80165bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801628a:	4411      	add	r1, r2
 801628c:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8016290:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8016294:	4413      	add	r3, r2
 8016296:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801629a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801629e:	9301      	str	r3, [sp, #4]
 80162a0:	4bc4      	ldr	r3, [pc, #784]	@ (80165b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 80162a2:	6818      	ldr	r0, [r3, #0]
 80162a4:	6803      	ldr	r3, [r0, #0]
 80162a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80162a8:	4798      	blx	r3
 80162aa:	4bc3      	ldr	r3, [pc, #780]	@ (80165b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 80162ac:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80162b0:	881b      	ldrh	r3, [r3, #0]
 80162b2:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 80162b6:	fb03 2808 	mla	r8, r3, r8, r2
 80162ba:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 80162be:	436b      	muls	r3, r5
 80162c0:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 80162c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80162c6:	2500      	movs	r5, #0
 80162c8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80162cc:	fb94 f3f3 	sdiv	r3, r4, r3
 80162d0:	9304      	str	r3, [sp, #16]
 80162d2:	f10a 0304 	add.w	r3, sl, #4
 80162d6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80162da:	4629      	mov	r1, r5
 80162dc:	4618      	mov	r0, r3
 80162de:	9308      	str	r3, [sp, #32]
 80162e0:	f00d fa83 	bl	80237ea <memset>
 80162e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80162e6:	4543      	cmp	r3, r8
 80162e8:	f240 8236 	bls.w	8016758 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80162ec:	2203      	movs	r2, #3
 80162ee:	2107      	movs	r1, #7
 80162f0:	200b      	movs	r0, #11
 80162f2:	2c00      	cmp	r4, #0
 80162f4:	f000 8131 	beq.w	801655a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80162f8:	7833      	ldrb	r3, [r6, #0]
 80162fa:	b2db      	uxtb	r3, r3
 80162fc:	2bfe      	cmp	r3, #254	@ 0xfe
 80162fe:	d126      	bne.n	801634e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 8016300:	f896 e001 	ldrb.w	lr, [r6, #1]
 8016304:	f896 c002 	ldrb.w	ip, [r6, #2]
 8016308:	f896 b003 	ldrb.w	fp, [r6, #3]
 801630c:	fa5f fe8e 	uxtb.w	lr, lr
 8016310:	fa5f fc8c 	uxtb.w	ip, ip
 8016314:	f36e 0507 	bfi	r5, lr, #0, #8
 8016318:	f36c 250f 	bfi	r5, ip, #8, #8
 801631c:	fa5f fb8b 	uxtb.w	fp, fp
 8016320:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8016324:	f36b 4517 	bfi	r5, fp, #16, #8
 8016328:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801632c:	0e2b      	lsrs	r3, r5, #24
 801632e:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8016332:	fb10 c303 	smlabb	r3, r0, r3, ip
 8016336:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801633a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801633e:	3c01      	subs	r4, #1
 8016340:	1d37      	adds	r7, r6, #4
 8016342:	b2a4      	uxth	r4, r4
 8016344:	605d      	str	r5, [r3, #4]
 8016346:	463e      	mov	r6, r7
 8016348:	e7d3      	b.n	80162f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801634a:	9e07      	ldr	r6, [sp, #28]
 801634c:	e797      	b.n	801627e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801634e:	2bff      	cmp	r3, #255	@ 0xff
 8016350:	d127      	bne.n	80163a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8016352:	f896 c001 	ldrb.w	ip, [r6, #1]
 8016356:	78b3      	ldrb	r3, [r6, #2]
 8016358:	f896 e003 	ldrb.w	lr, [r6, #3]
 801635c:	f896 b004 	ldrb.w	fp, [r6, #4]
 8016360:	fa5f fc8c 	uxtb.w	ip, ip
 8016364:	b2db      	uxtb	r3, r3
 8016366:	f36c 0507 	bfi	r5, ip, #0, #8
 801636a:	f363 250f 	bfi	r5, r3, #8, #8
 801636e:	fa5f fe8e 	uxtb.w	lr, lr
 8016372:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8016376:	fb12 330e 	smlabb	r3, r2, lr, r3
 801637a:	fa5f fb8b 	uxtb.w	fp, fp
 801637e:	f36e 4517 	bfi	r5, lr, #16, #8
 8016382:	fb11 330c 	smlabb	r3, r1, ip, r3
 8016386:	f36b 651f 	bfi	r5, fp, #24, #8
 801638a:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801638e:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8016392:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8016396:	3c01      	subs	r4, #1
 8016398:	1d77      	adds	r7, r6, #5
 801639a:	b2a4      	uxth	r4, r4
 801639c:	f8cb 5004 	str.w	r5, [fp, #4]
 80163a0:	e7d1      	b.n	8016346 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80163a2:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 80163a6:	f106 0701 	add.w	r7, r6, #1
 80163aa:	d107      	bne.n	80163bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 80163ac:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80163b0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80163b4:	685d      	ldr	r5, [r3, #4]
 80163b6:	3c01      	subs	r4, #1
 80163b8:	b2a4      	uxth	r4, r4
 80163ba:	e7c4      	b.n	8016346 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80163bc:	f1bc 0f01 	cmp.w	ip, #1
 80163c0:	d12c      	bne.n	801641c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 80163c2:	f003 0e03 	and.w	lr, r3, #3
 80163c6:	f1ae 0e02 	sub.w	lr, lr, #2
 80163ca:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 80163ce:	fa5f fe8e 	uxtb.w	lr, lr
 80163d2:	f003 0c0c 	and.w	ip, r3, #12
 80163d6:	f36e 0507 	bfi	r5, lr, #0, #8
 80163da:	f1ac 0c08 	sub.w	ip, ip, #8
 80163de:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80163e2:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80163e6:	f36c 250f 	bfi	r5, ip, #8, #8
 80163ea:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80163ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80163f2:	3b02      	subs	r3, #2
 80163f4:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80163f8:	b2db      	uxtb	r3, r3
 80163fa:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80163fe:	f363 4517 	bfi	r5, r3, #16, #8
 8016402:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8016406:	0e2e      	lsrs	r6, r5, #24
 8016408:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801640c:	fb10 c606 	smlabb	r6, r0, r6, ip
 8016410:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8016414:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8016418:	6075      	str	r5, [r6, #4]
 801641a:	e7cc      	b.n	80163b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801641c:	f1bc 0f02 	cmp.w	ip, #2
 8016420:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016424:	d12a      	bne.n	801647c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8016426:	1cb7      	adds	r7, r6, #2
 8016428:	7876      	ldrb	r6, [r6, #1]
 801642a:	b2f6      	uxtb	r6, r6
 801642c:	f006 0c0f 	and.w	ip, r6, #15
 8016430:	3b20      	subs	r3, #32
 8016432:	f1ac 0c08 	sub.w	ip, ip, #8
 8016436:	449c      	add	ip, r3
 8016438:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801643c:	fa5f fc8c 	uxtb.w	ip, ip
 8016440:	f36c 0507 	bfi	r5, ip, #0, #8
 8016444:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8016448:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801644c:	fa5f fe8e 	uxtb.w	lr, lr
 8016450:	1136      	asrs	r6, r6, #4
 8016452:	f36e 250f 	bfi	r5, lr, #8, #8
 8016456:	3e08      	subs	r6, #8
 8016458:	4433      	add	r3, r6
 801645a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801645e:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8016462:	b2db      	uxtb	r3, r3
 8016464:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8016468:	f363 4517 	bfi	r5, r3, #16, #8
 801646c:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8016470:	0e2e      	lsrs	r6, r5, #24
 8016472:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8016476:	fb10 e606 	smlabb	r6, r0, r6, lr
 801647a:	e7c9      	b.n	8016410 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801647c:	1c5e      	adds	r6, r3, #1
 801647e:	42a6      	cmp	r6, r4
 8016480:	dd4e      	ble.n	8016520 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8016482:	1b36      	subs	r6, r6, r4
 8016484:	2e00      	cmp	r6, #0
 8016486:	dc4e      	bgt.n	8016526 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8016488:	f8dd b004 	ldr.w	fp, [sp, #4]
 801648c:	2400      	movs	r4, #0
 801648e:	f1bb 0f00 	cmp.w	fp, #0
 8016492:	f340 8122 	ble.w	80166da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8016496:	1c7b      	adds	r3, r7, #1
 8016498:	9303      	str	r3, [sp, #12]
 801649a:	783b      	ldrb	r3, [r7, #0]
 801649c:	b2db      	uxtb	r3, r3
 801649e:	2bfe      	cmp	r3, #254	@ 0xfe
 80164a0:	d160      	bne.n	8016564 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 80164a2:	7879      	ldrb	r1, [r7, #1]
 80164a4:	78ba      	ldrb	r2, [r7, #2]
 80164a6:	78f8      	ldrb	r0, [r7, #3]
 80164a8:	b2c9      	uxtb	r1, r1
 80164aa:	f361 0507 	bfi	r5, r1, #0, #8
 80164ae:	b2d2      	uxtb	r2, r2
 80164b0:	1d3b      	adds	r3, r7, #4
 80164b2:	f362 250f 	bfi	r5, r2, #8, #8
 80164b6:	b2c0      	uxtb	r0, r0
 80164b8:	9303      	str	r3, [sp, #12]
 80164ba:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80164be:	2303      	movs	r3, #3
 80164c0:	fb13 2200 	smlabb	r2, r3, r0, r2
 80164c4:	f360 4517 	bfi	r5, r0, #16, #8
 80164c8:	2307      	movs	r3, #7
 80164ca:	fb13 2101 	smlabb	r1, r3, r1, r2
 80164ce:	0e2e      	lsrs	r6, r5, #24
 80164d0:	230b      	movs	r3, #11
 80164d2:	fb13 1306 	smlabb	r3, r3, r6, r1
 80164d6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80164da:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80164de:	605d      	str	r5, [r3, #4]
 80164e0:	2601      	movs	r6, #1
 80164e2:	4637      	mov	r7, r6
 80164e4:	0e2b      	lsrs	r3, r5, #24
 80164e6:	ebab 0b07 	sub.w	fp, fp, r7
 80164ea:	eba6 0607 	sub.w	r6, r6, r7
 80164ee:	f040 80d3 	bne.w	8016698 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 80164f2:	b18c      	cbz	r4, 8016518 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 80164f4:	4648      	mov	r0, r9
 80164f6:	00a1      	lsls	r1, r4, #2
 80164f8:	f7ea ff0e 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 80164fc:	9b05      	ldr	r3, [sp, #20]
 80164fe:	4622      	mov	r2, r4
 8016500:	4649      	mov	r1, r9
 8016502:	4640      	mov	r0, r8
 8016504:	f7ea ff56 	bl	80013b4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8016508:	4b2c      	ldr	r3, [pc, #176]	@ (80165bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801650a:	4a2d      	ldr	r2, [pc, #180]	@ (80165c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801650c:	4599      	cmp	r9, r3
 801650e:	bf08      	it	eq
 8016510:	4613      	moveq	r3, r2
 8016512:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016516:	4699      	mov	r9, r3
 8016518:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801651c:	2400      	movs	r4, #0
 801651e:	e0da      	b.n	80166d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8016520:	1ba6      	subs	r6, r4, r6
 8016522:	b2b4      	uxth	r4, r6
 8016524:	e70f      	b.n	8016346 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8016526:	9b01      	ldr	r3, [sp, #4]
 8016528:	9a01      	ldr	r2, [sp, #4]
 801652a:	42b3      	cmp	r3, r6
 801652c:	bfa8      	it	ge
 801652e:	4633      	movge	r3, r6
 8016530:	0e2c      	lsrs	r4, r5, #24
 8016532:	eba2 0b03 	sub.w	fp, r2, r3
 8016536:	eba6 0603 	sub.w	r6, r6, r3
 801653a:	d00b      	beq.n	8016554 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801653c:	f1a9 0104 	sub.w	r1, r9, #4
 8016540:	461a      	mov	r2, r3
 8016542:	2a00      	cmp	r2, #0
 8016544:	dc02      	bgt.n	801654c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8016546:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801654a:	e7a0      	b.n	801648e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801654c:	f841 5f04 	str.w	r5, [r1, #4]!
 8016550:	3a01      	subs	r2, #1
 8016552:	e7f6      	b.n	8016542 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8016554:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8016558:	e799      	b.n	801648e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801655a:	4637      	mov	r7, r6
 801655c:	f8dd b004 	ldr.w	fp, [sp, #4]
 8016560:	4626      	mov	r6, r4
 8016562:	e794      	b.n	801648e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8016564:	2bff      	cmp	r3, #255	@ 0xff
 8016566:	d11d      	bne.n	80165a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8016568:	7878      	ldrb	r0, [r7, #1]
 801656a:	78ba      	ldrb	r2, [r7, #2]
 801656c:	78fe      	ldrb	r6, [r7, #3]
 801656e:	1d7b      	adds	r3, r7, #5
 8016570:	b2c0      	uxtb	r0, r0
 8016572:	9303      	str	r3, [sp, #12]
 8016574:	793b      	ldrb	r3, [r7, #4]
 8016576:	f360 0507 	bfi	r5, r0, #0, #8
 801657a:	b2d2      	uxtb	r2, r2
 801657c:	b2d9      	uxtb	r1, r3
 801657e:	f362 250f 	bfi	r5, r2, #8, #8
 8016582:	b2f6      	uxtb	r6, r6
 8016584:	2303      	movs	r3, #3
 8016586:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801658a:	fb13 2206 	smlabb	r2, r3, r6, r2
 801658e:	2307      	movs	r3, #7
 8016590:	fb13 2000 	smlabb	r0, r3, r0, r2
 8016594:	f366 4517 	bfi	r5, r6, #16, #8
 8016598:	230b      	movs	r3, #11
 801659a:	f361 651f 	bfi	r5, r1, #24, #8
 801659e:	fb13 0301 	smlabb	r3, r3, r1, r0
 80165a2:	e798      	b.n	80164d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 80165a4:	119e      	asrs	r6, r3, #6
 80165a6:	d10d      	bne.n	80165c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 80165a8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80165ac:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80165b0:	685d      	ldr	r5, [r3, #4]
 80165b2:	e795      	b.n	80164e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 80165b4:	20014040 	.word	0x20014040
 80165b8:	20014038 	.word	0x20014038
 80165bc:	20000280 	.word	0x20000280
 80165c0:	20000380 	.word	0x20000380
 80165c4:	2e01      	cmp	r6, #1
 80165c6:	ea4f 6115 	mov.w	r1, r5, lsr #24
 80165ca:	d12b      	bne.n	8016624 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 80165cc:	f003 0003 	and.w	r0, r3, #3
 80165d0:	3802      	subs	r0, #2
 80165d2:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 80165d6:	b2c0      	uxtb	r0, r0
 80165d8:	f003 020c 	and.w	r2, r3, #12
 80165dc:	f360 0507 	bfi	r5, r0, #0, #8
 80165e0:	3a08      	subs	r2, #8
 80165e2:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80165e6:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80165ea:	f362 250f 	bfi	r5, r2, #8, #8
 80165ee:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80165f2:	1e9f      	subs	r7, r3, #2
 80165f4:	f3c5 4307 	ubfx	r3, r5, #16, #8
 80165f8:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80165fc:	b2db      	uxtb	r3, r3
 80165fe:	2703      	movs	r7, #3
 8016600:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016604:	fb17 2203 	smlabb	r2, r7, r3, r2
 8016608:	2707      	movs	r7, #7
 801660a:	f363 4517 	bfi	r5, r3, #16, #8
 801660e:	fb17 2000 	smlabb	r0, r7, r0, r2
 8016612:	230b      	movs	r3, #11
 8016614:	fb13 0101 	smlabb	r1, r3, r1, r0
 8016618:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801661c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8016620:	604d      	str	r5, [r1, #4]
 8016622:	e75e      	b.n	80164e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8016624:	2e02      	cmp	r6, #2
 8016626:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801662a:	d12f      	bne.n	801668c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801662c:	7878      	ldrb	r0, [r7, #1]
 801662e:	1cba      	adds	r2, r7, #2
 8016630:	b2c0      	uxtb	r0, r0
 8016632:	9203      	str	r2, [sp, #12]
 8016634:	f000 020f 	and.w	r2, r0, #15
 8016638:	3b20      	subs	r3, #32
 801663a:	3a08      	subs	r2, #8
 801663c:	441a      	add	r2, r3
 801663e:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8016642:	b2d2      	uxtb	r2, r2
 8016644:	f362 0507 	bfi	r5, r2, #0, #8
 8016648:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801664c:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8016650:	b2f6      	uxtb	r6, r6
 8016652:	1100      	asrs	r0, r0, #4
 8016654:	f366 250f 	bfi	r5, r6, #8, #8
 8016658:	3808      	subs	r0, #8
 801665a:	4403      	add	r3, r0
 801665c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8016660:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016664:	b2db      	uxtb	r3, r3
 8016666:	2003      	movs	r0, #3
 8016668:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801666c:	fb10 6603 	smlabb	r6, r0, r3, r6
 8016670:	2007      	movs	r0, #7
 8016672:	f363 4517 	bfi	r5, r3, #16, #8
 8016676:	fb10 6202 	smlabb	r2, r0, r2, r6
 801667a:	230b      	movs	r3, #11
 801667c:	fb13 2101 	smlabb	r1, r3, r1, r2
 8016680:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8016684:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8016688:	604d      	str	r5, [r1, #4]
 801668a:	e729      	b.n	80164e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801668c:	1c5e      	adds	r6, r3, #1
 801668e:	45b3      	cmp	fp, r6
 8016690:	465f      	mov	r7, fp
 8016692:	bfa8      	it	ge
 8016694:	4637      	movge	r7, r6
 8016696:	e725      	b.n	80164e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8016698:	193b      	adds	r3, r7, r4
 801669a:	2b40      	cmp	r3, #64	@ 0x40
 801669c:	dd13      	ble.n	80166c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801669e:	4648      	mov	r0, r9
 80166a0:	00a1      	lsls	r1, r4, #2
 80166a2:	f7ea fe39 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 80166a6:	4649      	mov	r1, r9
 80166a8:	9b05      	ldr	r3, [sp, #20]
 80166aa:	4622      	mov	r2, r4
 80166ac:	4640      	mov	r0, r8
 80166ae:	f7ea fe81 	bl	80013b4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80166b2:	4b2d      	ldr	r3, [pc, #180]	@ (8016768 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 80166b4:	4599      	cmp	r9, r3
 80166b6:	bf0c      	ite	eq
 80166b8:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8016774 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 80166bc:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8016768 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 80166c0:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80166c4:	2400      	movs	r4, #0
 80166c6:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 80166ca:	463b      	mov	r3, r7
 80166cc:	3b01      	subs	r3, #1
 80166ce:	f842 5b04 	str.w	r5, [r2], #4
 80166d2:	d1fb      	bne.n	80166cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 80166d4:	443c      	add	r4, r7
 80166d6:	9f03      	ldr	r7, [sp, #12]
 80166d8:	e6d9      	b.n	801648e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80166da:	b15c      	cbz	r4, 80166f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 80166dc:	00a1      	lsls	r1, r4, #2
 80166de:	4648      	mov	r0, r9
 80166e0:	f7ea fe1a 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 80166e4:	4640      	mov	r0, r8
 80166e6:	9b05      	ldr	r3, [sp, #20]
 80166e8:	4622      	mov	r2, r4
 80166ea:	4649      	mov	r1, r9
 80166ec:	f7ea fe62 	bl	80013b4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80166f0:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80166f4:	4b1d      	ldr	r3, [pc, #116]	@ (801676c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 80166f6:	9a01      	ldr	r2, [sp, #4]
 80166f8:	881b      	ldrh	r3, [r3, #0]
 80166fa:	1a9b      	subs	r3, r3, r2
 80166fc:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8016700:	9b04      	ldr	r3, [sp, #16]
 8016702:	3301      	adds	r3, #1
 8016704:	9304      	str	r3, [sp, #16]
 8016706:	9a04      	ldr	r2, [sp, #16]
 8016708:	9b00      	ldr	r3, [sp, #0]
 801670a:	4293      	cmp	r3, r2
 801670c:	d11d      	bne.n	801674a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801670e:	9b02      	ldr	r3, [sp, #8]
 8016710:	9a02      	ldr	r2, [sp, #8]
 8016712:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8016716:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801671a:	9808      	ldr	r0, [sp, #32]
 801671c:	f103 0b01 	add.w	fp, r3, #1
 8016720:	9b06      	ldr	r3, [sp, #24]
 8016722:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8016726:	9b07      	ldr	r3, [sp, #28]
 8016728:	2500      	movs	r5, #0
 801672a:	ba3f      	rev	r7, r7
 801672c:	1ba4      	subs	r4, r4, r6
 801672e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8016732:	4629      	mov	r1, r5
 8016734:	441f      	add	r7, r3
 8016736:	b2a4      	uxth	r4, r4
 8016738:	f00d f857 	bl	80237ea <memset>
 801673c:	f8cd b008 	str.w	fp, [sp, #8]
 8016740:	9504      	str	r5, [sp, #16]
 8016742:	f7ea fddf 	bl	8001304 <_ZN8touchgfx5paint8tearDownEv>
 8016746:	463e      	mov	r6, r7
 8016748:	e5cc      	b.n	80162e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801674a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801674e:	9b01      	ldr	r3, [sp, #4]
 8016750:	1ae4      	subs	r4, r4, r3
 8016752:	1ba4      	subs	r4, r4, r6
 8016754:	b2a4      	uxth	r4, r4
 8016756:	e7f4      	b.n	8016742 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8016758:	4b05      	ldr	r3, [pc, #20]	@ (8016770 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801675a:	6818      	ldr	r0, [r3, #0]
 801675c:	6803      	ldr	r3, [r0, #0]
 801675e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016760:	4798      	blx	r3
 8016762:	b00f      	add	sp, #60	@ 0x3c
 8016764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016768:	20000280 	.word	0x20000280
 801676c:	20014038 	.word	0x20014038
 8016770:	20014040 	.word	0x20014040
 8016774:	20000380 	.word	0x20000380

08016778 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801677c:	b08f      	sub	sp, #60	@ 0x3c
 801677e:	461c      	mov	r4, r3
 8016780:	9205      	str	r2, [sp, #20]
 8016782:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016786:	9100      	str	r1, [sp, #0]
 8016788:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801678a:	9201      	str	r2, [sp, #4]
 801678c:	2a00      	cmp	r2, #0
 801678e:	f000 8115 	beq.w	80169bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8016792:	6820      	ldr	r0, [r4, #0]
 8016794:	6861      	ldr	r1, [r4, #4]
 8016796:	aa0a      	add	r2, sp, #40	@ 0x28
 8016798:	c203      	stmia	r2!, {r0, r1}
 801679a:	6818      	ldr	r0, [r3, #0]
 801679c:	6859      	ldr	r1, [r3, #4]
 801679e:	aa0c      	add	r2, sp, #48	@ 0x30
 80167a0:	c203      	stmia	r2!, {r0, r1}
 80167a2:	a80a      	add	r0, sp, #40	@ 0x28
 80167a4:	f7f9 fa34 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80167a8:	4621      	mov	r1, r4
 80167aa:	a80c      	add	r0, sp, #48	@ 0x30
 80167ac:	f7f9 fa58 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80167b0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80167b4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80167b8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80167bc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80167c0:	bfde      	ittt	le
 80167c2:	b2b3      	uxthle	r3, r6
 80167c4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80167c8:	fb92 f3f3 	sdivle	r3, r2, r3
 80167cc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80167d0:	bfc8      	it	gt
 80167d2:	2301      	movgt	r3, #1
 80167d4:	fb92 f1f3 	sdiv	r1, r2, r3
 80167d8:	fa1f fc81 	uxth.w	ip, r1
 80167dc:	fb0c 2413 	mls	r4, ip, r3, r2
 80167e0:	fb14 f406 	smulbb	r4, r4, r6
 80167e4:	441d      	add	r5, r3
 80167e6:	4404      	add	r4, r0
 80167e8:	4661      	mov	r1, ip
 80167ea:	3d01      	subs	r5, #1
 80167ec:	b2a4      	uxth	r4, r4
 80167ee:	fb95 f5f3 	sdiv	r5, r5, r3
 80167f2:	b131      	cbz	r1, 8016802 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 80167f4:	9b05      	ldr	r3, [sp, #20]
 80167f6:	9900      	ldr	r1, [sp, #0]
 80167f8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80167fc:	ba1b      	rev	r3, r3
 80167fe:	4419      	add	r1, r3
 8016800:	9100      	str	r1, [sp, #0]
 8016802:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016806:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801680a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801680e:	4418      	add	r0, r3
 8016810:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016814:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016818:	441a      	add	r2, r3
 801681a:	4b6a      	ldr	r3, [pc, #424]	@ (80169c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801681c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016820:	6818      	ldr	r0, [r3, #0]
 8016822:	6803      	ldr	r3, [r0, #0]
 8016824:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016826:	4798      	blx	r3
 8016828:	4967      	ldr	r1, [pc, #412]	@ (80169c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801682a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801682e:	880b      	ldrh	r3, [r1, #0]
 8016830:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016834:	9109      	str	r1, [sp, #36]	@ 0x24
 8016836:	fb03 c202 	mla	r2, r3, r2, ip
 801683a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801683e:	4373      	muls	r3, r6
 8016840:	b2ad      	uxth	r5, r5
 8016842:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016846:	00ad      	lsls	r5, r5, #2
 8016848:	9306      	str	r3, [sp, #24]
 801684a:	1d2b      	adds	r3, r5, #4
 801684c:	9307      	str	r3, [sp, #28]
 801684e:	9b01      	ldr	r3, [sp, #4]
 8016850:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016854:	9103      	str	r1, [sp, #12]
 8016856:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801685a:	2c00      	cmp	r4, #0
 801685c:	bf0c      	ite	eq
 801685e:	46c6      	moveq	lr, r8
 8016860:	f04f 0e00 	movne.w	lr, #0
 8016864:	2300      	movs	r3, #0
 8016866:	b292      	uxth	r2, r2
 8016868:	fa1f fe8e 	uxth.w	lr, lr
 801686c:	9302      	str	r3, [sp, #8]
 801686e:	9204      	str	r2, [sp, #16]
 8016870:	9a06      	ldr	r2, [sp, #24]
 8016872:	4282      	cmp	r2, r0
 8016874:	f240 809d 	bls.w	80169b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8016878:	b963      	cbnz	r3, 8016894 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801687a:	9b00      	ldr	r3, [sp, #0]
 801687c:	781a      	ldrb	r2, [r3, #0]
 801687e:	0993      	lsrs	r3, r2, #6
 8016880:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016884:	9202      	str	r2, [sp, #8]
 8016886:	1e5a      	subs	r2, r3, #1
 8016888:	2a02      	cmp	r2, #2
 801688a:	d815      	bhi.n	80168b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801688c:	9a00      	ldr	r2, [sp, #0]
 801688e:	3201      	adds	r2, #1
 8016890:	9200      	str	r2, [sp, #0]
 8016892:	b29b      	uxth	r3, r3
 8016894:	b1b4      	cbz	r4, 80168c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8016896:	429c      	cmp	r4, r3
 8016898:	bf95      	itete	ls
 801689a:	1b1c      	subls	r4, r3, r4
 801689c:	1ae4      	subhi	r4, r4, r3
 801689e:	fa1f fa84 	uxthls.w	sl, r4
 80168a2:	b2a4      	uxthhi	r4, r4
 80168a4:	bf87      	ittee	hi
 80168a6:	4671      	movhi	r1, lr
 80168a8:	f04f 0a00 	movhi.w	sl, #0
 80168ac:	fa1f f188 	uxthls.w	r1, r8
 80168b0:	2400      	movls	r4, #0
 80168b2:	4653      	mov	r3, sl
 80168b4:	468e      	mov	lr, r1
 80168b6:	e7db      	b.n	8016870 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 80168b8:	9a00      	ldr	r2, [sp, #0]
 80168ba:	9b00      	ldr	r3, [sp, #0]
 80168bc:	3202      	adds	r2, #2
 80168be:	785b      	ldrb	r3, [r3, #1]
 80168c0:	9200      	str	r2, [sp, #0]
 80168c2:	e7e7      	b.n	8016894 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 80168c4:	2202      	movs	r2, #2
 80168c6:	4615      	mov	r5, r2
 80168c8:	9907      	ldr	r1, [sp, #28]
 80168ca:	9a02      	ldr	r2, [sp, #8]
 80168cc:	fb15 1202 	smlabb	r2, r5, r2, r1
 80168d0:	9905      	ldr	r1, [sp, #20]
 80168d2:	4573      	cmp	r3, lr
 80168d4:	f831 c002 	ldrh.w	ip, [r1, r2]
 80168d8:	9a01      	ldr	r2, [sp, #4]
 80168da:	bf2b      	itete	cs
 80168dc:	eba3 0a0e 	subcs.w	sl, r3, lr
 80168e0:	ebae 0103 	subcc.w	r1, lr, r3
 80168e4:	46f1      	movcs	r9, lr
 80168e6:	4699      	movcc	r9, r3
 80168e8:	bf27      	ittee	cs
 80168ea:	fa1f fa8a 	uxthcs.w	sl, sl
 80168ee:	4621      	movcs	r1, r4
 80168f0:	b289      	uxthcc	r1, r1
 80168f2:	46a2      	movcc	sl, r4
 80168f4:	2aff      	cmp	r2, #255	@ 0xff
 80168f6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80168fa:	d105      	bne.n	8016908 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80168fc:	4481      	add	r9, r0
 80168fe:	4581      	cmp	r9, r0
 8016900:	d045      	beq.n	801698e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8016902:	f820 cb02 	strh.w	ip, [r0], #2
 8016906:	e7fa      	b.n	80168fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8016908:	9d03      	ldr	r5, [sp, #12]
 801690a:	ea4f 222c 	mov.w	r2, ip, asr #8
 801690e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8016912:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8016916:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801691a:	436a      	muls	r2, r5
 801691c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8016920:	fa5f fc8c 	uxtb.w	ip, ip
 8016924:	9208      	str	r2, [sp, #32]
 8016926:	fb0b fb05 	mul.w	fp, fp, r5
 801692a:	fb0c fc05 	mul.w	ip, ip, r5
 801692e:	4481      	add	r9, r0
 8016930:	4581      	cmp	r9, r0
 8016932:	d02c      	beq.n	801698e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8016934:	8802      	ldrh	r2, [r0, #0]
 8016936:	9d04      	ldr	r5, [sp, #16]
 8016938:	9f04      	ldr	r7, [sp, #16]
 801693a:	1216      	asrs	r6, r2, #8
 801693c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016940:	fb16 f605 	smulbb	r6, r6, r5
 8016944:	9d08      	ldr	r5, [sp, #32]
 8016946:	442e      	add	r6, r5
 8016948:	10d5      	asrs	r5, r2, #3
 801694a:	00d2      	lsls	r2, r2, #3
 801694c:	b2d2      	uxtb	r2, r2
 801694e:	fb12 f207 	smulbb	r2, r2, r7
 8016952:	b2b6      	uxth	r6, r6
 8016954:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016958:	4462      	add	r2, ip
 801695a:	fb15 f507 	smulbb	r5, r5, r7
 801695e:	b292      	uxth	r2, r2
 8016960:	1c77      	adds	r7, r6, #1
 8016962:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016966:	1c57      	adds	r7, r2, #1
 8016968:	445d      	add	r5, fp
 801696a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801696e:	b2ad      	uxth	r5, r5
 8016970:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016974:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016978:	4316      	orrs	r6, r2
 801697a:	1c6a      	adds	r2, r5, #1
 801697c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016980:	096d      	lsrs	r5, r5, #5
 8016982:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016986:	432e      	orrs	r6, r5
 8016988:	f820 6b02 	strh.w	r6, [r0], #2
 801698c:	e7d0      	b.n	8016930 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801698e:	4573      	cmp	r3, lr
 8016990:	d38f      	bcc.n	80168b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8016992:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016996:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016998:	fa1f f188 	uxth.w	r1, r8
 801699c:	1a64      	subs	r4, r4, r1
 801699e:	881b      	ldrh	r3, [r3, #0]
 80169a0:	b2a4      	uxth	r4, r4
 80169a2:	2c00      	cmp	r4, #0
 80169a4:	eba3 0308 	sub.w	r3, r3, r8
 80169a8:	bf18      	it	ne
 80169aa:	2100      	movne	r1, #0
 80169ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80169b0:	e77f      	b.n	80168b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 80169b2:	4b04      	ldr	r3, [pc, #16]	@ (80169c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80169b4:	6818      	ldr	r0, [r3, #0]
 80169b6:	6803      	ldr	r3, [r0, #0]
 80169b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80169ba:	4798      	blx	r3
 80169bc:	b00f      	add	sp, #60	@ 0x3c
 80169be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169c2:	bf00      	nop
 80169c4:	20014040 	.word	0x20014040
 80169c8:	20014038 	.word	0x20014038

080169cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80169cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169d0:	b09f      	sub	sp, #124	@ 0x7c
 80169d2:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80169d6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80169da:	9209      	str	r2, [sp, #36]	@ 0x24
 80169dc:	461d      	mov	r5, r3
 80169de:	4604      	mov	r4, r0
 80169e0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80169e2:	2a00      	cmp	r2, #0
 80169e4:	f000 81eb 	beq.w	8016dbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 80169e8:	6828      	ldr	r0, [r5, #0]
 80169ea:	6869      	ldr	r1, [r5, #4]
 80169ec:	aa1a      	add	r2, sp, #104	@ 0x68
 80169ee:	c203      	stmia	r2!, {r0, r1}
 80169f0:	6818      	ldr	r0, [r3, #0]
 80169f2:	6859      	ldr	r1, [r3, #4]
 80169f4:	aa1c      	add	r2, sp, #112	@ 0x70
 80169f6:	c203      	stmia	r2!, {r0, r1}
 80169f8:	a81a      	add	r0, sp, #104	@ 0x68
 80169fa:	f7f9 f909 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80169fe:	4629      	mov	r1, r5
 8016a00:	a81c      	add	r0, sp, #112	@ 0x70
 8016a02:	f7f9 f92d 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016a06:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016a0a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8016a0e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8016a12:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016a16:	bfd7      	itett	le
 8016a18:	b29a      	uxthle	r2, r3
 8016a1a:	2201      	movgt	r2, #1
 8016a1c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016a20:	fb91 f2f2 	sdivle	r2, r1, r2
 8016a24:	9202      	str	r2, [sp, #8]
 8016a26:	9802      	ldr	r0, [sp, #8]
 8016a28:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8016a2c:	fb92 f0f0 	sdiv	r0, r2, r0
 8016a30:	b280      	uxth	r0, r0
 8016a32:	9010      	str	r0, [sp, #64]	@ 0x40
 8016a34:	9902      	ldr	r1, [sp, #8]
 8016a36:	9802      	ldr	r0, [sp, #8]
 8016a38:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8016a3a:	4488      	add	r8, r1
 8016a3c:	fb05 2510 	mls	r5, r5, r0, r2
 8016a40:	fb15 f503 	smulbb	r5, r5, r3
 8016a44:	f108 38ff 	add.w	r8, r8, #4294967295
 8016a48:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016a4c:	fb98 f8f1 	sdiv	r8, r8, r1
 8016a50:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8016a54:	440d      	add	r5, r1
 8016a56:	4419      	add	r1, r3
 8016a58:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016a5c:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8016a60:	441a      	add	r2, r3
 8016a62:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016a66:	9304      	str	r3, [sp, #16]
 8016a68:	4b95      	ldr	r3, [pc, #596]	@ (8016cc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8016a6a:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8016a6e:	6818      	ldr	r0, [r3, #0]
 8016a70:	6803      	ldr	r3, [r0, #0]
 8016a72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016a74:	4798      	blx	r3
 8016a76:	4b93      	ldr	r3, [pc, #588]	@ (8016cc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016a78:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016a7c:	881a      	ldrh	r2, [r3, #0]
 8016a7e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8016a82:	9318      	str	r3, [sp, #96]	@ 0x60
 8016a84:	fb02 7101 	mla	r1, r2, r1, r7
 8016a88:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016a8c:	4356      	muls	r6, r2
 8016a8e:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8016a92:	f108 0801 	add.w	r8, r8, #1
 8016a96:	920a      	str	r2, [sp, #40]	@ 0x28
 8016a98:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016a9a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8016a9e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016aa0:	fa1f f888 	uxth.w	r8, r8
 8016aa4:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8016aa8:	f108 0204 	add.w	r2, r8, #4
 8016aac:	9211      	str	r2, [sp, #68]	@ 0x44
 8016aae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016ab0:	4b85      	ldr	r3, [pc, #532]	@ (8016cc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016ab2:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8016ab6:	b2ad      	uxth	r5, r5
 8016ab8:	9215      	str	r2, [sp, #84]	@ 0x54
 8016aba:	2d00      	cmp	r5, #0
 8016abc:	9a04      	ldr	r2, [sp, #16]
 8016abe:	f04f 0100 	mov.w	r1, #0
 8016ac2:	bf18      	it	ne
 8016ac4:	2200      	movne	r2, #0
 8016ac6:	1b1b      	subs	r3, r3, r4
 8016ac8:	b292      	uxth	r2, r2
 8016aca:	910d      	str	r1, [sp, #52]	@ 0x34
 8016acc:	9319      	str	r3, [sp, #100]	@ 0x64
 8016ace:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8016ad0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016ad2:	fa11 f383 	uxtah	r3, r1, r3
 8016ad6:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016ad8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016adc:	3304      	adds	r3, #4
 8016ade:	9306      	str	r3, [sp, #24]
 8016ae0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016ae2:	4283      	cmp	r3, r0
 8016ae4:	f240 8166 	bls.w	8016db4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8016ae8:	9902      	ldr	r1, [sp, #8]
 8016aea:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8016aee:	fbb5 f3f3 	udiv	r3, r5, r3
 8016af2:	1acb      	subs	r3, r1, r3
 8016af4:	b29b      	uxth	r3, r3
 8016af6:	9316      	str	r3, [sp, #88]	@ 0x58
 8016af8:	9b06      	ldr	r3, [sp, #24]
 8016afa:	9e06      	ldr	r6, [sp, #24]
 8016afc:	7859      	ldrb	r1, [r3, #1]
 8016afe:	789b      	ldrb	r3, [r3, #2]
 8016b00:	7836      	ldrb	r6, [r6, #0]
 8016b02:	9612      	str	r6, [sp, #72]	@ 0x48
 8016b04:	021b      	lsls	r3, r3, #8
 8016b06:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8016b0a:	9906      	ldr	r1, [sp, #24]
 8016b0c:	78c9      	ldrb	r1, [r1, #3]
 8016b0e:	430b      	orrs	r3, r1
 8016b10:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8016b12:	3601      	adds	r6, #1
 8016b14:	4419      	add	r1, r3
 8016b16:	9605      	str	r6, [sp, #20]
 8016b18:	1c4e      	adds	r6, r1, #1
 8016b1a:	9603      	str	r6, [sp, #12]
 8016b1c:	7849      	ldrb	r1, [r1, #1]
 8016b1e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016b20:	0209      	lsls	r1, r1, #8
 8016b22:	5cf3      	ldrb	r3, [r6, r3]
 8016b24:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8016b28:	4319      	orrs	r1, r3
 8016b2a:	b28b      	uxth	r3, r1
 8016b2c:	930c      	str	r3, [sp, #48]	@ 0x30
 8016b2e:	2300      	movs	r3, #0
 8016b30:	f04f 0a01 	mov.w	sl, #1
 8016b34:	9307      	str	r3, [sp, #28]
 8016b36:	469c      	mov	ip, r3
 8016b38:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016b3c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8016b40:	46d3      	mov	fp, sl
 8016b42:	4657      	mov	r7, sl
 8016b44:	930e      	str	r3, [sp, #56]	@ 0x38
 8016b46:	2d00      	cmp	r5, #0
 8016b48:	d07e      	beq.n	8016c48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016b4a:	42af      	cmp	r7, r5
 8016b4c:	d26e      	bcs.n	8016c2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8016b4e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016b50:	9201      	str	r2, [sp, #4]
 8016b52:	1bed      	subs	r5, r5, r7
 8016b54:	4283      	cmp	r3, r0
 8016b56:	b2ad      	uxth	r5, r5
 8016b58:	d802      	bhi.n	8016b60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8016b5a:	e073      	b.n	8016c44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8016b5c:	2b00      	cmp	r3, #0
 8016b5e:	d15f      	bne.n	8016c20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8016b60:	9b03      	ldr	r3, [sp, #12]
 8016b62:	785b      	ldrb	r3, [r3, #1]
 8016b64:	f1cb 0207 	rsb	r2, fp, #7
 8016b68:	4093      	lsls	r3, r2
 8016b6a:	005b      	lsls	r3, r3, #1
 8016b6c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016b70:	9b03      	ldr	r3, [sp, #12]
 8016b72:	781b      	ldrb	r3, [r3, #0]
 8016b74:	fa43 f30b 	asr.w	r3, r3, fp
 8016b78:	b2db      	uxtb	r3, r3
 8016b7a:	4313      	orrs	r3, r2
 8016b7c:	f10b 0201 	add.w	r2, fp, #1
 8016b80:	fa5f fb82 	uxtb.w	fp, r2
 8016b84:	9a03      	ldr	r2, [sp, #12]
 8016b86:	f1bb 0f08 	cmp.w	fp, #8
 8016b8a:	bf15      	itete	ne
 8016b8c:	3201      	addne	r2, #1
 8016b8e:	3202      	addeq	r2, #2
 8016b90:	9203      	strne	r2, [sp, #12]
 8016b92:	9203      	streq	r2, [sp, #12]
 8016b94:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016b96:	b29f      	uxth	r7, r3
 8016b98:	bf08      	it	eq
 8016b9a:	f04f 0b00 	moveq.w	fp, #0
 8016b9e:	42ba      	cmp	r2, r7
 8016ba0:	d309      	bcc.n	8016bb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8016ba2:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8016ba6:	2301      	movs	r3, #1
 8016ba8:	9a05      	ldr	r2, [sp, #20]
 8016baa:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8016bae:	d30e      	bcc.n	8016bce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8016bb0:	469a      	mov	sl, r3
 8016bb2:	2600      	movs	r6, #0
 8016bb4:	e035      	b.n	8016c22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8016bb6:	9b05      	ldr	r3, [sp, #20]
 8016bb8:	429f      	cmp	r7, r3
 8016bba:	d318      	bcc.n	8016bee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8016bbc:	eb04 030a 	add.w	r3, r4, sl
 8016bc0:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8016bc4:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8016bc8:	f10a 0301 	add.w	r3, sl, #1
 8016bcc:	b29b      	uxth	r3, r3
 8016bce:	9a05      	ldr	r2, [sp, #20]
 8016bd0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016bd4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016bd6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016bda:	7116      	strb	r6, [r2, #4]
 8016bdc:	f10a 0601 	add.w	r6, sl, #1
 8016be0:	80d1      	strh	r1, [r2, #6]
 8016be2:	7156      	strb	r6, [r2, #5]
 8016be4:	9a05      	ldr	r2, [sp, #20]
 8016be6:	3201      	adds	r2, #1
 8016be8:	b292      	uxth	r2, r2
 8016bea:	9205      	str	r2, [sp, #20]
 8016bec:	e7e0      	b.n	8016bb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8016bee:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8016bf2:	463a      	mov	r2, r7
 8016bf4:	795b      	ldrb	r3, [r3, #5]
 8016bf6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8016bfa:	4426      	add	r6, r4
 8016bfc:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8016bfe:	eb01 0c06 	add.w	ip, r1, r6
 8016c02:	f1bc 0f00 	cmp.w	ip, #0
 8016c06:	dd07      	ble.n	8016c18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8016c08:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016c0c:	f892 c004 	ldrb.w	ip, [r2, #4]
 8016c10:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8016c14:	88d2      	ldrh	r2, [r2, #6]
 8016c16:	e7f1      	b.n	8016bfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8016c18:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8016c1c:	b29b      	uxth	r3, r3
 8016c1e:	e7c3      	b.n	8016ba8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8016c20:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8016c22:	970c      	str	r7, [sp, #48]	@ 0x30
 8016c24:	9a01      	ldr	r2, [sp, #4]
 8016c26:	46b4      	mov	ip, r6
 8016c28:	461f      	mov	r7, r3
 8016c2a:	e78c      	b.n	8016b46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8016c2c:	1b7b      	subs	r3, r7, r5
 8016c2e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016c32:	9201      	str	r2, [sp, #4]
 8016c34:	eb0c 0605 	add.w	r6, ip, r5
 8016c38:	b29b      	uxth	r3, r3
 8016c3a:	b2b6      	uxth	r6, r6
 8016c3c:	2500      	movs	r5, #0
 8016c3e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016c40:	4282      	cmp	r2, r0
 8016c42:	d88b      	bhi.n	8016b5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8016c44:	9a01      	ldr	r2, [sp, #4]
 8016c46:	e74b      	b.n	8016ae0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8016c48:	4297      	cmp	r7, r2
 8016c4a:	d332      	bcc.n	8016cb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8016c4c:	1abb      	subs	r3, r7, r2
 8016c4e:	b29b      	uxth	r3, r3
 8016c50:	9208      	str	r2, [sp, #32]
 8016c52:	9501      	str	r5, [sp, #4]
 8016c54:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016c56:	29ff      	cmp	r1, #255	@ 0xff
 8016c58:	9908      	ldr	r1, [sp, #32]
 8016c5a:	eb0c 0601 	add.w	r6, ip, r1
 8016c5e:	d135      	bne.n	8016ccc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8016c60:	f1a0 0e02 	sub.w	lr, r0, #2
 8016c64:	b2b6      	uxth	r6, r6
 8016c66:	45b4      	cmp	ip, r6
 8016c68:	f040 808c 	bne.w	8016d84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8016c6c:	9908      	ldr	r1, [sp, #32]
 8016c6e:	4297      	cmp	r7, r2
 8016c70:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016c74:	d3e2      	bcc.n	8016c3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8016c76:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8016c78:	9904      	ldr	r1, [sp, #16]
 8016c7a:	8812      	ldrh	r2, [r2, #0]
 8016c7c:	1a52      	subs	r2, r2, r1
 8016c7e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016c82:	9a07      	ldr	r2, [sp, #28]
 8016c84:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8016c86:	3201      	adds	r2, #1
 8016c88:	428a      	cmp	r2, r1
 8016c8a:	9207      	str	r2, [sp, #28]
 8016c8c:	f040 8087 	bne.w	8016d9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8016c90:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8016c94:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8016c98:	9b04      	ldr	r3, [sp, #16]
 8016c9a:	1bed      	subs	r5, r5, r7
 8016c9c:	b2ad      	uxth	r5, r5
 8016c9e:	2d00      	cmp	r5, #0
 8016ca0:	bf08      	it	eq
 8016ca2:	461a      	moveq	r2, r3
 8016ca4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016ca6:	bf18      	it	ne
 8016ca8:	2200      	movne	r2, #0
 8016caa:	3301      	adds	r3, #1
 8016cac:	930d      	str	r3, [sp, #52]	@ 0x34
 8016cae:	b292      	uxth	r2, r2
 8016cb0:	e70d      	b.n	8016ace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8016cb2:	1bd1      	subs	r1, r2, r7
 8016cb4:	b28b      	uxth	r3, r1
 8016cb6:	9301      	str	r3, [sp, #4]
 8016cb8:	9708      	str	r7, [sp, #32]
 8016cba:	462b      	mov	r3, r5
 8016cbc:	e7ca      	b.n	8016c54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8016cbe:	bf00      	nop
 8016cc0:	20014040 	.word	0x20014040
 8016cc4:	20014038 	.word	0x20014038
 8016cc8:	fffff7fb 	.word	0xfffff7fb
 8016ccc:	b2b6      	uxth	r6, r6
 8016cce:	900b      	str	r0, [sp, #44]	@ 0x2c
 8016cd0:	45b4      	cmp	ip, r6
 8016cd2:	d0cb      	beq.n	8016c6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8016cd4:	f10c 0101 	add.w	r1, ip, #1
 8016cd8:	44a4      	add	ip, r4
 8016cda:	9117      	str	r1, [sp, #92]	@ 0x5c
 8016cdc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016ce0:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016ce2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016ce6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016ce8:	f8b1 c000 	ldrh.w	ip, [r1]
 8016cec:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016cee:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8016cf2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016cf6:	fb1e fe01 	smulbb	lr, lr, r1
 8016cfa:	ea4f 2825 	mov.w	r8, r5, asr #8
 8016cfe:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016d00:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8016d04:	fb08 e801 	mla	r8, r8, r1, lr
 8016d08:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8016d0c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016d0e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8016d12:	fb19 f901 	smulbb	r9, r9, r1
 8016d16:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8016d1a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016d1c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8016d20:	fb0e 9e01 	mla	lr, lr, r1, r9
 8016d24:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016d28:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016d2a:	fa5f fc8c 	uxtb.w	ip, ip
 8016d2e:	fb1c fc01 	smulbb	ip, ip, r1
 8016d32:	00ed      	lsls	r5, r5, #3
 8016d34:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016d36:	b2ed      	uxtb	r5, r5
 8016d38:	fb05 c501 	mla	r5, r5, r1, ip
 8016d3c:	fa1f f888 	uxth.w	r8, r8
 8016d40:	fa1f fe8e 	uxth.w	lr, lr
 8016d44:	b2ad      	uxth	r5, r5
 8016d46:	f108 0c01 	add.w	ip, r8, #1
 8016d4a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016d4e:	f10e 0901 	add.w	r9, lr, #1
 8016d52:	f105 0c01 	add.w	ip, r5, #1
 8016d56:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016d5a:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016d5e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016d62:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8016d66:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016d6a:	ea4c 0808 	orr.w	r8, ip, r8
 8016d6e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016d70:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8016d74:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016d78:	ea48 0809 	orr.w	r8, r8, r9
 8016d7c:	f821 8b02 	strh.w	r8, [r1], #2
 8016d80:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016d82:	e7a5      	b.n	8016cd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8016d84:	f10c 0801 	add.w	r8, ip, #1
 8016d88:	44a4      	add	ip, r4
 8016d8a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016d8c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016d90:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016d94:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016d98:	fa1f fc88 	uxth.w	ip, r8
 8016d9c:	e763      	b.n	8016c66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8016d9e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016da2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8016da6:	1aad      	subs	r5, r5, r2
 8016da8:	b2ad      	uxth	r5, r5
 8016daa:	2d00      	cmp	r5, #0
 8016dac:	bf18      	it	ne
 8016dae:	2200      	movne	r2, #0
 8016db0:	9201      	str	r2, [sp, #4]
 8016db2:	e744      	b.n	8016c3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8016db4:	4b03      	ldr	r3, [pc, #12]	@ (8016dc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8016db6:	6818      	ldr	r0, [r3, #0]
 8016db8:	6803      	ldr	r3, [r0, #0]
 8016dba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016dbc:	4798      	blx	r3
 8016dbe:	b01f      	add	sp, #124	@ 0x7c
 8016dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dc4:	20014040 	.word	0x20014040

08016dc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8016dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016dcc:	b093      	sub	sp, #76	@ 0x4c
 8016dce:	4616      	mov	r6, r2
 8016dd0:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8016dd4:	9003      	str	r0, [sp, #12]
 8016dd6:	460d      	mov	r5, r1
 8016dd8:	9201      	str	r2, [sp, #4]
 8016dda:	2a00      	cmp	r2, #0
 8016ddc:	f000 8304 	beq.w	80173e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8016de0:	6830      	ldr	r0, [r6, #0]
 8016de2:	6871      	ldr	r1, [r6, #4]
 8016de4:	ac0e      	add	r4, sp, #56	@ 0x38
 8016de6:	c403      	stmia	r4!, {r0, r1}
 8016de8:	6818      	ldr	r0, [r3, #0]
 8016dea:	6859      	ldr	r1, [r3, #4]
 8016dec:	ac10      	add	r4, sp, #64	@ 0x40
 8016dee:	c403      	stmia	r4!, {r0, r1}
 8016df0:	a80e      	add	r0, sp, #56	@ 0x38
 8016df2:	f7f8 ff0d 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016df6:	4631      	mov	r1, r6
 8016df8:	a810      	add	r0, sp, #64	@ 0x40
 8016dfa:	f7f8 ff31 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016dfe:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8016e02:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8016e06:	bfd7      	itett	le
 8016e08:	b293      	uxthle	r3, r2
 8016e0a:	2301      	movgt	r3, #1
 8016e0c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016e10:	fb91 f3f3 	sdivle	r3, r1, r3
 8016e14:	9304      	str	r3, [sp, #16]
 8016e16:	f105 0308 	add.w	r3, r5, #8
 8016e1a:	9904      	ldr	r1, [sp, #16]
 8016e1c:	9308      	str	r3, [sp, #32]
 8016e1e:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8016e22:	440b      	add	r3, r1
 8016e24:	3b01      	subs	r3, #1
 8016e26:	fb93 f3f1 	sdiv	r3, r3, r1
 8016e2a:	9908      	ldr	r1, [sp, #32]
 8016e2c:	3b01      	subs	r3, #1
 8016e2e:	b29b      	uxth	r3, r3
 8016e30:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016e34:	9309      	str	r3, [sp, #36]	@ 0x24
 8016e36:	9904      	ldr	r1, [sp, #16]
 8016e38:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8016e3c:	fb93 f0f1 	sdiv	r0, r3, r1
 8016e40:	b284      	uxth	r4, r0
 8016e42:	9405      	str	r4, [sp, #20]
 8016e44:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8016e48:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8016e4c:	fb05 3914 	mls	r9, r5, r4, r3
 8016e50:	fb19 f902 	smulbb	r9, r9, r2
 8016e54:	4489      	add	r9, r1
 8016e56:	fa1f f989 	uxth.w	r9, r9
 8016e5a:	2d00      	cmp	r5, #0
 8016e5c:	d05d      	beq.n	8016f1a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8016e5e:	1e6a      	subs	r2, r5, #1
 8016e60:	9808      	ldr	r0, [sp, #32]
 8016e62:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8016e66:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016e68:	fa9a fa8a 	rev.w	sl, sl
 8016e6c:	4492      	add	sl, r2
 8016e6e:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8016e72:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8016e76:	4411      	add	r1, r2
 8016e78:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8016e7c:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8016e80:	4413      	add	r3, r2
 8016e82:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8016e86:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8016e8a:	9302      	str	r3, [sp, #8]
 8016e8c:	4bcb      	ldr	r3, [pc, #812]	@ (80171bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 8016e8e:	6818      	ldr	r0, [r3, #0]
 8016e90:	6803      	ldr	r3, [r0, #0]
 8016e92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016e94:	4798      	blx	r3
 8016e96:	4bca      	ldr	r3, [pc, #808]	@ (80171c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8016e98:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8016e9c:	881b      	ldrh	r3, [r3, #0]
 8016e9e:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8016ea2:	fb03 2404 	mla	r4, r3, r4, r2
 8016ea6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016eaa:	436b      	muls	r3, r5
 8016eac:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016eb0:	930d      	str	r3, [sp, #52]	@ 0x34
 8016eb2:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8016eb6:	fb99 f3f3 	sdiv	r3, r9, r3
 8016eba:	9306      	str	r3, [sp, #24]
 8016ebc:	9b01      	ldr	r3, [sp, #4]
 8016ebe:	43db      	mvns	r3, r3
 8016ec0:	b2db      	uxtb	r3, r3
 8016ec2:	930a      	str	r3, [sp, #40]	@ 0x28
 8016ec4:	9b03      	ldr	r3, [sp, #12]
 8016ec6:	3304      	adds	r3, #4
 8016ec8:	4618      	mov	r0, r3
 8016eca:	2280      	movs	r2, #128	@ 0x80
 8016ecc:	2100      	movs	r1, #0
 8016ece:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016ed0:	f00c fc8b 	bl	80237ea <memset>
 8016ed4:	4bbb      	ldr	r3, [pc, #748]	@ (80171c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8016ed6:	9300      	str	r3, [sp, #0]
 8016ed8:	2300      	movs	r3, #0
 8016eda:	f04f 0600 	mov.w	r6, #0
 8016ede:	9307      	str	r3, [sp, #28]
 8016ee0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016ee2:	42a3      	cmp	r3, r4
 8016ee4:	f240 827b 	bls.w	80173de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 8016ee8:	f04f 0e07 	mov.w	lr, #7
 8016eec:	f1b9 0f00 	cmp.w	r9, #0
 8016ef0:	f000 8159 	beq.w	80171a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 8016ef4:	f89a 5000 	ldrb.w	r5, [sl]
 8016ef8:	b2ed      	uxtb	r5, r5
 8016efa:	11aa      	asrs	r2, r5, #6
 8016efc:	f10a 0701 	add.w	r7, sl, #1
 8016f00:	d10e      	bne.n	8016f20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 8016f02:	9b03      	ldr	r3, [sp, #12]
 8016f04:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016f08:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016f0c:	88ae      	ldrh	r6, [r5, #4]
 8016f0e:	f109 39ff 	add.w	r9, r9, #4294967295
 8016f12:	fa1f f989 	uxth.w	r9, r9
 8016f16:	46ba      	mov	sl, r7
 8016f18:	e7e8      	b.n	8016eec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8016f1a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8016f1e:	e7a6      	b.n	8016e6e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 8016f20:	2a01      	cmp	r2, #1
 8016f22:	d129      	bne.n	8016f78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8016f24:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8016f28:	f005 0203 	and.w	r2, r5, #3
 8016f2c:	3b02      	subs	r3, #2
 8016f2e:	4413      	add	r3, r2
 8016f30:	f003 031f 	and.w	r3, r3, #31
 8016f34:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8016f38:	f363 0604 	bfi	r6, r3, #0, #5
 8016f3c:	3a02      	subs	r2, #2
 8016f3e:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 8016f42:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016f46:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8016f4a:	f362 164a 	bfi	r6, r2, #5, #6
 8016f4e:	3d02      	subs	r5, #2
 8016f50:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8016f54:	f005 051f 	and.w	r5, r5, #31
 8016f58:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016f5c:	2103      	movs	r1, #3
 8016f5e:	fb11 2205 	smlabb	r2, r1, r5, r2
 8016f62:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8016f66:	9a03      	ldr	r2, [sp, #12]
 8016f68:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016f6c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016f70:	f365 26cf 	bfi	r6, r5, #11, #5
 8016f74:	809e      	strh	r6, [r3, #4]
 8016f76:	e7ca      	b.n	8016f0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8016f78:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016f7c:	2a02      	cmp	r2, #2
 8016f7e:	b2ab      	uxth	r3, r5
 8016f80:	d136      	bne.n	8016ff0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 8016f82:	2101      	movs	r1, #1
 8016f84:	fb12 1205 	smlabb	r2, r2, r5, r1
 8016f88:	4492      	add	sl, r2
 8016f8a:	463a      	mov	r2, r7
 8016f8c:	4552      	cmp	r2, sl
 8016f8e:	d01c      	beq.n	8016fca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8016f90:	4694      	mov	ip, r2
 8016f92:	f04f 0b03 	mov.w	fp, #3
 8016f96:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8016f9a:	7852      	ldrb	r2, [r2, #1]
 8016f9c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8016fa0:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8016fa4:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8016fa8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016fac:	f001 021f 	and.w	r2, r1, #31
 8016fb0:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8016fb4:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8016fb8:	9a03      	ldr	r2, [sp, #12]
 8016fba:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016fbe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016fc2:	460e      	mov	r6, r1
 8016fc4:	8081      	strh	r1, [r0, #4]
 8016fc6:	4662      	mov	r2, ip
 8016fc8:	e7e0      	b.n	8016f8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8016fca:	4599      	cmp	r9, r3
 8016fcc:	d20b      	bcs.n	8016fe6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8016fce:	eba5 0509 	sub.w	r5, r5, r9
 8016fd2:	2d00      	cmp	r5, #0
 8016fd4:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8016fd8:	f300 8209 	bgt.w	80173ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8016fdc:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016fe0:	2301      	movs	r3, #1
 8016fe2:	9307      	str	r3, [sp, #28]
 8016fe4:	e00c      	b.n	8017000 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016fe6:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8016fea:	eba9 0903 	sub.w	r9, r9, r3
 8016fee:	e790      	b.n	8016f12 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8016ff0:	4599      	cmp	r9, r3
 8016ff2:	d2fa      	bcs.n	8016fea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 8016ff4:	eba5 0509 	sub.w	r5, r5, r9
 8016ff8:	2d00      	cmp	r5, #0
 8016ffa:	dc1d      	bgt.n	8017038 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 8016ffc:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8017000:	f04f 0b00 	mov.w	fp, #0
 8017004:	f1b8 0f00 	cmp.w	r8, #0
 8017008:	f340 81a1 	ble.w	801734e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 801700c:	783b      	ldrb	r3, [r7, #0]
 801700e:	b2db      	uxtb	r3, r3
 8017010:	119a      	asrs	r2, r3, #6
 8017012:	f107 0a01 	add.w	sl, r7, #1
 8017016:	f040 80d7 	bne.w	80171c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801701a:	9a03      	ldr	r2, [sp, #12]
 801701c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017020:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017024:	889e      	ldrh	r6, [r3, #4]
 8017026:	9b01      	ldr	r3, [sp, #4]
 8017028:	2bff      	cmp	r3, #255	@ 0xff
 801702a:	f040 81e9 	bne.w	8017400 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801702e:	8026      	strh	r6, [r4, #0]
 8017030:	f108 38ff 	add.w	r8, r8, #4294967295
 8017034:	3402      	adds	r4, #2
 8017036:	e0be      	b.n	80171b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017038:	9b02      	ldr	r3, [sp, #8]
 801703a:	9a02      	ldr	r2, [sp, #8]
 801703c:	42ab      	cmp	r3, r5
 801703e:	bfa8      	it	ge
 8017040:	462b      	movge	r3, r5
 8017042:	eba2 0803 	sub.w	r8, r2, r3
 8017046:	9a07      	ldr	r2, [sp, #28]
 8017048:	1aed      	subs	r5, r5, r3
 801704a:	2a00      	cmp	r2, #0
 801704c:	d05a      	beq.n	8017104 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801704e:	9a01      	ldr	r2, [sp, #4]
 8017050:	2aff      	cmp	r2, #255	@ 0xff
 8017052:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017056:	d049      	beq.n	80170ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8017058:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801705c:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8017060:	42a3      	cmp	r3, r4
 8017062:	f240 80a5 	bls.w	80171b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8017066:	46bc      	mov	ip, r7
 8017068:	8820      	ldrh	r0, [r4, #0]
 801706a:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801706e:	7879      	ldrb	r1, [r7, #1]
 8017070:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8017074:	b212      	sxth	r2, r2
 8017076:	b291      	uxth	r1, r2
 8017078:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801707c:	120f      	asrs	r7, r1, #8
 801707e:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8017082:	fb1a fa09 	smulbb	sl, sl, r9
 8017086:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801708a:	fb07 a70e 	mla	r7, r7, lr, sl
 801708e:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 8017092:	00c0      	lsls	r0, r0, #3
 8017094:	10c9      	asrs	r1, r1, #3
 8017096:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801709a:	00d2      	lsls	r2, r2, #3
 801709c:	b2c0      	uxtb	r0, r0
 801709e:	fb1a fa09 	smulbb	sl, sl, r9
 80170a2:	fb10 f009 	smulbb	r0, r0, r9
 80170a6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80170aa:	b2d2      	uxtb	r2, r2
 80170ac:	b2bf      	uxth	r7, r7
 80170ae:	fb01 a10e 	mla	r1, r1, lr, sl
 80170b2:	fb02 020e 	mla	r2, r2, lr, r0
 80170b6:	b289      	uxth	r1, r1
 80170b8:	b292      	uxth	r2, r2
 80170ba:	1c78      	adds	r0, r7, #1
 80170bc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80170c0:	f101 0a01 	add.w	sl, r1, #1
 80170c4:	1c50      	adds	r0, r2, #1
 80170c6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80170ca:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 80170ce:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80170d2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80170d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80170da:	4307      	orrs	r7, r0
 80170dc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80170e0:	ea47 070a 	orr.w	r7, r7, sl
 80170e4:	f824 7b02 	strh.w	r7, [r4], #2
 80170e8:	4667      	mov	r7, ip
 80170ea:	e7b9      	b.n	8017060 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80170ec:	42a3      	cmp	r3, r4
 80170ee:	d95f      	bls.n	80171b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80170f0:	463a      	mov	r2, r7
 80170f2:	f812 1b02 	ldrb.w	r1, [r2], #2
 80170f6:	7878      	ldrb	r0, [r7, #1]
 80170f8:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80170fc:	f824 1b02 	strh.w	r1, [r4], #2
 8017100:	4617      	mov	r7, r2
 8017102:	e7f3      	b.n	80170ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8017104:	9901      	ldr	r1, [sp, #4]
 8017106:	29ff      	cmp	r1, #255	@ 0xff
 8017108:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801710c:	b2b2      	uxth	r2, r6
 801710e:	d044      	beq.n	801719a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8017110:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017114:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 8017118:	ea4f 2922 	mov.w	r9, r2, asr #8
 801711c:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8017120:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 8017124:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017128:	4608      	mov	r0, r1
 801712a:	fb09 f901 	mul.w	r9, r9, r1
 801712e:	fb0e fe01 	mul.w	lr, lr, r1
 8017132:	00d1      	lsls	r1, r2, #3
 8017134:	b2c9      	uxtb	r1, r1
 8017136:	4341      	muls	r1, r0
 8017138:	429c      	cmp	r4, r3
 801713a:	f4bf af61 	bcs.w	8017000 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801713e:	8822      	ldrh	r2, [r4, #0]
 8017140:	1210      	asrs	r0, r2, #8
 8017142:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8017146:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801714a:	00d2      	lsls	r2, r2, #3
 801714c:	fb00 900a 	mla	r0, r0, sl, r9
 8017150:	b2d2      	uxtb	r2, r2
 8017152:	b280      	uxth	r0, r0
 8017154:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017158:	fb02 120a 	mla	r2, r2, sl, r1
 801715c:	b292      	uxth	r2, r2
 801715e:	f100 0b01 	add.w	fp, r0, #1
 8017162:	fb0c ec0a 	mla	ip, ip, sl, lr
 8017166:	fa1f fc8c 	uxth.w	ip, ip
 801716a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801716e:	1c50      	adds	r0, r2, #1
 8017170:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017174:	f10c 0201 	add.w	r2, ip, #1
 8017178:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801717c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8017180:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8017184:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017188:	ea40 0b0b 	orr.w	fp, r0, fp
 801718c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8017190:	ea4b 0b0c 	orr.w	fp, fp, ip
 8017194:	f824 bb02 	strh.w	fp, [r4], #2
 8017198:	e7ce      	b.n	8017138 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801719a:	429c      	cmp	r4, r3
 801719c:	f4bf af30 	bcs.w	8017000 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80171a0:	f824 2b02 	strh.w	r2, [r4], #2
 80171a4:	e7f9      	b.n	801719a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80171a6:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80171aa:	4657      	mov	r7, sl
 80171ac:	464d      	mov	r5, r9
 80171ae:	e727      	b.n	8017000 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80171b0:	2300      	movs	r3, #0
 80171b2:	e716      	b.n	8016fe2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 80171b4:	44bb      	add	fp, r7
 80171b6:	4657      	mov	r7, sl
 80171b8:	e724      	b.n	8017004 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 80171ba:	bf00      	nop
 80171bc:	20014040 	.word	0x20014040
 80171c0:	20014038 	.word	0x20014038
 80171c4:	20000280 	.word	0x20000280
 80171c8:	2a01      	cmp	r2, #1
 80171ca:	d12a      	bne.n	8017222 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 80171cc:	f3c6 0104 	ubfx	r1, r6, #0, #5
 80171d0:	f003 0203 	and.w	r2, r3, #3
 80171d4:	3902      	subs	r1, #2
 80171d6:	4411      	add	r1, r2
 80171d8:	f001 011f 	and.w	r1, r1, #31
 80171dc:	f3c3 0081 	ubfx	r0, r3, #2, #2
 80171e0:	f361 0604 	bfi	r6, r1, #0, #5
 80171e4:	3802      	subs	r0, #2
 80171e6:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80171ea:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80171ee:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80171f2:	f360 164a 	bfi	r6, r0, #5, #6
 80171f6:	3b02      	subs	r3, #2
 80171f8:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80171fc:	f002 031f 	and.w	r3, r2, #31
 8017200:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8017204:	2203      	movs	r2, #3
 8017206:	f363 26cf 	bfi	r6, r3, #11, #5
 801720a:	fb12 0303 	smlabb	r3, r2, r3, r0
 801720e:	2207      	movs	r2, #7
 8017210:	fb12 3301 	smlabb	r3, r2, r1, r3
 8017214:	9a03      	ldr	r2, [sp, #12]
 8017216:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801721a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801721e:	809e      	strh	r6, [r3, #4]
 8017220:	e701      	b.n	8017026 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 8017222:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8017226:	45a8      	cmp	r8, r5
 8017228:	4647      	mov	r7, r8
 801722a:	bfa8      	it	ge
 801722c:	462f      	movge	r7, r5
 801722e:	2a02      	cmp	r2, #2
 8017230:	d154      	bne.n	80172dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 8017232:	9b01      	ldr	r3, [sp, #4]
 8017234:	2bff      	cmp	r3, #255	@ 0xff
 8017236:	d01a      	beq.n	801726e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8017238:	eb0b 0307 	add.w	r3, fp, r7
 801723c:	2b40      	cmp	r3, #64	@ 0x40
 801723e:	dd16      	ble.n	801726e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8017240:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8017244:	4649      	mov	r1, r9
 8017246:	9800      	ldr	r0, [sp, #0]
 8017248:	f7ea f866 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 801724c:	465a      	mov	r2, fp
 801724e:	9b01      	ldr	r3, [sp, #4]
 8017250:	9900      	ldr	r1, [sp, #0]
 8017252:	4620      	mov	r0, r4
 8017254:	f7ea f88a 	bl	800136c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017258:	9b00      	ldr	r3, [sp, #0]
 801725a:	461a      	mov	r2, r3
 801725c:	4b6c      	ldr	r3, [pc, #432]	@ (8017410 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801725e:	429a      	cmp	r2, r3
 8017260:	bf0c      	ite	eq
 8017262:	4b6c      	ldreq	r3, [pc, #432]	@ (8017414 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8017264:	4b6a      	ldrne	r3, [pc, #424]	@ (8017410 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017266:	9300      	str	r3, [sp, #0]
 8017268:	444c      	add	r4, r9
 801726a:	f04f 0b00 	mov.w	fp, #0
 801726e:	4652      	mov	r2, sl
 8017270:	2100      	movs	r1, #0
 8017272:	42a9      	cmp	r1, r5
 8017274:	da2c      	bge.n	80172d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8017276:	4694      	mov	ip, r2
 8017278:	f04f 0903 	mov.w	r9, #3
 801727c:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8017280:	7852      	ldrb	r2, [r2, #1]
 8017282:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8017286:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801728a:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801728e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8017292:	f003 021f 	and.w	r2, r3, #31
 8017296:	fb19 000e 	smlabb	r0, r9, lr, r0
 801729a:	f04f 0e07 	mov.w	lr, #7
 801729e:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80172a2:	9a03      	ldr	r2, [sp, #12]
 80172a4:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80172a8:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80172ac:	42b9      	cmp	r1, r7
 80172ae:	461e      	mov	r6, r3
 80172b0:	8083      	strh	r3, [r0, #4]
 80172b2:	da0a      	bge.n	80172ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 80172b4:	9a01      	ldr	r2, [sp, #4]
 80172b6:	2aff      	cmp	r2, #255	@ 0xff
 80172b8:	bf15      	itete	ne
 80172ba:	9a00      	ldrne	r2, [sp, #0]
 80172bc:	8023      	strheq	r3, [r4, #0]
 80172be:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 80172c2:	3402      	addeq	r4, #2
 80172c4:	bf18      	it	ne
 80172c6:	f10b 0b01 	addne.w	fp, fp, #1
 80172ca:	3101      	adds	r1, #1
 80172cc:	4662      	mov	r2, ip
 80172ce:	e7d0      	b.n	8017272 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 80172d0:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80172d4:	eba8 0807 	sub.w	r8, r8, r7
 80172d8:	1bed      	subs	r5, r5, r7
 80172da:	e76c      	b.n	80171b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80172dc:	9b01      	ldr	r3, [sp, #4]
 80172de:	2bff      	cmp	r3, #255	@ 0xff
 80172e0:	eba8 0807 	sub.w	r8, r8, r7
 80172e4:	eba5 0507 	sub.w	r5, r5, r7
 80172e8:	fa1f f986 	uxth.w	r9, r6
 80172ec:	d027      	beq.n	801733e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80172ee:	eb0b 0307 	add.w	r3, fp, r7
 80172f2:	2b40      	cmp	r3, #64	@ 0x40
 80172f4:	dd18      	ble.n	8017328 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80172f6:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80172fa:	4619      	mov	r1, r3
 80172fc:	9800      	ldr	r0, [sp, #0]
 80172fe:	930c      	str	r3, [sp, #48]	@ 0x30
 8017300:	f7ea f80a 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 8017304:	465a      	mov	r2, fp
 8017306:	9b01      	ldr	r3, [sp, #4]
 8017308:	9900      	ldr	r1, [sp, #0]
 801730a:	4620      	mov	r0, r4
 801730c:	f7ea f82e 	bl	800136c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017310:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017312:	441c      	add	r4, r3
 8017314:	9b00      	ldr	r3, [sp, #0]
 8017316:	461a      	mov	r2, r3
 8017318:	4b3d      	ldr	r3, [pc, #244]	@ (8017410 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801731a:	429a      	cmp	r2, r3
 801731c:	bf0c      	ite	eq
 801731e:	4b3d      	ldreq	r3, [pc, #244]	@ (8017414 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8017320:	4b3b      	ldrne	r3, [pc, #236]	@ (8017410 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017322:	9300      	str	r3, [sp, #0]
 8017324:	f04f 0b00 	mov.w	fp, #0
 8017328:	9b00      	ldr	r3, [sp, #0]
 801732a:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801732e:	463b      	mov	r3, r7
 8017330:	2b00      	cmp	r3, #0
 8017332:	f43f af3f 	beq.w	80171b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8017336:	f822 9b02 	strh.w	r9, [r2], #2
 801733a:	3b01      	subs	r3, #1
 801733c:	e7f8      	b.n	8017330 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801733e:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8017342:	42a7      	cmp	r7, r4
 8017344:	f67f af37 	bls.w	80171b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017348:	f824 9b02 	strh.w	r9, [r4], #2
 801734c:	e7f9      	b.n	8017342 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801734e:	f1bb 0f00 	cmp.w	fp, #0
 8017352:	d00c      	beq.n	801736e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8017354:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8017358:	4641      	mov	r1, r8
 801735a:	9800      	ldr	r0, [sp, #0]
 801735c:	f7e9 ffdc 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 8017360:	4620      	mov	r0, r4
 8017362:	9b01      	ldr	r3, [sp, #4]
 8017364:	9900      	ldr	r1, [sp, #0]
 8017366:	465a      	mov	r2, fp
 8017368:	f7ea f800 	bl	800136c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801736c:	4444      	add	r4, r8
 801736e:	4b2a      	ldr	r3, [pc, #168]	@ (8017418 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8017370:	9a02      	ldr	r2, [sp, #8]
 8017372:	881b      	ldrh	r3, [r3, #0]
 8017374:	1a9b      	subs	r3, r3, r2
 8017376:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801737a:	9b06      	ldr	r3, [sp, #24]
 801737c:	3301      	adds	r3, #1
 801737e:	9306      	str	r3, [sp, #24]
 8017380:	9a06      	ldr	r2, [sp, #24]
 8017382:	9b04      	ldr	r3, [sp, #16]
 8017384:	4293      	cmp	r3, r2
 8017386:	d120      	bne.n	80173ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8017388:	9b05      	ldr	r3, [sp, #20]
 801738a:	9a05      	ldr	r2, [sp, #20]
 801738c:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8017390:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8017394:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8017396:	f103 0801 	add.w	r8, r3, #1
 801739a:	9b08      	ldr	r3, [sp, #32]
 801739c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80173a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80173a2:	ba3f      	rev	r7, r7
 80173a4:	2280      	movs	r2, #128	@ 0x80
 80173a6:	2100      	movs	r1, #0
 80173a8:	441f      	add	r7, r3
 80173aa:	eba9 0905 	sub.w	r9, r9, r5
 80173ae:	f00c fa1c 	bl	80237ea <memset>
 80173b2:	2300      	movs	r3, #0
 80173b4:	fa1f f989 	uxth.w	r9, r9
 80173b8:	f04f 0600 	mov.w	r6, #0
 80173bc:	f8cd 8014 	str.w	r8, [sp, #20]
 80173c0:	9306      	str	r3, [sp, #24]
 80173c2:	f7e9 ff9f 	bl	8001304 <_ZN8touchgfx5paint8tearDownEv>
 80173c6:	46ba      	mov	sl, r7
 80173c8:	e58a      	b.n	8016ee0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 80173ca:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 80173ce:	9b02      	ldr	r3, [sp, #8]
 80173d0:	eba9 0903 	sub.w	r9, r9, r3
 80173d4:	eba9 0505 	sub.w	r5, r9, r5
 80173d8:	fa1f f985 	uxth.w	r9, r5
 80173dc:	e7f1      	b.n	80173c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 80173de:	4b0f      	ldr	r3, [pc, #60]	@ (801741c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 80173e0:	6818      	ldr	r0, [r3, #0]
 80173e2:	6803      	ldr	r3, [r0, #0]
 80173e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80173e6:	4798      	blx	r3
 80173e8:	b013      	add	sp, #76	@ 0x4c
 80173ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173ee:	9b02      	ldr	r3, [sp, #8]
 80173f0:	9a02      	ldr	r2, [sp, #8]
 80173f2:	42ab      	cmp	r3, r5
 80173f4:	bfa8      	it	ge
 80173f6:	462b      	movge	r3, r5
 80173f8:	eba2 0803 	sub.w	r8, r2, r3
 80173fc:	1aed      	subs	r5, r5, r3
 80173fe:	e626      	b.n	801704e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 8017400:	f108 38ff 	add.w	r8, r8, #4294967295
 8017404:	fa1f f986 	uxth.w	r9, r6
 8017408:	2500      	movs	r5, #0
 801740a:	2701      	movs	r7, #1
 801740c:	e76f      	b.n	80172ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801740e:	bf00      	nop
 8017410:	20000280 	.word	0x20000280
 8017414:	20000380 	.word	0x20000380
 8017418:	20014038 	.word	0x20014038
 801741c:	20014040 	.word	0x20014040

08017420 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8017420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017424:	b08f      	sub	sp, #60	@ 0x3c
 8017426:	461c      	mov	r4, r3
 8017428:	9203      	str	r2, [sp, #12]
 801742a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801742e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017430:	9202      	str	r2, [sp, #8]
 8017432:	460f      	mov	r7, r1
 8017434:	2a00      	cmp	r2, #0
 8017436:	f000 8128 	beq.w	801768a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801743a:	6820      	ldr	r0, [r4, #0]
 801743c:	6861      	ldr	r1, [r4, #4]
 801743e:	aa0a      	add	r2, sp, #40	@ 0x28
 8017440:	c203      	stmia	r2!, {r0, r1}
 8017442:	6818      	ldr	r0, [r3, #0]
 8017444:	6859      	ldr	r1, [r3, #4]
 8017446:	aa0c      	add	r2, sp, #48	@ 0x30
 8017448:	c203      	stmia	r2!, {r0, r1}
 801744a:	a80a      	add	r0, sp, #40	@ 0x28
 801744c:	f7f8 fbe0 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017450:	4621      	mov	r1, r4
 8017452:	a80c      	add	r0, sp, #48	@ 0x30
 8017454:	f7f8 fc04 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017458:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801745c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8017460:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8017464:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8017468:	bfde      	ittt	le
 801746a:	b2b3      	uxthle	r3, r6
 801746c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8017470:	fb92 f3f3 	sdivle	r3, r2, r3
 8017474:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017478:	bfc8      	it	gt
 801747a:	2301      	movgt	r3, #1
 801747c:	fb92 f1f3 	sdiv	r1, r2, r3
 8017480:	fa1f fc81 	uxth.w	ip, r1
 8017484:	fb0c 2413 	mls	r4, ip, r3, r2
 8017488:	fb14 f406 	smulbb	r4, r4, r6
 801748c:	441d      	add	r5, r3
 801748e:	4404      	add	r4, r0
 8017490:	4661      	mov	r1, ip
 8017492:	3d01      	subs	r5, #1
 8017494:	b2a4      	uxth	r4, r4
 8017496:	fb95 f5f3 	sdiv	r5, r5, r3
 801749a:	b121      	cbz	r1, 80174a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801749c:	9b03      	ldr	r3, [sp, #12]
 801749e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80174a2:	ba1b      	rev	r3, r3
 80174a4:	441f      	add	r7, r3
 80174a6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80174aa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80174ae:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80174b2:	4418      	add	r0, r3
 80174b4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80174b8:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80174bc:	441a      	add	r2, r3
 80174be:	4b74      	ldr	r3, [pc, #464]	@ (8017690 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80174c0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80174c4:	6818      	ldr	r0, [r3, #0]
 80174c6:	6803      	ldr	r3, [r0, #0]
 80174c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80174ca:	4798      	blx	r3
 80174cc:	4a71      	ldr	r2, [pc, #452]	@ (8017694 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80174ce:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80174d2:	8813      	ldrh	r3, [r2, #0]
 80174d4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80174d8:	9209      	str	r2, [sp, #36]	@ 0x24
 80174da:	fb03 c101 	mla	r1, r3, r1, ip
 80174de:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80174e2:	4373      	muls	r3, r6
 80174e4:	b2ad      	uxth	r5, r5
 80174e6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80174ea:	00ad      	lsls	r5, r5, #2
 80174ec:	2c00      	cmp	r4, #0
 80174ee:	9304      	str	r3, [sp, #16]
 80174f0:	f105 0304 	add.w	r3, r5, #4
 80174f4:	9305      	str	r3, [sp, #20]
 80174f6:	bf0c      	ite	eq
 80174f8:	46c8      	moveq	r8, r9
 80174fa:	f04f 0800 	movne.w	r8, #0
 80174fe:	2300      	movs	r3, #0
 8017500:	fa1f f888 	uxth.w	r8, r8
 8017504:	9301      	str	r3, [sp, #4]
 8017506:	9a04      	ldr	r2, [sp, #16]
 8017508:	4282      	cmp	r2, r0
 801750a:	f240 80b9 	bls.w	8017680 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801750e:	b95b      	cbnz	r3, 8017528 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8017510:	783a      	ldrb	r2, [r7, #0]
 8017512:	0993      	lsrs	r3, r2, #6
 8017514:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017518:	9201      	str	r2, [sp, #4]
 801751a:	1e5a      	subs	r2, r3, #1
 801751c:	2a02      	cmp	r2, #2
 801751e:	bf8d      	iteet	hi
 8017520:	787b      	ldrbhi	r3, [r7, #1]
 8017522:	3701      	addls	r7, #1
 8017524:	b29b      	uxthls	r3, r3
 8017526:	3702      	addhi	r7, #2
 8017528:	b184      	cbz	r4, 801754c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801752a:	429c      	cmp	r4, r3
 801752c:	bf95      	itete	ls
 801752e:	1b1c      	subls	r4, r3, r4
 8017530:	1ae4      	subhi	r4, r4, r3
 8017532:	fa1f fa84 	uxthls.w	sl, r4
 8017536:	b2a4      	uxthhi	r4, r4
 8017538:	bf87      	ittee	hi
 801753a:	46c4      	movhi	ip, r8
 801753c:	f04f 0a00 	movhi.w	sl, #0
 8017540:	fa1f fc89 	uxthls.w	ip, r9
 8017544:	2400      	movls	r4, #0
 8017546:	4653      	mov	r3, sl
 8017548:	46e0      	mov	r8, ip
 801754a:	e7dc      	b.n	8017506 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801754c:	2204      	movs	r2, #4
 801754e:	4615      	mov	r5, r2
 8017550:	9905      	ldr	r1, [sp, #20]
 8017552:	9a01      	ldr	r2, [sp, #4]
 8017554:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017558:	9903      	ldr	r1, [sp, #12]
 801755a:	588a      	ldr	r2, [r1, r2]
 801755c:	4543      	cmp	r3, r8
 801755e:	bf27      	ittee	cs
 8017560:	eba3 0a08 	subcs.w	sl, r3, r8
 8017564:	46c6      	movcs	lr, r8
 8017566:	eba8 0c03 	subcc.w	ip, r8, r3
 801756a:	469e      	movcc	lr, r3
 801756c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8017570:	bf27      	ittee	cs
 8017572:	fa1f fa8a 	uxthcs.w	sl, sl
 8017576:	46a4      	movcs	ip, r4
 8017578:	fa1f fc8c 	uxthcc.w	ip, ip
 801757c:	46a2      	movcc	sl, r4
 801757e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8017582:	2900      	cmp	r1, #0
 8017584:	d066      	beq.n	8017654 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8017586:	29ff      	cmp	r1, #255	@ 0xff
 8017588:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801758c:	d114      	bne.n	80175b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801758e:	9d02      	ldr	r5, [sp, #8]
 8017590:	2dff      	cmp	r5, #255	@ 0xff
 8017592:	d111      	bne.n	80175b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8017594:	0951      	lsrs	r1, r2, #5
 8017596:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801759a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801759e:	f026 0607 	bic.w	r6, r6, #7
 80175a2:	430e      	orrs	r6, r1
 80175a4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80175a8:	4316      	orrs	r6, r2
 80175aa:	b2b6      	uxth	r6, r6
 80175ac:	4486      	add	lr, r0
 80175ae:	4586      	cmp	lr, r0
 80175b0:	d051      	beq.n	8017656 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80175b2:	f820 6b02 	strh.w	r6, [r0], #2
 80175b6:	e7fa      	b.n	80175ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80175b8:	9d02      	ldr	r5, [sp, #8]
 80175ba:	4369      	muls	r1, r5
 80175bc:	1c4d      	adds	r5, r1, #1
 80175be:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80175c2:	122d      	asrs	r5, r5, #8
 80175c4:	ea6f 0b05 	mvn.w	fp, r5
 80175c8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80175cc:	b2ad      	uxth	r5, r5
 80175ce:	b2f6      	uxtb	r6, r6
 80175d0:	b2d2      	uxtb	r2, r2
 80175d2:	fb11 f105 	smulbb	r1, r1, r5
 80175d6:	fb16 f605 	smulbb	r6, r6, r5
 80175da:	fb12 f205 	smulbb	r2, r2, r5
 80175de:	b289      	uxth	r1, r1
 80175e0:	b2b6      	uxth	r6, r6
 80175e2:	b292      	uxth	r2, r2
 80175e4:	9106      	str	r1, [sp, #24]
 80175e6:	9607      	str	r6, [sp, #28]
 80175e8:	9208      	str	r2, [sp, #32]
 80175ea:	4486      	add	lr, r0
 80175ec:	fa5f fb8b 	uxtb.w	fp, fp
 80175f0:	4586      	cmp	lr, r0
 80175f2:	d030      	beq.n	8017656 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80175f4:	8802      	ldrh	r2, [r0, #0]
 80175f6:	9906      	ldr	r1, [sp, #24]
 80175f8:	1216      	asrs	r6, r2, #8
 80175fa:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80175fe:	10d5      	asrs	r5, r2, #3
 8017600:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017604:	fb06 160b 	mla	r6, r6, fp, r1
 8017608:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801760c:	9907      	ldr	r1, [sp, #28]
 801760e:	00d2      	lsls	r2, r2, #3
 8017610:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017614:	fb05 150b 	mla	r5, r5, fp, r1
 8017618:	b2d2      	uxtb	r2, r2
 801761a:	9908      	ldr	r1, [sp, #32]
 801761c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017620:	b2b6      	uxth	r6, r6
 8017622:	fb02 120b 	mla	r2, r2, fp, r1
 8017626:	b292      	uxth	r2, r2
 8017628:	1c71      	adds	r1, r6, #1
 801762a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801762e:	1c51      	adds	r1, r2, #1
 8017630:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017634:	b2ad      	uxth	r5, r5
 8017636:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801763a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801763e:	4316      	orrs	r6, r2
 8017640:	1c6a      	adds	r2, r5, #1
 8017642:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017646:	096d      	lsrs	r5, r5, #5
 8017648:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801764c:	432e      	orrs	r6, r5
 801764e:	f820 6b02 	strh.w	r6, [r0], #2
 8017652:	e7cd      	b.n	80175f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8017654:	4470      	add	r0, lr
 8017656:	4543      	cmp	r3, r8
 8017658:	f4ff af75 	bcc.w	8017546 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801765c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8017660:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017662:	fa1f fc89 	uxth.w	ip, r9
 8017666:	eba4 040c 	sub.w	r4, r4, ip
 801766a:	881b      	ldrh	r3, [r3, #0]
 801766c:	b2a4      	uxth	r4, r4
 801766e:	2c00      	cmp	r4, #0
 8017670:	eba3 0309 	sub.w	r3, r3, r9
 8017674:	bf18      	it	ne
 8017676:	f04f 0c00 	movne.w	ip, #0
 801767a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801767e:	e762      	b.n	8017546 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8017680:	4b03      	ldr	r3, [pc, #12]	@ (8017690 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8017682:	6818      	ldr	r0, [r3, #0]
 8017684:	6803      	ldr	r3, [r0, #0]
 8017686:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017688:	4798      	blx	r3
 801768a:	b00f      	add	sp, #60	@ 0x3c
 801768c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017690:	20014040 	.word	0x20014040
 8017694:	20014038 	.word	0x20014038

08017698 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8017698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801769c:	b093      	sub	sp, #76	@ 0x4c
 801769e:	461c      	mov	r4, r3
 80176a0:	9205      	str	r2, [sp, #20]
 80176a2:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 80176a6:	9101      	str	r1, [sp, #4]
 80176a8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80176aa:	9202      	str	r2, [sp, #8]
 80176ac:	2a00      	cmp	r2, #0
 80176ae:	f000 812c 	beq.w	801790a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80176b2:	6820      	ldr	r0, [r4, #0]
 80176b4:	6861      	ldr	r1, [r4, #4]
 80176b6:	aa0e      	add	r2, sp, #56	@ 0x38
 80176b8:	c203      	stmia	r2!, {r0, r1}
 80176ba:	6818      	ldr	r0, [r3, #0]
 80176bc:	6859      	ldr	r1, [r3, #4]
 80176be:	aa10      	add	r2, sp, #64	@ 0x40
 80176c0:	c203      	stmia	r2!, {r0, r1}
 80176c2:	a80e      	add	r0, sp, #56	@ 0x38
 80176c4:	f7f8 faa4 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80176c8:	4621      	mov	r1, r4
 80176ca:	a810      	add	r0, sp, #64	@ 0x40
 80176cc:	f7f8 fac8 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80176d0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80176d4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80176d8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80176dc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80176e0:	bfde      	ittt	le
 80176e2:	b2b3      	uxthle	r3, r6
 80176e4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80176e8:	fb92 f3f3 	sdivle	r3, r2, r3
 80176ec:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80176f0:	bfc8      	it	gt
 80176f2:	2301      	movgt	r3, #1
 80176f4:	fb92 f1f3 	sdiv	r1, r2, r3
 80176f8:	fa1f fc81 	uxth.w	ip, r1
 80176fc:	fb0c 2413 	mls	r4, ip, r3, r2
 8017700:	fb14 f406 	smulbb	r4, r4, r6
 8017704:	441d      	add	r5, r3
 8017706:	4404      	add	r4, r0
 8017708:	4661      	mov	r1, ip
 801770a:	3d01      	subs	r5, #1
 801770c:	b2a4      	uxth	r4, r4
 801770e:	fb95 f5f3 	sdiv	r5, r5, r3
 8017712:	b131      	cbz	r1, 8017722 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8017714:	9b05      	ldr	r3, [sp, #20]
 8017716:	9901      	ldr	r1, [sp, #4]
 8017718:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801771c:	ba1b      	rev	r3, r3
 801771e:	4419      	add	r1, r3
 8017720:	9101      	str	r1, [sp, #4]
 8017722:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8017726:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801772a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801772e:	4418      	add	r0, r3
 8017730:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8017734:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8017738:	441a      	add	r2, r3
 801773a:	4b75      	ldr	r3, [pc, #468]	@ (8017910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801773c:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8017740:	6818      	ldr	r0, [r3, #0]
 8017742:	6803      	ldr	r3, [r0, #0]
 8017744:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017746:	4798      	blx	r3
 8017748:	4972      	ldr	r1, [pc, #456]	@ (8017914 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801774a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801774e:	880b      	ldrh	r3, [r1, #0]
 8017750:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8017754:	910d      	str	r1, [sp, #52]	@ 0x34
 8017756:	fb03 c202 	mla	r2, r3, r2, ip
 801775a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801775e:	4373      	muls	r3, r6
 8017760:	b2ad      	uxth	r5, r5
 8017762:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017766:	00ad      	lsls	r5, r5, #2
 8017768:	9308      	str	r3, [sp, #32]
 801776a:	1d2b      	adds	r3, r5, #4
 801776c:	9309      	str	r3, [sp, #36]	@ 0x24
 801776e:	9b02      	ldr	r3, [sp, #8]
 8017770:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017774:	9106      	str	r1, [sp, #24]
 8017776:	43da      	mvns	r2, r3
 8017778:	2c00      	cmp	r4, #0
 801777a:	bf0c      	ite	eq
 801777c:	46dc      	moveq	ip, fp
 801777e:	f04f 0c00 	movne.w	ip, #0
 8017782:	2300      	movs	r3, #0
 8017784:	b2d2      	uxtb	r2, r2
 8017786:	fa1f fc8c 	uxth.w	ip, ip
 801778a:	9303      	str	r3, [sp, #12]
 801778c:	9207      	str	r2, [sp, #28]
 801778e:	9a08      	ldr	r2, [sp, #32]
 8017790:	4282      	cmp	r2, r0
 8017792:	f240 80b5 	bls.w	8017900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8017796:	b963      	cbnz	r3, 80177b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8017798:	9b01      	ldr	r3, [sp, #4]
 801779a:	781a      	ldrb	r2, [r3, #0]
 801779c:	0993      	lsrs	r3, r2, #6
 801779e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80177a2:	9203      	str	r2, [sp, #12]
 80177a4:	1e5a      	subs	r2, r3, #1
 80177a6:	2a02      	cmp	r2, #2
 80177a8:	d815      	bhi.n	80177d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 80177aa:	9a01      	ldr	r2, [sp, #4]
 80177ac:	3201      	adds	r2, #1
 80177ae:	9201      	str	r2, [sp, #4]
 80177b0:	b29b      	uxth	r3, r3
 80177b2:	b1b4      	cbz	r4, 80177e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 80177b4:	429c      	cmp	r4, r3
 80177b6:	bf95      	itete	ls
 80177b8:	1b1c      	subls	r4, r3, r4
 80177ba:	1ae4      	subhi	r4, r4, r3
 80177bc:	fa1f f884 	uxthls.w	r8, r4
 80177c0:	b2a4      	uxthhi	r4, r4
 80177c2:	bf87      	ittee	hi
 80177c4:	4666      	movhi	r6, ip
 80177c6:	f04f 0800 	movhi.w	r8, #0
 80177ca:	fa1f f68b 	uxthls.w	r6, fp
 80177ce:	2400      	movls	r4, #0
 80177d0:	4643      	mov	r3, r8
 80177d2:	46b4      	mov	ip, r6
 80177d4:	e7db      	b.n	801778e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 80177d6:	9a01      	ldr	r2, [sp, #4]
 80177d8:	9b01      	ldr	r3, [sp, #4]
 80177da:	3202      	adds	r2, #2
 80177dc:	785b      	ldrb	r3, [r3, #1]
 80177de:	9201      	str	r2, [sp, #4]
 80177e0:	e7e7      	b.n	80177b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80177e2:	2203      	movs	r2, #3
 80177e4:	4615      	mov	r5, r2
 80177e6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80177e8:	9a03      	ldr	r2, [sp, #12]
 80177ea:	fb15 1202 	smlabb	r2, r5, r2, r1
 80177ee:	9905      	ldr	r1, [sp, #20]
 80177f0:	4563      	cmp	r3, ip
 80177f2:	eb01 0502 	add.w	r5, r1, r2
 80177f6:	9902      	ldr	r1, [sp, #8]
 80177f8:	bf29      	itett	cs
 80177fa:	eba3 080c 	subcs.w	r8, r3, ip
 80177fe:	ebac 0603 	subcc.w	r6, ip, r3
 8017802:	fa1f f888 	uxthcs.w	r8, r8
 8017806:	46e1      	movcs	r9, ip
 8017808:	bf2f      	iteee	cs
 801780a:	4626      	movcs	r6, r4
 801780c:	b2b6      	uxthcc	r6, r6
 801780e:	4699      	movcc	r9, r3
 8017810:	46a0      	movcc	r8, r4
 8017812:	29ff      	cmp	r1, #255	@ 0xff
 8017814:	d04a      	beq.n	80178ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8017816:	9f06      	ldr	r7, [sp, #24]
 8017818:	78a9      	ldrb	r1, [r5, #2]
 801781a:	9004      	str	r0, [sp, #16]
 801781c:	4379      	muls	r1, r7
 801781e:	910a      	str	r1, [sp, #40]	@ 0x28
 8017820:	7869      	ldrb	r1, [r5, #1]
 8017822:	4379      	muls	r1, r7
 8017824:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017826:	9905      	ldr	r1, [sp, #20]
 8017828:	5c8a      	ldrb	r2, [r1, r2]
 801782a:	437a      	muls	r2, r7
 801782c:	920c      	str	r2, [sp, #48]	@ 0x30
 801782e:	46ca      	mov	sl, r9
 8017830:	f1ba 0f00 	cmp.w	sl, #0
 8017834:	d03d      	beq.n	80178b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8017836:	9a04      	ldr	r2, [sp, #16]
 8017838:	9f07      	ldr	r7, [sp, #28]
 801783a:	8812      	ldrh	r2, [r2, #0]
 801783c:	1215      	asrs	r5, r2, #8
 801783e:	46be      	mov	lr, r7
 8017840:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017844:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8017846:	10d1      	asrs	r1, r2, #3
 8017848:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801784c:	fb05 750e 	mla	r5, r5, lr, r7
 8017850:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017854:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8017856:	00d2      	lsls	r2, r2, #3
 8017858:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801785c:	fb01 710e 	mla	r1, r1, lr, r7
 8017860:	b2d2      	uxtb	r2, r2
 8017862:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8017864:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017868:	b2ad      	uxth	r5, r5
 801786a:	fb02 720e 	mla	r2, r2, lr, r7
 801786e:	b292      	uxth	r2, r2
 8017870:	f105 0e01 	add.w	lr, r5, #1
 8017874:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8017878:	f102 0e01 	add.w	lr, r2, #1
 801787c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8017880:	b289      	uxth	r1, r1
 8017882:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017886:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801788a:	4315      	orrs	r5, r2
 801788c:	1c4a      	adds	r2, r1, #1
 801788e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017892:	0949      	lsrs	r1, r1, #5
 8017894:	9a04      	ldr	r2, [sp, #16]
 8017896:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801789a:	430d      	orrs	r5, r1
 801789c:	f822 5b02 	strh.w	r5, [r2], #2
 80178a0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80178a4:	9204      	str	r2, [sp, #16]
 80178a6:	fa1f fa8a 	uxth.w	sl, sl
 80178aa:	e7c1      	b.n	8017830 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 80178ac:	4649      	mov	r1, r9
 80178ae:	4686      	mov	lr, r0
 80178b0:	b999      	cbnz	r1, 80178da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80178b2:	4563      	cmp	r3, ip
 80178b4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 80178b8:	d38a      	bcc.n	80177d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80178ba:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 80178be:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80178c0:	fa1f f68b 	uxth.w	r6, fp
 80178c4:	1ba4      	subs	r4, r4, r6
 80178c6:	881b      	ldrh	r3, [r3, #0]
 80178c8:	b2a4      	uxth	r4, r4
 80178ca:	2c00      	cmp	r4, #0
 80178cc:	eba3 030b 	sub.w	r3, r3, fp
 80178d0:	bf18      	it	ne
 80178d2:	2600      	movne	r6, #0
 80178d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80178d8:	e77a      	b.n	80177d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80178da:	78aa      	ldrb	r2, [r5, #2]
 80178dc:	4f0e      	ldr	r7, [pc, #56]	@ (8017918 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80178de:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80178e2:	786a      	ldrb	r2, [r5, #1]
 80178e4:	00d2      	lsls	r2, r2, #3
 80178e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80178ea:	ea4a 0202 	orr.w	r2, sl, r2
 80178ee:	f895 a000 	ldrb.w	sl, [r5]
 80178f2:	3901      	subs	r1, #1
 80178f4:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80178f8:	f82e 2b02 	strh.w	r2, [lr], #2
 80178fc:	b289      	uxth	r1, r1
 80178fe:	e7d7      	b.n	80178b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8017900:	4b03      	ldr	r3, [pc, #12]	@ (8017910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8017902:	6818      	ldr	r0, [r3, #0]
 8017904:	6803      	ldr	r3, [r0, #0]
 8017906:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017908:	4798      	blx	r3
 801790a:	b013      	add	sp, #76	@ 0x4c
 801790c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017910:	20014040 	.word	0x20014040
 8017914:	20014038 	.word	0x20014038
 8017918:	fffff800 	.word	0xfffff800

0801791c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801791c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017920:	b09d      	sub	sp, #116	@ 0x74
 8017922:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8017926:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801792a:	920e      	str	r2, [sp, #56]	@ 0x38
 801792c:	461c      	mov	r4, r3
 801792e:	4683      	mov	fp, r0
 8017930:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8017932:	2a00      	cmp	r2, #0
 8017934:	f000 81e0 	beq.w	8017cf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8017938:	6820      	ldr	r0, [r4, #0]
 801793a:	6861      	ldr	r1, [r4, #4]
 801793c:	aa18      	add	r2, sp, #96	@ 0x60
 801793e:	c203      	stmia	r2!, {r0, r1}
 8017940:	6818      	ldr	r0, [r3, #0]
 8017942:	6859      	ldr	r1, [r3, #4]
 8017944:	aa1a      	add	r2, sp, #104	@ 0x68
 8017946:	c203      	stmia	r2!, {r0, r1}
 8017948:	a818      	add	r0, sp, #96	@ 0x60
 801794a:	f7f8 f961 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801794e:	4621      	mov	r1, r4
 8017950:	a81a      	add	r0, sp, #104	@ 0x68
 8017952:	f7f8 f985 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017956:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801795a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801795e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017962:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017966:	bfd7      	itett	le
 8017968:	b29a      	uxthle	r2, r3
 801796a:	2201      	movgt	r2, #1
 801796c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017970:	fb91 f2f2 	sdivle	r2, r1, r2
 8017974:	9202      	str	r2, [sp, #8]
 8017976:	9802      	ldr	r0, [sp, #8]
 8017978:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801797c:	fb92 f0f0 	sdiv	r0, r2, r0
 8017980:	b280      	uxth	r0, r0
 8017982:	900f      	str	r0, [sp, #60]	@ 0x3c
 8017984:	9902      	ldr	r1, [sp, #8]
 8017986:	9802      	ldr	r0, [sp, #8]
 8017988:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801798a:	440c      	add	r4, r1
 801798c:	fb05 2510 	mls	r5, r5, r0, r2
 8017990:	fb15 f503 	smulbb	r5, r5, r3
 8017994:	3c01      	subs	r4, #1
 8017996:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801799a:	fb94 f4f1 	sdiv	r4, r4, r1
 801799e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 80179a2:	440d      	add	r5, r1
 80179a4:	4419      	add	r1, r3
 80179a6:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 80179aa:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 80179ae:	441a      	add	r2, r3
 80179b0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80179b4:	9306      	str	r3, [sp, #24]
 80179b6:	4bb3      	ldr	r3, [pc, #716]	@ (8017c84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 80179b8:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 80179bc:	6818      	ldr	r0, [r3, #0]
 80179be:	6803      	ldr	r3, [r0, #0]
 80179c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80179c2:	4798      	blx	r3
 80179c4:	4bb0      	ldr	r3, [pc, #704]	@ (8017c88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 80179c6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 80179ca:	881a      	ldrh	r2, [r3, #0]
 80179cc:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 80179d0:	9316      	str	r3, [sp, #88]	@ 0x58
 80179d2:	fb02 7101 	mla	r1, r2, r1, r7
 80179d6:	3401      	adds	r4, #1
 80179d8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 80179dc:	b2a4      	uxth	r4, r4
 80179de:	4356      	muls	r6, r2
 80179e0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 80179e4:	00a4      	lsls	r4, r4, #2
 80179e6:	920a      	str	r2, [sp, #40]	@ 0x28
 80179e8:	1d22      	adds	r2, r4, #4
 80179ea:	b2ad      	uxth	r5, r5
 80179ec:	9213      	str	r2, [sp, #76]	@ 0x4c
 80179ee:	4ba7      	ldr	r3, [pc, #668]	@ (8017c8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 80179f0:	9a06      	ldr	r2, [sp, #24]
 80179f2:	2d00      	cmp	r5, #0
 80179f4:	bf0c      	ite	eq
 80179f6:	4611      	moveq	r1, r2
 80179f8:	2100      	movne	r1, #0
 80179fa:	2200      	movs	r2, #0
 80179fc:	eba3 030b 	sub.w	r3, r3, fp
 8017a00:	b289      	uxth	r1, r1
 8017a02:	920d      	str	r2, [sp, #52]	@ 0x34
 8017a04:	9317      	str	r3, [sp, #92]	@ 0x5c
 8017a06:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017a08:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017a0a:	fa12 f383 	uxtah	r3, r2, r3
 8017a0e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017a10:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017a14:	3304      	adds	r3, #4
 8017a16:	9308      	str	r3, [sp, #32]
 8017a18:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017a1a:	4543      	cmp	r3, r8
 8017a1c:	f240 8167 	bls.w	8017cee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8017a20:	9a02      	ldr	r2, [sp, #8]
 8017a22:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8017a26:	fbb5 f3f3 	udiv	r3, r5, r3
 8017a2a:	1ad3      	subs	r3, r2, r3
 8017a2c:	b29b      	uxth	r3, r3
 8017a2e:	9314      	str	r3, [sp, #80]	@ 0x50
 8017a30:	9b08      	ldr	r3, [sp, #32]
 8017a32:	9808      	ldr	r0, [sp, #32]
 8017a34:	785a      	ldrb	r2, [r3, #1]
 8017a36:	789b      	ldrb	r3, [r3, #2]
 8017a38:	7800      	ldrb	r0, [r0, #0]
 8017a3a:	9010      	str	r0, [sp, #64]	@ 0x40
 8017a3c:	021b      	lsls	r3, r3, #8
 8017a3e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017a42:	9a08      	ldr	r2, [sp, #32]
 8017a44:	78d2      	ldrb	r2, [r2, #3]
 8017a46:	4313      	orrs	r3, r2
 8017a48:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017a4a:	3001      	adds	r0, #1
 8017a4c:	441a      	add	r2, r3
 8017a4e:	9007      	str	r0, [sp, #28]
 8017a50:	1c50      	adds	r0, r2, #1
 8017a52:	9005      	str	r0, [sp, #20]
 8017a54:	7852      	ldrb	r2, [r2, #1]
 8017a56:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017a58:	0212      	lsls	r2, r2, #8
 8017a5a:	5cc3      	ldrb	r3, [r0, r3]
 8017a5c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017a60:	431a      	orrs	r2, r3
 8017a62:	b293      	uxth	r3, r2
 8017a64:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017a66:	2300      	movs	r3, #0
 8017a68:	9309      	str	r3, [sp, #36]	@ 0x24
 8017a6a:	2301      	movs	r3, #1
 8017a6c:	9301      	str	r3, [sp, #4]
 8017a6e:	9304      	str	r3, [sp, #16]
 8017a70:	2300      	movs	r3, #0
 8017a72:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8017a76:	9303      	str	r3, [sp, #12]
 8017a78:	f04f 0e01 	mov.w	lr, #1
 8017a7c:	2d00      	cmp	r5, #0
 8017a7e:	d07c      	beq.n	8017b7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8017a80:	45ae      	cmp	lr, r5
 8017a82:	d26b      	bcs.n	8017b5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8017a84:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017a86:	eba5 050e 	sub.w	r5, r5, lr
 8017a8a:	4543      	cmp	r3, r8
 8017a8c:	b2ad      	uxth	r5, r5
 8017a8e:	460c      	mov	r4, r1
 8017a90:	d802      	bhi.n	8017a98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8017a92:	e070      	b.n	8017b76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8017a94:	2b00      	cmp	r3, #0
 8017a96:	d15c      	bne.n	8017b52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017a98:	9b05      	ldr	r3, [sp, #20]
 8017a9a:	9a04      	ldr	r2, [sp, #16]
 8017a9c:	785b      	ldrb	r3, [r3, #1]
 8017a9e:	9904      	ldr	r1, [sp, #16]
 8017aa0:	f1c2 0207 	rsb	r2, r2, #7
 8017aa4:	4093      	lsls	r3, r2
 8017aa6:	005b      	lsls	r3, r3, #1
 8017aa8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017aac:	9b05      	ldr	r3, [sp, #20]
 8017aae:	781b      	ldrb	r3, [r3, #0]
 8017ab0:	410b      	asrs	r3, r1
 8017ab2:	3101      	adds	r1, #1
 8017ab4:	b2c9      	uxtb	r1, r1
 8017ab6:	2908      	cmp	r1, #8
 8017ab8:	9104      	str	r1, [sp, #16]
 8017aba:	9905      	ldr	r1, [sp, #20]
 8017abc:	bf0a      	itet	eq
 8017abe:	3102      	addeq	r1, #2
 8017ac0:	3101      	addne	r1, #1
 8017ac2:	9105      	streq	r1, [sp, #20]
 8017ac4:	b2db      	uxtb	r3, r3
 8017ac6:	bf0a      	itet	eq
 8017ac8:	2100      	moveq	r1, #0
 8017aca:	9105      	strne	r1, [sp, #20]
 8017acc:	9104      	streq	r1, [sp, #16]
 8017ace:	4313      	orrs	r3, r2
 8017ad0:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8017ad2:	b29a      	uxth	r2, r3
 8017ad4:	4291      	cmp	r1, r2
 8017ad6:	d30a      	bcc.n	8017aee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8017ad8:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8017adc:	2301      	movs	r3, #1
 8017ade:	9907      	ldr	r1, [sp, #28]
 8017ae0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017ae4:	d30f      	bcc.n	8017b06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8017ae6:	2100      	movs	r1, #0
 8017ae8:	9301      	str	r3, [sp, #4]
 8017aea:	9103      	str	r1, [sp, #12]
 8017aec:	e032      	b.n	8017b54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8017aee:	9b07      	ldr	r3, [sp, #28]
 8017af0:	429a      	cmp	r2, r3
 8017af2:	d318      	bcc.n	8017b26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8017af4:	9b01      	ldr	r3, [sp, #4]
 8017af6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8017afa:	445b      	add	r3, fp
 8017afc:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8017b00:	9b01      	ldr	r3, [sp, #4]
 8017b02:	3301      	adds	r3, #1
 8017b04:	b29b      	uxth	r3, r3
 8017b06:	9907      	ldr	r1, [sp, #28]
 8017b08:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8017b0c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017b10:	7108      	strb	r0, [r1, #4]
 8017b12:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8017b14:	80c8      	strh	r0, [r1, #6]
 8017b16:	9801      	ldr	r0, [sp, #4]
 8017b18:	3001      	adds	r0, #1
 8017b1a:	7148      	strb	r0, [r1, #5]
 8017b1c:	9907      	ldr	r1, [sp, #28]
 8017b1e:	3101      	adds	r1, #1
 8017b20:	b289      	uxth	r1, r1
 8017b22:	9107      	str	r1, [sp, #28]
 8017b24:	e7df      	b.n	8017ae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8017b26:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8017b2a:	4611      	mov	r1, r2
 8017b2c:	795b      	ldrb	r3, [r3, #5]
 8017b2e:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8017b32:	4458      	add	r0, fp
 8017b34:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8017b36:	4406      	add	r6, r0
 8017b38:	2e00      	cmp	r6, #0
 8017b3a:	dd06      	ble.n	8017b4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8017b3c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017b40:	790e      	ldrb	r6, [r1, #4]
 8017b42:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8017b46:	88c9      	ldrh	r1, [r1, #6]
 8017b48:	e7f4      	b.n	8017b34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8017b4a:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8017b4e:	b29b      	uxth	r3, r3
 8017b50:	e7c5      	b.n	8017ade <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8017b52:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017b54:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017b56:	4621      	mov	r1, r4
 8017b58:	469e      	mov	lr, r3
 8017b5a:	e78f      	b.n	8017a7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8017b5c:	9a03      	ldr	r2, [sp, #12]
 8017b5e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017b62:	442a      	add	r2, r5
 8017b64:	ebae 0305 	sub.w	r3, lr, r5
 8017b68:	b292      	uxth	r2, r2
 8017b6a:	b29b      	uxth	r3, r3
 8017b6c:	9203      	str	r2, [sp, #12]
 8017b6e:	2500      	movs	r5, #0
 8017b70:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017b72:	4542      	cmp	r2, r8
 8017b74:	d88e      	bhi.n	8017a94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8017b76:	4621      	mov	r1, r4
 8017b78:	e74e      	b.n	8017a18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8017b7a:	458e      	cmp	lr, r1
 8017b7c:	bf29      	itett	cs
 8017b7e:	ebae 0301 	subcs.w	r3, lr, r1
 8017b82:	eba1 040e 	subcc.w	r4, r1, lr
 8017b86:	b29b      	uxthcs	r3, r3
 8017b88:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8017b8a:	bf2f      	iteee	cs
 8017b8c:	462c      	movcs	r4, r5
 8017b8e:	b2a4      	uxthcc	r4, r4
 8017b90:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8017b94:	462b      	movcc	r3, r5
 8017b96:	f04f 0900 	mov.w	r9, #0
 8017b9a:	9a03      	ldr	r2, [sp, #12]
 8017b9c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8017b9e:	444a      	add	r2, r9
 8017ba0:	4548      	cmp	r0, r9
 8017ba2:	b292      	uxth	r2, r2
 8017ba4:	d074      	beq.n	8017c90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8017ba6:	445a      	add	r2, fp
 8017ba8:	2004      	movs	r0, #4
 8017baa:	4605      	mov	r5, r0
 8017bac:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8017bb0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017bb2:	fb15 0202 	smlabb	r2, r5, r2, r0
 8017bb6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017bb8:	5880      	ldr	r0, [r0, r2]
 8017bba:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8017bbe:	d014      	beq.n	8017bea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8017bc0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017bc4:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8017bc8:	d112      	bne.n	8017bf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8017bca:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017bcc:	2aff      	cmp	r2, #255	@ 0xff
 8017bce:	d10f      	bne.n	8017bf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8017bd0:	0942      	lsrs	r2, r0, #5
 8017bd2:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8017bd6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017bda:	f025 0507 	bic.w	r5, r5, #7
 8017bde:	4315      	orrs	r5, r2
 8017be0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017be4:	4305      	orrs	r5, r0
 8017be6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8017bea:	f109 0901 	add.w	r9, r9, #1
 8017bee:	e7d4      	b.n	8017b9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8017bf0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8017bf4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017bf8:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8017bfc:	9215      	str	r2, [sp, #84]	@ 0x54
 8017bfe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017c00:	fb02 fa0a 	mul.w	sl, r2, sl
 8017c04:	f10a 0201 	add.w	r2, sl, #1
 8017c08:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8017c0c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017c10:	1212      	asrs	r2, r2, #8
 8017c12:	fa1f fa82 	uxth.w	sl, r2
 8017c16:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8017c1a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017c1e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017c22:	43d2      	mvns	r2, r2
 8017c24:	b2d2      	uxtb	r2, r2
 8017c26:	fb16 f60a 	smulbb	r6, r6, sl
 8017c2a:	fa5f fc8c 	uxtb.w	ip, ip
 8017c2e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017c32:	b2c0      	uxtb	r0, r0
 8017c34:	fb07 6702 	mla	r7, r7, r2, r6
 8017c38:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8017c3c:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8017c3e:	fb10 f00a 	smulbb	r0, r0, sl
 8017c42:	fb0c 0002 	mla	r0, ip, r2, r0
 8017c46:	b2ed      	uxtb	r5, r5
 8017c48:	b2bf      	uxth	r7, r7
 8017c4a:	fb15 f50a 	smulbb	r5, r5, sl
 8017c4e:	b280      	uxth	r0, r0
 8017c50:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017c54:	fb06 5602 	mla	r6, r6, r2, r5
 8017c58:	1c7a      	adds	r2, r7, #1
 8017c5a:	1c45      	adds	r5, r0, #1
 8017c5c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017c60:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017c64:	b2b6      	uxth	r6, r6
 8017c66:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017c6a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017c6e:	432f      	orrs	r7, r5
 8017c70:	1c75      	adds	r5, r6, #1
 8017c72:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017c76:	096d      	lsrs	r5, r5, #5
 8017c78:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017c7c:	432f      	orrs	r7, r5
 8017c7e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8017c82:	e7b2      	b.n	8017bea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8017c84:	20014040 	.word	0x20014040
 8017c88:	20014038 	.word	0x20014038
 8017c8c:	fffff7fb 	.word	0xfffff7fb
 8017c90:	9203      	str	r2, [sp, #12]
 8017c92:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017c94:	458e      	cmp	lr, r1
 8017c96:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017c9a:	f4ff af68 	bcc.w	8017b6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8017c9e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8017ca0:	9906      	ldr	r1, [sp, #24]
 8017ca2:	8812      	ldrh	r2, [r2, #0]
 8017ca4:	1a52      	subs	r2, r2, r1
 8017ca6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017caa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017cac:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8017cae:	3201      	adds	r2, #1
 8017cb0:	428a      	cmp	r2, r1
 8017cb2:	9209      	str	r2, [sp, #36]	@ 0x24
 8017cb4:	d111      	bne.n	8017cda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8017cb6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8017cba:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8017cbe:	9b06      	ldr	r3, [sp, #24]
 8017cc0:	eba5 0509 	sub.w	r5, r5, r9
 8017cc4:	b2ad      	uxth	r5, r5
 8017cc6:	2d00      	cmp	r5, #0
 8017cc8:	bf08      	it	eq
 8017cca:	4619      	moveq	r1, r3
 8017ccc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017cce:	bf18      	it	ne
 8017cd0:	2100      	movne	r1, #0
 8017cd2:	3301      	adds	r3, #1
 8017cd4:	930d      	str	r3, [sp, #52]	@ 0x34
 8017cd6:	b289      	uxth	r1, r1
 8017cd8:	e695      	b.n	8017a06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8017cda:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017cde:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8017ce2:	1b2d      	subs	r5, r5, r4
 8017ce4:	b2ad      	uxth	r5, r5
 8017ce6:	2d00      	cmp	r5, #0
 8017ce8:	bf18      	it	ne
 8017cea:	2400      	movne	r4, #0
 8017cec:	e740      	b.n	8017b70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8017cee:	4b04      	ldr	r3, [pc, #16]	@ (8017d00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8017cf0:	6818      	ldr	r0, [r3, #0]
 8017cf2:	6803      	ldr	r3, [r0, #0]
 8017cf4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017cf6:	4798      	blx	r3
 8017cf8:	b01d      	add	sp, #116	@ 0x74
 8017cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cfe:	bf00      	nop
 8017d00:	20014040 	.word	0x20014040

08017d04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8017d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d08:	b09f      	sub	sp, #124	@ 0x7c
 8017d0a:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8017d0e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8017d12:	920a      	str	r2, [sp, #40]	@ 0x28
 8017d14:	461d      	mov	r5, r3
 8017d16:	4604      	mov	r4, r0
 8017d18:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017d1a:	2a00      	cmp	r2, #0
 8017d1c:	f000 81fa 	beq.w	8018114 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8017d20:	6828      	ldr	r0, [r5, #0]
 8017d22:	6869      	ldr	r1, [r5, #4]
 8017d24:	aa1a      	add	r2, sp, #104	@ 0x68
 8017d26:	c203      	stmia	r2!, {r0, r1}
 8017d28:	6818      	ldr	r0, [r3, #0]
 8017d2a:	6859      	ldr	r1, [r3, #4]
 8017d2c:	aa1c      	add	r2, sp, #112	@ 0x70
 8017d2e:	c203      	stmia	r2!, {r0, r1}
 8017d30:	a81a      	add	r0, sp, #104	@ 0x68
 8017d32:	f7f7 ff6d 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d36:	4629      	mov	r1, r5
 8017d38:	a81c      	add	r0, sp, #112	@ 0x70
 8017d3a:	f7f7 ff91 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d3e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017d42:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017d46:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8017d4a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017d4e:	bfd7      	itett	le
 8017d50:	b29a      	uxthle	r2, r3
 8017d52:	2201      	movgt	r2, #1
 8017d54:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017d58:	fb91 f2f2 	sdivle	r2, r1, r2
 8017d5c:	9201      	str	r2, [sp, #4]
 8017d5e:	9801      	ldr	r0, [sp, #4]
 8017d60:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8017d64:	fb92 f0f0 	sdiv	r0, r2, r0
 8017d68:	b280      	uxth	r0, r0
 8017d6a:	9010      	str	r0, [sp, #64]	@ 0x40
 8017d6c:	9901      	ldr	r1, [sp, #4]
 8017d6e:	9801      	ldr	r0, [sp, #4]
 8017d70:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8017d72:	440e      	add	r6, r1
 8017d74:	fb05 2510 	mls	r5, r5, r0, r2
 8017d78:	fb15 f503 	smulbb	r5, r5, r3
 8017d7c:	3e01      	subs	r6, #1
 8017d7e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8017d82:	fb96 f6f1 	sdiv	r6, r6, r1
 8017d86:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8017d8a:	440d      	add	r5, r1
 8017d8c:	4419      	add	r1, r3
 8017d8e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8017d92:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017d96:	441a      	add	r2, r3
 8017d98:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017d9c:	9304      	str	r3, [sp, #16]
 8017d9e:	4b96      	ldr	r3, [pc, #600]	@ (8017ff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8017da0:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8017da4:	6818      	ldr	r0, [r3, #0]
 8017da6:	6803      	ldr	r3, [r0, #0]
 8017da8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017daa:	4798      	blx	r3
 8017dac:	4b93      	ldr	r3, [pc, #588]	@ (8017ffc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8017dae:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8017db2:	881a      	ldrh	r2, [r3, #0]
 8017db4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8017db8:	9318      	str	r3, [sp, #96]	@ 0x60
 8017dba:	fb02 c101 	mla	r1, r2, r1, ip
 8017dbe:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8017dc2:	4357      	muls	r7, r2
 8017dc4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8017dc8:	3601      	adds	r6, #1
 8017dca:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017dcc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017dce:	4b8c      	ldr	r3, [pc, #560]	@ (8018000 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8017dd0:	b2b6      	uxth	r6, r6
 8017dd2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8017dd6:	1d32      	adds	r2, r6, #4
 8017dd8:	9206      	str	r2, [sp, #24]
 8017dda:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017ddc:	43d2      	mvns	r2, r2
 8017dde:	b2d2      	uxtb	r2, r2
 8017de0:	b2ad      	uxth	r5, r5
 8017de2:	9215      	str	r2, [sp, #84]	@ 0x54
 8017de4:	9a04      	ldr	r2, [sp, #16]
 8017de6:	2d00      	cmp	r5, #0
 8017de8:	bf0c      	ite	eq
 8017dea:	4611      	moveq	r1, r2
 8017dec:	2100      	movne	r1, #0
 8017dee:	2200      	movs	r2, #0
 8017df0:	1b1b      	subs	r3, r3, r4
 8017df2:	b289      	uxth	r1, r1
 8017df4:	920d      	str	r2, [sp, #52]	@ 0x34
 8017df6:	9319      	str	r3, [sp, #100]	@ 0x64
 8017df8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017dfa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017dfc:	fa12 f383 	uxtah	r3, r2, r3
 8017e00:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017e02:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017e06:	3304      	adds	r3, #4
 8017e08:	9307      	str	r3, [sp, #28]
 8017e0a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017e0c:	455b      	cmp	r3, fp
 8017e0e:	f240 817c 	bls.w	801810a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8017e12:	9a01      	ldr	r2, [sp, #4]
 8017e14:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8017e18:	fbb5 f3f3 	udiv	r3, r5, r3
 8017e1c:	1ad3      	subs	r3, r2, r3
 8017e1e:	b29b      	uxth	r3, r3
 8017e20:	9316      	str	r3, [sp, #88]	@ 0x58
 8017e22:	9b07      	ldr	r3, [sp, #28]
 8017e24:	9807      	ldr	r0, [sp, #28]
 8017e26:	785a      	ldrb	r2, [r3, #1]
 8017e28:	789b      	ldrb	r3, [r3, #2]
 8017e2a:	7800      	ldrb	r0, [r0, #0]
 8017e2c:	9011      	str	r0, [sp, #68]	@ 0x44
 8017e2e:	021b      	lsls	r3, r3, #8
 8017e30:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017e34:	9a07      	ldr	r2, [sp, #28]
 8017e36:	78d2      	ldrb	r2, [r2, #3]
 8017e38:	4313      	orrs	r3, r2
 8017e3a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017e3c:	3001      	adds	r0, #1
 8017e3e:	441a      	add	r2, r3
 8017e40:	9005      	str	r0, [sp, #20]
 8017e42:	1c50      	adds	r0, r2, #1
 8017e44:	9003      	str	r0, [sp, #12]
 8017e46:	7852      	ldrb	r2, [r2, #1]
 8017e48:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017e4a:	0212      	lsls	r2, r2, #8
 8017e4c:	5cc3      	ldrb	r3, [r0, r3]
 8017e4e:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017e52:	431a      	orrs	r2, r3
 8017e54:	b293      	uxth	r3, r2
 8017e56:	930c      	str	r3, [sp, #48]	@ 0x30
 8017e58:	2300      	movs	r3, #0
 8017e5a:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8017e5e:	9308      	str	r3, [sp, #32]
 8017e60:	461a      	mov	r2, r3
 8017e62:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017e66:	930e      	str	r3, [sp, #56]	@ 0x38
 8017e68:	f04f 0801 	mov.w	r8, #1
 8017e6c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8017e70:	f8cd 8008 	str.w	r8, [sp, #8]
 8017e74:	46c4      	mov	ip, r8
 8017e76:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017e78:	2d00      	cmp	r5, #0
 8017e7a:	d07c      	beq.n	8017f76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8017e7c:	45ac      	cmp	ip, r5
 8017e7e:	d26c      	bcs.n	8017f5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8017e80:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017e82:	eba5 050c 	sub.w	r5, r5, ip
 8017e86:	455b      	cmp	r3, fp
 8017e88:	b2ad      	uxth	r5, r5
 8017e8a:	4608      	mov	r0, r1
 8017e8c:	d802      	bhi.n	8017e94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8017e8e:	e070      	b.n	8017f72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8017e90:	2b00      	cmp	r3, #0
 8017e92:	d15c      	bne.n	8017f4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8017e94:	9b03      	ldr	r3, [sp, #12]
 8017e96:	9a02      	ldr	r2, [sp, #8]
 8017e98:	785b      	ldrb	r3, [r3, #1]
 8017e9a:	9902      	ldr	r1, [sp, #8]
 8017e9c:	f1c2 0207 	rsb	r2, r2, #7
 8017ea0:	4093      	lsls	r3, r2
 8017ea2:	005b      	lsls	r3, r3, #1
 8017ea4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017ea8:	9b03      	ldr	r3, [sp, #12]
 8017eaa:	781b      	ldrb	r3, [r3, #0]
 8017eac:	410b      	asrs	r3, r1
 8017eae:	3101      	adds	r1, #1
 8017eb0:	b2c9      	uxtb	r1, r1
 8017eb2:	2908      	cmp	r1, #8
 8017eb4:	9102      	str	r1, [sp, #8]
 8017eb6:	9903      	ldr	r1, [sp, #12]
 8017eb8:	bf0a      	itet	eq
 8017eba:	3102      	addeq	r1, #2
 8017ebc:	3101      	addne	r1, #1
 8017ebe:	9103      	streq	r1, [sp, #12]
 8017ec0:	b2db      	uxtb	r3, r3
 8017ec2:	bf0a      	itet	eq
 8017ec4:	2100      	moveq	r1, #0
 8017ec6:	9103      	strne	r1, [sp, #12]
 8017ec8:	9102      	streq	r1, [sp, #8]
 8017eca:	4313      	orrs	r3, r2
 8017ecc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017ece:	b29a      	uxth	r2, r3
 8017ed0:	4291      	cmp	r1, r2
 8017ed2:	d30a      	bcc.n	8017eea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8017ed4:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8017ed8:	2301      	movs	r3, #1
 8017eda:	9905      	ldr	r1, [sp, #20]
 8017edc:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017ee0:	d30f      	bcc.n	8017f02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8017ee2:	2100      	movs	r1, #0
 8017ee4:	4698      	mov	r8, r3
 8017ee6:	9100      	str	r1, [sp, #0]
 8017ee8:	e032      	b.n	8017f50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8017eea:	9b05      	ldr	r3, [sp, #20]
 8017eec:	429a      	cmp	r2, r3
 8017eee:	d318      	bcc.n	8017f22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8017ef0:	eb04 0308 	add.w	r3, r4, r8
 8017ef4:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8017ef8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8017efc:	f108 0301 	add.w	r3, r8, #1
 8017f00:	b29b      	uxth	r3, r3
 8017f02:	9905      	ldr	r1, [sp, #20]
 8017f04:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8017f08:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017f0c:	710e      	strb	r6, [r1, #4]
 8017f0e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8017f10:	80ce      	strh	r6, [r1, #6]
 8017f12:	f108 0601 	add.w	r6, r8, #1
 8017f16:	714e      	strb	r6, [r1, #5]
 8017f18:	9905      	ldr	r1, [sp, #20]
 8017f1a:	3101      	adds	r1, #1
 8017f1c:	b289      	uxth	r1, r1
 8017f1e:	9105      	str	r1, [sp, #20]
 8017f20:	e7df      	b.n	8017ee2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8017f22:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8017f26:	4611      	mov	r1, r2
 8017f28:	795b      	ldrb	r3, [r3, #5]
 8017f2a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8017f2e:	4426      	add	r6, r4
 8017f30:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8017f32:	4437      	add	r7, r6
 8017f34:	2f00      	cmp	r7, #0
 8017f36:	dd06      	ble.n	8017f46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8017f38:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017f3c:	790f      	ldrb	r7, [r1, #4]
 8017f3e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8017f42:	88c9      	ldrh	r1, [r1, #6]
 8017f44:	e7f4      	b.n	8017f30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8017f46:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8017f4a:	b29b      	uxth	r3, r3
 8017f4c:	e7c5      	b.n	8017eda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8017f4e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017f50:	920c      	str	r2, [sp, #48]	@ 0x30
 8017f52:	4601      	mov	r1, r0
 8017f54:	9a00      	ldr	r2, [sp, #0]
 8017f56:	469c      	mov	ip, r3
 8017f58:	e78e      	b.n	8017e78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8017f5a:	1957      	adds	r7, r2, r5
 8017f5c:	ebac 0305 	sub.w	r3, ip, r5
 8017f60:	b2ba      	uxth	r2, r7
 8017f62:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8017f66:	9200      	str	r2, [sp, #0]
 8017f68:	b29b      	uxth	r3, r3
 8017f6a:	2500      	movs	r5, #0
 8017f6c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017f6e:	455a      	cmp	r2, fp
 8017f70:	d88e      	bhi.n	8017e90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8017f72:	4601      	mov	r1, r0
 8017f74:	e749      	b.n	8017e0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8017f76:	458c      	cmp	ip, r1
 8017f78:	bf2c      	ite	cs
 8017f7a:	4628      	movcs	r0, r5
 8017f7c:	462b      	movcc	r3, r5
 8017f7e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8017f80:	bf27      	ittee	cs
 8017f82:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8017f84:	ebac 0301 	subcs.w	r3, ip, r1
 8017f88:	eba1 000c 	subcc.w	r0, r1, ip
 8017f8c:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8017f90:	bf2c      	ite	cs
 8017f92:	b29b      	uxthcs	r3, r3
 8017f94:	b280      	uxthcc	r0, r0
 8017f96:	2dff      	cmp	r5, #255	@ 0xff
 8017f98:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8017f9a:	eb02 0705 	add.w	r7, r2, r5
 8017f9e:	b2bd      	uxth	r5, r7
 8017fa0:	9500      	str	r5, [sp, #0]
 8017fa2:	d12f      	bne.n	8018004 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8017fa4:	465e      	mov	r6, fp
 8017fa6:	9d00      	ldr	r5, [sp, #0]
 8017fa8:	42aa      	cmp	r2, r5
 8017faa:	f040 8084 	bne.w	80180b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8017fae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017fb0:	458c      	cmp	ip, r1
 8017fb2:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017fb6:	d3d8      	bcc.n	8017f6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8017fb8:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8017fba:	9904      	ldr	r1, [sp, #16]
 8017fbc:	8812      	ldrh	r2, [r2, #0]
 8017fbe:	1a52      	subs	r2, r2, r1
 8017fc0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017fc4:	9a08      	ldr	r2, [sp, #32]
 8017fc6:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017fc8:	3201      	adds	r2, #1
 8017fca:	428a      	cmp	r2, r1
 8017fcc:	9208      	str	r2, [sp, #32]
 8017fce:	f040 8092 	bne.w	80180f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8017fd2:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8017fd6:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8017fda:	9b04      	ldr	r3, [sp, #16]
 8017fdc:	eba5 050c 	sub.w	r5, r5, ip
 8017fe0:	b2ad      	uxth	r5, r5
 8017fe2:	2d00      	cmp	r5, #0
 8017fe4:	bf08      	it	eq
 8017fe6:	4619      	moveq	r1, r3
 8017fe8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017fea:	bf18      	it	ne
 8017fec:	2100      	movne	r1, #0
 8017fee:	3301      	adds	r3, #1
 8017ff0:	930d      	str	r3, [sp, #52]	@ 0x34
 8017ff2:	b289      	uxth	r1, r1
 8017ff4:	e700      	b.n	8017df8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8017ff6:	bf00      	nop
 8017ff8:	20014040 	.word	0x20014040
 8017ffc:	20014038 	.word	0x20014038
 8018000:	fffff7fb 	.word	0xfffff7fb
 8018004:	46d9      	mov	r9, fp
 8018006:	9d00      	ldr	r5, [sp, #0]
 8018008:	42aa      	cmp	r2, r5
 801800a:	d0d0      	beq.n	8017fae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801800c:	1c55      	adds	r5, r2, #1
 801800e:	4422      	add	r2, r4
 8018010:	9517      	str	r5, [sp, #92]	@ 0x5c
 8018012:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8018016:	9a06      	ldr	r2, [sp, #24]
 8018018:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801801c:	4472      	add	r2, lr
 801801e:	9212      	str	r2, [sp, #72]	@ 0x48
 8018020:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8018022:	f8b9 2000 	ldrh.w	r2, [r9]
 8018026:	f897 a002 	ldrb.w	sl, [r7, #2]
 801802a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801802c:	1216      	asrs	r6, r2, #8
 801802e:	fb1a fa07 	smulbb	sl, sl, r7
 8018032:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018036:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018038:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801803c:	fb06 a607 	mla	r6, r6, r7, sl
 8018040:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8018042:	f897 a001 	ldrb.w	sl, [r7, #1]
 8018046:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8018048:	10d5      	asrs	r5, r2, #3
 801804a:	fb1a fa07 	smulbb	sl, sl, r7
 801804e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018052:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018054:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018058:	fb05 a507 	mla	r5, r5, r7, sl
 801805c:	9f06      	ldr	r7, [sp, #24]
 801805e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018062:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8018064:	00d2      	lsls	r2, r2, #3
 8018066:	fb1e fe07 	smulbb	lr, lr, r7
 801806a:	b2d2      	uxtb	r2, r2
 801806c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801806e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018072:	b2b6      	uxth	r6, r6
 8018074:	fb02 e207 	mla	r2, r2, r7, lr
 8018078:	b292      	uxth	r2, r2
 801807a:	b2ad      	uxth	r5, r5
 801807c:	f106 0a01 	add.w	sl, r6, #1
 8018080:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018084:	f102 0e01 	add.w	lr, r2, #1
 8018088:	f105 0a01 	add.w	sl, r5, #1
 801808c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8018090:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018094:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8018098:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801809c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80180a0:	ea4e 0606 	orr.w	r6, lr, r6
 80180a4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80180a8:	ea46 060a 	orr.w	r6, r6, sl
 80180ac:	f829 6b02 	strh.w	r6, [r9], #2
 80180b0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80180b4:	e7a7      	b.n	8018006 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 80180b6:	f102 0e01 	add.w	lr, r2, #1
 80180ba:	4422      	add	r2, r4
 80180bc:	9f06      	ldr	r7, [sp, #24]
 80180be:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 80180c2:	9a06      	ldr	r2, [sp, #24]
 80180c4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80180c8:	eb02 0a05 	add.w	sl, r2, r5
 80180cc:	4a13      	ldr	r2, [pc, #76]	@ (801811c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 80180ce:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80180d2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80180d6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80180da:	00d2      	lsls	r2, r2, #3
 80180dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80180e0:	ea49 0202 	orr.w	r2, r9, r2
 80180e4:	f817 9005 	ldrb.w	r9, [r7, r5]
 80180e8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80180ec:	f826 2b02 	strh.w	r2, [r6], #2
 80180f0:	fa1f f28e 	uxth.w	r2, lr
 80180f4:	e757      	b.n	8017fa6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80180f6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80180fa:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80180fe:	1a2d      	subs	r5, r5, r0
 8018100:	b2ad      	uxth	r5, r5
 8018102:	2d00      	cmp	r5, #0
 8018104:	bf18      	it	ne
 8018106:	2000      	movne	r0, #0
 8018108:	e730      	b.n	8017f6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801810a:	4b05      	ldr	r3, [pc, #20]	@ (8018120 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801810c:	6818      	ldr	r0, [r3, #0]
 801810e:	6803      	ldr	r3, [r0, #0]
 8018110:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018112:	4798      	blx	r3
 8018114:	b01f      	add	sp, #124	@ 0x7c
 8018116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801811a:	bf00      	nop
 801811c:	fffff800 	.word	0xfffff800
 8018120:	20014040 	.word	0x20014040

08018124 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8018124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018128:	b091      	sub	sp, #68	@ 0x44
 801812a:	469b      	mov	fp, r3
 801812c:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8018130:	4616      	mov	r6, r2
 8018132:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8018136:	f9b3 2000 	ldrsh.w	r2, [r3]
 801813a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801813e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8018142:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8018146:	4604      	mov	r4, r0
 8018148:	460d      	mov	r5, r1
 801814a:	4640      	mov	r0, r8
 801814c:	4659      	mov	r1, fp
 801814e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8018152:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8018156:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801815a:	f7f2 fde9 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 801815e:	4631      	mov	r1, r6
 8018160:	4640      	mov	r0, r8
 8018162:	f7f2 fde5 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 8018166:	4b74      	ldr	r3, [pc, #464]	@ (8018338 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8018168:	8818      	ldrh	r0, [r3, #0]
 801816a:	4b74      	ldr	r3, [pc, #464]	@ (801833c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801816c:	8819      	ldrh	r1, [r3, #0]
 801816e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8018172:	2b00      	cmp	r3, #0
 8018174:	b202      	sxth	r2, r0
 8018176:	b20e      	sxth	r6, r1
 8018178:	da07      	bge.n	801818a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801817a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801817e:	4463      	add	r3, ip
 8018180:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8018184:	2300      	movs	r3, #0
 8018186:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801818a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801818e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8018192:	1ad2      	subs	r2, r2, r3
 8018194:	4594      	cmp	ip, r2
 8018196:	bfc4      	itt	gt
 8018198:	1ac2      	subgt	r2, r0, r3
 801819a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801819e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80181a2:	2a00      	cmp	r2, #0
 80181a4:	da07      	bge.n	80181b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80181a6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80181aa:	4462      	add	r2, ip
 80181ac:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80181b0:	2200      	movs	r2, #0
 80181b2:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80181b6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80181ba:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80181be:	eba6 060a 	sub.w	r6, r6, sl
 80181c2:	42b2      	cmp	r2, r6
 80181c4:	bfc4      	itt	gt
 80181c6:	eba1 020a 	subgt.w	r2, r1, sl
 80181ca:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 80181ce:	4a5c      	ldr	r2, [pc, #368]	@ (8018340 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80181d0:	7812      	ldrb	r2, [r2, #0]
 80181d2:	b9a2      	cbnz	r2, 80181fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80181d4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80181d8:	4286      	cmp	r6, r0
 80181da:	4640      	mov	r0, r8
 80181dc:	9303      	str	r3, [sp, #12]
 80181de:	bf14      	ite	ne
 80181e0:	2600      	movne	r6, #0
 80181e2:	2601      	moveq	r6, #1
 80181e4:	f7f2 fde7 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80181e8:	9b03      	ldr	r3, [sp, #12]
 80181ea:	b160      	cbz	r0, 8018206 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80181ec:	2300      	movs	r3, #0
 80181ee:	8023      	strh	r3, [r4, #0]
 80181f0:	8063      	strh	r3, [r4, #2]
 80181f2:	80a3      	strh	r3, [r4, #4]
 80181f4:	4620      	mov	r0, r4
 80181f6:	80e3      	strh	r3, [r4, #6]
 80181f8:	b011      	add	sp, #68	@ 0x44
 80181fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181fe:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8018202:	428e      	cmp	r6, r1
 8018204:	e7e9      	b.n	80181da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8018206:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801820a:	9205      	str	r2, [sp, #20]
 801820c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8018210:	9206      	str	r2, [sp, #24]
 8018212:	f8bb 2000 	ldrh.w	r2, [fp]
 8018216:	900e      	str	r0, [sp, #56]	@ 0x38
 8018218:	1a9b      	subs	r3, r3, r2
 801821a:	b21b      	sxth	r3, r3
 801821c:	9303      	str	r3, [sp, #12]
 801821e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018222:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8018226:	ebaa 0a03 	sub.w	sl, sl, r3
 801822a:	fa0f f38a 	sxth.w	r3, sl
 801822e:	9304      	str	r3, [sp, #16]
 8018230:	9b03      	ldr	r3, [sp, #12]
 8018232:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8018236:	9b04      	ldr	r3, [sp, #16]
 8018238:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801823c:	9b05      	ldr	r3, [sp, #20]
 801823e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8018242:	a90e      	add	r1, sp, #56	@ 0x38
 8018244:	9b06      	ldr	r3, [sp, #24]
 8018246:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801824a:	a80c      	add	r0, sp, #48	@ 0x30
 801824c:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8018250:	f7f7 fd06 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018254:	4640      	mov	r0, r8
 8018256:	f7f7 fcdb 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801825a:	a80e      	add	r0, sp, #56	@ 0x38
 801825c:	f7f7 fcd8 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018260:	4b38      	ldr	r3, [pc, #224]	@ (8018344 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8018262:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8018266:	881b      	ldrh	r3, [r3, #0]
 8018268:	9307      	str	r3, [sp, #28]
 801826a:	682b      	ldr	r3, [r5, #0]
 801826c:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8018348 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8018270:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018272:	4628      	mov	r0, r5
 8018274:	4798      	blx	r3
 8018276:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801827a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801827e:	4681      	mov	r9, r0
 8018280:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8018284:	f8db 0000 	ldr.w	r0, [fp]
 8018288:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801828a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801828e:	6803      	ldr	r3, [r0, #0]
 8018290:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8018292:	4798      	blx	r3
 8018294:	4607      	mov	r7, r0
 8018296:	f8db 0000 	ldr.w	r0, [fp]
 801829a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801829e:	6803      	ldr	r3, [r0, #0]
 80182a0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80182a4:	9109      	str	r1, [sp, #36]	@ 0x24
 80182a6:	9208      	str	r2, [sp, #32]
 80182a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80182aa:	4798      	blx	r3
 80182ac:	f010 0f01 	tst.w	r0, #1
 80182b0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80182b4:	d012      	beq.n	80182dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80182b6:	f8db 0000 	ldr.w	r0, [fp]
 80182ba:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80182be:	6803      	ldr	r3, [r0, #0]
 80182c0:	9200      	str	r2, [sp, #0]
 80182c2:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 80182c4:	e898 0006 	ldmia.w	r8, {r1, r2}
 80182c8:	462b      	mov	r3, r5
 80182ca:	47b0      	blx	r6
 80182cc:	9b03      	ldr	r3, [sp, #12]
 80182ce:	8023      	strh	r3, [r4, #0]
 80182d0:	9b04      	ldr	r3, [sp, #16]
 80182d2:	8063      	strh	r3, [r4, #2]
 80182d4:	9b05      	ldr	r3, [sp, #20]
 80182d6:	80a3      	strh	r3, [r4, #4]
 80182d8:	9b06      	ldr	r3, [sp, #24]
 80182da:	e78b      	b.n	80181f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80182dc:	fb09 f202 	mul.w	r2, r9, r2
 80182e0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80182e4:	440f      	add	r7, r1
 80182e6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80182ea:	b166      	cbz	r6, 8018306 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80182ec:	9a07      	ldr	r2, [sp, #28]
 80182ee:	4592      	cmp	sl, r2
 80182f0:	d109      	bne.n	8018306 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80182f2:	f8db 0000 	ldr.w	r0, [fp]
 80182f6:	6802      	ldr	r2, [r0, #0]
 80182f8:	fb09 f303 	mul.w	r3, r9, r3
 80182fc:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 80182fe:	4629      	mov	r1, r5
 8018300:	463a      	mov	r2, r7
 8018302:	47b0      	blx	r6
 8018304:	e7e2      	b.n	80182cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018306:	fb0a f303 	mul.w	r3, sl, r3
 801830a:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8018348 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801830e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8018312:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8018316:	4545      	cmp	r5, r8
 8018318:	d2d8      	bcs.n	80182cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801831a:	f8db 0000 	ldr.w	r0, [fp]
 801831e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018322:	6802      	ldr	r2, [r0, #0]
 8018324:	4629      	mov	r1, r5
 8018326:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 801832a:	005b      	lsls	r3, r3, #1
 801832c:	463a      	mov	r2, r7
 801832e:	47d0      	blx	sl
 8018330:	444f      	add	r7, r9
 8018332:	4435      	add	r5, r6
 8018334:	e7ef      	b.n	8018316 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8018336:	bf00      	nop
 8018338:	20014032 	.word	0x20014032
 801833c:	20014034 	.word	0x20014034
 8018340:	20014036 	.word	0x20014036
 8018344:	20014038 	.word	0x20014038
 8018348:	20014040 	.word	0x20014040

0801834c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801834c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801834e:	4606      	mov	r6, r0
 8018350:	b087      	sub	sp, #28
 8018352:	460c      	mov	r4, r1
 8018354:	4617      	mov	r7, r2
 8018356:	461d      	mov	r5, r3
 8018358:	b333      	cbz	r3, 80183a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801835a:	4608      	mov	r0, r1
 801835c:	f7f2 fd2b 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018360:	bb10      	cbnz	r0, 80183a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018362:	6820      	ldr	r0, [r4, #0]
 8018364:	6861      	ldr	r1, [r4, #4]
 8018366:	4c1c      	ldr	r4, [pc, #112]	@ (80183d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8018368:	ab04      	add	r3, sp, #16
 801836a:	c303      	stmia	r3!, {r0, r1}
 801836c:	a804      	add	r0, sp, #16
 801836e:	f7f7 fc4f 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018372:	6820      	ldr	r0, [r4, #0]
 8018374:	6803      	ldr	r3, [r0, #0]
 8018376:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018378:	4798      	blx	r3
 801837a:	2dff      	cmp	r5, #255	@ 0xff
 801837c:	d016      	beq.n	80183ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801837e:	f010 0f08 	tst.w	r0, #8
 8018382:	6820      	ldr	r0, [r4, #0]
 8018384:	d015      	beq.n	80183b2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8018386:	2400      	movs	r4, #0
 8018388:	6801      	ldr	r1, [r0, #0]
 801838a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801838e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018392:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8018396:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801839a:	9401      	str	r4, [sp, #4]
 801839c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80183a0:	9400      	str	r4, [sp, #0]
 80183a2:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 80183a4:	4639      	mov	r1, r7
 80183a6:	47a0      	blx	r4
 80183a8:	b007      	add	sp, #28
 80183aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80183ac:	f010 0f02 	tst.w	r0, #2
 80183b0:	e7e7      	b.n	8018382 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80183b2:	6803      	ldr	r3, [r0, #0]
 80183b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80183b6:	4798      	blx	r3
 80183b8:	4b08      	ldr	r3, [pc, #32]	@ (80183dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80183ba:	881a      	ldrh	r2, [r3, #0]
 80183bc:	6833      	ldr	r3, [r6, #0]
 80183be:	e9cd 7500 	strd	r7, r5, [sp]
 80183c2:	4601      	mov	r1, r0
 80183c4:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80183c6:	4630      	mov	r0, r6
 80183c8:	ab04      	add	r3, sp, #16
 80183ca:	47a8      	blx	r5
 80183cc:	6820      	ldr	r0, [r4, #0]
 80183ce:	6803      	ldr	r3, [r0, #0]
 80183d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80183d2:	4798      	blx	r3
 80183d4:	e7e8      	b.n	80183a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80183d6:	bf00      	nop
 80183d8:	20014040 	.word	0x20014040
 80183dc:	20014038 	.word	0x20014038

080183e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80183e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80183e4:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80183e8:	9e08      	ldr	r6, [sp, #32]
 80183ea:	4688      	mov	r8, r1
 80183ec:	4614      	mov	r4, r2
 80183ee:	461d      	mov	r5, r3
 80183f0:	2f00      	cmp	r7, #0
 80183f2:	f000 80a9 	beq.w	8018548 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80183f6:	4618      	mov	r0, r3
 80183f8:	f7f2 fcdd 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80183fc:	2800      	cmp	r0, #0
 80183fe:	f040 80a3 	bne.w	8018548 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018402:	f9b5 1000 	ldrsh.w	r1, [r5]
 8018406:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801840a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801840e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8018412:	fb04 1303 	mla	r3, r4, r3, r1
 8018416:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801841a:	4365      	muls	r5, r4
 801841c:	2fff      	cmp	r7, #255	@ 0xff
 801841e:	eba4 0200 	sub.w	r2, r4, r0
 8018422:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8018426:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801842a:	d04a      	beq.n	80184c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801842c:	b2bc      	uxth	r4, r7
 801842e:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8018432:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8018436:	fa5f f788 	uxtb.w	r7, r8
 801843a:	b2f3      	uxtb	r3, r6
 801843c:	0040      	lsls	r0, r0, #1
 801843e:	fb0e fe04 	mul.w	lr, lr, r4
 8018442:	4367      	muls	r7, r4
 8018444:	4363      	muls	r3, r4
 8018446:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801844a:	fa1f fc8c 	uxth.w	ip, ip
 801844e:	42a9      	cmp	r1, r5
 8018450:	d27a      	bcs.n	8018548 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018452:	eb01 0900 	add.w	r9, r1, r0
 8018456:	4549      	cmp	r1, r9
 8018458:	d231      	bcs.n	80184be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801845a:	880a      	ldrh	r2, [r1, #0]
 801845c:	1214      	asrs	r4, r2, #8
 801845e:	10d6      	asrs	r6, r2, #3
 8018460:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8018464:	00d2      	lsls	r2, r2, #3
 8018466:	b2d2      	uxtb	r2, r2
 8018468:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801846c:	fb14 f40c 	smulbb	r4, r4, ip
 8018470:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018474:	4474      	add	r4, lr
 8018476:	fb12 f20c 	smulbb	r2, r2, ip
 801847a:	b2a4      	uxth	r4, r4
 801847c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018480:	441a      	add	r2, r3
 8018482:	b292      	uxth	r2, r2
 8018484:	f104 0a01 	add.w	sl, r4, #1
 8018488:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801848c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8018490:	fb16 f60c 	smulbb	r6, r6, ip
 8018494:	f102 0a01 	add.w	sl, r2, #1
 8018498:	443e      	add	r6, r7
 801849a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801849e:	b2b6      	uxth	r6, r6
 80184a0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80184a4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80184a8:	4322      	orrs	r2, r4
 80184aa:	1c74      	adds	r4, r6, #1
 80184ac:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80184b0:	0976      	lsrs	r6, r6, #5
 80184b2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80184b6:	4332      	orrs	r2, r6
 80184b8:	f821 2b02 	strh.w	r2, [r1], #2
 80184bc:	e7cb      	b.n	8018456 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80184be:	4441      	add	r1, r8
 80184c0:	e7c5      	b.n	801844e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80184c2:	4f22      	ldr	r7, [pc, #136]	@ (801854c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80184c4:	0973      	lsrs	r3, r6, #5
 80184c6:	ea08 0707 	and.w	r7, r8, r7
 80184ca:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80184ce:	433b      	orrs	r3, r7
 80184d0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80184d4:	4333      	orrs	r3, r6
 80184d6:	07e7      	lsls	r7, r4, #31
 80184d8:	b29b      	uxth	r3, r3
 80184da:	d50b      	bpl.n	80184f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80184dc:	0040      	lsls	r0, r0, #1
 80184de:	0052      	lsls	r2, r2, #1
 80184e0:	42a9      	cmp	r1, r5
 80184e2:	d231      	bcs.n	8018548 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80184e4:	180c      	adds	r4, r1, r0
 80184e6:	42a1      	cmp	r1, r4
 80184e8:	d202      	bcs.n	80184f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80184ea:	f821 3b02 	strh.w	r3, [r1], #2
 80184ee:	e7fa      	b.n	80184e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 80184f0:	4411      	add	r1, r2
 80184f2:	e7f5      	b.n	80184e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80184f4:	078e      	lsls	r6, r1, #30
 80184f6:	d008      	beq.n	801850a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80184f8:	0066      	lsls	r6, r4, #1
 80184fa:	460a      	mov	r2, r1
 80184fc:	42aa      	cmp	r2, r5
 80184fe:	d202      	bcs.n	8018506 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8018500:	8013      	strh	r3, [r2, #0]
 8018502:	4432      	add	r2, r6
 8018504:	e7fa      	b.n	80184fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8018506:	3102      	adds	r1, #2
 8018508:	3801      	subs	r0, #1
 801850a:	07c2      	lsls	r2, r0, #31
 801850c:	d50b      	bpl.n	8018526 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801850e:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8018512:	3a01      	subs	r2, #1
 8018514:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8018518:	0066      	lsls	r6, r4, #1
 801851a:	42aa      	cmp	r2, r5
 801851c:	d202      	bcs.n	8018524 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801851e:	8013      	strh	r3, [r2, #0]
 8018520:	4432      	add	r2, r6
 8018522:	e7fa      	b.n	801851a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8018524:	3801      	subs	r0, #1
 8018526:	b178      	cbz	r0, 8018548 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018528:	1040      	asrs	r0, r0, #1
 801852a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801852e:	0080      	lsls	r0, r0, #2
 8018530:	0064      	lsls	r4, r4, #1
 8018532:	42a9      	cmp	r1, r5
 8018534:	d208      	bcs.n	8018548 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018536:	180e      	adds	r6, r1, r0
 8018538:	460a      	mov	r2, r1
 801853a:	42b2      	cmp	r2, r6
 801853c:	d202      	bcs.n	8018544 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801853e:	f842 3b04 	str.w	r3, [r2], #4
 8018542:	e7fa      	b.n	801853a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8018544:	4421      	add	r1, r4
 8018546:	e7f4      	b.n	8018532 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8018548:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801854c:	00fff800 	.word	0x00fff800

08018550 <_ZN8touchgfx8LCD16bppC1Ev>:
 8018550:	2200      	movs	r2, #0
 8018552:	4912      	ldr	r1, [pc, #72]	@ (801859c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8018554:	6001      	str	r1, [r0, #0]
 8018556:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801855a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801855e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8018562:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8018566:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801856a:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801856e:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8018572:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8018576:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801857a:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801857e:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8018582:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8018586:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801858a:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801858e:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8018592:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8018596:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801859a:	4770      	bx	lr
 801859c:	08026144 	.word	0x08026144

080185a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80185a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185a4:	460d      	mov	r5, r1
 80185a6:	b08d      	sub	sp, #52	@ 0x34
 80185a8:	4604      	mov	r4, r0
 80185aa:	6808      	ldr	r0, [r1, #0]
 80185ac:	6849      	ldr	r1, [r1, #4]
 80185ae:	4699      	mov	r9, r3
 80185b0:	ab08      	add	r3, sp, #32
 80185b2:	c303      	stmia	r3!, {r0, r1}
 80185b4:	6810      	ldr	r0, [r2, #0]
 80185b6:	6851      	ldr	r1, [r2, #4]
 80185b8:	ab0a      	add	r3, sp, #40	@ 0x28
 80185ba:	c303      	stmia	r3!, {r0, r1}
 80185bc:	a808      	add	r0, sp, #32
 80185be:	f7f7 fb27 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80185c2:	4629      	mov	r1, r5
 80185c4:	a80a      	add	r0, sp, #40	@ 0x28
 80185c6:	f7f7 fb4b 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80185ca:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80185ce:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80185d2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 80185d6:	4d63      	ldr	r5, [pc, #396]	@ (8018764 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80185d8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 80185dc:	6828      	ldr	r0, [r5, #0]
 80185de:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80185e2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80185e6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80185ea:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80185ee:	440a      	add	r2, r1
 80185f0:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80185f4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80185f8:	4413      	add	r3, r2
 80185fa:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80185fe:	6803      	ldr	r3, [r0, #0]
 8018600:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018602:	4798      	blx	r3
 8018604:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018608:	d119      	bne.n	801863e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801860a:	f010 0f20 	tst.w	r0, #32
 801860e:	6828      	ldr	r0, [r5, #0]
 8018610:	d018      	beq.n	8018644 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8018612:	2500      	movs	r5, #0
 8018614:	6801      	ldr	r1, [r0, #0]
 8018616:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801861a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801861e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8018622:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8018626:	9502      	str	r5, [sp, #8]
 8018628:	b2b6      	uxth	r6, r6
 801862a:	fa1f f588 	uxth.w	r5, r8
 801862e:	9601      	str	r6, [sp, #4]
 8018630:	9500      	str	r5, [sp, #0]
 8018632:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8018634:	4621      	mov	r1, r4
 8018636:	47a8      	blx	r5
 8018638:	b00d      	add	sp, #52	@ 0x34
 801863a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801863e:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8018642:	e7e4      	b.n	801860e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8018644:	6803      	ldr	r3, [r0, #0]
 8018646:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018648:	4798      	blx	r3
 801864a:	4947      	ldr	r1, [pc, #284]	@ (8018768 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801864c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8018650:	880b      	ldrh	r3, [r1, #0]
 8018652:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8018656:	fb03 5202 	mla	r2, r3, r2, r5
 801865a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801865e:	4373      	muls	r3, r6
 8018660:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018664:	9307      	str	r3, [sp, #28]
 8018666:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801866a:	9306      	str	r3, [sp, #24]
 801866c:	468a      	mov	sl, r1
 801866e:	9b07      	ldr	r3, [sp, #28]
 8018670:	4298      	cmp	r0, r3
 8018672:	d270      	bcs.n	8018756 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8018674:	9b06      	ldr	r3, [sp, #24]
 8018676:	4621      	mov	r1, r4
 8018678:	eb00 0b03 	add.w	fp, r0, r3
 801867c:	4558      	cmp	r0, fp
 801867e:	d25d      	bcs.n	801873c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8018680:	f851 4b04 	ldr.w	r4, [r1], #4
 8018684:	0e23      	lsrs	r3, r4, #24
 8018686:	d014      	beq.n	80186b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018688:	2bff      	cmp	r3, #255	@ 0xff
 801868a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801868e:	d112      	bne.n	80186b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8018690:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018694:	d10f      	bne.n	80186b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8018696:	0963      	lsrs	r3, r4, #5
 8018698:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801869c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80186a0:	f02c 0c07 	bic.w	ip, ip, #7
 80186a4:	ea43 0c0c 	orr.w	ip, r3, ip
 80186a8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80186ac:	ea4c 0404 	orr.w	r4, ip, r4
 80186b0:	8004      	strh	r4, [r0, #0]
 80186b2:	3002      	adds	r0, #2
 80186b4:	e7e2      	b.n	801867c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80186b6:	fb09 f303 	mul.w	r3, r9, r3
 80186ba:	8807      	ldrh	r7, [r0, #0]
 80186bc:	1c5a      	adds	r2, r3, #1
 80186be:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80186c2:	1212      	asrs	r2, r2, #8
 80186c4:	123e      	asrs	r6, r7, #8
 80186c6:	b293      	uxth	r3, r2
 80186c8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80186cc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80186d0:	43d2      	mvns	r2, r2
 80186d2:	b2d2      	uxtb	r2, r2
 80186d4:	10fd      	asrs	r5, r7, #3
 80186d6:	fb1e fe03 	smulbb	lr, lr, r3
 80186da:	00ff      	lsls	r7, r7, #3
 80186dc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80186e0:	fb06 e602 	mla	r6, r6, r2, lr
 80186e4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80186e8:	b2ff      	uxtb	r7, r7
 80186ea:	fa5f fc8c 	uxtb.w	ip, ip
 80186ee:	b2e4      	uxtb	r4, r4
 80186f0:	b2b6      	uxth	r6, r6
 80186f2:	fb1c fc03 	smulbb	ip, ip, r3
 80186f6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80186fa:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80186fe:	fb14 f403 	smulbb	r4, r4, r3
 8018702:	fb05 c502 	mla	r5, r5, r2, ip
 8018706:	f106 0e01 	add.w	lr, r6, #1
 801870a:	fb07 4702 	mla	r7, r7, r2, r4
 801870e:	b2ad      	uxth	r5, r5
 8018710:	b2bf      	uxth	r7, r7
 8018712:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8018716:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801871a:	f105 0c01 	add.w	ip, r5, #1
 801871e:	1c7e      	adds	r6, r7, #1
 8018720:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8018724:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018728:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801872c:	096d      	lsrs	r5, r5, #5
 801872e:	ea46 060e 	orr.w	r6, r6, lr
 8018732:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018736:	432e      	orrs	r6, r5
 8018738:	8006      	strh	r6, [r0, #0]
 801873a:	e7ba      	b.n	80186b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801873c:	f8ba 3000 	ldrh.w	r3, [sl]
 8018740:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8018744:	eba3 0308 	sub.w	r3, r3, r8
 8018748:	eba4 0408 	sub.w	r4, r4, r8
 801874c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018750:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8018754:	e78b      	b.n	801866e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8018756:	4b03      	ldr	r3, [pc, #12]	@ (8018764 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018758:	6818      	ldr	r0, [r3, #0]
 801875a:	6803      	ldr	r3, [r0, #0]
 801875c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801875e:	4798      	blx	r3
 8018760:	e76a      	b.n	8018638 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8018762:	bf00      	nop
 8018764:	20014040 	.word	0x20014040
 8018768:	20014038 	.word	0x20014038

0801876c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801876c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018770:	460c      	mov	r4, r1
 8018772:	b085      	sub	sp, #20
 8018774:	6810      	ldr	r0, [r2, #0]
 8018776:	6851      	ldr	r1, [r2, #4]
 8018778:	466d      	mov	r5, sp
 801877a:	c503      	stmia	r5!, {r0, r1}
 801877c:	6818      	ldr	r0, [r3, #0]
 801877e:	6859      	ldr	r1, [r3, #4]
 8018780:	4616      	mov	r6, r2
 8018782:	c503      	stmia	r5!, {r0, r1}
 8018784:	4668      	mov	r0, sp
 8018786:	f7f7 fa43 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801878a:	4631      	mov	r1, r6
 801878c:	a802      	add	r0, sp, #8
 801878e:	f7f7 fa67 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018792:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8018796:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801879a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801879e:	4d28      	ldr	r5, [pc, #160]	@ (8018840 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80187a0:	4e28      	ldr	r6, [pc, #160]	@ (8018844 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80187a2:	6828      	ldr	r0, [r5, #0]
 80187a4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80187a8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80187ac:	fb11 2103 	smlabb	r1, r1, r3, r2
 80187b0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80187b4:	f8bd 1000 	ldrh.w	r1, [sp]
 80187b8:	440a      	add	r2, r1
 80187ba:	f8ad 2008 	strh.w	r2, [sp, #8]
 80187be:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80187c2:	4413      	add	r3, r2
 80187c4:	f8ad 300a 	strh.w	r3, [sp, #10]
 80187c8:	6803      	ldr	r3, [r0, #0]
 80187ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80187cc:	4798      	blx	r3
 80187ce:	8833      	ldrh	r3, [r6, #0]
 80187d0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80187d4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80187d8:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8018848 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80187dc:	fb03 1202 	mla	r2, r3, r2, r1
 80187e0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80187e4:	fb08 f303 	mul.w	r3, r8, r3
 80187e8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80187ec:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80187f0:	4298      	cmp	r0, r3
 80187f2:	d21d      	bcs.n	8018830 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80187f4:	eb00 080c 	add.w	r8, r0, ip
 80187f8:	4540      	cmp	r0, r8
 80187fa:	d20f      	bcs.n	801881c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80187fc:	f854 1b04 	ldr.w	r1, [r4], #4
 8018800:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8018804:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8018808:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801880c:	ea42 0209 	orr.w	r2, r2, r9
 8018810:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8018814:	430a      	orrs	r2, r1
 8018816:	f820 2b02 	strh.w	r2, [r0], #2
 801881a:	e7ed      	b.n	80187f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801881c:	8832      	ldrh	r2, [r6, #0]
 801881e:	1bd2      	subs	r2, r2, r7
 8018820:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018824:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8018828:	1bd2      	subs	r2, r2, r7
 801882a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801882e:	e7df      	b.n	80187f0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8018830:	6828      	ldr	r0, [r5, #0]
 8018832:	6803      	ldr	r3, [r0, #0]
 8018834:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018836:	4798      	blx	r3
 8018838:	b005      	add	sp, #20
 801883a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801883e:	bf00      	nop
 8018840:	20014040 	.word	0x20014040
 8018844:	20014038 	.word	0x20014038
 8018848:	fffff800 	.word	0xfffff800

0801884c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801884c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018850:	460e      	mov	r6, r1
 8018852:	b08e      	sub	sp, #56	@ 0x38
 8018854:	4604      	mov	r4, r0
 8018856:	6808      	ldr	r0, [r1, #0]
 8018858:	6849      	ldr	r1, [r1, #4]
 801885a:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8018a34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801885e:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8018a38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8018862:	461d      	mov	r5, r3
 8018864:	ab0a      	add	r3, sp, #40	@ 0x28
 8018866:	c303      	stmia	r3!, {r0, r1}
 8018868:	6810      	ldr	r0, [r2, #0]
 801886a:	6851      	ldr	r1, [r2, #4]
 801886c:	ab0c      	add	r3, sp, #48	@ 0x30
 801886e:	c303      	stmia	r3!, {r0, r1}
 8018870:	a80a      	add	r0, sp, #40	@ 0x28
 8018872:	f7f7 f9cd 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018876:	4631      	mov	r1, r6
 8018878:	a80c      	add	r0, sp, #48	@ 0x30
 801887a:	f7f7 f9f1 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801887e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8018882:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8018886:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801888a:	f8d8 0000 	ldr.w	r0, [r8]
 801888e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8018892:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8018896:	fb11 2103 	smlabb	r1, r1, r3, r2
 801889a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801889e:	440c      	add	r4, r1
 80188a0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 80188a4:	440a      	add	r2, r1
 80188a6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80188aa:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80188ae:	4413      	add	r3, r2
 80188b0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80188b4:	6803      	ldr	r3, [r0, #0]
 80188b6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80188b8:	4798      	blx	r3
 80188ba:	2dff      	cmp	r5, #255	@ 0xff
 80188bc:	d124      	bne.n	8018908 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80188be:	f010 0f01 	tst.w	r0, #1
 80188c2:	f8d8 0000 	ldr.w	r0, [r8]
 80188c6:	d022      	beq.n	801890e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80188c8:	2100      	movs	r1, #0
 80188ca:	f8d0 c000 	ldr.w	ip, [r0]
 80188ce:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80188d2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 80188d6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80188da:	f04f 0e01 	mov.w	lr, #1
 80188de:	f8cd e018 	str.w	lr, [sp, #24]
 80188e2:	f8b9 e000 	ldrh.w	lr, [r9]
 80188e6:	9503      	str	r5, [sp, #12]
 80188e8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80188ec:	b2b6      	uxth	r6, r6
 80188ee:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80188f2:	9102      	str	r1, [sp, #8]
 80188f4:	b2bf      	uxth	r7, r7
 80188f6:	9601      	str	r6, [sp, #4]
 80188f8:	9700      	str	r7, [sp, #0]
 80188fa:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 80188fe:	4621      	mov	r1, r4
 8018900:	47a8      	blx	r5
 8018902:	b00e      	add	sp, #56	@ 0x38
 8018904:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018908:	f010 0f04 	tst.w	r0, #4
 801890c:	e7d9      	b.n	80188c2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801890e:	6803      	ldr	r3, [r0, #0]
 8018910:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018912:	4798      	blx	r3
 8018914:	f8b9 3000 	ldrh.w	r3, [r9]
 8018918:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801891c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8018920:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8018924:	fb03 1202 	mla	r2, r3, r2, r1
 8018928:	ebac 0c07 	sub.w	ip, ip, r7
 801892c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018930:	435e      	muls	r6, r3
 8018932:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8018936:	2dff      	cmp	r5, #255	@ 0xff
 8018938:	eba3 0707 	sub.w	r7, r3, r7
 801893c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018940:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018944:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8018948:	d049      	beq.n	80189de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801894a:	43eb      	mvns	r3, r5
 801894c:	fa1f f985 	uxth.w	r9, r5
 8018950:	b2db      	uxtb	r3, r3
 8018952:	42b0      	cmp	r0, r6
 8018954:	d266      	bcs.n	8018a24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018956:	eb00 0a0e 	add.w	sl, r0, lr
 801895a:	4550      	cmp	r0, sl
 801895c:	4621      	mov	r1, r4
 801895e:	f104 0403 	add.w	r4, r4, #3
 8018962:	d25b      	bcs.n	8018a1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8018964:	8802      	ldrh	r2, [r0, #0]
 8018966:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801896a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801896e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8018972:	fb11 f109 	smulbb	r1, r1, r9
 8018976:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801897a:	10d5      	asrs	r5, r2, #3
 801897c:	fb08 1803 	mla	r8, r8, r3, r1
 8018980:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8018984:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018988:	fb11 f109 	smulbb	r1, r1, r9
 801898c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018990:	fb05 1503 	mla	r5, r5, r3, r1
 8018994:	00d2      	lsls	r2, r2, #3
 8018996:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801899a:	b2d2      	uxtb	r2, r2
 801899c:	fb11 f109 	smulbb	r1, r1, r9
 80189a0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80189a4:	fa1f f888 	uxth.w	r8, r8
 80189a8:	fb02 1203 	mla	r2, r2, r3, r1
 80189ac:	b292      	uxth	r2, r2
 80189ae:	f108 0101 	add.w	r1, r8, #1
 80189b2:	b2ad      	uxth	r5, r5
 80189b4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80189b8:	1c51      	adds	r1, r2, #1
 80189ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80189be:	1c69      	adds	r1, r5, #1
 80189c0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80189c4:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80189c8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80189cc:	096d      	lsrs	r5, r5, #5
 80189ce:	ea42 0208 	orr.w	r2, r2, r8
 80189d2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80189d6:	432a      	orrs	r2, r5
 80189d8:	f820 2b02 	strh.w	r2, [r0], #2
 80189dc:	e7bd      	b.n	801895a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80189de:	4a14      	ldr	r2, [pc, #80]	@ (8018a30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80189e0:	42b0      	cmp	r0, r6
 80189e2:	d21f      	bcs.n	8018a24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80189e4:	eb00 050e 	add.w	r5, r0, lr
 80189e8:	42a8      	cmp	r0, r5
 80189ea:	4621      	mov	r1, r4
 80189ec:	f104 0403 	add.w	r4, r4, #3
 80189f0:	d210      	bcs.n	8018a14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80189f2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80189f6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80189fa:	00db      	lsls	r3, r3, #3
 80189fc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8018a00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018a04:	430b      	orrs	r3, r1
 8018a06:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018a0a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8018a0e:	f820 3b02 	strh.w	r3, [r0], #2
 8018a12:	e7e9      	b.n	80189e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8018a14:	4438      	add	r0, r7
 8018a16:	eb01 040c 	add.w	r4, r1, ip
 8018a1a:	e7e1      	b.n	80189e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8018a1c:	4438      	add	r0, r7
 8018a1e:	eb01 040c 	add.w	r4, r1, ip
 8018a22:	e796      	b.n	8018952 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8018a24:	4b03      	ldr	r3, [pc, #12]	@ (8018a34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8018a26:	6818      	ldr	r0, [r3, #0]
 8018a28:	6803      	ldr	r3, [r0, #0]
 8018a2a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018a2c:	4798      	blx	r3
 8018a2e:	e768      	b.n	8018902 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8018a30:	fffff800 	.word	0xfffff800
 8018a34:	20014040 	.word	0x20014040
 8018a38:	20014038 	.word	0x20014038

08018a3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018a3c:	b4f0      	push	{r4, r5, r6, r7}
 8018a3e:	4616      	mov	r6, r2
 8018a40:	2e01      	cmp	r6, #1
 8018a42:	461c      	mov	r4, r3
 8018a44:	460d      	mov	r5, r1
 8018a46:	9a04      	ldr	r2, [sp, #16]
 8018a48:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018a4c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8018a50:	d012      	beq.n	8018a78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8018a52:	d303      	bcc.n	8018a5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8018a54:	2e02      	cmp	r6, #2
 8018a56:	d00a      	beq.n	8018a6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8018a58:	bcf0      	pop	{r4, r5, r6, r7}
 8018a5a:	4770      	bx	lr
 8018a5c:	6805      	ldr	r5, [r0, #0]
 8018a5e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8018a62:	68ed      	ldr	r5, [r5, #12]
 8018a64:	4613      	mov	r3, r2
 8018a66:	46ac      	mov	ip, r5
 8018a68:	4622      	mov	r2, r4
 8018a6a:	bcf0      	pop	{r4, r5, r6, r7}
 8018a6c:	4760      	bx	ip
 8018a6e:	4621      	mov	r1, r4
 8018a70:	4628      	mov	r0, r5
 8018a72:	bcf0      	pop	{r4, r5, r6, r7}
 8018a74:	f7ff bd94 	b.w	80185a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a78:	4621      	mov	r1, r4
 8018a7a:	4628      	mov	r0, r5
 8018a7c:	bcf0      	pop	{r4, r5, r6, r7}
 8018a7e:	f7ff bee5 	b.w	801884c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08018a84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8018a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a88:	4681      	mov	r9, r0
 8018a8a:	b093      	sub	sp, #76	@ 0x4c
 8018a8c:	6810      	ldr	r0, [r2, #0]
 8018a8e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8018a92:	4f6d      	ldr	r7, [pc, #436]	@ (8018c48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018a94:	4688      	mov	r8, r1
 8018a96:	6851      	ldr	r1, [r2, #4]
 8018a98:	ac0e      	add	r4, sp, #56	@ 0x38
 8018a9a:	c403      	stmia	r4!, {r0, r1}
 8018a9c:	6818      	ldr	r0, [r3, #0]
 8018a9e:	6859      	ldr	r1, [r3, #4]
 8018aa0:	ac10      	add	r4, sp, #64	@ 0x40
 8018aa2:	4616      	mov	r6, r2
 8018aa4:	c403      	stmia	r4!, {r0, r1}
 8018aa6:	a80e      	add	r0, sp, #56	@ 0x38
 8018aa8:	f7f7 f8b2 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018aac:	4631      	mov	r1, r6
 8018aae:	a810      	add	r0, sp, #64	@ 0x40
 8018ab0:	f7f7 f8d6 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018ab4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8018ab8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8018abc:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8018ac0:	4e62      	ldr	r6, [pc, #392]	@ (8018c4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018ac2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8018ac6:	6830      	ldr	r0, [r6, #0]
 8018ac8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8018acc:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018ad0:	4489      	add	r9, r1
 8018ad2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8018ad6:	440a      	add	r2, r1
 8018ad8:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8018adc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018ae0:	4413      	add	r3, r2
 8018ae2:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8018ae6:	6803      	ldr	r3, [r0, #0]
 8018ae8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018aea:	4798      	blx	r3
 8018aec:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018af0:	6830      	ldr	r0, [r6, #0]
 8018af2:	d01d      	beq.n	8018b30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8018af4:	2200      	movs	r2, #0
 8018af6:	6801      	ldr	r1, [r0, #0]
 8018af8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8018afc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018b00:	220b      	movs	r2, #11
 8018b02:	9207      	str	r2, [sp, #28]
 8018b04:	883a      	ldrh	r2, [r7, #0]
 8018b06:	9206      	str	r2, [sp, #24]
 8018b08:	2201      	movs	r2, #1
 8018b0a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8018b0e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8018b12:	9203      	str	r2, [sp, #12]
 8018b14:	b2a4      	uxth	r4, r4
 8018b16:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8018b1a:	9200      	str	r2, [sp, #0]
 8018b1c:	b2ad      	uxth	r5, r5
 8018b1e:	9502      	str	r5, [sp, #8]
 8018b20:	9401      	str	r4, [sp, #4]
 8018b22:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 8018b24:	4642      	mov	r2, r8
 8018b26:	4649      	mov	r1, r9
 8018b28:	47a0      	blx	r4
 8018b2a:	b013      	add	sp, #76	@ 0x4c
 8018b2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b30:	6803      	ldr	r3, [r0, #0]
 8018b32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018b34:	4798      	blx	r3
 8018b36:	883b      	ldrh	r3, [r7, #0]
 8018b38:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018b3c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8018b40:	fb03 1202 	mla	r2, r3, r2, r1
 8018b44:	435d      	muls	r5, r3
 8018b46:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018b4a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8018b4e:	920c      	str	r2, [sp, #48]	@ 0x30
 8018b50:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8018b54:	1b12      	subs	r2, r2, r4
 8018b56:	920d      	str	r2, [sp, #52]	@ 0x34
 8018b58:	0062      	lsls	r2, r4, #1
 8018b5a:	1b1c      	subs	r4, r3, r4
 8018b5c:	0063      	lsls	r3, r4, #1
 8018b5e:	920a      	str	r2, [sp, #40]	@ 0x28
 8018b60:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018b62:	f04f 0e04 	mov.w	lr, #4
 8018b66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018b68:	4298      	cmp	r0, r3
 8018b6a:	d266      	bcs.n	8018c3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8018b6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018b6e:	eb00 0b03 	add.w	fp, r0, r3
 8018b72:	4558      	cmp	r0, fp
 8018b74:	d25c      	bcs.n	8018c30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8018b76:	f819 3b01 	ldrb.w	r3, [r9], #1
 8018b7a:	fb1e e303 	smlabb	r3, lr, r3, lr
 8018b7e:	f858 2003 	ldr.w	r2, [r8, r3]
 8018b82:	0e11      	lsrs	r1, r2, #24
 8018b84:	d012      	beq.n	8018bac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018b86:	29ff      	cmp	r1, #255	@ 0xff
 8018b88:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8018b8c:	d110      	bne.n	8018bb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018b8e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018b92:	d10d      	bne.n	8018bb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018b94:	0953      	lsrs	r3, r2, #5
 8018b96:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8018b9a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018b9e:	f027 0707 	bic.w	r7, r7, #7
 8018ba2:	431f      	orrs	r7, r3
 8018ba4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018ba8:	433a      	orrs	r2, r7
 8018baa:	8002      	strh	r2, [r0, #0]
 8018bac:	3002      	adds	r0, #2
 8018bae:	e7e0      	b.n	8018b72 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8018bb0:	fb0a f101 	mul.w	r1, sl, r1
 8018bb4:	8806      	ldrh	r6, [r0, #0]
 8018bb6:	1c4b      	adds	r3, r1, #1
 8018bb8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018bbc:	1235      	asrs	r5, r6, #8
 8018bbe:	10f4      	asrs	r4, r6, #3
 8018bc0:	121b      	asrs	r3, r3, #8
 8018bc2:	00f6      	lsls	r6, r6, #3
 8018bc4:	b299      	uxth	r1, r3
 8018bc6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8018bca:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018bce:	b2f6      	uxtb	r6, r6
 8018bd0:	43db      	mvns	r3, r3
 8018bd2:	b2d2      	uxtb	r2, r2
 8018bd4:	b2db      	uxtb	r3, r3
 8018bd6:	fb1c fc01 	smulbb	ip, ip, r1
 8018bda:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018bde:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018be2:	fb12 f201 	smulbb	r2, r2, r1
 8018be6:	fb05 c503 	mla	r5, r5, r3, ip
 8018bea:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8018bee:	b2ff      	uxtb	r7, r7
 8018bf0:	fb06 2203 	mla	r2, r6, r3, r2
 8018bf4:	b2ad      	uxth	r5, r5
 8018bf6:	fb17 f701 	smulbb	r7, r7, r1
 8018bfa:	b292      	uxth	r2, r2
 8018bfc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8018c00:	fb04 7403 	mla	r4, r4, r3, r7
 8018c04:	f105 0c01 	add.w	ip, r5, #1
 8018c08:	1c57      	adds	r7, r2, #1
 8018c0a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018c0e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018c12:	b2a4      	uxth	r4, r4
 8018c14:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018c18:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018c1c:	433d      	orrs	r5, r7
 8018c1e:	1c67      	adds	r7, r4, #1
 8018c20:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8018c24:	0964      	lsrs	r4, r4, #5
 8018c26:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8018c2a:	4325      	orrs	r5, r4
 8018c2c:	8005      	strh	r5, [r0, #0]
 8018c2e:	e7bd      	b.n	8018bac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018c30:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018c32:	4418      	add	r0, r3
 8018c34:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018c36:	4499      	add	r9, r3
 8018c38:	e795      	b.n	8018b66 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8018c3a:	4b04      	ldr	r3, [pc, #16]	@ (8018c4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018c3c:	6818      	ldr	r0, [r3, #0]
 8018c3e:	6803      	ldr	r3, [r0, #0]
 8018c40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018c42:	4798      	blx	r3
 8018c44:	e771      	b.n	8018b2a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8018c46:	bf00      	nop
 8018c48:	20014038 	.word	0x20014038
 8018c4c:	20014040 	.word	0x20014040

08018c50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8018c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c54:	b087      	sub	sp, #28
 8018c56:	4680      	mov	r8, r0
 8018c58:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8018c5c:	460d      	mov	r5, r1
 8018c5e:	4614      	mov	r4, r2
 8018c60:	2e00      	cmp	r6, #0
 8018c62:	f000 80b9 	beq.w	8018dd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8018c66:	6810      	ldr	r0, [r2, #0]
 8018c68:	6851      	ldr	r1, [r2, #4]
 8018c6a:	af02      	add	r7, sp, #8
 8018c6c:	c703      	stmia	r7!, {r0, r1}
 8018c6e:	6818      	ldr	r0, [r3, #0]
 8018c70:	6859      	ldr	r1, [r3, #4]
 8018c72:	af04      	add	r7, sp, #16
 8018c74:	c703      	stmia	r7!, {r0, r1}
 8018c76:	a802      	add	r0, sp, #8
 8018c78:	f7f6 ffca 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018c7c:	4621      	mov	r1, r4
 8018c7e:	a804      	add	r0, sp, #16
 8018c80:	f7f6 ffee 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018c84:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018c88:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018c8c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8018c90:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018c94:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018c98:	eb08 0401 	add.w	r4, r8, r1
 8018c9c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018ca0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018ca4:	440a      	add	r2, r1
 8018ca6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018caa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018cae:	4413      	add	r3, r2
 8018cb0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018cb4:	4b4a      	ldr	r3, [pc, #296]	@ (8018de0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018cb6:	6818      	ldr	r0, [r3, #0]
 8018cb8:	6803      	ldr	r3, [r0, #0]
 8018cba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018cbc:	4798      	blx	r3
 8018cbe:	4b49      	ldr	r3, [pc, #292]	@ (8018de4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018cc0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018cc4:	881a      	ldrh	r2, [r3, #0]
 8018cc6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018cca:	2eff      	cmp	r6, #255	@ 0xff
 8018ccc:	fb02 c101 	mla	r1, r2, r1, ip
 8018cd0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018cd4:	fb02 f207 	mul.w	r2, r2, r7
 8018cd8:	f105 0104 	add.w	r1, r5, #4
 8018cdc:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018ce0:	461d      	mov	r5, r3
 8018ce2:	d05a      	beq.n	8018d9a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018ce4:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8018ce8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018cec:	b2b6      	uxth	r6, r6
 8018cee:	fa1f fe8e 	uxth.w	lr, lr
 8018cf2:	9301      	str	r3, [sp, #4]
 8018cf4:	4282      	cmp	r2, r0
 8018cf6:	d96a      	bls.n	8018dce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018cf8:	eb00 0b0a 	add.w	fp, r0, sl
 8018cfc:	4583      	cmp	fp, r0
 8018cfe:	d940      	bls.n	8018d82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018d00:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018d04:	8805      	ldrh	r5, [r0, #0]
 8018d06:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018d0a:	122f      	asrs	r7, r5, #8
 8018d0c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018d10:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018d14:	fb17 f70e 	smulbb	r7, r7, lr
 8018d18:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018d1c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018d20:	00ed      	lsls	r5, r5, #3
 8018d22:	fb0c 7c06 	mla	ip, ip, r6, r7
 8018d26:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8018d2a:	10df      	asrs	r7, r3, #3
 8018d2c:	b2ed      	uxtb	r5, r5
 8018d2e:	00db      	lsls	r3, r3, #3
 8018d30:	fa1f fc8c 	uxth.w	ip, ip
 8018d34:	fb19 f90e 	smulbb	r9, r9, lr
 8018d38:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018d3c:	b2db      	uxtb	r3, r3
 8018d3e:	fb15 f50e 	smulbb	r5, r5, lr
 8018d42:	fb07 9706 	mla	r7, r7, r6, r9
 8018d46:	fb03 5306 	mla	r3, r3, r6, r5
 8018d4a:	f10c 0901 	add.w	r9, ip, #1
 8018d4e:	b29b      	uxth	r3, r3
 8018d50:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8018d54:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8018d58:	f103 0c01 	add.w	ip, r3, #1
 8018d5c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018d60:	b2bf      	uxth	r7, r7
 8018d62:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018d66:	ea4c 0c09 	orr.w	ip, ip, r9
 8018d6a:	f107 0901 	add.w	r9, r7, #1
 8018d6e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8018d72:	097f      	lsrs	r7, r7, #5
 8018d74:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018d78:	ea4c 0c07 	orr.w	ip, ip, r7
 8018d7c:	f820 cb02 	strh.w	ip, [r0], #2
 8018d80:	e7bc      	b.n	8018cfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018d82:	9b01      	ldr	r3, [sp, #4]
 8018d84:	881b      	ldrh	r3, [r3, #0]
 8018d86:	eba3 0308 	sub.w	r3, r3, r8
 8018d8a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018d8e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018d92:	eba3 0308 	sub.w	r3, r3, r8
 8018d96:	441c      	add	r4, r3
 8018d98:	e7ac      	b.n	8018cf4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8018d9a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018d9e:	4282      	cmp	r2, r0
 8018da0:	d915      	bls.n	8018dce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018da2:	eb00 060a 	add.w	r6, r0, sl
 8018da6:	4286      	cmp	r6, r0
 8018da8:	d906      	bls.n	8018db8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8018daa:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018dae:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018db2:	f820 3b02 	strh.w	r3, [r0], #2
 8018db6:	e7f6      	b.n	8018da6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018db8:	882b      	ldrh	r3, [r5, #0]
 8018dba:	eba3 0308 	sub.w	r3, r3, r8
 8018dbe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018dc2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018dc6:	eba3 0308 	sub.w	r3, r3, r8
 8018dca:	441c      	add	r4, r3
 8018dcc:	e7e7      	b.n	8018d9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018dce:	4b04      	ldr	r3, [pc, #16]	@ (8018de0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018dd0:	6818      	ldr	r0, [r3, #0]
 8018dd2:	6803      	ldr	r3, [r0, #0]
 8018dd4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018dd6:	4798      	blx	r3
 8018dd8:	b007      	add	sp, #28
 8018dda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dde:	bf00      	nop
 8018de0:	20014040 	.word	0x20014040
 8018de4:	20014038 	.word	0x20014038

08018de8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8018de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018dec:	b091      	sub	sp, #68	@ 0x44
 8018dee:	4680      	mov	r8, r0
 8018df0:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8018df4:	460f      	mov	r7, r1
 8018df6:	4614      	mov	r4, r2
 8018df8:	2d00      	cmp	r5, #0
 8018dfa:	d051      	beq.n	8018ea0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018dfc:	6810      	ldr	r0, [r2, #0]
 8018dfe:	6851      	ldr	r1, [r2, #4]
 8018e00:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8019004 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018e04:	ae0c      	add	r6, sp, #48	@ 0x30
 8018e06:	c603      	stmia	r6!, {r0, r1}
 8018e08:	6818      	ldr	r0, [r3, #0]
 8018e0a:	6859      	ldr	r1, [r3, #4]
 8018e0c:	ae0e      	add	r6, sp, #56	@ 0x38
 8018e0e:	c603      	stmia	r6!, {r0, r1}
 8018e10:	a80c      	add	r0, sp, #48	@ 0x30
 8018e12:	f7f6 fefd 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018e16:	4621      	mov	r1, r4
 8018e18:	a80e      	add	r0, sp, #56	@ 0x38
 8018e1a:	f7f6 ff21 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018e1e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8018e22:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018e26:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8018e2a:	f8d9 0000 	ldr.w	r0, [r9]
 8018e2e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8018e32:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8018e36:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018e3a:	eb08 0401 	add.w	r4, r8, r1
 8018e3e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8018e42:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8019008 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8018e46:	440a      	add	r2, r1
 8018e48:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8018e4c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8018e50:	4413      	add	r3, r2
 8018e52:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8018e56:	6803      	ldr	r3, [r0, #0]
 8018e58:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018e5a:	4798      	blx	r3
 8018e5c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018e60:	f8d9 0000 	ldr.w	r0, [r9]
 8018e64:	d01f      	beq.n	8018ea6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018e66:	2200      	movs	r2, #0
 8018e68:	6801      	ldr	r1, [r0, #0]
 8018e6a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8018e6e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018e72:	220b      	movs	r2, #11
 8018e74:	9207      	str	r2, [sp, #28]
 8018e76:	f8b8 2000 	ldrh.w	r2, [r8]
 8018e7a:	9206      	str	r2, [sp, #24]
 8018e7c:	2201      	movs	r2, #1
 8018e7e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018e82:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8018e86:	9203      	str	r2, [sp, #12]
 8018e88:	fa1f f28a 	uxth.w	r2, sl
 8018e8c:	9202      	str	r2, [sp, #8]
 8018e8e:	b2b6      	uxth	r6, r6
 8018e90:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018e94:	9200      	str	r2, [sp, #0]
 8018e96:	9601      	str	r6, [sp, #4]
 8018e98:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 8018e9a:	463a      	mov	r2, r7
 8018e9c:	4621      	mov	r1, r4
 8018e9e:	47a8      	blx	r5
 8018ea0:	b011      	add	sp, #68	@ 0x44
 8018ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ea6:	6803      	ldr	r3, [r0, #0]
 8018ea8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018eaa:	4798      	blx	r3
 8018eac:	f8b8 2000 	ldrh.w	r2, [r8]
 8018eb0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018eb4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8018eb8:	2dff      	cmp	r5, #255	@ 0xff
 8018eba:	fb02 1303 	mla	r3, r2, r3, r1
 8018ebe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ec2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018ec6:	fb0a fa02 	mul.w	sl, sl, r2
 8018eca:	d062      	beq.n	8018f92 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018ecc:	ea6f 0c05 	mvn.w	ip, r5
 8018ed0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018ed4:	930a      	str	r3, [sp, #40]	@ 0x28
 8018ed6:	b2ad      	uxth	r5, r5
 8018ed8:	fa5f fc8c 	uxtb.w	ip, ip
 8018edc:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8018ee0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018ee2:	4298      	cmp	r0, r3
 8018ee4:	f080 8085 	bcs.w	8018ff2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018ee8:	eb00 0b09 	add.w	fp, r0, r9
 8018eec:	4558      	cmp	r0, fp
 8018eee:	d246      	bcs.n	8018f7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018ef0:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018ef4:	2303      	movs	r3, #3
 8018ef6:	2204      	movs	r2, #4
 8018ef8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018efc:	eb07 0a0e 	add.w	sl, r7, lr
 8018f00:	8803      	ldrh	r3, [r0, #0]
 8018f02:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8018f06:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018f0a:	1219      	asrs	r1, r3, #8
 8018f0c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018f10:	fb18 f805 	smulbb	r8, r8, r5
 8018f14:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018f18:	10da      	asrs	r2, r3, #3
 8018f1a:	fb01 810c 	mla	r1, r1, ip, r8
 8018f1e:	00db      	lsls	r3, r3, #3
 8018f20:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018f24:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018f28:	b2db      	uxtb	r3, r3
 8018f2a:	fb18 f805 	smulbb	r8, r8, r5
 8018f2e:	fb1e fe05 	smulbb	lr, lr, r5
 8018f32:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8018f36:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8018f3a:	b289      	uxth	r1, r1
 8018f3c:	fb02 820c 	mla	r2, r2, ip, r8
 8018f40:	fb03 e30c 	mla	r3, r3, ip, lr
 8018f44:	b292      	uxth	r2, r2
 8018f46:	b29b      	uxth	r3, r3
 8018f48:	f101 0801 	add.w	r8, r1, #1
 8018f4c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8018f50:	f103 0e01 	add.w	lr, r3, #1
 8018f54:	f102 0801 	add.w	r8, r2, #1
 8018f58:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018f5c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8018f60:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018f64:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018f68:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018f6c:	ea4e 0101 	orr.w	r1, lr, r1
 8018f70:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018f74:	ea41 0108 	orr.w	r1, r1, r8
 8018f78:	f820 1b02 	strh.w	r1, [r0], #2
 8018f7c:	e7b6      	b.n	8018eec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8018f7e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018f80:	881b      	ldrh	r3, [r3, #0]
 8018f82:	1b9b      	subs	r3, r3, r6
 8018f84:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018f88:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018f8c:	1b9b      	subs	r3, r3, r6
 8018f8e:	441c      	add	r4, r3
 8018f90:	e7a6      	b.n	8018ee0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018f92:	491b      	ldr	r1, [pc, #108]	@ (8019000 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018f94:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018f98:	2203      	movs	r2, #3
 8018f9a:	2504      	movs	r5, #4
 8018f9c:	4550      	cmp	r0, sl
 8018f9e:	d228      	bcs.n	8018ff2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018fa0:	eb00 0c09 	add.w	ip, r0, r9
 8018fa4:	4560      	cmp	r0, ip
 8018fa6:	4623      	mov	r3, r4
 8018fa8:	d219      	bcs.n	8018fde <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8018faa:	f893 e000 	ldrb.w	lr, [r3]
 8018fae:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018fb2:	eb07 0b0e 	add.w	fp, r7, lr
 8018fb6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018fba:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018fbe:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018fc2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8018fc6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8018fca:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018fce:	ea43 030b 	orr.w	r3, r3, fp
 8018fd2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8018fd6:	3401      	adds	r4, #1
 8018fd8:	f820 3b02 	strh.w	r3, [r0], #2
 8018fdc:	e7e2      	b.n	8018fa4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018fde:	f8b8 3000 	ldrh.w	r3, [r8]
 8018fe2:	1b9b      	subs	r3, r3, r6
 8018fe4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018fe8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018fec:	1b9b      	subs	r3, r3, r6
 8018fee:	441c      	add	r4, r3
 8018ff0:	e7d4      	b.n	8018f9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018ff2:	4b04      	ldr	r3, [pc, #16]	@ (8019004 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018ff4:	6818      	ldr	r0, [r3, #0]
 8018ff6:	6803      	ldr	r3, [r0, #0]
 8018ff8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018ffa:	4798      	blx	r3
 8018ffc:	e750      	b.n	8018ea0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018ffe:	bf00      	nop
 8019000:	fffff800 	.word	0xfffff800
 8019004:	20014040 	.word	0x20014040
 8019008:	20014038 	.word	0x20014038

0801900c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801900c:	b4f0      	push	{r4, r5, r6, r7}
 801900e:	460c      	mov	r4, r1
 8019010:	4611      	mov	r1, r2
 8019012:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8019016:	780f      	ldrb	r7, [r1, #0]
 8019018:	784e      	ldrb	r6, [r1, #1]
 801901a:	2f01      	cmp	r7, #1
 801901c:	461a      	mov	r2, r3
 801901e:	9b04      	ldr	r3, [sp, #16]
 8019020:	d038      	beq.n	8019094 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8019022:	d31f      	bcc.n	8019064 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8019024:	2f02      	cmp	r7, #2
 8019026:	d14d      	bne.n	80190c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019028:	2e03      	cmp	r6, #3
 801902a:	d84b      	bhi.n	80190c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801902c:	e8df f006 	tbb	[pc, r6]
 8019030:	17140702 	.word	0x17140702
 8019034:	9504      	str	r5, [sp, #16]
 8019036:	4620      	mov	r0, r4
 8019038:	bcf0      	pop	{r4, r5, r6, r7}
 801903a:	f7ff be09 	b.w	8018c50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801903e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8019040:	2800      	cmp	r0, #0
 8019042:	d03f      	beq.n	80190c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019044:	6806      	ldr	r6, [r0, #0]
 8019046:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801904a:	68b5      	ldr	r5, [r6, #8]
 801904c:	4613      	mov	r3, r2
 801904e:	46ac      	mov	ip, r5
 8019050:	460a      	mov	r2, r1
 8019052:	4621      	mov	r1, r4
 8019054:	bcf0      	pop	{r4, r5, r6, r7}
 8019056:	4760      	bx	ip
 8019058:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801905c:	e7f0      	b.n	8019040 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801905e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8019062:	e7ed      	b.n	8019040 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8019064:	2e03      	cmp	r6, #3
 8019066:	d82d      	bhi.n	80190c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019068:	e8df f006 	tbb	[pc, r6]
 801906c:	110e0702 	.word	0x110e0702
 8019070:	9504      	str	r5, [sp, #16]
 8019072:	4620      	mov	r0, r4
 8019074:	bcf0      	pop	{r4, r5, r6, r7}
 8019076:	f7ff bd05 	b.w	8018a84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801907a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801907c:	b310      	cbz	r0, 80190c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801907e:	6806      	ldr	r6, [r0, #0]
 8019080:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8019084:	68f5      	ldr	r5, [r6, #12]
 8019086:	e7e1      	b.n	801904c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8019088:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801908c:	e7f6      	b.n	801907c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801908e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8019092:	e7f3      	b.n	801907c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8019094:	2e03      	cmp	r6, #3
 8019096:	d815      	bhi.n	80190c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019098:	e8df f006 	tbb	[pc, r6]
 801909c:	110e0702 	.word	0x110e0702
 80190a0:	9504      	str	r5, [sp, #16]
 80190a2:	4620      	mov	r0, r4
 80190a4:	bcf0      	pop	{r4, r5, r6, r7}
 80190a6:	f7ff be9f 	b.w	8018de8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80190aa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80190ac:	b150      	cbz	r0, 80190c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80190ae:	6806      	ldr	r6, [r0, #0]
 80190b0:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80190b4:	6935      	ldr	r5, [r6, #16]
 80190b6:	e7c9      	b.n	801904c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80190b8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80190bc:	e7f6      	b.n	80190ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80190be:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80190c2:	e7f3      	b.n	80190ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80190c4:	bcf0      	pop	{r4, r5, r6, r7}
 80190c6:	4770      	bx	lr

080190c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80190c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190cc:	4604      	mov	r4, r0
 80190ce:	b087      	sub	sp, #28
 80190d0:	6810      	ldr	r0, [r2, #0]
 80190d2:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 80190d6:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8019310 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80190da:	460e      	mov	r6, r1
 80190dc:	6851      	ldr	r1, [r2, #4]
 80190de:	ad02      	add	r5, sp, #8
 80190e0:	c503      	stmia	r5!, {r0, r1}
 80190e2:	6818      	ldr	r0, [r3, #0]
 80190e4:	6859      	ldr	r1, [r3, #4]
 80190e6:	ad04      	add	r5, sp, #16
 80190e8:	4617      	mov	r7, r2
 80190ea:	c503      	stmia	r5!, {r0, r1}
 80190ec:	a802      	add	r0, sp, #8
 80190ee:	f7f6 fd8f 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80190f2:	4639      	mov	r1, r7
 80190f4:	a804      	add	r0, sp, #16
 80190f6:	f7f6 fdb3 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80190fa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80190fe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019102:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8019106:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801910a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801910e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019112:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8019116:	440e      	add	r6, r1
 8019118:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801911c:	440a      	add	r2, r1
 801911e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019122:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019126:	4413      	add	r3, r2
 8019128:	f8ad 3012 	strh.w	r3, [sp, #18]
 801912c:	4b77      	ldr	r3, [pc, #476]	@ (801930c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801912e:	6818      	ldr	r0, [r3, #0]
 8019130:	6803      	ldr	r3, [r0, #0]
 8019132:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019134:	4798      	blx	r3
 8019136:	f8b9 b000 	ldrh.w	fp, [r9]
 801913a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801913e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019142:	fb0b 2303 	mla	r3, fp, r3, r2
 8019146:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801914a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801914e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8019152:	fb05 f50b 	mul.w	r5, r5, fp
 8019156:	9300      	str	r3, [sp, #0]
 8019158:	d069      	beq.n	801922e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801915a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801915e:	4558      	cmp	r0, fp
 8019160:	f080 80cc 	bcs.w	80192fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8019164:	9b00      	ldr	r3, [sp, #0]
 8019166:	18c3      	adds	r3, r0, r3
 8019168:	9301      	str	r3, [sp, #4]
 801916a:	4631      	mov	r1, r6
 801916c:	9b01      	ldr	r3, [sp, #4]
 801916e:	4298      	cmp	r0, r3
 8019170:	d24f      	bcs.n	8019212 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8019172:	f811 2b01 	ldrb.w	r2, [r1], #1
 8019176:	2a00      	cmp	r2, #0
 8019178:	d048      	beq.n	801920c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801917a:	fb0a f202 	mul.w	r2, sl, r2
 801917e:	1c53      	adds	r3, r2, #1
 8019180:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019184:	121b      	asrs	r3, r3, #8
 8019186:	d041      	beq.n	801920c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019188:	8802      	ldrh	r2, [r0, #0]
 801918a:	f8b4 c000 	ldrh.w	ip, [r4]
 801918e:	b29e      	uxth	r6, r3
 8019190:	1215      	asrs	r5, r2, #8
 8019192:	43db      	mvns	r3, r3
 8019194:	b2db      	uxtb	r3, r3
 8019196:	ea4f 272c 	mov.w	r7, ip, asr #8
 801919a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801919e:	fb15 f503 	smulbb	r5, r5, r3
 80191a2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80191a6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80191aa:	00d2      	lsls	r2, r2, #3
 80191ac:	fb07 5706 	mla	r7, r7, r6, r5
 80191b0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80191b4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80191b8:	b2d2      	uxtb	r2, r2
 80191ba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80191be:	b2bf      	uxth	r7, r7
 80191c0:	fb1e fe03 	smulbb	lr, lr, r3
 80191c4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80191c8:	fa5f fc8c 	uxtb.w	ip, ip
 80191cc:	fb12 f203 	smulbb	r2, r2, r3
 80191d0:	fb05 e506 	mla	r5, r5, r6, lr
 80191d4:	fb0c 2c06 	mla	ip, ip, r6, r2
 80191d8:	f107 0e01 	add.w	lr, r7, #1
 80191dc:	fa1f fc8c 	uxth.w	ip, ip
 80191e0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80191e4:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 80191e8:	f10c 0701 	add.w	r7, ip, #1
 80191ec:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80191f0:	b2ad      	uxth	r5, r5
 80191f2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80191f6:	ea47 070e 	orr.w	r7, r7, lr
 80191fa:	f105 0e01 	add.w	lr, r5, #1
 80191fe:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8019202:	096d      	lsrs	r5, r5, #5
 8019204:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019208:	432f      	orrs	r7, r5
 801920a:	8007      	strh	r7, [r0, #0]
 801920c:	3002      	adds	r0, #2
 801920e:	3402      	adds	r4, #2
 8019210:	e7ac      	b.n	801916c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8019212:	f8b9 3000 	ldrh.w	r3, [r9]
 8019216:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801921a:	eba3 0308 	sub.w	r3, r3, r8
 801921e:	eba6 0608 	sub.w	r6, r6, r8
 8019222:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8019226:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801922a:	440e      	add	r6, r1
 801922c:	e797      	b.n	801915e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801922e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8019232:	42a8      	cmp	r0, r5
 8019234:	d262      	bcs.n	80192fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8019236:	9b00      	ldr	r3, [sp, #0]
 8019238:	4631      	mov	r1, r6
 801923a:	eb00 0b03 	add.w	fp, r0, r3
 801923e:	4558      	cmp	r0, fp
 8019240:	d24e      	bcs.n	80192e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8019242:	f811 3b01 	ldrb.w	r3, [r1], #1
 8019246:	b12b      	cbz	r3, 8019254 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8019248:	2bff      	cmp	r3, #255	@ 0xff
 801924a:	f8b4 e000 	ldrh.w	lr, [r4]
 801924e:	d104      	bne.n	801925a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8019250:	f8a0 e000 	strh.w	lr, [r0]
 8019254:	3002      	adds	r0, #2
 8019256:	3402      	adds	r4, #2
 8019258:	e7f1      	b.n	801923e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801925a:	8802      	ldrh	r2, [r0, #0]
 801925c:	b29f      	uxth	r7, r3
 801925e:	1216      	asrs	r6, r2, #8
 8019260:	43db      	mvns	r3, r3
 8019262:	b2db      	uxtb	r3, r3
 8019264:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019268:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801926c:	fb16 f603 	smulbb	r6, r6, r3
 8019270:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8019274:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019278:	00d2      	lsls	r2, r2, #3
 801927a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801927e:	b2d2      	uxtb	r2, r2
 8019280:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019284:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019288:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801928c:	fb1a fa03 	smulbb	sl, sl, r3
 8019290:	fa1f fc8c 	uxth.w	ip, ip
 8019294:	fb12 f303 	smulbb	r3, r2, r3
 8019298:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801929c:	fa5f fe8e 	uxtb.w	lr, lr
 80192a0:	fb06 a607 	mla	r6, r6, r7, sl
 80192a4:	f10c 0201 	add.w	r2, ip, #1
 80192a8:	fb0e 3307 	mla	r3, lr, r7, r3
 80192ac:	b2b6      	uxth	r6, r6
 80192ae:	b29b      	uxth	r3, r3
 80192b0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80192b4:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80192b8:	f106 0a01 	add.w	sl, r6, #1
 80192bc:	f103 0c01 	add.w	ip, r3, #1
 80192c0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80192c4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80192c8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80192cc:	0976      	lsrs	r6, r6, #5
 80192ce:	ea4c 0c02 	orr.w	ip, ip, r2
 80192d2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80192d6:	ea4c 0c06 	orr.w	ip, ip, r6
 80192da:	f8a0 c000 	strh.w	ip, [r0]
 80192de:	e7b9      	b.n	8019254 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80192e0:	f8b9 3000 	ldrh.w	r3, [r9]
 80192e4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80192e8:	eba3 0308 	sub.w	r3, r3, r8
 80192ec:	eba6 0608 	sub.w	r6, r6, r8
 80192f0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80192f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80192f8:	440e      	add	r6, r1
 80192fa:	e79a      	b.n	8019232 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80192fc:	4b03      	ldr	r3, [pc, #12]	@ (801930c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80192fe:	6818      	ldr	r0, [r3, #0]
 8019300:	6803      	ldr	r3, [r0, #0]
 8019302:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019304:	4798      	blx	r3
 8019306:	b007      	add	sp, #28
 8019308:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801930c:	20014040 	.word	0x20014040
 8019310:	20014038 	.word	0x20014038

08019314 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8019314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019318:	b089      	sub	sp, #36	@ 0x24
 801931a:	4607      	mov	r7, r0
 801931c:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8019320:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019322:	4688      	mov	r8, r1
 8019324:	4692      	mov	sl, r2
 8019326:	4699      	mov	r9, r3
 8019328:	2e00      	cmp	r6, #0
 801932a:	d048      	beq.n	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801932c:	4608      	mov	r0, r1
 801932e:	f7fa f81d 	bl	801336c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019332:	4605      	mov	r5, r0
 8019334:	4640      	mov	r0, r8
 8019336:	f7fa f84d 	bl	80133d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801933a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801933e:	4640      	mov	r0, r8
 8019340:	f8ad a008 	strh.w	sl, [sp, #8]
 8019344:	f8ad 500c 	strh.w	r5, [sp, #12]
 8019348:	f8ad 900a 	strh.w	r9, [sp, #10]
 801934c:	f7fa f900 	bl	8013550 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019350:	4605      	mov	r5, r0
 8019352:	4640      	mov	r0, r8
 8019354:	f7fa f92c 	bl	80135b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8019358:	4682      	mov	sl, r0
 801935a:	4640      	mov	r0, r8
 801935c:	f7fa f97c 	bl	8013658 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019360:	2810      	cmp	r0, #16
 8019362:	d82c      	bhi.n	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019364:	e8df f010 	tbh	[pc, r0, lsl #1]
 8019368:	00ba00ca 	.word	0x00ba00ca
 801936c:	002b0011 	.word	0x002b0011
 8019370:	002b002b 	.word	0x002b002b
 8019374:	002b002b 	.word	0x002b002b
 8019378:	002b002b 	.word	0x002b002b
 801937c:	00c1002b 	.word	0x00c1002b
 8019380:	002b002b 	.word	0x002b002b
 8019384:	002b0180 	.word	0x002b0180
 8019388:	0173      	.short	0x0173
 801938a:	4bbc      	ldr	r3, [pc, #752]	@ (801967c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801938c:	6818      	ldr	r0, [r3, #0]
 801938e:	6803      	ldr	r3, [r0, #0]
 8019390:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019392:	4798      	blx	r3
 8019394:	2eff      	cmp	r6, #255	@ 0xff
 8019396:	d101      	bne.n	801939c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8019398:	0683      	lsls	r3, r0, #26
 801939a:	d506      	bpl.n	80193aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801939c:	4633      	mov	r3, r6
 801939e:	4622      	mov	r2, r4
 80193a0:	a902      	add	r1, sp, #8
 80193a2:	4628      	mov	r0, r5
 80193a4:	f7ff f8fc 	bl	80185a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80193a8:	e009      	b.n	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80193aa:	4640      	mov	r0, r8
 80193ac:	f7fa f898 	bl	80134e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80193b0:	b940      	cbnz	r0, 80193c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 80193b2:	4623      	mov	r3, r4
 80193b4:	aa02      	add	r2, sp, #8
 80193b6:	4629      	mov	r1, r5
 80193b8:	4638      	mov	r0, r7
 80193ba:	f7ff f9d7 	bl	801876c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80193be:	b009      	add	sp, #36	@ 0x24
 80193c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193c4:	f10d 0918 	add.w	r9, sp, #24
 80193c8:	4641      	mov	r1, r8
 80193ca:	4648      	mov	r0, r9
 80193cc:	f7fa f836 	bl	801343c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80193d0:	e899 0003 	ldmia.w	r9, {r0, r1}
 80193d4:	f10d 0810 	add.w	r8, sp, #16
 80193d8:	e888 0003 	stmia.w	r8, {r0, r1}
 80193dc:	4640      	mov	r0, r8
 80193de:	4621      	mov	r1, r4
 80193e0:	f7f1 fca6 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 80193e4:	4640      	mov	r0, r8
 80193e6:	f7f1 fce6 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80193ea:	2800      	cmp	r0, #0
 80193ec:	d1d6      	bne.n	801939c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80193ee:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80193f2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80193f6:	4293      	cmp	r3, r2
 80193f8:	dd12      	ble.n	8019420 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 80193fa:	1a9b      	subs	r3, r3, r2
 80193fc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019400:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019404:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019408:	f8ad 201a 	strh.w	r2, [sp, #26]
 801940c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019410:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019414:	464a      	mov	r2, r9
 8019416:	4633      	mov	r3, r6
 8019418:	a902      	add	r1, sp, #8
 801941a:	4628      	mov	r0, r5
 801941c:	f7ff f8c0 	bl	80185a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019420:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019424:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019428:	4293      	cmp	r3, r2
 801942a:	dd12      	ble.n	8019452 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801942c:	1a9b      	subs	r3, r3, r2
 801942e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019432:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019436:	f8ad 2018 	strh.w	r2, [sp, #24]
 801943a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801943e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019442:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019446:	23ff      	movs	r3, #255	@ 0xff
 8019448:	464a      	mov	r2, r9
 801944a:	a902      	add	r1, sp, #8
 801944c:	4628      	mov	r0, r5
 801944e:	f7ff f8a7 	bl	80185a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019452:	4643      	mov	r3, r8
 8019454:	aa02      	add	r2, sp, #8
 8019456:	4629      	mov	r1, r5
 8019458:	4638      	mov	r0, r7
 801945a:	f7ff f987 	bl	801876c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801945e:	88a2      	ldrh	r2, [r4, #4]
 8019460:	8823      	ldrh	r3, [r4, #0]
 8019462:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019466:	4413      	add	r3, r2
 8019468:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801946c:	440a      	add	r2, r1
 801946e:	b29b      	uxth	r3, r3
 8019470:	b292      	uxth	r2, r2
 8019472:	b211      	sxth	r1, r2
 8019474:	b218      	sxth	r0, r3
 8019476:	4288      	cmp	r0, r1
 8019478:	dd12      	ble.n	80194a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801947a:	1a9b      	subs	r3, r3, r2
 801947c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019480:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8019484:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019488:	f8ad 301c 	strh.w	r3, [sp, #28]
 801948c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019490:	23ff      	movs	r3, #255	@ 0xff
 8019492:	464a      	mov	r2, r9
 8019494:	a902      	add	r1, sp, #8
 8019496:	4628      	mov	r0, r5
 8019498:	f8ad 601a 	strh.w	r6, [sp, #26]
 801949c:	f7ff f880 	bl	80185a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80194a0:	88e2      	ldrh	r2, [r4, #6]
 80194a2:	8863      	ldrh	r3, [r4, #2]
 80194a4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80194a8:	4413      	add	r3, r2
 80194aa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80194ae:	440a      	add	r2, r1
 80194b0:	b29b      	uxth	r3, r3
 80194b2:	b292      	uxth	r2, r2
 80194b4:	b211      	sxth	r1, r2
 80194b6:	b218      	sxth	r0, r3
 80194b8:	4288      	cmp	r0, r1
 80194ba:	dd80      	ble.n	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80194bc:	1a9b      	subs	r3, r3, r2
 80194be:	f9b4 6000 	ldrsh.w	r6, [r4]
 80194c2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80194c6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80194ca:	f8ad 6018 	strh.w	r6, [sp, #24]
 80194ce:	f8ad 101a 	strh.w	r1, [sp, #26]
 80194d2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80194d6:	23ff      	movs	r3, #255	@ 0xff
 80194d8:	464a      	mov	r2, r9
 80194da:	e761      	b.n	80193a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 80194dc:	4633      	mov	r3, r6
 80194de:	4622      	mov	r2, r4
 80194e0:	a902      	add	r1, sp, #8
 80194e2:	4628      	mov	r0, r5
 80194e4:	f7ff f9b2 	bl	801884c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80194e8:	e769      	b.n	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80194ea:	e9cd 4600 	strd	r4, r6, [sp]
 80194ee:	ab02      	add	r3, sp, #8
 80194f0:	4652      	mov	r2, sl
 80194f2:	4629      	mov	r1, r5
 80194f4:	4638      	mov	r0, r7
 80194f6:	f7ff fd89 	bl	801900c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80194fa:	e760      	b.n	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80194fc:	4640      	mov	r0, r8
 80194fe:	f7f9 ffef 	bl	80134e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019502:	b948      	cbnz	r0, 8019518 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8019504:	683b      	ldr	r3, [r7, #0]
 8019506:	e9cd 6000 	strd	r6, r0, [sp]
 801950a:	aa02      	add	r2, sp, #8
 801950c:	68de      	ldr	r6, [r3, #12]
 801950e:	4629      	mov	r1, r5
 8019510:	4623      	mov	r3, r4
 8019512:	4638      	mov	r0, r7
 8019514:	47b0      	blx	r6
 8019516:	e752      	b.n	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019518:	f10d 0918 	add.w	r9, sp, #24
 801951c:	4641      	mov	r1, r8
 801951e:	4648      	mov	r0, r9
 8019520:	f7f9 ff8c 	bl	801343c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019524:	e899 0003 	ldmia.w	r9, {r0, r1}
 8019528:	f10d 0810 	add.w	r8, sp, #16
 801952c:	e888 0003 	stmia.w	r8, {r0, r1}
 8019530:	4640      	mov	r0, r8
 8019532:	4621      	mov	r1, r4
 8019534:	f7f1 fbfc 	bl	800ad30 <_ZN8touchgfx4RectaNERKS0_>
 8019538:	4640      	mov	r0, r8
 801953a:	f7f1 fc3c 	bl	800adb6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801953e:	b138      	cbz	r0, 8019550 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8019540:	9600      	str	r6, [sp, #0]
 8019542:	4623      	mov	r3, r4
 8019544:	aa02      	add	r2, sp, #8
 8019546:	4651      	mov	r1, sl
 8019548:	4628      	mov	r0, r5
 801954a:	f7ff fdbd 	bl	80190c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801954e:	e736      	b.n	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019550:	683b      	ldr	r3, [r7, #0]
 8019552:	e9cd 6000 	strd	r6, r0, [sp]
 8019556:	aa02      	add	r2, sp, #8
 8019558:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801955c:	4629      	mov	r1, r5
 801955e:	4643      	mov	r3, r8
 8019560:	4638      	mov	r0, r7
 8019562:	47d8      	blx	fp
 8019564:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019568:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801956c:	4293      	cmp	r3, r2
 801956e:	dd13      	ble.n	8019598 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8019570:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019574:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019578:	f8ad 0018 	strh.w	r0, [sp, #24]
 801957c:	1a9b      	subs	r3, r3, r2
 801957e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019582:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019586:	f8ad 301e 	strh.w	r3, [sp, #30]
 801958a:	9600      	str	r6, [sp, #0]
 801958c:	464b      	mov	r3, r9
 801958e:	aa02      	add	r2, sp, #8
 8019590:	4651      	mov	r1, sl
 8019592:	4628      	mov	r0, r5
 8019594:	f7ff fd98 	bl	80190c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019598:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801959c:	f9b4 2000 	ldrsh.w	r2, [r4]
 80195a0:	4293      	cmp	r3, r2
 80195a2:	dd13      	ble.n	80195cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 80195a4:	1a9b      	subs	r3, r3, r2
 80195a6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80195aa:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80195ae:	f8ad 2018 	strh.w	r2, [sp, #24]
 80195b2:	f8ad 001a 	strh.w	r0, [sp, #26]
 80195b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80195ba:	f8ad 101e 	strh.w	r1, [sp, #30]
 80195be:	9600      	str	r6, [sp, #0]
 80195c0:	464b      	mov	r3, r9
 80195c2:	aa02      	add	r2, sp, #8
 80195c4:	4651      	mov	r1, sl
 80195c6:	4628      	mov	r0, r5
 80195c8:	f7ff fd7e 	bl	80190c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80195cc:	88a2      	ldrh	r2, [r4, #4]
 80195ce:	8823      	ldrh	r3, [r4, #0]
 80195d0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80195d4:	4413      	add	r3, r2
 80195d6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80195da:	440a      	add	r2, r1
 80195dc:	b29b      	uxth	r3, r3
 80195de:	b292      	uxth	r2, r2
 80195e0:	b211      	sxth	r1, r2
 80195e2:	b218      	sxth	r0, r3
 80195e4:	4288      	cmp	r0, r1
 80195e6:	dd13      	ble.n	8019610 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 80195e8:	1a9b      	subs	r3, r3, r2
 80195ea:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80195ee:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80195f2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80195f6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80195fa:	f8ad 001e 	strh.w	r0, [sp, #30]
 80195fe:	9600      	str	r6, [sp, #0]
 8019600:	464b      	mov	r3, r9
 8019602:	aa02      	add	r2, sp, #8
 8019604:	4651      	mov	r1, sl
 8019606:	4628      	mov	r0, r5
 8019608:	f8ad 701a 	strh.w	r7, [sp, #26]
 801960c:	f7ff fd5c 	bl	80190c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019610:	88e2      	ldrh	r2, [r4, #6]
 8019612:	8863      	ldrh	r3, [r4, #2]
 8019614:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019618:	4413      	add	r3, r2
 801961a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801961e:	440a      	add	r2, r1
 8019620:	b29b      	uxth	r3, r3
 8019622:	b292      	uxth	r2, r2
 8019624:	b211      	sxth	r1, r2
 8019626:	b218      	sxth	r0, r3
 8019628:	4288      	cmp	r0, r1
 801962a:	f77f aec8 	ble.w	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801962e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8019632:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019636:	f8ad 7018 	strh.w	r7, [sp, #24]
 801963a:	1a9b      	subs	r3, r3, r2
 801963c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019640:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019644:	f8ad 001c 	strh.w	r0, [sp, #28]
 8019648:	9600      	str	r6, [sp, #0]
 801964a:	464b      	mov	r3, r9
 801964c:	e77a      	b.n	8019544 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801964e:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8019652:	2800      	cmp	r0, #0
 8019654:	f43f aeb3 	beq.w	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019658:	6803      	ldr	r3, [r0, #0]
 801965a:	9600      	str	r6, [sp, #0]
 801965c:	68de      	ldr	r6, [r3, #12]
 801965e:	4623      	mov	r3, r4
 8019660:	aa02      	add	r2, sp, #8
 8019662:	4629      	mov	r1, r5
 8019664:	47b0      	blx	r6
 8019666:	e6aa      	b.n	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019668:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801966c:	2800      	cmp	r0, #0
 801966e:	f43f aea6 	beq.w	80193be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019672:	6803      	ldr	r3, [r0, #0]
 8019674:	9600      	str	r6, [sp, #0]
 8019676:	689e      	ldr	r6, [r3, #8]
 8019678:	e7f1      	b.n	801965e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801967a:	bf00      	nop
 801967c:	20014040 	.word	0x20014040

08019680 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8019680:	b180      	cbz	r0, 80196a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8019682:	2903      	cmp	r1, #3
 8019684:	d81c      	bhi.n	80196c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8019686:	e8df f001 	tbb	[pc, r1]
 801968a:	1d02      	.short	0x1d02
 801968c:	1f08      	.short	0x1f08
 801968e:	4b10      	ldr	r3, [pc, #64]	@ (80196d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019690:	8818      	ldrh	r0, [r3, #0]
 8019692:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019696:	4240      	negs	r0, r0
 8019698:	4770      	bx	lr
 801969a:	4b0d      	ldr	r3, [pc, #52]	@ (80196d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801969c:	8818      	ldrh	r0, [r3, #0]
 801969e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80196a2:	4770      	bx	lr
 80196a4:	2903      	cmp	r1, #3
 80196a6:	d80b      	bhi.n	80196c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80196a8:	a301      	add	r3, pc, #4	@ (adr r3, 80196b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80196aa:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80196ae:	bf00      	nop
 80196b0:	080196c5 	.word	0x080196c5
 80196b4:	0801969b 	.word	0x0801969b
 80196b8:	080196c9 	.word	0x080196c9
 80196bc:	0801968f 	.word	0x0801968f
 80196c0:	2000      	movs	r0, #0
 80196c2:	4770      	bx	lr
 80196c4:	2001      	movs	r0, #1
 80196c6:	4770      	bx	lr
 80196c8:	f04f 30ff 	mov.w	r0, #4294967295
 80196cc:	4770      	bx	lr
 80196ce:	bf00      	nop
 80196d0:	20014038 	.word	0x20014038

080196d4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80196d4:	b180      	cbz	r0, 80196f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80196d6:	2903      	cmp	r1, #3
 80196d8:	d81c      	bhi.n	8019714 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80196da:	e8df f001 	tbb	[pc, r1]
 80196de:	021d      	.short	0x021d
 80196e0:	071f      	.short	0x071f
 80196e2:	4b10      	ldr	r3, [pc, #64]	@ (8019724 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80196e4:	8818      	ldrh	r0, [r3, #0]
 80196e6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80196ea:	4770      	bx	lr
 80196ec:	4b0d      	ldr	r3, [pc, #52]	@ (8019724 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80196ee:	8818      	ldrh	r0, [r3, #0]
 80196f0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80196f4:	4240      	negs	r0, r0
 80196f6:	4770      	bx	lr
 80196f8:	2903      	cmp	r1, #3
 80196fa:	d80b      	bhi.n	8019714 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80196fc:	a301      	add	r3, pc, #4	@ (adr r3, 8019704 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80196fe:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019702:	bf00      	nop
 8019704:	080196e3 	.word	0x080196e3
 8019708:	0801971d 	.word	0x0801971d
 801970c:	080196ed 	.word	0x080196ed
 8019710:	08019719 	.word	0x08019719
 8019714:	2000      	movs	r0, #0
 8019716:	4770      	bx	lr
 8019718:	2001      	movs	r0, #1
 801971a:	4770      	bx	lr
 801971c:	f04f 30ff 	mov.w	r0, #4294967295
 8019720:	4770      	bx	lr
 8019722:	bf00      	nop
 8019724:	20014038 	.word	0x20014038

08019728 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8019728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801972c:	b099      	sub	sp, #100	@ 0x64
 801972e:	910d      	str	r1, [sp, #52]	@ 0x34
 8019730:	a914      	add	r1, sp, #80	@ 0x50
 8019732:	e881 000c 	stmia.w	r1, {r2, r3}
 8019736:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801973a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801973c:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8019740:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8019744:	9310      	str	r3, [sp, #64]	@ 0x40
 8019746:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801974a:	9308      	str	r3, [sp, #32]
 801974c:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8019750:	9309      	str	r3, [sp, #36]	@ 0x24
 8019752:	7b4b      	ldrb	r3, [r1, #13]
 8019754:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8019758:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801975c:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8019760:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8019762:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8019766:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801976a:	ea4f 1843 	mov.w	r8, r3, lsl #5
 801976e:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8019772:	f891 8006 	ldrb.w	r8, [r1, #6]
 8019776:	ea58 0800 	orrs.w	r8, r8, r0
 801977a:	f000 81ce 	beq.w	8019b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801977e:	011b      	lsls	r3, r3, #4
 8019780:	79c8      	ldrb	r0, [r1, #7]
 8019782:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8019786:	4303      	orrs	r3, r0
 8019788:	930c      	str	r3, [sp, #48]	@ 0x30
 801978a:	f000 81c6 	beq.w	8019b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801978e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8019792:	b29b      	uxth	r3, r3
 8019794:	2d00      	cmp	r5, #0
 8019796:	f000 812c 	beq.w	80199f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 801979a:	1aed      	subs	r5, r5, r3
 801979c:	b2ad      	uxth	r5, r5
 801979e:	0429      	lsls	r1, r5, #16
 80197a0:	d502      	bpl.n	80197a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 80197a2:	1b64      	subs	r4, r4, r5
 80197a4:	b224      	sxth	r4, r4
 80197a6:	2500      	movs	r5, #0
 80197a8:	f9b2 0000 	ldrsh.w	r0, [r2]
 80197ac:	8891      	ldrh	r1, [r2, #4]
 80197ae:	4284      	cmp	r4, r0
 80197b0:	b283      	uxth	r3, r0
 80197b2:	bfb8      	it	lt
 80197b4:	18ed      	addlt	r5, r5, r3
 80197b6:	440b      	add	r3, r1
 80197b8:	b21b      	sxth	r3, r3
 80197ba:	930a      	str	r3, [sp, #40]	@ 0x28
 80197bc:	88d3      	ldrh	r3, [r2, #6]
 80197be:	8852      	ldrh	r2, [r2, #2]
 80197c0:	4413      	add	r3, r2
 80197c2:	b21b      	sxth	r3, r3
 80197c4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80197c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80197c8:	930e      	str	r3, [sp, #56]	@ 0x38
 80197ca:	bfb8      	it	lt
 80197cc:	1b2c      	sublt	r4, r5, r4
 80197ce:	4bb5      	ldr	r3, [pc, #724]	@ (8019aa4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 80197d0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80197d2:	f893 b000 	ldrb.w	fp, [r3]
 80197d6:	bfbc      	itt	lt
 80197d8:	b2a5      	uxthlt	r5, r4
 80197da:	4604      	movlt	r4, r0
 80197dc:	4653      	mov	r3, sl
 80197de:	4621      	mov	r1, r4
 80197e0:	a814      	add	r0, sp, #80	@ 0x50
 80197e2:	f7f6 f889 	bl	800f8f8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80197e6:	4621      	mov	r1, r4
 80197e8:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 80197ec:	4653      	mov	r3, sl
 80197ee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80197f0:	a814      	add	r0, sp, #80	@ 0x50
 80197f2:	f7f6 f89e 	bl	800f932 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80197f6:	a918      	add	r1, sp, #96	@ 0x60
 80197f8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80197fc:	a817      	add	r0, sp, #92	@ 0x5c
 80197fe:	f7f6 f9c5 	bl	800fb8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8019802:	f1ba 0f00 	cmp.w	sl, #0
 8019806:	f040 80f7 	bne.w	80199f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 801980a:	f1bb 0f01 	cmp.w	fp, #1
 801980e:	f040 80fb 	bne.w	8019a08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 8019812:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019814:	2b00      	cmp	r3, #0
 8019816:	f040 81a8 	bne.w	8019b6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 801981a:	fa1f f288 	uxth.w	r2, r8
 801981e:	b905      	cbnz	r5, 8019822 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 8019820:	b15e      	cbz	r6, 801983a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8019822:	9808      	ldr	r0, [sp, #32]
 8019824:	fb06 5302 	mla	r3, r6, r2, r5
 8019828:	4343      	muls	r3, r0
 801982a:	4631      	mov	r1, r6
 801982c:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8019830:	f003 0607 	and.w	r6, r3, #7
 8019834:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019836:	1a5b      	subs	r3, r3, r1
 8019838:	930e      	str	r3, [sp, #56]	@ 0x38
 801983a:	f10b 31ff 	add.w	r1, fp, #4294967295
 801983e:	424b      	negs	r3, r1
 8019840:	414b      	adcs	r3, r1
 8019842:	4618      	mov	r0, r3
 8019844:	4651      	mov	r1, sl
 8019846:	930c      	str	r3, [sp, #48]	@ 0x30
 8019848:	f7ff ff1a 	bl	8019680 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801984c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801984e:	4683      	mov	fp, r0
 8019850:	4618      	mov	r0, r3
 8019852:	f7ff ff3f 	bl	80196d4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8019856:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019858:	4603      	mov	r3, r0
 801985a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801985c:	eba1 0a00 	sub.w	sl, r1, r0
 8019860:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019862:	458a      	cmp	sl, r1
 8019864:	bfa8      	it	ge
 8019866:	468a      	movge	sl, r1
 8019868:	f1ba 0f00 	cmp.w	sl, #0
 801986c:	f340 8155 	ble.w	8019b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019870:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019872:	1b64      	subs	r4, r4, r5
 8019874:	1b0c      	subs	r4, r1, r4
 8019876:	4544      	cmp	r4, r8
 8019878:	bfd4      	ite	le
 801987a:	ebc5 0504 	rsble	r5, r5, r4
 801987e:	ebc5 0508 	rsbgt	r5, r5, r8
 8019882:	2d00      	cmp	r5, #0
 8019884:	f340 8149 	ble.w	8019b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019888:	9908      	ldr	r1, [sp, #32]
 801988a:	1b52      	subs	r2, r2, r5
 801988c:	434a      	muls	r2, r1
 801988e:	920e      	str	r2, [sp, #56]	@ 0x38
 8019890:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8019892:	2a00      	cmp	r2, #0
 8019894:	f040 8175 	bne.w	8019b82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8019898:	4a83      	ldr	r2, [pc, #524]	@ (8019aa8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 801989a:	930a      	str	r3, [sp, #40]	@ 0x28
 801989c:	6810      	ldr	r0, [r2, #0]
 801989e:	6802      	ldr	r2, [r0, #0]
 80198a0:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80198a2:	4790      	blx	r2
 80198a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80198a6:	9908      	ldr	r1, [sp, #32]
 80198a8:	2201      	movs	r2, #1
 80198aa:	408a      	lsls	r2, r1
 80198ac:	3a01      	subs	r2, #1
 80198ae:	497f      	ldr	r1, [pc, #508]	@ (8019aac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 80198b0:	b2d2      	uxtb	r2, r2
 80198b2:	880c      	ldrh	r4, [r1, #0]
 80198b4:	920c      	str	r2, [sp, #48]	@ 0x30
 80198b6:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 80198ba:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 80198be:	fb04 1202 	mla	r2, r4, r2, r1
 80198c2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80198c6:	ea4f 2419 	mov.w	r4, r9, lsr #8
 80198ca:	920a      	str	r2, [sp, #40]	@ 0x28
 80198cc:	f3c9 4207 	ubfx	r2, r9, #16, #8
 80198d0:	9212      	str	r2, [sp, #72]	@ 0x48
 80198d2:	b2e2      	uxtb	r2, r4
 80198d4:	9211      	str	r2, [sp, #68]	@ 0x44
 80198d6:	fa5f f289 	uxtb.w	r2, r9
 80198da:	9210      	str	r2, [sp, #64]	@ 0x40
 80198dc:	4a74      	ldr	r2, [pc, #464]	@ (8019ab0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 80198de:	ea4f 1159 	mov.w	r1, r9, lsr #5
 80198e2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80198e6:	4022      	ands	r2, r4
 80198e8:	430a      	orrs	r2, r1
 80198ea:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 80198ee:	ea42 0209 	orr.w	r2, r2, r9
 80198f2:	ea4f 014b 	mov.w	r1, fp, lsl #1
 80198f6:	b292      	uxth	r2, r2
 80198f8:	fb05 3b1b 	mls	fp, r5, fp, r3
 80198fc:	920f      	str	r2, [sp, #60]	@ 0x3c
 80198fe:	460b      	mov	r3, r1
 8019900:	783a      	ldrb	r2, [r7, #0]
 8019902:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019904:	436b      	muls	r3, r5
 8019906:	4132      	asrs	r2, r6
 8019908:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 801990c:	b2d2      	uxtb	r2, r2
 801990e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019910:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8019914:	f0c0 8149 	bcc.w	8019baa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 8019918:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801991c:	46a9      	mov	r9, r5
 801991e:	f119 39ff 	adds.w	r9, r9, #4294967295
 8019922:	f0c0 8132 	bcc.w	8019b8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 8019926:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019928:	4013      	ands	r3, r2
 801992a:	d054      	beq.n	80199d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 801992c:	20ff      	movs	r0, #255	@ 0xff
 801992e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019930:	fb90 f1f1 	sdiv	r1, r0, r1
 8019934:	434b      	muls	r3, r1
 8019936:	2bfe      	cmp	r3, #254	@ 0xfe
 8019938:	dd03      	ble.n	8019942 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 801993a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801993c:	4281      	cmp	r1, r0
 801993e:	f000 8122 	beq.w	8019b86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8019942:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019944:	f8b8 4000 	ldrh.w	r4, [r8]
 8019948:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801994a:	fb11 f303 	smulbb	r3, r1, r3
 801994e:	b29b      	uxth	r3, r3
 8019950:	1c59      	adds	r1, r3, #1
 8019952:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019956:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801995a:	fa1f fe83 	uxth.w	lr, r3
 801995e:	1221      	asrs	r1, r4, #8
 8019960:	fb10 fb0e 	smulbb	fp, r0, lr
 8019964:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019968:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801996a:	43db      	mvns	r3, r3
 801996c:	b2db      	uxtb	r3, r3
 801996e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8019972:	fb01 b103 	mla	r1, r1, r3, fp
 8019976:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 801997a:	fb10 fb0e 	smulbb	fp, r0, lr
 801997e:	00e4      	lsls	r4, r4, #3
 8019980:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8019982:	b2e4      	uxtb	r4, r4
 8019984:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019988:	fb10 fe0e 	smulbb	lr, r0, lr
 801998c:	fb04 e403 	mla	r4, r4, r3, lr
 8019990:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019994:	b289      	uxth	r1, r1
 8019996:	b2a4      	uxth	r4, r4
 8019998:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 801999c:	fb0c bc03 	mla	ip, ip, r3, fp
 80199a0:	1c4b      	adds	r3, r1, #1
 80199a2:	f104 0b01 	add.w	fp, r4, #1
 80199a6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80199aa:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 80199ae:	fa1f fc8c 	uxth.w	ip, ip
 80199b2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80199b6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80199ba:	ea4b 0101 	orr.w	r1, fp, r1
 80199be:	f10c 0b01 	add.w	fp, ip, #1
 80199c2:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 80199c6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80199ca:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80199ce:	ea41 010b 	orr.w	r1, r1, fp
 80199d2:	f8a8 1000 	strh.w	r1, [r8]
 80199d6:	9b08      	ldr	r3, [sp, #32]
 80199d8:	441e      	add	r6, r3
 80199da:	b2b6      	uxth	r6, r6
 80199dc:	2e07      	cmp	r6, #7
 80199de:	bf98      	it	ls
 80199e0:	411a      	asrls	r2, r3
 80199e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80199e4:	bf89      	itett	hi
 80199e6:	787a      	ldrbhi	r2, [r7, #1]
 80199e8:	b2d2      	uxtbls	r2, r2
 80199ea:	3701      	addhi	r7, #1
 80199ec:	2600      	movhi	r6, #0
 80199ee:	4498      	add	r8, r3
 80199f0:	e795      	b.n	801991e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 80199f2:	441c      	add	r4, r3
 80199f4:	b224      	sxth	r4, r4
 80199f6:	e6d7      	b.n	80197a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 80199f8:	f1ba 0f01 	cmp.w	sl, #1
 80199fc:	f47f af09 	bne.w	8019812 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019a00:	f1bb 0f01 	cmp.w	fp, #1
 8019a04:	f47f af05 	bne.w	8019812 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019a08:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019a0a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019a0c:	1a99      	subs	r1, r3, r2
 8019a0e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019a10:	1b9b      	subs	r3, r3, r6
 8019a12:	4299      	cmp	r1, r3
 8019a14:	bfa8      	it	ge
 8019a16:	4619      	movge	r1, r3
 8019a18:	2900      	cmp	r1, #0
 8019a1a:	9112      	str	r1, [sp, #72]	@ 0x48
 8019a1c:	dd7d      	ble.n	8019b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019a1e:	4a22      	ldr	r2, [pc, #136]	@ (8019aa8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8019a20:	9211      	str	r2, [sp, #68]	@ 0x44
 8019a22:	6810      	ldr	r0, [r2, #0]
 8019a24:	6803      	ldr	r3, [r0, #0]
 8019a26:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019a28:	4798      	blx	r3
 8019a2a:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8019a2e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8019a30:	d006      	beq.n	8019a40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8019a32:	9b08      	ldr	r3, [sp, #32]
 8019a34:	2b04      	cmp	r3, #4
 8019a36:	d133      	bne.n	8019aa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8019a38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019a3a:	3300      	adds	r3, #0
 8019a3c:	bf18      	it	ne
 8019a3e:	2301      	movne	r3, #1
 8019a40:	0582      	lsls	r2, r0, #22
 8019a42:	fa1f fc88 	uxth.w	ip, r8
 8019a46:	f140 80b9 	bpl.w	8019bbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8019a4a:	9808      	ldr	r0, [sp, #32]
 8019a4c:	2808      	cmp	r0, #8
 8019a4e:	f040 80b5 	bne.w	8019bbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8019a52:	2b00      	cmp	r3, #0
 8019a54:	d064      	beq.n	8019b20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 8019a56:	f10c 0c01 	add.w	ip, ip, #1
 8019a5a:	f02c 0301 	bic.w	r3, ip, #1
 8019a5e:	b29b      	uxth	r3, r3
 8019a60:	bb45      	cbnz	r5, 8019ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8019a62:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019a64:	eb08 0004 	add.w	r0, r8, r4
 8019a68:	4290      	cmp	r0, r2
 8019a6a:	dc23      	bgt.n	8019ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8019a6c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019a6e:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8019a72:	6810      	ldr	r0, [r2, #0]
 8019a74:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019a78:	6804      	ldr	r4, [r0, #0]
 8019a7a:	9506      	str	r5, [sp, #24]
 8019a7c:	f44f 7580 	mov.w	r5, #256	@ 0x100
 8019a80:	9505      	str	r5, [sp, #20]
 8019a82:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019a84:	9302      	str	r3, [sp, #8]
 8019a86:	b289      	uxth	r1, r1
 8019a88:	e9cd 3100 	strd	r3, r1, [sp]
 8019a8c:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8019a90:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019a94:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8019a96:	4673      	mov	r3, lr
 8019a98:	fb06 710c 	mla	r1, r6, ip, r7
 8019a9c:	47a0      	blx	r4
 8019a9e:	e03c      	b.n	8019b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019aa0:	2300      	movs	r3, #0
 8019aa2:	e7cd      	b.n	8019a40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8019aa4:	20014036 	.word	0x20014036
 8019aa8:	20014040 	.word	0x20014040
 8019aac:	20014038 	.word	0x20014038
 8019ab0:	00fff800 	.word	0x00fff800
 8019ab4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019ab6:	eba4 0e05 	sub.w	lr, r4, r5
 8019aba:	eba2 0e0e 	sub.w	lr, r2, lr
 8019abe:	45c6      	cmp	lr, r8
 8019ac0:	bfd4      	ite	le
 8019ac2:	ebc5 0e0e 	rsble	lr, r5, lr
 8019ac6:	ebc5 0e08 	rsbgt	lr, r5, r8
 8019aca:	f1be 0f00 	cmp.w	lr, #0
 8019ace:	d024      	beq.n	8019b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019ad0:	07e8      	lsls	r0, r5, #31
 8019ad2:	f53f ae9e 	bmi.w	8019812 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019ad6:	f01e 0001 	ands.w	r0, lr, #1
 8019ada:	f47f ae9a 	bne.w	8019812 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019ade:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019ae0:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 8019ae4:	6814      	ldr	r4, [r2, #0]
 8019ae6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019aea:	086d      	lsrs	r5, r5, #1
 8019aec:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019af0:	fb06 560c 	mla	r6, r6, ip, r5
 8019af4:	6825      	ldr	r5, [r4, #0]
 8019af6:	9006      	str	r0, [sp, #24]
 8019af8:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8019afc:	9005      	str	r0, [sp, #20]
 8019afe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8019b00:	9302      	str	r3, [sp, #8]
 8019b02:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8019b06:	b289      	uxth	r1, r1
 8019b08:	fa1f f38e 	uxth.w	r3, lr
 8019b0c:	9101      	str	r1, [sp, #4]
 8019b0e:	9300      	str	r3, [sp, #0]
 8019b10:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 8019b12:	4643      	mov	r3, r8
 8019b14:	19b9      	adds	r1, r7, r6
 8019b16:	4620      	mov	r0, r4
 8019b18:	47a8      	blx	r5
 8019b1a:	b019      	add	sp, #100	@ 0x64
 8019b1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b20:	4a28      	ldr	r2, [pc, #160]	@ (8019bc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8019b22:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8019b26:	6810      	ldr	r0, [r2, #0]
 8019b28:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019b2c:	f8d0 a000 	ldr.w	sl, [r0]
 8019b30:	9306      	str	r3, [sp, #24]
 8019b32:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8019b36:	9305      	str	r3, [sp, #20]
 8019b38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019b3a:	f8cd c008 	str.w	ip, [sp, #8]
 8019b3e:	e9cd 9303 	strd	r9, r3, [sp, #12]
 8019b42:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019b44:	1b64      	subs	r4, r4, r5
 8019b46:	1b1c      	subs	r4, r3, r4
 8019b48:	fb06 5608 	mla	r6, r6, r8, r5
 8019b4c:	4544      	cmp	r4, r8
 8019b4e:	bfd4      	ite	le
 8019b50:	ebc5 0504 	rsble	r5, r5, r4
 8019b54:	ebc5 0508 	rsbgt	r5, r5, r8
 8019b58:	b289      	uxth	r1, r1
 8019b5a:	b2ad      	uxth	r5, r5
 8019b5c:	9101      	str	r1, [sp, #4]
 8019b5e:	9500      	str	r5, [sp, #0]
 8019b60:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8019b64:	4673      	mov	r3, lr
 8019b66:	19b9      	adds	r1, r7, r6
 8019b68:	e798      	b.n	8019a9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8019b6a:	2208      	movs	r2, #8
 8019b6c:	9b08      	ldr	r3, [sp, #32]
 8019b6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b72:	1e5a      	subs	r2, r3, #1
 8019b74:	4442      	add	r2, r8
 8019b76:	fb92 f2f3 	sdiv	r2, r2, r3
 8019b7a:	fb12 f203 	smulbb	r2, r2, r3
 8019b7e:	b292      	uxth	r2, r2
 8019b80:	e64d      	b.n	801981e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 8019b82:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8019b84:	e68f      	b.n	80198a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 8019b86:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019b88:	e723      	b.n	80199d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8019b8a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019b8c:	b143      	cbz	r3, 8019ba0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 8019b8e:	441e      	add	r6, r3
 8019b90:	b2b6      	uxth	r6, r6
 8019b92:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8019b96:	f006 0607 	and.w	r6, r6, #7
 8019b9a:	783a      	ldrb	r2, [r7, #0]
 8019b9c:	4132      	asrs	r2, r6
 8019b9e:	b2d2      	uxtb	r2, r2
 8019ba0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019ba2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019ba4:	4419      	add	r1, r3
 8019ba6:	910a      	str	r1, [sp, #40]	@ 0x28
 8019ba8:	e6b2      	b.n	8019910 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8019baa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019bac:	2b00      	cmp	r3, #0
 8019bae:	d1b4      	bne.n	8019b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019bb0:	4b04      	ldr	r3, [pc, #16]	@ (8019bc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8019bb2:	6818      	ldr	r0, [r3, #0]
 8019bb4:	6803      	ldr	r3, [r0, #0]
 8019bb6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019bb8:	4798      	blx	r3
 8019bba:	e7ae      	b.n	8019b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019bbc:	2b00      	cmp	r3, #0
 8019bbe:	f47f af4a 	bne.w	8019a56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 8019bc2:	e626      	b.n	8019812 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019bc4:	20014040 	.word	0x20014040

08019bc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8019bc8:	b538      	push	{r3, r4, r5, lr}
 8019bca:	4c15      	ldr	r4, [pc, #84]	@ (8019c20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8019bcc:	7823      	ldrb	r3, [r4, #0]
 8019bce:	f3bf 8f5b 	dmb	ish
 8019bd2:	07da      	lsls	r2, r3, #31
 8019bd4:	4605      	mov	r5, r0
 8019bd6:	d40b      	bmi.n	8019bf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019bd8:	4620      	mov	r0, r4
 8019bda:	f008 fc48 	bl	802246e <__cxa_guard_acquire>
 8019bde:	b138      	cbz	r0, 8019bf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019be0:	4620      	mov	r0, r4
 8019be2:	f008 fc50 	bl	8022486 <__cxa_guard_release>
 8019be6:	4a0f      	ldr	r2, [pc, #60]	@ (8019c24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019be8:	490f      	ldr	r1, [pc, #60]	@ (8019c28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8019bea:	4810      	ldr	r0, [pc, #64]	@ (8019c2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8019bec:	f008 fc38 	bl	8022460 <__aeabi_atexit>
 8019bf0:	4c0f      	ldr	r4, [pc, #60]	@ (8019c30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8019bf2:	7823      	ldrb	r3, [r4, #0]
 8019bf4:	f3bf 8f5b 	dmb	ish
 8019bf8:	07db      	lsls	r3, r3, #31
 8019bfa:	d40b      	bmi.n	8019c14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8019bfc:	4620      	mov	r0, r4
 8019bfe:	f008 fc36 	bl	802246e <__cxa_guard_acquire>
 8019c02:	b138      	cbz	r0, 8019c14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8019c04:	4620      	mov	r0, r4
 8019c06:	f008 fc3e 	bl	8022486 <__cxa_guard_release>
 8019c0a:	4a06      	ldr	r2, [pc, #24]	@ (8019c24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019c0c:	4909      	ldr	r1, [pc, #36]	@ (8019c34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8019c0e:	480a      	ldr	r0, [pc, #40]	@ (8019c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019c10:	f008 fc26 	bl	8022460 <__aeabi_atexit>
 8019c14:	4b05      	ldr	r3, [pc, #20]	@ (8019c2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8019c16:	616b      	str	r3, [r5, #20]
 8019c18:	4b07      	ldr	r3, [pc, #28]	@ (8019c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019c1a:	61ab      	str	r3, [r5, #24]
 8019c1c:	bd38      	pop	{r3, r4, r5, pc}
 8019c1e:	bf00      	nop
 8019c20:	20014124 	.word	0x20014124
 8019c24:	20000000 	.word	0x20000000
 8019c28:	08015cd1 	.word	0x08015cd1
 8019c2c:	200001e0 	.word	0x200001e0
 8019c30:	20014128 	.word	0x20014128
 8019c34:	08015ccf 	.word	0x08015ccf
 8019c38:	200001e4 	.word	0x200001e4

08019c3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019c3c:	b538      	push	{r3, r4, r5, lr}
 8019c3e:	4c15      	ldr	r4, [pc, #84]	@ (8019c94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019c40:	7823      	ldrb	r3, [r4, #0]
 8019c42:	f3bf 8f5b 	dmb	ish
 8019c46:	07da      	lsls	r2, r3, #31
 8019c48:	4605      	mov	r5, r0
 8019c4a:	d40b      	bmi.n	8019c64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019c4c:	4620      	mov	r0, r4
 8019c4e:	f008 fc0e 	bl	802246e <__cxa_guard_acquire>
 8019c52:	b138      	cbz	r0, 8019c64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019c54:	4620      	mov	r0, r4
 8019c56:	f008 fc16 	bl	8022486 <__cxa_guard_release>
 8019c5a:	4a0f      	ldr	r2, [pc, #60]	@ (8019c98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019c5c:	490f      	ldr	r1, [pc, #60]	@ (8019c9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019c5e:	4810      	ldr	r0, [pc, #64]	@ (8019ca0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019c60:	f008 fbfe 	bl	8022460 <__aeabi_atexit>
 8019c64:	4c0f      	ldr	r4, [pc, #60]	@ (8019ca4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8019c66:	7823      	ldrb	r3, [r4, #0]
 8019c68:	f3bf 8f5b 	dmb	ish
 8019c6c:	07db      	lsls	r3, r3, #31
 8019c6e:	d40b      	bmi.n	8019c88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019c70:	4620      	mov	r0, r4
 8019c72:	f008 fbfc 	bl	802246e <__cxa_guard_acquire>
 8019c76:	b138      	cbz	r0, 8019c88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019c78:	4620      	mov	r0, r4
 8019c7a:	f008 fc04 	bl	8022486 <__cxa_guard_release>
 8019c7e:	4a06      	ldr	r2, [pc, #24]	@ (8019c98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019c80:	4909      	ldr	r1, [pc, #36]	@ (8019ca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8019c82:	480a      	ldr	r0, [pc, #40]	@ (8019cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019c84:	f008 fbec 	bl	8022460 <__aeabi_atexit>
 8019c88:	4b05      	ldr	r3, [pc, #20]	@ (8019ca0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019c8a:	60eb      	str	r3, [r5, #12]
 8019c8c:	4b07      	ldr	r3, [pc, #28]	@ (8019cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019c8e:	612b      	str	r3, [r5, #16]
 8019c90:	bd38      	pop	{r3, r4, r5, pc}
 8019c92:	bf00      	nop
 8019c94:	200140fc 	.word	0x200140fc
 8019c98:	20000000 	.word	0x20000000
 8019c9c:	08015cd5 	.word	0x08015cd5
 8019ca0:	200001b8 	.word	0x200001b8
 8019ca4:	20014100 	.word	0x20014100
 8019ca8:	08015cd3 	.word	0x08015cd3
 8019cac:	200001bc 	.word	0x200001bc

08019cb0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8019cb0:	b510      	push	{r4, lr}
 8019cb2:	4604      	mov	r4, r0
 8019cb4:	f7ff ff88 	bl	8019bc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019cb8:	4620      	mov	r0, r4
 8019cba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019cbe:	f7ff bfbd 	b.w	8019c3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08019cc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8019cc4:	b538      	push	{r3, r4, r5, lr}
 8019cc6:	4c15      	ldr	r4, [pc, #84]	@ (8019d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8019cc8:	7823      	ldrb	r3, [r4, #0]
 8019cca:	f3bf 8f5b 	dmb	ish
 8019cce:	07da      	lsls	r2, r3, #31
 8019cd0:	4605      	mov	r5, r0
 8019cd2:	d40b      	bmi.n	8019cec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019cd4:	4620      	mov	r0, r4
 8019cd6:	f008 fbca 	bl	802246e <__cxa_guard_acquire>
 8019cda:	b138      	cbz	r0, 8019cec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019cdc:	4620      	mov	r0, r4
 8019cde:	f008 fbd2 	bl	8022486 <__cxa_guard_release>
 8019ce2:	4a0f      	ldr	r2, [pc, #60]	@ (8019d20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019ce4:	490f      	ldr	r1, [pc, #60]	@ (8019d24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8019ce6:	4810      	ldr	r0, [pc, #64]	@ (8019d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019ce8:	f008 fbba 	bl	8022460 <__aeabi_atexit>
 8019cec:	4c0f      	ldr	r4, [pc, #60]	@ (8019d2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8019cee:	7823      	ldrb	r3, [r4, #0]
 8019cf0:	f3bf 8f5b 	dmb	ish
 8019cf4:	07db      	lsls	r3, r3, #31
 8019cf6:	d40b      	bmi.n	8019d10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019cf8:	4620      	mov	r0, r4
 8019cfa:	f008 fbb8 	bl	802246e <__cxa_guard_acquire>
 8019cfe:	b138      	cbz	r0, 8019d10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019d00:	4620      	mov	r0, r4
 8019d02:	f008 fbc0 	bl	8022486 <__cxa_guard_release>
 8019d06:	4a06      	ldr	r2, [pc, #24]	@ (8019d20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019d08:	4909      	ldr	r1, [pc, #36]	@ (8019d30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8019d0a:	480a      	ldr	r0, [pc, #40]	@ (8019d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019d0c:	f008 fba8 	bl	8022460 <__aeabi_atexit>
 8019d10:	4b05      	ldr	r3, [pc, #20]	@ (8019d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019d12:	626b      	str	r3, [r5, #36]	@ 0x24
 8019d14:	4b07      	ldr	r3, [pc, #28]	@ (8019d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019d16:	62ab      	str	r3, [r5, #40]	@ 0x28
 8019d18:	bd38      	pop	{r3, r4, r5, pc}
 8019d1a:	bf00      	nop
 8019d1c:	2001412c 	.word	0x2001412c
 8019d20:	20000000 	.word	0x20000000
 8019d24:	08015cc9 	.word	0x08015cc9
 8019d28:	200001e8 	.word	0x200001e8
 8019d2c:	20014130 	.word	0x20014130
 8019d30:	08015cc7 	.word	0x08015cc7
 8019d34:	200001ec 	.word	0x200001ec

08019d38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019d38:	b538      	push	{r3, r4, r5, lr}
 8019d3a:	4c15      	ldr	r4, [pc, #84]	@ (8019d90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019d3c:	7823      	ldrb	r3, [r4, #0]
 8019d3e:	f3bf 8f5b 	dmb	ish
 8019d42:	07da      	lsls	r2, r3, #31
 8019d44:	4605      	mov	r5, r0
 8019d46:	d40b      	bmi.n	8019d60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019d48:	4620      	mov	r0, r4
 8019d4a:	f008 fb90 	bl	802246e <__cxa_guard_acquire>
 8019d4e:	b138      	cbz	r0, 8019d60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019d50:	4620      	mov	r0, r4
 8019d52:	f008 fb98 	bl	8022486 <__cxa_guard_release>
 8019d56:	4a0f      	ldr	r2, [pc, #60]	@ (8019d94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019d58:	490f      	ldr	r1, [pc, #60]	@ (8019d98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019d5a:	4810      	ldr	r0, [pc, #64]	@ (8019d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019d5c:	f008 fb80 	bl	8022460 <__aeabi_atexit>
 8019d60:	4c0f      	ldr	r4, [pc, #60]	@ (8019da0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8019d62:	7823      	ldrb	r3, [r4, #0]
 8019d64:	f3bf 8f5b 	dmb	ish
 8019d68:	07db      	lsls	r3, r3, #31
 8019d6a:	d40b      	bmi.n	8019d84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019d6c:	4620      	mov	r0, r4
 8019d6e:	f008 fb7e 	bl	802246e <__cxa_guard_acquire>
 8019d72:	b138      	cbz	r0, 8019d84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019d74:	4620      	mov	r0, r4
 8019d76:	f008 fb86 	bl	8022486 <__cxa_guard_release>
 8019d7a:	4a06      	ldr	r2, [pc, #24]	@ (8019d94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019d7c:	4909      	ldr	r1, [pc, #36]	@ (8019da4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019d7e:	480a      	ldr	r0, [pc, #40]	@ (8019da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019d80:	f008 fb6e 	bl	8022460 <__aeabi_atexit>
 8019d84:	4b05      	ldr	r3, [pc, #20]	@ (8019d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019d86:	61eb      	str	r3, [r5, #28]
 8019d88:	4b07      	ldr	r3, [pc, #28]	@ (8019da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019d8a:	622b      	str	r3, [r5, #32]
 8019d8c:	bd38      	pop	{r3, r4, r5, pc}
 8019d8e:	bf00      	nop
 8019d90:	20014104 	.word	0x20014104
 8019d94:	20000000 	.word	0x20000000
 8019d98:	08015ccd 	.word	0x08015ccd
 8019d9c:	200001c0 	.word	0x200001c0
 8019da0:	20014108 	.word	0x20014108
 8019da4:	08015ccb 	.word	0x08015ccb
 8019da8:	200001c4 	.word	0x200001c4

08019dac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019dac:	b510      	push	{r4, lr}
 8019dae:	4604      	mov	r4, r0
 8019db0:	f7ff ff88 	bl	8019cc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019db4:	4620      	mov	r0, r4
 8019db6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019dba:	f7ff bfbd 	b.w	8019d38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019dc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019dc0:	b538      	push	{r3, r4, r5, lr}
 8019dc2:	4c15      	ldr	r4, [pc, #84]	@ (8019e18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019dc4:	7823      	ldrb	r3, [r4, #0]
 8019dc6:	f3bf 8f5b 	dmb	ish
 8019dca:	07da      	lsls	r2, r3, #31
 8019dcc:	4605      	mov	r5, r0
 8019dce:	d40b      	bmi.n	8019de8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019dd0:	4620      	mov	r0, r4
 8019dd2:	f008 fb4c 	bl	802246e <__cxa_guard_acquire>
 8019dd6:	b138      	cbz	r0, 8019de8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019dd8:	4620      	mov	r0, r4
 8019dda:	f008 fb54 	bl	8022486 <__cxa_guard_release>
 8019dde:	4a0f      	ldr	r2, [pc, #60]	@ (8019e1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019de0:	490f      	ldr	r1, [pc, #60]	@ (8019e20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019de2:	4810      	ldr	r0, [pc, #64]	@ (8019e24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019de4:	f008 fb3c 	bl	8022460 <__aeabi_atexit>
 8019de8:	4c0f      	ldr	r4, [pc, #60]	@ (8019e28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8019dea:	7823      	ldrb	r3, [r4, #0]
 8019dec:	f3bf 8f5b 	dmb	ish
 8019df0:	07db      	lsls	r3, r3, #31
 8019df2:	d40b      	bmi.n	8019e0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019df4:	4620      	mov	r0, r4
 8019df6:	f008 fb3a 	bl	802246e <__cxa_guard_acquire>
 8019dfa:	b138      	cbz	r0, 8019e0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019dfc:	4620      	mov	r0, r4
 8019dfe:	f008 fb42 	bl	8022486 <__cxa_guard_release>
 8019e02:	4a06      	ldr	r2, [pc, #24]	@ (8019e1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019e04:	4909      	ldr	r1, [pc, #36]	@ (8019e2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8019e06:	480a      	ldr	r0, [pc, #40]	@ (8019e30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019e08:	f008 fb2a 	bl	8022460 <__aeabi_atexit>
 8019e0c:	4b05      	ldr	r3, [pc, #20]	@ (8019e24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019e0e:	636b      	str	r3, [r5, #52]	@ 0x34
 8019e10:	4b07      	ldr	r3, [pc, #28]	@ (8019e30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019e12:	63ab      	str	r3, [r5, #56]	@ 0x38
 8019e14:	bd38      	pop	{r3, r4, r5, pc}
 8019e16:	bf00      	nop
 8019e18:	2001413c 	.word	0x2001413c
 8019e1c:	20000000 	.word	0x20000000
 8019e20:	08015cc1 	.word	0x08015cc1
 8019e24:	200001f8 	.word	0x200001f8
 8019e28:	20014140 	.word	0x20014140
 8019e2c:	08015cbf 	.word	0x08015cbf
 8019e30:	200001fc 	.word	0x200001fc

08019e34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8019e34:	b538      	push	{r3, r4, r5, lr}
 8019e36:	4c15      	ldr	r4, [pc, #84]	@ (8019e8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019e38:	7823      	ldrb	r3, [r4, #0]
 8019e3a:	f3bf 8f5b 	dmb	ish
 8019e3e:	07da      	lsls	r2, r3, #31
 8019e40:	4605      	mov	r5, r0
 8019e42:	d40b      	bmi.n	8019e5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019e44:	4620      	mov	r0, r4
 8019e46:	f008 fb12 	bl	802246e <__cxa_guard_acquire>
 8019e4a:	b138      	cbz	r0, 8019e5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019e4c:	4620      	mov	r0, r4
 8019e4e:	f008 fb1a 	bl	8022486 <__cxa_guard_release>
 8019e52:	4a0f      	ldr	r2, [pc, #60]	@ (8019e90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019e54:	490f      	ldr	r1, [pc, #60]	@ (8019e94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8019e56:	4810      	ldr	r0, [pc, #64]	@ (8019e98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019e58:	f008 fb02 	bl	8022460 <__aeabi_atexit>
 8019e5c:	4c0f      	ldr	r4, [pc, #60]	@ (8019e9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019e5e:	7823      	ldrb	r3, [r4, #0]
 8019e60:	f3bf 8f5b 	dmb	ish
 8019e64:	07db      	lsls	r3, r3, #31
 8019e66:	d40b      	bmi.n	8019e80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019e68:	4620      	mov	r0, r4
 8019e6a:	f008 fb00 	bl	802246e <__cxa_guard_acquire>
 8019e6e:	b138      	cbz	r0, 8019e80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019e70:	4620      	mov	r0, r4
 8019e72:	f008 fb08 	bl	8022486 <__cxa_guard_release>
 8019e76:	4a06      	ldr	r2, [pc, #24]	@ (8019e90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019e78:	4909      	ldr	r1, [pc, #36]	@ (8019ea0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019e7a:	480a      	ldr	r0, [pc, #40]	@ (8019ea4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019e7c:	f008 faf0 	bl	8022460 <__aeabi_atexit>
 8019e80:	4b05      	ldr	r3, [pc, #20]	@ (8019e98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019e82:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8019e84:	4b07      	ldr	r3, [pc, #28]	@ (8019ea4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019e86:	632b      	str	r3, [r5, #48]	@ 0x30
 8019e88:	bd38      	pop	{r3, r4, r5, pc}
 8019e8a:	bf00      	nop
 8019e8c:	2001410c 	.word	0x2001410c
 8019e90:	20000000 	.word	0x20000000
 8019e94:	08015cc5 	.word	0x08015cc5
 8019e98:	200001c8 	.word	0x200001c8
 8019e9c:	20014110 	.word	0x20014110
 8019ea0:	08015cc3 	.word	0x08015cc3
 8019ea4:	200001cc 	.word	0x200001cc

08019ea8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019ea8:	b510      	push	{r4, lr}
 8019eaa:	4604      	mov	r4, r0
 8019eac:	f7ff ff88 	bl	8019dc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019eb0:	4620      	mov	r0, r4
 8019eb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019eb6:	f7ff bfbd 	b.w	8019e34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019ebc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019ebc:	b538      	push	{r3, r4, r5, lr}
 8019ebe:	4c15      	ldr	r4, [pc, #84]	@ (8019f14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019ec0:	7823      	ldrb	r3, [r4, #0]
 8019ec2:	f3bf 8f5b 	dmb	ish
 8019ec6:	07da      	lsls	r2, r3, #31
 8019ec8:	4605      	mov	r5, r0
 8019eca:	d40b      	bmi.n	8019ee4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019ecc:	4620      	mov	r0, r4
 8019ece:	f008 face 	bl	802246e <__cxa_guard_acquire>
 8019ed2:	b138      	cbz	r0, 8019ee4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019ed4:	4620      	mov	r0, r4
 8019ed6:	f008 fad6 	bl	8022486 <__cxa_guard_release>
 8019eda:	4a0f      	ldr	r2, [pc, #60]	@ (8019f18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019edc:	490f      	ldr	r1, [pc, #60]	@ (8019f1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8019ede:	4810      	ldr	r0, [pc, #64]	@ (8019f20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019ee0:	f008 fabe 	bl	8022460 <__aeabi_atexit>
 8019ee4:	4c0f      	ldr	r4, [pc, #60]	@ (8019f24 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8019ee6:	7823      	ldrb	r3, [r4, #0]
 8019ee8:	f3bf 8f5b 	dmb	ish
 8019eec:	07db      	lsls	r3, r3, #31
 8019eee:	d40b      	bmi.n	8019f08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019ef0:	4620      	mov	r0, r4
 8019ef2:	f008 fabc 	bl	802246e <__cxa_guard_acquire>
 8019ef6:	b138      	cbz	r0, 8019f08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019ef8:	4620      	mov	r0, r4
 8019efa:	f008 fac4 	bl	8022486 <__cxa_guard_release>
 8019efe:	4a06      	ldr	r2, [pc, #24]	@ (8019f18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019f00:	4909      	ldr	r1, [pc, #36]	@ (8019f28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8019f02:	480a      	ldr	r0, [pc, #40]	@ (8019f2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019f04:	f008 faac 	bl	8022460 <__aeabi_atexit>
 8019f08:	4b05      	ldr	r3, [pc, #20]	@ (8019f20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019f0a:	656b      	str	r3, [r5, #84]	@ 0x54
 8019f0c:	4b07      	ldr	r3, [pc, #28]	@ (8019f2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019f0e:	65ab      	str	r3, [r5, #88]	@ 0x58
 8019f10:	bd38      	pop	{r3, r4, r5, pc}
 8019f12:	bf00      	nop
 8019f14:	20014144 	.word	0x20014144
 8019f18:	20000000 	.word	0x20000000
 8019f1c:	08015cb1 	.word	0x08015cb1
 8019f20:	20000200 	.word	0x20000200
 8019f24:	20014148 	.word	0x20014148
 8019f28:	08015caf 	.word	0x08015caf
 8019f2c:	20000204 	.word	0x20000204

08019f30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019f30:	b538      	push	{r3, r4, r5, lr}
 8019f32:	4c15      	ldr	r4, [pc, #84]	@ (8019f88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8019f34:	7823      	ldrb	r3, [r4, #0]
 8019f36:	f3bf 8f5b 	dmb	ish
 8019f3a:	07da      	lsls	r2, r3, #31
 8019f3c:	4605      	mov	r5, r0
 8019f3e:	d40b      	bmi.n	8019f58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019f40:	4620      	mov	r0, r4
 8019f42:	f008 fa94 	bl	802246e <__cxa_guard_acquire>
 8019f46:	b138      	cbz	r0, 8019f58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019f48:	4620      	mov	r0, r4
 8019f4a:	f008 fa9c 	bl	8022486 <__cxa_guard_release>
 8019f4e:	4a0f      	ldr	r2, [pc, #60]	@ (8019f8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019f50:	490f      	ldr	r1, [pc, #60]	@ (8019f90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8019f52:	4810      	ldr	r0, [pc, #64]	@ (8019f94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019f54:	f008 fa84 	bl	8022460 <__aeabi_atexit>
 8019f58:	4c0f      	ldr	r4, [pc, #60]	@ (8019f98 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019f5a:	7823      	ldrb	r3, [r4, #0]
 8019f5c:	f3bf 8f5b 	dmb	ish
 8019f60:	07db      	lsls	r3, r3, #31
 8019f62:	d40b      	bmi.n	8019f7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019f64:	4620      	mov	r0, r4
 8019f66:	f008 fa82 	bl	802246e <__cxa_guard_acquire>
 8019f6a:	b138      	cbz	r0, 8019f7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019f6c:	4620      	mov	r0, r4
 8019f6e:	f008 fa8a 	bl	8022486 <__cxa_guard_release>
 8019f72:	4a06      	ldr	r2, [pc, #24]	@ (8019f8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019f74:	4909      	ldr	r1, [pc, #36]	@ (8019f9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019f76:	480a      	ldr	r0, [pc, #40]	@ (8019fa0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019f78:	f008 fa72 	bl	8022460 <__aeabi_atexit>
 8019f7c:	4b05      	ldr	r3, [pc, #20]	@ (8019f94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019f7e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8019f80:	4b07      	ldr	r3, [pc, #28]	@ (8019fa0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019f82:	652b      	str	r3, [r5, #80]	@ 0x50
 8019f84:	bd38      	pop	{r3, r4, r5, pc}
 8019f86:	bf00      	nop
 8019f88:	2001414c 	.word	0x2001414c
 8019f8c:	20000000 	.word	0x20000000
 8019f90:	08015cb5 	.word	0x08015cb5
 8019f94:	20000208 	.word	0x20000208
 8019f98:	20014150 	.word	0x20014150
 8019f9c:	08015cb3 	.word	0x08015cb3
 8019fa0:	2000020c 	.word	0x2000020c

08019fa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8019fa4:	b538      	push	{r3, r4, r5, lr}
 8019fa6:	4c15      	ldr	r4, [pc, #84]	@ (8019ffc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019fa8:	7823      	ldrb	r3, [r4, #0]
 8019faa:	f3bf 8f5b 	dmb	ish
 8019fae:	07da      	lsls	r2, r3, #31
 8019fb0:	4605      	mov	r5, r0
 8019fb2:	d40b      	bmi.n	8019fcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019fb4:	4620      	mov	r0, r4
 8019fb6:	f008 fa5a 	bl	802246e <__cxa_guard_acquire>
 8019fba:	b138      	cbz	r0, 8019fcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019fbc:	4620      	mov	r0, r4
 8019fbe:	f008 fa62 	bl	8022486 <__cxa_guard_release>
 8019fc2:	4a0f      	ldr	r2, [pc, #60]	@ (801a000 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019fc4:	490f      	ldr	r1, [pc, #60]	@ (801a004 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8019fc6:	4810      	ldr	r0, [pc, #64]	@ (801a008 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019fc8:	f008 fa4a 	bl	8022460 <__aeabi_atexit>
 8019fcc:	4c0f      	ldr	r4, [pc, #60]	@ (801a00c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8019fce:	7823      	ldrb	r3, [r4, #0]
 8019fd0:	f3bf 8f5b 	dmb	ish
 8019fd4:	07db      	lsls	r3, r3, #31
 8019fd6:	d40b      	bmi.n	8019ff0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019fd8:	4620      	mov	r0, r4
 8019fda:	f008 fa48 	bl	802246e <__cxa_guard_acquire>
 8019fde:	b138      	cbz	r0, 8019ff0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019fe0:	4620      	mov	r0, r4
 8019fe2:	f008 fa50 	bl	8022486 <__cxa_guard_release>
 8019fe6:	4a06      	ldr	r2, [pc, #24]	@ (801a000 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019fe8:	4909      	ldr	r1, [pc, #36]	@ (801a010 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019fea:	480a      	ldr	r0, [pc, #40]	@ (801a014 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019fec:	f008 fa38 	bl	8022460 <__aeabi_atexit>
 8019ff0:	4b05      	ldr	r3, [pc, #20]	@ (801a008 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019ff2:	646b      	str	r3, [r5, #68]	@ 0x44
 8019ff4:	4b07      	ldr	r3, [pc, #28]	@ (801a014 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019ff6:	64ab      	str	r3, [r5, #72]	@ 0x48
 8019ff8:	bd38      	pop	{r3, r4, r5, pc}
 8019ffa:	bf00      	nop
 8019ffc:	20014114 	.word	0x20014114
 801a000:	20000000 	.word	0x20000000
 801a004:	08015cb9 	.word	0x08015cb9
 801a008:	200001d0 	.word	0x200001d0
 801a00c:	20014118 	.word	0x20014118
 801a010:	08015cb7 	.word	0x08015cb7
 801a014:	200001d4 	.word	0x200001d4

0801a018 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801a018:	b538      	push	{r3, r4, r5, lr}
 801a01a:	4c15      	ldr	r4, [pc, #84]	@ (801a070 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801a01c:	7823      	ldrb	r3, [r4, #0]
 801a01e:	f3bf 8f5b 	dmb	ish
 801a022:	07da      	lsls	r2, r3, #31
 801a024:	4605      	mov	r5, r0
 801a026:	d40b      	bmi.n	801a040 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a028:	4620      	mov	r0, r4
 801a02a:	f008 fa20 	bl	802246e <__cxa_guard_acquire>
 801a02e:	b138      	cbz	r0, 801a040 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a030:	4620      	mov	r0, r4
 801a032:	f008 fa28 	bl	8022486 <__cxa_guard_release>
 801a036:	4a0f      	ldr	r2, [pc, #60]	@ (801a074 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a038:	490f      	ldr	r1, [pc, #60]	@ (801a078 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801a03a:	4810      	ldr	r0, [pc, #64]	@ (801a07c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a03c:	f008 fa10 	bl	8022460 <__aeabi_atexit>
 801a040:	4c0f      	ldr	r4, [pc, #60]	@ (801a080 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801a042:	7823      	ldrb	r3, [r4, #0]
 801a044:	f3bf 8f5b 	dmb	ish
 801a048:	07db      	lsls	r3, r3, #31
 801a04a:	d40b      	bmi.n	801a064 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a04c:	4620      	mov	r0, r4
 801a04e:	f008 fa0e 	bl	802246e <__cxa_guard_acquire>
 801a052:	b138      	cbz	r0, 801a064 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a054:	4620      	mov	r0, r4
 801a056:	f008 fa16 	bl	8022486 <__cxa_guard_release>
 801a05a:	4a06      	ldr	r2, [pc, #24]	@ (801a074 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a05c:	4909      	ldr	r1, [pc, #36]	@ (801a084 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801a05e:	480a      	ldr	r0, [pc, #40]	@ (801a088 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a060:	f008 f9fe 	bl	8022460 <__aeabi_atexit>
 801a064:	4b05      	ldr	r3, [pc, #20]	@ (801a07c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a066:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801a068:	4b07      	ldr	r3, [pc, #28]	@ (801a088 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a06a:	642b      	str	r3, [r5, #64]	@ 0x40
 801a06c:	bd38      	pop	{r3, r4, r5, pc}
 801a06e:	bf00      	nop
 801a070:	20014134 	.word	0x20014134
 801a074:	20000000 	.word	0x20000000
 801a078:	08015cbd 	.word	0x08015cbd
 801a07c:	200001f0 	.word	0x200001f0
 801a080:	20014138 	.word	0x20014138
 801a084:	08015cbb 	.word	0x08015cbb
 801a088:	200001f4 	.word	0x200001f4

0801a08c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801a08c:	b510      	push	{r4, lr}
 801a08e:	4604      	mov	r4, r0
 801a090:	f7ff ff14 	bl	8019ebc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801a094:	4620      	mov	r0, r4
 801a096:	f7ff ff85 	bl	8019fa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801a09a:	4620      	mov	r0, r4
 801a09c:	f7ff ff48 	bl	8019f30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801a0a0:	4620      	mov	r0, r4
 801a0a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a0a6:	f7ff bfb7 	b.w	801a018 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801a0ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801a0ac:	b538      	push	{r3, r4, r5, lr}
 801a0ae:	4c15      	ldr	r4, [pc, #84]	@ (801a104 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801a0b0:	7823      	ldrb	r3, [r4, #0]
 801a0b2:	f3bf 8f5b 	dmb	ish
 801a0b6:	07da      	lsls	r2, r3, #31
 801a0b8:	4605      	mov	r5, r0
 801a0ba:	d40b      	bmi.n	801a0d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801a0bc:	4620      	mov	r0, r4
 801a0be:	f008 f9d6 	bl	802246e <__cxa_guard_acquire>
 801a0c2:	b138      	cbz	r0, 801a0d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801a0c4:	4620      	mov	r0, r4
 801a0c6:	f008 f9de 	bl	8022486 <__cxa_guard_release>
 801a0ca:	4a0f      	ldr	r2, [pc, #60]	@ (801a108 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a0cc:	490f      	ldr	r1, [pc, #60]	@ (801a10c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801a0ce:	4810      	ldr	r0, [pc, #64]	@ (801a110 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a0d0:	f008 f9c6 	bl	8022460 <__aeabi_atexit>
 801a0d4:	4c0f      	ldr	r4, [pc, #60]	@ (801a114 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801a0d6:	7823      	ldrb	r3, [r4, #0]
 801a0d8:	f3bf 8f5b 	dmb	ish
 801a0dc:	07db      	lsls	r3, r3, #31
 801a0de:	d40b      	bmi.n	801a0f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801a0e0:	4620      	mov	r0, r4
 801a0e2:	f008 f9c4 	bl	802246e <__cxa_guard_acquire>
 801a0e6:	b138      	cbz	r0, 801a0f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801a0e8:	4620      	mov	r0, r4
 801a0ea:	f008 f9cc 	bl	8022486 <__cxa_guard_release>
 801a0ee:	4a06      	ldr	r2, [pc, #24]	@ (801a108 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a0f0:	4909      	ldr	r1, [pc, #36]	@ (801a118 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801a0f2:	480a      	ldr	r0, [pc, #40]	@ (801a11c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801a0f4:	f008 f9b4 	bl	8022460 <__aeabi_atexit>
 801a0f8:	4b05      	ldr	r3, [pc, #20]	@ (801a110 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a0fa:	666b      	str	r3, [r5, #100]	@ 0x64
 801a0fc:	4b07      	ldr	r3, [pc, #28]	@ (801a11c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801a0fe:	66ab      	str	r3, [r5, #104]	@ 0x68
 801a100:	bd38      	pop	{r3, r4, r5, pc}
 801a102:	bf00      	nop
 801a104:	2001411c 	.word	0x2001411c
 801a108:	20000000 	.word	0x20000000
 801a10c:	08015ca9 	.word	0x08015ca9
 801a110:	200001d8 	.word	0x200001d8
 801a114:	20014120 	.word	0x20014120
 801a118:	08015ca7 	.word	0x08015ca7
 801a11c:	200001dc 	.word	0x200001dc

0801a120 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801a120:	b538      	push	{r3, r4, r5, lr}
 801a122:	4c15      	ldr	r4, [pc, #84]	@ (801a178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801a124:	7823      	ldrb	r3, [r4, #0]
 801a126:	f3bf 8f5b 	dmb	ish
 801a12a:	07da      	lsls	r2, r3, #31
 801a12c:	4605      	mov	r5, r0
 801a12e:	d40b      	bmi.n	801a148 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801a130:	4620      	mov	r0, r4
 801a132:	f008 f99c 	bl	802246e <__cxa_guard_acquire>
 801a136:	b138      	cbz	r0, 801a148 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801a138:	4620      	mov	r0, r4
 801a13a:	f008 f9a4 	bl	8022486 <__cxa_guard_release>
 801a13e:	4a0f      	ldr	r2, [pc, #60]	@ (801a17c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a140:	490f      	ldr	r1, [pc, #60]	@ (801a180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801a142:	4810      	ldr	r0, [pc, #64]	@ (801a184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a144:	f008 f98c 	bl	8022460 <__aeabi_atexit>
 801a148:	4c0f      	ldr	r4, [pc, #60]	@ (801a188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801a14a:	7823      	ldrb	r3, [r4, #0]
 801a14c:	f3bf 8f5b 	dmb	ish
 801a150:	07db      	lsls	r3, r3, #31
 801a152:	d40b      	bmi.n	801a16c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801a154:	4620      	mov	r0, r4
 801a156:	f008 f98a 	bl	802246e <__cxa_guard_acquire>
 801a15a:	b138      	cbz	r0, 801a16c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801a15c:	4620      	mov	r0, r4
 801a15e:	f008 f992 	bl	8022486 <__cxa_guard_release>
 801a162:	4a06      	ldr	r2, [pc, #24]	@ (801a17c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a164:	4909      	ldr	r1, [pc, #36]	@ (801a18c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801a166:	480a      	ldr	r0, [pc, #40]	@ (801a190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801a168:	f008 f97a 	bl	8022460 <__aeabi_atexit>
 801a16c:	4b05      	ldr	r3, [pc, #20]	@ (801a184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a16e:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801a170:	4b07      	ldr	r3, [pc, #28]	@ (801a190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801a172:	662b      	str	r3, [r5, #96]	@ 0x60
 801a174:	bd38      	pop	{r3, r4, r5, pc}
 801a176:	bf00      	nop
 801a178:	200140f4 	.word	0x200140f4
 801a17c:	20000000 	.word	0x20000000
 801a180:	08015cad 	.word	0x08015cad
 801a184:	200001b0 	.word	0x200001b0
 801a188:	200140f8 	.word	0x200140f8
 801a18c:	08015cab 	.word	0x08015cab
 801a190:	200001b4 	.word	0x200001b4

0801a194 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801a194:	b510      	push	{r4, lr}
 801a196:	4604      	mov	r4, r0
 801a198:	f7ff ff88 	bl	801a0ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801a19c:	4620      	mov	r0, r4
 801a19e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a1a2:	f7ff bfbd 	b.w	801a120 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801a1a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801a1a8:	b538      	push	{r3, r4, r5, lr}
 801a1aa:	4c15      	ldr	r4, [pc, #84]	@ (801a200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801a1ac:	7823      	ldrb	r3, [r4, #0]
 801a1ae:	f3bf 8f5b 	dmb	ish
 801a1b2:	07da      	lsls	r2, r3, #31
 801a1b4:	4605      	mov	r5, r0
 801a1b6:	d40b      	bmi.n	801a1d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801a1b8:	4620      	mov	r0, r4
 801a1ba:	f008 f958 	bl	802246e <__cxa_guard_acquire>
 801a1be:	b138      	cbz	r0, 801a1d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801a1c0:	4620      	mov	r0, r4
 801a1c2:	f008 f960 	bl	8022486 <__cxa_guard_release>
 801a1c6:	4a0f      	ldr	r2, [pc, #60]	@ (801a204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a1c8:	490f      	ldr	r1, [pc, #60]	@ (801a208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801a1ca:	4810      	ldr	r0, [pc, #64]	@ (801a20c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a1cc:	f008 f948 	bl	8022460 <__aeabi_atexit>
 801a1d0:	4c0f      	ldr	r4, [pc, #60]	@ (801a210 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801a1d2:	7823      	ldrb	r3, [r4, #0]
 801a1d4:	f3bf 8f5b 	dmb	ish
 801a1d8:	07db      	lsls	r3, r3, #31
 801a1da:	d40b      	bmi.n	801a1f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801a1dc:	4620      	mov	r0, r4
 801a1de:	f008 f946 	bl	802246e <__cxa_guard_acquire>
 801a1e2:	b138      	cbz	r0, 801a1f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801a1e4:	4620      	mov	r0, r4
 801a1e6:	f008 f94e 	bl	8022486 <__cxa_guard_release>
 801a1ea:	4a06      	ldr	r2, [pc, #24]	@ (801a204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a1ec:	4909      	ldr	r1, [pc, #36]	@ (801a214 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801a1ee:	480a      	ldr	r0, [pc, #40]	@ (801a218 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801a1f0:	f008 f936 	bl	8022460 <__aeabi_atexit>
 801a1f4:	4b05      	ldr	r3, [pc, #20]	@ (801a20c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a1f6:	676b      	str	r3, [r5, #116]	@ 0x74
 801a1f8:	4b07      	ldr	r3, [pc, #28]	@ (801a218 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801a1fa:	67ab      	str	r3, [r5, #120]	@ 0x78
 801a1fc:	bd38      	pop	{r3, r4, r5, pc}
 801a1fe:	bf00      	nop
 801a200:	200140ec 	.word	0x200140ec
 801a204:	20000000 	.word	0x20000000
 801a208:	08015ca1 	.word	0x08015ca1
 801a20c:	200001a8 	.word	0x200001a8
 801a210:	200140f0 	.word	0x200140f0
 801a214:	08015c9f 	.word	0x08015c9f
 801a218:	200001ac 	.word	0x200001ac

0801a21c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801a21c:	b538      	push	{r3, r4, r5, lr}
 801a21e:	4c15      	ldr	r4, [pc, #84]	@ (801a274 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801a220:	7823      	ldrb	r3, [r4, #0]
 801a222:	f3bf 8f5b 	dmb	ish
 801a226:	07da      	lsls	r2, r3, #31
 801a228:	4605      	mov	r5, r0
 801a22a:	d40b      	bmi.n	801a244 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801a22c:	4620      	mov	r0, r4
 801a22e:	f008 f91e 	bl	802246e <__cxa_guard_acquire>
 801a232:	b138      	cbz	r0, 801a244 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801a234:	4620      	mov	r0, r4
 801a236:	f008 f926 	bl	8022486 <__cxa_guard_release>
 801a23a:	4a0f      	ldr	r2, [pc, #60]	@ (801a278 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801a23c:	490f      	ldr	r1, [pc, #60]	@ (801a27c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801a23e:	4810      	ldr	r0, [pc, #64]	@ (801a280 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801a240:	f008 f90e 	bl	8022460 <__aeabi_atexit>
 801a244:	4c0f      	ldr	r4, [pc, #60]	@ (801a284 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801a246:	7823      	ldrb	r3, [r4, #0]
 801a248:	f3bf 8f5b 	dmb	ish
 801a24c:	07db      	lsls	r3, r3, #31
 801a24e:	d40b      	bmi.n	801a268 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801a250:	4620      	mov	r0, r4
 801a252:	f008 f90c 	bl	802246e <__cxa_guard_acquire>
 801a256:	b138      	cbz	r0, 801a268 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801a258:	4620      	mov	r0, r4
 801a25a:	f008 f914 	bl	8022486 <__cxa_guard_release>
 801a25e:	4a06      	ldr	r2, [pc, #24]	@ (801a278 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801a260:	4909      	ldr	r1, [pc, #36]	@ (801a288 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801a262:	480a      	ldr	r0, [pc, #40]	@ (801a28c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801a264:	f008 f8fc 	bl	8022460 <__aeabi_atexit>
 801a268:	4b05      	ldr	r3, [pc, #20]	@ (801a280 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801a26a:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801a26c:	4b07      	ldr	r3, [pc, #28]	@ (801a28c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801a26e:	672b      	str	r3, [r5, #112]	@ 0x70
 801a270:	bd38      	pop	{r3, r4, r5, pc}
 801a272:	bf00      	nop
 801a274:	200140e4 	.word	0x200140e4
 801a278:	20000000 	.word	0x20000000
 801a27c:	08015ca5 	.word	0x08015ca5
 801a280:	200001a0 	.word	0x200001a0
 801a284:	200140e8 	.word	0x200140e8
 801a288:	08015ca3 	.word	0x08015ca3
 801a28c:	200001a4 	.word	0x200001a4

0801a290 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801a290:	b510      	push	{r4, lr}
 801a292:	4604      	mov	r4, r0
 801a294:	f7ff ff88 	bl	801a1a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801a298:	4620      	mov	r0, r4
 801a29a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a29e:	f7ff bfbd 	b.w	801a21c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801a2a2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801a2a2:	b510      	push	{r4, lr}
 801a2a4:	4604      	mov	r4, r0
 801a2a6:	f7ff fff3 	bl	801a290 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801a2aa:	4620      	mov	r0, r4
 801a2ac:	f7ff ff72 	bl	801a194 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801a2b0:	4620      	mov	r0, r4
 801a2b2:	f7ff fdf9 	bl	8019ea8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801a2b6:	4620      	mov	r0, r4
 801a2b8:	f7ff fcfa 	bl	8019cb0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801a2bc:	4620      	mov	r0, r4
 801a2be:	f7ff fd75 	bl	8019dac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801a2c2:	4620      	mov	r0, r4
 801a2c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a2c8:	f7ff bee0 	b.w	801a08c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801a2cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801a2cc:	b538      	push	{r3, r4, r5, lr}
 801a2ce:	4c0b      	ldr	r4, [pc, #44]	@ (801a2fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801a2d0:	7823      	ldrb	r3, [r4, #0]
 801a2d2:	f3bf 8f5b 	dmb	ish
 801a2d6:	07db      	lsls	r3, r3, #31
 801a2d8:	4605      	mov	r5, r0
 801a2da:	d40b      	bmi.n	801a2f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801a2dc:	4620      	mov	r0, r4
 801a2de:	f008 f8c6 	bl	802246e <__cxa_guard_acquire>
 801a2e2:	b138      	cbz	r0, 801a2f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801a2e4:	4620      	mov	r0, r4
 801a2e6:	f008 f8ce 	bl	8022486 <__cxa_guard_release>
 801a2ea:	4a05      	ldr	r2, [pc, #20]	@ (801a300 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801a2ec:	4905      	ldr	r1, [pc, #20]	@ (801a304 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801a2ee:	4806      	ldr	r0, [pc, #24]	@ (801a308 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801a2f0:	f008 f8b6 	bl	8022460 <__aeabi_atexit>
 801a2f4:	4b04      	ldr	r3, [pc, #16]	@ (801a308 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801a2f6:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801a2f8:	bd38      	pop	{r3, r4, r5, pc}
 801a2fa:	bf00      	nop
 801a2fc:	200140d8 	.word	0x200140d8
 801a300:	20000000 	.word	0x20000000
 801a304:	08015c9d 	.word	0x08015c9d
 801a308:	20000198 	.word	0x20000198

0801a30c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801a30c:	b538      	push	{r3, r4, r5, lr}
 801a30e:	4c0b      	ldr	r4, [pc, #44]	@ (801a33c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801a310:	7823      	ldrb	r3, [r4, #0]
 801a312:	f3bf 8f5b 	dmb	ish
 801a316:	07db      	lsls	r3, r3, #31
 801a318:	4605      	mov	r5, r0
 801a31a:	d40b      	bmi.n	801a334 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801a31c:	4620      	mov	r0, r4
 801a31e:	f008 f8a6 	bl	802246e <__cxa_guard_acquire>
 801a322:	b138      	cbz	r0, 801a334 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801a324:	4620      	mov	r0, r4
 801a326:	f008 f8ae 	bl	8022486 <__cxa_guard_release>
 801a32a:	4a05      	ldr	r2, [pc, #20]	@ (801a340 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801a32c:	4905      	ldr	r1, [pc, #20]	@ (801a344 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801a32e:	4806      	ldr	r0, [pc, #24]	@ (801a348 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801a330:	f008 f896 	bl	8022460 <__aeabi_atexit>
 801a334:	4b04      	ldr	r3, [pc, #16]	@ (801a348 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801a336:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801a33a:	bd38      	pop	{r3, r4, r5, pc}
 801a33c:	200140dc 	.word	0x200140dc
 801a340:	20000000 	.word	0x20000000
 801a344:	08015c9b 	.word	0x08015c9b
 801a348:	2000019c 	.word	0x2000019c

0801a34c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801a34c:	b570      	push	{r4, r5, r6, lr}
 801a34e:	4d0d      	ldr	r5, [pc, #52]	@ (801a384 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801a350:	4c0d      	ldr	r4, [pc, #52]	@ (801a388 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801a352:	782b      	ldrb	r3, [r5, #0]
 801a354:	f3bf 8f5b 	dmb	ish
 801a358:	f013 0f01 	tst.w	r3, #1
 801a35c:	4606      	mov	r6, r0
 801a35e:	d10d      	bne.n	801a37c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801a360:	4628      	mov	r0, r5
 801a362:	f008 f884 	bl	802246e <__cxa_guard_acquire>
 801a366:	b148      	cbz	r0, 801a37c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801a368:	4b08      	ldr	r3, [pc, #32]	@ (801a38c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801a36a:	6023      	str	r3, [r4, #0]
 801a36c:	4628      	mov	r0, r5
 801a36e:	f008 f88a 	bl	8022486 <__cxa_guard_release>
 801a372:	4a07      	ldr	r2, [pc, #28]	@ (801a390 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801a374:	4907      	ldr	r1, [pc, #28]	@ (801a394 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801a376:	4620      	mov	r0, r4
 801a378:	f008 f872 	bl	8022460 <__aeabi_atexit>
 801a37c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801a380:	bd70      	pop	{r4, r5, r6, pc}
 801a382:	bf00      	nop
 801a384:	200140e0 	.word	0x200140e0
 801a388:	20014258 	.word	0x20014258
 801a38c:	08025ee0 	.word	0x08025ee0
 801a390:	20000000 	.word	0x20000000
 801a394:	08015c99 	.word	0x08015c99

0801a398 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801a398:	b510      	push	{r4, lr}
 801a39a:	4604      	mov	r4, r0
 801a39c:	f7ff ff96 	bl	801a2cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801a3a0:	4620      	mov	r0, r4
 801a3a2:	f7ff ffb3 	bl	801a30c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801a3a6:	4620      	mov	r0, r4
 801a3a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a3ac:	f7ff bfce 	b.w	801a34c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801a3b0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801a3b0:	b570      	push	{r4, r5, r6, lr}
 801a3b2:	4d0d      	ldr	r5, [pc, #52]	@ (801a3e8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801a3b4:	4c0d      	ldr	r4, [pc, #52]	@ (801a3ec <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801a3b6:	782b      	ldrb	r3, [r5, #0]
 801a3b8:	f3bf 8f5b 	dmb	ish
 801a3bc:	f013 0f01 	tst.w	r3, #1
 801a3c0:	4606      	mov	r6, r0
 801a3c2:	d10d      	bne.n	801a3e0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801a3c4:	4628      	mov	r0, r5
 801a3c6:	f008 f852 	bl	802246e <__cxa_guard_acquire>
 801a3ca:	b148      	cbz	r0, 801a3e0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801a3cc:	4b08      	ldr	r3, [pc, #32]	@ (801a3f0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801a3ce:	6023      	str	r3, [r4, #0]
 801a3d0:	4628      	mov	r0, r5
 801a3d2:	f008 f858 	bl	8022486 <__cxa_guard_release>
 801a3d6:	4a07      	ldr	r2, [pc, #28]	@ (801a3f4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801a3d8:	4907      	ldr	r1, [pc, #28]	@ (801a3f8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801a3da:	4620      	mov	r0, r4
 801a3dc:	f008 f840 	bl	8022460 <__aeabi_atexit>
 801a3e0:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801a3e4:	bd70      	pop	{r4, r5, r6, pc}
 801a3e6:	bf00      	nop
 801a3e8:	200140d4 	.word	0x200140d4
 801a3ec:	20014154 	.word	0x20014154
 801a3f0:	08025efc 	.word	0x08025efc
 801a3f4:	20000000 	.word	0x20000000
 801a3f8:	08015c97 	.word	0x08015c97

0801a3fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801a3fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a400:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801a404:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801a408:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801a40c:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801a410:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801a414:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801a418:	8808      	ldrh	r0, [r1, #0]
 801a41a:	fb05 4c0e 	mla	ip, r5, lr, r4
 801a41e:	2d00      	cmp	r5, #0
 801a420:	eb02 0a0c 	add.w	sl, r2, ip
 801a424:	f2c0 80b0 	blt.w	801a588 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a428:	45ab      	cmp	fp, r5
 801a42a:	f340 80ad 	ble.w	801a588 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a42e:	2c00      	cmp	r4, #0
 801a430:	f2c0 80a8 	blt.w	801a584 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a434:	45a6      	cmp	lr, r4
 801a436:	f340 80a5 	ble.w	801a584 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a43a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801a43e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801a442:	1c62      	adds	r2, r4, #1
 801a444:	f100 80a3 	bmi.w	801a58e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a448:	4596      	cmp	lr, r2
 801a44a:	f340 80a0 	ble.w	801a58e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a44e:	f1b9 0f00 	cmp.w	r9, #0
 801a452:	f000 809c 	beq.w	801a58e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a456:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a45a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a45e:	3501      	adds	r5, #1
 801a460:	f100 8099 	bmi.w	801a596 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a464:	45ab      	cmp	fp, r5
 801a466:	f340 8096 	ble.w	801a596 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a46a:	2f00      	cmp	r7, #0
 801a46c:	f000 8093 	beq.w	801a596 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a470:	2c00      	cmp	r4, #0
 801a472:	f2c0 808e 	blt.w	801a592 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a476:	45a6      	cmp	lr, r4
 801a478:	f340 808b 	ble.w	801a592 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a47c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801a480:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801a484:	3401      	adds	r4, #1
 801a486:	f100 8089 	bmi.w	801a59c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a48a:	45a6      	cmp	lr, r4
 801a48c:	f340 8086 	ble.w	801a59c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a490:	f1b9 0f00 	cmp.w	r9, #0
 801a494:	f000 8082 	beq.w	801a59c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a498:	44d6      	add	lr, sl
 801a49a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a49e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801a4a2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801a4a6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a4aa:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801a4ae:	fb19 fe07 	smulbb	lr, r9, r7
 801a4b2:	ea44 0808 	orr.w	r8, r4, r8
 801a4b6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801a4ba:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801a4be:	f1c7 0210 	rsb	r2, r7, #16
 801a4c2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a4c6:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a4ca:	ea44 0c0c 	orr.w	ip, r4, ip
 801a4ce:	eba2 0209 	sub.w	r2, r2, r9
 801a4d2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801a4d6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801a4da:	fb04 f40c 	mul.w	r4, r4, ip
 801a4de:	fb02 4808 	mla	r8, r2, r8, r4
 801a4e2:	041a      	lsls	r2, r3, #16
 801a4e4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a4e8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a4ec:	4313      	orrs	r3, r2
 801a4ee:	042a      	lsls	r2, r5, #16
 801a4f0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a4f4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a4f8:	fb0e 8303 	mla	r3, lr, r3, r8
 801a4fc:	432a      	orrs	r2, r5
 801a4fe:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801a502:	fb07 3202 	mla	r2, r7, r2, r3
 801a506:	0d53      	lsrs	r3, r2, #21
 801a508:	0952      	lsrs	r2, r2, #5
 801a50a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a50e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a512:	431a      	orrs	r2, r3
 801a514:	b293      	uxth	r3, r2
 801a516:	b2b4      	uxth	r4, r6
 801a518:	1202      	asrs	r2, r0, #8
 801a51a:	43f6      	mvns	r6, r6
 801a51c:	b2f6      	uxtb	r6, r6
 801a51e:	121d      	asrs	r5, r3, #8
 801a520:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801a524:	fb12 f206 	smulbb	r2, r2, r6
 801a528:	10c7      	asrs	r7, r0, #3
 801a52a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a52e:	00c0      	lsls	r0, r0, #3
 801a530:	fb05 2504 	mla	r5, r5, r4, r2
 801a534:	b2c0      	uxtb	r0, r0
 801a536:	10da      	asrs	r2, r3, #3
 801a538:	00db      	lsls	r3, r3, #3
 801a53a:	b2db      	uxtb	r3, r3
 801a53c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a540:	fb10 f006 	smulbb	r0, r0, r6
 801a544:	b2ad      	uxth	r5, r5
 801a546:	fb03 0004 	mla	r0, r3, r4, r0
 801a54a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a54e:	fb17 f706 	smulbb	r7, r7, r6
 801a552:	b280      	uxth	r0, r0
 801a554:	1c6b      	adds	r3, r5, #1
 801a556:	fb02 7204 	mla	r2, r2, r4, r7
 801a55a:	b292      	uxth	r2, r2
 801a55c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a560:	1c43      	adds	r3, r0, #1
 801a562:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a566:	1c50      	adds	r0, r2, #1
 801a568:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a56c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a570:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a574:	0952      	lsrs	r2, r2, #5
 801a576:	432b      	orrs	r3, r5
 801a578:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a57c:	4313      	orrs	r3, r2
 801a57e:	800b      	strh	r3, [r1, #0]
 801a580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a584:	4680      	mov	r8, r0
 801a586:	e75c      	b.n	801a442 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801a588:	4684      	mov	ip, r0
 801a58a:	4680      	mov	r8, r0
 801a58c:	e767      	b.n	801a45e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a58e:	4684      	mov	ip, r0
 801a590:	e765      	b.n	801a45e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a592:	4605      	mov	r5, r0
 801a594:	e776      	b.n	801a484 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801a596:	4603      	mov	r3, r0
 801a598:	4605      	mov	r5, r0
 801a59a:	e782      	b.n	801a4a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801a59c:	4603      	mov	r3, r0
 801a59e:	e780      	b.n	801a4a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801a5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5a4:	b099      	sub	sp, #100	@ 0x64
 801a5a6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801a5aa:	9215      	str	r2, [sp, #84]	@ 0x54
 801a5ac:	9309      	str	r3, [sp, #36]	@ 0x24
 801a5ae:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801a5b0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801a5b4:	930d      	str	r3, [sp, #52]	@ 0x34
 801a5b6:	910c      	str	r1, [sp, #48]	@ 0x30
 801a5b8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801a5bc:	9016      	str	r0, [sp, #88]	@ 0x58
 801a5be:	6850      	ldr	r0, [r2, #4]
 801a5c0:	6812      	ldr	r2, [r2, #0]
 801a5c2:	fb00 1303 	mla	r3, r0, r3, r1
 801a5c6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801a5ca:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a5cc:	681b      	ldr	r3, [r3, #0]
 801a5ce:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a5d0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a5d2:	685e      	ldr	r6, [r3, #4]
 801a5d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a5d6:	43db      	mvns	r3, r3
 801a5d8:	b2db      	uxtb	r3, r3
 801a5da:	3604      	adds	r6, #4
 801a5dc:	930a      	str	r3, [sp, #40]	@ 0x28
 801a5de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a5e0:	2b00      	cmp	r3, #0
 801a5e2:	dc03      	bgt.n	801a5ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a5e4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801a5e6:	2b00      	cmp	r3, #0
 801a5e8:	f340 8225 	ble.w	801aa36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a5ec:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a5ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a5f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a5f6:	1e48      	subs	r0, r1, #1
 801a5f8:	1e57      	subs	r7, r2, #1
 801a5fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a5fc:	2b00      	cmp	r3, #0
 801a5fe:	f340 80e3 	ble.w	801a7c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a602:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801a606:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a60a:	d406      	bmi.n	801a61a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a60c:	4584      	cmp	ip, r0
 801a60e:	da04      	bge.n	801a61a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a610:	2b00      	cmp	r3, #0
 801a612:	db02      	blt.n	801a61a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a614:	42bb      	cmp	r3, r7
 801a616:	f2c0 80d8 	blt.w	801a7ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a61a:	f11c 0c01 	adds.w	ip, ip, #1
 801a61e:	f100 80c9 	bmi.w	801a7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a622:	4561      	cmp	r1, ip
 801a624:	f2c0 80c6 	blt.w	801a7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a628:	3301      	adds	r3, #1
 801a62a:	f100 80c3 	bmi.w	801a7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a62e:	429a      	cmp	r2, r3
 801a630:	f2c0 80c0 	blt.w	801a7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a634:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801a638:	4647      	mov	r7, r8
 801a63a:	f1bb 0f00 	cmp.w	fp, #0
 801a63e:	f340 80e3 	ble.w	801a808 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801a642:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801a644:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a646:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a64a:	689b      	ldr	r3, [r3, #8]
 801a64c:	ea5f 422a 	movs.w	r2, sl, asr #16
 801a650:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a654:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801a658:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a65c:	f100 8121 	bmi.w	801a8a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a660:	f103 39ff 	add.w	r9, r3, #4294967295
 801a664:	454a      	cmp	r2, r9
 801a666:	f280 811c 	bge.w	801a8a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a66a:	f1bc 0f00 	cmp.w	ip, #0
 801a66e:	f2c0 8118 	blt.w	801a8a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a672:	f10e 39ff 	add.w	r9, lr, #4294967295
 801a676:	45cc      	cmp	ip, r9
 801a678:	f280 8113 	bge.w	801a8a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a67c:	b21b      	sxth	r3, r3
 801a67e:	fb0c 2203 	mla	r2, ip, r3, r2
 801a682:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a684:	eb04 0902 	add.w	r9, r4, r2
 801a688:	5ca2      	ldrb	r2, [r4, r2]
 801a68a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801a68e:	2800      	cmp	r0, #0
 801a690:	f000 80fe 	beq.w	801a890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a694:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a698:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801a69c:	9211      	str	r2, [sp, #68]	@ 0x44
 801a69e:	b151      	cbz	r1, 801a6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a6a0:	eb09 0203 	add.w	r2, r9, r3
 801a6a4:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a6a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a6ac:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a6ae:	7853      	ldrb	r3, [r2, #1]
 801a6b0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a6b4:	9312      	str	r3, [sp, #72]	@ 0x48
 801a6b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a6b8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a6ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a6be:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a6c2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a6c6:	ea4c 0c03 	orr.w	ip, ip, r3
 801a6ca:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a6cc:	041b      	lsls	r3, r3, #16
 801a6ce:	fb10 f201 	smulbb	r2, r0, r1
 801a6d2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801a6d6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a6da:	10d2      	asrs	r2, r2, #3
 801a6dc:	4323      	orrs	r3, r4
 801a6de:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801a6e2:	4353      	muls	r3, r2
 801a6e4:	fb09 330c 	mla	r3, r9, ip, r3
 801a6e8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a6ec:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a6f0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a6f4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a6f8:	f1c1 0c10 	rsb	ip, r1, #16
 801a6fc:	ebac 0c00 	sub.w	ip, ip, r0
 801a700:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a704:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a708:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a70a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a70c:	0418      	lsls	r0, r3, #16
 801a70e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a712:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a716:	4318      	orrs	r0, r3
 801a718:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a71c:	fb02 c200 	mla	r2, r2, r0, ip
 801a720:	0d53      	lsrs	r3, r2, #21
 801a722:	0952      	lsrs	r2, r2, #5
 801a724:	8838      	ldrh	r0, [r7, #0]
 801a726:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a72a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a72e:	431a      	orrs	r2, r3
 801a730:	b292      	uxth	r2, r2
 801a732:	1201      	asrs	r1, r0, #8
 801a734:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801a738:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a73c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a740:	fb11 f104 	smulbb	r1, r1, r4
 801a744:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a748:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a74c:	00c0      	lsls	r0, r0, #3
 801a74e:	fb0c 1c03 	mla	ip, ip, r3, r1
 801a752:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801a756:	10d1      	asrs	r1, r2, #3
 801a758:	b2c0      	uxtb	r0, r0
 801a75a:	00d2      	lsls	r2, r2, #3
 801a75c:	b2d2      	uxtb	r2, r2
 801a75e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a762:	fb1e fe04 	smulbb	lr, lr, r4
 801a766:	fb10 f004 	smulbb	r0, r0, r4
 801a76a:	fa1f fc8c 	uxth.w	ip, ip
 801a76e:	fb01 e103 	mla	r1, r1, r3, lr
 801a772:	fb02 0303 	mla	r3, r2, r3, r0
 801a776:	b29a      	uxth	r2, r3
 801a778:	f10c 0301 	add.w	r3, ip, #1
 801a77c:	b289      	uxth	r1, r1
 801a77e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a782:	1c53      	adds	r3, r2, #1
 801a784:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a788:	1c4a      	adds	r2, r1, #1
 801a78a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a78e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a792:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a796:	0949      	lsrs	r1, r1, #5
 801a798:	ea43 030c 	orr.w	r3, r3, ip
 801a79c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a7a0:	430b      	orrs	r3, r1
 801a7a2:	803b      	strh	r3, [r7, #0]
 801a7a4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a7a6:	449a      	add	sl, r3
 801a7a8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a7aa:	3702      	adds	r7, #2
 801a7ac:	441d      	add	r5, r3
 801a7ae:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a7b2:	e742      	b.n	801a63a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a7b4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a7b6:	449a      	add	sl, r3
 801a7b8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a7ba:	441d      	add	r5, r3
 801a7bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a7be:	3b01      	subs	r3, #1
 801a7c0:	9309      	str	r3, [sp, #36]	@ 0x24
 801a7c2:	f108 0802 	add.w	r8, r8, #2
 801a7c6:	e718      	b.n	801a5fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a7c8:	d023      	beq.n	801a812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a7ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a7cc:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801a7ce:	3b01      	subs	r3, #1
 801a7d0:	fb00 a003 	mla	r0, r0, r3, sl
 801a7d4:	1400      	asrs	r0, r0, #16
 801a7d6:	f53f af2d 	bmi.w	801a634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a7da:	3901      	subs	r1, #1
 801a7dc:	4288      	cmp	r0, r1
 801a7de:	f6bf af29 	bge.w	801a634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a7e2:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801a7e4:	fb01 5303 	mla	r3, r1, r3, r5
 801a7e8:	141b      	asrs	r3, r3, #16
 801a7ea:	f53f af23 	bmi.w	801a634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a7ee:	3a01      	subs	r2, #1
 801a7f0:	4293      	cmp	r3, r2
 801a7f2:	f6bf af1f 	bge.w	801a634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a7f6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801a7fa:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801a7fe:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801a802:	f1be 0f00 	cmp.w	lr, #0
 801a806:	dc6c      	bgt.n	801a8e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a808:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a80a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a80e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a812:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a814:	2b00      	cmp	r3, #0
 801a816:	f340 810e 	ble.w	801aa36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a81a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a81e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a822:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a826:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a828:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a82c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a830:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a834:	eef0 6a62 	vmov.f32	s13, s5
 801a838:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a83c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a840:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a844:	ee16 aa90 	vmov	sl, s13
 801a848:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a84c:	eef0 6a43 	vmov.f32	s13, s6
 801a850:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a854:	ee12 2a90 	vmov	r2, s5
 801a858:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a85c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a860:	ee13 2a10 	vmov	r2, s6
 801a864:	9325      	str	r3, [sp, #148]	@ 0x94
 801a866:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a868:	fb92 f3f3 	sdiv	r3, r2, r3
 801a86c:	9326      	str	r3, [sp, #152]	@ 0x98
 801a86e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a870:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801a872:	3b01      	subs	r3, #1
 801a874:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a878:	930c      	str	r3, [sp, #48]	@ 0x30
 801a87a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a87c:	bf08      	it	eq
 801a87e:	4613      	moveq	r3, r2
 801a880:	ee16 5a90 	vmov	r5, s13
 801a884:	9309      	str	r3, [sp, #36]	@ 0x24
 801a886:	eeb0 3a67 	vmov.f32	s6, s15
 801a88a:	eef0 2a47 	vmov.f32	s5, s14
 801a88e:	e6a6      	b.n	801a5de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a890:	2900      	cmp	r1, #0
 801a892:	f43f af10 	beq.w	801a6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a896:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a89a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a89e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a8a0:	e709      	b.n	801a6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a8a2:	f112 0901 	adds.w	r9, r2, #1
 801a8a6:	f53f af7d 	bmi.w	801a7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a8aa:	454b      	cmp	r3, r9
 801a8ac:	f6ff af7a 	blt.w	801a7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a8b0:	f11c 0901 	adds.w	r9, ip, #1
 801a8b4:	f53f af76 	bmi.w	801a7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a8b8:	45ce      	cmp	lr, r9
 801a8ba:	f6ff af73 	blt.w	801a7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a8be:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a8c0:	9202      	str	r2, [sp, #8]
 801a8c2:	b21b      	sxth	r3, r3
 801a8c4:	fa0f f28e 	sxth.w	r2, lr
 801a8c8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a8cc:	e9cd c003 	strd	ip, r0, [sp, #12]
 801a8d0:	9201      	str	r2, [sp, #4]
 801a8d2:	9300      	str	r3, [sp, #0]
 801a8d4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a8d6:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801a8d8:	4633      	mov	r3, r6
 801a8da:	4639      	mov	r1, r7
 801a8dc:	f7ff fd8e 	bl	801a3fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801a8e0:	e760      	b.n	801a7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a8e2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a8e4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a8e6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a8ea:	ea4f 422a 	mov.w	r2, sl, asr #16
 801a8ee:	1429      	asrs	r1, r5, #16
 801a8f0:	fb03 2101 	mla	r1, r3, r1, r2
 801a8f4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a8f6:	440a      	add	r2, r1
 801a8f8:	5c61      	ldrb	r1, [r4, r1]
 801a8fa:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801a8fe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a902:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801a906:	f1bc 0f00 	cmp.w	ip, #0
 801a90a:	f000 808c 	beq.w	801aa26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801a90e:	7857      	ldrb	r7, [r2, #1]
 801a910:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801a914:	9413      	str	r4, [sp, #76]	@ 0x4c
 801a916:	b140      	cbz	r0, 801a92a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a918:	18d7      	adds	r7, r2, r3
 801a91a:	5cd3      	ldrb	r3, [r2, r3]
 801a91c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a920:	9310      	str	r3, [sp, #64]	@ 0x40
 801a922:	787b      	ldrb	r3, [r7, #1]
 801a924:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a928:	9314      	str	r3, [sp, #80]	@ 0x50
 801a92a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a92c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a92e:	fb1c f200 	smulbb	r2, ip, r0
 801a932:	041f      	lsls	r7, r3, #16
 801a934:	10d2      	asrs	r2, r2, #3
 801a936:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a93a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801a93e:	431f      	orrs	r7, r3
 801a940:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801a944:	9317      	str	r3, [sp, #92]	@ 0x5c
 801a946:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801a948:	041b      	lsls	r3, r3, #16
 801a94a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801a94e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a952:	ea43 030b 	orr.w	r3, r3, fp
 801a956:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a958:	4353      	muls	r3, r2
 801a95a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a95e:	fb04 3707 	mla	r7, r4, r7, r3
 801a962:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a966:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a96a:	ea43 0b01 	orr.w	fp, r3, r1
 801a96e:	f1c0 0110 	rsb	r1, r0, #16
 801a972:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a974:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a976:	eba1 0c0c 	sub.w	ip, r1, ip
 801a97a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a97e:	fb0c 770b 	mla	r7, ip, fp, r7
 801a982:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a986:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801a98a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a98e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a992:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a996:	fb02 770c 	mla	r7, r2, ip, r7
 801a99a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a99c:	0d79      	lsrs	r1, r7, #21
 801a99e:	097f      	lsrs	r7, r7, #5
 801a9a0:	8812      	ldrh	r2, [r2, #0]
 801a9a2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a9a6:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a9aa:	430f      	orrs	r7, r1
 801a9ac:	b2bb      	uxth	r3, r7
 801a9ae:	1211      	asrs	r1, r2, #8
 801a9b0:	1218      	asrs	r0, r3, #8
 801a9b2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a9b6:	fb11 f104 	smulbb	r1, r1, r4
 801a9ba:	10d7      	asrs	r7, r2, #3
 801a9bc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a9c0:	00d2      	lsls	r2, r2, #3
 801a9c2:	fb00 1009 	mla	r0, r0, r9, r1
 801a9c6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a9ca:	10d9      	asrs	r1, r3, #3
 801a9cc:	b2d2      	uxtb	r2, r2
 801a9ce:	00db      	lsls	r3, r3, #3
 801a9d0:	fb17 f704 	smulbb	r7, r7, r4
 801a9d4:	fb12 f204 	smulbb	r2, r2, r4
 801a9d8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a9dc:	b2db      	uxtb	r3, r3
 801a9de:	b280      	uxth	r0, r0
 801a9e0:	fb01 7109 	mla	r1, r1, r9, r7
 801a9e4:	fb03 2309 	mla	r3, r3, r9, r2
 801a9e8:	b29b      	uxth	r3, r3
 801a9ea:	b289      	uxth	r1, r1
 801a9ec:	1c42      	adds	r2, r0, #1
 801a9ee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a9f2:	1c4f      	adds	r7, r1, #1
 801a9f4:	1c5a      	adds	r2, r3, #1
 801a9f6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a9fa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a9fe:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801aa02:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aa06:	0949      	lsrs	r1, r1, #5
 801aa08:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801aa0a:	4310      	orrs	r0, r2
 801aa0c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801aa10:	4308      	orrs	r0, r1
 801aa12:	f823 0b02 	strh.w	r0, [r3], #2
 801aa16:	930e      	str	r3, [sp, #56]	@ 0x38
 801aa18:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801aa1a:	449a      	add	sl, r3
 801aa1c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801aa1e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801aa22:	441d      	add	r5, r3
 801aa24:	e6ed      	b.n	801a802 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801aa26:	2800      	cmp	r0, #0
 801aa28:	f43f af7f 	beq.w	801a92a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801aa2c:	5cd3      	ldrb	r3, [r2, r3]
 801aa2e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801aa32:	9310      	str	r3, [sp, #64]	@ 0x40
 801aa34:	e779      	b.n	801a92a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801aa36:	b019      	add	sp, #100	@ 0x64
 801aa38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aa3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801aa3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aa40:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801aa44:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801aa48:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801aa4c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801aa50:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801aa54:	8808      	ldrh	r0, [r1, #0]
 801aa56:	fb08 470e 	mla	r7, r8, lr, r4
 801aa5a:	f1b8 0f00 	cmp.w	r8, #0
 801aa5e:	eb02 0907 	add.w	r9, r2, r7
 801aa62:	db67      	blt.n	801ab34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801aa64:	45c2      	cmp	sl, r8
 801aa66:	dd65      	ble.n	801ab34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801aa68:	2c00      	cmp	r4, #0
 801aa6a:	db61      	blt.n	801ab30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801aa6c:	45a6      	cmp	lr, r4
 801aa6e:	dd5f      	ble.n	801ab30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801aa70:	5dd2      	ldrb	r2, [r2, r7]
 801aa72:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801aa76:	1c62      	adds	r2, r4, #1
 801aa78:	d45f      	bmi.n	801ab3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aa7a:	4596      	cmp	lr, r2
 801aa7c:	dd5d      	ble.n	801ab3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aa7e:	2d00      	cmp	r5, #0
 801aa80:	d05b      	beq.n	801ab3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aa82:	f899 2001 	ldrb.w	r2, [r9, #1]
 801aa86:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801aa8a:	f118 0801 	adds.w	r8, r8, #1
 801aa8e:	d458      	bmi.n	801ab42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aa90:	45c2      	cmp	sl, r8
 801aa92:	dd56      	ble.n	801ab42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aa94:	2e00      	cmp	r6, #0
 801aa96:	d054      	beq.n	801ab42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aa98:	2c00      	cmp	r4, #0
 801aa9a:	db50      	blt.n	801ab3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801aa9c:	45a6      	cmp	lr, r4
 801aa9e:	dd4e      	ble.n	801ab3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801aaa0:	f819 200e 	ldrb.w	r2, [r9, lr]
 801aaa4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801aaa8:	3401      	adds	r4, #1
 801aaaa:	d407      	bmi.n	801aabc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801aaac:	45a6      	cmp	lr, r4
 801aaae:	dd05      	ble.n	801aabc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801aab0:	b125      	cbz	r5, 801aabc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801aab2:	44ce      	add	lr, r9
 801aab4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801aab8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801aabc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801aac0:	fb15 f406 	smulbb	r4, r5, r6
 801aac4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801aac8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801aacc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801aad0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801aad4:	ea43 0c0c 	orr.w	ip, r3, ip
 801aad8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801aadc:	f1c6 0310 	rsb	r3, r6, #16
 801aae0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801aae4:	1b5b      	subs	r3, r3, r5
 801aae6:	ea4e 0707 	orr.w	r7, lr, r7
 801aaea:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801aaee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801aaf2:	437d      	muls	r5, r7
 801aaf4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801aaf8:	0403      	lsls	r3, r0, #16
 801aafa:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801aafe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ab02:	4318      	orrs	r0, r3
 801ab04:	0413      	lsls	r3, r2, #16
 801ab06:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ab0a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ab0e:	4313      	orrs	r3, r2
 801ab10:	fb04 c000 	mla	r0, r4, r0, ip
 801ab14:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ab18:	fb06 0003 	mla	r0, r6, r3, r0
 801ab1c:	0d43      	lsrs	r3, r0, #21
 801ab1e:	0940      	lsrs	r0, r0, #5
 801ab20:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ab24:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ab28:	4318      	orrs	r0, r3
 801ab2a:	8008      	strh	r0, [r1, #0]
 801ab2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ab30:	4684      	mov	ip, r0
 801ab32:	e7a0      	b.n	801aa76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ab34:	4607      	mov	r7, r0
 801ab36:	4684      	mov	ip, r0
 801ab38:	e7a7      	b.n	801aa8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ab3a:	4607      	mov	r7, r0
 801ab3c:	e7a5      	b.n	801aa8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ab3e:	4602      	mov	r2, r0
 801ab40:	e7b2      	b.n	801aaa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ab42:	4602      	mov	r2, r0
 801ab44:	e7ba      	b.n	801aabc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ab46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab4a:	b093      	sub	sp, #76	@ 0x4c
 801ab4c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801ab50:	920f      	str	r2, [sp, #60]	@ 0x3c
 801ab52:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ab54:	9108      	str	r1, [sp, #32]
 801ab56:	9306      	str	r3, [sp, #24]
 801ab58:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ab5c:	9010      	str	r0, [sp, #64]	@ 0x40
 801ab5e:	6850      	ldr	r0, [r2, #4]
 801ab60:	6812      	ldr	r2, [r2, #0]
 801ab62:	fb00 1303 	mla	r3, r0, r3, r1
 801ab66:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ab6a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ab6c:	681b      	ldr	r3, [r3, #0]
 801ab6e:	9307      	str	r3, [sp, #28]
 801ab70:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ab72:	685f      	ldr	r7, [r3, #4]
 801ab74:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801ab78:	3704      	adds	r7, #4
 801ab7a:	9b08      	ldr	r3, [sp, #32]
 801ab7c:	2b00      	cmp	r3, #0
 801ab7e:	dc03      	bgt.n	801ab88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ab80:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ab82:	2b00      	cmp	r3, #0
 801ab84:	f340 81b2 	ble.w	801aeec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ab88:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ab8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ab8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ab92:	1e48      	subs	r0, r1, #1
 801ab94:	f102 3cff 	add.w	ip, r2, #4294967295
 801ab98:	9b06      	ldr	r3, [sp, #24]
 801ab9a:	2b00      	cmp	r3, #0
 801ab9c:	f340 80a9 	ble.w	801acf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801aba0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801aba4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801aba8:	d406      	bmi.n	801abb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801abaa:	4586      	cmp	lr, r0
 801abac:	da04      	bge.n	801abb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801abae:	2b00      	cmp	r3, #0
 801abb0:	db02      	blt.n	801abb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801abb2:	4563      	cmp	r3, ip
 801abb4:	f2c0 809e 	blt.w	801acf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801abb8:	f11e 0e01 	adds.w	lr, lr, #1
 801abbc:	f100 808f 	bmi.w	801acde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801abc0:	4571      	cmp	r1, lr
 801abc2:	f2c0 808c 	blt.w	801acde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801abc6:	3301      	adds	r3, #1
 801abc8:	f100 8089 	bmi.w	801acde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801abcc:	429a      	cmp	r2, r3
 801abce:	f2c0 8086 	blt.w	801acde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801abd2:	f8dd b018 	ldr.w	fp, [sp, #24]
 801abd6:	46c8      	mov	r8, r9
 801abd8:	f1bb 0f00 	cmp.w	fp, #0
 801abdc:	f340 80a6 	ble.w	801ad2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801abe0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801abe2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801abe4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801abe8:	689b      	ldr	r3, [r3, #8]
 801abea:	1422      	asrs	r2, r4, #16
 801abec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801abf0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801abf4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801abf8:	f100 80e3 	bmi.w	801adc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801abfc:	f103 3aff 	add.w	sl, r3, #4294967295
 801ac00:	4552      	cmp	r2, sl
 801ac02:	f280 80de 	bge.w	801adc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ac06:	f1bc 0f00 	cmp.w	ip, #0
 801ac0a:	f2c0 80da 	blt.w	801adc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ac0e:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ac12:	45d4      	cmp	ip, sl
 801ac14:	f280 80d5 	bge.w	801adc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ac18:	b21b      	sxth	r3, r3
 801ac1a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ac1e:	9d07      	ldr	r5, [sp, #28]
 801ac20:	eb05 0a02 	add.w	sl, r5, r2
 801ac24:	5caa      	ldrb	r2, [r5, r2]
 801ac26:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ac2a:	2800      	cmp	r0, #0
 801ac2c:	f000 80c0 	beq.w	801adb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ac30:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ac34:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ac38:	920b      	str	r2, [sp, #44]	@ 0x2c
 801ac3a:	b151      	cbz	r1, 801ac52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ac3c:	eb0a 0203 	add.w	r2, sl, r3
 801ac40:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ac44:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ac48:	9309      	str	r3, [sp, #36]	@ 0x24
 801ac4a:	7853      	ldrb	r3, [r2, #1]
 801ac4c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ac50:	930c      	str	r3, [sp, #48]	@ 0x30
 801ac52:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ac54:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ac56:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ac5a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ac5e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ac62:	ea4c 0c03 	orr.w	ip, ip, r3
 801ac66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ac68:	041b      	lsls	r3, r3, #16
 801ac6a:	fb10 f201 	smulbb	r2, r0, r1
 801ac6e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ac72:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ac76:	10d2      	asrs	r2, r2, #3
 801ac78:	432b      	orrs	r3, r5
 801ac7a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ac7e:	4353      	muls	r3, r2
 801ac80:	fb0a 330c 	mla	r3, sl, ip, r3
 801ac84:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ac88:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ac8c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ac90:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ac94:	f1c1 0c10 	rsb	ip, r1, #16
 801ac98:	ebac 0c00 	sub.w	ip, ip, r0
 801ac9c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801aca0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801aca4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aca6:	0418      	lsls	r0, r3, #16
 801aca8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801acac:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801acb0:	4318      	orrs	r0, r3
 801acb2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801acb6:	fb02 c200 	mla	r2, r2, r0, ip
 801acba:	0d53      	lsrs	r3, r2, #21
 801acbc:	0952      	lsrs	r2, r2, #5
 801acbe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801acc2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801acc6:	431a      	orrs	r2, r3
 801acc8:	f8a8 2000 	strh.w	r2, [r8]
 801accc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801acce:	441c      	add	r4, r3
 801acd0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801acd2:	f108 0802 	add.w	r8, r8, #2
 801acd6:	441e      	add	r6, r3
 801acd8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801acdc:	e77c      	b.n	801abd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801acde:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ace0:	441c      	add	r4, r3
 801ace2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ace4:	441e      	add	r6, r3
 801ace6:	9b06      	ldr	r3, [sp, #24]
 801ace8:	3b01      	subs	r3, #1
 801acea:	9306      	str	r3, [sp, #24]
 801acec:	f109 0902 	add.w	r9, r9, #2
 801acf0:	e752      	b.n	801ab98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801acf2:	d020      	beq.n	801ad36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801acf4:	9b06      	ldr	r3, [sp, #24]
 801acf6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801acf8:	3b01      	subs	r3, #1
 801acfa:	fb00 4003 	mla	r0, r0, r3, r4
 801acfe:	1400      	asrs	r0, r0, #16
 801ad00:	f53f af67 	bmi.w	801abd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ad04:	3901      	subs	r1, #1
 801ad06:	4288      	cmp	r0, r1
 801ad08:	f6bf af63 	bge.w	801abd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ad0c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801ad0e:	fb01 6303 	mla	r3, r1, r3, r6
 801ad12:	141b      	asrs	r3, r3, #16
 801ad14:	f53f af5d 	bmi.w	801abd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ad18:	3a01      	subs	r2, #1
 801ad1a:	4293      	cmp	r3, r2
 801ad1c:	f6bf af59 	bge.w	801abd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ad20:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ad24:	46ca      	mov	sl, r9
 801ad26:	f1b8 0f00 	cmp.w	r8, #0
 801ad2a:	dc67      	bgt.n	801adfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ad2c:	9b06      	ldr	r3, [sp, #24]
 801ad2e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ad32:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ad36:	9b08      	ldr	r3, [sp, #32]
 801ad38:	2b00      	cmp	r3, #0
 801ad3a:	f340 80d7 	ble.w	801aeec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ad3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad46:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad4a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ad4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad54:	eeb0 6a62 	vmov.f32	s12, s5
 801ad58:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad60:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad64:	ee16 4a10 	vmov	r4, s12
 801ad68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad6c:	eeb0 6a43 	vmov.f32	s12, s6
 801ad70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad74:	ee12 2a90 	vmov	r2, s5
 801ad78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad7c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad80:	ee13 2a10 	vmov	r2, s6
 801ad84:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ad86:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ad88:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad8c:	9320      	str	r3, [sp, #128]	@ 0x80
 801ad8e:	9b08      	ldr	r3, [sp, #32]
 801ad90:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ad92:	3b01      	subs	r3, #1
 801ad94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad98:	9308      	str	r3, [sp, #32]
 801ad9a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ad9c:	bf08      	it	eq
 801ad9e:	4613      	moveq	r3, r2
 801ada0:	ee16 6a10 	vmov	r6, s12
 801ada4:	9306      	str	r3, [sp, #24]
 801ada6:	eeb0 3a67 	vmov.f32	s6, s15
 801adaa:	eef0 2a47 	vmov.f32	s5, s14
 801adae:	e6e4      	b.n	801ab7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801adb0:	2900      	cmp	r1, #0
 801adb2:	f43f af4e 	beq.w	801ac52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801adb6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801adba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801adbe:	9309      	str	r3, [sp, #36]	@ 0x24
 801adc0:	e747      	b.n	801ac52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801adc2:	f112 0a01 	adds.w	sl, r2, #1
 801adc6:	d481      	bmi.n	801accc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801adc8:	4553      	cmp	r3, sl
 801adca:	f6ff af7f 	blt.w	801accc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801adce:	f11c 0a01 	adds.w	sl, ip, #1
 801add2:	f53f af7b 	bmi.w	801accc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801add6:	45d6      	cmp	lr, sl
 801add8:	f6ff af78 	blt.w	801accc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801addc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801ade0:	b21b      	sxth	r3, r3
 801ade2:	fa0f f28e 	sxth.w	r2, lr
 801ade6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801adea:	9201      	str	r2, [sp, #4]
 801adec:	9300      	str	r3, [sp, #0]
 801adee:	9a07      	ldr	r2, [sp, #28]
 801adf0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801adf2:	463b      	mov	r3, r7
 801adf4:	4641      	mov	r1, r8
 801adf6:	f7ff fe21 	bl	801aa3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801adfa:	e767      	b.n	801accc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801adfc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801adfe:	9d07      	ldr	r5, [sp, #28]
 801ae00:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ae04:	1422      	asrs	r2, r4, #16
 801ae06:	1431      	asrs	r1, r6, #16
 801ae08:	fb03 2101 	mla	r1, r3, r1, r2
 801ae0c:	9a07      	ldr	r2, [sp, #28]
 801ae0e:	440a      	add	r2, r1
 801ae10:	5c69      	ldrb	r1, [r5, r1]
 801ae12:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801ae16:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ae1a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801ae1e:	f1be 0f00 	cmp.w	lr, #0
 801ae22:	d05c      	beq.n	801aede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ae24:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ae28:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801ae2c:	950d      	str	r5, [sp, #52]	@ 0x34
 801ae2e:	b150      	cbz	r0, 801ae46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ae30:	eb02 0c03 	add.w	ip, r2, r3
 801ae34:	5cd3      	ldrb	r3, [r2, r3]
 801ae36:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ae3a:	930a      	str	r3, [sp, #40]	@ 0x28
 801ae3c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ae40:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ae44:	930e      	str	r3, [sp, #56]	@ 0x38
 801ae46:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ae48:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ae4a:	fb1e f200 	smulbb	r2, lr, r0
 801ae4e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ae52:	10d2      	asrs	r2, r2, #3
 801ae54:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ae58:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ae5c:	ea4c 0c03 	orr.w	ip, ip, r3
 801ae60:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ae64:	9311      	str	r3, [sp, #68]	@ 0x44
 801ae66:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ae68:	041b      	lsls	r3, r3, #16
 801ae6a:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801ae6e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ae72:	ea43 030b 	orr.w	r3, r3, fp
 801ae76:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ae78:	4353      	muls	r3, r2
 801ae7a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ae7e:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ae82:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ae86:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801ae8a:	ea43 0b01 	orr.w	fp, r3, r1
 801ae8e:	f1c0 0110 	rsb	r1, r0, #16
 801ae92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ae94:	eba1 0e0e 	sub.w	lr, r1, lr
 801ae98:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801ae9c:	fb0e cc0b 	mla	ip, lr, fp, ip
 801aea0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801aea4:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801aea8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801aeac:	ea4b 0e0e 	orr.w	lr, fp, lr
 801aeb0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801aeb4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801aeb8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801aebc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801aec0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801aec4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801aec8:	ea43 0c0c 	orr.w	ip, r3, ip
 801aecc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aece:	f82a cb02 	strh.w	ip, [sl], #2
 801aed2:	441c      	add	r4, r3
 801aed4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aed6:	f108 38ff 	add.w	r8, r8, #4294967295
 801aeda:	441e      	add	r6, r3
 801aedc:	e723      	b.n	801ad26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801aede:	2800      	cmp	r0, #0
 801aee0:	d0b1      	beq.n	801ae46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801aee2:	5cd3      	ldrb	r3, [r2, r3]
 801aee4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801aee8:	930a      	str	r3, [sp, #40]	@ 0x28
 801aeea:	e7ac      	b.n	801ae46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801aeec:	b013      	add	sp, #76	@ 0x4c
 801aeee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aef2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801aef2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aef6:	880d      	ldrh	r5, [r1, #0]
 801aef8:	b087      	sub	sp, #28
 801aefa:	10ef      	asrs	r7, r5, #3
 801aefc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801af00:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801af04:	00ed      	lsls	r5, r5, #3
 801af06:	9701      	str	r7, [sp, #4]
 801af08:	b2ed      	uxtb	r5, r5
 801af0a:	9502      	str	r5, [sp, #8]
 801af0c:	9d01      	ldr	r5, [sp, #4]
 801af0e:	9103      	str	r1, [sp, #12]
 801af10:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801af14:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801af18:	9902      	ldr	r1, [sp, #8]
 801af1a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801af1e:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801af22:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801af26:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801af2a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801af2e:	022d      	lsls	r5, r5, #8
 801af30:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801af34:	fb06 0709 	mla	r7, r6, r9, r0
 801af38:	430d      	orrs	r5, r1
 801af3a:	2e00      	cmp	r6, #0
 801af3c:	eb02 0c07 	add.w	ip, r2, r7
 801af40:	9505      	str	r5, [sp, #20]
 801af42:	f2c0 80b6 	blt.w	801b0b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801af46:	45b3      	cmp	fp, r6
 801af48:	f340 80b3 	ble.w	801b0b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801af4c:	2800      	cmp	r0, #0
 801af4e:	f2c0 80ae 	blt.w	801b0ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801af52:	4581      	cmp	r9, r0
 801af54:	f340 80ab 	ble.w	801b0ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801af58:	5dd7      	ldrb	r7, [r2, r7]
 801af5a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801af5e:	441f      	add	r7, r3
 801af60:	1c42      	adds	r2, r0, #1
 801af62:	f100 80a9 	bmi.w	801b0b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801af66:	4591      	cmp	r9, r2
 801af68:	f340 80a6 	ble.w	801b0b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801af6c:	2c00      	cmp	r4, #0
 801af6e:	f000 80a3 	beq.w	801b0b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801af72:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801af76:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801af7a:	441d      	add	r5, r3
 801af7c:	3601      	adds	r6, #1
 801af7e:	f100 809f 	bmi.w	801b0c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801af82:	45b3      	cmp	fp, r6
 801af84:	f340 809c 	ble.w	801b0c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801af88:	f1be 0f00 	cmp.w	lr, #0
 801af8c:	f000 8098 	beq.w	801b0c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801af90:	2800      	cmp	r0, #0
 801af92:	f2c0 8093 	blt.w	801b0bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801af96:	4581      	cmp	r9, r0
 801af98:	f340 8090 	ble.w	801b0bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801af9c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801afa0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801afa4:	441e      	add	r6, r3
 801afa6:	3001      	adds	r0, #1
 801afa8:	f100 808d 	bmi.w	801b0c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801afac:	4581      	cmp	r9, r0
 801afae:	f340 808a 	ble.w	801b0c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801afb2:	2c00      	cmp	r4, #0
 801afb4:	f000 8087 	beq.w	801b0c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801afb8:	44e1      	add	r9, ip
 801afba:	f899 2001 	ldrb.w	r2, [r9, #1]
 801afbe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801afc2:	4413      	add	r3, r2
 801afc4:	b2a4      	uxth	r4, r4
 801afc6:	fa1f fe8e 	uxth.w	lr, lr
 801afca:	fb04 fb0e 	mul.w	fp, r4, lr
 801afce:	0124      	lsls	r4, r4, #4
 801afd0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801afd4:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801afd8:	eba4 040b 	sub.w	r4, r4, fp
 801afdc:	fa1f f08e 	uxth.w	r0, lr
 801afe0:	b2a2      	uxth	r2, r4
 801afe2:	78ac      	ldrb	r4, [r5, #2]
 801afe4:	f897 c002 	ldrb.w	ip, [r7, #2]
 801afe8:	9901      	ldr	r1, [sp, #4]
 801afea:	eba9 0900 	sub.w	r9, r9, r0
 801afee:	fa1f f989 	uxth.w	r9, r9
 801aff2:	4354      	muls	r4, r2
 801aff4:	fb09 440c 	mla	r4, r9, ip, r4
 801aff8:	f896 c002 	ldrb.w	ip, [r6, #2]
 801affc:	fb00 440c 	mla	r4, r0, ip, r4
 801b000:	f893 c002 	ldrb.w	ip, [r3, #2]
 801b004:	fa1f fe88 	uxth.w	lr, r8
 801b008:	ea6f 0808 	mvn.w	r8, r8
 801b00c:	fa5f f888 	uxtb.w	r8, r8
 801b010:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801b014:	fb1a fa08 	smulbb	sl, sl, r8
 801b018:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b01c:	fb0c ac0e 	mla	ip, ip, lr, sl
 801b020:	f895 a001 	ldrb.w	sl, [r5, #1]
 801b024:	787c      	ldrb	r4, [r7, #1]
 801b026:	782d      	ldrb	r5, [r5, #0]
 801b028:	783f      	ldrb	r7, [r7, #0]
 801b02a:	fb02 fa0a 	mul.w	sl, r2, sl
 801b02e:	fb09 aa04 	mla	sl, r9, r4, sl
 801b032:	7874      	ldrb	r4, [r6, #1]
 801b034:	436a      	muls	r2, r5
 801b036:	7835      	ldrb	r5, [r6, #0]
 801b038:	fb00 aa04 	mla	sl, r0, r4, sl
 801b03c:	fb09 2207 	mla	r2, r9, r7, r2
 801b040:	785c      	ldrb	r4, [r3, #1]
 801b042:	781b      	ldrb	r3, [r3, #0]
 801b044:	fb00 2005 	mla	r0, r0, r5, r2
 801b048:	fb0b a404 	mla	r4, fp, r4, sl
 801b04c:	fb0b 0b03 	mla	fp, fp, r3, r0
 801b050:	9b02      	ldr	r3, [sp, #8]
 801b052:	fb11 fa08 	smulbb	sl, r1, r8
 801b056:	fa1f fc8c 	uxth.w	ip, ip
 801b05a:	fb13 f808 	smulbb	r8, r3, r8
 801b05e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801b062:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801b066:	fb04 a40e 	mla	r4, r4, lr, sl
 801b06a:	f10c 0301 	add.w	r3, ip, #1
 801b06e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801b072:	fa1f fe8e 	uxth.w	lr, lr
 801b076:	b2a4      	uxth	r4, r4
 801b078:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b07c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801b080:	f104 0a01 	add.w	sl, r4, #1
 801b084:	f10e 0c01 	add.w	ip, lr, #1
 801b088:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b08c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b090:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b094:	0964      	lsrs	r4, r4, #5
 801b096:	ea4c 0c03 	orr.w	ip, ip, r3
 801b09a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801b09e:	9b03      	ldr	r3, [sp, #12]
 801b0a0:	ea4c 0c04 	orr.w	ip, ip, r4
 801b0a4:	f8a3 c000 	strh.w	ip, [r3]
 801b0a8:	b007      	add	sp, #28
 801b0aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b0ae:	af05      	add	r7, sp, #20
 801b0b0:	e756      	b.n	801af60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801b0b2:	ad05      	add	r5, sp, #20
 801b0b4:	462f      	mov	r7, r5
 801b0b6:	e761      	b.n	801af7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b0b8:	ad05      	add	r5, sp, #20
 801b0ba:	e75f      	b.n	801af7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b0bc:	ae05      	add	r6, sp, #20
 801b0be:	e772      	b.n	801afa6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801b0c0:	ab05      	add	r3, sp, #20
 801b0c2:	461e      	mov	r6, r3
 801b0c4:	e77e      	b.n	801afc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801b0c6:	ab05      	add	r3, sp, #20
 801b0c8:	e77c      	b.n	801afc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801b0ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0ce:	b095      	sub	sp, #84	@ 0x54
 801b0d0:	9212      	str	r2, [sp, #72]	@ 0x48
 801b0d2:	9309      	str	r3, [sp, #36]	@ 0x24
 801b0d4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801b0d6:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801b0da:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b0dc:	910e      	str	r1, [sp, #56]	@ 0x38
 801b0de:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801b0e2:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b0e4:	6850      	ldr	r0, [r2, #4]
 801b0e6:	6812      	ldr	r2, [r2, #0]
 801b0e8:	fb00 1303 	mla	r3, r0, r3, r1
 801b0ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b0f0:	930a      	str	r3, [sp, #40]	@ 0x28
 801b0f2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b0f4:	681b      	ldr	r3, [r3, #0]
 801b0f6:	930d      	str	r3, [sp, #52]	@ 0x34
 801b0f8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b0fa:	685c      	ldr	r4, [r3, #4]
 801b0fc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b0fe:	43db      	mvns	r3, r3
 801b100:	b2db      	uxtb	r3, r3
 801b102:	3404      	adds	r4, #4
 801b104:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b106:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b108:	2b00      	cmp	r3, #0
 801b10a:	dc03      	bgt.n	801b114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b10c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b10e:	2b00      	cmp	r3, #0
 801b110:	f340 8255 	ble.w	801b5be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b114:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b116:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b11a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b11e:	1e48      	subs	r0, r1, #1
 801b120:	1e55      	subs	r5, r2, #1
 801b122:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b124:	2b00      	cmp	r3, #0
 801b126:	f340 80f9 	ble.w	801b31c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b12a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801b12c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b12e:	1436      	asrs	r6, r6, #16
 801b130:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b134:	d406      	bmi.n	801b144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b136:	4286      	cmp	r6, r0
 801b138:	da04      	bge.n	801b144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b13a:	2b00      	cmp	r3, #0
 801b13c:	db02      	blt.n	801b144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b13e:	42ab      	cmp	r3, r5
 801b140:	f2c0 80ed 	blt.w	801b31e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801b144:	3601      	adds	r6, #1
 801b146:	f100 80da 	bmi.w	801b2fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b14a:	42b1      	cmp	r1, r6
 801b14c:	f2c0 80d7 	blt.w	801b2fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b150:	3301      	adds	r3, #1
 801b152:	f100 80d4 	bmi.w	801b2fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b156:	429a      	cmp	r2, r3
 801b158:	f2c0 80d1 	blt.w	801b2fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b15c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b15e:	9311      	str	r3, [sp, #68]	@ 0x44
 801b160:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b162:	930c      	str	r3, [sp, #48]	@ 0x30
 801b164:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b166:	2b00      	cmp	r3, #0
 801b168:	f340 80fa 	ble.w	801b360 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801b16c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801b16e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b170:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b172:	68c6      	ldr	r6, [r0, #12]
 801b174:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801b176:	141d      	asrs	r5, r3, #16
 801b178:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b17c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b17e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801b180:	1400      	asrs	r0, r0, #16
 801b182:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b186:	6892      	ldr	r2, [r2, #8]
 801b188:	f100 813e 	bmi.w	801b408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b18c:	1e57      	subs	r7, r2, #1
 801b18e:	42b8      	cmp	r0, r7
 801b190:	f280 813a 	bge.w	801b408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b194:	2d00      	cmp	r5, #0
 801b196:	f2c0 8137 	blt.w	801b408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b19a:	1e77      	subs	r7, r6, #1
 801b19c:	42bd      	cmp	r5, r7
 801b19e:	f280 8133 	bge.w	801b408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b1a2:	b212      	sxth	r2, r2
 801b1a4:	fb05 0002 	mla	r0, r5, r2, r0
 801b1a8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b1aa:	f815 a000 	ldrb.w	sl, [r5, r0]
 801b1ae:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801b1b2:	182e      	adds	r6, r5, r0
 801b1b4:	eb04 050a 	add.w	r5, r4, sl
 801b1b8:	2b00      	cmp	r3, #0
 801b1ba:	f000 8117 	beq.w	801b3ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801b1be:	f896 c001 	ldrb.w	ip, [r6, #1]
 801b1c2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801b1c6:	44a4      	add	ip, r4
 801b1c8:	2900      	cmp	r1, #0
 801b1ca:	f000 8117 	beq.w	801b3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801b1ce:	18b0      	adds	r0, r6, r2
 801b1d0:	5cb2      	ldrb	r2, [r6, r2]
 801b1d2:	7840      	ldrb	r0, [r0, #1]
 801b1d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b1d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b1dc:	4422      	add	r2, r4
 801b1de:	4420      	add	r0, r4
 801b1e0:	b29b      	uxth	r3, r3
 801b1e2:	b289      	uxth	r1, r1
 801b1e4:	fb03 f901 	mul.w	r9, r3, r1
 801b1e8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b1ec:	011b      	lsls	r3, r3, #4
 801b1ee:	b289      	uxth	r1, r1
 801b1f0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801b1f4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b1f8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801b1fa:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801b1fe:	f8b6 e000 	ldrh.w	lr, [r6]
 801b202:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801b206:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801b20a:	eba3 0309 	sub.w	r3, r3, r9
 801b20e:	b29b      	uxth	r3, r3
 801b210:	eba8 0801 	sub.w	r8, r8, r1
 801b214:	fa1f f888 	uxth.w	r8, r8
 801b218:	435f      	muls	r7, r3
 801b21a:	fb08 770b 	mla	r7, r8, fp, r7
 801b21e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b222:	9310      	str	r3, [sp, #64]	@ 0x40
 801b224:	fb01 770b 	mla	r7, r1, fp, r7
 801b228:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b22c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b22e:	fb09 770b 	mla	r7, r9, fp, r7
 801b232:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801b236:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801b23a:	fb1b fb03 	smulbb	fp, fp, r3
 801b23e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b242:	fb07 b706 	mla	r7, r7, r6, fp
 801b246:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b248:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b24c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801b250:	f89c c000 	ldrb.w	ip, [ip]
 801b254:	435d      	muls	r5, r3
 801b256:	fb08 550b 	mla	r5, r8, fp, r5
 801b25a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b25e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b260:	fb01 550b 	mla	r5, r1, fp, r5
 801b264:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b268:	fb09 550b 	mla	r5, r9, fp, r5
 801b26c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801b270:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801b274:	fb1b fb03 	smulbb	fp, fp, r3
 801b278:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b27a:	fb03 f30c 	mul.w	r3, r3, ip
 801b27e:	f892 c000 	ldrb.w	ip, [r2]
 801b282:	fb08 330a 	mla	r3, r8, sl, r3
 801b286:	fb01 330c 	mla	r3, r1, ip, r3
 801b28a:	f890 c000 	ldrb.w	ip, [r0]
 801b28e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b292:	fb09 3c0c 	mla	ip, r9, ip, r3
 801b296:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b298:	fa5f fe8e 	uxtb.w	lr, lr
 801b29c:	b2bf      	uxth	r7, r7
 801b29e:	fb1e fe03 	smulbb	lr, lr, r3
 801b2a2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b2a6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b2aa:	fb05 b506 	mla	r5, r5, r6, fp
 801b2ae:	1c7b      	adds	r3, r7, #1
 801b2b0:	fb0c e606 	mla	r6, ip, r6, lr
 801b2b4:	b2ad      	uxth	r5, r5
 801b2b6:	b2b6      	uxth	r6, r6
 801b2b8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801b2bc:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801b2c0:	f105 0b01 	add.w	fp, r5, #1
 801b2c4:	1c77      	adds	r7, r6, #1
 801b2c6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801b2ca:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b2ce:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b2d2:	096d      	lsrs	r5, r5, #5
 801b2d4:	431f      	orrs	r7, r3
 801b2d6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b2da:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b2dc:	433d      	orrs	r5, r7
 801b2de:	801d      	strh	r5, [r3, #0]
 801b2e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b2e2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801b2e4:	3302      	adds	r3, #2
 801b2e6:	930c      	str	r3, [sp, #48]	@ 0x30
 801b2e8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b2ea:	4413      	add	r3, r2
 801b2ec:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b2ee:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801b2f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b2f2:	4413      	add	r3, r2
 801b2f4:	9320      	str	r3, [sp, #128]	@ 0x80
 801b2f6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b2f8:	3b01      	subs	r3, #1
 801b2fa:	9311      	str	r3, [sp, #68]	@ 0x44
 801b2fc:	e732      	b.n	801b164 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b2fe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b300:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801b302:	4433      	add	r3, r6
 801b304:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b306:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801b308:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b30a:	4433      	add	r3, r6
 801b30c:	9320      	str	r3, [sp, #128]	@ 0x80
 801b30e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b310:	3b01      	subs	r3, #1
 801b312:	9309      	str	r3, [sp, #36]	@ 0x24
 801b314:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b316:	3302      	adds	r3, #2
 801b318:	930a      	str	r3, [sp, #40]	@ 0x28
 801b31a:	e702      	b.n	801b122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b31c:	d027      	beq.n	801b36e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801b31e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b320:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801b322:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801b324:	3b01      	subs	r3, #1
 801b326:	fb00 5003 	mla	r0, r0, r3, r5
 801b32a:	1400      	asrs	r0, r0, #16
 801b32c:	f53f af16 	bmi.w	801b15c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b330:	3901      	subs	r1, #1
 801b332:	4288      	cmp	r0, r1
 801b334:	f6bf af12 	bge.w	801b15c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b338:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801b33a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b33c:	fb01 0303 	mla	r3, r1, r3, r0
 801b340:	141b      	asrs	r3, r3, #16
 801b342:	f53f af0b 	bmi.w	801b15c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b346:	3a01      	subs	r2, #1
 801b348:	4293      	cmp	r3, r2
 801b34a:	f6bf af07 	bge.w	801b15c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b34e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b350:	9311      	str	r3, [sp, #68]	@ 0x44
 801b352:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801b356:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b358:	930c      	str	r3, [sp, #48]	@ 0x30
 801b35a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b35c:	2b00      	cmp	r3, #0
 801b35e:	dc70      	bgt.n	801b442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801b360:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b362:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b364:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b368:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b36c:	930a      	str	r3, [sp, #40]	@ 0x28
 801b36e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b370:	2b00      	cmp	r3, #0
 801b372:	f340 8124 	ble.w	801b5be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b376:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b37a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b37e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b382:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b384:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b388:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b38c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b390:	eef0 6a62 	vmov.f32	s13, s5
 801b394:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b398:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b39c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b3a0:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801b3a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b3a8:	eef0 6a43 	vmov.f32	s13, s6
 801b3ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b3b0:	ee12 2a90 	vmov	r2, s5
 801b3b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b3b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3bc:	ee13 2a10 	vmov	r2, s6
 801b3c0:	9321      	str	r3, [sp, #132]	@ 0x84
 801b3c2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b3c4:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3c8:	9322      	str	r3, [sp, #136]	@ 0x88
 801b3ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b3cc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b3ce:	3b01      	subs	r3, #1
 801b3d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b3d4:	930e      	str	r3, [sp, #56]	@ 0x38
 801b3d6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b3d8:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801b3dc:	bf08      	it	eq
 801b3de:	4613      	moveq	r3, r2
 801b3e0:	9309      	str	r3, [sp, #36]	@ 0x24
 801b3e2:	eeb0 3a67 	vmov.f32	s6, s15
 801b3e6:	eef0 2a47 	vmov.f32	s5, s14
 801b3ea:	e68c      	b.n	801b106 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b3ec:	b149      	cbz	r1, 801b402 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801b3ee:	5cb2      	ldrb	r2, [r6, r2]
 801b3f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b3f4:	4422      	add	r2, r4
 801b3f6:	4628      	mov	r0, r5
 801b3f8:	46ac      	mov	ip, r5
 801b3fa:	e6f1      	b.n	801b1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b3fc:	4628      	mov	r0, r5
 801b3fe:	462a      	mov	r2, r5
 801b400:	e6ee      	b.n	801b1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b402:	4628      	mov	r0, r5
 801b404:	462a      	mov	r2, r5
 801b406:	e7f7      	b.n	801b3f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801b408:	1c47      	adds	r7, r0, #1
 801b40a:	f53f af69 	bmi.w	801b2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b40e:	42ba      	cmp	r2, r7
 801b410:	f6ff af66 	blt.w	801b2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b414:	1c6f      	adds	r7, r5, #1
 801b416:	f53f af63 	bmi.w	801b2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b41a:	42be      	cmp	r6, r7
 801b41c:	f6ff af60 	blt.w	801b2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b420:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801b422:	9002      	str	r0, [sp, #8]
 801b424:	b236      	sxth	r6, r6
 801b426:	b212      	sxth	r2, r2
 801b428:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801b42c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801b430:	9200      	str	r2, [sp, #0]
 801b432:	9601      	str	r6, [sp, #4]
 801b434:	4623      	mov	r3, r4
 801b436:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801b43a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b43c:	f7ff fd59 	bl	801aef2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801b440:	e74e      	b.n	801b2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b442:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b444:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b446:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801b448:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b44a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b44e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801b450:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b454:	142d      	asrs	r5, r5, #16
 801b456:	1400      	asrs	r0, r0, #16
 801b458:	fb02 5000 	mla	r0, r2, r0, r5
 801b45c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b45e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801b462:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b466:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801b46a:	182e      	adds	r6, r5, r0
 801b46c:	eb04 0509 	add.w	r5, r4, r9
 801b470:	2b00      	cmp	r3, #0
 801b472:	f000 8096 	beq.w	801b5a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b476:	7877      	ldrb	r7, [r6, #1]
 801b478:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b47c:	4427      	add	r7, r4
 801b47e:	2900      	cmp	r1, #0
 801b480:	f000 8097 	beq.w	801b5b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801b484:	18b0      	adds	r0, r6, r2
 801b486:	5cb2      	ldrb	r2, [r6, r2]
 801b488:	7840      	ldrb	r0, [r0, #1]
 801b48a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b48e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b492:	4422      	add	r2, r4
 801b494:	4420      	add	r0, r4
 801b496:	b29b      	uxth	r3, r3
 801b498:	b289      	uxth	r1, r1
 801b49a:	fb03 f801 	mul.w	r8, r3, r1
 801b49e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801b4a0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b4a4:	f8b6 c000 	ldrh.w	ip, [r6]
 801b4a8:	78be      	ldrb	r6, [r7, #2]
 801b4aa:	f814 9009 	ldrb.w	r9, [r4, r9]
 801b4ae:	011b      	lsls	r3, r3, #4
 801b4b0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801b4b4:	b289      	uxth	r1, r1
 801b4b6:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b4ba:	eba3 0308 	sub.w	r3, r3, r8
 801b4be:	b29b      	uxth	r3, r3
 801b4c0:	ebae 0e01 	sub.w	lr, lr, r1
 801b4c4:	fa1f fe8e 	uxth.w	lr, lr
 801b4c8:	435e      	muls	r6, r3
 801b4ca:	fb0e 660b 	mla	r6, lr, fp, r6
 801b4ce:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b4d2:	9310      	str	r3, [sp, #64]	@ 0x40
 801b4d4:	fb01 660b 	mla	r6, r1, fp, r6
 801b4d8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b4dc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b4de:	fb08 660b 	mla	r6, r8, fp, r6
 801b4e2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801b4e6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801b4ea:	fb1b fb03 	smulbb	fp, fp, r3
 801b4ee:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b4f2:	fb06 b60a 	mla	r6, r6, sl, fp
 801b4f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b4f8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b4fc:	787d      	ldrb	r5, [r7, #1]
 801b4fe:	783f      	ldrb	r7, [r7, #0]
 801b500:	435d      	muls	r5, r3
 801b502:	fb0e 550b 	mla	r5, lr, fp, r5
 801b506:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b50a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b50c:	fb01 550b 	mla	r5, r1, fp, r5
 801b510:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b514:	fb08 550b 	mla	r5, r8, fp, r5
 801b518:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b51c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801b520:	fb1b fb03 	smulbb	fp, fp, r3
 801b524:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b526:	437b      	muls	r3, r7
 801b528:	7817      	ldrb	r7, [r2, #0]
 801b52a:	fb0e 3309 	mla	r3, lr, r9, r3
 801b52e:	fb01 3307 	mla	r3, r1, r7, r3
 801b532:	7807      	ldrb	r7, [r0, #0]
 801b534:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b538:	fb08 3707 	mla	r7, r8, r7, r3
 801b53c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b53e:	fa5f fc8c 	uxtb.w	ip, ip
 801b542:	fb1c fc03 	smulbb	ip, ip, r3
 801b546:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b54a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b54e:	fb05 b50a 	mla	r5, r5, sl, fp
 801b552:	fb07 c70a 	mla	r7, r7, sl, ip
 801b556:	b2b6      	uxth	r6, r6
 801b558:	b2ad      	uxth	r5, r5
 801b55a:	b2bf      	uxth	r7, r7
 801b55c:	1c73      	adds	r3, r6, #1
 801b55e:	1c7a      	adds	r2, r7, #1
 801b560:	f105 0b01 	add.w	fp, r5, #1
 801b564:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b568:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801b56c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b570:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b574:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801b578:	096d      	lsrs	r5, r5, #5
 801b57a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b57c:	4316      	orrs	r6, r2
 801b57e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b582:	432e      	orrs	r6, r5
 801b584:	f823 6b02 	strh.w	r6, [r3], #2
 801b588:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801b58a:	930c      	str	r3, [sp, #48]	@ 0x30
 801b58c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b58e:	4413      	add	r3, r2
 801b590:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b592:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801b594:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b596:	4413      	add	r3, r2
 801b598:	9320      	str	r3, [sp, #128]	@ 0x80
 801b59a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b59c:	3b01      	subs	r3, #1
 801b59e:	9311      	str	r3, [sp, #68]	@ 0x44
 801b5a0:	e6db      	b.n	801b35a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b5a2:	b149      	cbz	r1, 801b5b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801b5a4:	5cb2      	ldrb	r2, [r6, r2]
 801b5a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b5aa:	4422      	add	r2, r4
 801b5ac:	4628      	mov	r0, r5
 801b5ae:	462f      	mov	r7, r5
 801b5b0:	e771      	b.n	801b496 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b5b2:	4628      	mov	r0, r5
 801b5b4:	462a      	mov	r2, r5
 801b5b6:	e76e      	b.n	801b496 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b5b8:	4628      	mov	r0, r5
 801b5ba:	462a      	mov	r2, r5
 801b5bc:	e7f7      	b.n	801b5ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b5be:	b015      	add	sp, #84	@ 0x54
 801b5c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b5c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801b5c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5c8:	880f      	ldrh	r7, [r1, #0]
 801b5ca:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801b5ce:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801b5d2:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801b5d6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801b5da:	023c      	lsls	r4, r7, #8
 801b5dc:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801b5e0:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801b5e4:	017c      	lsls	r4, r7, #5
 801b5e6:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801b5ea:	00ff      	lsls	r7, r7, #3
 801b5ec:	ea4b 0404 	orr.w	r4, fp, r4
 801b5f0:	b2ff      	uxtb	r7, r7
 801b5f2:	fb05 ca0e 	mla	sl, r5, lr, ip
 801b5f6:	4327      	orrs	r7, r4
 801b5f8:	2d00      	cmp	r5, #0
 801b5fa:	eb02 080a 	add.w	r8, r2, sl
 801b5fe:	9701      	str	r7, [sp, #4]
 801b600:	db7e      	blt.n	801b700 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801b602:	45a9      	cmp	r9, r5
 801b604:	dd7c      	ble.n	801b700 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801b606:	f1bc 0f00 	cmp.w	ip, #0
 801b60a:	db77      	blt.n	801b6fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801b60c:	45e6      	cmp	lr, ip
 801b60e:	dd75      	ble.n	801b6fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801b610:	f812 700a 	ldrb.w	r7, [r2, sl]
 801b614:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b618:	441f      	add	r7, r3
 801b61a:	f11c 0201 	adds.w	r2, ip, #1
 801b61e:	d472      	bmi.n	801b706 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b620:	4596      	cmp	lr, r2
 801b622:	dd70      	ble.n	801b706 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b624:	2800      	cmp	r0, #0
 801b626:	d06e      	beq.n	801b706 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b628:	f898 4001 	ldrb.w	r4, [r8, #1]
 801b62c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801b630:	441c      	add	r4, r3
 801b632:	3501      	adds	r5, #1
 801b634:	d46b      	bmi.n	801b70e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b636:	45a9      	cmp	r9, r5
 801b638:	dd69      	ble.n	801b70e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b63a:	2e00      	cmp	r6, #0
 801b63c:	d067      	beq.n	801b70e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b63e:	f1bc 0f00 	cmp.w	ip, #0
 801b642:	db62      	blt.n	801b70a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b644:	45e6      	cmp	lr, ip
 801b646:	dd60      	ble.n	801b70a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b648:	f818 500e 	ldrb.w	r5, [r8, lr]
 801b64c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b650:	441d      	add	r5, r3
 801b652:	f11c 0201 	adds.w	r2, ip, #1
 801b656:	d45d      	bmi.n	801b714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b658:	4596      	cmp	lr, r2
 801b65a:	dd5b      	ble.n	801b714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b65c:	2800      	cmp	r0, #0
 801b65e:	d059      	beq.n	801b714 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b660:	44c6      	add	lr, r8
 801b662:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b666:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b66a:	4413      	add	r3, r2
 801b66c:	b280      	uxth	r0, r0
 801b66e:	b2b2      	uxth	r2, r6
 801b670:	fb00 f602 	mul.w	r6, r0, r2
 801b674:	0100      	lsls	r0, r0, #4
 801b676:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801b67a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801b67e:	1b80      	subs	r0, r0, r6
 801b680:	fa1f fc82 	uxth.w	ip, r2
 801b684:	b282      	uxth	r2, r0
 801b686:	78a0      	ldrb	r0, [r4, #2]
 801b688:	f897 e002 	ldrb.w	lr, [r7, #2]
 801b68c:	f897 9000 	ldrb.w	r9, [r7]
 801b690:	787f      	ldrb	r7, [r7, #1]
 801b692:	eba8 080c 	sub.w	r8, r8, ip
 801b696:	fa1f f888 	uxth.w	r8, r8
 801b69a:	4350      	muls	r0, r2
 801b69c:	fb08 0e0e 	mla	lr, r8, lr, r0
 801b6a0:	78a8      	ldrb	r0, [r5, #2]
 801b6a2:	fb0c e000 	mla	r0, ip, r0, lr
 801b6a6:	f893 e002 	ldrb.w	lr, [r3, #2]
 801b6aa:	fb06 0e0e 	mla	lr, r6, lr, r0
 801b6ae:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801b6b2:	f894 e000 	ldrb.w	lr, [r4]
 801b6b6:	fb02 fe0e 	mul.w	lr, r2, lr
 801b6ba:	fb08 e909 	mla	r9, r8, r9, lr
 801b6be:	f895 e000 	ldrb.w	lr, [r5]
 801b6c2:	fb0c 990e 	mla	r9, ip, lr, r9
 801b6c6:	f893 e000 	ldrb.w	lr, [r3]
 801b6ca:	785b      	ldrb	r3, [r3, #1]
 801b6cc:	fb06 9e0e 	mla	lr, r6, lr, r9
 801b6d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b6d4:	ea4e 0e00 	orr.w	lr, lr, r0
 801b6d8:	7860      	ldrb	r0, [r4, #1]
 801b6da:	4350      	muls	r0, r2
 801b6dc:	786a      	ldrb	r2, [r5, #1]
 801b6de:	fb08 0007 	mla	r0, r8, r7, r0
 801b6e2:	fb0c 0202 	mla	r2, ip, r2, r0
 801b6e6:	fb06 2303 	mla	r3, r6, r3, r2
 801b6ea:	095b      	lsrs	r3, r3, #5
 801b6ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b6f0:	ea4e 0303 	orr.w	r3, lr, r3
 801b6f4:	800b      	strh	r3, [r1, #0]
 801b6f6:	b003      	add	sp, #12
 801b6f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6fc:	af01      	add	r7, sp, #4
 801b6fe:	e78c      	b.n	801b61a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801b700:	ac01      	add	r4, sp, #4
 801b702:	4627      	mov	r7, r4
 801b704:	e795      	b.n	801b632 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b706:	ac01      	add	r4, sp, #4
 801b708:	e793      	b.n	801b632 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b70a:	ad01      	add	r5, sp, #4
 801b70c:	e7a1      	b.n	801b652 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801b70e:	ab01      	add	r3, sp, #4
 801b710:	461d      	mov	r5, r3
 801b712:	e7ab      	b.n	801b66c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801b714:	ab01      	add	r3, sp, #4
 801b716:	e7a9      	b.n	801b66c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801b718 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b71c:	b08f      	sub	sp, #60	@ 0x3c
 801b71e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801b722:	920c      	str	r2, [sp, #48]	@ 0x30
 801b724:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801b726:	910a      	str	r1, [sp, #40]	@ 0x28
 801b728:	9306      	str	r3, [sp, #24]
 801b72a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801b72e:	900d      	str	r0, [sp, #52]	@ 0x34
 801b730:	6850      	ldr	r0, [r2, #4]
 801b732:	6812      	ldr	r2, [r2, #0]
 801b734:	fb00 1303 	mla	r3, r0, r3, r1
 801b738:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b73c:	9307      	str	r3, [sp, #28]
 801b73e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b740:	681b      	ldr	r3, [r3, #0]
 801b742:	9308      	str	r3, [sp, #32]
 801b744:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b746:	685c      	ldr	r4, [r3, #4]
 801b748:	3404      	adds	r4, #4
 801b74a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b74c:	2b00      	cmp	r3, #0
 801b74e:	dc03      	bgt.n	801b758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b750:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b752:	2b00      	cmp	r3, #0
 801b754:	f340 81d6 	ble.w	801bb04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b758:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b75a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b75e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b762:	1e48      	subs	r0, r1, #1
 801b764:	1e56      	subs	r6, r2, #1
 801b766:	9b06      	ldr	r3, [sp, #24]
 801b768:	2b00      	cmp	r3, #0
 801b76a:	f340 80b7 	ble.w	801b8dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b76e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801b772:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b776:	d406      	bmi.n	801b786 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b778:	4287      	cmp	r7, r0
 801b77a:	da04      	bge.n	801b786 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b77c:	2b00      	cmp	r3, #0
 801b77e:	db02      	blt.n	801b786 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b780:	42b3      	cmp	r3, r6
 801b782:	f2c0 80ac 	blt.w	801b8de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801b786:	3701      	adds	r7, #1
 801b788:	f100 809d 	bmi.w	801b8c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b78c:	42b9      	cmp	r1, r7
 801b78e:	f2c0 809a 	blt.w	801b8c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b792:	3301      	adds	r3, #1
 801b794:	f100 8097 	bmi.w	801b8c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b798:	429a      	cmp	r2, r3
 801b79a:	f2c0 8094 	blt.w	801b8c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b79e:	9b06      	ldr	r3, [sp, #24]
 801b7a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b7a2:	9b07      	ldr	r3, [sp, #28]
 801b7a4:	9309      	str	r3, [sp, #36]	@ 0x24
 801b7a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b7a8:	2b00      	cmp	r3, #0
 801b7aa:	f340 80b5 	ble.w	801b918 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b7ae:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b7b0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b7b2:	68c7      	ldr	r7, [r0, #12]
 801b7b4:	6892      	ldr	r2, [r2, #8]
 801b7b6:	ea5f 402b 	movs.w	r0, fp, asr #16
 801b7ba:	ea4f 4625 	mov.w	r6, r5, asr #16
 801b7be:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b7c2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b7c6:	f100 80fb 	bmi.w	801b9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b7ca:	f102 3cff 	add.w	ip, r2, #4294967295
 801b7ce:	4560      	cmp	r0, ip
 801b7d0:	f280 80f6 	bge.w	801b9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b7d4:	2e00      	cmp	r6, #0
 801b7d6:	f2c0 80f3 	blt.w	801b9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b7da:	f107 3cff 	add.w	ip, r7, #4294967295
 801b7de:	4566      	cmp	r6, ip
 801b7e0:	f280 80ee 	bge.w	801b9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b7e4:	b212      	sxth	r2, r2
 801b7e6:	fb06 0002 	mla	r0, r6, r2, r0
 801b7ea:	9e08      	ldr	r6, [sp, #32]
 801b7ec:	1837      	adds	r7, r6, r0
 801b7ee:	5c30      	ldrb	r0, [r6, r0]
 801b7f0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801b7f4:	eb04 0c08 	add.w	ip, r4, r8
 801b7f8:	2b00      	cmp	r3, #0
 801b7fa:	f000 80d3 	beq.w	801b9a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b7fe:	787e      	ldrb	r6, [r7, #1]
 801b800:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b804:	4426      	add	r6, r4
 801b806:	2900      	cmp	r1, #0
 801b808:	f000 80d4 	beq.w	801b9b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801b80c:	18b8      	adds	r0, r7, r2
 801b80e:	5cba      	ldrb	r2, [r7, r2]
 801b810:	7840      	ldrb	r0, [r0, #1]
 801b812:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b816:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b81a:	4422      	add	r2, r4
 801b81c:	4420      	add	r0, r4
 801b81e:	b29b      	uxth	r3, r3
 801b820:	b289      	uxth	r1, r1
 801b822:	fb03 f901 	mul.w	r9, r3, r1
 801b826:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b82a:	011b      	lsls	r3, r3, #4
 801b82c:	b289      	uxth	r1, r1
 801b82e:	78b7      	ldrb	r7, [r6, #2]
 801b830:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b834:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b838:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b83c:	eba3 0309 	sub.w	r3, r3, r9
 801b840:	b29b      	uxth	r3, r3
 801b842:	ebae 0e01 	sub.w	lr, lr, r1
 801b846:	fa1f fe8e 	uxth.w	lr, lr
 801b84a:	435f      	muls	r7, r3
 801b84c:	fb0e 770a 	mla	r7, lr, sl, r7
 801b850:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b854:	fb01 770a 	mla	r7, r1, sl, r7
 801b858:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b85c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b860:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b864:	f896 8000 	ldrb.w	r8, [r6]
 801b868:	7876      	ldrb	r6, [r6, #1]
 801b86a:	fb03 f808 	mul.w	r8, r3, r8
 801b86e:	fb0e 8807 	mla	r8, lr, r7, r8
 801b872:	7817      	ldrb	r7, [r2, #0]
 801b874:	fb01 8807 	mla	r8, r1, r7, r8
 801b878:	7807      	ldrb	r7, [r0, #0]
 801b87a:	fb09 8707 	mla	r7, r9, r7, r8
 801b87e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b882:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b886:	ea47 070a 	orr.w	r7, r7, sl
 801b88a:	4373      	muls	r3, r6
 801b88c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801b890:	fb0e 330c 	mla	r3, lr, ip, r3
 801b894:	fb01 310a 	mla	r1, r1, sl, r3
 801b898:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b89c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b89e:	fb09 1a0a 	mla	sl, r9, sl, r1
 801b8a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b8a6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b8aa:	ea47 070a 	orr.w	r7, r7, sl
 801b8ae:	801f      	strh	r7, [r3, #0]
 801b8b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b8b2:	3302      	adds	r3, #2
 801b8b4:	9309      	str	r3, [sp, #36]	@ 0x24
 801b8b6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b8b8:	449b      	add	fp, r3
 801b8ba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b8bc:	441d      	add	r5, r3
 801b8be:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b8c0:	3b01      	subs	r3, #1
 801b8c2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b8c4:	e76f      	b.n	801b7a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b8c6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b8c8:	449b      	add	fp, r3
 801b8ca:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b8cc:	441d      	add	r5, r3
 801b8ce:	9b06      	ldr	r3, [sp, #24]
 801b8d0:	3b01      	subs	r3, #1
 801b8d2:	9306      	str	r3, [sp, #24]
 801b8d4:	9b07      	ldr	r3, [sp, #28]
 801b8d6:	3302      	adds	r3, #2
 801b8d8:	9307      	str	r3, [sp, #28]
 801b8da:	e744      	b.n	801b766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b8dc:	d023      	beq.n	801b926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801b8de:	9b06      	ldr	r3, [sp, #24]
 801b8e0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801b8e2:	3b01      	subs	r3, #1
 801b8e4:	fb00 b003 	mla	r0, r0, r3, fp
 801b8e8:	1400      	asrs	r0, r0, #16
 801b8ea:	f53f af58 	bmi.w	801b79e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8ee:	3901      	subs	r1, #1
 801b8f0:	4288      	cmp	r0, r1
 801b8f2:	f6bf af54 	bge.w	801b79e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8f6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801b8f8:	fb01 5303 	mla	r3, r1, r3, r5
 801b8fc:	141b      	asrs	r3, r3, #16
 801b8fe:	f53f af4e 	bmi.w	801b79e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b902:	3a01      	subs	r2, #1
 801b904:	4293      	cmp	r3, r2
 801b906:	f6bf af4a 	bge.w	801b79e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b90a:	9b06      	ldr	r3, [sp, #24]
 801b90c:	9309      	str	r3, [sp, #36]	@ 0x24
 801b90e:	9b07      	ldr	r3, [sp, #28]
 801b910:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b912:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b914:	2b00      	cmp	r3, #0
 801b916:	dc70      	bgt.n	801b9fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801b918:	9b06      	ldr	r3, [sp, #24]
 801b91a:	9a07      	ldr	r2, [sp, #28]
 801b91c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b920:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b924:	9307      	str	r3, [sp, #28]
 801b926:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b928:	2b00      	cmp	r3, #0
 801b92a:	f340 80eb 	ble.w	801bb04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b92e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b932:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b936:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b93a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b93c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b940:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b944:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b948:	eef0 6a62 	vmov.f32	s13, s5
 801b94c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b950:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b954:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b958:	ee16 ba90 	vmov	fp, s13
 801b95c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b960:	eef0 6a43 	vmov.f32	s13, s6
 801b964:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b968:	ee12 2a90 	vmov	r2, s5
 801b96c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b970:	fb92 f3f3 	sdiv	r3, r2, r3
 801b974:	ee13 2a10 	vmov	r2, s6
 801b978:	931b      	str	r3, [sp, #108]	@ 0x6c
 801b97a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b97c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b980:	931c      	str	r3, [sp, #112]	@ 0x70
 801b982:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b984:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b986:	3b01      	subs	r3, #1
 801b988:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b98c:	930a      	str	r3, [sp, #40]	@ 0x28
 801b98e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b990:	bf08      	it	eq
 801b992:	4613      	moveq	r3, r2
 801b994:	ee16 5a90 	vmov	r5, s13
 801b998:	9306      	str	r3, [sp, #24]
 801b99a:	eeb0 3a67 	vmov.f32	s6, s15
 801b99e:	eef0 2a47 	vmov.f32	s5, s14
 801b9a2:	e6d2      	b.n	801b74a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b9a4:	b149      	cbz	r1, 801b9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b9a6:	5cba      	ldrb	r2, [r7, r2]
 801b9a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b9ac:	4422      	add	r2, r4
 801b9ae:	4660      	mov	r0, ip
 801b9b0:	4666      	mov	r6, ip
 801b9b2:	e734      	b.n	801b81e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b9b4:	4660      	mov	r0, ip
 801b9b6:	4662      	mov	r2, ip
 801b9b8:	e731      	b.n	801b81e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b9ba:	4660      	mov	r0, ip
 801b9bc:	4662      	mov	r2, ip
 801b9be:	e7f7      	b.n	801b9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801b9c0:	f110 0c01 	adds.w	ip, r0, #1
 801b9c4:	f53f af74 	bmi.w	801b8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9c8:	4562      	cmp	r2, ip
 801b9ca:	f6ff af71 	blt.w	801b8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9ce:	f116 0c01 	adds.w	ip, r6, #1
 801b9d2:	f53f af6d 	bmi.w	801b8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9d6:	4567      	cmp	r7, ip
 801b9d8:	f6ff af6a 	blt.w	801b8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9dc:	b23f      	sxth	r7, r7
 801b9de:	b212      	sxth	r2, r2
 801b9e0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801b9e4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801b9e8:	9200      	str	r2, [sp, #0]
 801b9ea:	9701      	str	r7, [sp, #4]
 801b9ec:	4623      	mov	r3, r4
 801b9ee:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b9f2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801b9f4:	f7ff fde6 	bl	801b5c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801b9f8:	e75a      	b.n	801b8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9fa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b9fc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ba00:	ea4f 462b 	mov.w	r6, fp, asr #16
 801ba04:	1428      	asrs	r0, r5, #16
 801ba06:	fb02 6000 	mla	r0, r2, r0, r6
 801ba0a:	9e08      	ldr	r6, [sp, #32]
 801ba0c:	f816 8000 	ldrb.w	r8, [r6, r0]
 801ba10:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ba14:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ba18:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ba1c:	1837      	adds	r7, r6, r0
 801ba1e:	eb04 0c08 	add.w	ip, r4, r8
 801ba22:	2b00      	cmp	r3, #0
 801ba24:	d060      	beq.n	801bae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801ba26:	787e      	ldrb	r6, [r7, #1]
 801ba28:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ba2c:	4426      	add	r6, r4
 801ba2e:	2900      	cmp	r1, #0
 801ba30:	d062      	beq.n	801baf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801ba32:	18b8      	adds	r0, r7, r2
 801ba34:	5cba      	ldrb	r2, [r7, r2]
 801ba36:	7840      	ldrb	r0, [r0, #1]
 801ba38:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ba3c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ba40:	4422      	add	r2, r4
 801ba42:	4420      	add	r0, r4
 801ba44:	b29b      	uxth	r3, r3
 801ba46:	b289      	uxth	r1, r1
 801ba48:	fb03 f901 	mul.w	r9, r3, r1
 801ba4c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ba50:	011b      	lsls	r3, r3, #4
 801ba52:	b289      	uxth	r1, r1
 801ba54:	78b7      	ldrb	r7, [r6, #2]
 801ba56:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ba5a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ba5e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801ba62:	eba3 0309 	sub.w	r3, r3, r9
 801ba66:	b29b      	uxth	r3, r3
 801ba68:	ebae 0e01 	sub.w	lr, lr, r1
 801ba6c:	fa1f fe8e 	uxth.w	lr, lr
 801ba70:	435f      	muls	r7, r3
 801ba72:	fb0e 770a 	mla	r7, lr, sl, r7
 801ba76:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ba7a:	fb01 770a 	mla	r7, r1, sl, r7
 801ba7e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ba82:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ba86:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ba8a:	f896 8000 	ldrb.w	r8, [r6]
 801ba8e:	7876      	ldrb	r6, [r6, #1]
 801ba90:	fb03 f808 	mul.w	r8, r3, r8
 801ba94:	fb0e 8807 	mla	r8, lr, r7, r8
 801ba98:	7817      	ldrb	r7, [r2, #0]
 801ba9a:	fb01 8807 	mla	r8, r1, r7, r8
 801ba9e:	7807      	ldrb	r7, [r0, #0]
 801baa0:	fb09 8707 	mla	r7, r9, r7, r8
 801baa4:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801baa8:	4373      	muls	r3, r6
 801baaa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801baae:	7856      	ldrb	r6, [r2, #1]
 801bab0:	ea47 070a 	orr.w	r7, r7, sl
 801bab4:	fb0e 330c 	mla	r3, lr, ip, r3
 801bab8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801babc:	fb01 3306 	mla	r3, r1, r6, r3
 801bac0:	fb09 3a0a 	mla	sl, r9, sl, r3
 801bac4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bac8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801baca:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bace:	ea47 070a 	orr.w	r7, r7, sl
 801bad2:	f823 7b02 	strh.w	r7, [r3], #2
 801bad6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bad8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801bada:	449b      	add	fp, r3
 801badc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bade:	441d      	add	r5, r3
 801bae0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bae2:	3b01      	subs	r3, #1
 801bae4:	9309      	str	r3, [sp, #36]	@ 0x24
 801bae6:	e714      	b.n	801b912 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801bae8:	b149      	cbz	r1, 801bafe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801baea:	5cba      	ldrb	r2, [r7, r2]
 801baec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801baf0:	4422      	add	r2, r4
 801baf2:	4660      	mov	r0, ip
 801baf4:	4666      	mov	r6, ip
 801baf6:	e7a5      	b.n	801ba44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801baf8:	4660      	mov	r0, ip
 801bafa:	4662      	mov	r2, ip
 801bafc:	e7a2      	b.n	801ba44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801bafe:	4660      	mov	r0, ip
 801bb00:	4662      	mov	r2, ip
 801bb02:	e7f7      	b.n	801baf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801bb04:	b00f      	add	sp, #60	@ 0x3c
 801bb06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801bb0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb0e:	b085      	sub	sp, #20
 801bb10:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801bb14:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801bb18:	9102      	str	r1, [sp, #8]
 801bb1a:	2c00      	cmp	r4, #0
 801bb1c:	fb04 710c 	mla	r1, r4, ip, r7
 801bb20:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801bb24:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801bb28:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801bb2c:	eb02 0e01 	add.w	lr, r2, r1
 801bb30:	f2c0 8122 	blt.w	801bd78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801bb34:	45a0      	cmp	r8, r4
 801bb36:	f340 811f 	ble.w	801bd78 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801bb3a:	2f00      	cmp	r7, #0
 801bb3c:	f2c0 811a 	blt.w	801bd74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801bb40:	45bc      	cmp	ip, r7
 801bb42:	f340 8117 	ble.w	801bd74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801bb46:	5c52      	ldrb	r2, [r2, r1]
 801bb48:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801bb4c:	1c7a      	adds	r2, r7, #1
 801bb4e:	f100 8116 	bmi.w	801bd7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801bb52:	4594      	cmp	ip, r2
 801bb54:	f340 8113 	ble.w	801bd7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801bb58:	2e00      	cmp	r6, #0
 801bb5a:	f000 8112 	beq.w	801bd82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801bb5e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bb62:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bb66:	3401      	adds	r4, #1
 801bb68:	f100 810f 	bmi.w	801bd8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801bb6c:	45a0      	cmp	r8, r4
 801bb6e:	f340 810c 	ble.w	801bd8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801bb72:	2800      	cmp	r0, #0
 801bb74:	f000 810c 	beq.w	801bd90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801bb78:	2f00      	cmp	r7, #0
 801bb7a:	f2c0 8104 	blt.w	801bd86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801bb7e:	45bc      	cmp	ip, r7
 801bb80:	f340 8101 	ble.w	801bd86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801bb84:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801bb88:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801bb8c:	3701      	adds	r7, #1
 801bb8e:	f100 8102 	bmi.w	801bd96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801bb92:	45bc      	cmp	ip, r7
 801bb94:	f340 80ff 	ble.w	801bd96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801bb98:	2e00      	cmp	r6, #0
 801bb9a:	f000 80fe 	beq.w	801bd9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801bb9e:	44f4      	add	ip, lr
 801bba0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801bba4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801bba8:	b2b6      	uxth	r6, r6
 801bbaa:	b280      	uxth	r0, r0
 801bbac:	fb00 fe06 	mul.w	lr, r0, r6
 801bbb0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801bbb4:	0136      	lsls	r6, r6, #4
 801bbb6:	eba6 070e 	sub.w	r7, r6, lr
 801bbba:	b280      	uxth	r0, r0
 801bbbc:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801bbc0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801bbc4:	b2bf      	uxth	r7, r7
 801bbc6:	1a1b      	subs	r3, r3, r0
 801bbc8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801bbcc:	b29b      	uxth	r3, r3
 801bbce:	fb0a f607 	mul.w	r6, sl, r7
 801bbd2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801bbd6:	fb0b 6603 	mla	r6, fp, r3, r6
 801bbda:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801bbde:	fb00 6609 	mla	r6, r0, r9, r6
 801bbe2:	fb0e 6608 	mla	r6, lr, r8, r6
 801bbe6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801bbea:	9600      	str	r6, [sp, #0]
 801bbec:	2e00      	cmp	r6, #0
 801bbee:	f000 80be 	beq.w	801bd6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801bbf2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801bbf6:	fb0b fc0c 	mul.w	ip, fp, ip
 801bbfa:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801bbfe:	fb0b f505 	mul.w	r5, fp, r5
 801bc02:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801bc06:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801bc0a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bc0e:	44dc      	add	ip, fp
 801bc10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc14:	9501      	str	r5, [sp, #4]
 801bc16:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801bc1a:	9503      	str	r5, [sp, #12]
 801bc1c:	9d01      	ldr	r5, [sp, #4]
 801bc1e:	9e02      	ldr	r6, [sp, #8]
 801bc20:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801bc24:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801bc28:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801bc2c:	fb0a fc0c 	mul.w	ip, sl, ip
 801bc30:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801bc34:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801bc38:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bc3c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bc40:	4465      	add	r5, ip
 801bc42:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bc46:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801bc4a:	fb09 fc0c 	mul.w	ip, r9, ip
 801bc4e:	fb09 f904 	mul.w	r9, r9, r4
 801bc52:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801bc56:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801bc5a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801bc5e:	fb08 f404 	mul.w	r4, r8, r4
 801bc62:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bc66:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801bc6a:	fb08 f802 	mul.w	r8, r8, r2
 801bc6e:	fb0a fa01 	mul.w	sl, sl, r1
 801bc72:	0a22      	lsrs	r2, r4, #8
 801bc74:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801bc78:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801bc7c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801bc80:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801bc84:	4414      	add	r4, r2
 801bc86:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801bc8a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801bc8e:	0a2d      	lsrs	r5, r5, #8
 801bc90:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801bc94:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bc98:	9a03      	ldr	r2, [sp, #12]
 801bc9a:	8836      	ldrh	r6, [r6, #0]
 801bc9c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bca0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bca4:	437d      	muls	r5, r7
 801bca6:	4461      	add	r1, ip
 801bca8:	0a24      	lsrs	r4, r4, #8
 801bcaa:	fb02 5503 	mla	r5, r2, r3, r5
 801bcae:	0a09      	lsrs	r1, r1, #8
 801bcb0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801bcb4:	fb04 540e 	mla	r4, r4, lr, r5
 801bcb8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bcbc:	fb01 4100 	mla	r1, r1, r0, r4
 801bcc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bcc4:	0a09      	lsrs	r1, r1, #8
 801bcc6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bcca:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801bcce:	fb07 f70a 	mul.w	r7, r7, sl
 801bcd2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801bcd6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801bcda:	fb03 7101 	mla	r1, r3, r1, r7
 801bcde:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bce2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801bce6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801bcea:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801bcee:	fb00 e101 	mla	r1, r0, r1, lr
 801bcf2:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801bcf6:	9a00      	ldr	r2, [sp, #0]
 801bcf8:	b287      	uxth	r7, r0
 801bcfa:	437a      	muls	r2, r7
 801bcfc:	0a09      	lsrs	r1, r1, #8
 801bcfe:	1c53      	adds	r3, r2, #1
 801bd00:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bd04:	4321      	orrs	r1, r4
 801bd06:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bd0a:	1235      	asrs	r5, r6, #8
 801bd0c:	0c0a      	lsrs	r2, r1, #16
 801bd0e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801bd12:	b2db      	uxtb	r3, r3
 801bd14:	fb12 f207 	smulbb	r2, r2, r7
 801bd18:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801bd1c:	fb05 2503 	mla	r5, r5, r3, r2
 801bd20:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801bd24:	10f2      	asrs	r2, r6, #3
 801bd26:	b2c8      	uxtb	r0, r1
 801bd28:	00f6      	lsls	r6, r6, #3
 801bd2a:	fb14 f407 	smulbb	r4, r4, r7
 801bd2e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801bd32:	b2f6      	uxtb	r6, r6
 801bd34:	fb10 f007 	smulbb	r0, r0, r7
 801bd38:	fb02 4203 	mla	r2, r2, r3, r4
 801bd3c:	b2ad      	uxth	r5, r5
 801bd3e:	fb06 0303 	mla	r3, r6, r3, r0
 801bd42:	b299      	uxth	r1, r3
 801bd44:	b294      	uxth	r4, r2
 801bd46:	1c6b      	adds	r3, r5, #1
 801bd48:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bd4c:	1c62      	adds	r2, r4, #1
 801bd4e:	1c4b      	adds	r3, r1, #1
 801bd50:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bd54:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801bd58:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801bd5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bd60:	0952      	lsrs	r2, r2, #5
 801bd62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bd66:	432b      	orrs	r3, r5
 801bd68:	4313      	orrs	r3, r2
 801bd6a:	9a02      	ldr	r2, [sp, #8]
 801bd6c:	8013      	strh	r3, [r2, #0]
 801bd6e:	b005      	add	sp, #20
 801bd70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd74:	2500      	movs	r5, #0
 801bd76:	e6e9      	b.n	801bb4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801bd78:	2100      	movs	r1, #0
 801bd7a:	460d      	mov	r5, r1
 801bd7c:	e6f3      	b.n	801bb66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801bd7e:	2100      	movs	r1, #0
 801bd80:	e6f1      	b.n	801bb66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801bd82:	4631      	mov	r1, r6
 801bd84:	e6ef      	b.n	801bb66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801bd86:	2400      	movs	r4, #0
 801bd88:	e700      	b.n	801bb8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801bd8a:	2200      	movs	r2, #0
 801bd8c:	4614      	mov	r4, r2
 801bd8e:	e70b      	b.n	801bba8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801bd90:	4602      	mov	r2, r0
 801bd92:	4604      	mov	r4, r0
 801bd94:	e708      	b.n	801bba8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801bd96:	2200      	movs	r2, #0
 801bd98:	e706      	b.n	801bba8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801bd9a:	4632      	mov	r2, r6
 801bd9c:	e704      	b.n	801bba8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801bd9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bda2:	b09f      	sub	sp, #124	@ 0x7c
 801bda4:	921b      	str	r2, [sp, #108]	@ 0x6c
 801bda6:	9309      	str	r3, [sp, #36]	@ 0x24
 801bda8:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801bdaa:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801bdae:	931c      	str	r3, [sp, #112]	@ 0x70
 801bdb0:	9119      	str	r1, [sp, #100]	@ 0x64
 801bdb2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801bdb6:	901d      	str	r0, [sp, #116]	@ 0x74
 801bdb8:	6850      	ldr	r0, [r2, #4]
 801bdba:	6812      	ldr	r2, [r2, #0]
 801bdbc:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801bdbe:	fb00 1303 	mla	r3, r0, r3, r1
 801bdc2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bdc6:	930c      	str	r3, [sp, #48]	@ 0x30
 801bdc8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801bdca:	681b      	ldr	r3, [r3, #0]
 801bdcc:	9312      	str	r3, [sp, #72]	@ 0x48
 801bdce:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801bdd0:	685e      	ldr	r6, [r3, #4]
 801bdd2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801bdd6:	930d      	str	r3, [sp, #52]	@ 0x34
 801bdd8:	3604      	adds	r6, #4
 801bdda:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801bddc:	2b00      	cmp	r3, #0
 801bdde:	dc03      	bgt.n	801bde8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bde0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801bde2:	2b00      	cmp	r3, #0
 801bde4:	f340 8388 	ble.w	801c4f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801bde8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801bdea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bdee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bdf2:	1e48      	subs	r0, r1, #1
 801bdf4:	1e57      	subs	r7, r2, #1
 801bdf6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bdf8:	2b00      	cmp	r3, #0
 801bdfa:	f340 8195 	ble.w	801c128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bdfe:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801be00:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801be04:	ea4f 4325 	mov.w	r3, r5, asr #16
 801be08:	d406      	bmi.n	801be18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801be0a:	4584      	cmp	ip, r0
 801be0c:	da04      	bge.n	801be18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801be0e:	2b00      	cmp	r3, #0
 801be10:	db02      	blt.n	801be18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801be12:	42bb      	cmp	r3, r7
 801be14:	f2c0 8189 	blt.w	801c12a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801be18:	f11c 0c01 	adds.w	ip, ip, #1
 801be1c:	f100 8177 	bmi.w	801c10e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801be20:	4561      	cmp	r1, ip
 801be22:	f2c0 8174 	blt.w	801c10e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801be26:	3301      	adds	r3, #1
 801be28:	f100 8171 	bmi.w	801c10e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801be2c:	429a      	cmp	r2, r3
 801be2e:	f2c0 816e 	blt.w	801c10e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801be32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801be34:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801be36:	931a      	str	r3, [sp, #104]	@ 0x68
 801be38:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801be3a:	2b00      	cmp	r3, #0
 801be3c:	f340 8193 	ble.w	801c166 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801be40:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801be42:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801be46:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801be48:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801be4c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801be4e:	141b      	asrs	r3, r3, #16
 801be50:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801be54:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801be58:	f100 81d6 	bmi.w	801c208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801be5c:	f100 38ff 	add.w	r8, r0, #4294967295
 801be60:	4543      	cmp	r3, r8
 801be62:	f280 81d1 	bge.w	801c208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801be66:	f1bc 0f00 	cmp.w	ip, #0
 801be6a:	f2c0 81cd 	blt.w	801c208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801be6e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801be72:	45c4      	cmp	ip, r8
 801be74:	f280 81c8 	bge.w	801c208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801be78:	b200      	sxth	r0, r0
 801be7a:	fb0c 3300 	mla	r3, ip, r0, r3
 801be7e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801be80:	eb04 0803 	add.w	r8, r4, r3
 801be84:	5ce3      	ldrb	r3, [r4, r3]
 801be86:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801be8a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801be8e:	2a00      	cmp	r2, #0
 801be90:	f000 81af 	beq.w	801c1f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be94:	f898 c001 	ldrb.w	ip, [r8, #1]
 801be98:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801be9c:	940e      	str	r4, [sp, #56]	@ 0x38
 801be9e:	0e24      	lsrs	r4, r4, #24
 801bea0:	9415      	str	r4, [sp, #84]	@ 0x54
 801bea2:	b179      	cbz	r1, 801bec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801bea4:	eb08 0c00 	add.w	ip, r8, r0
 801bea8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801beac:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801beb0:	900a      	str	r0, [sp, #40]	@ 0x28
 801beb2:	0e00      	lsrs	r0, r0, #24
 801beb4:	9013      	str	r0, [sp, #76]	@ 0x4c
 801beb6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801beba:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801bebe:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bec0:	0e00      	lsrs	r0, r0, #24
 801bec2:	9016      	str	r0, [sp, #88]	@ 0x58
 801bec4:	b292      	uxth	r2, r2
 801bec6:	b289      	uxth	r1, r1
 801bec8:	fb02 f901 	mul.w	r9, r2, r1
 801becc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801bed0:	0112      	lsls	r2, r2, #4
 801bed2:	eba2 0809 	sub.w	r8, r2, r9
 801bed6:	b289      	uxth	r1, r1
 801bed8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801bedc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801bede:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bee0:	fa1f f888 	uxth.w	r8, r8
 801bee4:	1a52      	subs	r2, r2, r1
 801bee6:	b292      	uxth	r2, r2
 801bee8:	fb08 f000 	mul.w	r0, r8, r0
 801beec:	fb02 000e 	mla	r0, r2, lr, r0
 801bef0:	fb01 0004 	mla	r0, r1, r4, r0
 801bef4:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801bef6:	fb09 0004 	mla	r0, r9, r4, r0
 801befa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801befe:	2800      	cmp	r0, #0
 801bf00:	f000 80fa 	beq.w	801c0f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bf04:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801bf08:	d01b      	beq.n	801bf42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801bf0a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bf0e:	fb0e fa0a 	mul.w	sl, lr, sl
 801bf12:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bf16:	fb0e fe03 	mul.w	lr, lr, r3
 801bf1a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bf1e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf22:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bf26:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801bf2a:	4453      	add	r3, sl
 801bf2c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bf30:	0a1b      	lsrs	r3, r3, #8
 801bf32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf36:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf3a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bf3e:	ea43 030c 	orr.w	r3, r3, ip
 801bf42:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bf44:	2cff      	cmp	r4, #255	@ 0xff
 801bf46:	d021      	beq.n	801bf8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801bf48:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bf4a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bf4e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bf50:	fb04 fb0b 	mul.w	fp, r4, fp
 801bf54:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bf56:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bf5a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bf5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bf60:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf64:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf68:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bf6c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bf70:	44de      	add	lr, fp
 801bf72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bf76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bf7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf7e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf82:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bf86:	ea4e 040a 	orr.w	r4, lr, sl
 801bf8a:	940e      	str	r4, [sp, #56]	@ 0x38
 801bf8c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bf8e:	2cff      	cmp	r4, #255	@ 0xff
 801bf90:	d021      	beq.n	801bfd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801bf92:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801bf94:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bf98:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bf9a:	fb04 fb0b 	mul.w	fp, r4, fp
 801bf9e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801bfa0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bfa4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bfa6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bfaa:	fb04 fa0a 	mul.w	sl, r4, sl
 801bfae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfb2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bfb6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bfba:	44de      	add	lr, fp
 801bfbc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bfc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bfc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfc8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfcc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bfd0:	ea4e 040a 	orr.w	r4, lr, sl
 801bfd4:	940a      	str	r4, [sp, #40]	@ 0x28
 801bfd6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801bfd8:	2cff      	cmp	r4, #255	@ 0xff
 801bfda:	d021      	beq.n	801c020 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801bfdc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801bfde:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bfe2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801bfe4:	fb04 fb0b 	mul.w	fp, r4, fp
 801bfe8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801bfea:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bfee:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801bff0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bff4:	fb04 fa0a 	mul.w	sl, r4, sl
 801bff8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bffc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c000:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c004:	44de      	add	lr, fp
 801c006:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c00a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c00e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c012:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c016:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c01a:	ea4e 040a 	orr.w	r4, lr, sl
 801c01e:	940f      	str	r4, [sp, #60]	@ 0x3c
 801c020:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c022:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c026:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c028:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c02c:	fb08 fc0c 	mul.w	ip, r8, ip
 801c030:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c034:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c038:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c03a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c03e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c042:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c044:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c048:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c04c:	fb08 f80e 	mul.w	r8, r8, lr
 801c050:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c054:	fb02 8303 	mla	r3, r2, r3, r8
 801c058:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c05a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c05c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c060:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c062:	fb01 330a 	mla	r3, r1, sl, r3
 801c066:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801c06a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c06c:	fb09 3901 	mla	r9, r9, r1, r3
 801c070:	4342      	muls	r2, r0
 801c072:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c076:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c07a:	883b      	ldrh	r3, [r7, #0]
 801c07c:	1c50      	adds	r0, r2, #1
 801c07e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c082:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c086:	ea4c 0c09 	orr.w	ip, ip, r9
 801c08a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c08e:	1219      	asrs	r1, r3, #8
 801c090:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801c094:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801c098:	b2c0      	uxtb	r0, r0
 801c09a:	fb12 f204 	smulbb	r2, r2, r4
 801c09e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c0a2:	fb01 2100 	mla	r1, r1, r0, r2
 801c0a6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801c0aa:	10da      	asrs	r2, r3, #3
 801c0ac:	fa5f fc8c 	uxtb.w	ip, ip
 801c0b0:	00db      	lsls	r3, r3, #3
 801c0b2:	fb1c fc04 	smulbb	ip, ip, r4
 801c0b6:	b2db      	uxtb	r3, r3
 801c0b8:	b289      	uxth	r1, r1
 801c0ba:	fb03 c300 	mla	r3, r3, r0, ip
 801c0be:	fa1f fc83 	uxth.w	ip, r3
 801c0c2:	1c4b      	adds	r3, r1, #1
 801c0c4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c0c8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c0cc:	fb1e fe04 	smulbb	lr, lr, r4
 801c0d0:	f10c 0301 	add.w	r3, ip, #1
 801c0d4:	fb02 e200 	mla	r2, r2, r0, lr
 801c0d8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c0dc:	b292      	uxth	r2, r2
 801c0de:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801c0e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c0e6:	430b      	orrs	r3, r1
 801c0e8:	1c51      	adds	r1, r2, #1
 801c0ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c0ee:	0952      	lsrs	r2, r2, #5
 801c0f0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c0f4:	4313      	orrs	r3, r2
 801c0f6:	803b      	strh	r3, [r7, #0]
 801c0f8:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c0fa:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c0fc:	441a      	add	r2, r3
 801c0fe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c100:	9229      	str	r2, [sp, #164]	@ 0xa4
 801c102:	441d      	add	r5, r3
 801c104:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801c106:	3b01      	subs	r3, #1
 801c108:	3702      	adds	r7, #2
 801c10a:	931a      	str	r3, [sp, #104]	@ 0x68
 801c10c:	e694      	b.n	801be38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c10e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c110:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c112:	441c      	add	r4, r3
 801c114:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c116:	9429      	str	r4, [sp, #164]	@ 0xa4
 801c118:	441d      	add	r5, r3
 801c11a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c11c:	3b01      	subs	r3, #1
 801c11e:	9309      	str	r3, [sp, #36]	@ 0x24
 801c120:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c122:	3302      	adds	r3, #2
 801c124:	930c      	str	r3, [sp, #48]	@ 0x30
 801c126:	e666      	b.n	801bdf6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c128:	d024      	beq.n	801c174 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801c12a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c12c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801c12e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c130:	3b01      	subs	r3, #1
 801c132:	fb00 4003 	mla	r0, r0, r3, r4
 801c136:	1400      	asrs	r0, r0, #16
 801c138:	f53f ae7b 	bmi.w	801be32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c13c:	3901      	subs	r1, #1
 801c13e:	4288      	cmp	r0, r1
 801c140:	f6bf ae77 	bge.w	801be32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c144:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801c146:	fb01 5303 	mla	r3, r1, r3, r5
 801c14a:	141b      	asrs	r3, r3, #16
 801c14c:	f53f ae71 	bmi.w	801be32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c150:	3a01      	subs	r2, #1
 801c152:	4293      	cmp	r3, r2
 801c154:	f6bf ae6d 	bge.w	801be32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c158:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801c15c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801c160:	f1bb 0f00 	cmp.w	fp, #0
 801c164:	dc70      	bgt.n	801c248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801c166:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c168:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c16c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c16e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c172:	930c      	str	r3, [sp, #48]	@ 0x30
 801c174:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c176:	2b00      	cmp	r3, #0
 801c178:	f340 81be 	ble.w	801c4f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801c17c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c180:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c184:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c188:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c18a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c18e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c192:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c196:	eef0 6a62 	vmov.f32	s13, s5
 801c19a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c19e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c1a6:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801c1aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c1ae:	eef0 6a43 	vmov.f32	s13, s6
 801c1b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c1b6:	ee12 2a90 	vmov	r2, s5
 801c1ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c1be:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1c2:	ee13 2a10 	vmov	r2, s6
 801c1c6:	932b      	str	r3, [sp, #172]	@ 0xac
 801c1c8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c1ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1ce:	932c      	str	r3, [sp, #176]	@ 0xb0
 801c1d0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c1d2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801c1d4:	3b01      	subs	r3, #1
 801c1d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1da:	9319      	str	r3, [sp, #100]	@ 0x64
 801c1dc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c1de:	bf08      	it	eq
 801c1e0:	4613      	moveq	r3, r2
 801c1e2:	ee16 5a90 	vmov	r5, s13
 801c1e6:	9309      	str	r3, [sp, #36]	@ 0x24
 801c1e8:	eeb0 3a67 	vmov.f32	s6, s15
 801c1ec:	eef0 2a47 	vmov.f32	s5, s14
 801c1f0:	e5f3      	b.n	801bdda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c1f2:	2900      	cmp	r1, #0
 801c1f4:	f43f ae66 	beq.w	801bec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c1f8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801c1fc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c200:	900a      	str	r0, [sp, #40]	@ 0x28
 801c202:	0e00      	lsrs	r0, r0, #24
 801c204:	9013      	str	r0, [sp, #76]	@ 0x4c
 801c206:	e65d      	b.n	801bec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c208:	f113 0801 	adds.w	r8, r3, #1
 801c20c:	f53f af74 	bmi.w	801c0f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c210:	4540      	cmp	r0, r8
 801c212:	f6ff af71 	blt.w	801c0f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c216:	f11c 0801 	adds.w	r8, ip, #1
 801c21a:	f53f af6d 	bmi.w	801c0f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c21e:	45c6      	cmp	lr, r8
 801c220:	f6ff af6a 	blt.w	801c0f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c224:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801c226:	9302      	str	r3, [sp, #8]
 801c228:	b200      	sxth	r0, r0
 801c22a:	fa0f f38e 	sxth.w	r3, lr
 801c22e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801c232:	e9cd c203 	strd	ip, r2, [sp, #12]
 801c236:	9301      	str	r3, [sp, #4]
 801c238:	9000      	str	r0, [sp, #0]
 801c23a:	4633      	mov	r3, r6
 801c23c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c23e:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801c240:	4639      	mov	r1, r7
 801c242:	f7ff fc62 	bl	801bb0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801c246:	e757      	b.n	801c0f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c248:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c24a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c24c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c250:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c252:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c256:	1427      	asrs	r7, r4, #16
 801c258:	142b      	asrs	r3, r5, #16
 801c25a:	fb01 7303 	mla	r3, r1, r3, r7
 801c25e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c260:	18e7      	adds	r7, r4, r3
 801c262:	5ce3      	ldrb	r3, [r4, r3]
 801c264:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c268:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c26c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c270:	2a00      	cmp	r2, #0
 801c272:	f000 8137 	beq.w	801c4e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801c276:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c27a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c27e:	9410      	str	r4, [sp, #64]	@ 0x40
 801c280:	0e24      	lsrs	r4, r4, #24
 801c282:	9417      	str	r4, [sp, #92]	@ 0x5c
 801c284:	b170      	cbz	r0, 801c2a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c286:	eb07 0e01 	add.w	lr, r7, r1
 801c28a:	5c79      	ldrb	r1, [r7, r1]
 801c28c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c290:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c292:	0e09      	lsrs	r1, r1, #24
 801c294:	9114      	str	r1, [sp, #80]	@ 0x50
 801c296:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c29a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c29e:	9111      	str	r1, [sp, #68]	@ 0x44
 801c2a0:	0e09      	lsrs	r1, r1, #24
 801c2a2:	9118      	str	r1, [sp, #96]	@ 0x60
 801c2a4:	b292      	uxth	r2, r2
 801c2a6:	b280      	uxth	r0, r0
 801c2a8:	fb02 f800 	mul.w	r8, r2, r0
 801c2ac:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c2b0:	0112      	lsls	r2, r2, #4
 801c2b2:	eba2 0e08 	sub.w	lr, r2, r8
 801c2b6:	b280      	uxth	r0, r0
 801c2b8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c2bc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801c2be:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c2c0:	fa1f fe8e 	uxth.w	lr, lr
 801c2c4:	1a12      	subs	r2, r2, r0
 801c2c6:	b292      	uxth	r2, r2
 801c2c8:	fb0e f101 	mul.w	r1, lr, r1
 801c2cc:	fb02 110c 	mla	r1, r2, ip, r1
 801c2d0:	fb00 1104 	mla	r1, r0, r4, r1
 801c2d4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c2d6:	fb08 1104 	mla	r1, r8, r4, r1
 801c2da:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c2de:	2900      	cmp	r1, #0
 801c2e0:	f000 80f5 	beq.w	801c4ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801c2e4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c2e8:	d019      	beq.n	801c31e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801c2ea:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c2ee:	fb0c fa0a 	mul.w	sl, ip, sl
 801c2f2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c2f6:	fb0c fc03 	mul.w	ip, ip, r3
 801c2fa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c2fe:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c302:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c306:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c30a:	4453      	add	r3, sl
 801c30c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c310:	0a1b      	lsrs	r3, r3, #8
 801c312:	0a3f      	lsrs	r7, r7, #8
 801c314:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c318:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c31c:	433b      	orrs	r3, r7
 801c31e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c320:	2cff      	cmp	r4, #255	@ 0xff
 801c322:	d020      	beq.n	801c366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801c324:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c326:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c32a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c32c:	4367      	muls	r7, r4
 801c32e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c330:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c334:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c336:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c33a:	fb04 fa0a 	mul.w	sl, r4, sl
 801c33e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c342:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c346:	44bc      	add	ip, r7
 801c348:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c34c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c350:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c354:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c358:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c35c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c360:	ea4c 040a 	orr.w	r4, ip, sl
 801c364:	9410      	str	r4, [sp, #64]	@ 0x40
 801c366:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c368:	2cff      	cmp	r4, #255	@ 0xff
 801c36a:	d020      	beq.n	801c3ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801c36c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c36e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c372:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c374:	4367      	muls	r7, r4
 801c376:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c378:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c37c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c37e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c382:	fb04 fa0a 	mul.w	sl, r4, sl
 801c386:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c38a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c38e:	44bc      	add	ip, r7
 801c390:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c394:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c398:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c39c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c3a8:	ea4c 040a 	orr.w	r4, ip, sl
 801c3ac:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c3ae:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c3b0:	2cff      	cmp	r4, #255	@ 0xff
 801c3b2:	d020      	beq.n	801c3f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801c3b4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c3b6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c3ba:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c3bc:	4367      	muls	r7, r4
 801c3be:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c3c0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c3c4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c3c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c3ca:	fb04 fa0a 	mul.w	sl, r4, sl
 801c3ce:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c3d2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3d6:	44bc      	add	ip, r7
 801c3d8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c3dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c3e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3e8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3ec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c3f0:	ea4c 040a 	orr.w	r4, ip, sl
 801c3f4:	9411      	str	r4, [sp, #68]	@ 0x44
 801c3f6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c3f8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c3fc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c3fe:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c402:	fb0e f707 	mul.w	r7, lr, r7
 801c406:	fb02 770c 	mla	r7, r2, ip, r7
 801c40a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c40e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c410:	fb00 770c 	mla	r7, r0, ip, r7
 801c414:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c418:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c41a:	fb08 770c 	mla	r7, r8, ip, r7
 801c41e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c422:	fb0e fe0c 	mul.w	lr, lr, ip
 801c426:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c42a:	fb02 e303 	mla	r3, r2, r3, lr
 801c42e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c430:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c432:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c436:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c438:	fb00 330a 	mla	r3, r0, sl, r3
 801c43c:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801c440:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c444:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c446:	f8b9 0000 	ldrh.w	r0, [r9]
 801c44a:	434b      	muls	r3, r1
 801c44c:	0a3f      	lsrs	r7, r7, #8
 801c44e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c452:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c456:	1c59      	adds	r1, r3, #1
 801c458:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c45c:	ea47 070c 	orr.w	r7, r7, ip
 801c460:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c464:	1202      	asrs	r2, r0, #8
 801c466:	0c3b      	lsrs	r3, r7, #16
 801c468:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801c46c:	b2c9      	uxtb	r1, r1
 801c46e:	fb13 f304 	smulbb	r3, r3, r4
 801c472:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c476:	fb02 3201 	mla	r2, r2, r1, r3
 801c47a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801c47e:	10c3      	asrs	r3, r0, #3
 801c480:	b2ff      	uxtb	r7, r7
 801c482:	00c0      	lsls	r0, r0, #3
 801c484:	b292      	uxth	r2, r2
 801c486:	fb1c fc04 	smulbb	ip, ip, r4
 801c48a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c48e:	b2c0      	uxtb	r0, r0
 801c490:	fb17 f704 	smulbb	r7, r7, r4
 801c494:	fb03 c301 	mla	r3, r3, r1, ip
 801c498:	fb00 7001 	mla	r0, r0, r1, r7
 801c49c:	f102 0c01 	add.w	ip, r2, #1
 801c4a0:	b280      	uxth	r0, r0
 801c4a2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801c4a6:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801c4aa:	1c42      	adds	r2, r0, #1
 801c4ac:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c4b0:	b29b      	uxth	r3, r3
 801c4b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c4b6:	ea42 020c 	orr.w	r2, r2, ip
 801c4ba:	f103 0c01 	add.w	ip, r3, #1
 801c4be:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801c4c2:	095b      	lsrs	r3, r3, #5
 801c4c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c4c8:	431a      	orrs	r2, r3
 801c4ca:	f8a9 2000 	strh.w	r2, [r9]
 801c4ce:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c4d0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c4d2:	441a      	add	r2, r3
 801c4d4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c4d6:	9229      	str	r2, [sp, #164]	@ 0xa4
 801c4d8:	f109 0902 	add.w	r9, r9, #2
 801c4dc:	441d      	add	r5, r3
 801c4de:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c4e2:	e63d      	b.n	801c160 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801c4e4:	2800      	cmp	r0, #0
 801c4e6:	f43f aedd 	beq.w	801c2a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c4ea:	5c79      	ldrb	r1, [r7, r1]
 801c4ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c4f0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c4f2:	0e09      	lsrs	r1, r1, #24
 801c4f4:	9114      	str	r1, [sp, #80]	@ 0x50
 801c4f6:	e6d5      	b.n	801c2a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c4f8:	b01f      	add	sp, #124	@ 0x7c
 801c4fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c4fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801c4fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c502:	b089      	sub	sp, #36	@ 0x24
 801c504:	9101      	str	r1, [sp, #4]
 801c506:	9801      	ldr	r0, [sp, #4]
 801c508:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801c50c:	8800      	ldrh	r0, [r0, #0]
 801c50e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801c512:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801c516:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801c51a:	1206      	asrs	r6, r0, #8
 801c51c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801c520:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c524:	9602      	str	r6, [sp, #8]
 801c526:	10c6      	asrs	r6, r0, #3
 801c528:	00c0      	lsls	r0, r0, #3
 801c52a:	b2c0      	uxtb	r0, r0
 801c52c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c530:	9004      	str	r0, [sp, #16]
 801c532:	2f00      	cmp	r7, #0
 801c534:	fb07 100c 	mla	r0, r7, ip, r1
 801c538:	9603      	str	r6, [sp, #12]
 801c53a:	eb02 0e00 	add.w	lr, r2, r0
 801c53e:	f2c0 810a 	blt.w	801c756 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c542:	45b8      	cmp	r8, r7
 801c544:	f340 8107 	ble.w	801c756 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c548:	2900      	cmp	r1, #0
 801c54a:	f2c0 8102 	blt.w	801c752 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c54e:	458c      	cmp	ip, r1
 801c550:	f340 80ff 	ble.w	801c752 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c554:	5c12      	ldrb	r2, [r2, r0]
 801c556:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801c55a:	1c4a      	adds	r2, r1, #1
 801c55c:	f100 80fe 	bmi.w	801c75c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c560:	4594      	cmp	ip, r2
 801c562:	f340 80fb 	ble.w	801c75c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c566:	2d00      	cmp	r5, #0
 801c568:	f000 80fa 	beq.w	801c760 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801c56c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c570:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801c574:	3701      	adds	r7, #1
 801c576:	f100 80f7 	bmi.w	801c768 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c57a:	45b8      	cmp	r8, r7
 801c57c:	f340 80f4 	ble.w	801c768 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c580:	2c00      	cmp	r4, #0
 801c582:	f000 80f4 	beq.w	801c76e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801c586:	2900      	cmp	r1, #0
 801c588:	eb0e 020c 	add.w	r2, lr, ip
 801c58c:	f2c0 80ea 	blt.w	801c764 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c590:	458c      	cmp	ip, r1
 801c592:	f340 80e7 	ble.w	801c764 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c596:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801c59a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801c59e:	3101      	adds	r1, #1
 801c5a0:	f100 80e8 	bmi.w	801c774 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c5a4:	458c      	cmp	ip, r1
 801c5a6:	f340 80e5 	ble.w	801c774 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c5aa:	2d00      	cmp	r5, #0
 801c5ac:	f000 80e4 	beq.w	801c778 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801c5b0:	7852      	ldrb	r2, [r2, #1]
 801c5b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801c5b6:	0e0b      	lsrs	r3, r1, #24
 801c5b8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801c5bc:	9300      	str	r3, [sp, #0]
 801c5be:	b2a4      	uxth	r4, r4
 801c5c0:	b2ab      	uxth	r3, r5
 801c5c2:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801c5c6:	fb03 f904 	mul.w	r9, r3, r4
 801c5ca:	fb0a f505 	mul.w	r5, sl, r5
 801c5ce:	011b      	lsls	r3, r3, #4
 801c5d0:	eba3 0e09 	sub.w	lr, r3, r9
 801c5d4:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801c5d8:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801c5dc:	0a28      	lsrs	r0, r5, #8
 801c5de:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801c5e2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801c5e6:	4405      	add	r5, r0
 801c5e8:	0a2d      	lsrs	r5, r5, #8
 801c5ea:	fb0a f303 	mul.w	r3, sl, r3
 801c5ee:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801c5f2:	9005      	str	r0, [sp, #20]
 801c5f4:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801c5f8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801c5fc:	0a1b      	lsrs	r3, r3, #8
 801c5fe:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801c602:	9306      	str	r3, [sp, #24]
 801c604:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801c608:	fb0b f303 	mul.w	r3, fp, r3
 801c60c:	0a1d      	lsrs	r5, r3, #8
 801c60e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801c612:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801c616:	fb0b f606 	mul.w	r6, fp, r6
 801c61a:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801c61e:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801c622:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c626:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c62a:	fb08 f707 	mul.w	r7, r8, r7
 801c62e:	441d      	add	r5, r3
 801c630:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801c634:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801c638:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801c63c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801c640:	fb08 fc0c 	mul.w	ip, r8, ip
 801c644:	0a1b      	lsrs	r3, r3, #8
 801c646:	9307      	str	r3, [sp, #28]
 801c648:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801c64c:	0e0b      	lsrs	r3, r1, #24
 801c64e:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801c652:	435f      	muls	r7, r3
 801c654:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c658:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801c65c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801c660:	4460      	add	r0, ip
 801c662:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c666:	b2a4      	uxth	r4, r4
 801c668:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c66c:	0a2d      	lsrs	r5, r5, #8
 801c66e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c672:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c676:	fa1f fe8e 	uxth.w	lr, lr
 801c67a:	4359      	muls	r1, r3
 801c67c:	1b12      	subs	r2, r2, r4
 801c67e:	9b05      	ldr	r3, [sp, #20]
 801c680:	44bc      	add	ip, r7
 801c682:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c686:	b292      	uxth	r2, r2
 801c688:	fb05 f50e 	mul.w	r5, r5, lr
 801c68c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c690:	fb03 5502 	mla	r5, r3, r2, r5
 801c694:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c698:	9b06      	ldr	r3, [sp, #24]
 801c69a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801c69e:	0a36      	lsrs	r6, r6, #8
 801c6a0:	0a00      	lsrs	r0, r0, #8
 801c6a2:	fb0c 5509 	mla	r5, ip, r9, r5
 801c6a6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801c6aa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801c6ae:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801c6b2:	fb00 5504 	mla	r5, r0, r4, r5
 801c6b6:	fb0e f606 	mul.w	r6, lr, r6
 801c6ba:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801c6be:	0a09      	lsrs	r1, r1, #8
 801c6c0:	9b07      	ldr	r3, [sp, #28]
 801c6c2:	fb02 6000 	mla	r0, r2, r0, r6
 801c6c6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c6ca:	fb09 0001 	mla	r0, r9, r1, r0
 801c6ce:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c6d2:	fb0e fe0b 	mul.w	lr, lr, fp
 801c6d6:	fb04 0003 	mla	r0, r4, r3, r0
 801c6da:	fb02 e20a 	mla	r2, r2, sl, lr
 801c6de:	9b00      	ldr	r3, [sp, #0]
 801c6e0:	fb04 2408 	mla	r4, r4, r8, r2
 801c6e4:	fb09 4903 	mla	r9, r9, r3, r4
 801c6e8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801c6ec:	9b02      	ldr	r3, [sp, #8]
 801c6ee:	9a04      	ldr	r2, [sp, #16]
 801c6f0:	fa5f f989 	uxtb.w	r9, r9
 801c6f4:	fb03 f109 	mul.w	r1, r3, r9
 801c6f8:	9b03      	ldr	r3, [sp, #12]
 801c6fa:	0a2d      	lsrs	r5, r5, #8
 801c6fc:	0a00      	lsrs	r0, r0, #8
 801c6fe:	fb03 f309 	mul.w	r3, r3, r9
 801c702:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801c706:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c70a:	4305      	orrs	r5, r0
 801c70c:	fb02 f909 	mul.w	r9, r2, r9
 801c710:	1c58      	adds	r0, r3, #1
 801c712:	1c4a      	adds	r2, r1, #1
 801c714:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c718:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c71c:	0a2b      	lsrs	r3, r5, #8
 801c71e:	0c2a      	lsrs	r2, r5, #16
 801c720:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c724:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801c728:	00db      	lsls	r3, r3, #3
 801c72a:	0212      	lsls	r2, r2, #8
 801c72c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801c730:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c734:	4313      	orrs	r3, r2
 801c736:	f109 0201 	add.w	r2, r9, #1
 801c73a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801c73e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801c742:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c746:	431d      	orrs	r5, r3
 801c748:	9b01      	ldr	r3, [sp, #4]
 801c74a:	801d      	strh	r5, [r3, #0]
 801c74c:	b009      	add	sp, #36	@ 0x24
 801c74e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c752:	2000      	movs	r0, #0
 801c754:	e701      	b.n	801c55a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801c756:	2600      	movs	r6, #0
 801c758:	4630      	mov	r0, r6
 801c75a:	e70b      	b.n	801c574 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c75c:	2600      	movs	r6, #0
 801c75e:	e709      	b.n	801c574 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c760:	462e      	mov	r6, r5
 801c762:	e707      	b.n	801c574 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c764:	2700      	movs	r7, #0
 801c766:	e71a      	b.n	801c59e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801c768:	2100      	movs	r1, #0
 801c76a:	460f      	mov	r7, r1
 801c76c:	e723      	b.n	801c5b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c76e:	4621      	mov	r1, r4
 801c770:	4627      	mov	r7, r4
 801c772:	e720      	b.n	801c5b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c774:	2100      	movs	r1, #0
 801c776:	e71e      	b.n	801c5b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c778:	4629      	mov	r1, r5
 801c77a:	e71c      	b.n	801c5b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801c77c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c77c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c780:	b09b      	sub	sp, #108	@ 0x6c
 801c782:	9218      	str	r2, [sp, #96]	@ 0x60
 801c784:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c786:	9116      	str	r1, [sp, #88]	@ 0x58
 801c788:	9307      	str	r3, [sp, #28]
 801c78a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801c78e:	9019      	str	r0, [sp, #100]	@ 0x64
 801c790:	6850      	ldr	r0, [r2, #4]
 801c792:	6812      	ldr	r2, [r2, #0]
 801c794:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801c796:	fb00 1303 	mla	r3, r0, r3, r1
 801c79a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c79e:	930a      	str	r3, [sp, #40]	@ 0x28
 801c7a0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c7a2:	681b      	ldr	r3, [r3, #0]
 801c7a4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c7a6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c7a8:	685e      	ldr	r6, [r3, #4]
 801c7aa:	3604      	adds	r6, #4
 801c7ac:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c7ae:	2b00      	cmp	r3, #0
 801c7b0:	dc03      	bgt.n	801c7ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c7b2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c7b4:	2b00      	cmp	r3, #0
 801c7b6:	f340 8373 	ble.w	801cea0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c7ba:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c7bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c7c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c7c4:	1e48      	subs	r0, r1, #1
 801c7c6:	1e57      	subs	r7, r2, #1
 801c7c8:	9b07      	ldr	r3, [sp, #28]
 801c7ca:	2b00      	cmp	r3, #0
 801c7cc:	f340 8190 	ble.w	801caf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c7d0:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c7d2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c7d6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c7da:	d406      	bmi.n	801c7ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c7dc:	4584      	cmp	ip, r0
 801c7de:	da04      	bge.n	801c7ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c7e0:	2b00      	cmp	r3, #0
 801c7e2:	db02      	blt.n	801c7ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c7e4:	42bb      	cmp	r3, r7
 801c7e6:	f2c0 8184 	blt.w	801caf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801c7ea:	f11c 0c01 	adds.w	ip, ip, #1
 801c7ee:	f100 8172 	bmi.w	801cad6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c7f2:	4561      	cmp	r1, ip
 801c7f4:	f2c0 816f 	blt.w	801cad6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c7f8:	3301      	adds	r3, #1
 801c7fa:	f100 816c 	bmi.w	801cad6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c7fe:	429a      	cmp	r2, r3
 801c800:	f2c0 8169 	blt.w	801cad6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c804:	9b07      	ldr	r3, [sp, #28]
 801c806:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c808:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c80a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c80c:	2b00      	cmp	r3, #0
 801c80e:	f340 818e 	ble.w	801cb2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801c812:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c814:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c818:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c81a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801c81e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c820:	141b      	asrs	r3, r3, #16
 801c822:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c826:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c82a:	f100 81d1 	bmi.w	801cbd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c82e:	f101 38ff 	add.w	r8, r1, #4294967295
 801c832:	4543      	cmp	r3, r8
 801c834:	f280 81cc 	bge.w	801cbd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c838:	f1bc 0f00 	cmp.w	ip, #0
 801c83c:	f2c0 81c8 	blt.w	801cbd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c840:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c844:	45c4      	cmp	ip, r8
 801c846:	f280 81c3 	bge.w	801cbd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c84a:	b209      	sxth	r1, r1
 801c84c:	fb0c 3301 	mla	r3, ip, r1, r3
 801c850:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c852:	eb04 0803 	add.w	r8, r4, r3
 801c856:	5ce3      	ldrb	r3, [r4, r3]
 801c858:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c85c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c860:	2a00      	cmp	r2, #0
 801c862:	f000 81aa 	beq.w	801cbba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801c866:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c86a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c86e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c870:	0e24      	lsrs	r4, r4, #24
 801c872:	9412      	str	r4, [sp, #72]	@ 0x48
 801c874:	b178      	cbz	r0, 801c896 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c876:	eb08 0c01 	add.w	ip, r8, r1
 801c87a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c87e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c882:	9108      	str	r1, [sp, #32]
 801c884:	0e09      	lsrs	r1, r1, #24
 801c886:	9110      	str	r1, [sp, #64]	@ 0x40
 801c888:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801c88c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c890:	910c      	str	r1, [sp, #48]	@ 0x30
 801c892:	0e09      	lsrs	r1, r1, #24
 801c894:	9113      	str	r1, [sp, #76]	@ 0x4c
 801c896:	b292      	uxth	r2, r2
 801c898:	b280      	uxth	r0, r0
 801c89a:	fb02 f900 	mul.w	r9, r2, r0
 801c89e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c8a2:	0112      	lsls	r2, r2, #4
 801c8a4:	eba2 0809 	sub.w	r8, r2, r9
 801c8a8:	b280      	uxth	r0, r0
 801c8aa:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c8ae:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c8b0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c8b2:	fa1f f888 	uxth.w	r8, r8
 801c8b6:	1a12      	subs	r2, r2, r0
 801c8b8:	b292      	uxth	r2, r2
 801c8ba:	fb08 f101 	mul.w	r1, r8, r1
 801c8be:	fb02 110e 	mla	r1, r2, lr, r1
 801c8c2:	fb00 1104 	mla	r1, r0, r4, r1
 801c8c6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c8c8:	fb09 1104 	mla	r1, r9, r4, r1
 801c8cc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c8d0:	2900      	cmp	r1, #0
 801c8d2:	f000 80f5 	beq.w	801cac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c8d6:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c8da:	d01b      	beq.n	801c914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c8dc:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c8e0:	fb0e fa0a 	mul.w	sl, lr, sl
 801c8e4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c8e8:	fb0e fe03 	mul.w	lr, lr, r3
 801c8ec:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c8f0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c8f4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c8f8:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c8fc:	4453      	add	r3, sl
 801c8fe:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c902:	0a1b      	lsrs	r3, r3, #8
 801c904:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c908:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c90c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c910:	ea43 030c 	orr.w	r3, r3, ip
 801c914:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c916:	2cff      	cmp	r4, #255	@ 0xff
 801c918:	d021      	beq.n	801c95e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801c91a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c91c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c920:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c922:	fb04 fb0b 	mul.w	fp, r4, fp
 801c926:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c928:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c92c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c92e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c932:	fb04 fa0a 	mul.w	sl, r4, sl
 801c936:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c93a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c93e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c942:	44de      	add	lr, fp
 801c944:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c948:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c94c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c950:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c954:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c958:	ea4e 040a 	orr.w	r4, lr, sl
 801c95c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c95e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c960:	2cff      	cmp	r4, #255	@ 0xff
 801c962:	d021      	beq.n	801c9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801c964:	9c08      	ldr	r4, [sp, #32]
 801c966:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c96a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c96c:	fb04 fb0b 	mul.w	fp, r4, fp
 801c970:	9c08      	ldr	r4, [sp, #32]
 801c972:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c976:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c978:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c97c:	fb04 fa0a 	mul.w	sl, r4, sl
 801c980:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c984:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c988:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c98c:	44de      	add	lr, fp
 801c98e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c992:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c996:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c99a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c99e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c9a2:	ea4e 040a 	orr.w	r4, lr, sl
 801c9a6:	9408      	str	r4, [sp, #32]
 801c9a8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c9aa:	2cff      	cmp	r4, #255	@ 0xff
 801c9ac:	d021      	beq.n	801c9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c9ae:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c9b0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c9b4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c9b6:	fb04 fb0b 	mul.w	fp, r4, fp
 801c9ba:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c9bc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c9c0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c9c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c9c6:	fb04 fa0a 	mul.w	sl, r4, sl
 801c9ca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c9ce:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c9d2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c9d6:	44de      	add	lr, fp
 801c9d8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c9dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c9e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c9e4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c9e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c9ec:	ea4e 040a 	orr.w	r4, lr, sl
 801c9f0:	940c      	str	r4, [sp, #48]	@ 0x30
 801c9f2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c9f4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c9f8:	9c08      	ldr	r4, [sp, #32]
 801c9fa:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c9fe:	fb08 fc0c 	mul.w	ip, r8, ip
 801ca02:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ca06:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ca0a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ca0c:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ca10:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ca14:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ca16:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ca1a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801ca1e:	fb08 f80e 	mul.w	r8, r8, lr
 801ca22:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ca26:	fb02 8303 	mla	r3, r2, r3, r8
 801ca2a:	9a08      	ldr	r2, [sp, #32]
 801ca2c:	f8b7 8000 	ldrh.w	r8, [r7]
 801ca30:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ca34:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ca36:	fb00 330a 	mla	r3, r0, sl, r3
 801ca3a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801ca3e:	fb09 3900 	mla	r9, r9, r0, r3
 801ca42:	43c9      	mvns	r1, r1
 801ca44:	ea4f 2228 	mov.w	r2, r8, asr #8
 801ca48:	fa5f fe81 	uxtb.w	lr, r1
 801ca4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ca50:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ca54:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ca58:	fb02 f20e 	mul.w	r2, r2, lr
 801ca5c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ca60:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ca64:	ea4c 0c09 	orr.w	ip, ip, r9
 801ca68:	1c53      	adds	r3, r2, #1
 801ca6a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ca6e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ca72:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ca76:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ca7a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ca7e:	4a63      	ldr	r2, [pc, #396]	@ (801cc0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ca80:	fb00 f00e 	mul.w	r0, r0, lr
 801ca84:	b2db      	uxtb	r3, r3
 801ca86:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ca8a:	1c43      	adds	r3, r0, #1
 801ca8c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ca90:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ca94:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801ca98:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ca9c:	b2c9      	uxtb	r1, r1
 801ca9e:	00db      	lsls	r3, r3, #3
 801caa0:	fb01 f10e 	mul.w	r1, r1, lr
 801caa4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801caa8:	4313      	orrs	r3, r2
 801caaa:	1c4a      	adds	r2, r1, #1
 801caac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cab0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801cab4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801cab8:	ea4c 0c03 	orr.w	ip, ip, r3
 801cabc:	f8a7 c000 	strh.w	ip, [r7]
 801cac0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cac2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801cac4:	441a      	add	r2, r3
 801cac6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cac8:	9225      	str	r2, [sp, #148]	@ 0x94
 801caca:	441d      	add	r5, r3
 801cacc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801cace:	3b01      	subs	r3, #1
 801cad0:	3702      	adds	r7, #2
 801cad2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801cad4:	e699      	b.n	801c80a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cad6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cad8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801cada:	441c      	add	r4, r3
 801cadc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cade:	9425      	str	r4, [sp, #148]	@ 0x94
 801cae0:	441d      	add	r5, r3
 801cae2:	9b07      	ldr	r3, [sp, #28]
 801cae4:	3b01      	subs	r3, #1
 801cae6:	9307      	str	r3, [sp, #28]
 801cae8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801caea:	3302      	adds	r3, #2
 801caec:	930a      	str	r3, [sp, #40]	@ 0x28
 801caee:	e66b      	b.n	801c7c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801caf0:	d024      	beq.n	801cb3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801caf2:	9b07      	ldr	r3, [sp, #28]
 801caf4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801caf6:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801caf8:	3b01      	subs	r3, #1
 801cafa:	fb00 4003 	mla	r0, r0, r3, r4
 801cafe:	1400      	asrs	r0, r0, #16
 801cb00:	f53f ae80 	bmi.w	801c804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cb04:	3901      	subs	r1, #1
 801cb06:	4288      	cmp	r0, r1
 801cb08:	f6bf ae7c 	bge.w	801c804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cb0c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801cb0e:	fb01 5303 	mla	r3, r1, r3, r5
 801cb12:	141b      	asrs	r3, r3, #16
 801cb14:	f53f ae76 	bmi.w	801c804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cb18:	3a01      	subs	r2, #1
 801cb1a:	4293      	cmp	r3, r2
 801cb1c:	f6bf ae72 	bge.w	801c804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cb20:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801cb24:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801cb28:	f1bb 0f00 	cmp.w	fp, #0
 801cb2c:	dc70      	bgt.n	801cc10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cb2e:	9b07      	ldr	r3, [sp, #28]
 801cb30:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cb34:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cb36:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cb3a:	930a      	str	r3, [sp, #40]	@ 0x28
 801cb3c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cb3e:	2b00      	cmp	r3, #0
 801cb40:	f340 81ae 	ble.w	801cea0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801cb44:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb48:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cb4c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cb50:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb56:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb5e:	eef0 6a62 	vmov.f32	s13, s5
 801cb62:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb6e:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801cb72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb76:	eef0 6a43 	vmov.f32	s13, s6
 801cb7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb7e:	ee12 2a90 	vmov	r2, s5
 801cb82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb86:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb8a:	ee13 2a10 	vmov	r2, s6
 801cb8e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801cb90:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb92:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb96:	9328      	str	r3, [sp, #160]	@ 0xa0
 801cb98:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cb9a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801cb9c:	3b01      	subs	r3, #1
 801cb9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cba2:	9316      	str	r3, [sp, #88]	@ 0x58
 801cba4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cba6:	bf08      	it	eq
 801cba8:	4613      	moveq	r3, r2
 801cbaa:	ee16 5a90 	vmov	r5, s13
 801cbae:	9307      	str	r3, [sp, #28]
 801cbb0:	eeb0 3a67 	vmov.f32	s6, s15
 801cbb4:	eef0 2a47 	vmov.f32	s5, s14
 801cbb8:	e5f8      	b.n	801c7ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cbba:	2800      	cmp	r0, #0
 801cbbc:	f43f ae6b 	beq.w	801c896 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801cbc0:	f818 1001 	ldrb.w	r1, [r8, r1]
 801cbc4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cbc8:	9108      	str	r1, [sp, #32]
 801cbca:	0e09      	lsrs	r1, r1, #24
 801cbcc:	9110      	str	r1, [sp, #64]	@ 0x40
 801cbce:	e662      	b.n	801c896 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801cbd0:	f113 0801 	adds.w	r8, r3, #1
 801cbd4:	f53f af74 	bmi.w	801cac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cbd8:	4541      	cmp	r1, r8
 801cbda:	f6ff af71 	blt.w	801cac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cbde:	f11c 0801 	adds.w	r8, ip, #1
 801cbe2:	f53f af6d 	bmi.w	801cac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cbe6:	45c6      	cmp	lr, r8
 801cbe8:	f6ff af6a 	blt.w	801cac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cbec:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801cbf0:	b209      	sxth	r1, r1
 801cbf2:	fa0f f38e 	sxth.w	r3, lr
 801cbf6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801cbfa:	9301      	str	r3, [sp, #4]
 801cbfc:	9100      	str	r1, [sp, #0]
 801cbfe:	4633      	mov	r3, r6
 801cc00:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801cc02:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801cc04:	4639      	mov	r1, r7
 801cc06:	f7ff fc7a 	bl	801c4fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801cc0a:	e759      	b.n	801cac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cc0c:	fffff800 	.word	0xfffff800
 801cc10:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801cc12:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801cc14:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cc18:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cc1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cc1e:	1427      	asrs	r7, r4, #16
 801cc20:	142b      	asrs	r3, r5, #16
 801cc22:	fb01 7303 	mla	r3, r1, r3, r7
 801cc26:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801cc28:	18e7      	adds	r7, r4, r3
 801cc2a:	5ce3      	ldrb	r3, [r4, r3]
 801cc2c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801cc30:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801cc34:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801cc38:	2a00      	cmp	r2, #0
 801cc3a:	f000 8127 	beq.w	801ce8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cc3e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801cc42:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801cc46:	940d      	str	r4, [sp, #52]	@ 0x34
 801cc48:	0e24      	lsrs	r4, r4, #24
 801cc4a:	9414      	str	r4, [sp, #80]	@ 0x50
 801cc4c:	b170      	cbz	r0, 801cc6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801cc4e:	eb07 0e01 	add.w	lr, r7, r1
 801cc52:	5c79      	ldrb	r1, [r7, r1]
 801cc54:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cc58:	9109      	str	r1, [sp, #36]	@ 0x24
 801cc5a:	0e09      	lsrs	r1, r1, #24
 801cc5c:	9111      	str	r1, [sp, #68]	@ 0x44
 801cc5e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801cc62:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cc66:	910e      	str	r1, [sp, #56]	@ 0x38
 801cc68:	0e09      	lsrs	r1, r1, #24
 801cc6a:	9115      	str	r1, [sp, #84]	@ 0x54
 801cc6c:	b292      	uxth	r2, r2
 801cc6e:	b280      	uxth	r0, r0
 801cc70:	fb02 f800 	mul.w	r8, r2, r0
 801cc74:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801cc78:	0112      	lsls	r2, r2, #4
 801cc7a:	eba2 0e08 	sub.w	lr, r2, r8
 801cc7e:	b280      	uxth	r0, r0
 801cc80:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801cc84:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cc86:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cc88:	fa1f fe8e 	uxth.w	lr, lr
 801cc8c:	1a09      	subs	r1, r1, r0
 801cc8e:	b289      	uxth	r1, r1
 801cc90:	fb0e f202 	mul.w	r2, lr, r2
 801cc94:	fb01 220c 	mla	r2, r1, ip, r2
 801cc98:	fb00 2204 	mla	r2, r0, r4, r2
 801cc9c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801cc9e:	fb08 2204 	mla	r2, r8, r4, r2
 801cca2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801cca6:	2a00      	cmp	r2, #0
 801cca8:	f000 80e5 	beq.w	801ce76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801ccac:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ccb0:	d019      	beq.n	801cce6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801ccb2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ccb6:	fb0c fa0a 	mul.w	sl, ip, sl
 801ccba:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ccbe:	fb0c fc03 	mul.w	ip, ip, r3
 801ccc2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ccc6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ccca:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ccce:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ccd2:	4453      	add	r3, sl
 801ccd4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ccd8:	0a1b      	lsrs	r3, r3, #8
 801ccda:	0a3f      	lsrs	r7, r7, #8
 801ccdc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801cce0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801cce4:	433b      	orrs	r3, r7
 801cce6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cce8:	2cff      	cmp	r4, #255	@ 0xff
 801ccea:	d020      	beq.n	801cd2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801ccec:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ccee:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ccf2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ccf4:	4367      	muls	r7, r4
 801ccf6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ccf8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ccfc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ccfe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cd02:	fb04 fa0a 	mul.w	sl, r4, sl
 801cd06:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cd0a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd0e:	44bc      	add	ip, r7
 801cd10:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cd14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cd18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cd28:	ea4c 040a 	orr.w	r4, ip, sl
 801cd2c:	940d      	str	r4, [sp, #52]	@ 0x34
 801cd2e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cd30:	2cff      	cmp	r4, #255	@ 0xff
 801cd32:	d020      	beq.n	801cd76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801cd34:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801cd36:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cd3a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cd3c:	4367      	muls	r7, r4
 801cd3e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801cd40:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cd44:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cd46:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cd4a:	fb04 fa0a 	mul.w	sl, r4, sl
 801cd4e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cd52:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd56:	44bc      	add	ip, r7
 801cd58:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cd5c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cd60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd68:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd6c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cd70:	ea4c 040a 	orr.w	r4, ip, sl
 801cd74:	9409      	str	r4, [sp, #36]	@ 0x24
 801cd76:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801cd78:	2cff      	cmp	r4, #255	@ 0xff
 801cd7a:	d020      	beq.n	801cdbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801cd7c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cd7e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cd82:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801cd84:	4367      	muls	r7, r4
 801cd86:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cd88:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cd8c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801cd8e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cd92:	fb04 fa0a 	mul.w	sl, r4, sl
 801cd96:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cd9a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd9e:	44bc      	add	ip, r7
 801cda0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cda4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cda8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cdac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cdb0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cdb4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cdb8:	ea4c 040a 	orr.w	r4, ip, sl
 801cdbc:	940e      	str	r4, [sp, #56]	@ 0x38
 801cdbe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cdc0:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cdc4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801cdc6:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801cdca:	fb0e f707 	mul.w	r7, lr, r7
 801cdce:	fb01 770c 	mla	r7, r1, ip, r7
 801cdd2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801cdd6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cdd8:	fb00 770c 	mla	r7, r0, ip, r7
 801cddc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801cde0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cde2:	fb08 770c 	mla	r7, r8, ip, r7
 801cde6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801cdea:	fb0e fe0c 	mul.w	lr, lr, ip
 801cdee:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801cdf2:	fb01 e303 	mla	r3, r1, r3, lr
 801cdf6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801cdf8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801cdfc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801cdfe:	fb00 330a 	mla	r3, r0, sl, r3
 801ce02:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801ce06:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ce0a:	f8b9 3000 	ldrh.w	r3, [r9]
 801ce0e:	43d2      	mvns	r2, r2
 801ce10:	1218      	asrs	r0, r3, #8
 801ce12:	b2d2      	uxtb	r2, r2
 801ce14:	10d9      	asrs	r1, r3, #3
 801ce16:	0a3f      	lsrs	r7, r7, #8
 801ce18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce1c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ce20:	00db      	lsls	r3, r3, #3
 801ce22:	4350      	muls	r0, r2
 801ce24:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801ce28:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ce2c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ce30:	b2db      	uxtb	r3, r3
 801ce32:	ea47 070c 	orr.w	r7, r7, ip
 801ce36:	4351      	muls	r1, r2
 801ce38:	4353      	muls	r3, r2
 801ce3a:	1c42      	adds	r2, r0, #1
 801ce3c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ce40:	0c3a      	lsrs	r2, r7, #16
 801ce42:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ce46:	4a18      	ldr	r2, [pc, #96]	@ (801cea8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801ce48:	b2c0      	uxtb	r0, r0
 801ce4a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801ce4e:	1c4a      	adds	r2, r1, #1
 801ce50:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ce54:	0a3a      	lsrs	r2, r7, #8
 801ce56:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ce5a:	00c9      	lsls	r1, r1, #3
 801ce5c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ce60:	4301      	orrs	r1, r0
 801ce62:	1c58      	adds	r0, r3, #1
 801ce64:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ce68:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ce6c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801ce70:	4308      	orrs	r0, r1
 801ce72:	f8a9 0000 	strh.w	r0, [r9]
 801ce76:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ce78:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801ce7a:	441a      	add	r2, r3
 801ce7c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ce7e:	9225      	str	r2, [sp, #148]	@ 0x94
 801ce80:	f109 0902 	add.w	r9, r9, #2
 801ce84:	441d      	add	r5, r3
 801ce86:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ce8a:	e64d      	b.n	801cb28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801ce8c:	2800      	cmp	r0, #0
 801ce8e:	f43f aeed 	beq.w	801cc6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ce92:	5c79      	ldrb	r1, [r7, r1]
 801ce94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ce98:	9109      	str	r1, [sp, #36]	@ 0x24
 801ce9a:	0e09      	lsrs	r1, r1, #24
 801ce9c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ce9e:	e6e5      	b.n	801cc6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801cea0:	b01b      	add	sp, #108	@ 0x6c
 801cea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cea6:	bf00      	nop
 801cea8:	fffff800 	.word	0xfffff800

0801ceac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801ceac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ceb0:	b085      	sub	sp, #20
 801ceb2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801ceb6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801ceba:	9103      	str	r1, [sp, #12]
 801cebc:	fb00 7406 	mla	r4, r0, r6, r7
 801cec0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801cec4:	2800      	cmp	r0, #0
 801cec6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801ceca:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801cece:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801ced2:	9501      	str	r5, [sp, #4]
 801ced4:	eb03 0904 	add.w	r9, r3, r4
 801ced8:	f2c0 8150 	blt.w	801d17c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801cedc:	4583      	cmp	fp, r0
 801cede:	f340 814d 	ble.w	801d17c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801cee2:	2f00      	cmp	r7, #0
 801cee4:	f2c0 8146 	blt.w	801d174 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801cee8:	42be      	cmp	r6, r7
 801ceea:	f340 8143 	ble.w	801d174 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ceee:	f813 c004 	ldrb.w	ip, [r3, r4]
 801cef2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801cef6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cefa:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801cefe:	4355      	muls	r5, r2
 801cf00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cf04:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801cf08:	fb0c f203 	mul.w	r2, ip, r3
 801cf0c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cf10:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801cf14:	441d      	add	r5, r3
 801cf16:	f102 0320 	add.w	r3, r2, #32
 801cf1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cf1e:	0a1b      	lsrs	r3, r3, #8
 801cf20:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801cf24:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cf28:	431c      	orrs	r4, r3
 801cf2a:	1c7b      	adds	r3, r7, #1
 801cf2c:	f100 812b 	bmi.w	801d186 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801cf30:	429e      	cmp	r6, r3
 801cf32:	f340 8128 	ble.w	801d186 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801cf36:	2900      	cmp	r1, #0
 801cf38:	f000 8128 	beq.w	801d18c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801cf3c:	9a01      	ldr	r2, [sp, #4]
 801cf3e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801cf42:	8855      	ldrh	r5, [r2, #2]
 801cf44:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801cf48:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801cf4c:	fb08 f802 	mul.w	r8, r8, r2
 801cf50:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cf54:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801cf58:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801cf5c:	435d      	muls	r5, r3
 801cf5e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cf62:	44d0      	add	r8, sl
 801cf64:	f105 0a20 	add.w	sl, r5, #32
 801cf68:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801cf6c:	0a2d      	lsrs	r5, r5, #8
 801cf6e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801cf72:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cf76:	432a      	orrs	r2, r5
 801cf78:	3001      	adds	r0, #1
 801cf7a:	f100 810d 	bmi.w	801d198 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801cf7e:	4583      	cmp	fp, r0
 801cf80:	f340 810a 	ble.w	801d198 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801cf84:	f1be 0f00 	cmp.w	lr, #0
 801cf88:	f000 810b 	beq.w	801d1a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801cf8c:	2f00      	cmp	r7, #0
 801cf8e:	f2c0 8100 	blt.w	801d192 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801cf92:	42be      	cmp	r6, r7
 801cf94:	f340 80fd 	ble.w	801d192 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801cf98:	9801      	ldr	r0, [sp, #4]
 801cf9a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801cf9e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801cfa2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801cfa6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801cfaa:	fb0a fa00 	mul.w	sl, sl, r0
 801cfae:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801cfb2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801cfb6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801cfba:	fb05 f808 	mul.w	r8, r5, r8
 801cfbe:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801cfc2:	4482      	add	sl, r0
 801cfc4:	f108 0020 	add.w	r0, r8, #32
 801cfc8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cfcc:	0a00      	lsrs	r0, r0, #8
 801cfce:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801cfd2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cfd6:	ea4b 0b00 	orr.w	fp, fp, r0
 801cfda:	3701      	adds	r7, #1
 801cfdc:	f100 80e6 	bmi.w	801d1ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801cfe0:	42be      	cmp	r6, r7
 801cfe2:	f340 80e3 	ble.w	801d1ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801cfe6:	2900      	cmp	r1, #0
 801cfe8:	f000 80e3 	beq.w	801d1b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801cfec:	3601      	adds	r6, #1
 801cfee:	9801      	ldr	r0, [sp, #4]
 801cff0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801cff4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801cff8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801cffc:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d000:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d004:	fb09 f906 	mul.w	r9, r9, r6
 801d008:	fb07 f800 	mul.w	r8, r7, r0
 801d00c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d010:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d014:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d018:	44d1      	add	r9, sl
 801d01a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d01e:	f108 0020 	add.w	r0, r8, #32
 801d022:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d026:	0a00      	lsrs	r0, r0, #8
 801d028:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d02c:	4330      	orrs	r0, r6
 801d02e:	b28e      	uxth	r6, r1
 801d030:	fa1f f98e 	uxth.w	r9, lr
 801d034:	fb06 f809 	mul.w	r8, r6, r9
 801d038:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d03c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d040:	0136      	lsls	r6, r6, #4
 801d042:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d046:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d04a:	9601      	str	r6, [sp, #4]
 801d04c:	ea4a 0404 	orr.w	r4, sl, r4
 801d050:	fa1f f689 	uxth.w	r6, r9
 801d054:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d058:	fb11 f90e 	smulbb	r9, r1, lr
 801d05c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d060:	9602      	str	r6, [sp, #8]
 801d062:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d066:	4626      	mov	r6, r4
 801d068:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d06c:	f1ce 0410 	rsb	r4, lr, #16
 801d070:	1a64      	subs	r4, r4, r1
 801d072:	ea4a 0202 	orr.w	r2, sl, r2
 801d076:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d07a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d07e:	434a      	muls	r2, r1
 801d080:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d084:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d088:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d08c:	fb04 2406 	mla	r4, r4, r6, r2
 801d090:	ea4a 0000 	orr.w	r0, sl, r0
 801d094:	fb09 4200 	mla	r2, r9, r0, r4
 801d098:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d09c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d0a0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d0a4:	ea44 0b0b 	orr.w	fp, r4, fp
 801d0a8:	9c01      	ldr	r4, [sp, #4]
 801d0aa:	9e02      	ldr	r6, [sp, #8]
 801d0ac:	9903      	ldr	r1, [sp, #12]
 801d0ae:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801d0b2:	1ba4      	subs	r4, r4, r6
 801d0b4:	9e01      	ldr	r6, [sp, #4]
 801d0b6:	8808      	ldrh	r0, [r1, #0]
 801d0b8:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801d0bc:	eba6 0608 	sub.w	r6, r6, r8
 801d0c0:	b2b6      	uxth	r6, r6
 801d0c2:	b2a4      	uxth	r4, r4
 801d0c4:	4373      	muls	r3, r6
 801d0c6:	fb0c 3304 	mla	r3, ip, r4, r3
 801d0ca:	9c02      	ldr	r4, [sp, #8]
 801d0cc:	fb04 3505 	mla	r5, r4, r5, r3
 801d0d0:	fb08 5707 	mla	r7, r8, r7, r5
 801d0d4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d0d8:	b289      	uxth	r1, r1
 801d0da:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d0de:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d0e2:	434f      	muls	r7, r1
 801d0e4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d0e8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d0ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d0f0:	1c7b      	adds	r3, r7, #1
 801d0f2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d0f6:	ea42 0e0e 	orr.w	lr, r2, lr
 801d0fa:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d0fe:	fa1f f28e 	uxth.w	r2, lr
 801d102:	1203      	asrs	r3, r0, #8
 801d104:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801d108:	b2ff      	uxtb	r7, r7
 801d10a:	1215      	asrs	r5, r2, #8
 801d10c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d110:	fb13 f307 	smulbb	r3, r3, r7
 801d114:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d118:	fb05 3501 	mla	r5, r5, r1, r3
 801d11c:	10c3      	asrs	r3, r0, #3
 801d11e:	10d4      	asrs	r4, r2, #3
 801d120:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d124:	fb13 f307 	smulbb	r3, r3, r7
 801d128:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801d12c:	fb04 3401 	mla	r4, r4, r1, r3
 801d130:	00c3      	lsls	r3, r0, #3
 801d132:	00d2      	lsls	r2, r2, #3
 801d134:	b2db      	uxtb	r3, r3
 801d136:	fb13 f307 	smulbb	r3, r3, r7
 801d13a:	b2d2      	uxtb	r2, r2
 801d13c:	fb02 3101 	mla	r1, r2, r1, r3
 801d140:	b2ad      	uxth	r5, r5
 801d142:	b289      	uxth	r1, r1
 801d144:	b2a4      	uxth	r4, r4
 801d146:	1c6b      	adds	r3, r5, #1
 801d148:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d14c:	1c62      	adds	r2, r4, #1
 801d14e:	1c4b      	adds	r3, r1, #1
 801d150:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d154:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d158:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d15c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d160:	0964      	lsrs	r4, r4, #5
 801d162:	432b      	orrs	r3, r5
 801d164:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d168:	9a03      	ldr	r2, [sp, #12]
 801d16a:	4323      	orrs	r3, r4
 801d16c:	8013      	strh	r3, [r2, #0]
 801d16e:	b005      	add	sp, #20
 801d170:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d174:	f04f 0c00 	mov.w	ip, #0
 801d178:	4664      	mov	r4, ip
 801d17a:	e6d6      	b.n	801cf2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801d17c:	2300      	movs	r3, #0
 801d17e:	469c      	mov	ip, r3
 801d180:	461a      	mov	r2, r3
 801d182:	461c      	mov	r4, r3
 801d184:	e6f8      	b.n	801cf78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d186:	2300      	movs	r3, #0
 801d188:	461a      	mov	r2, r3
 801d18a:	e6f5      	b.n	801cf78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d18c:	460b      	mov	r3, r1
 801d18e:	460a      	mov	r2, r1
 801d190:	e6f2      	b.n	801cf78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d192:	2500      	movs	r5, #0
 801d194:	46ab      	mov	fp, r5
 801d196:	e720      	b.n	801cfda <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801d198:	2700      	movs	r7, #0
 801d19a:	463d      	mov	r5, r7
 801d19c:	4638      	mov	r0, r7
 801d19e:	46bb      	mov	fp, r7
 801d1a0:	e745      	b.n	801d02e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d1a2:	4677      	mov	r7, lr
 801d1a4:	4675      	mov	r5, lr
 801d1a6:	4670      	mov	r0, lr
 801d1a8:	46f3      	mov	fp, lr
 801d1aa:	e740      	b.n	801d02e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d1ac:	2700      	movs	r7, #0
 801d1ae:	4638      	mov	r0, r7
 801d1b0:	e73d      	b.n	801d02e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d1b2:	460f      	mov	r7, r1
 801d1b4:	4608      	mov	r0, r1
 801d1b6:	e73a      	b.n	801d02e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801d1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d1b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1bc:	b097      	sub	sp, #92	@ 0x5c
 801d1be:	9214      	str	r2, [sp, #80]	@ 0x50
 801d1c0:	9308      	str	r3, [sp, #32]
 801d1c2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d1c4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801d1c8:	9312      	str	r3, [sp, #72]	@ 0x48
 801d1ca:	9111      	str	r1, [sp, #68]	@ 0x44
 801d1cc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801d1d0:	9015      	str	r0, [sp, #84]	@ 0x54
 801d1d2:	6850      	ldr	r0, [r2, #4]
 801d1d4:	6812      	ldr	r2, [r2, #0]
 801d1d6:	fb00 1303 	mla	r3, r0, r3, r1
 801d1da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d1de:	9309      	str	r3, [sp, #36]	@ 0x24
 801d1e0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d1e2:	681b      	ldr	r3, [r3, #0]
 801d1e4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d1e6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d1e8:	685b      	ldr	r3, [r3, #4]
 801d1ea:	930c      	str	r3, [sp, #48]	@ 0x30
 801d1ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801d1f0:	930a      	str	r3, [sp, #40]	@ 0x28
 801d1f2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d1f4:	2b00      	cmp	r3, #0
 801d1f6:	dc03      	bgt.n	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d1f8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d1fa:	2b00      	cmp	r3, #0
 801d1fc:	f340 83cb 	ble.w	801d996 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801d200:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d202:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d206:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d20a:	1e48      	subs	r0, r1, #1
 801d20c:	1e55      	subs	r5, r2, #1
 801d20e:	9b08      	ldr	r3, [sp, #32]
 801d210:	2b00      	cmp	r3, #0
 801d212:	f340 81a3 	ble.w	801d55c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801d216:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801d218:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d21a:	1436      	asrs	r6, r6, #16
 801d21c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d220:	d406      	bmi.n	801d230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d222:	4286      	cmp	r6, r0
 801d224:	da04      	bge.n	801d230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d226:	2b00      	cmp	r3, #0
 801d228:	db02      	blt.n	801d230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d22a:	42ab      	cmp	r3, r5
 801d22c:	f2c0 8197 	blt.w	801d55e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801d230:	3601      	adds	r6, #1
 801d232:	f100 8184 	bmi.w	801d53e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d236:	42b1      	cmp	r1, r6
 801d238:	f2c0 8181 	blt.w	801d53e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d23c:	3301      	adds	r3, #1
 801d23e:	f100 817e 	bmi.w	801d53e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d242:	429a      	cmp	r2, r3
 801d244:	f2c0 817b 	blt.w	801d53e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d248:	9b08      	ldr	r3, [sp, #32]
 801d24a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801d24c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d24e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d252:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d254:	2b00      	cmp	r3, #0
 801d256:	f340 81a4 	ble.w	801d5a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d25a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d25c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801d25e:	1418      	asrs	r0, r3, #16
 801d260:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d262:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d266:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d268:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d26c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d26e:	142d      	asrs	r5, r5, #16
 801d270:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d274:	f100 81f8 	bmi.w	801d668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d278:	f102 3eff 	add.w	lr, r2, #4294967295
 801d27c:	4575      	cmp	r5, lr
 801d27e:	f280 81f3 	bge.w	801d668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d282:	2800      	cmp	r0, #0
 801d284:	f2c0 81f0 	blt.w	801d668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d288:	f103 3eff 	add.w	lr, r3, #4294967295
 801d28c:	4570      	cmp	r0, lr
 801d28e:	f280 81eb 	bge.w	801d668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d292:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d294:	b212      	sxth	r2, r2
 801d296:	fb00 5002 	mla	r0, r0, r2, r5
 801d29a:	fa1f fe81 	uxth.w	lr, r1
 801d29e:	eb03 0a00 	add.w	sl, r3, r0
 801d2a2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d2a6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d2aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d2ae:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801d2b2:	b29b      	uxth	r3, r3
 801d2b4:	f1bc 0f00 	cmp.w	ip, #0
 801d2b8:	f000 81b9 	beq.w	801d62e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801d2bc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d2c0:	940d      	str	r4, [sp, #52]	@ 0x34
 801d2c2:	eb0a 0b02 	add.w	fp, sl, r2
 801d2c6:	fa1f fa8c 	uxth.w	sl, ip
 801d2ca:	fb0a fe0e 	mul.w	lr, sl, lr
 801d2ce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d2d2:	fa1f fa8a 	uxth.w	sl, sl
 801d2d6:	eba5 050e 	sub.w	r5, r5, lr
 801d2da:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d2de:	940e      	str	r4, [sp, #56]	@ 0x38
 801d2e0:	eba3 030a 	sub.w	r3, r3, sl
 801d2e4:	b2ad      	uxth	r5, r5
 801d2e6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d2e8:	b29b      	uxth	r3, r3
 801d2ea:	fb08 f505 	mul.w	r5, r8, r5
 801d2ee:	fb09 5303 	mla	r3, r9, r3, r5
 801d2f2:	fb0a 3304 	mla	r3, sl, r4, r3
 801d2f6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d2f8:	fb0e 3304 	mla	r3, lr, r4, r3
 801d2fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d300:	2b00      	cmp	r3, #0
 801d302:	f000 810f 	beq.w	801d524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d306:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d308:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d30c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d310:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d314:	f000 8190 	beq.w	801d638 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801d318:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d31c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d320:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d324:	fb09 f000 	mul.w	r0, r9, r0
 801d328:	fb0a fe0e 	mul.w	lr, sl, lr
 801d32c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d330:	f100 0b20 	add.w	fp, r0, #32
 801d334:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d338:	44ce      	add	lr, r9
 801d33a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d33e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d342:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d346:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d34a:	ea4e 0909 	orr.w	r9, lr, r9
 801d34e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d352:	8868      	ldrh	r0, [r5, #2]
 801d354:	d019      	beq.n	801d38a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d356:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d35a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d35e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d362:	fb08 f800 	mul.w	r8, r8, r0
 801d366:	fb0a fe0e 	mul.w	lr, sl, lr
 801d36a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d36e:	f108 0b20 	add.w	fp, r8, #32
 801d372:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d376:	4486      	add	lr, r0
 801d378:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d37c:	0a00      	lsrs	r0, r0, #8
 801d37e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d382:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d386:	ea4e 0000 	orr.w	r0, lr, r0
 801d38a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d38e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d392:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d396:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d39a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d39e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d3a2:	ea4e 0909 	orr.w	r9, lr, r9
 801d3a6:	ea4a 0000 	orr.w	r0, sl, r0
 801d3aa:	f1bc 0f00 	cmp.w	ip, #0
 801d3ae:	f000 8145 	beq.w	801d63c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801d3b2:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d3b6:	3a01      	subs	r2, #1
 801d3b8:	0052      	lsls	r2, r2, #1
 801d3ba:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d3bc:	3202      	adds	r2, #2
 801d3be:	2cff      	cmp	r4, #255	@ 0xff
 801d3c0:	eb05 0e02 	add.w	lr, r5, r2
 801d3c4:	5aaa      	ldrh	r2, [r5, r2]
 801d3c6:	d018      	beq.n	801d3fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d3c8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d3cc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d3d0:	fb04 fa02 	mul.w	sl, r4, r2
 801d3d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d3d8:	fb08 f805 	mul.w	r8, r8, r5
 801d3dc:	f10a 0520 	add.w	r5, sl, #32
 801d3e0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d3e4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d3e8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d3ec:	4442      	add	r2, r8
 801d3ee:	0a2d      	lsrs	r5, r5, #8
 801d3f0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d3f4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d3f8:	432a      	orrs	r2, r5
 801d3fa:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d3fc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d400:	2cff      	cmp	r4, #255	@ 0xff
 801d402:	d01a      	beq.n	801d43a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801d404:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d408:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d40c:	fb04 fa05 	mul.w	sl, r4, r5
 801d410:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d414:	fb08 f80e 	mul.w	r8, r8, lr
 801d418:	f10a 0e20 	add.w	lr, sl, #32
 801d41c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d420:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d424:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d428:	4445      	add	r5, r8
 801d42a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d42e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d432:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d436:	ea45 050e 	orr.w	r5, r5, lr
 801d43a:	fb1c fe01 	smulbb	lr, ip, r1
 801d43e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d442:	f1cc 0810 	rsb	r8, ip, #16
 801d446:	eba8 0801 	sub.w	r8, r8, r1
 801d44a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d44e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d452:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d456:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d45a:	4341      	muls	r1, r0
 801d45c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d460:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d464:	ea4a 0202 	orr.w	r2, sl, r2
 801d468:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d46c:	fb09 1108 	mla	r1, r9, r8, r1
 801d470:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d474:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d478:	fb0c 1102 	mla	r1, ip, r2, r1
 801d47c:	ea4b 0505 	orr.w	r5, fp, r5
 801d480:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d484:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d488:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d48c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d490:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d494:	ea42 0e0e 	orr.w	lr, r2, lr
 801d498:	fa1f f28e 	uxth.w	r2, lr
 801d49c:	2bff      	cmp	r3, #255	@ 0xff
 801d49e:	d103      	bne.n	801d4a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d4a0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d4a2:	29ff      	cmp	r1, #255	@ 0xff
 801d4a4:	f000 80de 	beq.w	801d664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801d4a8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801d4aa:	8838      	ldrh	r0, [r7, #0]
 801d4ac:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d4ae:	434b      	muls	r3, r1
 801d4b0:	f103 0c01 	add.w	ip, r3, #1
 801d4b4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801d4b8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d4bc:	fa5f fc83 	uxtb.w	ip, r3
 801d4c0:	1203      	asrs	r3, r0, #8
 801d4c2:	1215      	asrs	r5, r2, #8
 801d4c4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d4c8:	fb13 f30c 	smulbb	r3, r3, ip
 801d4cc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d4d0:	fb05 3501 	mla	r5, r5, r1, r3
 801d4d4:	10c3      	asrs	r3, r0, #3
 801d4d6:	10d1      	asrs	r1, r2, #3
 801d4d8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d4dc:	fb13 f30c 	smulbb	r3, r3, ip
 801d4e0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d4e4:	fb01 3104 	mla	r1, r1, r4, r3
 801d4e8:	00c3      	lsls	r3, r0, #3
 801d4ea:	00d2      	lsls	r2, r2, #3
 801d4ec:	b2db      	uxtb	r3, r3
 801d4ee:	b2d2      	uxtb	r2, r2
 801d4f0:	fb13 f30c 	smulbb	r3, r3, ip
 801d4f4:	b2ad      	uxth	r5, r5
 801d4f6:	fb02 3304 	mla	r3, r2, r4, r3
 801d4fa:	b29a      	uxth	r2, r3
 801d4fc:	1c6b      	adds	r3, r5, #1
 801d4fe:	b289      	uxth	r1, r1
 801d500:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d504:	1c53      	adds	r3, r2, #1
 801d506:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d50a:	1c4a      	adds	r2, r1, #1
 801d50c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d510:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d514:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d518:	0949      	lsrs	r1, r1, #5
 801d51a:	432b      	orrs	r3, r5
 801d51c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d520:	430b      	orrs	r3, r1
 801d522:	803b      	strh	r3, [r7, #0]
 801d524:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d526:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d528:	4413      	add	r3, r2
 801d52a:	9321      	str	r3, [sp, #132]	@ 0x84
 801d52c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d52e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d530:	441a      	add	r2, r3
 801d532:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d534:	9222      	str	r2, [sp, #136]	@ 0x88
 801d536:	3b01      	subs	r3, #1
 801d538:	3702      	adds	r7, #2
 801d53a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d53c:	e689      	b.n	801d252 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d53e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d540:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801d542:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801d544:	4433      	add	r3, r6
 801d546:	9321      	str	r3, [sp, #132]	@ 0x84
 801d548:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d54a:	441c      	add	r4, r3
 801d54c:	9b08      	ldr	r3, [sp, #32]
 801d54e:	9422      	str	r4, [sp, #136]	@ 0x88
 801d550:	3b01      	subs	r3, #1
 801d552:	9308      	str	r3, [sp, #32]
 801d554:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d556:	3302      	adds	r3, #2
 801d558:	9309      	str	r3, [sp, #36]	@ 0x24
 801d55a:	e658      	b.n	801d20e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801d55c:	d028      	beq.n	801d5b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d55e:	9b08      	ldr	r3, [sp, #32]
 801d560:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801d562:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801d564:	3b01      	subs	r3, #1
 801d566:	fb00 5003 	mla	r0, r0, r3, r5
 801d56a:	1400      	asrs	r0, r0, #16
 801d56c:	f53f ae6c 	bmi.w	801d248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d570:	3901      	subs	r1, #1
 801d572:	4288      	cmp	r0, r1
 801d574:	f6bf ae68 	bge.w	801d248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d578:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801d57a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801d57c:	fb01 0303 	mla	r3, r1, r3, r0
 801d580:	141b      	asrs	r3, r3, #16
 801d582:	f53f ae61 	bmi.w	801d248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d586:	3a01      	subs	r2, #1
 801d588:	4293      	cmp	r3, r2
 801d58a:	f6bf ae5d 	bge.w	801d248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d58e:	9b08      	ldr	r3, [sp, #32]
 801d590:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801d594:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d596:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d59a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d59c:	2b00      	cmp	r3, #0
 801d59e:	f300 8082 	bgt.w	801d6a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801d5a2:	9b08      	ldr	r3, [sp, #32]
 801d5a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d5a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d5aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d5ae:	9309      	str	r3, [sp, #36]	@ 0x24
 801d5b0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d5b2:	2b00      	cmp	r3, #0
 801d5b4:	f340 81ef 	ble.w	801d996 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801d5b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d5bc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d5c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d5c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d5ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d5ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d5d2:	eef0 6a62 	vmov.f32	s13, s5
 801d5d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d5da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d5de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d5e2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801d5e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d5ea:	eef0 6a43 	vmov.f32	s13, s6
 801d5ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d5f2:	ee12 2a90 	vmov	r2, s5
 801d5f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d5fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801d5fe:	ee13 2a10 	vmov	r2, s6
 801d602:	9323      	str	r3, [sp, #140]	@ 0x8c
 801d604:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d606:	fb92 f3f3 	sdiv	r3, r2, r3
 801d60a:	9324      	str	r3, [sp, #144]	@ 0x90
 801d60c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d60e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d610:	3b01      	subs	r3, #1
 801d612:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d616:	9311      	str	r3, [sp, #68]	@ 0x44
 801d618:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d61a:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801d61e:	bf08      	it	eq
 801d620:	4613      	moveq	r3, r2
 801d622:	9308      	str	r3, [sp, #32]
 801d624:	eeb0 3a67 	vmov.f32	s6, s15
 801d628:	eef0 2a47 	vmov.f32	s5, s14
 801d62c:	e5e1      	b.n	801d1f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d62e:	fb08 f505 	mul.w	r5, r8, r5
 801d632:	fb09 5303 	mla	r3, r9, r3, r5
 801d636:	e661      	b.n	801d2fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801d638:	4681      	mov	r9, r0
 801d63a:	e688      	b.n	801d34e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d63c:	f1c1 0210 	rsb	r2, r1, #16
 801d640:	4341      	muls	r1, r0
 801d642:	fb09 1902 	mla	r9, r9, r2, r1
 801d646:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d64a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d64e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d652:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d656:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d65a:	ea42 0909 	orr.w	r9, r2, r9
 801d65e:	fa1f f289 	uxth.w	r2, r9
 801d662:	e71b      	b.n	801d49c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d664:	803a      	strh	r2, [r7, #0]
 801d666:	e75d      	b.n	801d524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d668:	f115 0e01 	adds.w	lr, r5, #1
 801d66c:	f53f af5a 	bmi.w	801d524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d670:	4572      	cmp	r2, lr
 801d672:	f6ff af57 	blt.w	801d524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d676:	f110 0e01 	adds.w	lr, r0, #1
 801d67a:	f53f af53 	bmi.w	801d524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d67e:	4573      	cmp	r3, lr
 801d680:	f6ff af50 	blt.w	801d524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d684:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d686:	9502      	str	r5, [sp, #8]
 801d688:	b21b      	sxth	r3, r3
 801d68a:	b212      	sxth	r2, r2
 801d68c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801d690:	9301      	str	r3, [sp, #4]
 801d692:	9200      	str	r2, [sp, #0]
 801d694:	e9cd c405 	strd	ip, r4, [sp, #20]
 801d698:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801d69c:	4639      	mov	r1, r7
 801d69e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801d6a0:	f7ff fc04 	bl	801ceac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801d6a4:	e73e      	b.n	801d524 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d6a6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d6a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d6ac:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d6ae:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d6b2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d6b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d6b8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d6ba:	141f      	asrs	r7, r3, #16
 801d6bc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d6be:	141b      	asrs	r3, r3, #16
 801d6c0:	fb01 3707 	mla	r7, r1, r7, r3
 801d6c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d6c6:	fa1f fc82 	uxth.w	ip, r2
 801d6ca:	eb03 0a07 	add.w	sl, r3, r7
 801d6ce:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d6d2:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d6d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d6da:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d6de:	b29b      	uxth	r3, r3
 801d6e0:	2d00      	cmp	r5, #0
 801d6e2:	f000 813d 	beq.w	801d960 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801d6e6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d6ea:	940f      	str	r4, [sp, #60]	@ 0x3c
 801d6ec:	eb0a 0b01 	add.w	fp, sl, r1
 801d6f0:	fa1f fa85 	uxth.w	sl, r5
 801d6f4:	fb0a fc0c 	mul.w	ip, sl, ip
 801d6f8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d6fc:	fa1f fa8a 	uxth.w	sl, sl
 801d700:	eba0 000c 	sub.w	r0, r0, ip
 801d704:	eba3 030a 	sub.w	r3, r3, sl
 801d708:	b280      	uxth	r0, r0
 801d70a:	fb08 f000 	mul.w	r0, r8, r0
 801d70e:	b29b      	uxth	r3, r3
 801d710:	fb09 0303 	mla	r3, r9, r3, r0
 801d714:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d716:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d71a:	9410      	str	r4, [sp, #64]	@ 0x40
 801d71c:	fb0a 3300 	mla	r3, sl, r0, r3
 801d720:	fb0c 3304 	mla	r3, ip, r4, r3
 801d724:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d728:	2b00      	cmp	r3, #0
 801d72a:	f000 810b 	beq.w	801d944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d72e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801d730:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d732:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d736:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d73a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d73e:	f000 8114 	beq.w	801d96a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801d742:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d746:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d74a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d74e:	fb09 f707 	mul.w	r7, r9, r7
 801d752:	fb0a fc0c 	mul.w	ip, sl, ip
 801d756:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d75a:	f107 0b20 	add.w	fp, r7, #32
 801d75e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d762:	44cc      	add	ip, r9
 801d764:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d768:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d76c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d770:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d774:	ea4c 0909 	orr.w	r9, ip, r9
 801d778:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d77c:	8847      	ldrh	r7, [r0, #2]
 801d77e:	d019      	beq.n	801d7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801d780:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d784:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d788:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d78c:	fb08 f807 	mul.w	r8, r8, r7
 801d790:	fb0a fc0c 	mul.w	ip, sl, ip
 801d794:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d798:	f108 0b20 	add.w	fp, r8, #32
 801d79c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d7a0:	44bc      	add	ip, r7
 801d7a2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d7a6:	0a3f      	lsrs	r7, r7, #8
 801d7a8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d7ac:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d7b0:	ea4c 0707 	orr.w	r7, ip, r7
 801d7b4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d7b8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d7bc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d7c0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d7c4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d7c8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d7cc:	ea4c 0909 	orr.w	r9, ip, r9
 801d7d0:	ea4a 0707 	orr.w	r7, sl, r7
 801d7d4:	2d00      	cmp	r5, #0
 801d7d6:	f000 80ca 	beq.w	801d96e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801d7da:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d7de:	3901      	subs	r1, #1
 801d7e0:	0049      	lsls	r1, r1, #1
 801d7e2:	3102      	adds	r1, #2
 801d7e4:	eb00 0c01 	add.w	ip, r0, r1
 801d7e8:	5a41      	ldrh	r1, [r0, r1]
 801d7ea:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d7ec:	28ff      	cmp	r0, #255	@ 0xff
 801d7ee:	d019      	beq.n	801d824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801d7f0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d7f2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d7f6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d7fa:	fb04 fa01 	mul.w	sl, r4, r1
 801d7fe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d802:	fb08 f800 	mul.w	r8, r8, r0
 801d806:	f10a 0020 	add.w	r0, sl, #32
 801d80a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d80e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d812:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d816:	4441      	add	r1, r8
 801d818:	0a00      	lsrs	r0, r0, #8
 801d81a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d81e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d822:	4301      	orrs	r1, r0
 801d824:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d826:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d82a:	2cff      	cmp	r4, #255	@ 0xff
 801d82c:	d01a      	beq.n	801d864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801d82e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d832:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d836:	fb04 fa00 	mul.w	sl, r4, r0
 801d83a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d83e:	fb08 f80c 	mul.w	r8, r8, ip
 801d842:	f10a 0c20 	add.w	ip, sl, #32
 801d846:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d84a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d84e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d852:	4440      	add	r0, r8
 801d854:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d858:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d85c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d860:	ea40 000c 	orr.w	r0, r0, ip
 801d864:	fb15 fc02 	smulbb	ip, r5, r2
 801d868:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d86c:	f1c5 0810 	rsb	r8, r5, #16
 801d870:	eba8 0802 	sub.w	r8, r8, r2
 801d874:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d878:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d87c:	437a      	muls	r2, r7
 801d87e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d882:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d886:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d88a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d88e:	fb09 2208 	mla	r2, r9, r8, r2
 801d892:	ea4a 0101 	orr.w	r1, sl, r1
 801d896:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d89a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d89e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d8a2:	fb05 2201 	mla	r2, r5, r1, r2
 801d8a6:	ea4b 0000 	orr.w	r0, fp, r0
 801d8aa:	fb0c 2200 	mla	r2, ip, r0, r2
 801d8ae:	0d57      	lsrs	r7, r2, #21
 801d8b0:	0952      	lsrs	r2, r2, #5
 801d8b2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d8b6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d8ba:	433a      	orrs	r2, r7
 801d8bc:	2bff      	cmp	r3, #255	@ 0xff
 801d8be:	b292      	uxth	r2, r2
 801d8c0:	d102      	bne.n	801d8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d8c2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d8c4:	29ff      	cmp	r1, #255	@ 0xff
 801d8c6:	d063      	beq.n	801d990 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801d8c8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801d8ca:	f8be 1000 	ldrh.w	r1, [lr]
 801d8ce:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d8d0:	4343      	muls	r3, r0
 801d8d2:	1c58      	adds	r0, r3, #1
 801d8d4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801d8d8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d8dc:	1208      	asrs	r0, r1, #8
 801d8de:	b2db      	uxtb	r3, r3
 801d8e0:	1215      	asrs	r5, r2, #8
 801d8e2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d8e6:	fb10 f003 	smulbb	r0, r0, r3
 801d8ea:	10cf      	asrs	r7, r1, #3
 801d8ec:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d8f0:	00c9      	lsls	r1, r1, #3
 801d8f2:	fb05 0504 	mla	r5, r5, r4, r0
 801d8f6:	b2c9      	uxtb	r1, r1
 801d8f8:	10d0      	asrs	r0, r2, #3
 801d8fa:	00d2      	lsls	r2, r2, #3
 801d8fc:	fb11 f103 	smulbb	r1, r1, r3
 801d900:	b2d2      	uxtb	r2, r2
 801d902:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d906:	fb02 1204 	mla	r2, r2, r4, r1
 801d90a:	fb17 f703 	smulbb	r7, r7, r3
 801d90e:	b2ad      	uxth	r5, r5
 801d910:	b292      	uxth	r2, r2
 801d912:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d916:	fb00 7004 	mla	r0, r0, r4, r7
 801d91a:	1c6b      	adds	r3, r5, #1
 801d91c:	1c57      	adds	r7, r2, #1
 801d91e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d922:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d926:	b280      	uxth	r0, r0
 801d928:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d92c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d930:	433d      	orrs	r5, r7
 801d932:	1c47      	adds	r7, r0, #1
 801d934:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d938:	097f      	lsrs	r7, r7, #5
 801d93a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d93e:	433d      	orrs	r5, r7
 801d940:	f8ae 5000 	strh.w	r5, [lr]
 801d944:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d946:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d948:	4413      	add	r3, r2
 801d94a:	9321      	str	r3, [sp, #132]	@ 0x84
 801d94c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d94e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d950:	441a      	add	r2, r3
 801d952:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d954:	9222      	str	r2, [sp, #136]	@ 0x88
 801d956:	3b01      	subs	r3, #1
 801d958:	f10e 0e02 	add.w	lr, lr, #2
 801d95c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d95e:	e61c      	b.n	801d59a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801d960:	fb08 f000 	mul.w	r0, r8, r0
 801d964:	fb09 0303 	mla	r3, r9, r3, r0
 801d968:	e6dc      	b.n	801d724 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801d96a:	46b9      	mov	r9, r7
 801d96c:	e704      	b.n	801d778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801d96e:	f1c2 0110 	rsb	r1, r2, #16
 801d972:	437a      	muls	r2, r7
 801d974:	fb09 2901 	mla	r9, r9, r1, r2
 801d978:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d97c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d980:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d984:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d988:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d98c:	4302      	orrs	r2, r0
 801d98e:	e795      	b.n	801d8bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801d990:	f8ae 2000 	strh.w	r2, [lr]
 801d994:	e7d6      	b.n	801d944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d996:	b017      	add	sp, #92	@ 0x5c
 801d998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d99c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d99c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9a0:	b085      	sub	sp, #20
 801d9a2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801d9a6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801d9aa:	9103      	str	r1, [sp, #12]
 801d9ac:	fb00 7406 	mla	r4, r0, r6, r7
 801d9b0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801d9b4:	2800      	cmp	r0, #0
 801d9b6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801d9ba:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801d9be:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801d9c2:	9501      	str	r5, [sp, #4]
 801d9c4:	eb02 0904 	add.w	r9, r2, r4
 801d9c8:	f2c0 8141 	blt.w	801dc4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d9cc:	4583      	cmp	fp, r0
 801d9ce:	f340 813e 	ble.w	801dc4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d9d2:	2f00      	cmp	r7, #0
 801d9d4:	f2c0 8137 	blt.w	801dc46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d9d8:	42be      	cmp	r6, r7
 801d9da:	f340 8134 	ble.w	801dc46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d9de:	f812 c004 	ldrb.w	ip, [r2, r4]
 801d9e2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801d9e6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d9ea:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801d9ee:	4355      	muls	r5, r2
 801d9f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d9f4:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801d9f8:	fb0c f203 	mul.w	r2, ip, r3
 801d9fc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801da00:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801da04:	441d      	add	r5, r3
 801da06:	f102 0320 	add.w	r3, r2, #32
 801da0a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801da0e:	0a1b      	lsrs	r3, r3, #8
 801da10:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801da14:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801da18:	431c      	orrs	r4, r3
 801da1a:	1c7b      	adds	r3, r7, #1
 801da1c:	f100 811c 	bmi.w	801dc58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801da20:	429e      	cmp	r6, r3
 801da22:	f340 8119 	ble.w	801dc58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801da26:	2900      	cmp	r1, #0
 801da28:	f000 8119 	beq.w	801dc5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801da2c:	9a01      	ldr	r2, [sp, #4]
 801da2e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801da32:	8855      	ldrh	r5, [r2, #2]
 801da34:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801da38:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801da3c:	fb08 f802 	mul.w	r8, r8, r2
 801da40:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801da44:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801da48:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801da4c:	435d      	muls	r5, r3
 801da4e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801da52:	44d0      	add	r8, sl
 801da54:	f105 0a20 	add.w	sl, r5, #32
 801da58:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801da5c:	0a2d      	lsrs	r5, r5, #8
 801da5e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801da62:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801da66:	432a      	orrs	r2, r5
 801da68:	3001      	adds	r0, #1
 801da6a:	f100 80fe 	bmi.w	801dc6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801da6e:	4583      	cmp	fp, r0
 801da70:	f340 80fb 	ble.w	801dc6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801da74:	f1be 0f00 	cmp.w	lr, #0
 801da78:	f000 80fc 	beq.w	801dc74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801da7c:	2f00      	cmp	r7, #0
 801da7e:	f2c0 80f1 	blt.w	801dc64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801da82:	42be      	cmp	r6, r7
 801da84:	f340 80ee 	ble.w	801dc64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801da88:	9801      	ldr	r0, [sp, #4]
 801da8a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801da8e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801da92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801da96:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801da9a:	fb0a fa00 	mul.w	sl, sl, r0
 801da9e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801daa2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801daa6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801daaa:	fb05 f808 	mul.w	r8, r5, r8
 801daae:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801dab2:	4482      	add	sl, r0
 801dab4:	f108 0020 	add.w	r0, r8, #32
 801dab8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801dabc:	0a00      	lsrs	r0, r0, #8
 801dabe:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801dac2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dac6:	ea4b 0b00 	orr.w	fp, fp, r0
 801daca:	3701      	adds	r7, #1
 801dacc:	f100 80d7 	bmi.w	801dc7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801dad0:	42be      	cmp	r6, r7
 801dad2:	f340 80d4 	ble.w	801dc7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801dad6:	2900      	cmp	r1, #0
 801dad8:	f000 80d4 	beq.w	801dc84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801dadc:	3601      	adds	r6, #1
 801dade:	9801      	ldr	r0, [sp, #4]
 801dae0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801dae4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801dae8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801daec:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801daf0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801daf4:	fb09 f906 	mul.w	r9, r9, r6
 801daf8:	fb07 f800 	mul.w	r8, r7, r0
 801dafc:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801db00:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801db04:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801db08:	44d1      	add	r9, sl
 801db0a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801db0e:	f108 0020 	add.w	r0, r8, #32
 801db12:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801db16:	0a00      	lsrs	r0, r0, #8
 801db18:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801db1c:	4330      	orrs	r0, r6
 801db1e:	b28e      	uxth	r6, r1
 801db20:	fa1f f98e 	uxth.w	r9, lr
 801db24:	fb06 f809 	mul.w	r8, r6, r9
 801db28:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801db2c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801db30:	0136      	lsls	r6, r6, #4
 801db32:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801db36:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801db3a:	9601      	str	r6, [sp, #4]
 801db3c:	ea4a 0404 	orr.w	r4, sl, r4
 801db40:	fa1f f689 	uxth.w	r6, r9
 801db44:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801db48:	fb11 f90e 	smulbb	r9, r1, lr
 801db4c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801db50:	9602      	str	r6, [sp, #8]
 801db52:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801db56:	4626      	mov	r6, r4
 801db58:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801db5c:	f1ce 0410 	rsb	r4, lr, #16
 801db60:	1a64      	subs	r4, r4, r1
 801db62:	ea4a 0202 	orr.w	r2, sl, r2
 801db66:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801db6a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801db6e:	434a      	muls	r2, r1
 801db70:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801db74:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801db78:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801db7c:	fb04 2406 	mla	r4, r4, r6, r2
 801db80:	ea4a 0000 	orr.w	r0, sl, r0
 801db84:	fb09 4200 	mla	r2, r9, r0, r4
 801db88:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801db8c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801db90:	9801      	ldr	r0, [sp, #4]
 801db92:	9903      	ldr	r1, [sp, #12]
 801db94:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801db98:	ea44 0b0b 	orr.w	fp, r4, fp
 801db9c:	9c02      	ldr	r4, [sp, #8]
 801db9e:	8809      	ldrh	r1, [r1, #0]
 801dba0:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801dba4:	1b00      	subs	r0, r0, r4
 801dba6:	9c01      	ldr	r4, [sp, #4]
 801dba8:	eba4 0608 	sub.w	r6, r4, r8
 801dbac:	b2b6      	uxth	r6, r6
 801dbae:	b280      	uxth	r0, r0
 801dbb0:	4373      	muls	r3, r6
 801dbb2:	fb0c 3300 	mla	r3, ip, r0, r3
 801dbb6:	9802      	ldr	r0, [sp, #8]
 801dbb8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801dbbc:	fb00 3505 	mla	r5, r0, r5, r3
 801dbc0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801dbc4:	fb08 5707 	mla	r7, r8, r7, r5
 801dbc8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801dbcc:	120b      	asrs	r3, r1, #8
 801dbce:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801dbd2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801dbd6:	b2ff      	uxtb	r7, r7
 801dbd8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dbdc:	10c8      	asrs	r0, r1, #3
 801dbde:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801dbe2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801dbe6:	00c9      	lsls	r1, r1, #3
 801dbe8:	437b      	muls	r3, r7
 801dbea:	ea42 0e0e 	orr.w	lr, r2, lr
 801dbee:	b2c9      	uxtb	r1, r1
 801dbf0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801dbf4:	fa1f f28e 	uxth.w	r2, lr
 801dbf8:	4378      	muls	r0, r7
 801dbfa:	434f      	muls	r7, r1
 801dbfc:	1c59      	adds	r1, r3, #1
 801dbfe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801dc02:	1213      	asrs	r3, r2, #8
 801dc04:	f023 0307 	bic.w	r3, r3, #7
 801dc08:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dc0c:	1c41      	adds	r1, r0, #1
 801dc0e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801dc12:	10d1      	asrs	r1, r2, #3
 801dc14:	f021 0103 	bic.w	r1, r1, #3
 801dc18:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801dc1c:	021b      	lsls	r3, r3, #8
 801dc1e:	00c9      	lsls	r1, r1, #3
 801dc20:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dc24:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801dc28:	430b      	orrs	r3, r1
 801dc2a:	1c79      	adds	r1, r7, #1
 801dc2c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801dc30:	00d2      	lsls	r2, r2, #3
 801dc32:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801dc36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dc3a:	431a      	orrs	r2, r3
 801dc3c:	9b03      	ldr	r3, [sp, #12]
 801dc3e:	801a      	strh	r2, [r3, #0]
 801dc40:	b005      	add	sp, #20
 801dc42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc46:	f04f 0c00 	mov.w	ip, #0
 801dc4a:	4664      	mov	r4, ip
 801dc4c:	e6e5      	b.n	801da1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801dc4e:	2300      	movs	r3, #0
 801dc50:	469c      	mov	ip, r3
 801dc52:	461a      	mov	r2, r3
 801dc54:	461c      	mov	r4, r3
 801dc56:	e707      	b.n	801da68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dc58:	2300      	movs	r3, #0
 801dc5a:	461a      	mov	r2, r3
 801dc5c:	e704      	b.n	801da68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dc5e:	460b      	mov	r3, r1
 801dc60:	460a      	mov	r2, r1
 801dc62:	e701      	b.n	801da68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dc64:	2500      	movs	r5, #0
 801dc66:	46ab      	mov	fp, r5
 801dc68:	e72f      	b.n	801daca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801dc6a:	2700      	movs	r7, #0
 801dc6c:	463d      	mov	r5, r7
 801dc6e:	4638      	mov	r0, r7
 801dc70:	46bb      	mov	fp, r7
 801dc72:	e754      	b.n	801db1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dc74:	4677      	mov	r7, lr
 801dc76:	4675      	mov	r5, lr
 801dc78:	4670      	mov	r0, lr
 801dc7a:	46f3      	mov	fp, lr
 801dc7c:	e74f      	b.n	801db1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dc7e:	2700      	movs	r7, #0
 801dc80:	4638      	mov	r0, r7
 801dc82:	e74c      	b.n	801db1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dc84:	460f      	mov	r7, r1
 801dc86:	4608      	mov	r0, r1
 801dc88:	e749      	b.n	801db1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801dc8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc90:	b093      	sub	sp, #76	@ 0x4c
 801dc92:	9210      	str	r2, [sp, #64]	@ 0x40
 801dc94:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801dc96:	910e      	str	r1, [sp, #56]	@ 0x38
 801dc98:	9306      	str	r3, [sp, #24]
 801dc9a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801dc9e:	9011      	str	r0, [sp, #68]	@ 0x44
 801dca0:	6850      	ldr	r0, [r2, #4]
 801dca2:	6812      	ldr	r2, [r2, #0]
 801dca4:	fb00 1303 	mla	r3, r0, r3, r1
 801dca8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dcac:	9307      	str	r3, [sp, #28]
 801dcae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dcb0:	681b      	ldr	r3, [r3, #0]
 801dcb2:	9308      	str	r3, [sp, #32]
 801dcb4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dcb6:	685b      	ldr	r3, [r3, #4]
 801dcb8:	9309      	str	r3, [sp, #36]	@ 0x24
 801dcba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801dcbc:	2b00      	cmp	r3, #0
 801dcbe:	dc03      	bgt.n	801dcc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801dcc0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801dcc2:	2b00      	cmp	r3, #0
 801dcc4:	f340 83b4 	ble.w	801e430 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801dcc8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dcca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dcce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dcd2:	1e48      	subs	r0, r1, #1
 801dcd4:	1e55      	subs	r5, r2, #1
 801dcd6:	9b06      	ldr	r3, [sp, #24]
 801dcd8:	2b00      	cmp	r3, #0
 801dcda:	f340 8163 	ble.w	801dfa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801dcde:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801dce0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801dce2:	1436      	asrs	r6, r6, #16
 801dce4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801dce8:	d406      	bmi.n	801dcf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dcea:	4286      	cmp	r6, r0
 801dcec:	da04      	bge.n	801dcf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dcee:	2b00      	cmp	r3, #0
 801dcf0:	db02      	blt.n	801dcf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dcf2:	42ab      	cmp	r3, r5
 801dcf4:	f2c0 8157 	blt.w	801dfa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801dcf8:	3601      	adds	r6, #1
 801dcfa:	f100 8144 	bmi.w	801df86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801dcfe:	42b1      	cmp	r1, r6
 801dd00:	f2c0 8141 	blt.w	801df86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801dd04:	3301      	adds	r3, #1
 801dd06:	f100 813e 	bmi.w	801df86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801dd0a:	429a      	cmp	r2, r3
 801dd0c:	f2c0 813b 	blt.w	801df86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801dd10:	9b06      	ldr	r3, [sp, #24]
 801dd12:	9f07      	ldr	r7, [sp, #28]
 801dd14:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dd16:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801dd1a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dd1c:	2b00      	cmp	r3, #0
 801dd1e:	f340 8164 	ble.w	801dfea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801dd22:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801dd24:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801dd26:	1418      	asrs	r0, r3, #16
 801dd28:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801dd2a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801dd2e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801dd30:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801dd34:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dd36:	142d      	asrs	r5, r5, #16
 801dd38:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801dd3c:	f100 81ee 	bmi.w	801e11c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801dd40:	f102 3eff 	add.w	lr, r2, #4294967295
 801dd44:	4575      	cmp	r5, lr
 801dd46:	f280 81e9 	bge.w	801e11c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801dd4a:	2800      	cmp	r0, #0
 801dd4c:	f2c0 81e6 	blt.w	801e11c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801dd50:	f103 3eff 	add.w	lr, r3, #4294967295
 801dd54:	4570      	cmp	r0, lr
 801dd56:	f280 81e1 	bge.w	801e11c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801dd5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd5c:	b212      	sxth	r2, r2
 801dd5e:	fb00 5002 	mla	r0, r0, r2, r5
 801dd62:	fa1f fe81 	uxth.w	lr, r1
 801dd66:	eb03 0a00 	add.w	sl, r3, r0
 801dd6a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801dd6e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801dd72:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801dd76:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801dd7a:	b29b      	uxth	r3, r3
 801dd7c:	f1bc 0f00 	cmp.w	ip, #0
 801dd80:	f000 8179 	beq.w	801e076 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801dd84:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801dd88:	940a      	str	r4, [sp, #40]	@ 0x28
 801dd8a:	eb0a 0b02 	add.w	fp, sl, r2
 801dd8e:	fa1f fa8c 	uxth.w	sl, ip
 801dd92:	fb0a fe0e 	mul.w	lr, sl, lr
 801dd96:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801dd9a:	fa1f fa8a 	uxth.w	sl, sl
 801dd9e:	eba5 050e 	sub.w	r5, r5, lr
 801dda2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801dda6:	940b      	str	r4, [sp, #44]	@ 0x2c
 801dda8:	eba3 030a 	sub.w	r3, r3, sl
 801ddac:	b2ad      	uxth	r5, r5
 801ddae:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ddb0:	b29b      	uxth	r3, r3
 801ddb2:	fb08 f505 	mul.w	r5, r8, r5
 801ddb6:	fb09 5303 	mla	r3, r9, r3, r5
 801ddba:	fb0a 3304 	mla	r3, sl, r4, r3
 801ddbe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ddc0:	fb0e 3304 	mla	r3, lr, r4, r3
 801ddc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ddc8:	2b00      	cmp	r3, #0
 801ddca:	f000 80cf 	beq.w	801df6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ddce:	9c08      	ldr	r4, [sp, #32]
 801ddd0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801ddd4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ddd8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801dddc:	f000 8150 	beq.w	801e080 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801dde0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801dde4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801dde8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ddec:	fb09 f000 	mul.w	r0, r9, r0
 801ddf0:	fb0a fe0e 	mul.w	lr, sl, lr
 801ddf4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801ddf8:	f100 0b20 	add.w	fp, r0, #32
 801ddfc:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801de00:	44ce      	add	lr, r9
 801de02:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801de06:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801de0a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801de0e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801de12:	ea4e 0909 	orr.w	r9, lr, r9
 801de16:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801de1a:	8868      	ldrh	r0, [r5, #2]
 801de1c:	d019      	beq.n	801de52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801de1e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801de22:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801de26:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801de2a:	fb08 f800 	mul.w	r8, r8, r0
 801de2e:	fb0a fe0e 	mul.w	lr, sl, lr
 801de32:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801de36:	f108 0b20 	add.w	fp, r8, #32
 801de3a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801de3e:	4486      	add	lr, r0
 801de40:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801de44:	0a00      	lsrs	r0, r0, #8
 801de46:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801de4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801de4e:	ea4e 0000 	orr.w	r0, lr, r0
 801de52:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801de56:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801de5a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801de5e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801de62:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801de66:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801de6a:	ea4e 0909 	orr.w	r9, lr, r9
 801de6e:	ea4a 0000 	orr.w	r0, sl, r0
 801de72:	f1bc 0f00 	cmp.w	ip, #0
 801de76:	f000 8105 	beq.w	801e084 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801de7a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801de7e:	3a01      	subs	r2, #1
 801de80:	0052      	lsls	r2, r2, #1
 801de82:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801de84:	3202      	adds	r2, #2
 801de86:	2cff      	cmp	r4, #255	@ 0xff
 801de88:	eb05 0e02 	add.w	lr, r5, r2
 801de8c:	5aaa      	ldrh	r2, [r5, r2]
 801de8e:	d018      	beq.n	801dec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801de90:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801de94:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801de98:	fb04 fa02 	mul.w	sl, r4, r2
 801de9c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dea0:	fb08 f805 	mul.w	r8, r8, r5
 801dea4:	f10a 0520 	add.w	r5, sl, #32
 801dea8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801deac:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801deb0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801deb4:	4442      	add	r2, r8
 801deb6:	0a2d      	lsrs	r5, r5, #8
 801deb8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801debc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801dec0:	432a      	orrs	r2, r5
 801dec2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801dec4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801dec8:	2cff      	cmp	r4, #255	@ 0xff
 801deca:	d01a      	beq.n	801df02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801decc:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801ded0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ded4:	fb04 fa05 	mul.w	sl, r4, r5
 801ded8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dedc:	fb08 f80e 	mul.w	r8, r8, lr
 801dee0:	f10a 0e20 	add.w	lr, sl, #32
 801dee4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801dee8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801deec:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801def0:	4445      	add	r5, r8
 801def2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801def6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801defa:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801defe:	ea45 050e 	orr.w	r5, r5, lr
 801df02:	fb1c fe01 	smulbb	lr, ip, r1
 801df06:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801df0a:	f1cc 0810 	rsb	r8, ip, #16
 801df0e:	eba8 0801 	sub.w	r8, r8, r1
 801df12:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801df16:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801df1a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801df1e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801df22:	4341      	muls	r1, r0
 801df24:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801df28:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801df2c:	ea4a 0202 	orr.w	r2, sl, r2
 801df30:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801df34:	fb09 1108 	mla	r1, r9, r8, r1
 801df38:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801df3c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801df40:	fb0c 1102 	mla	r1, ip, r2, r1
 801df44:	ea4b 0505 	orr.w	r5, fp, r5
 801df48:	fb0e 1e05 	mla	lr, lr, r5, r1
 801df4c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801df50:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801df54:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801df58:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801df5c:	ea42 0e0e 	orr.w	lr, r2, lr
 801df60:	fa1f f28e 	uxth.w	r2, lr
 801df64:	2bff      	cmp	r3, #255	@ 0xff
 801df66:	f040 80a1 	bne.w	801e0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801df6a:	803a      	strh	r2, [r7, #0]
 801df6c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801df6e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801df70:	4413      	add	r3, r2
 801df72:	931d      	str	r3, [sp, #116]	@ 0x74
 801df74:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801df76:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801df78:	441a      	add	r2, r3
 801df7a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801df7c:	921e      	str	r2, [sp, #120]	@ 0x78
 801df7e:	3b01      	subs	r3, #1
 801df80:	3702      	adds	r7, #2
 801df82:	930f      	str	r3, [sp, #60]	@ 0x3c
 801df84:	e6c9      	b.n	801dd1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801df86:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801df88:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801df8a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801df8c:	4433      	add	r3, r6
 801df8e:	931d      	str	r3, [sp, #116]	@ 0x74
 801df90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801df92:	441c      	add	r4, r3
 801df94:	9b06      	ldr	r3, [sp, #24]
 801df96:	941e      	str	r4, [sp, #120]	@ 0x78
 801df98:	3b01      	subs	r3, #1
 801df9a:	9306      	str	r3, [sp, #24]
 801df9c:	9b07      	ldr	r3, [sp, #28]
 801df9e:	3302      	adds	r3, #2
 801dfa0:	9307      	str	r3, [sp, #28]
 801dfa2:	e698      	b.n	801dcd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801dfa4:	d028      	beq.n	801dff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dfa6:	9b06      	ldr	r3, [sp, #24]
 801dfa8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801dfaa:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801dfac:	3b01      	subs	r3, #1
 801dfae:	fb00 5003 	mla	r0, r0, r3, r5
 801dfb2:	1400      	asrs	r0, r0, #16
 801dfb4:	f53f aeac 	bmi.w	801dd10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dfb8:	3901      	subs	r1, #1
 801dfba:	4288      	cmp	r0, r1
 801dfbc:	f6bf aea8 	bge.w	801dd10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dfc0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801dfc2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801dfc4:	fb01 0303 	mla	r3, r1, r3, r0
 801dfc8:	141b      	asrs	r3, r3, #16
 801dfca:	f53f aea1 	bmi.w	801dd10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dfce:	3a01      	subs	r2, #1
 801dfd0:	4293      	cmp	r3, r2
 801dfd2:	f6bf ae9d 	bge.w	801dd10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dfd6:	9b06      	ldr	r3, [sp, #24]
 801dfd8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801dfdc:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dfde:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801dfe2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dfe4:	2b00      	cmp	r3, #0
 801dfe6:	f300 80b6 	bgt.w	801e156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801dfea:	9b06      	ldr	r3, [sp, #24]
 801dfec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801dff0:	9b07      	ldr	r3, [sp, #28]
 801dff2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801dff6:	9307      	str	r3, [sp, #28]
 801dff8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801dffa:	2b00      	cmp	r3, #0
 801dffc:	f340 8218 	ble.w	801e430 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801e000:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e004:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e008:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e00c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e00e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e012:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e016:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e01a:	eef0 6a62 	vmov.f32	s13, s5
 801e01e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e022:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e026:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e02a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801e02e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e032:	eef0 6a43 	vmov.f32	s13, s6
 801e036:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e03a:	ee12 2a90 	vmov	r2, s5
 801e03e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e042:	fb92 f3f3 	sdiv	r3, r2, r3
 801e046:	ee13 2a10 	vmov	r2, s6
 801e04a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e04c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e04e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e052:	9320      	str	r3, [sp, #128]	@ 0x80
 801e054:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e056:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e058:	3b01      	subs	r3, #1
 801e05a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e05e:	930e      	str	r3, [sp, #56]	@ 0x38
 801e060:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e062:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801e066:	bf08      	it	eq
 801e068:	4613      	moveq	r3, r2
 801e06a:	9306      	str	r3, [sp, #24]
 801e06c:	eeb0 3a67 	vmov.f32	s6, s15
 801e070:	eef0 2a47 	vmov.f32	s5, s14
 801e074:	e621      	b.n	801dcba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801e076:	fb08 f505 	mul.w	r5, r8, r5
 801e07a:	fb09 5303 	mla	r3, r9, r3, r5
 801e07e:	e6a1      	b.n	801ddc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801e080:	4681      	mov	r9, r0
 801e082:	e6c8      	b.n	801de16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801e084:	f1c1 0210 	rsb	r2, r1, #16
 801e088:	4341      	muls	r1, r0
 801e08a:	fb09 1902 	mla	r9, r9, r2, r1
 801e08e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e092:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e096:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e09a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e09e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e0a2:	ea42 0909 	orr.w	r9, r2, r9
 801e0a6:	fa1f f289 	uxth.w	r2, r9
 801e0aa:	e75b      	b.n	801df64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e0ac:	f8b7 c000 	ldrh.w	ip, [r7]
 801e0b0:	43db      	mvns	r3, r3
 801e0b2:	ea4f 202c 	mov.w	r0, ip, asr #8
 801e0b6:	fa5f fe83 	uxtb.w	lr, r3
 801e0ba:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e0be:	fb00 f00e 	mul.w	r0, r0, lr
 801e0c2:	1c41      	adds	r1, r0, #1
 801e0c4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e0c8:	1211      	asrs	r1, r2, #8
 801e0ca:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e0ce:	f021 0107 	bic.w	r1, r1, #7
 801e0d2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801e0d6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e0da:	48d7      	ldr	r0, [pc, #860]	@ (801e438 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801e0dc:	fb05 f50e 	mul.w	r5, r5, lr
 801e0e0:	b2c9      	uxtb	r1, r1
 801e0e2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801e0e6:	1c69      	adds	r1, r5, #1
 801e0e8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e0ec:	10d1      	asrs	r1, r2, #3
 801e0ee:	f021 0103 	bic.w	r1, r1, #3
 801e0f2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801e0f6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e0fa:	b2db      	uxtb	r3, r3
 801e0fc:	00c9      	lsls	r1, r1, #3
 801e0fe:	fb03 f30e 	mul.w	r3, r3, lr
 801e102:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e106:	4301      	orrs	r1, r0
 801e108:	1c58      	adds	r0, r3, #1
 801e10a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e10e:	00d2      	lsls	r2, r2, #3
 801e110:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e114:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e118:	430a      	orrs	r2, r1
 801e11a:	e726      	b.n	801df6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801e11c:	f115 0e01 	adds.w	lr, r5, #1
 801e120:	f53f af24 	bmi.w	801df6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e124:	4572      	cmp	r2, lr
 801e126:	f6ff af21 	blt.w	801df6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e12a:	f110 0e01 	adds.w	lr, r0, #1
 801e12e:	f53f af1d 	bmi.w	801df6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e132:	4573      	cmp	r3, lr
 801e134:	f6ff af1a 	blt.w	801df6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e138:	b21b      	sxth	r3, r3
 801e13a:	b212      	sxth	r2, r2
 801e13c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801e140:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801e144:	9301      	str	r3, [sp, #4]
 801e146:	9200      	str	r2, [sp, #0]
 801e148:	4639      	mov	r1, r7
 801e14a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801e14e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e150:	f7ff fc24 	bl	801d99c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801e154:	e70a      	b.n	801df6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e156:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e158:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e15c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e15e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e162:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e164:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e168:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e16a:	141f      	asrs	r7, r3, #16
 801e16c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e16e:	141b      	asrs	r3, r3, #16
 801e170:	fb01 3707 	mla	r7, r1, r7, r3
 801e174:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e176:	fa1f fc82 	uxth.w	ip, r2
 801e17a:	eb03 0a07 	add.w	sl, r3, r7
 801e17e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e182:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e186:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e18a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e18e:	b29b      	uxth	r3, r3
 801e190:	2d00      	cmp	r5, #0
 801e192:	f000 80fe 	beq.w	801e392 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801e196:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e19a:	940c      	str	r4, [sp, #48]	@ 0x30
 801e19c:	eb0a 0b01 	add.w	fp, sl, r1
 801e1a0:	fa1f fa85 	uxth.w	sl, r5
 801e1a4:	fb0a fc0c 	mul.w	ip, sl, ip
 801e1a8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e1ac:	fa1f fa8a 	uxth.w	sl, sl
 801e1b0:	eba0 000c 	sub.w	r0, r0, ip
 801e1b4:	eba3 030a 	sub.w	r3, r3, sl
 801e1b8:	b280      	uxth	r0, r0
 801e1ba:	fb08 f000 	mul.w	r0, r8, r0
 801e1be:	b29b      	uxth	r3, r3
 801e1c0:	fb09 0303 	mla	r3, r9, r3, r0
 801e1c4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801e1c6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e1ca:	940d      	str	r4, [sp, #52]	@ 0x34
 801e1cc:	fb0a 3300 	mla	r3, sl, r0, r3
 801e1d0:	fb0c 3304 	mla	r3, ip, r4, r3
 801e1d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e1d8:	2b00      	cmp	r3, #0
 801e1da:	f000 80cc 	beq.w	801e376 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801e1de:	9808      	ldr	r0, [sp, #32]
 801e1e0:	9c08      	ldr	r4, [sp, #32]
 801e1e2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e1e6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e1ea:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e1ee:	f000 80d5 	beq.w	801e39c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801e1f2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e1f6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e1fa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e1fe:	fb09 f707 	mul.w	r7, r9, r7
 801e202:	fb0a fc0c 	mul.w	ip, sl, ip
 801e206:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801e20a:	f107 0b20 	add.w	fp, r7, #32
 801e20e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801e212:	44cc      	add	ip, r9
 801e214:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801e218:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e21c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e220:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e224:	ea4c 0909 	orr.w	r9, ip, r9
 801e228:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801e22c:	8847      	ldrh	r7, [r0, #2]
 801e22e:	d019      	beq.n	801e264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801e230:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e234:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e238:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e23c:	fb08 f807 	mul.w	r8, r8, r7
 801e240:	fb0a fc0c 	mul.w	ip, sl, ip
 801e244:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801e248:	f108 0b20 	add.w	fp, r8, #32
 801e24c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801e250:	44bc      	add	ip, r7
 801e252:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801e256:	0a3f      	lsrs	r7, r7, #8
 801e258:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e25c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e260:	ea4c 0707 	orr.w	r7, ip, r7
 801e264:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801e268:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801e26c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e270:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e274:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e278:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e27c:	ea4c 0909 	orr.w	r9, ip, r9
 801e280:	ea4a 0707 	orr.w	r7, sl, r7
 801e284:	2d00      	cmp	r5, #0
 801e286:	f000 808b 	beq.w	801e3a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801e28a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e28e:	3901      	subs	r1, #1
 801e290:	0049      	lsls	r1, r1, #1
 801e292:	3102      	adds	r1, #2
 801e294:	eb00 0c01 	add.w	ip, r0, r1
 801e298:	5a41      	ldrh	r1, [r0, r1]
 801e29a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801e29c:	28ff      	cmp	r0, #255	@ 0xff
 801e29e:	d019      	beq.n	801e2d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801e2a0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801e2a2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801e2a6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e2aa:	fb04 fa01 	mul.w	sl, r4, r1
 801e2ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e2b2:	fb08 f800 	mul.w	r8, r8, r0
 801e2b6:	f10a 0020 	add.w	r0, sl, #32
 801e2ba:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801e2be:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801e2c2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e2c6:	4441      	add	r1, r8
 801e2c8:	0a00      	lsrs	r0, r0, #8
 801e2ca:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801e2ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e2d2:	4301      	orrs	r1, r0
 801e2d4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e2d6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801e2da:	2cff      	cmp	r4, #255	@ 0xff
 801e2dc:	d01a      	beq.n	801e314 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801e2de:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801e2e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e2e6:	fb04 fa00 	mul.w	sl, r4, r0
 801e2ea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e2ee:	fb08 f80c 	mul.w	r8, r8, ip
 801e2f2:	f10a 0c20 	add.w	ip, sl, #32
 801e2f6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801e2fa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801e2fe:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e302:	4440      	add	r0, r8
 801e304:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e308:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801e30c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e310:	ea40 000c 	orr.w	r0, r0, ip
 801e314:	fb15 fc02 	smulbb	ip, r5, r2
 801e318:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801e31c:	f1c5 0810 	rsb	r8, r5, #16
 801e320:	eba8 0802 	sub.w	r8, r8, r2
 801e324:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e328:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801e32c:	437a      	muls	r2, r7
 801e32e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e332:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801e336:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e33a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e33e:	fb09 2208 	mla	r2, r9, r8, r2
 801e342:	ea4a 0101 	orr.w	r1, sl, r1
 801e346:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801e34a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e34e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e352:	fb05 2201 	mla	r2, r5, r1, r2
 801e356:	ea4b 0000 	orr.w	r0, fp, r0
 801e35a:	fb0c 2200 	mla	r2, ip, r0, r2
 801e35e:	0d57      	lsrs	r7, r2, #21
 801e360:	0952      	lsrs	r2, r2, #5
 801e362:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e366:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e36a:	433a      	orrs	r2, r7
 801e36c:	2bff      	cmp	r3, #255	@ 0xff
 801e36e:	b292      	uxth	r2, r2
 801e370:	d127      	bne.n	801e3c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801e372:	f8ae 2000 	strh.w	r2, [lr]
 801e376:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e378:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801e37a:	4413      	add	r3, r2
 801e37c:	931d      	str	r3, [sp, #116]	@ 0x74
 801e37e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801e380:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e382:	441a      	add	r2, r3
 801e384:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e386:	921e      	str	r2, [sp, #120]	@ 0x78
 801e388:	3b01      	subs	r3, #1
 801e38a:	f10e 0e02 	add.w	lr, lr, #2
 801e38e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e390:	e627      	b.n	801dfe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e392:	fb08 f000 	mul.w	r0, r8, r0
 801e396:	fb09 0303 	mla	r3, r9, r3, r0
 801e39a:	e71b      	b.n	801e1d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801e39c:	46b9      	mov	r9, r7
 801e39e:	e743      	b.n	801e228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801e3a0:	f1c2 0110 	rsb	r1, r2, #16
 801e3a4:	437a      	muls	r2, r7
 801e3a6:	fb09 2901 	mla	r9, r9, r1, r2
 801e3aa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e3ae:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801e3b2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801e3b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e3ba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e3be:	4302      	orrs	r2, r0
 801e3c0:	e7d4      	b.n	801e36c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801e3c2:	f8be 7000 	ldrh.w	r7, [lr]
 801e3c6:	4c1c      	ldr	r4, [pc, #112]	@ (801e438 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801e3c8:	43db      	mvns	r3, r3
 801e3ca:	1238      	asrs	r0, r7, #8
 801e3cc:	fa5f fc83 	uxtb.w	ip, r3
 801e3d0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e3d4:	10fd      	asrs	r5, r7, #3
 801e3d6:	fb00 f00c 	mul.w	r0, r0, ip
 801e3da:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e3de:	fb05 f10c 	mul.w	r1, r5, ip
 801e3e2:	1c45      	adds	r5, r0, #1
 801e3e4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e3e8:	1215      	asrs	r5, r2, #8
 801e3ea:	f025 0507 	bic.w	r5, r5, #7
 801e3ee:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e3f2:	1c4d      	adds	r5, r1, #1
 801e3f4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801e3f8:	10d1      	asrs	r1, r2, #3
 801e3fa:	f021 0103 	bic.w	r1, r1, #3
 801e3fe:	00fb      	lsls	r3, r7, #3
 801e400:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e404:	b2db      	uxtb	r3, r3
 801e406:	b2c0      	uxtb	r0, r0
 801e408:	00c9      	lsls	r1, r1, #3
 801e40a:	fb03 f30c 	mul.w	r3, r3, ip
 801e40e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e412:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801e416:	4308      	orrs	r0, r1
 801e418:	1c59      	adds	r1, r3, #1
 801e41a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e41e:	00d2      	lsls	r2, r2, #3
 801e420:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e424:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801e428:	4318      	orrs	r0, r3
 801e42a:	f8ae 0000 	strh.w	r0, [lr]
 801e42e:	e7a2      	b.n	801e376 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801e430:	b013      	add	sp, #76	@ 0x4c
 801e432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e436:	bf00      	nop
 801e438:	fffff800 	.word	0xfffff800

0801e43c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801e43c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e440:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801e444:	fb05 4c03 	mla	ip, r5, r3, r4
 801e448:	2d00      	cmp	r5, #0
 801e44a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801e44e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801e452:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801e456:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801e45a:	8808      	ldrh	r0, [r1, #0]
 801e45c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801e460:	f2c0 80a7 	blt.w	801e5b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e464:	45aa      	cmp	sl, r5
 801e466:	f340 80a4 	ble.w	801e5b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e46a:	2c00      	cmp	r4, #0
 801e46c:	f2c0 809f 	blt.w	801e5ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e470:	42a3      	cmp	r3, r4
 801e472:	f340 809c 	ble.w	801e5ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e476:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801e47a:	1c62      	adds	r2, r4, #1
 801e47c:	f100 809c 	bmi.w	801e5b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e480:	4293      	cmp	r3, r2
 801e482:	f340 8099 	ble.w	801e5b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e486:	f1b9 0f00 	cmp.w	r9, #0
 801e48a:	f000 8095 	beq.w	801e5b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e48e:	f8be c002 	ldrh.w	ip, [lr, #2]
 801e492:	3501      	adds	r5, #1
 801e494:	f100 8094 	bmi.w	801e5c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e498:	45aa      	cmp	sl, r5
 801e49a:	f340 8091 	ble.w	801e5c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e49e:	2f00      	cmp	r7, #0
 801e4a0:	f000 808e 	beq.w	801e5c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e4a4:	2c00      	cmp	r4, #0
 801e4a6:	f2c0 8089 	blt.w	801e5bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e4aa:	42a3      	cmp	r3, r4
 801e4ac:	f340 8086 	ble.w	801e5bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e4b0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801e4b4:	3401      	adds	r4, #1
 801e4b6:	f100 8086 	bmi.w	801e5c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e4ba:	42a3      	cmp	r3, r4
 801e4bc:	f340 8083 	ble.w	801e5c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e4c0:	f1b9 0f00 	cmp.w	r9, #0
 801e4c4:	d07f      	beq.n	801e5c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e4c6:	3301      	adds	r3, #1
 801e4c8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801e4cc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e4d0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e4d4:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801e4d8:	fb19 fe07 	smulbb	lr, r9, r7
 801e4dc:	ea44 0808 	orr.w	r8, r4, r8
 801e4e0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e4e4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e4e8:	f1c7 0210 	rsb	r2, r7, #16
 801e4ec:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e4f0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e4f4:	ea44 0c0c 	orr.w	ip, r4, ip
 801e4f8:	eba2 0209 	sub.w	r2, r2, r9
 801e4fc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e500:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e504:	fb04 f40c 	mul.w	r4, r4, ip
 801e508:	fb02 4808 	mla	r8, r2, r8, r4
 801e50c:	041a      	lsls	r2, r3, #16
 801e50e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e512:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e516:	4313      	orrs	r3, r2
 801e518:	042a      	lsls	r2, r5, #16
 801e51a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e51e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e522:	fb0e 8303 	mla	r3, lr, r3, r8
 801e526:	432a      	orrs	r2, r5
 801e528:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e52c:	fb07 3202 	mla	r2, r7, r2, r3
 801e530:	0d53      	lsrs	r3, r2, #21
 801e532:	0952      	lsrs	r2, r2, #5
 801e534:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e538:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e53c:	431a      	orrs	r2, r3
 801e53e:	b293      	uxth	r3, r2
 801e540:	b2b4      	uxth	r4, r6
 801e542:	1202      	asrs	r2, r0, #8
 801e544:	43f6      	mvns	r6, r6
 801e546:	b2f6      	uxtb	r6, r6
 801e548:	121d      	asrs	r5, r3, #8
 801e54a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e54e:	fb12 f206 	smulbb	r2, r2, r6
 801e552:	10c7      	asrs	r7, r0, #3
 801e554:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e558:	00c0      	lsls	r0, r0, #3
 801e55a:	fb05 2504 	mla	r5, r5, r4, r2
 801e55e:	b2c0      	uxtb	r0, r0
 801e560:	10da      	asrs	r2, r3, #3
 801e562:	00db      	lsls	r3, r3, #3
 801e564:	b2db      	uxtb	r3, r3
 801e566:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e56a:	fb10 f006 	smulbb	r0, r0, r6
 801e56e:	b2ad      	uxth	r5, r5
 801e570:	fb03 0004 	mla	r0, r3, r4, r0
 801e574:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e578:	fb17 f706 	smulbb	r7, r7, r6
 801e57c:	b280      	uxth	r0, r0
 801e57e:	1c6b      	adds	r3, r5, #1
 801e580:	fb02 7204 	mla	r2, r2, r4, r7
 801e584:	b292      	uxth	r2, r2
 801e586:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e58a:	1c43      	adds	r3, r0, #1
 801e58c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e590:	1c50      	adds	r0, r2, #1
 801e592:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e596:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e59a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e59e:	0952      	lsrs	r2, r2, #5
 801e5a0:	432b      	orrs	r3, r5
 801e5a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e5a6:	4313      	orrs	r3, r2
 801e5a8:	800b      	strh	r3, [r1, #0]
 801e5aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e5ae:	4680      	mov	r8, r0
 801e5b0:	e763      	b.n	801e47a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801e5b2:	4684      	mov	ip, r0
 801e5b4:	4680      	mov	r8, r0
 801e5b6:	e76c      	b.n	801e492 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801e5b8:	4684      	mov	ip, r0
 801e5ba:	e76a      	b.n	801e492 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801e5bc:	4605      	mov	r5, r0
 801e5be:	e779      	b.n	801e4b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801e5c0:	4603      	mov	r3, r0
 801e5c2:	4605      	mov	r5, r0
 801e5c4:	e782      	b.n	801e4cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801e5c6:	4603      	mov	r3, r0
 801e5c8:	e780      	b.n	801e4cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801e5ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e5ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5ce:	b093      	sub	sp, #76	@ 0x4c
 801e5d0:	461d      	mov	r5, r3
 801e5d2:	9210      	str	r2, [sp, #64]	@ 0x40
 801e5d4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e5d6:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801e5da:	920b      	str	r2, [sp, #44]	@ 0x2c
 801e5dc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801e5e0:	910a      	str	r1, [sp, #40]	@ 0x28
 801e5e2:	6859      	ldr	r1, [r3, #4]
 801e5e4:	681b      	ldr	r3, [r3, #0]
 801e5e6:	9011      	str	r0, [sp, #68]	@ 0x44
 801e5e8:	fb01 2707 	mla	r7, r1, r7, r2
 801e5ec:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801e5f0:	9307      	str	r3, [sp, #28]
 801e5f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e5f4:	681b      	ldr	r3, [r3, #0]
 801e5f6:	9309      	str	r3, [sp, #36]	@ 0x24
 801e5f8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e5fa:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801e5fe:	43db      	mvns	r3, r3
 801e600:	b2db      	uxtb	r3, r3
 801e602:	9308      	str	r3, [sp, #32]
 801e604:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e606:	2b00      	cmp	r3, #0
 801e608:	dc03      	bgt.n	801e612 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e60a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e60c:	2b00      	cmp	r3, #0
 801e60e:	f340 8203 	ble.w	801ea18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e612:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e614:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e618:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e61c:	1e48      	subs	r0, r1, #1
 801e61e:	f102 3cff 	add.w	ip, r2, #4294967295
 801e622:	2d00      	cmp	r5, #0
 801e624:	f340 80da 	ble.w	801e7dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801e628:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e62c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e630:	d406      	bmi.n	801e640 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e632:	4586      	cmp	lr, r0
 801e634:	da04      	bge.n	801e640 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e636:	2b00      	cmp	r3, #0
 801e638:	db02      	blt.n	801e640 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e63a:	4563      	cmp	r3, ip
 801e63c:	f2c0 80cf 	blt.w	801e7de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e640:	f11e 0e01 	adds.w	lr, lr, #1
 801e644:	f100 80c1 	bmi.w	801e7ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e648:	4571      	cmp	r1, lr
 801e64a:	f2c0 80be 	blt.w	801e7ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e64e:	3301      	adds	r3, #1
 801e650:	f100 80bb 	bmi.w	801e7ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e654:	429a      	cmp	r2, r3
 801e656:	f2c0 80b8 	blt.w	801e7ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e65a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801e65e:	46a9      	mov	r9, r5
 801e660:	f1b9 0f00 	cmp.w	r9, #0
 801e664:	f340 80d8 	ble.w	801e818 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801e668:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e66a:	1421      	asrs	r1, r4, #16
 801e66c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e670:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e674:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e678:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e67c:	f100 8111 	bmi.w	801e8a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e680:	f10e 3aff 	add.w	sl, lr, #4294967295
 801e684:	4551      	cmp	r1, sl
 801e686:	f280 810c 	bge.w	801e8a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e68a:	2800      	cmp	r0, #0
 801e68c:	f2c0 8109 	blt.w	801e8a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e690:	f103 3aff 	add.w	sl, r3, #4294967295
 801e694:	4550      	cmp	r0, sl
 801e696:	f280 8104 	bge.w	801e8a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e69a:	fa0f f38e 	sxth.w	r3, lr
 801e69e:	fb00 1103 	mla	r1, r0, r3, r1
 801e6a2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801e6a4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801e6a8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801e6ac:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801e6b0:	f1bc 0f00 	cmp.w	ip, #0
 801e6b4:	d007      	beq.n	801e6c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801e6b6:	005b      	lsls	r3, r3, #1
 801e6b8:	eb0a 0003 	add.w	r0, sl, r3
 801e6bc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801e6c0:	930c      	str	r3, [sp, #48]	@ 0x30
 801e6c2:	8843      	ldrh	r3, [r0, #2]
 801e6c4:	930d      	str	r3, [sp, #52]	@ 0x34
 801e6c6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801e6ca:	fb12 f30c 	smulbb	r3, r2, ip
 801e6ce:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e6d2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e6d6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e6da:	10db      	asrs	r3, r3, #3
 801e6dc:	ea40 000e 	orr.w	r0, r0, lr
 801e6e0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e6e4:	f1cc 0e10 	rsb	lr, ip, #16
 801e6e8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e6ec:	ebae 0e02 	sub.w	lr, lr, r2
 801e6f0:	ea4a 0101 	orr.w	r1, sl, r1
 801e6f4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e6f8:	4351      	muls	r1, r2
 801e6fa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e6fc:	9f08      	ldr	r7, [sp, #32]
 801e6fe:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e702:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e706:	0410      	lsls	r0, r2, #16
 801e708:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e70c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e710:	4310      	orrs	r0, r2
 801e712:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e714:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e716:	0412      	lsls	r2, r2, #16
 801e718:	fb03 e000 	mla	r0, r3, r0, lr
 801e71c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e720:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e724:	ea42 020e 	orr.w	r2, r2, lr
 801e728:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e72c:	fb03 0302 	mla	r3, r3, r2, r0
 801e730:	0d5a      	lsrs	r2, r3, #21
 801e732:	095b      	lsrs	r3, r3, #5
 801e734:	f8b8 0000 	ldrh.w	r0, [r8]
 801e738:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e73c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e740:	4313      	orrs	r3, r2
 801e742:	b29b      	uxth	r3, r3
 801e744:	1201      	asrs	r1, r0, #8
 801e746:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801e74a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e74e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e752:	fb11 f107 	smulbb	r1, r1, r7
 801e756:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e75a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e75e:	00c0      	lsls	r0, r0, #3
 801e760:	fb0c 1c02 	mla	ip, ip, r2, r1
 801e764:	b2c0      	uxtb	r0, r0
 801e766:	10d9      	asrs	r1, r3, #3
 801e768:	00db      	lsls	r3, r3, #3
 801e76a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e76e:	b2db      	uxtb	r3, r3
 801e770:	fb10 f007 	smulbb	r0, r0, r7
 801e774:	fa1f fc8c 	uxth.w	ip, ip
 801e778:	fb03 0302 	mla	r3, r3, r2, r0
 801e77c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e780:	fb1e fe07 	smulbb	lr, lr, r7
 801e784:	fb01 e102 	mla	r1, r1, r2, lr
 801e788:	b29a      	uxth	r2, r3
 801e78a:	f10c 0301 	add.w	r3, ip, #1
 801e78e:	b289      	uxth	r1, r1
 801e790:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e794:	1c53      	adds	r3, r2, #1
 801e796:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e79a:	1c4a      	adds	r2, r1, #1
 801e79c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e7a0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e7a4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e7a8:	0949      	lsrs	r1, r1, #5
 801e7aa:	ea43 030c 	orr.w	r3, r3, ip
 801e7ae:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e7b2:	430b      	orrs	r3, r1
 801e7b4:	f8a8 3000 	strh.w	r3, [r8]
 801e7b8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e7ba:	441c      	add	r4, r3
 801e7bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e7be:	f108 0802 	add.w	r8, r8, #2
 801e7c2:	441e      	add	r6, r3
 801e7c4:	f109 39ff 	add.w	r9, r9, #4294967295
 801e7c8:	e74a      	b.n	801e660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e7ca:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e7cc:	441c      	add	r4, r3
 801e7ce:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e7d0:	441e      	add	r6, r3
 801e7d2:	9b07      	ldr	r3, [sp, #28]
 801e7d4:	3302      	adds	r3, #2
 801e7d6:	3d01      	subs	r5, #1
 801e7d8:	9307      	str	r3, [sp, #28]
 801e7da:	e722      	b.n	801e622 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e7dc:	d022      	beq.n	801e824 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801e7de:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801e7e0:	1e6b      	subs	r3, r5, #1
 801e7e2:	fb00 4003 	mla	r0, r0, r3, r4
 801e7e6:	1400      	asrs	r0, r0, #16
 801e7e8:	f53f af37 	bmi.w	801e65a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e7ec:	3901      	subs	r1, #1
 801e7ee:	4288      	cmp	r0, r1
 801e7f0:	f6bf af33 	bge.w	801e65a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e7f4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801e7f6:	fb01 6303 	mla	r3, r1, r3, r6
 801e7fa:	141b      	asrs	r3, r3, #16
 801e7fc:	f53f af2d 	bmi.w	801e65a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e800:	3a01      	subs	r2, #1
 801e802:	4293      	cmp	r3, r2
 801e804:	f6bf af29 	bge.w	801e65a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e808:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801e80c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801e810:	46a8      	mov	r8, r5
 801e812:	f1b8 0f00 	cmp.w	r8, #0
 801e816:	dc5e      	bgt.n	801e8d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e818:	9b07      	ldr	r3, [sp, #28]
 801e81a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e81e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e822:	9307      	str	r3, [sp, #28]
 801e824:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e826:	2b00      	cmp	r3, #0
 801e828:	f340 80f6 	ble.w	801ea18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e82c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e830:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e834:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e838:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e83a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e83e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e842:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e846:	eef0 6a62 	vmov.f32	s13, s5
 801e84a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e84e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e852:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e856:	ee16 4a90 	vmov	r4, s13
 801e85a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e85e:	eef0 6a43 	vmov.f32	s13, s6
 801e862:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e866:	ee12 2a90 	vmov	r2, s5
 801e86a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e86e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e872:	ee13 2a10 	vmov	r2, s6
 801e876:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e878:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e87a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e87e:	9320      	str	r3, [sp, #128]	@ 0x80
 801e880:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e882:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e884:	3b01      	subs	r3, #1
 801e886:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e88a:	930a      	str	r3, [sp, #40]	@ 0x28
 801e88c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e88e:	ee16 6a90 	vmov	r6, s13
 801e892:	bf14      	ite	ne
 801e894:	461d      	movne	r5, r3
 801e896:	4615      	moveq	r5, r2
 801e898:	eeb0 3a67 	vmov.f32	s6, s15
 801e89c:	eef0 2a47 	vmov.f32	s5, s14
 801e8a0:	e6b0      	b.n	801e604 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e8a2:	f111 0a01 	adds.w	sl, r1, #1
 801e8a6:	d487      	bmi.n	801e7b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e8a8:	45d6      	cmp	lr, sl
 801e8aa:	db85      	blt.n	801e7b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e8ac:	f110 0a01 	adds.w	sl, r0, #1
 801e8b0:	d482      	bmi.n	801e7b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e8b2:	4553      	cmp	r3, sl
 801e8b4:	db80      	blt.n	801e7b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e8b6:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801e8b8:	9101      	str	r1, [sp, #4]
 801e8ba:	b21b      	sxth	r3, r3
 801e8bc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801e8c0:	9300      	str	r3, [sp, #0]
 801e8c2:	e9cd c704 	strd	ip, r7, [sp, #16]
 801e8c6:	fa0f f38e 	sxth.w	r3, lr
 801e8ca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e8cc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e8ce:	4641      	mov	r1, r8
 801e8d0:	f7ff fdb4 	bl	801e43c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801e8d4:	e770      	b.n	801e7b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e8d6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e8d8:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801e8da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e8de:	1430      	asrs	r0, r6, #16
 801e8e0:	1423      	asrs	r3, r4, #16
 801e8e2:	fb01 3000 	mla	r0, r1, r0, r3
 801e8e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e8e8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801e8ec:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801e8f0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e8f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e8f8:	8858      	ldrh	r0, [r3, #2]
 801e8fa:	f1be 0f00 	cmp.w	lr, #0
 801e8fe:	d00b      	beq.n	801e918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e900:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e904:	3901      	subs	r1, #1
 801e906:	0049      	lsls	r1, r1, #1
 801e908:	3102      	adds	r1, #2
 801e90a:	eb03 0b01 	add.w	fp, r3, r1
 801e90e:	5a5b      	ldrh	r3, [r3, r1]
 801e910:	930e      	str	r3, [sp, #56]	@ 0x38
 801e912:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e916:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e918:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801e91c:	fb12 f30e 	smulbb	r3, r2, lr
 801e920:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e924:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e928:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801e92c:	10db      	asrs	r3, r3, #3
 801e92e:	ea41 010c 	orr.w	r1, r1, ip
 801e932:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e936:	f1ce 0c10 	rsb	ip, lr, #16
 801e93a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e93e:	ebac 0c02 	sub.w	ip, ip, r2
 801e942:	ea4b 0000 	orr.w	r0, fp, r0
 801e946:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e94a:	4350      	muls	r0, r2
 801e94c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e94e:	9f08      	ldr	r7, [sp, #32]
 801e950:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e954:	fb0c 0c01 	mla	ip, ip, r1, r0
 801e958:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e95c:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801e960:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801e962:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e964:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e968:	0412      	lsls	r2, r2, #16
 801e96a:	ea4b 0101 	orr.w	r1, fp, r1
 801e96e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e972:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e976:	fb03 c101 	mla	r1, r3, r1, ip
 801e97a:	4302      	orrs	r2, r0
 801e97c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e980:	fb03 1202 	mla	r2, r3, r2, r1
 801e984:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801e988:	0952      	lsrs	r2, r2, #5
 801e98a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801e98e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801e992:	f8b9 2000 	ldrh.w	r2, [r9]
 801e996:	ea4b 0303 	orr.w	r3, fp, r3
 801e99a:	b29b      	uxth	r3, r3
 801e99c:	1211      	asrs	r1, r2, #8
 801e99e:	1218      	asrs	r0, r3, #8
 801e9a0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e9a4:	fb11 f107 	smulbb	r1, r1, r7
 801e9a8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801e9ac:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e9b0:	00d2      	lsls	r2, r2, #3
 801e9b2:	fb00 100a 	mla	r0, r0, sl, r1
 801e9b6:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801e9ba:	10d9      	asrs	r1, r3, #3
 801e9bc:	b2d2      	uxtb	r2, r2
 801e9be:	00db      	lsls	r3, r3, #3
 801e9c0:	fb1c fc07 	smulbb	ip, ip, r7
 801e9c4:	fb12 f207 	smulbb	r2, r2, r7
 801e9c8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e9cc:	b2db      	uxtb	r3, r3
 801e9ce:	b280      	uxth	r0, r0
 801e9d0:	fb01 c10a 	mla	r1, r1, sl, ip
 801e9d4:	fb03 230a 	mla	r3, r3, sl, r2
 801e9d8:	b29b      	uxth	r3, r3
 801e9da:	b289      	uxth	r1, r1
 801e9dc:	1c42      	adds	r2, r0, #1
 801e9de:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e9e2:	f101 0c01 	add.w	ip, r1, #1
 801e9e6:	1c5a      	adds	r2, r3, #1
 801e9e8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e9ec:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e9f0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e9f2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801e9f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e9fa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e9fe:	4310      	orrs	r0, r2
 801ea00:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ea04:	441c      	add	r4, r3
 801ea06:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ea08:	ea40 000c 	orr.w	r0, r0, ip
 801ea0c:	f829 0b02 	strh.w	r0, [r9], #2
 801ea10:	441e      	add	r6, r3
 801ea12:	f108 38ff 	add.w	r8, r8, #4294967295
 801ea16:	e6fc      	b.n	801e812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801ea18:	b013      	add	sp, #76	@ 0x4c
 801ea1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ea1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801ea1e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ea22:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801ea26:	fb0e 4703 	mla	r7, lr, r3, r4
 801ea2a:	f1be 0f00 	cmp.w	lr, #0
 801ea2e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801ea32:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801ea36:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801ea3a:	8808      	ldrh	r0, [r1, #0]
 801ea3c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801ea40:	db60      	blt.n	801eb04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ea42:	45f1      	cmp	r9, lr
 801ea44:	dd5e      	ble.n	801eb04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ea46:	2c00      	cmp	r4, #0
 801ea48:	db5a      	blt.n	801eb00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ea4a:	42a3      	cmp	r3, r4
 801ea4c:	dd58      	ble.n	801eb00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ea4e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801ea52:	1c62      	adds	r2, r4, #1
 801ea54:	d459      	bmi.n	801eb0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ea56:	4293      	cmp	r3, r2
 801ea58:	dd57      	ble.n	801eb0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ea5a:	2d00      	cmp	r5, #0
 801ea5c:	d055      	beq.n	801eb0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ea5e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801ea62:	f11e 0e01 	adds.w	lr, lr, #1
 801ea66:	d454      	bmi.n	801eb12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ea68:	45f1      	cmp	r9, lr
 801ea6a:	dd52      	ble.n	801eb12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ea6c:	2e00      	cmp	r6, #0
 801ea6e:	d050      	beq.n	801eb12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ea70:	2c00      	cmp	r4, #0
 801ea72:	db4c      	blt.n	801eb0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801ea74:	42a3      	cmp	r3, r4
 801ea76:	dd4a      	ble.n	801eb0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801ea78:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801ea7c:	3401      	adds	r4, #1
 801ea7e:	d405      	bmi.n	801ea8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ea80:	42a3      	cmp	r3, r4
 801ea82:	dd03      	ble.n	801ea8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ea84:	b115      	cbz	r5, 801ea8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ea86:	3301      	adds	r3, #1
 801ea88:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801ea8c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ea90:	fb15 f406 	smulbb	r4, r5, r6
 801ea94:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ea98:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ea9c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801eaa0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801eaa4:	ea43 0c0c 	orr.w	ip, r3, ip
 801eaa8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801eaac:	f1c6 0310 	rsb	r3, r6, #16
 801eab0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801eab4:	1b5b      	subs	r3, r3, r5
 801eab6:	ea4e 0707 	orr.w	r7, lr, r7
 801eaba:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801eabe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801eac2:	437d      	muls	r5, r7
 801eac4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801eac8:	0403      	lsls	r3, r0, #16
 801eaca:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eace:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ead2:	4318      	orrs	r0, r3
 801ead4:	0413      	lsls	r3, r2, #16
 801ead6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eada:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801eade:	4313      	orrs	r3, r2
 801eae0:	fb04 c000 	mla	r0, r4, r0, ip
 801eae4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801eae8:	fb06 0003 	mla	r0, r6, r3, r0
 801eaec:	0d43      	lsrs	r3, r0, #21
 801eaee:	0940      	lsrs	r0, r0, #5
 801eaf0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eaf4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801eaf8:	4318      	orrs	r0, r3
 801eafa:	8008      	strh	r0, [r1, #0]
 801eafc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801eb00:	4684      	mov	ip, r0
 801eb02:	e7a6      	b.n	801ea52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801eb04:	4607      	mov	r7, r0
 801eb06:	4684      	mov	ip, r0
 801eb08:	e7ab      	b.n	801ea62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801eb0a:	4607      	mov	r7, r0
 801eb0c:	e7a9      	b.n	801ea62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801eb0e:	4602      	mov	r2, r0
 801eb10:	e7b4      	b.n	801ea7c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801eb12:	4602      	mov	r2, r0
 801eb14:	e7ba      	b.n	801ea8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801eb16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eb16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb1a:	b08f      	sub	sp, #60	@ 0x3c
 801eb1c:	461d      	mov	r5, r3
 801eb1e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801eb20:	920c      	str	r2, [sp, #48]	@ 0x30
 801eb22:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801eb26:	9107      	str	r1, [sp, #28]
 801eb28:	6859      	ldr	r1, [r3, #4]
 801eb2a:	681b      	ldr	r3, [r3, #0]
 801eb2c:	900d      	str	r0, [sp, #52]	@ 0x34
 801eb2e:	fb01 2707 	mla	r7, r1, r7, r2
 801eb32:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801eb36:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eb38:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801eb3c:	f8d3 8000 	ldr.w	r8, [r3]
 801eb40:	9b07      	ldr	r3, [sp, #28]
 801eb42:	2b00      	cmp	r3, #0
 801eb44:	dc03      	bgt.n	801eb4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801eb46:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801eb48:	2b00      	cmp	r3, #0
 801eb4a:	f340 8181 	ble.w	801ee50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801eb4e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eb50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eb54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eb58:	1e48      	subs	r0, r1, #1
 801eb5a:	f102 3cff 	add.w	ip, r2, #4294967295
 801eb5e:	2d00      	cmp	r5, #0
 801eb60:	f340 809b 	ble.w	801ec9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801eb64:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801eb68:	ea4f 4326 	mov.w	r3, r6, asr #16
 801eb6c:	d406      	bmi.n	801eb7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eb6e:	4586      	cmp	lr, r0
 801eb70:	da04      	bge.n	801eb7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eb72:	2b00      	cmp	r3, #0
 801eb74:	db02      	blt.n	801eb7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eb76:	4563      	cmp	r3, ip
 801eb78:	f2c0 8090 	blt.w	801ec9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eb7c:	f11e 0e01 	adds.w	lr, lr, #1
 801eb80:	f100 8084 	bmi.w	801ec8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb84:	4571      	cmp	r1, lr
 801eb86:	f2c0 8081 	blt.w	801ec8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb8a:	3301      	adds	r3, #1
 801eb8c:	d47e      	bmi.n	801ec8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb8e:	429a      	cmp	r2, r3
 801eb90:	db7c      	blt.n	801ec8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb92:	46aa      	mov	sl, r5
 801eb94:	46b9      	mov	r9, r7
 801eb96:	f1ba 0f00 	cmp.w	sl, #0
 801eb9a:	f340 8099 	ble.w	801ecd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801eb9e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eba0:	1421      	asrs	r1, r4, #16
 801eba2:	ea4f 4026 	mov.w	r0, r6, asr #16
 801eba6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ebaa:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ebae:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801ebb2:	f100 80d0 	bmi.w	801ed56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ebb6:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ebba:	4559      	cmp	r1, fp
 801ebbc:	f280 80cb 	bge.w	801ed56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ebc0:	2800      	cmp	r0, #0
 801ebc2:	f2c0 80c8 	blt.w	801ed56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ebc6:	f103 3bff 	add.w	fp, r3, #4294967295
 801ebca:	4558      	cmp	r0, fp
 801ebcc:	f280 80c3 	bge.w	801ed56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ebd0:	fa0f fe8e 	sxth.w	lr, lr
 801ebd4:	fb00 110e 	mla	r1, r0, lr, r1
 801ebd8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ebdc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801ebe0:	8841      	ldrh	r1, [r0, #2]
 801ebe2:	f1bc 0f00 	cmp.w	ip, #0
 801ebe6:	d00b      	beq.n	801ec00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801ebe8:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801ebec:	3b01      	subs	r3, #1
 801ebee:	005b      	lsls	r3, r3, #1
 801ebf0:	3302      	adds	r3, #2
 801ebf2:	eb00 0e03 	add.w	lr, r0, r3
 801ebf6:	5ac3      	ldrh	r3, [r0, r3]
 801ebf8:	9308      	str	r3, [sp, #32]
 801ebfa:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801ebfe:	9309      	str	r3, [sp, #36]	@ 0x24
 801ec00:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801ec04:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ec08:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801ec0c:	ea40 000b 	orr.w	r0, r0, fp
 801ec10:	fb12 f30c 	smulbb	r3, r2, ip
 801ec14:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ec18:	10db      	asrs	r3, r3, #3
 801ec1a:	f1cc 0e10 	rsb	lr, ip, #16
 801ec1e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ec22:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ec26:	ebae 0e02 	sub.w	lr, lr, r2
 801ec2a:	ea4b 0101 	orr.w	r1, fp, r1
 801ec2e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ec32:	4351      	muls	r1, r2
 801ec34:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ec36:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801ec3a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801ec3e:	0410      	lsls	r0, r2, #16
 801ec40:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ec44:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ec48:	4310      	orrs	r0, r2
 801ec4a:	9a08      	ldr	r2, [sp, #32]
 801ec4c:	9908      	ldr	r1, [sp, #32]
 801ec4e:	0412      	lsls	r2, r2, #16
 801ec50:	fb03 e000 	mla	r0, r3, r0, lr
 801ec54:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ec58:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801ec5c:	ea42 020e 	orr.w	r2, r2, lr
 801ec60:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ec64:	fb03 0302 	mla	r3, r3, r2, r0
 801ec68:	0d5a      	lsrs	r2, r3, #21
 801ec6a:	095b      	lsrs	r3, r3, #5
 801ec6c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ec70:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ec74:	4313      	orrs	r3, r2
 801ec76:	f8a9 3000 	strh.w	r3, [r9]
 801ec7a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ec7c:	441c      	add	r4, r3
 801ec7e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ec80:	f109 0902 	add.w	r9, r9, #2
 801ec84:	441e      	add	r6, r3
 801ec86:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ec8a:	e784      	b.n	801eb96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ec8c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ec8e:	441c      	add	r4, r3
 801ec90:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ec92:	3d01      	subs	r5, #1
 801ec94:	441e      	add	r6, r3
 801ec96:	3702      	adds	r7, #2
 801ec98:	e761      	b.n	801eb5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ec9a:	d01d      	beq.n	801ecd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801ec9c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801ec9e:	1e6b      	subs	r3, r5, #1
 801eca0:	fb00 4003 	mla	r0, r0, r3, r4
 801eca4:	1400      	asrs	r0, r0, #16
 801eca6:	f53f af74 	bmi.w	801eb92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ecaa:	3901      	subs	r1, #1
 801ecac:	4288      	cmp	r0, r1
 801ecae:	f6bf af70 	bge.w	801eb92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ecb2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801ecb4:	fb01 6303 	mla	r3, r1, r3, r6
 801ecb8:	141b      	asrs	r3, r3, #16
 801ecba:	f53f af6a 	bmi.w	801eb92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ecbe:	3a01      	subs	r2, #1
 801ecc0:	4293      	cmp	r3, r2
 801ecc2:	f6bf af66 	bge.w	801eb92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ecc6:	46a9      	mov	r9, r5
 801ecc8:	46ba      	mov	sl, r7
 801ecca:	f1b9 0f00 	cmp.w	r9, #0
 801ecce:	dc5a      	bgt.n	801ed86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801ecd0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ecd4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ecd8:	9b07      	ldr	r3, [sp, #28]
 801ecda:	2b00      	cmp	r3, #0
 801ecdc:	f340 80b8 	ble.w	801ee50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801ece0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ece4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ece8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ecec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ecee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ecf2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ecf6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ecfa:	eef0 6a62 	vmov.f32	s13, s5
 801ecfe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ed02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed06:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ed0a:	ee16 4a90 	vmov	r4, s13
 801ed0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ed12:	eef0 6a43 	vmov.f32	s13, s6
 801ed16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ed1a:	ee12 2a90 	vmov	r2, s5
 801ed1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ed22:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed26:	ee13 2a10 	vmov	r2, s6
 801ed2a:	931b      	str	r3, [sp, #108]	@ 0x6c
 801ed2c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ed2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed32:	931c      	str	r3, [sp, #112]	@ 0x70
 801ed34:	9b07      	ldr	r3, [sp, #28]
 801ed36:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ed38:	3b01      	subs	r3, #1
 801ed3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed3e:	9307      	str	r3, [sp, #28]
 801ed40:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ed42:	ee16 6a90 	vmov	r6, s13
 801ed46:	bf14      	ite	ne
 801ed48:	461d      	movne	r5, r3
 801ed4a:	4615      	moveq	r5, r2
 801ed4c:	eeb0 3a67 	vmov.f32	s6, s15
 801ed50:	eef0 2a47 	vmov.f32	s5, s14
 801ed54:	e6f4      	b.n	801eb40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ed56:	f111 0b01 	adds.w	fp, r1, #1
 801ed5a:	d48e      	bmi.n	801ec7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed5c:	45de      	cmp	lr, fp
 801ed5e:	db8c      	blt.n	801ec7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed60:	f110 0b01 	adds.w	fp, r0, #1
 801ed64:	d489      	bmi.n	801ec7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed66:	455b      	cmp	r3, fp
 801ed68:	db87      	blt.n	801ec7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed6a:	b21b      	sxth	r3, r3
 801ed6c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801ed70:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801ed74:	9300      	str	r3, [sp, #0]
 801ed76:	4642      	mov	r2, r8
 801ed78:	fa0f f38e 	sxth.w	r3, lr
 801ed7c:	4649      	mov	r1, r9
 801ed7e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801ed80:	f7ff fe4d 	bl	801ea1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801ed84:	e779      	b.n	801ec7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed86:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ed88:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ed8c:	1420      	asrs	r0, r4, #16
 801ed8e:	1431      	asrs	r1, r6, #16
 801ed90:	fb03 0101 	mla	r1, r3, r1, r0
 801ed94:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ed98:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801ed9c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801eda0:	8841      	ldrh	r1, [r0, #2]
 801eda2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801eda6:	f1be 0f00 	cmp.w	lr, #0
 801edaa:	d00b      	beq.n	801edc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801edac:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801edb0:	3b01      	subs	r3, #1
 801edb2:	005b      	lsls	r3, r3, #1
 801edb4:	3302      	adds	r3, #2
 801edb6:	eb00 0b03 	add.w	fp, r0, r3
 801edba:	5ac3      	ldrh	r3, [r0, r3]
 801edbc:	930a      	str	r3, [sp, #40]	@ 0x28
 801edbe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801edc2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801edc4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801edc8:	fb12 f30e 	smulbb	r3, r2, lr
 801edcc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801edd0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801edd4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801edd8:	10db      	asrs	r3, r3, #3
 801edda:	ea40 000c 	orr.w	r0, r0, ip
 801edde:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ede2:	f1ce 0c10 	rsb	ip, lr, #16
 801ede6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801edea:	ebac 0c02 	sub.w	ip, ip, r2
 801edee:	ea4b 0101 	orr.w	r1, fp, r1
 801edf2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801edf6:	4351      	muls	r1, r2
 801edf8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801edfa:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801edfe:	fb0c 1c00 	mla	ip, ip, r0, r1
 801ee02:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801ee06:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801ee0a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ee0c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801ee0e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ee12:	0412      	lsls	r2, r2, #16
 801ee14:	ea4b 0000 	orr.w	r0, fp, r0
 801ee18:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ee1c:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801ee20:	fb03 c000 	mla	r0, r3, r0, ip
 801ee24:	ea42 0b0b 	orr.w	fp, r2, fp
 801ee28:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801ee2c:	fb03 000b 	mla	r0, r3, fp, r0
 801ee30:	0d43      	lsrs	r3, r0, #21
 801ee32:	0940      	lsrs	r0, r0, #5
 801ee34:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ee38:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ee3c:	4318      	orrs	r0, r3
 801ee3e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ee40:	f82a 0b02 	strh.w	r0, [sl], #2
 801ee44:	441c      	add	r4, r3
 801ee46:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ee48:	f109 39ff 	add.w	r9, r9, #4294967295
 801ee4c:	441e      	add	r6, r3
 801ee4e:	e73c      	b.n	801ecca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801ee50:	b00f      	add	sp, #60	@ 0x3c
 801ee52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ee56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801ee56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee5a:	b085      	sub	sp, #20
 801ee5c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ee60:	9102      	str	r1, [sp, #8]
 801ee62:	2c00      	cmp	r4, #0
 801ee64:	fb04 7103 	mla	r1, r4, r3, r7
 801ee68:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801ee6c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ee70:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801ee74:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ee78:	f2c0 811b 	blt.w	801f0b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ee7c:	45a6      	cmp	lr, r4
 801ee7e:	f340 8118 	ble.w	801f0b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ee82:	2f00      	cmp	r7, #0
 801ee84:	f2c0 8113 	blt.w	801f0ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ee88:	42bb      	cmp	r3, r7
 801ee8a:	f340 8110 	ble.w	801f0ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ee8e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ee92:	1c7a      	adds	r2, r7, #1
 801ee94:	f100 8110 	bmi.w	801f0b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ee98:	4293      	cmp	r3, r2
 801ee9a:	f340 810d 	ble.w	801f0b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ee9e:	2e00      	cmp	r6, #0
 801eea0:	f000 810c 	beq.w	801f0bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801eea4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801eea8:	3401      	adds	r4, #1
 801eeaa:	f100 810b 	bmi.w	801f0c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801eeae:	45a6      	cmp	lr, r4
 801eeb0:	f340 8108 	ble.w	801f0c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801eeb4:	2800      	cmp	r0, #0
 801eeb6:	f000 8108 	beq.w	801f0ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801eeba:	2f00      	cmp	r7, #0
 801eebc:	f2c0 8100 	blt.w	801f0c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801eec0:	42bb      	cmp	r3, r7
 801eec2:	f340 80fd 	ble.w	801f0c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801eec6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801eeca:	3701      	adds	r7, #1
 801eecc:	f100 8100 	bmi.w	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801eed0:	42bb      	cmp	r3, r7
 801eed2:	f340 80fd 	ble.w	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801eed6:	2e00      	cmp	r6, #0
 801eed8:	f000 80fc 	beq.w	801f0d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801eedc:	3301      	adds	r3, #1
 801eede:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801eee2:	b2b6      	uxth	r6, r6
 801eee4:	b280      	uxth	r0, r0
 801eee6:	fb00 fe06 	mul.w	lr, r0, r6
 801eeea:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801eeee:	0136      	lsls	r6, r6, #4
 801eef0:	eba6 070e 	sub.w	r7, r6, lr
 801eef4:	b280      	uxth	r0, r0
 801eef6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801eefa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801eefe:	b2bf      	uxth	r7, r7
 801ef00:	1a1b      	subs	r3, r3, r0
 801ef02:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ef06:	b29b      	uxth	r3, r3
 801ef08:	fb0a f607 	mul.w	r6, sl, r7
 801ef0c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ef10:	fb0b 6603 	mla	r6, fp, r3, r6
 801ef14:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ef18:	fb00 6609 	mla	r6, r0, r9, r6
 801ef1c:	fb0e 6608 	mla	r6, lr, r8, r6
 801ef20:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ef24:	9600      	str	r6, [sp, #0]
 801ef26:	2e00      	cmp	r6, #0
 801ef28:	f000 80be 	beq.w	801f0a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801ef2c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ef30:	fb0b fc0c 	mul.w	ip, fp, ip
 801ef34:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801ef38:	fb0b f505 	mul.w	r5, fp, r5
 801ef3c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ef40:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801ef44:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ef48:	44dc      	add	ip, fp
 801ef4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef4e:	9501      	str	r5, [sp, #4]
 801ef50:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ef54:	9503      	str	r5, [sp, #12]
 801ef56:	9d01      	ldr	r5, [sp, #4]
 801ef58:	9e02      	ldr	r6, [sp, #8]
 801ef5a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ef5e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ef62:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ef66:	fb0a fc0c 	mul.w	ip, sl, ip
 801ef6a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ef6e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ef72:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ef76:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ef7a:	4465      	add	r5, ip
 801ef7c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ef80:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ef84:	fb09 fc0c 	mul.w	ip, r9, ip
 801ef88:	fb09 f904 	mul.w	r9, r9, r4
 801ef8c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801ef90:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ef94:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801ef98:	fb08 f404 	mul.w	r4, r8, r4
 801ef9c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801efa0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801efa4:	fb08 f802 	mul.w	r8, r8, r2
 801efa8:	fb0a fa01 	mul.w	sl, sl, r1
 801efac:	0a22      	lsrs	r2, r4, #8
 801efae:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801efb2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801efb6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801efba:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801efbe:	4414      	add	r4, r2
 801efc0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801efc4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801efc8:	0a2d      	lsrs	r5, r5, #8
 801efca:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801efce:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801efd2:	9a03      	ldr	r2, [sp, #12]
 801efd4:	8836      	ldrh	r6, [r6, #0]
 801efd6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801efda:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801efde:	437d      	muls	r5, r7
 801efe0:	4461      	add	r1, ip
 801efe2:	0a24      	lsrs	r4, r4, #8
 801efe4:	fb02 5503 	mla	r5, r2, r3, r5
 801efe8:	0a09      	lsrs	r1, r1, #8
 801efea:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801efee:	fb04 540e 	mla	r4, r4, lr, r5
 801eff2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801eff6:	fb01 4100 	mla	r1, r1, r0, r4
 801effa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801effe:	0a09      	lsrs	r1, r1, #8
 801f000:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f004:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f008:	fb07 f70a 	mul.w	r7, r7, sl
 801f00c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f010:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f014:	fb03 7101 	mla	r1, r3, r1, r7
 801f018:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f01c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f020:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f024:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f028:	fb00 e101 	mla	r1, r0, r1, lr
 801f02c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801f030:	9a00      	ldr	r2, [sp, #0]
 801f032:	b287      	uxth	r7, r0
 801f034:	437a      	muls	r2, r7
 801f036:	0a09      	lsrs	r1, r1, #8
 801f038:	1c53      	adds	r3, r2, #1
 801f03a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f03e:	4321      	orrs	r1, r4
 801f040:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f044:	1235      	asrs	r5, r6, #8
 801f046:	0c0a      	lsrs	r2, r1, #16
 801f048:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801f04c:	b2db      	uxtb	r3, r3
 801f04e:	fb12 f207 	smulbb	r2, r2, r7
 801f052:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f056:	fb05 2503 	mla	r5, r5, r3, r2
 801f05a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801f05e:	10f2      	asrs	r2, r6, #3
 801f060:	b2c8      	uxtb	r0, r1
 801f062:	00f6      	lsls	r6, r6, #3
 801f064:	fb14 f407 	smulbb	r4, r4, r7
 801f068:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f06c:	b2f6      	uxtb	r6, r6
 801f06e:	fb10 f007 	smulbb	r0, r0, r7
 801f072:	fb02 4203 	mla	r2, r2, r3, r4
 801f076:	b2ad      	uxth	r5, r5
 801f078:	fb06 0303 	mla	r3, r6, r3, r0
 801f07c:	b299      	uxth	r1, r3
 801f07e:	b294      	uxth	r4, r2
 801f080:	1c6b      	adds	r3, r5, #1
 801f082:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f086:	1c62      	adds	r2, r4, #1
 801f088:	1c4b      	adds	r3, r1, #1
 801f08a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f08e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801f092:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f096:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f09a:	0952      	lsrs	r2, r2, #5
 801f09c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f0a0:	432b      	orrs	r3, r5
 801f0a2:	4313      	orrs	r3, r2
 801f0a4:	9a02      	ldr	r2, [sp, #8]
 801f0a6:	8013      	strh	r3, [r2, #0]
 801f0a8:	b005      	add	sp, #20
 801f0aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0ae:	2500      	movs	r5, #0
 801f0b0:	e6ef      	b.n	801ee92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801f0b2:	2100      	movs	r1, #0
 801f0b4:	460d      	mov	r5, r1
 801f0b6:	e6f7      	b.n	801eea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f0b8:	2100      	movs	r1, #0
 801f0ba:	e6f5      	b.n	801eea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f0bc:	4631      	mov	r1, r6
 801f0be:	e6f3      	b.n	801eea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f0c0:	2400      	movs	r4, #0
 801f0c2:	e702      	b.n	801eeca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801f0c4:	2200      	movs	r2, #0
 801f0c6:	4614      	mov	r4, r2
 801f0c8:	e70b      	b.n	801eee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f0ca:	4602      	mov	r2, r0
 801f0cc:	4604      	mov	r4, r0
 801f0ce:	e708      	b.n	801eee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f0d0:	2200      	movs	r2, #0
 801f0d2:	e706      	b.n	801eee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f0d4:	4632      	mov	r2, r6
 801f0d6:	e704      	b.n	801eee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801f0d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f0d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0dc:	b09d      	sub	sp, #116	@ 0x74
 801f0de:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801f0e2:	9219      	str	r2, [sp, #100]	@ 0x64
 801f0e4:	9307      	str	r3, [sp, #28]
 801f0e6:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801f0e8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801f0ec:	931a      	str	r3, [sp, #104]	@ 0x68
 801f0ee:	9117      	str	r1, [sp, #92]	@ 0x5c
 801f0f0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801f0f4:	901b      	str	r0, [sp, #108]	@ 0x6c
 801f0f6:	6850      	ldr	r0, [r2, #4]
 801f0f8:	6812      	ldr	r2, [r2, #0]
 801f0fa:	fb00 1303 	mla	r3, r0, r3, r1
 801f0fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f102:	930a      	str	r3, [sp, #40]	@ 0x28
 801f104:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f106:	681b      	ldr	r3, [r3, #0]
 801f108:	9310      	str	r3, [sp, #64]	@ 0x40
 801f10a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801f10e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f110:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f112:	2b00      	cmp	r3, #0
 801f114:	dc03      	bgt.n	801f11e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801f116:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801f118:	2b00      	cmp	r3, #0
 801f11a:	f340 8375 	ble.w	801f808 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f11e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f120:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f124:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f128:	1e48      	subs	r0, r1, #1
 801f12a:	1e57      	subs	r7, r2, #1
 801f12c:	9b07      	ldr	r3, [sp, #28]
 801f12e:	2b00      	cmp	r3, #0
 801f130:	f340 818e 	ble.w	801f450 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f134:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f138:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f13c:	d406      	bmi.n	801f14c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f13e:	4584      	cmp	ip, r0
 801f140:	da04      	bge.n	801f14c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f142:	2b00      	cmp	r3, #0
 801f144:	db02      	blt.n	801f14c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f146:	42bb      	cmp	r3, r7
 801f148:	f2c0 8183 	blt.w	801f452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801f14c:	f11c 0c01 	adds.w	ip, ip, #1
 801f150:	f100 8173 	bmi.w	801f43a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f154:	4561      	cmp	r1, ip
 801f156:	f2c0 8170 	blt.w	801f43a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f15a:	3301      	adds	r3, #1
 801f15c:	f100 816d 	bmi.w	801f43a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f160:	429a      	cmp	r2, r3
 801f162:	f2c0 816a 	blt.w	801f43a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f166:	9b07      	ldr	r3, [sp, #28]
 801f168:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f16a:	9318      	str	r3, [sp, #96]	@ 0x60
 801f16c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f16e:	2b00      	cmp	r3, #0
 801f170:	f340 818c 	ble.w	801f48c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801f174:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801f176:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f178:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f17c:	689b      	ldr	r3, [r3, #8]
 801f17e:	1422      	asrs	r2, r4, #16
 801f180:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f184:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f188:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f18c:	f100 81cd 	bmi.w	801f52a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f190:	f103 38ff 	add.w	r8, r3, #4294967295
 801f194:	4542      	cmp	r2, r8
 801f196:	f280 81c8 	bge.w	801f52a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f19a:	f1bc 0f00 	cmp.w	ip, #0
 801f19e:	f2c0 81c4 	blt.w	801f52a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f1a2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f1a6:	45c4      	cmp	ip, r8
 801f1a8:	f280 81bf 	bge.w	801f52a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f1ac:	b21b      	sxth	r3, r3
 801f1ae:	fb0c 2203 	mla	r2, ip, r3, r2
 801f1b2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f1b4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f1b8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f1bc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f1c0:	2800      	cmp	r0, #0
 801f1c2:	f000 81a9 	beq.w	801f518 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801f1c6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f1ca:	950c      	str	r5, [sp, #48]	@ 0x30
 801f1cc:	0e2d      	lsrs	r5, r5, #24
 801f1ce:	9513      	str	r5, [sp, #76]	@ 0x4c
 801f1d0:	b181      	cbz	r1, 801f1f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f1d2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f1d6:	3b01      	subs	r3, #1
 801f1d8:	009b      	lsls	r3, r3, #2
 801f1da:	3304      	adds	r3, #4
 801f1dc:	eb08 0c03 	add.w	ip, r8, r3
 801f1e0:	f858 3003 	ldr.w	r3, [r8, r3]
 801f1e4:	9308      	str	r3, [sp, #32]
 801f1e6:	0e1b      	lsrs	r3, r3, #24
 801f1e8:	9311      	str	r3, [sp, #68]	@ 0x44
 801f1ea:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f1ee:	930d      	str	r3, [sp, #52]	@ 0x34
 801f1f0:	0e1b      	lsrs	r3, r3, #24
 801f1f2:	9314      	str	r3, [sp, #80]	@ 0x50
 801f1f4:	b280      	uxth	r0, r0
 801f1f6:	b289      	uxth	r1, r1
 801f1f8:	fb00 f901 	mul.w	r9, r0, r1
 801f1fc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f200:	0100      	lsls	r0, r0, #4
 801f202:	eba0 0809 	sub.w	r8, r0, r9
 801f206:	b289      	uxth	r1, r1
 801f208:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801f20c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f20e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f210:	fa1f f888 	uxth.w	r8, r8
 801f214:	1a5b      	subs	r3, r3, r1
 801f216:	b29b      	uxth	r3, r3
 801f218:	fb08 f000 	mul.w	r0, r8, r0
 801f21c:	fb03 000e 	mla	r0, r3, lr, r0
 801f220:	fb01 0005 	mla	r0, r1, r5, r0
 801f224:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f226:	fb09 0005 	mla	r0, r9, r5, r0
 801f22a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801f22e:	2800      	cmp	r0, #0
 801f230:	f000 80fa 	beq.w	801f428 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f234:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801f238:	d01b      	beq.n	801f272 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801f23a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801f23e:	fb0e fa0a 	mul.w	sl, lr, sl
 801f242:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f246:	fb0e fe02 	mul.w	lr, lr, r2
 801f24a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f24e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f252:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f256:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801f25a:	4452      	add	r2, sl
 801f25c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f260:	0a12      	lsrs	r2, r2, #8
 801f262:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f266:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f26a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f26e:	ea42 020c 	orr.w	r2, r2, ip
 801f272:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f274:	2dff      	cmp	r5, #255	@ 0xff
 801f276:	d021      	beq.n	801f2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801f278:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f27a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f27e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f280:	fb05 fb0b 	mul.w	fp, r5, fp
 801f284:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f286:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f28a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f28c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f290:	fb05 fa0a 	mul.w	sl, r5, sl
 801f294:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f298:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f29c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f2a0:	44de      	add	lr, fp
 801f2a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f2a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f2aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2ae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2b2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f2b6:	ea4e 050a 	orr.w	r5, lr, sl
 801f2ba:	950c      	str	r5, [sp, #48]	@ 0x30
 801f2bc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f2be:	2dff      	cmp	r5, #255	@ 0xff
 801f2c0:	d021      	beq.n	801f306 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f2c2:	9d08      	ldr	r5, [sp, #32]
 801f2c4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f2c8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f2ca:	fb05 fb0b 	mul.w	fp, r5, fp
 801f2ce:	9d08      	ldr	r5, [sp, #32]
 801f2d0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f2d4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f2d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f2da:	fb05 fa0a 	mul.w	sl, r5, sl
 801f2de:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2e2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f2e6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f2ea:	44de      	add	lr, fp
 801f2ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f2f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f2f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2f8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f300:	ea4e 050a 	orr.w	r5, lr, sl
 801f304:	9508      	str	r5, [sp, #32]
 801f306:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f308:	2dff      	cmp	r5, #255	@ 0xff
 801f30a:	d021      	beq.n	801f350 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801f30c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f30e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f312:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f314:	fb05 fb0b 	mul.w	fp, r5, fp
 801f318:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f31a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f31e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f320:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f324:	fb05 fa0a 	mul.w	sl, r5, sl
 801f328:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f32c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f330:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f334:	44de      	add	lr, fp
 801f336:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f33a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f33e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f342:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f346:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f34a:	ea4e 050a 	orr.w	r5, lr, sl
 801f34e:	950d      	str	r5, [sp, #52]	@ 0x34
 801f350:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f352:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f356:	9d08      	ldr	r5, [sp, #32]
 801f358:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801f35c:	fb08 fc0c 	mul.w	ip, r8, ip
 801f360:	fb03 cc0e 	mla	ip, r3, lr, ip
 801f364:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f368:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f36a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f36e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f372:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f374:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f378:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f37c:	fb08 f80e 	mul.w	r8, r8, lr
 801f380:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f384:	fb03 8202 	mla	r2, r3, r2, r8
 801f388:	9b08      	ldr	r3, [sp, #32]
 801f38a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f38c:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801f390:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f392:	fb01 220a 	mla	r2, r1, sl, r2
 801f396:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801f39a:	fb09 2901 	mla	r9, r9, r1, r2
 801f39e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f3a0:	883b      	ldrh	r3, [r7, #0]
 801f3a2:	4342      	muls	r2, r0
 801f3a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f3a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f3ac:	1c50      	adds	r0, r2, #1
 801f3ae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f3b2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801f3b6:	ea4c 0c09 	orr.w	ip, ip, r9
 801f3ba:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801f3be:	1219      	asrs	r1, r3, #8
 801f3c0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801f3c4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801f3c8:	b2c0      	uxtb	r0, r0
 801f3ca:	fb12 f205 	smulbb	r2, r2, r5
 801f3ce:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f3d2:	fb01 2100 	mla	r1, r1, r0, r2
 801f3d6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801f3da:	10da      	asrs	r2, r3, #3
 801f3dc:	fa5f fc8c 	uxtb.w	ip, ip
 801f3e0:	00db      	lsls	r3, r3, #3
 801f3e2:	fb1c fc05 	smulbb	ip, ip, r5
 801f3e6:	b2db      	uxtb	r3, r3
 801f3e8:	b289      	uxth	r1, r1
 801f3ea:	fb03 c300 	mla	r3, r3, r0, ip
 801f3ee:	fa1f fc83 	uxth.w	ip, r3
 801f3f2:	1c4b      	adds	r3, r1, #1
 801f3f4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f3f8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f3fc:	fb1e fe05 	smulbb	lr, lr, r5
 801f400:	f10c 0301 	add.w	r3, ip, #1
 801f404:	fb02 e200 	mla	r2, r2, r0, lr
 801f408:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f40c:	b292      	uxth	r2, r2
 801f40e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801f412:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f416:	430b      	orrs	r3, r1
 801f418:	1c51      	adds	r1, r2, #1
 801f41a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f41e:	0952      	lsrs	r2, r2, #5
 801f420:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f424:	4313      	orrs	r3, r2
 801f426:	803b      	strh	r3, [r7, #0]
 801f428:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f42a:	441c      	add	r4, r3
 801f42c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f42e:	441e      	add	r6, r3
 801f430:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f432:	3b01      	subs	r3, #1
 801f434:	3702      	adds	r7, #2
 801f436:	9318      	str	r3, [sp, #96]	@ 0x60
 801f438:	e698      	b.n	801f16c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f43a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f43c:	441c      	add	r4, r3
 801f43e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f440:	441e      	add	r6, r3
 801f442:	9b07      	ldr	r3, [sp, #28]
 801f444:	3b01      	subs	r3, #1
 801f446:	9307      	str	r3, [sp, #28]
 801f448:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f44a:	3302      	adds	r3, #2
 801f44c:	930a      	str	r3, [sp, #40]	@ 0x28
 801f44e:	e66d      	b.n	801f12c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801f450:	d023      	beq.n	801f49a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801f452:	9b07      	ldr	r3, [sp, #28]
 801f454:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801f456:	3b01      	subs	r3, #1
 801f458:	fb00 4003 	mla	r0, r0, r3, r4
 801f45c:	1400      	asrs	r0, r0, #16
 801f45e:	f53f ae82 	bmi.w	801f166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f462:	3901      	subs	r1, #1
 801f464:	4288      	cmp	r0, r1
 801f466:	f6bf ae7e 	bge.w	801f166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f46a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801f46c:	fb01 6303 	mla	r3, r1, r3, r6
 801f470:	141b      	asrs	r3, r3, #16
 801f472:	f53f ae78 	bmi.w	801f166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f476:	3a01      	subs	r2, #1
 801f478:	4293      	cmp	r3, r2
 801f47a:	f6bf ae74 	bge.w	801f166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f47e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f482:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801f486:	f1bb 0f00 	cmp.w	fp, #0
 801f48a:	dc6c      	bgt.n	801f566 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f48c:	9b07      	ldr	r3, [sp, #28]
 801f48e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f492:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f494:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f498:	930a      	str	r3, [sp, #40]	@ 0x28
 801f49a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f49c:	2b00      	cmp	r3, #0
 801f49e:	f340 81b3 	ble.w	801f808 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f4a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f4a6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f4aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f4ae:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f4b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f4b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f4b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f4bc:	eef0 6a62 	vmov.f32	s13, s5
 801f4c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f4c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f4c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f4cc:	ee16 4a90 	vmov	r4, s13
 801f4d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f4d4:	eef0 6a43 	vmov.f32	s13, s6
 801f4d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f4dc:	ee12 2a90 	vmov	r2, s5
 801f4e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f4e4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4e8:	ee13 2a10 	vmov	r2, s6
 801f4ec:	9329      	str	r3, [sp, #164]	@ 0xa4
 801f4ee:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f4f0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4f4:	932a      	str	r3, [sp, #168]	@ 0xa8
 801f4f6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f4f8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801f4fa:	3b01      	subs	r3, #1
 801f4fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f500:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f502:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f504:	bf08      	it	eq
 801f506:	4613      	moveq	r3, r2
 801f508:	ee16 6a90 	vmov	r6, s13
 801f50c:	9307      	str	r3, [sp, #28]
 801f50e:	eeb0 3a67 	vmov.f32	s6, s15
 801f512:	eef0 2a47 	vmov.f32	s5, s14
 801f516:	e5fb      	b.n	801f110 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f518:	2900      	cmp	r1, #0
 801f51a:	f43f ae6b 	beq.w	801f1f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f51e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f522:	9308      	str	r3, [sp, #32]
 801f524:	0e1b      	lsrs	r3, r3, #24
 801f526:	9311      	str	r3, [sp, #68]	@ 0x44
 801f528:	e664      	b.n	801f1f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f52a:	f112 0801 	adds.w	r8, r2, #1
 801f52e:	f53f af7b 	bmi.w	801f428 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f532:	4543      	cmp	r3, r8
 801f534:	f6ff af78 	blt.w	801f428 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f538:	f11c 0801 	adds.w	r8, ip, #1
 801f53c:	f53f af74 	bmi.w	801f428 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f540:	45c6      	cmp	lr, r8
 801f542:	f6ff af71 	blt.w	801f428 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f546:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801f548:	9201      	str	r2, [sp, #4]
 801f54a:	fa0f f28e 	sxth.w	r2, lr
 801f54e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801f552:	e9cd c002 	strd	ip, r0, [sp, #8]
 801f556:	9200      	str	r2, [sp, #0]
 801f558:	b21b      	sxth	r3, r3
 801f55a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f55c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801f55e:	4639      	mov	r1, r7
 801f560:	f7ff fc79 	bl	801ee56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801f564:	e760      	b.n	801f428 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f566:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f568:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f56a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f56e:	1427      	asrs	r7, r4, #16
 801f570:	1433      	asrs	r3, r6, #16
 801f572:	fb01 7303 	mla	r3, r1, r3, r7
 801f576:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801f57a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f57e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f582:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f586:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f58a:	2a00      	cmp	r2, #0
 801f58c:	f000 8133 	beq.w	801f7f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801f590:	687d      	ldr	r5, [r7, #4]
 801f592:	950e      	str	r5, [sp, #56]	@ 0x38
 801f594:	0e2d      	lsrs	r5, r5, #24
 801f596:	9515      	str	r5, [sp, #84]	@ 0x54
 801f598:	b178      	cbz	r0, 801f5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f59a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801f59e:	3901      	subs	r1, #1
 801f5a0:	0089      	lsls	r1, r1, #2
 801f5a2:	3104      	adds	r1, #4
 801f5a4:	eb07 0e01 	add.w	lr, r7, r1
 801f5a8:	5879      	ldr	r1, [r7, r1]
 801f5aa:	9109      	str	r1, [sp, #36]	@ 0x24
 801f5ac:	0e09      	lsrs	r1, r1, #24
 801f5ae:	9112      	str	r1, [sp, #72]	@ 0x48
 801f5b0:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f5b4:	910f      	str	r1, [sp, #60]	@ 0x3c
 801f5b6:	0e09      	lsrs	r1, r1, #24
 801f5b8:	9116      	str	r1, [sp, #88]	@ 0x58
 801f5ba:	b292      	uxth	r2, r2
 801f5bc:	b280      	uxth	r0, r0
 801f5be:	fb02 f800 	mul.w	r8, r2, r0
 801f5c2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f5c6:	0112      	lsls	r2, r2, #4
 801f5c8:	eba2 0e08 	sub.w	lr, r2, r8
 801f5cc:	b280      	uxth	r0, r0
 801f5ce:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801f5d2:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801f5d4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f5d6:	fa1f fe8e 	uxth.w	lr, lr
 801f5da:	1a12      	subs	r2, r2, r0
 801f5dc:	b292      	uxth	r2, r2
 801f5de:	fb0e f101 	mul.w	r1, lr, r1
 801f5e2:	fb02 110c 	mla	r1, r2, ip, r1
 801f5e6:	fb00 1105 	mla	r1, r0, r5, r1
 801f5ea:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f5ec:	fb08 1105 	mla	r1, r8, r5, r1
 801f5f0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f5f4:	2900      	cmp	r1, #0
 801f5f6:	f000 80f5 	beq.w	801f7e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801f5fa:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f5fe:	d019      	beq.n	801f634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801f600:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f604:	fb0c fa0a 	mul.w	sl, ip, sl
 801f608:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f60c:	fb0c fc03 	mul.w	ip, ip, r3
 801f610:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f614:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f618:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f61c:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f620:	4453      	add	r3, sl
 801f622:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f626:	0a1b      	lsrs	r3, r3, #8
 801f628:	0a3f      	lsrs	r7, r7, #8
 801f62a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f62e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f632:	433b      	orrs	r3, r7
 801f634:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f636:	2dff      	cmp	r5, #255	@ 0xff
 801f638:	d020      	beq.n	801f67c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801f63a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f63c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f640:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f642:	436f      	muls	r7, r5
 801f644:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f646:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f64a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f64c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f650:	fb05 fa0a 	mul.w	sl, r5, sl
 801f654:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f658:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f65c:	44bc      	add	ip, r7
 801f65e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f662:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f666:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f66a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f66e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f672:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f676:	ea4c 050a 	orr.w	r5, ip, sl
 801f67a:	950e      	str	r5, [sp, #56]	@ 0x38
 801f67c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f67e:	2dff      	cmp	r5, #255	@ 0xff
 801f680:	d020      	beq.n	801f6c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801f682:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f684:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f688:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f68a:	436f      	muls	r7, r5
 801f68c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f68e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f692:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f694:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f698:	fb05 fa0a 	mul.w	sl, r5, sl
 801f69c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f6a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f6a4:	44bc      	add	ip, r7
 801f6a6:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f6aa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f6ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f6b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f6b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f6ba:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f6be:	ea4c 050a 	orr.w	r5, ip, sl
 801f6c2:	9509      	str	r5, [sp, #36]	@ 0x24
 801f6c4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f6c6:	2dff      	cmp	r5, #255	@ 0xff
 801f6c8:	d020      	beq.n	801f70c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801f6ca:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f6cc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f6d0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f6d2:	436f      	muls	r7, r5
 801f6d4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f6d6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f6da:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f6dc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f6e0:	fb05 fa0a 	mul.w	sl, r5, sl
 801f6e4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f6e8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f6ec:	44bc      	add	ip, r7
 801f6ee:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f6f2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f6f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f6fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f6fe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f702:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f706:	ea4c 050a 	orr.w	r5, ip, sl
 801f70a:	950f      	str	r5, [sp, #60]	@ 0x3c
 801f70c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f70e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f712:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f714:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f718:	fb0e f707 	mul.w	r7, lr, r7
 801f71c:	fb02 770c 	mla	r7, r2, ip, r7
 801f720:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f724:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f726:	fb00 770c 	mla	r7, r0, ip, r7
 801f72a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f72e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f730:	fb08 770c 	mla	r7, r8, ip, r7
 801f734:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f738:	fb0e fe0c 	mul.w	lr, lr, ip
 801f73c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f740:	fb02 e303 	mla	r3, r2, r3, lr
 801f744:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f746:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f748:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801f74c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f74e:	fb00 330a 	mla	r3, r0, sl, r3
 801f752:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801f756:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f75a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f75c:	f8b9 0000 	ldrh.w	r0, [r9]
 801f760:	4359      	muls	r1, r3
 801f762:	0a3f      	lsrs	r7, r7, #8
 801f764:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f768:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f76c:	1c4b      	adds	r3, r1, #1
 801f76e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f772:	ea47 070c 	orr.w	r7, r7, ip
 801f776:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f77a:	1202      	asrs	r2, r0, #8
 801f77c:	0c3b      	lsrs	r3, r7, #16
 801f77e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f782:	b2c9      	uxtb	r1, r1
 801f784:	fb13 f305 	smulbb	r3, r3, r5
 801f788:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801f78c:	fb02 3201 	mla	r2, r2, r1, r3
 801f790:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f794:	10c3      	asrs	r3, r0, #3
 801f796:	b2ff      	uxtb	r7, r7
 801f798:	00c0      	lsls	r0, r0, #3
 801f79a:	b2c0      	uxtb	r0, r0
 801f79c:	fb17 f705 	smulbb	r7, r7, r5
 801f7a0:	fb00 7001 	mla	r0, r0, r1, r7
 801f7a4:	b292      	uxth	r2, r2
 801f7a6:	fb1c fc05 	smulbb	ip, ip, r5
 801f7aa:	b280      	uxth	r0, r0
 801f7ac:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f7b0:	fb03 c301 	mla	r3, r3, r1, ip
 801f7b4:	1c51      	adds	r1, r2, #1
 801f7b6:	f100 0c01 	add.w	ip, r0, #1
 801f7ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f7be:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801f7c2:	b29b      	uxth	r3, r3
 801f7c4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f7c8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801f7cc:	ea4c 0202 	orr.w	r2, ip, r2
 801f7d0:	f103 0c01 	add.w	ip, r3, #1
 801f7d4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f7d8:	095b      	lsrs	r3, r3, #5
 801f7da:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f7de:	431a      	orrs	r2, r3
 801f7e0:	f8a9 2000 	strh.w	r2, [r9]
 801f7e4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f7e6:	441c      	add	r4, r3
 801f7e8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f7ea:	f109 0902 	add.w	r9, r9, #2
 801f7ee:	441e      	add	r6, r3
 801f7f0:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f7f4:	e647      	b.n	801f486 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f7f6:	2800      	cmp	r0, #0
 801f7f8:	f43f aedf 	beq.w	801f5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f7fc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801f800:	9109      	str	r1, [sp, #36]	@ 0x24
 801f802:	0e09      	lsrs	r1, r1, #24
 801f804:	9112      	str	r1, [sp, #72]	@ 0x48
 801f806:	e6d8      	b.n	801f5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f808:	b01d      	add	sp, #116	@ 0x74
 801f80a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f80e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801f80e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f812:	b085      	sub	sp, #20
 801f814:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801f818:	9102      	str	r1, [sp, #8]
 801f81a:	2c00      	cmp	r4, #0
 801f81c:	fb04 7103 	mla	r1, r4, r3, r7
 801f820:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801f824:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f828:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801f82c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f830:	f2c0 810c 	blt.w	801fa4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f834:	45a6      	cmp	lr, r4
 801f836:	f340 8109 	ble.w	801fa4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f83a:	2f00      	cmp	r7, #0
 801f83c:	f2c0 8104 	blt.w	801fa48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f840:	42bb      	cmp	r3, r7
 801f842:	f340 8101 	ble.w	801fa48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f846:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f84a:	1c7a      	adds	r2, r7, #1
 801f84c:	f100 8101 	bmi.w	801fa52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f850:	4293      	cmp	r3, r2
 801f852:	f340 80fe 	ble.w	801fa52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f856:	2e00      	cmp	r6, #0
 801f858:	f000 80fd 	beq.w	801fa56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801f85c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f860:	3401      	adds	r4, #1
 801f862:	f100 80fc 	bmi.w	801fa5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f866:	45a6      	cmp	lr, r4
 801f868:	f340 80f9 	ble.w	801fa5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f86c:	2800      	cmp	r0, #0
 801f86e:	f000 80f9 	beq.w	801fa64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801f872:	2f00      	cmp	r7, #0
 801f874:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801f878:	f2c0 80ef 	blt.w	801fa5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f87c:	42bb      	cmp	r3, r7
 801f87e:	f340 80ec 	ble.w	801fa5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f882:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f886:	3701      	adds	r7, #1
 801f888:	f100 80ef 	bmi.w	801fa6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f88c:	42bb      	cmp	r3, r7
 801f88e:	f340 80ec 	ble.w	801fa6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f892:	2e00      	cmp	r6, #0
 801f894:	f000 80eb 	beq.w	801fa6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801f898:	6852      	ldr	r2, [r2, #4]
 801f89a:	b2b6      	uxth	r6, r6
 801f89c:	b280      	uxth	r0, r0
 801f89e:	fb00 fe06 	mul.w	lr, r0, r6
 801f8a2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f8a6:	0136      	lsls	r6, r6, #4
 801f8a8:	eba6 070e 	sub.w	r7, r6, lr
 801f8ac:	b280      	uxth	r0, r0
 801f8ae:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801f8b2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f8b6:	b2bf      	uxth	r7, r7
 801f8b8:	1a1b      	subs	r3, r3, r0
 801f8ba:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f8be:	b29b      	uxth	r3, r3
 801f8c0:	fb07 f60a 	mul.w	r6, r7, sl
 801f8c4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f8c8:	fb0b 6603 	mla	r6, fp, r3, r6
 801f8cc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f8d0:	fb00 6609 	mla	r6, r0, r9, r6
 801f8d4:	fb0e 6608 	mla	r6, lr, r8, r6
 801f8d8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f8dc:	9600      	str	r6, [sp, #0]
 801f8de:	2e00      	cmp	r6, #0
 801f8e0:	f000 80af 	beq.w	801fa42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801f8e4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f8e8:	fb0b fc0c 	mul.w	ip, fp, ip
 801f8ec:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801f8f0:	fb0b f505 	mul.w	r5, fp, r5
 801f8f4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f8f8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801f8fc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f900:	44dc      	add	ip, fp
 801f902:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f906:	9501      	str	r5, [sp, #4]
 801f908:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801f90c:	9503      	str	r5, [sp, #12]
 801f90e:	9d01      	ldr	r5, [sp, #4]
 801f910:	9e02      	ldr	r6, [sp, #8]
 801f912:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801f916:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f91a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801f91e:	fb0a fc0c 	mul.w	ip, sl, ip
 801f922:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f926:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f92a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f92e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f932:	4465      	add	r5, ip
 801f934:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f938:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801f93c:	fb09 fc0c 	mul.w	ip, r9, ip
 801f940:	fb09 f904 	mul.w	r9, r9, r4
 801f944:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801f948:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f94c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801f950:	fb08 f404 	mul.w	r4, r8, r4
 801f954:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f958:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f95c:	fb08 f802 	mul.w	r8, r8, r2
 801f960:	fb0a fa01 	mul.w	sl, sl, r1
 801f964:	0a22      	lsrs	r2, r4, #8
 801f966:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801f96a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f96e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801f972:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f976:	4414      	add	r4, r2
 801f978:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f97c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801f980:	0a2d      	lsrs	r5, r5, #8
 801f982:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f986:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f98a:	9a03      	ldr	r2, [sp, #12]
 801f98c:	8836      	ldrh	r6, [r6, #0]
 801f98e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f992:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f996:	437d      	muls	r5, r7
 801f998:	4461      	add	r1, ip
 801f99a:	0a24      	lsrs	r4, r4, #8
 801f99c:	fb02 5503 	mla	r5, r2, r3, r5
 801f9a0:	0a09      	lsrs	r1, r1, #8
 801f9a2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801f9a6:	fb04 540e 	mla	r4, r4, lr, r5
 801f9aa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f9ae:	fb01 4100 	mla	r1, r1, r0, r4
 801f9b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f9b6:	0a09      	lsrs	r1, r1, #8
 801f9b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f9bc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f9c0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f9c4:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f9c8:	fb07 f70a 	mul.w	r7, r7, sl
 801f9cc:	fb03 7101 	mla	r1, r3, r1, r7
 801f9d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f9d4:	9b00      	ldr	r3, [sp, #0]
 801f9d6:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f9da:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f9de:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f9e2:	fb00 e101 	mla	r1, r0, r1, lr
 801f9e6:	43da      	mvns	r2, r3
 801f9e8:	1233      	asrs	r3, r6, #8
 801f9ea:	b2d2      	uxtb	r2, r2
 801f9ec:	10f0      	asrs	r0, r6, #3
 801f9ee:	0a09      	lsrs	r1, r1, #8
 801f9f0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f9f4:	00f6      	lsls	r6, r6, #3
 801f9f6:	4353      	muls	r3, r2
 801f9f8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f9fc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fa00:	b2f6      	uxtb	r6, r6
 801fa02:	4321      	orrs	r1, r4
 801fa04:	4350      	muls	r0, r2
 801fa06:	4356      	muls	r6, r2
 801fa08:	1c5a      	adds	r2, r3, #1
 801fa0a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fa0e:	0c0b      	lsrs	r3, r1, #16
 801fa10:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fa14:	1c42      	adds	r2, r0, #1
 801fa16:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fa1a:	0a0a      	lsrs	r2, r1, #8
 801fa1c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801fa20:	021b      	lsls	r3, r3, #8
 801fa22:	00d2      	lsls	r2, r2, #3
 801fa24:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fa28:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801fa2c:	4313      	orrs	r3, r2
 801fa2e:	1c72      	adds	r2, r6, #1
 801fa30:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801fa34:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801fa38:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801fa3c:	4319      	orrs	r1, r3
 801fa3e:	9b02      	ldr	r3, [sp, #8]
 801fa40:	8019      	strh	r1, [r3, #0]
 801fa42:	b005      	add	sp, #20
 801fa44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa48:	2500      	movs	r5, #0
 801fa4a:	e6fe      	b.n	801f84a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801fa4c:	2100      	movs	r1, #0
 801fa4e:	460d      	mov	r5, r1
 801fa50:	e706      	b.n	801f860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801fa52:	2100      	movs	r1, #0
 801fa54:	e704      	b.n	801f860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801fa56:	4631      	mov	r1, r6
 801fa58:	e702      	b.n	801f860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801fa5a:	2400      	movs	r4, #0
 801fa5c:	e713      	b.n	801f886 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801fa5e:	2200      	movs	r2, #0
 801fa60:	4614      	mov	r4, r2
 801fa62:	e71a      	b.n	801f89a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fa64:	4602      	mov	r2, r0
 801fa66:	4604      	mov	r4, r0
 801fa68:	e717      	b.n	801f89a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fa6a:	2200      	movs	r2, #0
 801fa6c:	e715      	b.n	801f89a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fa6e:	4632      	mov	r2, r6
 801fa70:	e713      	b.n	801f89a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801fa74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa78:	b09b      	sub	sp, #108	@ 0x6c
 801fa7a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801fa7e:	9218      	str	r2, [sp, #96]	@ 0x60
 801fa80:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801fa82:	9116      	str	r1, [sp, #88]	@ 0x58
 801fa84:	9307      	str	r3, [sp, #28]
 801fa86:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801fa8a:	9019      	str	r0, [sp, #100]	@ 0x64
 801fa8c:	6850      	ldr	r0, [r2, #4]
 801fa8e:	6812      	ldr	r2, [r2, #0]
 801fa90:	fb00 1303 	mla	r3, r0, r3, r1
 801fa94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fa98:	930a      	str	r3, [sp, #40]	@ 0x28
 801fa9a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801fa9c:	681b      	ldr	r3, [r3, #0]
 801fa9e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801faa0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801faa2:	2b00      	cmp	r3, #0
 801faa4:	dc03      	bgt.n	801faae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801faa6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801faa8:	2b00      	cmp	r3, #0
 801faaa:	f340 8386 	ble.w	80201ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801faae:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801fab0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fab4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fab8:	1e48      	subs	r0, r1, #1
 801faba:	1e57      	subs	r7, r2, #1
 801fabc:	9b07      	ldr	r3, [sp, #28]
 801fabe:	2b00      	cmp	r3, #0
 801fac0:	f340 8166 	ble.w	801fd90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801fac4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fac8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801facc:	d406      	bmi.n	801fadc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801face:	4584      	cmp	ip, r0
 801fad0:	da04      	bge.n	801fadc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fad2:	2b00      	cmp	r3, #0
 801fad4:	db02      	blt.n	801fadc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fad6:	42bb      	cmp	r3, r7
 801fad8:	f2c0 815b 	blt.w	801fd92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801fadc:	f11c 0c01 	adds.w	ip, ip, #1
 801fae0:	f100 814b 	bmi.w	801fd7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fae4:	4561      	cmp	r1, ip
 801fae6:	f2c0 8148 	blt.w	801fd7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801faea:	3301      	adds	r3, #1
 801faec:	f100 8145 	bmi.w	801fd7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801faf0:	429a      	cmp	r2, r3
 801faf2:	f2c0 8142 	blt.w	801fd7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801faf6:	9b07      	ldr	r3, [sp, #28]
 801faf8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801fafa:	9317      	str	r3, [sp, #92]	@ 0x5c
 801fafc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fafe:	2b00      	cmp	r3, #0
 801fb00:	f340 8165 	ble.w	801fdce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fb04:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801fb06:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801fb08:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fb0c:	689b      	ldr	r3, [r3, #8]
 801fb0e:	1422      	asrs	r2, r4, #16
 801fb10:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801fb14:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801fb18:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fb1c:	f100 81d5 	bmi.w	801feca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fb20:	f103 38ff 	add.w	r8, r3, #4294967295
 801fb24:	4542      	cmp	r2, r8
 801fb26:	f280 81d0 	bge.w	801feca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fb2a:	f1bc 0f00 	cmp.w	ip, #0
 801fb2e:	f2c0 81cc 	blt.w	801feca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fb32:	f10e 38ff 	add.w	r8, lr, #4294967295
 801fb36:	45c4      	cmp	ip, r8
 801fb38:	f280 81c7 	bge.w	801feca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fb3c:	b21b      	sxth	r3, r3
 801fb3e:	fb0c 2203 	mla	r2, ip, r3, r2
 801fb42:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801fb44:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801fb48:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801fb4c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801fb50:	2900      	cmp	r1, #0
 801fb52:	f000 8182 	beq.w	801fe5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fb56:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801fb5a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801fb5c:	0e2d      	lsrs	r5, r5, #24
 801fb5e:	9512      	str	r5, [sp, #72]	@ 0x48
 801fb60:	b180      	cbz	r0, 801fb84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fb62:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801fb66:	3b01      	subs	r3, #1
 801fb68:	009b      	lsls	r3, r3, #2
 801fb6a:	3304      	adds	r3, #4
 801fb6c:	eb08 0c03 	add.w	ip, r8, r3
 801fb70:	f858 3003 	ldr.w	r3, [r8, r3]
 801fb74:	9308      	str	r3, [sp, #32]
 801fb76:	0e1b      	lsrs	r3, r3, #24
 801fb78:	9310      	str	r3, [sp, #64]	@ 0x40
 801fb7a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801fb7e:	930c      	str	r3, [sp, #48]	@ 0x30
 801fb80:	0e1b      	lsrs	r3, r3, #24
 801fb82:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fb84:	b289      	uxth	r1, r1
 801fb86:	b280      	uxth	r0, r0
 801fb88:	fb01 f900 	mul.w	r9, r1, r0
 801fb8c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801fb90:	0109      	lsls	r1, r1, #4
 801fb92:	eba1 0809 	sub.w	r8, r1, r9
 801fb96:	b280      	uxth	r0, r0
 801fb98:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801fb9c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801fb9e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fba0:	fa1f f888 	uxth.w	r8, r8
 801fba4:	1a09      	subs	r1, r1, r0
 801fba6:	b289      	uxth	r1, r1
 801fba8:	fb08 f303 	mul.w	r3, r8, r3
 801fbac:	fb01 330e 	mla	r3, r1, lr, r3
 801fbb0:	fb00 3305 	mla	r3, r0, r5, r3
 801fbb4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fbb6:	fb09 3305 	mla	r3, r9, r5, r3
 801fbba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fbbe:	2b00      	cmp	r3, #0
 801fbc0:	f000 80d2 	beq.w	801fd68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fbc4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801fbc8:	d01b      	beq.n	801fc02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801fbca:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801fbce:	fb0e fa0a 	mul.w	sl, lr, sl
 801fbd2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fbd6:	fb0e fe02 	mul.w	lr, lr, r2
 801fbda:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801fbde:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fbe2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801fbe6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801fbea:	4452      	add	r2, sl
 801fbec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fbf0:	0a12      	lsrs	r2, r2, #8
 801fbf2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fbf6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fbfa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801fbfe:	ea42 020c 	orr.w	r2, r2, ip
 801fc02:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fc04:	2dff      	cmp	r5, #255	@ 0xff
 801fc06:	d021      	beq.n	801fc4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801fc08:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fc0a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fc0e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fc10:	fb05 fb0b 	mul.w	fp, r5, fp
 801fc14:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fc16:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fc1a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fc1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fc20:	fb05 fa0a 	mul.w	sl, r5, sl
 801fc24:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc28:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fc2c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fc30:	44de      	add	lr, fp
 801fc32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fc36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fc3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc3e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc42:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fc46:	ea4e 050a 	orr.w	r5, lr, sl
 801fc4a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801fc4c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fc4e:	2dff      	cmp	r5, #255	@ 0xff
 801fc50:	d021      	beq.n	801fc96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801fc52:	9d08      	ldr	r5, [sp, #32]
 801fc54:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fc58:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fc5a:	fb05 fb0b 	mul.w	fp, r5, fp
 801fc5e:	9d08      	ldr	r5, [sp, #32]
 801fc60:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801fc64:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fc66:	fb05 fa0e 	mul.w	sl, r5, lr
 801fc6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fc6e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc72:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fc76:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fc7a:	44de      	add	lr, fp
 801fc7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fc80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fc84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc88:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc8c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fc90:	ea4e 050a 	orr.w	r5, lr, sl
 801fc94:	9508      	str	r5, [sp, #32]
 801fc96:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fc98:	2dff      	cmp	r5, #255	@ 0xff
 801fc9a:	d021      	beq.n	801fce0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801fc9c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fc9e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fca2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fca4:	fb05 fb0b 	mul.w	fp, r5, fp
 801fca8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fcaa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fcae:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fcb0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fcb4:	fb05 fa0a 	mul.w	sl, r5, sl
 801fcb8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fcbc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fcc0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fcc4:	44de      	add	lr, fp
 801fcc6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fcca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fcce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fcd2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fcd6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fcda:	ea4e 050a 	orr.w	r5, lr, sl
 801fcde:	950c      	str	r5, [sp, #48]	@ 0x30
 801fce0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fce2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801fce6:	9d08      	ldr	r5, [sp, #32]
 801fce8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801fcec:	fb08 fc0c 	mul.w	ip, r8, ip
 801fcf0:	fb01 cc0e 	mla	ip, r1, lr, ip
 801fcf4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801fcf8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fcfa:	fb00 cc0e 	mla	ip, r0, lr, ip
 801fcfe:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801fd02:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fd04:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fd08:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801fd0c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fd10:	fb08 f80e 	mul.w	r8, r8, lr
 801fd14:	fb01 8202 	mla	r2, r1, r2, r8
 801fd18:	9908      	ldr	r1, [sp, #32]
 801fd1a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801fd1e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801fd20:	fb00 220a 	mla	r2, r0, sl, r2
 801fd24:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801fd28:	fb09 2900 	mla	r9, r9, r0, r2
 801fd2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd30:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fd34:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fd38:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801fd3c:	ea4c 0c09 	orr.w	ip, ip, r9
 801fd40:	2bff      	cmp	r3, #255	@ 0xff
 801fd42:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801fd46:	f040 8091 	bne.w	801fe6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801fd4a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801fd4e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801fd52:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fd56:	f022 0207 	bic.w	r2, r2, #7
 801fd5a:	431a      	orrs	r2, r3
 801fd5c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801fd60:	ea4c 0c02 	orr.w	ip, ip, r2
 801fd64:	f8a7 c000 	strh.w	ip, [r7]
 801fd68:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801fd6a:	441c      	add	r4, r3
 801fd6c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fd6e:	441e      	add	r6, r3
 801fd70:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fd72:	3b01      	subs	r3, #1
 801fd74:	3702      	adds	r7, #2
 801fd76:	9317      	str	r3, [sp, #92]	@ 0x5c
 801fd78:	e6c0      	b.n	801fafc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fd7a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801fd7c:	441c      	add	r4, r3
 801fd7e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fd80:	441e      	add	r6, r3
 801fd82:	9b07      	ldr	r3, [sp, #28]
 801fd84:	3b01      	subs	r3, #1
 801fd86:	9307      	str	r3, [sp, #28]
 801fd88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fd8a:	3302      	adds	r3, #2
 801fd8c:	930a      	str	r3, [sp, #40]	@ 0x28
 801fd8e:	e695      	b.n	801fabc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fd90:	d024      	beq.n	801fddc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801fd92:	9b07      	ldr	r3, [sp, #28]
 801fd94:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801fd96:	3b01      	subs	r3, #1
 801fd98:	fb00 4003 	mla	r0, r0, r3, r4
 801fd9c:	1400      	asrs	r0, r0, #16
 801fd9e:	f53f aeaa 	bmi.w	801faf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fda2:	3901      	subs	r1, #1
 801fda4:	4288      	cmp	r0, r1
 801fda6:	f6bf aea6 	bge.w	801faf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fdaa:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801fdac:	fb01 6303 	mla	r3, r1, r3, r6
 801fdb0:	141b      	asrs	r3, r3, #16
 801fdb2:	f53f aea0 	bmi.w	801faf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fdb6:	3a01      	subs	r2, #1
 801fdb8:	4293      	cmp	r3, r2
 801fdba:	f6bf ae9c 	bge.w	801faf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fdbe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fdc2:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801fdc6:	f1bb 0f00 	cmp.w	fp, #0
 801fdca:	f300 809a 	bgt.w	801ff02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801fdce:	9b07      	ldr	r3, [sp, #28]
 801fdd0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fdd4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fdd6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801fdda:	930a      	str	r3, [sp, #40]	@ 0x28
 801fddc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801fdde:	2b00      	cmp	r3, #0
 801fde0:	f340 81eb 	ble.w	80201ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801fde4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fde8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fdec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fdf0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fdf2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fdf6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fdfa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fdfe:	eef0 6a62 	vmov.f32	s13, s5
 801fe02:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fe06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fe0e:	ee16 4a90 	vmov	r4, s13
 801fe12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fe16:	eef0 6a43 	vmov.f32	s13, s6
 801fe1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fe1e:	ee12 2a90 	vmov	r2, s5
 801fe22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fe26:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe2a:	ee13 2a10 	vmov	r2, s6
 801fe2e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801fe30:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe32:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe36:	9328      	str	r3, [sp, #160]	@ 0xa0
 801fe38:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801fe3a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801fe3c:	3b01      	subs	r3, #1
 801fe3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe42:	9316      	str	r3, [sp, #88]	@ 0x58
 801fe44:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe46:	bf08      	it	eq
 801fe48:	4613      	moveq	r3, r2
 801fe4a:	ee16 6a90 	vmov	r6, s13
 801fe4e:	9307      	str	r3, [sp, #28]
 801fe50:	eeb0 3a67 	vmov.f32	s6, s15
 801fe54:	eef0 2a47 	vmov.f32	s5, s14
 801fe58:	e622      	b.n	801faa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801fe5a:	2800      	cmp	r0, #0
 801fe5c:	f43f ae92 	beq.w	801fb84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fe60:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801fe64:	9308      	str	r3, [sp, #32]
 801fe66:	0e1b      	lsrs	r3, r3, #24
 801fe68:	9310      	str	r3, [sp, #64]	@ 0x40
 801fe6a:	e68b      	b.n	801fb84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fe6c:	8839      	ldrh	r1, [r7, #0]
 801fe6e:	4dd4      	ldr	r5, [pc, #848]	@ (80201c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801fe70:	43db      	mvns	r3, r3
 801fe72:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801fe76:	fa5f f883 	uxtb.w	r8, r3
 801fe7a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801fe7e:	fb0e fe08 	mul.w	lr, lr, r8
 801fe82:	10c8      	asrs	r0, r1, #3
 801fe84:	00cb      	lsls	r3, r1, #3
 801fe86:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fe8a:	f10e 0101 	add.w	r1, lr, #1
 801fe8e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801fe92:	fb00 f008 	mul.w	r0, r0, r8
 801fe96:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801fe9a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801fe9e:	f100 0e01 	add.w	lr, r0, #1
 801fea2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801fea6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801feaa:	b2db      	uxtb	r3, r3
 801feac:	b2c9      	uxtb	r1, r1
 801feae:	00d2      	lsls	r2, r2, #3
 801feb0:	fb03 f308 	mul.w	r3, r3, r8
 801feb4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801feb8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801febc:	430a      	orrs	r2, r1
 801febe:	1c59      	adds	r1, r3, #1
 801fec0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fec4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801fec8:	e748      	b.n	801fd5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801feca:	f112 0801 	adds.w	r8, r2, #1
 801fece:	f53f af4b 	bmi.w	801fd68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fed2:	4543      	cmp	r3, r8
 801fed4:	f6ff af48 	blt.w	801fd68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fed8:	f11c 0801 	adds.w	r8, ip, #1
 801fedc:	f53f af44 	bmi.w	801fd68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fee0:	45c6      	cmp	lr, r8
 801fee2:	f6ff af41 	blt.w	801fd68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fee6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801feea:	fa0f f28e 	sxth.w	r2, lr
 801feee:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801fef2:	9200      	str	r2, [sp, #0]
 801fef4:	b21b      	sxth	r3, r3
 801fef6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fef8:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801fefa:	4639      	mov	r1, r7
 801fefc:	f7ff fc87 	bl	801f80e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ff00:	e732      	b.n	801fd68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ff02:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ff04:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ff06:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ff0a:	1421      	asrs	r1, r4, #16
 801ff0c:	1433      	asrs	r3, r6, #16
 801ff0e:	fb07 1303 	mla	r3, r7, r3, r1
 801ff12:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ff14:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ff18:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ff1c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ff20:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ff24:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ff28:	2a00      	cmp	r2, #0
 801ff2a:	f000 8107 	beq.w	802013c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801ff2e:	684d      	ldr	r5, [r1, #4]
 801ff30:	950d      	str	r5, [sp, #52]	@ 0x34
 801ff32:	0e2d      	lsrs	r5, r5, #24
 801ff34:	9514      	str	r5, [sp, #80]	@ 0x50
 801ff36:	b178      	cbz	r0, 801ff58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ff38:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801ff3c:	3f01      	subs	r7, #1
 801ff3e:	00bf      	lsls	r7, r7, #2
 801ff40:	3704      	adds	r7, #4
 801ff42:	eb01 0e07 	add.w	lr, r1, r7
 801ff46:	59c9      	ldr	r1, [r1, r7]
 801ff48:	9109      	str	r1, [sp, #36]	@ 0x24
 801ff4a:	0e09      	lsrs	r1, r1, #24
 801ff4c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ff4e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ff52:	910e      	str	r1, [sp, #56]	@ 0x38
 801ff54:	0e09      	lsrs	r1, r1, #24
 801ff56:	9115      	str	r1, [sp, #84]	@ 0x54
 801ff58:	b292      	uxth	r2, r2
 801ff5a:	b280      	uxth	r0, r0
 801ff5c:	fb02 f900 	mul.w	r9, r2, r0
 801ff60:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ff64:	0112      	lsls	r2, r2, #4
 801ff66:	eba2 0e09 	sub.w	lr, r2, r9
 801ff6a:	b280      	uxth	r0, r0
 801ff6c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801ff70:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ff72:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ff74:	fa1f fe8e 	uxth.w	lr, lr
 801ff78:	1a09      	subs	r1, r1, r0
 801ff7a:	b289      	uxth	r1, r1
 801ff7c:	fb0e f202 	mul.w	r2, lr, r2
 801ff80:	fb01 220c 	mla	r2, r1, ip, r2
 801ff84:	fb00 2205 	mla	r2, r0, r5, r2
 801ff88:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ff8a:	fb09 2205 	mla	r2, r9, r5, r2
 801ff8e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ff92:	2a00      	cmp	r2, #0
 801ff94:	f000 80c9 	beq.w	802012a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ff98:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ff9c:	d019      	beq.n	801ffd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ff9e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ffa2:	fb0c fa0a 	mul.w	sl, ip, sl
 801ffa6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ffaa:	fb0c fc03 	mul.w	ip, ip, r3
 801ffae:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ffb2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ffb6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ffba:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ffbe:	4453      	add	r3, sl
 801ffc0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ffc4:	0a1b      	lsrs	r3, r3, #8
 801ffc6:	0a3f      	lsrs	r7, r7, #8
 801ffc8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ffcc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ffd0:	433b      	orrs	r3, r7
 801ffd2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ffd4:	2dff      	cmp	r5, #255	@ 0xff
 801ffd6:	d020      	beq.n	802001a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ffd8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ffda:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ffde:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ffe0:	436f      	muls	r7, r5
 801ffe2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ffe4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ffe8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ffea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ffee:	fb05 fa0a 	mul.w	sl, r5, sl
 801fff2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801fff6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fffa:	44bc      	add	ip, r7
 801fffc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020000:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020004:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020008:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802000c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020010:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020014:	ea4c 050a 	orr.w	r5, ip, sl
 8020018:	950d      	str	r5, [sp, #52]	@ 0x34
 802001a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802001c:	2dff      	cmp	r5, #255	@ 0xff
 802001e:	d020      	beq.n	8020062 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8020020:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020022:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8020026:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020028:	436f      	muls	r7, r5
 802002a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802002c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8020030:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020032:	fb05 fa0c 	mul.w	sl, r5, ip
 8020036:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802003a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802003e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020042:	44bc      	add	ip, r7
 8020044:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020048:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802004c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020050:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020054:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020058:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802005c:	ea4c 050a 	orr.w	r5, ip, sl
 8020060:	9509      	str	r5, [sp, #36]	@ 0x24
 8020062:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020064:	2dff      	cmp	r5, #255	@ 0xff
 8020066:	d020      	beq.n	80200aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8020068:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802006a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802006e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020070:	436f      	muls	r7, r5
 8020072:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020074:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020078:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802007a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802007e:	fb05 fa0a 	mul.w	sl, r5, sl
 8020082:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020086:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802008a:	44bc      	add	ip, r7
 802008c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020090:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020094:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020098:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802009c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80200a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80200a4:	ea4c 050a 	orr.w	r5, ip, sl
 80200a8:	950e      	str	r5, [sp, #56]	@ 0x38
 80200aa:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80200ac:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80200b0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80200b2:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80200b6:	fb0e f707 	mul.w	r7, lr, r7
 80200ba:	fb01 770c 	mla	r7, r1, ip, r7
 80200be:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80200c2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80200c4:	fb00 770c 	mla	r7, r0, ip, r7
 80200c8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80200cc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80200ce:	fb09 770c 	mla	r7, r9, ip, r7
 80200d2:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80200d6:	fb0e fe0c 	mul.w	lr, lr, ip
 80200da:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80200de:	fb01 e303 	mla	r3, r1, r3, lr
 80200e2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80200e4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80200e8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80200ea:	fb00 330a 	mla	r3, r0, sl, r3
 80200ee:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 80200f2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80200f6:	0a3f      	lsrs	r7, r7, #8
 80200f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80200fc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020100:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020104:	ea47 070c 	orr.w	r7, r7, ip
 8020108:	2aff      	cmp	r2, #255	@ 0xff
 802010a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802010e:	d11e      	bne.n	802014e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8020110:	097a      	lsrs	r2, r7, #5
 8020112:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8020116:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802011a:	f023 0307 	bic.w	r3, r3, #7
 802011e:	4313      	orrs	r3, r2
 8020120:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8020124:	431f      	orrs	r7, r3
 8020126:	f8a8 7000 	strh.w	r7, [r8]
 802012a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802012c:	441c      	add	r4, r3
 802012e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020130:	f108 0802 	add.w	r8, r8, #2
 8020134:	441e      	add	r6, r3
 8020136:	f10b 3bff 	add.w	fp, fp, #4294967295
 802013a:	e644      	b.n	801fdc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802013c:	2800      	cmp	r0, #0
 802013e:	f43f af0b 	beq.w	801ff58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020142:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8020146:	9109      	str	r1, [sp, #36]	@ 0x24
 8020148:	0e09      	lsrs	r1, r1, #24
 802014a:	9111      	str	r1, [sp, #68]	@ 0x44
 802014c:	e704      	b.n	801ff58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802014e:	f8b8 1000 	ldrh.w	r1, [r8]
 8020152:	43d2      	mvns	r2, r2
 8020154:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8020158:	fa5f fe82 	uxtb.w	lr, r2
 802015c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020160:	fb0c fc0e 	mul.w	ip, ip, lr
 8020164:	10c8      	asrs	r0, r1, #3
 8020166:	00ca      	lsls	r2, r1, #3
 8020168:	f10c 0101 	add.w	r1, ip, #1
 802016c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020170:	0c39      	lsrs	r1, r7, #16
 8020172:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020176:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802017a:	4911      	ldr	r1, [pc, #68]	@ (80201c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802017c:	fb00 f00e 	mul.w	r0, r0, lr
 8020180:	fa5f fc8c 	uxtb.w	ip, ip
 8020184:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8020188:	b2d2      	uxtb	r2, r2
 802018a:	1c41      	adds	r1, r0, #1
 802018c:	fb02 f20e 	mul.w	r2, r2, lr
 8020190:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020194:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020198:	1c51      	adds	r1, r2, #1
 802019a:	00c0      	lsls	r0, r0, #3
 802019c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80201a0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80201a4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80201a8:	ea4c 0c00 	orr.w	ip, ip, r0
 80201ac:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80201b0:	ea47 0c0c 	orr.w	ip, r7, ip
 80201b4:	f8a8 c000 	strh.w	ip, [r8]
 80201b8:	e7b7      	b.n	802012a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80201ba:	b01b      	add	sp, #108	@ 0x6c
 80201bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201c0:	fffff800 	.word	0xfffff800

080201c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80201c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80201c8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80201cc:	2d00      	cmp	r5, #0
 80201ce:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80201d2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80201d6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80201da:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80201de:	fb05 0e03 	mla	lr, r5, r3, r0
 80201e2:	f2c0 808c 	blt.w	80202fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80201e6:	45a9      	cmp	r9, r5
 80201e8:	f340 8089 	ble.w	80202fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80201ec:	2800      	cmp	r0, #0
 80201ee:	f2c0 8084 	blt.w	80202fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80201f2:	4580      	cmp	r8, r0
 80201f4:	f340 8081 	ble.w	80202fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80201f8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80201fc:	f01e 0f01 	tst.w	lr, #1
 8020200:	5d16      	ldrb	r6, [r2, r4]
 8020202:	bf0c      	ite	eq
 8020204:	f006 060f 	andeq.w	r6, r6, #15
 8020208:	1136      	asrne	r6, r6, #4
 802020a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802020e:	b2f6      	uxtb	r6, r6
 8020210:	1c44      	adds	r4, r0, #1
 8020212:	d477      	bmi.n	8020304 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8020214:	45a0      	cmp	r8, r4
 8020216:	dd75      	ble.n	8020304 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8020218:	2f00      	cmp	r7, #0
 802021a:	d075      	beq.n	8020308 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802021c:	f10e 0a01 	add.w	sl, lr, #1
 8020220:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020224:	f01a 0f01 	tst.w	sl, #1
 8020228:	5d14      	ldrb	r4, [r2, r4]
 802022a:	bf0c      	ite	eq
 802022c:	f004 040f 	andeq.w	r4, r4, #15
 8020230:	1124      	asrne	r4, r4, #4
 8020232:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020236:	b2e4      	uxtb	r4, r4
 8020238:	3501      	adds	r5, #1
 802023a:	d469      	bmi.n	8020310 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802023c:	45a9      	cmp	r9, r5
 802023e:	dd67      	ble.n	8020310 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8020240:	f1bc 0f00 	cmp.w	ip, #0
 8020244:	d067      	beq.n	8020316 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8020246:	2800      	cmp	r0, #0
 8020248:	db60      	blt.n	802030c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802024a:	4580      	cmp	r8, r0
 802024c:	dd5e      	ble.n	802030c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802024e:	eb03 090e 	add.w	r9, r3, lr
 8020252:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8020256:	f019 0f01 	tst.w	r9, #1
 802025a:	5d55      	ldrb	r5, [r2, r5]
 802025c:	bf0c      	ite	eq
 802025e:	f005 050f 	andeq.w	r5, r5, #15
 8020262:	112d      	asrne	r5, r5, #4
 8020264:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8020268:	b2ed      	uxtb	r5, r5
 802026a:	3001      	adds	r0, #1
 802026c:	d456      	bmi.n	802031c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802026e:	4580      	cmp	r8, r0
 8020270:	dd54      	ble.n	802031c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8020272:	2f00      	cmp	r7, #0
 8020274:	d054      	beq.n	8020320 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8020276:	3301      	adds	r3, #1
 8020278:	449e      	add	lr, r3
 802027a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802027e:	f01e 0f01 	tst.w	lr, #1
 8020282:	5cd0      	ldrb	r0, [r2, r3]
 8020284:	bf0c      	ite	eq
 8020286:	f000 000f 	andeq.w	r0, r0, #15
 802028a:	1100      	asrne	r0, r0, #4
 802028c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020290:	b2c3      	uxtb	r3, r0
 8020292:	b2ba      	uxth	r2, r7
 8020294:	fa1f fc8c 	uxth.w	ip, ip
 8020298:	fb02 f00c 	mul.w	r0, r2, ip
 802029c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80202a0:	0112      	lsls	r2, r2, #4
 80202a2:	fa1f fc8c 	uxth.w	ip, ip
 80202a6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 80202aa:	1a12      	subs	r2, r2, r0
 80202ac:	eba7 070c 	sub.w	r7, r7, ip
 80202b0:	b292      	uxth	r2, r2
 80202b2:	b2bf      	uxth	r7, r7
 80202b4:	4362      	muls	r2, r4
 80202b6:	fb06 2207 	mla	r2, r6, r7, r2
 80202ba:	fb0c 2505 	mla	r5, ip, r5, r2
 80202be:	fb00 5303 	mla	r3, r0, r3, r5
 80202c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80202c6:	b1b3      	cbz	r3, 80202f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80202c8:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 80202cc:	435a      	muls	r2, r3
 80202ce:	1c53      	adds	r3, r2, #1
 80202d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80202d4:	4a2d      	ldr	r2, [pc, #180]	@ (802038c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80202d6:	121b      	asrs	r3, r3, #8
 80202d8:	6812      	ldr	r2, [r2, #0]
 80202da:	2bff      	cmp	r3, #255	@ 0xff
 80202dc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80202e0:	d120      	bne.n	8020324 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80202e2:	4b2b      	ldr	r3, [pc, #172]	@ (8020390 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80202e4:	0950      	lsrs	r0, r2, #5
 80202e6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80202ea:	4033      	ands	r3, r6
 80202ec:	4318      	orrs	r0, r3
 80202ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80202f2:	4302      	orrs	r2, r0
 80202f4:	800a      	strh	r2, [r1, #0]
 80202f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80202fa:	2600      	movs	r6, #0
 80202fc:	e788      	b.n	8020210 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80202fe:	2400      	movs	r4, #0
 8020300:	4626      	mov	r6, r4
 8020302:	e799      	b.n	8020238 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020304:	2400      	movs	r4, #0
 8020306:	e797      	b.n	8020238 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020308:	463c      	mov	r4, r7
 802030a:	e795      	b.n	8020238 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802030c:	2500      	movs	r5, #0
 802030e:	e7ac      	b.n	802026a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8020310:	2300      	movs	r3, #0
 8020312:	461d      	mov	r5, r3
 8020314:	e7bd      	b.n	8020292 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020316:	4663      	mov	r3, ip
 8020318:	4665      	mov	r5, ip
 802031a:	e7ba      	b.n	8020292 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802031c:	2300      	movs	r3, #0
 802031e:	e7b8      	b.n	8020292 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020320:	463b      	mov	r3, r7
 8020322:	e7b6      	b.n	8020292 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020324:	880d      	ldrh	r5, [r1, #0]
 8020326:	b29f      	uxth	r7, r3
 8020328:	122c      	asrs	r4, r5, #8
 802032a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802032e:	43db      	mvns	r3, r3
 8020330:	b2db      	uxtb	r3, r3
 8020332:	fb10 f007 	smulbb	r0, r0, r7
 8020336:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802033a:	fb04 0403 	mla	r4, r4, r3, r0
 802033e:	b2f6      	uxtb	r6, r6
 8020340:	10e8      	asrs	r0, r5, #3
 8020342:	b2d2      	uxtb	r2, r2
 8020344:	00ed      	lsls	r5, r5, #3
 8020346:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802034a:	fb12 f207 	smulbb	r2, r2, r7
 802034e:	fb16 f607 	smulbb	r6, r6, r7
 8020352:	b2ed      	uxtb	r5, r5
 8020354:	b2a4      	uxth	r4, r4
 8020356:	fb00 6603 	mla	r6, r0, r3, r6
 802035a:	fb05 2303 	mla	r3, r5, r3, r2
 802035e:	b29a      	uxth	r2, r3
 8020360:	1c63      	adds	r3, r4, #1
 8020362:	b2b0      	uxth	r0, r6
 8020364:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020368:	1c53      	adds	r3, r2, #1
 802036a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802036e:	1c42      	adds	r2, r0, #1
 8020370:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020374:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020378:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802037c:	0940      	lsrs	r0, r0, #5
 802037e:	4323      	orrs	r3, r4
 8020380:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020384:	4303      	orrs	r3, r0
 8020386:	800b      	strh	r3, [r1, #0]
 8020388:	e7b5      	b.n	80202f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802038a:	bf00      	nop
 802038c:	20014050 	.word	0x20014050
 8020390:	00fff800 	.word	0x00fff800

08020394 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020398:	b097      	sub	sp, #92	@ 0x5c
 802039a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 802039e:	9214      	str	r2, [sp, #80]	@ 0x50
 80203a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80203a2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80203a4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80203a8:	910d      	str	r1, [sp, #52]	@ 0x34
 80203aa:	930f      	str	r3, [sp, #60]	@ 0x3c
 80203ac:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 80203b0:	9015      	str	r0, [sp, #84]	@ 0x54
 80203b2:	6850      	ldr	r0, [r2, #4]
 80203b4:	6812      	ldr	r2, [r2, #0]
 80203b6:	fb00 1303 	mla	r3, r0, r3, r1
 80203ba:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80203be:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80203c0:	689b      	ldr	r3, [r3, #8]
 80203c2:	3301      	adds	r3, #1
 80203c4:	f023 0301 	bic.w	r3, r3, #1
 80203c8:	930a      	str	r3, [sp, #40]	@ 0x28
 80203ca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80203cc:	681f      	ldr	r7, [r3, #0]
 80203ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80203d0:	2b00      	cmp	r3, #0
 80203d2:	dc03      	bgt.n	80203dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80203d4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80203d6:	2b00      	cmp	r3, #0
 80203d8:	f340 8287 	ble.w	80208ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80203dc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80203de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80203e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80203e6:	1e48      	subs	r0, r1, #1
 80203e8:	f102 3cff 	add.w	ip, r2, #4294967295
 80203ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80203ee:	2b00      	cmp	r3, #0
 80203f0:	f340 80c4 	ble.w	802057c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80203f4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80203f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80203fc:	d406      	bmi.n	802040c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80203fe:	4586      	cmp	lr, r0
 8020400:	da04      	bge.n	802040c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020402:	2b00      	cmp	r3, #0
 8020404:	db02      	blt.n	802040c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020406:	4563      	cmp	r3, ip
 8020408:	f2c0 80b9 	blt.w	802057e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802040c:	f11e 0e01 	adds.w	lr, lr, #1
 8020410:	f100 80aa 	bmi.w	8020568 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020414:	4571      	cmp	r1, lr
 8020416:	f2c0 80a7 	blt.w	8020568 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802041a:	3301      	adds	r3, #1
 802041c:	f100 80a4 	bmi.w	8020568 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020420:	429a      	cmp	r2, r3
 8020422:	f2c0 80a1 	blt.w	8020568 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020426:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020428:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 802042c:	930e      	str	r3, [sp, #56]	@ 0x38
 802042e:	46c8      	mov	r8, r9
 8020430:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020432:	2b00      	cmp	r3, #0
 8020434:	f340 80c3 	ble.w	80205be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020438:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802043a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802043e:	1423      	asrs	r3, r4, #16
 8020440:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020444:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020448:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802044c:	f100 814d 	bmi.w	80206ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020450:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020454:	455b      	cmp	r3, fp
 8020456:	f280 8148 	bge.w	80206ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802045a:	2800      	cmp	r0, #0
 802045c:	f2c0 8145 	blt.w	80206ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020460:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020464:	4558      	cmp	r0, fp
 8020466:	f280 8140 	bge.w	80206ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802046a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802046c:	fb00 3305 	mla	r3, r0, r5, r3
 8020470:	0858      	lsrs	r0, r3, #1
 8020472:	07dd      	lsls	r5, r3, #31
 8020474:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020478:	bf54      	ite	pl
 802047a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802047e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020482:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020486:	fa5f fc8c 	uxtb.w	ip, ip
 802048a:	2a00      	cmp	r2, #0
 802048c:	f000 80db 	beq.w	8020646 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8020490:	1c58      	adds	r0, r3, #1
 8020492:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020496:	07c0      	lsls	r0, r0, #31
 8020498:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802049c:	bf54      	ite	pl
 802049e:	f00e 0e0f 	andpl.w	lr, lr, #15
 80204a2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80204a6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80204aa:	fa5f f08e 	uxtb.w	r0, lr
 80204ae:	9010      	str	r0, [sp, #64]	@ 0x40
 80204b0:	b1c9      	cbz	r1, 80204e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80204b2:	4453      	add	r3, sl
 80204b4:	0858      	lsrs	r0, r3, #1
 80204b6:	07dd      	lsls	r5, r3, #31
 80204b8:	5c38      	ldrb	r0, [r7, r0]
 80204ba:	bf54      	ite	pl
 80204bc:	f000 000f 	andpl.w	r0, r0, #15
 80204c0:	1100      	asrmi	r0, r0, #4
 80204c2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80204c6:	3301      	adds	r3, #1
 80204c8:	b2c0      	uxtb	r0, r0
 80204ca:	900b      	str	r0, [sp, #44]	@ 0x2c
 80204cc:	0858      	lsrs	r0, r3, #1
 80204ce:	07dd      	lsls	r5, r3, #31
 80204d0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80204d4:	bf54      	ite	pl
 80204d6:	f00e 030f 	andpl.w	r3, lr, #15
 80204da:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80204de:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80204e2:	b2db      	uxtb	r3, r3
 80204e4:	9311      	str	r3, [sp, #68]	@ 0x44
 80204e6:	b292      	uxth	r2, r2
 80204e8:	b289      	uxth	r1, r1
 80204ea:	fb02 f301 	mul.w	r3, r2, r1
 80204ee:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80204f2:	0112      	lsls	r2, r2, #4
 80204f4:	b289      	uxth	r1, r1
 80204f6:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80204fa:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80204fc:	1ad2      	subs	r2, r2, r3
 80204fe:	1a40      	subs	r0, r0, r1
 8020500:	b292      	uxth	r2, r2
 8020502:	436a      	muls	r2, r5
 8020504:	b280      	uxth	r0, r0
 8020506:	fb0c 2c00 	mla	ip, ip, r0, r2
 802050a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802050c:	fb01 c102 	mla	r1, r1, r2, ip
 8020510:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020512:	fb03 1302 	mla	r3, r3, r2, r1
 8020516:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802051a:	b1db      	cbz	r3, 8020554 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802051c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802051e:	4353      	muls	r3, r2
 8020520:	1c5a      	adds	r2, r3, #1
 8020522:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020526:	4ac6      	ldr	r2, [pc, #792]	@ (8020840 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8020528:	121b      	asrs	r3, r3, #8
 802052a:	6812      	ldr	r2, [r2, #0]
 802052c:	2bff      	cmp	r3, #255	@ 0xff
 802052e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8020532:	f040 8099 	bne.w	8020668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8020536:	0953      	lsrs	r3, r2, #5
 8020538:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802053c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020540:	f02c 0c07 	bic.w	ip, ip, #7
 8020544:	ea43 0c0c 	orr.w	ip, r3, ip
 8020548:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802054c:	ea4c 0202 	orr.w	r2, ip, r2
 8020550:	f8a8 2000 	strh.w	r2, [r8]
 8020554:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020556:	441c      	add	r4, r3
 8020558:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802055a:	441e      	add	r6, r3
 802055c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802055e:	3b01      	subs	r3, #1
 8020560:	f108 0802 	add.w	r8, r8, #2
 8020564:	930e      	str	r3, [sp, #56]	@ 0x38
 8020566:	e763      	b.n	8020430 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020568:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802056a:	441c      	add	r4, r3
 802056c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802056e:	441e      	add	r6, r3
 8020570:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020572:	3b01      	subs	r3, #1
 8020574:	9309      	str	r3, [sp, #36]	@ 0x24
 8020576:	f109 0902 	add.w	r9, r9, #2
 802057a:	e737      	b.n	80203ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802057c:	d024      	beq.n	80205c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802057e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020580:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8020582:	3b01      	subs	r3, #1
 8020584:	fb00 4003 	mla	r0, r0, r3, r4
 8020588:	1400      	asrs	r0, r0, #16
 802058a:	f53f af4c 	bmi.w	8020426 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802058e:	3901      	subs	r1, #1
 8020590:	4288      	cmp	r0, r1
 8020592:	f6bf af48 	bge.w	8020426 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020596:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8020598:	fb01 6303 	mla	r3, r1, r3, r6
 802059c:	141b      	asrs	r3, r3, #16
 802059e:	f53f af42 	bmi.w	8020426 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205a2:	3a01      	subs	r2, #1
 80205a4:	4293      	cmp	r3, r2
 80205a6:	f6bf af3e 	bge.w	8020426 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205aa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80205ae:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80205b2:	930e      	str	r3, [sp, #56]	@ 0x38
 80205b4:	46c8      	mov	r8, r9
 80205b6:	f1bb 0f00 	cmp.w	fp, #0
 80205ba:	f300 80b7 	bgt.w	802072c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80205be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80205c0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80205c4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80205c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80205ca:	2b00      	cmp	r3, #0
 80205cc:	f340 818d 	ble.w	80208ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80205d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80205d4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80205d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80205dc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80205de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80205e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80205e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80205ea:	eef0 6a62 	vmov.f32	s13, s5
 80205ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80205f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80205fa:	ee16 4a90 	vmov	r4, s13
 80205fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020602:	eef0 6a43 	vmov.f32	s13, s6
 8020606:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802060a:	ee12 2a90 	vmov	r2, s5
 802060e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020612:	fb92 f3f3 	sdiv	r3, r2, r3
 8020616:	ee13 2a10 	vmov	r2, s6
 802061a:	9323      	str	r3, [sp, #140]	@ 0x8c
 802061c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802061e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020622:	9324      	str	r3, [sp, #144]	@ 0x90
 8020624:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020626:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020628:	3b01      	subs	r3, #1
 802062a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802062e:	930d      	str	r3, [sp, #52]	@ 0x34
 8020630:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020632:	bf08      	it	eq
 8020634:	4613      	moveq	r3, r2
 8020636:	ee16 6a90 	vmov	r6, s13
 802063a:	9309      	str	r3, [sp, #36]	@ 0x24
 802063c:	eeb0 3a67 	vmov.f32	s6, s15
 8020640:	eef0 2a47 	vmov.f32	s5, s14
 8020644:	e6c3      	b.n	80203ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020646:	2900      	cmp	r1, #0
 8020648:	f43f af4d 	beq.w	80204e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802064c:	eb0a 0003 	add.w	r0, sl, r3
 8020650:	0843      	lsrs	r3, r0, #1
 8020652:	07c0      	lsls	r0, r0, #31
 8020654:	5cfb      	ldrb	r3, [r7, r3]
 8020656:	bf54      	ite	pl
 8020658:	f003 030f 	andpl.w	r3, r3, #15
 802065c:	111b      	asrmi	r3, r3, #4
 802065e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020662:	b2db      	uxtb	r3, r3
 8020664:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020666:	e73e      	b.n	80204e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020668:	f8b8 e000 	ldrh.w	lr, [r8]
 802066c:	fa1f fb83 	uxth.w	fp, r3
 8020670:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020674:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020678:	43db      	mvns	r3, r3
 802067a:	b2db      	uxtb	r3, r3
 802067c:	fb11 f10b 	smulbb	r1, r1, fp
 8020680:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020684:	fb00 1003 	mla	r0, r0, r3, r1
 8020688:	fa5f fc8c 	uxtb.w	ip, ip
 802068c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8020690:	b2d2      	uxtb	r2, r2
 8020692:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020696:	b280      	uxth	r0, r0
 8020698:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802069c:	fb1c fc0b 	smulbb	ip, ip, fp
 80206a0:	fa5f fe8e 	uxtb.w	lr, lr
 80206a4:	fb12 fb0b 	smulbb	fp, r2, fp
 80206a8:	fb01 cc03 	mla	ip, r1, r3, ip
 80206ac:	fb0e bb03 	mla	fp, lr, r3, fp
 80206b0:	1c43      	adds	r3, r0, #1
 80206b2:	fa1f fc8c 	uxth.w	ip, ip
 80206b6:	fa1f fb8b 	uxth.w	fp, fp
 80206ba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80206be:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 80206c2:	f10c 0101 	add.w	r1, ip, #1
 80206c6:	f10b 0001 	add.w	r0, fp, #1
 80206ca:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80206ce:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80206d2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80206d6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80206da:	4318      	orrs	r0, r3
 80206dc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80206e0:	ea40 000c 	orr.w	r0, r0, ip
 80206e4:	f8a8 0000 	strh.w	r0, [r8]
 80206e8:	e734      	b.n	8020554 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80206ea:	f113 0b01 	adds.w	fp, r3, #1
 80206ee:	f53f af31 	bmi.w	8020554 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80206f2:	45dc      	cmp	ip, fp
 80206f4:	f6ff af2e 	blt.w	8020554 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80206f8:	f110 0b01 	adds.w	fp, r0, #1
 80206fc:	f53f af2a 	bmi.w	8020554 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020700:	45de      	cmp	lr, fp
 8020702:	f6ff af27 	blt.w	8020554 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020706:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020708:	9302      	str	r3, [sp, #8]
 802070a:	fa0f f38e 	sxth.w	r3, lr
 802070e:	9301      	str	r3, [sp, #4]
 8020710:	fa0f f38c 	sxth.w	r3, ip
 8020714:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020718:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802071c:	9300      	str	r3, [sp, #0]
 802071e:	463a      	mov	r2, r7
 8020720:	4653      	mov	r3, sl
 8020722:	4641      	mov	r1, r8
 8020724:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020726:	f7ff fd4d 	bl	80201c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802072a:	e713      	b.n	8020554 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802072c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802072e:	1422      	asrs	r2, r4, #16
 8020730:	1433      	asrs	r3, r6, #16
 8020732:	fb05 2303 	mla	r3, r5, r3, r2
 8020736:	085a      	lsrs	r2, r3, #1
 8020738:	07dd      	lsls	r5, r3, #31
 802073a:	5cba      	ldrb	r2, [r7, r2]
 802073c:	bf54      	ite	pl
 802073e:	f002 020f 	andpl.w	r2, r2, #15
 8020742:	1112      	asrmi	r2, r2, #4
 8020744:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020748:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802074c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020750:	b2d2      	uxtb	r2, r2
 8020752:	2900      	cmp	r1, #0
 8020754:	d076      	beq.n	8020844 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020756:	f103 0e01 	add.w	lr, r3, #1
 802075a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802075e:	f01e 0f01 	tst.w	lr, #1
 8020762:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020766:	bf0c      	ite	eq
 8020768:	f00c 0c0f 	andeq.w	ip, ip, #15
 802076c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8020770:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020774:	fa5f f58c 	uxtb.w	r5, ip
 8020778:	9512      	str	r5, [sp, #72]	@ 0x48
 802077a:	b300      	cbz	r0, 80207be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802077c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802077e:	442b      	add	r3, r5
 8020780:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020784:	07dd      	lsls	r5, r3, #31
 8020786:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802078a:	bf54      	ite	pl
 802078c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020790:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020794:	3301      	adds	r3, #1
 8020796:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802079a:	fa5f f58c 	uxtb.w	r5, ip
 802079e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80207a2:	950c      	str	r5, [sp, #48]	@ 0x30
 80207a4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80207a8:	07dd      	lsls	r5, r3, #31
 80207aa:	bf54      	ite	pl
 80207ac:	f00c 0c0f 	andpl.w	ip, ip, #15
 80207b0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80207b4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80207b8:	fa5f f38c 	uxtb.w	r3, ip
 80207bc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80207be:	b289      	uxth	r1, r1
 80207c0:	b280      	uxth	r0, r0
 80207c2:	fb01 f300 	mul.w	r3, r1, r0
 80207c6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80207ca:	0109      	lsls	r1, r1, #4
 80207cc:	b280      	uxth	r0, r0
 80207ce:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 80207d2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80207d4:	1ac9      	subs	r1, r1, r3
 80207d6:	ebac 0c00 	sub.w	ip, ip, r0
 80207da:	b289      	uxth	r1, r1
 80207dc:	4369      	muls	r1, r5
 80207de:	fa1f fc8c 	uxth.w	ip, ip
 80207e2:	fb02 120c 	mla	r2, r2, ip, r1
 80207e6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80207e8:	fb00 2001 	mla	r0, r0, r1, r2
 80207ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80207ee:	fb03 0302 	mla	r3, r3, r2, r0
 80207f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80207f6:	b1d3      	cbz	r3, 802082e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80207f8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80207fa:	4353      	muls	r3, r2
 80207fc:	1c5a      	adds	r2, r3, #1
 80207fe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020802:	4a0f      	ldr	r2, [pc, #60]	@ (8020840 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8020804:	121b      	asrs	r3, r3, #8
 8020806:	6812      	ldr	r2, [r2, #0]
 8020808:	2bff      	cmp	r3, #255	@ 0xff
 802080a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802080e:	d12d      	bne.n	802086c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8020810:	0953      	lsrs	r3, r2, #5
 8020812:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8020816:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802081a:	f02c 0c07 	bic.w	ip, ip, #7
 802081e:	ea43 0c0c 	orr.w	ip, r3, ip
 8020822:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020826:	ea4c 0202 	orr.w	r2, ip, r2
 802082a:	f8a8 2000 	strh.w	r2, [r8]
 802082e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020830:	441c      	add	r4, r3
 8020832:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020834:	f108 0802 	add.w	r8, r8, #2
 8020838:	441e      	add	r6, r3
 802083a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802083e:	e6ba      	b.n	80205b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8020840:	20014050 	.word	0x20014050
 8020844:	2800      	cmp	r0, #0
 8020846:	d0ba      	beq.n	80207be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020848:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802084a:	442b      	add	r3, r5
 802084c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020850:	07db      	lsls	r3, r3, #31
 8020852:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020856:	bf54      	ite	pl
 8020858:	f00c 0c0f 	andpl.w	ip, ip, #15
 802085c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020860:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020864:	fa5f f38c 	uxtb.w	r3, ip
 8020868:	930c      	str	r3, [sp, #48]	@ 0x30
 802086a:	e7a8      	b.n	80207be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802086c:	f8b8 e000 	ldrh.w	lr, [r8]
 8020870:	fa1f fa83 	uxth.w	sl, r3
 8020874:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020878:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802087c:	43db      	mvns	r3, r3
 802087e:	b2db      	uxtb	r3, r3
 8020880:	fb11 f10a 	smulbb	r1, r1, sl
 8020884:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020888:	fb00 1003 	mla	r0, r0, r3, r1
 802088c:	b2d2      	uxtb	r2, r2
 802088e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8020892:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020896:	fa5f fe8e 	uxtb.w	lr, lr
 802089a:	fb12 f20a 	smulbb	r2, r2, sl
 802089e:	fb0e 2203 	mla	r2, lr, r3, r2
 80208a2:	fa5f fc8c 	uxtb.w	ip, ip
 80208a6:	b280      	uxth	r0, r0
 80208a8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80208ac:	b292      	uxth	r2, r2
 80208ae:	fb1c fc0a 	smulbb	ip, ip, sl
 80208b2:	fb01 cc03 	mla	ip, r1, r3, ip
 80208b6:	1c43      	adds	r3, r0, #1
 80208b8:	1c51      	adds	r1, r2, #1
 80208ba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80208be:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80208c2:	fa1f fc8c 	uxth.w	ip, ip
 80208c6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80208ca:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80208ce:	4308      	orrs	r0, r1
 80208d0:	f10c 0101 	add.w	r1, ip, #1
 80208d4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80208d8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80208dc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80208e0:	ea40 000c 	orr.w	r0, r0, ip
 80208e4:	f8a8 0000 	strh.w	r0, [r8]
 80208e8:	e7a1      	b.n	802082e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80208ea:	b017      	add	sp, #92	@ 0x5c
 80208ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080208f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80208f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80208f4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80208f8:	2d00      	cmp	r5, #0
 80208fa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80208fe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8020902:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8020906:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802090a:	fb05 0e03 	mla	lr, r5, r3, r0
 802090e:	f2c0 80b0 	blt.w	8020a72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8020912:	45a9      	cmp	r9, r5
 8020914:	f340 80ad 	ble.w	8020a72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8020918:	2800      	cmp	r0, #0
 802091a:	f2c0 80a8 	blt.w	8020a6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802091e:	4580      	cmp	r8, r0
 8020920:	f340 80a5 	ble.w	8020a6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8020924:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8020928:	f01e 0f01 	tst.w	lr, #1
 802092c:	5d16      	ldrb	r6, [r2, r4]
 802092e:	bf0c      	ite	eq
 8020930:	f006 060f 	andeq.w	r6, r6, #15
 8020934:	1136      	asrne	r6, r6, #4
 8020936:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802093a:	b2f6      	uxtb	r6, r6
 802093c:	1c44      	adds	r4, r0, #1
 802093e:	f100 809b 	bmi.w	8020a78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8020942:	45a0      	cmp	r8, r4
 8020944:	f340 8098 	ble.w	8020a78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8020948:	2f00      	cmp	r7, #0
 802094a:	f000 8097 	beq.w	8020a7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802094e:	f10e 0a01 	add.w	sl, lr, #1
 8020952:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020956:	f01a 0f01 	tst.w	sl, #1
 802095a:	5d14      	ldrb	r4, [r2, r4]
 802095c:	bf0c      	ite	eq
 802095e:	f004 040f 	andeq.w	r4, r4, #15
 8020962:	1124      	asrne	r4, r4, #4
 8020964:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020968:	b2e4      	uxtb	r4, r4
 802096a:	3501      	adds	r5, #1
 802096c:	f100 808a 	bmi.w	8020a84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020970:	45a9      	cmp	r9, r5
 8020972:	f340 8087 	ble.w	8020a84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020976:	f1bc 0f00 	cmp.w	ip, #0
 802097a:	f000 8086 	beq.w	8020a8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802097e:	2800      	cmp	r0, #0
 8020980:	db7e      	blt.n	8020a80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020982:	4580      	cmp	r8, r0
 8020984:	dd7c      	ble.n	8020a80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020986:	eb03 090e 	add.w	r9, r3, lr
 802098a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802098e:	f019 0f01 	tst.w	r9, #1
 8020992:	5d55      	ldrb	r5, [r2, r5]
 8020994:	bf0c      	ite	eq
 8020996:	f005 050f 	andeq.w	r5, r5, #15
 802099a:	112d      	asrne	r5, r5, #4
 802099c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80209a0:	b2ed      	uxtb	r5, r5
 80209a2:	3001      	adds	r0, #1
 80209a4:	d474      	bmi.n	8020a90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80209a6:	4580      	cmp	r8, r0
 80209a8:	dd72      	ble.n	8020a90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80209aa:	2f00      	cmp	r7, #0
 80209ac:	d072      	beq.n	8020a94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80209ae:	3301      	adds	r3, #1
 80209b0:	449e      	add	lr, r3
 80209b2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80209b6:	f01e 0f01 	tst.w	lr, #1
 80209ba:	5cd0      	ldrb	r0, [r2, r3]
 80209bc:	bf0c      	ite	eq
 80209be:	f000 000f 	andeq.w	r0, r0, #15
 80209c2:	1100      	asrne	r0, r0, #4
 80209c4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80209c8:	b2c3      	uxtb	r3, r0
 80209ca:	b2ba      	uxth	r2, r7
 80209cc:	fa1f fc8c 	uxth.w	ip, ip
 80209d0:	fb02 f00c 	mul.w	r0, r2, ip
 80209d4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80209d8:	0112      	lsls	r2, r2, #4
 80209da:	fa1f fc8c 	uxth.w	ip, ip
 80209de:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 80209e2:	1a12      	subs	r2, r2, r0
 80209e4:	eba7 070c 	sub.w	r7, r7, ip
 80209e8:	b292      	uxth	r2, r2
 80209ea:	b2bf      	uxth	r7, r7
 80209ec:	4362      	muls	r2, r4
 80209ee:	fb06 2207 	mla	r2, r6, r7, r2
 80209f2:	fb0c 2505 	mla	r5, ip, r5, r2
 80209f6:	fb00 5303 	mla	r3, r0, r3, r5
 80209fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80209fe:	b3a3      	cbz	r3, 8020a6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8020a00:	4a25      	ldr	r2, [pc, #148]	@ (8020a98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8020a02:	880e      	ldrh	r6, [r1, #0]
 8020a04:	6815      	ldr	r5, [r2, #0]
 8020a06:	1234      	asrs	r4, r6, #8
 8020a08:	b29a      	uxth	r2, r3
 8020a0a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8020a0e:	43db      	mvns	r3, r3
 8020a10:	b2db      	uxtb	r3, r3
 8020a12:	fb10 f002 	smulbb	r0, r0, r2
 8020a16:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020a1a:	fb04 0403 	mla	r4, r4, r3, r0
 8020a1e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8020a22:	10f0      	asrs	r0, r6, #3
 8020a24:	b2ed      	uxtb	r5, r5
 8020a26:	00f6      	lsls	r6, r6, #3
 8020a28:	fb17 f702 	smulbb	r7, r7, r2
 8020a2c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020a30:	fb15 f202 	smulbb	r2, r5, r2
 8020a34:	b2f6      	uxtb	r6, r6
 8020a36:	b2a4      	uxth	r4, r4
 8020a38:	fb00 7003 	mla	r0, r0, r3, r7
 8020a3c:	fb06 2303 	mla	r3, r6, r3, r2
 8020a40:	b29a      	uxth	r2, r3
 8020a42:	1c63      	adds	r3, r4, #1
 8020a44:	b280      	uxth	r0, r0
 8020a46:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020a4a:	1c53      	adds	r3, r2, #1
 8020a4c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020a50:	1c42      	adds	r2, r0, #1
 8020a52:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020a56:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020a5a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020a5e:	0940      	lsrs	r0, r0, #5
 8020a60:	4323      	orrs	r3, r4
 8020a62:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020a66:	4303      	orrs	r3, r0
 8020a68:	800b      	strh	r3, [r1, #0]
 8020a6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020a6e:	2600      	movs	r6, #0
 8020a70:	e764      	b.n	802093c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8020a72:	2400      	movs	r4, #0
 8020a74:	4626      	mov	r6, r4
 8020a76:	e778      	b.n	802096a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020a78:	2400      	movs	r4, #0
 8020a7a:	e776      	b.n	802096a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020a7c:	463c      	mov	r4, r7
 8020a7e:	e774      	b.n	802096a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020a80:	2500      	movs	r5, #0
 8020a82:	e78e      	b.n	80209a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8020a84:	2300      	movs	r3, #0
 8020a86:	461d      	mov	r5, r3
 8020a88:	e79f      	b.n	80209ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020a8a:	4663      	mov	r3, ip
 8020a8c:	4665      	mov	r5, ip
 8020a8e:	e79c      	b.n	80209ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020a90:	2300      	movs	r3, #0
 8020a92:	e79a      	b.n	80209ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020a94:	463b      	mov	r3, r7
 8020a96:	e798      	b.n	80209ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020a98:	20014050 	.word	0x20014050

08020a9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020aa0:	b093      	sub	sp, #76	@ 0x4c
 8020aa2:	461d      	mov	r5, r3
 8020aa4:	920c      	str	r2, [sp, #48]	@ 0x30
 8020aa6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8020aa8:	9107      	str	r1, [sp, #28]
 8020aaa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8020aae:	9011      	str	r0, [sp, #68]	@ 0x44
 8020ab0:	6850      	ldr	r0, [r2, #4]
 8020ab2:	6812      	ldr	r2, [r2, #0]
 8020ab4:	fb00 1303 	mla	r3, r0, r3, r1
 8020ab8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020abc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020abe:	689b      	ldr	r3, [r3, #8]
 8020ac0:	3301      	adds	r3, #1
 8020ac2:	f023 0301 	bic.w	r3, r3, #1
 8020ac6:	9306      	str	r3, [sp, #24]
 8020ac8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020aca:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8020ace:	681f      	ldr	r7, [r3, #0]
 8020ad0:	9b07      	ldr	r3, [sp, #28]
 8020ad2:	2b00      	cmp	r3, #0
 8020ad4:	dc03      	bgt.n	8020ade <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020ad6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020ad8:	2b00      	cmp	r3, #0
 8020ada:	f340 8267 	ble.w	8020fac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020ade:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020ae0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020ae4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020ae8:	1e48      	subs	r0, r1, #1
 8020aea:	f102 3cff 	add.w	ip, r2, #4294967295
 8020aee:	2d00      	cmp	r5, #0
 8020af0:	f340 80b8 	ble.w	8020c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8020af4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020af8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020afc:	d406      	bmi.n	8020b0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020afe:	4586      	cmp	lr, r0
 8020b00:	da04      	bge.n	8020b0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020b02:	2b00      	cmp	r3, #0
 8020b04:	db02      	blt.n	8020b0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020b06:	4563      	cmp	r3, ip
 8020b08:	f2c0 80ad 	blt.w	8020c66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8020b0c:	f11e 0e01 	adds.w	lr, lr, #1
 8020b10:	f100 80a0 	bmi.w	8020c54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020b14:	4571      	cmp	r1, lr
 8020b16:	f2c0 809d 	blt.w	8020c54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020b1a:	3301      	adds	r3, #1
 8020b1c:	f100 809a 	bmi.w	8020c54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020b20:	429a      	cmp	r2, r3
 8020b22:	f2c0 8097 	blt.w	8020c54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020b26:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8020b2a:	9509      	str	r5, [sp, #36]	@ 0x24
 8020b2c:	46c8      	mov	r8, r9
 8020b2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020b30:	2b00      	cmp	r3, #0
 8020b32:	f340 80b6 	ble.w	8020ca2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8020b36:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8020b3a:	9308      	str	r3, [sp, #32]
 8020b3c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020b3e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8020b42:	1423      	asrs	r3, r4, #16
 8020b44:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020b48:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020b4c:	f100 813e 	bmi.w	8020dcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b50:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020b54:	455b      	cmp	r3, fp
 8020b56:	f280 8139 	bge.w	8020dcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b5a:	2800      	cmp	r0, #0
 8020b5c:	f2c0 8136 	blt.w	8020dcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b60:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020b64:	4558      	cmp	r0, fp
 8020b66:	f280 8131 	bge.w	8020dcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b6a:	9a06      	ldr	r2, [sp, #24]
 8020b6c:	fb00 3302 	mla	r3, r0, r2, r3
 8020b70:	0858      	lsrs	r0, r3, #1
 8020b72:	07da      	lsls	r2, r3, #31
 8020b74:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020b78:	9a08      	ldr	r2, [sp, #32]
 8020b7a:	bf54      	ite	pl
 8020b7c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020b80:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020b84:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020b88:	fa5f fc8c 	uxtb.w	ip, ip
 8020b8c:	2a00      	cmp	r2, #0
 8020b8e:	f000 80cb 	beq.w	8020d28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020b92:	1c58      	adds	r0, r3, #1
 8020b94:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020b98:	07c0      	lsls	r0, r0, #31
 8020b9a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020b9e:	bf54      	ite	pl
 8020ba0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020ba4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020ba8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020bac:	fa5f fe8e 	uxtb.w	lr, lr
 8020bb0:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8020bb4:	b1b9      	cbz	r1, 8020be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020bb6:	4453      	add	r3, sl
 8020bb8:	0858      	lsrs	r0, r3, #1
 8020bba:	07da      	lsls	r2, r3, #31
 8020bbc:	5c38      	ldrb	r0, [r7, r0]
 8020bbe:	bf54      	ite	pl
 8020bc0:	f000 000f 	andpl.w	r0, r0, #15
 8020bc4:	1100      	asrmi	r0, r0, #4
 8020bc6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020bca:	b2c0      	uxtb	r0, r0
 8020bcc:	900a      	str	r0, [sp, #40]	@ 0x28
 8020bce:	1c58      	adds	r0, r3, #1
 8020bd0:	0843      	lsrs	r3, r0, #1
 8020bd2:	07c2      	lsls	r2, r0, #31
 8020bd4:	5cfb      	ldrb	r3, [r7, r3]
 8020bd6:	bf54      	ite	pl
 8020bd8:	f003 030f 	andpl.w	r3, r3, #15
 8020bdc:	111b      	asrmi	r3, r3, #4
 8020bde:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020be2:	b2db      	uxtb	r3, r3
 8020be4:	930e      	str	r3, [sp, #56]	@ 0x38
 8020be6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8020bea:	b289      	uxth	r1, r1
 8020bec:	fb02 f301 	mul.w	r3, r2, r1
 8020bf0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8020bf4:	0112      	lsls	r2, r2, #4
 8020bf6:	b289      	uxth	r1, r1
 8020bf8:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8020bfc:	1a40      	subs	r0, r0, r1
 8020bfe:	fa1f fe80 	uxth.w	lr, r0
 8020c02:	1ad2      	subs	r2, r2, r3
 8020c04:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020c06:	b292      	uxth	r2, r2
 8020c08:	4342      	muls	r2, r0
 8020c0a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8020c0e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020c10:	fb01 c102 	mla	r1, r1, r2, ip
 8020c14:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020c16:	fb03 1302 	mla	r3, r3, r2, r1
 8020c1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020c1e:	2bff      	cmp	r3, #255	@ 0xff
 8020c20:	f040 8093 	bne.w	8020d4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8020c24:	4bbe      	ldr	r3, [pc, #760]	@ (8020f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020c26:	681a      	ldr	r2, [r3, #0]
 8020c28:	4bbe      	ldr	r3, [pc, #760]	@ (8020f24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020c2a:	0951      	lsrs	r1, r2, #5
 8020c2c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020c30:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020c34:	430b      	orrs	r3, r1
 8020c36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020c3a:	4313      	orrs	r3, r2
 8020c3c:	f8a8 3000 	strh.w	r3, [r8]
 8020c40:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020c42:	441c      	add	r4, r3
 8020c44:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020c46:	441e      	add	r6, r3
 8020c48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020c4a:	3b01      	subs	r3, #1
 8020c4c:	f108 0802 	add.w	r8, r8, #2
 8020c50:	9309      	str	r3, [sp, #36]	@ 0x24
 8020c52:	e76c      	b.n	8020b2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020c54:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020c56:	441c      	add	r4, r3
 8020c58:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020c5a:	3d01      	subs	r5, #1
 8020c5c:	441e      	add	r6, r3
 8020c5e:	f109 0902 	add.w	r9, r9, #2
 8020c62:	e744      	b.n	8020aee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020c64:	d021      	beq.n	8020caa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020c66:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020c68:	1e6b      	subs	r3, r5, #1
 8020c6a:	fb00 4003 	mla	r0, r0, r3, r4
 8020c6e:	1400      	asrs	r0, r0, #16
 8020c70:	f53f af59 	bmi.w	8020b26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c74:	3901      	subs	r1, #1
 8020c76:	4288      	cmp	r0, r1
 8020c78:	f6bf af55 	bge.w	8020b26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c7c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8020c7e:	fb01 6303 	mla	r3, r1, r3, r6
 8020c82:	141b      	asrs	r3, r3, #16
 8020c84:	f53f af4f 	bmi.w	8020b26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c88:	3a01      	subs	r2, #1
 8020c8a:	4293      	cmp	r3, r2
 8020c8c:	f6bf af4b 	bge.w	8020b26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c90:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8020c94:	9308      	str	r3, [sp, #32]
 8020c96:	46a8      	mov	r8, r5
 8020c98:	46ce      	mov	lr, r9
 8020c9a:	f1b8 0f00 	cmp.w	r8, #0
 8020c9e:	f300 80b5 	bgt.w	8020e0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020ca2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020ca6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020caa:	9b07      	ldr	r3, [sp, #28]
 8020cac:	2b00      	cmp	r3, #0
 8020cae:	f340 817d 	ble.w	8020fac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020cb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cb6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020cba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cbe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020cc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020cc4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020cc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020ccc:	eef0 6a62 	vmov.f32	s13, s5
 8020cd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020cd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020cd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020cdc:	ee16 4a90 	vmov	r4, s13
 8020ce0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020ce4:	eef0 6a43 	vmov.f32	s13, s6
 8020ce8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020cec:	ee12 2a90 	vmov	r2, s5
 8020cf0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020cf4:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cf8:	ee13 2a10 	vmov	r2, s6
 8020cfc:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020cfe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020d00:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d04:	9320      	str	r3, [sp, #128]	@ 0x80
 8020d06:	9b07      	ldr	r3, [sp, #28]
 8020d08:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020d0a:	3b01      	subs	r3, #1
 8020d0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d10:	9307      	str	r3, [sp, #28]
 8020d12:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020d14:	ee16 6a90 	vmov	r6, s13
 8020d18:	bf14      	ite	ne
 8020d1a:	461d      	movne	r5, r3
 8020d1c:	4615      	moveq	r5, r2
 8020d1e:	eeb0 3a67 	vmov.f32	s6, s15
 8020d22:	eef0 2a47 	vmov.f32	s5, s14
 8020d26:	e6d3      	b.n	8020ad0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020d28:	2900      	cmp	r1, #0
 8020d2a:	f43f af5c 	beq.w	8020be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020d2e:	eb0a 0003 	add.w	r0, sl, r3
 8020d32:	0843      	lsrs	r3, r0, #1
 8020d34:	07c0      	lsls	r0, r0, #31
 8020d36:	5cfb      	ldrb	r3, [r7, r3]
 8020d38:	bf54      	ite	pl
 8020d3a:	f003 030f 	andpl.w	r3, r3, #15
 8020d3e:	111b      	asrmi	r3, r3, #4
 8020d40:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020d44:	b2db      	uxtb	r3, r3
 8020d46:	930a      	str	r3, [sp, #40]	@ 0x28
 8020d48:	e74d      	b.n	8020be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020d4a:	2b00      	cmp	r3, #0
 8020d4c:	f43f af78 	beq.w	8020c40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020d50:	4a73      	ldr	r2, [pc, #460]	@ (8020f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020d52:	f8b8 c000 	ldrh.w	ip, [r8]
 8020d56:	6810      	ldr	r0, [r2, #0]
 8020d58:	fa1f fe83 	uxth.w	lr, r3
 8020d5c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020d60:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020d64:	43db      	mvns	r3, r3
 8020d66:	b2db      	uxtb	r3, r3
 8020d68:	fb12 f20e 	smulbb	r2, r2, lr
 8020d6c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020d70:	fb01 2103 	mla	r1, r1, r3, r2
 8020d74:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020d78:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020d7c:	b2c0      	uxtb	r0, r0
 8020d7e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020d82:	fb1b fb0e 	smulbb	fp, fp, lr
 8020d86:	b289      	uxth	r1, r1
 8020d88:	fb10 fe0e 	smulbb	lr, r0, lr
 8020d8c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020d90:	fa5f fc8c 	uxtb.w	ip, ip
 8020d94:	fb02 b203 	mla	r2, r2, r3, fp
 8020d98:	1c48      	adds	r0, r1, #1
 8020d9a:	fb0c e303 	mla	r3, ip, r3, lr
 8020d9e:	b292      	uxth	r2, r2
 8020da0:	b29b      	uxth	r3, r3
 8020da2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8020da6:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8020daa:	f102 0b01 	add.w	fp, r2, #1
 8020dae:	1c59      	adds	r1, r3, #1
 8020db0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020db4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020db8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020dbc:	0952      	lsrs	r2, r2, #5
 8020dbe:	4301      	orrs	r1, r0
 8020dc0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020dc4:	4311      	orrs	r1, r2
 8020dc6:	f8a8 1000 	strh.w	r1, [r8]
 8020dca:	e739      	b.n	8020c40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020dcc:	f113 0b01 	adds.w	fp, r3, #1
 8020dd0:	f53f af36 	bmi.w	8020c40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020dd4:	45dc      	cmp	ip, fp
 8020dd6:	f6ff af33 	blt.w	8020c40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020dda:	f110 0b01 	adds.w	fp, r0, #1
 8020dde:	f53f af2f 	bmi.w	8020c40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020de2:	45de      	cmp	lr, fp
 8020de4:	f6ff af2c 	blt.w	8020c40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020de8:	9a08      	ldr	r2, [sp, #32]
 8020dea:	9302      	str	r3, [sp, #8]
 8020dec:	fa0f f38e 	sxth.w	r3, lr
 8020df0:	9301      	str	r3, [sp, #4]
 8020df2:	fa0f f38c 	sxth.w	r3, ip
 8020df6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020dfa:	9105      	str	r1, [sp, #20]
 8020dfc:	9300      	str	r3, [sp, #0]
 8020dfe:	463a      	mov	r2, r7
 8020e00:	4653      	mov	r3, sl
 8020e02:	4641      	mov	r1, r8
 8020e04:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020e06:	f7ff fd73 	bl	80208f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8020e0a:	e719      	b.n	8020c40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020e0c:	9906      	ldr	r1, [sp, #24]
 8020e0e:	1422      	asrs	r2, r4, #16
 8020e10:	1433      	asrs	r3, r6, #16
 8020e12:	fb01 2303 	mla	r3, r1, r3, r2
 8020e16:	085a      	lsrs	r2, r3, #1
 8020e18:	07d9      	lsls	r1, r3, #31
 8020e1a:	5cba      	ldrb	r2, [r7, r2]
 8020e1c:	bf54      	ite	pl
 8020e1e:	f002 020f 	andpl.w	r2, r2, #15
 8020e22:	1112      	asrmi	r2, r2, #4
 8020e24:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020e28:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020e2c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020e30:	b2d2      	uxtb	r2, r2
 8020e32:	2800      	cmp	r0, #0
 8020e34:	d062      	beq.n	8020efc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8020e36:	f103 0a01 	add.w	sl, r3, #1
 8020e3a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8020e3e:	f01a 0f01 	tst.w	sl, #1
 8020e42:	5c79      	ldrb	r1, [r7, r1]
 8020e44:	bf0c      	ite	eq
 8020e46:	f001 010f 	andeq.w	r1, r1, #15
 8020e4a:	1109      	asrne	r1, r1, #4
 8020e4c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020e50:	b2c9      	uxtb	r1, r1
 8020e52:	910f      	str	r1, [sp, #60]	@ 0x3c
 8020e54:	f1bc 0f00 	cmp.w	ip, #0
 8020e58:	d019      	beq.n	8020e8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020e5a:	9908      	ldr	r1, [sp, #32]
 8020e5c:	440b      	add	r3, r1
 8020e5e:	0859      	lsrs	r1, r3, #1
 8020e60:	f013 0f01 	tst.w	r3, #1
 8020e64:	5c79      	ldrb	r1, [r7, r1]
 8020e66:	bf0c      	ite	eq
 8020e68:	f001 010f 	andeq.w	r1, r1, #15
 8020e6c:	1109      	asrne	r1, r1, #4
 8020e6e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020e72:	b2c9      	uxtb	r1, r1
 8020e74:	3301      	adds	r3, #1
 8020e76:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020e78:	0859      	lsrs	r1, r3, #1
 8020e7a:	07db      	lsls	r3, r3, #31
 8020e7c:	5c79      	ldrb	r1, [r7, r1]
 8020e7e:	bf54      	ite	pl
 8020e80:	f001 010f 	andpl.w	r1, r1, #15
 8020e84:	1109      	asrmi	r1, r1, #4
 8020e86:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020e8a:	b2c9      	uxtb	r1, r1
 8020e8c:	9110      	str	r1, [sp, #64]	@ 0x40
 8020e8e:	b280      	uxth	r0, r0
 8020e90:	fa1f fc8c 	uxth.w	ip, ip
 8020e94:	fb00 f30c 	mul.w	r3, r0, ip
 8020e98:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020e9c:	0100      	lsls	r0, r0, #4
 8020e9e:	fa1f fc8c 	uxth.w	ip, ip
 8020ea2:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8020ea6:	eba1 010c 	sub.w	r1, r1, ip
 8020eaa:	fa1f fa81 	uxth.w	sl, r1
 8020eae:	1ac0      	subs	r0, r0, r3
 8020eb0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8020eb2:	b280      	uxth	r0, r0
 8020eb4:	4348      	muls	r0, r1
 8020eb6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8020eb8:	fb02 020a 	mla	r2, r2, sl, r0
 8020ebc:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020ec0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020ec2:	fb03 c302 	mla	r3, r3, r2, ip
 8020ec6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020eca:	2bff      	cmp	r3, #255	@ 0xff
 8020ecc:	d12c      	bne.n	8020f28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8020ece:	4b14      	ldr	r3, [pc, #80]	@ (8020f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020ed0:	681a      	ldr	r2, [r3, #0]
 8020ed2:	4b14      	ldr	r3, [pc, #80]	@ (8020f24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020ed4:	0951      	lsrs	r1, r2, #5
 8020ed6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020eda:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020ede:	430b      	orrs	r3, r1
 8020ee0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020ee4:	4313      	orrs	r3, r2
 8020ee6:	f8ae 3000 	strh.w	r3, [lr]
 8020eea:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020eec:	441c      	add	r4, r3
 8020eee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020ef0:	f10e 0e02 	add.w	lr, lr, #2
 8020ef4:	441e      	add	r6, r3
 8020ef6:	f108 38ff 	add.w	r8, r8, #4294967295
 8020efa:	e6ce      	b.n	8020c9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8020efc:	f1bc 0f00 	cmp.w	ip, #0
 8020f00:	d0c5      	beq.n	8020e8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020f02:	9908      	ldr	r1, [sp, #32]
 8020f04:	440b      	add	r3, r1
 8020f06:	0859      	lsrs	r1, r3, #1
 8020f08:	07db      	lsls	r3, r3, #31
 8020f0a:	5c79      	ldrb	r1, [r7, r1]
 8020f0c:	bf54      	ite	pl
 8020f0e:	f001 010f 	andpl.w	r1, r1, #15
 8020f12:	1109      	asrmi	r1, r1, #4
 8020f14:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020f18:	b2c9      	uxtb	r1, r1
 8020f1a:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020f1c:	e7b7      	b.n	8020e8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020f1e:	bf00      	nop
 8020f20:	20014050 	.word	0x20014050
 8020f24:	fffff800 	.word	0xfffff800
 8020f28:	2b00      	cmp	r3, #0
 8020f2a:	d0de      	beq.n	8020eea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020f2c:	4a21      	ldr	r2, [pc, #132]	@ (8020fb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8020f2e:	f8be c000 	ldrh.w	ip, [lr]
 8020f32:	6810      	ldr	r0, [r2, #0]
 8020f34:	fa1f fa83 	uxth.w	sl, r3
 8020f38:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020f3c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020f40:	43db      	mvns	r3, r3
 8020f42:	b2db      	uxtb	r3, r3
 8020f44:	fb12 f20a 	smulbb	r2, r2, sl
 8020f48:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020f4c:	fb01 2103 	mla	r1, r1, r3, r2
 8020f50:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020f54:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020f58:	b2c0      	uxtb	r0, r0
 8020f5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020f5e:	fa5f fc8c 	uxtb.w	ip, ip
 8020f62:	fb10 f00a 	smulbb	r0, r0, sl
 8020f66:	fb0c 0003 	mla	r0, ip, r3, r0
 8020f6a:	b289      	uxth	r1, r1
 8020f6c:	fb1b fb0a 	smulbb	fp, fp, sl
 8020f70:	b280      	uxth	r0, r0
 8020f72:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020f76:	fb02 b203 	mla	r2, r2, r3, fp
 8020f7a:	1c4b      	adds	r3, r1, #1
 8020f7c:	f100 0b01 	add.w	fp, r0, #1
 8020f80:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020f84:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020f88:	b292      	uxth	r2, r2
 8020f8a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8020f8e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8020f92:	ea4b 0101 	orr.w	r1, fp, r1
 8020f96:	f102 0b01 	add.w	fp, r2, #1
 8020f9a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020f9e:	0952      	lsrs	r2, r2, #5
 8020fa0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020fa4:	4311      	orrs	r1, r2
 8020fa6:	f8ae 1000 	strh.w	r1, [lr]
 8020faa:	e79e      	b.n	8020eea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020fac:	b013      	add	sp, #76	@ 0x4c
 8020fae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020fb2:	bf00      	nop
 8020fb4:	20014050 	.word	0x20014050

08020fb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8020fb8:	b570      	push	{r4, r5, r6, lr}
 8020fba:	1208      	asrs	r0, r1, #8
 8020fbc:	b29e      	uxth	r6, r3
 8020fbe:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8020fc2:	1213      	asrs	r3, r2, #8
 8020fc4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020fc8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020fcc:	fb13 f305 	smulbb	r3, r3, r5
 8020fd0:	fb10 f006 	smulbb	r0, r0, r6
 8020fd4:	4418      	add	r0, r3
 8020fd6:	10cc      	asrs	r4, r1, #3
 8020fd8:	10d3      	asrs	r3, r2, #3
 8020fda:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020fde:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8020fe2:	fb13 f305 	smulbb	r3, r3, r5
 8020fe6:	fb14 f406 	smulbb	r4, r4, r6
 8020fea:	00c9      	lsls	r1, r1, #3
 8020fec:	00d2      	lsls	r2, r2, #3
 8020fee:	441c      	add	r4, r3
 8020ff0:	b2d2      	uxtb	r2, r2
 8020ff2:	b2cb      	uxtb	r3, r1
 8020ff4:	fb12 f205 	smulbb	r2, r2, r5
 8020ff8:	b280      	uxth	r0, r0
 8020ffa:	fb13 f306 	smulbb	r3, r3, r6
 8020ffe:	4413      	add	r3, r2
 8021000:	1c42      	adds	r2, r0, #1
 8021002:	b29b      	uxth	r3, r3
 8021004:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021008:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 802100c:	1c58      	adds	r0, r3, #1
 802100e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021012:	b2a4      	uxth	r4, r4
 8021014:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021018:	4310      	orrs	r0, r2
 802101a:	1c62      	adds	r2, r4, #1
 802101c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021020:	0964      	lsrs	r4, r4, #5
 8021022:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021026:	4320      	orrs	r0, r4
 8021028:	bd70      	pop	{r4, r5, r6, pc}
	...

0802102c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802102c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021030:	b08f      	sub	sp, #60	@ 0x3c
 8021032:	461c      	mov	r4, r3
 8021034:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8021038:	9004      	str	r0, [sp, #16]
 802103a:	460d      	mov	r5, r1
 802103c:	4616      	mov	r6, r2
 802103e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021040:	2f00      	cmp	r7, #0
 8021042:	f000 80f6 	beq.w	8021232 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8021046:	6820      	ldr	r0, [r4, #0]
 8021048:	6861      	ldr	r1, [r4, #4]
 802104a:	aa0a      	add	r2, sp, #40	@ 0x28
 802104c:	c203      	stmia	r2!, {r0, r1}
 802104e:	6818      	ldr	r0, [r3, #0]
 8021050:	6859      	ldr	r1, [r3, #4]
 8021052:	aa0c      	add	r2, sp, #48	@ 0x30
 8021054:	c203      	stmia	r2!, {r0, r1}
 8021056:	a80a      	add	r0, sp, #40	@ 0x28
 8021058:	f7ee fdda 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802105c:	4621      	mov	r1, r4
 802105e:	a80c      	add	r0, sp, #48	@ 0x30
 8021060:	f7ee fdfe 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021064:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8021068:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802106c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8021070:	f002 0301 	and.w	r3, r2, #1
 8021074:	9306      	str	r3, [sp, #24]
 8021076:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802107a:	f003 0101 	and.w	r1, r3, #1
 802107e:	9105      	str	r1, [sp, #20]
 8021080:	9805      	ldr	r0, [sp, #20]
 8021082:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8021086:	4403      	add	r3, r0
 8021088:	fb01 2303 	mla	r3, r1, r3, r2
 802108c:	f04f 0802 	mov.w	r8, #2
 8021090:	fb93 f3f8 	sdiv	r3, r3, r8
 8021094:	441d      	add	r5, r3
 8021096:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802109a:	441a      	add	r2, r3
 802109c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80210a0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80210a4:	4419      	add	r1, r3
 80210a6:	4b64      	ldr	r3, [pc, #400]	@ (8021238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80210a8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80210ac:	6818      	ldr	r0, [r3, #0]
 80210ae:	6803      	ldr	r3, [r0, #0]
 80210b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80210b2:	4798      	blx	r3
 80210b4:	4a61      	ldr	r2, [pc, #388]	@ (802123c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80210b6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80210ba:	8813      	ldrh	r3, [r2, #0]
 80210bc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 80210c0:	2fff      	cmp	r7, #255	@ 0xff
 80210c2:	fb03 a404 	mla	r4, r3, r4, sl
 80210c6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80210ca:	f106 0604 	add.w	r6, r6, #4
 80210ce:	4611      	mov	r1, r2
 80210d0:	fb03 fb0b 	mul.w	fp, r3, fp
 80210d4:	d06b      	beq.n	80211ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80210d6:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 80210da:	9303      	str	r3, [sp, #12]
 80210dc:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80210e0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80210e4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80210e8:	9b07      	ldr	r3, [sp, #28]
 80210ea:	42a3      	cmp	r3, r4
 80210ec:	f240 809c 	bls.w	8021228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80210f0:	9b06      	ldr	r3, [sp, #24]
 80210f2:	2b00      	cmp	r3, #0
 80210f4:	d039      	beq.n	802116a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80210f6:	782b      	ldrb	r3, [r5, #0]
 80210f8:	8822      	ldrh	r2, [r4, #0]
 80210fa:	9804      	ldr	r0, [sp, #16]
 80210fc:	f003 030f 	and.w	r3, r3, #15
 8021100:	f105 0801 	add.w	r8, r5, #1
 8021104:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021108:	9b03      	ldr	r3, [sp, #12]
 802110a:	9300      	str	r3, [sp, #0]
 802110c:	463b      	mov	r3, r7
 802110e:	f7ff ff53 	bl	8020fb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021112:	f824 0b02 	strh.w	r0, [r4], #2
 8021116:	f109 3bff 	add.w	fp, r9, #4294967295
 802111a:	f1bb 0f01 	cmp.w	fp, #1
 802111e:	46a2      	mov	sl, r4
 8021120:	f104 0404 	add.w	r4, r4, #4
 8021124:	dd24      	ble.n	8021170 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8021126:	f898 3000 	ldrb.w	r3, [r8]
 802112a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802112e:	9804      	ldr	r0, [sp, #16]
 8021130:	091b      	lsrs	r3, r3, #4
 8021132:	f1ab 0b02 	sub.w	fp, fp, #2
 8021136:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802113a:	9b03      	ldr	r3, [sp, #12]
 802113c:	9300      	str	r3, [sp, #0]
 802113e:	463b      	mov	r3, r7
 8021140:	f7ff ff3a 	bl	8020fb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021144:	f824 0c04 	strh.w	r0, [r4, #-4]
 8021148:	f818 3b01 	ldrb.w	r3, [r8], #1
 802114c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8021150:	9804      	ldr	r0, [sp, #16]
 8021152:	f003 030f 	and.w	r3, r3, #15
 8021156:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802115a:	9b03      	ldr	r3, [sp, #12]
 802115c:	9300      	str	r3, [sp, #0]
 802115e:	463b      	mov	r3, r7
 8021160:	f7ff ff2a 	bl	8020fb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021164:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021168:	e7d7      	b.n	802111a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802116a:	46a8      	mov	r8, r5
 802116c:	46cb      	mov	fp, r9
 802116e:	e7d4      	b.n	802111a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8021170:	d10e      	bne.n	8021190 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8021172:	f898 3000 	ldrb.w	r3, [r8]
 8021176:	f8ba 2000 	ldrh.w	r2, [sl]
 802117a:	9804      	ldr	r0, [sp, #16]
 802117c:	091b      	lsrs	r3, r3, #4
 802117e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021182:	9b03      	ldr	r3, [sp, #12]
 8021184:	9300      	str	r3, [sp, #0]
 8021186:	463b      	mov	r3, r7
 8021188:	f7ff ff16 	bl	8020fb8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802118c:	f82a 0b02 	strh.w	r0, [sl], #2
 8021190:	9b08      	ldr	r3, [sp, #32]
 8021192:	9a05      	ldr	r2, [sp, #20]
 8021194:	881c      	ldrh	r4, [r3, #0]
 8021196:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802119a:	eba4 0409 	sub.w	r4, r4, r9
 802119e:	4413      	add	r3, r2
 80211a0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80211a4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80211a6:	fb93 f3f2 	sdiv	r3, r3, r2
 80211aa:	441d      	add	r5, r3
 80211ac:	e79c      	b.n	80210e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80211ae:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80211b2:	45a3      	cmp	fp, r4
 80211b4:	d938      	bls.n	8021228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80211b6:	9b06      	ldr	r3, [sp, #24]
 80211b8:	b1f3      	cbz	r3, 80211f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80211ba:	782b      	ldrb	r3, [r5, #0]
 80211bc:	f003 030f 	and.w	r3, r3, #15
 80211c0:	1c6a      	adds	r2, r5, #1
 80211c2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80211c6:	8023      	strh	r3, [r4, #0]
 80211c8:	f109 30ff 	add.w	r0, r9, #4294967295
 80211cc:	3402      	adds	r4, #2
 80211ce:	2801      	cmp	r0, #1
 80211d0:	4623      	mov	r3, r4
 80211d2:	f104 0404 	add.w	r4, r4, #4
 80211d6:	dd12      	ble.n	80211fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80211d8:	7813      	ldrb	r3, [r2, #0]
 80211da:	091b      	lsrs	r3, r3, #4
 80211dc:	3802      	subs	r0, #2
 80211de:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80211e2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80211e6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80211ea:	f003 030f 	and.w	r3, r3, #15
 80211ee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80211f2:	f824 3c02 	strh.w	r3, [r4, #-2]
 80211f6:	e7ea      	b.n	80211ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80211f8:	462a      	mov	r2, r5
 80211fa:	4648      	mov	r0, r9
 80211fc:	e7e7      	b.n	80211ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80211fe:	d106      	bne.n	802120e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8021200:	7812      	ldrb	r2, [r2, #0]
 8021202:	0912      	lsrs	r2, r2, #4
 8021204:	3302      	adds	r3, #2
 8021206:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802120a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802120e:	880c      	ldrh	r4, [r1, #0]
 8021210:	9a05      	ldr	r2, [sp, #20]
 8021212:	eba4 0409 	sub.w	r4, r4, r9
 8021216:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802121a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802121e:	4413      	add	r3, r2
 8021220:	fb93 f3f8 	sdiv	r3, r3, r8
 8021224:	441d      	add	r5, r3
 8021226:	e7c4      	b.n	80211b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8021228:	4b03      	ldr	r3, [pc, #12]	@ (8021238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802122a:	6818      	ldr	r0, [r3, #0]
 802122c:	6803      	ldr	r3, [r0, #0]
 802122e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021230:	4798      	blx	r3
 8021232:	b00f      	add	sp, #60	@ 0x3c
 8021234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021238:	20014040 	.word	0x20014040
 802123c:	20014038 	.word	0x20014038

08021240 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8021240:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021242:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8021246:	2dff      	cmp	r5, #255	@ 0xff
 8021248:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802124c:	d10c      	bne.n	8021268 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802124e:	2bff      	cmp	r3, #255	@ 0xff
 8021250:	d10a      	bne.n	8021268 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8021252:	4b25      	ldr	r3, [pc, #148]	@ (80212e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8021254:	0948      	lsrs	r0, r1, #5
 8021256:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802125a:	403b      	ands	r3, r7
 802125c:	4318      	orrs	r0, r3
 802125e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021262:	4308      	orrs	r0, r1
 8021264:	b280      	uxth	r0, r0
 8021266:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021268:	fb15 f503 	smulbb	r5, r5, r3
 802126c:	b2ab      	uxth	r3, r5
 802126e:	1c5d      	adds	r5, r3, #1
 8021270:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8021274:	1214      	asrs	r4, r2, #8
 8021276:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802127a:	fa1f fc85 	uxth.w	ip, r5
 802127e:	10d6      	asrs	r6, r2, #3
 8021280:	00d0      	lsls	r0, r2, #3
 8021282:	43ed      	mvns	r5, r5
 8021284:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021288:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802128c:	b2eb      	uxtb	r3, r5
 802128e:	b2c0      	uxtb	r0, r0
 8021290:	fb12 f20c 	smulbb	r2, r2, ip
 8021294:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021298:	fb04 2403 	mla	r4, r4, r3, r2
 802129c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80212a0:	b2c8      	uxtb	r0, r1
 80212a2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80212a6:	b2fd      	uxtb	r5, r7
 80212a8:	fb10 f00c 	smulbb	r0, r0, ip
 80212ac:	b2a4      	uxth	r4, r4
 80212ae:	fb02 0003 	mla	r0, r2, r3, r0
 80212b2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80212b6:	fb15 f50c 	smulbb	r5, r5, ip
 80212ba:	fb06 5503 	mla	r5, r6, r3, r5
 80212be:	b283      	uxth	r3, r0
 80212c0:	1c60      	adds	r0, r4, #1
 80212c2:	b2ad      	uxth	r5, r5
 80212c4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80212c8:	1c58      	adds	r0, r3, #1
 80212ca:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80212ce:	1c6b      	adds	r3, r5, #1
 80212d0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80212d4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80212d8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80212dc:	096d      	lsrs	r5, r5, #5
 80212de:	4320      	orrs	r0, r4
 80212e0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80212e4:	4328      	orrs	r0, r5
 80212e6:	e7be      	b.n	8021266 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80212e8:	00fff800 	.word	0x00fff800

080212ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80212ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212f0:	461c      	mov	r4, r3
 80212f2:	b08d      	sub	sp, #52	@ 0x34
 80212f4:	460d      	mov	r5, r1
 80212f6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80212f8:	6861      	ldr	r1, [r4, #4]
 80212fa:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 80212fe:	4680      	mov	r8, r0
 8021300:	6820      	ldr	r0, [r4, #0]
 8021302:	4616      	mov	r6, r2
 8021304:	aa08      	add	r2, sp, #32
 8021306:	c203      	stmia	r2!, {r0, r1}
 8021308:	6818      	ldr	r0, [r3, #0]
 802130a:	6859      	ldr	r1, [r3, #4]
 802130c:	aa0a      	add	r2, sp, #40	@ 0x28
 802130e:	c203      	stmia	r2!, {r0, r1}
 8021310:	a808      	add	r0, sp, #32
 8021312:	f7ee fc7d 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021316:	4621      	mov	r1, r4
 8021318:	a80a      	add	r0, sp, #40	@ 0x28
 802131a:	f7ee fca1 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802131e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8021322:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8021326:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 802132a:	f002 0301 	and.w	r3, r2, #1
 802132e:	9303      	str	r3, [sp, #12]
 8021330:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8021334:	f003 0101 	and.w	r1, r3, #1
 8021338:	9102      	str	r1, [sp, #8]
 802133a:	9802      	ldr	r0, [sp, #8]
 802133c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8021340:	4403      	add	r3, r0
 8021342:	fb01 2303 	mla	r3, r1, r3, r2
 8021346:	f04f 0a02 	mov.w	sl, #2
 802134a:	fb93 f3fa 	sdiv	r3, r3, sl
 802134e:	441d      	add	r5, r3
 8021350:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8021354:	441a      	add	r2, r3
 8021356:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802135a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802135e:	4a3f      	ldr	r2, [pc, #252]	@ (802145c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8021360:	9205      	str	r2, [sp, #20]
 8021362:	4419      	add	r1, r3
 8021364:	6810      	ldr	r0, [r2, #0]
 8021366:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802136a:	6803      	ldr	r3, [r0, #0]
 802136c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802136e:	4798      	blx	r3
 8021370:	4b3b      	ldr	r3, [pc, #236]	@ (8021460 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8021372:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8021376:	8819      	ldrh	r1, [r3, #0]
 8021378:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802137c:	fb01 c404 	mla	r4, r1, r4, ip
 8021380:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021384:	434f      	muls	r7, r1
 8021386:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802138a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802138e:	3604      	adds	r6, #4
 8021390:	9204      	str	r2, [sp, #16]
 8021392:	9b04      	ldr	r3, [sp, #16]
 8021394:	429c      	cmp	r4, r3
 8021396:	d258      	bcs.n	802144a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8021398:	9b03      	ldr	r3, [sp, #12]
 802139a:	2b00      	cmp	r3, #0
 802139c:	d034      	beq.n	8021408 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802139e:	782b      	ldrb	r3, [r5, #0]
 80213a0:	f003 030f 	and.w	r3, r3, #15
 80213a4:	1c6f      	adds	r7, r5, #1
 80213a6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80213aa:	0e0b      	lsrs	r3, r1, #24
 80213ac:	d006      	beq.n	80213bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80213ae:	8822      	ldrh	r2, [r4, #0]
 80213b0:	9300      	str	r3, [sp, #0]
 80213b2:	4640      	mov	r0, r8
 80213b4:	464b      	mov	r3, r9
 80213b6:	f7ff ff43 	bl	8021240 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80213ba:	8020      	strh	r0, [r4, #0]
 80213bc:	3402      	adds	r4, #2
 80213be:	f10b 3aff 	add.w	sl, fp, #4294967295
 80213c2:	f1ba 0f01 	cmp.w	sl, #1
 80213c6:	dd22      	ble.n	802140e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80213c8:	783b      	ldrb	r3, [r7, #0]
 80213ca:	091b      	lsrs	r3, r3, #4
 80213cc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80213d0:	0e0b      	lsrs	r3, r1, #24
 80213d2:	d006      	beq.n	80213e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80213d4:	8822      	ldrh	r2, [r4, #0]
 80213d6:	9300      	str	r3, [sp, #0]
 80213d8:	4640      	mov	r0, r8
 80213da:	464b      	mov	r3, r9
 80213dc:	f7ff ff30 	bl	8021240 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80213e0:	8020      	strh	r0, [r4, #0]
 80213e2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80213e6:	f003 030f 	and.w	r3, r3, #15
 80213ea:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80213ee:	0e0b      	lsrs	r3, r1, #24
 80213f0:	d006      	beq.n	8021400 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80213f2:	8862      	ldrh	r2, [r4, #2]
 80213f4:	9300      	str	r3, [sp, #0]
 80213f6:	4640      	mov	r0, r8
 80213f8:	464b      	mov	r3, r9
 80213fa:	f7ff ff21 	bl	8021240 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80213fe:	8060      	strh	r0, [r4, #2]
 8021400:	3404      	adds	r4, #4
 8021402:	f1aa 0a02 	sub.w	sl, sl, #2
 8021406:	e7dc      	b.n	80213c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8021408:	462f      	mov	r7, r5
 802140a:	46da      	mov	sl, fp
 802140c:	e7d9      	b.n	80213c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802140e:	d10d      	bne.n	802142c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8021410:	783b      	ldrb	r3, [r7, #0]
 8021412:	091b      	lsrs	r3, r3, #4
 8021414:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021418:	0e0b      	lsrs	r3, r1, #24
 802141a:	d006      	beq.n	802142a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802141c:	8822      	ldrh	r2, [r4, #0]
 802141e:	9300      	str	r3, [sp, #0]
 8021420:	4640      	mov	r0, r8
 8021422:	464b      	mov	r3, r9
 8021424:	f7ff ff0c 	bl	8021240 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021428:	8020      	strh	r0, [r4, #0]
 802142a:	3402      	adds	r4, #2
 802142c:	9b06      	ldr	r3, [sp, #24]
 802142e:	9a02      	ldr	r2, [sp, #8]
 8021430:	881b      	ldrh	r3, [r3, #0]
 8021432:	eba3 030b 	sub.w	r3, r3, fp
 8021436:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802143a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802143e:	4413      	add	r3, r2
 8021440:	9a07      	ldr	r2, [sp, #28]
 8021442:	fb93 f3f2 	sdiv	r3, r3, r2
 8021446:	441d      	add	r5, r3
 8021448:	e7a3      	b.n	8021392 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802144a:	9b05      	ldr	r3, [sp, #20]
 802144c:	6818      	ldr	r0, [r3, #0]
 802144e:	6803      	ldr	r3, [r0, #0]
 8021450:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021452:	4798      	blx	r3
 8021454:	b00d      	add	sp, #52	@ 0x34
 8021456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802145a:	bf00      	nop
 802145c:	20014040 	.word	0x20014040
 8021460:	20014038 	.word	0x20014038

08021464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8021464:	b570      	push	{r4, r5, r6, lr}
 8021466:	1214      	asrs	r4, r2, #8
 8021468:	788d      	ldrb	r5, [r1, #2]
 802146a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802146e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021472:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021476:	fb15 f503 	smulbb	r5, r5, r3
 802147a:	fb04 5506 	mla	r5, r4, r6, r5
 802147e:	10d0      	asrs	r0, r2, #3
 8021480:	784c      	ldrb	r4, [r1, #1]
 8021482:	7809      	ldrb	r1, [r1, #0]
 8021484:	00d2      	lsls	r2, r2, #3
 8021486:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802148a:	b2d2      	uxtb	r2, r2
 802148c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8021490:	fb14 f403 	smulbb	r4, r4, r3
 8021494:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8021498:	fb11 f303 	smulbb	r3, r1, r3
 802149c:	fb00 4406 	mla	r4, r0, r6, r4
 80214a0:	fb02 3306 	mla	r3, r2, r6, r3
 80214a4:	b2ad      	uxth	r5, r5
 80214a6:	b29b      	uxth	r3, r3
 80214a8:	b2a4      	uxth	r4, r4
 80214aa:	1c68      	adds	r0, r5, #1
 80214ac:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80214b0:	1c62      	adds	r2, r4, #1
 80214b2:	1c58      	adds	r0, r3, #1
 80214b4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80214b8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80214bc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80214c0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80214c4:	0964      	lsrs	r4, r4, #5
 80214c6:	4328      	orrs	r0, r5
 80214c8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80214cc:	4320      	orrs	r0, r4
 80214ce:	bd70      	pop	{r4, r5, r6, pc}

080214d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80214d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214d4:	b08f      	sub	sp, #60	@ 0x3c
 80214d6:	461c      	mov	r4, r3
 80214d8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80214dc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80214de:	4682      	mov	sl, r0
 80214e0:	460e      	mov	r6, r1
 80214e2:	4615      	mov	r5, r2
 80214e4:	2f00      	cmp	r7, #0
 80214e6:	f000 8142 	beq.w	802176e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80214ea:	6820      	ldr	r0, [r4, #0]
 80214ec:	6861      	ldr	r1, [r4, #4]
 80214ee:	aa0a      	add	r2, sp, #40	@ 0x28
 80214f0:	c203      	stmia	r2!, {r0, r1}
 80214f2:	6818      	ldr	r0, [r3, #0]
 80214f4:	6859      	ldr	r1, [r3, #4]
 80214f6:	aa0c      	add	r2, sp, #48	@ 0x30
 80214f8:	c203      	stmia	r2!, {r0, r1}
 80214fa:	a80a      	add	r0, sp, #40	@ 0x28
 80214fc:	f7ee fb88 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021500:	4621      	mov	r1, r4
 8021502:	a80c      	add	r0, sp, #48	@ 0x30
 8021504:	f7ee fbac 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021508:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802150c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8021510:	f002 0301 	and.w	r3, r2, #1
 8021514:	9306      	str	r3, [sp, #24]
 8021516:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802151a:	f003 0101 	and.w	r1, r3, #1
 802151e:	9105      	str	r1, [sp, #20]
 8021520:	9805      	ldr	r0, [sp, #20]
 8021522:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8021526:	4403      	add	r3, r0
 8021528:	fb01 2303 	mla	r3, r1, r3, r2
 802152c:	f04f 0802 	mov.w	r8, #2
 8021530:	fb93 f3f8 	sdiv	r3, r3, r8
 8021534:	441e      	add	r6, r3
 8021536:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802153a:	441a      	add	r2, r3
 802153c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8021540:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8021544:	4419      	add	r1, r3
 8021546:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802154a:	9303      	str	r3, [sp, #12]
 802154c:	4b89      	ldr	r3, [pc, #548]	@ (8021774 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802154e:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8021552:	6818      	ldr	r0, [r3, #0]
 8021554:	6803      	ldr	r3, [r0, #0]
 8021556:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021558:	4798      	blx	r3
 802155a:	4a87      	ldr	r2, [pc, #540]	@ (8021778 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802155c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8021560:	8813      	ldrh	r3, [r2, #0]
 8021562:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8021566:	2fff      	cmp	r7, #255	@ 0xff
 8021568:	fb03 9404 	mla	r4, r3, r4, r9
 802156c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021570:	f105 0504 	add.w	r5, r5, #4
 8021574:	4694      	mov	ip, r2
 8021576:	fb03 f30b 	mul.w	r3, r3, fp
 802157a:	d071      	beq.n	8021660 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802157c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021580:	43f9      	mvns	r1, r7
 8021582:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021586:	b2c9      	uxtb	r1, r1
 8021588:	9104      	str	r1, [sp, #16]
 802158a:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802158e:	9b07      	ldr	r3, [sp, #28]
 8021590:	42a3      	cmp	r3, r4
 8021592:	f240 80e7 	bls.w	8021764 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8021596:	9b06      	ldr	r3, [sp, #24]
 8021598:	2b00      	cmp	r3, #0
 802159a:	d03d      	beq.n	8021618 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802159c:	7831      	ldrb	r1, [r6, #0]
 802159e:	9b04      	ldr	r3, [sp, #16]
 80215a0:	8822      	ldrh	r2, [r4, #0]
 80215a2:	9300      	str	r3, [sp, #0]
 80215a4:	f001 010f 	and.w	r1, r1, #15
 80215a8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80215ac:	463b      	mov	r3, r7
 80215ae:	4429      	add	r1, r5
 80215b0:	4650      	mov	r0, sl
 80215b2:	f7ff ff57 	bl	8021464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80215b6:	9b03      	ldr	r3, [sp, #12]
 80215b8:	f824 0b02 	strh.w	r0, [r4], #2
 80215bc:	f106 0801 	add.w	r8, r6, #1
 80215c0:	f103 3bff 	add.w	fp, r3, #4294967295
 80215c4:	f1bb 0f01 	cmp.w	fp, #1
 80215c8:	46a1      	mov	r9, r4
 80215ca:	f104 0404 	add.w	r4, r4, #4
 80215ce:	dd27      	ble.n	8021620 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80215d0:	f898 1000 	ldrb.w	r1, [r8]
 80215d4:	9b04      	ldr	r3, [sp, #16]
 80215d6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80215da:	9300      	str	r3, [sp, #0]
 80215dc:	0909      	lsrs	r1, r1, #4
 80215de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80215e2:	463b      	mov	r3, r7
 80215e4:	4429      	add	r1, r5
 80215e6:	4650      	mov	r0, sl
 80215e8:	f7ff ff3c 	bl	8021464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80215ec:	f824 0c04 	strh.w	r0, [r4, #-4]
 80215f0:	f818 1b01 	ldrb.w	r1, [r8], #1
 80215f4:	9b04      	ldr	r3, [sp, #16]
 80215f6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80215fa:	9300      	str	r3, [sp, #0]
 80215fc:	f001 010f 	and.w	r1, r1, #15
 8021600:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021604:	463b      	mov	r3, r7
 8021606:	4429      	add	r1, r5
 8021608:	4650      	mov	r0, sl
 802160a:	f7ff ff2b 	bl	8021464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802160e:	f1ab 0b02 	sub.w	fp, fp, #2
 8021612:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021616:	e7d5      	b.n	80215c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8021618:	46b0      	mov	r8, r6
 802161a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802161e:	e7d1      	b.n	80215c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8021620:	d10f      	bne.n	8021642 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8021622:	f898 1000 	ldrb.w	r1, [r8]
 8021626:	9b04      	ldr	r3, [sp, #16]
 8021628:	f8b9 2000 	ldrh.w	r2, [r9]
 802162c:	9300      	str	r3, [sp, #0]
 802162e:	0909      	lsrs	r1, r1, #4
 8021630:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021634:	463b      	mov	r3, r7
 8021636:	4429      	add	r1, r5
 8021638:	4650      	mov	r0, sl
 802163a:	f7ff ff13 	bl	8021464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802163e:	f829 0b02 	strh.w	r0, [r9], #2
 8021642:	9b08      	ldr	r3, [sp, #32]
 8021644:	9a05      	ldr	r2, [sp, #20]
 8021646:	881c      	ldrh	r4, [r3, #0]
 8021648:	9b03      	ldr	r3, [sp, #12]
 802164a:	1ae4      	subs	r4, r4, r3
 802164c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021650:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021654:	4413      	add	r3, r2
 8021656:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021658:	fb93 f3f2 	sdiv	r3, r3, r2
 802165c:	441e      	add	r6, r3
 802165e:	e796      	b.n	802158e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8021660:	4f46      	ldr	r7, [pc, #280]	@ (802177c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8021662:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021666:	42a3      	cmp	r3, r4
 8021668:	d97c      	bls.n	8021764 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802166a:	9a06      	ldr	r2, [sp, #24]
 802166c:	2a00      	cmp	r2, #0
 802166e:	d054      	beq.n	802171a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8021670:	7830      	ldrb	r0, [r6, #0]
 8021672:	f000 000f 	and.w	r0, r0, #15
 8021676:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802167a:	eb05 0e00 	add.w	lr, r5, r0
 802167e:	5c28      	ldrb	r0, [r5, r0]
 8021680:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8021684:	f89e e001 	ldrb.w	lr, [lr, #1]
 8021688:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802168c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021690:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8021694:	ea42 020e 	orr.w	r2, r2, lr
 8021698:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802169c:	f824 2b02 	strh.w	r2, [r4], #2
 80216a0:	9a03      	ldr	r2, [sp, #12]
 80216a2:	1c71      	adds	r1, r6, #1
 80216a4:	f102 3eff 	add.w	lr, r2, #4294967295
 80216a8:	f1be 0f01 	cmp.w	lr, #1
 80216ac:	4620      	mov	r0, r4
 80216ae:	f104 0404 	add.w	r4, r4, #4
 80216b2:	dd36      	ble.n	8021722 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80216b4:	7808      	ldrb	r0, [r1, #0]
 80216b6:	0900      	lsrs	r0, r0, #4
 80216b8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80216bc:	eb05 0a00 	add.w	sl, r5, r0
 80216c0:	f1ae 0e02 	sub.w	lr, lr, #2
 80216c4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80216c8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80216cc:	00d2      	lsls	r2, r2, #3
 80216ce:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80216d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80216d6:	ea49 0202 	orr.w	r2, r9, r2
 80216da:	f815 9000 	ldrb.w	r9, [r5, r0]
 80216de:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80216e2:	f824 2c04 	strh.w	r2, [r4, #-4]
 80216e6:	f811 0b01 	ldrb.w	r0, [r1], #1
 80216ea:	f000 000f 	and.w	r0, r0, #15
 80216ee:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80216f2:	eb05 0a00 	add.w	sl, r5, r0
 80216f6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80216fa:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80216fe:	00d2      	lsls	r2, r2, #3
 8021700:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8021704:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021708:	ea49 0202 	orr.w	r2, r9, r2
 802170c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021710:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8021714:	f824 2c02 	strh.w	r2, [r4, #-2]
 8021718:	e7c6      	b.n	80216a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802171a:	4631      	mov	r1, r6
 802171c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8021720:	e7c2      	b.n	80216a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8021722:	d111      	bne.n	8021748 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8021724:	7809      	ldrb	r1, [r1, #0]
 8021726:	0909      	lsrs	r1, r1, #4
 8021728:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802172c:	186c      	adds	r4, r5, r1
 802172e:	5c69      	ldrb	r1, [r5, r1]
 8021730:	78a2      	ldrb	r2, [r4, #2]
 8021732:	7864      	ldrb	r4, [r4, #1]
 8021734:	00e4      	lsls	r4, r4, #3
 8021736:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802173a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802173e:	4322      	orrs	r2, r4
 8021740:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8021744:	f820 2b02 	strh.w	r2, [r0], #2
 8021748:	9a03      	ldr	r2, [sp, #12]
 802174a:	f8bc 4000 	ldrh.w	r4, [ip]
 802174e:	9905      	ldr	r1, [sp, #20]
 8021750:	1aa4      	subs	r4, r4, r2
 8021752:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8021756:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802175a:	440a      	add	r2, r1
 802175c:	fb92 f2f8 	sdiv	r2, r2, r8
 8021760:	4416      	add	r6, r2
 8021762:	e780      	b.n	8021666 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8021764:	4b03      	ldr	r3, [pc, #12]	@ (8021774 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021766:	6818      	ldr	r0, [r3, #0]
 8021768:	6803      	ldr	r3, [r0, #0]
 802176a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802176c:	4798      	blx	r3
 802176e:	b00f      	add	sp, #60	@ 0x3c
 8021770:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021774:	20014040 	.word	0x20014040
 8021778:	20014038 	.word	0x20014038
 802177c:	fffff800 	.word	0xfffff800

08021780 <CRC_Lock>:
 8021780:	b530      	push	{r4, r5, lr}
 8021782:	4a2d      	ldr	r2, [pc, #180]	@ (8021838 <CRC_Lock+0xb8>)
 8021784:	6813      	ldr	r3, [r2, #0]
 8021786:	f023 0301 	bic.w	r3, r3, #1
 802178a:	6013      	str	r3, [r2, #0]
 802178c:	4b2b      	ldr	r3, [pc, #172]	@ (802183c <CRC_Lock+0xbc>)
 802178e:	681c      	ldr	r4, [r3, #0]
 8021790:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8021794:	4014      	ands	r4, r2
 8021796:	f24c 2540 	movw	r5, #49728	@ 0xc240
 802179a:	42ac      	cmp	r4, r5
 802179c:	d005      	beq.n	80217aa <CRC_Lock+0x2a>
 802179e:	681c      	ldr	r4, [r3, #0]
 80217a0:	f24c 2570 	movw	r5, #49776	@ 0xc270
 80217a4:	4014      	ands	r4, r2
 80217a6:	42ac      	cmp	r4, r5
 80217a8:	d125      	bne.n	80217f6 <CRC_Lock+0x76>
 80217aa:	4b25      	ldr	r3, [pc, #148]	@ (8021840 <CRC_Lock+0xc0>)
 80217ac:	681b      	ldr	r3, [r3, #0]
 80217ae:	2b00      	cmp	r3, #0
 80217b0:	d139      	bne.n	8021826 <CRC_Lock+0xa6>
 80217b2:	4b24      	ldr	r3, [pc, #144]	@ (8021844 <CRC_Lock+0xc4>)
 80217b4:	681a      	ldr	r2, [r3, #0]
 80217b6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80217ba:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 80217be:	d00d      	beq.n	80217dc <CRC_Lock+0x5c>
 80217c0:	681a      	ldr	r2, [r3, #0]
 80217c2:	f240 4483 	movw	r4, #1155	@ 0x483
 80217c6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80217ca:	42a2      	cmp	r2, r4
 80217cc:	d006      	beq.n	80217dc <CRC_Lock+0x5c>
 80217ce:	681b      	ldr	r3, [r3, #0]
 80217d0:	f240 4285 	movw	r2, #1157	@ 0x485
 80217d4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80217d8:	4293      	cmp	r3, r2
 80217da:	d124      	bne.n	8021826 <CRC_Lock+0xa6>
 80217dc:	4b1a      	ldr	r3, [pc, #104]	@ (8021848 <CRC_Lock+0xc8>)
 80217de:	2201      	movs	r2, #1
 80217e0:	601a      	str	r2, [r3, #0]
 80217e2:	681a      	ldr	r2, [r3, #0]
 80217e4:	2a00      	cmp	r2, #0
 80217e6:	d1fc      	bne.n	80217e2 <CRC_Lock+0x62>
 80217e8:	4b18      	ldr	r3, [pc, #96]	@ (802184c <CRC_Lock+0xcc>)
 80217ea:	6018      	str	r0, [r3, #0]
 80217ec:	6818      	ldr	r0, [r3, #0]
 80217ee:	1a43      	subs	r3, r0, r1
 80217f0:	4258      	negs	r0, r3
 80217f2:	4158      	adcs	r0, r3
 80217f4:	e00e      	b.n	8021814 <CRC_Lock+0x94>
 80217f6:	681b      	ldr	r3, [r3, #0]
 80217f8:	4013      	ands	r3, r2
 80217fa:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80217fe:	4293      	cmp	r3, r2
 8021800:	d111      	bne.n	8021826 <CRC_Lock+0xa6>
 8021802:	4b13      	ldr	r3, [pc, #76]	@ (8021850 <CRC_Lock+0xd0>)
 8021804:	681b      	ldr	r3, [r3, #0]
 8021806:	f240 4286 	movw	r2, #1158	@ 0x486
 802180a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802180e:	4293      	cmp	r3, r2
 8021810:	d001      	beq.n	8021816 <CRC_Lock+0x96>
 8021812:	2000      	movs	r0, #0
 8021814:	bd30      	pop	{r4, r5, pc}
 8021816:	4b0f      	ldr	r3, [pc, #60]	@ (8021854 <CRC_Lock+0xd4>)
 8021818:	2201      	movs	r2, #1
 802181a:	601a      	str	r2, [r3, #0]
 802181c:	681a      	ldr	r2, [r3, #0]
 802181e:	2a00      	cmp	r2, #0
 8021820:	d1fc      	bne.n	802181c <CRC_Lock+0x9c>
 8021822:	4b0d      	ldr	r3, [pc, #52]	@ (8021858 <CRC_Lock+0xd8>)
 8021824:	e7e1      	b.n	80217ea <CRC_Lock+0x6a>
 8021826:	4b0d      	ldr	r3, [pc, #52]	@ (802185c <CRC_Lock+0xdc>)
 8021828:	2201      	movs	r2, #1
 802182a:	601a      	str	r2, [r3, #0]
 802182c:	681a      	ldr	r2, [r3, #0]
 802182e:	2a00      	cmp	r2, #0
 8021830:	d1fc      	bne.n	802182c <CRC_Lock+0xac>
 8021832:	4b0b      	ldr	r3, [pc, #44]	@ (8021860 <CRC_Lock+0xe0>)
 8021834:	e7d9      	b.n	80217ea <CRC_Lock+0x6a>
 8021836:	bf00      	nop
 8021838:	e0002000 	.word	0xe0002000
 802183c:	e000ed00 	.word	0xe000ed00
 8021840:	e0042000 	.word	0xe0042000
 8021844:	5c001000 	.word	0x5c001000
 8021848:	58024c08 	.word	0x58024c08
 802184c:	58024c00 	.word	0x58024c00
 8021850:	46008ff0 	.word	0x46008ff0
 8021854:	46024c08 	.word	0x46024c08
 8021858:	46024c00 	.word	0x46024c00
 802185c:	40023008 	.word	0x40023008
 8021860:	40023000 	.word	0x40023000

08021864 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8021864:	6101      	str	r1, [r0, #16]
 8021866:	4770      	bx	lr

08021868 <_ZN8touchgfx8Gestures4tickEv>:
 8021868:	7b83      	ldrb	r3, [r0, #14]
 802186a:	b14b      	cbz	r3, 8021880 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802186c:	8903      	ldrh	r3, [r0, #8]
 802186e:	3301      	adds	r3, #1
 8021870:	b29b      	uxth	r3, r3
 8021872:	2b07      	cmp	r3, #7
 8021874:	8103      	strh	r3, [r0, #8]
 8021876:	bf81      	itttt	hi
 8021878:	2300      	movhi	r3, #0
 802187a:	8143      	strhhi	r3, [r0, #10]
 802187c:	8183      	strhhi	r3, [r0, #12]
 802187e:	7383      	strbhi	r3, [r0, #14]
 8021880:	4770      	bx	lr
	...

08021884 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8021884:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8021888:	4698      	mov	r8, r3
 802188a:	8883      	ldrh	r3, [r0, #4]
 802188c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8021890:	eba8 0303 	sub.w	r3, r8, r3
 8021894:	b21b      	sxth	r3, r3
 8021896:	4604      	mov	r4, r0
 8021898:	2b00      	cmp	r3, #0
 802189a:	4617      	mov	r7, r2
 802189c:	4a18      	ldr	r2, [pc, #96]	@ (8021900 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802189e:	9200      	str	r2, [sp, #0]
 80218a0:	bfb8      	it	lt
 80218a2:	425b      	neglt	r3, r3
 80218a4:	8aa2      	ldrh	r2, [r4, #20]
 80218a6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80218aa:	f8ad 800a 	strh.w	r8, [sp, #10]
 80218ae:	b21b      	sxth	r3, r3
 80218b0:	460e      	mov	r6, r1
 80218b2:	4293      	cmp	r3, r2
 80218b4:	88c1      	ldrh	r1, [r0, #6]
 80218b6:	f8ad 1008 	strh.w	r1, [sp, #8]
 80218ba:	f04f 0000 	mov.w	r0, #0
 80218be:	f88d 0004 	strb.w	r0, [sp, #4]
 80218c2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80218c6:	dc07      	bgt.n	80218d8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80218c8:	1a69      	subs	r1, r5, r1
 80218ca:	b209      	sxth	r1, r1
 80218cc:	2900      	cmp	r1, #0
 80218ce:	bfb8      	it	lt
 80218d0:	4249      	neglt	r1, r1
 80218d2:	b209      	sxth	r1, r1
 80218d4:	428a      	cmp	r2, r1
 80218d6:	da10      	bge.n	80218fa <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80218d8:	6920      	ldr	r0, [r4, #16]
 80218da:	6803      	ldr	r3, [r0, #0]
 80218dc:	4669      	mov	r1, sp
 80218de:	685b      	ldr	r3, [r3, #4]
 80218e0:	4798      	blx	r3
 80218e2:	eba8 0606 	sub.w	r6, r8, r6
 80218e6:	2300      	movs	r3, #0
 80218e8:	1bef      	subs	r7, r5, r7
 80218ea:	2001      	movs	r0, #1
 80218ec:	8123      	strh	r3, [r4, #8]
 80218ee:	8166      	strh	r6, [r4, #10]
 80218f0:	81a7      	strh	r7, [r4, #12]
 80218f2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80218f6:	80e5      	strh	r5, [r4, #6]
 80218f8:	73a0      	strb	r0, [r4, #14]
 80218fa:	b004      	add	sp, #16
 80218fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021900:	08025e4c 	.word	0x08025e4c

08021904 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8021904:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021906:	461e      	mov	r6, r3
 8021908:	1e4b      	subs	r3, r1, #1
 802190a:	2b01      	cmp	r3, #1
 802190c:	b085      	sub	sp, #20
 802190e:	4604      	mov	r4, r0
 8021910:	460d      	mov	r5, r1
 8021912:	4617      	mov	r7, r2
 8021914:	d84b      	bhi.n	80219ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8021916:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802191a:	1cd3      	adds	r3, r2, #3
 802191c:	b29b      	uxth	r3, r3
 802191e:	2b06      	cmp	r3, #6
 8021920:	d916      	bls.n	8021950 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8021922:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80219c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8021926:	f8cd c004 	str.w	ip, [sp, #4]
 802192a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802192e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8021932:	6900      	ldr	r0, [r0, #16]
 8021934:	f8ad 100c 	strh.w	r1, [sp, #12]
 8021938:	f04f 0c00 	mov.w	ip, #0
 802193c:	f88d c008 	strb.w	ip, [sp, #8]
 8021940:	f8ad 200a 	strh.w	r2, [sp, #10]
 8021944:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021948:	6803      	ldr	r3, [r0, #0]
 802194a:	a901      	add	r1, sp, #4
 802194c:	689b      	ldr	r3, [r3, #8]
 802194e:	4798      	blx	r3
 8021950:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021954:	1cd3      	adds	r3, r2, #3
 8021956:	b29b      	uxth	r3, r3
 8021958:	2b06      	cmp	r3, #6
 802195a:	d916      	bls.n	802198a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802195c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80219c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8021960:	f8cd c004 	str.w	ip, [sp, #4]
 8021964:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021968:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802196c:	6920      	ldr	r0, [r4, #16]
 802196e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8021972:	f04f 0c01 	mov.w	ip, #1
 8021976:	f88d c008 	strb.w	ip, [sp, #8]
 802197a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802197e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021982:	6803      	ldr	r3, [r0, #0]
 8021984:	a901      	add	r1, sp, #4
 8021986:	689b      	ldr	r3, [r3, #8]
 8021988:	4798      	blx	r3
 802198a:	4b0d      	ldr	r3, [pc, #52]	@ (80219c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802198c:	9301      	str	r3, [sp, #4]
 802198e:	6920      	ldr	r0, [r4, #16]
 8021990:	f88d 5008 	strb.w	r5, [sp, #8]
 8021994:	2300      	movs	r3, #0
 8021996:	f8ad 700a 	strh.w	r7, [sp, #10]
 802199a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802199e:	f8ad 300e 	strh.w	r3, [sp, #14]
 80219a2:	6803      	ldr	r3, [r0, #0]
 80219a4:	a901      	add	r1, sp, #4
 80219a6:	681b      	ldr	r3, [r3, #0]
 80219a8:	4798      	blx	r3
 80219aa:	b005      	add	sp, #20
 80219ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80219ae:	2900      	cmp	r1, #0
 80219b0:	d1eb      	bne.n	802198a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80219b2:	80a2      	strh	r2, [r4, #4]
 80219b4:	80c6      	strh	r6, [r0, #6]
 80219b6:	60a1      	str	r1, [r4, #8]
 80219b8:	81a1      	strh	r1, [r4, #12]
 80219ba:	73a1      	strb	r1, [r4, #14]
 80219bc:	e7e5      	b.n	802198a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80219be:	bf00      	nop
 80219c0:	08025e38 	.word	0x08025e38
 80219c4:	08025e60 	.word	0x08025e60

080219c8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 80219c8:	10c9      	asrs	r1, r1, #3
 80219ca:	2900      	cmp	r1, #0
 80219cc:	bfb8      	it	lt
 80219ce:	4249      	neglt	r1, r1
 80219d0:	2801      	cmp	r0, #1
 80219d2:	d108      	bne.n	80219e6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80219d4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80219d8:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 80219dc:	4601      	mov	r1, r0
 80219de:	dd02      	ble.n	80219e6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80219e0:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 80219e4:	4770      	bx	lr
 80219e6:	29ff      	cmp	r1, #255	@ 0xff
 80219e8:	bfa8      	it	ge
 80219ea:	21ff      	movge	r1, #255	@ 0xff
 80219ec:	4608      	mov	r0, r1
 80219ee:	4770      	bx	lr

080219f0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80219f0:	b410      	push	{r4}
 80219f2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80219f6:	429c      	cmp	r4, r3
 80219f8:	d803      	bhi.n	8021a02 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80219fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80219fe:	f7ed b8ad 	b.w	800eb5c <_ZN8touchgfx7Outline6lineToEii>
 8021a02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021a06:	4770      	bx	lr

08021a08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8021a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a0c:	b08b      	sub	sp, #44	@ 0x2c
 8021a0e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8021a12:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8021a16:	9308      	str	r3, [sp, #32]
 8021a18:	4606      	mov	r6, r0
 8021a1a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8021a1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021a20:	468a      	mov	sl, r1
 8021a22:	f7ed fa08 	bl	800ee36 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8021a26:	68b5      	ldr	r5, [r6, #8]
 8021a28:	4604      	mov	r4, r0
 8021a2a:	2d00      	cmp	r5, #0
 8021a2c:	d044      	beq.n	8021ab8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021a2e:	6873      	ldr	r3, [r6, #4]
 8021a30:	42ab      	cmp	r3, r5
 8021a32:	d33d      	bcc.n	8021ab0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8021a34:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8021a38:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8021a3c:	eb02 0b03 	add.w	fp, r2, r3
 8021a40:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8021a44:	fb02 1203 	mla	r2, r2, r3, r1
 8021a48:	9205      	str	r2, [sp, #20]
 8021a4a:	1e6a      	subs	r2, r5, #1
 8021a4c:	9204      	str	r2, [sp, #16]
 8021a4e:	f04f 0800 	mov.w	r8, #0
 8021a52:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8021a56:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021a5a:	454b      	cmp	r3, r9
 8021a5c:	463a      	mov	r2, r7
 8021a5e:	d008      	beq.n	8021a72 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8021a60:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8021a64:	eb03 0b09 	add.w	fp, r3, r9
 8021a68:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8021a6c:	fb03 1309 	mla	r3, r3, r9, r1
 8021a70:	9305      	str	r3, [sp, #20]
 8021a72:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8021a76:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8021a7a:	4498      	add	r8, r3
 8021a7c:	9b04      	ldr	r3, [sp, #16]
 8021a7e:	3b01      	subs	r3, #1
 8021a80:	9304      	str	r3, [sp, #16]
 8021a82:	9b04      	ldr	r3, [sp, #16]
 8021a84:	3301      	adds	r3, #1
 8021a86:	d015      	beq.n	8021ab4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8021a88:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8021a8c:	42bb      	cmp	r3, r7
 8021a8e:	d117      	bne.n	8021ac0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8021a90:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8021a94:	9b04      	ldr	r3, [sp, #16]
 8021a96:	4548      	cmp	r0, r9
 8021a98:	f103 33ff 	add.w	r3, r3, #4294967295
 8021a9c:	d17f      	bne.n	8021b9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8021a9e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8021aa2:	4401      	add	r1, r0
 8021aa4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021aa8:	4480      	add	r8, r0
 8021aaa:	e7e9      	b.n	8021a80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8021aac:	461f      	mov	r7, r3
 8021aae:	e044      	b.n	8021b3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8021ab0:	2000      	movs	r0, #0
 8021ab2:	e002      	b.n	8021aba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8021ab4:	2900      	cmp	r1, #0
 8021ab6:	d16f      	bne.n	8021b98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8021ab8:	2001      	movs	r0, #1
 8021aba:	b00b      	add	sp, #44	@ 0x2c
 8021abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ac0:	2900      	cmp	r1, #0
 8021ac2:	d030      	beq.n	8021b26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8021ac4:	2f00      	cmp	r7, #0
 8021ac6:	db29      	blt.n	8021b1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021ac8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8021acc:	42bb      	cmp	r3, r7
 8021ace:	dd25      	ble.n	8021b1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021ad0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8021ad4:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8021ad8:	f7ff ff76 	bl	80219c8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8021adc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021ade:	fb10 f003 	smulbb	r0, r0, r3
 8021ae2:	b280      	uxth	r0, r0
 8021ae4:	1c41      	adds	r1, r0, #1
 8021ae6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021aea:	1209      	asrs	r1, r1, #8
 8021aec:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8021af0:	d014      	beq.n	8021b1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021af2:	9808      	ldr	r0, [sp, #32]
 8021af4:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8021af6:	b2c9      	uxtb	r1, r1
 8021af8:	b2ba      	uxth	r2, r7
 8021afa:	9102      	str	r1, [sp, #8]
 8021afc:	2101      	movs	r1, #1
 8021afe:	4413      	add	r3, r2
 8021b00:	9101      	str	r1, [sp, #4]
 8021b02:	4402      	add	r2, r0
 8021b04:	fa0f f18b 	sxth.w	r1, fp
 8021b08:	f8da 0000 	ldr.w	r0, [sl]
 8021b0c:	9100      	str	r1, [sp, #0]
 8021b0e:	6941      	ldr	r1, [r0, #20]
 8021b10:	b21b      	sxth	r3, r3
 8021b12:	460d      	mov	r5, r1
 8021b14:	b212      	sxth	r2, r2
 8021b16:	9905      	ldr	r1, [sp, #20]
 8021b18:	4650      	mov	r0, sl
 8021b1a:	47a8      	blx	r5
 8021b1c:	9b04      	ldr	r3, [sp, #16]
 8021b1e:	3301      	adds	r3, #1
 8021b20:	f107 0201 	add.w	r2, r7, #1
 8021b24:	d0c8      	beq.n	8021ab8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021b26:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021b2a:	1abb      	subs	r3, r7, r2
 8021b2c:	2b00      	cmp	r3, #0
 8021b2e:	dd31      	ble.n	8021b94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021b30:	2a00      	cmp	r2, #0
 8021b32:	dabb      	bge.n	8021aac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8021b34:	2f00      	cmp	r7, #0
 8021b36:	dd2d      	ble.n	8021b94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021b38:	2200      	movs	r2, #0
 8021b3a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8021b3e:	19d1      	adds	r1, r2, r7
 8021b40:	4299      	cmp	r1, r3
 8021b42:	db02      	blt.n	8021b4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8021b44:	1a9f      	subs	r7, r3, r2
 8021b46:	2f00      	cmp	r7, #0
 8021b48:	dd24      	ble.n	8021b94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021b4a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8021b4e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8021b52:	f7ff ff39 	bl	80219c8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8021b56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021b58:	fb10 f003 	smulbb	r0, r0, r3
 8021b5c:	b280      	uxth	r0, r0
 8021b5e:	1c41      	adds	r1, r0, #1
 8021b60:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021b64:	1209      	asrs	r1, r1, #8
 8021b66:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8021b6a:	d013      	beq.n	8021b94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021b6c:	9808      	ldr	r0, [sp, #32]
 8021b6e:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8021b70:	b292      	uxth	r2, r2
 8021b72:	b2c9      	uxtb	r1, r1
 8021b74:	4413      	add	r3, r2
 8021b76:	9102      	str	r1, [sp, #8]
 8021b78:	4402      	add	r2, r0
 8021b7a:	b23f      	sxth	r7, r7
 8021b7c:	f8da 0000 	ldr.w	r0, [sl]
 8021b80:	9701      	str	r7, [sp, #4]
 8021b82:	fa0f f18b 	sxth.w	r1, fp
 8021b86:	9100      	str	r1, [sp, #0]
 8021b88:	6947      	ldr	r7, [r0, #20]
 8021b8a:	9905      	ldr	r1, [sp, #20]
 8021b8c:	b21b      	sxth	r3, r3
 8021b8e:	b212      	sxth	r2, r2
 8021b90:	4650      	mov	r0, sl
 8021b92:	47b8      	blx	r7
 8021b94:	464b      	mov	r3, r9
 8021b96:	e75c      	b.n	8021a52 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8021b98:	2f00      	cmp	r7, #0
 8021b9a:	da95      	bge.n	8021ac8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8021b9c:	e78c      	b.n	8021ab8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021b9e:	2900      	cmp	r1, #0
 8021ba0:	d0f8      	beq.n	8021b94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021ba2:	e78f      	b.n	8021ac4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08021ba4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8021ba4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8021ba8:	461e      	mov	r6, r3
 8021baa:	4b36      	ldr	r3, [pc, #216]	@ (8021c84 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8021bac:	e9c0 3100 	strd	r3, r1, [r0]
 8021bb0:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8021bb4:	8103      	strh	r3, [r0, #8]
 8021bb6:	2500      	movs	r5, #0
 8021bb8:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8021bbc:	7283      	strb	r3, [r0, #10]
 8021bbe:	f100 0814 	add.w	r8, r0, #20
 8021bc2:	4604      	mov	r4, r0
 8021bc4:	8185      	strh	r5, [r0, #12]
 8021bc6:	81c5      	strh	r5, [r0, #14]
 8021bc8:	8205      	strh	r5, [r0, #16]
 8021bca:	8245      	strh	r5, [r0, #18]
 8021bcc:	4640      	mov	r0, r8
 8021bce:	4617      	mov	r7, r2
 8021bd0:	f7ec fafc 	bl	800e1cc <_ZN8touchgfx7OutlineC1Ev>
 8021bd4:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8021bd8:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8021bdc:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8021be0:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8021be4:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8021be8:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8021bec:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8021bf0:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8021bf4:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8021bf8:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8021bfc:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8021c00:	6830      	ldr	r0, [r6, #0]
 8021c02:	6871      	ldr	r1, [r6, #4]
 8021c04:	8872      	ldrh	r2, [r6, #2]
 8021c06:	8835      	ldrh	r5, [r6, #0]
 8021c08:	466b      	mov	r3, sp
 8021c0a:	c303      	stmia	r3!, {r0, r1}
 8021c0c:	887b      	ldrh	r3, [r7, #2]
 8021c0e:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8021c12:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8021c16:	4413      	add	r3, r2
 8021c18:	883a      	ldrh	r2, [r7, #0]
 8021c1a:	81e3      	strh	r3, [r4, #14]
 8021c1c:	442a      	add	r2, r5
 8021c1e:	81a2      	strh	r2, [r4, #12]
 8021c20:	8220      	strh	r0, [r4, #16]
 8021c22:	8261      	strh	r1, [r4, #18]
 8021c24:	4668      	mov	r0, sp
 8021c26:	4639      	mov	r1, r7
 8021c28:	f7ee f81a 	bl	800fc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021c2c:	f104 000c 	add.w	r0, r4, #12
 8021c30:	f7ed ffee 	bl	800fc10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021c34:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021c38:	f8bd 2000 	ldrh.w	r2, [sp]
 8021c3c:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8021c40:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8021c44:	4640      	mov	r0, r8
 8021c46:	f7ec faa5 	bl	800e194 <_ZN8touchgfx7Outline5resetEv>
 8021c4a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8021c4e:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8021c52:	015b      	lsls	r3, r3, #5
 8021c54:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8021c56:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021c5a:	015b      	lsls	r3, r3, #5
 8021c5c:	6523      	str	r3, [r4, #80]	@ 0x50
 8021c5e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8021c62:	015b      	lsls	r3, r3, #5
 8021c64:	6563      	str	r3, [r4, #84]	@ 0x54
 8021c66:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8021c6a:	015b      	lsls	r3, r3, #5
 8021c6c:	65a3      	str	r3, [r4, #88]	@ 0x58
 8021c6e:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8021c72:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8021c76:	4620      	mov	r0, r4
 8021c78:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8021c7c:	b002      	add	sp, #8
 8021c7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021c82:	bf00      	nop
 8021c84:	0802619c 	.word	0x0802619c

08021c88 <_ZN8touchgfx6Canvas5closeEv>:
 8021c88:	b538      	push	{r3, r4, r5, lr}
 8021c8a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8021c8e:	4604      	mov	r4, r0
 8021c90:	b193      	cbz	r3, 8021cb8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8021c92:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8021c96:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8021c9a:	4213      	tst	r3, r2
 8021c9c:	d10c      	bne.n	8021cb8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8021c9e:	f100 0514 	add.w	r5, r0, #20
 8021ca2:	b123      	cbz	r3, 8021cae <_ZN8touchgfx6Canvas5closeEv+0x26>
 8021ca4:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8021ca8:	4628      	mov	r0, r5
 8021caa:	f7ff fea1 	bl	80219f0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021cae:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8021cb2:	4628      	mov	r0, r5
 8021cb4:	f7ff fe9c 	bl	80219f0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021cb8:	2300      	movs	r3, #0
 8021cba:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8021cbe:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8021cc2:	4298      	cmp	r0, r3
 8021cc4:	bf34      	ite	cc
 8021cc6:	2000      	movcc	r0, #0
 8021cc8:	2001      	movcs	r0, #1
 8021cca:	bd38      	pop	{r3, r4, r5, pc}

08021ccc <_ZN8touchgfx6Canvas6renderEh>:
 8021ccc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8021cd0:	7a85      	ldrb	r5, [r0, #10]
 8021cd2:	4369      	muls	r1, r5
 8021cd4:	1c4d      	adds	r5, r1, #1
 8021cd6:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8021cda:	122d      	asrs	r5, r5, #8
 8021cdc:	4604      	mov	r4, r0
 8021cde:	f000 8099 	beq.w	8021e14 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8021ce2:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8021ce6:	2b00      	cmp	r3, #0
 8021ce8:	f000 8094 	beq.w	8021e14 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8021cec:	f7ff ffcc 	bl	8021c88 <_ZN8touchgfx6Canvas5closeEv>
 8021cf0:	4607      	mov	r7, r0
 8021cf2:	2800      	cmp	r0, #0
 8021cf4:	d045      	beq.n	8021d82 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8021cf6:	6860      	ldr	r0, [r4, #4]
 8021cf8:	4e47      	ldr	r6, [pc, #284]	@ (8021e18 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 8021cfa:	6803      	ldr	r3, [r0, #0]
 8021cfc:	6837      	ldr	r7, [r6, #0]
 8021cfe:	689b      	ldr	r3, [r3, #8]
 8021d00:	4798      	blx	r3
 8021d02:	4601      	mov	r1, r0
 8021d04:	4638      	mov	r0, r7
 8021d06:	f7e9 ff4b 	bl	800bba0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8021d0a:	4607      	mov	r7, r0
 8021d0c:	f7e1 f922 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 8021d10:	6803      	ldr	r3, [r0, #0]
 8021d12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021d14:	4798      	blx	r3
 8021d16:	4680      	mov	r8, r0
 8021d18:	f7e1 f91c 	bl	8002f54 <_ZN8touchgfx3HAL3lcdEv>
 8021d1c:	6803      	ldr	r3, [r0, #0]
 8021d1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021d20:	4798      	blx	r3
 8021d22:	280b      	cmp	r0, #11
 8021d24:	d85b      	bhi.n	8021dde <_ZN8touchgfx6Canvas6renderEh+0x112>
 8021d26:	e8df f000 	tbb	[pc, r0]
 8021d2a:	5c51      	.short	0x5c51
 8021d2c:	305a066c 	.word	0x305a066c
 8021d30:	65656540 	.word	0x65656540
 8021d34:	6565      	.short	0x6565
 8021d36:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021d3a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8021d3e:	2208      	movs	r2, #8
 8021d40:	fb91 f2f2 	sdiv	r2, r1, r2
 8021d44:	fb08 2303 	mla	r3, r8, r3, r2
 8021d48:	441f      	add	r7, r3
 8021d4a:	424b      	negs	r3, r1
 8021d4c:	f003 0307 	and.w	r3, r3, #7
 8021d50:	f001 0107 	and.w	r1, r1, #7
 8021d54:	bf58      	it	pl
 8021d56:	4259      	negpl	r1, r3
 8021d58:	b2c9      	uxtb	r1, r1
 8021d5a:	b2ed      	uxtb	r5, r5
 8021d5c:	463a      	mov	r2, r7
 8021d5e:	e9cd 1500 	strd	r1, r5, [sp]
 8021d62:	fa0f f388 	sxth.w	r3, r8
 8021d66:	6861      	ldr	r1, [r4, #4]
 8021d68:	f104 0014 	add.w	r0, r4, #20
 8021d6c:	f7ff fe4c 	bl	8021a08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8021d70:	4607      	mov	r7, r0
 8021d72:	6860      	ldr	r0, [r4, #4]
 8021d74:	6803      	ldr	r3, [r0, #0]
 8021d76:	691b      	ldr	r3, [r3, #16]
 8021d78:	4798      	blx	r3
 8021d7a:	6830      	ldr	r0, [r6, #0]
 8021d7c:	6803      	ldr	r3, [r0, #0]
 8021d7e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021d80:	4798      	blx	r3
 8021d82:	4638      	mov	r0, r7
 8021d84:	b002      	add	sp, #8
 8021d86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021d8a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021d8e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8021d92:	2204      	movs	r2, #4
 8021d94:	fb91 f2f2 	sdiv	r2, r1, r2
 8021d98:	fb08 2303 	mla	r3, r8, r3, r2
 8021d9c:	441f      	add	r7, r3
 8021d9e:	424b      	negs	r3, r1
 8021da0:	f003 0303 	and.w	r3, r3, #3
 8021da4:	f001 0103 	and.w	r1, r1, #3
 8021da8:	e7d4      	b.n	8021d54 <_ZN8touchgfx6Canvas6renderEh+0x88>
 8021daa:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8021dae:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021db2:	2900      	cmp	r1, #0
 8021db4:	f04f 0202 	mov.w	r2, #2
 8021db8:	fb91 f2f2 	sdiv	r2, r1, r2
 8021dbc:	f001 0101 	and.w	r1, r1, #1
 8021dc0:	fb08 2303 	mla	r3, r8, r3, r2
 8021dc4:	441f      	add	r7, r3
 8021dc6:	bfb8      	it	lt
 8021dc8:	4249      	neglt	r1, r1
 8021dca:	e7c5      	b.n	8021d58 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8021dcc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021dd0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021dd4:	fb08 f303 	mul.w	r3, r8, r3
 8021dd8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8021ddc:	441f      	add	r7, r3
 8021dde:	2100      	movs	r1, #0
 8021de0:	e7bb      	b.n	8021d5a <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8021de2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021de6:	fb08 f203 	mul.w	r2, r8, r3
 8021dea:	89a3      	ldrh	r3, [r4, #12]
 8021dec:	2103      	movs	r1, #3
 8021dee:	fb13 2301 	smlabb	r3, r3, r1, r2
 8021df2:	e7f3      	b.n	8021ddc <_ZN8touchgfx6Canvas6renderEh+0x110>
 8021df4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021df8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021dfc:	fb08 2303 	mla	r3, r8, r3, r2
 8021e00:	e7ec      	b.n	8021ddc <_ZN8touchgfx6Canvas6renderEh+0x110>
 8021e02:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021e06:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021e0a:	fb08 f303 	mul.w	r3, r8, r3
 8021e0e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8021e12:	e7e3      	b.n	8021ddc <_ZN8touchgfx6Canvas6renderEh+0x110>
 8021e14:	2701      	movs	r7, #1
 8021e16:	e7b4      	b.n	8021d82 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8021e18:	20014040 	.word	0x20014040

08021e1c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8021e1c:	b510      	push	{r4, lr}
 8021e1e:	4b06      	ldr	r3, [pc, #24]	@ (8021e38 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 8021e20:	781b      	ldrb	r3, [r3, #0]
 8021e22:	2b01      	cmp	r3, #1
 8021e24:	d107      	bne.n	8021e36 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 8021e26:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8021e2a:	680b      	ldr	r3, [r1, #0]
 8021e2c:	6814      	ldr	r4, [r2, #0]
 8021e2e:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8021e32:	6013      	str	r3, [r2, #0]
 8021e34:	600c      	str	r4, [r1, #0]
 8021e36:	bd10      	pop	{r4, pc}
 8021e38:	20014036 	.word	0x20014036

08021e3c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8021e3c:	b513      	push	{r0, r1, r4, lr}
 8021e3e:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8021e42:	4604      	mov	r4, r0
 8021e44:	e9cd 2100 	strd	r2, r1, [sp]
 8021e48:	b9a3      	cbnz	r3, 8021e74 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8021e4a:	466a      	mov	r2, sp
 8021e4c:	a901      	add	r1, sp, #4
 8021e4e:	4620      	mov	r0, r4
 8021e50:	f7ff ffe4 	bl	8021e1c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021e54:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8021e56:	9901      	ldr	r1, [sp, #4]
 8021e58:	9a00      	ldr	r2, [sp, #0]
 8021e5a:	1ac9      	subs	r1, r1, r3
 8021e5c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8021e5e:	9101      	str	r1, [sp, #4]
 8021e60:	1ad2      	subs	r2, r2, r3
 8021e62:	2a00      	cmp	r2, #0
 8021e64:	9200      	str	r2, [sp, #0]
 8021e66:	da0b      	bge.n	8021e80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8021e68:	2301      	movs	r3, #1
 8021e6a:	2900      	cmp	r1, #0
 8021e6c:	da0e      	bge.n	8021e8c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8021e6e:	f043 0304 	orr.w	r3, r3, #4
 8021e72:	e013      	b.n	8021e9c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8021e74:	f7ff ff08 	bl	8021c88 <_ZN8touchgfx6Canvas5closeEv>
 8021e78:	2800      	cmp	r0, #0
 8021e7a:	d1e6      	bne.n	8021e4a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8021e7c:	b002      	add	sp, #8
 8021e7e:	bd10      	pop	{r4, pc}
 8021e80:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8021e82:	429a      	cmp	r2, r3
 8021e84:	bfac      	ite	ge
 8021e86:	2302      	movge	r3, #2
 8021e88:	2300      	movlt	r3, #0
 8021e8a:	e7ee      	b.n	8021e6a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8021e8c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8021e8e:	4281      	cmp	r1, r0
 8021e90:	bfac      	ite	ge
 8021e92:	2008      	movge	r0, #8
 8021e94:	2000      	movlt	r0, #0
 8021e96:	4318      	orrs	r0, r3
 8021e98:	b2c3      	uxtb	r3, r0
 8021e9a:	b158      	cbz	r0, 8021eb4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8021e9c:	2200      	movs	r2, #0
 8021e9e:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8021ea2:	9901      	ldr	r1, [sp, #4]
 8021ea4:	9a00      	ldr	r2, [sp, #0]
 8021ea6:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8021ea8:	6722      	str	r2, [r4, #112]	@ 0x70
 8021eaa:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 8021eae:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8021eb2:	e7e3      	b.n	8021e7c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8021eb4:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021eb8:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8021ebc:	4298      	cmp	r0, r3
 8021ebe:	d803      	bhi.n	8021ec8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8021ec0:	f104 0014 	add.w	r0, r4, #20
 8021ec4:	f7ec fe64 	bl	800eb90 <_ZN8touchgfx7Outline6moveToEii>
 8021ec8:	2301      	movs	r3, #1
 8021eca:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8021ece:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8021ed2:	2300      	movs	r3, #0
 8021ed4:	e7e5      	b.n	8021ea2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08021ed6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8021ed6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021ed8:	ab02      	add	r3, sp, #8
 8021eda:	4604      	mov	r4, r0
 8021edc:	f843 2d08 	str.w	r2, [r3, #-8]!
 8021ee0:	9101      	str	r1, [sp, #4]
 8021ee2:	461a      	mov	r2, r3
 8021ee4:	a901      	add	r1, sp, #4
 8021ee6:	f7ff ff99 	bl	8021e1c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021eea:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8021eec:	9901      	ldr	r1, [sp, #4]
 8021eee:	9a00      	ldr	r2, [sp, #0]
 8021ef0:	1ac9      	subs	r1, r1, r3
 8021ef2:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8021ef4:	9101      	str	r1, [sp, #4]
 8021ef6:	1ad2      	subs	r2, r2, r3
 8021ef8:	2a00      	cmp	r2, #0
 8021efa:	9200      	str	r2, [sp, #0]
 8021efc:	db1c      	blt.n	8021f38 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8021efe:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8021f00:	429a      	cmp	r2, r3
 8021f02:	bfac      	ite	ge
 8021f04:	2002      	movge	r0, #2
 8021f06:	2000      	movlt	r0, #0
 8021f08:	2900      	cmp	r1, #0
 8021f0a:	db17      	blt.n	8021f3c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8021f0c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8021f0e:	4299      	cmp	r1, r3
 8021f10:	bfac      	ite	ge
 8021f12:	2308      	movge	r3, #8
 8021f14:	2300      	movlt	r3, #0
 8021f16:	4303      	orrs	r3, r0
 8021f18:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8021f1c:	b2dd      	uxtb	r5, r3
 8021f1e:	b978      	cbnz	r0, 8021f40 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8021f20:	f104 0014 	add.w	r0, r4, #20
 8021f24:	f7ff fd64 	bl	80219f0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021f28:	9b01      	ldr	r3, [sp, #4]
 8021f2a:	6623      	str	r3, [r4, #96]	@ 0x60
 8021f2c:	9b00      	ldr	r3, [sp, #0]
 8021f2e:	6663      	str	r3, [r4, #100]	@ 0x64
 8021f30:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 8021f34:	b002      	add	sp, #8
 8021f36:	bd70      	pop	{r4, r5, r6, pc}
 8021f38:	2001      	movs	r0, #1
 8021f3a:	e7e5      	b.n	8021f08 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8021f3c:	2304      	movs	r3, #4
 8021f3e:	e7ea      	b.n	8021f16 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8021f40:	b113      	cbz	r3, 8021f48 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8021f42:	ea10 0305 	ands.w	r3, r0, r5
 8021f46:	d11c      	bne.n	8021f82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8021f48:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8021f4c:	f104 0614 	add.w	r6, r4, #20
 8021f50:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8021f54:	b98b      	cbnz	r3, 8021f7a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8021f56:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021f5a:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8021f5e:	4298      	cmp	r0, r3
 8021f60:	d802      	bhi.n	8021f68 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8021f62:	4630      	mov	r0, r6
 8021f64:	f7ec fe14 	bl	800eb90 <_ZN8touchgfx7Outline6moveToEii>
 8021f68:	2301      	movs	r3, #1
 8021f6a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8021f6e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8021f72:	e9dd 2100 	ldrd	r2, r1, [sp]
 8021f76:	4630      	mov	r0, r6
 8021f78:	e7d4      	b.n	8021f24 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8021f7a:	4630      	mov	r0, r6
 8021f7c:	f7ff fd38 	bl	80219f0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021f80:	e7f7      	b.n	8021f72 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8021f82:	461d      	mov	r5, r3
 8021f84:	e7d0      	b.n	8021f28 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08021f88 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8021f88:	b538      	push	{r3, r4, r5, lr}
 8021f8a:	ed2d 8b10 	vpush	{d8-d15}
 8021f8e:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 8021f92:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 80220fc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8021f96:	4605      	mov	r5, r0
 8021f98:	eeb0 ca40 	vmov.f32	s24, s0
 8021f9c:	eef0 ca60 	vmov.f32	s25, s1
 8021fa0:	eeb0 da41 	vmov.f32	s26, s2
 8021fa4:	eef0 da61 	vmov.f32	s27, s3
 8021fa8:	eeb0 ea42 	vmov.f32	s28, s4
 8021fac:	eef0 ea62 	vmov.f32	s29, s5
 8021fb0:	460c      	mov	r4, r1
 8021fb2:	eef0 aa6b 	vmov.f32	s21, s23
 8021fb6:	2c08      	cmp	r4, #8
 8021fb8:	d86e      	bhi.n	8022098 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 8021fba:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 8021fbe:	ee7d 7aee 	vsub.f32	s15, s27, s29
 8021fc2:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8021fc6:	ee3e 7aec 	vsub.f32	s14, s29, s25
 8021fca:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 8021fce:	ee3c fa0d 	vadd.f32	s30, s24, s26
 8021fd2:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021fd6:	ee7c faad 	vadd.f32	s31, s25, s27
 8021fda:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 8021fde:	ee3d aaae 	vadd.f32	s20, s27, s29
 8021fe2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8021fe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021fea:	ee2f fa2b 	vmul.f32	s30, s30, s23
 8021fee:	ee6f faab 	vmul.f32	s31, s31, s23
 8021ff2:	ee69 9aab 	vmul.f32	s19, s19, s23
 8021ff6:	ee2a aa2b 	vmul.f32	s20, s20, s23
 8021ffa:	bf48      	it	mi
 8021ffc:	eef1 7a67 	vnegmi.f32	s15, s15
 8022000:	ee7f 8a29 	vadd.f32	s17, s30, s19
 8022004:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8022008:	eef4 7acb 	vcmpe.f32	s15, s22
 802200c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022010:	ee68 8aab 	vmul.f32	s17, s17, s23
 8022014:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8022018:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 802201c:	dd3f      	ble.n	802209e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 802201e:	ee27 7a07 	vmul.f32	s14, s14, s14
 8022022:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8022026:	eea6 7aa6 	vfma.f32	s14, s13, s13
 802202a:	ee27 7a06 	vmul.f32	s14, s14, s12
 802202e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8022032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022036:	d847      	bhi.n	80220c8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8022038:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 802203c:	ee3e 0aed 	vsub.f32	s0, s29, s27
 8022040:	f000 fa3b 	bl	80224ba <atan2f>
 8022044:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8022048:	eeb0 8a40 	vmov.f32	s16, s0
 802204c:	ee3d 0aec 	vsub.f32	s0, s27, s25
 8022050:	f000 fa33 	bl	80224ba <atan2f>
 8022054:	ee38 0a40 	vsub.f32	s0, s16, s0
 8022058:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8022100 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 802205c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022060:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022064:	bf48      	it	mi
 8022066:	eeb1 0a40 	vnegmi.f32	s0, s0
 802206a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802206e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022072:	bfa4      	itt	ge
 8022074:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 8022104 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8022078:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802207c:	eddf 7a22 	vldr	s15, [pc, #136]	@ 8022108 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 8022080:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8022084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022088:	d51e      	bpl.n	80220c8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802208a:	eef0 0a49 	vmov.f32	s1, s18
 802208e:	eeb0 0a68 	vmov.f32	s0, s17
 8022092:	4628      	mov	r0, r5
 8022094:	f7ea ff8c 	bl	800cfb0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8022098:	ecbd 8b10 	vpop	{d8-d15}
 802209c:	bd38      	pop	{r3, r4, r5, pc}
 802209e:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 80220a2:	eeb0 7a68 	vmov.f32	s14, s17
 80220a6:	eea7 7aea 	vfms.f32	s14, s15, s21
 80220aa:	ee7c 7aae 	vadd.f32	s15, s25, s29
 80220ae:	eef0 6a49 	vmov.f32	s13, s18
 80220b2:	eee7 6aea 	vfms.f32	s13, s15, s21
 80220b6:	ee66 7aa6 	vmul.f32	s15, s13, s13
 80220ba:	eee7 7a07 	vfma.f32	s15, s14, s14
 80220be:	eef4 7ac6 	vcmpe.f32	s15, s12
 80220c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80220c6:	d9e0      	bls.n	802208a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 80220c8:	3401      	adds	r4, #1
 80220ca:	eef0 0a6c 	vmov.f32	s1, s25
 80220ce:	eeb0 0a4c 	vmov.f32	s0, s24
 80220d2:	4621      	mov	r1, r4
 80220d4:	eef0 2a49 	vmov.f32	s5, s18
 80220d8:	eeb0 2a68 	vmov.f32	s4, s17
 80220dc:	eef0 1a6f 	vmov.f32	s3, s31
 80220e0:	eeb0 1a4f 	vmov.f32	s2, s30
 80220e4:	4628      	mov	r0, r5
 80220e6:	f7ff ff4f 	bl	8021f88 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 80220ea:	eef0 da4a 	vmov.f32	s27, s20
 80220ee:	eeb0 da69 	vmov.f32	s26, s19
 80220f2:	eef0 ca49 	vmov.f32	s25, s18
 80220f6:	eeb0 ca68 	vmov.f32	s24, s17
 80220fa:	e75c      	b.n	8021fb6 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 80220fc:	2edbe6ff 	.word	0x2edbe6ff
 8022100:	40490fdb 	.word	0x40490fdb
 8022104:	40c90fdb 	.word	0x40c90fdb
 8022108:	3dcccccd 	.word	0x3dcccccd

0802210c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 802210c:	b530      	push	{r4, r5, lr}
 802210e:	ed2d 8b10 	vpush	{d8-d15}
 8022112:	4604      	mov	r4, r0
 8022114:	b085      	sub	sp, #20
 8022116:	eef0 8a40 	vmov.f32	s17, s0
 802211a:	eef0 9a60 	vmov.f32	s19, s1
 802211e:	eef0 fa41 	vmov.f32	s31, s2
 8022122:	eeb0 fa61 	vmov.f32	s30, s3
 8022126:	eef0 ba42 	vmov.f32	s23, s4
 802212a:	eeb0 ca62 	vmov.f32	s24, s5
 802212e:	eef0 aa43 	vmov.f32	s21, s6
 8022132:	eeb0 ba63 	vmov.f32	s22, s7
 8022136:	460d      	mov	r5, r1
 8022138:	2d08      	cmp	r5, #8
 802213a:	f200 8115 	bhi.w	8022368 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 802213e:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 8022142:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022146:	ee7f 6aab 	vadd.f32	s13, s31, s23
 802214a:	ee26 6a27 	vmul.f32	s12, s12, s15
 802214e:	ee38 daaf 	vadd.f32	s26, s17, s31
 8022152:	ed8d 6a01 	vstr	s12, [sp, #4]
 8022156:	eea6 6aa7 	vfma.f32	s12, s13, s15
 802215a:	ee2d da27 	vmul.f32	s26, s26, s15
 802215e:	ee7c ca0b 	vadd.f32	s25, s24, s22
 8022162:	eeb0 ea4d 	vmov.f32	s28, s26
 8022166:	eea6 eaa7 	vfma.f32	s28, s13, s15
 802216a:	ee6c caa7 	vmul.f32	s25, s25, s15
 802216e:	ee66 6a27 	vmul.f32	s13, s12, s15
 8022172:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8022176:	edcd 6a03 	vstr	s13, [sp, #12]
 802217a:	ee79 da8f 	vadd.f32	s27, s19, s30
 802217e:	eef0 6a6c 	vmov.f32	s13, s25
 8022182:	eee7 6a27 	vfma.f32	s13, s14, s15
 8022186:	ee6d daa7 	vmul.f32	s27, s27, s15
 802218a:	ee2e ea27 	vmul.f32	s28, s28, s15
 802218e:	eef0 ea6d 	vmov.f32	s29, s27
 8022192:	eee7 ea27 	vfma.f32	s29, s14, s15
 8022196:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802219a:	ee6e eaa7 	vmul.f32	s29, s29, s15
 802219e:	ed8d 7a02 	vstr	s14, [sp, #8]
 80221a2:	ed9d 7a03 	vldr	s14, [sp, #12]
 80221a6:	ee3e 9a07 	vadd.f32	s18, s28, s14
 80221aa:	ed9d 7a02 	vldr	s14, [sp, #8]
 80221ae:	ee3e aa87 	vadd.f32	s20, s29, s14
 80221b2:	ee29 9a27 	vmul.f32	s18, s18, s15
 80221b6:	ee2a aa27 	vmul.f32	s20, s20, s15
 80221ba:	eef0 6a67 	vmov.f32	s13, s15
 80221be:	2d00      	cmp	r5, #0
 80221c0:	f000 810d 	beq.w	80223de <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80221c4:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 80221c8:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 80221cc:	ee7b 7a69 	vsub.f32	s15, s22, s19
 80221d0:	ee3f 6aea 	vsub.f32	s12, s31, s21
 80221d4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80221d8:	ee3b 5aea 	vsub.f32	s10, s23, s21
 80221dc:	eea6 7a27 	vfma.f32	s14, s12, s15
 80221e0:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 80221e4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80221e8:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 80221ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80221f0:	eea5 6a27 	vfma.f32	s12, s10, s15
 80221f4:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8022424 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 80221f8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80221fc:	bf48      	it	mi
 80221fe:	eeb1 7a47 	vnegmi.f32	s14, s14
 8022202:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022206:	eeb4 7ae4 	vcmpe.f32	s14, s9
 802220a:	bf48      	it	mi
 802220c:	eeb1 6a46 	vnegmi.f32	s12, s12
 8022210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022214:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8022218:	f340 80aa 	ble.w	8022370 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 802221c:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8022220:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022224:	dd5c      	ble.n	80222e0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 8022226:	ee65 5aa5 	vmul.f32	s11, s11, s11
 802222a:	ee37 7a06 	vadd.f32	s14, s14, s12
 802222e:	eee7 5aa7 	vfma.f32	s11, s15, s15
 8022232:	ee27 7a07 	vmul.f32	s14, s14, s14
 8022236:	ee65 7a85 	vmul.f32	s15, s11, s10
 802223a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802223e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022242:	f200 80cc 	bhi.w	80223de <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8022246:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802224a:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802224e:	f000 f934 	bl	80224ba <atan2f>
 8022252:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8022256:	eeb0 8a40 	vmov.f32	s16, s0
 802225a:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802225e:	f000 f92c 	bl	80224ba <atan2f>
 8022262:	ee38 fa40 	vsub.f32	s30, s16, s0
 8022266:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802226a:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 802226e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022272:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8022276:	bf48      	it	mi
 8022278:	eeb1 fa4f 	vnegmi.f32	s30, s30
 802227c:	f000 f91d 	bl	80224ba <atan2f>
 8022280:	ee30 0a48 	vsub.f32	s0, s0, s16
 8022284:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8022428 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8022288:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802228c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022290:	eeb4 fae7 	vcmpe.f32	s30, s15
 8022294:	bf48      	it	mi
 8022296:	eeb1 0a40 	vnegmi.f32	s0, s0
 802229a:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8022428 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802229e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80222a2:	bfa8      	it	ge
 80222a4:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 802242c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80222a8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80222ac:	bfa8      	it	ge
 80222ae:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 80222b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80222b6:	bfa8      	it	ge
 80222b8:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 802242c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80222bc:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022430 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 80222c0:	bfa8      	it	ge
 80222c2:	ee37 0a40 	vsubge.f32	s0, s14, s0
 80222c6:	ee3f 0a00 	vadd.f32	s0, s30, s0
 80222ca:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80222ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80222d2:	f140 8084 	bpl.w	80223de <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80222d6:	eef0 0a4a 	vmov.f32	s1, s20
 80222da:	eeb0 0a49 	vmov.f32	s0, s18
 80222de:	e040      	b.n	8022362 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 80222e0:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80222e4:	ee27 7a07 	vmul.f32	s14, s14, s14
 80222e8:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80222ec:	ee67 7a85 	vmul.f32	s15, s15, s10
 80222f0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80222f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80222f8:	d871      	bhi.n	80223de <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80222fa:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80222fe:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8022302:	f000 f8da 	bl	80224ba <atan2f>
 8022306:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802230a:	eeb0 8a40 	vmov.f32	s16, s0
 802230e:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8022312:	f000 f8d2 	bl	80224ba <atan2f>
 8022316:	ee38 0a40 	vsub.f32	s0, s16, s0
 802231a:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8022428 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802231e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022326:	bf48      	it	mi
 8022328:	eeb1 0a40 	vnegmi.f32	s0, s0
 802232c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8022330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022334:	bfa4      	itt	ge
 8022336:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 802242c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802233a:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802233e:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8022430 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8022342:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8022346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802234a:	d548      	bpl.n	80223de <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802234c:	eef0 0a4f 	vmov.f32	s1, s30
 8022350:	eeb0 0a6f 	vmov.f32	s0, s31
 8022354:	4620      	mov	r0, r4
 8022356:	f7ea fe2b 	bl	800cfb0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802235a:	eef0 0a4c 	vmov.f32	s1, s24
 802235e:	eeb0 0a6b 	vmov.f32	s0, s23
 8022362:	4620      	mov	r0, r4
 8022364:	f7ea fe24 	bl	800cfb0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8022368:	b005      	add	sp, #20
 802236a:	ecbd 8b10 	vpop	{d8-d15}
 802236e:	bd30      	pop	{r4, r5, pc}
 8022370:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8022424 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8022374:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8022378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802237c:	dd19      	ble.n	80223b2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 802237e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8022382:	ee26 7a06 	vmul.f32	s14, s12, s12
 8022386:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802238a:	ee67 7a85 	vmul.f32	s15, s15, s10
 802238e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8022392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022396:	d822      	bhi.n	80223de <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8022398:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802239c:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 80223a0:	f000 f88b 	bl	80224ba <atan2f>
 80223a4:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80223a8:	eeb0 8a40 	vmov.f32	s16, s0
 80223ac:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80223b0:	e7af      	b.n	8022312 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 80223b2:	ee78 7aaa 	vadd.f32	s15, s17, s21
 80223b6:	eeb0 7a49 	vmov.f32	s14, s18
 80223ba:	eea7 7ae6 	vfms.f32	s14, s15, s13
 80223be:	ee79 7a8b 	vadd.f32	s15, s19, s22
 80223c2:	eeb0 6a4a 	vmov.f32	s12, s20
 80223c6:	eea7 6ae6 	vfms.f32	s12, s15, s13
 80223ca:	ee66 7a06 	vmul.f32	s15, s12, s12
 80223ce:	eee7 7a07 	vfma.f32	s15, s14, s14
 80223d2:	eef4 7ac5 	vcmpe.f32	s15, s10
 80223d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80223da:	f67f af7c 	bls.w	80222d6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 80223de:	3501      	adds	r5, #1
 80223e0:	eef0 0a69 	vmov.f32	s1, s19
 80223e4:	eeb0 0a68 	vmov.f32	s0, s17
 80223e8:	4629      	mov	r1, r5
 80223ea:	eef0 3a4a 	vmov.f32	s7, s20
 80223ee:	eeb0 3a49 	vmov.f32	s6, s18
 80223f2:	eef0 2a6e 	vmov.f32	s5, s29
 80223f6:	eeb0 2a4e 	vmov.f32	s4, s28
 80223fa:	eef0 1a6d 	vmov.f32	s3, s27
 80223fe:	eeb0 1a4d 	vmov.f32	s2, s26
 8022402:	4620      	mov	r0, r4
 8022404:	f7ff fe82 	bl	802210c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8022408:	eeb0 ca6c 	vmov.f32	s24, s25
 802240c:	eddd ba01 	vldr	s23, [sp, #4]
 8022410:	ed9d fa02 	vldr	s30, [sp, #8]
 8022414:	eddd fa03 	vldr	s31, [sp, #12]
 8022418:	eef0 9a4a 	vmov.f32	s19, s20
 802241c:	eef0 8a49 	vmov.f32	s17, s18
 8022420:	e68a      	b.n	8022138 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8022422:	bf00      	nop
 8022424:	2edbe6ff 	.word	0x2edbe6ff
 8022428:	40490fdb 	.word	0x40490fdb
 802242c:	40c90fdb 	.word	0x40c90fdb
 8022430:	3dcccccd 	.word	0x3dcccccd

08022434 <_ZN8touchgfx6CanvasD1Ev>:
 8022434:	b510      	push	{r4, lr}
 8022436:	4b04      	ldr	r3, [pc, #16]	@ (8022448 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8022438:	4604      	mov	r4, r0
 802243a:	f840 3b14 	str.w	r3, [r0], #20
 802243e:	f7eb fea1 	bl	800e184 <_ZN8touchgfx7OutlineD1Ev>
 8022442:	4620      	mov	r0, r4
 8022444:	bd10      	pop	{r4, pc}
 8022446:	bf00      	nop
 8022448:	0802619c 	.word	0x0802619c

0802244c <_ZN8touchgfx6CanvasD0Ev>:
 802244c:	b510      	push	{r4, lr}
 802244e:	4604      	mov	r4, r0
 8022450:	f7ff fff0 	bl	8022434 <_ZN8touchgfx6CanvasD1Ev>
 8022454:	4620      	mov	r0, r4
 8022456:	2174      	movs	r1, #116	@ 0x74
 8022458:	f000 f807 	bl	802246a <_ZdlPvj>
 802245c:	4620      	mov	r0, r4
 802245e:	bd10      	pop	{r4, pc}

08022460 <__aeabi_atexit>:
 8022460:	460b      	mov	r3, r1
 8022462:	4601      	mov	r1, r0
 8022464:	4618      	mov	r0, r3
 8022466:	f001 b865 	b.w	8023534 <__cxa_atexit>

0802246a <_ZdlPvj>:
 802246a:	f000 b812 	b.w	8022492 <_ZdlPv>

0802246e <__cxa_guard_acquire>:
 802246e:	6802      	ldr	r2, [r0, #0]
 8022470:	07d2      	lsls	r2, r2, #31
 8022472:	4603      	mov	r3, r0
 8022474:	d405      	bmi.n	8022482 <__cxa_guard_acquire+0x14>
 8022476:	7842      	ldrb	r2, [r0, #1]
 8022478:	b102      	cbz	r2, 802247c <__cxa_guard_acquire+0xe>
 802247a:	deff      	udf	#255	@ 0xff
 802247c:	2001      	movs	r0, #1
 802247e:	7058      	strb	r0, [r3, #1]
 8022480:	4770      	bx	lr
 8022482:	2000      	movs	r0, #0
 8022484:	4770      	bx	lr

08022486 <__cxa_guard_release>:
 8022486:	2301      	movs	r3, #1
 8022488:	6003      	str	r3, [r0, #0]
 802248a:	4770      	bx	lr

0802248c <__cxa_pure_virtual>:
 802248c:	b508      	push	{r3, lr}
 802248e:	f000 f80f 	bl	80224b0 <_ZSt9terminatev>

08022492 <_ZdlPv>:
 8022492:	f000 bf99 	b.w	80233c8 <free>

08022496 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8022496:	b508      	push	{r3, lr}
 8022498:	4780      	blx	r0
 802249a:	f000 ff61 	bl	8023360 <abort>
	...

080224a0 <_ZSt13get_terminatev>:
 80224a0:	4b02      	ldr	r3, [pc, #8]	@ (80224ac <_ZSt13get_terminatev+0xc>)
 80224a2:	6818      	ldr	r0, [r3, #0]
 80224a4:	f3bf 8f5b 	dmb	ish
 80224a8:	4770      	bx	lr
 80224aa:	bf00      	nop
 80224ac:	20000210 	.word	0x20000210

080224b0 <_ZSt9terminatev>:
 80224b0:	b508      	push	{r3, lr}
 80224b2:	f7ff fff5 	bl	80224a0 <_ZSt13get_terminatev>
 80224b6:	f7ff ffee 	bl	8022496 <_ZN10__cxxabiv111__terminateEPFvvE>

080224ba <atan2f>:
 80224ba:	f000 b993 	b.w	80227e4 <__ieee754_atan2f>
	...

080224c0 <sqrtf>:
 80224c0:	b508      	push	{r3, lr}
 80224c2:	ed2d 8b02 	vpush	{d8}
 80224c6:	eeb0 8a40 	vmov.f32	s16, s0
 80224ca:	f000 f8a1 	bl	8022610 <__ieee754_sqrtf>
 80224ce:	eeb4 8a48 	vcmp.f32	s16, s16
 80224d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80224d6:	d60c      	bvs.n	80224f2 <sqrtf+0x32>
 80224d8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80224f8 <sqrtf+0x38>
 80224dc:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80224e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80224e4:	d505      	bpl.n	80224f2 <sqrtf+0x32>
 80224e6:	f001 fa81 	bl	80239ec <__errno>
 80224ea:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80224ee:	2321      	movs	r3, #33	@ 0x21
 80224f0:	6003      	str	r3, [r0, #0]
 80224f2:	ecbd 8b02 	vpop	{d8}
 80224f6:	bd08      	pop	{r3, pc}
 80224f8:	00000000 	.word	0x00000000

080224fc <cosf>:
 80224fc:	ee10 3a10 	vmov	r3, s0
 8022500:	b507      	push	{r0, r1, r2, lr}
 8022502:	4a1e      	ldr	r2, [pc, #120]	@ (802257c <cosf+0x80>)
 8022504:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8022508:	4293      	cmp	r3, r2
 802250a:	d806      	bhi.n	802251a <cosf+0x1e>
 802250c:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8022580 <cosf+0x84>
 8022510:	b003      	add	sp, #12
 8022512:	f85d eb04 	ldr.w	lr, [sp], #4
 8022516:	f000 b8c5 	b.w	80226a4 <__kernel_cosf>
 802251a:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802251e:	d304      	bcc.n	802252a <cosf+0x2e>
 8022520:	ee30 0a40 	vsub.f32	s0, s0, s0
 8022524:	b003      	add	sp, #12
 8022526:	f85d fb04 	ldr.w	pc, [sp], #4
 802252a:	4668      	mov	r0, sp
 802252c:	f000 f9fa 	bl	8022924 <__ieee754_rem_pio2f>
 8022530:	f000 0003 	and.w	r0, r0, #3
 8022534:	2801      	cmp	r0, #1
 8022536:	d009      	beq.n	802254c <cosf+0x50>
 8022538:	2802      	cmp	r0, #2
 802253a:	d010      	beq.n	802255e <cosf+0x62>
 802253c:	b9b0      	cbnz	r0, 802256c <cosf+0x70>
 802253e:	eddd 0a01 	vldr	s1, [sp, #4]
 8022542:	ed9d 0a00 	vldr	s0, [sp]
 8022546:	f000 f8ad 	bl	80226a4 <__kernel_cosf>
 802254a:	e7eb      	b.n	8022524 <cosf+0x28>
 802254c:	eddd 0a01 	vldr	s1, [sp, #4]
 8022550:	ed9d 0a00 	vldr	s0, [sp]
 8022554:	f000 f8fe 	bl	8022754 <__kernel_sinf>
 8022558:	eeb1 0a40 	vneg.f32	s0, s0
 802255c:	e7e2      	b.n	8022524 <cosf+0x28>
 802255e:	eddd 0a01 	vldr	s1, [sp, #4]
 8022562:	ed9d 0a00 	vldr	s0, [sp]
 8022566:	f000 f89d 	bl	80226a4 <__kernel_cosf>
 802256a:	e7f5      	b.n	8022558 <cosf+0x5c>
 802256c:	eddd 0a01 	vldr	s1, [sp, #4]
 8022570:	ed9d 0a00 	vldr	s0, [sp]
 8022574:	2001      	movs	r0, #1
 8022576:	f000 f8ed 	bl	8022754 <__kernel_sinf>
 802257a:	e7d3      	b.n	8022524 <cosf+0x28>
 802257c:	3f490fd8 	.word	0x3f490fd8
 8022580:	00000000 	.word	0x00000000

08022584 <sinf>:
 8022584:	ee10 3a10 	vmov	r3, s0
 8022588:	b507      	push	{r0, r1, r2, lr}
 802258a:	4a1f      	ldr	r2, [pc, #124]	@ (8022608 <sinf+0x84>)
 802258c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8022590:	4293      	cmp	r3, r2
 8022592:	d807      	bhi.n	80225a4 <sinf+0x20>
 8022594:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 802260c <sinf+0x88>
 8022598:	2000      	movs	r0, #0
 802259a:	b003      	add	sp, #12
 802259c:	f85d eb04 	ldr.w	lr, [sp], #4
 80225a0:	f000 b8d8 	b.w	8022754 <__kernel_sinf>
 80225a4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80225a8:	d304      	bcc.n	80225b4 <sinf+0x30>
 80225aa:	ee30 0a40 	vsub.f32	s0, s0, s0
 80225ae:	b003      	add	sp, #12
 80225b0:	f85d fb04 	ldr.w	pc, [sp], #4
 80225b4:	4668      	mov	r0, sp
 80225b6:	f000 f9b5 	bl	8022924 <__ieee754_rem_pio2f>
 80225ba:	f000 0003 	and.w	r0, r0, #3
 80225be:	2801      	cmp	r0, #1
 80225c0:	d00a      	beq.n	80225d8 <sinf+0x54>
 80225c2:	2802      	cmp	r0, #2
 80225c4:	d00f      	beq.n	80225e6 <sinf+0x62>
 80225c6:	b9c0      	cbnz	r0, 80225fa <sinf+0x76>
 80225c8:	eddd 0a01 	vldr	s1, [sp, #4]
 80225cc:	ed9d 0a00 	vldr	s0, [sp]
 80225d0:	2001      	movs	r0, #1
 80225d2:	f000 f8bf 	bl	8022754 <__kernel_sinf>
 80225d6:	e7ea      	b.n	80225ae <sinf+0x2a>
 80225d8:	eddd 0a01 	vldr	s1, [sp, #4]
 80225dc:	ed9d 0a00 	vldr	s0, [sp]
 80225e0:	f000 f860 	bl	80226a4 <__kernel_cosf>
 80225e4:	e7e3      	b.n	80225ae <sinf+0x2a>
 80225e6:	eddd 0a01 	vldr	s1, [sp, #4]
 80225ea:	ed9d 0a00 	vldr	s0, [sp]
 80225ee:	2001      	movs	r0, #1
 80225f0:	f000 f8b0 	bl	8022754 <__kernel_sinf>
 80225f4:	eeb1 0a40 	vneg.f32	s0, s0
 80225f8:	e7d9      	b.n	80225ae <sinf+0x2a>
 80225fa:	eddd 0a01 	vldr	s1, [sp, #4]
 80225fe:	ed9d 0a00 	vldr	s0, [sp]
 8022602:	f000 f84f 	bl	80226a4 <__kernel_cosf>
 8022606:	e7f5      	b.n	80225f4 <sinf+0x70>
 8022608:	3f490fd8 	.word	0x3f490fd8
 802260c:	00000000 	.word	0x00000000

08022610 <__ieee754_sqrtf>:
 8022610:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8022614:	4770      	bx	lr
	...

08022618 <round>:
 8022618:	ec51 0b10 	vmov	r0, r1, d0
 802261c:	b570      	push	{r4, r5, r6, lr}
 802261e:	f3c1 540a 	ubfx	r4, r1, #20, #11
 8022622:	f2a4 32ff 	subw	r2, r4, #1023	@ 0x3ff
 8022626:	2a13      	cmp	r2, #19
 8022628:	460b      	mov	r3, r1
 802262a:	4605      	mov	r5, r0
 802262c:	dc1b      	bgt.n	8022666 <round+0x4e>
 802262e:	2a00      	cmp	r2, #0
 8022630:	da0b      	bge.n	802264a <round+0x32>
 8022632:	f001 4300 	and.w	r3, r1, #2147483648	@ 0x80000000
 8022636:	3201      	adds	r2, #1
 8022638:	bf04      	itt	eq
 802263a:	f043 537f 	orreq.w	r3, r3, #1069547520	@ 0x3fc00000
 802263e:	f443 1340 	orreq.w	r3, r3, #3145728	@ 0x300000
 8022642:	2200      	movs	r2, #0
 8022644:	4619      	mov	r1, r3
 8022646:	4610      	mov	r0, r2
 8022648:	e015      	b.n	8022676 <round+0x5e>
 802264a:	4c15      	ldr	r4, [pc, #84]	@ (80226a0 <round+0x88>)
 802264c:	4114      	asrs	r4, r2
 802264e:	ea04 0601 	and.w	r6, r4, r1
 8022652:	4306      	orrs	r6, r0
 8022654:	d00f      	beq.n	8022676 <round+0x5e>
 8022656:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
 802265a:	fa41 f202 	asr.w	r2, r1, r2
 802265e:	4413      	add	r3, r2
 8022660:	ea23 0304 	bic.w	r3, r3, r4
 8022664:	e7ed      	b.n	8022642 <round+0x2a>
 8022666:	2a33      	cmp	r2, #51	@ 0x33
 8022668:	dd08      	ble.n	802267c <round+0x64>
 802266a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 802266e:	d102      	bne.n	8022676 <round+0x5e>
 8022670:	4602      	mov	r2, r0
 8022672:	f7dd fe1b 	bl	80002ac <__adddf3>
 8022676:	ec41 0b10 	vmov	d0, r0, r1
 802267a:	bd70      	pop	{r4, r5, r6, pc}
 802267c:	f2a4 4613 	subw	r6, r4, #1043	@ 0x413
 8022680:	f04f 34ff 	mov.w	r4, #4294967295
 8022684:	40f4      	lsrs	r4, r6
 8022686:	4204      	tst	r4, r0
 8022688:	d0f5      	beq.n	8022676 <round+0x5e>
 802268a:	f1c2 0133 	rsb	r1, r2, #51	@ 0x33
 802268e:	2201      	movs	r2, #1
 8022690:	408a      	lsls	r2, r1
 8022692:	1952      	adds	r2, r2, r5
 8022694:	bf28      	it	cs
 8022696:	3301      	addcs	r3, #1
 8022698:	ea22 0204 	bic.w	r2, r2, r4
 802269c:	e7d2      	b.n	8022644 <round+0x2c>
 802269e:	bf00      	nop
 80226a0:	000fffff 	.word	0x000fffff

080226a4 <__kernel_cosf>:
 80226a4:	ee10 3a10 	vmov	r3, s0
 80226a8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80226ac:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80226b0:	eef0 6a40 	vmov.f32	s13, s0
 80226b4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80226b8:	d204      	bcs.n	80226c4 <__kernel_cosf+0x20>
 80226ba:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 80226be:	ee17 2a90 	vmov	r2, s15
 80226c2:	b342      	cbz	r2, 8022716 <__kernel_cosf+0x72>
 80226c4:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80226c8:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8022734 <__kernel_cosf+0x90>
 80226cc:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8022738 <__kernel_cosf+0x94>
 80226d0:	4a1a      	ldr	r2, [pc, #104]	@ (802273c <__kernel_cosf+0x98>)
 80226d2:	eea7 6a27 	vfma.f32	s12, s14, s15
 80226d6:	4293      	cmp	r3, r2
 80226d8:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022740 <__kernel_cosf+0x9c>
 80226dc:	eee6 7a07 	vfma.f32	s15, s12, s14
 80226e0:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8022744 <__kernel_cosf+0xa0>
 80226e4:	eea7 6a87 	vfma.f32	s12, s15, s14
 80226e8:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8022748 <__kernel_cosf+0xa4>
 80226ec:	eee6 7a07 	vfma.f32	s15, s12, s14
 80226f0:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 802274c <__kernel_cosf+0xa8>
 80226f4:	eea7 6a87 	vfma.f32	s12, s15, s14
 80226f8:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 80226fc:	ee26 6a07 	vmul.f32	s12, s12, s14
 8022700:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022704:	eee7 0a06 	vfma.f32	s1, s14, s12
 8022708:	ee67 7a27 	vmul.f32	s15, s14, s15
 802270c:	d804      	bhi.n	8022718 <__kernel_cosf+0x74>
 802270e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8022712:	ee30 0a67 	vsub.f32	s0, s0, s15
 8022716:	4770      	bx	lr
 8022718:	4a0d      	ldr	r2, [pc, #52]	@ (8022750 <__kernel_cosf+0xac>)
 802271a:	4293      	cmp	r3, r2
 802271c:	bf9a      	itte	ls
 802271e:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8022722:	ee07 3a10 	vmovls	s14, r3
 8022726:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802272a:	ee30 0a47 	vsub.f32	s0, s0, s14
 802272e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022732:	e7ec      	b.n	802270e <__kernel_cosf+0x6a>
 8022734:	ad47d74e 	.word	0xad47d74e
 8022738:	310f74f6 	.word	0x310f74f6
 802273c:	3e999999 	.word	0x3e999999
 8022740:	b493f27c 	.word	0xb493f27c
 8022744:	37d00d01 	.word	0x37d00d01
 8022748:	bab60b61 	.word	0xbab60b61
 802274c:	3d2aaaab 	.word	0x3d2aaaab
 8022750:	3f480000 	.word	0x3f480000

08022754 <__kernel_sinf>:
 8022754:	ee10 3a10 	vmov	r3, s0
 8022758:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802275c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8022760:	d204      	bcs.n	802276c <__kernel_sinf+0x18>
 8022762:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8022766:	ee17 3a90 	vmov	r3, s15
 802276a:	b35b      	cbz	r3, 80227c4 <__kernel_sinf+0x70>
 802276c:	ee20 7a00 	vmul.f32	s14, s0, s0
 8022770:	eddf 7a15 	vldr	s15, [pc, #84]	@ 80227c8 <__kernel_sinf+0x74>
 8022774:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 80227cc <__kernel_sinf+0x78>
 8022778:	eea7 6a27 	vfma.f32	s12, s14, s15
 802277c:	eddf 7a14 	vldr	s15, [pc, #80]	@ 80227d0 <__kernel_sinf+0x7c>
 8022780:	eee6 7a07 	vfma.f32	s15, s12, s14
 8022784:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 80227d4 <__kernel_sinf+0x80>
 8022788:	eea7 6a87 	vfma.f32	s12, s15, s14
 802278c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 80227d8 <__kernel_sinf+0x84>
 8022790:	ee60 6a07 	vmul.f32	s13, s0, s14
 8022794:	eee6 7a07 	vfma.f32	s15, s12, s14
 8022798:	b930      	cbnz	r0, 80227a8 <__kernel_sinf+0x54>
 802279a:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 80227dc <__kernel_sinf+0x88>
 802279e:	eea7 6a27 	vfma.f32	s12, s14, s15
 80227a2:	eea6 0a26 	vfma.f32	s0, s12, s13
 80227a6:	4770      	bx	lr
 80227a8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80227ac:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80227b0:	eee0 7a86 	vfma.f32	s15, s1, s12
 80227b4:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80227b8:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80227e0 <__kernel_sinf+0x8c>
 80227bc:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80227c0:	ee30 0a60 	vsub.f32	s0, s0, s1
 80227c4:	4770      	bx	lr
 80227c6:	bf00      	nop
 80227c8:	2f2ec9d3 	.word	0x2f2ec9d3
 80227cc:	b2d72f34 	.word	0xb2d72f34
 80227d0:	3638ef1b 	.word	0x3638ef1b
 80227d4:	b9500d01 	.word	0xb9500d01
 80227d8:	3c088889 	.word	0x3c088889
 80227dc:	be2aaaab 	.word	0xbe2aaaab
 80227e0:	3e2aaaab 	.word	0x3e2aaaab

080227e4 <__ieee754_atan2f>:
 80227e4:	ee10 2a90 	vmov	r2, s1
 80227e8:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 80227ec:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 80227f0:	b510      	push	{r4, lr}
 80227f2:	eef0 7a40 	vmov.f32	s15, s0
 80227f6:	d806      	bhi.n	8022806 <__ieee754_atan2f+0x22>
 80227f8:	ee10 0a10 	vmov	r0, s0
 80227fc:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8022800:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8022804:	d904      	bls.n	8022810 <__ieee754_atan2f+0x2c>
 8022806:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802280a:	eeb0 0a67 	vmov.f32	s0, s15
 802280e:	bd10      	pop	{r4, pc}
 8022810:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8022814:	d103      	bne.n	802281e <__ieee754_atan2f+0x3a>
 8022816:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802281a:	f000 b9b3 	b.w	8022b84 <atanf>
 802281e:	1794      	asrs	r4, r2, #30
 8022820:	f004 0402 	and.w	r4, r4, #2
 8022824:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8022828:	b943      	cbnz	r3, 802283c <__ieee754_atan2f+0x58>
 802282a:	2c02      	cmp	r4, #2
 802282c:	d05e      	beq.n	80228ec <__ieee754_atan2f+0x108>
 802282e:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8022900 <__ieee754_atan2f+0x11c>
 8022832:	2c03      	cmp	r4, #3
 8022834:	bf08      	it	eq
 8022836:	eef0 7a47 	vmoveq.f32	s15, s14
 802283a:	e7e6      	b.n	802280a <__ieee754_atan2f+0x26>
 802283c:	b941      	cbnz	r1, 8022850 <__ieee754_atan2f+0x6c>
 802283e:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8022904 <__ieee754_atan2f+0x120>
 8022842:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8022908 <__ieee754_atan2f+0x124>
 8022846:	2800      	cmp	r0, #0
 8022848:	bfa8      	it	ge
 802284a:	eef0 7a47 	vmovge.f32	s15, s14
 802284e:	e7dc      	b.n	802280a <__ieee754_atan2f+0x26>
 8022850:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022854:	d110      	bne.n	8022878 <__ieee754_atan2f+0x94>
 8022856:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802285a:	f104 34ff 	add.w	r4, r4, #4294967295
 802285e:	d107      	bne.n	8022870 <__ieee754_atan2f+0x8c>
 8022860:	2c02      	cmp	r4, #2
 8022862:	d846      	bhi.n	80228f2 <__ieee754_atan2f+0x10e>
 8022864:	4b29      	ldr	r3, [pc, #164]	@ (802290c <__ieee754_atan2f+0x128>)
 8022866:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 802286a:	edd3 7a00 	vldr	s15, [r3]
 802286e:	e7cc      	b.n	802280a <__ieee754_atan2f+0x26>
 8022870:	2c02      	cmp	r4, #2
 8022872:	d841      	bhi.n	80228f8 <__ieee754_atan2f+0x114>
 8022874:	4b26      	ldr	r3, [pc, #152]	@ (8022910 <__ieee754_atan2f+0x12c>)
 8022876:	e7f6      	b.n	8022866 <__ieee754_atan2f+0x82>
 8022878:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802287c:	d0df      	beq.n	802283e <__ieee754_atan2f+0x5a>
 802287e:	1a5b      	subs	r3, r3, r1
 8022880:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8022884:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8022888:	da1a      	bge.n	80228c0 <__ieee754_atan2f+0xdc>
 802288a:	2a00      	cmp	r2, #0
 802288c:	da01      	bge.n	8022892 <__ieee754_atan2f+0xae>
 802288e:	313c      	adds	r1, #60	@ 0x3c
 8022890:	db19      	blt.n	80228c6 <__ieee754_atan2f+0xe2>
 8022892:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8022896:	f000 fa49 	bl	8022d2c <fabsf>
 802289a:	f000 f973 	bl	8022b84 <atanf>
 802289e:	eef0 7a40 	vmov.f32	s15, s0
 80228a2:	2c01      	cmp	r4, #1
 80228a4:	d012      	beq.n	80228cc <__ieee754_atan2f+0xe8>
 80228a6:	2c02      	cmp	r4, #2
 80228a8:	d017      	beq.n	80228da <__ieee754_atan2f+0xf6>
 80228aa:	2c00      	cmp	r4, #0
 80228ac:	d0ad      	beq.n	802280a <__ieee754_atan2f+0x26>
 80228ae:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8022914 <__ieee754_atan2f+0x130>
 80228b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80228b6:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8022918 <__ieee754_atan2f+0x134>
 80228ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80228be:	e7a4      	b.n	802280a <__ieee754_atan2f+0x26>
 80228c0:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8022908 <__ieee754_atan2f+0x124>
 80228c4:	e7ed      	b.n	80228a2 <__ieee754_atan2f+0xbe>
 80228c6:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802291c <__ieee754_atan2f+0x138>
 80228ca:	e7ea      	b.n	80228a2 <__ieee754_atan2f+0xbe>
 80228cc:	ee17 3a90 	vmov	r3, s15
 80228d0:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 80228d4:	ee07 3a90 	vmov	s15, r3
 80228d8:	e797      	b.n	802280a <__ieee754_atan2f+0x26>
 80228da:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8022914 <__ieee754_atan2f+0x130>
 80228de:	ee77 7a87 	vadd.f32	s15, s15, s14
 80228e2:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8022918 <__ieee754_atan2f+0x134>
 80228e6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80228ea:	e78e      	b.n	802280a <__ieee754_atan2f+0x26>
 80228ec:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8022918 <__ieee754_atan2f+0x134>
 80228f0:	e78b      	b.n	802280a <__ieee754_atan2f+0x26>
 80228f2:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8022920 <__ieee754_atan2f+0x13c>
 80228f6:	e788      	b.n	802280a <__ieee754_atan2f+0x26>
 80228f8:	eddf 7a08 	vldr	s15, [pc, #32]	@ 802291c <__ieee754_atan2f+0x138>
 80228fc:	e785      	b.n	802280a <__ieee754_atan2f+0x26>
 80228fe:	bf00      	nop
 8022900:	c0490fdb 	.word	0xc0490fdb
 8022904:	bfc90fdb 	.word	0xbfc90fdb
 8022908:	3fc90fdb 	.word	0x3fc90fdb
 802290c:	080261b4 	.word	0x080261b4
 8022910:	080261a8 	.word	0x080261a8
 8022914:	33bbbd2e 	.word	0x33bbbd2e
 8022918:	40490fdb 	.word	0x40490fdb
 802291c:	00000000 	.word	0x00000000
 8022920:	3f490fdb 	.word	0x3f490fdb

08022924 <__ieee754_rem_pio2f>:
 8022924:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022926:	ee10 6a10 	vmov	r6, s0
 802292a:	4b88      	ldr	r3, [pc, #544]	@ (8022b4c <__ieee754_rem_pio2f+0x228>)
 802292c:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8022930:	429d      	cmp	r5, r3
 8022932:	b087      	sub	sp, #28
 8022934:	4604      	mov	r4, r0
 8022936:	d805      	bhi.n	8022944 <__ieee754_rem_pio2f+0x20>
 8022938:	2300      	movs	r3, #0
 802293a:	ed80 0a00 	vstr	s0, [r0]
 802293e:	6043      	str	r3, [r0, #4]
 8022940:	2000      	movs	r0, #0
 8022942:	e022      	b.n	802298a <__ieee754_rem_pio2f+0x66>
 8022944:	4b82      	ldr	r3, [pc, #520]	@ (8022b50 <__ieee754_rem_pio2f+0x22c>)
 8022946:	429d      	cmp	r5, r3
 8022948:	d83a      	bhi.n	80229c0 <__ieee754_rem_pio2f+0x9c>
 802294a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802294e:	2e00      	cmp	r6, #0
 8022950:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8022b54 <__ieee754_rem_pio2f+0x230>
 8022954:	4a80      	ldr	r2, [pc, #512]	@ (8022b58 <__ieee754_rem_pio2f+0x234>)
 8022956:	f023 030f 	bic.w	r3, r3, #15
 802295a:	dd18      	ble.n	802298e <__ieee754_rem_pio2f+0x6a>
 802295c:	4293      	cmp	r3, r2
 802295e:	ee70 7a47 	vsub.f32	s15, s0, s14
 8022962:	bf09      	itett	eq
 8022964:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8022b5c <__ieee754_rem_pio2f+0x238>
 8022968:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8022b60 <__ieee754_rem_pio2f+0x23c>
 802296c:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8022b64 <__ieee754_rem_pio2f+0x240>
 8022970:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8022974:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8022978:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802297c:	ed80 7a00 	vstr	s14, [r0]
 8022980:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8022984:	edc0 7a01 	vstr	s15, [r0, #4]
 8022988:	2001      	movs	r0, #1
 802298a:	b007      	add	sp, #28
 802298c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802298e:	4293      	cmp	r3, r2
 8022990:	ee70 7a07 	vadd.f32	s15, s0, s14
 8022994:	bf09      	itett	eq
 8022996:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8022b5c <__ieee754_rem_pio2f+0x238>
 802299a:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8022b60 <__ieee754_rem_pio2f+0x23c>
 802299e:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8022b64 <__ieee754_rem_pio2f+0x240>
 80229a2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80229a6:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80229aa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80229ae:	ed80 7a00 	vstr	s14, [r0]
 80229b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80229b6:	edc0 7a01 	vstr	s15, [r0, #4]
 80229ba:	f04f 30ff 	mov.w	r0, #4294967295
 80229be:	e7e4      	b.n	802298a <__ieee754_rem_pio2f+0x66>
 80229c0:	4b69      	ldr	r3, [pc, #420]	@ (8022b68 <__ieee754_rem_pio2f+0x244>)
 80229c2:	429d      	cmp	r5, r3
 80229c4:	d873      	bhi.n	8022aae <__ieee754_rem_pio2f+0x18a>
 80229c6:	f000 f9b1 	bl	8022d2c <fabsf>
 80229ca:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8022b6c <__ieee754_rem_pio2f+0x248>
 80229ce:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80229d2:	eee0 7a07 	vfma.f32	s15, s0, s14
 80229d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80229da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80229de:	ee17 0a90 	vmov	r0, s15
 80229e2:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022b54 <__ieee754_rem_pio2f+0x230>
 80229e6:	eea7 0a67 	vfms.f32	s0, s14, s15
 80229ea:	281f      	cmp	r0, #31
 80229ec:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022b60 <__ieee754_rem_pio2f+0x23c>
 80229f0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80229f4:	eeb1 6a47 	vneg.f32	s12, s14
 80229f8:	ee70 6a67 	vsub.f32	s13, s0, s15
 80229fc:	ee16 1a90 	vmov	r1, s13
 8022a00:	dc09      	bgt.n	8022a16 <__ieee754_rem_pio2f+0xf2>
 8022a02:	4a5b      	ldr	r2, [pc, #364]	@ (8022b70 <__ieee754_rem_pio2f+0x24c>)
 8022a04:	1e47      	subs	r7, r0, #1
 8022a06:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8022a0a:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8022a0e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8022a12:	4293      	cmp	r3, r2
 8022a14:	d107      	bne.n	8022a26 <__ieee754_rem_pio2f+0x102>
 8022a16:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8022a1a:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8022a1e:	2a08      	cmp	r2, #8
 8022a20:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8022a24:	dc14      	bgt.n	8022a50 <__ieee754_rem_pio2f+0x12c>
 8022a26:	6021      	str	r1, [r4, #0]
 8022a28:	ed94 7a00 	vldr	s14, [r4]
 8022a2c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8022a30:	2e00      	cmp	r6, #0
 8022a32:	ee30 0a67 	vsub.f32	s0, s0, s15
 8022a36:	ed84 0a01 	vstr	s0, [r4, #4]
 8022a3a:	daa6      	bge.n	802298a <__ieee754_rem_pio2f+0x66>
 8022a3c:	eeb1 7a47 	vneg.f32	s14, s14
 8022a40:	eeb1 0a40 	vneg.f32	s0, s0
 8022a44:	ed84 7a00 	vstr	s14, [r4]
 8022a48:	ed84 0a01 	vstr	s0, [r4, #4]
 8022a4c:	4240      	negs	r0, r0
 8022a4e:	e79c      	b.n	802298a <__ieee754_rem_pio2f+0x66>
 8022a50:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8022b5c <__ieee754_rem_pio2f+0x238>
 8022a54:	eef0 6a40 	vmov.f32	s13, s0
 8022a58:	eee6 6a25 	vfma.f32	s13, s12, s11
 8022a5c:	ee70 7a66 	vsub.f32	s15, s0, s13
 8022a60:	eee6 7a25 	vfma.f32	s15, s12, s11
 8022a64:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8022b64 <__ieee754_rem_pio2f+0x240>
 8022a68:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8022a6c:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8022a70:	ee15 2a90 	vmov	r2, s11
 8022a74:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8022a78:	1a5b      	subs	r3, r3, r1
 8022a7a:	2b19      	cmp	r3, #25
 8022a7c:	dc04      	bgt.n	8022a88 <__ieee754_rem_pio2f+0x164>
 8022a7e:	edc4 5a00 	vstr	s11, [r4]
 8022a82:	eeb0 0a66 	vmov.f32	s0, s13
 8022a86:	e7cf      	b.n	8022a28 <__ieee754_rem_pio2f+0x104>
 8022a88:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8022b74 <__ieee754_rem_pio2f+0x250>
 8022a8c:	eeb0 0a66 	vmov.f32	s0, s13
 8022a90:	eea6 0a25 	vfma.f32	s0, s12, s11
 8022a94:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8022a98:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8022b78 <__ieee754_rem_pio2f+0x254>
 8022a9c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8022aa0:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8022aa4:	ee30 7a67 	vsub.f32	s14, s0, s15
 8022aa8:	ed84 7a00 	vstr	s14, [r4]
 8022aac:	e7bc      	b.n	8022a28 <__ieee754_rem_pio2f+0x104>
 8022aae:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8022ab2:	d306      	bcc.n	8022ac2 <__ieee754_rem_pio2f+0x19e>
 8022ab4:	ee70 7a40 	vsub.f32	s15, s0, s0
 8022ab8:	edc0 7a01 	vstr	s15, [r0, #4]
 8022abc:	edc0 7a00 	vstr	s15, [r0]
 8022ac0:	e73e      	b.n	8022940 <__ieee754_rem_pio2f+0x1c>
 8022ac2:	15ea      	asrs	r2, r5, #23
 8022ac4:	3a86      	subs	r2, #134	@ 0x86
 8022ac6:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8022aca:	ee07 3a90 	vmov	s15, r3
 8022ace:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8022ad2:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8022b7c <__ieee754_rem_pio2f+0x258>
 8022ad6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8022ada:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022ade:	ed8d 7a03 	vstr	s14, [sp, #12]
 8022ae2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8022ae6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8022aea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8022aee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022af2:	ed8d 7a04 	vstr	s14, [sp, #16]
 8022af6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8022afa:	eef5 7a40 	vcmp.f32	s15, #0.0
 8022afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022b02:	edcd 7a05 	vstr	s15, [sp, #20]
 8022b06:	d11e      	bne.n	8022b46 <__ieee754_rem_pio2f+0x222>
 8022b08:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8022b0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022b10:	bf0c      	ite	eq
 8022b12:	2301      	moveq	r3, #1
 8022b14:	2302      	movne	r3, #2
 8022b16:	491a      	ldr	r1, [pc, #104]	@ (8022b80 <__ieee754_rem_pio2f+0x25c>)
 8022b18:	9101      	str	r1, [sp, #4]
 8022b1a:	2102      	movs	r1, #2
 8022b1c:	9100      	str	r1, [sp, #0]
 8022b1e:	a803      	add	r0, sp, #12
 8022b20:	4621      	mov	r1, r4
 8022b22:	f000 f90b 	bl	8022d3c <__kernel_rem_pio2f>
 8022b26:	2e00      	cmp	r6, #0
 8022b28:	f6bf af2f 	bge.w	802298a <__ieee754_rem_pio2f+0x66>
 8022b2c:	edd4 7a00 	vldr	s15, [r4]
 8022b30:	eef1 7a67 	vneg.f32	s15, s15
 8022b34:	edc4 7a00 	vstr	s15, [r4]
 8022b38:	edd4 7a01 	vldr	s15, [r4, #4]
 8022b3c:	eef1 7a67 	vneg.f32	s15, s15
 8022b40:	edc4 7a01 	vstr	s15, [r4, #4]
 8022b44:	e782      	b.n	8022a4c <__ieee754_rem_pio2f+0x128>
 8022b46:	2303      	movs	r3, #3
 8022b48:	e7e5      	b.n	8022b16 <__ieee754_rem_pio2f+0x1f2>
 8022b4a:	bf00      	nop
 8022b4c:	3f490fd8 	.word	0x3f490fd8
 8022b50:	4016cbe3 	.word	0x4016cbe3
 8022b54:	3fc90f80 	.word	0x3fc90f80
 8022b58:	3fc90fd0 	.word	0x3fc90fd0
 8022b5c:	37354400 	.word	0x37354400
 8022b60:	37354443 	.word	0x37354443
 8022b64:	2e85a308 	.word	0x2e85a308
 8022b68:	43490f80 	.word	0x43490f80
 8022b6c:	3f22f984 	.word	0x3f22f984
 8022b70:	080261c0 	.word	0x080261c0
 8022b74:	2e85a300 	.word	0x2e85a300
 8022b78:	248d3132 	.word	0x248d3132
 8022b7c:	43800000 	.word	0x43800000
 8022b80:	08026240 	.word	0x08026240

08022b84 <atanf>:
 8022b84:	b538      	push	{r3, r4, r5, lr}
 8022b86:	ee10 5a10 	vmov	r5, s0
 8022b8a:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 8022b8e:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 8022b92:	eef0 7a40 	vmov.f32	s15, s0
 8022b96:	d310      	bcc.n	8022bba <atanf+0x36>
 8022b98:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8022b9c:	d904      	bls.n	8022ba8 <atanf+0x24>
 8022b9e:	ee70 7a00 	vadd.f32	s15, s0, s0
 8022ba2:	eeb0 0a67 	vmov.f32	s0, s15
 8022ba6:	bd38      	pop	{r3, r4, r5, pc}
 8022ba8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8022ce0 <atanf+0x15c>
 8022bac:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8022ce4 <atanf+0x160>
 8022bb0:	2d00      	cmp	r5, #0
 8022bb2:	bfc8      	it	gt
 8022bb4:	eef0 7a47 	vmovgt.f32	s15, s14
 8022bb8:	e7f3      	b.n	8022ba2 <atanf+0x1e>
 8022bba:	4b4b      	ldr	r3, [pc, #300]	@ (8022ce8 <atanf+0x164>)
 8022bbc:	429c      	cmp	r4, r3
 8022bbe:	d810      	bhi.n	8022be2 <atanf+0x5e>
 8022bc0:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8022bc4:	d20a      	bcs.n	8022bdc <atanf+0x58>
 8022bc6:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8022cec <atanf+0x168>
 8022bca:	ee30 7a07 	vadd.f32	s14, s0, s14
 8022bce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8022bd2:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8022bd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022bda:	dce2      	bgt.n	8022ba2 <atanf+0x1e>
 8022bdc:	f04f 33ff 	mov.w	r3, #4294967295
 8022be0:	e013      	b.n	8022c0a <atanf+0x86>
 8022be2:	f000 f8a3 	bl	8022d2c <fabsf>
 8022be6:	4b42      	ldr	r3, [pc, #264]	@ (8022cf0 <atanf+0x16c>)
 8022be8:	429c      	cmp	r4, r3
 8022bea:	d84f      	bhi.n	8022c8c <atanf+0x108>
 8022bec:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8022bf0:	429c      	cmp	r4, r3
 8022bf2:	d841      	bhi.n	8022c78 <atanf+0xf4>
 8022bf4:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8022bf8:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8022bfc:	eea0 7a27 	vfma.f32	s14, s0, s15
 8022c00:	2300      	movs	r3, #0
 8022c02:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022c06:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022c0a:	1c5a      	adds	r2, r3, #1
 8022c0c:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8022c10:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8022cf4 <atanf+0x170>
 8022c14:	eddf 5a38 	vldr	s11, [pc, #224]	@ 8022cf8 <atanf+0x174>
 8022c18:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8022cfc <atanf+0x178>
 8022c1c:	ee66 6a06 	vmul.f32	s13, s12, s12
 8022c20:	eee6 5a87 	vfma.f32	s11, s13, s14
 8022c24:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8022d00 <atanf+0x17c>
 8022c28:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8022c2c:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8022d04 <atanf+0x180>
 8022c30:	eee7 5a26 	vfma.f32	s11, s14, s13
 8022c34:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8022d08 <atanf+0x184>
 8022c38:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8022c3c:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8022d0c <atanf+0x188>
 8022c40:	eee7 5a26 	vfma.f32	s11, s14, s13
 8022c44:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8022d10 <atanf+0x18c>
 8022c48:	eea6 5a87 	vfma.f32	s10, s13, s14
 8022c4c:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8022d14 <atanf+0x190>
 8022c50:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022c54:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 8022d18 <atanf+0x194>
 8022c58:	eea7 5a26 	vfma.f32	s10, s14, s13
 8022c5c:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8022d1c <atanf+0x198>
 8022c60:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022c64:	ee27 7a26 	vmul.f32	s14, s14, s13
 8022c68:	eea5 7a86 	vfma.f32	s14, s11, s12
 8022c6c:	ee27 7a87 	vmul.f32	s14, s15, s14
 8022c70:	d121      	bne.n	8022cb6 <atanf+0x132>
 8022c72:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022c76:	e794      	b.n	8022ba2 <atanf+0x1e>
 8022c78:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8022c7c:	ee30 7a67 	vsub.f32	s14, s0, s15
 8022c80:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022c84:	2301      	movs	r3, #1
 8022c86:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022c8a:	e7be      	b.n	8022c0a <atanf+0x86>
 8022c8c:	4b24      	ldr	r3, [pc, #144]	@ (8022d20 <atanf+0x19c>)
 8022c8e:	429c      	cmp	r4, r3
 8022c90:	d80b      	bhi.n	8022caa <atanf+0x126>
 8022c92:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8022c96:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022c9a:	eea0 7a27 	vfma.f32	s14, s0, s15
 8022c9e:	2302      	movs	r3, #2
 8022ca0:	ee70 6a67 	vsub.f32	s13, s0, s15
 8022ca4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8022ca8:	e7af      	b.n	8022c0a <atanf+0x86>
 8022caa:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8022cae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022cb2:	2303      	movs	r3, #3
 8022cb4:	e7a9      	b.n	8022c0a <atanf+0x86>
 8022cb6:	4a1b      	ldr	r2, [pc, #108]	@ (8022d24 <atanf+0x1a0>)
 8022cb8:	491b      	ldr	r1, [pc, #108]	@ (8022d28 <atanf+0x1a4>)
 8022cba:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8022cbe:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8022cc2:	edd3 6a00 	vldr	s13, [r3]
 8022cc6:	ee37 7a66 	vsub.f32	s14, s14, s13
 8022cca:	2d00      	cmp	r5, #0
 8022ccc:	ee37 7a67 	vsub.f32	s14, s14, s15
 8022cd0:	edd2 7a00 	vldr	s15, [r2]
 8022cd4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022cd8:	bfb8      	it	lt
 8022cda:	eef1 7a67 	vneglt.f32	s15, s15
 8022cde:	e760      	b.n	8022ba2 <atanf+0x1e>
 8022ce0:	bfc90fdb 	.word	0xbfc90fdb
 8022ce4:	3fc90fdb 	.word	0x3fc90fdb
 8022ce8:	3edfffff 	.word	0x3edfffff
 8022cec:	7149f2ca 	.word	0x7149f2ca
 8022cf0:	3f97ffff 	.word	0x3f97ffff
 8022cf4:	3c8569d7 	.word	0x3c8569d7
 8022cf8:	3d4bda59 	.word	0x3d4bda59
 8022cfc:	bd6ef16b 	.word	0xbd6ef16b
 8022d00:	3d886b35 	.word	0x3d886b35
 8022d04:	3dba2e6e 	.word	0x3dba2e6e
 8022d08:	3e124925 	.word	0x3e124925
 8022d0c:	3eaaaaab 	.word	0x3eaaaaab
 8022d10:	bd15a221 	.word	0xbd15a221
 8022d14:	bd9d8795 	.word	0xbd9d8795
 8022d18:	bde38e38 	.word	0xbde38e38
 8022d1c:	be4ccccd 	.word	0xbe4ccccd
 8022d20:	401bffff 	.word	0x401bffff
 8022d24:	08026568 	.word	0x08026568
 8022d28:	08026558 	.word	0x08026558

08022d2c <fabsf>:
 8022d2c:	ee10 3a10 	vmov	r3, s0
 8022d30:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8022d34:	ee00 3a10 	vmov	s0, r3
 8022d38:	4770      	bx	lr
	...

08022d3c <__kernel_rem_pio2f>:
 8022d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d40:	ed2d 8b04 	vpush	{d8-d9}
 8022d44:	b0d9      	sub	sp, #356	@ 0x164
 8022d46:	4690      	mov	r8, r2
 8022d48:	9001      	str	r0, [sp, #4]
 8022d4a:	4ab6      	ldr	r2, [pc, #728]	@ (8023024 <__kernel_rem_pio2f+0x2e8>)
 8022d4c:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8022d4e:	f118 0f04 	cmn.w	r8, #4
 8022d52:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8022d56:	460f      	mov	r7, r1
 8022d58:	f103 3bff 	add.w	fp, r3, #4294967295
 8022d5c:	db26      	blt.n	8022dac <__kernel_rem_pio2f+0x70>
 8022d5e:	f1b8 0203 	subs.w	r2, r8, #3
 8022d62:	bf48      	it	mi
 8022d64:	f108 0204 	addmi.w	r2, r8, #4
 8022d68:	10d2      	asrs	r2, r2, #3
 8022d6a:	1c55      	adds	r5, r2, #1
 8022d6c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8022d6e:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8023034 <__kernel_rem_pio2f+0x2f8>
 8022d72:	00e8      	lsls	r0, r5, #3
 8022d74:	eba2 060b 	sub.w	r6, r2, fp
 8022d78:	9002      	str	r0, [sp, #8]
 8022d7a:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8022d7e:	eb0a 0c0b 	add.w	ip, sl, fp
 8022d82:	ac1c      	add	r4, sp, #112	@ 0x70
 8022d84:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8022d88:	2000      	movs	r0, #0
 8022d8a:	4560      	cmp	r0, ip
 8022d8c:	dd10      	ble.n	8022db0 <__kernel_rem_pio2f+0x74>
 8022d8e:	a91c      	add	r1, sp, #112	@ 0x70
 8022d90:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8022d94:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8022d98:	2600      	movs	r6, #0
 8022d9a:	4556      	cmp	r6, sl
 8022d9c:	dc24      	bgt.n	8022de8 <__kernel_rem_pio2f+0xac>
 8022d9e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8022da2:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8023034 <__kernel_rem_pio2f+0x2f8>
 8022da6:	4684      	mov	ip, r0
 8022da8:	2400      	movs	r4, #0
 8022daa:	e016      	b.n	8022dda <__kernel_rem_pio2f+0x9e>
 8022dac:	2200      	movs	r2, #0
 8022dae:	e7dc      	b.n	8022d6a <__kernel_rem_pio2f+0x2e>
 8022db0:	42c6      	cmn	r6, r0
 8022db2:	bf5d      	ittte	pl
 8022db4:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8022db8:	ee07 1a90 	vmovpl	s15, r1
 8022dbc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8022dc0:	eef0 7a47 	vmovmi.f32	s15, s14
 8022dc4:	ece4 7a01 	vstmia	r4!, {s15}
 8022dc8:	3001      	adds	r0, #1
 8022dca:	e7de      	b.n	8022d8a <__kernel_rem_pio2f+0x4e>
 8022dcc:	ecfe 6a01 	vldmia	lr!, {s13}
 8022dd0:	ed3c 7a01 	vldmdb	ip!, {s14}
 8022dd4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022dd8:	3401      	adds	r4, #1
 8022dda:	455c      	cmp	r4, fp
 8022ddc:	ddf6      	ble.n	8022dcc <__kernel_rem_pio2f+0x90>
 8022dde:	ece9 7a01 	vstmia	r9!, {s15}
 8022de2:	3601      	adds	r6, #1
 8022de4:	3004      	adds	r0, #4
 8022de6:	e7d8      	b.n	8022d9a <__kernel_rem_pio2f+0x5e>
 8022de8:	a908      	add	r1, sp, #32
 8022dea:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8022dee:	9104      	str	r1, [sp, #16]
 8022df0:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8022df2:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8023030 <__kernel_rem_pio2f+0x2f4>
 8022df6:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 802302c <__kernel_rem_pio2f+0x2f0>
 8022dfa:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8022dfe:	9203      	str	r2, [sp, #12]
 8022e00:	4654      	mov	r4, sl
 8022e02:	00a2      	lsls	r2, r4, #2
 8022e04:	9205      	str	r2, [sp, #20]
 8022e06:	aa58      	add	r2, sp, #352	@ 0x160
 8022e08:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8022e0c:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8022e10:	a944      	add	r1, sp, #272	@ 0x110
 8022e12:	aa08      	add	r2, sp, #32
 8022e14:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8022e18:	4694      	mov	ip, r2
 8022e1a:	4626      	mov	r6, r4
 8022e1c:	2e00      	cmp	r6, #0
 8022e1e:	dc4c      	bgt.n	8022eba <__kernel_rem_pio2f+0x17e>
 8022e20:	4628      	mov	r0, r5
 8022e22:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8022e26:	f000 f9f1 	bl	802320c <scalbnf>
 8022e2a:	eeb0 8a40 	vmov.f32	s16, s0
 8022e2e:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8022e32:	ee28 0a00 	vmul.f32	s0, s16, s0
 8022e36:	f000 fa4f 	bl	80232d8 <floorf>
 8022e3a:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8022e3e:	eea0 8a67 	vfms.f32	s16, s0, s15
 8022e42:	2d00      	cmp	r5, #0
 8022e44:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8022e48:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8022e4c:	ee17 9a90 	vmov	r9, s15
 8022e50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022e54:	ee38 8a67 	vsub.f32	s16, s16, s15
 8022e58:	dd41      	ble.n	8022ede <__kernel_rem_pio2f+0x1a2>
 8022e5a:	f104 3cff 	add.w	ip, r4, #4294967295
 8022e5e:	a908      	add	r1, sp, #32
 8022e60:	f1c5 0e08 	rsb	lr, r5, #8
 8022e64:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8022e68:	fa46 f00e 	asr.w	r0, r6, lr
 8022e6c:	4481      	add	r9, r0
 8022e6e:	fa00 f00e 	lsl.w	r0, r0, lr
 8022e72:	1a36      	subs	r6, r6, r0
 8022e74:	f1c5 0007 	rsb	r0, r5, #7
 8022e78:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8022e7c:	4106      	asrs	r6, r0
 8022e7e:	2e00      	cmp	r6, #0
 8022e80:	dd3c      	ble.n	8022efc <__kernel_rem_pio2f+0x1c0>
 8022e82:	f04f 0e00 	mov.w	lr, #0
 8022e86:	f109 0901 	add.w	r9, r9, #1
 8022e8a:	4670      	mov	r0, lr
 8022e8c:	4574      	cmp	r4, lr
 8022e8e:	dc68      	bgt.n	8022f62 <__kernel_rem_pio2f+0x226>
 8022e90:	2d00      	cmp	r5, #0
 8022e92:	dd03      	ble.n	8022e9c <__kernel_rem_pio2f+0x160>
 8022e94:	2d01      	cmp	r5, #1
 8022e96:	d074      	beq.n	8022f82 <__kernel_rem_pio2f+0x246>
 8022e98:	2d02      	cmp	r5, #2
 8022e9a:	d07d      	beq.n	8022f98 <__kernel_rem_pio2f+0x25c>
 8022e9c:	2e02      	cmp	r6, #2
 8022e9e:	d12d      	bne.n	8022efc <__kernel_rem_pio2f+0x1c0>
 8022ea0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8022ea4:	ee30 8a48 	vsub.f32	s16, s0, s16
 8022ea8:	b340      	cbz	r0, 8022efc <__kernel_rem_pio2f+0x1c0>
 8022eaa:	4628      	mov	r0, r5
 8022eac:	9306      	str	r3, [sp, #24]
 8022eae:	f000 f9ad 	bl	802320c <scalbnf>
 8022eb2:	9b06      	ldr	r3, [sp, #24]
 8022eb4:	ee38 8a40 	vsub.f32	s16, s16, s0
 8022eb8:	e020      	b.n	8022efc <__kernel_rem_pio2f+0x1c0>
 8022eba:	ee60 7a28 	vmul.f32	s15, s0, s17
 8022ebe:	3e01      	subs	r6, #1
 8022ec0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022ec4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022ec8:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8022ecc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8022ed0:	ecac 0a01 	vstmia	ip!, {s0}
 8022ed4:	ed30 0a01 	vldmdb	r0!, {s0}
 8022ed8:	ee37 0a80 	vadd.f32	s0, s15, s0
 8022edc:	e79e      	b.n	8022e1c <__kernel_rem_pio2f+0xe0>
 8022ede:	d105      	bne.n	8022eec <__kernel_rem_pio2f+0x1b0>
 8022ee0:	1e60      	subs	r0, r4, #1
 8022ee2:	a908      	add	r1, sp, #32
 8022ee4:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8022ee8:	11f6      	asrs	r6, r6, #7
 8022eea:	e7c8      	b.n	8022e7e <__kernel_rem_pio2f+0x142>
 8022eec:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022ef0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8022ef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022ef8:	da31      	bge.n	8022f5e <__kernel_rem_pio2f+0x222>
 8022efa:	2600      	movs	r6, #0
 8022efc:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022f00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022f04:	f040 8098 	bne.w	8023038 <__kernel_rem_pio2f+0x2fc>
 8022f08:	1e60      	subs	r0, r4, #1
 8022f0a:	2200      	movs	r2, #0
 8022f0c:	4550      	cmp	r0, sl
 8022f0e:	da4b      	bge.n	8022fa8 <__kernel_rem_pio2f+0x26c>
 8022f10:	2a00      	cmp	r2, #0
 8022f12:	d065      	beq.n	8022fe0 <__kernel_rem_pio2f+0x2a4>
 8022f14:	3c01      	subs	r4, #1
 8022f16:	ab08      	add	r3, sp, #32
 8022f18:	3d08      	subs	r5, #8
 8022f1a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8022f1e:	2b00      	cmp	r3, #0
 8022f20:	d0f8      	beq.n	8022f14 <__kernel_rem_pio2f+0x1d8>
 8022f22:	4628      	mov	r0, r5
 8022f24:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8022f28:	f000 f970 	bl	802320c <scalbnf>
 8022f2c:	1c63      	adds	r3, r4, #1
 8022f2e:	aa44      	add	r2, sp, #272	@ 0x110
 8022f30:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8023030 <__kernel_rem_pio2f+0x2f4>
 8022f34:	0099      	lsls	r1, r3, #2
 8022f36:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8022f3a:	4623      	mov	r3, r4
 8022f3c:	2b00      	cmp	r3, #0
 8022f3e:	f280 80a9 	bge.w	8023094 <__kernel_rem_pio2f+0x358>
 8022f42:	4623      	mov	r3, r4
 8022f44:	2b00      	cmp	r3, #0
 8022f46:	f2c0 80c7 	blt.w	80230d8 <__kernel_rem_pio2f+0x39c>
 8022f4a:	aa44      	add	r2, sp, #272	@ 0x110
 8022f4c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8022f50:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8023028 <__kernel_rem_pio2f+0x2ec>
 8022f54:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8023034 <__kernel_rem_pio2f+0x2f8>
 8022f58:	2000      	movs	r0, #0
 8022f5a:	1ae2      	subs	r2, r4, r3
 8022f5c:	e0b1      	b.n	80230c2 <__kernel_rem_pio2f+0x386>
 8022f5e:	2602      	movs	r6, #2
 8022f60:	e78f      	b.n	8022e82 <__kernel_rem_pio2f+0x146>
 8022f62:	f852 1b04 	ldr.w	r1, [r2], #4
 8022f66:	b948      	cbnz	r0, 8022f7c <__kernel_rem_pio2f+0x240>
 8022f68:	b121      	cbz	r1, 8022f74 <__kernel_rem_pio2f+0x238>
 8022f6a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8022f6e:	f842 1c04 	str.w	r1, [r2, #-4]
 8022f72:	2101      	movs	r1, #1
 8022f74:	f10e 0e01 	add.w	lr, lr, #1
 8022f78:	4608      	mov	r0, r1
 8022f7a:	e787      	b.n	8022e8c <__kernel_rem_pio2f+0x150>
 8022f7c:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8022f80:	e7f5      	b.n	8022f6e <__kernel_rem_pio2f+0x232>
 8022f82:	f104 3cff 	add.w	ip, r4, #4294967295
 8022f86:	aa08      	add	r2, sp, #32
 8022f88:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8022f8c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8022f90:	a908      	add	r1, sp, #32
 8022f92:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8022f96:	e781      	b.n	8022e9c <__kernel_rem_pio2f+0x160>
 8022f98:	f104 3cff 	add.w	ip, r4, #4294967295
 8022f9c:	aa08      	add	r2, sp, #32
 8022f9e:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8022fa2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8022fa6:	e7f3      	b.n	8022f90 <__kernel_rem_pio2f+0x254>
 8022fa8:	a908      	add	r1, sp, #32
 8022faa:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8022fae:	3801      	subs	r0, #1
 8022fb0:	430a      	orrs	r2, r1
 8022fb2:	e7ab      	b.n	8022f0c <__kernel_rem_pio2f+0x1d0>
 8022fb4:	3201      	adds	r2, #1
 8022fb6:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8022fba:	2e00      	cmp	r6, #0
 8022fbc:	d0fa      	beq.n	8022fb4 <__kernel_rem_pio2f+0x278>
 8022fbe:	9905      	ldr	r1, [sp, #20]
 8022fc0:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8022fc4:	eb0d 0001 	add.w	r0, sp, r1
 8022fc8:	18e6      	adds	r6, r4, r3
 8022fca:	a91c      	add	r1, sp, #112	@ 0x70
 8022fcc:	f104 0c01 	add.w	ip, r4, #1
 8022fd0:	384c      	subs	r0, #76	@ 0x4c
 8022fd2:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8022fd6:	4422      	add	r2, r4
 8022fd8:	4562      	cmp	r2, ip
 8022fda:	da04      	bge.n	8022fe6 <__kernel_rem_pio2f+0x2aa>
 8022fdc:	4614      	mov	r4, r2
 8022fde:	e710      	b.n	8022e02 <__kernel_rem_pio2f+0xc6>
 8022fe0:	9804      	ldr	r0, [sp, #16]
 8022fe2:	2201      	movs	r2, #1
 8022fe4:	e7e7      	b.n	8022fb6 <__kernel_rem_pio2f+0x27a>
 8022fe6:	9903      	ldr	r1, [sp, #12]
 8022fe8:	f8dd e004 	ldr.w	lr, [sp, #4]
 8022fec:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8022ff0:	9105      	str	r1, [sp, #20]
 8022ff2:	ee07 1a90 	vmov	s15, r1
 8022ff6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022ffa:	2400      	movs	r4, #0
 8022ffc:	ece6 7a01 	vstmia	r6!, {s15}
 8023000:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8023034 <__kernel_rem_pio2f+0x2f8>
 8023004:	46b1      	mov	r9, r6
 8023006:	455c      	cmp	r4, fp
 8023008:	dd04      	ble.n	8023014 <__kernel_rem_pio2f+0x2d8>
 802300a:	ece0 7a01 	vstmia	r0!, {s15}
 802300e:	f10c 0c01 	add.w	ip, ip, #1
 8023012:	e7e1      	b.n	8022fd8 <__kernel_rem_pio2f+0x29c>
 8023014:	ecfe 6a01 	vldmia	lr!, {s13}
 8023018:	ed39 7a01 	vldmdb	r9!, {s14}
 802301c:	3401      	adds	r4, #1
 802301e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8023022:	e7f0      	b.n	8023006 <__kernel_rem_pio2f+0x2ca>
 8023024:	080265a4 	.word	0x080265a4
 8023028:	08026578 	.word	0x08026578
 802302c:	43800000 	.word	0x43800000
 8023030:	3b800000 	.word	0x3b800000
 8023034:	00000000 	.word	0x00000000
 8023038:	9b02      	ldr	r3, [sp, #8]
 802303a:	eeb0 0a48 	vmov.f32	s0, s16
 802303e:	eba3 0008 	sub.w	r0, r3, r8
 8023042:	f000 f8e3 	bl	802320c <scalbnf>
 8023046:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 802302c <__kernel_rem_pio2f+0x2f0>
 802304a:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802304e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023052:	db19      	blt.n	8023088 <__kernel_rem_pio2f+0x34c>
 8023054:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8023030 <__kernel_rem_pio2f+0x2f4>
 8023058:	ee60 7a27 	vmul.f32	s15, s0, s15
 802305c:	aa08      	add	r2, sp, #32
 802305e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8023062:	3508      	adds	r5, #8
 8023064:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8023068:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802306c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8023070:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8023074:	ee10 3a10 	vmov	r3, s0
 8023078:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802307c:	ee17 3a90 	vmov	r3, s15
 8023080:	3401      	adds	r4, #1
 8023082:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8023086:	e74c      	b.n	8022f22 <__kernel_rem_pio2f+0x1e6>
 8023088:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802308c:	aa08      	add	r2, sp, #32
 802308e:	ee10 3a10 	vmov	r3, s0
 8023092:	e7f6      	b.n	8023082 <__kernel_rem_pio2f+0x346>
 8023094:	a808      	add	r0, sp, #32
 8023096:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802309a:	9001      	str	r0, [sp, #4]
 802309c:	ee07 0a90 	vmov	s15, r0
 80230a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80230a4:	3b01      	subs	r3, #1
 80230a6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80230aa:	ee20 0a07 	vmul.f32	s0, s0, s14
 80230ae:	ed62 7a01 	vstmdb	r2!, {s15}
 80230b2:	e743      	b.n	8022f3c <__kernel_rem_pio2f+0x200>
 80230b4:	ecfc 6a01 	vldmia	ip!, {s13}
 80230b8:	ecb5 7a01 	vldmia	r5!, {s14}
 80230bc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80230c0:	3001      	adds	r0, #1
 80230c2:	4550      	cmp	r0, sl
 80230c4:	dc01      	bgt.n	80230ca <__kernel_rem_pio2f+0x38e>
 80230c6:	4290      	cmp	r0, r2
 80230c8:	ddf4      	ble.n	80230b4 <__kernel_rem_pio2f+0x378>
 80230ca:	a858      	add	r0, sp, #352	@ 0x160
 80230cc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80230d0:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 80230d4:	3b01      	subs	r3, #1
 80230d6:	e735      	b.n	8022f44 <__kernel_rem_pio2f+0x208>
 80230d8:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80230da:	2b02      	cmp	r3, #2
 80230dc:	dc09      	bgt.n	80230f2 <__kernel_rem_pio2f+0x3b6>
 80230de:	2b00      	cmp	r3, #0
 80230e0:	dc27      	bgt.n	8023132 <__kernel_rem_pio2f+0x3f6>
 80230e2:	d040      	beq.n	8023166 <__kernel_rem_pio2f+0x42a>
 80230e4:	f009 0007 	and.w	r0, r9, #7
 80230e8:	b059      	add	sp, #356	@ 0x164
 80230ea:	ecbd 8b04 	vpop	{d8-d9}
 80230ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80230f2:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80230f4:	2b03      	cmp	r3, #3
 80230f6:	d1f5      	bne.n	80230e4 <__kernel_rem_pio2f+0x3a8>
 80230f8:	aa30      	add	r2, sp, #192	@ 0xc0
 80230fa:	1f0b      	subs	r3, r1, #4
 80230fc:	4413      	add	r3, r2
 80230fe:	461a      	mov	r2, r3
 8023100:	4620      	mov	r0, r4
 8023102:	2800      	cmp	r0, #0
 8023104:	dc50      	bgt.n	80231a8 <__kernel_rem_pio2f+0x46c>
 8023106:	4622      	mov	r2, r4
 8023108:	2a01      	cmp	r2, #1
 802310a:	dc5d      	bgt.n	80231c8 <__kernel_rem_pio2f+0x48c>
 802310c:	ab30      	add	r3, sp, #192	@ 0xc0
 802310e:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8023034 <__kernel_rem_pio2f+0x2f8>
 8023112:	440b      	add	r3, r1
 8023114:	2c01      	cmp	r4, #1
 8023116:	dc67      	bgt.n	80231e8 <__kernel_rem_pio2f+0x4ac>
 8023118:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802311c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8023120:	2e00      	cmp	r6, #0
 8023122:	d167      	bne.n	80231f4 <__kernel_rem_pio2f+0x4b8>
 8023124:	edc7 6a00 	vstr	s13, [r7]
 8023128:	ed87 7a01 	vstr	s14, [r7, #4]
 802312c:	edc7 7a02 	vstr	s15, [r7, #8]
 8023130:	e7d8      	b.n	80230e4 <__kernel_rem_pio2f+0x3a8>
 8023132:	ab30      	add	r3, sp, #192	@ 0xc0
 8023134:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8023034 <__kernel_rem_pio2f+0x2f8>
 8023138:	440b      	add	r3, r1
 802313a:	4622      	mov	r2, r4
 802313c:	2a00      	cmp	r2, #0
 802313e:	da24      	bge.n	802318a <__kernel_rem_pio2f+0x44e>
 8023140:	b34e      	cbz	r6, 8023196 <__kernel_rem_pio2f+0x45a>
 8023142:	eef1 7a47 	vneg.f32	s15, s14
 8023146:	edc7 7a00 	vstr	s15, [r7]
 802314a:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 802314e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023152:	aa31      	add	r2, sp, #196	@ 0xc4
 8023154:	2301      	movs	r3, #1
 8023156:	429c      	cmp	r4, r3
 8023158:	da20      	bge.n	802319c <__kernel_rem_pio2f+0x460>
 802315a:	b10e      	cbz	r6, 8023160 <__kernel_rem_pio2f+0x424>
 802315c:	eef1 7a67 	vneg.f32	s15, s15
 8023160:	edc7 7a01 	vstr	s15, [r7, #4]
 8023164:	e7be      	b.n	80230e4 <__kernel_rem_pio2f+0x3a8>
 8023166:	ab30      	add	r3, sp, #192	@ 0xc0
 8023168:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8023034 <__kernel_rem_pio2f+0x2f8>
 802316c:	440b      	add	r3, r1
 802316e:	2c00      	cmp	r4, #0
 8023170:	da05      	bge.n	802317e <__kernel_rem_pio2f+0x442>
 8023172:	b10e      	cbz	r6, 8023178 <__kernel_rem_pio2f+0x43c>
 8023174:	eef1 7a67 	vneg.f32	s15, s15
 8023178:	edc7 7a00 	vstr	s15, [r7]
 802317c:	e7b2      	b.n	80230e4 <__kernel_rem_pio2f+0x3a8>
 802317e:	ed33 7a01 	vldmdb	r3!, {s14}
 8023182:	3c01      	subs	r4, #1
 8023184:	ee77 7a87 	vadd.f32	s15, s15, s14
 8023188:	e7f1      	b.n	802316e <__kernel_rem_pio2f+0x432>
 802318a:	ed73 7a01 	vldmdb	r3!, {s15}
 802318e:	3a01      	subs	r2, #1
 8023190:	ee37 7a27 	vadd.f32	s14, s14, s15
 8023194:	e7d2      	b.n	802313c <__kernel_rem_pio2f+0x400>
 8023196:	eef0 7a47 	vmov.f32	s15, s14
 802319a:	e7d4      	b.n	8023146 <__kernel_rem_pio2f+0x40a>
 802319c:	ecb2 7a01 	vldmia	r2!, {s14}
 80231a0:	3301      	adds	r3, #1
 80231a2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80231a6:	e7d6      	b.n	8023156 <__kernel_rem_pio2f+0x41a>
 80231a8:	ed72 7a01 	vldmdb	r2!, {s15}
 80231ac:	edd2 6a01 	vldr	s13, [r2, #4]
 80231b0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80231b4:	3801      	subs	r0, #1
 80231b6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80231ba:	ed82 7a00 	vstr	s14, [r2]
 80231be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80231c2:	edc2 7a01 	vstr	s15, [r2, #4]
 80231c6:	e79c      	b.n	8023102 <__kernel_rem_pio2f+0x3c6>
 80231c8:	ed73 7a01 	vldmdb	r3!, {s15}
 80231cc:	edd3 6a01 	vldr	s13, [r3, #4]
 80231d0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80231d4:	3a01      	subs	r2, #1
 80231d6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80231da:	ed83 7a00 	vstr	s14, [r3]
 80231de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80231e2:	edc3 7a01 	vstr	s15, [r3, #4]
 80231e6:	e78f      	b.n	8023108 <__kernel_rem_pio2f+0x3cc>
 80231e8:	ed33 7a01 	vldmdb	r3!, {s14}
 80231ec:	3c01      	subs	r4, #1
 80231ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 80231f2:	e78f      	b.n	8023114 <__kernel_rem_pio2f+0x3d8>
 80231f4:	eef1 6a66 	vneg.f32	s13, s13
 80231f8:	eeb1 7a47 	vneg.f32	s14, s14
 80231fc:	edc7 6a00 	vstr	s13, [r7]
 8023200:	ed87 7a01 	vstr	s14, [r7, #4]
 8023204:	eef1 7a67 	vneg.f32	s15, s15
 8023208:	e790      	b.n	802312c <__kernel_rem_pio2f+0x3f0>
 802320a:	bf00      	nop

0802320c <scalbnf>:
 802320c:	ee10 3a10 	vmov	r3, s0
 8023210:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8023214:	d02b      	beq.n	802326e <scalbnf+0x62>
 8023216:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802321a:	d302      	bcc.n	8023222 <scalbnf+0x16>
 802321c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8023220:	4770      	bx	lr
 8023222:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8023226:	d123      	bne.n	8023270 <scalbnf+0x64>
 8023228:	4b24      	ldr	r3, [pc, #144]	@ (80232bc <scalbnf+0xb0>)
 802322a:	eddf 7a25 	vldr	s15, [pc, #148]	@ 80232c0 <scalbnf+0xb4>
 802322e:	4298      	cmp	r0, r3
 8023230:	ee20 0a27 	vmul.f32	s0, s0, s15
 8023234:	db17      	blt.n	8023266 <scalbnf+0x5a>
 8023236:	ee10 3a10 	vmov	r3, s0
 802323a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802323e:	3a19      	subs	r2, #25
 8023240:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8023244:	4288      	cmp	r0, r1
 8023246:	dd15      	ble.n	8023274 <scalbnf+0x68>
 8023248:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 80232c4 <scalbnf+0xb8>
 802324c:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 80232c8 <scalbnf+0xbc>
 8023250:	ee10 3a10 	vmov	r3, s0
 8023254:	eeb0 7a67 	vmov.f32	s14, s15
 8023258:	2b00      	cmp	r3, #0
 802325a:	bfb8      	it	lt
 802325c:	eef0 7a66 	vmovlt.f32	s15, s13
 8023260:	ee27 0a87 	vmul.f32	s0, s15, s14
 8023264:	4770      	bx	lr
 8023266:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80232cc <scalbnf+0xc0>
 802326a:	ee27 0a80 	vmul.f32	s0, s15, s0
 802326e:	4770      	bx	lr
 8023270:	0dd2      	lsrs	r2, r2, #23
 8023272:	e7e5      	b.n	8023240 <scalbnf+0x34>
 8023274:	4410      	add	r0, r2
 8023276:	28fe      	cmp	r0, #254	@ 0xfe
 8023278:	dce6      	bgt.n	8023248 <scalbnf+0x3c>
 802327a:	2800      	cmp	r0, #0
 802327c:	dd06      	ble.n	802328c <scalbnf+0x80>
 802327e:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8023282:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8023286:	ee00 3a10 	vmov	s0, r3
 802328a:	4770      	bx	lr
 802328c:	f110 0f16 	cmn.w	r0, #22
 8023290:	da09      	bge.n	80232a6 <scalbnf+0x9a>
 8023292:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 80232cc <scalbnf+0xc0>
 8023296:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 80232d0 <scalbnf+0xc4>
 802329a:	ee10 3a10 	vmov	r3, s0
 802329e:	eeb0 7a67 	vmov.f32	s14, s15
 80232a2:	2b00      	cmp	r3, #0
 80232a4:	e7d9      	b.n	802325a <scalbnf+0x4e>
 80232a6:	3019      	adds	r0, #25
 80232a8:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80232ac:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80232b0:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 80232d4 <scalbnf+0xc8>
 80232b4:	ee07 3a90 	vmov	s15, r3
 80232b8:	e7d7      	b.n	802326a <scalbnf+0x5e>
 80232ba:	bf00      	nop
 80232bc:	ffff3cb0 	.word	0xffff3cb0
 80232c0:	4c000000 	.word	0x4c000000
 80232c4:	7149f2ca 	.word	0x7149f2ca
 80232c8:	f149f2ca 	.word	0xf149f2ca
 80232cc:	0da24260 	.word	0x0da24260
 80232d0:	8da24260 	.word	0x8da24260
 80232d4:	33000000 	.word	0x33000000

080232d8 <floorf>:
 80232d8:	ee10 3a10 	vmov	r3, s0
 80232dc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80232e0:	3a7f      	subs	r2, #127	@ 0x7f
 80232e2:	2a16      	cmp	r2, #22
 80232e4:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 80232e8:	dc2b      	bgt.n	8023342 <floorf+0x6a>
 80232ea:	2a00      	cmp	r2, #0
 80232ec:	da12      	bge.n	8023314 <floorf+0x3c>
 80232ee:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8023354 <floorf+0x7c>
 80232f2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80232f6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80232fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80232fe:	dd06      	ble.n	802330e <floorf+0x36>
 8023300:	2b00      	cmp	r3, #0
 8023302:	da24      	bge.n	802334e <floorf+0x76>
 8023304:	2900      	cmp	r1, #0
 8023306:	4b14      	ldr	r3, [pc, #80]	@ (8023358 <floorf+0x80>)
 8023308:	bf08      	it	eq
 802330a:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802330e:	ee00 3a10 	vmov	s0, r3
 8023312:	4770      	bx	lr
 8023314:	4911      	ldr	r1, [pc, #68]	@ (802335c <floorf+0x84>)
 8023316:	4111      	asrs	r1, r2
 8023318:	420b      	tst	r3, r1
 802331a:	d0fa      	beq.n	8023312 <floorf+0x3a>
 802331c:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8023354 <floorf+0x7c>
 8023320:	ee30 0a27 	vadd.f32	s0, s0, s15
 8023324:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8023328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802332c:	ddef      	ble.n	802330e <floorf+0x36>
 802332e:	2b00      	cmp	r3, #0
 8023330:	bfbe      	ittt	lt
 8023332:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8023336:	fa40 f202 	asrlt.w	r2, r0, r2
 802333a:	189b      	addlt	r3, r3, r2
 802333c:	ea23 0301 	bic.w	r3, r3, r1
 8023340:	e7e5      	b.n	802330e <floorf+0x36>
 8023342:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8023346:	d3e4      	bcc.n	8023312 <floorf+0x3a>
 8023348:	ee30 0a00 	vadd.f32	s0, s0, s0
 802334c:	4770      	bx	lr
 802334e:	2300      	movs	r3, #0
 8023350:	e7dd      	b.n	802330e <floorf+0x36>
 8023352:	bf00      	nop
 8023354:	7149f2ca 	.word	0x7149f2ca
 8023358:	bf800000 	.word	0xbf800000
 802335c:	007fffff 	.word	0x007fffff

08023360 <abort>:
 8023360:	b508      	push	{r3, lr}
 8023362:	2006      	movs	r0, #6
 8023364:	f000 fa72 	bl	802384c <raise>
 8023368:	2001      	movs	r0, #1
 802336a:	f7df fc4d 	bl	8002c08 <_exit>
	...

08023370 <__assert_func>:
 8023370:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8023372:	4614      	mov	r4, r2
 8023374:	461a      	mov	r2, r3
 8023376:	4b09      	ldr	r3, [pc, #36]	@ (802339c <__assert_func+0x2c>)
 8023378:	681b      	ldr	r3, [r3, #0]
 802337a:	4605      	mov	r5, r0
 802337c:	68d8      	ldr	r0, [r3, #12]
 802337e:	b14c      	cbz	r4, 8023394 <__assert_func+0x24>
 8023380:	4b07      	ldr	r3, [pc, #28]	@ (80233a0 <__assert_func+0x30>)
 8023382:	9100      	str	r1, [sp, #0]
 8023384:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8023388:	4906      	ldr	r1, [pc, #24]	@ (80233a4 <__assert_func+0x34>)
 802338a:	462b      	mov	r3, r5
 802338c:	f000 f984 	bl	8023698 <fiprintf>
 8023390:	f7ff ffe6 	bl	8023360 <abort>
 8023394:	4b04      	ldr	r3, [pc, #16]	@ (80233a8 <__assert_func+0x38>)
 8023396:	461c      	mov	r4, r3
 8023398:	e7f3      	b.n	8023382 <__assert_func+0x12>
 802339a:	bf00      	nop
 802339c:	20000220 	.word	0x20000220
 80233a0:	08025395 	.word	0x08025395
 80233a4:	080253a2 	.word	0x080253a2
 80233a8:	080252d4 	.word	0x080252d4

080233ac <atexit>:
 80233ac:	2300      	movs	r3, #0
 80233ae:	4601      	mov	r1, r0
 80233b0:	461a      	mov	r2, r3
 80233b2:	4618      	mov	r0, r3
 80233b4:	f000 bb56 	b.w	8023a64 <__register_exitproc>

080233b8 <malloc>:
 80233b8:	4b02      	ldr	r3, [pc, #8]	@ (80233c4 <malloc+0xc>)
 80233ba:	4601      	mov	r1, r0
 80233bc:	6818      	ldr	r0, [r3, #0]
 80233be:	f000 b82d 	b.w	802341c <_malloc_r>
 80233c2:	bf00      	nop
 80233c4:	20000220 	.word	0x20000220

080233c8 <free>:
 80233c8:	4b02      	ldr	r3, [pc, #8]	@ (80233d4 <free+0xc>)
 80233ca:	4601      	mov	r1, r0
 80233cc:	6818      	ldr	r0, [r3, #0]
 80233ce:	f000 bba5 	b.w	8023b1c <_free_r>
 80233d2:	bf00      	nop
 80233d4:	20000220 	.word	0x20000220

080233d8 <sbrk_aligned>:
 80233d8:	b570      	push	{r4, r5, r6, lr}
 80233da:	4e0f      	ldr	r6, [pc, #60]	@ (8023418 <sbrk_aligned+0x40>)
 80233dc:	460c      	mov	r4, r1
 80233de:	6831      	ldr	r1, [r6, #0]
 80233e0:	4605      	mov	r5, r0
 80233e2:	b911      	cbnz	r1, 80233ea <sbrk_aligned+0x12>
 80233e4:	f000 fae0 	bl	80239a8 <_sbrk_r>
 80233e8:	6030      	str	r0, [r6, #0]
 80233ea:	4621      	mov	r1, r4
 80233ec:	4628      	mov	r0, r5
 80233ee:	f000 fadb 	bl	80239a8 <_sbrk_r>
 80233f2:	1c43      	adds	r3, r0, #1
 80233f4:	d103      	bne.n	80233fe <sbrk_aligned+0x26>
 80233f6:	f04f 34ff 	mov.w	r4, #4294967295
 80233fa:	4620      	mov	r0, r4
 80233fc:	bd70      	pop	{r4, r5, r6, pc}
 80233fe:	1cc4      	adds	r4, r0, #3
 8023400:	f024 0403 	bic.w	r4, r4, #3
 8023404:	42a0      	cmp	r0, r4
 8023406:	d0f8      	beq.n	80233fa <sbrk_aligned+0x22>
 8023408:	1a21      	subs	r1, r4, r0
 802340a:	4628      	mov	r0, r5
 802340c:	f000 facc 	bl	80239a8 <_sbrk_r>
 8023410:	3001      	adds	r0, #1
 8023412:	d1f2      	bne.n	80233fa <sbrk_aligned+0x22>
 8023414:	e7ef      	b.n	80233f6 <sbrk_aligned+0x1e>
 8023416:	bf00      	nop
 8023418:	20014a9c 	.word	0x20014a9c

0802341c <_malloc_r>:
 802341c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023420:	1ccd      	adds	r5, r1, #3
 8023422:	f025 0503 	bic.w	r5, r5, #3
 8023426:	3508      	adds	r5, #8
 8023428:	2d0c      	cmp	r5, #12
 802342a:	bf38      	it	cc
 802342c:	250c      	movcc	r5, #12
 802342e:	2d00      	cmp	r5, #0
 8023430:	4606      	mov	r6, r0
 8023432:	db01      	blt.n	8023438 <_malloc_r+0x1c>
 8023434:	42a9      	cmp	r1, r5
 8023436:	d904      	bls.n	8023442 <_malloc_r+0x26>
 8023438:	230c      	movs	r3, #12
 802343a:	6033      	str	r3, [r6, #0]
 802343c:	2000      	movs	r0, #0
 802343e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023442:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8023518 <_malloc_r+0xfc>
 8023446:	f000 f869 	bl	802351c <__malloc_lock>
 802344a:	f8d8 3000 	ldr.w	r3, [r8]
 802344e:	461c      	mov	r4, r3
 8023450:	bb44      	cbnz	r4, 80234a4 <_malloc_r+0x88>
 8023452:	4629      	mov	r1, r5
 8023454:	4630      	mov	r0, r6
 8023456:	f7ff ffbf 	bl	80233d8 <sbrk_aligned>
 802345a:	1c43      	adds	r3, r0, #1
 802345c:	4604      	mov	r4, r0
 802345e:	d158      	bne.n	8023512 <_malloc_r+0xf6>
 8023460:	f8d8 4000 	ldr.w	r4, [r8]
 8023464:	4627      	mov	r7, r4
 8023466:	2f00      	cmp	r7, #0
 8023468:	d143      	bne.n	80234f2 <_malloc_r+0xd6>
 802346a:	2c00      	cmp	r4, #0
 802346c:	d04b      	beq.n	8023506 <_malloc_r+0xea>
 802346e:	6823      	ldr	r3, [r4, #0]
 8023470:	4639      	mov	r1, r7
 8023472:	4630      	mov	r0, r6
 8023474:	eb04 0903 	add.w	r9, r4, r3
 8023478:	f000 fa96 	bl	80239a8 <_sbrk_r>
 802347c:	4581      	cmp	r9, r0
 802347e:	d142      	bne.n	8023506 <_malloc_r+0xea>
 8023480:	6821      	ldr	r1, [r4, #0]
 8023482:	1a6d      	subs	r5, r5, r1
 8023484:	4629      	mov	r1, r5
 8023486:	4630      	mov	r0, r6
 8023488:	f7ff ffa6 	bl	80233d8 <sbrk_aligned>
 802348c:	3001      	adds	r0, #1
 802348e:	d03a      	beq.n	8023506 <_malloc_r+0xea>
 8023490:	6823      	ldr	r3, [r4, #0]
 8023492:	442b      	add	r3, r5
 8023494:	6023      	str	r3, [r4, #0]
 8023496:	f8d8 3000 	ldr.w	r3, [r8]
 802349a:	685a      	ldr	r2, [r3, #4]
 802349c:	bb62      	cbnz	r2, 80234f8 <_malloc_r+0xdc>
 802349e:	f8c8 7000 	str.w	r7, [r8]
 80234a2:	e00f      	b.n	80234c4 <_malloc_r+0xa8>
 80234a4:	6822      	ldr	r2, [r4, #0]
 80234a6:	1b52      	subs	r2, r2, r5
 80234a8:	d420      	bmi.n	80234ec <_malloc_r+0xd0>
 80234aa:	2a0b      	cmp	r2, #11
 80234ac:	d917      	bls.n	80234de <_malloc_r+0xc2>
 80234ae:	1961      	adds	r1, r4, r5
 80234b0:	42a3      	cmp	r3, r4
 80234b2:	6025      	str	r5, [r4, #0]
 80234b4:	bf18      	it	ne
 80234b6:	6059      	strne	r1, [r3, #4]
 80234b8:	6863      	ldr	r3, [r4, #4]
 80234ba:	bf08      	it	eq
 80234bc:	f8c8 1000 	streq.w	r1, [r8]
 80234c0:	5162      	str	r2, [r4, r5]
 80234c2:	604b      	str	r3, [r1, #4]
 80234c4:	4630      	mov	r0, r6
 80234c6:	f000 f82f 	bl	8023528 <__malloc_unlock>
 80234ca:	f104 000b 	add.w	r0, r4, #11
 80234ce:	1d23      	adds	r3, r4, #4
 80234d0:	f020 0007 	bic.w	r0, r0, #7
 80234d4:	1ac2      	subs	r2, r0, r3
 80234d6:	bf1c      	itt	ne
 80234d8:	1a1b      	subne	r3, r3, r0
 80234da:	50a3      	strne	r3, [r4, r2]
 80234dc:	e7af      	b.n	802343e <_malloc_r+0x22>
 80234de:	6862      	ldr	r2, [r4, #4]
 80234e0:	42a3      	cmp	r3, r4
 80234e2:	bf0c      	ite	eq
 80234e4:	f8c8 2000 	streq.w	r2, [r8]
 80234e8:	605a      	strne	r2, [r3, #4]
 80234ea:	e7eb      	b.n	80234c4 <_malloc_r+0xa8>
 80234ec:	4623      	mov	r3, r4
 80234ee:	6864      	ldr	r4, [r4, #4]
 80234f0:	e7ae      	b.n	8023450 <_malloc_r+0x34>
 80234f2:	463c      	mov	r4, r7
 80234f4:	687f      	ldr	r7, [r7, #4]
 80234f6:	e7b6      	b.n	8023466 <_malloc_r+0x4a>
 80234f8:	461a      	mov	r2, r3
 80234fa:	685b      	ldr	r3, [r3, #4]
 80234fc:	42a3      	cmp	r3, r4
 80234fe:	d1fb      	bne.n	80234f8 <_malloc_r+0xdc>
 8023500:	2300      	movs	r3, #0
 8023502:	6053      	str	r3, [r2, #4]
 8023504:	e7de      	b.n	80234c4 <_malloc_r+0xa8>
 8023506:	230c      	movs	r3, #12
 8023508:	6033      	str	r3, [r6, #0]
 802350a:	4630      	mov	r0, r6
 802350c:	f000 f80c 	bl	8023528 <__malloc_unlock>
 8023510:	e794      	b.n	802343c <_malloc_r+0x20>
 8023512:	6005      	str	r5, [r0, #0]
 8023514:	e7d6      	b.n	80234c4 <_malloc_r+0xa8>
 8023516:	bf00      	nop
 8023518:	20014aa0 	.word	0x20014aa0

0802351c <__malloc_lock>:
 802351c:	4801      	ldr	r0, [pc, #4]	@ (8023524 <__malloc_lock+0x8>)
 802351e:	f000 ba90 	b.w	8023a42 <__retarget_lock_acquire_recursive>
 8023522:	bf00      	nop
 8023524:	20014be4 	.word	0x20014be4

08023528 <__malloc_unlock>:
 8023528:	4801      	ldr	r0, [pc, #4]	@ (8023530 <__malloc_unlock+0x8>)
 802352a:	f000 ba8b 	b.w	8023a44 <__retarget_lock_release_recursive>
 802352e:	bf00      	nop
 8023530:	20014be4 	.word	0x20014be4

08023534 <__cxa_atexit>:
 8023534:	b510      	push	{r4, lr}
 8023536:	4604      	mov	r4, r0
 8023538:	4804      	ldr	r0, [pc, #16]	@ (802354c <__cxa_atexit+0x18>)
 802353a:	4613      	mov	r3, r2
 802353c:	b120      	cbz	r0, 8023548 <__cxa_atexit+0x14>
 802353e:	460a      	mov	r2, r1
 8023540:	2002      	movs	r0, #2
 8023542:	4621      	mov	r1, r4
 8023544:	f000 fa8e 	bl	8023a64 <__register_exitproc>
 8023548:	bd10      	pop	{r4, pc}
 802354a:	bf00      	nop
 802354c:	08023a65 	.word	0x08023a65

08023550 <std>:
 8023550:	2300      	movs	r3, #0
 8023552:	b510      	push	{r4, lr}
 8023554:	4604      	mov	r4, r0
 8023556:	e9c0 3300 	strd	r3, r3, [r0]
 802355a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802355e:	6083      	str	r3, [r0, #8]
 8023560:	8181      	strh	r1, [r0, #12]
 8023562:	6643      	str	r3, [r0, #100]	@ 0x64
 8023564:	81c2      	strh	r2, [r0, #14]
 8023566:	6183      	str	r3, [r0, #24]
 8023568:	4619      	mov	r1, r3
 802356a:	2208      	movs	r2, #8
 802356c:	305c      	adds	r0, #92	@ 0x5c
 802356e:	f000 f93c 	bl	80237ea <memset>
 8023572:	4b0d      	ldr	r3, [pc, #52]	@ (80235a8 <std+0x58>)
 8023574:	6263      	str	r3, [r4, #36]	@ 0x24
 8023576:	4b0d      	ldr	r3, [pc, #52]	@ (80235ac <std+0x5c>)
 8023578:	62a3      	str	r3, [r4, #40]	@ 0x28
 802357a:	4b0d      	ldr	r3, [pc, #52]	@ (80235b0 <std+0x60>)
 802357c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802357e:	4b0d      	ldr	r3, [pc, #52]	@ (80235b4 <std+0x64>)
 8023580:	6323      	str	r3, [r4, #48]	@ 0x30
 8023582:	4b0d      	ldr	r3, [pc, #52]	@ (80235b8 <std+0x68>)
 8023584:	6224      	str	r4, [r4, #32]
 8023586:	429c      	cmp	r4, r3
 8023588:	d006      	beq.n	8023598 <std+0x48>
 802358a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802358e:	4294      	cmp	r4, r2
 8023590:	d002      	beq.n	8023598 <std+0x48>
 8023592:	33d0      	adds	r3, #208	@ 0xd0
 8023594:	429c      	cmp	r4, r3
 8023596:	d105      	bne.n	80235a4 <std+0x54>
 8023598:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802359c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80235a0:	f000 ba4e 	b.w	8023a40 <__retarget_lock_init_recursive>
 80235a4:	bd10      	pop	{r4, pc}
 80235a6:	bf00      	nop
 80235a8:	08023765 	.word	0x08023765
 80235ac:	08023787 	.word	0x08023787
 80235b0:	080237bf 	.word	0x080237bf
 80235b4:	080237e3 	.word	0x080237e3
 80235b8:	20014aa4 	.word	0x20014aa4

080235bc <stdio_exit_handler>:
 80235bc:	4a02      	ldr	r2, [pc, #8]	@ (80235c8 <stdio_exit_handler+0xc>)
 80235be:	4903      	ldr	r1, [pc, #12]	@ (80235cc <stdio_exit_handler+0x10>)
 80235c0:	4803      	ldr	r0, [pc, #12]	@ (80235d0 <stdio_exit_handler+0x14>)
 80235c2:	f000 b87b 	b.w	80236bc <_fwalk_sglue>
 80235c6:	bf00      	nop
 80235c8:	20000214 	.word	0x20000214
 80235cc:	08024505 	.word	0x08024505
 80235d0:	20000224 	.word	0x20000224

080235d4 <cleanup_stdio>:
 80235d4:	6841      	ldr	r1, [r0, #4]
 80235d6:	4b0c      	ldr	r3, [pc, #48]	@ (8023608 <cleanup_stdio+0x34>)
 80235d8:	4299      	cmp	r1, r3
 80235da:	b510      	push	{r4, lr}
 80235dc:	4604      	mov	r4, r0
 80235de:	d001      	beq.n	80235e4 <cleanup_stdio+0x10>
 80235e0:	f000 ff90 	bl	8024504 <_fflush_r>
 80235e4:	68a1      	ldr	r1, [r4, #8]
 80235e6:	4b09      	ldr	r3, [pc, #36]	@ (802360c <cleanup_stdio+0x38>)
 80235e8:	4299      	cmp	r1, r3
 80235ea:	d002      	beq.n	80235f2 <cleanup_stdio+0x1e>
 80235ec:	4620      	mov	r0, r4
 80235ee:	f000 ff89 	bl	8024504 <_fflush_r>
 80235f2:	68e1      	ldr	r1, [r4, #12]
 80235f4:	4b06      	ldr	r3, [pc, #24]	@ (8023610 <cleanup_stdio+0x3c>)
 80235f6:	4299      	cmp	r1, r3
 80235f8:	d004      	beq.n	8023604 <cleanup_stdio+0x30>
 80235fa:	4620      	mov	r0, r4
 80235fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023600:	f000 bf80 	b.w	8024504 <_fflush_r>
 8023604:	bd10      	pop	{r4, pc}
 8023606:	bf00      	nop
 8023608:	20014aa4 	.word	0x20014aa4
 802360c:	20014b0c 	.word	0x20014b0c
 8023610:	20014b74 	.word	0x20014b74

08023614 <global_stdio_init.part.0>:
 8023614:	b510      	push	{r4, lr}
 8023616:	4b0b      	ldr	r3, [pc, #44]	@ (8023644 <global_stdio_init.part.0+0x30>)
 8023618:	4c0b      	ldr	r4, [pc, #44]	@ (8023648 <global_stdio_init.part.0+0x34>)
 802361a:	4a0c      	ldr	r2, [pc, #48]	@ (802364c <global_stdio_init.part.0+0x38>)
 802361c:	601a      	str	r2, [r3, #0]
 802361e:	4620      	mov	r0, r4
 8023620:	2200      	movs	r2, #0
 8023622:	2104      	movs	r1, #4
 8023624:	f7ff ff94 	bl	8023550 <std>
 8023628:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802362c:	2201      	movs	r2, #1
 802362e:	2109      	movs	r1, #9
 8023630:	f7ff ff8e 	bl	8023550 <std>
 8023634:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8023638:	2202      	movs	r2, #2
 802363a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802363e:	2112      	movs	r1, #18
 8023640:	f7ff bf86 	b.w	8023550 <std>
 8023644:	20014bdc 	.word	0x20014bdc
 8023648:	20014aa4 	.word	0x20014aa4
 802364c:	080235bd 	.word	0x080235bd

08023650 <__sfp_lock_acquire>:
 8023650:	4801      	ldr	r0, [pc, #4]	@ (8023658 <__sfp_lock_acquire+0x8>)
 8023652:	f000 b9f6 	b.w	8023a42 <__retarget_lock_acquire_recursive>
 8023656:	bf00      	nop
 8023658:	20014be6 	.word	0x20014be6

0802365c <__sfp_lock_release>:
 802365c:	4801      	ldr	r0, [pc, #4]	@ (8023664 <__sfp_lock_release+0x8>)
 802365e:	f000 b9f1 	b.w	8023a44 <__retarget_lock_release_recursive>
 8023662:	bf00      	nop
 8023664:	20014be6 	.word	0x20014be6

08023668 <__sinit>:
 8023668:	b510      	push	{r4, lr}
 802366a:	4604      	mov	r4, r0
 802366c:	f7ff fff0 	bl	8023650 <__sfp_lock_acquire>
 8023670:	6a23      	ldr	r3, [r4, #32]
 8023672:	b11b      	cbz	r3, 802367c <__sinit+0x14>
 8023674:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023678:	f7ff bff0 	b.w	802365c <__sfp_lock_release>
 802367c:	4b04      	ldr	r3, [pc, #16]	@ (8023690 <__sinit+0x28>)
 802367e:	6223      	str	r3, [r4, #32]
 8023680:	4b04      	ldr	r3, [pc, #16]	@ (8023694 <__sinit+0x2c>)
 8023682:	681b      	ldr	r3, [r3, #0]
 8023684:	2b00      	cmp	r3, #0
 8023686:	d1f5      	bne.n	8023674 <__sinit+0xc>
 8023688:	f7ff ffc4 	bl	8023614 <global_stdio_init.part.0>
 802368c:	e7f2      	b.n	8023674 <__sinit+0xc>
 802368e:	bf00      	nop
 8023690:	080235d5 	.word	0x080235d5
 8023694:	20014bdc 	.word	0x20014bdc

08023698 <fiprintf>:
 8023698:	b40e      	push	{r1, r2, r3}
 802369a:	b503      	push	{r0, r1, lr}
 802369c:	4601      	mov	r1, r0
 802369e:	ab03      	add	r3, sp, #12
 80236a0:	4805      	ldr	r0, [pc, #20]	@ (80236b8 <fiprintf+0x20>)
 80236a2:	f853 2b04 	ldr.w	r2, [r3], #4
 80236a6:	6800      	ldr	r0, [r0, #0]
 80236a8:	9301      	str	r3, [sp, #4]
 80236aa:	f000 fc03 	bl	8023eb4 <_vfiprintf_r>
 80236ae:	b002      	add	sp, #8
 80236b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80236b4:	b003      	add	sp, #12
 80236b6:	4770      	bx	lr
 80236b8:	20000220 	.word	0x20000220

080236bc <_fwalk_sglue>:
 80236bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80236c0:	4607      	mov	r7, r0
 80236c2:	4688      	mov	r8, r1
 80236c4:	4614      	mov	r4, r2
 80236c6:	2600      	movs	r6, #0
 80236c8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80236cc:	f1b9 0901 	subs.w	r9, r9, #1
 80236d0:	d505      	bpl.n	80236de <_fwalk_sglue+0x22>
 80236d2:	6824      	ldr	r4, [r4, #0]
 80236d4:	2c00      	cmp	r4, #0
 80236d6:	d1f7      	bne.n	80236c8 <_fwalk_sglue+0xc>
 80236d8:	4630      	mov	r0, r6
 80236da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80236de:	89ab      	ldrh	r3, [r5, #12]
 80236e0:	2b01      	cmp	r3, #1
 80236e2:	d907      	bls.n	80236f4 <_fwalk_sglue+0x38>
 80236e4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80236e8:	3301      	adds	r3, #1
 80236ea:	d003      	beq.n	80236f4 <_fwalk_sglue+0x38>
 80236ec:	4629      	mov	r1, r5
 80236ee:	4638      	mov	r0, r7
 80236f0:	47c0      	blx	r8
 80236f2:	4306      	orrs	r6, r0
 80236f4:	3568      	adds	r5, #104	@ 0x68
 80236f6:	e7e9      	b.n	80236cc <_fwalk_sglue+0x10>

080236f8 <sniprintf>:
 80236f8:	b40c      	push	{r2, r3}
 80236fa:	b530      	push	{r4, r5, lr}
 80236fc:	4b18      	ldr	r3, [pc, #96]	@ (8023760 <sniprintf+0x68>)
 80236fe:	1e0c      	subs	r4, r1, #0
 8023700:	681d      	ldr	r5, [r3, #0]
 8023702:	b09d      	sub	sp, #116	@ 0x74
 8023704:	da08      	bge.n	8023718 <sniprintf+0x20>
 8023706:	238b      	movs	r3, #139	@ 0x8b
 8023708:	602b      	str	r3, [r5, #0]
 802370a:	f04f 30ff 	mov.w	r0, #4294967295
 802370e:	b01d      	add	sp, #116	@ 0x74
 8023710:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8023714:	b002      	add	sp, #8
 8023716:	4770      	bx	lr
 8023718:	f44f 7302 	mov.w	r3, #520	@ 0x208
 802371c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8023720:	f04f 0300 	mov.w	r3, #0
 8023724:	931b      	str	r3, [sp, #108]	@ 0x6c
 8023726:	bf14      	ite	ne
 8023728:	f104 33ff 	addne.w	r3, r4, #4294967295
 802372c:	4623      	moveq	r3, r4
 802372e:	9304      	str	r3, [sp, #16]
 8023730:	9307      	str	r3, [sp, #28]
 8023732:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8023736:	9002      	str	r0, [sp, #8]
 8023738:	9006      	str	r0, [sp, #24]
 802373a:	f8ad 3016 	strh.w	r3, [sp, #22]
 802373e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8023740:	ab21      	add	r3, sp, #132	@ 0x84
 8023742:	a902      	add	r1, sp, #8
 8023744:	4628      	mov	r0, r5
 8023746:	9301      	str	r3, [sp, #4]
 8023748:	f000 fa8e 	bl	8023c68 <_svfiprintf_r>
 802374c:	1c43      	adds	r3, r0, #1
 802374e:	bfbc      	itt	lt
 8023750:	238b      	movlt	r3, #139	@ 0x8b
 8023752:	602b      	strlt	r3, [r5, #0]
 8023754:	2c00      	cmp	r4, #0
 8023756:	d0da      	beq.n	802370e <sniprintf+0x16>
 8023758:	9b02      	ldr	r3, [sp, #8]
 802375a:	2200      	movs	r2, #0
 802375c:	701a      	strb	r2, [r3, #0]
 802375e:	e7d6      	b.n	802370e <sniprintf+0x16>
 8023760:	20000220 	.word	0x20000220

08023764 <__sread>:
 8023764:	b510      	push	{r4, lr}
 8023766:	460c      	mov	r4, r1
 8023768:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802376c:	f000 f8f6 	bl	802395c <_read_r>
 8023770:	2800      	cmp	r0, #0
 8023772:	bfab      	itete	ge
 8023774:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8023776:	89a3      	ldrhlt	r3, [r4, #12]
 8023778:	181b      	addge	r3, r3, r0
 802377a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802377e:	bfac      	ite	ge
 8023780:	6563      	strge	r3, [r4, #84]	@ 0x54
 8023782:	81a3      	strhlt	r3, [r4, #12]
 8023784:	bd10      	pop	{r4, pc}

08023786 <__swrite>:
 8023786:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802378a:	461f      	mov	r7, r3
 802378c:	898b      	ldrh	r3, [r1, #12]
 802378e:	05db      	lsls	r3, r3, #23
 8023790:	4605      	mov	r5, r0
 8023792:	460c      	mov	r4, r1
 8023794:	4616      	mov	r6, r2
 8023796:	d505      	bpl.n	80237a4 <__swrite+0x1e>
 8023798:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802379c:	2302      	movs	r3, #2
 802379e:	2200      	movs	r2, #0
 80237a0:	f000 f8ca 	bl	8023938 <_lseek_r>
 80237a4:	89a3      	ldrh	r3, [r4, #12]
 80237a6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80237aa:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80237ae:	81a3      	strh	r3, [r4, #12]
 80237b0:	4632      	mov	r2, r6
 80237b2:	463b      	mov	r3, r7
 80237b4:	4628      	mov	r0, r5
 80237b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80237ba:	f000 b905 	b.w	80239c8 <_write_r>

080237be <__sseek>:
 80237be:	b510      	push	{r4, lr}
 80237c0:	460c      	mov	r4, r1
 80237c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80237c6:	f000 f8b7 	bl	8023938 <_lseek_r>
 80237ca:	1c43      	adds	r3, r0, #1
 80237cc:	89a3      	ldrh	r3, [r4, #12]
 80237ce:	bf15      	itete	ne
 80237d0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80237d2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80237d6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80237da:	81a3      	strheq	r3, [r4, #12]
 80237dc:	bf18      	it	ne
 80237de:	81a3      	strhne	r3, [r4, #12]
 80237e0:	bd10      	pop	{r4, pc}

080237e2 <__sclose>:
 80237e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80237e6:	f000 b839 	b.w	802385c <_close_r>

080237ea <memset>:
 80237ea:	4402      	add	r2, r0
 80237ec:	4603      	mov	r3, r0
 80237ee:	4293      	cmp	r3, r2
 80237f0:	d100      	bne.n	80237f4 <memset+0xa>
 80237f2:	4770      	bx	lr
 80237f4:	f803 1b01 	strb.w	r1, [r3], #1
 80237f8:	e7f9      	b.n	80237ee <memset+0x4>

080237fa <_raise_r>:
 80237fa:	291f      	cmp	r1, #31
 80237fc:	b538      	push	{r3, r4, r5, lr}
 80237fe:	4605      	mov	r5, r0
 8023800:	460c      	mov	r4, r1
 8023802:	d904      	bls.n	802380e <_raise_r+0x14>
 8023804:	2316      	movs	r3, #22
 8023806:	6003      	str	r3, [r0, #0]
 8023808:	f04f 30ff 	mov.w	r0, #4294967295
 802380c:	bd38      	pop	{r3, r4, r5, pc}
 802380e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8023810:	b112      	cbz	r2, 8023818 <_raise_r+0x1e>
 8023812:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8023816:	b94b      	cbnz	r3, 802382c <_raise_r+0x32>
 8023818:	4628      	mov	r0, r5
 802381a:	f000 f8c3 	bl	80239a4 <_getpid_r>
 802381e:	4622      	mov	r2, r4
 8023820:	4601      	mov	r1, r0
 8023822:	4628      	mov	r0, r5
 8023824:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023828:	f000 b8aa 	b.w	8023980 <_kill_r>
 802382c:	2b01      	cmp	r3, #1
 802382e:	d00a      	beq.n	8023846 <_raise_r+0x4c>
 8023830:	1c59      	adds	r1, r3, #1
 8023832:	d103      	bne.n	802383c <_raise_r+0x42>
 8023834:	2316      	movs	r3, #22
 8023836:	6003      	str	r3, [r0, #0]
 8023838:	2001      	movs	r0, #1
 802383a:	e7e7      	b.n	802380c <_raise_r+0x12>
 802383c:	2100      	movs	r1, #0
 802383e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8023842:	4620      	mov	r0, r4
 8023844:	4798      	blx	r3
 8023846:	2000      	movs	r0, #0
 8023848:	e7e0      	b.n	802380c <_raise_r+0x12>
	...

0802384c <raise>:
 802384c:	4b02      	ldr	r3, [pc, #8]	@ (8023858 <raise+0xc>)
 802384e:	4601      	mov	r1, r0
 8023850:	6818      	ldr	r0, [r3, #0]
 8023852:	f7ff bfd2 	b.w	80237fa <_raise_r>
 8023856:	bf00      	nop
 8023858:	20000220 	.word	0x20000220

0802385c <_close_r>:
 802385c:	b538      	push	{r3, r4, r5, lr}
 802385e:	4d06      	ldr	r5, [pc, #24]	@ (8023878 <_close_r+0x1c>)
 8023860:	2300      	movs	r3, #0
 8023862:	4604      	mov	r4, r0
 8023864:	4608      	mov	r0, r1
 8023866:	602b      	str	r3, [r5, #0]
 8023868:	f7df f9f0 	bl	8002c4c <_close>
 802386c:	1c43      	adds	r3, r0, #1
 802386e:	d102      	bne.n	8023876 <_close_r+0x1a>
 8023870:	682b      	ldr	r3, [r5, #0]
 8023872:	b103      	cbz	r3, 8023876 <_close_r+0x1a>
 8023874:	6023      	str	r3, [r4, #0]
 8023876:	bd38      	pop	{r3, r4, r5, pc}
 8023878:	20014be0 	.word	0x20014be0

0802387c <_reclaim_reent>:
 802387c:	4b2d      	ldr	r3, [pc, #180]	@ (8023934 <_reclaim_reent+0xb8>)
 802387e:	681b      	ldr	r3, [r3, #0]
 8023880:	4283      	cmp	r3, r0
 8023882:	b570      	push	{r4, r5, r6, lr}
 8023884:	4604      	mov	r4, r0
 8023886:	d053      	beq.n	8023930 <_reclaim_reent+0xb4>
 8023888:	69c3      	ldr	r3, [r0, #28]
 802388a:	b31b      	cbz	r3, 80238d4 <_reclaim_reent+0x58>
 802388c:	68db      	ldr	r3, [r3, #12]
 802388e:	b163      	cbz	r3, 80238aa <_reclaim_reent+0x2e>
 8023890:	2500      	movs	r5, #0
 8023892:	69e3      	ldr	r3, [r4, #28]
 8023894:	68db      	ldr	r3, [r3, #12]
 8023896:	5959      	ldr	r1, [r3, r5]
 8023898:	b9b1      	cbnz	r1, 80238c8 <_reclaim_reent+0x4c>
 802389a:	3504      	adds	r5, #4
 802389c:	2d80      	cmp	r5, #128	@ 0x80
 802389e:	d1f8      	bne.n	8023892 <_reclaim_reent+0x16>
 80238a0:	69e3      	ldr	r3, [r4, #28]
 80238a2:	4620      	mov	r0, r4
 80238a4:	68d9      	ldr	r1, [r3, #12]
 80238a6:	f000 f939 	bl	8023b1c <_free_r>
 80238aa:	69e3      	ldr	r3, [r4, #28]
 80238ac:	6819      	ldr	r1, [r3, #0]
 80238ae:	b111      	cbz	r1, 80238b6 <_reclaim_reent+0x3a>
 80238b0:	4620      	mov	r0, r4
 80238b2:	f000 f933 	bl	8023b1c <_free_r>
 80238b6:	69e3      	ldr	r3, [r4, #28]
 80238b8:	689d      	ldr	r5, [r3, #8]
 80238ba:	b15d      	cbz	r5, 80238d4 <_reclaim_reent+0x58>
 80238bc:	4629      	mov	r1, r5
 80238be:	4620      	mov	r0, r4
 80238c0:	682d      	ldr	r5, [r5, #0]
 80238c2:	f000 f92b 	bl	8023b1c <_free_r>
 80238c6:	e7f8      	b.n	80238ba <_reclaim_reent+0x3e>
 80238c8:	680e      	ldr	r6, [r1, #0]
 80238ca:	4620      	mov	r0, r4
 80238cc:	f000 f926 	bl	8023b1c <_free_r>
 80238d0:	4631      	mov	r1, r6
 80238d2:	e7e1      	b.n	8023898 <_reclaim_reent+0x1c>
 80238d4:	6961      	ldr	r1, [r4, #20]
 80238d6:	b111      	cbz	r1, 80238de <_reclaim_reent+0x62>
 80238d8:	4620      	mov	r0, r4
 80238da:	f000 f91f 	bl	8023b1c <_free_r>
 80238de:	69e1      	ldr	r1, [r4, #28]
 80238e0:	b111      	cbz	r1, 80238e8 <_reclaim_reent+0x6c>
 80238e2:	4620      	mov	r0, r4
 80238e4:	f000 f91a 	bl	8023b1c <_free_r>
 80238e8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80238ea:	b111      	cbz	r1, 80238f2 <_reclaim_reent+0x76>
 80238ec:	4620      	mov	r0, r4
 80238ee:	f000 f915 	bl	8023b1c <_free_r>
 80238f2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80238f4:	b111      	cbz	r1, 80238fc <_reclaim_reent+0x80>
 80238f6:	4620      	mov	r0, r4
 80238f8:	f000 f910 	bl	8023b1c <_free_r>
 80238fc:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 80238fe:	b111      	cbz	r1, 8023906 <_reclaim_reent+0x8a>
 8023900:	4620      	mov	r0, r4
 8023902:	f000 f90b 	bl	8023b1c <_free_r>
 8023906:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8023908:	b111      	cbz	r1, 8023910 <_reclaim_reent+0x94>
 802390a:	4620      	mov	r0, r4
 802390c:	f000 f906 	bl	8023b1c <_free_r>
 8023910:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8023912:	b111      	cbz	r1, 802391a <_reclaim_reent+0x9e>
 8023914:	4620      	mov	r0, r4
 8023916:	f000 f901 	bl	8023b1c <_free_r>
 802391a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 802391c:	b111      	cbz	r1, 8023924 <_reclaim_reent+0xa8>
 802391e:	4620      	mov	r0, r4
 8023920:	f000 f8fc 	bl	8023b1c <_free_r>
 8023924:	6a23      	ldr	r3, [r4, #32]
 8023926:	b11b      	cbz	r3, 8023930 <_reclaim_reent+0xb4>
 8023928:	4620      	mov	r0, r4
 802392a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802392e:	4718      	bx	r3
 8023930:	bd70      	pop	{r4, r5, r6, pc}
 8023932:	bf00      	nop
 8023934:	20000220 	.word	0x20000220

08023938 <_lseek_r>:
 8023938:	b538      	push	{r3, r4, r5, lr}
 802393a:	4d07      	ldr	r5, [pc, #28]	@ (8023958 <_lseek_r+0x20>)
 802393c:	4604      	mov	r4, r0
 802393e:	4608      	mov	r0, r1
 8023940:	4611      	mov	r1, r2
 8023942:	2200      	movs	r2, #0
 8023944:	602a      	str	r2, [r5, #0]
 8023946:	461a      	mov	r2, r3
 8023948:	f7df f98a 	bl	8002c60 <_lseek>
 802394c:	1c43      	adds	r3, r0, #1
 802394e:	d102      	bne.n	8023956 <_lseek_r+0x1e>
 8023950:	682b      	ldr	r3, [r5, #0]
 8023952:	b103      	cbz	r3, 8023956 <_lseek_r+0x1e>
 8023954:	6023      	str	r3, [r4, #0]
 8023956:	bd38      	pop	{r3, r4, r5, pc}
 8023958:	20014be0 	.word	0x20014be0

0802395c <_read_r>:
 802395c:	b538      	push	{r3, r4, r5, lr}
 802395e:	4d07      	ldr	r5, [pc, #28]	@ (802397c <_read_r+0x20>)
 8023960:	4604      	mov	r4, r0
 8023962:	4608      	mov	r0, r1
 8023964:	4611      	mov	r1, r2
 8023966:	2200      	movs	r2, #0
 8023968:	602a      	str	r2, [r5, #0]
 802396a:	461a      	mov	r2, r3
 802396c:	f7df f952 	bl	8002c14 <_read>
 8023970:	1c43      	adds	r3, r0, #1
 8023972:	d102      	bne.n	802397a <_read_r+0x1e>
 8023974:	682b      	ldr	r3, [r5, #0]
 8023976:	b103      	cbz	r3, 802397a <_read_r+0x1e>
 8023978:	6023      	str	r3, [r4, #0]
 802397a:	bd38      	pop	{r3, r4, r5, pc}
 802397c:	20014be0 	.word	0x20014be0

08023980 <_kill_r>:
 8023980:	b538      	push	{r3, r4, r5, lr}
 8023982:	4d07      	ldr	r5, [pc, #28]	@ (80239a0 <_kill_r+0x20>)
 8023984:	2300      	movs	r3, #0
 8023986:	4604      	mov	r4, r0
 8023988:	4608      	mov	r0, r1
 802398a:	4611      	mov	r1, r2
 802398c:	602b      	str	r3, [r5, #0]
 802398e:	f7df f933 	bl	8002bf8 <_kill>
 8023992:	1c43      	adds	r3, r0, #1
 8023994:	d102      	bne.n	802399c <_kill_r+0x1c>
 8023996:	682b      	ldr	r3, [r5, #0]
 8023998:	b103      	cbz	r3, 802399c <_kill_r+0x1c>
 802399a:	6023      	str	r3, [r4, #0]
 802399c:	bd38      	pop	{r3, r4, r5, pc}
 802399e:	bf00      	nop
 80239a0:	20014be0 	.word	0x20014be0

080239a4 <_getpid_r>:
 80239a4:	f7df b926 	b.w	8002bf4 <_getpid>

080239a8 <_sbrk_r>:
 80239a8:	b538      	push	{r3, r4, r5, lr}
 80239aa:	4d06      	ldr	r5, [pc, #24]	@ (80239c4 <_sbrk_r+0x1c>)
 80239ac:	2300      	movs	r3, #0
 80239ae:	4604      	mov	r4, r0
 80239b0:	4608      	mov	r0, r1
 80239b2:	602b      	str	r3, [r5, #0]
 80239b4:	f7df f956 	bl	8002c64 <_sbrk>
 80239b8:	1c43      	adds	r3, r0, #1
 80239ba:	d102      	bne.n	80239c2 <_sbrk_r+0x1a>
 80239bc:	682b      	ldr	r3, [r5, #0]
 80239be:	b103      	cbz	r3, 80239c2 <_sbrk_r+0x1a>
 80239c0:	6023      	str	r3, [r4, #0]
 80239c2:	bd38      	pop	{r3, r4, r5, pc}
 80239c4:	20014be0 	.word	0x20014be0

080239c8 <_write_r>:
 80239c8:	b538      	push	{r3, r4, r5, lr}
 80239ca:	4d07      	ldr	r5, [pc, #28]	@ (80239e8 <_write_r+0x20>)
 80239cc:	4604      	mov	r4, r0
 80239ce:	4608      	mov	r0, r1
 80239d0:	4611      	mov	r1, r2
 80239d2:	2200      	movs	r2, #0
 80239d4:	602a      	str	r2, [r5, #0]
 80239d6:	461a      	mov	r2, r3
 80239d8:	f7df f92a 	bl	8002c30 <_write>
 80239dc:	1c43      	adds	r3, r0, #1
 80239de:	d102      	bne.n	80239e6 <_write_r+0x1e>
 80239e0:	682b      	ldr	r3, [r5, #0]
 80239e2:	b103      	cbz	r3, 80239e6 <_write_r+0x1e>
 80239e4:	6023      	str	r3, [r4, #0]
 80239e6:	bd38      	pop	{r3, r4, r5, pc}
 80239e8:	20014be0 	.word	0x20014be0

080239ec <__errno>:
 80239ec:	4b01      	ldr	r3, [pc, #4]	@ (80239f4 <__errno+0x8>)
 80239ee:	6818      	ldr	r0, [r3, #0]
 80239f0:	4770      	bx	lr
 80239f2:	bf00      	nop
 80239f4:	20000220 	.word	0x20000220

080239f8 <__libc_init_array>:
 80239f8:	b570      	push	{r4, r5, r6, lr}
 80239fa:	4d0d      	ldr	r5, [pc, #52]	@ (8023a30 <__libc_init_array+0x38>)
 80239fc:	4c0d      	ldr	r4, [pc, #52]	@ (8023a34 <__libc_init_array+0x3c>)
 80239fe:	1b64      	subs	r4, r4, r5
 8023a00:	10a4      	asrs	r4, r4, #2
 8023a02:	2600      	movs	r6, #0
 8023a04:	42a6      	cmp	r6, r4
 8023a06:	d109      	bne.n	8023a1c <__libc_init_array+0x24>
 8023a08:	4d0b      	ldr	r5, [pc, #44]	@ (8023a38 <__libc_init_array+0x40>)
 8023a0a:	4c0c      	ldr	r4, [pc, #48]	@ (8023a3c <__libc_init_array+0x44>)
 8023a0c:	f000 ff0a 	bl	8024824 <_init>
 8023a10:	1b64      	subs	r4, r4, r5
 8023a12:	10a4      	asrs	r4, r4, #2
 8023a14:	2600      	movs	r6, #0
 8023a16:	42a6      	cmp	r6, r4
 8023a18:	d105      	bne.n	8023a26 <__libc_init_array+0x2e>
 8023a1a:	bd70      	pop	{r4, r5, r6, pc}
 8023a1c:	f855 3b04 	ldr.w	r3, [r5], #4
 8023a20:	4798      	blx	r3
 8023a22:	3601      	adds	r6, #1
 8023a24:	e7ee      	b.n	8023a04 <__libc_init_array+0xc>
 8023a26:	f855 3b04 	ldr.w	r3, [r5], #4
 8023a2a:	4798      	blx	r3
 8023a2c:	3601      	adds	r6, #1
 8023a2e:	e7f2      	b.n	8023a16 <__libc_init_array+0x1e>
 8023a30:	0802678c 	.word	0x0802678c
 8023a34:	0802678c 	.word	0x0802678c
 8023a38:	0802678c 	.word	0x0802678c
 8023a3c:	080267a0 	.word	0x080267a0

08023a40 <__retarget_lock_init_recursive>:
 8023a40:	4770      	bx	lr

08023a42 <__retarget_lock_acquire_recursive>:
 8023a42:	4770      	bx	lr

08023a44 <__retarget_lock_release_recursive>:
 8023a44:	4770      	bx	lr

08023a46 <memcpy>:
 8023a46:	440a      	add	r2, r1
 8023a48:	4291      	cmp	r1, r2
 8023a4a:	f100 33ff 	add.w	r3, r0, #4294967295
 8023a4e:	d100      	bne.n	8023a52 <memcpy+0xc>
 8023a50:	4770      	bx	lr
 8023a52:	b510      	push	{r4, lr}
 8023a54:	f811 4b01 	ldrb.w	r4, [r1], #1
 8023a58:	f803 4f01 	strb.w	r4, [r3, #1]!
 8023a5c:	4291      	cmp	r1, r2
 8023a5e:	d1f9      	bne.n	8023a54 <memcpy+0xe>
 8023a60:	bd10      	pop	{r4, pc}
	...

08023a64 <__register_exitproc>:
 8023a64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023a68:	4d27      	ldr	r5, [pc, #156]	@ (8023b08 <__register_exitproc+0xa4>)
 8023a6a:	4607      	mov	r7, r0
 8023a6c:	6828      	ldr	r0, [r5, #0]
 8023a6e:	4691      	mov	r9, r2
 8023a70:	460e      	mov	r6, r1
 8023a72:	4698      	mov	r8, r3
 8023a74:	f7ff ffe5 	bl	8023a42 <__retarget_lock_acquire_recursive>
 8023a78:	4a24      	ldr	r2, [pc, #144]	@ (8023b0c <__register_exitproc+0xa8>)
 8023a7a:	6814      	ldr	r4, [r2, #0]
 8023a7c:	b93c      	cbnz	r4, 8023a8e <__register_exitproc+0x2a>
 8023a7e:	4b24      	ldr	r3, [pc, #144]	@ (8023b10 <__register_exitproc+0xac>)
 8023a80:	6013      	str	r3, [r2, #0]
 8023a82:	4a24      	ldr	r2, [pc, #144]	@ (8023b14 <__register_exitproc+0xb0>)
 8023a84:	b112      	cbz	r2, 8023a8c <__register_exitproc+0x28>
 8023a86:	6812      	ldr	r2, [r2, #0]
 8023a88:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8023a8c:	4c20      	ldr	r4, [pc, #128]	@ (8023b10 <__register_exitproc+0xac>)
 8023a8e:	6863      	ldr	r3, [r4, #4]
 8023a90:	2b1f      	cmp	r3, #31
 8023a92:	dd06      	ble.n	8023aa2 <__register_exitproc+0x3e>
 8023a94:	6828      	ldr	r0, [r5, #0]
 8023a96:	f7ff ffd5 	bl	8023a44 <__retarget_lock_release_recursive>
 8023a9a:	f04f 30ff 	mov.w	r0, #4294967295
 8023a9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023aa2:	b32f      	cbz	r7, 8023af0 <__register_exitproc+0x8c>
 8023aa4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8023aa8:	b968      	cbnz	r0, 8023ac6 <__register_exitproc+0x62>
 8023aaa:	4b1b      	ldr	r3, [pc, #108]	@ (8023b18 <__register_exitproc+0xb4>)
 8023aac:	2b00      	cmp	r3, #0
 8023aae:	d0f1      	beq.n	8023a94 <__register_exitproc+0x30>
 8023ab0:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8023ab4:	f7ff fc80 	bl	80233b8 <malloc>
 8023ab8:	2800      	cmp	r0, #0
 8023aba:	d0eb      	beq.n	8023a94 <__register_exitproc+0x30>
 8023abc:	2300      	movs	r3, #0
 8023abe:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8023ac2:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8023ac6:	6863      	ldr	r3, [r4, #4]
 8023ac8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8023acc:	2201      	movs	r2, #1
 8023ace:	409a      	lsls	r2, r3
 8023ad0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8023ad4:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8023ad8:	4313      	orrs	r3, r2
 8023ada:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8023ade:	2f02      	cmp	r7, #2
 8023ae0:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8023ae4:	bf02      	ittt	eq
 8023ae6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8023aea:	4313      	orreq	r3, r2
 8023aec:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8023af0:	6863      	ldr	r3, [r4, #4]
 8023af2:	6828      	ldr	r0, [r5, #0]
 8023af4:	1c5a      	adds	r2, r3, #1
 8023af6:	3302      	adds	r3, #2
 8023af8:	6062      	str	r2, [r4, #4]
 8023afa:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8023afe:	f7ff ffa1 	bl	8023a44 <__retarget_lock_release_recursive>
 8023b02:	2000      	movs	r0, #0
 8023b04:	e7cb      	b.n	8023a9e <__register_exitproc+0x3a>
 8023b06:	bf00      	nop
 8023b08:	20000270 	.word	0x20000270
 8023b0c:	20014c74 	.word	0x20014c74
 8023b10:	20014be8 	.word	0x20014be8
 8023b14:	080265b0 	.word	0x080265b0
 8023b18:	080233b9 	.word	0x080233b9

08023b1c <_free_r>:
 8023b1c:	b538      	push	{r3, r4, r5, lr}
 8023b1e:	4605      	mov	r5, r0
 8023b20:	2900      	cmp	r1, #0
 8023b22:	d041      	beq.n	8023ba8 <_free_r+0x8c>
 8023b24:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023b28:	1f0c      	subs	r4, r1, #4
 8023b2a:	2b00      	cmp	r3, #0
 8023b2c:	bfb8      	it	lt
 8023b2e:	18e4      	addlt	r4, r4, r3
 8023b30:	f7ff fcf4 	bl	802351c <__malloc_lock>
 8023b34:	4a1d      	ldr	r2, [pc, #116]	@ (8023bac <_free_r+0x90>)
 8023b36:	6813      	ldr	r3, [r2, #0]
 8023b38:	b933      	cbnz	r3, 8023b48 <_free_r+0x2c>
 8023b3a:	6063      	str	r3, [r4, #4]
 8023b3c:	6014      	str	r4, [r2, #0]
 8023b3e:	4628      	mov	r0, r5
 8023b40:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023b44:	f7ff bcf0 	b.w	8023528 <__malloc_unlock>
 8023b48:	42a3      	cmp	r3, r4
 8023b4a:	d908      	bls.n	8023b5e <_free_r+0x42>
 8023b4c:	6820      	ldr	r0, [r4, #0]
 8023b4e:	1821      	adds	r1, r4, r0
 8023b50:	428b      	cmp	r3, r1
 8023b52:	bf01      	itttt	eq
 8023b54:	6819      	ldreq	r1, [r3, #0]
 8023b56:	685b      	ldreq	r3, [r3, #4]
 8023b58:	1809      	addeq	r1, r1, r0
 8023b5a:	6021      	streq	r1, [r4, #0]
 8023b5c:	e7ed      	b.n	8023b3a <_free_r+0x1e>
 8023b5e:	461a      	mov	r2, r3
 8023b60:	685b      	ldr	r3, [r3, #4]
 8023b62:	b10b      	cbz	r3, 8023b68 <_free_r+0x4c>
 8023b64:	42a3      	cmp	r3, r4
 8023b66:	d9fa      	bls.n	8023b5e <_free_r+0x42>
 8023b68:	6811      	ldr	r1, [r2, #0]
 8023b6a:	1850      	adds	r0, r2, r1
 8023b6c:	42a0      	cmp	r0, r4
 8023b6e:	d10b      	bne.n	8023b88 <_free_r+0x6c>
 8023b70:	6820      	ldr	r0, [r4, #0]
 8023b72:	4401      	add	r1, r0
 8023b74:	1850      	adds	r0, r2, r1
 8023b76:	4283      	cmp	r3, r0
 8023b78:	6011      	str	r1, [r2, #0]
 8023b7a:	d1e0      	bne.n	8023b3e <_free_r+0x22>
 8023b7c:	6818      	ldr	r0, [r3, #0]
 8023b7e:	685b      	ldr	r3, [r3, #4]
 8023b80:	6053      	str	r3, [r2, #4]
 8023b82:	4408      	add	r0, r1
 8023b84:	6010      	str	r0, [r2, #0]
 8023b86:	e7da      	b.n	8023b3e <_free_r+0x22>
 8023b88:	d902      	bls.n	8023b90 <_free_r+0x74>
 8023b8a:	230c      	movs	r3, #12
 8023b8c:	602b      	str	r3, [r5, #0]
 8023b8e:	e7d6      	b.n	8023b3e <_free_r+0x22>
 8023b90:	6820      	ldr	r0, [r4, #0]
 8023b92:	1821      	adds	r1, r4, r0
 8023b94:	428b      	cmp	r3, r1
 8023b96:	bf04      	itt	eq
 8023b98:	6819      	ldreq	r1, [r3, #0]
 8023b9a:	685b      	ldreq	r3, [r3, #4]
 8023b9c:	6063      	str	r3, [r4, #4]
 8023b9e:	bf04      	itt	eq
 8023ba0:	1809      	addeq	r1, r1, r0
 8023ba2:	6021      	streq	r1, [r4, #0]
 8023ba4:	6054      	str	r4, [r2, #4]
 8023ba6:	e7ca      	b.n	8023b3e <_free_r+0x22>
 8023ba8:	bd38      	pop	{r3, r4, r5, pc}
 8023baa:	bf00      	nop
 8023bac:	20014aa0 	.word	0x20014aa0

08023bb0 <__ssputs_r>:
 8023bb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023bb4:	688e      	ldr	r6, [r1, #8]
 8023bb6:	461f      	mov	r7, r3
 8023bb8:	42be      	cmp	r6, r7
 8023bba:	680b      	ldr	r3, [r1, #0]
 8023bbc:	4682      	mov	sl, r0
 8023bbe:	460c      	mov	r4, r1
 8023bc0:	4690      	mov	r8, r2
 8023bc2:	d82d      	bhi.n	8023c20 <__ssputs_r+0x70>
 8023bc4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8023bc8:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8023bcc:	d026      	beq.n	8023c1c <__ssputs_r+0x6c>
 8023bce:	6965      	ldr	r5, [r4, #20]
 8023bd0:	6909      	ldr	r1, [r1, #16]
 8023bd2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023bd6:	eba3 0901 	sub.w	r9, r3, r1
 8023bda:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8023bde:	1c7b      	adds	r3, r7, #1
 8023be0:	444b      	add	r3, r9
 8023be2:	106d      	asrs	r5, r5, #1
 8023be4:	429d      	cmp	r5, r3
 8023be6:	bf38      	it	cc
 8023be8:	461d      	movcc	r5, r3
 8023bea:	0553      	lsls	r3, r2, #21
 8023bec:	d527      	bpl.n	8023c3e <__ssputs_r+0x8e>
 8023bee:	4629      	mov	r1, r5
 8023bf0:	f7ff fc14 	bl	802341c <_malloc_r>
 8023bf4:	4606      	mov	r6, r0
 8023bf6:	b360      	cbz	r0, 8023c52 <__ssputs_r+0xa2>
 8023bf8:	6921      	ldr	r1, [r4, #16]
 8023bfa:	464a      	mov	r2, r9
 8023bfc:	f7ff ff23 	bl	8023a46 <memcpy>
 8023c00:	89a3      	ldrh	r3, [r4, #12]
 8023c02:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8023c06:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8023c0a:	81a3      	strh	r3, [r4, #12]
 8023c0c:	6126      	str	r6, [r4, #16]
 8023c0e:	6165      	str	r5, [r4, #20]
 8023c10:	444e      	add	r6, r9
 8023c12:	eba5 0509 	sub.w	r5, r5, r9
 8023c16:	6026      	str	r6, [r4, #0]
 8023c18:	60a5      	str	r5, [r4, #8]
 8023c1a:	463e      	mov	r6, r7
 8023c1c:	42be      	cmp	r6, r7
 8023c1e:	d900      	bls.n	8023c22 <__ssputs_r+0x72>
 8023c20:	463e      	mov	r6, r7
 8023c22:	6820      	ldr	r0, [r4, #0]
 8023c24:	4632      	mov	r2, r6
 8023c26:	4641      	mov	r1, r8
 8023c28:	f000 fd28 	bl	802467c <memmove>
 8023c2c:	68a3      	ldr	r3, [r4, #8]
 8023c2e:	1b9b      	subs	r3, r3, r6
 8023c30:	60a3      	str	r3, [r4, #8]
 8023c32:	6823      	ldr	r3, [r4, #0]
 8023c34:	4433      	add	r3, r6
 8023c36:	6023      	str	r3, [r4, #0]
 8023c38:	2000      	movs	r0, #0
 8023c3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023c3e:	462a      	mov	r2, r5
 8023c40:	f000 fd36 	bl	80246b0 <_realloc_r>
 8023c44:	4606      	mov	r6, r0
 8023c46:	2800      	cmp	r0, #0
 8023c48:	d1e0      	bne.n	8023c0c <__ssputs_r+0x5c>
 8023c4a:	6921      	ldr	r1, [r4, #16]
 8023c4c:	4650      	mov	r0, sl
 8023c4e:	f7ff ff65 	bl	8023b1c <_free_r>
 8023c52:	230c      	movs	r3, #12
 8023c54:	f8ca 3000 	str.w	r3, [sl]
 8023c58:	89a3      	ldrh	r3, [r4, #12]
 8023c5a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023c5e:	81a3      	strh	r3, [r4, #12]
 8023c60:	f04f 30ff 	mov.w	r0, #4294967295
 8023c64:	e7e9      	b.n	8023c3a <__ssputs_r+0x8a>
	...

08023c68 <_svfiprintf_r>:
 8023c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c6c:	4698      	mov	r8, r3
 8023c6e:	898b      	ldrh	r3, [r1, #12]
 8023c70:	061b      	lsls	r3, r3, #24
 8023c72:	b09d      	sub	sp, #116	@ 0x74
 8023c74:	4607      	mov	r7, r0
 8023c76:	460d      	mov	r5, r1
 8023c78:	4614      	mov	r4, r2
 8023c7a:	d510      	bpl.n	8023c9e <_svfiprintf_r+0x36>
 8023c7c:	690b      	ldr	r3, [r1, #16]
 8023c7e:	b973      	cbnz	r3, 8023c9e <_svfiprintf_r+0x36>
 8023c80:	2140      	movs	r1, #64	@ 0x40
 8023c82:	f7ff fbcb 	bl	802341c <_malloc_r>
 8023c86:	6028      	str	r0, [r5, #0]
 8023c88:	6128      	str	r0, [r5, #16]
 8023c8a:	b930      	cbnz	r0, 8023c9a <_svfiprintf_r+0x32>
 8023c8c:	230c      	movs	r3, #12
 8023c8e:	603b      	str	r3, [r7, #0]
 8023c90:	f04f 30ff 	mov.w	r0, #4294967295
 8023c94:	b01d      	add	sp, #116	@ 0x74
 8023c96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023c9a:	2340      	movs	r3, #64	@ 0x40
 8023c9c:	616b      	str	r3, [r5, #20]
 8023c9e:	2300      	movs	r3, #0
 8023ca0:	9309      	str	r3, [sp, #36]	@ 0x24
 8023ca2:	2320      	movs	r3, #32
 8023ca4:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8023ca8:	f8cd 800c 	str.w	r8, [sp, #12]
 8023cac:	2330      	movs	r3, #48	@ 0x30
 8023cae:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8023e4c <_svfiprintf_r+0x1e4>
 8023cb2:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8023cb6:	f04f 0901 	mov.w	r9, #1
 8023cba:	4623      	mov	r3, r4
 8023cbc:	469a      	mov	sl, r3
 8023cbe:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023cc2:	b10a      	cbz	r2, 8023cc8 <_svfiprintf_r+0x60>
 8023cc4:	2a25      	cmp	r2, #37	@ 0x25
 8023cc6:	d1f9      	bne.n	8023cbc <_svfiprintf_r+0x54>
 8023cc8:	ebba 0b04 	subs.w	fp, sl, r4
 8023ccc:	d00b      	beq.n	8023ce6 <_svfiprintf_r+0x7e>
 8023cce:	465b      	mov	r3, fp
 8023cd0:	4622      	mov	r2, r4
 8023cd2:	4629      	mov	r1, r5
 8023cd4:	4638      	mov	r0, r7
 8023cd6:	f7ff ff6b 	bl	8023bb0 <__ssputs_r>
 8023cda:	3001      	adds	r0, #1
 8023cdc:	f000 80a7 	beq.w	8023e2e <_svfiprintf_r+0x1c6>
 8023ce0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023ce2:	445a      	add	r2, fp
 8023ce4:	9209      	str	r2, [sp, #36]	@ 0x24
 8023ce6:	f89a 3000 	ldrb.w	r3, [sl]
 8023cea:	2b00      	cmp	r3, #0
 8023cec:	f000 809f 	beq.w	8023e2e <_svfiprintf_r+0x1c6>
 8023cf0:	2300      	movs	r3, #0
 8023cf2:	f04f 32ff 	mov.w	r2, #4294967295
 8023cf6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023cfa:	f10a 0a01 	add.w	sl, sl, #1
 8023cfe:	9304      	str	r3, [sp, #16]
 8023d00:	9307      	str	r3, [sp, #28]
 8023d02:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8023d06:	931a      	str	r3, [sp, #104]	@ 0x68
 8023d08:	4654      	mov	r4, sl
 8023d0a:	2205      	movs	r2, #5
 8023d0c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023d10:	484e      	ldr	r0, [pc, #312]	@ (8023e4c <_svfiprintf_r+0x1e4>)
 8023d12:	f7dc fa75 	bl	8000200 <memchr>
 8023d16:	9a04      	ldr	r2, [sp, #16]
 8023d18:	b9d8      	cbnz	r0, 8023d52 <_svfiprintf_r+0xea>
 8023d1a:	06d0      	lsls	r0, r2, #27
 8023d1c:	bf44      	itt	mi
 8023d1e:	2320      	movmi	r3, #32
 8023d20:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023d24:	0711      	lsls	r1, r2, #28
 8023d26:	bf44      	itt	mi
 8023d28:	232b      	movmi	r3, #43	@ 0x2b
 8023d2a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023d2e:	f89a 3000 	ldrb.w	r3, [sl]
 8023d32:	2b2a      	cmp	r3, #42	@ 0x2a
 8023d34:	d015      	beq.n	8023d62 <_svfiprintf_r+0xfa>
 8023d36:	9a07      	ldr	r2, [sp, #28]
 8023d38:	4654      	mov	r4, sl
 8023d3a:	2000      	movs	r0, #0
 8023d3c:	f04f 0c0a 	mov.w	ip, #10
 8023d40:	4621      	mov	r1, r4
 8023d42:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023d46:	3b30      	subs	r3, #48	@ 0x30
 8023d48:	2b09      	cmp	r3, #9
 8023d4a:	d94b      	bls.n	8023de4 <_svfiprintf_r+0x17c>
 8023d4c:	b1b0      	cbz	r0, 8023d7c <_svfiprintf_r+0x114>
 8023d4e:	9207      	str	r2, [sp, #28]
 8023d50:	e014      	b.n	8023d7c <_svfiprintf_r+0x114>
 8023d52:	eba0 0308 	sub.w	r3, r0, r8
 8023d56:	fa09 f303 	lsl.w	r3, r9, r3
 8023d5a:	4313      	orrs	r3, r2
 8023d5c:	9304      	str	r3, [sp, #16]
 8023d5e:	46a2      	mov	sl, r4
 8023d60:	e7d2      	b.n	8023d08 <_svfiprintf_r+0xa0>
 8023d62:	9b03      	ldr	r3, [sp, #12]
 8023d64:	1d19      	adds	r1, r3, #4
 8023d66:	681b      	ldr	r3, [r3, #0]
 8023d68:	9103      	str	r1, [sp, #12]
 8023d6a:	2b00      	cmp	r3, #0
 8023d6c:	bfbb      	ittet	lt
 8023d6e:	425b      	neglt	r3, r3
 8023d70:	f042 0202 	orrlt.w	r2, r2, #2
 8023d74:	9307      	strge	r3, [sp, #28]
 8023d76:	9307      	strlt	r3, [sp, #28]
 8023d78:	bfb8      	it	lt
 8023d7a:	9204      	strlt	r2, [sp, #16]
 8023d7c:	7823      	ldrb	r3, [r4, #0]
 8023d7e:	2b2e      	cmp	r3, #46	@ 0x2e
 8023d80:	d10a      	bne.n	8023d98 <_svfiprintf_r+0x130>
 8023d82:	7863      	ldrb	r3, [r4, #1]
 8023d84:	2b2a      	cmp	r3, #42	@ 0x2a
 8023d86:	d132      	bne.n	8023dee <_svfiprintf_r+0x186>
 8023d88:	9b03      	ldr	r3, [sp, #12]
 8023d8a:	1d1a      	adds	r2, r3, #4
 8023d8c:	681b      	ldr	r3, [r3, #0]
 8023d8e:	9203      	str	r2, [sp, #12]
 8023d90:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8023d94:	3402      	adds	r4, #2
 8023d96:	9305      	str	r3, [sp, #20]
 8023d98:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8023e5c <_svfiprintf_r+0x1f4>
 8023d9c:	7821      	ldrb	r1, [r4, #0]
 8023d9e:	2203      	movs	r2, #3
 8023da0:	4650      	mov	r0, sl
 8023da2:	f7dc fa2d 	bl	8000200 <memchr>
 8023da6:	b138      	cbz	r0, 8023db8 <_svfiprintf_r+0x150>
 8023da8:	9b04      	ldr	r3, [sp, #16]
 8023daa:	eba0 000a 	sub.w	r0, r0, sl
 8023dae:	2240      	movs	r2, #64	@ 0x40
 8023db0:	4082      	lsls	r2, r0
 8023db2:	4313      	orrs	r3, r2
 8023db4:	3401      	adds	r4, #1
 8023db6:	9304      	str	r3, [sp, #16]
 8023db8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023dbc:	4824      	ldr	r0, [pc, #144]	@ (8023e50 <_svfiprintf_r+0x1e8>)
 8023dbe:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8023dc2:	2206      	movs	r2, #6
 8023dc4:	f7dc fa1c 	bl	8000200 <memchr>
 8023dc8:	2800      	cmp	r0, #0
 8023dca:	d036      	beq.n	8023e3a <_svfiprintf_r+0x1d2>
 8023dcc:	4b21      	ldr	r3, [pc, #132]	@ (8023e54 <_svfiprintf_r+0x1ec>)
 8023dce:	bb1b      	cbnz	r3, 8023e18 <_svfiprintf_r+0x1b0>
 8023dd0:	9b03      	ldr	r3, [sp, #12]
 8023dd2:	3307      	adds	r3, #7
 8023dd4:	f023 0307 	bic.w	r3, r3, #7
 8023dd8:	3308      	adds	r3, #8
 8023dda:	9303      	str	r3, [sp, #12]
 8023ddc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023dde:	4433      	add	r3, r6
 8023de0:	9309      	str	r3, [sp, #36]	@ 0x24
 8023de2:	e76a      	b.n	8023cba <_svfiprintf_r+0x52>
 8023de4:	fb0c 3202 	mla	r2, ip, r2, r3
 8023de8:	460c      	mov	r4, r1
 8023dea:	2001      	movs	r0, #1
 8023dec:	e7a8      	b.n	8023d40 <_svfiprintf_r+0xd8>
 8023dee:	2300      	movs	r3, #0
 8023df0:	3401      	adds	r4, #1
 8023df2:	9305      	str	r3, [sp, #20]
 8023df4:	4619      	mov	r1, r3
 8023df6:	f04f 0c0a 	mov.w	ip, #10
 8023dfa:	4620      	mov	r0, r4
 8023dfc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8023e00:	3a30      	subs	r2, #48	@ 0x30
 8023e02:	2a09      	cmp	r2, #9
 8023e04:	d903      	bls.n	8023e0e <_svfiprintf_r+0x1a6>
 8023e06:	2b00      	cmp	r3, #0
 8023e08:	d0c6      	beq.n	8023d98 <_svfiprintf_r+0x130>
 8023e0a:	9105      	str	r1, [sp, #20]
 8023e0c:	e7c4      	b.n	8023d98 <_svfiprintf_r+0x130>
 8023e0e:	fb0c 2101 	mla	r1, ip, r1, r2
 8023e12:	4604      	mov	r4, r0
 8023e14:	2301      	movs	r3, #1
 8023e16:	e7f0      	b.n	8023dfa <_svfiprintf_r+0x192>
 8023e18:	ab03      	add	r3, sp, #12
 8023e1a:	9300      	str	r3, [sp, #0]
 8023e1c:	462a      	mov	r2, r5
 8023e1e:	4b0e      	ldr	r3, [pc, #56]	@ (8023e58 <_svfiprintf_r+0x1f0>)
 8023e20:	a904      	add	r1, sp, #16
 8023e22:	4638      	mov	r0, r7
 8023e24:	f3af 8000 	nop.w
 8023e28:	1c42      	adds	r2, r0, #1
 8023e2a:	4606      	mov	r6, r0
 8023e2c:	d1d6      	bne.n	8023ddc <_svfiprintf_r+0x174>
 8023e2e:	89ab      	ldrh	r3, [r5, #12]
 8023e30:	065b      	lsls	r3, r3, #25
 8023e32:	f53f af2d 	bmi.w	8023c90 <_svfiprintf_r+0x28>
 8023e36:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8023e38:	e72c      	b.n	8023c94 <_svfiprintf_r+0x2c>
 8023e3a:	ab03      	add	r3, sp, #12
 8023e3c:	9300      	str	r3, [sp, #0]
 8023e3e:	462a      	mov	r2, r5
 8023e40:	4b05      	ldr	r3, [pc, #20]	@ (8023e58 <_svfiprintf_r+0x1f0>)
 8023e42:	a904      	add	r1, sp, #16
 8023e44:	4638      	mov	r0, r7
 8023e46:	f000 f9bb 	bl	80241c0 <_printf_i>
 8023e4a:	e7ed      	b.n	8023e28 <_svfiprintf_r+0x1c0>
 8023e4c:	080253d1 	.word	0x080253d1
 8023e50:	080253db 	.word	0x080253db
 8023e54:	00000000 	.word	0x00000000
 8023e58:	08023bb1 	.word	0x08023bb1
 8023e5c:	080253d7 	.word	0x080253d7

08023e60 <__sfputc_r>:
 8023e60:	6893      	ldr	r3, [r2, #8]
 8023e62:	3b01      	subs	r3, #1
 8023e64:	2b00      	cmp	r3, #0
 8023e66:	b410      	push	{r4}
 8023e68:	6093      	str	r3, [r2, #8]
 8023e6a:	da08      	bge.n	8023e7e <__sfputc_r+0x1e>
 8023e6c:	6994      	ldr	r4, [r2, #24]
 8023e6e:	42a3      	cmp	r3, r4
 8023e70:	db01      	blt.n	8023e76 <__sfputc_r+0x16>
 8023e72:	290a      	cmp	r1, #10
 8023e74:	d103      	bne.n	8023e7e <__sfputc_r+0x1e>
 8023e76:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023e7a:	f000 bb6b 	b.w	8024554 <__swbuf_r>
 8023e7e:	6813      	ldr	r3, [r2, #0]
 8023e80:	1c58      	adds	r0, r3, #1
 8023e82:	6010      	str	r0, [r2, #0]
 8023e84:	7019      	strb	r1, [r3, #0]
 8023e86:	4608      	mov	r0, r1
 8023e88:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023e8c:	4770      	bx	lr

08023e8e <__sfputs_r>:
 8023e8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023e90:	4606      	mov	r6, r0
 8023e92:	460f      	mov	r7, r1
 8023e94:	4614      	mov	r4, r2
 8023e96:	18d5      	adds	r5, r2, r3
 8023e98:	42ac      	cmp	r4, r5
 8023e9a:	d101      	bne.n	8023ea0 <__sfputs_r+0x12>
 8023e9c:	2000      	movs	r0, #0
 8023e9e:	e007      	b.n	8023eb0 <__sfputs_r+0x22>
 8023ea0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023ea4:	463a      	mov	r2, r7
 8023ea6:	4630      	mov	r0, r6
 8023ea8:	f7ff ffda 	bl	8023e60 <__sfputc_r>
 8023eac:	1c43      	adds	r3, r0, #1
 8023eae:	d1f3      	bne.n	8023e98 <__sfputs_r+0xa>
 8023eb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08023eb4 <_vfiprintf_r>:
 8023eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023eb8:	460d      	mov	r5, r1
 8023eba:	b09d      	sub	sp, #116	@ 0x74
 8023ebc:	4614      	mov	r4, r2
 8023ebe:	4698      	mov	r8, r3
 8023ec0:	4606      	mov	r6, r0
 8023ec2:	b118      	cbz	r0, 8023ecc <_vfiprintf_r+0x18>
 8023ec4:	6a03      	ldr	r3, [r0, #32]
 8023ec6:	b90b      	cbnz	r3, 8023ecc <_vfiprintf_r+0x18>
 8023ec8:	f7ff fbce 	bl	8023668 <__sinit>
 8023ecc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8023ece:	07d9      	lsls	r1, r3, #31
 8023ed0:	d405      	bmi.n	8023ede <_vfiprintf_r+0x2a>
 8023ed2:	89ab      	ldrh	r3, [r5, #12]
 8023ed4:	059a      	lsls	r2, r3, #22
 8023ed6:	d402      	bmi.n	8023ede <_vfiprintf_r+0x2a>
 8023ed8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023eda:	f7ff fdb2 	bl	8023a42 <__retarget_lock_acquire_recursive>
 8023ede:	89ab      	ldrh	r3, [r5, #12]
 8023ee0:	071b      	lsls	r3, r3, #28
 8023ee2:	d501      	bpl.n	8023ee8 <_vfiprintf_r+0x34>
 8023ee4:	692b      	ldr	r3, [r5, #16]
 8023ee6:	b99b      	cbnz	r3, 8023f10 <_vfiprintf_r+0x5c>
 8023ee8:	4629      	mov	r1, r5
 8023eea:	4630      	mov	r0, r6
 8023eec:	f000 fb70 	bl	80245d0 <__swsetup_r>
 8023ef0:	b170      	cbz	r0, 8023f10 <_vfiprintf_r+0x5c>
 8023ef2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8023ef4:	07dc      	lsls	r4, r3, #31
 8023ef6:	d504      	bpl.n	8023f02 <_vfiprintf_r+0x4e>
 8023ef8:	f04f 30ff 	mov.w	r0, #4294967295
 8023efc:	b01d      	add	sp, #116	@ 0x74
 8023efe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f02:	89ab      	ldrh	r3, [r5, #12]
 8023f04:	0598      	lsls	r0, r3, #22
 8023f06:	d4f7      	bmi.n	8023ef8 <_vfiprintf_r+0x44>
 8023f08:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023f0a:	f7ff fd9b 	bl	8023a44 <__retarget_lock_release_recursive>
 8023f0e:	e7f3      	b.n	8023ef8 <_vfiprintf_r+0x44>
 8023f10:	2300      	movs	r3, #0
 8023f12:	9309      	str	r3, [sp, #36]	@ 0x24
 8023f14:	2320      	movs	r3, #32
 8023f16:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8023f1a:	f8cd 800c 	str.w	r8, [sp, #12]
 8023f1e:	2330      	movs	r3, #48	@ 0x30
 8023f20:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80240d0 <_vfiprintf_r+0x21c>
 8023f24:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8023f28:	f04f 0901 	mov.w	r9, #1
 8023f2c:	4623      	mov	r3, r4
 8023f2e:	469a      	mov	sl, r3
 8023f30:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023f34:	b10a      	cbz	r2, 8023f3a <_vfiprintf_r+0x86>
 8023f36:	2a25      	cmp	r2, #37	@ 0x25
 8023f38:	d1f9      	bne.n	8023f2e <_vfiprintf_r+0x7a>
 8023f3a:	ebba 0b04 	subs.w	fp, sl, r4
 8023f3e:	d00b      	beq.n	8023f58 <_vfiprintf_r+0xa4>
 8023f40:	465b      	mov	r3, fp
 8023f42:	4622      	mov	r2, r4
 8023f44:	4629      	mov	r1, r5
 8023f46:	4630      	mov	r0, r6
 8023f48:	f7ff ffa1 	bl	8023e8e <__sfputs_r>
 8023f4c:	3001      	adds	r0, #1
 8023f4e:	f000 80a7 	beq.w	80240a0 <_vfiprintf_r+0x1ec>
 8023f52:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023f54:	445a      	add	r2, fp
 8023f56:	9209      	str	r2, [sp, #36]	@ 0x24
 8023f58:	f89a 3000 	ldrb.w	r3, [sl]
 8023f5c:	2b00      	cmp	r3, #0
 8023f5e:	f000 809f 	beq.w	80240a0 <_vfiprintf_r+0x1ec>
 8023f62:	2300      	movs	r3, #0
 8023f64:	f04f 32ff 	mov.w	r2, #4294967295
 8023f68:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023f6c:	f10a 0a01 	add.w	sl, sl, #1
 8023f70:	9304      	str	r3, [sp, #16]
 8023f72:	9307      	str	r3, [sp, #28]
 8023f74:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8023f78:	931a      	str	r3, [sp, #104]	@ 0x68
 8023f7a:	4654      	mov	r4, sl
 8023f7c:	2205      	movs	r2, #5
 8023f7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023f82:	4853      	ldr	r0, [pc, #332]	@ (80240d0 <_vfiprintf_r+0x21c>)
 8023f84:	f7dc f93c 	bl	8000200 <memchr>
 8023f88:	9a04      	ldr	r2, [sp, #16]
 8023f8a:	b9d8      	cbnz	r0, 8023fc4 <_vfiprintf_r+0x110>
 8023f8c:	06d1      	lsls	r1, r2, #27
 8023f8e:	bf44      	itt	mi
 8023f90:	2320      	movmi	r3, #32
 8023f92:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023f96:	0713      	lsls	r3, r2, #28
 8023f98:	bf44      	itt	mi
 8023f9a:	232b      	movmi	r3, #43	@ 0x2b
 8023f9c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023fa0:	f89a 3000 	ldrb.w	r3, [sl]
 8023fa4:	2b2a      	cmp	r3, #42	@ 0x2a
 8023fa6:	d015      	beq.n	8023fd4 <_vfiprintf_r+0x120>
 8023fa8:	9a07      	ldr	r2, [sp, #28]
 8023faa:	4654      	mov	r4, sl
 8023fac:	2000      	movs	r0, #0
 8023fae:	f04f 0c0a 	mov.w	ip, #10
 8023fb2:	4621      	mov	r1, r4
 8023fb4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023fb8:	3b30      	subs	r3, #48	@ 0x30
 8023fba:	2b09      	cmp	r3, #9
 8023fbc:	d94b      	bls.n	8024056 <_vfiprintf_r+0x1a2>
 8023fbe:	b1b0      	cbz	r0, 8023fee <_vfiprintf_r+0x13a>
 8023fc0:	9207      	str	r2, [sp, #28]
 8023fc2:	e014      	b.n	8023fee <_vfiprintf_r+0x13a>
 8023fc4:	eba0 0308 	sub.w	r3, r0, r8
 8023fc8:	fa09 f303 	lsl.w	r3, r9, r3
 8023fcc:	4313      	orrs	r3, r2
 8023fce:	9304      	str	r3, [sp, #16]
 8023fd0:	46a2      	mov	sl, r4
 8023fd2:	e7d2      	b.n	8023f7a <_vfiprintf_r+0xc6>
 8023fd4:	9b03      	ldr	r3, [sp, #12]
 8023fd6:	1d19      	adds	r1, r3, #4
 8023fd8:	681b      	ldr	r3, [r3, #0]
 8023fda:	9103      	str	r1, [sp, #12]
 8023fdc:	2b00      	cmp	r3, #0
 8023fde:	bfbb      	ittet	lt
 8023fe0:	425b      	neglt	r3, r3
 8023fe2:	f042 0202 	orrlt.w	r2, r2, #2
 8023fe6:	9307      	strge	r3, [sp, #28]
 8023fe8:	9307      	strlt	r3, [sp, #28]
 8023fea:	bfb8      	it	lt
 8023fec:	9204      	strlt	r2, [sp, #16]
 8023fee:	7823      	ldrb	r3, [r4, #0]
 8023ff0:	2b2e      	cmp	r3, #46	@ 0x2e
 8023ff2:	d10a      	bne.n	802400a <_vfiprintf_r+0x156>
 8023ff4:	7863      	ldrb	r3, [r4, #1]
 8023ff6:	2b2a      	cmp	r3, #42	@ 0x2a
 8023ff8:	d132      	bne.n	8024060 <_vfiprintf_r+0x1ac>
 8023ffa:	9b03      	ldr	r3, [sp, #12]
 8023ffc:	1d1a      	adds	r2, r3, #4
 8023ffe:	681b      	ldr	r3, [r3, #0]
 8024000:	9203      	str	r2, [sp, #12]
 8024002:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8024006:	3402      	adds	r4, #2
 8024008:	9305      	str	r3, [sp, #20]
 802400a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80240e0 <_vfiprintf_r+0x22c>
 802400e:	7821      	ldrb	r1, [r4, #0]
 8024010:	2203      	movs	r2, #3
 8024012:	4650      	mov	r0, sl
 8024014:	f7dc f8f4 	bl	8000200 <memchr>
 8024018:	b138      	cbz	r0, 802402a <_vfiprintf_r+0x176>
 802401a:	9b04      	ldr	r3, [sp, #16]
 802401c:	eba0 000a 	sub.w	r0, r0, sl
 8024020:	2240      	movs	r2, #64	@ 0x40
 8024022:	4082      	lsls	r2, r0
 8024024:	4313      	orrs	r3, r2
 8024026:	3401      	adds	r4, #1
 8024028:	9304      	str	r3, [sp, #16]
 802402a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802402e:	4829      	ldr	r0, [pc, #164]	@ (80240d4 <_vfiprintf_r+0x220>)
 8024030:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8024034:	2206      	movs	r2, #6
 8024036:	f7dc f8e3 	bl	8000200 <memchr>
 802403a:	2800      	cmp	r0, #0
 802403c:	d03f      	beq.n	80240be <_vfiprintf_r+0x20a>
 802403e:	4b26      	ldr	r3, [pc, #152]	@ (80240d8 <_vfiprintf_r+0x224>)
 8024040:	bb1b      	cbnz	r3, 802408a <_vfiprintf_r+0x1d6>
 8024042:	9b03      	ldr	r3, [sp, #12]
 8024044:	3307      	adds	r3, #7
 8024046:	f023 0307 	bic.w	r3, r3, #7
 802404a:	3308      	adds	r3, #8
 802404c:	9303      	str	r3, [sp, #12]
 802404e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024050:	443b      	add	r3, r7
 8024052:	9309      	str	r3, [sp, #36]	@ 0x24
 8024054:	e76a      	b.n	8023f2c <_vfiprintf_r+0x78>
 8024056:	fb0c 3202 	mla	r2, ip, r2, r3
 802405a:	460c      	mov	r4, r1
 802405c:	2001      	movs	r0, #1
 802405e:	e7a8      	b.n	8023fb2 <_vfiprintf_r+0xfe>
 8024060:	2300      	movs	r3, #0
 8024062:	3401      	adds	r4, #1
 8024064:	9305      	str	r3, [sp, #20]
 8024066:	4619      	mov	r1, r3
 8024068:	f04f 0c0a 	mov.w	ip, #10
 802406c:	4620      	mov	r0, r4
 802406e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8024072:	3a30      	subs	r2, #48	@ 0x30
 8024074:	2a09      	cmp	r2, #9
 8024076:	d903      	bls.n	8024080 <_vfiprintf_r+0x1cc>
 8024078:	2b00      	cmp	r3, #0
 802407a:	d0c6      	beq.n	802400a <_vfiprintf_r+0x156>
 802407c:	9105      	str	r1, [sp, #20]
 802407e:	e7c4      	b.n	802400a <_vfiprintf_r+0x156>
 8024080:	fb0c 2101 	mla	r1, ip, r1, r2
 8024084:	4604      	mov	r4, r0
 8024086:	2301      	movs	r3, #1
 8024088:	e7f0      	b.n	802406c <_vfiprintf_r+0x1b8>
 802408a:	ab03      	add	r3, sp, #12
 802408c:	9300      	str	r3, [sp, #0]
 802408e:	462a      	mov	r2, r5
 8024090:	4b12      	ldr	r3, [pc, #72]	@ (80240dc <_vfiprintf_r+0x228>)
 8024092:	a904      	add	r1, sp, #16
 8024094:	4630      	mov	r0, r6
 8024096:	f3af 8000 	nop.w
 802409a:	4607      	mov	r7, r0
 802409c:	1c78      	adds	r0, r7, #1
 802409e:	d1d6      	bne.n	802404e <_vfiprintf_r+0x19a>
 80240a0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80240a2:	07d9      	lsls	r1, r3, #31
 80240a4:	d405      	bmi.n	80240b2 <_vfiprintf_r+0x1fe>
 80240a6:	89ab      	ldrh	r3, [r5, #12]
 80240a8:	059a      	lsls	r2, r3, #22
 80240aa:	d402      	bmi.n	80240b2 <_vfiprintf_r+0x1fe>
 80240ac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80240ae:	f7ff fcc9 	bl	8023a44 <__retarget_lock_release_recursive>
 80240b2:	89ab      	ldrh	r3, [r5, #12]
 80240b4:	065b      	lsls	r3, r3, #25
 80240b6:	f53f af1f 	bmi.w	8023ef8 <_vfiprintf_r+0x44>
 80240ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80240bc:	e71e      	b.n	8023efc <_vfiprintf_r+0x48>
 80240be:	ab03      	add	r3, sp, #12
 80240c0:	9300      	str	r3, [sp, #0]
 80240c2:	462a      	mov	r2, r5
 80240c4:	4b05      	ldr	r3, [pc, #20]	@ (80240dc <_vfiprintf_r+0x228>)
 80240c6:	a904      	add	r1, sp, #16
 80240c8:	4630      	mov	r0, r6
 80240ca:	f000 f879 	bl	80241c0 <_printf_i>
 80240ce:	e7e4      	b.n	802409a <_vfiprintf_r+0x1e6>
 80240d0:	080253d1 	.word	0x080253d1
 80240d4:	080253db 	.word	0x080253db
 80240d8:	00000000 	.word	0x00000000
 80240dc:	08023e8f 	.word	0x08023e8f
 80240e0:	080253d7 	.word	0x080253d7

080240e4 <_printf_common>:
 80240e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80240e8:	4616      	mov	r6, r2
 80240ea:	4698      	mov	r8, r3
 80240ec:	688a      	ldr	r2, [r1, #8]
 80240ee:	690b      	ldr	r3, [r1, #16]
 80240f0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80240f4:	4293      	cmp	r3, r2
 80240f6:	bfb8      	it	lt
 80240f8:	4613      	movlt	r3, r2
 80240fa:	6033      	str	r3, [r6, #0]
 80240fc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8024100:	4607      	mov	r7, r0
 8024102:	460c      	mov	r4, r1
 8024104:	b10a      	cbz	r2, 802410a <_printf_common+0x26>
 8024106:	3301      	adds	r3, #1
 8024108:	6033      	str	r3, [r6, #0]
 802410a:	6823      	ldr	r3, [r4, #0]
 802410c:	0699      	lsls	r1, r3, #26
 802410e:	bf42      	ittt	mi
 8024110:	6833      	ldrmi	r3, [r6, #0]
 8024112:	3302      	addmi	r3, #2
 8024114:	6033      	strmi	r3, [r6, #0]
 8024116:	6825      	ldr	r5, [r4, #0]
 8024118:	f015 0506 	ands.w	r5, r5, #6
 802411c:	d106      	bne.n	802412c <_printf_common+0x48>
 802411e:	f104 0a19 	add.w	sl, r4, #25
 8024122:	68e3      	ldr	r3, [r4, #12]
 8024124:	6832      	ldr	r2, [r6, #0]
 8024126:	1a9b      	subs	r3, r3, r2
 8024128:	42ab      	cmp	r3, r5
 802412a:	dc26      	bgt.n	802417a <_printf_common+0x96>
 802412c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8024130:	6822      	ldr	r2, [r4, #0]
 8024132:	3b00      	subs	r3, #0
 8024134:	bf18      	it	ne
 8024136:	2301      	movne	r3, #1
 8024138:	0692      	lsls	r2, r2, #26
 802413a:	d42b      	bmi.n	8024194 <_printf_common+0xb0>
 802413c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8024140:	4641      	mov	r1, r8
 8024142:	4638      	mov	r0, r7
 8024144:	47c8      	blx	r9
 8024146:	3001      	adds	r0, #1
 8024148:	d01e      	beq.n	8024188 <_printf_common+0xa4>
 802414a:	6823      	ldr	r3, [r4, #0]
 802414c:	6922      	ldr	r2, [r4, #16]
 802414e:	f003 0306 	and.w	r3, r3, #6
 8024152:	2b04      	cmp	r3, #4
 8024154:	bf02      	ittt	eq
 8024156:	68e5      	ldreq	r5, [r4, #12]
 8024158:	6833      	ldreq	r3, [r6, #0]
 802415a:	1aed      	subeq	r5, r5, r3
 802415c:	68a3      	ldr	r3, [r4, #8]
 802415e:	bf0c      	ite	eq
 8024160:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8024164:	2500      	movne	r5, #0
 8024166:	4293      	cmp	r3, r2
 8024168:	bfc4      	itt	gt
 802416a:	1a9b      	subgt	r3, r3, r2
 802416c:	18ed      	addgt	r5, r5, r3
 802416e:	2600      	movs	r6, #0
 8024170:	341a      	adds	r4, #26
 8024172:	42b5      	cmp	r5, r6
 8024174:	d11a      	bne.n	80241ac <_printf_common+0xc8>
 8024176:	2000      	movs	r0, #0
 8024178:	e008      	b.n	802418c <_printf_common+0xa8>
 802417a:	2301      	movs	r3, #1
 802417c:	4652      	mov	r2, sl
 802417e:	4641      	mov	r1, r8
 8024180:	4638      	mov	r0, r7
 8024182:	47c8      	blx	r9
 8024184:	3001      	adds	r0, #1
 8024186:	d103      	bne.n	8024190 <_printf_common+0xac>
 8024188:	f04f 30ff 	mov.w	r0, #4294967295
 802418c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024190:	3501      	adds	r5, #1
 8024192:	e7c6      	b.n	8024122 <_printf_common+0x3e>
 8024194:	18e1      	adds	r1, r4, r3
 8024196:	1c5a      	adds	r2, r3, #1
 8024198:	2030      	movs	r0, #48	@ 0x30
 802419a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802419e:	4422      	add	r2, r4
 80241a0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80241a4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80241a8:	3302      	adds	r3, #2
 80241aa:	e7c7      	b.n	802413c <_printf_common+0x58>
 80241ac:	2301      	movs	r3, #1
 80241ae:	4622      	mov	r2, r4
 80241b0:	4641      	mov	r1, r8
 80241b2:	4638      	mov	r0, r7
 80241b4:	47c8      	blx	r9
 80241b6:	3001      	adds	r0, #1
 80241b8:	d0e6      	beq.n	8024188 <_printf_common+0xa4>
 80241ba:	3601      	adds	r6, #1
 80241bc:	e7d9      	b.n	8024172 <_printf_common+0x8e>
	...

080241c0 <_printf_i>:
 80241c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80241c4:	7e0f      	ldrb	r7, [r1, #24]
 80241c6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80241c8:	2f78      	cmp	r7, #120	@ 0x78
 80241ca:	4691      	mov	r9, r2
 80241cc:	4680      	mov	r8, r0
 80241ce:	460c      	mov	r4, r1
 80241d0:	469a      	mov	sl, r3
 80241d2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80241d6:	d807      	bhi.n	80241e8 <_printf_i+0x28>
 80241d8:	2f62      	cmp	r7, #98	@ 0x62
 80241da:	d80a      	bhi.n	80241f2 <_printf_i+0x32>
 80241dc:	2f00      	cmp	r7, #0
 80241de:	f000 80d1 	beq.w	8024384 <_printf_i+0x1c4>
 80241e2:	2f58      	cmp	r7, #88	@ 0x58
 80241e4:	f000 80b8 	beq.w	8024358 <_printf_i+0x198>
 80241e8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80241ec:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80241f0:	e03a      	b.n	8024268 <_printf_i+0xa8>
 80241f2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80241f6:	2b15      	cmp	r3, #21
 80241f8:	d8f6      	bhi.n	80241e8 <_printf_i+0x28>
 80241fa:	a101      	add	r1, pc, #4	@ (adr r1, 8024200 <_printf_i+0x40>)
 80241fc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8024200:	08024259 	.word	0x08024259
 8024204:	0802426d 	.word	0x0802426d
 8024208:	080241e9 	.word	0x080241e9
 802420c:	080241e9 	.word	0x080241e9
 8024210:	080241e9 	.word	0x080241e9
 8024214:	080241e9 	.word	0x080241e9
 8024218:	0802426d 	.word	0x0802426d
 802421c:	080241e9 	.word	0x080241e9
 8024220:	080241e9 	.word	0x080241e9
 8024224:	080241e9 	.word	0x080241e9
 8024228:	080241e9 	.word	0x080241e9
 802422c:	0802436b 	.word	0x0802436b
 8024230:	08024297 	.word	0x08024297
 8024234:	08024325 	.word	0x08024325
 8024238:	080241e9 	.word	0x080241e9
 802423c:	080241e9 	.word	0x080241e9
 8024240:	0802438d 	.word	0x0802438d
 8024244:	080241e9 	.word	0x080241e9
 8024248:	08024297 	.word	0x08024297
 802424c:	080241e9 	.word	0x080241e9
 8024250:	080241e9 	.word	0x080241e9
 8024254:	0802432d 	.word	0x0802432d
 8024258:	6833      	ldr	r3, [r6, #0]
 802425a:	1d1a      	adds	r2, r3, #4
 802425c:	681b      	ldr	r3, [r3, #0]
 802425e:	6032      	str	r2, [r6, #0]
 8024260:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8024264:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8024268:	2301      	movs	r3, #1
 802426a:	e09c      	b.n	80243a6 <_printf_i+0x1e6>
 802426c:	6833      	ldr	r3, [r6, #0]
 802426e:	6820      	ldr	r0, [r4, #0]
 8024270:	1d19      	adds	r1, r3, #4
 8024272:	6031      	str	r1, [r6, #0]
 8024274:	0606      	lsls	r6, r0, #24
 8024276:	d501      	bpl.n	802427c <_printf_i+0xbc>
 8024278:	681d      	ldr	r5, [r3, #0]
 802427a:	e003      	b.n	8024284 <_printf_i+0xc4>
 802427c:	0645      	lsls	r5, r0, #25
 802427e:	d5fb      	bpl.n	8024278 <_printf_i+0xb8>
 8024280:	f9b3 5000 	ldrsh.w	r5, [r3]
 8024284:	2d00      	cmp	r5, #0
 8024286:	da03      	bge.n	8024290 <_printf_i+0xd0>
 8024288:	232d      	movs	r3, #45	@ 0x2d
 802428a:	426d      	negs	r5, r5
 802428c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8024290:	4858      	ldr	r0, [pc, #352]	@ (80243f4 <_printf_i+0x234>)
 8024292:	230a      	movs	r3, #10
 8024294:	e011      	b.n	80242ba <_printf_i+0xfa>
 8024296:	6821      	ldr	r1, [r4, #0]
 8024298:	6833      	ldr	r3, [r6, #0]
 802429a:	0608      	lsls	r0, r1, #24
 802429c:	f853 5b04 	ldr.w	r5, [r3], #4
 80242a0:	d402      	bmi.n	80242a8 <_printf_i+0xe8>
 80242a2:	0649      	lsls	r1, r1, #25
 80242a4:	bf48      	it	mi
 80242a6:	b2ad      	uxthmi	r5, r5
 80242a8:	2f6f      	cmp	r7, #111	@ 0x6f
 80242aa:	4852      	ldr	r0, [pc, #328]	@ (80243f4 <_printf_i+0x234>)
 80242ac:	6033      	str	r3, [r6, #0]
 80242ae:	bf14      	ite	ne
 80242b0:	230a      	movne	r3, #10
 80242b2:	2308      	moveq	r3, #8
 80242b4:	2100      	movs	r1, #0
 80242b6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80242ba:	6866      	ldr	r6, [r4, #4]
 80242bc:	60a6      	str	r6, [r4, #8]
 80242be:	2e00      	cmp	r6, #0
 80242c0:	db05      	blt.n	80242ce <_printf_i+0x10e>
 80242c2:	6821      	ldr	r1, [r4, #0]
 80242c4:	432e      	orrs	r6, r5
 80242c6:	f021 0104 	bic.w	r1, r1, #4
 80242ca:	6021      	str	r1, [r4, #0]
 80242cc:	d04b      	beq.n	8024366 <_printf_i+0x1a6>
 80242ce:	4616      	mov	r6, r2
 80242d0:	fbb5 f1f3 	udiv	r1, r5, r3
 80242d4:	fb03 5711 	mls	r7, r3, r1, r5
 80242d8:	5dc7      	ldrb	r7, [r0, r7]
 80242da:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80242de:	462f      	mov	r7, r5
 80242e0:	42bb      	cmp	r3, r7
 80242e2:	460d      	mov	r5, r1
 80242e4:	d9f4      	bls.n	80242d0 <_printf_i+0x110>
 80242e6:	2b08      	cmp	r3, #8
 80242e8:	d10b      	bne.n	8024302 <_printf_i+0x142>
 80242ea:	6823      	ldr	r3, [r4, #0]
 80242ec:	07df      	lsls	r7, r3, #31
 80242ee:	d508      	bpl.n	8024302 <_printf_i+0x142>
 80242f0:	6923      	ldr	r3, [r4, #16]
 80242f2:	6861      	ldr	r1, [r4, #4]
 80242f4:	4299      	cmp	r1, r3
 80242f6:	bfde      	ittt	le
 80242f8:	2330      	movle	r3, #48	@ 0x30
 80242fa:	f806 3c01 	strble.w	r3, [r6, #-1]
 80242fe:	f106 36ff 	addle.w	r6, r6, #4294967295
 8024302:	1b92      	subs	r2, r2, r6
 8024304:	6122      	str	r2, [r4, #16]
 8024306:	f8cd a000 	str.w	sl, [sp]
 802430a:	464b      	mov	r3, r9
 802430c:	aa03      	add	r2, sp, #12
 802430e:	4621      	mov	r1, r4
 8024310:	4640      	mov	r0, r8
 8024312:	f7ff fee7 	bl	80240e4 <_printf_common>
 8024316:	3001      	adds	r0, #1
 8024318:	d14a      	bne.n	80243b0 <_printf_i+0x1f0>
 802431a:	f04f 30ff 	mov.w	r0, #4294967295
 802431e:	b004      	add	sp, #16
 8024320:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024324:	6823      	ldr	r3, [r4, #0]
 8024326:	f043 0320 	orr.w	r3, r3, #32
 802432a:	6023      	str	r3, [r4, #0]
 802432c:	4832      	ldr	r0, [pc, #200]	@ (80243f8 <_printf_i+0x238>)
 802432e:	2778      	movs	r7, #120	@ 0x78
 8024330:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8024334:	6823      	ldr	r3, [r4, #0]
 8024336:	6831      	ldr	r1, [r6, #0]
 8024338:	061f      	lsls	r7, r3, #24
 802433a:	f851 5b04 	ldr.w	r5, [r1], #4
 802433e:	d402      	bmi.n	8024346 <_printf_i+0x186>
 8024340:	065f      	lsls	r7, r3, #25
 8024342:	bf48      	it	mi
 8024344:	b2ad      	uxthmi	r5, r5
 8024346:	6031      	str	r1, [r6, #0]
 8024348:	07d9      	lsls	r1, r3, #31
 802434a:	bf44      	itt	mi
 802434c:	f043 0320 	orrmi.w	r3, r3, #32
 8024350:	6023      	strmi	r3, [r4, #0]
 8024352:	b11d      	cbz	r5, 802435c <_printf_i+0x19c>
 8024354:	2310      	movs	r3, #16
 8024356:	e7ad      	b.n	80242b4 <_printf_i+0xf4>
 8024358:	4826      	ldr	r0, [pc, #152]	@ (80243f4 <_printf_i+0x234>)
 802435a:	e7e9      	b.n	8024330 <_printf_i+0x170>
 802435c:	6823      	ldr	r3, [r4, #0]
 802435e:	f023 0320 	bic.w	r3, r3, #32
 8024362:	6023      	str	r3, [r4, #0]
 8024364:	e7f6      	b.n	8024354 <_printf_i+0x194>
 8024366:	4616      	mov	r6, r2
 8024368:	e7bd      	b.n	80242e6 <_printf_i+0x126>
 802436a:	6833      	ldr	r3, [r6, #0]
 802436c:	6825      	ldr	r5, [r4, #0]
 802436e:	6961      	ldr	r1, [r4, #20]
 8024370:	1d18      	adds	r0, r3, #4
 8024372:	6030      	str	r0, [r6, #0]
 8024374:	062e      	lsls	r6, r5, #24
 8024376:	681b      	ldr	r3, [r3, #0]
 8024378:	d501      	bpl.n	802437e <_printf_i+0x1be>
 802437a:	6019      	str	r1, [r3, #0]
 802437c:	e002      	b.n	8024384 <_printf_i+0x1c4>
 802437e:	0668      	lsls	r0, r5, #25
 8024380:	d5fb      	bpl.n	802437a <_printf_i+0x1ba>
 8024382:	8019      	strh	r1, [r3, #0]
 8024384:	2300      	movs	r3, #0
 8024386:	6123      	str	r3, [r4, #16]
 8024388:	4616      	mov	r6, r2
 802438a:	e7bc      	b.n	8024306 <_printf_i+0x146>
 802438c:	6833      	ldr	r3, [r6, #0]
 802438e:	1d1a      	adds	r2, r3, #4
 8024390:	6032      	str	r2, [r6, #0]
 8024392:	681e      	ldr	r6, [r3, #0]
 8024394:	6862      	ldr	r2, [r4, #4]
 8024396:	2100      	movs	r1, #0
 8024398:	4630      	mov	r0, r6
 802439a:	f7db ff31 	bl	8000200 <memchr>
 802439e:	b108      	cbz	r0, 80243a4 <_printf_i+0x1e4>
 80243a0:	1b80      	subs	r0, r0, r6
 80243a2:	6060      	str	r0, [r4, #4]
 80243a4:	6863      	ldr	r3, [r4, #4]
 80243a6:	6123      	str	r3, [r4, #16]
 80243a8:	2300      	movs	r3, #0
 80243aa:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80243ae:	e7aa      	b.n	8024306 <_printf_i+0x146>
 80243b0:	6923      	ldr	r3, [r4, #16]
 80243b2:	4632      	mov	r2, r6
 80243b4:	4649      	mov	r1, r9
 80243b6:	4640      	mov	r0, r8
 80243b8:	47d0      	blx	sl
 80243ba:	3001      	adds	r0, #1
 80243bc:	d0ad      	beq.n	802431a <_printf_i+0x15a>
 80243be:	6823      	ldr	r3, [r4, #0]
 80243c0:	079b      	lsls	r3, r3, #30
 80243c2:	d413      	bmi.n	80243ec <_printf_i+0x22c>
 80243c4:	68e0      	ldr	r0, [r4, #12]
 80243c6:	9b03      	ldr	r3, [sp, #12]
 80243c8:	4298      	cmp	r0, r3
 80243ca:	bfb8      	it	lt
 80243cc:	4618      	movlt	r0, r3
 80243ce:	e7a6      	b.n	802431e <_printf_i+0x15e>
 80243d0:	2301      	movs	r3, #1
 80243d2:	4632      	mov	r2, r6
 80243d4:	4649      	mov	r1, r9
 80243d6:	4640      	mov	r0, r8
 80243d8:	47d0      	blx	sl
 80243da:	3001      	adds	r0, #1
 80243dc:	d09d      	beq.n	802431a <_printf_i+0x15a>
 80243de:	3501      	adds	r5, #1
 80243e0:	68e3      	ldr	r3, [r4, #12]
 80243e2:	9903      	ldr	r1, [sp, #12]
 80243e4:	1a5b      	subs	r3, r3, r1
 80243e6:	42ab      	cmp	r3, r5
 80243e8:	dcf2      	bgt.n	80243d0 <_printf_i+0x210>
 80243ea:	e7eb      	b.n	80243c4 <_printf_i+0x204>
 80243ec:	2500      	movs	r5, #0
 80243ee:	f104 0619 	add.w	r6, r4, #25
 80243f2:	e7f5      	b.n	80243e0 <_printf_i+0x220>
 80243f4:	080253e2 	.word	0x080253e2
 80243f8:	080253f3 	.word	0x080253f3

080243fc <__sflush_r>:
 80243fc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8024400:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024404:	0716      	lsls	r6, r2, #28
 8024406:	4605      	mov	r5, r0
 8024408:	460c      	mov	r4, r1
 802440a:	d454      	bmi.n	80244b6 <__sflush_r+0xba>
 802440c:	684b      	ldr	r3, [r1, #4]
 802440e:	2b00      	cmp	r3, #0
 8024410:	dc02      	bgt.n	8024418 <__sflush_r+0x1c>
 8024412:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8024414:	2b00      	cmp	r3, #0
 8024416:	dd48      	ble.n	80244aa <__sflush_r+0xae>
 8024418:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802441a:	2e00      	cmp	r6, #0
 802441c:	d045      	beq.n	80244aa <__sflush_r+0xae>
 802441e:	2300      	movs	r3, #0
 8024420:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8024424:	682f      	ldr	r7, [r5, #0]
 8024426:	6a21      	ldr	r1, [r4, #32]
 8024428:	602b      	str	r3, [r5, #0]
 802442a:	d030      	beq.n	802448e <__sflush_r+0x92>
 802442c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802442e:	89a3      	ldrh	r3, [r4, #12]
 8024430:	0759      	lsls	r1, r3, #29
 8024432:	d505      	bpl.n	8024440 <__sflush_r+0x44>
 8024434:	6863      	ldr	r3, [r4, #4]
 8024436:	1ad2      	subs	r2, r2, r3
 8024438:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802443a:	b10b      	cbz	r3, 8024440 <__sflush_r+0x44>
 802443c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802443e:	1ad2      	subs	r2, r2, r3
 8024440:	2300      	movs	r3, #0
 8024442:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8024444:	6a21      	ldr	r1, [r4, #32]
 8024446:	4628      	mov	r0, r5
 8024448:	47b0      	blx	r6
 802444a:	1c43      	adds	r3, r0, #1
 802444c:	89a3      	ldrh	r3, [r4, #12]
 802444e:	d106      	bne.n	802445e <__sflush_r+0x62>
 8024450:	6829      	ldr	r1, [r5, #0]
 8024452:	291d      	cmp	r1, #29
 8024454:	d82b      	bhi.n	80244ae <__sflush_r+0xb2>
 8024456:	4a2a      	ldr	r2, [pc, #168]	@ (8024500 <__sflush_r+0x104>)
 8024458:	40ca      	lsrs	r2, r1
 802445a:	07d6      	lsls	r6, r2, #31
 802445c:	d527      	bpl.n	80244ae <__sflush_r+0xb2>
 802445e:	2200      	movs	r2, #0
 8024460:	6062      	str	r2, [r4, #4]
 8024462:	04d9      	lsls	r1, r3, #19
 8024464:	6922      	ldr	r2, [r4, #16]
 8024466:	6022      	str	r2, [r4, #0]
 8024468:	d504      	bpl.n	8024474 <__sflush_r+0x78>
 802446a:	1c42      	adds	r2, r0, #1
 802446c:	d101      	bne.n	8024472 <__sflush_r+0x76>
 802446e:	682b      	ldr	r3, [r5, #0]
 8024470:	b903      	cbnz	r3, 8024474 <__sflush_r+0x78>
 8024472:	6560      	str	r0, [r4, #84]	@ 0x54
 8024474:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8024476:	602f      	str	r7, [r5, #0]
 8024478:	b1b9      	cbz	r1, 80244aa <__sflush_r+0xae>
 802447a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802447e:	4299      	cmp	r1, r3
 8024480:	d002      	beq.n	8024488 <__sflush_r+0x8c>
 8024482:	4628      	mov	r0, r5
 8024484:	f7ff fb4a 	bl	8023b1c <_free_r>
 8024488:	2300      	movs	r3, #0
 802448a:	6363      	str	r3, [r4, #52]	@ 0x34
 802448c:	e00d      	b.n	80244aa <__sflush_r+0xae>
 802448e:	2301      	movs	r3, #1
 8024490:	4628      	mov	r0, r5
 8024492:	47b0      	blx	r6
 8024494:	4602      	mov	r2, r0
 8024496:	1c50      	adds	r0, r2, #1
 8024498:	d1c9      	bne.n	802442e <__sflush_r+0x32>
 802449a:	682b      	ldr	r3, [r5, #0]
 802449c:	2b00      	cmp	r3, #0
 802449e:	d0c6      	beq.n	802442e <__sflush_r+0x32>
 80244a0:	2b1d      	cmp	r3, #29
 80244a2:	d001      	beq.n	80244a8 <__sflush_r+0xac>
 80244a4:	2b16      	cmp	r3, #22
 80244a6:	d11e      	bne.n	80244e6 <__sflush_r+0xea>
 80244a8:	602f      	str	r7, [r5, #0]
 80244aa:	2000      	movs	r0, #0
 80244ac:	e022      	b.n	80244f4 <__sflush_r+0xf8>
 80244ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80244b2:	b21b      	sxth	r3, r3
 80244b4:	e01b      	b.n	80244ee <__sflush_r+0xf2>
 80244b6:	690f      	ldr	r7, [r1, #16]
 80244b8:	2f00      	cmp	r7, #0
 80244ba:	d0f6      	beq.n	80244aa <__sflush_r+0xae>
 80244bc:	0793      	lsls	r3, r2, #30
 80244be:	680e      	ldr	r6, [r1, #0]
 80244c0:	bf08      	it	eq
 80244c2:	694b      	ldreq	r3, [r1, #20]
 80244c4:	600f      	str	r7, [r1, #0]
 80244c6:	bf18      	it	ne
 80244c8:	2300      	movne	r3, #0
 80244ca:	eba6 0807 	sub.w	r8, r6, r7
 80244ce:	608b      	str	r3, [r1, #8]
 80244d0:	f1b8 0f00 	cmp.w	r8, #0
 80244d4:	dde9      	ble.n	80244aa <__sflush_r+0xae>
 80244d6:	6a21      	ldr	r1, [r4, #32]
 80244d8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80244da:	4643      	mov	r3, r8
 80244dc:	463a      	mov	r2, r7
 80244de:	4628      	mov	r0, r5
 80244e0:	47b0      	blx	r6
 80244e2:	2800      	cmp	r0, #0
 80244e4:	dc08      	bgt.n	80244f8 <__sflush_r+0xfc>
 80244e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80244ea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80244ee:	81a3      	strh	r3, [r4, #12]
 80244f0:	f04f 30ff 	mov.w	r0, #4294967295
 80244f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80244f8:	4407      	add	r7, r0
 80244fa:	eba8 0800 	sub.w	r8, r8, r0
 80244fe:	e7e7      	b.n	80244d0 <__sflush_r+0xd4>
 8024500:	20400001 	.word	0x20400001

08024504 <_fflush_r>:
 8024504:	b538      	push	{r3, r4, r5, lr}
 8024506:	690b      	ldr	r3, [r1, #16]
 8024508:	4605      	mov	r5, r0
 802450a:	460c      	mov	r4, r1
 802450c:	b913      	cbnz	r3, 8024514 <_fflush_r+0x10>
 802450e:	2500      	movs	r5, #0
 8024510:	4628      	mov	r0, r5
 8024512:	bd38      	pop	{r3, r4, r5, pc}
 8024514:	b118      	cbz	r0, 802451e <_fflush_r+0x1a>
 8024516:	6a03      	ldr	r3, [r0, #32]
 8024518:	b90b      	cbnz	r3, 802451e <_fflush_r+0x1a>
 802451a:	f7ff f8a5 	bl	8023668 <__sinit>
 802451e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024522:	2b00      	cmp	r3, #0
 8024524:	d0f3      	beq.n	802450e <_fflush_r+0xa>
 8024526:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8024528:	07d0      	lsls	r0, r2, #31
 802452a:	d404      	bmi.n	8024536 <_fflush_r+0x32>
 802452c:	0599      	lsls	r1, r3, #22
 802452e:	d402      	bmi.n	8024536 <_fflush_r+0x32>
 8024530:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8024532:	f7ff fa86 	bl	8023a42 <__retarget_lock_acquire_recursive>
 8024536:	4628      	mov	r0, r5
 8024538:	4621      	mov	r1, r4
 802453a:	f7ff ff5f 	bl	80243fc <__sflush_r>
 802453e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8024540:	07da      	lsls	r2, r3, #31
 8024542:	4605      	mov	r5, r0
 8024544:	d4e4      	bmi.n	8024510 <_fflush_r+0xc>
 8024546:	89a3      	ldrh	r3, [r4, #12]
 8024548:	059b      	lsls	r3, r3, #22
 802454a:	d4e1      	bmi.n	8024510 <_fflush_r+0xc>
 802454c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802454e:	f7ff fa79 	bl	8023a44 <__retarget_lock_release_recursive>
 8024552:	e7dd      	b.n	8024510 <_fflush_r+0xc>

08024554 <__swbuf_r>:
 8024554:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024556:	460e      	mov	r6, r1
 8024558:	4614      	mov	r4, r2
 802455a:	4605      	mov	r5, r0
 802455c:	b118      	cbz	r0, 8024566 <__swbuf_r+0x12>
 802455e:	6a03      	ldr	r3, [r0, #32]
 8024560:	b90b      	cbnz	r3, 8024566 <__swbuf_r+0x12>
 8024562:	f7ff f881 	bl	8023668 <__sinit>
 8024566:	69a3      	ldr	r3, [r4, #24]
 8024568:	60a3      	str	r3, [r4, #8]
 802456a:	89a3      	ldrh	r3, [r4, #12]
 802456c:	071a      	lsls	r2, r3, #28
 802456e:	d501      	bpl.n	8024574 <__swbuf_r+0x20>
 8024570:	6923      	ldr	r3, [r4, #16]
 8024572:	b943      	cbnz	r3, 8024586 <__swbuf_r+0x32>
 8024574:	4621      	mov	r1, r4
 8024576:	4628      	mov	r0, r5
 8024578:	f000 f82a 	bl	80245d0 <__swsetup_r>
 802457c:	b118      	cbz	r0, 8024586 <__swbuf_r+0x32>
 802457e:	f04f 37ff 	mov.w	r7, #4294967295
 8024582:	4638      	mov	r0, r7
 8024584:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024586:	6823      	ldr	r3, [r4, #0]
 8024588:	6922      	ldr	r2, [r4, #16]
 802458a:	1a98      	subs	r0, r3, r2
 802458c:	6963      	ldr	r3, [r4, #20]
 802458e:	b2f6      	uxtb	r6, r6
 8024590:	4283      	cmp	r3, r0
 8024592:	4637      	mov	r7, r6
 8024594:	dc05      	bgt.n	80245a2 <__swbuf_r+0x4e>
 8024596:	4621      	mov	r1, r4
 8024598:	4628      	mov	r0, r5
 802459a:	f7ff ffb3 	bl	8024504 <_fflush_r>
 802459e:	2800      	cmp	r0, #0
 80245a0:	d1ed      	bne.n	802457e <__swbuf_r+0x2a>
 80245a2:	68a3      	ldr	r3, [r4, #8]
 80245a4:	3b01      	subs	r3, #1
 80245a6:	60a3      	str	r3, [r4, #8]
 80245a8:	6823      	ldr	r3, [r4, #0]
 80245aa:	1c5a      	adds	r2, r3, #1
 80245ac:	6022      	str	r2, [r4, #0]
 80245ae:	701e      	strb	r6, [r3, #0]
 80245b0:	6962      	ldr	r2, [r4, #20]
 80245b2:	1c43      	adds	r3, r0, #1
 80245b4:	429a      	cmp	r2, r3
 80245b6:	d004      	beq.n	80245c2 <__swbuf_r+0x6e>
 80245b8:	89a3      	ldrh	r3, [r4, #12]
 80245ba:	07db      	lsls	r3, r3, #31
 80245bc:	d5e1      	bpl.n	8024582 <__swbuf_r+0x2e>
 80245be:	2e0a      	cmp	r6, #10
 80245c0:	d1df      	bne.n	8024582 <__swbuf_r+0x2e>
 80245c2:	4621      	mov	r1, r4
 80245c4:	4628      	mov	r0, r5
 80245c6:	f7ff ff9d 	bl	8024504 <_fflush_r>
 80245ca:	2800      	cmp	r0, #0
 80245cc:	d0d9      	beq.n	8024582 <__swbuf_r+0x2e>
 80245ce:	e7d6      	b.n	802457e <__swbuf_r+0x2a>

080245d0 <__swsetup_r>:
 80245d0:	b538      	push	{r3, r4, r5, lr}
 80245d2:	4b29      	ldr	r3, [pc, #164]	@ (8024678 <__swsetup_r+0xa8>)
 80245d4:	4605      	mov	r5, r0
 80245d6:	6818      	ldr	r0, [r3, #0]
 80245d8:	460c      	mov	r4, r1
 80245da:	b118      	cbz	r0, 80245e4 <__swsetup_r+0x14>
 80245dc:	6a03      	ldr	r3, [r0, #32]
 80245de:	b90b      	cbnz	r3, 80245e4 <__swsetup_r+0x14>
 80245e0:	f7ff f842 	bl	8023668 <__sinit>
 80245e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80245e8:	0719      	lsls	r1, r3, #28
 80245ea:	d422      	bmi.n	8024632 <__swsetup_r+0x62>
 80245ec:	06da      	lsls	r2, r3, #27
 80245ee:	d407      	bmi.n	8024600 <__swsetup_r+0x30>
 80245f0:	2209      	movs	r2, #9
 80245f2:	602a      	str	r2, [r5, #0]
 80245f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80245f8:	81a3      	strh	r3, [r4, #12]
 80245fa:	f04f 30ff 	mov.w	r0, #4294967295
 80245fe:	e033      	b.n	8024668 <__swsetup_r+0x98>
 8024600:	0758      	lsls	r0, r3, #29
 8024602:	d512      	bpl.n	802462a <__swsetup_r+0x5a>
 8024604:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8024606:	b141      	cbz	r1, 802461a <__swsetup_r+0x4a>
 8024608:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802460c:	4299      	cmp	r1, r3
 802460e:	d002      	beq.n	8024616 <__swsetup_r+0x46>
 8024610:	4628      	mov	r0, r5
 8024612:	f7ff fa83 	bl	8023b1c <_free_r>
 8024616:	2300      	movs	r3, #0
 8024618:	6363      	str	r3, [r4, #52]	@ 0x34
 802461a:	89a3      	ldrh	r3, [r4, #12]
 802461c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8024620:	81a3      	strh	r3, [r4, #12]
 8024622:	2300      	movs	r3, #0
 8024624:	6063      	str	r3, [r4, #4]
 8024626:	6923      	ldr	r3, [r4, #16]
 8024628:	6023      	str	r3, [r4, #0]
 802462a:	89a3      	ldrh	r3, [r4, #12]
 802462c:	f043 0308 	orr.w	r3, r3, #8
 8024630:	81a3      	strh	r3, [r4, #12]
 8024632:	6923      	ldr	r3, [r4, #16]
 8024634:	b94b      	cbnz	r3, 802464a <__swsetup_r+0x7a>
 8024636:	89a3      	ldrh	r3, [r4, #12]
 8024638:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802463c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8024640:	d003      	beq.n	802464a <__swsetup_r+0x7a>
 8024642:	4621      	mov	r1, r4
 8024644:	4628      	mov	r0, r5
 8024646:	f000 f887 	bl	8024758 <__smakebuf_r>
 802464a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802464e:	f013 0201 	ands.w	r2, r3, #1
 8024652:	d00a      	beq.n	802466a <__swsetup_r+0x9a>
 8024654:	2200      	movs	r2, #0
 8024656:	60a2      	str	r2, [r4, #8]
 8024658:	6962      	ldr	r2, [r4, #20]
 802465a:	4252      	negs	r2, r2
 802465c:	61a2      	str	r2, [r4, #24]
 802465e:	6922      	ldr	r2, [r4, #16]
 8024660:	b942      	cbnz	r2, 8024674 <__swsetup_r+0xa4>
 8024662:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8024666:	d1c5      	bne.n	80245f4 <__swsetup_r+0x24>
 8024668:	bd38      	pop	{r3, r4, r5, pc}
 802466a:	0799      	lsls	r1, r3, #30
 802466c:	bf58      	it	pl
 802466e:	6962      	ldrpl	r2, [r4, #20]
 8024670:	60a2      	str	r2, [r4, #8]
 8024672:	e7f4      	b.n	802465e <__swsetup_r+0x8e>
 8024674:	2000      	movs	r0, #0
 8024676:	e7f7      	b.n	8024668 <__swsetup_r+0x98>
 8024678:	20000220 	.word	0x20000220

0802467c <memmove>:
 802467c:	4288      	cmp	r0, r1
 802467e:	b510      	push	{r4, lr}
 8024680:	eb01 0402 	add.w	r4, r1, r2
 8024684:	d902      	bls.n	802468c <memmove+0x10>
 8024686:	4284      	cmp	r4, r0
 8024688:	4623      	mov	r3, r4
 802468a:	d807      	bhi.n	802469c <memmove+0x20>
 802468c:	1e43      	subs	r3, r0, #1
 802468e:	42a1      	cmp	r1, r4
 8024690:	d008      	beq.n	80246a4 <memmove+0x28>
 8024692:	f811 2b01 	ldrb.w	r2, [r1], #1
 8024696:	f803 2f01 	strb.w	r2, [r3, #1]!
 802469a:	e7f8      	b.n	802468e <memmove+0x12>
 802469c:	4402      	add	r2, r0
 802469e:	4601      	mov	r1, r0
 80246a0:	428a      	cmp	r2, r1
 80246a2:	d100      	bne.n	80246a6 <memmove+0x2a>
 80246a4:	bd10      	pop	{r4, pc}
 80246a6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80246aa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80246ae:	e7f7      	b.n	80246a0 <memmove+0x24>

080246b0 <_realloc_r>:
 80246b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80246b4:	4607      	mov	r7, r0
 80246b6:	4614      	mov	r4, r2
 80246b8:	460d      	mov	r5, r1
 80246ba:	b921      	cbnz	r1, 80246c6 <_realloc_r+0x16>
 80246bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80246c0:	4611      	mov	r1, r2
 80246c2:	f7fe beab 	b.w	802341c <_malloc_r>
 80246c6:	b92a      	cbnz	r2, 80246d4 <_realloc_r+0x24>
 80246c8:	f7ff fa28 	bl	8023b1c <_free_r>
 80246cc:	4625      	mov	r5, r4
 80246ce:	4628      	mov	r0, r5
 80246d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80246d4:	f000 f89e 	bl	8024814 <_malloc_usable_size_r>
 80246d8:	4284      	cmp	r4, r0
 80246da:	4606      	mov	r6, r0
 80246dc:	d802      	bhi.n	80246e4 <_realloc_r+0x34>
 80246de:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80246e2:	d8f4      	bhi.n	80246ce <_realloc_r+0x1e>
 80246e4:	4621      	mov	r1, r4
 80246e6:	4638      	mov	r0, r7
 80246e8:	f7fe fe98 	bl	802341c <_malloc_r>
 80246ec:	4680      	mov	r8, r0
 80246ee:	b908      	cbnz	r0, 80246f4 <_realloc_r+0x44>
 80246f0:	4645      	mov	r5, r8
 80246f2:	e7ec      	b.n	80246ce <_realloc_r+0x1e>
 80246f4:	42b4      	cmp	r4, r6
 80246f6:	4622      	mov	r2, r4
 80246f8:	4629      	mov	r1, r5
 80246fa:	bf28      	it	cs
 80246fc:	4632      	movcs	r2, r6
 80246fe:	f7ff f9a2 	bl	8023a46 <memcpy>
 8024702:	4629      	mov	r1, r5
 8024704:	4638      	mov	r0, r7
 8024706:	f7ff fa09 	bl	8023b1c <_free_r>
 802470a:	e7f1      	b.n	80246f0 <_realloc_r+0x40>

0802470c <__swhatbuf_r>:
 802470c:	b570      	push	{r4, r5, r6, lr}
 802470e:	460c      	mov	r4, r1
 8024710:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024714:	2900      	cmp	r1, #0
 8024716:	b096      	sub	sp, #88	@ 0x58
 8024718:	4615      	mov	r5, r2
 802471a:	461e      	mov	r6, r3
 802471c:	da0d      	bge.n	802473a <__swhatbuf_r+0x2e>
 802471e:	89a3      	ldrh	r3, [r4, #12]
 8024720:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8024724:	f04f 0100 	mov.w	r1, #0
 8024728:	bf14      	ite	ne
 802472a:	2340      	movne	r3, #64	@ 0x40
 802472c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8024730:	2000      	movs	r0, #0
 8024732:	6031      	str	r1, [r6, #0]
 8024734:	602b      	str	r3, [r5, #0]
 8024736:	b016      	add	sp, #88	@ 0x58
 8024738:	bd70      	pop	{r4, r5, r6, pc}
 802473a:	466a      	mov	r2, sp
 802473c:	f000 f848 	bl	80247d0 <_fstat_r>
 8024740:	2800      	cmp	r0, #0
 8024742:	dbec      	blt.n	802471e <__swhatbuf_r+0x12>
 8024744:	9901      	ldr	r1, [sp, #4]
 8024746:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802474a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802474e:	4259      	negs	r1, r3
 8024750:	4159      	adcs	r1, r3
 8024752:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8024756:	e7eb      	b.n	8024730 <__swhatbuf_r+0x24>

08024758 <__smakebuf_r>:
 8024758:	898b      	ldrh	r3, [r1, #12]
 802475a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802475c:	079d      	lsls	r5, r3, #30
 802475e:	4606      	mov	r6, r0
 8024760:	460c      	mov	r4, r1
 8024762:	d507      	bpl.n	8024774 <__smakebuf_r+0x1c>
 8024764:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8024768:	6023      	str	r3, [r4, #0]
 802476a:	6123      	str	r3, [r4, #16]
 802476c:	2301      	movs	r3, #1
 802476e:	6163      	str	r3, [r4, #20]
 8024770:	b003      	add	sp, #12
 8024772:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024774:	ab01      	add	r3, sp, #4
 8024776:	466a      	mov	r2, sp
 8024778:	f7ff ffc8 	bl	802470c <__swhatbuf_r>
 802477c:	9f00      	ldr	r7, [sp, #0]
 802477e:	4605      	mov	r5, r0
 8024780:	4639      	mov	r1, r7
 8024782:	4630      	mov	r0, r6
 8024784:	f7fe fe4a 	bl	802341c <_malloc_r>
 8024788:	b948      	cbnz	r0, 802479e <__smakebuf_r+0x46>
 802478a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802478e:	059a      	lsls	r2, r3, #22
 8024790:	d4ee      	bmi.n	8024770 <__smakebuf_r+0x18>
 8024792:	f023 0303 	bic.w	r3, r3, #3
 8024796:	f043 0302 	orr.w	r3, r3, #2
 802479a:	81a3      	strh	r3, [r4, #12]
 802479c:	e7e2      	b.n	8024764 <__smakebuf_r+0xc>
 802479e:	89a3      	ldrh	r3, [r4, #12]
 80247a0:	6020      	str	r0, [r4, #0]
 80247a2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80247a6:	81a3      	strh	r3, [r4, #12]
 80247a8:	9b01      	ldr	r3, [sp, #4]
 80247aa:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80247ae:	b15b      	cbz	r3, 80247c8 <__smakebuf_r+0x70>
 80247b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80247b4:	4630      	mov	r0, r6
 80247b6:	f000 f81d 	bl	80247f4 <_isatty_r>
 80247ba:	b128      	cbz	r0, 80247c8 <__smakebuf_r+0x70>
 80247bc:	89a3      	ldrh	r3, [r4, #12]
 80247be:	f023 0303 	bic.w	r3, r3, #3
 80247c2:	f043 0301 	orr.w	r3, r3, #1
 80247c6:	81a3      	strh	r3, [r4, #12]
 80247c8:	89a3      	ldrh	r3, [r4, #12]
 80247ca:	431d      	orrs	r5, r3
 80247cc:	81a5      	strh	r5, [r4, #12]
 80247ce:	e7cf      	b.n	8024770 <__smakebuf_r+0x18>

080247d0 <_fstat_r>:
 80247d0:	b538      	push	{r3, r4, r5, lr}
 80247d2:	4d07      	ldr	r5, [pc, #28]	@ (80247f0 <_fstat_r+0x20>)
 80247d4:	2300      	movs	r3, #0
 80247d6:	4604      	mov	r4, r0
 80247d8:	4608      	mov	r0, r1
 80247da:	4611      	mov	r1, r2
 80247dc:	602b      	str	r3, [r5, #0]
 80247de:	f7de fa38 	bl	8002c52 <_fstat>
 80247e2:	1c43      	adds	r3, r0, #1
 80247e4:	d102      	bne.n	80247ec <_fstat_r+0x1c>
 80247e6:	682b      	ldr	r3, [r5, #0]
 80247e8:	b103      	cbz	r3, 80247ec <_fstat_r+0x1c>
 80247ea:	6023      	str	r3, [r4, #0]
 80247ec:	bd38      	pop	{r3, r4, r5, pc}
 80247ee:	bf00      	nop
 80247f0:	20014be0 	.word	0x20014be0

080247f4 <_isatty_r>:
 80247f4:	b538      	push	{r3, r4, r5, lr}
 80247f6:	4d06      	ldr	r5, [pc, #24]	@ (8024810 <_isatty_r+0x1c>)
 80247f8:	2300      	movs	r3, #0
 80247fa:	4604      	mov	r4, r0
 80247fc:	4608      	mov	r0, r1
 80247fe:	602b      	str	r3, [r5, #0]
 8024800:	f7de fa2c 	bl	8002c5c <_isatty>
 8024804:	1c43      	adds	r3, r0, #1
 8024806:	d102      	bne.n	802480e <_isatty_r+0x1a>
 8024808:	682b      	ldr	r3, [r5, #0]
 802480a:	b103      	cbz	r3, 802480e <_isatty_r+0x1a>
 802480c:	6023      	str	r3, [r4, #0]
 802480e:	bd38      	pop	{r3, r4, r5, pc}
 8024810:	20014be0 	.word	0x20014be0

08024814 <_malloc_usable_size_r>:
 8024814:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024818:	1f18      	subs	r0, r3, #4
 802481a:	2b00      	cmp	r3, #0
 802481c:	bfbc      	itt	lt
 802481e:	580b      	ldrlt	r3, [r1, r0]
 8024820:	18c0      	addlt	r0, r0, r3
 8024822:	4770      	bx	lr

08024824 <_init>:
 8024824:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024826:	bf00      	nop
 8024828:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802482a:	bc08      	pop	{r3}
 802482c:	469e      	mov	lr, r3
 802482e:	4770      	bx	lr

08024830 <_fini>:
 8024830:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024832:	bf00      	nop
 8024834:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8024836:	bc08      	pop	{r3}
 8024838:	469e      	mov	lr, r3
 802483a:	4770      	bx	lr
