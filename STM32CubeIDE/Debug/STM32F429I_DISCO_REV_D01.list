
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00023bf8  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001cb8  08023da8  08023da8  00024da8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  08025a60  08025a60  00026a60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08025c08  08025c08  00026c08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08025c20  08025c20  00026c20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  08025c2e  08025c2e  00026c2e  2**0
                  ALLOC
  7 .ARM          00000008  08025c30  08025c30  00026c30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08025c38  08025c38  00027480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08025c38  08025c38  00026c38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08025c4c  08025c4c  00026c4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         0000027c  20000000  08025c54  00027000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000280  08025ed0  00027280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000380  08025fd0  00027380  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          000148bc  20000480  080260d0  00027480  2**2
                  ALLOC
 15 ._user_heap_stack 00001404  20014d3c  080260d0  00027d3c  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  00027480  2**0
                  CONTENTS, READONLY
 17 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00028000  2**2
                  ALLOC
 18 .debug_line   00052f02  00000000  00000000  000274b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000066  00000000  00000000  0007a3b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   000adda7  00000000  00000000  0007a418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00013ee4  00000000  00000000  001281bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000032b0  00000000  00000000  0013c0a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00115aed  00000000  00000000  0013f358  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000339d  00000000  00000000  00254e45  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001e58d  00000000  00000000  002581e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  00033e06  00000000  00000000  0027676f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000c2  00000000  00000000  002aa575  2**0
                  CONTENTS, READONLY
 28 .debug_frame  00009368  00000000  00000000  002aa638  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000480 	.word	0x20000480
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08023d90 	.word	0x08023d90

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000484 	.word	0x20000484
 80001ec:	08023d90 	.word	0x08023d90

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_ldivmod>:
 80002a0:	b97b      	cbnz	r3, 80002c2 <__aeabi_ldivmod+0x22>
 80002a2:	b972      	cbnz	r2, 80002c2 <__aeabi_ldivmod+0x22>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bfbe      	ittt	lt
 80002a8:	2000      	movlt	r0, #0
 80002aa:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 80002ae:	e006      	blt.n	80002be <__aeabi_ldivmod+0x1e>
 80002b0:	bf08      	it	eq
 80002b2:	2800      	cmpeq	r0, #0
 80002b4:	bf1c      	itt	ne
 80002b6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002ba:	f04f 30ff 	movne.w	r0, #4294967295
 80002be:	f000 b9d3 	b.w	8000668 <__aeabi_idiv0>
 80002c2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002c6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ca:	2900      	cmp	r1, #0
 80002cc:	db09      	blt.n	80002e2 <__aeabi_ldivmod+0x42>
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	db1a      	blt.n	8000308 <__aeabi_ldivmod+0x68>
 80002d2:	f000 f84d 	bl	8000370 <__udivmoddi4>
 80002d6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002da:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002de:	b004      	add	sp, #16
 80002e0:	4770      	bx	lr
 80002e2:	4240      	negs	r0, r0
 80002e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	db1b      	blt.n	8000324 <__aeabi_ldivmod+0x84>
 80002ec:	f000 f840 	bl	8000370 <__udivmoddi4>
 80002f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002f8:	b004      	add	sp, #16
 80002fa:	4240      	negs	r0, r0
 80002fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000300:	4252      	negs	r2, r2
 8000302:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000306:	4770      	bx	lr
 8000308:	4252      	negs	r2, r2
 800030a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800030e:	f000 f82f 	bl	8000370 <__udivmoddi4>
 8000312:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000316:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800031a:	b004      	add	sp, #16
 800031c:	4240      	negs	r0, r0
 800031e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000322:	4770      	bx	lr
 8000324:	4252      	negs	r2, r2
 8000326:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032a:	f000 f821 	bl	8000370 <__udivmoddi4>
 800032e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000332:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000336:	b004      	add	sp, #16
 8000338:	4252      	negs	r2, r2
 800033a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800033e:	4770      	bx	lr

08000340 <__aeabi_uldivmod>:
 8000340:	b953      	cbnz	r3, 8000358 <__aeabi_uldivmod+0x18>
 8000342:	b94a      	cbnz	r2, 8000358 <__aeabi_uldivmod+0x18>
 8000344:	2900      	cmp	r1, #0
 8000346:	bf08      	it	eq
 8000348:	2800      	cmpeq	r0, #0
 800034a:	bf1c      	itt	ne
 800034c:	f04f 31ff 	movne.w	r1, #4294967295
 8000350:	f04f 30ff 	movne.w	r0, #4294967295
 8000354:	f000 b988 	b.w	8000668 <__aeabi_idiv0>
 8000358:	f1ad 0c08 	sub.w	ip, sp, #8
 800035c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000360:	f000 f806 	bl	8000370 <__udivmoddi4>
 8000364:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000368:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800036c:	b004      	add	sp, #16
 800036e:	4770      	bx	lr

08000370 <__udivmoddi4>:
 8000370:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000374:	9d08      	ldr	r5, [sp, #32]
 8000376:	468e      	mov	lr, r1
 8000378:	4604      	mov	r4, r0
 800037a:	4688      	mov	r8, r1
 800037c:	2b00      	cmp	r3, #0
 800037e:	d14a      	bne.n	8000416 <__udivmoddi4+0xa6>
 8000380:	428a      	cmp	r2, r1
 8000382:	4617      	mov	r7, r2
 8000384:	d962      	bls.n	800044c <__udivmoddi4+0xdc>
 8000386:	fab2 f682 	clz	r6, r2
 800038a:	b14e      	cbz	r6, 80003a0 <__udivmoddi4+0x30>
 800038c:	f1c6 0320 	rsb	r3, r6, #32
 8000390:	fa01 f806 	lsl.w	r8, r1, r6
 8000394:	fa20 f303 	lsr.w	r3, r0, r3
 8000398:	40b7      	lsls	r7, r6
 800039a:	ea43 0808 	orr.w	r8, r3, r8
 800039e:	40b4      	lsls	r4, r6
 80003a0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003a4:	fa1f fc87 	uxth.w	ip, r7
 80003a8:	fbb8 f1fe 	udiv	r1, r8, lr
 80003ac:	0c23      	lsrs	r3, r4, #16
 80003ae:	fb0e 8811 	mls	r8, lr, r1, r8
 80003b2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003b6:	fb01 f20c 	mul.w	r2, r1, ip
 80003ba:	429a      	cmp	r2, r3
 80003bc:	d909      	bls.n	80003d2 <__udivmoddi4+0x62>
 80003be:	18fb      	adds	r3, r7, r3
 80003c0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003c4:	f080 80ea 	bcs.w	800059c <__udivmoddi4+0x22c>
 80003c8:	429a      	cmp	r2, r3
 80003ca:	f240 80e7 	bls.w	800059c <__udivmoddi4+0x22c>
 80003ce:	3902      	subs	r1, #2
 80003d0:	443b      	add	r3, r7
 80003d2:	1a9a      	subs	r2, r3, r2
 80003d4:	b2a3      	uxth	r3, r4
 80003d6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003da:	fb0e 2210 	mls	r2, lr, r0, r2
 80003de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003e2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003e6:	459c      	cmp	ip, r3
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x8e>
 80003ea:	18fb      	adds	r3, r7, r3
 80003ec:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f0:	f080 80d6 	bcs.w	80005a0 <__udivmoddi4+0x230>
 80003f4:	459c      	cmp	ip, r3
 80003f6:	f240 80d3 	bls.w	80005a0 <__udivmoddi4+0x230>
 80003fa:	443b      	add	r3, r7
 80003fc:	3802      	subs	r0, #2
 80003fe:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000402:	eba3 030c 	sub.w	r3, r3, ip
 8000406:	2100      	movs	r1, #0
 8000408:	b11d      	cbz	r5, 8000412 <__udivmoddi4+0xa2>
 800040a:	40f3      	lsrs	r3, r6
 800040c:	2200      	movs	r2, #0
 800040e:	e9c5 3200 	strd	r3, r2, [r5]
 8000412:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000416:	428b      	cmp	r3, r1
 8000418:	d905      	bls.n	8000426 <__udivmoddi4+0xb6>
 800041a:	b10d      	cbz	r5, 8000420 <__udivmoddi4+0xb0>
 800041c:	e9c5 0100 	strd	r0, r1, [r5]
 8000420:	2100      	movs	r1, #0
 8000422:	4608      	mov	r0, r1
 8000424:	e7f5      	b.n	8000412 <__udivmoddi4+0xa2>
 8000426:	fab3 f183 	clz	r1, r3
 800042a:	2900      	cmp	r1, #0
 800042c:	d146      	bne.n	80004bc <__udivmoddi4+0x14c>
 800042e:	4573      	cmp	r3, lr
 8000430:	d302      	bcc.n	8000438 <__udivmoddi4+0xc8>
 8000432:	4282      	cmp	r2, r0
 8000434:	f200 8105 	bhi.w	8000642 <__udivmoddi4+0x2d2>
 8000438:	1a84      	subs	r4, r0, r2
 800043a:	eb6e 0203 	sbc.w	r2, lr, r3
 800043e:	2001      	movs	r0, #1
 8000440:	4690      	mov	r8, r2
 8000442:	2d00      	cmp	r5, #0
 8000444:	d0e5      	beq.n	8000412 <__udivmoddi4+0xa2>
 8000446:	e9c5 4800 	strd	r4, r8, [r5]
 800044a:	e7e2      	b.n	8000412 <__udivmoddi4+0xa2>
 800044c:	2a00      	cmp	r2, #0
 800044e:	f000 8090 	beq.w	8000572 <__udivmoddi4+0x202>
 8000452:	fab2 f682 	clz	r6, r2
 8000456:	2e00      	cmp	r6, #0
 8000458:	f040 80a4 	bne.w	80005a4 <__udivmoddi4+0x234>
 800045c:	1a8a      	subs	r2, r1, r2
 800045e:	0c03      	lsrs	r3, r0, #16
 8000460:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000464:	b280      	uxth	r0, r0
 8000466:	b2bc      	uxth	r4, r7
 8000468:	2101      	movs	r1, #1
 800046a:	fbb2 fcfe 	udiv	ip, r2, lr
 800046e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000472:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000476:	fb04 f20c 	mul.w	r2, r4, ip
 800047a:	429a      	cmp	r2, r3
 800047c:	d907      	bls.n	800048e <__udivmoddi4+0x11e>
 800047e:	18fb      	adds	r3, r7, r3
 8000480:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000484:	d202      	bcs.n	800048c <__udivmoddi4+0x11c>
 8000486:	429a      	cmp	r2, r3
 8000488:	f200 80e0 	bhi.w	800064c <__udivmoddi4+0x2dc>
 800048c:	46c4      	mov	ip, r8
 800048e:	1a9b      	subs	r3, r3, r2
 8000490:	fbb3 f2fe 	udiv	r2, r3, lr
 8000494:	fb0e 3312 	mls	r3, lr, r2, r3
 8000498:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800049c:	fb02 f404 	mul.w	r4, r2, r4
 80004a0:	429c      	cmp	r4, r3
 80004a2:	d907      	bls.n	80004b4 <__udivmoddi4+0x144>
 80004a4:	18fb      	adds	r3, r7, r3
 80004a6:	f102 30ff 	add.w	r0, r2, #4294967295
 80004aa:	d202      	bcs.n	80004b2 <__udivmoddi4+0x142>
 80004ac:	429c      	cmp	r4, r3
 80004ae:	f200 80ca 	bhi.w	8000646 <__udivmoddi4+0x2d6>
 80004b2:	4602      	mov	r2, r0
 80004b4:	1b1b      	subs	r3, r3, r4
 80004b6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004ba:	e7a5      	b.n	8000408 <__udivmoddi4+0x98>
 80004bc:	f1c1 0620 	rsb	r6, r1, #32
 80004c0:	408b      	lsls	r3, r1
 80004c2:	fa22 f706 	lsr.w	r7, r2, r6
 80004c6:	431f      	orrs	r7, r3
 80004c8:	fa0e f401 	lsl.w	r4, lr, r1
 80004cc:	fa20 f306 	lsr.w	r3, r0, r6
 80004d0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004d4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004d8:	4323      	orrs	r3, r4
 80004da:	fa00 f801 	lsl.w	r8, r0, r1
 80004de:	fa1f fc87 	uxth.w	ip, r7
 80004e2:	fbbe f0f9 	udiv	r0, lr, r9
 80004e6:	0c1c      	lsrs	r4, r3, #16
 80004e8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004ec:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004f0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004f4:	45a6      	cmp	lr, r4
 80004f6:	fa02 f201 	lsl.w	r2, r2, r1
 80004fa:	d909      	bls.n	8000510 <__udivmoddi4+0x1a0>
 80004fc:	193c      	adds	r4, r7, r4
 80004fe:	f100 3aff 	add.w	sl, r0, #4294967295
 8000502:	f080 809c 	bcs.w	800063e <__udivmoddi4+0x2ce>
 8000506:	45a6      	cmp	lr, r4
 8000508:	f240 8099 	bls.w	800063e <__udivmoddi4+0x2ce>
 800050c:	3802      	subs	r0, #2
 800050e:	443c      	add	r4, r7
 8000510:	eba4 040e 	sub.w	r4, r4, lr
 8000514:	fa1f fe83 	uxth.w	lr, r3
 8000518:	fbb4 f3f9 	udiv	r3, r4, r9
 800051c:	fb09 4413 	mls	r4, r9, r3, r4
 8000520:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000524:	fb03 fc0c 	mul.w	ip, r3, ip
 8000528:	45a4      	cmp	ip, r4
 800052a:	d908      	bls.n	800053e <__udivmoddi4+0x1ce>
 800052c:	193c      	adds	r4, r7, r4
 800052e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000532:	f080 8082 	bcs.w	800063a <__udivmoddi4+0x2ca>
 8000536:	45a4      	cmp	ip, r4
 8000538:	d97f      	bls.n	800063a <__udivmoddi4+0x2ca>
 800053a:	3b02      	subs	r3, #2
 800053c:	443c      	add	r4, r7
 800053e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000542:	eba4 040c 	sub.w	r4, r4, ip
 8000546:	fba0 ec02 	umull	lr, ip, r0, r2
 800054a:	4564      	cmp	r4, ip
 800054c:	4673      	mov	r3, lr
 800054e:	46e1      	mov	r9, ip
 8000550:	d362      	bcc.n	8000618 <__udivmoddi4+0x2a8>
 8000552:	d05f      	beq.n	8000614 <__udivmoddi4+0x2a4>
 8000554:	b15d      	cbz	r5, 800056e <__udivmoddi4+0x1fe>
 8000556:	ebb8 0203 	subs.w	r2, r8, r3
 800055a:	eb64 0409 	sbc.w	r4, r4, r9
 800055e:	fa04 f606 	lsl.w	r6, r4, r6
 8000562:	fa22 f301 	lsr.w	r3, r2, r1
 8000566:	431e      	orrs	r6, r3
 8000568:	40cc      	lsrs	r4, r1
 800056a:	e9c5 6400 	strd	r6, r4, [r5]
 800056e:	2100      	movs	r1, #0
 8000570:	e74f      	b.n	8000412 <__udivmoddi4+0xa2>
 8000572:	fbb1 fcf2 	udiv	ip, r1, r2
 8000576:	0c01      	lsrs	r1, r0, #16
 8000578:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800057c:	b280      	uxth	r0, r0
 800057e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000582:	463b      	mov	r3, r7
 8000584:	4638      	mov	r0, r7
 8000586:	463c      	mov	r4, r7
 8000588:	46b8      	mov	r8, r7
 800058a:	46be      	mov	lr, r7
 800058c:	2620      	movs	r6, #32
 800058e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000592:	eba2 0208 	sub.w	r2, r2, r8
 8000596:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800059a:	e766      	b.n	800046a <__udivmoddi4+0xfa>
 800059c:	4601      	mov	r1, r0
 800059e:	e718      	b.n	80003d2 <__udivmoddi4+0x62>
 80005a0:	4610      	mov	r0, r2
 80005a2:	e72c      	b.n	80003fe <__udivmoddi4+0x8e>
 80005a4:	f1c6 0220 	rsb	r2, r6, #32
 80005a8:	fa2e f302 	lsr.w	r3, lr, r2
 80005ac:	40b7      	lsls	r7, r6
 80005ae:	40b1      	lsls	r1, r6
 80005b0:	fa20 f202 	lsr.w	r2, r0, r2
 80005b4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005b8:	430a      	orrs	r2, r1
 80005ba:	fbb3 f8fe 	udiv	r8, r3, lr
 80005be:	b2bc      	uxth	r4, r7
 80005c0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005c4:	0c11      	lsrs	r1, r2, #16
 80005c6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ca:	fb08 f904 	mul.w	r9, r8, r4
 80005ce:	40b0      	lsls	r0, r6
 80005d0:	4589      	cmp	r9, r1
 80005d2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005d6:	b280      	uxth	r0, r0
 80005d8:	d93e      	bls.n	8000658 <__udivmoddi4+0x2e8>
 80005da:	1879      	adds	r1, r7, r1
 80005dc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005e0:	d201      	bcs.n	80005e6 <__udivmoddi4+0x276>
 80005e2:	4589      	cmp	r9, r1
 80005e4:	d81f      	bhi.n	8000626 <__udivmoddi4+0x2b6>
 80005e6:	eba1 0109 	sub.w	r1, r1, r9
 80005ea:	fbb1 f9fe 	udiv	r9, r1, lr
 80005ee:	fb09 f804 	mul.w	r8, r9, r4
 80005f2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005f6:	b292      	uxth	r2, r2
 80005f8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005fc:	4542      	cmp	r2, r8
 80005fe:	d229      	bcs.n	8000654 <__udivmoddi4+0x2e4>
 8000600:	18ba      	adds	r2, r7, r2
 8000602:	f109 31ff 	add.w	r1, r9, #4294967295
 8000606:	d2c4      	bcs.n	8000592 <__udivmoddi4+0x222>
 8000608:	4542      	cmp	r2, r8
 800060a:	d2c2      	bcs.n	8000592 <__udivmoddi4+0x222>
 800060c:	f1a9 0102 	sub.w	r1, r9, #2
 8000610:	443a      	add	r2, r7
 8000612:	e7be      	b.n	8000592 <__udivmoddi4+0x222>
 8000614:	45f0      	cmp	r8, lr
 8000616:	d29d      	bcs.n	8000554 <__udivmoddi4+0x1e4>
 8000618:	ebbe 0302 	subs.w	r3, lr, r2
 800061c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000620:	3801      	subs	r0, #1
 8000622:	46e1      	mov	r9, ip
 8000624:	e796      	b.n	8000554 <__udivmoddi4+0x1e4>
 8000626:	eba7 0909 	sub.w	r9, r7, r9
 800062a:	4449      	add	r1, r9
 800062c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000630:	fbb1 f9fe 	udiv	r9, r1, lr
 8000634:	fb09 f804 	mul.w	r8, r9, r4
 8000638:	e7db      	b.n	80005f2 <__udivmoddi4+0x282>
 800063a:	4673      	mov	r3, lr
 800063c:	e77f      	b.n	800053e <__udivmoddi4+0x1ce>
 800063e:	4650      	mov	r0, sl
 8000640:	e766      	b.n	8000510 <__udivmoddi4+0x1a0>
 8000642:	4608      	mov	r0, r1
 8000644:	e6fd      	b.n	8000442 <__udivmoddi4+0xd2>
 8000646:	443b      	add	r3, r7
 8000648:	3a02      	subs	r2, #2
 800064a:	e733      	b.n	80004b4 <__udivmoddi4+0x144>
 800064c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000650:	443b      	add	r3, r7
 8000652:	e71c      	b.n	800048e <__udivmoddi4+0x11e>
 8000654:	4649      	mov	r1, r9
 8000656:	e79c      	b.n	8000592 <__udivmoddi4+0x222>
 8000658:	eba1 0109 	sub.w	r1, r1, r9
 800065c:	46c4      	mov	ip, r8
 800065e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000662:	fb09 f804 	mul.w	r8, r9, r4
 8000666:	e7c4      	b.n	80005f2 <__udivmoddi4+0x282>

08000668 <__aeabi_idiv0>:
 8000668:	4770      	bx	lr
 800066a:	bf00      	nop

0800066c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800066c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80006a4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000670:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000672:	e003      	b.n	800067c <LoopCopyDataInit>

08000674 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000674:	4b0c      	ldr	r3, [pc, #48]	@ (80006a8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000676:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000678:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800067a:	3104      	adds	r1, #4

0800067c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800067c:	480b      	ldr	r0, [pc, #44]	@ (80006ac <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800067e:	4b0c      	ldr	r3, [pc, #48]	@ (80006b0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000680:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000684:	d3f6      	bcc.n	8000674 <CopyDataInit>
  ldr  r2, =_sbss
 8000686:	4a0b      	ldr	r2, [pc, #44]	@ (80006b4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000688:	e002      	b.n	8000690 <LoopFillZerobss>

0800068a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800068a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800068c:	f842 3b04 	str.w	r3, [r2], #4

08000690 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000690:	4b09      	ldr	r3, [pc, #36]	@ (80006b8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000692:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000694:	d3f9      	bcc.n	800068a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000696:	f003 f89d 	bl	80037d4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800069a:	f022 fc63 	bl	8022f64 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800069e:	f001 fa3d 	bl	8001b1c <main>
  bx  lr    
 80006a2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80006a4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80006a8:	08025c54 	.word	0x08025c54
  ldr  r0, =_sdata
 80006ac:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006b0:	2000027c 	.word	0x2000027c
  ldr  r2, =_sbss
 80006b4:	20000480 	.word	0x20000480
  ldr  r3, = _ebss
 80006b8:	20014d3c 	.word	0x20014d3c

080006bc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006bc:	e7fe      	b.n	80006bc <ADC_IRQHandler>

080006be <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006be:	4770      	bx	lr

080006c0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006c0:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80006c2:	f000 fdbb 	bl	800123c <touchgfx_components_init>
    touchgfx_init();
}
 80006c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80006ca:	f000 bd3f 	b.w	800114c <touchgfx_init>

080006ce <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80006ce:	f000 bdb7 	b.w	8001240 <touchgfx_taskEntry>

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f021 f9c2 	bl	8021a62 <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006e4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000718 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006e8:	4c0c      	ldr	r4, [pc, #48]	@ (800071c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ea:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006ec:	4b0c      	ldr	r3, [pc, #48]	@ (8000720 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006ee:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80006f0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006f2:	6863      	ldr	r3, [r4, #4]
 80006f4:	4798      	blx	r3
 80006f6:	f640 0311 	movw	r3, #2065	@ 0x811
 80006fa:	4298      	cmp	r0, r3
 80006fc:	d10a      	bne.n	8000714 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006fe:	4d09      	ldr	r5, [pc, #36]	@ (8000724 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000700:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000702:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000704:	2082      	movs	r0, #130	@ 0x82
 8000706:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000708:	682b      	ldr	r3, [r5, #0]
 800070a:	2082      	movs	r0, #130	@ 0x82
 800070c:	68db      	ldr	r3, [r3, #12]
 800070e:	4798      	blx	r3
 8000710:	2000      	movs	r0, #0
    }

    return ret;
}
 8000712:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000714:	2001      	movs	r0, #1
 8000716:	e7fc      	b.n	8000712 <_Z11BSP_TS_Inittt+0x2e>
 8000718:	200004a6 	.word	0x200004a6
 800071c:	200000a4 	.word	0x200000a4
 8000720:	200004a4 	.word	0x200004a4
 8000724:	200004a8 	.word	0x200004a8

08000728 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000728:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800072c:	20f0      	movs	r0, #240	@ 0xf0
 800072e:	f7ff bfd9 	b.w	80006e4 <_Z11BSP_TS_Inittt>
	...

08000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000734:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000736:	4d39      	ldr	r5, [pc, #228]	@ (800081c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000738:	682b      	ldr	r3, [r5, #0]
{
 800073a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800073c:	691b      	ldr	r3, [r3, #16]
 800073e:	2082      	movs	r0, #130	@ 0x82
 8000740:	4798      	blx	r3
 8000742:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000744:	2800      	cmp	r0, #0
 8000746:	d04e      	beq.n	80007e6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000748:	682b      	ldr	r3, [r5, #0]
 800074a:	f10d 0206 	add.w	r2, sp, #6
 800074e:	695b      	ldr	r3, [r3, #20]
 8000750:	a901      	add	r1, sp, #4
 8000752:	2082      	movs	r0, #130	@ 0x82
 8000754:	4798      	blx	r3

        if (isRevD)
 8000756:	4b32      	ldr	r3, [pc, #200]	@ (8000820 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000758:	781b      	ldrb	r3, [r3, #0]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d04b      	beq.n	80007f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 800075e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000762:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000766:	429a      	cmp	r2, r3
 8000768:	d93f      	bls.n	80007ea <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 800076a:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 800076e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000772:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000774:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000776:	2b0a      	cmp	r3, #10
 8000778:	d942      	bls.n	8000800 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 800077a:	220b      	movs	r2, #11
 800077c:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000780:	4a28      	ldr	r2, [pc, #160]	@ (8000824 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000782:	8812      	ldrh	r2, [r2, #0]
 8000784:	4293      	cmp	r3, r2
 8000786:	d901      	bls.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000788:	3a01      	subs	r2, #1
 800078a:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800078c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000790:	4825      	ldr	r0, [pc, #148]	@ (8000828 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000792:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000796:	428a      	cmp	r2, r1
 8000798:	d834      	bhi.n	8000804 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 800079a:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 800079e:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007a0:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 80007a2:	b292      	uxth	r2, r2
        xr = x / 15;
 80007a4:	250f      	movs	r5, #15
 80007a6:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 80007aa:	4d20      	ldr	r5, [pc, #128]	@ (800082c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 80007ac:	882d      	ldrh	r5, [r5, #0]
 80007ae:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 80007b0:	bf84      	itt	hi
 80007b2:	f105 35ff 	addhi.w	r5, r5, #4294967295
 80007b6:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007b8:	428a      	cmp	r2, r1
 80007ba:	4615      	mov	r5, r2
 80007bc:	b28e      	uxth	r6, r1
 80007be:	d92a      	bls.n	8000816 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 80007c0:	1b92      	subs	r2, r2, r6
 80007c2:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007c4:	4e1a      	ldr	r6, [pc, #104]	@ (8000830 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 80007c6:	6837      	ldr	r7, [r6, #0]
 80007c8:	42bb      	cmp	r3, r7
 80007ca:	b2ba      	uxth	r2, r7
 80007cc:	bf8c      	ite	hi
 80007ce:	1a9a      	subhi	r2, r3, r2
 80007d0:	1ad2      	subls	r2, r2, r3
 80007d2:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 80007d4:	4411      	add	r1, r2
 80007d6:	2905      	cmp	r1, #5
        {
            _x = x;
 80007d8:	bfc4      	itt	gt
 80007da:	6005      	strgt	r5, [r0, #0]
            _y = y;
 80007dc:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80007de:	6803      	ldr	r3, [r0, #0]
 80007e0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007e2:	6833      	ldr	r3, [r6, #0]
 80007e4:	80a3      	strh	r3, [r4, #4]
    }
}
 80007e6:	b003      	add	sp, #12
 80007e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 80007ea:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 80007ec:	bf9c      	itt	ls
 80007ee:	22b4      	movls	r2, #180	@ 0xb4
 80007f0:	f8ad 2006 	strhls.w	r2, [sp, #6]
 80007f4:	e7bb      	b.n	800076e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 80007f6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80007fa:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80007fe:	e7b9      	b.n	8000774 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8000800:	2300      	movs	r3, #0
 8000802:	e7c3      	b.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8000804:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8000808:	3208      	adds	r2, #8
 800080a:	b292      	uxth	r2, r2
        if (xr <= 0)
 800080c:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 800080e:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000810:	d8c8      	bhi.n	80007a4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000812:	2500      	movs	r5, #0
            xr = 0;
 8000814:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000816:	1a89      	subs	r1, r1, r2
 8000818:	b289      	uxth	r1, r1
 800081a:	e7d3      	b.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 800081c:	200004a8 	.word	0x200004a8
 8000820:	20002ec8 	.word	0x20002ec8
 8000824:	200004a4 	.word	0x200004a4
 8000828:	200004a0 	.word	0x200004a0
 800082c:	200004a6 	.word	0x200004a6
 8000830:	2000049c 	.word	0x2000049c

08000834 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000834:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000836:	4668      	mov	r0, sp
{
 8000838:	460d      	mov	r5, r1
 800083a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800083c:	f7ff ff7a 	bl	8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000840:	f8bd 0000 	ldrh.w	r0, [sp]
 8000844:	b130      	cbz	r0, 8000854 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000846:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800084a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800084c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000850:	6023      	str	r3, [r4, #0]
        return true;
 8000852:	2001      	movs	r0, #1
}
 8000854:	b003      	add	sp, #12
 8000856:	bd30      	pop	{r4, r5, pc}

08000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000858:	2803      	cmp	r0, #3
 800085a:	d821      	bhi.n	80008a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800085c:	e8df f000 	tbb	[pc, r0]
 8000860:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000864:	4b0f      	ldr	r3, [pc, #60]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	fab2 f282 	clz	r2, r2
 800086c:	0952      	lsrs	r2, r2, #5
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000870:	480d      	ldr	r0, [pc, #52]	@ (80008a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000872:	f003 ba43 	b.w	8003cfc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000876:	4b0b      	ldr	r3, [pc, #44]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000878:	685a      	ldr	r2, [r3, #4]
 800087a:	fab2 f282 	clz	r2, r2
 800087e:	0952      	lsrs	r2, r2, #5
 8000880:	2108      	movs	r1, #8
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000884:	4b07      	ldr	r3, [pc, #28]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000886:	689a      	ldr	r2, [r3, #8]
 8000888:	fab2 f282 	clz	r2, r2
 800088c:	0952      	lsrs	r2, r2, #5
 800088e:	2110      	movs	r1, #16
 8000890:	e7ee      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000892:	4b04      	ldr	r3, [pc, #16]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000894:	68da      	ldr	r2, [r3, #12]
 8000896:	fab2 f282 	clz	r2, r2
 800089a:	0952      	lsrs	r2, r2, #5
 800089c:	2120      	movs	r1, #32
 800089e:	e7e7      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008a0:	4770      	bx	lr
 80008a2:	bf00      	nop
 80008a4:	200004ac 	.word	0x200004ac
 80008a8:	40021000 	.word	0x40021000

080008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80008ac:	2803      	cmp	r0, #3
 80008ae:	d821      	bhi.n	80008f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80008b0:	e8df f000 	tbb	[pc, r0]
 80008b4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80008b8:	4b0f      	ldr	r3, [pc, #60]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008ba:	681a      	ldr	r2, [r3, #0]
 80008bc:	3a00      	subs	r2, #0
 80008be:	bf18      	it	ne
 80008c0:	2201      	movne	r2, #1
 80008c2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008c4:	480d      	ldr	r0, [pc, #52]	@ (80008fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80008c6:	f003 ba19 	b.w	8003cfc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80008ca:	4b0b      	ldr	r3, [pc, #44]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008cc:	685a      	ldr	r2, [r3, #4]
 80008ce:	3a00      	subs	r2, #0
 80008d0:	bf18      	it	ne
 80008d2:	2201      	movne	r2, #1
 80008d4:	2108      	movs	r1, #8
 80008d6:	e7f5      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80008d8:	4b07      	ldr	r3, [pc, #28]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008da:	689a      	ldr	r2, [r3, #8]
 80008dc:	3a00      	subs	r2, #0
 80008de:	bf18      	it	ne
 80008e0:	2201      	movne	r2, #1
 80008e2:	2110      	movs	r1, #16
 80008e4:	e7ee      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008e6:	4b04      	ldr	r3, [pc, #16]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008e8:	68da      	ldr	r2, [r3, #12]
 80008ea:	3a00      	subs	r2, #0
 80008ec:	bf18      	it	ne
 80008ee:	2201      	movne	r2, #1
 80008f0:	2120      	movs	r1, #32
 80008f2:	e7e7      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008f4:	4770      	bx	lr
 80008f6:	bf00      	nop
 80008f8:	200004ac 	.word	0x200004ac
 80008fc:	40021000 	.word	0x40021000

08000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000900:	2803      	cmp	r0, #3
 8000902:	d80d      	bhi.n	8000920 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000904:	e8df f000 	tbb	[pc, r0]
 8000908:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800090c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800090e:	4805      	ldr	r0, [pc, #20]	@ (8000924 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000910:	f003 b9f9 	b.w	8003d06 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000914:	2108      	movs	r1, #8
 8000916:	e7fa      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000918:	2110      	movs	r1, #16
 800091a:	e7f8      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800091c:	2120      	movs	r1, #32
 800091e:	e7f6      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000920:	4770      	bx	lr
 8000922:	bf00      	nop
 8000924:	40021000 	.word	0x40021000

08000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000928:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800092a:	2803      	cmp	r0, #3
 800092c:	d811      	bhi.n	8000952 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800092e:	e8df f000 	tbb	[pc, r0]
 8000932:	0a02      	.short	0x0a02
 8000934:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000936:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000938:	4807      	ldr	r0, [pc, #28]	@ (8000958 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800093a:	f003 f9d9 	bl	8003cf0 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800093e:	1e43      	subs	r3, r0, #1
 8000940:	4258      	negs	r0, r3
 8000942:	4158      	adcs	r0, r3
 8000944:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000946:	2108      	movs	r1, #8
 8000948:	e7f6      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800094a:	2110      	movs	r1, #16
 800094c:	e7f4      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800094e:	2120      	movs	r1, #32
 8000950:	e7f2      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000952:	2000      	movs	r0, #0
 8000954:	e7f3      	b.n	800093e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000956:	bf00      	nop
 8000958:	40021000 	.word	0x40021000

0800095c <_ZN8touchgfx4GPIO4initEv>:
{
 800095c:	b570      	push	{r4, r5, r6, lr}
 800095e:	4d08      	ldr	r5, [pc, #32]	@ (8000980 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000960:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000962:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000964:	b2e0      	uxtb	r0, r4
 8000966:	f7ff ffdf 	bl	8000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800096a:	b118      	cbz	r0, 8000974 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800096c:	682b      	ldr	r3, [r5, #0]
 800096e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000970:	bf18      	it	ne
 8000972:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000974:	3401      	adds	r4, #1
 8000976:	2c05      	cmp	r4, #5
 8000978:	f105 0504 	add.w	r5, r5, #4
 800097c:	d1f2      	bne.n	8000964 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800097e:	bd70      	pop	{r4, r5, r6, pc}
 8000980:	200004ac 	.word	0x200004ac

08000984 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000984:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000986:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800098a:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 800098e:	4770      	bx	lr

08000990 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000990:	4770      	bx	lr

08000992 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000992:	2000      	movs	r0, #0
 8000994:	4770      	bx	lr
	...

08000998 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000998:	4b03      	ldr	r3, [pc, #12]	@ (80009a8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800099a:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800099c:	3900      	subs	r1, #0
 800099e:	bf18      	it	ne
 80009a0:	2101      	movne	r1, #1
 80009a2:	7019      	strb	r1, [r3, #0]
    }
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop
 80009a8:	20013ff9 	.word	0x20013ff9

080009ac <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 80009ac:	4770      	bx	lr

080009ae <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80009ae:	2000      	movs	r0, #0
 80009b0:	4770      	bx	lr

080009b2 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80009b2:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80009b4:	b10b      	cbz	r3, 80009ba <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80009b6:	4608      	mov	r0, r1
 80009b8:	4718      	bx	r3
        }
    }
 80009ba:	4770      	bx	lr

080009bc <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80009bc:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80009c0:	4770      	bx	lr

080009c2 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80009c2:	6840      	ldr	r0, [r0, #4]
 80009c4:	6803      	ldr	r3, [r0, #0]
 80009c6:	699b      	ldr	r3, [r3, #24]
 80009c8:	4718      	bx	r3

080009ca <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 80009ca:	4770      	bx	lr

080009cc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80009cc:	4770      	bx	lr

080009ce <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80009ce:	4770      	bx	lr

080009d0 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 80009d0:	4770      	bx	lr

080009d2 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80009d2:	4770      	bx	lr

080009d4 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80009d4:	b510      	push	{r4, lr}
 80009d6:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80009d8:	f000 fd48 	bl	800146c <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80009dc:	6823      	ldr	r3, [r4, #0]
 80009de:	4903      	ldr	r1, [pc, #12]	@ (80009ec <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80009e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80009e4:	4620      	mov	r0, r4
}
 80009e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80009ea:	4718      	bx	r3
 80009ec:	d0000000 	.word	0xd0000000

080009f0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80009f0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80009f2:	6803      	ldr	r3, [r0, #0]
{
 80009f4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80009f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80009fa:	4798      	blx	r3
    enableInterrupts();
 80009fc:	6823      	ldr	r3, [r4, #0]
 80009fe:	4620      	mov	r0, r4
 8000a00:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8000a02:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000a04:	f000 f8ec 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000a08:	6823      	ldr	r3, [r4, #0]
 8000a0a:	4620      	mov	r0, r4
 8000a0c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a0e:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000a10:	2029      	movs	r0, #41	@ 0x29
 8000a12:	f001 fb21 	bl	8002058 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000a16:	f000 f8e3 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000a1a:	6823      	ldr	r3, [r4, #0]
 8000a1c:	4620      	mov	r0, r4
 8000a1e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a20:	4798      	blx	r3
    for (;;)
 8000a22:	e7f8      	b.n	8000a16 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000a24 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000a24:	b510      	push	{r4, lr}
 8000a26:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000a28:	f00a fb70 	bl	800b10c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000a2c:	6823      	ldr	r3, [r4, #0]
 8000a2e:	4620      	mov	r0, r4
 8000a30:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8000a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000a38:	4718      	bx	r3

08000a3a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000a3a:	f000 bcfb 	b.w	8001434 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000a3e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000a3e:	f000 bcff 	b.w	8001440 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000a42 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000a42:	f000 bd31 	b.w	80014a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000a46 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000a46:	f000 bcd1 	b.w	80013ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000a4a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000a4a:	f000 bd41 	b.w	80014d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000a4e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000a4e:	f000 bd49 	b.w	80014e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000a52 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a52:	f000 bcd5 	b.w	8001400 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a56 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000a56:	f009 bd79 	b.w	800a54c <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000a5a <_ZN11TouchGFXHALD0Ev>:
 8000a5a:	b510      	push	{r4, lr}
 8000a5c:	2184      	movs	r1, #132	@ 0x84
 8000a5e:	4604      	mov	r4, r0
 8000a60:	f020 ffff 	bl	8021a62 <_ZdlPvj>
 8000a64:	4620      	mov	r0, r4
 8000a66:	bd10      	pop	{r4, pc}

08000a68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000a68:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000a6a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000a6e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000a72:	4b0c      	ldr	r3, [pc, #48]	@ (8000aa4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000a74:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000a76:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000a78:	d009      	beq.n	8000a8e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000a7a:	b93a      	cbnz	r2, 8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a7c:	4a0a      	ldr	r2, [pc, #40]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a7e:	490b      	ldr	r1, [pc, #44]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a80:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a82:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000a84:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a86:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a88:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a8a:	701a      	strb	r2, [r3, #0]
    }
 8000a8c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a8e:	2a00      	cmp	r2, #0
 8000a90:	d0fc      	beq.n	8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a92:	4a05      	ldr	r2, [pc, #20]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a94:	4905      	ldr	r1, [pc, #20]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a96:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a98:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a9a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a9c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	e7f3      	b.n	8000a8a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000aa2:	bf00      	nop
 8000aa4:	20013ff2 	.word	0x20013ff2
 8000aa8:	20013fee 	.word	0x20013fee
 8000aac:	20013ff0 	.word	0x20013ff0

08000ab0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	460d      	mov	r5, r1
 8000ab4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000ab6:	b935      	cbnz	r5, 8000ac6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000ab8:	4b09      	ldr	r3, [pc, #36]	@ (8000ae0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000aba:	4a0a      	ldr	r2, [pc, #40]	@ (8000ae4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000abc:	480a      	ldr	r0, [pc, #40]	@ (8000ae8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000abe:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8000ac2:	f021 ff0b 	bl	80228dc <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000ac6:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000aca:	4b08      	ldr	r3, [pc, #32]	@ (8000aec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000acc:	3a00      	subs	r2, #0
 8000ace:	bf18      	it	ne
 8000ad0:	2201      	movne	r2, #1
 8000ad2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000ad4:	6803      	ldr	r3, [r0, #0]
    }
 8000ad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000ada:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ade:	4718      	bx	r3
 8000ae0:	08023e00 	.word	0x08023e00
 8000ae4:	08023e38 	.word	0x08023e38
 8000ae8:	08023e86 	.word	0x08023e86
 8000aec:	20013ff8 	.word	0x20013ff8

08000af0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000af0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000af2:	4b09      	ldr	r3, [pc, #36]	@ (8000b18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000af4:	881b      	ldrh	r3, [r3, #0]
 8000af6:	428b      	cmp	r3, r1
 8000af8:	d803      	bhi.n	8000b02 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000afa:	4b08      	ldr	r3, [pc, #32]	@ (8000b1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000afc:	881b      	ldrh	r3, [r3, #0]
 8000afe:	4293      	cmp	r3, r2
 8000b00:	d905      	bls.n	8000b0e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000b02:	4b07      	ldr	r3, [pc, #28]	@ (8000b20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000b04:	4a07      	ldr	r2, [pc, #28]	@ (8000b24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000b06:	4808      	ldr	r0, [pc, #32]	@ (8000b28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000b08:	21a3      	movs	r1, #163	@ 0xa3
 8000b0a:	f021 fee7 	bl	80228dc <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000b0e:	4b07      	ldr	r3, [pc, #28]	@ (8000b2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000b10:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000b12:	4b07      	ldr	r3, [pc, #28]	@ (8000b30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000b14:	801a      	strh	r2, [r3, #0]
    }
 8000b16:	bd08      	pop	{r3, pc}
 8000b18:	20013fee 	.word	0x20013fee
 8000b1c:	20013ff0 	.word	0x20013ff0
 8000b20:	08023ecb 	.word	0x08023ecb
 8000b24:	08023f2e 	.word	0x08023f2e
 8000b28:	08023e86 	.word	0x08023e86
 8000b2c:	20013ff4 	.word	0x20013ff4
 8000b30:	20013ff6 	.word	0x20013ff6

08000b34 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000b34:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000b36:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000b3a:	b118      	cbz	r0, 8000b44 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000b3c:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000b3e:	6803      	ldr	r3, [r0, #0]
 8000b40:	681b      	ldr	r3, [r3, #0]
 8000b42:	4718      	bx	r3
    }
 8000b44:	4770      	bx	lr
	...

08000b48 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b48:	2101      	movs	r1, #1
{
 8000b4a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	4608      	mov	r0, r1
 8000b50:	f006 fc82 	bl	8007458 <osSemaphoreNew>
 8000b54:	4b0a      	ldr	r3, [pc, #40]	@ (8000b80 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000b56:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000b58:	b928      	cbnz	r0, 8000b66 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000b5a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b84 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000b5c:	4a0a      	ldr	r2, [pc, #40]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b5e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b60:	480a      	ldr	r0, [pc, #40]	@ (8000b8c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000b62:	f021 febb 	bl	80228dc <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000b66:	2200      	movs	r2, #0
 8000b68:	2104      	movs	r1, #4
 8000b6a:	2001      	movs	r0, #1
 8000b6c:	f006 fd13 	bl	8007596 <osMessageQueueNew>
 8000b70:	4b07      	ldr	r3, [pc, #28]	@ (8000b90 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000b72:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b74:	b918      	cbnz	r0, 8000b7e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000b76:	4b07      	ldr	r3, [pc, #28]	@ (8000b94 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000b78:	4a03      	ldr	r2, [pc, #12]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b7a:	212c      	movs	r1, #44	@ 0x2c
 8000b7c:	e7f0      	b.n	8000b60 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000b7e:	bd08      	pop	{r3, pc}
 8000b80:	200004c0 	.word	0x200004c0
 8000b84:	08023f71 	.word	0x08023f71
 8000b88:	08023fba 	.word	0x08023fba
 8000b8c:	08023fe9 	.word	0x08023fe9
 8000b90:	200004bc 	.word	0x200004bc
 8000b94:	08024036 	.word	0x08024036

08000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000b98:	4b02      	ldr	r3, [pc, #8]	@ (8000ba4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000b9a:	f04f 31ff 	mov.w	r1, #4294967295
 8000b9e:	6818      	ldr	r0, [r3, #0]
 8000ba0:	f006 bca4 	b.w	80074ec <osSemaphoreAcquire>
 8000ba4:	200004c0 	.word	0x200004c0

08000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ba8:	4b01      	ldr	r3, [pc, #4]	@ (8000bb0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000baa:	6818      	ldr	r0, [r3, #0]
 8000bac:	f006 bcca 	b.w	8007544 <osSemaphoreRelease>
 8000bb0:	200004c0 	.word	0x200004c0

08000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000bb4:	4b02      	ldr	r3, [pc, #8]	@ (8000bc0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000bb6:	2100      	movs	r1, #0
 8000bb8:	6818      	ldr	r0, [r3, #0]
 8000bba:	f006 bc97 	b.w	80074ec <osSemaphoreAcquire>
 8000bbe:	bf00      	nop
 8000bc0:	200004c0 	.word	0x200004c0

08000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000bc4:	f7ff bff0 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000bc8:	4803      	ldr	r0, [pc, #12]	@ (8000bd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000bca:	4904      	ldr	r1, [pc, #16]	@ (8000bdc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000bcc:	6800      	ldr	r0, [r0, #0]
 8000bce:	2300      	movs	r3, #0
 8000bd0:	461a      	mov	r2, r3
 8000bd2:	f006 bd1b 	b.w	800760c <osMessageQueuePut>
 8000bd6:	bf00      	nop
 8000bd8:	200004bc 	.word	0x200004bc
 8000bdc:	20000004 	.word	0x20000004

08000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000be0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000be2:	4c08      	ldr	r4, [pc, #32]	@ (8000c04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000be4:	2300      	movs	r3, #0
 8000be6:	461a      	mov	r2, r3
 8000be8:	a901      	add	r1, sp, #4
 8000bea:	6820      	ldr	r0, [r4, #0]
 8000bec:	f006 fd3f 	bl	800766e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000bf0:	6820      	ldr	r0, [r4, #0]
 8000bf2:	f04f 33ff 	mov.w	r3, #4294967295
 8000bf6:	2200      	movs	r2, #0
 8000bf8:	a901      	add	r1, sp, #4
 8000bfa:	f006 fd38 	bl	800766e <osMessageQueueGet>
}
 8000bfe:	b002      	add	sp, #8
 8000c00:	bd10      	pop	{r4, pc}
 8000c02:	bf00      	nop
 8000c04:	200004bc 	.word	0x200004bc

08000c08 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000c08:	6803      	ldr	r3, [r0, #0]
 8000c0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c0c:	4718      	bx	r3

08000c0e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000c0e:	2001      	movs	r0, #1
 8000c10:	4770      	bx	lr

08000c12 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000c12:	6803      	ldr	r3, [r0, #0]
 8000c14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000c16:	4718      	bx	r3

08000c18 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000c18:	e7fe      	b.n	8000c18 <DMA2D_XferErrorCallback>

08000c1a <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000c1a:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000c1e:	4770      	bx	lr

08000c20 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000c20:	4b05      	ldr	r3, [pc, #20]	@ (8000c38 <_ZN8STM32DMAD1Ev+0x18>)
 8000c22:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c24:	4b05      	ldr	r3, [pc, #20]	@ (8000c3c <_ZN8STM32DMAD1Ev+0x1c>)
 8000c26:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c2a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000c2e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c32:	f3bf 8f6f 	isb	sy
}
 8000c36:	4770      	bx	lr
 8000c38:	080249bc 	.word	0x080249bc
 8000c3c:	e000e100 	.word	0xe000e100

08000c40 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c40:	b510      	push	{r4, lr}
 8000c42:	4604      	mov	r4, r0
}
 8000c44:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000c48:	f7ff ffea 	bl	8000c20 <_ZN8STM32DMAD1Ev>
 8000c4c:	4620      	mov	r0, r4
 8000c4e:	f020 ff08 	bl	8021a62 <_ZdlPvj>
 8000c52:	4620      	mov	r0, r4
 8000c54:	bd10      	pop	{r4, pc}
	...

08000c58 <_ZN8STM32DMA10initializeEv>:
{
 8000c58:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	9301      	str	r3, [sp, #4]
 8000c5e:	4b0e      	ldr	r3, [pc, #56]	@ (8000c98 <_ZN8STM32DMA10initializeEv+0x40>)
 8000c60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c62:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c66:	631a      	str	r2, [r3, #48]	@ 0x30
 8000c68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c6a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000c6e:	9201      	str	r2, [sp, #4]
 8000c70:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000c72:	691a      	ldr	r2, [r3, #16]
 8000c74:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c78:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000c7a:	691a      	ldr	r2, [r3, #16]
 8000c7c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000c80:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000c82:	4b06      	ldr	r3, [pc, #24]	@ (8000c9c <_ZN8STM32DMA10initializeEv+0x44>)
 8000c84:	4a06      	ldr	r2, [pc, #24]	@ (8000ca0 <_ZN8STM32DMA10initializeEv+0x48>)
 8000c86:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000c88:	4a06      	ldr	r2, [pc, #24]	@ (8000ca4 <_ZN8STM32DMA10initializeEv+0x4c>)
 8000c8a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c8c:	4b06      	ldr	r3, [pc, #24]	@ (8000ca8 <_ZN8STM32DMA10initializeEv+0x50>)
 8000c8e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c92:	609a      	str	r2, [r3, #8]
}
 8000c94:	b002      	add	sp, #8
 8000c96:	4770      	bx	lr
 8000c98:	40023800 	.word	0x40023800
 8000c9c:	200030ac 	.word	0x200030ac
 8000ca0:	08000ef9 	.word	0x08000ef9
 8000ca4:	08000c19 	.word	0x08000c19
 8000ca8:	e000e100 	.word	0xe000e100

08000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000cac:	b508      	push	{r3, lr}
    switch (format)
 8000cae:	280a      	cmp	r0, #10
 8000cb0:	d809      	bhi.n	8000cc6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000cb2:	e8df f000 	tbb	[pc, r0]
 8000cb6:	1006      	.short	0x1006
 8000cb8:	0808080e 	.word	0x0808080e
 8000cbc:	10101008 	.word	0x10101008
 8000cc0:	10          	.byte	0x10
 8000cc1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000cc2:	2002      	movs	r0, #2
}
 8000cc4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000cc6:	4b05      	ldr	r3, [pc, #20]	@ (8000cdc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000cc8:	4a05      	ldr	r2, [pc, #20]	@ (8000ce0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000cca:	4806      	ldr	r0, [pc, #24]	@ (8000ce4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000ccc:	2190      	movs	r1, #144	@ 0x90
 8000cce:	f021 fe05 	bl	80228dc <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000cd2:	2000      	movs	r0, #0
 8000cd4:	e7f6      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000cd6:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000cd8:	e7f4      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000cda:	bf00      	nop
 8000cdc:	08024078 	.word	0x08024078
 8000ce0:	08024093 	.word	0x08024093
 8000ce4:	080240de 	.word	0x080240de

08000ce8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000ce8:	b538      	push	{r3, r4, r5, lr}
 8000cea:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cec:	7f88      	ldrb	r0, [r1, #30]
 8000cee:	f7ff ffdd 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cf2:	8aa5      	ldrh	r5, [r4, #20]
 8000cf4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cf6:	4b16      	ldr	r3, [pc, #88]	@ (8000d50 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cf8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cfa:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cfc:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d00:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d02:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d04:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d06:	1b52      	subs	r2, r2, r5
 8000d08:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d0a:	6825      	ldr	r5, [r4, #0]
 8000d0c:	2d08      	cmp	r5, #8
 8000d0e:	d10e      	bne.n	8000d2e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d10:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d12:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d14:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d16:	7f20      	ldrb	r0, [r4, #28]
 8000d18:	4a0e      	ldr	r2, [pc, #56]	@ (8000d54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d1a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d1e:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000d20:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d22:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d24:	4a0c      	ldr	r2, [pc, #48]	@ (8000d58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d26:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d28:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d2a:	601a      	str	r2, [r3, #0]
    }
}
 8000d2c:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000d2e:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d30:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000d32:	611a      	str	r2, [r3, #16]
 8000d34:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000d36:	0a0a      	lsrs	r2, r1, #8
 8000d38:	0948      	lsrs	r0, r1, #5
 8000d3a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000d3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000d42:	4302      	orrs	r2, r0
 8000d44:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d48:	430a      	orrs	r2, r1
 8000d4a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d4c:	4a03      	ldr	r2, [pc, #12]	@ (8000d5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d4e:	e7ec      	b.n	8000d2a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d50:	4002b000 	.word	0x4002b000
 8000d54:	00010009 	.word	0x00010009
 8000d58:	00022301 	.word	0x00022301
 8000d5c:	00032301 	.word	0x00032301

08000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d60:	b508      	push	{r3, lr}
    switch (format)
 8000d62:	280b      	cmp	r0, #11
 8000d64:	d80b      	bhi.n	8000d7e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d66:	e8df f000 	tbb	[pc, r0]
 8000d6a:	1206      	.short	0x1206
 8000d6c:	0a0a0a10 	.word	0x0a0a0a10
 8000d70:	0808080a 	.word	0x0808080a
 8000d74:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000d76:	2002      	movs	r0, #2
}
 8000d78:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000d7a:	2005      	movs	r0, #5
        break;
 8000d7c:	e7fc      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000d7e:	4b05      	ldr	r3, [pc, #20]	@ (8000d94 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000d80:	4a05      	ldr	r2, [pc, #20]	@ (8000d98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000d82:	4806      	ldr	r0, [pc, #24]	@ (8000d9c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000d84:	216f      	movs	r1, #111	@ 0x6f
 8000d86:	f021 fda9 	bl	80228dc <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000d8a:	2000      	movs	r0, #0
 8000d8c:	e7f4      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000d8e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000d90:	e7f2      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000d92:	bf00      	nop
 8000d94:	08024078 	.word	0x08024078
 8000d98:	08024129 	.word	0x08024129
 8000d9c:	080240de 	.word	0x080240de

08000da0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000da4:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000da8:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000daa:	4640      	mov	r0, r8
 8000dac:	f7ff ffd8 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db0:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000db2:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db4:	4638      	mov	r0, r7
 8000db6:	f7ff ffd3 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000dba:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000dbc:	4638      	mov	r0, r7
 8000dbe:	f7ff ff75 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dc2:	8aa1      	ldrh	r1, [r4, #20]
 8000dc4:	8b62      	ldrh	r2, [r4, #26]
 8000dc6:	4b44      	ldr	r3, [pc, #272]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dc8:	1a52      	subs	r2, r2, r1
 8000dca:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dcc:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000dce:	8b22      	ldrh	r2, [r4, #24]
 8000dd0:	1a52      	subs	r2, r2, r1
 8000dd2:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dd6:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ddc:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dde:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000de6:	6820      	ldr	r0, [r4, #0]
 8000de8:	2880      	cmp	r0, #128	@ 0x80
 8000dea:	d028      	beq.n	8000e3e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000dec:	7f22      	ldrb	r2, [r4, #28]
 8000dee:	d80f      	bhi.n	8000e10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000df0:	2820      	cmp	r0, #32
 8000df2:	d067      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df4:	2840      	cmp	r0, #64	@ 0x40
 8000df6:	d065      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df8:	2804      	cmp	r0, #4
 8000dfa:	d01a      	beq.n	8000e32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dfc:	4b36      	ldr	r3, [pc, #216]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dfe:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e02:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e06:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e08:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e0a:	d061      	beq.n	8000ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e0c:	4a33      	ldr	r2, [pc, #204]	@ (8000edc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000e0e:	e044      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000e10:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000e14:	d004      	beq.n	8000e20 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000e16:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000e1a:	d1ef      	bne.n	8000dfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e1c:	4830      	ldr	r0, [pc, #192]	@ (8000ee0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000e1e:	e000      	b.n	8000e22 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e20:	4830      	ldr	r0, [pc, #192]	@ (8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e22:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000e26:	61da      	str	r2, [r3, #28]
 8000e28:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000e2a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e2c:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e2e:	6159      	str	r1, [r3, #20]
 8000e30:	e032      	b.n	8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e32:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000e36:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e3a:	61da      	str	r2, [r3, #28]
 8000e3c:	e7f6      	b.n	8000e2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000e3e:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000e40:	1d02      	adds	r2, r0, #4
 8000e42:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e44:	7f22      	ldrb	r2, [r4, #28]
 8000e46:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e4a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000e4e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e50:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e52:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000e54:	7801      	ldrb	r1, [r0, #0]
 8000e56:	b141      	cbz	r1, 8000e6a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000e58:	2901      	cmp	r1, #1
 8000e5a:	d021      	beq.n	8000ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000e5c:	4b22      	ldr	r3, [pc, #136]	@ (8000ee8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000e5e:	4a23      	ldr	r2, [pc, #140]	@ (8000eec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000e60:	4823      	ldr	r0, [pc, #140]	@ (8000ef0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000e62:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8000e66:	f021 fd39 	bl	80228dc <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e6a:	69da      	ldr	r2, [r3, #28]
 8000e6c:	8841      	ldrh	r1, [r0, #2]
 8000e6e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e72:	3901      	subs	r1, #1
 8000e74:	f022 0210 	bic.w	r2, r2, #16
 8000e78:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000e7c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000e7e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000e80:	4b15      	ldr	r3, [pc, #84]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e82:	69da      	ldr	r2, [r3, #28]
 8000e84:	f042 0220 	orr.w	r2, r2, #32
 8000e88:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000e8a:	69da      	ldr	r2, [r3, #28]
 8000e8c:	0692      	lsls	r2, r2, #26
 8000e8e:	d4fc      	bmi.n	8000e8a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000e90:	2210      	movs	r2, #16
 8000e92:	609a      	str	r2, [r3, #8]
            if (blend)
 8000e94:	2900      	cmp	r1, #0
 8000e96:	d0b9      	beq.n	8000e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e98:	4a16      	ldr	r2, [pc, #88]	@ (8000ef4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e9a:	601a      	str	r2, [r3, #0]
}
 8000e9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000ea0:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ea4:	69da      	ldr	r2, [r3, #28]
 8000ea6:	8840      	ldrh	r0, [r0, #2]
 8000ea8:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000eac:	f100 30ff 	add.w	r0, r0, #4294967295
 8000eb0:	f022 0210 	bic.w	r2, r2, #16
 8000eb4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000eb8:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000ebc:	bf18      	it	ne
 8000ebe:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ec0:	61da      	str	r2, [r3, #28]
                break;
 8000ec2:	e7dd      	b.n	8000e80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ec4:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ec8:	4b03      	ldr	r3, [pc, #12]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000eca:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000ece:	e7b4      	b.n	8000e3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000ed0:	f242 3201 	movw	r2, #8961	@ 0x2301
 8000ed4:	e7e1      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000ed6:	bf00      	nop
 8000ed8:	4002b000 	.word	0x4002b000
 8000edc:	00012301 	.word	0x00012301
 8000ee0:	00020009 	.word	0x00020009
 8000ee4:	0002000a 	.word	0x0002000a
 8000ee8:	08024173 	.word	0x08024173
 8000eec:	0802418d 	.word	0x0802418d
 8000ef0:	080240de 	.word	0x080240de
 8000ef4:	00022301 	.word	0x00022301

08000ef8 <DMA2D_XferCpltCallback>:
        return instance;
 8000ef8:	4b02      	ldr	r3, [pc, #8]	@ (8000f04 <DMA2D_XferCpltCallback+0xc>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000efe:	6803      	ldr	r3, [r0, #0]
 8000f00:	695b      	ldr	r3, [r3, #20]
 8000f02:	4718      	bx	r3
 8000f04:	20013ffc 	.word	0x20013ffc

08000f08 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000f08:	b570      	push	{r4, r5, r6, lr}
 8000f0a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000f0c:	4625      	mov	r5, r4
 8000f0e:	4b0a      	ldr	r3, [pc, #40]	@ (8000f38 <_ZN8STM32DMAC1Ev+0x30>)
 8000f10:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000f12:	2600      	movs	r6, #0
 8000f14:	6060      	str	r0, [r4, #4]
 8000f16:	7226      	strb	r6, [r4, #8]
 8000f18:	7266      	strb	r6, [r4, #9]
 8000f1a:	f845 3b20 	str.w	r3, [r5], #32
 8000f1e:	2260      	movs	r2, #96	@ 0x60
 8000f20:	4629      	mov	r1, r5
 8000f22:	f00a fa49 	bl	800b3b8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000f26:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000f2a:	60ee      	str	r6, [r5, #12]
 8000f2c:	3524      	adds	r5, #36	@ 0x24
 8000f2e:	429d      	cmp	r5, r3
 8000f30:	d1fb      	bne.n	8000f2a <_ZN8STM32DMAC1Ev+0x22>
}
 8000f32:	4620      	mov	r0, r4
 8000f34:	bd70      	pop	{r4, r5, r6, pc}
 8000f36:	bf00      	nop
 8000f38:	080249bc 	.word	0x080249bc

08000f3c <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f3c:	4b03      	ldr	r3, [pc, #12]	@ (8000f4c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000f3e:	681a      	ldr	r2, [r3, #0]
 8000f40:	07d2      	lsls	r2, r2, #31
 8000f42:	d4fc      	bmi.n	8000f3e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f44:	2223      	movs	r2, #35	@ 0x23
 8000f46:	609a      	str	r2, [r3, #8]
}
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	4002b000 	.word	0x4002b000

08000f50 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8000f50:	4770      	bx	lr
	...

08000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000f54:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f56:	4c0f      	ldr	r4, [pc, #60]	@ (8000f94 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000f58:	6825      	ldr	r5, [r4, #0]
 8000f5a:	07ed      	lsls	r5, r5, #31
 8000f5c:	d4fc      	bmi.n	8000f58 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f5e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f60:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f62:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f64:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f68:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000f6a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f6c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f6e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f70:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8000f72:	d00a      	beq.n	8000f8a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f74:	4908      	ldr	r1, [pc, #32]	@ (8000f98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f76:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f78:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000f7c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000f7e:	4b07      	ldr	r3, [pc, #28]	@ (8000f9c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000f80:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000f82:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000f84:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f86:	6023      	str	r3, [r4, #0]
    }
}
 8000f88:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000f8a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000f8c:	9b03      	ldr	r3, [sp, #12]
 8000f8e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f90:	4b03      	ldr	r3, [pc, #12]	@ (8000fa0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000f92:	e7f8      	b.n	8000f86 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000f94:	4002b000 	.word	0x4002b000
 8000f98:	00010009 	.word	0x00010009
 8000f9c:	00020001 	.word	0x00020001
 8000fa0:	00030001 	.word	0x00030001

08000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fa4:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fa6:	4c0e      	ldr	r4, [pc, #56]	@ (8000fe0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8000fa8:	6825      	ldr	r5, [r4, #0]
 8000faa:	07ed      	lsls	r5, r5, #31
 8000fac:	d4fc      	bmi.n	8000fa8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fae:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb0:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fb2:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fb8:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8000fba:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fbc:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fbe:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000fc0:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000fc2:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8000fc4:	d008      	beq.n	8000fd8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fc6:	061b      	lsls	r3, r3, #24
 8000fc8:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8000fcc:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fce:	4b05      	ldr	r3, [pc, #20]	@ (8000fe4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fd0:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000fd2:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fd4:	6023      	str	r3, [r4, #0]
    }
}
 8000fd6:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fd8:	4b03      	ldr	r3, [pc, #12]	@ (8000fe8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8000fda:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fdc:	2301      	movs	r3, #1
 8000fde:	e7f9      	b.n	8000fd4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8000fe0:	4002b000 	.word	0x4002b000
 8000fe4:	00020001 	.word	0x00020001
 8000fe8:	ff020002 	.word	0xff020002

08000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fec:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fee:	4c0b      	ldr	r4, [pc, #44]	@ (800101c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8000ff0:	6825      	ldr	r5, [r4, #0]
 8000ff2:	07ed      	lsls	r5, r5, #31
 8000ff4:	d4fc      	bmi.n	8000ff0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ff6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000ff8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffa:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ffc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001002:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001004:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001008:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800100a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800100c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800100e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001010:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001012:	4b03      	ldr	r3, [pc, #12]	@ (8001020 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001014:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001016:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001018:	6023      	str	r3, [r4, #0]
}
 800101a:	bd30      	pop	{r4, r5, pc}
 800101c:	4002b000 	.word	0x4002b000
 8001020:	00020001 	.word	0x00020001

08001024 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001024:	2001      	movs	r0, #1
 8001026:	4770      	bx	lr

08001028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001028:	200c      	movs	r0, #12
 800102a:	4770      	bx	lr

0800102c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800102c:	230c      	movs	r3, #12
 800102e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001032:	3008      	adds	r0, #8
 8001034:	4770      	bx	lr

08001036 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001036:	230c      	movs	r3, #12
 8001038:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800103c:	3008      	adds	r0, #8
 800103e:	4770      	bx	lr

08001040 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001040:	2001      	movs	r0, #1
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001044:	f640 60e8 	movw	r0, #3816	@ 0xee8
 8001048:	4770      	bx	lr

0800104a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800104a:	f640 63e8 	movw	r3, #3816	@ 0xee8
 800104e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001052:	3008      	adds	r0, #8
 8001054:	4770      	bx	lr

08001056 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001056:	f640 63e8 	movw	r3, #3816	@ 0xee8
 800105a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800105e:	3008      	adds	r0, #8
 8001060:	4770      	bx	lr

08001062 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001062:	2001      	movs	r0, #1
 8001064:	4770      	bx	lr

08001066 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001066:	2010      	movs	r0, #16
 8001068:	4770      	bx	lr

0800106a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800106a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800106e:	3008      	adds	r0, #8
 8001070:	4770      	bx	lr

08001072 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001072:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001076:	3008      	adds	r0, #8
 8001078:	4770      	bx	lr

0800107a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800107a:	4608      	mov	r0, r1
 800107c:	f001 bd0c 	b.w	8002a98 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001080:	b510      	push	{r4, lr}
 8001082:	4b03      	ldr	r3, [pc, #12]	@ (8001090 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001084:	6003      	str	r3, [r0, #0]
 8001086:	4604      	mov	r4, r0
 8001088:	f008 ffb4 	bl	8009ff4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800108c:	4620      	mov	r0, r4
 800108e:	bd10      	pop	{r4, pc}
 8001090:	08024a74 	.word	0x08024a74

08001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	4604      	mov	r4, r0
 8001098:	f7ff fff2 	bl	8001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800109c:	4620      	mov	r0, r4
 800109e:	2114      	movs	r1, #20
 80010a0:	f020 fcdf 	bl	8021a62 <_ZdlPvj>
 80010a4:	4620      	mov	r0, r4
 80010a6:	bd10      	pop	{r4, pc}

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010a8:	b510      	push	{r4, lr}
 80010aa:	4b03      	ldr	r3, [pc, #12]	@ (80010b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010ac:	6003      	str	r3, [r0, #0]
 80010ae:	4604      	mov	r4, r0
 80010b0:	f008 ffa0 	bl	8009ff4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010b4:	4620      	mov	r0, r4
 80010b6:	bd10      	pop	{r4, pc}
 80010b8:	08024a40 	.word	0x08024a40

080010bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010bc:	b510      	push	{r4, lr}
 80010be:	4604      	mov	r4, r0
 80010c0:	f7ff fff2 	bl	80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010c4:	4620      	mov	r0, r4
 80010c6:	f44f 616f 	mov.w	r1, #3824	@ 0xef0
 80010ca:	f020 fcca 	bl	8021a62 <_ZdlPvj>
 80010ce:	4620      	mov	r0, r4
 80010d0:	bd10      	pop	{r4, pc}
	...

080010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010d4:	b510      	push	{r4, lr}
 80010d6:	4b03      	ldr	r3, [pc, #12]	@ (80010e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010d8:	6003      	str	r3, [r0, #0]
 80010da:	4604      	mov	r4, r0
 80010dc:	f008 ff8a 	bl	8009ff4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010e0:	4620      	mov	r0, r4
 80010e2:	bd10      	pop	{r4, pc}
 80010e4:	08024a0c 	.word	0x08024a0c

080010e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010e8:	b510      	push	{r4, lr}
 80010ea:	4604      	mov	r4, r0
 80010ec:	f7ff fff2 	bl	80010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010f0:	4620      	mov	r0, r4
 80010f2:	2118      	movs	r1, #24
 80010f4:	f020 fcb5 	bl	8021a62 <_ZdlPvj>
 80010f8:	4620      	mov	r0, r4
 80010fa:	bd10      	pop	{r4, pc}

080010fc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80010fc:	b510      	push	{r4, lr}
 80010fe:	4b08      	ldr	r3, [pc, #32]	@ (8001120 <_ZN12FrontendHeapD1Ev+0x24>)
 8001100:	6003      	str	r3, [r0, #0]
 8001102:	4604      	mov	r4, r0
 8001104:	f600 701c 	addw	r0, r0, #3868	@ 0xf1c
 8001108:	f7ff ffba 	bl	8001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800110c:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001110:	f7ff ffca 	bl	80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001114:	f104 0014 	add.w	r0, r4, #20
 8001118:	f7ff ffdc 	bl	80010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800111c:	4620      	mov	r0, r4
 800111e:	bd10      	pop	{r4, pc}
 8001120:	08024aa8 	.word	0x08024aa8

08001124 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001124:	b508      	push	{r3, lr}
 8001126:	4802      	ldr	r0, [pc, #8]	@ (8001130 <__tcf_0+0xc>)
 8001128:	f7ff ffe8 	bl	80010fc <_ZN12FrontendHeapD1Ev>
 800112c:	bd08      	pop	{r3, pc}
 800112e:	bf00      	nop
 8001130:	2000139c 	.word	0x2000139c

08001134 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001134:	b510      	push	{r4, lr}
 8001136:	4604      	mov	r4, r0
 8001138:	f7ff ffe0 	bl	80010fc <_ZN12FrontendHeapD1Ev>
 800113c:	4620      	mov	r0, r4
 800113e:	f241 0190 	movw	r1, #4240	@ 0x1090
 8001142:	f020 fc8e 	bl	8021a62 <_ZdlPvj>
 8001146:	4620      	mov	r0, r4
 8001148:	bd10      	pop	{r4, pc}
	...

0800114c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800114c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001150:	f001 fb24 	bl	800279c <_ZN14BitmapDatabase11getInstanceEv>
 8001154:	4605      	mov	r5, r0
 8001156:	f001 fb25 	bl	80027a4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800115a:	2400      	movs	r4, #0
 800115c:	4601      	mov	r1, r0
 800115e:	4623      	mov	r3, r4
 8001160:	4628      	mov	r0, r5
 8001162:	4622      	mov	r2, r4
 8001164:	9400      	str	r4, [sp, #0]
 8001166:	f011 fbe9 	bl	801293c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800116a:	4b27      	ldr	r3, [pc, #156]	@ (8001208 <touchgfx_init+0xbc>)
 800116c:	4a27      	ldr	r2, [pc, #156]	@ (800120c <touchgfx_init+0xc0>)
 800116e:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001170:	4620      	mov	r0, r4
 8001172:	f001 fe5f 	bl	8002e34 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8001176:	4d26      	ldr	r5, [pc, #152]	@ (8001210 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001178:	4b26      	ldr	r3, [pc, #152]	@ (8001214 <touchgfx_init+0xc8>)
 800117a:	4a27      	ldr	r2, [pc, #156]	@ (8001218 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 800117c:	4827      	ldr	r0, [pc, #156]	@ (800121c <touchgfx_init+0xd0>)
 800117e:	609a      	str	r2, [r3, #8]
 8001180:	f011 fb44 	bl	801280c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001184:	682b      	ldr	r3, [r5, #0]
 8001186:	f3bf 8f5b 	dmb	ish
 800118a:	07db      	lsls	r3, r3, #31
 800118c:	d435      	bmi.n	80011fa <touchgfx_init+0xae>
 800118e:	4628      	mov	r0, r5
 8001190:	f020 fc69 	bl	8021a66 <__cxa_guard_acquire>
 8001194:	b388      	cbz	r0, 80011fa <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001196:	4c22      	ldr	r4, [pc, #136]	@ (8001220 <touchgfx_init+0xd4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001198:	4b22      	ldr	r3, [pc, #136]	@ (8001224 <touchgfx_init+0xd8>)
 800119a:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800119c:	f604 7634 	addw	r6, r4, #3892	@ 0xf34
        : presenterStorage(pres),
 80011a0:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80011a4:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 80011a8:	f604 771c 	addw	r7, r4, #3868	@ 0xf1c
        : presenterStorage(pres),
 80011ac:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80011ae:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80011b2:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80011b4:	6126      	str	r6, [r4, #16]
 80011b6:	f008 ff1f 	bl	8009ff8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011ba:	4b1b      	ldr	r3, [pc, #108]	@ (8001228 <touchgfx_init+0xdc>)
 80011bc:	6163      	str	r3, [r4, #20]
 80011be:	4640      	mov	r0, r8
 80011c0:	f008 ff1a 	bl	8009ff8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011c4:	4b19      	ldr	r3, [pc, #100]	@ (800122c <touchgfx_init+0xe0>)
 80011c6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80011c8:	4638      	mov	r0, r7
 80011ca:	f008 ff15 	bl	8009ff8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011ce:	4b18      	ldr	r3, [pc, #96]	@ (8001230 <touchgfx_init+0xe4>)
 80011d0:	f8c4 3f1c 	str.w	r3, [r4, #3868]	@ 0xf1c
 80011d4:	f504 6073 	add.w	r0, r4, #3888	@ 0xf30
 80011d8:	f001 fea2 	bl	8002f20 <_ZN5ModelC1Ev>
 80011dc:	4622      	mov	r2, r4
 80011de:	f504 6173 	add.w	r1, r4, #3888	@ 0xf30
 80011e2:	4630      	mov	r0, r6
 80011e4:	f001 fe92 	bl	8002f0c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80011e8:	4630      	mov	r0, r6
 80011ea:	f001 fc55 	bl	8002a98 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 80011ee:	4811      	ldr	r0, [pc, #68]	@ (8001234 <touchgfx_init+0xe8>)
 80011f0:	f021 fb92 	bl	8022918 <atexit>
 80011f4:	4628      	mov	r0, r5
 80011f6:	f020 fc42 	bl	8021a7e <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80011fa:	480f      	ldr	r0, [pc, #60]	@ (8001238 <touchgfx_init+0xec>)
}
 80011fc:	b002      	add	sp, #8
 80011fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001202:	f7ff bbe7 	b.w	80009d4 <_ZN11TouchGFXHAL10initializeEv>
 8001206:	bf00      	nop
 8001208:	20014060 	.word	0x20014060
 800120c:	20000548 	.word	0x20000548
 8001210:	20001398 	.word	0x20001398
 8001214:	20000568 	.word	0x20000568
 8001218:	2000054c 	.word	0x2000054c
 800121c:	20000008 	.word	0x20000008
 8001220:	2000139c 	.word	0x2000139c
 8001224:	08024aa8 	.word	0x08024aa8
 8001228:	08024a0c 	.word	0x08024a0c
 800122c:	08024a40 	.word	0x08024a40
 8001230:	08024a74 	.word	0x08024a74
 8001234:	08001125 	.word	0x08001125
 8001238:	200004c4 	.word	0x200004c4

0800123c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 800123c:	4770      	bx	lr
	...

08001240 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001240:	4801      	ldr	r0, [pc, #4]	@ (8001248 <touchgfx_taskEntry+0x8>)
 8001242:	f7ff bbd5 	b.w	80009f0 <_ZN11TouchGFXHAL9taskEntryEv>
 8001246:	bf00      	nop
 8001248:	200004c4 	.word	0x200004c4

0800124c <_GLOBAL__sub_I_touchgfx_init>:
}
 800124c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800124e:	4e26      	ldr	r6, [pc, #152]	@ (80012e8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001250:	4c26      	ldr	r4, [pc, #152]	@ (80012ec <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 8001252:	4d27      	ldr	r5, [pc, #156]	@ (80012f0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001254:	4b27      	ldr	r3, [pc, #156]	@ (80012f4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001256:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001258:	4630      	mov	r0, r6
 800125a:	f7ff fe55 	bl	8000f08 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800125e:	4628      	mov	r0, r5
 8001260:	f016 fc72 	bl	8017b48 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8001264:	4824      	ldr	r0, [pc, #144]	@ (80012f8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001266:	f00f fbcf 	bl	8010a08 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 800126a:	4b24      	ldr	r3, [pc, #144]	@ (80012fc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 800126c:	4824      	ldr	r0, [pc, #144]	@ (8001300 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 800126e:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001270:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001272:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8001276:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 800127a:	4922      	ldr	r1, [pc, #136]	@ (8001304 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800127c:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 800127e:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 8001282:	4921      	ldr	r1, [pc, #132]	@ (8001308 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 8001284:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8001288:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 800128c:	491f      	ldr	r1, [pc, #124]	@ (800130c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800128e:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 8001292:	491f      	ldr	r1, [pc, #124]	@ (8001310 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001294:	481f      	ldr	r0, [pc, #124]	@ (8001314 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 8001296:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001298:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 800129a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800129e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80012a2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80012a6:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 80012aa:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80012ae:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80012b2:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80012b6:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 80012ba:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 80012bc:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 80012c0:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80012c2:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012c6:	8001      	strh	r1, [r0, #0]
 80012c8:	4813      	ldr	r0, [pc, #76]	@ (8001318 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80012ca:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80012cc:	4813      	ldr	r0, [pc, #76]	@ (800131c <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 80012ce:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80012d2:	8001      	strh	r1, [r0, #0]
 80012d4:	4812      	ldr	r0, [pc, #72]	@ (8001320 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 80012d6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80012d8:	4912      	ldr	r1, [pc, #72]	@ (8001324 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80012da:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80012dc:	2201      	movs	r2, #1
 80012de:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80012e2:	4a11      	ldr	r2, [pc, #68]	@ (8001328 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80012e4:	601a      	str	r2, [r3, #0]
}
 80012e6:	bd70      	pop	{r4, r5, r6, pc}
 80012e8:	200005f4 	.word	0x200005f4
 80012ec:	20001394 	.word	0x20001394
 80012f0:	20000568 	.word	0x20000568
 80012f4:	08023df0 	.word	0x08023df0
 80012f8:	2000054c 	.word	0x2000054c
 80012fc:	200004c4 	.word	0x200004c4
 8001300:	01010000 	.word	0x01010000
 8001304:	01000001 	.word	0x01000001
 8001308:	00500400 	.word	0x00500400
 800130c:	0014001a 	.word	0x0014001a
 8001310:	20013ffc 	.word	0x20013ffc
 8001314:	20013fee 	.word	0x20013fee
 8001318:	20013ff4 	.word	0x20013ff4
 800131c:	20013ff0 	.word	0x20013ff0
 8001320:	20013ff6 	.word	0x20013ff6
 8001324:	20013ff2 	.word	0x20013ff2
 8001328:	080248d0 	.word	0x080248d0

0800132c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 800132c:	4801      	ldr	r0, [pc, #4]	@ (8001334 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800132e:	f7ff bc77 	b.w	8000c20 <_ZN8STM32DMAD1Ev>
 8001332:	bf00      	nop
 8001334:	200005f4 	.word	0x200005f4

08001338 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001338:	2000      	movs	r0, #0
 800133a:	4770      	bx	lr

0800133c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800133c:	8081      	strh	r1, [r0, #4]
    }
 800133e:	4770      	bx	lr

08001340 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001340:	80c1      	strh	r1, [r0, #6]
    }
 8001342:	4770      	bx	lr

08001344 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001344:	8101      	strh	r1, [r0, #8]
    }
 8001346:	4770      	bx	lr

08001348 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001348:	8141      	strh	r1, [r0, #10]
    }
 800134a:	4770      	bx	lr

0800134c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800134c:	4770      	bx	lr

0800134e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800134e:	4770      	bx	lr

08001350 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001350:	4770      	bx	lr

08001352 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001352:	4770      	bx	lr

08001354 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001354:	4770      	bx	lr

08001356 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001356:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001358:	88c4      	ldrh	r4, [r0, #6]
 800135a:	6803      	ldr	r3, [r0, #0]
 800135c:	1b12      	subs	r2, r2, r4
 800135e:	8884      	ldrh	r4, [r0, #4]
 8001360:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001362:	1b09      	subs	r1, r1, r4
 8001364:	b212      	sxth	r2, r2
    }
 8001366:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800136a:	b209      	sxth	r1, r1
 800136c:	4718      	bx	r3

0800136e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800136e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001372:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001374:	f04f 33ff 	mov.w	r3, #4294967295
 8001378:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800137a:	6813      	ldr	r3, [r2, #0]
 800137c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800137e:	6010      	str	r0, [r2, #0]
    }
 8001380:	4770      	bx	lr

08001382 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001382:	2000      	movs	r0, #0
 8001384:	4770      	bx	lr

08001386 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001386:	888b      	ldrh	r3, [r1, #4]
 8001388:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800138a:	2001      	movs	r0, #1
 800138c:	4770      	bx	lr

0800138e <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800138e:	4770      	bx	lr

08001390 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001390:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8001394:	4770      	bx	lr

08001396 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001396:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 800139a:	4770      	bx	lr

0800139c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 800139c:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800139e:	2200      	movs	r2, #0
        return rect.width;
 80013a0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80013a4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80013a8:	8002      	strh	r2, [r0, #0]
 80013aa:	8042      	strh	r2, [r0, #2]
 80013ac:	8084      	strh	r4, [r0, #4]
 80013ae:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80013b0:	bd10      	pop	{r4, pc}

080013b2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80013b2:	2200      	movs	r2, #0
 80013b4:	8002      	strh	r2, [r0, #0]
 80013b6:	8042      	strh	r2, [r0, #2]
 80013b8:	8082      	strh	r2, [r0, #4]
 80013ba:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80013bc:	4770      	bx	lr

080013be <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 80013be:	7701      	strb	r1, [r0, #28]
    }
 80013c0:	4770      	bx	lr

080013c2 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 80013c2:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 80013c6:	4770      	bx	lr

080013c8 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 80013c8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 80013cc:	4770      	bx	lr

080013ce <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 80013ce:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 80013d2:	4770      	bx	lr

080013d4 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 80013d4:	2001      	movs	r0, #1
 80013d6:	4770      	bx	lr

080013d8 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80013d8:	3098      	adds	r0, #152	@ 0x98
 80013da:	4770      	bx	lr

080013dc <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80013dc:	308c      	adds	r0, #140	@ 0x8c
 80013de:	4770      	bx	lr

080013e0 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80013e0:	3084      	adds	r0, #132	@ 0x84
 80013e2:	4770      	bx	lr

080013e4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80013e4:	4770      	bx	lr

080013e6 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80013e6:	4770      	bx	lr

080013e8 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80013e8:	4770      	bx	lr
	...

080013ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013ec:	4b03      	ldr	r3, [pc, #12]	@ (80013fc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80013ee:	2290      	movs	r2, #144	@ 0x90
 80013f0:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80013f4:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80013f8:	4770      	bx	lr
 80013fa:	bf00      	nop
 80013fc:	e000e100 	.word	0xe000e100

08001400 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001400:	4a09      	ldr	r2, [pc, #36]	@ (8001428 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001402:	490a      	ldr	r1, [pc, #40]	@ (800142c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001404:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001406:	480a      	ldr	r0, [pc, #40]	@ (8001430 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001408:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800140c:	3b01      	subs	r3, #1
 800140e:	b29b      	uxth	r3, r3
 8001410:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001412:	6911      	ldr	r1, [r2, #16]
 8001414:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001418:	3901      	subs	r1, #1
 800141a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800141c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800141e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001420:	f043 0301 	orr.w	r3, r3, #1
 8001424:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001426:	4770      	bx	lr
 8001428:	40016800 	.word	0x40016800
 800142c:	2000242e 	.word	0x2000242e
 8001430:	2000242c 	.word	0x2000242c

08001434 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001434:	4b01      	ldr	r3, [pc, #4]	@ (800143c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001436:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 800143a:	4770      	bx	lr
 800143c:	40016800 	.word	0x40016800

08001440 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001440:	4b02      	ldr	r3, [pc, #8]	@ (800144c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001442:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001444:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001448:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800144a:	4770      	bx	lr
 800144c:	40016800 	.word	0x40016800

08001450 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001450:	b510      	push	{r4, lr}
 8001452:	212c      	movs	r1, #44	@ 0x2c
 8001454:	4604      	mov	r4, r0
 8001456:	f020 fb04 	bl	8021a62 <_ZdlPvj>
 800145a:	4620      	mov	r0, r4
 800145c:	bd10      	pop	{r4, pc}

0800145e <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800145e:	b510      	push	{r4, lr}
 8001460:	21bc      	movs	r1, #188	@ 0xbc
 8001462:	4604      	mov	r4, r0
 8001464:	f020 fafd 	bl	8021a62 <_ZdlPvj>
 8001468:	4620      	mov	r0, r4
 800146a:	bd10      	pop	{r4, pc}

0800146c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800146c:	b570      	push	{r4, r5, r6, lr}
 800146e:	4604      	mov	r4, r0
    HAL::initialize();
 8001470:	f009 f8c1 	bl	800a5f6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001474:	6823      	ldr	r3, [r4, #0]
 8001476:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001478:	f00e f85e 	bl	800f538 <_ZN8touchgfx11Application11getInstanceEv>
 800147c:	4601      	mov	r1, r0
 800147e:	4620      	mov	r0, r4
 8001480:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001482:	6823      	ldr	r3, [r4, #0]
 8001484:	4a05      	ldr	r2, [pc, #20]	@ (800149c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001486:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 800148a:	4620      	mov	r0, r4
 800148c:	46ac      	mov	ip, r5
 800148e:	2300      	movs	r3, #0
}
 8001490:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001494:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001498:	4760      	bx	ip
 800149a:	bf00      	nop
 800149c:	d004b000 	.word	0xd004b000

080014a0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80014a0:	f009 b890 	b.w	800a5c4 <_ZN8touchgfx3HAL10beginFrameEv>

080014a4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80014a4:	f009 b89a 	b.w	800a5dc <_ZN8touchgfx3HAL8endFrameEv>

080014a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80014a8:	f009 b856 	b.w	800a558 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080014ac <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80014ac:	f009 b9c5 	b.w	800a83a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080014b0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80014b0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014b4:	b112      	cbz	r2, 80014bc <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80014b6:	6803      	ldr	r3, [r0, #0]
 80014b8:	695b      	ldr	r3, [r3, #20]
 80014ba:	4718      	bx	r3
    }
 80014bc:	4770      	bx	lr

080014be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80014be:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014c2:	b11a      	cbz	r2, 80014cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80014c4:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80014c8:	b102      	cbz	r2, 80014cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80014ca:	6018      	str	r0, [r3, #0]
        }
    }
 80014cc:	4770      	bx	lr
	...

080014d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014d0:	4b03      	ldr	r3, [pc, #12]	@ (80014e0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80014d2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014d6:	609a      	str	r2, [r3, #8]
 80014d8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014dc:	609a      	str	r2, [r3, #8]
}
 80014de:	4770      	bx	lr
 80014e0:	e000e100 	.word	0xe000e100

080014e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014e4:	4b08      	ldr	r3, [pc, #32]	@ (8001508 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80014e6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014ea:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014ee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014f2:	f3bf 8f6f 	isb	sy
 80014f6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014fa:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014fe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001502:	f3bf 8f6f 	isb	sy
}
 8001506:	4770      	bx	lr
 8001508:	e000e100 	.word	0xe000e100

0800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 800150c:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800150e:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001510:	4e12      	ldr	r6, [pc, #72]	@ (800155c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001512:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001514:	4b12      	ldr	r3, [pc, #72]	@ (8001560 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001516:	6003      	str	r3, [r0, #0]
 8001518:	6833      	ldr	r3, [r6, #0]
 800151a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 800151e:	4605      	mov	r5, r0
 8001520:	b10a      	cbz	r2, 8001526 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001522:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001524:	b900      	cbnz	r0, 8001528 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001526:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001528:	6803      	ldr	r3, [r0, #0]
 800152a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800152c:	4798      	blx	r3
        return auxiliaryLCD;
 800152e:	6833      	ldr	r3, [r6, #0]
 8001530:	fab0 f480 	clz	r4, r0
 8001534:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001536:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001538:	b130      	cbz	r0, 8001548 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800153a:	6803      	ldr	r3, [r0, #0]
 800153c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800153e:	4798      	blx	r3
 8001540:	2800      	cmp	r0, #0
 8001542:	bf08      	it	eq
 8001544:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001548:	b92c      	cbnz	r4, 8001556 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800154a:	4b06      	ldr	r3, [pc, #24]	@ (8001564 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 800154c:	4a06      	ldr	r2, [pc, #24]	@ (8001568 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800154e:	4807      	ldr	r0, [pc, #28]	@ (800156c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001550:	212c      	movs	r1, #44	@ 0x2c
 8001552:	f021 f9c3 	bl	80228dc <__assert_func>
    }
 8001556:	4628      	mov	r0, r5
 8001558:	bd70      	pop	{r4, r5, r6, pc}
 800155a:	bf00      	nop
 800155c:	20013ffc 	.word	0x20013ffc
 8001560:	08024abc 	.word	0x08024abc
 8001564:	080241cb 	.word	0x080241cb
 8001568:	08024229 	.word	0x08024229
 800156c:	08024262 	.word	0x08024262

08001570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001570:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8001572:	4e25      	ldr	r6, [pc, #148]	@ (8001608 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001574:	6835      	ldr	r5, [r6, #0]
 8001576:	f3bf 8f5b 	dmb	ish
 800157a:	f015 0501 	ands.w	r5, r5, #1
 800157e:	d140      	bne.n	8001602 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001580:	4630      	mov	r0, r6
 8001582:	f020 fa70 	bl	8021a66 <__cxa_guard_acquire>
 8001586:	2800      	cmp	r0, #0
 8001588:	d03b      	beq.n	8001602 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 800158a:	4c20      	ldr	r4, [pc, #128]	@ (800160c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 800158c:	4b20      	ldr	r3, [pc, #128]	@ (8001610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 800158e:	6125      	str	r5, [r4, #16]
 8001590:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8001594:	e9c4 3500 	strd	r3, r5, [r4]
 8001598:	e9c4 5502 	strd	r5, r5, [r4, #8]
 800159c:	84e5      	strh	r5, [r4, #38]	@ 0x26
 800159e:	62a5      	str	r5, [r4, #40]	@ 0x28
 80015a0:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 80015a2:	f00f fd16 	bl	8010fd2 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 80015a6:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80015aa:	f00c f88d 	bl	800d6c8 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80015ae:	4b19      	ldr	r3, [pc, #100]	@ (8001614 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 80015b0:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80015b2:	4620      	mov	r0, r4
 80015b4:	4b18      	ldr	r3, [pc, #96]	@ (8001618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 80015b6:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80015ba:	f7ff ffa7 	bl	800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80015be:	4b17      	ldr	r3, [pc, #92]	@ (800161c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 80015c0:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 80015c4:	3324      	adds	r3, #36	@ 0x24
 80015c6:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 80015ca:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 80015ce:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 80015d2:	2300      	movs	r3, #0
 80015d4:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 80015d8:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80015dc:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80015e0:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80015e4:	480e      	ldr	r0, [pc, #56]	@ (8001620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80015e6:	4b0f      	ldr	r3, [pc, #60]	@ (8001624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80015e8:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80015ec:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80015f0:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80015f4:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80015f8:	f021 f98e 	bl	8022918 <atexit>
 80015fc:	4630      	mov	r0, r6
 80015fe:	f020 fa3e 	bl	8021a7e <__cxa_guard_release>
}
 8001602:	4802      	ldr	r0, [pc, #8]	@ (800160c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001604:	bd70      	pop	{r4, r5, r6, pc}
 8001606:	bf00      	nop
 8001608:	20002430 	.word	0x20002430
 800160c:	20002434 	.word	0x20002434
 8001610:	08024fa8 	.word	0x08024fa8
 8001614:	08024adc 	.word	0x08024adc
 8001618:	08024b54 	.word	0x08024b54
 800161c:	08024f5c 	.word	0x08024f5c
 8001620:	080013e9 	.word	0x080013e9
 8001624:	08024f3c 	.word	0x08024f3c

08001628 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001628:	b538      	push	{r3, r4, r5, lr}
        return instance;
 800162a:	4c18      	ldr	r4, [pc, #96]	@ (800168c <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 800162c:	6823      	ldr	r3, [r4, #0]
 800162e:	b35b      	cbz	r3, 8001688 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001630:	4b17      	ldr	r3, [pc, #92]	@ (8001690 <HAL_LTDC_LineEventCallback+0x68>)
 8001632:	4a18      	ldr	r2, [pc, #96]	@ (8001694 <HAL_LTDC_LineEventCallback+0x6c>)
 8001634:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001636:	8811      	ldrh	r1, [r2, #0]
 8001638:	428b      	cmp	r3, r1
 800163a:	d116      	bne.n	800166a <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800163c:	4b16      	ldr	r3, [pc, #88]	@ (8001698 <HAL_LTDC_LineEventCallback+0x70>)
 800163e:	8819      	ldrh	r1, [r3, #0]
 8001640:	f003 f946 	bl	80048d0 <HAL_LTDC_ProgramLineEvent>
 8001644:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 8001646:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800164a:	2500      	movs	r5, #0
        vSyncCnt++;
 800164c:	3201      	adds	r2, #1
 800164e:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001652:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001656:	f7ff fab7 	bl	8000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800165a:	6820      	ldr	r0, [r4, #0]
 800165c:	f009 fd56 	bl	800b10c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001660:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001662:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001666:	f7ff b8f7 	b.w	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800166a:	f003 f931 	bl	80048d0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800166e:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001670:	6823      	ldr	r3, [r4, #0]
 8001672:	4620      	mov	r0, r4
 8001674:	6a1b      	ldr	r3, [r3, #32]
 8001676:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001678:	2301      	movs	r3, #1
 800167a:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 800167e:	2000      	movs	r0, #0
    }
 8001680:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001684:	f7ff b912 	b.w	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001688:	bd38      	pop	{r3, r4, r5, pc}
 800168a:	bf00      	nop
 800168c:	20013ffc 	.word	0x20013ffc
 8001690:	40016800 	.word	0x40016800
 8001694:	2000242e 	.word	0x2000242e
 8001698:	2000242c 	.word	0x2000242c

0800169c <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 800169c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceHS, &HS_Desc, DEVICE_HS) != USBD_OK)
 800169e:	490c      	ldr	r1, [pc, #48]	@ (80016d0 <MX_USB_DEVICE_Init+0x34>)
 80016a0:	480c      	ldr	r0, [pc, #48]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016a2:	2201      	movs	r2, #1
 80016a4:	f007 ff36 	bl	8009514 <USBD_Init>
 80016a8:	b108      	cbz	r0, 80016ae <MX_USB_DEVICE_Init+0x12>
  {
    Error_Handler();
 80016aa:	f000 fd2f 	bl	800210c <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceHS, &USBD_HID) != USBD_OK)
 80016ae:	490a      	ldr	r1, [pc, #40]	@ (80016d8 <MX_USB_DEVICE_Init+0x3c>)
 80016b0:	4808      	ldr	r0, [pc, #32]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016b2:	f007 ff42 	bl	800953a <USBD_RegisterClass>
 80016b6:	b108      	cbz	r0, 80016bc <MX_USB_DEVICE_Init+0x20>
  {
    Error_Handler();
 80016b8:	f000 fd28 	bl	800210c <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceHS) != USBD_OK)
 80016bc:	4805      	ldr	r0, [pc, #20]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016be:	f007 ff55 	bl	800956c <USBD_Start>
 80016c2:	b118      	cbz	r0, 80016cc <MX_USB_DEVICE_Init+0x30>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 80016c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 80016c8:	f000 bd20 	b.w	800210c <Error_Handler>
}
 80016cc:	bd08      	pop	{r3, pc}
 80016ce:	bf00      	nop
 80016d0:	20000040 	.word	0x20000040
 80016d4:	200024f0 	.word	0x200024f0
 80016d8:	20000164 	.word	0x20000164

080016dc <USBD_HS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_HS_DeviceDesc);
 80016dc:	2312      	movs	r3, #18
  return USBD_HS_DeviceDesc;
}
 80016de:	4801      	ldr	r0, [pc, #4]	@ (80016e4 <USBD_HS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_HS_DeviceDesc);
 80016e0:	800b      	strh	r3, [r1, #0]
}
 80016e2:	4770      	bx	lr
 80016e4:	2000002c 	.word	0x2000002c

080016e8 <USBD_HS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 80016e8:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
 80016ea:	4801      	ldr	r0, [pc, #4]	@ (80016f0 <USBD_HS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
 80016ec:	800b      	strh	r3, [r1, #0]
}
 80016ee:	4770      	bx	lr
 80016f0:	20000028 	.word	0x20000028

080016f4 <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 80016f4:	2300      	movs	r3, #0
 80016f6:	b570      	push	{r4, r5, r6, lr}
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
 80016f8:	1c4d      	adds	r5, r1, #1
 80016fa:	461e      	mov	r6, r3
      pbuf[2 * idx] = (value >> 28) + '0';
 80016fc:	0f04      	lsrs	r4, r0, #28
    if (((value >> 28)) < 0xA)
 80016fe:	f1b0 4f20 	cmp.w	r0, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + '0';
 8001702:	bf34      	ite	cc
 8001704:	3430      	addcc	r4, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8001706:	3437      	addcs	r4, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
 8001708:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    pbuf[2 * idx + 1] = 0;
 800170c:	f805 6013 	strb.w	r6, [r5, r3, lsl #1]
  for (idx = 0; idx < len; idx++)
 8001710:	3301      	adds	r3, #1
 8001712:	b2dc      	uxtb	r4, r3
 8001714:	42a2      	cmp	r2, r4
    value = value << 4;
 8001716:	ea4f 1000 	mov.w	r0, r0, lsl #4
  for (idx = 0; idx < len; idx++)
 800171a:	d8ef      	bhi.n	80016fc <IntToUnicode+0x8>
  }
}
 800171c:	bd70      	pop	{r4, r5, r6, pc}
	...

08001720 <USBD_HS_SerialStrDescriptor>:
  *length = USB_SIZ_STRING_SERIAL;
 8001720:	231a      	movs	r3, #26
{
 8001722:	b510      	push	{r4, lr}
  *length = USB_SIZ_STRING_SERIAL;
 8001724:	800b      	strh	r3, [r1, #0]
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8001726:	4b0a      	ldr	r3, [pc, #40]	@ (8001750 <USBD_HS_SerialStrDescriptor+0x30>)
 8001728:	f8d3 0a10 	ldr.w	r0, [r3, #2576]	@ 0xa10
  deviceserial0 += deviceserial2;
 800172c:	f8d3 2a18 	ldr.w	r2, [r3, #2584]	@ 0xa18
  if (deviceserial0 != 0)
 8001730:	1880      	adds	r0, r0, r2
 8001732:	d00a      	beq.n	800174a <USBD_HS_SerialStrDescriptor+0x2a>
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8001734:	f8d3 4a14 	ldr.w	r4, [r3, #2580]	@ 0xa14
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8001738:	4906      	ldr	r1, [pc, #24]	@ (8001754 <USBD_HS_SerialStrDescriptor+0x34>)
 800173a:	2208      	movs	r2, #8
 800173c:	f7ff ffda 	bl	80016f4 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8001740:	2204      	movs	r2, #4
 8001742:	3110      	adds	r1, #16
 8001744:	4620      	mov	r0, r4
 8001746:	f7ff ffd5 	bl	80016f4 <IntToUnicode>
}
 800174a:	4803      	ldr	r0, [pc, #12]	@ (8001758 <USBD_HS_SerialStrDescriptor+0x38>)
 800174c:	bd10      	pop	{r4, pc}
 800174e:	bf00      	nop
 8001750:	1fff7000 	.word	0x1fff7000
 8001754:	2000000e 	.word	0x2000000e
 8001758:	2000000c 	.word	0x2000000c

0800175c <USBD_HS_ManufacturerStrDescriptor>:
{
 800175c:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 800175e:	4c04      	ldr	r4, [pc, #16]	@ (8001770 <USBD_HS_ManufacturerStrDescriptor+0x14>)
 8001760:	4804      	ldr	r0, [pc, #16]	@ (8001774 <USBD_HS_ManufacturerStrDescriptor+0x18>)
{
 8001762:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001764:	4621      	mov	r1, r4
 8001766:	f008 fad0 	bl	8009d0a <USBD_GetString>
}
 800176a:	4620      	mov	r0, r4
 800176c:	bd10      	pop	{r4, pc}
 800176e:	bf00      	nop
 8001770:	200027cc 	.word	0x200027cc
 8001774:	080242c4 	.word	0x080242c4

08001778 <USBD_HS_ProductStrDescriptor>:
{
 8001778:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 800177a:	4c04      	ldr	r4, [pc, #16]	@ (800178c <USBD_HS_ProductStrDescriptor+0x14>)
 800177c:	4804      	ldr	r0, [pc, #16]	@ (8001790 <USBD_HS_ProductStrDescriptor+0x18>)
{
 800177e:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001780:	4621      	mov	r1, r4
 8001782:	f008 fac2 	bl	8009d0a <USBD_GetString>
}
 8001786:	4620      	mov	r0, r4
 8001788:	bd10      	pop	{r4, pc}
 800178a:	bf00      	nop
 800178c:	200027cc 	.word	0x200027cc
 8001790:	080242d7 	.word	0x080242d7

08001794 <USBD_HS_ConfigStrDescriptor>:
{
 8001794:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 8001796:	4c04      	ldr	r4, [pc, #16]	@ (80017a8 <USBD_HS_ConfigStrDescriptor+0x14>)
 8001798:	4804      	ldr	r0, [pc, #16]	@ (80017ac <USBD_HS_ConfigStrDescriptor+0x18>)
{
 800179a:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 800179c:	4621      	mov	r1, r4
 800179e:	f008 fab4 	bl	8009d0a <USBD_GetString>
}
 80017a2:	4620      	mov	r0, r4
 80017a4:	bd10      	pop	{r4, pc}
 80017a6:	bf00      	nop
 80017a8:	200027cc 	.word	0x200027cc
 80017ac:	080242ed 	.word	0x080242ed

080017b0 <USBD_HS_InterfaceStrDescriptor>:
{
 80017b0:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017b2:	4c04      	ldr	r4, [pc, #16]	@ (80017c4 <USBD_HS_InterfaceStrDescriptor+0x14>)
 80017b4:	4804      	ldr	r0, [pc, #16]	@ (80017c8 <USBD_HS_InterfaceStrDescriptor+0x18>)
{
 80017b6:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017b8:	4621      	mov	r1, r4
 80017ba:	f008 faa6 	bl	8009d0a <USBD_GetString>
}
 80017be:	4620      	mov	r0, r4
 80017c0:	bd10      	pop	{r4, pc}
 80017c2:	bf00      	nop
 80017c4:	200027cc 	.word	0x200027cc
 80017c8:	080242f8 	.word	0x080242f8

080017cc <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 80017cc:	b530      	push	{r4, r5, lr}
 80017ce:	4604      	mov	r4, r0
 80017d0:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017d2:	2214      	movs	r2, #20
 80017d4:	2100      	movs	r1, #0
 80017d6:	a803      	add	r0, sp, #12
 80017d8:	f021 fabd 	bl	8022d56 <memset>
  if(pcdHandle->Instance==USB_OTG_HS)
 80017dc:	6822      	ldr	r2, [r4, #0]
 80017de:	4b1c      	ldr	r3, [pc, #112]	@ (8001850 <HAL_PCD_MspInit+0x84>)
 80017e0:	429a      	cmp	r2, r3
 80017e2:	d133      	bne.n	800184c <HAL_PCD_MspInit+0x80>
  {
  /* USER CODE BEGIN USB_OTG_HS_MspInit 0 */

  /* USER CODE END USB_OTG_HS_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017e4:	4c1b      	ldr	r4, [pc, #108]	@ (8001854 <HAL_PCD_MspInit+0x88>)
    PB15     ------> USB_OTG_HS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017e6:	481c      	ldr	r0, [pc, #112]	@ (8001858 <HAL_PCD_MspInit+0x8c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017e8:	2500      	movs	r5, #0
 80017ea:	9501      	str	r5, [sp, #4]
 80017ec:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017ee:	f043 0302 	orr.w	r3, r3, #2
 80017f2:	6323      	str	r3, [r4, #48]	@ 0x30
 80017f4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017f6:	f003 0302 	and.w	r3, r3, #2
 80017fa:	9301      	str	r3, [sp, #4]
 80017fc:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017fe:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001800:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001804:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001806:	f002 f98f 	bl	8003b28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800180a:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 800180e:	2302      	movs	r3, #2
 8001810:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 8001814:	2103      	movs	r1, #3
 8001816:	230c      	movs	r3, #12
 8001818:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800181c:	480e      	ldr	r0, [pc, #56]	@ (8001858 <HAL_PCD_MspInit+0x8c>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800181e:	9505      	str	r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001820:	eb0d 0103 	add.w	r1, sp, r3
 8001824:	f002 f980 	bl	8003b28 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001828:	9502      	str	r5, [sp, #8]
 800182a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800182c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001830:	6323      	str	r3, [r4, #48]	@ 0x30
 8001832:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001834:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8001838:	9302      	str	r3, [sp, #8]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 800183a:	204d      	movs	r0, #77	@ 0x4d
 800183c:	462a      	mov	r2, r5
 800183e:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001840:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 8001842:	f002 f827 	bl	8003894 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
 8001846:	204d      	movs	r0, #77	@ 0x4d
 8001848:	f002 f856 	bl	80038f8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_HS_MspInit 1 */

  /* USER CODE END USB_OTG_HS_MspInit 1 */
  }
}
 800184c:	b009      	add	sp, #36	@ 0x24
 800184e:	bd30      	pop	{r4, r5, pc}
 8001850:	40040000 	.word	0x40040000
 8001854:	40023800 	.word	0x40023800
 8001858:	40020400 	.word	0x40020400

0800185c <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 800185c:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
 8001860:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001864:	f007 be94 	b.w	8009590 <USBD_LL_SetupStage>

08001868 <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8001868:	2324      	movs	r3, #36	@ 0x24
 800186a:	fb03 0301 	mla	r3, r3, r1, r0
 800186e:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001872:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 8001876:	f007 bebb 	b.w	80095f0 <USBD_LL_DataOutStage>

0800187a <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 800187a:	2324      	movs	r3, #36	@ 0x24
 800187c:	fb03 0301 	mla	r3, r3, r1, r0
 8001880:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001884:	6a1a      	ldr	r2, [r3, #32]
 8001886:	f007 beed 	b.w	8009664 <USBD_LL_DataInStage>

0800188a <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 800188a:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800188e:	f007 bf89 	b.w	80097a4 <USBD_LL_SOF>

08001892 <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8001892:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001894:	79c1      	ldrb	r1, [r0, #7]
{
 8001896:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001898:	b121      	cbz	r1, 80018a4 <HAL_PCD_ResetCallback+0x12>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 800189a:	2902      	cmp	r1, #2
 800189c:	d001      	beq.n	80018a2 <HAL_PCD_ResetCallback+0x10>
  {
    speed = USBD_SPEED_FULL;
  }
  else
  {
    Error_Handler();
 800189e:	f000 fc35 	bl	800210c <Error_Handler>
    speed = USBD_SPEED_FULL;
 80018a2:	2101      	movs	r1, #1
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 80018a4:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
 80018a8:	f007 ff60 	bl	800976c <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018ac:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
 80018b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018b4:	f007 bf2a 	b.w	800970c <USBD_LL_Reset>

080018b8 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80018b8:	b510      	push	{r4, lr}
 80018ba:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 80018bc:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018c0:	f007 ff57 	bl	8009772 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 80018c4:	6822      	ldr	r2, [r4, #0]
 80018c6:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 80018ca:	f043 0301 	orr.w	r3, r3, #1
 80018ce:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 80018d2:	7ae3      	ldrb	r3, [r4, #11]
 80018d4:	b123      	cbz	r3, 80018e0 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 80018d6:	4a03      	ldr	r2, [pc, #12]	@ (80018e4 <HAL_PCD_SuspendCallback+0x2c>)
 80018d8:	6913      	ldr	r3, [r2, #16]
 80018da:	f043 0306 	orr.w	r3, r3, #6
 80018de:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 80018e0:	bd10      	pop	{r4, pc}
 80018e2:	bf00      	nop
 80018e4:	e000ed00 	.word	0xe000ed00

080018e8 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 80018e8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018ec:	f007 bf4f 	b.w	800978e <USBD_LL_Resume>

080018f0 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018f0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018f4:	f007 bf76 	b.w	80097e4 <USBD_LL_IsoOUTIncomplete>

080018f8 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018f8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018fc:	f007 bf5f 	b.w	80097be <USBD_LL_IsoINIncomplete>

08001900 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 8001900:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001904:	f007 bf81 	b.w	800980a <USBD_LL_DevConnected>

08001908 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8001908:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800190c:	f007 bf7f 	b.w	800980e <USBD_LL_DevDisconnected>

08001910 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8001910:	b508      	push	{r3, lr}
  /* Init USB Ip. */
  if (pdev->id == DEVICE_HS) {
 8001912:	7802      	ldrb	r2, [r0, #0]
 8001914:	2a01      	cmp	r2, #1
{
 8001916:	4603      	mov	r3, r0
  if (pdev->id == DEVICE_HS) {
 8001918:	d127      	bne.n	800196a <USBD_LL_Init+0x5a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_HS.pData = pdev;
 800191a:	4815      	ldr	r0, [pc, #84]	@ (8001970 <USBD_LL_Init+0x60>)
 800191c:	f8c0 34e0 	str.w	r3, [r0, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_HS;
 8001920:	f8c3 02c8 	str.w	r0, [r3, #712]	@ 0x2c8

  hpcd_USB_OTG_HS.Instance = USB_OTG_HS;
 8001924:	4b13      	ldr	r3, [pc, #76]	@ (8001974 <USBD_LL_Init+0x64>)
 8001926:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_HS.Init.dev_endpoints = 6;
 8001928:	2306      	movs	r3, #6
 800192a:	7103      	strb	r3, [r0, #4]
  hpcd_USB_OTG_HS.Init.speed = PCD_SPEED_FULL;
  hpcd_USB_OTG_HS.Init.dma_enable = DISABLE;
 800192c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001930:	80c3      	strh	r3, [r0, #6]
  hpcd_USB_OTG_HS.Init.phy_itface = USB_OTG_EMBEDDED_PHY;
 8001932:	2302      	movs	r3, #2
 8001934:	7243      	strb	r3, [r0, #9]
  hpcd_USB_OTG_HS.Init.Sof_enable = DISABLE;
 8001936:	2300      	movs	r3, #0
 8001938:	8143      	strh	r3, [r0, #10]
  hpcd_USB_OTG_HS.Init.low_power_enable = DISABLE;
  hpcd_USB_OTG_HS.Init.lpm_enable = DISABLE;
 800193a:	7303      	strb	r3, [r0, #12]
  hpcd_USB_OTG_HS.Init.vbus_sensing_enable = ENABLE;
 800193c:	81c2      	strh	r2, [r0, #14]
  hpcd_USB_OTG_HS.Init.use_dedicated_ep1 = DISABLE;
  hpcd_USB_OTG_HS.Init.use_external_vbus = DISABLE;
 800193e:	7403      	strb	r3, [r0, #16]
  if (HAL_PCD_Init(&hpcd_USB_OTG_HS) != HAL_OK)
 8001940:	f002 ffe4 	bl	800490c <HAL_PCD_Init>
 8001944:	b108      	cbz	r0, 800194a <USBD_LL_Init+0x3a>
  {
    Error_Handler( );
 8001946:	f000 fbe1 	bl	800210c <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_HS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_HS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_HS, 0x200);
 800194a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800194e:	4808      	ldr	r0, [pc, #32]	@ (8001970 <USBD_LL_Init+0x60>)
 8001950:	f003 fd01 	bl	8005356 <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 0, 0x80);
 8001954:	2280      	movs	r2, #128	@ 0x80
 8001956:	2100      	movs	r1, #0
 8001958:	4805      	ldr	r0, [pc, #20]	@ (8001970 <USBD_LL_Init+0x60>)
 800195a:	f003 fcdd 	bl	8005318 <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 1, 0x174);
 800195e:	4804      	ldr	r0, [pc, #16]	@ (8001970 <USBD_LL_Init+0x60>)
 8001960:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8001964:	2101      	movs	r1, #1
 8001966:	f003 fcd7 	bl	8005318 <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
}
 800196a:	2000      	movs	r0, #0
 800196c:	bd08      	pop	{r3, pc}
 800196e:	bf00      	nop
 8001970:	200029e0 	.word	0x200029e0
 8001974:	40040000 	.word	0x40040000

08001978 <USBD_LL_IsStallEP>:
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;

  if((ep_addr & 0x80) == 0x80)
 8001978:	f011 0f80 	tst.w	r1, #128	@ 0x80
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800197c:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 8001980:	f04f 0224 	mov.w	r2, #36	@ 0x24
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001984:	bf1b      	ittet	ne
 8001986:	f001 017f 	andne.w	r1, r1, #127	@ 0x7f
 800198a:	fb02 3301 	mlane	r3, r2, r1, r3
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800198e:	fb02 3301 	mlaeq	r3, r2, r1, r3
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001992:	7d98      	ldrbne	r0, [r3, #22]
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8001994:	bf08      	it	eq
 8001996:	f893 0256 	ldrbeq.w	r0, [r3, #598]	@ 0x256
  }
}
 800199a:	4770      	bx	lr

0800199c <USBD_static_malloc>:
  */
void *USBD_static_malloc(uint32_t size)
{
  static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
}
 800199c:	4800      	ldr	r0, [pc, #0]	@ (80019a0 <USBD_static_malloc+0x4>)
 800199e:	4770      	bx	lr
 80019a0:	200029cc 	.word	0x200029cc

080019a4 <USBD_static_free>:
  * @retval None
  */
void USBD_static_free(void *p)
{

}
 80019a4:	4770      	bx	lr

080019a6 <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 80019a6:	b118      	cbz	r0, 80019b0 <USBD_Get_USB_Status+0xa>
 80019a8:	2802      	cmp	r0, #2
 80019aa:	bf0c      	ite	eq
 80019ac:	2001      	moveq	r0, #1
 80019ae:	2003      	movne	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 80019b0:	4770      	bx	lr

080019b2 <USBD_LL_Start>:
{
 80019b2:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 80019b4:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019b8:	f003 f817 	bl	80049ea <HAL_PCD_Start>
}
 80019bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019c0:	f7ff bff1 	b.w	80019a6 <USBD_Get_USB_Status>

080019c4 <USBD_LL_OpenEP>:
{
 80019c4:	b510      	push	{r4, lr}
 80019c6:	4614      	mov	r4, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019c8:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
 80019cc:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019ce:	4623      	mov	r3, r4
 80019d0:	f003 f83d 	bl	8004a4e <HAL_PCD_EP_Open>
}
 80019d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019d8:	f7ff bfe5 	b.w	80019a6 <USBD_Get_USB_Status>

080019dc <USBD_LL_CloseEP>:
{
 80019dc:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 80019de:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019e2:	f003 f86d 	bl	8004ac0 <HAL_PCD_EP_Close>
}
 80019e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019ea:	f7ff bfdc 	b.w	80019a6 <USBD_Get_USB_Status>

080019ee <USBD_LL_StallEP>:
{
 80019ee:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 80019f0:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019f4:	f003 f8cb 	bl	8004b8e <HAL_PCD_EP_SetStall>
}
 80019f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019fc:	f7ff bfd3 	b.w	80019a6 <USBD_Get_USB_Status>

08001a00 <USBD_LL_ClearStallEP>:
{
 8001a00:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 8001a02:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a06:	f003 f8f9 	bl	8004bfc <HAL_PCD_EP_ClrStall>
}
 8001a0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a0e:	f7ff bfca 	b.w	80019a6 <USBD_Get_USB_Status>

08001a12 <USBD_LL_SetUSBAddress>:
{
 8001a12:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8001a14:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a18:	f003 f806 	bl	8004a28 <HAL_PCD_SetAddress>
}
 8001a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a20:	f7ff bfc1 	b.w	80019a6 <USBD_Get_USB_Status>

08001a24 <USBD_LL_Transmit>:
{
 8001a24:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8001a26:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a2a:	f003 f895 	bl	8004b58 <HAL_PCD_EP_Transmit>
}
 8001a2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a32:	f7ff bfb8 	b.w	80019a6 <USBD_Get_USB_Status>

08001a36 <USBD_LL_PrepareReceive>:
{
 8001a36:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8001a38:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a3c:	f003 f86e 	bl	8004b1c <HAL_PCD_EP_Receive>
}
 8001a40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a44:	f7ff bfaf 	b.w	80019a6 <USBD_Get_USB_Status>

08001a48 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001a48:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a4a:	4b06      	ldr	r3, [pc, #24]	@ (8001a64 <SPI5_Write+0x1c>)
{
 8001a4c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	4805      	ldr	r0, [pc, #20]	@ (8001a68 <SPI5_Write+0x20>)
 8001a54:	2201      	movs	r2, #1
 8001a56:	f10d 0106 	add.w	r1, sp, #6
 8001a5a:	f004 f9df 	bl	8005e1c <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001a5e:	b003      	add	sp, #12
 8001a60:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a64:	2000005c 	.word	0x2000005c
 8001a68:	20002f58 	.word	0x20002f58

08001a6c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001a6c:	b508      	push	{r3, lr}
  /* init code for USB_DEVICE */
  MX_USB_DEVICE_Init();
 8001a6e:	f7ff fe15 	bl	800169c <MX_USB_DEVICE_Init>
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001a72:	2064      	movs	r0, #100	@ 0x64
 8001a74:	f005 fce4 	bl	8007440 <osDelay>
  for(;;)
 8001a78:	e7fb      	b.n	8001a72 <StartDefaultTask+0x6>

08001a7a <StartTask03>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask03 */
void StartTask03(void *argument)
{
 8001a7a:	b508      	push	{r3, lr}
  /* USER CODE BEGIN StartTask03 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 8001a7c:	2001      	movs	r0, #1
 8001a7e:	f005 fcdf 	bl	8007440 <osDelay>
  for(;;)
 8001a82:	e7fb      	b.n	8001a7c <StartTask03+0x2>

08001a84 <SystemClock_Config>:
{
 8001a84:	b530      	push	{r4, r5, lr}
 8001a86:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001a88:	2210      	movs	r2, #16
 8001a8a:	2100      	movs	r1, #0
 8001a8c:	a80a      	add	r0, sp, #40	@ 0x28
 8001a8e:	f021 f962 	bl	8022d56 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001a92:	2214      	movs	r2, #20
 8001a94:	2100      	movs	r1, #0
 8001a96:	a803      	add	r0, sp, #12
 8001a98:	f021 f95d 	bl	8022d56 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a9c:	2400      	movs	r4, #0
 8001a9e:	4b1d      	ldr	r3, [pc, #116]	@ (8001b14 <SystemClock_Config+0x90>)
 8001aa0:	9401      	str	r4, [sp, #4]
 8001aa2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001aa4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8001aa8:	641a      	str	r2, [r3, #64]	@ 0x40
 8001aaa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001aac:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001ab0:	9301      	str	r3, [sp, #4]
 8001ab2:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001ab4:	4b18      	ldr	r3, [pc, #96]	@ (8001b18 <SystemClock_Config+0x94>)
 8001ab6:	9402      	str	r4, [sp, #8]
 8001ab8:	681a      	ldr	r2, [r3, #0]
 8001aba:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001abe:	601a      	str	r2, [r3, #0]
 8001ac0:	681b      	ldr	r3, [r3, #0]
 8001ac2:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001ac6:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001ac8:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001aca:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001acc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001ad0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001ad4:	2502      	movs	r5, #2
 8001ad6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001ada:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 168;
 8001ade:	2104      	movs	r1, #4
 8001ae0:	23a8      	movs	r3, #168	@ 0xa8
 8001ae2:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001ae6:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8001ae8:	2307      	movs	r3, #7
 8001aea:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001aec:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001aee:	f003 fc37 	bl	8005360 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001af2:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001af4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001af8:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001afc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001b00:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001b04:	2105      	movs	r1, #5
 8001b06:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001b08:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001b0a:	f003 fe05 	bl	8005718 <HAL_RCC_ClockConfig>
}
 8001b0e:	b015      	add	sp, #84	@ 0x54
 8001b10:	bd30      	pop	{r4, r5, pc}
 8001b12:	bf00      	nop
 8001b14:	40023800 	.word	0x40023800
 8001b18:	40007000 	.word	0x40007000

08001b1c <main>:
{
 8001b1c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001b20:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8001b22:	f001 fe65 	bl	80037f0 <HAL_Init>
  SystemClock_Config();
 8001b26:	f7ff ffad 	bl	8001a84 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b2a:	2214      	movs	r2, #20
 8001b2c:	2100      	movs	r1, #0
 8001b2e:	a80d      	add	r0, sp, #52	@ 0x34
 8001b30:	f021 f911 	bl	8022d56 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b34:	2400      	movs	r4, #0
 8001b36:	4bc7      	ldr	r3, [pc, #796]	@ (8001e54 <main+0x338>)
 8001b38:	9400      	str	r4, [sp, #0]
 8001b3a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001b3c:	48c6      	ldr	r0, [pc, #792]	@ (8001e58 <main+0x33c>)
  hi2c3.Instance = I2C3;
 8001b3e:	4dc7      	ldr	r5, [pc, #796]	@ (8001e5c <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b40:	f042 0210 	orr.w	r2, r2, #16
 8001b44:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b46:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b48:	f002 0210 	and.w	r2, r2, #16
 8001b4c:	9200      	str	r2, [sp, #0]
 8001b4e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b50:	9401      	str	r4, [sp, #4]
 8001b52:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b54:	f042 0220 	orr.w	r2, r2, #32
 8001b58:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b5a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b5c:	f002 0220 	and.w	r2, r2, #32
 8001b60:	9201      	str	r2, [sp, #4]
 8001b62:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001b64:	9402      	str	r4, [sp, #8]
 8001b66:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b68:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001b6c:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b6e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b70:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8001b74:	9202      	str	r2, [sp, #8]
 8001b76:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b78:	9403      	str	r4, [sp, #12]
 8001b7a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b7c:	f042 0204 	orr.w	r2, r2, #4
 8001b80:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b82:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b84:	f002 0204 	and.w	r2, r2, #4
 8001b88:	9203      	str	r2, [sp, #12]
 8001b8a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b8c:	9404      	str	r4, [sp, #16]
 8001b8e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b90:	f042 0201 	orr.w	r2, r2, #1
 8001b94:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b96:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b98:	f002 0201 	and.w	r2, r2, #1
 8001b9c:	9204      	str	r2, [sp, #16]
 8001b9e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ba0:	9405      	str	r4, [sp, #20]
 8001ba2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ba4:	f042 0202 	orr.w	r2, r2, #2
 8001ba8:	631a      	str	r2, [r3, #48]	@ 0x30
 8001baa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bac:	f002 0202 	and.w	r2, r2, #2
 8001bb0:	9205      	str	r2, [sp, #20]
 8001bb2:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001bb4:	9406      	str	r4, [sp, #24]
 8001bb6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bb8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001bbc:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bbe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bc0:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001bc4:	9206      	str	r2, [sp, #24]
 8001bc6:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bc8:	9407      	str	r4, [sp, #28]
 8001bca:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bcc:	f042 0208 	orr.w	r2, r2, #8
 8001bd0:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bd2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001bd4:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001bd8:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bda:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001bdc:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bde:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001be0:	f002 f88c 	bl	8003cfc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001be4:	489e      	ldr	r0, [pc, #632]	@ (8001e60 <main+0x344>)
 8001be6:	2201      	movs	r2, #1
 8001be8:	2102      	movs	r1, #2
 8001bea:	f002 f887 	bl	8003cfc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001bee:	4622      	mov	r2, r4
 8001bf0:	489b      	ldr	r0, [pc, #620]	@ (8001e60 <main+0x344>)
 8001bf2:	2104      	movs	r1, #4
 8001bf4:	f002 f882 	bl	8003cfc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001bf8:	4622      	mov	r2, r4
 8001bfa:	489a      	ldr	r0, [pc, #616]	@ (8001e64 <main+0x348>)
 8001bfc:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001c00:	f002 f87c 	bl	8003cfc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c04:	2601      	movs	r6, #1
 8001c06:	233c      	movs	r3, #60	@ 0x3c
 8001c08:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c0c:	4892      	ldr	r0, [pc, #584]	@ (8001e58 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c0e:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c10:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c12:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8001c14:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c16:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c18:	f001 ff86 	bl	8003b28 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001c1c:	4890      	ldr	r0, [pc, #576]	@ (8001e60 <main+0x344>)
 8001c1e:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c20:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c24:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001c28:	f001 ff7e 	bl	8003b28 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001c2c:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c2e:	488c      	ldr	r0, [pc, #560]	@ (8001e60 <main+0x344>)
 8001c30:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c32:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c36:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c3a:	f001 ff75 	bl	8003b28 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c3e:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001c40:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c44:	4887      	ldr	r0, [pc, #540]	@ (8001e64 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c46:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c4a:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c4e:	f001 ff6b 	bl	8003b28 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001c52:	4885      	ldr	r0, [pc, #532]	@ (8001e68 <main+0x34c>)
 8001c54:	4b85      	ldr	r3, [pc, #532]	@ (8001e6c <main+0x350>)
 8001c56:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001c58:	f001 fe5c 	bl	8003914 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001c5c:	f8df c234 	ldr.w	ip, [pc, #564]	@ 8001e94 <main+0x378>
 8001c60:	4b83      	ldr	r3, [pc, #524]	@ (8001e70 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001c62:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001c64:	e9c5 c300 	strd	ip, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c68:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001c6a:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001c6e:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001c72:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001c76:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c7a:	f002 fa4d 	bl	8004118 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001c7e:	2110      	movs	r1, #16
 8001c80:	4628      	mov	r0, r5
 8001c82:	f002 fc91 	bl	80045a8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c86:	4621      	mov	r1, r4
 8001c88:	4628      	mov	r0, r5
 8001c8a:	f002 fcac 	bl	80045e6 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001c8e:	4d79      	ldr	r5, [pc, #484]	@ (8001e74 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c90:	f8df e204 	ldr.w	lr, [pc, #516]	@ 8001e98 <main+0x37c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001c94:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c96:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001c9a:	e9c5 e300 	strd	lr, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001c9e:	f44f 7800 	mov.w	r8, #512	@ 0x200
 8001ca2:	2318      	movs	r3, #24
 8001ca4:	e9c5 8306 	strd	r8, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001ca8:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8001caa:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001cac:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001cb0:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001cb4:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCPolynomial = 10;
 8001cb8:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001cba:	f004 f853 	bl	8005d64 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001cbe:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001cc0:	4622      	mov	r2, r4
 8001cc2:	4639      	mov	r1, r7
 8001cc4:	4866      	ldr	r0, [pc, #408]	@ (8001e60 <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001cc6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8001cca:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001cce:	f002 f815 	bl	8003cfc <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8001cd2:	4632      	mov	r2, r6
 8001cd4:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001cd8:	a909      	add	r1, sp, #36	@ 0x24
 8001cda:	4628      	mov	r0, r5
 8001cdc:	f004 f89e 	bl	8005e1c <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 8001ce0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001ce4:	4632      	mov	r2, r6
 8001ce6:	a90d      	add	r1, sp, #52	@ 0x34
 8001ce8:	4628      	mov	r0, r5
 8001cea:	f004 fa43 	bl	8006174 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001cee:	4632      	mov	r2, r6
 8001cf0:	4639      	mov	r1, r7
 8001cf2:	485b      	ldr	r0, [pc, #364]	@ (8001e60 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001cf4:	4d60      	ldr	r5, [pc, #384]	@ (8001e78 <main+0x35c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001cf6:	f002 f801 	bl	8003cfc <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8001cfa:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8001cfe:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 8001d00:	bf04      	itt	eq
 8001d02:	4b5e      	ldreq	r3, [pc, #376]	@ (8001e7c <main+0x360>)
 8001d04:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001d06:	4b5e      	ldr	r3, [pc, #376]	@ (8001e80 <main+0x364>)
 8001d08:	2701      	movs	r7, #1
 8001d0a:	e9c5 3700 	strd	r3, r7, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001d0e:	f04f 0910 	mov.w	r9, #16
 8001d12:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d14:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001d16:	e9c5 9304 	strd	r9, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001d1a:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001d1e:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001d22:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001d26:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001d2a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d2e:	2602      	movs	r6, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d30:	f04f 0a04 	mov.w	sl, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001d34:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8001d36:	f04f 0b03 	mov.w	fp, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d3a:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001d3c:	a90d      	add	r1, sp, #52	@ 0x34
 8001d3e:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d40:	e9cd 630d 	strd	r6, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8001d44:	e9cd a30f 	strd	sl, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d48:	f04f 0808 	mov.w	r8, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d4c:	e9c5 4a02 	strd	r4, sl, [r5, #8]
  SdramTiming.RPDelay = 2;
 8001d50:	e9cd b611 	strd	fp, r6, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8001d54:	9613      	str	r6, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001d56:	f003 fee9 	bl	8005b2c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d5a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d5e:	a909      	add	r1, sp, #36	@ 0x24
 8001d60:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001d62:	e9cd 870a 	strd	r8, r7, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8001d66:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001d68:	9709      	str	r7, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001d6a:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d6c:	f003 fefe 	bl	8005b6c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001d70:	4638      	mov	r0, r7
 8001d72:	f001 fd69 	bl	8003848 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d76:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d7a:	a909      	add	r1, sp, #36	@ 0x24
 8001d7c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d7e:	e9cd 6809 	strd	r6, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001d82:	e9cd 740b 	strd	r7, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d86:	f003 fef1 	bl	8005b6c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d8a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d8e:	a909      	add	r1, sp, #36	@ 0x24
 8001d90:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d92:	e9cd b809 	strd	fp, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001d96:	e9cd a40b 	strd	sl, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d9a:	f003 fee7 	bl	8005b6c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001d9e:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8001da2:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001da4:	9b08      	ldr	r3, [sp, #32]
 8001da6:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001da8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001dac:	a909      	add	r1, sp, #36	@ 0x24
 8001dae:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001db0:	e9cd a809 	strd	sl, r8, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8001db4:	970b      	str	r7, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001db6:	f003 fed9 	bl	8005b6c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001dba:	f240 516a 	movw	r1, #1386	@ 0x56a
 8001dbe:	4628      	mov	r0, r5
 8001dc0:	f003 fef2 	bl	8005ba8 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001dc4:	2234      	movs	r2, #52	@ 0x34
 8001dc6:	4621      	mov	r1, r4
 8001dc8:	eb0d 0002 	add.w	r0, sp, r2
 8001dcc:	f020 ffc3 	bl	8022d56 <memset>
  hltdc.Instance = LTDC;
 8001dd0:	4d2c      	ldr	r5, [pc, #176]	@ (8001e84 <main+0x368>)
 8001dd2:	4b2d      	ldr	r3, [pc, #180]	@ (8001e88 <main+0x36c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001dd4:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001dd6:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001dda:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001ddc:	e9c5 3705 	strd	r3, r7, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001de0:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001de2:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001de6:	f240 120d 	movw	r2, #269	@ 0x10d
 8001dea:	f240 1343 	movw	r3, #323	@ 0x143
 8001dee:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8001df2:	f240 1117 	movw	r1, #279	@ 0x117
 8001df6:	f240 1347 	movw	r3, #327	@ 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001dfa:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001dfc:	e9c5 130b 	strd	r1, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001e00:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8001e04:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001e06:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001e0a:	f002 fc7f 	bl	800470c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001e0e:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 8001e10:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 8001e12:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001e16:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8001e1a:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001e1c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001e20:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY0 = 0;
 8001e24:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001e28:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.ImageWidth = 240;
 8001e2a:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001e2e:	4628      	mov	r0, r5
 8001e30:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001e32:	4d16      	ldr	r5, [pc, #88]	@ (8001e8c <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001e34:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001e36:	e9cd 3610 	strd	r3, r6, [sp, #64]	@ 0x40
  pLayerCfg.WindowX0 = 0;
 8001e3a:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001e3c:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001e40:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001e44:	f002 fd16 	bl	8004874 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001e48:	4b11      	ldr	r3, [pc, #68]	@ (8001e90 <main+0x374>)
 8001e4a:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001e4c:	681b      	ldr	r3, [r3, #0]
 8001e4e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001e50:	682b      	ldr	r3, [r5, #0]
 8001e52:	e023      	b.n	8001e9c <main+0x380>
 8001e54:	40023800 	.word	0x40023800
 8001e58:	40021000 	.word	0x40021000
 8001e5c:	20003058 	.word	0x20003058
 8001e60:	40020800 	.word	0x40020800
 8001e64:	40020c00 	.word	0x40020c00
 8001e68:	200030ec 	.word	0x200030ec
 8001e6c:	40023000 	.word	0x40023000
 8001e70:	000186a0 	.word	0x000186a0
 8001e74:	20002f58 	.word	0x20002f58
 8001e78:	20002edc 	.word	0x20002edc
 8001e7c:	20002ec8 	.word	0x20002ec8
 8001e80:	a0000140 	.word	0xa0000140
 8001e84:	20002fb0 	.word	0x20002fb0
 8001e88:	40016800 	.word	0x40016800
 8001e8c:	20002ec4 	.word	0x20002ec4
 8001e90:	2000006c 	.word	0x2000006c
 8001e94:	40005c00 	.word	0x40005c00
 8001e98:	40015000 	.word	0x40015000
  hdma2d.Instance = DMA2D;
 8001e9c:	4d23      	ldr	r5, [pc, #140]	@ (8001f2c <main+0x410>)
  LcdDrv->DisplayOff();
 8001e9e:	68db      	ldr	r3, [r3, #12]
 8001ea0:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001ea2:	4b23      	ldr	r3, [pc, #140]	@ (8001f30 <main+0x414>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001ea4:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001ea6:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001eaa:	e9c5 6402 	strd	r6, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001eae:	e9c5 460a 	strd	r4, r6, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001eb2:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001eb6:	f001 fd3d 	bl	8003934 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001eba:	4639      	mov	r1, r7
 8001ebc:	4628      	mov	r0, r5
 8001ebe:	f001 fdef 	bl	8003aa0 <HAL_DMA2D_ConfigLayer>
  huart1.Init.BaudRate = 115200;
 8001ec2:	4d1c      	ldr	r5, [pc, #112]	@ (8001f34 <main+0x418>)
  huart1.Instance = USART1;
 8001ec4:	481c      	ldr	r0, [pc, #112]	@ (8001f38 <main+0x41c>)
  huart1.Init.BaudRate = 115200;
 8001ec6:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 8001eca:	e9c0 5300 	strd	r5, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001ece:	230c      	movs	r3, #12
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001ed0:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001ed4:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001ed8:	6104      	str	r4, [r0, #16]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001eda:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001edc:	f004 fc00 	bl	80066e0 <HAL_UART_Init>
  MX_TouchGFX_Init();
 8001ee0:	f7fe fbee 	bl	80006c0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001ee4:	f7fe fbeb 	bl	80006be <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001ee8:	f005 fa3a 	bl	8007360 <osKernelInitialize>
  myQueue01Handle = osMessageQueueNew (16, sizeof(uint16_t), &myQueue01_attributes);
 8001eec:	4a13      	ldr	r2, [pc, #76]	@ (8001f3c <main+0x420>)
 8001eee:	4631      	mov	r1, r6
 8001ef0:	4648      	mov	r0, r9
 8001ef2:	f005 fb50 	bl	8007596 <osMessageQueueNew>
 8001ef6:	4b12      	ldr	r3, [pc, #72]	@ (8001f40 <main+0x424>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001ef8:	4a12      	ldr	r2, [pc, #72]	@ (8001f44 <main+0x428>)
  myQueue01Handle = osMessageQueueNew (16, sizeof(uint16_t), &myQueue01_attributes);
 8001efa:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001efc:	4621      	mov	r1, r4
 8001efe:	4812      	ldr	r0, [pc, #72]	@ (8001f48 <main+0x42c>)
 8001f00:	f005 fa5a 	bl	80073b8 <osThreadNew>
 8001f04:	4b11      	ldr	r3, [pc, #68]	@ (8001f4c <main+0x430>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001f06:	4a12      	ldr	r2, [pc, #72]	@ (8001f50 <main+0x434>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001f08:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001f0a:	4621      	mov	r1, r4
 8001f0c:	4811      	ldr	r0, [pc, #68]	@ (8001f54 <main+0x438>)
 8001f0e:	f005 fa53 	bl	80073b8 <osThreadNew>
 8001f12:	4b11      	ldr	r3, [pc, #68]	@ (8001f58 <main+0x43c>)
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8001f14:	4a11      	ldr	r2, [pc, #68]	@ (8001f5c <main+0x440>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001f16:	6018      	str	r0, [r3, #0]
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8001f18:	4621      	mov	r1, r4
 8001f1a:	4811      	ldr	r0, [pc, #68]	@ (8001f60 <main+0x444>)
 8001f1c:	f005 fa4c 	bl	80073b8 <osThreadNew>
 8001f20:	4b10      	ldr	r3, [pc, #64]	@ (8001f64 <main+0x448>)
 8001f22:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001f24:	f005 fa2e 	bl	8007384 <osKernelStart>
  while (1)
 8001f28:	e7fe      	b.n	8001f28 <main+0x40c>
 8001f2a:	bf00      	nop
 8001f2c:	200030ac 	.word	0x200030ac
 8001f30:	4002b000 	.word	0x4002b000
 8001f34:	40011000 	.word	0x40011000
 8001f38:	20002f10 	.word	0x20002f10
 8001f3c:	08024b98 	.word	0x08024b98
 8001f40:	20002ecc 	.word	0x20002ecc
 8001f44:	08024bf8 	.word	0x08024bf8
 8001f48:	08001a6d 	.word	0x08001a6d
 8001f4c:	20002ed8 	.word	0x20002ed8
 8001f50:	08024bd4 	.word	0x08024bd4
 8001f54:	080006cf 	.word	0x080006cf
 8001f58:	20002ed4 	.word	0x20002ed4
 8001f5c:	08024bb0 	.word	0x08024bb0
 8001f60:	08001a7b 	.word	0x08001a7b
 8001f64:	20002ed0 	.word	0x20002ed0

08001f68 <IOE_Init>:
void IOE_Init(void)
 8001f68:	4770      	bx	lr

08001f6a <IOE_ITConfig>:
void IOE_ITConfig(void)
 8001f6a:	4770      	bx	lr

08001f6c <IOE_Write>:
{
 8001f6c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001f6e:	4b09      	ldr	r3, [pc, #36]	@ (8001f94 <IOE_Write+0x28>)
 8001f70:	f88d 2017 	strb.w	r2, [sp, #23]
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	9302      	str	r3, [sp, #8]
 8001f78:	f10d 0217 	add.w	r2, sp, #23
 8001f7c:	2301      	movs	r3, #1
 8001f7e:	9200      	str	r2, [sp, #0]
 8001f80:	9301      	str	r3, [sp, #4]
 8001f82:	460a      	mov	r2, r1
 8001f84:	4601      	mov	r1, r0
 8001f86:	4804      	ldr	r0, [pc, #16]	@ (8001f98 <IOE_Write+0x2c>)
 8001f88:	f002 f96e 	bl	8004268 <HAL_I2C_Mem_Write>
}
 8001f8c:	b007      	add	sp, #28
 8001f8e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f92:	bf00      	nop
 8001f94:	20000060 	.word	0x20000060
 8001f98:	20003058 	.word	0x20003058

08001f9c <IOE_Read>:
{
 8001f9c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001f9e:	2300      	movs	r3, #0
 8001fa0:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001fa4:	4b08      	ldr	r3, [pc, #32]	@ (8001fc8 <IOE_Read+0x2c>)
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	9302      	str	r3, [sp, #8]
{
 8001faa:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001fac:	2301      	movs	r3, #1
 8001fae:	f10d 0117 	add.w	r1, sp, #23
 8001fb2:	9100      	str	r1, [sp, #0]
 8001fb4:	9301      	str	r3, [sp, #4]
 8001fb6:	4601      	mov	r1, r0
 8001fb8:	4804      	ldr	r0, [pc, #16]	@ (8001fcc <IOE_Read+0x30>)
 8001fba:	f002 f9e5 	bl	8004388 <HAL_I2C_Mem_Read>
}
 8001fbe:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001fc2:	b007      	add	sp, #28
 8001fc4:	f85d fb04 	ldr.w	pc, [sp], #4
 8001fc8:	20000060 	.word	0x20000060
 8001fcc:	20003058 	.word	0x20003058

08001fd0 <IOE_ReadMultiple>:
{
 8001fd0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001fd2:	4c08      	ldr	r4, [pc, #32]	@ (8001ff4 <IOE_ReadMultiple+0x24>)
 8001fd4:	6824      	ldr	r4, [r4, #0]
 8001fd6:	9200      	str	r2, [sp, #0]
 8001fd8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001fdc:	460a      	mov	r2, r1
 8001fde:	2301      	movs	r3, #1
 8001fe0:	4601      	mov	r1, r0
 8001fe2:	4805      	ldr	r0, [pc, #20]	@ (8001ff8 <IOE_ReadMultiple+0x28>)
 8001fe4:	f002 f9d0 	bl	8004388 <HAL_I2C_Mem_Read>
}
 8001fe8:	3800      	subs	r0, #0
 8001fea:	bf18      	it	ne
 8001fec:	2001      	movne	r0, #1
 8001fee:	b004      	add	sp, #16
 8001ff0:	bd10      	pop	{r4, pc}
 8001ff2:	bf00      	nop
 8001ff4:	20000060 	.word	0x20000060
 8001ff8:	20003058 	.word	0x20003058

08001ffc <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8001ffc:	f001 bc24 	b.w	8003848 <HAL_Delay>

08002000 <LCD_IO_Init>:
{
 8002000:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002002:	4c06      	ldr	r4, [pc, #24]	@ (800201c <LCD_IO_Init+0x1c>)
 8002004:	2200      	movs	r2, #0
 8002006:	4620      	mov	r0, r4
 8002008:	2104      	movs	r1, #4
 800200a:	f001 fe77 	bl	8003cfc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800200e:	4620      	mov	r0, r4
 8002010:	2201      	movs	r2, #1
}
 8002012:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002016:	2104      	movs	r1, #4
 8002018:	f001 be70 	b.w	8003cfc <HAL_GPIO_WritePin>
 800201c:	40020800 	.word	0x40020800

08002020 <LCD_IO_WriteData>:
{
 8002020:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002022:	4d0b      	ldr	r5, [pc, #44]	@ (8002050 <LCD_IO_WriteData+0x30>)
{
 8002024:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002026:	2201      	movs	r2, #1
 8002028:	480a      	ldr	r0, [pc, #40]	@ (8002054 <LCD_IO_WriteData+0x34>)
 800202a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800202e:	f001 fe65 	bl	8003cfc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002032:	2200      	movs	r2, #0
 8002034:	2104      	movs	r1, #4
 8002036:	4628      	mov	r0, r5
 8002038:	f001 fe60 	bl	8003cfc <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800203c:	4620      	mov	r0, r4
 800203e:	f7ff fd03 	bl	8001a48 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002042:	4628      	mov	r0, r5
 8002044:	2201      	movs	r2, #1
}
 8002046:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800204a:	2104      	movs	r1, #4
 800204c:	f001 be56 	b.w	8003cfc <HAL_GPIO_WritePin>
 8002050:	40020800 	.word	0x40020800
 8002054:	40020c00 	.word	0x40020c00

08002058 <LCD_IO_WriteReg>:
{
 8002058:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800205a:	4d0b      	ldr	r5, [pc, #44]	@ (8002088 <LCD_IO_WriteReg+0x30>)
{
 800205c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800205e:	2200      	movs	r2, #0
 8002060:	480a      	ldr	r0, [pc, #40]	@ (800208c <LCD_IO_WriteReg+0x34>)
 8002062:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002066:	f001 fe49 	bl	8003cfc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800206a:	2200      	movs	r2, #0
 800206c:	2104      	movs	r1, #4
 800206e:	4628      	mov	r0, r5
 8002070:	f001 fe44 	bl	8003cfc <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8002074:	4620      	mov	r0, r4
 8002076:	f7ff fce7 	bl	8001a48 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800207a:	4628      	mov	r0, r5
 800207c:	2201      	movs	r2, #1
}
 800207e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002082:	2104      	movs	r1, #4
 8002084:	f001 be3a 	b.w	8003cfc <HAL_GPIO_WritePin>
 8002088:	40020800 	.word	0x40020800
 800208c:	40020c00 	.word	0x40020c00

08002090 <LCD_IO_ReadData>:
{
 8002090:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002092:	4e14      	ldr	r6, [pc, #80]	@ (80020e4 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002094:	4f14      	ldr	r7, [pc, #80]	@ (80020e8 <LCD_IO_ReadData+0x58>)
{
 8002096:	4605      	mov	r5, r0
 8002098:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800209a:	4630      	mov	r0, r6
 800209c:	2200      	movs	r2, #0
 800209e:	2104      	movs	r1, #4
 80020a0:	f001 fe2c 	bl	8003cfc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80020a4:	2200      	movs	r2, #0
 80020a6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80020aa:	4638      	mov	r0, r7
 80020ac:	f001 fe26 	bl	8003cfc <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80020b0:	4628      	mov	r0, r5
 80020b2:	f7ff fcc9 	bl	8001a48 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80020b6:	4b0d      	ldr	r3, [pc, #52]	@ (80020ec <LCD_IO_ReadData+0x5c>)
 80020b8:	480d      	ldr	r0, [pc, #52]	@ (80020f0 <LCD_IO_ReadData+0x60>)
 80020ba:	681b      	ldr	r3, [r3, #0]
 80020bc:	4622      	mov	r2, r4
 80020be:	a901      	add	r1, sp, #4
 80020c0:	f004 f858 	bl	8006174 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80020c4:	4638      	mov	r0, r7
 80020c6:	2201      	movs	r2, #1
 80020c8:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 80020cc:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80020ce:	f001 fe15 	bl	8003cfc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020d2:	4630      	mov	r0, r6
 80020d4:	2201      	movs	r2, #1
 80020d6:	2104      	movs	r1, #4
 80020d8:	f001 fe10 	bl	8003cfc <HAL_GPIO_WritePin>
}
 80020dc:	4620      	mov	r0, r4
 80020de:	b003      	add	sp, #12
 80020e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80020e2:	bf00      	nop
 80020e4:	40020800 	.word	0x40020800
 80020e8:	40020c00 	.word	0x40020c00
 80020ec:	2000005c 	.word	0x2000005c
 80020f0:	20002f58 	.word	0x20002f58

080020f4 <LCD_Delay>:
  HAL_Delay(Delay);
 80020f4:	f001 bba8 	b.w	8003848 <HAL_Delay>

080020f8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 80020f8:	6802      	ldr	r2, [r0, #0]
 80020fa:	4b03      	ldr	r3, [pc, #12]	@ (8002108 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80020fc:	429a      	cmp	r2, r3
 80020fe:	d101      	bne.n	8002104 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8002100:	f001 bb90 	b.w	8003824 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002104:	4770      	bx	lr
 8002106:	bf00      	nop
 8002108:	40001000 	.word	0x40001000

0800210c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 800210c:	4770      	bx	lr
	...

08002110 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002110:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002112:	4b0e      	ldr	r3, [pc, #56]	@ (800214c <HAL_MspInit+0x3c>)
 8002114:	2200      	movs	r2, #0
 8002116:	9200      	str	r2, [sp, #0]
 8002118:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800211a:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 800211e:	6459      	str	r1, [r3, #68]	@ 0x44
 8002120:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002122:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 8002126:	9100      	str	r1, [sp, #0]
 8002128:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800212a:	9201      	str	r2, [sp, #4]
 800212c:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 800212e:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8002132:	6419      	str	r1, [r3, #64]	@ 0x40
 8002134:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002136:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800213a:	9301      	str	r3, [sp, #4]
 800213c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800213e:	210f      	movs	r1, #15
 8002140:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002144:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002146:	f001 bba5 	b.w	8003894 <HAL_NVIC_SetPriority>
 800214a:	bf00      	nop
 800214c:	40023800 	.word	0x40023800

08002150 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002150:	6802      	ldr	r2, [r0, #0]
 8002152:	4b09      	ldr	r3, [pc, #36]	@ (8002178 <HAL_CRC_MspInit+0x28>)
 8002154:	429a      	cmp	r2, r3
{
 8002156:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002158:	d10b      	bne.n	8002172 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800215a:	2300      	movs	r3, #0
 800215c:	9301      	str	r3, [sp, #4]
 800215e:	4b07      	ldr	r3, [pc, #28]	@ (800217c <HAL_CRC_MspInit+0x2c>)
 8002160:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002162:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8002166:	631a      	str	r2, [r3, #48]	@ 0x30
 8002168:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800216a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800216e:	9301      	str	r3, [sp, #4]
 8002170:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8002172:	b002      	add	sp, #8
 8002174:	4770      	bx	lr
 8002176:	bf00      	nop
 8002178:	40023000 	.word	0x40023000
 800217c:	40023800 	.word	0x40023800

08002180 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002180:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002182:	4b0f      	ldr	r3, [pc, #60]	@ (80021c0 <HAL_DMA2D_MspInit+0x40>)
 8002184:	6802      	ldr	r2, [r0, #0]
 8002186:	429a      	cmp	r2, r3
 8002188:	d116      	bne.n	80021b8 <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800218a:	2200      	movs	r2, #0
 800218c:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8002190:	9201      	str	r2, [sp, #4]
 8002192:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002194:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8002198:	6319      	str	r1, [r3, #48]	@ 0x30
 800219a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800219c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80021a0:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80021a2:	2105      	movs	r1, #5
 80021a4:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80021a6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80021a8:	f001 fb74 	bl	8003894 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80021ac:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 80021ae:	b003      	add	sp, #12
 80021b0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80021b4:	f001 bba0 	b.w	80038f8 <HAL_NVIC_EnableIRQ>
}
 80021b8:	b003      	add	sp, #12
 80021ba:	f85d fb04 	ldr.w	pc, [sp], #4
 80021be:	bf00      	nop
 80021c0:	4002b000 	.word	0x4002b000

080021c4 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80021c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80021c8:	4604      	mov	r4, r0
 80021ca:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021cc:	2214      	movs	r2, #20
 80021ce:	2100      	movs	r1, #0
 80021d0:	a803      	add	r0, sp, #12
 80021d2:	f020 fdc0 	bl	8022d56 <memset>
  if(hi2c->Instance==I2C3)
 80021d6:	6822      	ldr	r2, [r4, #0]
 80021d8:	4b24      	ldr	r3, [pc, #144]	@ (800226c <HAL_I2C_MspInit+0xa8>)
 80021da:	429a      	cmp	r2, r3
 80021dc:	d143      	bne.n	8002266 <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80021de:	4c24      	ldr	r4, [pc, #144]	@ (8002270 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021e0:	4824      	ldr	r0, [pc, #144]	@ (8002274 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80021e2:	2500      	movs	r5, #0
 80021e4:	9500      	str	r5, [sp, #0]
 80021e6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80021e8:	f043 0304 	orr.w	r3, r3, #4
 80021ec:	6323      	str	r3, [r4, #48]	@ 0x30
 80021ee:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80021f0:	f003 0304 	and.w	r3, r3, #4
 80021f4:	9300      	str	r3, [sp, #0]
 80021f6:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80021f8:	9501      	str	r5, [sp, #4]
 80021fa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80021fc:	f043 0301 	orr.w	r3, r3, #1
 8002200:	6323      	str	r3, [r4, #48]	@ 0x30
 8002202:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002204:	f003 0301 	and.w	r3, r3, #1
 8002208:	9301      	str	r3, [sp, #4]
 800220a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800220c:	f04f 0912 	mov.w	r9, #18
 8002210:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002214:	f04f 0801 	mov.w	r8, #1
 8002218:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800221a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800221c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800221e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002222:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002226:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002228:	f001 fc7e 	bl	8003b28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800222c:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002230:	4811      	ldr	r0, [pc, #68]	@ (8002278 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002232:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002234:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002236:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800223a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800223e:	f001 fc73 	bl	8003b28 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002242:	9502      	str	r5, [sp, #8]
 8002244:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002246:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800224a:	6423      	str	r3, [r4, #64]	@ 0x40
 800224c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800224e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002252:	9302      	str	r3, [sp, #8]
 8002254:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002256:	6a23      	ldr	r3, [r4, #32]
 8002258:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800225c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800225e:	6a23      	ldr	r3, [r4, #32]
 8002260:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002264:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 8002266:	b009      	add	sp, #36	@ 0x24
 8002268:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800226c:	40005c00 	.word	0x40005c00
 8002270:	40023800 	.word	0x40023800
 8002274:	40020800 	.word	0x40020800
 8002278:	40020000 	.word	0x40020000

0800227c <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800227c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800227e:	b099      	sub	sp, #100	@ 0x64
 8002280:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002282:	2214      	movs	r2, #20
 8002284:	2100      	movs	r1, #0
 8002286:	a807      	add	r0, sp, #28
 8002288:	f020 fd65 	bl	8022d56 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800228c:	2230      	movs	r2, #48	@ 0x30
 800228e:	eb0d 0002 	add.w	r0, sp, r2
 8002292:	2100      	movs	r1, #0
 8002294:	f020 fd5f 	bl	8022d56 <memset>
  if(hltdc->Instance==LTDC)
 8002298:	6822      	ldr	r2, [r4, #0]
 800229a:	4b5e      	ldr	r3, [pc, #376]	@ (8002414 <HAL_LTDC_MspInit+0x198>)
 800229c:	429a      	cmp	r2, r3
 800229e:	f040 80b7 	bne.w	8002410 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80022a2:	2308      	movs	r3, #8
 80022a4:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80022a6:	23c0      	movs	r3, #192	@ 0xc0
 80022a8:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80022aa:	2304      	movs	r3, #4
 80022ac:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80022ae:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80022b0:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80022b4:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80022b6:	f003 fb0d 	bl	80058d4 <HAL_RCCEx_PeriphCLKConfig>
 80022ba:	b108      	cbz	r0, 80022c0 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 80022bc:	f7ff ff26 	bl	800210c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80022c0:	4b55      	ldr	r3, [pc, #340]	@ (8002418 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80022c2:	4856      	ldr	r0, [pc, #344]	@ (800241c <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80022c4:	2400      	movs	r4, #0
 80022c6:	9400      	str	r4, [sp, #0]
 80022c8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80022ca:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80022ce:	645a      	str	r2, [r3, #68]	@ 0x44
 80022d0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80022d2:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 80022d6:	9200      	str	r2, [sp, #0]
 80022d8:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80022da:	9401      	str	r4, [sp, #4]
 80022dc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022de:	f042 0220 	orr.w	r2, r2, #32
 80022e2:	631a      	str	r2, [r3, #48]	@ 0x30
 80022e4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022e6:	f002 0220 	and.w	r2, r2, #32
 80022ea:	9201      	str	r2, [sp, #4]
 80022ec:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022ee:	9402      	str	r4, [sp, #8]
 80022f0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022f2:	f042 0201 	orr.w	r2, r2, #1
 80022f6:	631a      	str	r2, [r3, #48]	@ 0x30
 80022f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022fa:	f002 0201 	and.w	r2, r2, #1
 80022fe:	9202      	str	r2, [sp, #8]
 8002300:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002302:	9403      	str	r4, [sp, #12]
 8002304:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002306:	f042 0202 	orr.w	r2, r2, #2
 800230a:	631a      	str	r2, [r3, #48]	@ 0x30
 800230c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800230e:	f002 0202 	and.w	r2, r2, #2
 8002312:	9203      	str	r2, [sp, #12]
 8002314:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002316:	9404      	str	r4, [sp, #16]
 8002318:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800231a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800231e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002320:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002322:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8002326:	9204      	str	r2, [sp, #16]
 8002328:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800232a:	9405      	str	r4, [sp, #20]
 800232c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800232e:	f042 0204 	orr.w	r2, r2, #4
 8002332:	631a      	str	r2, [r3, #48]	@ 0x30
 8002334:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002336:	f002 0204 	and.w	r2, r2, #4
 800233a:	9205      	str	r2, [sp, #20]
 800233c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800233e:	9406      	str	r4, [sp, #24]
 8002340:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002342:	f042 0208 	orr.w	r2, r2, #8
 8002346:	631a      	str	r2, [r3, #48]	@ 0x30
 8002348:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800234a:	f003 0308 	and.w	r3, r3, #8
 800234e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002350:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002352:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002354:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002356:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002358:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800235c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800235e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002362:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002366:	f001 fbdf 	bl	8003b28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800236a:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800236e:	482c      	ldr	r0, [pc, #176]	@ (8002420 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002370:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002372:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002374:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002378:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800237a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800237e:	f001 fbd3 	bl	8003b28 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002382:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002384:	4827      	ldr	r0, [pc, #156]	@ (8002424 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002386:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002388:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800238a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800238e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002392:	f001 fbc9 	bl	8003b28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002396:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800239a:	4822      	ldr	r0, [pc, #136]	@ (8002424 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800239c:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800239e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023a0:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023a4:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023a8:	f001 fbbe 	bl	8003b28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80023ac:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023b0:	481d      	ldr	r0, [pc, #116]	@ (8002428 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023b2:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023b4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023b6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023ba:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023be:	f001 fbb3 	bl	8003b28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80023c2:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023c4:	4819      	ldr	r0, [pc, #100]	@ (800242c <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023c6:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023c8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023ca:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023ce:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023d2:	f001 fba9 	bl	8003b28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80023d6:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023d8:	4815      	ldr	r0, [pc, #84]	@ (8002430 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023da:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023dc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023de:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023e2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023e6:	f001 fb9f 	bl	8003b28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80023ea:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023ee:	480e      	ldr	r0, [pc, #56]	@ (8002428 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80023f0:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023f2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023f4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023f8:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023fc:	f001 fb94 	bl	8003b28 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002400:	2058      	movs	r0, #88	@ 0x58
 8002402:	4622      	mov	r2, r4
 8002404:	2105      	movs	r1, #5
 8002406:	f001 fa45 	bl	8003894 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800240a:	2058      	movs	r0, #88	@ 0x58
 800240c:	f001 fa74 	bl	80038f8 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002410:	b019      	add	sp, #100	@ 0x64
 8002412:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002414:	40016800 	.word	0x40016800
 8002418:	40023800 	.word	0x40023800
 800241c:	40021400 	.word	0x40021400
 8002420:	40020000 	.word	0x40020000
 8002424:	40020400 	.word	0x40020400
 8002428:	40021800 	.word	0x40021800
 800242c:	40020800 	.word	0x40020800
 8002430:	40020c00 	.word	0x40020c00

08002434 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002434:	b510      	push	{r4, lr}
 8002436:	4604      	mov	r4, r0
 8002438:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800243a:	2214      	movs	r2, #20
 800243c:	2100      	movs	r1, #0
 800243e:	a803      	add	r0, sp, #12
 8002440:	f020 fc89 	bl	8022d56 <memset>
  if(hspi->Instance==SPI5)
 8002444:	6822      	ldr	r2, [r4, #0]
 8002446:	4b14      	ldr	r3, [pc, #80]	@ (8002498 <HAL_SPI_MspInit+0x64>)
 8002448:	429a      	cmp	r2, r3
 800244a:	d123      	bne.n	8002494 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 800244c:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002450:	2100      	movs	r1, #0
 8002452:	9101      	str	r1, [sp, #4]
 8002454:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002456:	4811      	ldr	r0, [pc, #68]	@ (800249c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002458:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 800245c:	645a      	str	r2, [r3, #68]	@ 0x44
 800245e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002460:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002464:	9201      	str	r2, [sp, #4]
 8002466:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002468:	9102      	str	r1, [sp, #8]
 800246a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800246c:	f042 0220 	orr.w	r2, r2, #32
 8002470:	631a      	str	r2, [r3, #48]	@ 0x30
 8002472:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002474:	f003 0320 	and.w	r3, r3, #32
 8002478:	9302      	str	r3, [sp, #8]
 800247a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800247c:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8002480:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002482:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002484:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002488:	2305      	movs	r3, #5
 800248a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800248e:	a903      	add	r1, sp, #12
 8002490:	f001 fb4a 	bl	8003b28 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 8002494:	b008      	add	sp, #32
 8002496:	bd10      	pop	{r4, pc}
 8002498:	40015000 	.word	0x40015000
 800249c:	40021400 	.word	0x40021400

080024a0 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80024a0:	b510      	push	{r4, lr}
 80024a2:	4604      	mov	r4, r0
 80024a4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024a6:	2214      	movs	r2, #20
 80024a8:	2100      	movs	r1, #0
 80024aa:	a803      	add	r0, sp, #12
 80024ac:	f020 fc53 	bl	8022d56 <memset>
  if(huart->Instance==USART1)
 80024b0:	6822      	ldr	r2, [r4, #0]
 80024b2:	4b14      	ldr	r3, [pc, #80]	@ (8002504 <HAL_UART_MspInit+0x64>)
 80024b4:	429a      	cmp	r2, r3
 80024b6:	d123      	bne.n	8002500 <HAL_UART_MspInit+0x60>
  {
    /* USER CODE BEGIN USART1_MspInit 0 */

    /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80024b8:	f503 3394 	add.w	r3, r3, #75776	@ 0x12800
 80024bc:	2100      	movs	r1, #0
 80024be:	9101      	str	r1, [sp, #4]
 80024c0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024c2:	4811      	ldr	r0, [pc, #68]	@ (8002508 <HAL_UART_MspInit+0x68>)
    __HAL_RCC_USART1_CLK_ENABLE();
 80024c4:	f042 0210 	orr.w	r2, r2, #16
 80024c8:	645a      	str	r2, [r3, #68]	@ 0x44
 80024ca:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80024cc:	f002 0210 	and.w	r2, r2, #16
 80024d0:	9201      	str	r2, [sp, #4]
 80024d2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024d4:	9102      	str	r1, [sp, #8]
 80024d6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80024d8:	f042 0201 	orr.w	r2, r2, #1
 80024dc:	631a      	str	r2, [r3, #48]	@ 0x30
 80024de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024e0:	f003 0301 	and.w	r3, r3, #1
 80024e4:	9302      	str	r3, [sp, #8]
 80024e6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024e8:	f44f 62c0 	mov.w	r2, #1536	@ 0x600
 80024ec:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80024ee:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024f0:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80024f4:	2307      	movs	r3, #7
 80024f6:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024fa:	a903      	add	r1, sp, #12
 80024fc:	f001 fb14 	bl	8003b28 <HAL_GPIO_Init>

    /* USER CODE END USART1_MspInit 1 */

  }

}
 8002500:	b008      	add	sp, #32
 8002502:	bd10      	pop	{r4, pc}
 8002504:	40011000 	.word	0x40011000
 8002508:	40020000 	.word	0x40020000

0800250c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800250c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002510:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002512:	2300      	movs	r3, #0
 8002514:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002516:	4b2b      	ldr	r3, [pc, #172]	@ (80025c4 <HAL_SDRAM_MspInit+0xb8>)
 8002518:	681c      	ldr	r4, [r3, #0]
 800251a:	2c00      	cmp	r4, #0
 800251c:	d14f      	bne.n	80025be <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 800251e:	f04f 0801 	mov.w	r8, #1
 8002522:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002526:	4b28      	ldr	r3, [pc, #160]	@ (80025c8 <HAL_SDRAM_MspInit+0xbc>)
 8002528:	9400      	str	r4, [sp, #0]
 800252a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800252c:	4827      	ldr	r0, [pc, #156]	@ (80025cc <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800252e:	ea42 0208 	orr.w	r2, r2, r8
 8002532:	639a      	str	r2, [r3, #56]	@ 0x38
 8002534:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002536:	ea03 0308 	and.w	r3, r3, r8
 800253a:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800253c:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800253e:	2603      	movs	r6, #3
 8002540:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002542:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002544:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002546:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 800254a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800254e:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002552:	f001 fae9 	bl	8003b28 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002556:	481e      	ldr	r0, [pc, #120]	@ (80025d0 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002558:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800255a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800255c:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002560:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002564:	f001 fae0 	bl	8003b28 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002568:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800256c:	4819      	ldr	r0, [pc, #100]	@ (80025d4 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800256e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002570:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002572:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002576:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800257a:	f001 fad5 	bl	8003b28 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800257e:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002582:	4815      	ldr	r0, [pc, #84]	@ (80025d8 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002584:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002586:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002588:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800258c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002590:	f001 faca 	bl	8003b28 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002594:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002598:	4810      	ldr	r0, [pc, #64]	@ (80025dc <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800259a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800259c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800259e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025a2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025a6:	f001 fabf 	bl	8003b28 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80025aa:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025ac:	480c      	ldr	r0, [pc, #48]	@ (80025e0 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025ae:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025b0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025b2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025b6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025ba:	f001 fab5 	bl	8003b28 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80025be:	b006      	add	sp, #24
 80025c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80025c4:	200030f8 	.word	0x200030f8
 80025c8:	40023800 	.word	0x40023800
 80025cc:	40021400 	.word	0x40021400
 80025d0:	40020800 	.word	0x40020800
 80025d4:	40021800 	.word	0x40021800
 80025d8:	40021000 	.word	0x40021000
 80025dc:	40020c00 	.word	0x40020c00
 80025e0:	40020400 	.word	0x40020400

080025e4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80025e4:	b570      	push	{r4, r5, r6, lr}
 80025e6:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80025e8:	2300      	movs	r3, #0
 80025ea:	9302      	str	r3, [sp, #8]
 80025ec:	4b20      	ldr	r3, [pc, #128]	@ (8002670 <HAL_InitTick+0x8c>)
 80025ee:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80025f0:	f042 0210 	orr.w	r2, r2, #16
 80025f4:	641a      	str	r2, [r3, #64]	@ 0x40
 80025f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025f8:	f003 0310 	and.w	r3, r3, #16
 80025fc:	9302      	str	r3, [sp, #8]
{
 80025fe:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002600:	a901      	add	r1, sp, #4
 8002602:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002604:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002606:	f003 f947 	bl	8005898 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800260a:	9b06      	ldr	r3, [sp, #24]
 800260c:	bb4b      	cbnz	r3, 8002662 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800260e:	f003 f923 	bl	8005858 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002612:	4e18      	ldr	r6, [pc, #96]	@ (8002674 <HAL_InitTick+0x90>)
 8002614:	4b18      	ldr	r3, [pc, #96]	@ (8002678 <HAL_InitTick+0x94>)
 8002616:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002618:	f240 33e7 	movw	r3, #999	@ 0x3e7
 800261c:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800261e:	4b17      	ldr	r3, [pc, #92]	@ (800267c <HAL_InitTick+0x98>)
 8002620:	fbb0 f3f3 	udiv	r3, r0, r3
 8002624:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002626:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002628:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 800262a:	2300      	movs	r3, #0
 800262c:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800262e:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002630:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002632:	f003 ff69 	bl	8006508 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002636:	4604      	mov	r4, r0
 8002638:	b980      	cbnz	r0, 800265c <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 800263a:	4630      	mov	r0, r6
 800263c:	f003 fe3e 	bl	80062bc <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002640:	4604      	mov	r4, r0
 8002642:	b958      	cbnz	r0, 800265c <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002644:	2036      	movs	r0, #54	@ 0x36
 8002646:	f001 f957 	bl	80038f8 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800264a:	2d0f      	cmp	r5, #15
 800264c:	d80d      	bhi.n	800266a <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800264e:	4622      	mov	r2, r4
 8002650:	4629      	mov	r1, r5
 8002652:	2036      	movs	r0, #54	@ 0x36
 8002654:	f001 f91e 	bl	8003894 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002658:	4b09      	ldr	r3, [pc, #36]	@ (8002680 <HAL_InitTick+0x9c>)
 800265a:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 800265c:	4620      	mov	r0, r4
 800265e:	b008      	add	sp, #32
 8002660:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002662:	f003 f8f9 	bl	8005858 <HAL_RCC_GetPCLK1Freq>
 8002666:	0040      	lsls	r0, r0, #1
 8002668:	e7d3      	b.n	8002612 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 800266a:	2401      	movs	r4, #1
 800266c:	e7f6      	b.n	800265c <HAL_InitTick+0x78>
 800266e:	bf00      	nop
 8002670:	40023800 	.word	0x40023800
 8002674:	200030fc 	.word	0x200030fc
 8002678:	40001000 	.word	0x40001000
 800267c:	000f4240 	.word	0x000f4240
 8002680:	200000d4 	.word	0x200000d4

08002684 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002684:	4770      	bx	lr

08002686 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002686:	e7fe      	b.n	8002686 <HardFault_Handler>

08002688 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002688:	e7fe      	b.n	8002688 <MemManage_Handler>

0800268a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800268a:	e7fe      	b.n	800268a <BusFault_Handler>

0800268c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800268c:	e7fe      	b.n	800268c <UsageFault_Handler>

0800268e <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 800268e:	4770      	bx	lr

08002690 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002690:	4801      	ldr	r0, [pc, #4]	@ (8002698 <TIM6_DAC_IRQHandler+0x8>)
 8002692:	f003 be51 	b.w	8006338 <HAL_TIM_IRQHandler>
 8002696:	bf00      	nop
 8002698:	200030fc 	.word	0x200030fc

0800269c <OTG_HS_IRQHandler>:
void OTG_HS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 800269c:	4801      	ldr	r0, [pc, #4]	@ (80026a4 <OTG_HS_IRQHandler+0x8>)
 800269e:	f002 baf3 	b.w	8004c88 <HAL_PCD_IRQHandler>
 80026a2:	bf00      	nop
 80026a4:	200029e0 	.word	0x200029e0

080026a8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80026a8:	4801      	ldr	r0, [pc, #4]	@ (80026b0 <LTDC_IRQHandler+0x8>)
 80026aa:	f002 b886 	b.w	80047ba <HAL_LTDC_IRQHandler>
 80026ae:	bf00      	nop
 80026b0:	20002fb0 	.word	0x20002fb0

080026b4 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80026b4:	4801      	ldr	r0, [pc, #4]	@ (80026bc <DMA2D_IRQHandler+0x8>)
 80026b6:	f001 b969 	b.w	800398c <HAL_DMA2D_IRQHandler>
 80026ba:	bf00      	nop
 80026bc:	200030ac 	.word	0x200030ac

080026c0 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80026c0:	2001      	movs	r0, #1
 80026c2:	4770      	bx	lr

080026c4 <_kill>:

int _kill(int pid, int sig)
{
 80026c4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80026c6:	f020 fc47 	bl	8022f58 <__errno>
 80026ca:	2316      	movs	r3, #22
 80026cc:	6003      	str	r3, [r0, #0]
	return -1;
}
 80026ce:	f04f 30ff 	mov.w	r0, #4294967295
 80026d2:	bd08      	pop	{r3, pc}

080026d4 <_exit>:

void _exit (int status)
{
 80026d4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80026d6:	f020 fc3f 	bl	8022f58 <__errno>
 80026da:	2316      	movs	r3, #22
 80026dc:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80026de:	e7fe      	b.n	80026de <_exit+0xa>

080026e0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80026e0:	b570      	push	{r4, r5, r6, lr}
 80026e2:	460d      	mov	r5, r1
 80026e4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026e6:	460e      	mov	r6, r1
 80026e8:	1b73      	subs	r3, r6, r5
 80026ea:	429c      	cmp	r4, r3
 80026ec:	dc01      	bgt.n	80026f2 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80026ee:	4620      	mov	r0, r4
 80026f0:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80026f2:	f3af 8000 	nop.w
 80026f6:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026fa:	e7f5      	b.n	80026e8 <_read+0x8>

080026fc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80026fc:	b570      	push	{r4, r5, r6, lr}
 80026fe:	460d      	mov	r5, r1
 8002700:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002702:	460e      	mov	r6, r1
 8002704:	1b73      	subs	r3, r6, r5
 8002706:	429c      	cmp	r4, r3
 8002708:	dc01      	bgt.n	800270e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800270a:	4620      	mov	r0, r4
 800270c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800270e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002712:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002716:	e7f5      	b.n	8002704 <_write+0x8>

08002718 <_close>:

int _close(int file)
{
	return -1;
}
 8002718:	f04f 30ff 	mov.w	r0, #4294967295
 800271c:	4770      	bx	lr

0800271e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800271e:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002722:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002724:	2000      	movs	r0, #0
 8002726:	4770      	bx	lr

08002728 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002728:	2001      	movs	r0, #1
 800272a:	4770      	bx	lr

0800272c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 800272c:	2000      	movs	r0, #0
 800272e:	4770      	bx	lr

08002730 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002730:	4a0a      	ldr	r2, [pc, #40]	@ (800275c <_sbrk+0x2c>)
 8002732:	6811      	ldr	r1, [r2, #0]
{
 8002734:	b508      	push	{r3, lr}
 8002736:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002738:	b909      	cbnz	r1, 800273e <_sbrk+0xe>
		heap_end = &end;
 800273a:	4909      	ldr	r1, [pc, #36]	@ (8002760 <_sbrk+0x30>)
 800273c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800273e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002740:	4669      	mov	r1, sp
 8002742:	4403      	add	r3, r0
 8002744:	428b      	cmp	r3, r1
 8002746:	d906      	bls.n	8002756 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002748:	f020 fc06 	bl	8022f58 <__errno>
 800274c:	230c      	movs	r3, #12
 800274e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002750:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002754:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002756:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002758:	e7fc      	b.n	8002754 <_sbrk+0x24>
 800275a:	bf00      	nop
 800275c:	20003144 	.word	0x20003144
 8002760:	20014d40 	.word	0x20014d40

08002764 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002764:	4770      	bx	lr

08002766 <_ZN23ApplicationFontProviderD0Ev>:
 8002766:	b510      	push	{r4, lr}
 8002768:	2104      	movs	r1, #4
 800276a:	4604      	mov	r4, r0
 800276c:	f01f f979 	bl	8021a62 <_ZdlPvj>
 8002770:	4620      	mov	r0, r4
 8002772:	bd10      	pop	{r4, pc}

08002774 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002774:	2901      	cmp	r1, #1
{
 8002776:	b508      	push	{r3, lr}
    switch (typography)
 8002778:	d006      	beq.n	8002788 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800277a:	2902      	cmp	r1, #2
 800277c:	d008      	beq.n	8002790 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800277e:	b959      	cbnz	r1, 8002798 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002780:	f000 fb96 	bl	8002eb0 <_ZN17TypedTextDatabase8getFontsEv>
 8002784:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002786:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002788:	f000 fb92 	bl	8002eb0 <_ZN17TypedTextDatabase8getFontsEv>
 800278c:	6840      	ldr	r0, [r0, #4]
 800278e:	e7fa      	b.n	8002786 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002790:	f000 fb8e 	bl	8002eb0 <_ZN17TypedTextDatabase8getFontsEv>
 8002794:	6880      	ldr	r0, [r0, #8]
 8002796:	e7f6      	b.n	8002786 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002798:	2000      	movs	r0, #0
 800279a:	e7f4      	b.n	8002786 <_ZN23ApplicationFontProvider7getFontEt+0x12>

0800279c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800279c:	4800      	ldr	r0, [pc, #0]	@ (80027a0 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800279e:	4770      	bx	lr
 80027a0:	08024c30 	.word	0x08024c30

080027a4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80027a4:	2001      	movs	r0, #1
 80027a6:	4770      	bx	lr

080027a8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80027a8:	b513      	push	{r0, r1, r4, lr}
 80027aa:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80027ac:	b151      	cbz	r1, 80027c4 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80027ae:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80027b0:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80027b2:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80027b6:	aa01      	add	r2, sp, #4
 80027b8:	689c      	ldr	r4, [r3, #8]
 80027ba:	f10d 0303 	add.w	r3, sp, #3
 80027be:	47a0      	blx	r4
        return glyph;
    }
 80027c0:	b002      	add	sp, #8
 80027c2:	bd10      	pop	{r4, pc}
            return 0;
 80027c4:	4608      	mov	r0, r1
 80027c6:	e7fb      	b.n	80027c0 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080027c8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80027c8:	89c0      	ldrh	r0, [r0, #14]
 80027ca:	4770      	bx	lr

080027cc <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80027cc:	8a00      	ldrh	r0, [r0, #16]
 80027ce:	4770      	bx	lr

080027d0 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80027d0:	88c0      	ldrh	r0, [r0, #6]
 80027d2:	4770      	bx	lr

080027d4 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80027d4:	8880      	ldrh	r0, [r0, #4]
 80027d6:	4770      	bx	lr

080027d8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80027d8:	7a80      	ldrb	r0, [r0, #10]
    }
 80027da:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 80027de:	4770      	bx	lr

080027e0 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80027e0:	7a80      	ldrb	r0, [r0, #10]
    }
 80027e2:	09c0      	lsrs	r0, r0, #7
 80027e4:	4770      	bx	lr

080027e6 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 80027e6:	2000      	movs	r0, #0
 80027e8:	4770      	bx	lr
	...

080027ec <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 80027ec:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80027f4 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 80027f0:	4770      	bx	lr
 80027f2:	bf00      	nop
 80027f4:	00000000 	.word	0x00000000

080027f8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80027f8:	4770      	bx	lr

080027fa <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80027fa:	4770      	bx	lr

080027fc <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80027fc:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002800:	6808      	ldr	r0, [r1, #0]
 8002802:	6849      	ldr	r1, [r1, #4]
 8002804:	c303      	stmia	r3!, {r0, r1}
    }
 8002806:	4770      	bx	lr

08002808 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002808:	4770      	bx	lr

0800280a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800280a:	4770      	bx	lr

0800280c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800280c:	6041      	str	r1, [r0, #4]
    }
 800280e:	4770      	bx	lr

08002810 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002810:	4770      	bx	lr

08002812 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002812:	4770      	bx	lr

08002814 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002814:	4b06      	ldr	r3, [pc, #24]	@ (8002830 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002816:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800281a:	2300      	movs	r3, #0
 800281c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002820:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002824:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002828:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 800282c:	4770      	bx	lr
 800282e:	bf00      	nop
 8002830:	080028d5 	.word	0x080028d5

08002834 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002834:	2301      	movs	r3, #1
 8002836:	7203      	strb	r3, [r0, #8]
    }
 8002838:	4770      	bx	lr

0800283a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800283a:	4770      	bx	lr

0800283c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800283c:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800283e:	68c2      	ldr	r2, [r0, #12]
 8002840:	6841      	ldr	r1, [r0, #4]
 8002842:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002844:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002846:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800284a:	07d2      	lsls	r2, r2, #31
 800284c:	bf48      	it	mi
 800284e:	590a      	ldrmi	r2, [r1, r4]
 8002850:	689b      	ldr	r3, [r3, #8]
    }
 8002852:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002856:	bf48      	it	mi
 8002858:	58d3      	ldrmi	r3, [r2, r3]
 800285a:	4718      	bx	r3

0800285c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800285c:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 800285e:	6840      	ldr	r0, [r0, #4]
 8002860:	b130      	cbz	r0, 8002870 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002862:	689a      	ldr	r2, [r3, #8]
 8002864:	b91a      	cbnz	r2, 800286e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002866:	68d8      	ldr	r0, [r3, #12]
 8002868:	f000 0001 	and.w	r0, r0, #1
 800286c:	4770      	bx	lr
 800286e:	2001      	movs	r0, #1
    }
 8002870:	4770      	bx	lr

08002872 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002872:	b510      	push	{r4, lr}
 8002874:	210c      	movs	r1, #12
 8002876:	4604      	mov	r4, r0
 8002878:	f01f f8f3 	bl	8021a62 <_ZdlPvj>
 800287c:	4620      	mov	r0, r4
 800287e:	bd10      	pop	{r4, pc}

08002880 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002880:	b510      	push	{r4, lr}
 8002882:	2110      	movs	r1, #16
 8002884:	4604      	mov	r4, r0
 8002886:	f01f f8ec 	bl	8021a62 <_ZdlPvj>
 800288a:	4620      	mov	r0, r4
 800288c:	bd10      	pop	{r4, pc}

0800288e <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800288e:	b510      	push	{r4, lr}
 8002890:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002894:	4604      	mov	r4, r0
 8002896:	f01f f8e4 	bl	8021a62 <_ZdlPvj>
 800289a:	4620      	mov	r0, r4
 800289c:	bd10      	pop	{r4, pc}

0800289e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800289e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80028a0:	f00c fe4a 	bl	800f538 <_ZN8touchgfx11Application11getInstanceEv>
 80028a4:	6803      	ldr	r3, [r0, #0]
    }
 80028a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80028aa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80028ac:	4718      	bx	r3

080028ae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80028ae:	b510      	push	{r4, lr}
 80028b0:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80028b2:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 80028b6:	b158      	cbz	r0, 80028d0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80028b8:	6803      	ldr	r3, [r0, #0]
 80028ba:	68db      	ldr	r3, [r3, #12]
 80028bc:	4798      	blx	r3
 80028be:	b138      	cbz	r0, 80028d0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80028c0:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 80028c4:	6803      	ldr	r3, [r0, #0]
 80028c6:	689b      	ldr	r3, [r3, #8]
 80028c8:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80028ca:	2300      	movs	r3, #0
 80028cc:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80028d0:	bd10      	pop	{r4, pc}
	...

080028d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80028d4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80028d8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80028dc:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80028de:	68b0      	ldr	r0, [r6, #8]
 80028e0:	6803      	ldr	r3, [r0, #0]
 80028e2:	6a1b      	ldr	r3, [r3, #32]
 80028e4:	4798      	blx	r3
 80028e6:	f640 63e7 	movw	r3, #3815	@ 0xee7
 80028ea:	4298      	cmp	r0, r3
 80028ec:	d805      	bhi.n	80028fa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x26>
 80028ee:	4b44      	ldr	r3, [pc, #272]	@ (8002a00 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 80028f0:	4a44      	ldr	r2, [pc, #272]	@ (8002a04 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80028f2:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80028f4:	4844      	ldr	r0, [pc, #272]	@ (8002a08 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80028f6:	f01f fff1 	bl	80228dc <__assert_func>
 80028fa:	6870      	ldr	r0, [r6, #4]
 80028fc:	6803      	ldr	r3, [r0, #0]
 80028fe:	6a1b      	ldr	r3, [r3, #32]
 8002900:	4798      	blx	r3
 8002902:	280f      	cmp	r0, #15
 8002904:	d803      	bhi.n	800290e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x3a>
 8002906:	4b41      	ldr	r3, [pc, #260]	@ (8002a0c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002908:	4a3e      	ldr	r2, [pc, #248]	@ (8002a04 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800290a:	21a4      	movs	r1, #164	@ 0xa4
 800290c:	e7f2      	b.n	80028f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800290e:	68f0      	ldr	r0, [r6, #12]
 8002910:	6803      	ldr	r3, [r0, #0]
 8002912:	6a1b      	ldr	r3, [r3, #32]
 8002914:	4798      	blx	r3
 8002916:	280b      	cmp	r0, #11
 8002918:	d803      	bhi.n	8002922 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4e>
 800291a:	4b3d      	ldr	r3, [pc, #244]	@ (8002a10 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 800291c:	4a39      	ldr	r2, [pc, #228]	@ (8002a04 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800291e:	21a5      	movs	r1, #165	@ 0xa5
 8002920:	e7e8      	b.n	80028f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002922:	f00c fe09 	bl	800f538 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002926:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002a18 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800292a:	3004      	adds	r0, #4
 800292c:	f00c fe29 	bl	800f582 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002930:	f8d9 0000 	ldr.w	r0, [r9]
 8002934:	b110      	cbz	r0, 800293c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002936:	6803      	ldr	r3, [r0, #0]
 8002938:	68db      	ldr	r3, [r3, #12]
 800293a:	4798      	blx	r3
    if (*currentTrans)
 800293c:	f8d9 0000 	ldr.w	r0, [r9]
 8002940:	b110      	cbz	r0, 8002948 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002942:	6803      	ldr	r3, [r0, #0]
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	4798      	blx	r3
    if (*currentScreen)
 8002948:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002a1c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 800294c:	f8d8 0000 	ldr.w	r0, [r8]
 8002950:	b110      	cbz	r0, 8002958 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002952:	6803      	ldr	r3, [r0, #0]
 8002954:	695b      	ldr	r3, [r3, #20]
 8002956:	4798      	blx	r3
    if (*currentPresenter)
 8002958:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800295c:	b110      	cbz	r0, 8002964 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800295e:	6803      	ldr	r3, [r0, #0]
 8002960:	685b      	ldr	r3, [r3, #4]
 8002962:	4798      	blx	r3
    if (*currentScreen)
 8002964:	f8d8 0000 	ldr.w	r0, [r8]
 8002968:	b110      	cbz	r0, 8002970 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800296a:	6803      	ldr	r3, [r0, #0]
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	4798      	blx	r3
    if (*currentPresenter)
 8002970:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002974:	b110      	cbz	r0, 800297c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002976:	6803      	ldr	r3, [r0, #0]
 8002978:	689b      	ldr	r3, [r3, #8]
 800297a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800297c:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800297e:	6803      	ldr	r3, [r0, #0]
 8002980:	2100      	movs	r1, #0
 8002982:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002984:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002986:	f04f 0b00 	mov.w	fp, #0
 800298a:	4b22      	ldr	r3, [pc, #136]	@ (8002a14 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800298c:	f8c0 b004 	str.w	fp, [r0, #4]
 8002990:	4604      	mov	r4, r0
 8002992:	f880 b008 	strb.w	fp, [r0, #8]
 8002996:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002998:	68b0      	ldr	r0, [r6, #8]
 800299a:	6803      	ldr	r3, [r0, #0]
 800299c:	4659      	mov	r1, fp
 800299e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80029a0:	4798      	blx	r3
 80029a2:	4605      	mov	r5, r0
 80029a4:	f000 fb0a 	bl	8002fbc <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80029a8:	6870      	ldr	r0, [r6, #4]
 80029aa:	6803      	ldr	r3, [r0, #0]
 80029ac:	4659      	mov	r1, fp
 80029ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80029b0:	4798      	blx	r3
 80029b2:	4629      	mov	r1, r5
 80029b4:	4606      	mov	r6, r0
 80029b6:	f000 fac5 	bl	8002f44 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 80029ba:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80029bc:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80029c0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80029c4:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80029c8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80029cc:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80029ce:	f8c6 a008 	str.w	sl, [r6, #8]
 80029d2:	4628      	mov	r0, r5
 80029d4:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80029d6:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80029d8:	4798      	blx	r3
    newPresenter->activate();
 80029da:	6833      	ldr	r3, [r6, #0]
 80029dc:	4630      	mov	r0, r6
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80029e2:	4621      	mov	r1, r4
 80029e4:	4628      	mov	r0, r5
 80029e6:	f00e ffe3 	bl	80119b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80029ea:	6823      	ldr	r3, [r4, #0]
 80029ec:	4620      	mov	r0, r4
 80029ee:	691b      	ldr	r3, [r3, #16]
 80029f0:	4798      	blx	r3
    newTransition->invalidate();
 80029f2:	6823      	ldr	r3, [r4, #0]
 80029f4:	695b      	ldr	r3, [r3, #20]
 80029f6:	4620      	mov	r0, r4
}
 80029f8:	b001      	add	sp, #4
 80029fa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80029fe:	4718      	bx	r3
 8002a00:	0802432e 	.word	0x0802432e
 8002a04:	080243bc 	.word	0x080243bc
 8002a08:	0802448e 	.word	0x0802448e
 8002a0c:	080244d5 	.word	0x080244d5
 8002a10:	08024578 	.word	0x08024578
 8002a14:	08024cb8 	.word	0x08024cb8
 8002a18:	20014044 	.word	0x20014044
 8002a1c:	20014040 	.word	0x20014040

08002a20 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002a20:	4b04      	ldr	r3, [pc, #16]	@ (8002a34 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002a22:	681b      	ldr	r3, [r3, #0]
 8002a24:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002a28:	b10a      	cbz	r2, 8002a2e <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002a2a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002a2c:	b900      	cbnz	r0, 8002a30 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002a2e:	6898      	ldr	r0, [r3, #8]
    }
 8002a30:	4770      	bx	lr
 8002a32:	bf00      	nop
 8002a34:	20013ffc 	.word	0x20013ffc

08002a38 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002a38:	b570      	push	{r4, r5, r6, lr}
 8002a3a:	4604      	mov	r4, r0
 8002a3c:	460d      	mov	r5, r1
 8002a3e:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8002a40:	f00c fe3c 	bl	800f6bc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002a44:	4a10      	ldr	r2, [pc, #64]	@ (8002a88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002a46:	6014      	str	r4, [r2, #0]
      model(m)
 8002a48:	4a10      	ldr	r2, [pc, #64]	@ (8002a8c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002a4a:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
 8002a4c:	4a10      	ldr	r2, [pc, #64]	@ (8002a90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002a4e:	2300      	movs	r3, #0
 8002a50:	e9c4 2351 	strd	r2, r3, [r4, #324]	@ 0x144
 8002a54:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
          pendingScreenTransitionCallback(0)
 8002a58:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
        return instance;
 8002a5c:	4b0d      	ldr	r3, [pc, #52]	@ (8002a94 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002a5e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002a60:	6803      	ldr	r3, [r0, #0]
 8002a62:	2101      	movs	r1, #1
 8002a64:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002a66:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002a6a:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002a6c:	f7ff ffd8 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 8002a70:	f016 ff13 	bl	801989a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002a74:	f7ff ffd4 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 8002a78:	f016 ff8a 	bl	8019990 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8002a7c:	f7ff ffd0 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 8002a80:	f016 ff92 	bl	80199a8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8002a84:	4620      	mov	r0, r4
 8002a86:	bd70      	pop	{r4, r5, r6, pc}
 8002a88:	20014050 	.word	0x20014050
 8002a8c:	08024c64 	.word	0x08024c64
 8002a90:	08024c4c 	.word	0x08024c4c
 8002a94:	20013ffc 	.word	0x20013ffc

08002a98 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a98:	4b06      	ldr	r3, [pc, #24]	@ (8002ab4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002a9a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002a9e:	2300      	movs	r3, #0
 8002aa0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002aa4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002aa8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002aac:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002ab0:	4770      	bx	lr
 8002ab2:	bf00      	nop
 8002ab4:	080028d5 	.word	0x080028d5

08002ab8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002ab8:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002aba:	4770      	bx	lr

08002abc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002abc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002abe:	4770      	bx	lr

08002ac0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002ac0:	4770      	bx	lr

08002ac2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002ac2:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 8002ac4:	880b      	ldrh	r3, [r1, #0]
{
 8002ac6:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002ac8:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 8002aca:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002acc:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8002ace:	b29b      	uxth	r3, r3
    return pixels + offset;
 8002ad0:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 8002ad4:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 8002ad8:	4418      	add	r0, r3
 8002ada:	bd10      	pop	{r4, pc}

08002adc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002adc:	b510      	push	{r4, lr}
 8002ade:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002ae0:	b1ba      	cbz	r2, 8002b12 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002ae2:	7b10      	ldrb	r0, [r2, #12]
 8002ae4:	b168      	cbz	r0, 8002b02 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002ae6:	7b53      	ldrb	r3, [r2, #13]
 8002ae8:	7ad2      	ldrb	r2, [r2, #11]
 8002aea:	021b      	lsls	r3, r3, #8
 8002aec:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002af0:	431a      	orrs	r2, r3
 8002af2:	6a23      	ldr	r3, [r4, #32]
 8002af4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002af8:	881a      	ldrh	r2, [r3, #0]
 8002afa:	428a      	cmp	r2, r1
 8002afc:	d102      	bne.n	8002b04 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002afe:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002b02:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002b04:	d805      	bhi.n	8002b12 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002b06:	3801      	subs	r0, #1
 8002b08:	b280      	uxth	r0, r0
 8002b0a:	3304      	adds	r3, #4
 8002b0c:	2800      	cmp	r0, #0
 8002b0e:	d1f3      	bne.n	8002af8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002b10:	e7f7      	b.n	8002b02 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002b12:	2000      	movs	r0, #0
 8002b14:	e7f5      	b.n	8002b02 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002b16 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002b16:	b510      	push	{r4, lr}
 8002b18:	212c      	movs	r1, #44	@ 0x2c
 8002b1a:	4604      	mov	r4, r0
 8002b1c:	f01e ffa1 	bl	8021a62 <_ZdlPvj>
 8002b20:	4620      	mov	r0, r4
 8002b22:	bd10      	pop	{r4, pc}

08002b24 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002b24:	b530      	push	{r4, r5, lr}
 8002b26:	b08b      	sub	sp, #44	@ 0x2c
 8002b28:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002b2a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002b2e:	9508      	str	r5, [sp, #32]
 8002b30:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002b34:	9507      	str	r5, [sp, #28]
 8002b36:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002b3a:	9506      	str	r5, [sp, #24]
 8002b3c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002b40:	9505      	str	r5, [sp, #20]
 8002b42:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002b46:	9504      	str	r5, [sp, #16]
 8002b48:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002b4c:	9503      	str	r5, [sp, #12]
 8002b4e:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002b52:	9502      	str	r5, [sp, #8]
 8002b54:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002b58:	9501      	str	r5, [sp, #4]
 8002b5a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002b5e:	9500      	str	r5, [sp, #0]
 8002b60:	f00e faf4 	bl	801114c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002b64:	4b06      	ldr	r3, [pc, #24]	@ (8002b80 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8002b66:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002b68:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002b6a:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002b6c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002b6e:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002b70:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002b72:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8002b74:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8002b76:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8002b78:	4620      	mov	r0, r4
 8002b7a:	b00b      	add	sp, #44	@ 0x2c
 8002b7c:	bd30      	pop	{r4, r5, pc}
 8002b7e:	bf00      	nop
 8002b80:	08024cdc 	.word	0x08024cdc

08002b84 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002b84:	4770      	bx	lr

08002b86 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002b86:	4770      	bx	lr

08002b88 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002b88:	4770      	bx	lr

08002b8a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002b8a:	4770      	bx	lr

08002b8c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002b8c:	4770      	bx	lr

08002b8e <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 8002b8e:	4770      	bx	lr

08002b90 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 8002b90:	4770      	bx	lr

08002b92 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002b92:	b510      	push	{r4, lr}
}
 8002b94:	216c      	movs	r1, #108	@ 0x6c
Screen1ViewBase::~Screen1ViewBase()
 8002b96:	4604      	mov	r4, r0
}
 8002b98:	f01e ff63 	bl	8021a62 <_ZdlPvj>
 8002b9c:	4620      	mov	r0, r4
 8002b9e:	bd10      	pop	{r4, pc}

08002ba0 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 8002ba0:	b538      	push	{r3, r4, r5, lr}
 8002ba2:	4604      	mov	r4, r0
        : presenter(0)
 8002ba4:	f00e fd58 	bl	8011658 <_ZN8touchgfx6ScreenC1Ev>
 8002ba8:	2300      	movs	r3, #0
 8002baa:	e9c4 3311 	strd	r3, r3, [r4, #68]	@ 0x44
 8002bae:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
          nextSibling(0),
 8002bb2:	e9c4 3315 	strd	r3, r3, [r4, #84]	@ 0x54
          cachedAbsX(0),
 8002bb6:	e9c4 3317 	strd	r3, r3, [r4, #92]	@ 0x5c
 8002bba:	63e3      	str	r3, [r4, #60]	@ 0x3c
        : color(col)
 8002bbc:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002bbe:	4a0f      	ldr	r2, [pc, #60]	@ (8002bfc <_ZN15Screen1ViewBaseC1Ev+0x5c>)
 8002bc0:	6022      	str	r2, [r4, #0]
          touchable(false),
 8002bc2:	f44f 7380 	mov.w	r3, #256	@ 0x100
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002bc6:	4a0e      	ldr	r2, [pc, #56]	@ (8002c00 <_ZN15Screen1ViewBaseC1Ev+0x60>)
 8002bc8:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
    __background.setPosition(0, 0, 240, 320);
 8002bcc:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8002bd0:	23ff      	movs	r3, #255	@ 0xff
 8002bd2:	6422      	str	r2, [r4, #64]	@ 0x40
 8002bd4:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
        setWidth(width);
 8002bd8:	4628      	mov	r0, r5
 8002bda:	21f0      	movs	r1, #240	@ 0xf0
 8002bdc:	f7fe fbb2 	bl	8001344 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002be0:	4628      	mov	r0, r5
 8002be2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8002be6:	f7fe fbaf 	bl	8001348 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002bea:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002bee:	1d20      	adds	r0, r4, #4
 8002bf0:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002bf2:	4629      	mov	r1, r5
 8002bf4:	f007 fa14 	bl	800a020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002bf8:	4620      	mov	r0, r4
 8002bfa:	bd38      	pop	{r3, r4, r5, pc}
 8002bfc:	08024d44 	.word	0x08024d44
 8002c00:	0802519c 	.word	0x0802519c

08002c04 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002c04:	4770      	bx	lr
	...

08002c08 <_Z23getFont_verdana_10_4bppv>:
{
 8002c08:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002c0a:	4d16      	ldr	r5, [pc, #88]	@ (8002c64 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002c0c:	682c      	ldr	r4, [r5, #0]
 8002c0e:	f014 0401 	ands.w	r4, r4, #1
{
 8002c12:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002c14:	f3bf 8f5b 	dmb	ish
 8002c18:	d120      	bne.n	8002c5c <_Z23getFont_verdana_10_4bppv+0x54>
 8002c1a:	4628      	mov	r0, r5
 8002c1c:	f01e ff23 	bl	8021a66 <__cxa_guard_acquire>
 8002c20:	b1e0      	cbz	r0, 8002c5c <_Z23getFont_verdana_10_4bppv+0x54>
 8002c22:	233f      	movs	r3, #63	@ 0x3f
 8002c24:	9309      	str	r3, [sp, #36]	@ 0x24
 8002c26:	4b10      	ldr	r3, [pc, #64]	@ (8002c68 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002c28:	9308      	str	r3, [sp, #32]
 8002c2a:	4b10      	ldr	r3, [pc, #64]	@ (8002c6c <_Z23getFont_verdana_10_4bppv+0x64>)
 8002c2c:	4910      	ldr	r1, [pc, #64]	@ (8002c70 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002c2e:	4811      	ldr	r0, [pc, #68]	@ (8002c74 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002c30:	940a      	str	r4, [sp, #40]	@ 0x28
 8002c32:	2201      	movs	r2, #1
 8002c34:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002c38:	2304      	movs	r3, #4
 8002c3a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002c3e:	230a      	movs	r3, #10
 8002c40:	9300      	str	r3, [sp, #0]
 8002c42:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002c46:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002c4a:	9405      	str	r4, [sp, #20]
 8002c4c:	f7ff ff6a 	bl	8002b24 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002c50:	4809      	ldr	r0, [pc, #36]	@ (8002c78 <_Z23getFont_verdana_10_4bppv+0x70>)
 8002c52:	f01f fe61 	bl	8022918 <atexit>
 8002c56:	4628      	mov	r0, r5
 8002c58:	f01e ff11 	bl	8021a7e <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002c5c:	4805      	ldr	r0, [pc, #20]	@ (8002c74 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002c5e:	b00f      	add	sp, #60	@ 0x3c
 8002c60:	bd30      	pop	{r4, r5, pc}
 8002c62:	bf00      	nop
 8002c64:	20003148 	.word	0x20003148
 8002c68:	08025c08 	.word	0x08025c08
 8002c6c:	08025c14 	.word	0x08025c14
 8002c70:	08025bd8 	.word	0x08025bd8
 8002c74:	2000314c 	.word	0x2000314c
 8002c78:	08002c05 	.word	0x08002c05

08002c7c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002c7c:	4770      	bx	lr
	...

08002c80 <_Z23getFont_verdana_20_4bppv>:
{
 8002c80:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002c82:	4d16      	ldr	r5, [pc, #88]	@ (8002cdc <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002c84:	682c      	ldr	r4, [r5, #0]
 8002c86:	f014 0401 	ands.w	r4, r4, #1
{
 8002c8a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002c8c:	f3bf 8f5b 	dmb	ish
 8002c90:	d120      	bne.n	8002cd4 <_Z23getFont_verdana_20_4bppv+0x54>
 8002c92:	4628      	mov	r0, r5
 8002c94:	f01e fee7 	bl	8021a66 <__cxa_guard_acquire>
 8002c98:	b1e0      	cbz	r0, 8002cd4 <_Z23getFont_verdana_20_4bppv+0x54>
 8002c9a:	233f      	movs	r3, #63	@ 0x3f
 8002c9c:	9309      	str	r3, [sp, #36]	@ 0x24
 8002c9e:	4b10      	ldr	r3, [pc, #64]	@ (8002ce0 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002ca0:	9308      	str	r3, [sp, #32]
 8002ca2:	4b10      	ldr	r3, [pc, #64]	@ (8002ce4 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002ca4:	4910      	ldr	r1, [pc, #64]	@ (8002ce8 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002ca6:	4811      	ldr	r0, [pc, #68]	@ (8002cec <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002ca8:	940a      	str	r4, [sp, #40]	@ 0x28
 8002caa:	2201      	movs	r2, #1
 8002cac:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002cb0:	2304      	movs	r3, #4
 8002cb2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002cb6:	2314      	movs	r3, #20
 8002cb8:	9300      	str	r3, [sp, #0]
 8002cba:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002cbe:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002cc2:	9405      	str	r4, [sp, #20]
 8002cc4:	f7ff ff2e 	bl	8002b24 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002cc8:	4809      	ldr	r0, [pc, #36]	@ (8002cf0 <_Z23getFont_verdana_20_4bppv+0x70>)
 8002cca:	f01f fe25 	bl	8022918 <atexit>
 8002cce:	4628      	mov	r0, r5
 8002cd0:	f01e fed5 	bl	8021a7e <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002cd4:	4805      	ldr	r0, [pc, #20]	@ (8002cec <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002cd6:	b00f      	add	sp, #60	@ 0x3c
 8002cd8:	bd30      	pop	{r4, r5, pc}
 8002cda:	bf00      	nop
 8002cdc:	20003178 	.word	0x20003178
 8002ce0:	08025c0c 	.word	0x08025c0c
 8002ce4:	08025c18 	.word	0x08025c18
 8002ce8:	08025be8 	.word	0x08025be8
 8002cec:	2000317c 	.word	0x2000317c
 8002cf0:	08002c7d 	.word	0x08002c7d

08002cf4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002cf4:	4770      	bx	lr
	...

08002cf8 <_Z23getFont_verdana_40_4bppv>:
{
 8002cf8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002cfa:	4d16      	ldr	r5, [pc, #88]	@ (8002d54 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002cfc:	682c      	ldr	r4, [r5, #0]
 8002cfe:	f014 0401 	ands.w	r4, r4, #1
{
 8002d02:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002d04:	f3bf 8f5b 	dmb	ish
 8002d08:	d120      	bne.n	8002d4c <_Z23getFont_verdana_40_4bppv+0x54>
 8002d0a:	4628      	mov	r0, r5
 8002d0c:	f01e feab 	bl	8021a66 <__cxa_guard_acquire>
 8002d10:	b1e0      	cbz	r0, 8002d4c <_Z23getFont_verdana_40_4bppv+0x54>
 8002d12:	233f      	movs	r3, #63	@ 0x3f
 8002d14:	9309      	str	r3, [sp, #36]	@ 0x24
 8002d16:	4b10      	ldr	r3, [pc, #64]	@ (8002d58 <_Z23getFont_verdana_40_4bppv+0x60>)
 8002d18:	9308      	str	r3, [sp, #32]
 8002d1a:	4b10      	ldr	r3, [pc, #64]	@ (8002d5c <_Z23getFont_verdana_40_4bppv+0x64>)
 8002d1c:	4910      	ldr	r1, [pc, #64]	@ (8002d60 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002d1e:	4811      	ldr	r0, [pc, #68]	@ (8002d64 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002d20:	940a      	str	r4, [sp, #40]	@ 0x28
 8002d22:	2201      	movs	r2, #1
 8002d24:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002d28:	2304      	movs	r3, #4
 8002d2a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002d2e:	2328      	movs	r3, #40	@ 0x28
 8002d30:	9300      	str	r3, [sp, #0]
 8002d32:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002d36:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002d3a:	9405      	str	r4, [sp, #20]
 8002d3c:	f7ff fef2 	bl	8002b24 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002d40:	4809      	ldr	r0, [pc, #36]	@ (8002d68 <_Z23getFont_verdana_40_4bppv+0x70>)
 8002d42:	f01f fde9 	bl	8022918 <atexit>
 8002d46:	4628      	mov	r0, r5
 8002d48:	f01e fe99 	bl	8021a7e <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002d4c:	4805      	ldr	r0, [pc, #20]	@ (8002d64 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002d4e:	b00f      	add	sp, #60	@ 0x3c
 8002d50:	bd30      	pop	{r4, r5, pc}
 8002d52:	bf00      	nop
 8002d54:	200031a8 	.word	0x200031a8
 8002d58:	08025c10 	.word	0x08025c10
 8002d5c:	08025c1c 	.word	0x08025c1c
 8002d60:	08025bf8 	.word	0x08025bf8
 8002d64:	200031ac 	.word	0x200031ac
 8002d68:	08002cf5 	.word	0x08002cf5

08002d6c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8002d6c:	2000      	movs	r0, #0
 8002d6e:	4770      	bx	lr

08002d70 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8002d70:	2000      	movs	r0, #0
 8002d72:	4770      	bx	lr

08002d74 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002d74:	b40e      	push	{r1, r2, r3}
 8002d76:	b503      	push	{r0, r1, lr}
 8002d78:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002d7a:	2100      	movs	r1, #0
{
 8002d7c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002d80:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002d82:	f00d fc61 	bl	8010648 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002d86:	b002      	add	sp, #8
 8002d88:	f85d eb04 	ldr.w	lr, [sp], #4
 8002d8c:	b003      	add	sp, #12
 8002d8e:	4770      	bx	lr

08002d90 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002d90:	b40c      	push	{r2, r3}
 8002d92:	b507      	push	{r0, r1, r2, lr}
 8002d94:	ab04      	add	r3, sp, #16
 8002d96:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002d9a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002d9c:	f00d fc54 	bl	8010648 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002da0:	b003      	add	sp, #12
 8002da2:	f85d eb04 	ldr.w	lr, [sp], #4
 8002da6:	b002      	add	sp, #8
 8002da8:	4770      	bx	lr
	...

08002dac <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002dac:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8002dae:	b510      	push	{r4, lr}
 8002db0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002db2:	b373      	cbz	r3, 8002e12 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002db4:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8002db6:	b92b      	cbnz	r3, 8002dc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002db8:	4b18      	ldr	r3, [pc, #96]	@ (8002e1c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002dba:	4a19      	ldr	r2, [pc, #100]	@ (8002e20 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002dbc:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002dbe:	4819      	ldr	r0, [pc, #100]	@ (8002e24 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002dc0:	f01f fd8c 	bl	80228dc <__assert_func>
            return buffer[pos];
 8002dc4:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8002dc6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002dca:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8002dcc:	b30b      	cbz	r3, 8002e12 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002dce:	f00f fae2 	bl	8012396 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002dd2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8002dd4:	2b01      	cmp	r3, #1
 8002dd6:	d803      	bhi.n	8002de0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002dd8:	4b13      	ldr	r3, [pc, #76]	@ (8002e28 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002dda:	4a14      	ldr	r2, [pc, #80]	@ (8002e2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002ddc:	21cb      	movs	r1, #203	@ 0xcb
 8002dde:	e7ee      	b.n	8002dbe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002de0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8002de2:	1c53      	adds	r3, r2, #1
 8002de4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002de6:	2b09      	cmp	r3, #9
 8002de8:	4619      	mov	r1, r3
 8002dea:	bf88      	it	hi
 8002dec:	f1a3 010a 	subhi.w	r1, r3, #10
 8002df0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002df4:	f640 103f 	movw	r0, #2367	@ 0x93f
 8002df8:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8002dfa:	4281      	cmp	r1, r0
 8002dfc:	d109      	bne.n	8002e12 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002dfe:	2b0a      	cmp	r3, #10
 8002e00:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002e04:	bf28      	it	cs
 8002e06:	2300      	movcs	r3, #0
 8002e08:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002e0c:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8002e0e:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8002e10:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002e12:	4620      	mov	r0, r4
}
 8002e14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002e18:	f00f b9c0 	b.w	801219c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002e1c:	0802461b 	.word	0x0802461b
 8002e20:	08024624 	.word	0x08024624
 8002e24:	080246cf 	.word	0x080246cf
 8002e28:	08024719 	.word	0x08024719
 8002e2c:	08024727 	.word	0x08024727

08002e30 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002e30:	f00f b97b 	b.w	801212a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002e34 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002e34:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002e36:	bb18      	cbnz	r0, 8002e80 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002e38:	4b12      	ldr	r3, [pc, #72]	@ (8002e84 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002e3a:	4813      	ldr	r0, [pc, #76]	@ (8002e88 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002e3c:	681c      	ldr	r4, [r3, #0]
 8002e3e:	4913      	ldr	r1, [pc, #76]	@ (8002e8c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002e40:	b1b4      	cbz	r4, 8002e70 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002e42:	6822      	ldr	r2, [r4, #0]
 8002e44:	4422      	add	r2, r4
 8002e46:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002e48:	6862      	ldr	r2, [r4, #4]
 8002e4a:	4422      	add	r2, r4
 8002e4c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002e4e:	68a2      	ldr	r2, [r4, #8]
 8002e50:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002e52:	4b0f      	ldr	r3, [pc, #60]	@ (8002e90 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002e54:	2200      	movs	r2, #0
 8002e56:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002e58:	f000 f82a 	bl	8002eb0 <_ZN17TypedTextDatabase8getFontsEv>
 8002e5c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002e5e:	f000 f825 	bl	8002eac <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002e62:	4b0c      	ldr	r3, [pc, #48]	@ (8002e94 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002e64:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002e66:	4b0c      	ldr	r3, [pc, #48]	@ (8002e98 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002e68:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002e6a:	4b0c      	ldr	r3, [pc, #48]	@ (8002e9c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002e6c:	8018      	strh	r0, [r3, #0]
    }
}
 8002e6e:	e007      	b.n	8002e80 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002e70:	4b0b      	ldr	r3, [pc, #44]	@ (8002ea0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002e72:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002e74:	4b0b      	ldr	r3, [pc, #44]	@ (8002ea4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002e76:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002e78:	4b0b      	ldr	r3, [pc, #44]	@ (8002ea8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002e7a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002e7c:	2c00      	cmp	r4, #0
 8002e7e:	d1e8      	bne.n	8002e52 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002e80:	bd38      	pop	{r3, r4, r5, pc}
 8002e82:	bf00      	nop
 8002e84:	200031e4 	.word	0x200031e4
 8002e88:	200031dc 	.word	0x200031dc
 8002e8c:	200031d8 	.word	0x200031d8
 8002e90:	200031e0 	.word	0x200031e0
 8002e94:	20014054 	.word	0x20014054
 8002e98:	2001405c 	.word	0x2001405c
 8002e9c:	20014058 	.word	0x20014058
 8002ea0:	08025c24 	.word	0x08025c24
 8002ea4:	08025c20 	.word	0x08025c20
 8002ea8:	08025c28 	.word	0x08025c28

08002eac <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 8002eac:	2000      	movs	r0, #0
 8002eae:	4770      	bx	lr

08002eb0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002eb0:	4800      	ldr	r0, [pc, #0]	@ (8002eb4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002eb2:	4770      	bx	lr
 8002eb4:	200031e8 	.word	0x200031e8

08002eb8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002eb8:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002eba:	f7ff fee1 	bl	8002c80 <_Z23getFont_verdana_20_4bppv>
};
 8002ebe:	4c04      	ldr	r4, [pc, #16]	@ (8002ed0 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002ec0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002ec2:	f7ff ff19 	bl	8002cf8 <_Z23getFont_verdana_40_4bppv>
};
 8002ec6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002ec8:	f7ff fe9e 	bl	8002c08 <_Z23getFont_verdana_10_4bppv>
};
 8002ecc:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002ece:	bd10      	pop	{r4, pc}
 8002ed0:	200031e8 	.word	0x200031e8

08002ed4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8002ed4:	b510      	push	{r4, lr}
    pointArray = 0;
 8002ed6:	2400      	movs	r4, #0
 8002ed8:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8002eda:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8002edc:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8002ede:	601c      	str	r4, [r3, #0]
}
 8002ee0:	bd10      	pop	{r4, pc}

08002ee2 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002ee2:	4770      	bx	lr

08002ee4 <_ZN19FrontendApplicationD0Ev>:
 8002ee4:	b510      	push	{r4, lr}
 8002ee6:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002eea:	4604      	mov	r4, r0
 8002eec:	f01e fdb9 	bl	8021a62 <_ZdlPvj>
 8002ef0:	4620      	mov	r0, r4
 8002ef2:	bd10      	pop	{r4, pc}

08002ef4 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002ef4:	b510      	push	{r4, lr}
 8002ef6:	4604      	mov	r4, r0
    {
        model.tick();
 8002ef8:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8002efc:	f000 f813 	bl	8002f26 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002f00:	4620      	mov	r0, r4
    }
 8002f02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002f06:	f00c bb99 	b.w	800f63c <_ZN8touchgfx11Application15handleTickEventEv>
	...

08002f0c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002f0c:	b510      	push	{r4, lr}
 8002f0e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002f10:	f7ff fd92 	bl	8002a38 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002f14:	4b01      	ldr	r3, [pc, #4]	@ (8002f1c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002f16:	6023      	str	r3, [r4, #0]
{

}
 8002f18:	4620      	mov	r0, r4
 8002f1a:	bd10      	pop	{r4, pc}
 8002f1c:	08024d78 	.word	0x08024d78

08002f20 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002f20:	2200      	movs	r2, #0
 8002f22:	6002      	str	r2, [r0, #0]
{

}
 8002f24:	4770      	bx	lr

08002f26 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002f26:	4770      	bx	lr

08002f28 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8002f28:	4770      	bx	lr

08002f2a <_ZThn4_N16Screen1PresenterD1Ev>:
 8002f2a:	3804      	subs	r0, #4
 8002f2c:	4770      	bx	lr

08002f2e <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002f2e:	4770      	bx	lr

08002f30 <_ZN16Screen1PresenterD0Ev>:
 8002f30:	b510      	push	{r4, lr}
 8002f32:	2110      	movs	r1, #16
 8002f34:	4604      	mov	r4, r0
 8002f36:	f01e fd94 	bl	8021a62 <_ZdlPvj>
 8002f3a:	4620      	mov	r0, r4
 8002f3c:	bd10      	pop	{r4, pc}

08002f3e <_ZThn4_N16Screen1PresenterD0Ev>:
 8002f3e:	f1a0 0004 	sub.w	r0, r0, #4
 8002f42:	e7f5      	b.n	8002f30 <_ZN16Screen1PresenterD0Ev>

08002f44 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8002f44:	2200      	movs	r2, #0
 8002f46:	6082      	str	r2, [r0, #8]
    : view(v)
 8002f48:	4a02      	ldr	r2, [pc, #8]	@ (8002f54 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8002f4a:	6002      	str	r2, [r0, #0]
 8002f4c:	3218      	adds	r2, #24
 8002f4e:	6042      	str	r2, [r0, #4]
 8002f50:	60c1      	str	r1, [r0, #12]
}
 8002f52:	4770      	bx	lr
 8002f54:	08024dcc 	.word	0x08024dcc

08002f58 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002f58:	4770      	bx	lr
	...

08002f5c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002f5c:	b510      	push	{r4, lr}
 8002f5e:	4b03      	ldr	r3, [pc, #12]	@ (8002f6c <_ZN11Screen1ViewD1Ev+0x10>)
 8002f60:	6003      	str	r3, [r0, #0]
 8002f62:	4604      	mov	r4, r0
 8002f64:	f7ff fe13 	bl	8002b8e <_ZN15Screen1ViewBaseD1Ev>
 8002f68:	4620      	mov	r0, r4
 8002f6a:	bd10      	pop	{r4, pc}
 8002f6c:	08024df4 	.word	0x08024df4

08002f70 <_ZN11Screen1ViewD0Ev>:
 8002f70:	b510      	push	{r4, lr}
 8002f72:	4604      	mov	r4, r0
 8002f74:	f7ff fff2 	bl	8002f5c <_ZN11Screen1ViewD1Ev>
 8002f78:	4620      	mov	r0, r4
 8002f7a:	f640 61e8 	movw	r1, #3816	@ 0xee8
 8002f7e:	f01e fd70 	bl	8021a62 <_ZdlPvj>
 8002f82:	4620      	mov	r0, r4
 8002f84:	bd10      	pop	{r4, pc}

08002f86 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002f86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002f8a:	461d      	mov	r5, r3
        setX(x);
 8002f8c:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002f8e:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 8002f92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002f94:	4604      	mov	r4, r0
 8002f96:	4616      	mov	r6, r2
        setX(x);
 8002f98:	4798      	blx	r3
        setY(y);
 8002f9a:	6823      	ldr	r3, [r4, #0]
 8002f9c:	4631      	mov	r1, r6
 8002f9e:	4620      	mov	r0, r4
 8002fa0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002fa2:	4798      	blx	r3
        setWidth(width);
 8002fa4:	6823      	ldr	r3, [r4, #0]
 8002fa6:	4629      	mov	r1, r5
 8002fa8:	4620      	mov	r0, r4
 8002faa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002fac:	4798      	blx	r3
        setHeight(height);
 8002fae:	6823      	ldr	r3, [r4, #0]
 8002fb0:	4639      	mov	r1, r7
 8002fb2:	4620      	mov	r0, r4
 8002fb4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002fb6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8002fba:	4718      	bx	r3

08002fbc <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002fbc:	b510      	push	{r4, lr}
 8002fbe:	4604      	mov	r4, r0
 8002fc0:	f7ff fdee 	bl	8002ba0 <_ZN15Screen1ViewBaseC1Ev>
 8002fc4:	4620      	mov	r0, r4
 8002fc6:	4b0c      	ldr	r3, [pc, #48]	@ (8002ff8 <_ZN11Screen1ViewC1Ev+0x3c>)
 8002fc8:	f840 3b6c 	str.w	r3, [r0], #108
 8002fcc:	f009 fe6e 	bl	800ccac <_ZN8touchgfx6CircleC1Ev>
 8002fd0:	f104 00b4 	add.w	r0, r4, #180	@ 0xb4
 8002fd4:	f7fe fa9a 	bl	800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002fd8:	4b08      	ldr	r3, [pc, #32]	@ (8002ffc <_ZN11Screen1ViewC1Ev+0x40>)
 8002fda:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8002fde:	3324      	adds	r3, #36	@ 0x24
 8002fe0:	2200      	movs	r2, #0
 8002fe2:	f8c4 30bc 	str.w	r3, [r4, #188]	@ 0xbc
 8002fe6:	2314      	movs	r3, #20
 8002fe8:	f8c4 20c0 	str.w	r2, [r4, #192]	@ 0xc0
 8002fec:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
 8002ff0:	f884 20d4 	strb.w	r2, [r4, #212]	@ 0xd4
}
 8002ff4:	4620      	mov	r0, r4
 8002ff6:	bd10      	pop	{r4, pc}
 8002ff8:	08024df4 	.word	0x08024df4
 8002ffc:	08024f5c 	.word	0x08024f5c

08003000 <_Z9uartPrintPKc>:
{
 8003000:	b510      	push	{r4, lr}
 8003002:	4604      	mov	r4, r0
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8003004:	f7fd f8f4 	bl	80001f0 <strlen>
 8003008:	4621      	mov	r1, r4
 800300a:	b282      	uxth	r2, r0
}
 800300c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8003010:	4802      	ldr	r0, [pc, #8]	@ (800301c <_Z9uartPrintPKc+0x1c>)
 8003012:	f04f 33ff 	mov.w	r3, #4294967295
 8003016:	f003 bb92 	b.w	800673e <HAL_UART_Transmit>
 800301a:	bf00      	nop
 800301c:	20002f10 	.word	0x20002f10

08003020 <_ZN11Screen1View15handleTickEventEv>:
    }

}

void Screen1View::handleTickEvent()
{
 8003020:	b5f0      	push	{r4, r5, r6, r7, lr}

	//Xu ly hinh tron
    if (isScaling){
 8003022:	f890 30d4 	ldrb.w	r3, [r0, #212]	@ 0xd4
{
 8003026:	b08f      	sub	sp, #60	@ 0x3c
 8003028:	4604      	mov	r4, r0
    if (isScaling){
 800302a:	b383      	cbz	r3, 800308e <_ZN11Screen1View15handleTickEventEv+0x6e>
    	int dentaTick = HAL_GetTick() - startTime;
 800302c:	4d19      	ldr	r5, [pc, #100]	@ (8003094 <_ZN11Screen1View15handleTickEventEv+0x74>)
 800302e:	f000 fc05 	bl	800383c <HAL_GetTick>
 8003032:	682b      	ldr	r3, [r5, #0]
 8003034:	1ac3      	subs	r3, r0, r3

    	//Xu ly voi denta
    	if(dentaTick <= 1000){
 8003036:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800303a:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
 800303e:	dc11      	bgt.n	8003064 <_ZN11Screen1View15handleTickEventEv+0x44>
    		int newRadius = currentRadius - currentRadius * dentaTick / 1000;
 8003040:	f8d4 20d0 	ldr.w	r2, [r4, #208]	@ 0xd0
 8003044:	4914      	ldr	r1, [pc, #80]	@ (8003098 <_ZN11Screen1View15handleTickEventEv+0x78>)
 8003046:	4353      	muls	r3, r2
 8003048:	fb93 f3f1 	sdiv	r3, r3, r1
 800304c:	4413      	add	r3, r2
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * (int)Rasterizer::POLY_BASE_SIZE));
 800304e:	015b      	lsls	r3, r3, #5
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003050:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    		myCircle.setRadius(newRadius);
    		myCircle.invalidate();
 8003054:	4630      	mov	r0, r6
 8003056:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
    		char msg1[50];
    		snprintf(msg1, sizeof(msg1), "lastTime = %d\n", lastTime);
    		uartPrint(msg1);
    	}
    }
}
 800305a:	b00f      	add	sp, #60	@ 0x3c
 800305c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    		myCircle.invalidate();
 8003060:	f00a bb16 	b.w	800d690 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    		isScaling = false;
 8003064:	2700      	movs	r7, #0
 8003066:	f884 70d4 	strb.w	r7, [r4, #212]	@ 0xd4
    		int lastTime = HAL_GetTick() - startTime;
 800306a:	f000 fbe7 	bl	800383c <HAL_GetTick>
 800306e:	682d      	ldr	r5, [r5, #0]
        visible = vis;
 8003070:	f884 7091 	strb.w	r7, [r4, #145]	@ 0x91
 8003074:	1b45      	subs	r5, r0, r5
    		myCircle.invalidate();
 8003076:	4630      	mov	r0, r6
 8003078:	f00a fb0a 	bl	800d690 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    		snprintf(msg1, sizeof(msg1), "lastTime = %d\n", lastTime);
 800307c:	4a07      	ldr	r2, [pc, #28]	@ (800309c <_ZN11Screen1View15handleTickEventEv+0x7c>)
 800307e:	462b      	mov	r3, r5
 8003080:	2132      	movs	r1, #50	@ 0x32
 8003082:	a801      	add	r0, sp, #4
 8003084:	f01f fdee 	bl	8022c64 <sniprintf>
    		uartPrint(msg1);
 8003088:	a801      	add	r0, sp, #4
 800308a:	f7ff ffb9 	bl	8003000 <_Z9uartPrintPKc>
}
 800308e:	b00f      	add	sp, #60	@ 0x3c
 8003090:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003092:	bf00      	nop
 8003094:	200031f4 	.word	0x200031f4
 8003098:	fffffc18 	.word	0xfffffc18
 800309c:	080247f9 	.word	0x080247f9

080030a0 <_Z9sendMouseaa>:
{
 80030a0:	b538      	push	{r3, r4, r5, lr}
    mousehid.mouse_y = - dx * scale_x;
 80030a2:	4243      	negs	r3, r0
 80030a4:	ee07 3a90 	vmov	s15, r3
 80030a8:	4b13      	ldr	r3, [pc, #76]	@ (80030f8 <_Z9sendMouseaa+0x58>)
    mousehid.button = 0;
 80030aa:	4c14      	ldr	r4, [pc, #80]	@ (80030fc <_Z9sendMouseaa+0x5c>)
    mousehid.mouse_y = - dx * scale_x;
 80030ac:	edd3 6a00 	vldr	s13, [r3]
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 80030b0:	4813      	ldr	r0, [pc, #76]	@ (8003100 <_Z9sendMouseaa+0x60>)
    mousehid.mouse_y = - dx * scale_x;
 80030b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
{
 80030b6:	ee07 1a10 	vmov	s14, r1
    mousehid.mouse_y = - dx * scale_x;
 80030ba:	ee67 7aa6 	vmul.f32	s15, s15, s13
    mousehid.button = 0;
 80030be:	2500      	movs	r5, #0
    mousehid.mouse_y = - dx * scale_x;
 80030c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 80030c4:	2204      	movs	r2, #4
    mousehid.mouse_y = - dx * scale_x;
 80030c6:	ee17 3a90 	vmov	r3, s15
 80030ca:	70a3      	strb	r3, [r4, #2]
    mousehid.mouse_x = dy * scale_y;
 80030cc:	4b0d      	ldr	r3, [pc, #52]	@ (8003104 <_Z9sendMouseaa+0x64>)
    mousehid.button = 0;
 80030ce:	7025      	strb	r5, [r4, #0]
    mousehid.mouse_x = dy * scale_y;
 80030d0:	eef8 7ac7 	vcvt.f32.s32	s15, s14
 80030d4:	ed93 7a00 	vldr	s14, [r3]
    mousehid.wheel = 0;
 80030d8:	70e5      	strb	r5, [r4, #3]
    mousehid.mouse_x = dy * scale_y;
 80030da:	ee67 7a87 	vmul.f32	s15, s15, s14
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 80030de:	4621      	mov	r1, r4
    mousehid.mouse_x = dy * scale_y;
 80030e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80030e4:	ee17 3a90 	vmov	r3, s15
 80030e8:	7063      	strb	r3, [r4, #1]
    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 80030ea:	f006 ff13 	bl	8009f14 <USBD_HID_SendReport>
    mousehid.button = 0;
 80030ee:	7025      	strb	r5, [r4, #0]
    mousehid.mouse_x = 0;
 80030f0:	7065      	strb	r5, [r4, #1]
    mousehid.mouse_y = 0;
 80030f2:	70a5      	strb	r5, [r4, #2]
    mousehid.wheel = 0;
 80030f4:	70e5      	strb	r5, [r4, #3]
}
 80030f6:	bd38      	pop	{r3, r4, r5, pc}
 80030f8:	20000068 	.word	0x20000068
 80030fc:	200030f4 	.word	0x200030f4
 8003100:	200024f0 	.word	0x200024f0
 8003104:	20000064 	.word	0x20000064

08003108 <_ZN11Screen1View11setupScreenEv>:
{
 8003108:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800310a:	4604      	mov	r4, r0
    Screen1ViewBase::setupScreen();
 800310c:	f7ff fd40 	bl	8002b90 <_ZN15Screen1ViewBase11setupScreenEv>
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003110:	f104 00d5 	add.w	r0, r4, #213	@ 0xd5
 8003114:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 8003118:	f00b f9be 	bl	800e498 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
 800311c:	f04f 33ff 	mov.w	r3, #4294967295
 8003120:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003124:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
    myCircle.setPosition(0, 0, currentRadius * 2, currentRadius * 2);
 8003128:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 800312c:	005b      	lsls	r3, r3, #1
 800312e:	f104 056c 	add.w	r5, r4, #108	@ 0x6c
 8003132:	b21b      	sxth	r3, r3
 8003134:	2200      	movs	r2, #0
 8003136:	9300      	str	r3, [sp, #0]
 8003138:	4611      	mov	r1, r2
 800313a:	4628      	mov	r0, r5
 800313c:	f7ff ff23 	bl	8002f86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003140:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 8003144:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 8003146:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800314a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800314e:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
    myCircle.setPainter(circlePainter);
 8003152:	f104 02b4 	add.w	r2, r4, #180	@ 0xb4
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8003156:	2300      	movs	r3, #0
 8003158:	4629      	mov	r1, r5
 800315a:	1d20      	adds	r0, r4, #4
 800315c:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
        canvasPainter = &painter;
 8003160:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 8003164:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
}
 8003168:	b003      	add	sp, #12
 800316a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800316e:	f006 bf57 	b.w	800a020 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	...

08003174 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE>:
{
 8003174:	b570      	push	{r4, r5, r6, lr}
 8003176:	460e      	mov	r6, r1
 8003178:	b090      	sub	sp, #64	@ 0x40
	Screen1ViewBase::handleDragEvent(evt);
 800317a:	f00e f9ab 	bl	80114d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaX() const
    {
        return dragNewX - dragOldX;
 800317e:	88f3      	ldrh	r3, [r6, #6]
 8003180:	8974      	ldrh	r4, [r6, #10]
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 8003182:	89b5      	ldrh	r5, [r6, #12]
    snprintf(msg, sizeof(msg), "%d, %d\r\n", dentaX, dentaY);
 8003184:	4a0e      	ldr	r2, [pc, #56]	@ (80031c0 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x4c>)
        return dragNewX - dragOldX;
 8003186:	1ae4      	subs	r4, r4, r3
        return dragNewY - dragOldY;
 8003188:	8933      	ldrh	r3, [r6, #8]
        return dragNewX - dragOldX;
 800318a:	b224      	sxth	r4, r4
        return dragNewY - dragOldY;
 800318c:	1aed      	subs	r5, r5, r3
 800318e:	b22d      	sxth	r5, r5
	if(dentaX <= 1 && dentaX >= -1){
 8003190:	1c63      	adds	r3, r4, #1
 8003192:	2b02      	cmp	r3, #2
	if(dentaY <= 1 && dentaY >= -1){
 8003194:	f105 0301 	add.w	r3, r5, #1
	if(dentaX <= 1 && dentaX >= -1){
 8003198:	bf98      	it	ls
 800319a:	2400      	movls	r4, #0
	if(dentaY <= 1 && dentaY >= -1){
 800319c:	2b02      	cmp	r3, #2
 800319e:	bf98      	it	ls
 80031a0:	2500      	movls	r5, #0
    snprintf(msg, sizeof(msg), "%d, %d\r\n", dentaX, dentaY);
 80031a2:	4623      	mov	r3, r4
 80031a4:	2132      	movs	r1, #50	@ 0x32
 80031a6:	9500      	str	r5, [sp, #0]
 80031a8:	a803      	add	r0, sp, #12
 80031aa:	f01f fd5b 	bl	8022c64 <sniprintf>
    uartPrint(msg);
 80031ae:	a803      	add	r0, sp, #12
 80031b0:	f7ff ff26 	bl	8003000 <_Z9uartPrintPKc>
    sendMouse(dentaX, dentaY);
 80031b4:	b269      	sxtb	r1, r5
 80031b6:	b260      	sxtb	r0, r4
 80031b8:	f7ff ff72 	bl	80030a0 <_Z9sendMouseaa>
}
 80031bc:	b010      	add	sp, #64	@ 0x40
 80031be:	bd70      	pop	{r4, r5, r6, pc}
 80031c0:	08024808 	.word	0x08024808

080031c4 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 80031c4:	b530      	push	{r4, r5, lr}
 80031c6:	460d      	mov	r5, r1
 80031c8:	b091      	sub	sp, #68	@ 0x44
 80031ca:	4604      	mov	r4, r0
    Screen1ViewBase::handleClickEvent(event);
 80031cc:	f00e f92e 	bl	801142c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
     *
     * @return The x coordinate of this event.
     */
    int16_t getX() const
    {
        return clickX;
 80031d0:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
     *
     * @return The y coordinate of this event.
     */
    int16_t getY() const
    {
        return clickY;
 80031d4:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80031d8:	792d      	ldrb	r5, [r5, #4]
    touch_x = event.getX();
 80031da:	f8c4 10c8 	str.w	r1, [r4, #200]	@ 0xc8
    currentRadius = 20;
 80031de:	2314      	movs	r3, #20
 80031e0:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
    touch_y = event.getY();
 80031e4:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
    if (event.getType() == ClickEvent::PRESSED)
 80031e8:	bb55      	cbnz	r5, 8003240 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x7c>
    	myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 80031ea:	2328      	movs	r3, #40	@ 0x28
 80031ec:	3a14      	subs	r2, #20
 80031ee:	3914      	subs	r1, #20
 80031f0:	b212      	sxth	r2, r2
 80031f2:	9300      	str	r3, [sp, #0]
 80031f4:	b209      	sxth	r1, r1
 80031f6:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 80031fa:	f7ff fec4 	bl	8002f86 <_ZN8touchgfx8Drawable11setPositionEssss>
 80031fe:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 8003202:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 8003204:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003208:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800320c:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 8003210:	2301      	movs	r3, #1
 8003212:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
    	isScaling = true;
 8003216:	f884 30d4 	strb.w	r3, [r4, #212]	@ 0xd4
    	startTime = HAL_GetTick();
 800321a:	f000 fb0f 	bl	800383c <HAL_GetTick>
 800321e:	4b1a      	ldr	r3, [pc, #104]	@ (8003288 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xc4>)
    	snprintf(msg, sizeof(msg), "Pressed at: x=%d, y=%d\r\n", touch_x, touch_y);
 8003220:	4a1a      	ldr	r2, [pc, #104]	@ (800328c <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xc8>)
    	startTime = HAL_GetTick();
 8003222:	6018      	str	r0, [r3, #0]
    	snprintf(msg, sizeof(msg), "Pressed at: x=%d, y=%d\r\n", touch_x, touch_y);
 8003224:	f8d4 30cc 	ldr.w	r3, [r4, #204]	@ 0xcc
 8003228:	9300      	str	r3, [sp, #0]
 800322a:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
        snprintf(msg, sizeof(msg), "Released at: x=%d, y=%d\r\n", touch_x, touch_y);
 800322e:	2132      	movs	r1, #50	@ 0x32
 8003230:	a803      	add	r0, sp, #12
 8003232:	f01f fd17 	bl	8022c64 <sniprintf>
        uartPrint(msg);
 8003236:	a803      	add	r0, sp, #12
 8003238:	f7ff fee2 	bl	8003000 <_Z9uartPrintPKc>
}
 800323c:	b011      	add	sp, #68	@ 0x44
 800323e:	bd30      	pop	{r4, r5, pc}
    else if(event.getType() == ClickEvent::RELEASED){
 8003240:	2d01      	cmp	r5, #1
 8003242:	d1fb      	bne.n	800323c <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x78>
        myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 8003244:	2328      	movs	r3, #40	@ 0x28
 8003246:	3a14      	subs	r2, #20
 8003248:	3914      	subs	r1, #20
 800324a:	b212      	sxth	r2, r2
 800324c:	9300      	str	r3, [sp, #0]
 800324e:	b209      	sxth	r1, r1
 8003250:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 8003254:	f7ff fe97 	bl	8002f86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003258:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 800325c:	f884 5091 	strb.w	r5, [r4, #145]	@ 0x91
 8003260:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 8003262:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003266:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800326a:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
        isScaling = true;
 800326e:	f884 50d4 	strb.w	r5, [r4, #212]	@ 0xd4
        startTime = HAL_GetTick();
 8003272:	f000 fae3 	bl	800383c <HAL_GetTick>
 8003276:	4b04      	ldr	r3, [pc, #16]	@ (8003288 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xc4>)
        snprintf(msg, sizeof(msg), "Released at: x=%d, y=%d\r\n", touch_x, touch_y);
 8003278:	4a05      	ldr	r2, [pc, #20]	@ (8003290 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xcc>)
        startTime = HAL_GetTick();
 800327a:	6018      	str	r0, [r3, #0]
        snprintf(msg, sizeof(msg), "Released at: x=%d, y=%d\r\n", touch_x, touch_y);
 800327c:	f8d4 30cc 	ldr.w	r3, [r4, #204]	@ 0xcc
 8003280:	9300      	str	r3, [sp, #0]
 8003282:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
 8003286:	e7d2      	b.n	800322e <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x6a>
 8003288:	200031f4 	.word	0x200031f4
 800328c:	08024811 	.word	0x08024811
 8003290:	0802482a 	.word	0x0802482a

08003294 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8003294:	20f0      	movs	r0, #240	@ 0xf0
 8003296:	4770      	bx	lr

08003298 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8003298:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 800329c:	4770      	bx	lr

0800329e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800329e:	2029      	movs	r0, #41	@ 0x29
 80032a0:	f7fe beda 	b.w	8002058 <LCD_IO_WriteReg>

080032a4 <ili9341_DisplayOff>:
 80032a4:	2028      	movs	r0, #40	@ 0x28
 80032a6:	f7fe bed7 	b.w	8002058 <LCD_IO_WriteReg>

080032aa <ili9341_Init>:
{
 80032aa:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80032ac:	f7fe fea8 	bl	8002000 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80032b0:	20ca      	movs	r0, #202	@ 0xca
 80032b2:	f7fe fed1 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80032b6:	20c3      	movs	r0, #195	@ 0xc3
 80032b8:	f7fe feb2 	bl	8002020 <LCD_IO_WriteData>
 80032bc:	2008      	movs	r0, #8
 80032be:	f7fe feaf 	bl	8002020 <LCD_IO_WriteData>
 80032c2:	2050      	movs	r0, #80	@ 0x50
 80032c4:	f7fe feac 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80032c8:	20cf      	movs	r0, #207	@ 0xcf
 80032ca:	f7fe fec5 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80032ce:	2000      	movs	r0, #0
 80032d0:	f7fe fea6 	bl	8002020 <LCD_IO_WriteData>
 80032d4:	20c1      	movs	r0, #193	@ 0xc1
 80032d6:	f7fe fea3 	bl	8002020 <LCD_IO_WriteData>
 80032da:	2030      	movs	r0, #48	@ 0x30
 80032dc:	f7fe fea0 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80032e0:	20ed      	movs	r0, #237	@ 0xed
 80032e2:	f7fe feb9 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80032e6:	2064      	movs	r0, #100	@ 0x64
 80032e8:	f7fe fe9a 	bl	8002020 <LCD_IO_WriteData>
 80032ec:	2003      	movs	r0, #3
 80032ee:	f7fe fe97 	bl	8002020 <LCD_IO_WriteData>
 80032f2:	2012      	movs	r0, #18
 80032f4:	f7fe fe94 	bl	8002020 <LCD_IO_WriteData>
 80032f8:	2081      	movs	r0, #129	@ 0x81
 80032fa:	f7fe fe91 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80032fe:	20e8      	movs	r0, #232	@ 0xe8
 8003300:	f7fe feaa 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003304:	2085      	movs	r0, #133	@ 0x85
 8003306:	f7fe fe8b 	bl	8002020 <LCD_IO_WriteData>
 800330a:	2000      	movs	r0, #0
 800330c:	f7fe fe88 	bl	8002020 <LCD_IO_WriteData>
 8003310:	2078      	movs	r0, #120	@ 0x78
 8003312:	f7fe fe85 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003316:	20cb      	movs	r0, #203	@ 0xcb
 8003318:	f7fe fe9e 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800331c:	2039      	movs	r0, #57	@ 0x39
 800331e:	f7fe fe7f 	bl	8002020 <LCD_IO_WriteData>
 8003322:	202c      	movs	r0, #44	@ 0x2c
 8003324:	f7fe fe7c 	bl	8002020 <LCD_IO_WriteData>
 8003328:	2000      	movs	r0, #0
 800332a:	f7fe fe79 	bl	8002020 <LCD_IO_WriteData>
 800332e:	2034      	movs	r0, #52	@ 0x34
 8003330:	f7fe fe76 	bl	8002020 <LCD_IO_WriteData>
 8003334:	2002      	movs	r0, #2
 8003336:	f7fe fe73 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800333a:	20f7      	movs	r0, #247	@ 0xf7
 800333c:	f7fe fe8c 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003340:	2020      	movs	r0, #32
 8003342:	f7fe fe6d 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003346:	20ea      	movs	r0, #234	@ 0xea
 8003348:	f7fe fe86 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800334c:	2000      	movs	r0, #0
 800334e:	f7fe fe67 	bl	8002020 <LCD_IO_WriteData>
 8003352:	2000      	movs	r0, #0
 8003354:	f7fe fe64 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003358:	20b1      	movs	r0, #177	@ 0xb1
 800335a:	f7fe fe7d 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800335e:	2000      	movs	r0, #0
 8003360:	f7fe fe5e 	bl	8002020 <LCD_IO_WriteData>
 8003364:	201b      	movs	r0, #27
 8003366:	f7fe fe5b 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800336a:	20b6      	movs	r0, #182	@ 0xb6
 800336c:	f7fe fe74 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003370:	200a      	movs	r0, #10
 8003372:	f7fe fe55 	bl	8002020 <LCD_IO_WriteData>
 8003376:	20a2      	movs	r0, #162	@ 0xa2
 8003378:	f7fe fe52 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800337c:	20c0      	movs	r0, #192	@ 0xc0
 800337e:	f7fe fe6b 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003382:	2010      	movs	r0, #16
 8003384:	f7fe fe4c 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003388:	20c1      	movs	r0, #193	@ 0xc1
 800338a:	f7fe fe65 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800338e:	2010      	movs	r0, #16
 8003390:	f7fe fe46 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003394:	20c5      	movs	r0, #197	@ 0xc5
 8003396:	f7fe fe5f 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800339a:	2045      	movs	r0, #69	@ 0x45
 800339c:	f7fe fe40 	bl	8002020 <LCD_IO_WriteData>
 80033a0:	2015      	movs	r0, #21
 80033a2:	f7fe fe3d 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033a6:	20c7      	movs	r0, #199	@ 0xc7
 80033a8:	f7fe fe56 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033ac:	2090      	movs	r0, #144	@ 0x90
 80033ae:	f7fe fe37 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033b2:	2036      	movs	r0, #54	@ 0x36
 80033b4:	f7fe fe50 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033b8:	20c8      	movs	r0, #200	@ 0xc8
 80033ba:	f7fe fe31 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033be:	20f2      	movs	r0, #242	@ 0xf2
 80033c0:	f7fe fe4a 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033c4:	2000      	movs	r0, #0
 80033c6:	f7fe fe2b 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033ca:	20b0      	movs	r0, #176	@ 0xb0
 80033cc:	f7fe fe44 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033d0:	20c2      	movs	r0, #194	@ 0xc2
 80033d2:	f7fe fe25 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033d6:	20b6      	movs	r0, #182	@ 0xb6
 80033d8:	f7fe fe3e 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033dc:	200a      	movs	r0, #10
 80033de:	f7fe fe1f 	bl	8002020 <LCD_IO_WriteData>
 80033e2:	20a7      	movs	r0, #167	@ 0xa7
 80033e4:	f7fe fe1c 	bl	8002020 <LCD_IO_WriteData>
 80033e8:	2027      	movs	r0, #39	@ 0x27
 80033ea:	f7fe fe19 	bl	8002020 <LCD_IO_WriteData>
 80033ee:	2004      	movs	r0, #4
 80033f0:	f7fe fe16 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033f4:	202a      	movs	r0, #42	@ 0x2a
 80033f6:	f7fe fe2f 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80033fa:	2000      	movs	r0, #0
 80033fc:	f7fe fe10 	bl	8002020 <LCD_IO_WriteData>
 8003400:	2000      	movs	r0, #0
 8003402:	f7fe fe0d 	bl	8002020 <LCD_IO_WriteData>
 8003406:	2000      	movs	r0, #0
 8003408:	f7fe fe0a 	bl	8002020 <LCD_IO_WriteData>
 800340c:	20ef      	movs	r0, #239	@ 0xef
 800340e:	f7fe fe07 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003412:	202b      	movs	r0, #43	@ 0x2b
 8003414:	f7fe fe20 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003418:	2000      	movs	r0, #0
 800341a:	f7fe fe01 	bl	8002020 <LCD_IO_WriteData>
 800341e:	2000      	movs	r0, #0
 8003420:	f7fe fdfe 	bl	8002020 <LCD_IO_WriteData>
 8003424:	2001      	movs	r0, #1
 8003426:	f7fe fdfb 	bl	8002020 <LCD_IO_WriteData>
 800342a:	203f      	movs	r0, #63	@ 0x3f
 800342c:	f7fe fdf8 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003430:	20f6      	movs	r0, #246	@ 0xf6
 8003432:	f7fe fe11 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003436:	2001      	movs	r0, #1
 8003438:	f7fe fdf2 	bl	8002020 <LCD_IO_WriteData>
 800343c:	2000      	movs	r0, #0
 800343e:	f7fe fdef 	bl	8002020 <LCD_IO_WriteData>
 8003442:	2006      	movs	r0, #6
 8003444:	f7fe fdec 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003448:	202c      	movs	r0, #44	@ 0x2c
 800344a:	f7fe fe05 	bl	8002058 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800344e:	20c8      	movs	r0, #200	@ 0xc8
 8003450:	f7fe fe50 	bl	80020f4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003454:	2026      	movs	r0, #38	@ 0x26
 8003456:	f7fe fdff 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800345a:	2001      	movs	r0, #1
 800345c:	f7fe fde0 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003460:	20e0      	movs	r0, #224	@ 0xe0
 8003462:	f7fe fdf9 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003466:	200f      	movs	r0, #15
 8003468:	f7fe fdda 	bl	8002020 <LCD_IO_WriteData>
 800346c:	2029      	movs	r0, #41	@ 0x29
 800346e:	f7fe fdd7 	bl	8002020 <LCD_IO_WriteData>
 8003472:	2024      	movs	r0, #36	@ 0x24
 8003474:	f7fe fdd4 	bl	8002020 <LCD_IO_WriteData>
 8003478:	200c      	movs	r0, #12
 800347a:	f7fe fdd1 	bl	8002020 <LCD_IO_WriteData>
 800347e:	200e      	movs	r0, #14
 8003480:	f7fe fdce 	bl	8002020 <LCD_IO_WriteData>
 8003484:	2009      	movs	r0, #9
 8003486:	f7fe fdcb 	bl	8002020 <LCD_IO_WriteData>
 800348a:	204e      	movs	r0, #78	@ 0x4e
 800348c:	f7fe fdc8 	bl	8002020 <LCD_IO_WriteData>
 8003490:	2078      	movs	r0, #120	@ 0x78
 8003492:	f7fe fdc5 	bl	8002020 <LCD_IO_WriteData>
 8003496:	203c      	movs	r0, #60	@ 0x3c
 8003498:	f7fe fdc2 	bl	8002020 <LCD_IO_WriteData>
 800349c:	2009      	movs	r0, #9
 800349e:	f7fe fdbf 	bl	8002020 <LCD_IO_WriteData>
 80034a2:	2013      	movs	r0, #19
 80034a4:	f7fe fdbc 	bl	8002020 <LCD_IO_WriteData>
 80034a8:	2005      	movs	r0, #5
 80034aa:	f7fe fdb9 	bl	8002020 <LCD_IO_WriteData>
 80034ae:	2017      	movs	r0, #23
 80034b0:	f7fe fdb6 	bl	8002020 <LCD_IO_WriteData>
 80034b4:	2011      	movs	r0, #17
 80034b6:	f7fe fdb3 	bl	8002020 <LCD_IO_WriteData>
 80034ba:	2000      	movs	r0, #0
 80034bc:	f7fe fdb0 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80034c0:	20e1      	movs	r0, #225	@ 0xe1
 80034c2:	f7fe fdc9 	bl	8002058 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80034c6:	2000      	movs	r0, #0
 80034c8:	f7fe fdaa 	bl	8002020 <LCD_IO_WriteData>
 80034cc:	2016      	movs	r0, #22
 80034ce:	f7fe fda7 	bl	8002020 <LCD_IO_WriteData>
 80034d2:	201b      	movs	r0, #27
 80034d4:	f7fe fda4 	bl	8002020 <LCD_IO_WriteData>
 80034d8:	2004      	movs	r0, #4
 80034da:	f7fe fda1 	bl	8002020 <LCD_IO_WriteData>
 80034de:	2011      	movs	r0, #17
 80034e0:	f7fe fd9e 	bl	8002020 <LCD_IO_WriteData>
 80034e4:	2007      	movs	r0, #7
 80034e6:	f7fe fd9b 	bl	8002020 <LCD_IO_WriteData>
 80034ea:	2031      	movs	r0, #49	@ 0x31
 80034ec:	f7fe fd98 	bl	8002020 <LCD_IO_WriteData>
 80034f0:	2033      	movs	r0, #51	@ 0x33
 80034f2:	f7fe fd95 	bl	8002020 <LCD_IO_WriteData>
 80034f6:	2042      	movs	r0, #66	@ 0x42
 80034f8:	f7fe fd92 	bl	8002020 <LCD_IO_WriteData>
 80034fc:	2005      	movs	r0, #5
 80034fe:	f7fe fd8f 	bl	8002020 <LCD_IO_WriteData>
 8003502:	200c      	movs	r0, #12
 8003504:	f7fe fd8c 	bl	8002020 <LCD_IO_WriteData>
 8003508:	200a      	movs	r0, #10
 800350a:	f7fe fd89 	bl	8002020 <LCD_IO_WriteData>
 800350e:	2028      	movs	r0, #40	@ 0x28
 8003510:	f7fe fd86 	bl	8002020 <LCD_IO_WriteData>
 8003514:	202f      	movs	r0, #47	@ 0x2f
 8003516:	f7fe fd83 	bl	8002020 <LCD_IO_WriteData>
 800351a:	200f      	movs	r0, #15
 800351c:	f7fe fd80 	bl	8002020 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003520:	2011      	movs	r0, #17
 8003522:	f7fe fd99 	bl	8002058 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003526:	20c8      	movs	r0, #200	@ 0xc8
 8003528:	f7fe fde4 	bl	80020f4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800352c:	2029      	movs	r0, #41	@ 0x29
 800352e:	f7fe fd93 	bl	8002058 <LCD_IO_WriteReg>
}
 8003532:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8003536:	202c      	movs	r0, #44	@ 0x2c
 8003538:	f7fe bd8e 	b.w	8002058 <LCD_IO_WriteReg>

0800353c <ili9341_ReadID>:
{
 800353c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800353e:	f7fe fd5f 	bl	8002000 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8003542:	2103      	movs	r1, #3
 8003544:	20d3      	movs	r0, #211	@ 0xd3
 8003546:	f7fe fda3 	bl	8002090 <LCD_IO_ReadData>
}
 800354a:	b280      	uxth	r0, r0
 800354c:	bd08      	pop	{r3, pc}

0800354e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800354e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8003550:	b2c4      	uxtb	r4, r0
 8003552:	2202      	movs	r2, #2
 8003554:	2103      	movs	r1, #3
 8003556:	4620      	mov	r0, r4
 8003558:	f7fe fd08 	bl	8001f6c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 800355c:	200a      	movs	r0, #10
 800355e:	f7fe fd4d 	bl	8001ffc <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8003562:	4620      	mov	r0, r4
 8003564:	2200      	movs	r2, #0
 8003566:	2103      	movs	r1, #3
 8003568:	f7fe fd00 	bl	8001f6c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 800356c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8003570:	2002      	movs	r0, #2
 8003572:	f7fe bd43 	b.w	8001ffc <IOE_Delay>

08003576 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8003576:	b538      	push	{r3, r4, r5, lr}
 8003578:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800357a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 800357c:	f7fe fcf4 	bl	8001f68 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003580:	2100      	movs	r1, #0
 8003582:	4620      	mov	r0, r4
 8003584:	f7fe fd0a 	bl	8001f9c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003588:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800358a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800358c:	4620      	mov	r0, r4
 800358e:	f7fe fd05 	bl	8001f9c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003592:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8003596:	b280      	uxth	r0, r0
 8003598:	bd38      	pop	{r3, r4, r5, pc}

0800359a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800359a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800359c:	b2c4      	uxtb	r4, r0
 800359e:	2140      	movs	r1, #64	@ 0x40
 80035a0:	4620      	mov	r0, r4
 80035a2:	f7fe fcfb 	bl	8001f9c <IOE_Read>
  
  if(state > 0)
 80035a6:	0603      	lsls	r3, r0, #24
 80035a8:	d507      	bpl.n	80035ba <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80035aa:	214c      	movs	r1, #76	@ 0x4c
 80035ac:	4620      	mov	r0, r4
 80035ae:	f7fe fcf5 	bl	8001f9c <IOE_Read>
 80035b2:	3800      	subs	r0, #0
 80035b4:	bf18      	it	ne
 80035b6:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80035b8:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80035ba:	2201      	movs	r2, #1
 80035bc:	214b      	movs	r1, #75	@ 0x4b
 80035be:	4620      	mov	r0, r4
 80035c0:	f7fe fcd4 	bl	8001f6c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80035c4:	4620      	mov	r0, r4
 80035c6:	2200      	movs	r2, #0
 80035c8:	214b      	movs	r1, #75	@ 0x4b
 80035ca:	f7fe fccf 	bl	8001f6c <IOE_Write>
  uint8_t ret = 0;
 80035ce:	2000      	movs	r0, #0
 80035d0:	e7f2      	b.n	80035b8 <stmpe811_TS_DetectTouch+0x1e>

080035d2 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80035d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80035d4:	2304      	movs	r3, #4
 80035d6:	b2c4      	uxtb	r4, r0
{
 80035d8:	460e      	mov	r6, r1
 80035da:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80035dc:	21d7      	movs	r1, #215	@ 0xd7
 80035de:	eb0d 0203 	add.w	r2, sp, r3
 80035e2:	4620      	mov	r0, r4
 80035e4:	f7fe fcf4 	bl	8001fd0 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80035e8:	9b01      	ldr	r3, [sp, #4]
 80035ea:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80035ec:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80035ee:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80035f2:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80035f4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80035f6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80035f8:	2201      	movs	r2, #1
 80035fa:	214b      	movs	r1, #75	@ 0x4b
 80035fc:	f7fe fcb6 	bl	8001f6c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003600:	2200      	movs	r2, #0
 8003602:	214b      	movs	r1, #75	@ 0x4b
 8003604:	4620      	mov	r0, r4
 8003606:	f7fe fcb1 	bl	8001f6c <IOE_Write>
}
 800360a:	b002      	add	sp, #8
 800360c:	bd70      	pop	{r4, r5, r6, pc}
	...

08003610 <stmpe811_Init>:
{
 8003610:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8003612:	4a0a      	ldr	r2, [pc, #40]	@ (800363c <stmpe811_Init+0x2c>)
 8003614:	7813      	ldrb	r3, [r2, #0]
 8003616:	4298      	cmp	r0, r3
{
 8003618:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800361a:	d00d      	beq.n	8003638 <stmpe811_Init+0x28>
 800361c:	7851      	ldrb	r1, [r2, #1]
 800361e:	4288      	cmp	r0, r1
 8003620:	d00a      	beq.n	8003638 <stmpe811_Init+0x28>
 8003622:	b10b      	cbz	r3, 8003628 <stmpe811_Init+0x18>
 8003624:	b941      	cbnz	r1, 8003638 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8003626:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8003628:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800362a:	f7fe fc9d 	bl	8001f68 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800362e:	4620      	mov	r0, r4
}
 8003630:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8003634:	f7ff bf8b 	b.w	800354e <stmpe811_Reset>
}
 8003638:	bd10      	pop	{r4, pc}
 800363a:	bf00      	nop
 800363c:	200031f8 	.word	0x200031f8

08003640 <stmpe811_EnableGlobalIT>:
{
 8003640:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003642:	b2c4      	uxtb	r4, r0
 8003644:	2109      	movs	r1, #9
 8003646:	4620      	mov	r0, r4
 8003648:	f7fe fca8 	bl	8001f9c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800364c:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003650:	b2d2      	uxtb	r2, r2
 8003652:	4620      	mov	r0, r4
 8003654:	2109      	movs	r1, #9
}
 8003656:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800365a:	f7fe bc87 	b.w	8001f6c <IOE_Write>

0800365e <stmpe811_DisableGlobalIT>:
{
 800365e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003660:	b2c4      	uxtb	r4, r0
 8003662:	2109      	movs	r1, #9
 8003664:	4620      	mov	r0, r4
 8003666:	f7fe fc99 	bl	8001f9c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800366a:	2109      	movs	r1, #9
 800366c:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8003670:	4620      	mov	r0, r4
}
 8003672:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003676:	f7fe bc79 	b.w	8001f6c <IOE_Write>

0800367a <stmpe811_EnableITSource>:
{
 800367a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800367c:	b2c4      	uxtb	r4, r0
{
 800367e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003680:	4620      	mov	r0, r4
 8003682:	210a      	movs	r1, #10
 8003684:	f7fe fc8a 	bl	8001f9c <IOE_Read>
  tmp |= Source; 
 8003688:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800368c:	b2d2      	uxtb	r2, r2
 800368e:	4620      	mov	r0, r4
 8003690:	210a      	movs	r1, #10
}
 8003692:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003696:	f7fe bc69 	b.w	8001f6c <IOE_Write>

0800369a <stmpe811_TS_EnableIT>:
{
 800369a:	b510      	push	{r4, lr}
 800369c:	4604      	mov	r4, r0
  IOE_ITConfig();
 800369e:	f7fe fc64 	bl	8001f6a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80036a2:	4620      	mov	r0, r4
 80036a4:	211f      	movs	r1, #31
 80036a6:	f7ff ffe8 	bl	800367a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80036aa:	4620      	mov	r0, r4
}
 80036ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80036b0:	f7ff bfc6 	b.w	8003640 <stmpe811_EnableGlobalIT>

080036b4 <stmpe811_DisableITSource>:
{
 80036b4:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80036b6:	b2c4      	uxtb	r4, r0
{
 80036b8:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80036ba:	4620      	mov	r0, r4
 80036bc:	210a      	movs	r1, #10
 80036be:	f7fe fc6d 	bl	8001f9c <IOE_Read>
  tmp &= ~Source; 
 80036c2:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80036c6:	b2d2      	uxtb	r2, r2
 80036c8:	4620      	mov	r0, r4
 80036ca:	210a      	movs	r1, #10
}
 80036cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80036d0:	f7fe bc4c 	b.w	8001f6c <IOE_Write>

080036d4 <stmpe811_TS_DisableIT>:
{
 80036d4:	b510      	push	{r4, lr}
 80036d6:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 80036d8:	f7ff ffc1 	bl	800365e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80036dc:	4620      	mov	r0, r4
 80036de:	211f      	movs	r1, #31
}
 80036e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80036e4:	f7ff bfe6 	b.w	80036b4 <stmpe811_DisableITSource>

080036e8 <stmpe811_ReadGITStatus>:
{
 80036e8:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80036ea:	b2c0      	uxtb	r0, r0
{
 80036ec:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80036ee:	210b      	movs	r1, #11
 80036f0:	f7fe fc54 	bl	8001f9c <IOE_Read>
}
 80036f4:	4020      	ands	r0, r4
 80036f6:	bd10      	pop	{r4, pc}

080036f8 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 80036f8:	211f      	movs	r1, #31
 80036fa:	f7ff bff5 	b.w	80036e8 <stmpe811_ReadGITStatus>

080036fe <stmpe811_ClearGlobalIT>:
{
 80036fe:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003700:	b2c0      	uxtb	r0, r0
 8003702:	210b      	movs	r1, #11
 8003704:	f7fe bc32 	b.w	8001f6c <IOE_Write>

08003708 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003708:	211f      	movs	r1, #31
 800370a:	f7ff bff8 	b.w	80036fe <stmpe811_ClearGlobalIT>

0800370e <stmpe811_IO_EnableAF>:
{
 800370e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003710:	b2c4      	uxtb	r4, r0
{
 8003712:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003714:	4620      	mov	r0, r4
 8003716:	2117      	movs	r1, #23
 8003718:	f7fe fc40 	bl	8001f9c <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 800371c:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003720:	b2d2      	uxtb	r2, r2
 8003722:	4620      	mov	r0, r4
 8003724:	2117      	movs	r1, #23
}
 8003726:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800372a:	f7fe bc1f 	b.w	8001f6c <IOE_Write>

0800372e <stmpe811_TS_Start>:
{
 800372e:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003730:	b2c4      	uxtb	r4, r0
{
 8003732:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003734:	2104      	movs	r1, #4
 8003736:	4620      	mov	r0, r4
 8003738:	f7fe fc30 	bl	8001f9c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800373c:	2104      	movs	r1, #4
 800373e:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003742:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003744:	4620      	mov	r0, r4
 8003746:	f7fe fc11 	bl	8001f6c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800374a:	4630      	mov	r0, r6
 800374c:	21f0      	movs	r1, #240	@ 0xf0
 800374e:	f7ff ffde 	bl	800370e <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003752:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8003756:	4620      	mov	r0, r4
 8003758:	2104      	movs	r1, #4
 800375a:	f7fe fc07 	bl	8001f6c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800375e:	2249      	movs	r2, #73	@ 0x49
 8003760:	2120      	movs	r1, #32
 8003762:	4620      	mov	r0, r4
 8003764:	f7fe fc02 	bl	8001f6c <IOE_Write>
  IOE_Delay(2); 
 8003768:	2002      	movs	r0, #2
 800376a:	f7fe fc47 	bl	8001ffc <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800376e:	4620      	mov	r0, r4
 8003770:	2201      	movs	r2, #1
 8003772:	2121      	movs	r1, #33	@ 0x21
 8003774:	f7fe fbfa 	bl	8001f6c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8003778:	4620      	mov	r0, r4
 800377a:	229a      	movs	r2, #154	@ 0x9a
 800377c:	2141      	movs	r1, #65	@ 0x41
 800377e:	f7fe fbf5 	bl	8001f6c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8003782:	4620      	mov	r0, r4
 8003784:	2201      	movs	r2, #1
 8003786:	214a      	movs	r1, #74	@ 0x4a
 8003788:	f7fe fbf0 	bl	8001f6c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800378c:	4620      	mov	r0, r4
 800378e:	2201      	movs	r2, #1
 8003790:	214b      	movs	r1, #75	@ 0x4b
 8003792:	f7fe fbeb 	bl	8001f6c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003796:	4620      	mov	r0, r4
 8003798:	2200      	movs	r2, #0
 800379a:	214b      	movs	r1, #75	@ 0x4b
 800379c:	f7fe fbe6 	bl	8001f6c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80037a0:	4620      	mov	r0, r4
 80037a2:	2201      	movs	r2, #1
 80037a4:	2156      	movs	r1, #86	@ 0x56
 80037a6:	f7fe fbe1 	bl	8001f6c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80037aa:	4620      	mov	r0, r4
 80037ac:	2201      	movs	r2, #1
 80037ae:	2158      	movs	r1, #88	@ 0x58
 80037b0:	f7fe fbdc 	bl	8001f6c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80037b4:	4620      	mov	r0, r4
 80037b6:	2201      	movs	r2, #1
 80037b8:	2140      	movs	r1, #64	@ 0x40
 80037ba:	f7fe fbd7 	bl	8001f6c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80037be:	4620      	mov	r0, r4
 80037c0:	22ff      	movs	r2, #255	@ 0xff
 80037c2:	210b      	movs	r1, #11
 80037c4:	f7fe fbd2 	bl	8001f6c <IOE_Write>
}
 80037c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80037cc:	2002      	movs	r0, #2
 80037ce:	f7fe bc15 	b.w	8001ffc <IOE_Delay>
	...

080037d4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80037d4:	4b05      	ldr	r3, [pc, #20]	@ (80037ec <SystemInit+0x18>)
 80037d6:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 80037da:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 80037de:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80037e2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80037e6:	609a      	str	r2, [r3, #8]
#endif
}
 80037e8:	4770      	bx	lr
 80037ea:	bf00      	nop
 80037ec:	e000ed00 	.word	0xe000ed00

080037f0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80037f0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80037f2:	4b0b      	ldr	r3, [pc, #44]	@ (8003820 <HAL_Init+0x30>)
 80037f4:	681a      	ldr	r2, [r3, #0]
 80037f6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80037fa:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80037fc:	681a      	ldr	r2, [r3, #0]
 80037fe:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003802:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003804:	681a      	ldr	r2, [r3, #0]
 8003806:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800380a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800380c:	2003      	movs	r0, #3
 800380e:	f000 f82f 	bl	8003870 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003812:	2000      	movs	r0, #0
 8003814:	f7fe fee6 	bl	80025e4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003818:	f7fe fc7a 	bl	8002110 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800381c:	2000      	movs	r0, #0
 800381e:	bd08      	pop	{r3, pc}
 8003820:	40023c00 	.word	0x40023c00

08003824 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003824:	4a03      	ldr	r2, [pc, #12]	@ (8003834 <HAL_IncTick+0x10>)
 8003826:	4b04      	ldr	r3, [pc, #16]	@ (8003838 <HAL_IncTick+0x14>)
 8003828:	6811      	ldr	r1, [r2, #0]
 800382a:	781b      	ldrb	r3, [r3, #0]
 800382c:	440b      	add	r3, r1
 800382e:	6013      	str	r3, [r2, #0]
}
 8003830:	4770      	bx	lr
 8003832:	bf00      	nop
 8003834:	200031fc 	.word	0x200031fc
 8003838:	200000d0 	.word	0x200000d0

0800383c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800383c:	4b01      	ldr	r3, [pc, #4]	@ (8003844 <HAL_GetTick+0x8>)
 800383e:	6818      	ldr	r0, [r3, #0]
}
 8003840:	4770      	bx	lr
 8003842:	bf00      	nop
 8003844:	200031fc 	.word	0x200031fc

08003848 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003848:	b538      	push	{r3, r4, r5, lr}
 800384a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800384c:	f7ff fff6 	bl	800383c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003850:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003852:	bf1c      	itt	ne
 8003854:	4b05      	ldrne	r3, [pc, #20]	@ (800386c <HAL_Delay+0x24>)
 8003856:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003858:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800385a:	bf18      	it	ne
 800385c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800385e:	f7ff ffed 	bl	800383c <HAL_GetTick>
 8003862:	1b43      	subs	r3, r0, r5
 8003864:	42a3      	cmp	r3, r4
 8003866:	d3fa      	bcc.n	800385e <HAL_Delay+0x16>
  {
  }
}
 8003868:	bd38      	pop	{r3, r4, r5, pc}
 800386a:	bf00      	nop
 800386c:	200000d0 	.word	0x200000d0

08003870 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003870:	4907      	ldr	r1, [pc, #28]	@ (8003890 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003872:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003874:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003878:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800387a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800387c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003880:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003882:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003884:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003888:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 800388c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800388e:	4770      	bx	lr
 8003890:	e000ed00 	.word	0xe000ed00

08003894 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003894:	4b16      	ldr	r3, [pc, #88]	@ (80038f0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003896:	b530      	push	{r4, r5, lr}
 8003898:	68dc      	ldr	r4, [r3, #12]
 800389a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800389e:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80038a2:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80038a4:	2b04      	cmp	r3, #4
 80038a6:	bf28      	it	cs
 80038a8:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80038aa:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80038ac:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80038b0:	bf8c      	ite	hi
 80038b2:	3c03      	subhi	r4, #3
 80038b4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80038b6:	fa05 f303 	lsl.w	r3, r5, r3
 80038ba:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80038be:	40a5      	lsls	r5, r4
 80038c0:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80038c4:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 80038c6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80038c8:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80038cc:	bfac      	ite	ge
 80038ce:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80038d2:	4a08      	ldrlt	r2, [pc, #32]	@ (80038f4 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80038d4:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80038d8:	bfb8      	it	lt
 80038da:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80038de:	b2db      	uxtb	r3, r3
 80038e0:	bfaa      	itet	ge
 80038e2:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80038e6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80038e8:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80038ec:	bd30      	pop	{r4, r5, pc}
 80038ee:	bf00      	nop
 80038f0:	e000ed00 	.word	0xe000ed00
 80038f4:	e000ed14 	.word	0xe000ed14

080038f8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80038f8:	2800      	cmp	r0, #0
 80038fa:	db07      	blt.n	800390c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80038fc:	4a04      	ldr	r2, [pc, #16]	@ (8003910 <HAL_NVIC_EnableIRQ+0x18>)
 80038fe:	0941      	lsrs	r1, r0, #5
 8003900:	2301      	movs	r3, #1
 8003902:	f000 001f 	and.w	r0, r0, #31
 8003906:	4083      	lsls	r3, r0
 8003908:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800390c:	4770      	bx	lr
 800390e:	bf00      	nop
 8003910:	e000e100 	.word	0xe000e100

08003914 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003914:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003916:	4604      	mov	r4, r0
 8003918:	b150      	cbz	r0, 8003930 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800391a:	7943      	ldrb	r3, [r0, #5]
 800391c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003920:	b913      	cbnz	r3, 8003928 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003922:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003924:	f7fe fc14 	bl	8002150 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003928:	2301      	movs	r3, #1
 800392a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800392c:	2000      	movs	r0, #0
}
 800392e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003930:	2001      	movs	r0, #1
 8003932:	e7fc      	b.n	800392e <HAL_CRC_Init+0x1a>

08003934 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003934:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003936:	4604      	mov	r4, r0
 8003938:	b320      	cbz	r0, 8003984 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800393a:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800393e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003942:	b91b      	cbnz	r3, 800394c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003944:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003948:	f7fe fc1a 	bl	8002180 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800394c:	2302      	movs	r3, #2
 800394e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003952:	6823      	ldr	r3, [r4, #0]
 8003954:	6861      	ldr	r1, [r4, #4]
 8003956:	681a      	ldr	r2, [r3, #0]
 8003958:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800395c:	430a      	orrs	r2, r1
 800395e:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003960:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003962:	68a1      	ldr	r1, [r4, #8]
 8003964:	f022 0207 	bic.w	r2, r2, #7
 8003968:	430a      	orrs	r2, r1
 800396a:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800396c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800396e:	68e1      	ldr	r1, [r4, #12]
 8003970:	f36f 020d 	bfc	r2, #0, #14
 8003974:	430a      	orrs	r2, r1
 8003976:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003978:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800397a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800397c:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800397e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8003982:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003984:	2001      	movs	r0, #1
 8003986:	e7fc      	b.n	8003982 <HAL_DMA2D_Init+0x4e>

08003988 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8003988:	4770      	bx	lr

0800398a <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 800398a:	4770      	bx	lr

0800398c <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800398c:	6803      	ldr	r3, [r0, #0]
{
 800398e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003990:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003992:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003994:	07f2      	lsls	r2, r6, #31
{
 8003996:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003998:	d514      	bpl.n	80039c4 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800399a:	05e9      	lsls	r1, r5, #23
 800399c:	d512      	bpl.n	80039c4 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800399e:	681a      	ldr	r2, [r3, #0]
 80039a0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80039a4:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80039a6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80039a8:	f042 0201 	orr.w	r2, r2, #1
 80039ac:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80039ae:	2201      	movs	r2, #1
 80039b0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80039b2:	2304      	movs	r3, #4
 80039b4:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80039b8:	2300      	movs	r3, #0
 80039ba:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80039be:	6943      	ldr	r3, [r0, #20]
 80039c0:	b103      	cbz	r3, 80039c4 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80039c2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80039c4:	06b2      	lsls	r2, r6, #26
 80039c6:	d516      	bpl.n	80039f6 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80039c8:	04ab      	lsls	r3, r5, #18
 80039ca:	d514      	bpl.n	80039f6 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80039cc:	6823      	ldr	r3, [r4, #0]
 80039ce:	681a      	ldr	r2, [r3, #0]
 80039d0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80039d4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80039d6:	2220      	movs	r2, #32
 80039d8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80039da:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80039dc:	f043 0302 	orr.w	r3, r3, #2
 80039e0:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80039e2:	2304      	movs	r3, #4
 80039e4:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80039e8:	2300      	movs	r3, #0
 80039ea:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80039ee:	6963      	ldr	r3, [r4, #20]
 80039f0:	b10b      	cbz	r3, 80039f6 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 80039f2:	4620      	mov	r0, r4
 80039f4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80039f6:	0730      	lsls	r0, r6, #28
 80039f8:	d516      	bpl.n	8003a28 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80039fa:	0529      	lsls	r1, r5, #20
 80039fc:	d514      	bpl.n	8003a28 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80039fe:	6823      	ldr	r3, [r4, #0]
 8003a00:	681a      	ldr	r2, [r3, #0]
 8003a02:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003a06:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003a08:	2208      	movs	r2, #8
 8003a0a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003a0c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003a0e:	f043 0304 	orr.w	r3, r3, #4
 8003a12:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003a14:	2304      	movs	r3, #4
 8003a16:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003a1a:	2300      	movs	r3, #0
 8003a1c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003a20:	6963      	ldr	r3, [r4, #20]
 8003a22:	b10b      	cbz	r3, 8003a28 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8003a24:	4620      	mov	r0, r4
 8003a26:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003a28:	0772      	lsls	r2, r6, #29
 8003a2a:	d50b      	bpl.n	8003a44 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003a2c:	056b      	lsls	r3, r5, #21
 8003a2e:	d509      	bpl.n	8003a44 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003a30:	6823      	ldr	r3, [r4, #0]
 8003a32:	681a      	ldr	r2, [r3, #0]
 8003a34:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003a38:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003a3a:	2204      	movs	r2, #4
 8003a3c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003a3e:	4620      	mov	r0, r4
 8003a40:	f7ff ffa2 	bl	8003988 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003a44:	07b0      	lsls	r0, r6, #30
 8003a46:	d514      	bpl.n	8003a72 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003a48:	05a9      	lsls	r1, r5, #22
 8003a4a:	d512      	bpl.n	8003a72 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003a4c:	6823      	ldr	r3, [r4, #0]
 8003a4e:	681a      	ldr	r2, [r3, #0]
 8003a50:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8003a54:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003a56:	2202      	movs	r2, #2
 8003a58:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003a5a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003a5c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003a5e:	2301      	movs	r3, #1
 8003a60:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003a64:	2300      	movs	r3, #0
 8003a66:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8003a6a:	6923      	ldr	r3, [r4, #16]
 8003a6c:	b10b      	cbz	r3, 8003a72 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8003a6e:	4620      	mov	r0, r4
 8003a70:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003a72:	06f2      	lsls	r2, r6, #27
 8003a74:	d513      	bpl.n	8003a9e <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003a76:	04eb      	lsls	r3, r5, #19
 8003a78:	d511      	bpl.n	8003a9e <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003a7a:	6823      	ldr	r3, [r4, #0]
 8003a7c:	681a      	ldr	r2, [r3, #0]
 8003a7e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003a82:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003a84:	2210      	movs	r2, #16
 8003a86:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003a88:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003a8a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003a8c:	2301      	movs	r3, #1
 8003a8e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003a92:	2300      	movs	r3, #0
 8003a94:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003a98:	4620      	mov	r0, r4
 8003a9a:	f7ff ff76 	bl	800398a <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8003a9e:	bd70      	pop	{r4, r5, r6, pc}

08003aa0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003aa2:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8003aa6:	2a01      	cmp	r2, #1
{
 8003aa8:	4603      	mov	r3, r0
 8003aaa:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8003aae:	d02b      	beq.n	8003b08 <HAL_DMA2D_ConfigLayer+0x68>
 8003ab0:	2201      	movs	r2, #1
 8003ab2:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003ab6:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003aba:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8003abe:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8003ac2:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8003ac4:	4f17      	ldr	r7, [pc, #92]	@ (8003b24 <HAL_DMA2D_ConfigLayer+0x84>)
 8003ac6:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003aca:	3c09      	subs	r4, #9
 8003acc:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003ace:	bf9c      	itt	ls
 8003ad0:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8003ad4:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003ad6:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003ada:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003adc:	bf88      	it	hi
 8003ade:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003ae2:	b991      	cbnz	r1, 8003b0a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003ae4:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8003ae6:	4039      	ands	r1, r7
 8003ae8:	4301      	orrs	r1, r0
 8003aea:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003aec:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003aee:	6999      	ldr	r1, [r3, #24]
 8003af0:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003af2:	d803      	bhi.n	8003afc <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8003af4:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8003af6:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8003afa:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003afc:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003afe:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003b00:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8003b04:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8003b08:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003b0a:	69d1      	ldr	r1, [r2, #28]
 8003b0c:	4039      	ands	r1, r7
 8003b0e:	4301      	orrs	r1, r0
 8003b10:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003b12:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003b14:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003b16:	6989      	ldr	r1, [r1, #24]
 8003b18:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003b1a:	bf9c      	itt	ls
 8003b1c:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8003b20:	6215      	strls	r5, [r2, #32]
 8003b22:	e7eb      	b.n	8003afc <HAL_DMA2D_ConfigLayer+0x5c>
 8003b24:	00fcfff0 	.word	0x00fcfff0

08003b28 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003b28:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003b2c:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8003cec <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003b30:	4a6c      	ldr	r2, [pc, #432]	@ (8003ce4 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003b32:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003b34:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8003b36:	2401      	movs	r4, #1
 8003b38:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003b3a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8003b3e:	43ac      	bics	r4, r5
 8003b40:	f040 80b7 	bne.w	8003cb2 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003b44:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003b46:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003b48:	f005 0403 	and.w	r4, r5, #3
 8003b4c:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003b50:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003b54:	1e67      	subs	r7, r4, #1
 8003b56:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003b58:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003b5c:	d834      	bhi.n	8003bc8 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8003b5e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003b60:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003b64:	68cf      	ldr	r7, [r1, #12]
 8003b66:	fa07 f708 	lsl.w	r7, r7, r8
 8003b6a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8003b6e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8003b70:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003b72:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003b76:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8003b7a:	409f      	lsls	r7, r3
 8003b7c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8003b80:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8003b82:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003b84:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003b88:	688f      	ldr	r7, [r1, #8]
 8003b8a:	fa07 f708 	lsl.w	r7, r7, r8
 8003b8e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003b92:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8003b94:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003b96:	d119      	bne.n	8003bcc <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8003b98:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8003b9c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003ba0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8003ba4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003ba8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8003bac:	f04f 0e0f 	mov.w	lr, #15
 8003bb0:	fa0e fe0b 	lsl.w	lr, lr, fp
 8003bb4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003bb8:	690f      	ldr	r7, [r1, #16]
 8003bba:	fa07 f70b 	lsl.w	r7, r7, fp
 8003bbe:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8003bc2:	f8ca 7020 	str.w	r7, [sl, #32]
 8003bc6:	e001      	b.n	8003bcc <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003bc8:	2c03      	cmp	r4, #3
 8003bca:	d1da      	bne.n	8003b82 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8003bcc:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003bce:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003bd2:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003bd6:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003bd8:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8003bdc:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003bde:	d068      	beq.n	8003cb2 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003be0:	2400      	movs	r4, #0
 8003be2:	9401      	str	r4, [sp, #4]
 8003be4:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8003be8:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8003bec:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8003bf0:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8003bf4:	f023 0703 	bic.w	r7, r3, #3
 8003bf8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8003bfc:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8003c00:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8003c04:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003c06:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003c0a:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8003c0c:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003c10:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8003c14:	240f      	movs	r4, #15
 8003c16:	fa04 f40c 	lsl.w	r4, r4, ip
 8003c1a:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003c1e:	4c32      	ldr	r4, [pc, #200]	@ (8003ce8 <HAL_GPIO_Init+0x1c0>)
 8003c20:	42a0      	cmp	r0, r4
 8003c22:	d04d      	beq.n	8003cc0 <HAL_GPIO_Init+0x198>
 8003c24:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c28:	42a0      	cmp	r0, r4
 8003c2a:	d04b      	beq.n	8003cc4 <HAL_GPIO_Init+0x19c>
 8003c2c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c30:	42a0      	cmp	r0, r4
 8003c32:	d049      	beq.n	8003cc8 <HAL_GPIO_Init+0x1a0>
 8003c34:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c38:	42a0      	cmp	r0, r4
 8003c3a:	d047      	beq.n	8003ccc <HAL_GPIO_Init+0x1a4>
 8003c3c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c40:	42a0      	cmp	r0, r4
 8003c42:	d045      	beq.n	8003cd0 <HAL_GPIO_Init+0x1a8>
 8003c44:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c48:	42a0      	cmp	r0, r4
 8003c4a:	d043      	beq.n	8003cd4 <HAL_GPIO_Init+0x1ac>
 8003c4c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c50:	42a0      	cmp	r0, r4
 8003c52:	d041      	beq.n	8003cd8 <HAL_GPIO_Init+0x1b0>
 8003c54:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c58:	42a0      	cmp	r0, r4
 8003c5a:	d03f      	beq.n	8003cdc <HAL_GPIO_Init+0x1b4>
 8003c5c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c60:	42a0      	cmp	r0, r4
 8003c62:	d03d      	beq.n	8003ce0 <HAL_GPIO_Init+0x1b8>
 8003c64:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003c68:	42a0      	cmp	r0, r4
 8003c6a:	bf14      	ite	ne
 8003c6c:	240a      	movne	r4, #10
 8003c6e:	2409      	moveq	r4, #9
 8003c70:	fa04 f40c 	lsl.w	r4, r4, ip
 8003c74:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003c78:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 8003c7a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8003c7c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8003c7e:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8003c82:	bf0c      	ite	eq
 8003c84:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8003c86:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8003c88:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8003c8a:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8003c8c:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8003c90:	bf0c      	ite	eq
 8003c92:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8003c94:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8003c96:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8003c98:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003c9a:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 8003c9e:	bf0c      	ite	eq
 8003ca0:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8003ca2:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8003ca4:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003ca6:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003ca8:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8003caa:	bf54      	ite	pl
 8003cac:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 8003cae:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8003cb0:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003cb2:	3301      	adds	r3, #1
 8003cb4:	2b10      	cmp	r3, #16
 8003cb6:	f47f af3d 	bne.w	8003b34 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8003cba:	b003      	add	sp, #12
 8003cbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003cc0:	2400      	movs	r4, #0
 8003cc2:	e7d5      	b.n	8003c70 <HAL_GPIO_Init+0x148>
 8003cc4:	2401      	movs	r4, #1
 8003cc6:	e7d3      	b.n	8003c70 <HAL_GPIO_Init+0x148>
 8003cc8:	2402      	movs	r4, #2
 8003cca:	e7d1      	b.n	8003c70 <HAL_GPIO_Init+0x148>
 8003ccc:	2403      	movs	r4, #3
 8003cce:	e7cf      	b.n	8003c70 <HAL_GPIO_Init+0x148>
 8003cd0:	2404      	movs	r4, #4
 8003cd2:	e7cd      	b.n	8003c70 <HAL_GPIO_Init+0x148>
 8003cd4:	2405      	movs	r4, #5
 8003cd6:	e7cb      	b.n	8003c70 <HAL_GPIO_Init+0x148>
 8003cd8:	2406      	movs	r4, #6
 8003cda:	e7c9      	b.n	8003c70 <HAL_GPIO_Init+0x148>
 8003cdc:	2407      	movs	r4, #7
 8003cde:	e7c7      	b.n	8003c70 <HAL_GPIO_Init+0x148>
 8003ce0:	2408      	movs	r4, #8
 8003ce2:	e7c5      	b.n	8003c70 <HAL_GPIO_Init+0x148>
 8003ce4:	40013c00 	.word	0x40013c00
 8003ce8:	40020000 	.word	0x40020000
 8003cec:	40023800 	.word	0x40023800

08003cf0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8003cf0:	6903      	ldr	r3, [r0, #16]
 8003cf2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8003cf4:	bf14      	ite	ne
 8003cf6:	2001      	movne	r0, #1
 8003cf8:	2000      	moveq	r0, #0
 8003cfa:	4770      	bx	lr

08003cfc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003cfc:	b10a      	cbz	r2, 8003d02 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003cfe:	6181      	str	r1, [r0, #24]
  }
}
 8003d00:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003d02:	0409      	lsls	r1, r1, #16
 8003d04:	e7fb      	b.n	8003cfe <HAL_GPIO_WritePin+0x2>

08003d06 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8003d06:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8003d08:	ea01 0203 	and.w	r2, r1, r3
 8003d0c:	ea21 0103 	bic.w	r1, r1, r3
 8003d10:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003d14:	6181      	str	r1, [r0, #24]
}
 8003d16:	4770      	bx	lr

08003d18 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003d18:	6801      	ldr	r1, [r0, #0]
 8003d1a:	694b      	ldr	r3, [r1, #20]
 8003d1c:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8003d20:	f04f 0200 	mov.w	r2, #0
 8003d24:	d010      	beq.n	8003d48 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003d26:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8003d2a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8003d2c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8003d2e:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8003d30:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003d34:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003d38:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003d3a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003d3e:	f043 0304 	orr.w	r3, r3, #4
 8003d42:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8003d44:	2001      	movs	r0, #1
 8003d46:	4770      	bx	lr
  }
  return HAL_OK;
 8003d48:	4618      	mov	r0, r3
}
 8003d4a:	4770      	bx	lr

08003d4c <I2C_WaitOnFlagUntilTimeout>:
{
 8003d4c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8003d50:	4606      	mov	r6, r0
 8003d52:	460f      	mov	r7, r1
 8003d54:	4691      	mov	r9, r2
 8003d56:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003d58:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003d5c:	6833      	ldr	r3, [r6, #0]
 8003d5e:	f1ba 0f01 	cmp.w	sl, #1
 8003d62:	bf0c      	ite	eq
 8003d64:	695c      	ldreq	r4, [r3, #20]
 8003d66:	699c      	ldrne	r4, [r3, #24]
 8003d68:	ea27 0404 	bic.w	r4, r7, r4
 8003d6c:	b2a4      	uxth	r4, r4
 8003d6e:	fab4 f484 	clz	r4, r4
 8003d72:	0964      	lsrs	r4, r4, #5
 8003d74:	45a1      	cmp	r9, r4
 8003d76:	d001      	beq.n	8003d7c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8003d78:	2000      	movs	r0, #0
 8003d7a:	e025      	b.n	8003dc8 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8003d7c:	1c6a      	adds	r2, r5, #1
 8003d7e:	d0ee      	beq.n	8003d5e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003d80:	f7ff fd5c 	bl	800383c <HAL_GetTick>
 8003d84:	9b08      	ldr	r3, [sp, #32]
 8003d86:	1ac0      	subs	r0, r0, r3
 8003d88:	42a8      	cmp	r0, r5
 8003d8a:	d801      	bhi.n	8003d90 <I2C_WaitOnFlagUntilTimeout+0x44>
 8003d8c:	2d00      	cmp	r5, #0
 8003d8e:	d1e5      	bne.n	8003d5c <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8003d90:	6833      	ldr	r3, [r6, #0]
 8003d92:	f1ba 0f01 	cmp.w	sl, #1
 8003d96:	bf0c      	ite	eq
 8003d98:	695b      	ldreq	r3, [r3, #20]
 8003d9a:	699b      	ldrne	r3, [r3, #24]
 8003d9c:	ea27 0303 	bic.w	r3, r7, r3
 8003da0:	b29b      	uxth	r3, r3
 8003da2:	fab3 f383 	clz	r3, r3
 8003da6:	095b      	lsrs	r3, r3, #5
 8003da8:	4599      	cmp	r9, r3
 8003daa:	d1d7      	bne.n	8003d5c <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8003dac:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8003dae:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8003db0:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8003db2:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8003db6:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003dba:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8003dbc:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003dc0:	f042 0220 	orr.w	r2, r2, #32
 8003dc4:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 8003dc6:	2001      	movs	r0, #1
}
 8003dc8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08003dcc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8003dcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003dd0:	4604      	mov	r4, r0
 8003dd2:	460f      	mov	r7, r1
 8003dd4:	4616      	mov	r6, r2
 8003dd6:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8003dd8:	6825      	ldr	r5, [r4, #0]
 8003dda:	6968      	ldr	r0, [r5, #20]
 8003ddc:	ea27 0000 	bic.w	r0, r7, r0
 8003de0:	b280      	uxth	r0, r0
 8003de2:	b1c0      	cbz	r0, 8003e16 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003de4:	696b      	ldr	r3, [r5, #20]
 8003de6:	055a      	lsls	r2, r3, #21
 8003de8:	d517      	bpl.n	8003e1a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003dea:	682b      	ldr	r3, [r5, #0]
 8003dec:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003df0:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003df2:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8003df6:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8003df8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003dfa:	2300      	movs	r3, #0
 8003dfc:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003dfe:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003e02:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003e06:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003e08:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003e0c:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8003e0e:	2300      	movs	r3, #0
 8003e10:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8003e14:	2001      	movs	r0, #1
}
 8003e16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8003e1a:	1c73      	adds	r3, r6, #1
 8003e1c:	d0dd      	beq.n	8003dda <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003e1e:	f7ff fd0d 	bl	800383c <HAL_GetTick>
 8003e22:	eba0 0008 	sub.w	r0, r0, r8
 8003e26:	42b0      	cmp	r0, r6
 8003e28:	d801      	bhi.n	8003e2e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8003e2a:	2e00      	cmp	r6, #0
 8003e2c:	d1d4      	bne.n	8003dd8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8003e2e:	6823      	ldr	r3, [r4, #0]
 8003e30:	695a      	ldr	r2, [r3, #20]
 8003e32:	ea27 0202 	bic.w	r2, r7, r2
 8003e36:	b292      	uxth	r2, r2
 8003e38:	2a00      	cmp	r2, #0
 8003e3a:	d0cd      	beq.n	8003dd8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8003e3c:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 8003e3e:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8003e40:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8003e42:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003e46:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003e4a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003e4c:	4313      	orrs	r3, r2
 8003e4e:	e7dd      	b.n	8003e0c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08003e50 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8003e50:	b570      	push	{r4, r5, r6, lr}
 8003e52:	4604      	mov	r4, r0
 8003e54:	460d      	mov	r5, r1
 8003e56:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8003e58:	6823      	ldr	r3, [r4, #0]
 8003e5a:	695b      	ldr	r3, [r3, #20]
 8003e5c:	061b      	lsls	r3, r3, #24
 8003e5e:	d501      	bpl.n	8003e64 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8003e60:	2000      	movs	r0, #0
 8003e62:	e01e      	b.n	8003ea2 <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8003e64:	4620      	mov	r0, r4
 8003e66:	f7ff ff57 	bl	8003d18 <I2C_IsAcknowledgeFailed>
 8003e6a:	b9c8      	cbnz	r0, 8003ea0 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8003e6c:	1c6a      	adds	r2, r5, #1
 8003e6e:	d0f3      	beq.n	8003e58 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003e70:	f7ff fce4 	bl	800383c <HAL_GetTick>
 8003e74:	1b80      	subs	r0, r0, r6
 8003e76:	42a8      	cmp	r0, r5
 8003e78:	d801      	bhi.n	8003e7e <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8003e7a:	2d00      	cmp	r5, #0
 8003e7c:	d1ec      	bne.n	8003e58 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8003e7e:	6823      	ldr	r3, [r4, #0]
 8003e80:	695b      	ldr	r3, [r3, #20]
 8003e82:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8003e86:	d1e7      	bne.n	8003e58 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8003e88:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8003e8a:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8003e8c:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003e90:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003e94:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8003e96:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003e9a:	f042 0220 	orr.w	r2, r2, #32
 8003e9e:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8003ea0:	2001      	movs	r0, #1
}
 8003ea2:	bd70      	pop	{r4, r5, r6, pc}

08003ea4 <I2C_RequestMemoryWrite>:
{
 8003ea4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003ea8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003eaa:	6802      	ldr	r2, [r0, #0]
{
 8003eac:	b085      	sub	sp, #20
 8003eae:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 8003eb2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003eb4:	6813      	ldr	r3, [r2, #0]
 8003eb6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003eba:	6013      	str	r3, [r2, #0]
{
 8003ebc:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003ebe:	463b      	mov	r3, r7
 8003ec0:	f8cd 8000 	str.w	r8, [sp]
 8003ec4:	2200      	movs	r2, #0
 8003ec6:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8003eca:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003ecc:	f7ff ff3e 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 8003ed0:	6823      	ldr	r3, [r4, #0]
 8003ed2:	b138      	cbz	r0, 8003ee4 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003ed4:	681b      	ldr	r3, [r3, #0]
 8003ed6:	05db      	lsls	r3, r3, #23
 8003ed8:	d502      	bpl.n	8003ee0 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003eda:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8003ede:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8003ee0:	2603      	movs	r6, #3
 8003ee2:	e020      	b.n	8003f26 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003ee4:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8003ee8:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003eea:	491a      	ldr	r1, [pc, #104]	@ (8003f54 <I2C_RequestMemoryWrite+0xb0>)
 8003eec:	4643      	mov	r3, r8
 8003eee:	463a      	mov	r2, r7
 8003ef0:	4620      	mov	r0, r4
 8003ef2:	f7ff ff6b 	bl	8003dcc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003ef6:	b9a8      	cbnz	r0, 8003f24 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003ef8:	6823      	ldr	r3, [r4, #0]
 8003efa:	9003      	str	r0, [sp, #12]
 8003efc:	695a      	ldr	r2, [r3, #20]
 8003efe:	9203      	str	r2, [sp, #12]
 8003f00:	699b      	ldr	r3, [r3, #24]
 8003f02:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003f04:	4642      	mov	r2, r8
 8003f06:	4639      	mov	r1, r7
 8003f08:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003f0a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003f0c:	f7ff ffa0 	bl	8003e50 <I2C_WaitOnTXEFlagUntilTimeout>
 8003f10:	4606      	mov	r6, r0
 8003f12:	b160      	cbz	r0, 8003f2e <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003f14:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003f16:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003f18:	bf01      	itttt	eq
 8003f1a:	6822      	ldreq	r2, [r4, #0]
 8003f1c:	6813      	ldreq	r3, [r2, #0]
 8003f1e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8003f22:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8003f24:	2601      	movs	r6, #1
}
 8003f26:	4630      	mov	r0, r6
 8003f28:	b005      	add	sp, #20
 8003f2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003f2e:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003f32:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003f34:	d102      	bne.n	8003f3c <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003f36:	b2ed      	uxtb	r5, r5
 8003f38:	611d      	str	r5, [r3, #16]
 8003f3a:	e7f4      	b.n	8003f26 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8003f3c:	0a2a      	lsrs	r2, r5, #8
 8003f3e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003f40:	4639      	mov	r1, r7
 8003f42:	4642      	mov	r2, r8
 8003f44:	4620      	mov	r0, r4
 8003f46:	f7ff ff83 	bl	8003e50 <I2C_WaitOnTXEFlagUntilTimeout>
 8003f4a:	2800      	cmp	r0, #0
 8003f4c:	d1e2      	bne.n	8003f14 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003f4e:	6823      	ldr	r3, [r4, #0]
 8003f50:	e7f1      	b.n	8003f36 <I2C_RequestMemoryWrite+0x92>
 8003f52:	bf00      	nop
 8003f54:	00010002 	.word	0x00010002

08003f58 <I2C_RequestMemoryRead>:
{
 8003f58:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003f5c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003f5e:	6803      	ldr	r3, [r0, #0]
{
 8003f60:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003f62:	681a      	ldr	r2, [r3, #0]
 8003f64:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003f68:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003f6a:	681a      	ldr	r2, [r3, #0]
{
 8003f6c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003f70:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003f74:	601a      	str	r2, [r3, #0]
{
 8003f76:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003f78:	463b      	mov	r3, r7
 8003f7a:	f8cd 8000 	str.w	r8, [sp]
 8003f7e:	2200      	movs	r2, #0
 8003f80:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8003f84:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003f86:	f7ff fee1 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 8003f8a:	6823      	ldr	r3, [r4, #0]
 8003f8c:	b138      	cbz	r0, 8003f9e <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003f8e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003f90:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003f92:	bf44      	itt	mi
 8003f94:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8003f98:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8003f9a:	2003      	movs	r0, #3
 8003f9c:	e021      	b.n	8003fe2 <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003f9e:	fa5f f986 	uxtb.w	r9, r6
 8003fa2:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8003fa6:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003fa8:	492b      	ldr	r1, [pc, #172]	@ (8004058 <I2C_RequestMemoryRead+0x100>)
 8003faa:	4643      	mov	r3, r8
 8003fac:	463a      	mov	r2, r7
 8003fae:	4620      	mov	r0, r4
 8003fb0:	f7ff ff0c 	bl	8003dcc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003fb4:	b9a0      	cbnz	r0, 8003fe0 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003fb6:	6823      	ldr	r3, [r4, #0]
 8003fb8:	9003      	str	r0, [sp, #12]
 8003fba:	695a      	ldr	r2, [r3, #20]
 8003fbc:	9203      	str	r2, [sp, #12]
 8003fbe:	699b      	ldr	r3, [r3, #24]
 8003fc0:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003fc2:	4642      	mov	r2, r8
 8003fc4:	4639      	mov	r1, r7
 8003fc6:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003fc8:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003fca:	f7ff ff41 	bl	8003e50 <I2C_WaitOnTXEFlagUntilTimeout>
 8003fce:	b158      	cbz	r0, 8003fe8 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003fd0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003fd2:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003fd4:	bf01      	itttt	eq
 8003fd6:	6822      	ldreq	r2, [r4, #0]
 8003fd8:	6813      	ldreq	r3, [r2, #0]
 8003fda:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8003fde:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8003fe0:	2001      	movs	r0, #1
}
 8003fe2:	b004      	add	sp, #16
 8003fe4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003fe8:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003fec:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003fee:	d11a      	bne.n	8004026 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003ff0:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003ff2:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003ff4:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003ff6:	4639      	mov	r1, r7
 8003ff8:	4620      	mov	r0, r4
 8003ffa:	f7ff ff29 	bl	8003e50 <I2C_WaitOnTXEFlagUntilTimeout>
 8003ffe:	4602      	mov	r2, r0
 8004000:	2800      	cmp	r0, #0
 8004002:	d1e5      	bne.n	8003fd0 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004004:	6821      	ldr	r1, [r4, #0]
 8004006:	680b      	ldr	r3, [r1, #0]
 8004008:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800400c:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800400e:	4620      	mov	r0, r4
 8004010:	f8cd 8000 	str.w	r8, [sp]
 8004014:	463b      	mov	r3, r7
 8004016:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800401a:	f7ff fe97 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 800401e:	6822      	ldr	r2, [r4, #0]
 8004020:	b160      	cbz	r0, 800403c <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004022:	6813      	ldr	r3, [r2, #0]
 8004024:	e7b4      	b.n	8003f90 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004026:	0a2a      	lsrs	r2, r5, #8
 8004028:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800402a:	4639      	mov	r1, r7
 800402c:	4642      	mov	r2, r8
 800402e:	4620      	mov	r0, r4
 8004030:	f7ff ff0e 	bl	8003e50 <I2C_WaitOnTXEFlagUntilTimeout>
 8004034:	2800      	cmp	r0, #0
 8004036:	d1cb      	bne.n	8003fd0 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004038:	6823      	ldr	r3, [r4, #0]
 800403a:	e7d9      	b.n	8003ff0 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800403c:	f049 0301 	orr.w	r3, r9, #1
 8004040:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004042:	4905      	ldr	r1, [pc, #20]	@ (8004058 <I2C_RequestMemoryRead+0x100>)
 8004044:	4643      	mov	r3, r8
 8004046:	463a      	mov	r2, r7
 8004048:	4620      	mov	r0, r4
 800404a:	f7ff febf 	bl	8003dcc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800404e:	3800      	subs	r0, #0
 8004050:	bf18      	it	ne
 8004052:	2001      	movne	r0, #1
 8004054:	e7c5      	b.n	8003fe2 <I2C_RequestMemoryRead+0x8a>
 8004056:	bf00      	nop
 8004058:	00010002 	.word	0x00010002

0800405c <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800405c:	b570      	push	{r4, r5, r6, lr}
 800405e:	4604      	mov	r4, r0
 8004060:	460d      	mov	r5, r1
 8004062:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004064:	6823      	ldr	r3, [r4, #0]
 8004066:	695b      	ldr	r3, [r3, #20]
 8004068:	075b      	lsls	r3, r3, #29
 800406a:	d501      	bpl.n	8004070 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800406c:	2000      	movs	r0, #0
 800406e:	e01e      	b.n	80040ae <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004070:	4620      	mov	r0, r4
 8004072:	f7ff fe51 	bl	8003d18 <I2C_IsAcknowledgeFailed>
 8004076:	b9c8      	cbnz	r0, 80040ac <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8004078:	1c6a      	adds	r2, r5, #1
 800407a:	d0f3      	beq.n	8004064 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800407c:	f7ff fbde 	bl	800383c <HAL_GetTick>
 8004080:	1b80      	subs	r0, r0, r6
 8004082:	42a8      	cmp	r0, r5
 8004084:	d801      	bhi.n	800408a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004086:	2d00      	cmp	r5, #0
 8004088:	d1ec      	bne.n	8004064 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 800408a:	6823      	ldr	r3, [r4, #0]
 800408c:	695b      	ldr	r3, [r3, #20]
 800408e:	f013 0304 	ands.w	r3, r3, #4
 8004092:	d1e7      	bne.n	8004064 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004094:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004096:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004098:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800409c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80040a0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80040a2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80040a6:	f042 0220 	orr.w	r2, r2, #32
 80040aa:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 80040ac:	2001      	movs	r0, #1
}
 80040ae:	bd70      	pop	{r4, r5, r6, pc}

080040b0 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80040b0:	b570      	push	{r4, r5, r6, lr}
 80040b2:	4604      	mov	r4, r0
 80040b4:	460d      	mov	r5, r1
 80040b6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80040b8:	6821      	ldr	r1, [r4, #0]
 80040ba:	694b      	ldr	r3, [r1, #20]
 80040bc:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 80040c0:	d001      	beq.n	80040c6 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80040c2:	2000      	movs	r0, #0
 80040c4:	e011      	b.n	80040ea <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80040c6:	694a      	ldr	r2, [r1, #20]
 80040c8:	06d2      	lsls	r2, r2, #27
 80040ca:	d50f      	bpl.n	80040ec <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80040cc:	f06f 0210 	mvn.w	r2, #16
 80040d0:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80040d2:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80040d4:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80040d6:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80040da:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80040de:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80040e0:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 80040e2:	2300      	movs	r3, #0
 80040e4:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80040e8:	2001      	movs	r0, #1
}
 80040ea:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80040ec:	f7ff fba6 	bl	800383c <HAL_GetTick>
 80040f0:	1b80      	subs	r0, r0, r6
 80040f2:	42a8      	cmp	r0, r5
 80040f4:	d801      	bhi.n	80040fa <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 80040f6:	2d00      	cmp	r5, #0
 80040f8:	d1de      	bne.n	80040b8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80040fa:	6823      	ldr	r3, [r4, #0]
 80040fc:	695b      	ldr	r3, [r3, #20]
 80040fe:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8004102:	d1d9      	bne.n	80040b8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8004104:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004106:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004108:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800410c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004110:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004112:	4313      	orrs	r3, r2
 8004114:	e7e4      	b.n	80040e0 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08004118 <HAL_I2C_Init>:
{
 8004118:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800411a:	4604      	mov	r4, r0
 800411c:	b908      	cbnz	r0, 8004122 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800411e:	2001      	movs	r0, #1
}
 8004120:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004122:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8004126:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800412a:	b91b      	cbnz	r3, 8004134 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800412c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8004130:	f7fe f848 	bl	80021c4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004134:	2324      	movs	r3, #36	@ 0x24
 8004136:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800413a:	6823      	ldr	r3, [r4, #0]
 800413c:	681a      	ldr	r2, [r3, #0]
 800413e:	f022 0201 	bic.w	r2, r2, #1
 8004142:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004144:	681a      	ldr	r2, [r3, #0]
 8004146:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800414a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800414c:	681a      	ldr	r2, [r3, #0]
 800414e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004152:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004154:	f001 fb80 	bl	8005858 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004158:	4b3f      	ldr	r3, [pc, #252]	@ (8004258 <HAL_I2C_Init+0x140>)
 800415a:	6865      	ldr	r5, [r4, #4]
 800415c:	429d      	cmp	r5, r3
 800415e:	bf94      	ite	ls
 8004160:	4b3e      	ldrls	r3, [pc, #248]	@ (800425c <HAL_I2C_Init+0x144>)
 8004162:	4b3f      	ldrhi	r3, [pc, #252]	@ (8004260 <HAL_I2C_Init+0x148>)
 8004164:	4298      	cmp	r0, r3
 8004166:	bf8c      	ite	hi
 8004168:	2300      	movhi	r3, #0
 800416a:	2301      	movls	r3, #1
 800416c:	2b00      	cmp	r3, #0
 800416e:	d1d6      	bne.n	800411e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004170:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004172:	4e39      	ldr	r6, [pc, #228]	@ (8004258 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004174:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004176:	4b3b      	ldr	r3, [pc, #236]	@ (8004264 <HAL_I2C_Init+0x14c>)
 8004178:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800417c:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8004180:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004182:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004184:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004186:	bf88      	it	hi
 8004188:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 800418c:	6a11      	ldr	r1, [r2, #32]
 800418e:	bf88      	it	hi
 8004190:	4373      	mulhi	r3, r6
 8004192:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8004196:	bf84      	itt	hi
 8004198:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 800419c:	fbb3 f3f6 	udivhi	r3, r3, r6
 80041a0:	3301      	adds	r3, #1
 80041a2:	430b      	orrs	r3, r1
 80041a4:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80041a6:	69d1      	ldr	r1, [r2, #28]
 80041a8:	1e43      	subs	r3, r0, #1
 80041aa:	482b      	ldr	r0, [pc, #172]	@ (8004258 <HAL_I2C_Init+0x140>)
 80041ac:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 80041b0:	4285      	cmp	r5, r0
 80041b2:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80041b6:	d832      	bhi.n	800421e <HAL_I2C_Init+0x106>
 80041b8:	006d      	lsls	r5, r5, #1
 80041ba:	f640 70fc 	movw	r0, #4092	@ 0xffc
 80041be:	fbb3 f3f5 	udiv	r3, r3, r5
 80041c2:	3301      	adds	r3, #1
 80041c4:	4203      	tst	r3, r0
 80041c6:	d042      	beq.n	800424e <HAL_I2C_Init+0x136>
 80041c8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80041cc:	4319      	orrs	r1, r3
 80041ce:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80041d0:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80041d4:	6811      	ldr	r1, [r2, #0]
 80041d6:	4303      	orrs	r3, r0
 80041d8:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 80041dc:	430b      	orrs	r3, r1
 80041de:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80041e0:	6891      	ldr	r1, [r2, #8]
 80041e2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80041e6:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 80041ea:	4303      	orrs	r3, r0
 80041ec:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80041f0:	430b      	orrs	r3, r1
 80041f2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80041f4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80041f8:	68d1      	ldr	r1, [r2, #12]
 80041fa:	4303      	orrs	r3, r0
 80041fc:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004200:	430b      	orrs	r3, r1
 8004202:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004204:	6813      	ldr	r3, [r2, #0]
 8004206:	f043 0301 	orr.w	r3, r3, #1
 800420a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800420c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800420e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004210:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004212:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004216:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004218:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 800421c:	e780      	b.n	8004120 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800421e:	68a0      	ldr	r0, [r4, #8]
 8004220:	b950      	cbnz	r0, 8004238 <HAL_I2C_Init+0x120>
 8004222:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004226:	fbb3 f3f5 	udiv	r3, r3, r5
 800422a:	3301      	adds	r3, #1
 800422c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004230:	b17b      	cbz	r3, 8004252 <HAL_I2C_Init+0x13a>
 8004232:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004236:	e7c9      	b.n	80041cc <HAL_I2C_Init+0xb4>
 8004238:	2019      	movs	r0, #25
 800423a:	4368      	muls	r0, r5
 800423c:	fbb3 f3f0 	udiv	r3, r3, r0
 8004240:	3301      	adds	r3, #1
 8004242:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004246:	b123      	cbz	r3, 8004252 <HAL_I2C_Init+0x13a>
 8004248:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800424c:	e7be      	b.n	80041cc <HAL_I2C_Init+0xb4>
 800424e:	2304      	movs	r3, #4
 8004250:	e7bc      	b.n	80041cc <HAL_I2C_Init+0xb4>
 8004252:	2301      	movs	r3, #1
 8004254:	e7ba      	b.n	80041cc <HAL_I2C_Init+0xb4>
 8004256:	bf00      	nop
 8004258:	000186a0 	.word	0x000186a0
 800425c:	001e847f 	.word	0x001e847f
 8004260:	003d08ff 	.word	0x003d08ff
 8004264:	000f4240 	.word	0x000f4240

08004268 <HAL_I2C_Mem_Write>:
{
 8004268:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800426c:	4604      	mov	r4, r0
 800426e:	4699      	mov	r9, r3
 8004270:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8004272:	460f      	mov	r7, r1
 8004274:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004276:	f7ff fae1 	bl	800383c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800427a:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800427e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004280:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004282:	d003      	beq.n	800428c <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8004284:	2002      	movs	r0, #2
}
 8004286:	b003      	add	sp, #12
 8004288:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800428c:	9000      	str	r0, [sp, #0]
 800428e:	493c      	ldr	r1, [pc, #240]	@ (8004380 <HAL_I2C_Mem_Write+0x118>)
 8004290:	2319      	movs	r3, #25
 8004292:	2201      	movs	r2, #1
 8004294:	4620      	mov	r0, r4
 8004296:	f7ff fd59 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 800429a:	2800      	cmp	r0, #0
 800429c:	d1f2      	bne.n	8004284 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800429e:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 80042a2:	2b01      	cmp	r3, #1
 80042a4:	d0ee      	beq.n	8004284 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80042a6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80042a8:	2301      	movs	r3, #1
 80042aa:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80042ae:	6803      	ldr	r3, [r0, #0]
 80042b0:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80042b2:	bf5e      	ittt	pl
 80042b4:	6803      	ldrpl	r3, [r0, #0]
 80042b6:	f043 0301 	orrpl.w	r3, r3, #1
 80042ba:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80042bc:	6803      	ldr	r3, [r0, #0]
 80042be:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80042c2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80042c4:	2321      	movs	r3, #33	@ 0x21
 80042c6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80042ca:	2340      	movs	r3, #64	@ 0x40
 80042cc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80042d0:	2300      	movs	r3, #0
 80042d2:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80042d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80042d6:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80042d8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80042dc:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80042de:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80042e0:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80042e2:	4b28      	ldr	r3, [pc, #160]	@ (8004384 <HAL_I2C_Mem_Write+0x11c>)
 80042e4:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80042e6:	4642      	mov	r2, r8
 80042e8:	e9cd 6500 	strd	r6, r5, [sp]
 80042ec:	464b      	mov	r3, r9
 80042ee:	4639      	mov	r1, r7
 80042f0:	4620      	mov	r0, r4
 80042f2:	f7ff fdd7 	bl	8003ea4 <I2C_RequestMemoryWrite>
 80042f6:	2800      	cmp	r0, #0
 80042f8:	d02a      	beq.n	8004350 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80042fa:	2001      	movs	r0, #1
 80042fc:	e7c3      	b.n	8004286 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80042fe:	f7ff fda7 	bl	8003e50 <I2C_WaitOnTXEFlagUntilTimeout>
 8004302:	b140      	cbz	r0, 8004316 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004304:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004306:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004308:	bf01      	itttt	eq
 800430a:	6822      	ldreq	r2, [r4, #0]
 800430c:	6813      	ldreq	r3, [r2, #0]
 800430e:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004312:	6013      	streq	r3, [r2, #0]
 8004314:	e7f1      	b.n	80042fa <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004316:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004318:	6827      	ldr	r7, [r4, #0]
 800431a:	461a      	mov	r2, r3
 800431c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004320:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004322:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004324:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004326:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004328:	3a01      	subs	r2, #1
 800432a:	b292      	uxth	r2, r2
 800432c:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800432e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004330:	1e48      	subs	r0, r1, #1
 8004332:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004334:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004336:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004338:	d50a      	bpl.n	8004350 <HAL_I2C_Mem_Write+0xe8>
 800433a:	b148      	cbz	r0, 8004350 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800433c:	785a      	ldrb	r2, [r3, #1]
 800433e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004340:	3302      	adds	r3, #2
 8004342:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8004344:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004346:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004348:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800434a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800434c:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800434e:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8004350:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004352:	462a      	mov	r2, r5
 8004354:	4631      	mov	r1, r6
 8004356:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004358:	2b00      	cmp	r3, #0
 800435a:	d1d0      	bne.n	80042fe <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800435c:	f7ff fe7e 	bl	800405c <I2C_WaitOnBTFFlagUntilTimeout>
 8004360:	2800      	cmp	r0, #0
 8004362:	d1cf      	bne.n	8004304 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004364:	6822      	ldr	r2, [r4, #0]
 8004366:	6813      	ldr	r3, [r2, #0]
 8004368:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800436c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800436e:	2320      	movs	r3, #32
 8004370:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8004374:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004378:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 800437c:	e783      	b.n	8004286 <HAL_I2C_Mem_Write+0x1e>
 800437e:	bf00      	nop
 8004380:	00100002 	.word	0x00100002
 8004384:	ffff0000 	.word	0xffff0000

08004388 <HAL_I2C_Mem_Read>:
{
 8004388:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800438c:	4604      	mov	r4, r0
 800438e:	b087      	sub	sp, #28
 8004390:	4699      	mov	r9, r3
 8004392:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8004394:	460d      	mov	r5, r1
 8004396:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004398:	f7ff fa50 	bl	800383c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800439c:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 80043a0:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80043a2:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80043a4:	d004      	beq.n	80043b0 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 80043a6:	2502      	movs	r5, #2
}
 80043a8:	4628      	mov	r0, r5
 80043aa:	b007      	add	sp, #28
 80043ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80043b0:	9000      	str	r0, [sp, #0]
 80043b2:	497a      	ldr	r1, [pc, #488]	@ (800459c <HAL_I2C_Mem_Read+0x214>)
 80043b4:	2319      	movs	r3, #25
 80043b6:	2201      	movs	r2, #1
 80043b8:	4620      	mov	r0, r4
 80043ba:	f7ff fcc7 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 80043be:	2800      	cmp	r0, #0
 80043c0:	d1f1      	bne.n	80043a6 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80043c2:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 80043c6:	2b01      	cmp	r3, #1
 80043c8:	d0ed      	beq.n	80043a6 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80043ca:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80043cc:	2301      	movs	r3, #1
 80043ce:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80043d2:	6803      	ldr	r3, [r0, #0]
 80043d4:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80043d6:	bf5e      	ittt	pl
 80043d8:	6803      	ldrpl	r3, [r0, #0]
 80043da:	f043 0301 	orrpl.w	r3, r3, #1
 80043de:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80043e0:	6803      	ldr	r3, [r0, #0]
 80043e2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80043e6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80043e8:	2322      	movs	r3, #34	@ 0x22
 80043ea:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80043ee:	2340      	movs	r3, #64	@ 0x40
 80043f0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80043f4:	2300      	movs	r3, #0
 80043f6:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80043f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80043fa:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80043fc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8004400:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004402:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004404:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004406:	4b66      	ldr	r3, [pc, #408]	@ (80045a0 <HAL_I2C_Mem_Read+0x218>)
 8004408:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800440a:	4629      	mov	r1, r5
 800440c:	e9cd 7600 	strd	r7, r6, [sp]
 8004410:	464b      	mov	r3, r9
 8004412:	4642      	mov	r2, r8
 8004414:	4620      	mov	r0, r4
 8004416:	f7ff fd9f 	bl	8003f58 <I2C_RequestMemoryRead>
 800441a:	4605      	mov	r5, r0
 800441c:	b108      	cbz	r0, 8004422 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800441e:	2501      	movs	r5, #1
 8004420:	e7c2      	b.n	80043a8 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8004422:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004424:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8004426:	b9b2      	cbnz	r2, 8004456 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004428:	9002      	str	r0, [sp, #8]
 800442a:	695a      	ldr	r2, [r3, #20]
 800442c:	9202      	str	r2, [sp, #8]
 800442e:	699a      	ldr	r2, [r3, #24]
 8004430:	9202      	str	r2, [sp, #8]
 8004432:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004434:	681a      	ldr	r2, [r3, #0]
 8004436:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800443a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800443c:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 80045a4 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8004440:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004442:	2b00      	cmp	r3, #0
 8004444:	d12c      	bne.n	80044a0 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8004446:	2220      	movs	r2, #32
 8004448:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800444c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004450:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8004454:	e7a8      	b.n	80043a8 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004456:	2a01      	cmp	r2, #1
 8004458:	d10a      	bne.n	8004470 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800445a:	681a      	ldr	r2, [r3, #0]
 800445c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004460:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004462:	9003      	str	r0, [sp, #12]
 8004464:	695a      	ldr	r2, [r3, #20]
 8004466:	9203      	str	r2, [sp, #12]
 8004468:	699a      	ldr	r2, [r3, #24]
 800446a:	9203      	str	r2, [sp, #12]
 800446c:	9a03      	ldr	r2, [sp, #12]
 800446e:	e7e1      	b.n	8004434 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8004470:	2a02      	cmp	r2, #2
 8004472:	d10e      	bne.n	8004492 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004474:	681a      	ldr	r2, [r3, #0]
 8004476:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800447a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800447c:	681a      	ldr	r2, [r3, #0]
 800447e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004482:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004484:	9004      	str	r0, [sp, #16]
 8004486:	695a      	ldr	r2, [r3, #20]
 8004488:	9204      	str	r2, [sp, #16]
 800448a:	699b      	ldr	r3, [r3, #24]
 800448c:	9304      	str	r3, [sp, #16]
 800448e:	9b04      	ldr	r3, [sp, #16]
 8004490:	e7d4      	b.n	800443c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004492:	9005      	str	r0, [sp, #20]
 8004494:	695a      	ldr	r2, [r3, #20]
 8004496:	9205      	str	r2, [sp, #20]
 8004498:	699b      	ldr	r3, [r3, #24]
 800449a:	9305      	str	r3, [sp, #20]
 800449c:	9b05      	ldr	r3, [sp, #20]
 800449e:	e7cd      	b.n	800443c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80044a0:	2b03      	cmp	r3, #3
 80044a2:	d856      	bhi.n	8004552 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80044a4:	2b01      	cmp	r3, #1
 80044a6:	d115      	bne.n	80044d4 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80044a8:	4632      	mov	r2, r6
 80044aa:	4639      	mov	r1, r7
 80044ac:	4620      	mov	r0, r4
 80044ae:	f7ff fdff 	bl	80040b0 <I2C_WaitOnRXNEFlagUntilTimeout>
 80044b2:	2800      	cmp	r0, #0
 80044b4:	d1b3      	bne.n	800441e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80044b6:	6823      	ldr	r3, [r4, #0]
 80044b8:	691a      	ldr	r2, [r3, #16]
 80044ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80044bc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80044be:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80044c0:	3301      	adds	r3, #1
 80044c2:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80044c4:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80044c6:	3b01      	subs	r3, #1
 80044c8:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80044ca:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80044cc:	3b01      	subs	r3, #1
 80044ce:	b29b      	uxth	r3, r3
 80044d0:	8563      	strh	r3, [r4, #42]	@ 0x2a
 80044d2:	e7b5      	b.n	8004440 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80044d4:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80044d6:	9600      	str	r6, [sp, #0]
 80044d8:	463b      	mov	r3, r7
 80044da:	f04f 0200 	mov.w	r2, #0
 80044de:	4641      	mov	r1, r8
 80044e0:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80044e2:	d119      	bne.n	8004518 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80044e4:	f7ff fc32 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 80044e8:	2800      	cmp	r0, #0
 80044ea:	d198      	bne.n	800441e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80044ec:	6823      	ldr	r3, [r4, #0]
 80044ee:	681a      	ldr	r2, [r3, #0]
 80044f0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80044f4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80044f6:	691a      	ldr	r2, [r3, #16]
 80044f8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80044fa:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80044fc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80044fe:	1c53      	adds	r3, r2, #1
 8004500:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8004502:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004504:	3b01      	subs	r3, #1
 8004506:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004508:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800450a:	3b01      	subs	r3, #1
 800450c:	b29b      	uxth	r3, r3
 800450e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004510:	6823      	ldr	r3, [r4, #0]
 8004512:	691b      	ldr	r3, [r3, #16]
 8004514:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8004516:	e7d2      	b.n	80044be <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004518:	f7ff fc18 	bl	8003d4c <I2C_WaitOnFlagUntilTimeout>
 800451c:	4602      	mov	r2, r0
 800451e:	2800      	cmp	r0, #0
 8004520:	f47f af7d 	bne.w	800441e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004524:	6823      	ldr	r3, [r4, #0]
 8004526:	6819      	ldr	r1, [r3, #0]
 8004528:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800452c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800452e:	6919      	ldr	r1, [r3, #16]
 8004530:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004532:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8004534:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004536:	3301      	adds	r3, #1
 8004538:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800453a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800453c:	3b01      	subs	r3, #1
 800453e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004540:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004542:	3b01      	subs	r3, #1
 8004544:	b29b      	uxth	r3, r3
 8004546:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004548:	4641      	mov	r1, r8
 800454a:	9600      	str	r6, [sp, #0]
 800454c:	463b      	mov	r3, r7
 800454e:	4620      	mov	r0, r4
 8004550:	e7c8      	b.n	80044e4 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004552:	4632      	mov	r2, r6
 8004554:	4639      	mov	r1, r7
 8004556:	4620      	mov	r0, r4
 8004558:	f7ff fdaa 	bl	80040b0 <I2C_WaitOnRXNEFlagUntilTimeout>
 800455c:	2800      	cmp	r0, #0
 800455e:	f47f af5e 	bne.w	800441e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004562:	6823      	ldr	r3, [r4, #0]
 8004564:	691a      	ldr	r2, [r3, #16]
 8004566:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004568:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 800456a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 800456c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800456e:	3a01      	subs	r2, #1
 8004570:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8004572:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8004574:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004576:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8004578:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 800457a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800457c:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 800457e:	3b01      	subs	r3, #1
 8004580:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004582:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8004584:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004586:	f57f af5b 	bpl.w	8004440 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 800458a:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800458c:	bf02      	ittt	eq
 800458e:	6813      	ldreq	r3, [r2, #0]
 8004590:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8004594:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004596:	6913      	ldr	r3, [r2, #16]
 8004598:	704b      	strb	r3, [r1, #1]
 800459a:	e790      	b.n	80044be <HAL_I2C_Mem_Read+0x136>
 800459c:	00100002 	.word	0x00100002
 80045a0:	ffff0000 	.word	0xffff0000
 80045a4:	00010004 	.word	0x00010004

080045a8 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80045a8:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80045aa:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80045ae:	2b20      	cmp	r3, #32
 80045b0:	b2dc      	uxtb	r4, r3
 80045b2:	d116      	bne.n	80045e2 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80045b4:	2324      	movs	r3, #36	@ 0x24
 80045b6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80045ba:	6803      	ldr	r3, [r0, #0]
 80045bc:	681a      	ldr	r2, [r3, #0]
 80045be:	f022 0201 	bic.w	r2, r2, #1
 80045c2:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80045c4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80045c6:	f022 0210 	bic.w	r2, r2, #16
 80045ca:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80045cc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80045ce:	4311      	orrs	r1, r2
 80045d0:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80045d2:	681a      	ldr	r2, [r3, #0]
 80045d4:	f042 0201 	orr.w	r2, r2, #1
 80045d8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80045da:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 80045de:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80045e0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80045e2:	2002      	movs	r0, #2
 80045e4:	e7fc      	b.n	80045e0 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080045e6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80045e6:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80045e8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80045ec:	2b20      	cmp	r3, #32
 80045ee:	b2dc      	uxtb	r4, r3
 80045f0:	d116      	bne.n	8004620 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80045f2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80045f4:	2324      	movs	r3, #36	@ 0x24
 80045f6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80045fa:	6813      	ldr	r3, [r2, #0]
 80045fc:	f023 0301 	bic.w	r3, r3, #1
 8004600:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8004602:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004604:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8004608:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800460a:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 800460c:	b29b      	uxth	r3, r3
 800460e:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004610:	6813      	ldr	r3, [r2, #0]
 8004612:	f043 0301 	orr.w	r3, r3, #1
 8004616:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004618:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800461c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800461e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004620:	2002      	movs	r0, #2
 8004622:	e7fc      	b.n	800461e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08004624 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004624:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004626:	01d2      	lsls	r2, r2, #7
 8004628:	3284      	adds	r2, #132	@ 0x84
 800462a:	1883      	adds	r3, r0, r2
{
 800462c:	b5f0      	push	{r4, r5, r6, r7, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800462e:	68c7      	ldr	r7, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004630:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004632:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004634:	680e      	ldr	r6, [r1, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004636:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800463a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800463c:	68c5      	ldr	r5, [r0, #12]
 800463e:	f106 0c01 	add.w	ip, r6, #1
 8004642:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004646:	f3c7 470b 	ubfx	r7, r7, #16, #12
 800464a:	4427      	add	r7, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800464c:	4465      	add	r5, ip
 800464e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004652:	605d      	str	r5, [r3, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004654:	68c7      	ldr	r7, [r0, #12]
 8004656:	68cd      	ldr	r5, [r1, #12]
 8004658:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800465c:	442f      	add	r7, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800465e:	689d      	ldr	r5, [r3, #8]
 8004660:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8004664:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004666:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 800466a:	688d      	ldr	r5, [r1, #8]
 800466c:	f3cc 0c0a 	ubfx	ip, ip, #0, #11
 8004670:	3501      	adds	r5, #1
 8004672:	4465      	add	r5, ip
 8004674:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8004678:	609d      	str	r5, [r3, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800467a:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800467c:	f8d1 c010 	ldr.w	ip, [r1, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004680:	698f      	ldr	r7, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004682:	f025 0507 	bic.w	r5, r5, #7
 8004686:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004688:	f8c3 c010 	str.w	ip, [r3, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 800468c:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8004690:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8004694:	f891 7031 	ldrb.w	r7, [r1, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8004698:	ea45 2507 	orr.w	r5, r5, r7, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800469c:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 80046a0:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80046a4:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80046a6:	695d      	ldr	r5, [r3, #20]
 80046a8:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80046ac:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80046ae:	694d      	ldr	r5, [r1, #20]
 80046b0:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80046b2:	69dd      	ldr	r5, [r3, #28]
 80046b4:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80046b8:	f025 0507 	bic.w	r5, r5, #7
 80046bc:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80046be:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80046c2:	433d      	orrs	r5, r7
 80046c4:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 80046c6:	f1bc 0f07 	cmp.w	ip, #7
 80046ca:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
 80046cc:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80046ce:	bf9c      	itt	ls
 80046d0:	4d0d      	ldrls	r5, [pc, #52]	@ (8004708 <LTDC_SetConfig+0xe4>)
 80046d2:	f815 700c 	ldrbls.w	r7, [r5, ip]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80046d6:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80046d8:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 80046dc:	62dd      	str	r5, [r3, #44]	@ 0x2c
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 80046de:	bf88      	it	hi
 80046e0:	2701      	movhi	r7, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80046e2:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80046e4:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80046e6:	1ba4      	subs	r4, r4, r6
 80046e8:	437c      	muls	r4, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80046ea:	437d      	muls	r5, r7
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80046ec:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80046ee:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80046f2:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80046f4:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 80046f6:	f36f 040a 	bfc	r4, #0, #11
 80046fa:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80046fc:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80046fe:	5883      	ldr	r3, [r0, r2]
 8004700:	f043 0301 	orr.w	r3, r3, #1
 8004704:	5083      	str	r3, [r0, r2]
}
 8004706:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004708:	08024e38 	.word	0x08024e38

0800470c <HAL_LTDC_Init>:
{
 800470c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800470e:	4604      	mov	r4, r0
 8004710:	2800      	cmp	r0, #0
 8004712:	d04e      	beq.n	80047b2 <HAL_LTDC_Init+0xa6>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004714:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8004718:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800471c:	b91b      	cbnz	r3, 8004726 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800471e:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8004722:	f7fd fdab 	bl	800227c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004726:	2302      	movs	r3, #2
 8004728:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800472c:	6823      	ldr	r3, [r4, #0]
 800472e:	699a      	ldr	r2, [r3, #24]
 8004730:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8004734:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004736:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800473a:	4302      	orrs	r2, r0
 800473c:	68e0      	ldr	r0, [r4, #12]
 800473e:	6999      	ldr	r1, [r3, #24]
 8004740:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004742:	6920      	ldr	r0, [r4, #16]
 8004744:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004746:	430a      	orrs	r2, r1
 8004748:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
 800474a:	e9d4 1205 	ldrd	r1, r2, [r4, #20]
 800474e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004752:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
 8004754:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8004758:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800475c:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
 800475e:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	@ 0x24
 8004762:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004766:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
 8004768:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 800476c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004770:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004772:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8004774:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8004778:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800477c:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8004780:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004782:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8004784:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8004788:	432a      	orrs	r2, r5
 800478a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800478e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004792:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8004794:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004796:	f042 0206 	orr.w	r2, r2, #6
 800479a:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800479c:	699a      	ldr	r2, [r3, #24]
 800479e:	f042 0201 	orr.w	r2, r2, #1
 80047a2:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80047a4:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80047a6:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80047a8:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80047ac:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 80047b0:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80047b2:	2001      	movs	r0, #1
 80047b4:	e7fc      	b.n	80047b0 <HAL_LTDC_Init+0xa4>

080047b6 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 80047b6:	4770      	bx	lr

080047b8 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 80047b8:	4770      	bx	lr

080047ba <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80047ba:	6803      	ldr	r3, [r0, #0]
{
 80047bc:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80047be:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80047c0:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80047c2:	0772      	lsls	r2, r6, #29
{
 80047c4:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80047c6:	d514      	bpl.n	80047f2 <HAL_LTDC_IRQHandler+0x38>
 80047c8:	0769      	lsls	r1, r5, #29
 80047ca:	d512      	bpl.n	80047f2 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80047cc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80047ce:	f022 0204 	bic.w	r2, r2, #4
 80047d2:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80047d4:	2204      	movs	r2, #4
 80047d6:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80047d8:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 80047dc:	f043 0301 	orr.w	r3, r3, #1
 80047e0:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 80047e4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80047e6:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80047ea:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80047ee:	f7ff ffe2 	bl	80047b6 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80047f2:	07b2      	lsls	r2, r6, #30
 80047f4:	d516      	bpl.n	8004824 <HAL_LTDC_IRQHandler+0x6a>
 80047f6:	07ab      	lsls	r3, r5, #30
 80047f8:	d514      	bpl.n	8004824 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80047fa:	6823      	ldr	r3, [r4, #0]
 80047fc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80047fe:	f022 0202 	bic.w	r2, r2, #2
 8004802:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8004804:	2202      	movs	r2, #2
 8004806:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8004808:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800480c:	4313      	orrs	r3, r2
 800480e:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004812:	2304      	movs	r3, #4
 8004814:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004818:	2300      	movs	r3, #0
 800481a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800481e:	4620      	mov	r0, r4
 8004820:	f7ff ffc9 	bl	80047b6 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8004824:	07f0      	lsls	r0, r6, #31
 8004826:	d510      	bpl.n	800484a <HAL_LTDC_IRQHandler+0x90>
 8004828:	07e9      	lsls	r1, r5, #31
 800482a:	d50e      	bpl.n	800484a <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800482c:	6823      	ldr	r3, [r4, #0]
 800482e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004830:	f022 0201 	bic.w	r2, r2, #1
 8004834:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004836:	2201      	movs	r2, #1
 8004838:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800483a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800483c:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004840:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8004844:	4620      	mov	r0, r4
 8004846:	f7fc feef 	bl	8001628 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800484a:	0732      	lsls	r2, r6, #28
 800484c:	d511      	bpl.n	8004872 <HAL_LTDC_IRQHandler+0xb8>
 800484e:	072b      	lsls	r3, r5, #28
 8004850:	d50f      	bpl.n	8004872 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8004852:	6823      	ldr	r3, [r4, #0]
 8004854:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004856:	f022 0208 	bic.w	r2, r2, #8
 800485a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800485c:	2208      	movs	r2, #8
 800485e:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8004860:	2301      	movs	r3, #1
 8004862:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004866:	2300      	movs	r3, #0
 8004868:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800486c:	4620      	mov	r0, r4
 800486e:	f7ff ffa3 	bl	80047b8 <HAL_LTDC_ReloadEventCallback>
}
 8004872:	bd70      	pop	{r4, r5, r6, pc}

08004874 <HAL_LTDC_ConfigLayer>:
{
 8004874:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8004878:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 800487c:	2b01      	cmp	r3, #1
{
 800487e:	4606      	mov	r6, r0
 8004880:	460f      	mov	r7, r1
 8004882:	4694      	mov	ip, r2
 8004884:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8004888:	d01f      	beq.n	80048ca <HAL_LTDC_ConfigLayer+0x56>
 800488a:	f04f 0801 	mov.w	r8, #1
 800488e:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004892:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004896:	2434      	movs	r4, #52	@ 0x34
 8004898:	460d      	mov	r5, r1
 800489a:	fb04 6402 	mla	r4, r4, r2, r6
 800489e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80048a0:	3438      	adds	r4, #56	@ 0x38
 80048a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80048a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80048a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80048a8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80048aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80048ac:	682b      	ldr	r3, [r5, #0]
 80048ae:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80048b0:	4630      	mov	r0, r6
 80048b2:	4662      	mov	r2, ip
 80048b4:	4639      	mov	r1, r7
 80048b6:	f7ff feb5 	bl	8004624 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80048ba:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80048bc:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80048be:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80048c2:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 80048c6:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 80048ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080048d0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80048d0:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 80048d4:	2a01      	cmp	r2, #1
{
 80048d6:	4603      	mov	r3, r0
 80048d8:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80048dc:	d012      	beq.n	8004904 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80048de:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80048e0:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80048e4:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 80048e6:	f020 0001 	bic.w	r0, r0, #1
 80048ea:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80048ec:	4806      	ldr	r0, [pc, #24]	@ (8004908 <HAL_LTDC_ProgramLineEvent+0x38>)
 80048ee:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80048f0:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 80048f2:	f041 0101 	orr.w	r1, r1, #1
 80048f6:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 80048f8:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80048fa:	2201      	movs	r2, #1
 80048fc:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8004900:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8004904:	4770      	bx	lr
 8004906:	bf00      	nop
 8004908:	40016800 	.word	0x40016800

0800490c <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 800490c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 800490e:	4604      	mov	r4, r0
 8004910:	b310      	cbz	r0, 8004958 <HAL_PCD_Init+0x4c>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 8004912:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
  USBx = hpcd->Instance;
 8004916:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8004918:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800491c:	b91b      	cbnz	r3, 8004926 <HAL_PCD_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 800491e:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 8004922:	f7fc ff53 	bl	80017cc <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 8004926:	2303      	movs	r3, #3

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
 8004928:	f1b5 4fa0 	cmp.w	r5, #1342177280	@ 0x50000000
  hpcd->State = HAL_PCD_STATE_BUSY;
 800492c:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  {
    hpcd->Init.dma_enable = 0U;
 8004930:	bf04      	itt	eq
 8004932:	2300      	moveq	r3, #0
 8004934:	71a3      	strbeq	r3, [r4, #6]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 8004936:	6820      	ldr	r0, [r4, #0]
 8004938:	f002 f8ca 	bl	8006ad0 <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 800493c:	7c23      	ldrb	r3, [r4, #16]
 800493e:	f88d 3000 	strb.w	r3, [sp]
 8004942:	1d25      	adds	r5, r4, #4
 8004944:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8004948:	6820      	ldr	r0, [r4, #0]
 800494a:	f002 f806 	bl	800695a <USB_CoreInit>
 800494e:	4601      	mov	r1, r0
 8004950:	b130      	cbz	r0, 8004960 <HAL_PCD_Init+0x54>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 8004952:	2302      	movs	r3, #2
 8004954:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
 8004958:	2501      	movs	r5, #1
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
 800495a:	4628      	mov	r0, r5
 800495c:	b003      	add	sp, #12
 800495e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 8004960:	6820      	ldr	r0, [r4, #0]
 8004962:	f002 f8bb 	bl	8006adc <USB_SetCurrentMode>
 8004966:	2800      	cmp	r0, #0
 8004968:	d1f3      	bne.n	8004952 <HAL_PCD_Init+0x46>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800496a:	7926      	ldrb	r6, [r4, #4]
 800496c:	f104 0314 	add.w	r3, r4, #20
    hpcd->IN_ep[i].is_in = 1U;
 8004970:	2701      	movs	r7, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8004972:	4602      	mov	r2, r0
 8004974:	b2c1      	uxtb	r1, r0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004976:	428e      	cmp	r6, r1
 8004978:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 800497c:	d81b      	bhi.n	80049b6 <HAL_PCD_Init+0xaa>
 800497e:	2100      	movs	r1, #0
 8004980:	f504 7315 	add.w	r3, r4, #596	@ 0x254
    hpcd->OUT_ep[i].is_in = 0U;
 8004984:	460a      	mov	r2, r1
 8004986:	b2c8      	uxtb	r0, r1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004988:	4286      	cmp	r6, r0
 800498a:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 800498e:	d820      	bhi.n	80049d2 <HAL_PCD_Init+0xc6>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8004990:	7c23      	ldrb	r3, [r4, #16]
 8004992:	f88d 3000 	strb.w	r3, [sp]
 8004996:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 800499a:	6820      	ldr	r0, [r4, #0]
 800499c:	f002 f91a 	bl	8006bd4 <USB_DevInit>
 80049a0:	4605      	mov	r5, r0
 80049a2:	2800      	cmp	r0, #0
 80049a4:	d1d5      	bne.n	8004952 <HAL_PCD_Init+0x46>
  hpcd->State = HAL_PCD_STATE_READY;
 80049a6:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
 80049a8:	7460      	strb	r0, [r4, #17]
  (void)USB_DevDisconnect(hpcd->Instance);
 80049aa:	6820      	ldr	r0, [r4, #0]
  hpcd->State = HAL_PCD_STATE_READY;
 80049ac:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  (void)USB_DevDisconnect(hpcd->Instance);
 80049b0:	f002 fc54 	bl	800725c <USB_DevDisconnect>
  return HAL_OK;
 80049b4:	e7d1      	b.n	800495a <HAL_PCD_Init+0x4e>
    hpcd->IN_ep[i].tx_fifo_num = i;
 80049b6:	f823 0c0a 	strh.w	r0, [r3, #-10]
    hpcd->IN_ep[i].xfer_buff = 0U;
 80049ba:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->IN_ep[i].is_in = 1U;
 80049be:	f803 7c23 	strb.w	r7, [r3, #-35]
    hpcd->IN_ep[i].num = i;
 80049c2:	f803 1c24 	strb.w	r1, [r3, #-36]
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 80049c6:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->IN_ep[i].xfer_len = 0U;
 80049ca:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80049ce:	3001      	adds	r0, #1
 80049d0:	e7d0      	b.n	8004974 <HAL_PCD_Init+0x68>
    hpcd->OUT_ep[i].xfer_buff = 0U;
 80049d2:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->OUT_ep[i].is_in = 0U;
 80049d6:	f803 2c23 	strb.w	r2, [r3, #-35]
    hpcd->OUT_ep[i].num = i;
 80049da:	f803 0c24 	strb.w	r0, [r3, #-36]
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 80049de:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->OUT_ep[i].xfer_len = 0U;
 80049e2:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80049e6:	3101      	adds	r1, #1
 80049e8:	e7cd      	b.n	8004986 <HAL_PCD_Init+0x7a>

080049ea <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 80049ea:	b510      	push	{r4, lr}
 80049ec:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80049ee:	6800      	ldr	r0, [r0, #0]

  __HAL_LOCK(hpcd);
 80049f0:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 80049f4:	2b01      	cmp	r3, #1
 80049f6:	d015      	beq.n	8004a24 <HAL_PCD_Start+0x3a>
 80049f8:	2301      	movs	r3, #1
 80049fa:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 80049fe:	68c3      	ldr	r3, [r0, #12]
 8004a00:	065b      	lsls	r3, r3, #25
 8004a02:	d506      	bpl.n	8004a12 <HAL_PCD_Start+0x28>
 8004a04:	7b63      	ldrb	r3, [r4, #13]
 8004a06:	2b01      	cmp	r3, #1
      (hpcd->Init.battery_charging_enable == 1U))
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8004a08:	bf02      	ittt	eq
 8004a0a:	6b83      	ldreq	r3, [r0, #56]	@ 0x38
 8004a0c:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
 8004a10:	6383      	streq	r3, [r0, #56]	@ 0x38
  }

  __HAL_PCD_ENABLE(hpcd);
 8004a12:	f002 f857 	bl	8006ac4 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 8004a16:	6820      	ldr	r0, [r4, #0]
 8004a18:	f002 fc12 	bl	8007240 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8004a1c:	2000      	movs	r0, #0
 8004a1e:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004a22:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8004a24:	2002      	movs	r0, #2
 8004a26:	e7fc      	b.n	8004a22 <HAL_PCD_Start+0x38>

08004a28 <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
 8004a28:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 8004a2a:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
 8004a2e:	2a01      	cmp	r2, #1
{
 8004a30:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 8004a32:	d00a      	beq.n	8004a4a <HAL_PCD_SetAddress+0x22>
 8004a34:	2201      	movs	r2, #1
 8004a36:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
  hpcd->USB_Address = address;
 8004a3a:	7441      	strb	r1, [r0, #17]
  (void)USB_SetDevAddress(hpcd->Instance, address);
 8004a3c:	6800      	ldr	r0, [r0, #0]
 8004a3e:	f002 fbef 	bl	8007220 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 8004a42:	2000      	movs	r0, #0
 8004a44:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004a48:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8004a4a:	2002      	movs	r0, #2
 8004a4c:	e7fc      	b.n	8004a48 <HAL_PCD_SetAddress+0x20>

08004a4e <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
 8004a4e:	b570      	push	{r4, r5, r6, lr}
 8004a50:	f001 060f 	and.w	r6, r1, #15
 8004a54:	eb06 04c6 	add.w	r4, r6, r6, lsl #3
  HAL_StatusTypeDef ret = HAL_OK;
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8004a58:	f011 0f80 	tst.w	r1, #128	@ 0x80
{
 8004a5c:	4605      	mov	r5, r0
 8004a5e:	ea4f 0484 	mov.w	r4, r4, lsl #2
 8004a62:	f04f 0024 	mov.w	r0, #36	@ 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 8004a66:	d020      	beq.n	8004aaa <HAL_PCD_EP_Open+0x5c>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004a68:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004a6c:	f104 0114 	add.w	r1, r4, #20
    ep->is_in = 1U;
 8004a70:	2401      	movs	r4, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004a72:	4429      	add	r1, r5
    ep->is_in = 1U;
 8004a74:	7544      	strb	r4, [r0, #21]
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->num = ep_addr & EP_ADDR_MSK;
  ep->maxpacket = (uint32_t)ep_mps & 0x7FFU;
 8004a76:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8004a7a:	608a      	str	r2, [r1, #8]
  ep->type = ep_type;

  if (ep->is_in != 0U)
 8004a7c:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004a7e:	700e      	strb	r6, [r1, #0]
  ep->type = ep_type;
 8004a80:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
 8004a82:	b102      	cbz	r2, 8004a86 <HAL_PCD_EP_Open+0x38>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
 8004a84:	834e      	strh	r6, [r1, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
 8004a86:	2b02      	cmp	r3, #2
  {
    ep->data_pid_start = 0U;
 8004a88:	bf04      	itt	eq
 8004a8a:	2300      	moveq	r3, #0
 8004a8c:	714b      	strbeq	r3, [r1, #5]
  }

  __HAL_LOCK(hpcd);
 8004a8e:	f895 3494 	ldrb.w	r3, [r5, #1172]	@ 0x494
 8004a92:	2b01      	cmp	r3, #1
 8004a94:	d012      	beq.n	8004abc <HAL_PCD_EP_Open+0x6e>
 8004a96:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8004a98:	6828      	ldr	r0, [r5, #0]
  __HAL_LOCK(hpcd);
 8004a9a:	f885 3494 	strb.w	r3, [r5, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8004a9e:	f002 f95e 	bl	8006d5e <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8004aa2:	2000      	movs	r0, #0
 8004aa4:	f885 0494 	strb.w	r0, [r5, #1172]	@ 0x494

  return ret;
}
 8004aa8:	bd70      	pop	{r4, r5, r6, pc}
    ep->is_in = 0U;
 8004aaa:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004aae:	f504 7115 	add.w	r1, r4, #596	@ 0x254
    ep->is_in = 0U;
 8004ab2:	2400      	movs	r4, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004ab4:	4429      	add	r1, r5
    ep->is_in = 0U;
 8004ab6:	f880 4255 	strb.w	r4, [r0, #597]	@ 0x255
 8004aba:	e7dc      	b.n	8004a76 <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
 8004abc:	2002      	movs	r0, #2
 8004abe:	e7f3      	b.n	8004aa8 <HAL_PCD_EP_Open+0x5a>

08004ac0 <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004ac0:	b510      	push	{r4, lr}
 8004ac2:	4604      	mov	r4, r0
 8004ac4:	f001 000f 	and.w	r0, r1, #15
 8004ac8:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8004acc:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004ad0:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004ad4:	f04f 0224 	mov.w	r2, #36	@ 0x24
 8004ad8:	d015      	beq.n	8004b06 <HAL_PCD_EP_Close+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004ada:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004ade:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8004ae2:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004ae4:	4421      	add	r1, r4
    ep->is_in = 1U;
 8004ae6:	7553      	strb	r3, [r2, #21]
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }
  ep->num = ep_addr & EP_ADDR_MSK;
 8004ae8:	7008      	strb	r0, [r1, #0]

  __HAL_LOCK(hpcd);
 8004aea:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004aee:	2b01      	cmp	r3, #1
 8004af0:	d012      	beq.n	8004b18 <HAL_PCD_EP_Close+0x58>
 8004af2:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8004af4:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004af6:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8004afa:	f002 f96f 	bl	8006ddc <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8004afe:	2000      	movs	r0, #0
 8004b00:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494
  return HAL_OK;
}
 8004b04:	bd10      	pop	{r4, pc}
    ep->is_in = 0U;
 8004b06:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004b0a:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004b0e:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004b10:	4421      	add	r1, r4
    ep->is_in = 0U;
 8004b12:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8004b16:	e7e7      	b.n	8004ae8 <HAL_PCD_EP_Close+0x28>
  __HAL_LOCK(hpcd);
 8004b18:	2002      	movs	r0, #2
 8004b1a:	e7f3      	b.n	8004b04 <HAL_PCD_EP_Close+0x44>

08004b1c <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8004b1c:	b570      	push	{r4, r5, r6, lr}
 8004b1e:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004b22:	2424      	movs	r4, #36	@ 0x24
 8004b24:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8004b28:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8004b2c:	e9c4 2398 	strd	r2, r3, [r4, #608]	@ 0x260
  ep->xfer_count = 0U;
 8004b30:	2300      	movs	r3, #0
 8004b32:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
  ep->is_in = 0U;
 8004b36:	f884 3255 	strb.w	r3, [r4, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
 8004b3a:	f884 5254 	strb.w	r5, [r4, #596]	@ 0x254
{
 8004b3e:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8004b40:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004b42:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8004b44:	2a01      	cmp	r2, #1
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004b46:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->dma_addr = (uint32_t)pBuf;
 8004b4a:	bf08      	it	eq
 8004b4c:	f8c4 6270 	streq.w	r6, [r4, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004b50:	f002 f9f0 	bl	8006f34 <USB_EPStartXfer>

  return HAL_OK;
}
 8004b54:	2000      	movs	r0, #0
 8004b56:	bd70      	pop	{r4, r5, r6, pc}

08004b58 <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8004b58:	b570      	push	{r4, r5, r6, lr}
 8004b5a:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004b5e:	2424      	movs	r4, #36	@ 0x24
 8004b60:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8004b64:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8004b68:	e9c4 2308 	strd	r2, r3, [r4, #32]
  ep->xfer_count = 0U;
 8004b6c:	2300      	movs	r3, #0
 8004b6e:	62a3      	str	r3, [r4, #40]	@ 0x28
  ep->is_in = 1U;
 8004b70:	2301      	movs	r3, #1
 8004b72:	7563      	strb	r3, [r4, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004b74:	7525      	strb	r5, [r4, #20]
{
 8004b76:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8004b78:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004b7a:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8004b7c:	429a      	cmp	r2, r3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004b7e:	f101 0114 	add.w	r1, r1, #20
    ep->dma_addr = (uint32_t)pBuf;
 8004b82:	bf08      	it	eq
 8004b84:	6326      	streq	r6, [r4, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004b86:	f002 f9d5 	bl	8006f34 <USB_EPStartXfer>

  return HAL_OK;
}
 8004b8a:	2000      	movs	r0, #0
 8004b8c:	bd70      	pop	{r4, r5, r6, pc}

08004b8e <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004b8e:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8004b90:	7903      	ldrb	r3, [r0, #4]
 8004b92:	f001 050f 	and.w	r5, r1, #15
 8004b96:	42ab      	cmp	r3, r5
{
 8004b98:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8004b9a:	d32b      	bcc.n	8004bf4 <HAL_PCD_EP_SetStall+0x66>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8004b9c:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004ba0:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8004ba4:	d01d      	beq.n	8004be2 <HAL_PCD_EP_SetStall+0x54>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004ba6:	fb00 4105 	mla	r1, r0, r5, r4
    ep->is_in = 1U;
 8004baa:	fb00 4005 	mla	r0, r0, r5, r4
 8004bae:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004bb0:	3114      	adds	r1, #20
    ep->is_in = 1U;
 8004bb2:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr];
    ep->is_in = 0U;
  }

  ep->is_stall = 1U;
 8004bb4:	2301      	movs	r3, #1
 8004bb6:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004bb8:	700d      	strb	r5, [r1, #0]

  __HAL_LOCK(hpcd);
 8004bba:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
 8004bbe:	429a      	cmp	r2, r3
 8004bc0:	d01a      	beq.n	8004bf8 <HAL_PCD_EP_SetStall+0x6a>

  (void)USB_EPSetStall(hpcd->Instance, ep);
 8004bc2:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004bc4:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
 8004bc8:	f002 fad6 	bl	8007178 <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8004bcc:	b92d      	cbnz	r5, 8004bda <HAL_PCD_EP_SetStall+0x4c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8004bce:	79a1      	ldrb	r1, [r4, #6]
 8004bd0:	6820      	ldr	r0, [r4, #0]
 8004bd2:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004bd6:	f002 fb8f 	bl	80072f8 <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
 8004bda:	2000      	movs	r0, #0
 8004bdc:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004be0:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr];
 8004be2:	fb00 4301 	mla	r3, r0, r1, r4
    ep->is_in = 0U;
 8004be6:	461a      	mov	r2, r3
    ep = &hpcd->OUT_ep[ep_addr];
 8004be8:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004bec:	2300      	movs	r3, #0
 8004bee:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8004bf2:	e7df      	b.n	8004bb4 <HAL_PCD_EP_SetStall+0x26>
    return HAL_ERROR;
 8004bf4:	2001      	movs	r0, #1
 8004bf6:	e7f3      	b.n	8004be0 <HAL_PCD_EP_SetStall+0x52>
  __HAL_LOCK(hpcd);
 8004bf8:	2002      	movs	r0, #2
 8004bfa:	e7f1      	b.n	8004be0 <HAL_PCD_EP_SetStall+0x52>

08004bfc <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004bfc:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8004bfe:	7903      	ldrb	r3, [r0, #4]
 8004c00:	f001 020f 	and.w	r2, r1, #15
 8004c04:	4293      	cmp	r3, r2
{
 8004c06:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8004c08:	d329      	bcc.n	8004c5e <HAL_PCD_EP_ClrStall+0x62>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8004c0a:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
 8004c0e:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004c12:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004c16:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8004c1a:	d017      	beq.n	8004c4c <HAL_PCD_EP_ClrStall+0x50>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004c1c:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004c20:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8004c24:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004c26:	4421      	add	r1, r4
    ep->is_in = 1U;
 8004c28:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->is_stall = 0U;
 8004c2a:	2500      	movs	r5, #0
 8004c2c:	708d      	strb	r5, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004c2e:	700a      	strb	r2, [r1, #0]

  __HAL_LOCK(hpcd);
 8004c30:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004c34:	2b01      	cmp	r3, #1
 8004c36:	d014      	beq.n	8004c62 <HAL_PCD_EP_ClrStall+0x66>
 8004c38:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8004c3a:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004c3c:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8004c40:	f002 fac5 	bl	80071ce <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 8004c44:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494

  return HAL_OK;
 8004c48:	4628      	mov	r0, r5
}
 8004c4a:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 0U;
 8004c4c:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004c50:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004c54:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004c56:	4421      	add	r1, r4
    ep->is_in = 0U;
 8004c58:	f880 3255 	strb.w	r3, [r0, #597]	@ 0x255
 8004c5c:	e7e5      	b.n	8004c2a <HAL_PCD_EP_ClrStall+0x2e>
    return HAL_ERROR;
 8004c5e:	2001      	movs	r0, #1
 8004c60:	e7f3      	b.n	8004c4a <HAL_PCD_EP_ClrStall+0x4e>
  __HAL_LOCK(hpcd);
 8004c62:	2002      	movs	r0, #2
 8004c64:	e7f1      	b.n	8004c4a <HAL_PCD_EP_ClrStall+0x4e>

08004c66 <HAL_PCD_EP_Abort>:
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
 8004c66:	f001 030f 	and.w	r3, r1, #15
 8004c6a:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 8004c6e:	060a      	lsls	r2, r1, #24
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004c70:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004c74:	bf4c      	ite	mi
 8004c76:	f103 0114 	addmi.w	r1, r3, #20
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004c7a:	f503 7115 	addpl.w	r1, r3, #596	@ 0x254
 8004c7e:	4401      	add	r1, r0
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 8004c80:	6800      	ldr	r0, [r0, #0]
 8004c82:	f002 b901 	b.w	8006e88 <USB_EPStopXfer>
	...

08004c88 <HAL_PCD_IRQHandler>:
{
 8004c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004c8c:	6806      	ldr	r6, [r0, #0]
{
 8004c8e:	b089      	sub	sp, #36	@ 0x24
 8004c90:	4604      	mov	r4, r0
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 8004c92:	4630      	mov	r0, r6
 8004c94:	f002 fb1e 	bl	80072d4 <USB_GetMode>
 8004c98:	9003      	str	r0, [sp, #12]
 8004c9a:	2800      	cmp	r0, #0
 8004c9c:	f040 8156 	bne.w	8004f4c <HAL_PCD_IRQHandler+0x2c4>
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 8004ca0:	6820      	ldr	r0, [r4, #0]
 8004ca2:	f002 fae9 	bl	8007278 <USB_ReadInterrupts>
 8004ca6:	2800      	cmp	r0, #0
 8004ca8:	f000 8150 	beq.w	8004f4c <HAL_PCD_IRQHandler+0x2c4>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004cac:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8004cb0:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004cb2:	f3c3 230d 	ubfx	r3, r3, #8, #14
 8004cb6:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8004cba:	f002 fadd 	bl	8007278 <USB_ReadInterrupts>
 8004cbe:	0787      	lsls	r7, r0, #30
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8004cc0:	bf48      	it	mi
 8004cc2:	6822      	ldrmi	r2, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004cc4:	6820      	ldr	r0, [r4, #0]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8004cc6:	bf42      	ittt	mi
 8004cc8:	6953      	ldrmi	r3, [r2, #20]
 8004cca:	f003 0302 	andmi.w	r3, r3, #2
 8004cce:	6153      	strmi	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004cd0:	f002 fad2 	bl	8007278 <USB_ReadInterrupts>
 8004cd4:	06c0      	lsls	r0, r0, #27
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004cd6:	f506 6500 	add.w	r5, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004cda:	d52d      	bpl.n	8004d38 <HAL_PCD_IRQHandler+0xb0>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8004cdc:	6822      	ldr	r2, [r4, #0]
 8004cde:	6993      	ldr	r3, [r2, #24]
 8004ce0:	f023 0310 	bic.w	r3, r3, #16
 8004ce4:	6193      	str	r3, [r2, #24]
      RegVal = USBx->GRXSTSP;
 8004ce6:	f8d6 8020 	ldr.w	r8, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8004cea:	f408 13f0 	and.w	r3, r8, #1966080	@ 0x1e0000
 8004cee:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 8004cf2:	f008 070f 	and.w	r7, r8, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8004cf6:	f040 812c 	bne.w	8004f52 <HAL_PCD_IRQHandler+0x2ca>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 8004cfa:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8004cfe:	ea18 0f03 	tst.w	r8, r3
 8004d02:	d014      	beq.n	8004d2e <HAL_PCD_IRQHandler+0xa6>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8004d04:	2324      	movs	r3, #36	@ 0x24
 8004d06:	fb03 4707 	mla	r7, r3, r7, r4
 8004d0a:	f3c8 190a 	ubfx	r9, r8, #4, #11
 8004d0e:	f8d7 1260 	ldr.w	r1, [r7, #608]	@ 0x260
 8004d12:	464a      	mov	r2, r9
 8004d14:	4630      	mov	r0, r6
 8004d16:	f002 fa0f 	bl	8007138 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004d1a:	f8d7 3260 	ldr.w	r3, [r7, #608]	@ 0x260
 8004d1e:	444b      	add	r3, r9
 8004d20:	f8c7 3260 	str.w	r3, [r7, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004d24:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 8004d28:	444b      	add	r3, r9
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004d2a:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8004d2e:	6822      	ldr	r2, [r4, #0]
 8004d30:	6993      	ldr	r3, [r2, #24]
 8004d32:	f043 0310 	orr.w	r3, r3, #16
 8004d36:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 8004d38:	6820      	ldr	r0, [r4, #0]
 8004d3a:	f002 fa9d 	bl	8007278 <USB_ReadInterrupts>
 8004d3e:	0301      	lsls	r1, r0, #12
 8004d40:	f100 811a 	bmi.w	8004f78 <HAL_PCD_IRQHandler+0x2f0>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 8004d44:	6820      	ldr	r0, [r4, #0]
 8004d46:	f002 fa97 	bl	8007278 <USB_ReadInterrupts>
 8004d4a:	0342      	lsls	r2, r0, #13
 8004d4c:	d50d      	bpl.n	8004d6a <HAL_PCD_IRQHandler+0xe2>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 8004d4e:	6820      	ldr	r0, [r4, #0]
 8004d50:	f002 fa9e 	bl	8007290 <USB_ReadDevAllInEpInterrupt>
 8004d54:	4627      	mov	r7, r4
 8004d56:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 8004d58:	f506 6b10 	add.w	fp, r6, #2304	@ 0x900
      epnum = 0U;
 8004d5c:	f04f 0a00 	mov.w	sl, #0
      while (ep_intr != 0U)
 8004d60:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004d62:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8004d64:	2b00      	cmp	r3, #0
 8004d66:	f040 81d1 	bne.w	800510c <HAL_PCD_IRQHandler+0x484>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 8004d6a:	6820      	ldr	r0, [r4, #0]
 8004d6c:	f002 fa84 	bl	8007278 <USB_ReadInterrupts>
 8004d70:	2800      	cmp	r0, #0
 8004d72:	da13      	bge.n	8004d9c <HAL_PCD_IRQHandler+0x114>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8004d74:	686b      	ldr	r3, [r5, #4]
 8004d76:	f023 0301 	bic.w	r3, r3, #1
 8004d7a:	606b      	str	r3, [r5, #4]
      if (hpcd->LPM_State == LPM_L1)
 8004d7c:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
 8004d80:	2b01      	cmp	r3, #1
 8004d82:	f040 8269 	bne.w	8005258 <HAL_PCD_IRQHandler+0x5d0>
        hpcd->LPM_State = LPM_L0;
 8004d86:	2100      	movs	r1, #0
 8004d88:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8004d8c:	4620      	mov	r0, r4
 8004d8e:	f000 fae6 	bl	800535e <HAL_PCDEx_LPM_Callback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 8004d92:	6822      	ldr	r2, [r4, #0]
 8004d94:	6953      	ldr	r3, [r2, #20]
 8004d96:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8004d9a:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8004d9c:	6820      	ldr	r0, [r4, #0]
 8004d9e:	f002 fa6b 	bl	8007278 <USB_ReadInterrupts>
 8004da2:	0507      	lsls	r7, r0, #20
 8004da4:	d50a      	bpl.n	8004dbc <HAL_PCD_IRQHandler+0x134>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 8004da6:	68ab      	ldr	r3, [r5, #8]
 8004da8:	07d8      	lsls	r0, r3, #31
 8004daa:	d502      	bpl.n	8004db2 <HAL_PCD_IRQHandler+0x12a>
        HAL_PCD_SuspendCallback(hpcd);
 8004dac:	4620      	mov	r0, r4
 8004dae:	f7fc fd83 	bl	80018b8 <HAL_PCD_SuspendCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 8004db2:	6822      	ldr	r2, [r4, #0]
 8004db4:	6953      	ldr	r3, [r2, #20]
 8004db6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004dba:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 8004dbc:	6820      	ldr	r0, [r4, #0]
 8004dbe:	f002 fa5b 	bl	8007278 <USB_ReadInterrupts>
 8004dc2:	04c1      	lsls	r1, r0, #19
 8004dc4:	d533      	bpl.n	8004e2e <HAL_PCD_IRQHandler+0x1a6>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8004dc6:	686b      	ldr	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8004dc8:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8004dca:	f023 0301 	bic.w	r3, r3, #1
 8004dce:	606b      	str	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8004dd0:	2110      	movs	r1, #16
 8004dd2:	f001 feb3 	bl	8006b3c <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004dd6:	7920      	ldrb	r0, [r4, #4]
 8004dd8:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8004ddc:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004de0:	9a03      	ldr	r2, [sp, #12]
 8004de2:	4290      	cmp	r0, r2
 8004de4:	f200 823c 	bhi.w	8005260 <HAL_PCD_IRQHandler+0x5d8>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 8004de8:	69eb      	ldr	r3, [r5, #28]
 8004dea:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 8004dee:	61eb      	str	r3, [r5, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 8004df0:	7be3      	ldrb	r3, [r4, #15]
 8004df2:	2b00      	cmp	r3, #0
 8004df4:	f000 8250 	beq.w	8005298 <HAL_PCD_IRQHandler+0x610>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 8004df8:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 8004dfc:	f043 030b 	orr.w	r3, r3, #11
 8004e00:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 8004e04:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004e06:	f043 030b 	orr.w	r3, r3, #11
 8004e0a:	646b      	str	r3, [r5, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8004e0c:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8004e10:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8004e12:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8004e16:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8004e1a:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004e1e:	79a1      	ldrb	r1, [r4, #6]
 8004e20:	f002 fa6a 	bl	80072f8 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 8004e24:	6822      	ldr	r2, [r4, #0]
 8004e26:	6953      	ldr	r3, [r2, #20]
 8004e28:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004e2c:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 8004e2e:	6820      	ldr	r0, [r4, #0]
 8004e30:	f002 fa22 	bl	8007278 <USB_ReadInterrupts>
 8004e34:	0482      	lsls	r2, r0, #18
 8004e36:	d516      	bpl.n	8004e66 <HAL_PCD_IRQHandler+0x1de>
      (void)USB_ActivateSetup(hpcd->Instance);
 8004e38:	6820      	ldr	r0, [r4, #0]
 8004e3a:	f002 fa4f 	bl	80072dc <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 8004e3e:	6820      	ldr	r0, [r4, #0]
 8004e40:	f001 ff82 	bl	8006d48 <USB_GetDevSpeed>
 8004e44:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 8004e46:	6827      	ldr	r7, [r4, #0]
 8004e48:	f000 fd00 	bl	800584c <HAL_RCC_GetHCLKFreq>
 8004e4c:	79e2      	ldrb	r2, [r4, #7]
 8004e4e:	4601      	mov	r1, r0
 8004e50:	4638      	mov	r0, r7
 8004e52:	f001 fdc7 	bl	80069e4 <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 8004e56:	4620      	mov	r0, r4
 8004e58:	f7fc fd1b 	bl	8001892 <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 8004e5c:	6822      	ldr	r2, [r4, #0]
 8004e5e:	6953      	ldr	r3, [r2, #20]
 8004e60:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004e64:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 8004e66:	6820      	ldr	r0, [r4, #0]
 8004e68:	f002 fa06 	bl	8007278 <USB_ReadInterrupts>
 8004e6c:	0703      	lsls	r3, r0, #28
 8004e6e:	d507      	bpl.n	8004e80 <HAL_PCD_IRQHandler+0x1f8>
      HAL_PCD_SOFCallback(hpcd);
 8004e70:	4620      	mov	r0, r4
 8004e72:	f7fc fd0a 	bl	800188a <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 8004e76:	6822      	ldr	r2, [r4, #0]
 8004e78:	6953      	ldr	r3, [r2, #20]
 8004e7a:	f003 0308 	and.w	r3, r3, #8
 8004e7e:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 8004e80:	6820      	ldr	r0, [r4, #0]
 8004e82:	f002 f9f9 	bl	8007278 <USB_ReadInterrupts>
 8004e86:	0607      	lsls	r7, r0, #24
 8004e88:	f100 8211 	bmi.w	80052ae <HAL_PCD_IRQHandler+0x626>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8004e8c:	6820      	ldr	r0, [r4, #0]
 8004e8e:	f002 f9f3 	bl	8007278 <USB_ReadInterrupts>
 8004e92:	02c0      	lsls	r0, r0, #11
 8004e94:	d50c      	bpl.n	8004eb0 <HAL_PCD_IRQHandler+0x228>
 8004e96:	46a0      	mov	r8, r4
 8004e98:	f506 6912 	add.w	r9, r6, #2336	@ 0x920
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004e9c:	2701      	movs	r7, #1
 8004e9e:	7923      	ldrb	r3, [r4, #4]
 8004ea0:	42bb      	cmp	r3, r7
 8004ea2:	f200 821d 	bhi.w	80052e0 <HAL_PCD_IRQHandler+0x658>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 8004ea6:	6822      	ldr	r2, [r4, #0]
 8004ea8:	6953      	ldr	r3, [r2, #20]
 8004eaa:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004eae:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 8004eb0:	6820      	ldr	r0, [r4, #0]
 8004eb2:	f002 f9e1 	bl	8007278 <USB_ReadInterrupts>
 8004eb6:	0281      	lsls	r1, r0, #10
 8004eb8:	d52b      	bpl.n	8004f12 <HAL_PCD_IRQHandler+0x28a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004eba:	f894 e004 	ldrb.w	lr, [r4, #4]
 8004ebe:	4623      	mov	r3, r4
 8004ec0:	f506 6132 	add.w	r1, r6, #2848	@ 0xb20
 8004ec4:	f04f 0c01 	mov.w	ip, #1
 8004ec8:	45e6      	cmp	lr, ip
 8004eca:	d91d      	bls.n	8004f08 <HAL_PCD_IRQHandler+0x280>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8004ecc:	f893 727c 	ldrb.w	r7, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 8004ed0:	6808      	ldr	r0, [r1, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8004ed2:	2f01      	cmp	r7, #1
 8004ed4:	f040 821a 	bne.w	800530c <HAL_PCD_IRQHandler+0x684>
 8004ed8:	2800      	cmp	r0, #0
 8004eda:	f280 8217 	bge.w	800530c <HAL_PCD_IRQHandler+0x684>
            (((RegVal & (0x1U << 16)) >> 16U) == (hpcd->FrameNumber & 0x1U)))
 8004ede:	f8d4 24d4 	ldr.w	r2, [r4, #1236]	@ 0x4d4
 8004ee2:	ea82 4010 	eor.w	r0, r2, r0, lsr #16
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 8004ee6:	07c2      	lsls	r2, r0, #31
 8004ee8:	f100 8210 	bmi.w	800530c <HAL_PCD_IRQHandler+0x684>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 8004eec:	f883 727b 	strb.w	r7, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 8004ef0:	69b0      	ldr	r0, [r6, #24]
 8004ef2:	f040 0080 	orr.w	r0, r0, #128	@ 0x80
 8004ef6:	61b0      	str	r0, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 8004ef8:	6970      	ldr	r0, [r6, #20]
 8004efa:	0600      	lsls	r0, r0, #24
 8004efc:	f100 8206 	bmi.w	800530c <HAL_PCD_IRQHandler+0x684>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 8004f00:	686b      	ldr	r3, [r5, #4]
 8004f02:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004f06:	606b      	str	r3, [r5, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 8004f08:	6822      	ldr	r2, [r4, #0]
 8004f0a:	6953      	ldr	r3, [r2, #20]
 8004f0c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004f10:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 8004f12:	6820      	ldr	r0, [r4, #0]
 8004f14:	f002 f9b0 	bl	8007278 <USB_ReadInterrupts>
 8004f18:	0041      	lsls	r1, r0, #1
 8004f1a:	d507      	bpl.n	8004f2c <HAL_PCD_IRQHandler+0x2a4>
      HAL_PCD_ConnectCallback(hpcd);
 8004f1c:	4620      	mov	r0, r4
 8004f1e:	f7fc fcef 	bl	8001900 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 8004f22:	6822      	ldr	r2, [r4, #0]
 8004f24:	6953      	ldr	r3, [r2, #20]
 8004f26:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8004f2a:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 8004f2c:	6820      	ldr	r0, [r4, #0]
 8004f2e:	f002 f9a3 	bl	8007278 <USB_ReadInterrupts>
 8004f32:	0742      	lsls	r2, r0, #29
 8004f34:	d50a      	bpl.n	8004f4c <HAL_PCD_IRQHandler+0x2c4>
      RegVal = hpcd->Instance->GOTGINT;
 8004f36:	6823      	ldr	r3, [r4, #0]
 8004f38:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 8004f3a:	076b      	lsls	r3, r5, #29
 8004f3c:	d502      	bpl.n	8004f44 <HAL_PCD_IRQHandler+0x2bc>
        HAL_PCD_DisconnectCallback(hpcd);
 8004f3e:	4620      	mov	r0, r4
 8004f40:	f7fc fce2 	bl	8001908 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
 8004f44:	6822      	ldr	r2, [r4, #0]
 8004f46:	6853      	ldr	r3, [r2, #4]
 8004f48:	432b      	orrs	r3, r5
 8004f4a:	6053      	str	r3, [r2, #4]
}
 8004f4c:	b009      	add	sp, #36	@ 0x24
 8004f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 8004f52:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8004f56:	f47f aeea 	bne.w	8004d2e <HAL_PCD_IRQHandler+0xa6>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8004f5a:	2208      	movs	r2, #8
 8004f5c:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
 8004f60:	4630      	mov	r0, r6
 8004f62:	f002 f8e9 	bl	8007138 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004f66:	2324      	movs	r3, #36	@ 0x24
 8004f68:	fb03 4707 	mla	r7, r3, r7, r4
 8004f6c:	f3c8 180a 	ubfx	r8, r8, #4, #11
 8004f70:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 8004f74:	4443      	add	r3, r8
 8004f76:	e6d8      	b.n	8004d2a <HAL_PCD_IRQHandler+0xa2>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 8004f78:	6820      	ldr	r0, [r4, #0]
 8004f7a:	f002 f981 	bl	8007280 <USB_ReadDevAllOutEpInterrupt>
 8004f7e:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
 8004f82:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 8004f84:	46a2      	mov	sl, r4
      epnum = 0U;
 8004f86:	2700      	movs	r7, #0
      while (ep_intr != 0U)
 8004f88:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004f8a:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8004f8c:	2b00      	cmp	r3, #0
 8004f8e:	f43f aed9 	beq.w	8004d44 <HAL_PCD_IRQHandler+0xbc>
        if ((ep_intr & 0x1U) != 0U)
 8004f92:	9b04      	ldr	r3, [sp, #16]
 8004f94:	07db      	lsls	r3, r3, #31
 8004f96:	d578      	bpl.n	800508a <HAL_PCD_IRQHandler+0x402>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004f98:	fa5f fb87 	uxtb.w	fp, r7
 8004f9c:	4659      	mov	r1, fp
 8004f9e:	f002 f97f 	bl	80072a0 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8004fa2:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004fa6:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8004fa8:	d01f      	beq.n	8004fea <HAL_PCD_IRQHandler+0x362>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004faa:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 8004fac:	2301      	movs	r3, #1
 8004fae:	f8c8 3008 	str.w	r3, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if (hpcd->Init.dma_enable == 1U)
 8004fb2:	f894 c006 	ldrb.w	ip, [r4, #6]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8004fb6:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8004fb8:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
 8004fbc:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if (hpcd->Init.dma_enable == 1U)
 8004fc0:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8004fc4:	689a      	ldr	r2, [r3, #8]
  if (hpcd->Init.dma_enable == 1U)
 8004fc6:	f040 808b 	bne.w	80050e0 <HAL_PCD_IRQHandler+0x458>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 8004fca:	f012 0f08 	tst.w	r2, #8
 8004fce:	d007      	beq.n	8004fe0 <HAL_PCD_IRQHandler+0x358>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8004fd0:	48af      	ldr	r0, [pc, #700]	@ (8005290 <HAL_PCD_IRQHandler+0x608>)
 8004fd2:	4281      	cmp	r1, r0
 8004fd4:	d909      	bls.n	8004fea <HAL_PCD_IRQHandler+0x362>
 8004fd6:	0412      	lsls	r2, r2, #16
 8004fd8:	d507      	bpl.n	8004fea <HAL_PCD_IRQHandler+0x362>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8004fda:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8004fde:	e003      	b.n	8004fe8 <HAL_PCD_IRQHandler+0x360>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 8004fe0:	f012 0f20 	tst.w	r2, #32
 8004fe4:	d05a      	beq.n	800509c <HAL_PCD_IRQHandler+0x414>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8004fe6:	2220      	movs	r2, #32
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8004fe8:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 8004fea:	f019 0f08 	tst.w	r9, #8
 8004fee:	d021      	beq.n	8005034 <HAL_PCD_IRQHandler+0x3ac>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 8004ff0:	2308      	movs	r3, #8
 8004ff2:	f8c8 3008 	str.w	r3, [r8, #8]
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004ff6:	6823      	ldr	r3, [r4, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8004ff8:	49a5      	ldr	r1, [pc, #660]	@ (8005290 <HAL_PCD_IRQHandler+0x608>)
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8004ffa:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8004ffc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8005000:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005004:	428a      	cmp	r2, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005006:	6898      	ldr	r0, [r3, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005008:	d904      	bls.n	8005014 <HAL_PCD_IRQHandler+0x38c>
 800500a:	0401      	lsls	r1, r0, #16
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 800500c:	bf44      	itt	mi
 800500e:	f44f 4000 	movmi.w	r0, #32768	@ 0x8000
 8005012:	6098      	strmi	r0, [r3, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 8005014:	4620      	mov	r0, r4
 8005016:	9205      	str	r2, [sp, #20]
 8005018:	f7fc fc20 	bl	800185c <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 800501c:	9a05      	ldr	r2, [sp, #20]
 800501e:	499c      	ldr	r1, [pc, #624]	@ (8005290 <HAL_PCD_IRQHandler+0x608>)
 8005020:	428a      	cmp	r2, r1
 8005022:	d907      	bls.n	8005034 <HAL_PCD_IRQHandler+0x3ac>
 8005024:	79a1      	ldrb	r1, [r4, #6]
 8005026:	2901      	cmp	r1, #1
 8005028:	d104      	bne.n	8005034 <HAL_PCD_IRQHandler+0x3ac>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 800502a:	6820      	ldr	r0, [r4, #0]
 800502c:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005030:	f002 f962 	bl	80072f8 <USB_EP0_OutStart>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 8005034:	f019 0f10 	tst.w	r9, #16
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 8005038:	bf1c      	itt	ne
 800503a:	2310      	movne	r3, #16
 800503c:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 8005040:	f019 0f02 	tst.w	r9, #2
 8005044:	d014      	beq.n	8005070 <HAL_PCD_IRQHandler+0x3e8>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 8005046:	6973      	ldr	r3, [r6, #20]
 8005048:	061a      	lsls	r2, r3, #24
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 800504a:	bf42      	ittt	mi
 800504c:	686b      	ldrmi	r3, [r5, #4]
 800504e:	f443 6380 	orrmi.w	r3, r3, #1024	@ 0x400
 8005052:	606b      	strmi	r3, [r5, #4]
            if (ep->is_iso_incomplete == 1U)
 8005054:	f89a 3257 	ldrb.w	r3, [sl, #599]	@ 0x257
 8005058:	2b01      	cmp	r3, #1
 800505a:	d106      	bne.n	800506a <HAL_PCD_IRQHandler+0x3e2>
              ep->is_iso_incomplete = 0U;
 800505c:	2300      	movs	r3, #0
 800505e:	f88a 3257 	strb.w	r3, [sl, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 8005062:	4659      	mov	r1, fp
 8005064:	4620      	mov	r0, r4
 8005066:	f7fc fc43 	bl	80018f0 <HAL_PCD_ISOOUTIncompleteCallback>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 800506a:	2302      	movs	r3, #2
 800506c:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8005070:	f019 0f20 	tst.w	r9, #32
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8005074:	bf1c      	itt	ne
 8005076:	2320      	movne	r3, #32
 8005078:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 800507c:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 8005080:	bf1c      	itt	ne
 8005082:	f44f 5300 	movne.w	r3, #8192	@ 0x2000
 8005086:	f8c8 3008 	strne.w	r3, [r8, #8]
        ep_intr >>= 1U;
 800508a:	9b04      	ldr	r3, [sp, #16]
 800508c:	085b      	lsrs	r3, r3, #1
        epnum++;
 800508e:	3701      	adds	r7, #1
        ep_intr >>= 1U;
 8005090:	9304      	str	r3, [sp, #16]
 8005092:	f108 0820 	add.w	r8, r8, #32
 8005096:	f10a 0a24 	add.w	sl, sl, #36	@ 0x24
 800509a:	e775      	b.n	8004f88 <HAL_PCD_IRQHandler+0x300>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 800509c:	f8df c1f0 	ldr.w	ip, [pc, #496]	@ 8005290 <HAL_PCD_IRQHandler+0x608>
 80050a0:	4561      	cmp	r1, ip
 80050a2:	d901      	bls.n	80050a8 <HAL_PCD_IRQHandler+0x420>
 80050a4:	0412      	lsls	r2, r2, #16
 80050a6:	d498      	bmi.n	8004fda <HAL_PCD_IRQHandler+0x352>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 80050a8:	691a      	ldr	r2, [r3, #16]
 80050aa:	f8da 3274 	ldr.w	r3, [sl, #628]	@ 0x274
 80050ae:	f3c2 0212 	ubfx	r2, r2, #0, #19
 80050b2:	1a9b      	subs	r3, r3, r2
 80050b4:	f8ca 3268 	str.w	r3, [sl, #616]	@ 0x268
        if (epnum == 0U)
 80050b8:	b96f      	cbnz	r7, 80050d6 <HAL_PCD_IRQHandler+0x44e>
          if (ep->xfer_len == 0U)
 80050ba:	f8d4 2264 	ldr.w	r2, [r4, #612]	@ 0x264
 80050be:	b92a      	cbnz	r2, 80050cc <HAL_PCD_IRQHandler+0x444>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80050c0:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80050c4:	2101      	movs	r1, #1
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 80050c6:	f002 f917 	bl	80072f8 <USB_EP0_OutStart>
 80050ca:	e004      	b.n	80050d6 <HAL_PCD_IRQHandler+0x44e>
            ep->xfer_buff += ep->xfer_count;
 80050cc:	f8d4 2260 	ldr.w	r2, [r4, #608]	@ 0x260
 80050d0:	441a      	add	r2, r3
 80050d2:	f8c4 2260 	str.w	r2, [r4, #608]	@ 0x260
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 80050d6:	4659      	mov	r1, fp
 80050d8:	4620      	mov	r0, r4
 80050da:	f7fc fbc5 	bl	8001868 <HAL_PCD_DataOutStageCallback>
 80050de:	e784      	b.n	8004fea <HAL_PCD_IRQHandler+0x362>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 80050e0:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 8005294 <HAL_PCD_IRQHandler+0x60c>
 80050e4:	4561      	cmp	r1, ip
 80050e6:	d107      	bne.n	80050f8 <HAL_PCD_IRQHandler+0x470>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 80050e8:	0411      	lsls	r1, r2, #16
 80050ea:	f53f af76 	bmi.w	8004fda <HAL_PCD_IRQHandler+0x352>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 80050ee:	0690      	lsls	r0, r2, #26
 80050f0:	d5f1      	bpl.n	80050d6 <HAL_PCD_IRQHandler+0x44e>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80050f2:	2220      	movs	r2, #32
 80050f4:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 80050f6:	e7ee      	b.n	80050d6 <HAL_PCD_IRQHandler+0x44e>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 80050f8:	2f00      	cmp	r7, #0
 80050fa:	d1ec      	bne.n	80050d6 <HAL_PCD_IRQHandler+0x44e>
 80050fc:	f8d4 3264 	ldr.w	r3, [r4, #612]	@ 0x264
 8005100:	2b00      	cmp	r3, #0
 8005102:	d1e8      	bne.n	80050d6 <HAL_PCD_IRQHandler+0x44e>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8005104:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005108:	4639      	mov	r1, r7
 800510a:	e7dc      	b.n	80050c6 <HAL_PCD_IRQHandler+0x43e>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 800510c:	9b04      	ldr	r3, [sp, #16]
 800510e:	07db      	lsls	r3, r3, #31
 8005110:	f140 8099 	bpl.w	8005246 <HAL_PCD_IRQHandler+0x5be>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005114:	fa5f f38a 	uxtb.w	r3, sl
 8005118:	4619      	mov	r1, r3
 800511a:	9305      	str	r3, [sp, #20]
 800511c:	f002 f8c9 	bl	80072b2 <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8005120:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005124:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8005126:	d01f      	beq.n	8005168 <HAL_PCD_IRQHandler+0x4e0>
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005128:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 800512a:	2101      	movs	r1, #1
 800512c:	f00a 020f 	and.w	r2, sl, #15
 8005130:	fa01 f202 	lsl.w	r2, r1, r2
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005134:	ea23 0302 	bic.w	r3, r3, r2
 8005138:	636b      	str	r3, [r5, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 800513a:	f8cb 1008 	str.w	r1, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
 800513e:	79a1      	ldrb	r1, [r4, #6]
 8005140:	2901      	cmp	r1, #1
 8005142:	d10d      	bne.n	8005160 <HAL_PCD_IRQHandler+0x4d8>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 8005144:	e9d7 2307 	ldrd	r2, r3, [r7, #28]
 8005148:	4413      	add	r3, r2
 800514a:	623b      	str	r3, [r7, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 800514c:	f1ba 0f00 	cmp.w	sl, #0
 8005150:	d106      	bne.n	8005160 <HAL_PCD_IRQHandler+0x4d8>
 8005152:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005154:	b923      	cbnz	r3, 8005160 <HAL_PCD_IRQHandler+0x4d8>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8005156:	6820      	ldr	r0, [r4, #0]
 8005158:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 800515c:	f002 f8cc 	bl	80072f8 <USB_EP0_OutStart>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 8005160:	9905      	ldr	r1, [sp, #20]
 8005162:	4620      	mov	r0, r4
 8005164:	f7fc fb89 	bl	800187a <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8005168:	f018 0f08 	tst.w	r8, #8
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 800516c:	bf1c      	itt	ne
 800516e:	2308      	movne	r3, #8
 8005170:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 8005174:	f018 0f10 	tst.w	r8, #16
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 8005178:	bf1c      	itt	ne
 800517a:	2310      	movne	r3, #16
 800517c:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 8005180:	f018 0f40 	tst.w	r8, #64	@ 0x40
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 8005184:	bf1c      	itt	ne
 8005186:	2340      	movne	r3, #64	@ 0x40
 8005188:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 800518c:	f018 0f02 	tst.w	r8, #2
 8005190:	d00f      	beq.n	80051b2 <HAL_PCD_IRQHandler+0x52a>
            (void)USB_FlushTxFifo(USBx, epnum);
 8005192:	4651      	mov	r1, sl
 8005194:	4630      	mov	r0, r6
 8005196:	f001 fcd1 	bl	8006b3c <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
 800519a:	7dfb      	ldrb	r3, [r7, #23]
 800519c:	2b01      	cmp	r3, #1
 800519e:	d105      	bne.n	80051ac <HAL_PCD_IRQHandler+0x524>
              ep->is_iso_incomplete = 0U;
 80051a0:	2300      	movs	r3, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80051a2:	9905      	ldr	r1, [sp, #20]
              ep->is_iso_incomplete = 0U;
 80051a4:	75fb      	strb	r3, [r7, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80051a6:	4620      	mov	r0, r4
 80051a8:	f7fc fba6 	bl	80018f8 <HAL_PCD_ISOINIncompleteCallback>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 80051ac:	2302      	movs	r3, #2
 80051ae:	f8cb 3008 	str.w	r3, [fp, #8]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80051b2:	6823      	ldr	r3, [r4, #0]
 80051b4:	9306      	str	r3, [sp, #24]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 80051b6:	f018 0f80 	tst.w	r8, #128	@ 0x80
 80051ba:	d044      	beq.n	8005246 <HAL_PCD_IRQHandler+0x5be>
  if (ep->xfer_count > ep->xfer_len)
 80051bc:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 80051c0:	429a      	cmp	r2, r3
 80051c2:	d840      	bhi.n	8005246 <HAL_PCD_IRQHandler+0x5be>
  len = ep->xfer_len - ep->xfer_count;
 80051c4:	eba3 0802 	sub.w	r8, r3, r2
  if (len > ep->maxpacket)
 80051c8:	69fb      	ldr	r3, [r7, #28]
 80051ca:	4598      	cmp	r8, r3
 80051cc:	bf28      	it	cs
 80051ce:	4698      	movcs	r8, r3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80051d0:	9b06      	ldr	r3, [sp, #24]
 80051d2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
  len32b = (len + 3U) / 4U;
 80051d6:	f108 0803 	add.w	r8, r8, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80051da:	eb03 134a 	add.w	r3, r3, sl, lsl #5
  len32b = (len + 3U) / 4U;
 80051de:	ea4f 0898 	mov.w	r8, r8, lsr #2
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80051e2:	9307      	str	r3, [sp, #28]
 80051e4:	9b07      	ldr	r3, [sp, #28]
 80051e6:	6999      	ldr	r1, [r3, #24]
 80051e8:	b289      	uxth	r1, r1
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 80051ea:	4541      	cmp	r1, r8
 80051ec:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 80051f0:	d327      	bcc.n	8005242 <HAL_PCD_IRQHandler+0x5ba>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80051f2:	4293      	cmp	r3, r2
 80051f4:	d80b      	bhi.n	800520e <HAL_PCD_IRQHandler+0x586>
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80051f6:	9b06      	ldr	r3, [sp, #24]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 80051f8:	f00a 000f 	and.w	r0, sl, #15
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80051fc:	f8d3 2834 	ldr.w	r2, [r3, #2100]	@ 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8005200:	2101      	movs	r1, #1
 8005202:	4081      	lsls	r1, r0
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005204:	ea22 0201 	bic.w	r2, r2, r1
 8005208:	f8c3 2834 	str.w	r2, [r3, #2100]	@ 0x834
 800520c:	e01b      	b.n	8005246 <HAL_PCD_IRQHandler+0x5be>
    len = ep->xfer_len - ep->xfer_count;
 800520e:	eba3 0902 	sub.w	r9, r3, r2
    if (len > ep->maxpacket)
 8005212:	69fb      	ldr	r3, [r7, #28]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8005214:	9a05      	ldr	r2, [sp, #20]
 8005216:	9806      	ldr	r0, [sp, #24]
    if (len > ep->maxpacket)
 8005218:	4599      	cmp	r9, r3
 800521a:	bf28      	it	cs
 800521c:	4699      	movcs	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 800521e:	79a3      	ldrb	r3, [r4, #6]
 8005220:	9300      	str	r3, [sp, #0]
 8005222:	6a39      	ldr	r1, [r7, #32]
 8005224:	fa1f f389 	uxth.w	r3, r9
 8005228:	f001 fe70 	bl	8006f0c <USB_WritePacket>
    ep->xfer_buff  += len;
 800522c:	6a3b      	ldr	r3, [r7, #32]
 800522e:	444b      	add	r3, r9
 8005230:	623b      	str	r3, [r7, #32]
    ep->xfer_count += len;
 8005232:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    len32b = (len + 3U) / 4U;
 8005234:	f109 0803 	add.w	r8, r9, #3
    ep->xfer_count += len;
 8005238:	444b      	add	r3, r9
    len32b = (len + 3U) / 4U;
 800523a:	ea4f 0898 	mov.w	r8, r8, lsr #2
    ep->xfer_count += len;
 800523e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005240:	e7d0      	b.n	80051e4 <HAL_PCD_IRQHandler+0x55c>
  if (ep->xfer_len <= ep->xfer_count)
 8005242:	4293      	cmp	r3, r2
 8005244:	d9d7      	bls.n	80051f6 <HAL_PCD_IRQHandler+0x56e>
        ep_intr >>= 1U;
 8005246:	9b04      	ldr	r3, [sp, #16]
 8005248:	085b      	lsrs	r3, r3, #1
        epnum++;
 800524a:	f10a 0a01 	add.w	sl, sl, #1
        ep_intr >>= 1U;
 800524e:	9304      	str	r3, [sp, #16]
 8005250:	3724      	adds	r7, #36	@ 0x24
 8005252:	f10b 0b20 	add.w	fp, fp, #32
 8005256:	e583      	b.n	8004d60 <HAL_PCD_IRQHandler+0xd8>
        HAL_PCD_ResumeCallback(hpcd);
 8005258:	4620      	mov	r0, r4
 800525a:	f7fc fb45 	bl	80018e8 <HAL_PCD_ResumeCallback>
 800525e:	e598      	b.n	8004d92 <HAL_PCD_IRQHandler+0x10a>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8005260:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8005262:	681a      	ldr	r2, [r3, #0]
 8005264:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8005268:	601a      	str	r2, [r3, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 800526a:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 800526e:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8005272:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8005276:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 800527a:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 800527e:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8005282:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005286:	9a03      	ldr	r2, [sp, #12]
 8005288:	3201      	adds	r2, #1
 800528a:	9203      	str	r2, [sp, #12]
 800528c:	3320      	adds	r3, #32
 800528e:	e5a7      	b.n	8004de0 <HAL_PCD_IRQHandler+0x158>
 8005290:	4f54300a 	.word	0x4f54300a
 8005294:	4f54310a 	.word	0x4f54310a
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 8005298:	696b      	ldr	r3, [r5, #20]
 800529a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800529e:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 80052a2:	616b      	str	r3, [r5, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 80052a4:	692b      	ldr	r3, [r5, #16]
 80052a6:	f043 030b 	orr.w	r3, r3, #11
 80052aa:	612b      	str	r3, [r5, #16]
 80052ac:	e5ae      	b.n	8004e0c <HAL_PCD_IRQHandler+0x184>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 80052ae:	69b3      	ldr	r3, [r6, #24]
 80052b0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80052b4:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80052b6:	2701      	movs	r7, #1
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80052b8:	f204 2857 	addw	r8, r4, #599	@ 0x257
 80052bc:	f04f 0924 	mov.w	r9, #36	@ 0x24
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80052c0:	7923      	ldrb	r3, [r4, #4]
 80052c2:	42bb      	cmp	r3, r7
 80052c4:	f67f ade2 	bls.w	8004e8c <HAL_PCD_IRQHandler+0x204>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80052c8:	fb09 f307 	mul.w	r3, r9, r7
 80052cc:	f818 3003 	ldrb.w	r3, [r8, r3]
 80052d0:	2b01      	cmp	r3, #1
 80052d2:	d103      	bne.n	80052dc <HAL_PCD_IRQHandler+0x654>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
 80052d4:	b2f9      	uxtb	r1, r7
 80052d6:	4620      	mov	r0, r4
 80052d8:	f7ff fcc5 	bl	8004c66 <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80052dc:	3701      	adds	r7, #1
 80052de:	e7ef      	b.n	80052c0 <HAL_PCD_IRQHandler+0x638>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 80052e0:	f898 303c 	ldrb.w	r3, [r8, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 80052e4:	f8d9 2000 	ldr.w	r2, [r9]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 80052e8:	2b01      	cmp	r3, #1
 80052ea:	d109      	bne.n	8005300 <HAL_PCD_IRQHandler+0x678>
 80052ec:	2a00      	cmp	r2, #0
 80052ee:	da07      	bge.n	8005300 <HAL_PCD_IRQHandler+0x678>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 80052f0:	f067 017f 	orn	r1, r7, #127	@ 0x7f
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 80052f4:	f888 303b 	strb.w	r3, [r8, #59]	@ 0x3b
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 80052f8:	b2c9      	uxtb	r1, r1
 80052fa:	4620      	mov	r0, r4
 80052fc:	f7ff fcb3 	bl	8004c66 <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005300:	3701      	adds	r7, #1
 8005302:	f108 0824 	add.w	r8, r8, #36	@ 0x24
 8005306:	f109 0920 	add.w	r9, r9, #32
 800530a:	e5c8      	b.n	8004e9e <HAL_PCD_IRQHandler+0x216>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800530c:	f10c 0c01 	add.w	ip, ip, #1
 8005310:	3324      	adds	r3, #36	@ 0x24
 8005312:	3120      	adds	r1, #32
 8005314:	e5d8      	b.n	8004ec8 <HAL_PCD_IRQHandler+0x240>
 8005316:	bf00      	nop

08005318 <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8005318:	6800      	ldr	r0, [r0, #0]
{
 800531a:	b570      	push	{r4, r5, r6, lr}
  Tx_Offset = hpcd->Instance->GRXFSIZ;
 800531c:	6a43      	ldr	r3, [r0, #36]	@ 0x24

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 800531e:	0412      	lsls	r2, r2, #16
  if (fifo == 0U)
 8005320:	b919      	cbnz	r1, 800532a <HAL_PCDEx_SetTxFiFo+0x12>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8005322:	4313      	orrs	r3, r2
 8005324:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
 8005326:	2000      	movs	r0, #0
 8005328:	bd70      	pop	{r4, r5, r6, pc}
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 800532a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
    for (i = 0U; i < (fifo - 1U); i++)
 800532c:	1e4e      	subs	r6, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 800532e:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8005332:	2400      	movs	r4, #0
 8005334:	42b4      	cmp	r4, r6
 8005336:	d305      	bcc.n	8005344 <HAL_PCDEx_SetTxFiFo+0x2c>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 8005338:	313f      	adds	r1, #63	@ 0x3f
 800533a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 800533e:	4313      	orrs	r3, r2
 8005340:	6043      	str	r3, [r0, #4]
 8005342:	e7f0      	b.n	8005326 <HAL_PCDEx_SetTxFiFo+0xe>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8005344:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8005348:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800534c:	3401      	adds	r4, #1
 800534e:	686d      	ldr	r5, [r5, #4]
 8005350:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8005354:	e7ee      	b.n	8005334 <HAL_PCDEx_SetTxFiFo+0x1c>

08005356 <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 8005356:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8005358:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
 800535a:	6259      	str	r1, [r3, #36]	@ 0x24
}
 800535c:	4770      	bx	lr

0800535e <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 800535e:	4770      	bx	lr

08005360 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(const RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005360:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005364:	4604      	mov	r4, r0
 8005366:	b340      	cbz	r0, 80053ba <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005368:	6803      	ldr	r3, [r0, #0]
 800536a:	07de      	lsls	r6, r3, #31
 800536c:	d410      	bmi.n	8005390 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800536e:	6823      	ldr	r3, [r4, #0]
 8005370:	079d      	lsls	r5, r3, #30
 8005372:	d45b      	bmi.n	800542c <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005374:	6823      	ldr	r3, [r4, #0]
 8005376:	0719      	lsls	r1, r3, #28
 8005378:	f100 809d 	bmi.w	80054b6 <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800537c:	6823      	ldr	r3, [r4, #0]
 800537e:	075a      	lsls	r2, r3, #29
 8005380:	f100 80bd 	bmi.w	80054fe <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005384:	69a3      	ldr	r3, [r4, #24]
 8005386:	2b00      	cmp	r3, #0
 8005388:	f040 8124 	bne.w	80055d4 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800538c:	2000      	movs	r0, #0
 800538e:	e02c      	b.n	80053ea <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8005390:	4b8d      	ldr	r3, [pc, #564]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
 8005392:	689a      	ldr	r2, [r3, #8]
 8005394:	f002 020c 	and.w	r2, r2, #12
 8005398:	2a04      	cmp	r2, #4
 800539a:	d007      	beq.n	80053ac <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800539c:	689a      	ldr	r2, [r3, #8]
 800539e:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 80053a2:	2a08      	cmp	r2, #8
 80053a4:	d10b      	bne.n	80053be <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80053a6:	685b      	ldr	r3, [r3, #4]
 80053a8:	0259      	lsls	r1, r3, #9
 80053aa:	d508      	bpl.n	80053be <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80053ac:	4b86      	ldr	r3, [pc, #536]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	039a      	lsls	r2, r3, #14
 80053b2:	d5dc      	bpl.n	800536e <HAL_RCC_OscConfig+0xe>
 80053b4:	6863      	ldr	r3, [r4, #4]
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	d1d9      	bne.n	800536e <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 80053ba:	2001      	movs	r0, #1
 80053bc:	e015      	b.n	80053ea <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80053be:	6863      	ldr	r3, [r4, #4]
 80053c0:	4d81      	ldr	r5, [pc, #516]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
 80053c2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80053c6:	d113      	bne.n	80053f0 <HAL_RCC_OscConfig+0x90>
 80053c8:	682b      	ldr	r3, [r5, #0]
 80053ca:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80053ce:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80053d0:	f7fe fa34 	bl	800383c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80053d4:	4e7c      	ldr	r6, [pc, #496]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80053d6:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80053d8:	6833      	ldr	r3, [r6, #0]
 80053da:	039b      	lsls	r3, r3, #14
 80053dc:	d4c7      	bmi.n	800536e <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80053de:	f7fe fa2d 	bl	800383c <HAL_GetTick>
 80053e2:	1b40      	subs	r0, r0, r5
 80053e4:	2864      	cmp	r0, #100	@ 0x64
 80053e6:	d9f7      	bls.n	80053d8 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80053e8:	2003      	movs	r0, #3
}
 80053ea:	b002      	add	sp, #8
 80053ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80053f0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80053f4:	d104      	bne.n	8005400 <HAL_RCC_OscConfig+0xa0>
 80053f6:	682b      	ldr	r3, [r5, #0]
 80053f8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80053fc:	602b      	str	r3, [r5, #0]
 80053fe:	e7e3      	b.n	80053c8 <HAL_RCC_OscConfig+0x68>
 8005400:	682a      	ldr	r2, [r5, #0]
 8005402:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8005406:	602a      	str	r2, [r5, #0]
 8005408:	682a      	ldr	r2, [r5, #0]
 800540a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800540e:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005410:	2b00      	cmp	r3, #0
 8005412:	d1dd      	bne.n	80053d0 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8005414:	f7fe fa12 	bl	800383c <HAL_GetTick>
 8005418:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800541a:	682b      	ldr	r3, [r5, #0]
 800541c:	039f      	lsls	r7, r3, #14
 800541e:	d5a6      	bpl.n	800536e <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005420:	f7fe fa0c 	bl	800383c <HAL_GetTick>
 8005424:	1b80      	subs	r0, r0, r6
 8005426:	2864      	cmp	r0, #100	@ 0x64
 8005428:	d9f7      	bls.n	800541a <HAL_RCC_OscConfig+0xba>
 800542a:	e7dd      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800542c:	4b66      	ldr	r3, [pc, #408]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
 800542e:	689a      	ldr	r2, [r3, #8]
 8005430:	f012 0f0c 	tst.w	r2, #12
 8005434:	d007      	beq.n	8005446 <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005436:	689a      	ldr	r2, [r3, #8]
 8005438:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800543c:	2a08      	cmp	r2, #8
 800543e:	d111      	bne.n	8005464 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005440:	685b      	ldr	r3, [r3, #4]
 8005442:	025d      	lsls	r5, r3, #9
 8005444:	d40e      	bmi.n	8005464 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005446:	4a60      	ldr	r2, [pc, #384]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
 8005448:	6813      	ldr	r3, [r2, #0]
 800544a:	0799      	lsls	r1, r3, #30
 800544c:	d502      	bpl.n	8005454 <HAL_RCC_OscConfig+0xf4>
 800544e:	68e3      	ldr	r3, [r4, #12]
 8005450:	2b01      	cmp	r3, #1
 8005452:	d1b2      	bne.n	80053ba <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005454:	6813      	ldr	r3, [r2, #0]
 8005456:	6921      	ldr	r1, [r4, #16]
 8005458:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800545c:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005460:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005462:	e787      	b.n	8005374 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005464:	68e2      	ldr	r2, [r4, #12]
 8005466:	4b59      	ldr	r3, [pc, #356]	@ (80055cc <HAL_RCC_OscConfig+0x26c>)
 8005468:	b1b2      	cbz	r2, 8005498 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 800546a:	2201      	movs	r2, #1
 800546c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800546e:	f7fe f9e5 	bl	800383c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005472:	4d55      	ldr	r5, [pc, #340]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005474:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005476:	682b      	ldr	r3, [r5, #0]
 8005478:	079b      	lsls	r3, r3, #30
 800547a:	d507      	bpl.n	800548c <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800547c:	682b      	ldr	r3, [r5, #0]
 800547e:	6922      	ldr	r2, [r4, #16]
 8005480:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005484:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005488:	602b      	str	r3, [r5, #0]
 800548a:	e773      	b.n	8005374 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800548c:	f7fe f9d6 	bl	800383c <HAL_GetTick>
 8005490:	1b80      	subs	r0, r0, r6
 8005492:	2802      	cmp	r0, #2
 8005494:	d9ef      	bls.n	8005476 <HAL_RCC_OscConfig+0x116>
 8005496:	e7a7      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8005498:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800549a:	f7fe f9cf 	bl	800383c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800549e:	4e4a      	ldr	r6, [pc, #296]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80054a0:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80054a2:	6833      	ldr	r3, [r6, #0]
 80054a4:	079f      	lsls	r7, r3, #30
 80054a6:	f57f af65 	bpl.w	8005374 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80054aa:	f7fe f9c7 	bl	800383c <HAL_GetTick>
 80054ae:	1b40      	subs	r0, r0, r5
 80054b0:	2802      	cmp	r0, #2
 80054b2:	d9f6      	bls.n	80054a2 <HAL_RCC_OscConfig+0x142>
 80054b4:	e798      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80054b6:	6962      	ldr	r2, [r4, #20]
 80054b8:	4b44      	ldr	r3, [pc, #272]	@ (80055cc <HAL_RCC_OscConfig+0x26c>)
 80054ba:	b182      	cbz	r2, 80054de <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80054bc:	2201      	movs	r2, #1
 80054be:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80054c2:	f7fe f9bb 	bl	800383c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80054c6:	4e40      	ldr	r6, [pc, #256]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80054c8:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80054ca:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80054cc:	079b      	lsls	r3, r3, #30
 80054ce:	f53f af55 	bmi.w	800537c <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80054d2:	f7fe f9b3 	bl	800383c <HAL_GetTick>
 80054d6:	1b40      	subs	r0, r0, r5
 80054d8:	2802      	cmp	r0, #2
 80054da:	d9f6      	bls.n	80054ca <HAL_RCC_OscConfig+0x16a>
 80054dc:	e784      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80054de:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80054e2:	f7fe f9ab 	bl	800383c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80054e6:	4e38      	ldr	r6, [pc, #224]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80054e8:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80054ea:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80054ec:	079f      	lsls	r7, r3, #30
 80054ee:	f57f af45 	bpl.w	800537c <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80054f2:	f7fe f9a3 	bl	800383c <HAL_GetTick>
 80054f6:	1b40      	subs	r0, r0, r5
 80054f8:	2802      	cmp	r0, #2
 80054fa:	d9f6      	bls.n	80054ea <HAL_RCC_OscConfig+0x18a>
 80054fc:	e774      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80054fe:	4b32      	ldr	r3, [pc, #200]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
 8005500:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005502:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 8005506:	d128      	bne.n	800555a <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005508:	9201      	str	r2, [sp, #4]
 800550a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800550c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005510:	641a      	str	r2, [r3, #64]	@ 0x40
 8005512:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005514:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005518:	9301      	str	r3, [sp, #4]
 800551a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800551c:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800551e:	4d2c      	ldr	r5, [pc, #176]	@ (80055d0 <HAL_RCC_OscConfig+0x270>)
 8005520:	682b      	ldr	r3, [r5, #0]
 8005522:	05d8      	lsls	r0, r3, #23
 8005524:	d51b      	bpl.n	800555e <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005526:	68a3      	ldr	r3, [r4, #8]
 8005528:	4d27      	ldr	r5, [pc, #156]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
 800552a:	2b01      	cmp	r3, #1
 800552c:	d127      	bne.n	800557e <HAL_RCC_OscConfig+0x21e>
 800552e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005530:	f043 0301 	orr.w	r3, r3, #1
 8005534:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8005536:	f7fe f981 	bl	800383c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800553a:	4e23      	ldr	r6, [pc, #140]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800553c:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800553e:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005542:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8005544:	079a      	lsls	r2, r3, #30
 8005546:	d539      	bpl.n	80055bc <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 8005548:	2f00      	cmp	r7, #0
 800554a:	f43f af1b 	beq.w	8005384 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800554e:	4a1e      	ldr	r2, [pc, #120]	@ (80055c8 <HAL_RCC_OscConfig+0x268>)
 8005550:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8005552:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005556:	6413      	str	r3, [r2, #64]	@ 0x40
 8005558:	e714      	b.n	8005384 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800555a:	2700      	movs	r7, #0
 800555c:	e7df      	b.n	800551e <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800555e:	682b      	ldr	r3, [r5, #0]
 8005560:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005564:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005566:	f7fe f969 	bl	800383c <HAL_GetTick>
 800556a:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800556c:	682b      	ldr	r3, [r5, #0]
 800556e:	05d9      	lsls	r1, r3, #23
 8005570:	d4d9      	bmi.n	8005526 <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005572:	f7fe f963 	bl	800383c <HAL_GetTick>
 8005576:	1b80      	subs	r0, r0, r6
 8005578:	2802      	cmp	r0, #2
 800557a:	d9f7      	bls.n	800556c <HAL_RCC_OscConfig+0x20c>
 800557c:	e734      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800557e:	2b05      	cmp	r3, #5
 8005580:	d104      	bne.n	800558c <HAL_RCC_OscConfig+0x22c>
 8005582:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005584:	f043 0304 	orr.w	r3, r3, #4
 8005588:	672b      	str	r3, [r5, #112]	@ 0x70
 800558a:	e7d0      	b.n	800552e <HAL_RCC_OscConfig+0x1ce>
 800558c:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800558e:	f022 0201 	bic.w	r2, r2, #1
 8005592:	672a      	str	r2, [r5, #112]	@ 0x70
 8005594:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8005596:	f022 0204 	bic.w	r2, r2, #4
 800559a:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800559c:	2b00      	cmp	r3, #0
 800559e:	d1ca      	bne.n	8005536 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 80055a0:	f7fe f94c 	bl	800383c <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80055a4:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 80055a8:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80055aa:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80055ac:	079b      	lsls	r3, r3, #30
 80055ae:	d5cb      	bpl.n	8005548 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80055b0:	f7fe f944 	bl	800383c <HAL_GetTick>
 80055b4:	1b80      	subs	r0, r0, r6
 80055b6:	4540      	cmp	r0, r8
 80055b8:	d9f7      	bls.n	80055aa <HAL_RCC_OscConfig+0x24a>
 80055ba:	e715      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80055bc:	f7fe f93e 	bl	800383c <HAL_GetTick>
 80055c0:	1b40      	subs	r0, r0, r5
 80055c2:	4540      	cmp	r0, r8
 80055c4:	d9bd      	bls.n	8005542 <HAL_RCC_OscConfig+0x1e2>
 80055c6:	e70f      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
 80055c8:	40023800 	.word	0x40023800
 80055cc:	42470000 	.word	0x42470000
 80055d0:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80055d4:	4d37      	ldr	r5, [pc, #220]	@ (80056b4 <HAL_RCC_OscConfig+0x354>)
 80055d6:	68aa      	ldr	r2, [r5, #8]
 80055d8:	f002 020c 	and.w	r2, r2, #12
 80055dc:	2a08      	cmp	r2, #8
 80055de:	d03e      	beq.n	800565e <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80055e0:	2b02      	cmp	r3, #2
 80055e2:	4b35      	ldr	r3, [pc, #212]	@ (80056b8 <HAL_RCC_OscConfig+0x358>)
 80055e4:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 80055e8:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80055ea:	d12b      	bne.n	8005644 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 80055ec:	f7fe f926 	bl	800383c <HAL_GetTick>
 80055f0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80055f2:	682b      	ldr	r3, [r5, #0]
 80055f4:	0199      	lsls	r1, r3, #6
 80055f6:	d41f      	bmi.n	8005638 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80055f8:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80055fc:	4313      	orrs	r3, r2
 80055fe:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005600:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005604:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005606:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800560a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800560c:	0852      	lsrs	r2, r2, #1
 800560e:	3a01      	subs	r2, #1
 8005610:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005614:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8005616:	4b28      	ldr	r3, [pc, #160]	@ (80056b8 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005618:	4d26      	ldr	r5, [pc, #152]	@ (80056b4 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 800561a:	2201      	movs	r2, #1
 800561c:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800561e:	f7fe f90d 	bl	800383c <HAL_GetTick>
 8005622:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005624:	682b      	ldr	r3, [r5, #0]
 8005626:	019a      	lsls	r2, r3, #6
 8005628:	f53f aeb0 	bmi.w	800538c <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800562c:	f7fe f906 	bl	800383c <HAL_GetTick>
 8005630:	1b00      	subs	r0, r0, r4
 8005632:	2802      	cmp	r0, #2
 8005634:	d9f6      	bls.n	8005624 <HAL_RCC_OscConfig+0x2c4>
 8005636:	e6d7      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005638:	f7fe f900 	bl	800383c <HAL_GetTick>
 800563c:	1b80      	subs	r0, r0, r6
 800563e:	2802      	cmp	r0, #2
 8005640:	d9d7      	bls.n	80055f2 <HAL_RCC_OscConfig+0x292>
 8005642:	e6d1      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8005644:	f7fe f8fa 	bl	800383c <HAL_GetTick>
 8005648:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800564a:	682b      	ldr	r3, [r5, #0]
 800564c:	019b      	lsls	r3, r3, #6
 800564e:	f57f ae9d 	bpl.w	800538c <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005652:	f7fe f8f3 	bl	800383c <HAL_GetTick>
 8005656:	1b00      	subs	r0, r0, r4
 8005658:	2802      	cmp	r0, #2
 800565a:	d9f6      	bls.n	800564a <HAL_RCC_OscConfig+0x2ea>
 800565c:	e6c4      	b.n	80053e8 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800565e:	2b01      	cmp	r3, #1
 8005660:	f43f aeab 	beq.w	80053ba <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8005664:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005666:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005668:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800566c:	4291      	cmp	r1, r2
 800566e:	f47f aea4 	bne.w	80053ba <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005672:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005674:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005678:	428a      	cmp	r2, r1
 800567a:	f47f ae9e 	bne.w	80053ba <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800567e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005680:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8005684:	401a      	ands	r2, r3
 8005686:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800568a:	f47f ae96 	bne.w	80053ba <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800568e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005690:	0852      	lsrs	r2, r2, #1
 8005692:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8005696:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005698:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800569c:	f47f ae8d 	bne.w	80053ba <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80056a0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80056a2:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80056a6:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80056aa:	bf14      	ite	ne
 80056ac:	2001      	movne	r0, #1
 80056ae:	2000      	moveq	r0, #0
 80056b0:	e69b      	b.n	80053ea <HAL_RCC_OscConfig+0x8a>
 80056b2:	bf00      	nop
 80056b4:	40023800 	.word	0x40023800
 80056b8:	42470000 	.word	0x42470000

080056bc <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80056bc:	4913      	ldr	r1, [pc, #76]	@ (800570c <HAL_RCC_GetSysClockFreq+0x50>)
{
 80056be:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80056c0:	688b      	ldr	r3, [r1, #8]
 80056c2:	f003 030c 	and.w	r3, r3, #12
 80056c6:	2b04      	cmp	r3, #4
 80056c8:	d01c      	beq.n	8005704 <HAL_RCC_GetSysClockFreq+0x48>
 80056ca:	2b08      	cmp	r3, #8
 80056cc:	d11c      	bne.n	8005708 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80056ce:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80056d0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056d2:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80056d4:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056d8:	bf14      	ite	ne
 80056da:	480d      	ldrne	r0, [pc, #52]	@ (8005710 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056dc:	480d      	ldreq	r0, [pc, #52]	@ (8005714 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056de:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80056e2:	bf18      	it	ne
 80056e4:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80056e6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056ea:	fba1 0100 	umull	r0, r1, r1, r0
 80056ee:	f7fa fe27 	bl	8000340 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 80056f2:	4b06      	ldr	r3, [pc, #24]	@ (800570c <HAL_RCC_GetSysClockFreq+0x50>)
 80056f4:	685b      	ldr	r3, [r3, #4]
 80056f6:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80056fa:	3301      	adds	r3, #1
 80056fc:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 80056fe:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005702:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005704:	4802      	ldr	r0, [pc, #8]	@ (8005710 <HAL_RCC_GetSysClockFreq+0x54>)
 8005706:	e7fc      	b.n	8005702 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005708:	4802      	ldr	r0, [pc, #8]	@ (8005714 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800570a:	e7fa      	b.n	8005702 <HAL_RCC_GetSysClockFreq+0x46>
 800570c:	40023800 	.word	0x40023800
 8005710:	007a1200 	.word	0x007a1200
 8005714:	00f42400 	.word	0x00f42400

08005718 <HAL_RCC_ClockConfig>:
{
 8005718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800571c:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800571e:	4604      	mov	r4, r0
 8005720:	b910      	cbnz	r0, 8005728 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005722:	2001      	movs	r0, #1
}
 8005724:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005728:	4b43      	ldr	r3, [pc, #268]	@ (8005838 <HAL_RCC_ClockConfig+0x120>)
 800572a:	681a      	ldr	r2, [r3, #0]
 800572c:	f002 020f 	and.w	r2, r2, #15
 8005730:	428a      	cmp	r2, r1
 8005732:	d328      	bcc.n	8005786 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005734:	6821      	ldr	r1, [r4, #0]
 8005736:	078f      	lsls	r7, r1, #30
 8005738:	d42d      	bmi.n	8005796 <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800573a:	07c8      	lsls	r0, r1, #31
 800573c:	d440      	bmi.n	80057c0 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800573e:	4b3e      	ldr	r3, [pc, #248]	@ (8005838 <HAL_RCC_ClockConfig+0x120>)
 8005740:	681a      	ldr	r2, [r3, #0]
 8005742:	f002 020f 	and.w	r2, r2, #15
 8005746:	42aa      	cmp	r2, r5
 8005748:	d865      	bhi.n	8005816 <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800574a:	6822      	ldr	r2, [r4, #0]
 800574c:	0751      	lsls	r1, r2, #29
 800574e:	d46b      	bmi.n	8005828 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005750:	0713      	lsls	r3, r2, #28
 8005752:	d507      	bpl.n	8005764 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005754:	4a39      	ldr	r2, [pc, #228]	@ (800583c <HAL_RCC_ClockConfig+0x124>)
 8005756:	6921      	ldr	r1, [r4, #16]
 8005758:	6893      	ldr	r3, [r2, #8]
 800575a:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800575e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005762:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005764:	f7ff ffaa 	bl	80056bc <HAL_RCC_GetSysClockFreq>
 8005768:	4b34      	ldr	r3, [pc, #208]	@ (800583c <HAL_RCC_ClockConfig+0x124>)
 800576a:	4a35      	ldr	r2, [pc, #212]	@ (8005840 <HAL_RCC_ClockConfig+0x128>)
 800576c:	689b      	ldr	r3, [r3, #8]
 800576e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005772:	5cd3      	ldrb	r3, [r2, r3]
 8005774:	40d8      	lsrs	r0, r3
 8005776:	4b33      	ldr	r3, [pc, #204]	@ (8005844 <HAL_RCC_ClockConfig+0x12c>)
 8005778:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 800577a:	4b33      	ldr	r3, [pc, #204]	@ (8005848 <HAL_RCC_ClockConfig+0x130>)
 800577c:	6818      	ldr	r0, [r3, #0]
 800577e:	f7fc ff31 	bl	80025e4 <HAL_InitTick>
  return HAL_OK;
 8005782:	2000      	movs	r0, #0
 8005784:	e7ce      	b.n	8005724 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005786:	b2ca      	uxtb	r2, r1
 8005788:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800578a:	681b      	ldr	r3, [r3, #0]
 800578c:	f003 030f 	and.w	r3, r3, #15
 8005790:	428b      	cmp	r3, r1
 8005792:	d1c6      	bne.n	8005722 <HAL_RCC_ClockConfig+0xa>
 8005794:	e7ce      	b.n	8005734 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005796:	4b29      	ldr	r3, [pc, #164]	@ (800583c <HAL_RCC_ClockConfig+0x124>)
 8005798:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800579c:	bf1e      	ittt	ne
 800579e:	689a      	ldrne	r2, [r3, #8]
 80057a0:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 80057a4:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80057a6:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80057a8:	bf42      	ittt	mi
 80057aa:	689a      	ldrmi	r2, [r3, #8]
 80057ac:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 80057b0:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80057b2:	689a      	ldr	r2, [r3, #8]
 80057b4:	68a0      	ldr	r0, [r4, #8]
 80057b6:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 80057ba:	4302      	orrs	r2, r0
 80057bc:	609a      	str	r2, [r3, #8]
 80057be:	e7bc      	b.n	800573a <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80057c0:	6862      	ldr	r2, [r4, #4]
 80057c2:	4b1e      	ldr	r3, [pc, #120]	@ (800583c <HAL_RCC_ClockConfig+0x124>)
 80057c4:	2a01      	cmp	r2, #1
 80057c6:	d11c      	bne.n	8005802 <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80057c8:	681b      	ldr	r3, [r3, #0]
 80057ca:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80057ce:	d0a8      	beq.n	8005722 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80057d0:	4e1a      	ldr	r6, [pc, #104]	@ (800583c <HAL_RCC_ClockConfig+0x124>)
 80057d2:	68b3      	ldr	r3, [r6, #8]
 80057d4:	f023 0303 	bic.w	r3, r3, #3
 80057d8:	4313      	orrs	r3, r2
 80057da:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80057dc:	f7fe f82e 	bl	800383c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80057e0:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 80057e4:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80057e6:	68b3      	ldr	r3, [r6, #8]
 80057e8:	6862      	ldr	r2, [r4, #4]
 80057ea:	f003 030c 	and.w	r3, r3, #12
 80057ee:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80057f2:	d0a4      	beq.n	800573e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80057f4:	f7fe f822 	bl	800383c <HAL_GetTick>
 80057f8:	1bc0      	subs	r0, r0, r7
 80057fa:	4540      	cmp	r0, r8
 80057fc:	d9f3      	bls.n	80057e6 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 80057fe:	2003      	movs	r0, #3
 8005800:	e790      	b.n	8005724 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005802:	1e91      	subs	r1, r2, #2
 8005804:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005806:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005808:	d802      	bhi.n	8005810 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800580a:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 800580e:	e7de      	b.n	80057ce <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005810:	f013 0f02 	tst.w	r3, #2
 8005814:	e7db      	b.n	80057ce <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005816:	b2ea      	uxtb	r2, r5
 8005818:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	f003 030f 	and.w	r3, r3, #15
 8005820:	42ab      	cmp	r3, r5
 8005822:	f47f af7e 	bne.w	8005722 <HAL_RCC_ClockConfig+0xa>
 8005826:	e790      	b.n	800574a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005828:	4904      	ldr	r1, [pc, #16]	@ (800583c <HAL_RCC_ClockConfig+0x124>)
 800582a:	68e0      	ldr	r0, [r4, #12]
 800582c:	688b      	ldr	r3, [r1, #8]
 800582e:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8005832:	4303      	orrs	r3, r0
 8005834:	608b      	str	r3, [r1, #8]
 8005836:	e78b      	b.n	8005750 <HAL_RCC_ClockConfig+0x38>
 8005838:	40023c00 	.word	0x40023c00
 800583c:	40023800 	.word	0x40023800
 8005840:	08024e28 	.word	0x08024e28
 8005844:	200000cc 	.word	0x200000cc
 8005848:	200000d4 	.word	0x200000d4

0800584c <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 800584c:	4b01      	ldr	r3, [pc, #4]	@ (8005854 <HAL_RCC_GetHCLKFreq+0x8>)
 800584e:	6818      	ldr	r0, [r3, #0]
 8005850:	4770      	bx	lr
 8005852:	bf00      	nop
 8005854:	200000cc 	.word	0x200000cc

08005858 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8005858:	4b04      	ldr	r3, [pc, #16]	@ (800586c <HAL_RCC_GetPCLK1Freq+0x14>)
 800585a:	4a05      	ldr	r2, [pc, #20]	@ (8005870 <HAL_RCC_GetPCLK1Freq+0x18>)
 800585c:	689b      	ldr	r3, [r3, #8]
 800585e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005862:	5cd3      	ldrb	r3, [r2, r3]
 8005864:	4a03      	ldr	r2, [pc, #12]	@ (8005874 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005866:	6810      	ldr	r0, [r2, #0]
}
 8005868:	40d8      	lsrs	r0, r3
 800586a:	4770      	bx	lr
 800586c:	40023800 	.word	0x40023800
 8005870:	08024e20 	.word	0x08024e20
 8005874:	200000cc 	.word	0x200000cc

08005878 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8005878:	4b04      	ldr	r3, [pc, #16]	@ (800588c <HAL_RCC_GetPCLK2Freq+0x14>)
 800587a:	4a05      	ldr	r2, [pc, #20]	@ (8005890 <HAL_RCC_GetPCLK2Freq+0x18>)
 800587c:	689b      	ldr	r3, [r3, #8]
 800587e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8005882:	5cd3      	ldrb	r3, [r2, r3]
 8005884:	4a03      	ldr	r2, [pc, #12]	@ (8005894 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8005886:	6810      	ldr	r0, [r2, #0]
}
 8005888:	40d8      	lsrs	r0, r3
 800588a:	4770      	bx	lr
 800588c:	40023800 	.word	0x40023800
 8005890:	08024e20 	.word	0x08024e20
 8005894:	200000cc 	.word	0x200000cc

08005898 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005898:	230f      	movs	r3, #15
 800589a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800589c:	4b0b      	ldr	r3, [pc, #44]	@ (80058cc <HAL_RCC_GetClockConfig+0x34>)
 800589e:	689a      	ldr	r2, [r3, #8]
 80058a0:	f002 0203 	and.w	r2, r2, #3
 80058a4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80058a6:	689a      	ldr	r2, [r3, #8]
 80058a8:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 80058ac:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80058ae:	689a      	ldr	r2, [r3, #8]
 80058b0:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 80058b4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80058b6:	689b      	ldr	r3, [r3, #8]
 80058b8:	08db      	lsrs	r3, r3, #3
 80058ba:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 80058be:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80058c0:	4b03      	ldr	r3, [pc, #12]	@ (80058d0 <HAL_RCC_GetClockConfig+0x38>)
 80058c2:	681b      	ldr	r3, [r3, #0]
 80058c4:	f003 030f 	and.w	r3, r3, #15
 80058c8:	600b      	str	r3, [r1, #0]
}
 80058ca:	4770      	bx	lr
 80058cc:	40023800 	.word	0x40023800
 80058d0:	40023c00 	.word	0x40023c00

080058d4 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80058d4:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80058d6:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 80058da:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80058dc:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80058de:	f040 8088 	bne.w	80059f2 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80058e2:	6823      	ldr	r3, [r4, #0]
 80058e4:	f013 0f0c 	tst.w	r3, #12
 80058e8:	d045      	beq.n	8005976 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80058ea:	4b8c      	ldr	r3, [pc, #560]	@ (8005b1c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80058ec:	4d8c      	ldr	r5, [pc, #560]	@ (8005b20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 80058ee:	2200      	movs	r2, #0
 80058f0:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 80058f2:	f7fd ffa3 	bl	800383c <HAL_GetTick>
 80058f6:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80058f8:	682b      	ldr	r3, [r5, #0]
 80058fa:	0099      	lsls	r1, r3, #2
 80058fc:	f100 80cb 	bmi.w	8005a96 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005900:	6821      	ldr	r1, [r4, #0]
 8005902:	074a      	lsls	r2, r1, #29
 8005904:	d515      	bpl.n	8005932 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005906:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800590a:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800590e:	061b      	lsls	r3, r3, #24
 8005910:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8005914:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005918:	4313      	orrs	r3, r2
 800591a:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800591e:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8005922:	6a22      	ldr	r2, [r4, #32]
 8005924:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8005928:	3a01      	subs	r2, #1
 800592a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800592e:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005932:	070b      	lsls	r3, r1, #28
 8005934:	d514      	bpl.n	8005960 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005936:	4a7a      	ldr	r2, [pc, #488]	@ (8005b20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005938:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800593a:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800593e:	6920      	ldr	r0, [r4, #16]
 8005940:	071b      	lsls	r3, r3, #28
 8005942:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8005946:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800594a:	430b      	orrs	r3, r1
 800594c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005950:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8005954:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005956:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800595a:	430b      	orrs	r3, r1
 800595c:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005960:	4b6e      	ldr	r3, [pc, #440]	@ (8005b1c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005962:	4e6f      	ldr	r6, [pc, #444]	@ (8005b20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8005964:	2201      	movs	r2, #1
 8005966:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8005968:	f7fd ff68 	bl	800383c <HAL_GetTick>
 800596c:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800596e:	6833      	ldr	r3, [r6, #0]
 8005970:	009f      	lsls	r7, r3, #2
 8005972:	f140 8097 	bpl.w	8005aa4 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005976:	6823      	ldr	r3, [r4, #0]
 8005978:	0698      	lsls	r0, r3, #26
 800597a:	d534      	bpl.n	80059e6 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800597c:	2300      	movs	r3, #0
 800597e:	9301      	str	r3, [sp, #4]
 8005980:	4b67      	ldr	r3, [pc, #412]	@ (8005b20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8005982:	4d68      	ldr	r5, [pc, #416]	@ (8005b24 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8005984:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005986:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800598a:	641a      	str	r2, [r3, #64]	@ 0x40
 800598c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800598e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005992:	9301      	str	r3, [sp, #4]
 8005994:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8005996:	682b      	ldr	r3, [r5, #0]
 8005998:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800599c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800599e:	f7fd ff4d 	bl	800383c <HAL_GetTick>
 80059a2:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 80059a4:	682b      	ldr	r3, [r5, #0]
 80059a6:	05d8      	lsls	r0, r3, #23
 80059a8:	f140 8083 	bpl.w	8005ab2 <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80059ac:	4d5c      	ldr	r5, [pc, #368]	@ (8005b20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80059ae:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80059b0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80059b2:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 80059b6:	f040 8083 	bne.w	8005ac0 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80059ba:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80059bc:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 80059c0:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 80059c4:	4a56      	ldr	r2, [pc, #344]	@ (8005b20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 80059c6:	f040 809e 	bne.w	8005b06 <HAL_RCCEx_PeriphCLKConfig+0x232>
 80059ca:	6891      	ldr	r1, [r2, #8]
 80059cc:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 80059d0:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 80059d4:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 80059d8:	4301      	orrs	r1, r0
 80059da:	6091      	str	r1, [r2, #8]
 80059dc:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 80059de:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80059e2:	430b      	orrs	r3, r1
 80059e4:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80059e6:	6823      	ldr	r3, [r4, #0]
 80059e8:	06db      	lsls	r3, r3, #27
 80059ea:	f100 8090 	bmi.w	8005b0e <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 80059ee:	2000      	movs	r0, #0
 80059f0:	e04f      	b.n	8005a92 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 80059f2:	4b4a      	ldr	r3, [pc, #296]	@ (8005b1c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80059f4:	4e4a      	ldr	r6, [pc, #296]	@ (8005b20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 80059f6:	2200      	movs	r2, #0
 80059f8:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 80059fa:	f7fd ff1f 	bl	800383c <HAL_GetTick>
 80059fe:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005a00:	6833      	ldr	r3, [r6, #0]
 8005a02:	011f      	lsls	r7, r3, #4
 8005a04:	d43f      	bmi.n	8005a86 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005a06:	6821      	ldr	r1, [r4, #0]
 8005a08:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8005a0a:	bf41      	itttt	mi
 8005a0c:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005a10:	071b      	lslmi	r3, r3, #28
 8005a12:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005a16:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005a1a:	078a      	lsls	r2, r1, #30
 8005a1c:	d515      	bpl.n	8005a4a <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005a1e:	4a40      	ldr	r2, [pc, #256]	@ (8005b20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8005a20:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005a22:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8005a26:	6865      	ldr	r5, [r4, #4]
 8005a28:	061b      	lsls	r3, r3, #24
 8005a2a:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8005a2e:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8005a32:	4303      	orrs	r3, r0
 8005a34:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005a38:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8005a3c:	69e3      	ldr	r3, [r4, #28]
 8005a3e:	f020 001f 	bic.w	r0, r0, #31
 8005a42:	3b01      	subs	r3, #1
 8005a44:	4303      	orrs	r3, r0
 8005a46:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005a4a:	064b      	lsls	r3, r1, #25
 8005a4c:	d50a      	bpl.n	8005a64 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 8005a4e:	68e3      	ldr	r3, [r4, #12]
 8005a50:	6862      	ldr	r2, [r4, #4]
 8005a52:	061b      	lsls	r3, r3, #24
 8005a54:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005a58:	68a2      	ldr	r2, [r4, #8]
 8005a5a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8005a5e:	4a30      	ldr	r2, [pc, #192]	@ (8005b20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8005a60:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005a64:	4b2d      	ldr	r3, [pc, #180]	@ (8005b1c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005a66:	4e2e      	ldr	r6, [pc, #184]	@ (8005b20 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8005a68:	2201      	movs	r2, #1
 8005a6a:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8005a6c:	f7fd fee6 	bl	800383c <HAL_GetTick>
 8005a70:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005a72:	6833      	ldr	r3, [r6, #0]
 8005a74:	011f      	lsls	r7, r3, #4
 8005a76:	f53f af34 	bmi.w	80058e2 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8005a7a:	f7fd fedf 	bl	800383c <HAL_GetTick>
 8005a7e:	1b40      	subs	r0, r0, r5
 8005a80:	2802      	cmp	r0, #2
 8005a82:	d9f6      	bls.n	8005a72 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8005a84:	e004      	b.n	8005a90 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8005a86:	f7fd fed9 	bl	800383c <HAL_GetTick>
 8005a8a:	1b40      	subs	r0, r0, r5
 8005a8c:	2802      	cmp	r0, #2
 8005a8e:	d9b7      	bls.n	8005a00 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8005a90:	2003      	movs	r0, #3
}
 8005a92:	b003      	add	sp, #12
 8005a94:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8005a96:	f7fd fed1 	bl	800383c <HAL_GetTick>
 8005a9a:	1b80      	subs	r0, r0, r6
 8005a9c:	2802      	cmp	r0, #2
 8005a9e:	f67f af2b 	bls.w	80058f8 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8005aa2:	e7f5      	b.n	8005a90 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8005aa4:	f7fd feca 	bl	800383c <HAL_GetTick>
 8005aa8:	1b40      	subs	r0, r0, r5
 8005aaa:	2802      	cmp	r0, #2
 8005aac:	f67f af5f 	bls.w	800596e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8005ab0:	e7ee      	b.n	8005a90 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005ab2:	f7fd fec3 	bl	800383c <HAL_GetTick>
 8005ab6:	1b80      	subs	r0, r0, r6
 8005ab8:	2802      	cmp	r0, #2
 8005aba:	f67f af73 	bls.w	80059a4 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8005abe:	e7e7      	b.n	8005a90 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005ac0:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8005ac4:	4293      	cmp	r3, r2
 8005ac6:	f43f af78 	beq.w	80059ba <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005aca:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005acc:	4a13      	ldr	r2, [pc, #76]	@ (8005b1c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8005ace:	2101      	movs	r1, #1
 8005ad0:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005ad4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005ad8:	2100      	movs	r1, #0
 8005ada:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8005ade:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005ae0:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005ae2:	07d9      	lsls	r1, r3, #31
 8005ae4:	f57f af69 	bpl.w	80059ba <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8005ae8:	f7fd fea8 	bl	800383c <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005aec:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8005af0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005af2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005af4:	079a      	lsls	r2, r3, #30
 8005af6:	f53f af60 	bmi.w	80059ba <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005afa:	f7fd fe9f 	bl	800383c <HAL_GetTick>
 8005afe:	1b80      	subs	r0, r0, r6
 8005b00:	42b8      	cmp	r0, r7
 8005b02:	d9f6      	bls.n	8005af2 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8005b04:	e7c4      	b.n	8005a90 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005b06:	6891      	ldr	r1, [r2, #8]
 8005b08:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005b0c:	e765      	b.n	80059da <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005b0e:	4b06      	ldr	r3, [pc, #24]	@ (8005b28 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005b10:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8005b14:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8005b18:	e769      	b.n	80059ee <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8005b1a:	bf00      	nop
 8005b1c:	42470000 	.word	0x42470000
 8005b20:	40023800 	.word	0x40023800
 8005b24:	40007000 	.word	0x40007000
 8005b28:	42471000 	.word	0x42471000

08005b2c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8005b2c:	b538      	push	{r3, r4, r5, lr}
 8005b2e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8005b30:	4604      	mov	r4, r0
 8005b32:	b1c8      	cbz	r0, 8005b68 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8005b34:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8005b38:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005b3c:	b91b      	cbnz	r3, 8005b46 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005b3e:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8005b42:	f7fc fce3 	bl	800250c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005b46:	2302      	movs	r3, #2
 8005b48:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8005b4c:	1d21      	adds	r1, r4, #4
 8005b4e:	6820      	ldr	r0, [r4, #0]
 8005b50:	f000 fe43 	bl	80067da <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8005b54:	6862      	ldr	r2, [r4, #4]
 8005b56:	6820      	ldr	r0, [r4, #0]
 8005b58:	4629      	mov	r1, r5
 8005b5a:	f000 fe74 	bl	8006846 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005b5e:	2301      	movs	r3, #1
 8005b60:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8005b64:	2000      	movs	r0, #0
}
 8005b66:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005b68:	2001      	movs	r0, #1
 8005b6a:	e7fc      	b.n	8005b66 <HAL_SDRAM_Init+0x3a>

08005b6c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8005b6c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8005b6e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8005b72:	2b02      	cmp	r3, #2
{
 8005b74:	4605      	mov	r5, r0
 8005b76:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8005b78:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8005b7a:	d012      	beq.n	8005ba2 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8005b7c:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8005b80:	2c01      	cmp	r4, #1
 8005b82:	d10f      	bne.n	8005ba4 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005b84:	2302      	movs	r3, #2
 8005b86:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8005b8a:	6828      	ldr	r0, [r5, #0]
 8005b8c:	f000 fe91 	bl	80068b2 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8005b90:	6833      	ldr	r3, [r6, #0]
 8005b92:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8005b94:	bf06      	itte	eq
 8005b96:	2305      	moveq	r3, #5
 8005b98:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8005b9c:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8005ba0:	2000      	movs	r0, #0
}
 8005ba2:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8005ba4:	2001      	movs	r0, #1
 8005ba6:	e7fc      	b.n	8005ba2 <HAL_SDRAM_SendCommand+0x36>

08005ba8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8005ba8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005baa:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8005bae:	2b02      	cmp	r3, #2
{
 8005bb0:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005bb2:	b2d8      	uxtb	r0, r3
 8005bb4:	d00d      	beq.n	8005bd2 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8005bb6:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8005bba:	2b01      	cmp	r3, #1
 8005bbc:	b2dd      	uxtb	r5, r3
 8005bbe:	d109      	bne.n	8005bd4 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005bc0:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8005bc2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005bc4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8005bc8:	f000 fe97 	bl	80068fa <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005bcc:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8005bd0:	2000      	movs	r0, #0
}
 8005bd2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005bd4:	2001      	movs	r0, #1
 8005bd6:	e7fc      	b.n	8005bd2 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08005bd8 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8005bd8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005bdc:	461f      	mov	r7, r3
 8005bde:	4689      	mov	r9, r1
 8005be0:	4690      	mov	r8, r2
 8005be2:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8005be4:	f7fd fe2a 	bl	800383c <HAL_GetTick>
 8005be8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8005bea:	443d      	add	r5, r7
 8005bec:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8005bee:	f7fd fe25 	bl	800383c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005bf2:	4b26      	ldr	r3, [pc, #152]	@ (8005c8c <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8005bf4:	681e      	ldr	r6, [r3, #0]
 8005bf6:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8005bfa:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8005bfc:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005bfe:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005c00:	6822      	ldr	r2, [r4, #0]
 8005c02:	6893      	ldr	r3, [r2, #8]
 8005c04:	ea39 0303 	bics.w	r3, r9, r3
 8005c08:	bf0c      	ite	eq
 8005c0a:	2301      	moveq	r3, #1
 8005c0c:	2300      	movne	r3, #0
 8005c0e:	4543      	cmp	r3, r8
 8005c10:	d101      	bne.n	8005c16 <SPI_WaitFlagStateUntilTimeout+0x3e>
        count--;
      }
    }
  }

  return HAL_OK;
 8005c12:	2000      	movs	r0, #0
 8005c14:	e02e      	b.n	8005c74 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 8005c16:	1c7b      	adds	r3, r7, #1
 8005c18:	d0f3      	beq.n	8005c02 <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8005c1a:	f7fd fe0f 	bl	800383c <HAL_GetTick>
 8005c1e:	eba0 000a 	sub.w	r0, r0, sl
 8005c22:	42a8      	cmp	r0, r5
 8005c24:	d329      	bcc.n	8005c7a <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005c26:	6823      	ldr	r3, [r4, #0]
 8005c28:	685a      	ldr	r2, [r3, #4]
 8005c2a:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005c2e:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005c30:	6862      	ldr	r2, [r4, #4]
 8005c32:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8005c36:	d10a      	bne.n	8005c4e <SPI_WaitFlagStateUntilTimeout+0x76>
 8005c38:	68a2      	ldr	r2, [r4, #8]
 8005c3a:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8005c3e:	d002      	beq.n	8005c46 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005c40:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8005c44:	d103      	bne.n	8005c4e <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 8005c46:	681a      	ldr	r2, [r3, #0]
 8005c48:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005c4c:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005c4e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005c50:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8005c54:	d107      	bne.n	8005c66 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 8005c56:	681a      	ldr	r2, [r3, #0]
 8005c58:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005c5c:	601a      	str	r2, [r3, #0]
 8005c5e:	681a      	ldr	r2, [r3, #0]
 8005c60:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005c64:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8005c66:	2301      	movs	r3, #1
 8005c68:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8005c6c:	2300      	movs	r3, #0
 8005c6e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8005c72:	2003      	movs	r0, #3
}
 8005c74:	b002      	add	sp, #8
 8005c76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 8005c7a:	9b01      	ldr	r3, [sp, #4]
 8005c7c:	b11b      	cbz	r3, 8005c86 <SPI_WaitFlagStateUntilTimeout+0xae>
        count--;
 8005c7e:	9b01      	ldr	r3, [sp, #4]
 8005c80:	3b01      	subs	r3, #1
 8005c82:	9301      	str	r3, [sp, #4]
 8005c84:	e7bc      	b.n	8005c00 <SPI_WaitFlagStateUntilTimeout+0x28>
        tmp_timeout = 0U;
 8005c86:	461d      	mov	r5, r3
 8005c88:	e7ba      	b.n	8005c00 <SPI_WaitFlagStateUntilTimeout+0x28>
 8005c8a:	bf00      	nop
 8005c8c:	200000cc 	.word	0x200000cc

08005c90 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005c90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c92:	b085      	sub	sp, #20
  __IO uint32_t count;

  /* Wait until TXE flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005c94:	460b      	mov	r3, r1
 8005c96:	9200      	str	r2, [sp, #0]
{
 8005c98:	460e      	mov	r6, r1
 8005c9a:	4617      	mov	r7, r2
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005c9c:	2102      	movs	r1, #2
 8005c9e:	2201      	movs	r2, #1
{
 8005ca0:	4604      	mov	r4, r0
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005ca2:	f7ff ff99 	bl	8005bd8 <SPI_WaitFlagStateUntilTimeout>
 8005ca6:	4605      	mov	r5, r0
 8005ca8:	b128      	cbz	r0, 8005cb6 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005caa:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005cac:	f043 0320 	orr.w	r3, r3, #32
 8005cb0:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 8005cb2:	2503      	movs	r5, #3
 8005cb4:	e015      	b.n	8005ce2 <SPI_EndRxTxTransaction+0x52>
  count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005cb6:	4b12      	ldr	r3, [pc, #72]	@ (8005d00 <SPI_EndRxTxTransaction+0x70>)
 8005cb8:	6818      	ldr	r0, [r3, #0]
 8005cba:	4b12      	ldr	r3, [pc, #72]	@ (8005d04 <SPI_EndRxTxTransaction+0x74>)
 8005cbc:	fbb0 f0f3 	udiv	r0, r0, r3
 8005cc0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8005cc4:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005cc6:	6863      	ldr	r3, [r4, #4]
  count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005cc8:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005cca:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005cce:	d10b      	bne.n	8005ce8 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005cd0:	9700      	str	r7, [sp, #0]
 8005cd2:	4633      	mov	r3, r6
 8005cd4:	462a      	mov	r2, r5
 8005cd6:	2180      	movs	r1, #128	@ 0x80
 8005cd8:	4620      	mov	r0, r4
 8005cda:	f7ff ff7d 	bl	8005bd8 <SPI_WaitFlagStateUntilTimeout>
 8005cde:	2800      	cmp	r0, #0
 8005ce0:	d1e3      	bne.n	8005caa <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005ce2:	4628      	mov	r0, r5
 8005ce4:	b005      	add	sp, #20
 8005ce6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8005ce8:	9b03      	ldr	r3, [sp, #12]
 8005cea:	2b00      	cmp	r3, #0
 8005cec:	d0f9      	beq.n	8005ce2 <SPI_EndRxTxTransaction+0x52>
      count--;
 8005cee:	9b03      	ldr	r3, [sp, #12]
 8005cf0:	3b01      	subs	r3, #1
 8005cf2:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005cf4:	6823      	ldr	r3, [r4, #0]
 8005cf6:	689b      	ldr	r3, [r3, #8]
 8005cf8:	061b      	lsls	r3, r3, #24
 8005cfa:	d4f5      	bmi.n	8005ce8 <SPI_EndRxTxTransaction+0x58>
 8005cfc:	e7f1      	b.n	8005ce2 <SPI_EndRxTxTransaction+0x52>
 8005cfe:	bf00      	nop
 8005d00:	200000cc 	.word	0x200000cc
 8005d04:	016e3600 	.word	0x016e3600

08005d08 <SPI_EndRxTransaction>:
{
 8005d08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005d0a:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d0c:	6841      	ldr	r1, [r0, #4]
 8005d0e:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 8005d12:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d14:	d008      	beq.n	8005d28 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005d16:	9200      	str	r2, [sp, #0]
 8005d18:	2101      	movs	r1, #1
 8005d1a:	2200      	movs	r2, #0
 8005d1c:	f7ff ff5c 	bl	8005bd8 <SPI_WaitFlagStateUntilTimeout>
 8005d20:	b9d0      	cbnz	r0, 8005d58 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 8005d22:	2000      	movs	r0, #0
}
 8005d24:	b003      	add	sp, #12
 8005d26:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d28:	6881      	ldr	r1, [r0, #8]
 8005d2a:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8005d2e:	d002      	beq.n	8005d36 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005d30:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8005d34:	d107      	bne.n	8005d46 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 8005d36:	6825      	ldr	r5, [r4, #0]
 8005d38:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005d3a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8005d3e:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8005d42:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005d44:	d004      	beq.n	8005d50 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005d46:	9200      	str	r2, [sp, #0]
 8005d48:	2180      	movs	r1, #128	@ 0x80
 8005d4a:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005d4c:	4620      	mov	r0, r4
 8005d4e:	e7e5      	b.n	8005d1c <SPI_EndRxTransaction+0x14>
 8005d50:	9200      	str	r2, [sp, #0]
 8005d52:	2101      	movs	r1, #1
 8005d54:	2200      	movs	r2, #0
 8005d56:	e7f9      	b.n	8005d4c <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005d58:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005d5a:	f043 0320 	orr.w	r3, r3, #32
 8005d5e:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 8005d60:	2003      	movs	r0, #3
 8005d62:	e7df      	b.n	8005d24 <SPI_EndRxTransaction+0x1c>

08005d64 <HAL_SPI_Init>:
{
 8005d64:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8005d66:	4604      	mov	r4, r0
 8005d68:	2800      	cmp	r0, #0
 8005d6a:	d055      	beq.n	8005e18 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005d6c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	d14e      	bne.n	8005e10 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005d72:	6842      	ldr	r2, [r0, #4]
 8005d74:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8005d78:	d000      	beq.n	8005d7c <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005d7a:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005d7c:	2300      	movs	r3, #0
 8005d7e:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8005d80:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8005d84:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005d88:	b923      	cbnz	r3, 8005d94 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8005d8a:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 8005d8e:	4620      	mov	r0, r4
 8005d90:	f7fc fb50 	bl	8002434 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8005d94:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005d96:	68a0      	ldr	r0, [r4, #8]
 8005d98:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8005d9a:	2302      	movs	r3, #2
 8005d9c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 8005da0:	680b      	ldr	r3, [r1, #0]
 8005da2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005da6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005da8:	6863      	ldr	r3, [r4, #4]
 8005daa:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 8005dae:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 8005db2:	4303      	orrs	r3, r0
 8005db4:	68e0      	ldr	r0, [r4, #12]
 8005db6:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8005dba:	4303      	orrs	r3, r0
 8005dbc:	6920      	ldr	r0, [r4, #16]
 8005dbe:	f000 0002 	and.w	r0, r0, #2
 8005dc2:	4303      	orrs	r3, r0
 8005dc4:	6960      	ldr	r0, [r4, #20]
 8005dc6:	f000 0001 	and.w	r0, r0, #1
 8005dca:	4303      	orrs	r3, r0
 8005dcc:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8005dd0:	4303      	orrs	r3, r0
 8005dd2:	69e0      	ldr	r0, [r4, #28]
 8005dd4:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8005dd8:	4303      	orrs	r3, r0
 8005dda:	6a20      	ldr	r0, [r4, #32]
 8005ddc:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8005de0:	4303      	orrs	r3, r0
 8005de2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005de4:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8005de8:	4303      	orrs	r3, r0
 8005dea:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8005dec:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005dee:	0c12      	lsrs	r2, r2, #16
 8005df0:	f003 0310 	and.w	r3, r3, #16
 8005df4:	f002 0204 	and.w	r2, r2, #4
 8005df8:	431a      	orrs	r2, r3
 8005dfa:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005dfc:	69cb      	ldr	r3, [r1, #28]
 8005dfe:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005e02:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005e04:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8005e06:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005e08:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005e0a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8005e0e:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005e10:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005e12:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005e16:	e7b1      	b.n	8005d7c <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8005e18:	2001      	movs	r0, #1
 8005e1a:	e7f8      	b.n	8005e0e <HAL_SPI_Init+0xaa>

08005e1c <HAL_SPI_Transmit>:
{
 8005e1c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005e20:	4604      	mov	r4, r0
 8005e22:	461f      	mov	r7, r3
 8005e24:	460d      	mov	r5, r1
 8005e26:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 8005e28:	f7fd fd08 	bl	800383c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8005e2c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8005e30:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005e32:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005e34:	b2d8      	uxtb	r0, r3
 8005e36:	f040 809f 	bne.w	8005f78 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 8005e3a:	2d00      	cmp	r5, #0
 8005e3c:	d074      	beq.n	8005f28 <HAL_SPI_Transmit+0x10c>
 8005e3e:	f1b8 0f00 	cmp.w	r8, #0
 8005e42:	d071      	beq.n	8005f28 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 8005e44:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8005e48:	2b01      	cmp	r3, #1
 8005e4a:	f000 8095 	beq.w	8005f78 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005e4e:	2303      	movs	r3, #3
 8005e50:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005e54:	2300      	movs	r3, #0
 8005e56:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 8005e58:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 8005e5c:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005e60:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8005e62:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8005e64:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005e66:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 8005e68:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 8005e6a:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005e6e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8005e72:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8005e74:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005e78:	d107      	bne.n	8005e8a <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 8005e7a:	6833      	ldr	r3, [r6, #0]
 8005e7c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005e80:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8005e82:	6833      	ldr	r3, [r6, #0]
 8005e84:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005e88:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005e8a:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005e8c:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005e8e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8005e90:	bf5e      	ittt	pl
 8005e92:	6833      	ldrpl	r3, [r6, #0]
 8005e94:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8005e98:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005e9a:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005e9e:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005ea0:	d145      	bne.n	8005f2e <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005ea2:	b113      	cbz	r3, 8005eaa <HAL_SPI_Transmit+0x8e>
 8005ea4:	f1b8 0f01 	cmp.w	r8, #1
 8005ea8:	d107      	bne.n	8005eba <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005eaa:	f835 3b02 	ldrh.w	r3, [r5], #2
 8005eae:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005eb0:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8005eb2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005eb4:	3b01      	subs	r3, #1
 8005eb6:	b29b      	uxth	r3, r3
 8005eb8:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8005eba:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005ebc:	b29b      	uxth	r3, r3
 8005ebe:	b9d3      	cbnz	r3, 8005ef6 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005ec0:	464a      	mov	r2, r9
 8005ec2:	4639      	mov	r1, r7
 8005ec4:	4620      	mov	r0, r4
 8005ec6:	f7ff fee3 	bl	8005c90 <SPI_EndRxTxTransaction>
 8005eca:	2800      	cmp	r0, #0
 8005ecc:	d151      	bne.n	8005f72 <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005ece:	68a3      	ldr	r3, [r4, #8]
 8005ed0:	b933      	cbnz	r3, 8005ee0 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005ed2:	9301      	str	r3, [sp, #4]
 8005ed4:	6823      	ldr	r3, [r4, #0]
 8005ed6:	68da      	ldr	r2, [r3, #12]
 8005ed8:	9201      	str	r2, [sp, #4]
 8005eda:	689b      	ldr	r3, [r3, #8]
 8005edc:	9301      	str	r3, [sp, #4]
 8005ede:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8005ee0:	2301      	movs	r3, #1
 8005ee2:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005ee6:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8005ee8:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005eea:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8005eec:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005ef0:	bf18      	it	ne
 8005ef2:	2001      	movne	r0, #1
 8005ef4:	e018      	b.n	8005f28 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005ef6:	6822      	ldr	r2, [r4, #0]
 8005ef8:	6893      	ldr	r3, [r2, #8]
 8005efa:	0798      	lsls	r0, r3, #30
 8005efc:	d505      	bpl.n	8005f0a <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005efe:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005f00:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005f04:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005f06:	6323      	str	r3, [r4, #48]	@ 0x30
 8005f08:	e7d3      	b.n	8005eb2 <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005f0a:	f7fd fc97 	bl	800383c <HAL_GetTick>
 8005f0e:	eba0 0009 	sub.w	r0, r0, r9
 8005f12:	42b8      	cmp	r0, r7
 8005f14:	d3d1      	bcc.n	8005eba <HAL_SPI_Transmit+0x9e>
 8005f16:	1c79      	adds	r1, r7, #1
 8005f18:	d0cf      	beq.n	8005eba <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 8005f1a:	2301      	movs	r3, #1
 8005f1c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8005f20:	2300      	movs	r3, #0
 8005f22:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8005f26:	2003      	movs	r0, #3
}
 8005f28:	b003      	add	sp, #12
 8005f2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005f2e:	b113      	cbz	r3, 8005f36 <HAL_SPI_Transmit+0x11a>
 8005f30:	f1b8 0f01 	cmp.w	r8, #1
 8005f34:	d108      	bne.n	8005f48 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005f36:	782b      	ldrb	r3, [r5, #0]
 8005f38:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005f3a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005f3c:	3301      	adds	r3, #1
 8005f3e:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8005f40:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005f42:	3b01      	subs	r3, #1
 8005f44:	b29b      	uxth	r3, r3
 8005f46:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8005f48:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005f4a:	b29b      	uxth	r3, r3
 8005f4c:	2b00      	cmp	r3, #0
 8005f4e:	d0b7      	beq.n	8005ec0 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005f50:	6823      	ldr	r3, [r4, #0]
 8005f52:	689a      	ldr	r2, [r3, #8]
 8005f54:	0792      	lsls	r2, r2, #30
 8005f56:	d503      	bpl.n	8005f60 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005f58:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8005f5a:	7812      	ldrb	r2, [r2, #0]
 8005f5c:	731a      	strb	r2, [r3, #12]
 8005f5e:	e7ec      	b.n	8005f3a <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005f60:	f7fd fc6c 	bl	800383c <HAL_GetTick>
 8005f64:	eba0 0009 	sub.w	r0, r0, r9
 8005f68:	42b8      	cmp	r0, r7
 8005f6a:	d3ed      	bcc.n	8005f48 <HAL_SPI_Transmit+0x12c>
 8005f6c:	1c7b      	adds	r3, r7, #1
 8005f6e:	d0eb      	beq.n	8005f48 <HAL_SPI_Transmit+0x12c>
 8005f70:	e7d3      	b.n	8005f1a <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005f72:	2320      	movs	r3, #32
 8005f74:	6563      	str	r3, [r4, #84]	@ 0x54
 8005f76:	e7aa      	b.n	8005ece <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 8005f78:	2002      	movs	r0, #2
 8005f7a:	e7d5      	b.n	8005f28 <HAL_SPI_Transmit+0x10c>

08005f7c <HAL_SPI_TransmitReceive>:
{
 8005f7c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005f80:	4604      	mov	r4, r0
 8005f82:	460d      	mov	r5, r1
 8005f84:	4691      	mov	r9, r2
 8005f86:	461e      	mov	r6, r3
 8005f88:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 8005f8c:	f7fd fc56 	bl	800383c <HAL_GetTick>
  tmp_state           = hspi->State;
 8005f90:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8005f94:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005f96:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005f98:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8005f9a:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005f9c:	d00a      	beq.n	8005fb4 <HAL_SPI_TransmitReceive+0x38>
 8005f9e:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8005fa2:	f040 80e5 	bne.w	8006170 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) &&
 8005fa6:	68a3      	ldr	r3, [r4, #8]
 8005fa8:	2b00      	cmp	r3, #0
 8005faa:	f040 80e1 	bne.w	8006170 <HAL_SPI_TransmitReceive+0x1f4>
 8005fae:	2904      	cmp	r1, #4
 8005fb0:	f040 80de 	bne.w	8006170 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005fb4:	2d00      	cmp	r5, #0
 8005fb6:	d04b      	beq.n	8006050 <HAL_SPI_TransmitReceive+0xd4>
 8005fb8:	f1b9 0f00 	cmp.w	r9, #0
 8005fbc:	d048      	beq.n	8006050 <HAL_SPI_TransmitReceive+0xd4>
 8005fbe:	2e00      	cmp	r6, #0
 8005fc0:	d046      	beq.n	8006050 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 8005fc2:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8005fc6:	2b01      	cmp	r3, #1
 8005fc8:	f000 80d2 	beq.w	8006170 <HAL_SPI_TransmitReceive+0x1f4>
 8005fcc:	2301      	movs	r3, #1
 8005fce:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005fd2:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005fd6:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005fda:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005fdc:	bf1c      	itt	ne
 8005fde:	2305      	movne	r3, #5
 8005fe0:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005fe4:	2300      	movs	r3, #0
 8005fe6:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8005fe8:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005fec:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8005fee:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8005ff0:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005ff2:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8005ff4:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005ff6:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8005ff8:	bf58      	it	pl
 8005ffa:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8005ffc:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 8005ffe:	bf58      	it	pl
 8006000:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8006004:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8006006:	bf58      	it	pl
 8006008:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800600a:	68e1      	ldr	r1, [r4, #12]
 800600c:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8006010:	d155      	bne.n	80060be <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006012:	b10a      	cbz	r2, 8006018 <HAL_SPI_TransmitReceive+0x9c>
 8006014:	2e01      	cmp	r6, #1
 8006016:	d107      	bne.n	8006028 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006018:	f835 2b02 	ldrh.w	r2, [r5], #2
 800601c:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800601e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006020:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006022:	3b01      	subs	r3, #1
 8006024:	b29b      	uxth	r3, r3
 8006026:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006028:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800602a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800602c:	b29b      	uxth	r3, r3
 800602e:	b98b      	cbnz	r3, 8006054 <HAL_SPI_TransmitReceive+0xd8>
 8006030:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006032:	b29b      	uxth	r3, r3
 8006034:	b973      	cbnz	r3, 8006054 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006036:	463a      	mov	r2, r7
 8006038:	4641      	mov	r1, r8
 800603a:	4620      	mov	r0, r4
 800603c:	f7ff fe28 	bl	8005c90 <SPI_EndRxTxTransaction>
 8006040:	2800      	cmp	r0, #0
 8006042:	f000 8081 	beq.w	8006148 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006046:	2320      	movs	r3, #32
 8006048:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800604a:	2300      	movs	r3, #0
 800604c:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 8006050:	2001      	movs	r0, #1
 8006052:	e031      	b.n	80060b8 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006054:	6821      	ldr	r1, [r4, #0]
 8006056:	688b      	ldr	r3, [r1, #8]
 8006058:	079a      	lsls	r2, r3, #30
 800605a:	d50d      	bpl.n	8006078 <HAL_SPI_TransmitReceive+0xfc>
 800605c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800605e:	b29b      	uxth	r3, r3
 8006060:	b153      	cbz	r3, 8006078 <HAL_SPI_TransmitReceive+0xfc>
 8006062:	b145      	cbz	r5, 8006076 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006064:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006066:	f833 2b02 	ldrh.w	r2, [r3], #2
 800606a:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800606c:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800606e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006070:	3b01      	subs	r3, #1
 8006072:	b29b      	uxth	r3, r3
 8006074:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 8006076:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006078:	688a      	ldr	r2, [r1, #8]
 800607a:	f012 0201 	ands.w	r2, r2, #1
 800607e:	d00c      	beq.n	800609a <HAL_SPI_TransmitReceive+0x11e>
 8006080:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006082:	b29b      	uxth	r3, r3
 8006084:	b14b      	cbz	r3, 800609a <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006086:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006088:	68c9      	ldr	r1, [r1, #12]
 800608a:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800608e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006090:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006092:	3b01      	subs	r3, #1
 8006094:	b29b      	uxth	r3, r3
 8006096:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006098:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800609a:	f7fd fbcf 	bl	800383c <HAL_GetTick>
 800609e:	1bc0      	subs	r0, r0, r7
 80060a0:	4540      	cmp	r0, r8
 80060a2:	d3c2      	bcc.n	800602a <HAL_SPI_TransmitReceive+0xae>
 80060a4:	f1b8 3fff 	cmp.w	r8, #4294967295
 80060a8:	d0bf      	beq.n	800602a <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 80060aa:	2301      	movs	r3, #1
 80060ac:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80060b0:	2300      	movs	r3, #0
 80060b2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 80060b6:	2003      	movs	r0, #3
}
 80060b8:	b003      	add	sp, #12
 80060ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80060be:	b10a      	cbz	r2, 80060c4 <HAL_SPI_TransmitReceive+0x148>
 80060c0:	2e01      	cmp	r6, #1
 80060c2:	d108      	bne.n	80060d6 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80060c4:	782a      	ldrb	r2, [r5, #0]
 80060c6:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80060c8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80060ca:	3301      	adds	r3, #1
 80060cc:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 80060ce:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80060d0:	3b01      	subs	r3, #1
 80060d2:	b29b      	uxth	r3, r3
 80060d4:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 80060d6:	2501      	movs	r5, #1
 80060d8:	e02d      	b.n	8006136 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80060da:	6822      	ldr	r2, [r4, #0]
 80060dc:	6893      	ldr	r3, [r2, #8]
 80060de:	079b      	lsls	r3, r3, #30
 80060e0:	d50e      	bpl.n	8006100 <HAL_SPI_TransmitReceive+0x184>
 80060e2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80060e4:	b29b      	uxth	r3, r3
 80060e6:	b15b      	cbz	r3, 8006100 <HAL_SPI_TransmitReceive+0x184>
 80060e8:	b14d      	cbz	r5, 80060fe <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 80060ea:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80060ec:	781b      	ldrb	r3, [r3, #0]
 80060ee:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 80060f0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80060f2:	3301      	adds	r3, #1
 80060f4:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80060f6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80060f8:	3b01      	subs	r3, #1
 80060fa:	b29b      	uxth	r3, r3
 80060fc:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 80060fe:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006100:	6822      	ldr	r2, [r4, #0]
 8006102:	6891      	ldr	r1, [r2, #8]
 8006104:	f011 0101 	ands.w	r1, r1, #1
 8006108:	d00d      	beq.n	8006126 <HAL_SPI_TransmitReceive+0x1aa>
 800610a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800610c:	b29b      	uxth	r3, r3
 800610e:	b153      	cbz	r3, 8006126 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006110:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006112:	68d2      	ldr	r2, [r2, #12]
 8006114:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006116:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006118:	3301      	adds	r3, #1
 800611a:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800611c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800611e:	3b01      	subs	r3, #1
 8006120:	b29b      	uxth	r3, r3
 8006122:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006124:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006126:	f7fd fb89 	bl	800383c <HAL_GetTick>
 800612a:	1bc0      	subs	r0, r0, r7
 800612c:	4540      	cmp	r0, r8
 800612e:	d302      	bcc.n	8006136 <HAL_SPI_TransmitReceive+0x1ba>
 8006130:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006134:	d1b9      	bne.n	80060aa <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006136:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006138:	b29b      	uxth	r3, r3
 800613a:	2b00      	cmp	r3, #0
 800613c:	d1cd      	bne.n	80060da <HAL_SPI_TransmitReceive+0x15e>
 800613e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006140:	b29b      	uxth	r3, r3
 8006142:	2b00      	cmp	r3, #0
 8006144:	d1c9      	bne.n	80060da <HAL_SPI_TransmitReceive+0x15e>
 8006146:	e776      	b.n	8006036 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006148:	68a3      	ldr	r3, [r4, #8]
 800614a:	b933      	cbnz	r3, 800615a <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800614c:	9301      	str	r3, [sp, #4]
 800614e:	6823      	ldr	r3, [r4, #0]
 8006150:	68da      	ldr	r2, [r3, #12]
 8006152:	9201      	str	r2, [sp, #4]
 8006154:	689b      	ldr	r3, [r3, #8]
 8006156:	9301      	str	r3, [sp, #4]
 8006158:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800615a:	2301      	movs	r3, #1
 800615c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006160:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8006162:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006164:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8006166:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800616a:	bf18      	it	ne
 800616c:	2001      	movne	r0, #1
 800616e:	e7a3      	b.n	80060b8 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 8006170:	2002      	movs	r0, #2
 8006172:	e7a1      	b.n	80060b8 <HAL_SPI_TransmitReceive+0x13c>

08006174 <HAL_SPI_Receive>:
{
 8006174:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006178:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 800617a:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 800617e:	2b01      	cmp	r3, #1
{
 8006180:	4604      	mov	r4, r0
 8006182:	4689      	mov	r9, r1
 8006184:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 8006186:	b2dd      	uxtb	r5, r3
 8006188:	d004      	beq.n	8006194 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 800618a:	2502      	movs	r5, #2
}
 800618c:	4628      	mov	r0, r5
 800618e:	b003      	add	sp, #12
 8006190:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((pData == NULL) || (Size == 0U))
 8006194:	2900      	cmp	r1, #0
 8006196:	d0f9      	beq.n	800618c <HAL_SPI_Receive+0x18>
 8006198:	2a00      	cmp	r2, #0
 800619a:	d0f7      	beq.n	800618c <HAL_SPI_Receive+0x18>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800619c:	6843      	ldr	r3, [r0, #4]
 800619e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80061a2:	d10b      	bne.n	80061bc <HAL_SPI_Receive+0x48>
 80061a4:	6883      	ldr	r3, [r0, #8]
 80061a6:	b94b      	cbnz	r3, 80061bc <HAL_SPI_Receive+0x48>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80061a8:	2304      	movs	r3, #4
 80061aa:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80061ae:	4613      	mov	r3, r2
 80061b0:	9600      	str	r6, [sp, #0]
 80061b2:	460a      	mov	r2, r1
 80061b4:	f7ff fee2 	bl	8005f7c <HAL_SPI_TransmitReceive>
 80061b8:	4605      	mov	r5, r0
 80061ba:	e7e7      	b.n	800618c <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 80061bc:	f7fd fb3e 	bl	800383c <HAL_GetTick>
  __HAL_LOCK(hspi);
 80061c0:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80061c4:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80061c6:	4680      	mov	r8, r0
  __HAL_LOCK(hspi);
 80061c8:	d0df      	beq.n	800618a <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80061ca:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80061cc:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 80061d0:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80061d2:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 80061d4:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80061d8:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80061dc:	f04f 0304 	mov.w	r3, #4
 80061e0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 80061e4:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80061e8:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 80061ea:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80061ec:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 80061ee:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80061f0:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 80061f2:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 80061f4:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80061f6:	d107      	bne.n	8006208 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 80061f8:	681a      	ldr	r2, [r3, #0]
 80061fa:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80061fe:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006200:	681a      	ldr	r2, [r3, #0]
 8006202:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006206:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006208:	681a      	ldr	r2, [r3, #0]
 800620a:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800620c:	bf5e      	ittt	pl
 800620e:	681a      	ldrpl	r2, [r3, #0]
 8006210:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8006214:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006216:	68e3      	ldr	r3, [r4, #12]
 8006218:	b1f3      	cbz	r3, 8006258 <HAL_SPI_Receive+0xe4>
    while (hspi->RxXferCount > 0U)
 800621a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800621c:	b29b      	uxth	r3, r3
 800621e:	b1fb      	cbz	r3, 8006260 <HAL_SPI_Receive+0xec>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006220:	6823      	ldr	r3, [r4, #0]
 8006222:	689a      	ldr	r2, [r3, #8]
 8006224:	07d2      	lsls	r2, r2, #31
 8006226:	d53c      	bpl.n	80062a2 <HAL_SPI_Receive+0x12e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006228:	68da      	ldr	r2, [r3, #12]
 800622a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800622c:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006230:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006232:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006234:	3b01      	subs	r3, #1
 8006236:	b29b      	uxth	r3, r3
 8006238:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800623a:	e7ee      	b.n	800621a <HAL_SPI_Receive+0xa6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800623c:	6823      	ldr	r3, [r4, #0]
 800623e:	689a      	ldr	r2, [r3, #8]
 8006240:	07d0      	lsls	r0, r2, #31
 8006242:	d51e      	bpl.n	8006282 <HAL_SPI_Receive+0x10e>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006244:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8006246:	7b1b      	ldrb	r3, [r3, #12]
 8006248:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800624a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800624c:	3301      	adds	r3, #1
 800624e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006250:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006252:	3b01      	subs	r3, #1
 8006254:	b29b      	uxth	r3, r3
 8006256:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8006258:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800625a:	b29b      	uxth	r3, r3
 800625c:	2b00      	cmp	r3, #0
 800625e:	d1ed      	bne.n	800623c <HAL_SPI_Receive+0xc8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006260:	4642      	mov	r2, r8
 8006262:	4631      	mov	r1, r6
 8006264:	4620      	mov	r0, r4
 8006266:	f7ff fd4f 	bl	8005d08 <SPI_EndRxTransaction>
 800626a:	bb18      	cbnz	r0, 80062b4 <HAL_SPI_Receive+0x140>
  hspi->State = HAL_SPI_STATE_READY;
 800626c:	2301      	movs	r3, #1
 800626e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006272:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8006274:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006276:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 8006278:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800627c:	bf18      	it	ne
 800627e:	2501      	movne	r5, #1
 8006280:	e784      	b.n	800618c <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006282:	f7fd fadb 	bl	800383c <HAL_GetTick>
 8006286:	eba0 0008 	sub.w	r0, r0, r8
 800628a:	42b0      	cmp	r0, r6
 800628c:	d3e4      	bcc.n	8006258 <HAL_SPI_Receive+0xe4>
 800628e:	1c71      	adds	r1, r6, #1
 8006290:	d0e2      	beq.n	8006258 <HAL_SPI_Receive+0xe4>
          hspi->State = HAL_SPI_STATE_READY;
 8006292:	2301      	movs	r3, #1
 8006294:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006298:	2300      	movs	r3, #0
 800629a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800629e:	2503      	movs	r5, #3
 80062a0:	e774      	b.n	800618c <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80062a2:	f7fd facb 	bl	800383c <HAL_GetTick>
 80062a6:	eba0 0008 	sub.w	r0, r0, r8
 80062aa:	42b0      	cmp	r0, r6
 80062ac:	d3b5      	bcc.n	800621a <HAL_SPI_Receive+0xa6>
 80062ae:	1c73      	adds	r3, r6, #1
 80062b0:	d0b3      	beq.n	800621a <HAL_SPI_Receive+0xa6>
 80062b2:	e7ee      	b.n	8006292 <HAL_SPI_Receive+0x11e>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80062b4:	2320      	movs	r3, #32
 80062b6:	6563      	str	r3, [r4, #84]	@ 0x54
 80062b8:	e7d8      	b.n	800626c <HAL_SPI_Receive+0xf8>

080062ba <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80062ba:	4770      	bx	lr

080062bc <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80062bc:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80062c0:	2b01      	cmp	r3, #1
 80062c2:	d130      	bne.n	8006326 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80062c4:	2302      	movs	r3, #2
 80062c6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80062ca:	6803      	ldr	r3, [r0, #0]
 80062cc:	68da      	ldr	r2, [r3, #12]
 80062ce:	f042 0201 	orr.w	r2, r2, #1
 80062d2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80062d4:	4a15      	ldr	r2, [pc, #84]	@ (800632c <HAL_TIM_Base_Start_IT+0x70>)
 80062d6:	4293      	cmp	r3, r2
 80062d8:	d01a      	beq.n	8006310 <HAL_TIM_Base_Start_IT+0x54>
 80062da:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80062de:	d017      	beq.n	8006310 <HAL_TIM_Base_Start_IT+0x54>
 80062e0:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80062e4:	4293      	cmp	r3, r2
 80062e6:	d013      	beq.n	8006310 <HAL_TIM_Base_Start_IT+0x54>
 80062e8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80062ec:	4293      	cmp	r3, r2
 80062ee:	d00f      	beq.n	8006310 <HAL_TIM_Base_Start_IT+0x54>
 80062f0:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80062f4:	4293      	cmp	r3, r2
 80062f6:	d00b      	beq.n	8006310 <HAL_TIM_Base_Start_IT+0x54>
 80062f8:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80062fc:	4293      	cmp	r3, r2
 80062fe:	d007      	beq.n	8006310 <HAL_TIM_Base_Start_IT+0x54>
 8006300:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006304:	4293      	cmp	r3, r2
 8006306:	d003      	beq.n	8006310 <HAL_TIM_Base_Start_IT+0x54>
 8006308:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800630c:	4293      	cmp	r3, r2
 800630e:	d104      	bne.n	800631a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006310:	689a      	ldr	r2, [r3, #8]
 8006312:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006316:	2a06      	cmp	r2, #6
 8006318:	d003      	beq.n	8006322 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 800631a:	681a      	ldr	r2, [r3, #0]
 800631c:	f042 0201 	orr.w	r2, r2, #1
 8006320:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006322:	2000      	movs	r0, #0
 8006324:	4770      	bx	lr
    return HAL_ERROR;
 8006326:	2001      	movs	r0, #1
}
 8006328:	4770      	bx	lr
 800632a:	bf00      	nop
 800632c:	40010000 	.word	0x40010000

08006330 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006330:	4770      	bx	lr

08006332 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006332:	4770      	bx	lr

08006334 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006334:	4770      	bx	lr

08006336 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006336:	4770      	bx	lr

08006338 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8006338:	6803      	ldr	r3, [r0, #0]
{
 800633a:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 800633c:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 800633e:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006340:	07b1      	lsls	r1, r6, #30
{
 8006342:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006344:	d50d      	bpl.n	8006362 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8006346:	07aa      	lsls	r2, r5, #30
 8006348:	d50b      	bpl.n	8006362 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800634a:	f06f 0202 	mvn.w	r2, #2
 800634e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006350:	2201      	movs	r2, #1
 8006352:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006354:	699b      	ldr	r3, [r3, #24]
 8006356:	079b      	lsls	r3, r3, #30
 8006358:	d069      	beq.n	800642e <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 800635a:	f7ff ffea 	bl	8006332 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800635e:	2300      	movs	r3, #0
 8006360:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8006362:	0771      	lsls	r1, r6, #29
 8006364:	d510      	bpl.n	8006388 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8006366:	076a      	lsls	r2, r5, #29
 8006368:	d50e      	bpl.n	8006388 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800636a:	6823      	ldr	r3, [r4, #0]
 800636c:	f06f 0204 	mvn.w	r2, #4
 8006370:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006372:	2202      	movs	r2, #2
 8006374:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006376:	699b      	ldr	r3, [r3, #24]
 8006378:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800637c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800637e:	d05c      	beq.n	800643a <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8006380:	f7ff ffd7 	bl	8006332 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006384:	2300      	movs	r3, #0
 8006386:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8006388:	0733      	lsls	r3, r6, #28
 800638a:	d50f      	bpl.n	80063ac <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800638c:	0728      	lsls	r0, r5, #28
 800638e:	d50d      	bpl.n	80063ac <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006390:	6823      	ldr	r3, [r4, #0]
 8006392:	f06f 0208 	mvn.w	r2, #8
 8006396:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006398:	2204      	movs	r2, #4
 800639a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800639c:	69db      	ldr	r3, [r3, #28]
 800639e:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 80063a0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80063a2:	d050      	beq.n	8006446 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 80063a4:	f7ff ffc5 	bl	8006332 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80063a8:	2300      	movs	r3, #0
 80063aa:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80063ac:	06f2      	lsls	r2, r6, #27
 80063ae:	d510      	bpl.n	80063d2 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80063b0:	06eb      	lsls	r3, r5, #27
 80063b2:	d50e      	bpl.n	80063d2 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80063b4:	6823      	ldr	r3, [r4, #0]
 80063b6:	f06f 0210 	mvn.w	r2, #16
 80063ba:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80063bc:	2208      	movs	r2, #8
 80063be:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80063c0:	69db      	ldr	r3, [r3, #28]
 80063c2:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80063c6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80063c8:	d043      	beq.n	8006452 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 80063ca:	f7ff ffb2 	bl	8006332 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80063ce:	2300      	movs	r3, #0
 80063d0:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80063d2:	07f0      	lsls	r0, r6, #31
 80063d4:	d508      	bpl.n	80063e8 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80063d6:	07e9      	lsls	r1, r5, #31
 80063d8:	d506      	bpl.n	80063e8 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80063da:	6823      	ldr	r3, [r4, #0]
 80063dc:	f06f 0201 	mvn.w	r2, #1
 80063e0:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80063e2:	4620      	mov	r0, r4
 80063e4:	f7fb fe88 	bl	80020f8 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 80063e8:	0632      	lsls	r2, r6, #24
 80063ea:	d508      	bpl.n	80063fe <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 80063ec:	062b      	lsls	r3, r5, #24
 80063ee:	d506      	bpl.n	80063fe <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 80063f0:	6823      	ldr	r3, [r4, #0]
 80063f2:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80063f6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 80063f8:	4620      	mov	r0, r4
 80063fa:	f000 f8b2 	bl	8006562 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 80063fe:	0670      	lsls	r0, r6, #25
 8006400:	d508      	bpl.n	8006414 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8006402:	0669      	lsls	r1, r5, #25
 8006404:	d506      	bpl.n	8006414 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006406:	6823      	ldr	r3, [r4, #0]
 8006408:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800640c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800640e:	4620      	mov	r0, r4
 8006410:	f7ff ff91 	bl	8006336 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006414:	06b2      	lsls	r2, r6, #26
 8006416:	d522      	bpl.n	800645e <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006418:	06ab      	lsls	r3, r5, #26
 800641a:	d520      	bpl.n	800645e <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800641c:	6823      	ldr	r3, [r4, #0]
 800641e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006422:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006424:	611a      	str	r2, [r3, #16]
}
 8006426:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800642a:	f000 b899 	b.w	8006560 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800642e:	f7ff ff7f 	bl	8006330 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006432:	4620      	mov	r0, r4
 8006434:	f7ff ff7e 	bl	8006334 <HAL_TIM_PWM_PulseFinishedCallback>
 8006438:	e791      	b.n	800635e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800643a:	f7ff ff79 	bl	8006330 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800643e:	4620      	mov	r0, r4
 8006440:	f7ff ff78 	bl	8006334 <HAL_TIM_PWM_PulseFinishedCallback>
 8006444:	e79e      	b.n	8006384 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006446:	f7ff ff73 	bl	8006330 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800644a:	4620      	mov	r0, r4
 800644c:	f7ff ff72 	bl	8006334 <HAL_TIM_PWM_PulseFinishedCallback>
 8006450:	e7aa      	b.n	80063a8 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006452:	f7ff ff6d 	bl	8006330 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006456:	4620      	mov	r0, r4
 8006458:	f7ff ff6c 	bl	8006334 <HAL_TIM_PWM_PulseFinishedCallback>
 800645c:	e7b7      	b.n	80063ce <HAL_TIM_IRQHandler+0x96>
}
 800645e:	bd70      	pop	{r4, r5, r6, pc}

08006460 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006460:	4a27      	ldr	r2, [pc, #156]	@ (8006500 <TIM_Base_SetConfig+0xa0>)
  tmpcr1 = TIMx->CR1;
 8006462:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006464:	4290      	cmp	r0, r2
 8006466:	d012      	beq.n	800648e <TIM_Base_SetConfig+0x2e>
 8006468:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800646c:	d00f      	beq.n	800648e <TIM_Base_SetConfig+0x2e>
 800646e:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006472:	4290      	cmp	r0, r2
 8006474:	d00b      	beq.n	800648e <TIM_Base_SetConfig+0x2e>
 8006476:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800647a:	4290      	cmp	r0, r2
 800647c:	d007      	beq.n	800648e <TIM_Base_SetConfig+0x2e>
 800647e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006482:	4290      	cmp	r0, r2
 8006484:	d003      	beq.n	800648e <TIM_Base_SetConfig+0x2e>
 8006486:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800648a:	4290      	cmp	r0, r2
 800648c:	d108      	bne.n	80064a0 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800648e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006490:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8006494:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006496:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006498:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800649c:	4313      	orrs	r3, r2
 800649e:	e016      	b.n	80064ce <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80064a0:	4a18      	ldr	r2, [pc, #96]	@ (8006504 <TIM_Base_SetConfig+0xa4>)
 80064a2:	4290      	cmp	r0, r2
 80064a4:	d0f7      	beq.n	8006496 <TIM_Base_SetConfig+0x36>
 80064a6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064aa:	4290      	cmp	r0, r2
 80064ac:	d0f3      	beq.n	8006496 <TIM_Base_SetConfig+0x36>
 80064ae:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064b2:	4290      	cmp	r0, r2
 80064b4:	d0ef      	beq.n	8006496 <TIM_Base_SetConfig+0x36>
 80064b6:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 80064ba:	4290      	cmp	r0, r2
 80064bc:	d0eb      	beq.n	8006496 <TIM_Base_SetConfig+0x36>
 80064be:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064c2:	4290      	cmp	r0, r2
 80064c4:	d0e7      	beq.n	8006496 <TIM_Base_SetConfig+0x36>
 80064c6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064ca:	4290      	cmp	r0, r2
 80064cc:	d0e3      	beq.n	8006496 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80064ce:	694a      	ldr	r2, [r1, #20]
 80064d0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80064d4:	4313      	orrs	r3, r2

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80064d6:	688a      	ldr	r2, [r1, #8]
 80064d8:	62c2      	str	r2, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80064da:	680a      	ldr	r2, [r1, #0]
 80064dc:	6282      	str	r2, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80064de:	4a08      	ldr	r2, [pc, #32]	@ (8006500 <TIM_Base_SetConfig+0xa0>)
 80064e0:	4290      	cmp	r0, r2
 80064e2:	d003      	beq.n	80064ec <TIM_Base_SetConfig+0x8c>
 80064e4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80064e8:	4290      	cmp	r0, r2
 80064ea:	d101      	bne.n	80064f0 <TIM_Base_SetConfig+0x90>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80064ec:	690a      	ldr	r2, [r1, #16]
 80064ee:	6302      	str	r2, [r0, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
 80064f0:	6802      	ldr	r2, [r0, #0]
 80064f2:	f042 0204 	orr.w	r2, r2, #4
 80064f6:	6002      	str	r2, [r0, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80064f8:	2201      	movs	r2, #1
 80064fa:	6142      	str	r2, [r0, #20]

  TIMx->CR1 = tmpcr1;
 80064fc:	6003      	str	r3, [r0, #0]
}
 80064fe:	4770      	bx	lr
 8006500:	40010000 	.word	0x40010000
 8006504:	40014000 	.word	0x40014000

08006508 <HAL_TIM_Base_Init>:
{
 8006508:	b510      	push	{r4, lr}
  if (htim == NULL)
 800650a:	4604      	mov	r4, r0
 800650c:	b330      	cbz	r0, 800655c <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800650e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006512:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006516:	b91b      	cbnz	r3, 8006520 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006518:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800651c:	f7ff fecd 	bl	80062ba <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006520:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006522:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006524:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006528:	1d21      	adds	r1, r4, #4
 800652a:	f7ff ff99 	bl	8006460 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800652e:	2301      	movs	r3, #1
 8006530:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8006534:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006536:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800653a:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800653e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006542:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006546:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800654a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800654e:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8006552:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006556:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800655a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800655c:	2001      	movs	r0, #1
 800655e:	e7fc      	b.n	800655a <HAL_TIM_Base_Init+0x52>

08006560 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006560:	4770      	bx	lr

08006562 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006562:	4770      	bx	lr

08006564 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006564:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006566:	f102 030c 	add.w	r3, r2, #12
 800656a:	e853 3f00 	ldrex	r3, [r3]
 800656e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006572:	320c      	adds	r2, #12
 8006574:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8006578:	6802      	ldr	r2, [r0, #0]
 800657a:	2900      	cmp	r1, #0
 800657c:	d1f2      	bne.n	8006564 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800657e:	f102 0314 	add.w	r3, r2, #20
 8006582:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006586:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800658a:	f102 0c14 	add.w	ip, r2, #20
 800658e:	e84c 3100 	strex	r1, r3, [ip]
 8006592:	2900      	cmp	r1, #0
 8006594:	d1f3      	bne.n	800657e <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006596:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8006598:	2b01      	cmp	r3, #1
 800659a:	d10b      	bne.n	80065b4 <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800659c:	f102 030c 	add.w	r3, r2, #12
 80065a0:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80065a4:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80065a8:	f102 0c0c 	add.w	ip, r2, #12
 80065ac:	e84c 3100 	strex	r1, r3, [ip]
 80065b0:	2900      	cmp	r1, #0
 80065b2:	d1f3      	bne.n	800659c <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80065b4:	2320      	movs	r3, #32
 80065b6:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80065ba:	2300      	movs	r3, #0
 80065bc:	6303      	str	r3, [r0, #48]	@ 0x30
}
 80065be:	4770      	bx	lr

080065c0 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80065c0:	6802      	ldr	r2, [r0, #0]
 80065c2:	68c1      	ldr	r1, [r0, #12]
{
 80065c4:	b538      	push	{r3, r4, r5, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80065c6:	6913      	ldr	r3, [r2, #16]
 80065c8:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80065cc:	430b      	orrs	r3, r1
 80065ce:	6113      	str	r3, [r2, #16]
{
 80065d0:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80065d2:	6883      	ldr	r3, [r0, #8]
 80065d4:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 80065d6:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80065d8:	4303      	orrs	r3, r0
 80065da:	6968      	ldr	r0, [r5, #20]
 80065dc:	4303      	orrs	r3, r0
 80065de:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 80065e0:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
 80065e4:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80065e8:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 80065ea:	430b      	orrs	r3, r1
 80065ec:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 80065ee:	6953      	ldr	r3, [r2, #20]
 80065f0:	69a9      	ldr	r1, [r5, #24]
 80065f2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80065f6:	430b      	orrs	r3, r1
 80065f8:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80065fa:	4b1f      	ldr	r3, [pc, #124]	@ (8006678 <UART_SetConfig+0xb8>)
 80065fc:	429a      	cmp	r2, r3
 80065fe:	d003      	beq.n	8006608 <UART_SetConfig+0x48>
 8006600:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006604:	429a      	cmp	r2, r3
 8006606:	d124      	bne.n	8006652 <UART_SetConfig+0x92>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8006608:	f7ff f936 	bl	8005878 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800660c:	69ea      	ldr	r2, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800660e:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006610:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006614:	e9d5 4300 	ldrd	r4, r3, [r5]
 8006618:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800661c:	d11c      	bne.n	8006658 <UART_SetConfig+0x98>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800661e:	18da      	adds	r2, r3, r3
 8006620:	f04f 0500 	mov.w	r5, #0
 8006624:	eb45 0305 	adc.w	r3, r5, r5
 8006628:	f7f9 fe8a 	bl	8000340 <__aeabi_uldivmod>
 800662c:	2264      	movs	r2, #100	@ 0x64
 800662e:	fbb0 f1f2 	udiv	r1, r0, r2
 8006632:	fb02 0311 	mls	r3, r2, r1, r0
 8006636:	00db      	lsls	r3, r3, #3
 8006638:	3332      	adds	r3, #50	@ 0x32
 800663a:	fbb3 f3f2 	udiv	r3, r3, r2
 800663e:	f003 0207 	and.w	r2, r3, #7
 8006642:	005b      	lsls	r3, r3, #1
 8006644:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8006648:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 800664c:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800664e:	60a3      	str	r3, [r4, #8]
  }
}
 8006650:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8006652:	f7ff f901 	bl	8005858 <HAL_RCC_GetPCLK1Freq>
 8006656:	e7d9      	b.n	800660c <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006658:	009a      	lsls	r2, r3, #2
 800665a:	0f9b      	lsrs	r3, r3, #30
 800665c:	f7f9 fe70 	bl	8000340 <__aeabi_uldivmod>
 8006660:	2264      	movs	r2, #100	@ 0x64
 8006662:	fbb0 f1f2 	udiv	r1, r0, r2
 8006666:	fb02 0311 	mls	r3, r2, r1, r0
 800666a:	011b      	lsls	r3, r3, #4
 800666c:	3332      	adds	r3, #50	@ 0x32
 800666e:	fbb3 f3f2 	udiv	r3, r3, r2
 8006672:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8006676:	e7ea      	b.n	800664e <UART_SetConfig+0x8e>
 8006678:	40011000 	.word	0x40011000

0800667c <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
 800667c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800667e:	4605      	mov	r5, r0
 8006680:	460c      	mov	r4, r1
 8006682:	4617      	mov	r7, r2
 8006684:	461e      	mov	r6, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006686:	682a      	ldr	r2, [r5, #0]
 8006688:	6813      	ldr	r3, [r2, #0]
 800668a:	ea34 0303 	bics.w	r3, r4, r3
 800668e:	d101      	bne.n	8006694 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 8006690:	2000      	movs	r0, #0
 8006692:	e021      	b.n	80066d8 <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>
    if (Timeout != HAL_MAX_DELAY)
 8006694:	1c70      	adds	r0, r6, #1
 8006696:	d0f7      	beq.n	8006688 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006698:	f7fd f8d0 	bl	800383c <HAL_GetTick>
 800669c:	1bc0      	subs	r0, r0, r7
 800669e:	4286      	cmp	r6, r0
 80066a0:	d31c      	bcc.n	80066dc <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
 80066a2:	b1de      	cbz	r6, 80066dc <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 80066a4:	682b      	ldr	r3, [r5, #0]
 80066a6:	68da      	ldr	r2, [r3, #12]
 80066a8:	0751      	lsls	r1, r2, #29
 80066aa:	d5ec      	bpl.n	8006686 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 80066ac:	2c80      	cmp	r4, #128	@ 0x80
 80066ae:	d0ea      	beq.n	8006686 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 80066b0:	2c40      	cmp	r4, #64	@ 0x40
 80066b2:	d0e8      	beq.n	8006686 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 80066b4:	681a      	ldr	r2, [r3, #0]
 80066b6:	0712      	lsls	r2, r2, #28
 80066b8:	d5e5      	bpl.n	8006686 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
          __HAL_UART_CLEAR_OREFLAG(huart);
 80066ba:	2400      	movs	r4, #0
 80066bc:	9401      	str	r4, [sp, #4]
 80066be:	681a      	ldr	r2, [r3, #0]
 80066c0:	9201      	str	r2, [sp, #4]
 80066c2:	685b      	ldr	r3, [r3, #4]
 80066c4:	9301      	str	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 80066c6:	4628      	mov	r0, r5
          __HAL_UART_CLEAR_OREFLAG(huart);
 80066c8:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 80066ca:	f7ff ff4b 	bl	8006564 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 80066ce:	2308      	movs	r3, #8
 80066d0:	646b      	str	r3, [r5, #68]	@ 0x44
          __HAL_UNLOCK(huart);
 80066d2:	f885 4040 	strb.w	r4, [r5, #64]	@ 0x40
          return HAL_ERROR;
 80066d6:	2001      	movs	r0, #1
}
 80066d8:	b003      	add	sp, #12
 80066da:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
 80066dc:	2003      	movs	r0, #3
 80066de:	e7fb      	b.n	80066d8 <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>

080066e0 <HAL_UART_Init>:
{
 80066e0:	b510      	push	{r4, lr}
  if (huart == NULL)
 80066e2:	4604      	mov	r4, r0
 80066e4:	b348      	cbz	r0, 800673a <HAL_UART_Init+0x5a>
  if (huart->gState == HAL_UART_STATE_RESET)
 80066e6:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 80066ea:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80066ee:	b91b      	cbnz	r3, 80066f8 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 80066f0:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_UART_MspInit(huart);
 80066f4:	f7fb fed4 	bl	80024a0 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 80066f8:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 80066fa:	2324      	movs	r3, #36	@ 0x24
 80066fc:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UART_DISABLE(huart);
 8006700:	68d3      	ldr	r3, [r2, #12]
 8006702:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006706:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8006708:	4620      	mov	r0, r4
 800670a:	f7ff ff59 	bl	80065c0 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800670e:	6823      	ldr	r3, [r4, #0]
 8006710:	691a      	ldr	r2, [r3, #16]
 8006712:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8006716:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006718:	695a      	ldr	r2, [r3, #20]
 800671a:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800671e:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8006720:	68da      	ldr	r2, [r3, #12]
 8006722:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006726:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006728:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800672a:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800672c:	6460      	str	r0, [r4, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 800672e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8006732:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8006736:	6360      	str	r0, [r4, #52]	@ 0x34
}
 8006738:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800673a:	2001      	movs	r0, #1
 800673c:	e7fc      	b.n	8006738 <HAL_UART_Init+0x58>

0800673e <HAL_UART_Transmit>:
{
 800673e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006742:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8006744:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8006748:	2b20      	cmp	r3, #32
{
 800674a:	4604      	mov	r4, r0
 800674c:	460e      	mov	r6, r1
 800674e:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8006750:	d13f      	bne.n	80067d2 <HAL_UART_Transmit+0x94>
    if ((pData == NULL) || (Size == 0U))
 8006752:	2900      	cmp	r1, #0
 8006754:	d03f      	beq.n	80067d6 <HAL_UART_Transmit+0x98>
 8006756:	2a00      	cmp	r2, #0
 8006758:	d03d      	beq.n	80067d6 <HAL_UART_Transmit+0x98>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800675a:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800675c:	2500      	movs	r5, #0
 800675e:	6445      	str	r5, [r0, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006760:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
    tickstart = HAL_GetTick();
 8006764:	f7fd f86a 	bl	800383c <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006768:	68a3      	ldr	r3, [r4, #8]
    huart->TxXferSize = Size;
 800676a:	84a7      	strh	r7, [r4, #36]	@ 0x24
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800676c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    tickstart = HAL_GetTick();
 8006770:	4681      	mov	r9, r0
    huart->TxXferCount = Size;
 8006772:	84e7      	strh	r7, [r4, #38]	@ 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006774:	d103      	bne.n	800677e <HAL_UART_Transmit+0x40>
 8006776:	6923      	ldr	r3, [r4, #16]
 8006778:	b90b      	cbnz	r3, 800677e <HAL_UART_Transmit+0x40>
      pdata16bits = (const uint16_t *) pData;
 800677a:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 800677c:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 800677e:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 8006780:	b29b      	uxth	r3, r3
 8006782:	b953      	cbnz	r3, 800679a <HAL_UART_Transmit+0x5c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8006784:	4643      	mov	r3, r8
 8006786:	464a      	mov	r2, r9
 8006788:	2140      	movs	r1, #64	@ 0x40
 800678a:	4620      	mov	r0, r4
 800678c:	f7ff ff76 	bl	800667c <UART_WaitOnFlagUntilTimeout.constprop.0>
 8006790:	2320      	movs	r3, #32
 8006792:	b950      	cbnz	r0, 80067aa <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 8006794:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    return HAL_OK;
 8006798:	e00a      	b.n	80067b0 <HAL_UART_Transmit+0x72>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800679a:	4643      	mov	r3, r8
 800679c:	464a      	mov	r2, r9
 800679e:	2180      	movs	r1, #128	@ 0x80
 80067a0:	4620      	mov	r0, r4
 80067a2:	f7ff ff6b 	bl	800667c <UART_WaitOnFlagUntilTimeout.constprop.0>
 80067a6:	b128      	cbz	r0, 80067b4 <HAL_UART_Transmit+0x76>
        huart->gState = HAL_UART_STATE_READY;
 80067a8:	2320      	movs	r3, #32
 80067aa:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        return HAL_TIMEOUT;
 80067ae:	2003      	movs	r0, #3
}
 80067b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80067b4:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 80067b6:	b94e      	cbnz	r6, 80067cc <HAL_UART_Transmit+0x8e>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 80067b8:	f835 3b02 	ldrh.w	r3, [r5], #2
 80067bc:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80067c0:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 80067c2:	8ce1      	ldrh	r1, [r4, #38]	@ 0x26
 80067c4:	3901      	subs	r1, #1
 80067c6:	b289      	uxth	r1, r1
 80067c8:	84e1      	strh	r1, [r4, #38]	@ 0x26
 80067ca:	e7d8      	b.n	800677e <HAL_UART_Transmit+0x40>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80067cc:	f816 3b01 	ldrb.w	r3, [r6], #1
 80067d0:	e7f6      	b.n	80067c0 <HAL_UART_Transmit+0x82>
    return HAL_BUSY;
 80067d2:	2002      	movs	r0, #2
 80067d4:	e7ec      	b.n	80067b0 <HAL_UART_Transmit+0x72>
      return  HAL_ERROR;
 80067d6:	2001      	movs	r0, #1
 80067d8:	e7ea      	b.n	80067b0 <HAL_UART_Transmit+0x72>

080067da <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
 80067da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80067de:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 80067e2:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 80067e6:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80067ea:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 80067ee:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80067f2:	6809      	ldr	r1, [r1, #0]
 80067f4:	ea43 0308 	orr.w	r3, r3, r8
 80067f8:	b981      	cbnz	r1, 800681c <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80067fa:	ea43 030e 	orr.w	r3, r3, lr
 80067fe:	4313      	orrs	r3, r2
 8006800:	ea43 030c 	orr.w	r3, r3, ip
 8006804:	433b      	orrs	r3, r7
 8006806:	6801      	ldr	r1, [r0, #0]
 8006808:	4333      	orrs	r3, r6
 800680a:	432b      	orrs	r3, r5
 800680c:	4323      	orrs	r3, r4
 800680e:	f36f 010e 	bfc	r1, #0, #15
 8006812:	430b      	orrs	r3, r1
 8006814:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006816:	2000      	movs	r0, #0
 8006818:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800681c:	6801      	ldr	r1, [r0, #0]
 800681e:	ea43 030e 	orr.w	r3, r3, lr
 8006822:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8006826:	430b      	orrs	r3, r1
 8006828:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800682a:	ea42 030c 	orr.w	r3, r2, ip
 800682e:	6841      	ldr	r1, [r0, #4]
 8006830:	433b      	orrs	r3, r7
 8006832:	4333      	orrs	r3, r6
 8006834:	432b      	orrs	r3, r5
 8006836:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 800683a:	4323      	orrs	r3, r4
 800683c:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8006840:	4313      	orrs	r3, r2
 8006842:	6043      	str	r3, [r0, #4]
 8006844:	e7e7      	b.n	8006816 <FMC_SDRAM_Init+0x3c>

08006846 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006846:	68cb      	ldr	r3, [r1, #12]
 8006848:	f103 3cff 	add.w	ip, r3, #4294967295
 800684c:	694b      	ldr	r3, [r1, #20]
{
 800684e:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006850:	684c      	ldr	r4, [r1, #4]
 8006852:	688f      	ldr	r7, [r1, #8]
 8006854:	690e      	ldr	r6, [r1, #16]
 8006856:	698d      	ldr	r5, [r1, #24]
 8006858:	6809      	ldr	r1, [r1, #0]
 800685a:	3b01      	subs	r3, #1
 800685c:	051b      	lsls	r3, r3, #20
 800685e:	3c01      	subs	r4, #1
 8006860:	3f01      	subs	r7, #1
 8006862:	3e01      	subs	r6, #1
 8006864:	3d01      	subs	r5, #1
 8006866:	0124      	lsls	r4, r4, #4
 8006868:	023f      	lsls	r7, r7, #8
 800686a:	0436      	lsls	r6, r6, #16
 800686c:	062d      	lsls	r5, r5, #24
 800686e:	3901      	subs	r1, #1
 8006870:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8006874:	b95a      	cbnz	r2, 800688e <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006876:	430b      	orrs	r3, r1
 8006878:	4323      	orrs	r3, r4
 800687a:	6882      	ldr	r2, [r0, #8]
 800687c:	433b      	orrs	r3, r7
 800687e:	4333      	orrs	r3, r6
 8006880:	432b      	orrs	r3, r5
 8006882:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006886:	4313      	orrs	r3, r2
 8006888:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800688a:	2000      	movs	r0, #0
 800688c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800688e:	6882      	ldr	r2, [r0, #8]
 8006890:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8006894:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8006898:	4313      	orrs	r3, r2
 800689a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800689c:	ea44 0307 	orr.w	r3, r4, r7
 80068a0:	68c2      	ldr	r2, [r0, #12]
 80068a2:	430b      	orrs	r3, r1
 80068a4:	4333      	orrs	r3, r6
 80068a6:	432b      	orrs	r3, r5
 80068a8:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80068ac:	4313      	orrs	r3, r2
 80068ae:	60c3      	str	r3, [r0, #12]
 80068b0:	e7eb      	b.n	800688a <FMC_SDRAM_Timing_Init+0x44>

080068b2 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80068b2:	b570      	push	{r4, r5, r6, lr}
 80068b4:	4604      	mov	r4, r0
 80068b6:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80068b8:	6902      	ldr	r2, [r0, #16]
 80068ba:	e9d1 3000 	ldrd	r3, r0, [r1]
 80068be:	4303      	orrs	r3, r0
 80068c0:	68c8      	ldr	r0, [r1, #12]
 80068c2:	f36f 0215 	bfc	r2, #0, #22
 80068c6:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 80068ca:	4313      	orrs	r3, r2
 80068cc:	688a      	ldr	r2, [r1, #8]
 80068ce:	3a01      	subs	r2, #1
 80068d0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80068d4:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 80068d6:	f7fc ffb1 	bl	800383c <HAL_GetTick>
 80068da:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80068dc:	69a0      	ldr	r0, [r4, #24]
 80068de:	f010 0020 	ands.w	r0, r0, #32
 80068e2:	d003      	beq.n	80068ec <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80068e4:	1c6b      	adds	r3, r5, #1
 80068e6:	d0f9      	beq.n	80068dc <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80068e8:	b90d      	cbnz	r5, 80068ee <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 80068ea:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 80068ec:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80068ee:	f7fc ffa5 	bl	800383c <HAL_GetTick>
 80068f2:	1b80      	subs	r0, r0, r6
 80068f4:	42a8      	cmp	r0, r5
 80068f6:	d9f1      	bls.n	80068dc <FMC_SDRAM_SendCommand+0x2a>
 80068f8:	e7f7      	b.n	80068ea <FMC_SDRAM_SendCommand+0x38>

080068fa <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80068fa:	6943      	ldr	r3, [r0, #20]
 80068fc:	f36f 034d 	bfc	r3, #1, #13
 8006900:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8006904:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8006906:	2000      	movs	r0, #0
 8006908:	4770      	bx	lr

0800690a <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 800690a:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 800690c:	2300      	movs	r3, #0
{
 800690e:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006910:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 8006912:	9b01      	ldr	r3, [sp, #4]
 8006914:	3301      	adds	r3, #1
 8006916:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8006918:	9b01      	ldr	r3, [sp, #4]
 800691a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800691e:	d81a      	bhi.n	8006956 <USB_CoreReset+0x4c>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006920:	6913      	ldr	r3, [r2, #16]
 8006922:	2b00      	cmp	r3, #0
 8006924:	daf5      	bge.n	8006912 <USB_CoreReset+0x8>

  count = 10U;
 8006926:	230a      	movs	r3, #10

  /* few cycles before setting core reset */
  while (count > 0U)
  {
    count--;
 8006928:	9301      	str	r3, [sp, #4]
  while (count > 0U)
 800692a:	9b01      	ldr	r3, [sp, #4]
 800692c:	b983      	cbnz	r3, 8006950 <USB_CoreReset+0x46>
  }

  /* Core Soft Reset */
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 800692e:	6913      	ldr	r3, [r2, #16]
 8006930:	f043 0301 	orr.w	r3, r3, #1
 8006934:	6113      	str	r3, [r2, #16]

  do
  {
    count++;
 8006936:	9b01      	ldr	r3, [sp, #4]
 8006938:	3301      	adds	r3, #1
 800693a:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 800693c:	9b01      	ldr	r3, [sp, #4]
 800693e:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006942:	d808      	bhi.n	8006956 <USB_CoreReset+0x4c>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 8006944:	6910      	ldr	r0, [r2, #16]
 8006946:	f010 0001 	ands.w	r0, r0, #1
 800694a:	d1f4      	bne.n	8006936 <USB_CoreReset+0x2c>

  return HAL_OK;
}
 800694c:	b002      	add	sp, #8
 800694e:	4770      	bx	lr
    count--;
 8006950:	9b01      	ldr	r3, [sp, #4]
 8006952:	3b01      	subs	r3, #1
 8006954:	e7e8      	b.n	8006928 <USB_CoreReset+0x1e>
      return HAL_TIMEOUT;
 8006956:	2003      	movs	r0, #3
 8006958:	e7f8      	b.n	800694c <USB_CoreReset+0x42>

0800695a <USB_CoreInit>:
{
 800695a:	b084      	sub	sp, #16
 800695c:	b538      	push	{r3, r4, r5, lr}
 800695e:	ad05      	add	r5, sp, #20
 8006960:	e885 000e 	stmia.w	r5, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006964:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8006968:	2b01      	cmp	r3, #1
{
 800696a:	4604      	mov	r4, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 800696c:	d127      	bne.n	80069be <USB_CoreInit+0x64>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 800696e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8006970:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006974:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 8006976:	68c3      	ldr	r3, [r0, #12]
 8006978:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 800697c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006980:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 8006982:	68c3      	ldr	r3, [r0, #12]
 8006984:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8006988:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 800698a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800698e:	2b01      	cmp	r3, #1
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 8006990:	bf02      	ittt	eq
 8006992:	68c3      	ldreq	r3, [r0, #12]
 8006994:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
 8006998:	60c3      	streq	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 800699a:	f7ff ffb6 	bl	800690a <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 800699e:	f89d 3016 	ldrb.w	r3, [sp, #22]
 80069a2:	2b01      	cmp	r3, #1
 80069a4:	d107      	bne.n	80069b6 <USB_CoreInit+0x5c>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 80069a6:	68a3      	ldr	r3, [r4, #8]
 80069a8:	f043 0306 	orr.w	r3, r3, #6
 80069ac:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 80069ae:	68a3      	ldr	r3, [r4, #8]
 80069b0:	f043 0320 	orr.w	r3, r3, #32
 80069b4:	60a3      	str	r3, [r4, #8]
}
 80069b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80069ba:	b004      	add	sp, #16
 80069bc:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 80069be:	68c3      	ldr	r3, [r0, #12]
 80069c0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80069c4:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 80069c6:	f7ff ffa0 	bl	800690a <USB_CoreReset>
    if (cfg.battery_charging_enable == 0U)
 80069ca:	f89d 301d 	ldrb.w	r3, [sp, #29]
 80069ce:	b923      	cbnz	r3, 80069da <USB_CoreInit+0x80>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 80069d0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80069d2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 80069d6:	63a3      	str	r3, [r4, #56]	@ 0x38
 80069d8:	e7e1      	b.n	800699e <USB_CoreInit+0x44>
 80069da:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80069dc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80069e0:	e7f9      	b.n	80069d6 <USB_CoreInit+0x7c>
	...

080069e4 <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 80069e4:	2a02      	cmp	r2, #2
 80069e6:	d14a      	bne.n	8006a7e <USB_SetTurnaroundTime+0x9a>
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 80069e8:	4b27      	ldr	r3, [pc, #156]	@ (8006a88 <USB_SetTurnaroundTime+0xa4>)
 80069ea:	4a28      	ldr	r2, [pc, #160]	@ (8006a8c <USB_SetTurnaroundTime+0xa8>)
 80069ec:	440b      	add	r3, r1
 80069ee:	4293      	cmp	r3, r2
 80069f0:	d939      	bls.n	8006a66 <USB_SetTurnaroundTime+0x82>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 80069f2:	4b27      	ldr	r3, [pc, #156]	@ (8006a90 <USB_SetTurnaroundTime+0xac>)
 80069f4:	4a27      	ldr	r2, [pc, #156]	@ (8006a94 <USB_SetTurnaroundTime+0xb0>)
 80069f6:	440b      	add	r3, r1
 80069f8:	4293      	cmp	r3, r2
 80069fa:	d936      	bls.n	8006a6a <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 80069fc:	4a26      	ldr	r2, [pc, #152]	@ (8006a98 <USB_SetTurnaroundTime+0xb4>)
 80069fe:	f5a1 0374 	sub.w	r3, r1, #15990784	@ 0xf40000
 8006a02:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
 8006a06:	4293      	cmp	r3, r2
 8006a08:	d931      	bls.n	8006a6e <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 8006a0a:	4a24      	ldr	r2, [pc, #144]	@ (8006a9c <USB_SetTurnaroundTime+0xb8>)
 8006a0c:	f1a1 7383 	sub.w	r3, r1, #17170432	@ 0x1060000
 8006a10:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
 8006a14:	4293      	cmp	r3, r2
 8006a16:	d32c      	bcc.n	8006a72 <USB_SetTurnaroundTime+0x8e>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 8006a18:	4b21      	ldr	r3, [pc, #132]	@ (8006aa0 <USB_SetTurnaroundTime+0xbc>)
 8006a1a:	4a22      	ldr	r2, [pc, #136]	@ (8006aa4 <USB_SetTurnaroundTime+0xc0>)
 8006a1c:	440b      	add	r3, r1
 8006a1e:	4293      	cmp	r3, r2
 8006a20:	d929      	bls.n	8006a76 <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 8006a22:	4b21      	ldr	r3, [pc, #132]	@ (8006aa8 <USB_SetTurnaroundTime+0xc4>)
 8006a24:	4a21      	ldr	r2, [pc, #132]	@ (8006aac <USB_SetTurnaroundTime+0xc8>)
 8006a26:	440b      	add	r3, r1
 8006a28:	4293      	cmp	r3, r2
 8006a2a:	d326      	bcc.n	8006a7a <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 8006a2c:	4b20      	ldr	r3, [pc, #128]	@ (8006ab0 <USB_SetTurnaroundTime+0xcc>)
 8006a2e:	4a21      	ldr	r2, [pc, #132]	@ (8006ab4 <USB_SetTurnaroundTime+0xd0>)
 8006a30:	440b      	add	r3, r1
 8006a32:	4293      	cmp	r3, r2
 8006a34:	d323      	bcc.n	8006a7e <USB_SetTurnaroundTime+0x9a>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 8006a36:	4a20      	ldr	r2, [pc, #128]	@ (8006ab8 <USB_SetTurnaroundTime+0xd4>)
 8006a38:	f1a1 73b7 	sub.w	r3, r1, #23986176	@ 0x16e0000
 8006a3c:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
 8006a40:	4293      	cmp	r3, r2
 8006a42:	d31e      	bcc.n	8006a82 <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006a44:	4b1d      	ldr	r3, [pc, #116]	@ (8006abc <USB_SetTurnaroundTime+0xd8>)
      UsbTrd = 0x7U;
 8006a46:	4a1e      	ldr	r2, [pc, #120]	@ (8006ac0 <USB_SetTurnaroundTime+0xdc>)
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006a48:	440b      	add	r3, r1
      UsbTrd = 0x7U;
 8006a4a:	4293      	cmp	r3, r2
 8006a4c:	bf2c      	ite	cs
 8006a4e:	2306      	movcs	r3, #6
 8006a50:	2307      	movcc	r3, #7
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 8006a52:	68c2      	ldr	r2, [r0, #12]
 8006a54:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
 8006a58:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 8006a5a:	68c2      	ldr	r2, [r0, #12]
 8006a5c:	ea42 2383 	orr.w	r3, r2, r3, lsl #10
 8006a60:	60c3      	str	r3, [r0, #12]
}
 8006a62:	2000      	movs	r0, #0
 8006a64:	4770      	bx	lr
      UsbTrd = 0xFU;
 8006a66:	230f      	movs	r3, #15
 8006a68:	e7f3      	b.n	8006a52 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xEU;
 8006a6a:	230e      	movs	r3, #14
 8006a6c:	e7f1      	b.n	8006a52 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xDU;
 8006a6e:	230d      	movs	r3, #13
 8006a70:	e7ef      	b.n	8006a52 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xCU;
 8006a72:	230c      	movs	r3, #12
 8006a74:	e7ed      	b.n	8006a52 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xBU;
 8006a76:	230b      	movs	r3, #11
 8006a78:	e7eb      	b.n	8006a52 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xAU;
 8006a7a:	230a      	movs	r3, #10
 8006a7c:	e7e9      	b.n	8006a52 <USB_SetTurnaroundTime+0x6e>
    UsbTrd = USBD_HS_TRDT_VALUE;
 8006a7e:	2309      	movs	r3, #9
 8006a80:	e7e7      	b.n	8006a52 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0x8U;
 8006a82:	2308      	movs	r3, #8
 8006a84:	e7e5      	b.n	8006a52 <USB_SetTurnaroundTime+0x6e>
 8006a86:	bf00      	nop
 8006a88:	ff275340 	.word	0xff275340
 8006a8c:	000c34ff 	.word	0x000c34ff
 8006a90:	ff1b1e40 	.word	0xff1b1e40
 8006a94:	000f423f 	.word	0x000f423f
 8006a98:	00124f7f 	.word	0x00124f7f
 8006a9c:	0013d620 	.word	0x0013d620
 8006aa0:	fee5b660 	.word	0xfee5b660
 8006aa4:	0016e35f 	.word	0x0016e35f
 8006aa8:	feced300 	.word	0xfeced300
 8006aac:	001b7740 	.word	0x001b7740
 8006ab0:	feb35bc0 	.word	0xfeb35bc0
 8006ab4:	002191c0 	.word	0x002191c0
 8006ab8:	00387520 	.word	0x00387520
 8006abc:	fe5954e0 	.word	0xfe5954e0
 8006ac0:	00419ce0 	.word	0x00419ce0

08006ac4 <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 8006ac4:	6883      	ldr	r3, [r0, #8]
 8006ac6:	f043 0301 	orr.w	r3, r3, #1
 8006aca:	6083      	str	r3, [r0, #8]
}
 8006acc:	2000      	movs	r0, #0
 8006ace:	4770      	bx	lr

08006ad0 <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8006ad0:	6883      	ldr	r3, [r0, #8]
 8006ad2:	f023 0301 	bic.w	r3, r3, #1
 8006ad6:	6083      	str	r3, [r0, #8]
}
 8006ad8:	2000      	movs	r0, #0
 8006ada:	4770      	bx	lr

08006adc <USB_SetCurrentMode>:
{
 8006adc:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006ade:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8006ae0:	2901      	cmp	r1, #1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006ae2:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
{
 8006ae6:	4605      	mov	r5, r0
 8006ae8:	460c      	mov	r4, r1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006aea:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8006aec:	d114      	bne.n	8006b18 <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 8006aee:	68c3      	ldr	r3, [r0, #12]
 8006af0:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8006af4:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 8006af6:	2400      	movs	r4, #0
      HAL_Delay(10U);
 8006af8:	200a      	movs	r0, #10
 8006afa:	f7fc fea5 	bl	8003848 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8006afe:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b00:	07d9      	lsls	r1, r3, #31
      ms += 10U;
 8006b02:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b06:	d402      	bmi.n	8006b0e <USB_SetCurrentMode+0x32>
 8006b08:	2cc8      	cmp	r4, #200	@ 0xc8
 8006b0a:	d1f5      	bne.n	8006af8 <USB_SetCurrentMode+0x1c>
      ms += 10U;
 8006b0c:	24c8      	movs	r4, #200	@ 0xc8
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 8006b0e:	f1a4 03c8 	sub.w	r3, r4, #200	@ 0xc8
 8006b12:	4258      	negs	r0, r3
 8006b14:	4158      	adcs	r0, r3
}
 8006b16:	bd38      	pop	{r3, r4, r5, pc}
  else if (mode == USB_DEVICE_MODE)
 8006b18:	b971      	cbnz	r1, 8006b38 <USB_SetCurrentMode+0x5c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8006b1a:	68c3      	ldr	r3, [r0, #12]
 8006b1c:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8006b20:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
 8006b22:	200a      	movs	r0, #10
 8006b24:	f7fc fe90 	bl	8003848 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8006b28:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b2a:	07da      	lsls	r2, r3, #31
      ms += 10U;
 8006b2c:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b30:	d5ed      	bpl.n	8006b0e <USB_SetCurrentMode+0x32>
 8006b32:	2cc8      	cmp	r4, #200	@ 0xc8
 8006b34:	d1f5      	bne.n	8006b22 <USB_SetCurrentMode+0x46>
 8006b36:	e7e9      	b.n	8006b0c <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 8006b38:	2001      	movs	r0, #1
 8006b3a:	e7ec      	b.n	8006b16 <USB_SetCurrentMode+0x3a>

08006b3c <USB_FlushTxFifo>:
{
 8006b3c:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006b3e:	2300      	movs	r3, #0
{
 8006b40:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006b42:	9301      	str	r3, [sp, #4]
    count++;
 8006b44:	9b01      	ldr	r3, [sp, #4]
 8006b46:	3301      	adds	r3, #1
 8006b48:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006b4a:	9b01      	ldr	r3, [sp, #4]
 8006b4c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006b50:	d815      	bhi.n	8006b7e <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006b52:	6913      	ldr	r3, [r2, #16]
 8006b54:	2b00      	cmp	r3, #0
 8006b56:	daf5      	bge.n	8006b44 <USB_FlushTxFifo+0x8>
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006b58:	0189      	lsls	r1, r1, #6
  count = 0U;
 8006b5a:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006b5c:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
 8006b60:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006b62:	6111      	str	r1, [r2, #16]
    count++;
 8006b64:	9b01      	ldr	r3, [sp, #4]
 8006b66:	3301      	adds	r3, #1
 8006b68:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006b6a:	9b01      	ldr	r3, [sp, #4]
 8006b6c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006b70:	d805      	bhi.n	8006b7e <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 8006b72:	6910      	ldr	r0, [r2, #16]
 8006b74:	f010 0020 	ands.w	r0, r0, #32
 8006b78:	d1f4      	bne.n	8006b64 <USB_FlushTxFifo+0x28>
}
 8006b7a:	b002      	add	sp, #8
 8006b7c:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006b7e:	2003      	movs	r0, #3
 8006b80:	e7fb      	b.n	8006b7a <USB_FlushTxFifo+0x3e>

08006b82 <USB_FlushRxFifo>:
{
 8006b82:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006b84:	2300      	movs	r3, #0
{
 8006b86:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006b88:	9301      	str	r3, [sp, #4]
    count++;
 8006b8a:	9b01      	ldr	r3, [sp, #4]
 8006b8c:	3301      	adds	r3, #1
 8006b8e:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006b90:	9b01      	ldr	r3, [sp, #4]
 8006b92:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006b96:	d813      	bhi.n	8006bc0 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006b98:	6913      	ldr	r3, [r2, #16]
 8006b9a:	2b00      	cmp	r3, #0
 8006b9c:	daf5      	bge.n	8006b8a <USB_FlushRxFifo+0x8>
  count = 0U;
 8006b9e:	2300      	movs	r3, #0
 8006ba0:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 8006ba2:	2310      	movs	r3, #16
 8006ba4:	6113      	str	r3, [r2, #16]
    count++;
 8006ba6:	9b01      	ldr	r3, [sp, #4]
 8006ba8:	3301      	adds	r3, #1
 8006baa:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006bac:	9b01      	ldr	r3, [sp, #4]
 8006bae:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006bb2:	d805      	bhi.n	8006bc0 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 8006bb4:	6910      	ldr	r0, [r2, #16]
 8006bb6:	f010 0010 	ands.w	r0, r0, #16
 8006bba:	d1f4      	bne.n	8006ba6 <USB_FlushRxFifo+0x24>
}
 8006bbc:	b002      	add	sp, #8
 8006bbe:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006bc0:	2003      	movs	r0, #3
 8006bc2:	e7fb      	b.n	8006bbc <USB_FlushRxFifo+0x3a>

08006bc4 <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 8006bc4:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8006bc8:	4319      	orrs	r1, r3
 8006bca:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8006bce:	2000      	movs	r0, #0
 8006bd0:	4770      	bx	lr
	...

08006bd4 <USB_DevInit>:
{
 8006bd4:	b084      	sub	sp, #16
 8006bd6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006bda:	4604      	mov	r4, r0
 8006bdc:	a809      	add	r0, sp, #36	@ 0x24
 8006bde:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
 8006be2:	2300      	movs	r3, #0
 8006be4:	f89d 6024 	ldrb.w	r6, [sp, #36]	@ 0x24
 8006be8:	f89d 502e 	ldrb.w	r5, [sp, #46]	@ 0x2e
    USBx->DIEPTXF[i] = 0U;
 8006bec:	4619      	mov	r1, r3
 8006bee:	f103 0240 	add.w	r2, r3, #64	@ 0x40
 8006bf2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
 8006bf6:	3301      	adds	r3, #1
 8006bf8:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
 8006bfa:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 8006bfc:	d1f7      	bne.n	8006bee <USB_DevInit+0x1a>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006bfe:	f504 6700 	add.w	r7, r4, #2048	@ 0x800
  if (cfg.vbus_sensing_enable == 0U)
 8006c02:	2d00      	cmp	r5, #0
 8006c04:	d16c      	bne.n	8006ce0 <USB_DevInit+0x10c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006c06:	687b      	ldr	r3, [r7, #4]
 8006c08:	f043 0302 	orr.w	r3, r3, #2
 8006c0c:	607b      	str	r3, [r7, #4]
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 8006c0e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c10:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8006c14:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 8006c16:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c18:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8006c1c:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 8006c1e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c20:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8006c24:	63a3      	str	r3, [r4, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
 8006c26:	2300      	movs	r3, #0
 8006c28:	f8c4 3e00 	str.w	r3, [r4, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006c2c:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 8006c30:	2b01      	cmp	r3, #1
 8006c32:	d15f      	bne.n	8006cf4 <USB_DevInit+0x120>
    if (cfg.speed == USBD_HS_SPEED)
 8006c34:	f89d 1027 	ldrb.w	r1, [sp, #39]	@ 0x27
 8006c38:	2900      	cmp	r1, #0
 8006c3a:	d159      	bne.n	8006cf0 <USB_DevInit+0x11c>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8006c3c:	4620      	mov	r0, r4
 8006c3e:	f7ff ffc1 	bl	8006bc4 <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 8006c42:	2110      	movs	r1, #16
 8006c44:	4620      	mov	r0, r4
 8006c46:	f7ff ff79 	bl	8006b3c <USB_FlushTxFifo>
 8006c4a:	4601      	mov	r1, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006c4c:	4620      	mov	r0, r4
 8006c4e:	f7ff ff98 	bl	8006b82 <USB_FlushRxFifo>
 8006c52:	4308      	orrs	r0, r1
 8006c54:	b2c0      	uxtb	r0, r0
  USBx_DEVICE->DIEPMSK = 0U;
 8006c56:	2300      	movs	r3, #0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006c58:	3800      	subs	r0, #0
  USBx_DEVICE->DIEPMSK = 0U;
 8006c5a:	613b      	str	r3, [r7, #16]
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006c5c:	bf18      	it	ne
 8006c5e:	2001      	movne	r0, #1
  USBx_DEVICE->DOEPMSK = 0U;
 8006c60:	617b      	str	r3, [r7, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 8006c62:	f504 6210 	add.w	r2, r4, #2304	@ 0x900
 8006c66:	61fb      	str	r3, [r7, #28]
      USBx_INEP(i)->DIEPCTL = 0U;
 8006c68:	4619      	mov	r1, r3
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8006c6a:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8006c6e:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8006c72:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006c76:	429e      	cmp	r6, r3
 8006c78:	d83e      	bhi.n	8006cf8 <USB_DevInit+0x124>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006c7a:	2200      	movs	r2, #0
 8006c7c:	f504 6330 	add.w	r3, r4, #2816	@ 0xb00
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006c80:	4611      	mov	r1, r2
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8006c82:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8006c86:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8006c8a:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006c8e:	4296      	cmp	r6, r2
 8006c90:	d845      	bhi.n	8006d1e <USB_DevInit+0x14a>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 8006c92:	693b      	ldr	r3, [r7, #16]
 8006c94:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006c98:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
 8006c9a:	2300      	movs	r3, #0
 8006c9c:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 8006c9e:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 8006ca2:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 8006ca4:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
 8006ca8:	b91b      	cbnz	r3, 8006cb2 <USB_DevInit+0xde>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8006caa:	69a3      	ldr	r3, [r4, #24]
 8006cac:	f043 0310 	orr.w	r3, r3, #16
 8006cb0:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 8006cb2:	69a2      	ldr	r2, [r4, #24]
 8006cb4:	4b23      	ldr	r3, [pc, #140]	@ (8006d44 <USB_DevInit+0x170>)
 8006cb6:	4313      	orrs	r3, r2
 8006cb8:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 8006cba:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 8006cbe:	b11b      	cbz	r3, 8006cc8 <USB_DevInit+0xf4>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 8006cc0:	69a3      	ldr	r3, [r4, #24]
 8006cc2:	f043 0308 	orr.w	r3, r3, #8
 8006cc6:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 8006cc8:	2d01      	cmp	r5, #1
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 8006cca:	bf01      	itttt	eq
 8006ccc:	69a3      	ldreq	r3, [r4, #24]
 8006cce:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
 8006cd2:	f043 0304 	orreq.w	r3, r3, #4
 8006cd6:	61a3      	streq	r3, [r4, #24]
}
 8006cd8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006cdc:	b004      	add	sp, #16
 8006cde:	4770      	bx	lr
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 8006ce0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006ce2:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8006ce6:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8006ce8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006cea:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8006cee:	e799      	b.n	8006c24 <USB_DevInit+0x50>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 8006cf0:	4619      	mov	r1, r3
 8006cf2:	e7a3      	b.n	8006c3c <USB_DevInit+0x68>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8006cf4:	2103      	movs	r1, #3
 8006cf6:	e7a1      	b.n	8006c3c <USB_DevInit+0x68>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006cf8:	f8d2 9000 	ldr.w	r9, [r2]
 8006cfc:	f1b9 0f00 	cmp.w	r9, #0
 8006d00:	da0b      	bge.n	8006d1a <USB_DevInit+0x146>
      if (i == 0U)
 8006d02:	b93b      	cbnz	r3, 8006d14 <USB_DevInit+0x140>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8006d04:	f8c2 e000 	str.w	lr, [r2]
    USBx_INEP(i)->DIEPTSIZ = 0U;
 8006d08:	6111      	str	r1, [r2, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d0a:	3301      	adds	r3, #1
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8006d0c:	f8c2 8008 	str.w	r8, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d10:	3220      	adds	r2, #32
 8006d12:	e7b0      	b.n	8006c76 <USB_DevInit+0xa2>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8006d14:	f8c2 c000 	str.w	ip, [r2]
 8006d18:	e7f6      	b.n	8006d08 <USB_DevInit+0x134>
      USBx_INEP(i)->DIEPCTL = 0U;
 8006d1a:	6011      	str	r1, [r2, #0]
 8006d1c:	e7f4      	b.n	8006d08 <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006d1e:	f8d3 9000 	ldr.w	r9, [r3]
 8006d22:	f1b9 0f00 	cmp.w	r9, #0
 8006d26:	da0b      	bge.n	8006d40 <USB_DevInit+0x16c>
      if (i == 0U)
 8006d28:	b93a      	cbnz	r2, 8006d3a <USB_DevInit+0x166>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8006d2a:	f8c3 e000 	str.w	lr, [r3]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 8006d2e:	6119      	str	r1, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d30:	3201      	adds	r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8006d32:	f8c3 8008 	str.w	r8, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d36:	3320      	adds	r3, #32
 8006d38:	e7a9      	b.n	8006c8e <USB_DevInit+0xba>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8006d3a:	f8c3 c000 	str.w	ip, [r3]
 8006d3e:	e7f6      	b.n	8006d2e <USB_DevInit+0x15a>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006d40:	6019      	str	r1, [r3, #0]
 8006d42:	e7f4      	b.n	8006d2e <USB_DevInit+0x15a>
 8006d44:	803c3800 	.word	0x803c3800

08006d48 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 8006d48:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 8006d4c:	f013 0006 	ands.w	r0, r3, #6
 8006d50:	d004      	beq.n	8006d5c <USB_GetDevSpeed+0x14>
    speed = 0xFU;
 8006d52:	f013 0f02 	tst.w	r3, #2
 8006d56:	bf14      	ite	ne
 8006d58:	2002      	movne	r0, #2
 8006d5a:	200f      	moveq	r0, #15
}
 8006d5c:	4770      	bx	lr

08006d5e <USB_ActivateEndpoint>:
{
 8006d5e:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8006d60:	780c      	ldrb	r4, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006d62:	2201      	movs	r2, #1
 8006d64:	f004 050f 	and.w	r5, r4, #15
 8006d68:	40aa      	lsls	r2, r5
  if (ep->is_in == 1U)
 8006d6a:	784d      	ldrb	r5, [r1, #1]
 8006d6c:	2d01      	cmp	r5, #1
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006d6e:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8006d72:	eb00 1044 	add.w	r0, r0, r4, lsl #5
  if (ep->is_in == 1U)
 8006d76:	d119      	bne.n	8006dac <USB_ActivateEndpoint+0x4e>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006d78:	69dd      	ldr	r5, [r3, #28]
 8006d7a:	432a      	orrs	r2, r5
 8006d7c:	61da      	str	r2, [r3, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8006d7e:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8006d82:	041a      	lsls	r2, r3, #16
 8006d84:	d410      	bmi.n	8006da8 <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8006d86:	688a      	ldr	r2, [r1, #8]
 8006d88:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
 8006d8c:	f3c2 030a 	ubfx	r3, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8006d90:	790a      	ldrb	r2, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8006d92:	432b      	orrs	r3, r5
 8006d94:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8006d98:	ea43 5384 	orr.w	r3, r3, r4, lsl #22
 8006d9c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006da0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006da4:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8006da8:	2000      	movs	r0, #0
 8006daa:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 8006dac:	69dc      	ldr	r4, [r3, #28]
 8006dae:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 8006db2:	61da      	str	r2, [r3, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 8006db4:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8006db8:	041b      	lsls	r3, r3, #16
 8006dba:	d4f5      	bmi.n	8006da8 <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8006dbc:	688b      	ldr	r3, [r1, #8]
 8006dbe:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8006dc2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006dc6:	4313      	orrs	r3, r2
                                    ((uint32_t)ep->type << 18) |
 8006dc8:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8006dca:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8006dce:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006dd2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006dd6:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8006dda:	e7e5      	b.n	8006da8 <USB_ActivateEndpoint+0x4a>

08006ddc <USB_DeactivateEndpoint>:
{
 8006ddc:	b510      	push	{r4, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8006dde:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8006de0:	7849      	ldrb	r1, [r1, #1]
 8006de2:	2901      	cmp	r1, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006de4:	eb00 1342 	add.w	r3, r0, r2, lsl #5
 8006de8:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
 8006dec:	f002 020f 	and.w	r2, r2, #15
  if (ep->is_in == 1U)
 8006df0:	d122      	bne.n	8006e38 <USB_DeactivateEndpoint+0x5c>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006df2:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006df6:	2900      	cmp	r1, #0
 8006df8:	da0b      	bge.n	8006e12 <USB_DeactivateEndpoint+0x36>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 8006dfa:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006dfe:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8006e02:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 8006e06:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006e0a:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8006e0e:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8006e12:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8006e14:	2101      	movs	r1, #1
 8006e16:	fa01 f202 	lsl.w	r2, r1, r2
 8006e1a:	ea24 0402 	bic.w	r4, r4, r2
 8006e1e:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8006e20:	69c1      	ldr	r1, [r0, #28]
 8006e22:	ea21 0202 	bic.w	r2, r1, r2
 8006e26:	61c2      	str	r2, [r0, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 8006e28:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006e2c:	4a14      	ldr	r2, [pc, #80]	@ (8006e80 <USB_DeactivateEndpoint+0xa4>)
 8006e2e:	400a      	ands	r2, r1
 8006e30:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
 8006e34:	2000      	movs	r0, #0
 8006e36:	bd10      	pop	{r4, pc}
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006e38:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e3c:	2900      	cmp	r1, #0
 8006e3e:	da0b      	bge.n	8006e58 <USB_DeactivateEndpoint+0x7c>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8006e40:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e44:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8006e48:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 8006e4c:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e50:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8006e54:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8006e58:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8006e5a:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8006e5e:	fa01 f202 	lsl.w	r2, r1, r2
 8006e62:	ea24 0402 	bic.w	r4, r4, r2
 8006e66:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8006e68:	69c1      	ldr	r1, [r0, #28]
 8006e6a:	ea21 0202 	bic.w	r2, r1, r2
 8006e6e:	61c2      	str	r2, [r0, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 8006e70:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e74:	4a03      	ldr	r2, [pc, #12]	@ (8006e84 <USB_DeactivateEndpoint+0xa8>)
 8006e76:	400a      	ands	r2, r1
 8006e78:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
 8006e7c:	e7da      	b.n	8006e34 <USB_DeactivateEndpoint+0x58>
 8006e7e:	bf00      	nop
 8006e80:	ec337800 	.word	0xec337800
 8006e84:	eff37800 	.word	0xeff37800

08006e88 <USB_EPStopXfer>:
{
 8006e88:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006e8a:	2300      	movs	r3, #0
  if (ep->is_in == 1U)
 8006e8c:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
 8006e8e:	9301      	str	r3, [sp, #4]
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006e90:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8006e92:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006e94:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
 8006e98:	d11e      	bne.n	8006ed8 <USB_EPStopXfer+0x50>
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006e9a:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 8006e9e:	18c1      	adds	r1, r0, r3
 8006ea0:	58c2      	ldr	r2, [r0, r3]
 8006ea2:	2a00      	cmp	r2, #0
 8006ea4:	db02      	blt.n	8006eac <USB_EPStopXfer+0x24>
  HAL_StatusTypeDef ret = HAL_OK;
 8006ea6:	2000      	movs	r0, #0
}
 8006ea8:	b002      	add	sp, #8
 8006eaa:	4770      	bx	lr
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 8006eac:	58c2      	ldr	r2, [r0, r3]
 8006eae:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8006eb2:	50c2      	str	r2, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 8006eb4:	58c2      	ldr	r2, [r0, r3]
 8006eb6:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8006eba:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8006ebc:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8006ec0:	9b01      	ldr	r3, [sp, #4]
 8006ec2:	3301      	adds	r3, #1
 8006ec4:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8006ec6:	9b01      	ldr	r3, [sp, #4]
 8006ec8:	4293      	cmp	r3, r2
 8006eca:	d901      	bls.n	8006ed0 <USB_EPStopXfer+0x48>
          ret = HAL_ERROR;
 8006ecc:	2001      	movs	r0, #1
 8006ece:	e7eb      	b.n	8006ea8 <USB_EPStopXfer+0x20>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 8006ed0:	680b      	ldr	r3, [r1, #0]
 8006ed2:	2b00      	cmp	r3, #0
 8006ed4:	dbf4      	blt.n	8006ec0 <USB_EPStopXfer+0x38>
 8006ed6:	e7e6      	b.n	8006ea6 <USB_EPStopXfer+0x1e>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006ed8:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 8006edc:	18c1      	adds	r1, r0, r3
 8006ede:	58c2      	ldr	r2, [r0, r3]
 8006ee0:	2a00      	cmp	r2, #0
 8006ee2:	dae0      	bge.n	8006ea6 <USB_EPStopXfer+0x1e>
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 8006ee4:	58c2      	ldr	r2, [r0, r3]
 8006ee6:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8006eea:	50c2      	str	r2, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 8006eec:	58c2      	ldr	r2, [r0, r3]
 8006eee:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8006ef2:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8006ef4:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8006ef8:	9b01      	ldr	r3, [sp, #4]
 8006efa:	3301      	adds	r3, #1
 8006efc:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8006efe:	9b01      	ldr	r3, [sp, #4]
 8006f00:	4293      	cmp	r3, r2
 8006f02:	d8e3      	bhi.n	8006ecc <USB_EPStopXfer+0x44>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 8006f04:	680b      	ldr	r3, [r1, #0]
 8006f06:	2b00      	cmp	r3, #0
 8006f08:	dbf6      	blt.n	8006ef8 <USB_EPStopXfer+0x70>
 8006f0a:	e7cc      	b.n	8006ea6 <USB_EPStopXfer+0x1e>

08006f0c <USB_WritePacket>:
{
 8006f0c:	b510      	push	{r4, lr}
 8006f0e:	f89d 4008 	ldrb.w	r4, [sp, #8]
  if (dma == 0U)
 8006f12:	b944      	cbnz	r4, 8006f26 <USB_WritePacket+0x1a>
    count32b = ((uint32_t)len + 3U) / 4U;
 8006f14:	3303      	adds	r3, #3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8006f16:	3201      	adds	r2, #1
    count32b = ((uint32_t)len + 3U) / 4U;
 8006f18:	089b      	lsrs	r3, r3, #2
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8006f1a:	eb00 3002 	add.w	r0, r0, r2, lsl #12
 8006f1e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    for (i = 0U; i < count32b; i++)
 8006f22:	4299      	cmp	r1, r3
 8006f24:	d101      	bne.n	8006f2a <USB_WritePacket+0x1e>
}
 8006f26:	2000      	movs	r0, #0
 8006f28:	bd10      	pop	{r4, pc}
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8006f2a:	f851 2b04 	ldr.w	r2, [r1], #4
 8006f2e:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 8006f30:	e7f7      	b.n	8006f22 <USB_WritePacket+0x16>
	...

08006f34 <USB_EPStartXfer>:
{
 8006f34:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if (ep->is_in == 1U)
 8006f38:	784b      	ldrb	r3, [r1, #1]
    if (ep->xfer_len == 0U)
 8006f3a:	690c      	ldr	r4, [r1, #16]
        if (ep->type == EP_TYPE_ISOC)
 8006f3c:	790f      	ldrb	r7, [r1, #4]
 8006f3e:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 8007130 <USB_EPStartXfer+0x1fc>
 8006f42:	f8df 81f0 	ldr.w	r8, [pc, #496]	@ 8007134 <USB_EPStartXfer+0x200>
{
 8006f46:	4616      	mov	r6, r2
  uint32_t epnum = (uint32_t)ep->num;
 8006f48:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8006f4a:	2b01      	cmp	r3, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006f4c:	eb00 1542 	add.w	r5, r0, r2, lsl #5
  if (ep->is_in == 1U)
 8006f50:	f040 8097 	bne.w	8007082 <USB_EPStartXfer+0x14e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006f54:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
 8006f58:	f8dc 3010 	ldr.w	r3, [ip, #16]
    if (ep->xfer_len == 0U)
 8006f5c:	bb74      	cbnz	r4, 8006fbc <USB_EPStartXfer+0x88>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006f5e:	ea03 030e 	and.w	r3, r3, lr
 8006f62:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8006f66:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006f6a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8006f6e:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8006f72:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006f76:	ea03 0308 	and.w	r3, r3, r8
    if (dma == 1U)
 8006f7a:	2e01      	cmp	r6, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8006f7c:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 8006f80:	d157      	bne.n	8007032 <USB_EPStartXfer+0xfe>
      if ((uint32_t)ep->dma_addr != 0U)
 8006f82:	69cb      	ldr	r3, [r1, #28]
 8006f84:	b10b      	cbz	r3, 8006f8a <USB_EPStartXfer+0x56>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8006f86:	f8cc 3014 	str.w	r3, [ip, #20]
      if (ep->type == EP_TYPE_ISOC)
 8006f8a:	2f01      	cmp	r7, #1
 8006f8c:	d10c      	bne.n	8006fa8 <USB_EPStartXfer+0x74>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8006f8e:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8006f92:	f413 7f80 	tst.w	r3, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8006f96:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8006f9a:	bf0c      	ite	eq
 8006f9c:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8006fa0:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8006fa4:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8006fa8:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8006fac:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8006fb0:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
}
 8006fb4:	2000      	movs	r0, #0
 8006fb6:	b002      	add	sp, #8
 8006fb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8006fbc:	ea03 0308 	and.w	r3, r3, r8
 8006fc0:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006fc4:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006fc8:	ea03 030e 	and.w	r3, r3, lr
 8006fcc:	f8cc 3010 	str.w	r3, [ip, #16]
        if (ep->xfer_len > ep->maxpacket)
 8006fd0:	688b      	ldr	r3, [r1, #8]
      if (epnum == 0U)
 8006fd2:	b97a      	cbnz	r2, 8006ff4 <USB_EPStartXfer+0xc0>
        if (ep->xfer_len > ep->maxpacket)
 8006fd4:	42a3      	cmp	r3, r4
          ep->xfer_len = ep->maxpacket;
 8006fd6:	bf38      	it	cc
 8006fd8:	610b      	strcc	r3, [r1, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8006fda:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006fde:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & ((uint32_t)pktcnt << 29));
 8006fe2:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8006fe6:	690b      	ldr	r3, [r1, #16]
 8006fe8:	f8dc 4010 	ldr.w	r4, [ip, #16]
 8006fec:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8006ff0:	4323      	orrs	r3, r4
 8006ff2:	e7c2      	b.n	8006f7a <USB_EPStartXfer+0x46>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8006ff4:	441c      	add	r4, r3
 8006ff6:	3c01      	subs	r4, #1
 8006ff8:	fbb4 f4f3 	udiv	r4, r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19));
 8006ffc:	4b4b      	ldr	r3, [pc, #300]	@ (800712c <USB_EPStartXfer+0x1f8>)
 8006ffe:	f8dc e010 	ldr.w	lr, [ip, #16]
 8007002:	fa1f f884 	uxth.w	r8, r4
 8007006:	ea03 44c4 	and.w	r4, r3, r4, lsl #19
 800700a:	ea44 040e 	orr.w	r4, r4, lr
        if (ep->type == EP_TYPE_ISOC)
 800700e:	2f01      	cmp	r7, #1
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19));
 8007010:	f8cc 4010 	str.w	r4, [ip, #16]
        if (ep->type == EP_TYPE_ISOC)
 8007014:	d1e7      	bne.n	8006fe6 <USB_EPStartXfer+0xb2>
          USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 8007016:	f8dc 3010 	ldr.w	r3, [ip, #16]
 800701a:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 800701e:	f8cc 3010 	str.w	r3, [ip, #16]
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & ((uint32_t)pktcnt << 29));
 8007022:	f8dc 4010 	ldr.w	r4, [ip, #16]
 8007026:	ea4f 7348 	mov.w	r3, r8, lsl #29
 800702a:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 800702e:	4323      	orrs	r3, r4
 8007030:	e7d7      	b.n	8006fe2 <USB_EPStartXfer+0xae>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007032:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
 8007036:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007038:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 800703c:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
 8007040:	690b      	ldr	r3, [r1, #16]
      if (ep->type != EP_TYPE_ISOC)
 8007042:	d00b      	beq.n	800705c <USB_EPStartXfer+0x128>
        if (ep->xfer_len > 0U)
 8007044:	2b00      	cmp	r3, #0
 8007046:	d0b5      	beq.n	8006fb4 <USB_EPStartXfer+0x80>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 8007048:	f8d0 1834 	ldr.w	r1, [r0, #2100]	@ 0x834
 800704c:	f002 020f 	and.w	r2, r2, #15
 8007050:	2301      	movs	r3, #1
 8007052:	4093      	lsls	r3, r2
 8007054:	430b      	orrs	r3, r1
 8007056:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
 800705a:	e7ab      	b.n	8006fb4 <USB_EPStartXfer+0x80>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800705c:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
 8007060:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8007064:	f8d5 4900 	ldr.w	r4, [r5, #2304]	@ 0x900
 8007068:	bf0c      	ite	eq
 800706a:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800706e:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
 8007072:	f8c5 4900 	str.w	r4, [r5, #2304]	@ 0x900
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 8007076:	9600      	str	r6, [sp, #0]
 8007078:	68c9      	ldr	r1, [r1, #12]
 800707a:	b29b      	uxth	r3, r3
 800707c:	f7ff ff46 	bl	8006f0c <USB_WritePacket>
 8007080:	e798      	b.n	8006fb4 <USB_EPStartXfer+0x80>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8007082:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 8007086:	ea03 0308 	and.w	r3, r3, r8
 800708a:	f8c5 3b10 	str.w	r3, [r5, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 800708e:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 8007092:	ea03 030e 	and.w	r3, r3, lr
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8007096:	f505 6c30 	add.w	ip, r5, #2816	@ 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 800709a:	f8cc 3010 	str.w	r3, [ip, #16]
        ep->xfer_len = ep->maxpacket;
 800709e:	688b      	ldr	r3, [r1, #8]
    if (epnum == 0U)
 80070a0:	bb5a      	cbnz	r2, 80070fa <USB_EPStartXfer+0x1c6>
      if (ep->xfer_len > 0U)
 80070a2:	b104      	cbz	r4, 80070a6 <USB_EPStartXfer+0x172>
        ep->xfer_len = ep->maxpacket;
 80070a4:	610b      	str	r3, [r1, #16]
      ep->xfer_size = ep->maxpacket;
 80070a6:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 80070a8:	f8dc 2010 	ldr.w	r2, [ip, #16]
 80070ac:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80070b0:	4313      	orrs	r3, r2
 80070b2:	f8cc 3010 	str.w	r3, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 80070b6:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80070ba:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
    if (dma == 1U)
 80070be:	2e01      	cmp	r6, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 80070c0:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 80070c4:	d103      	bne.n	80070ce <USB_EPStartXfer+0x19a>
      if ((uint32_t)ep->xfer_buff != 0U)
 80070c6:	68cb      	ldr	r3, [r1, #12]
 80070c8:	b10b      	cbz	r3, 80070ce <USB_EPStartXfer+0x19a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 80070ca:	f8cc 3014 	str.w	r3, [ip, #20]
    if (ep->type == EP_TYPE_ISOC)
 80070ce:	2f01      	cmp	r7, #1
 80070d0:	d10c      	bne.n	80070ec <USB_EPStartXfer+0x1b8>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 80070d2:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 80070d6:	f413 7f80 	tst.w	r3, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 80070da:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 80070de:	bf0c      	ite	eq
 80070e0:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 80070e4:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 80070e8:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 80070ec:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 80070f0:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80070f4:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
 80070f8:	e75c      	b.n	8006fb4 <USB_EPStartXfer+0x80>
      if (ep->xfer_len == 0U)
 80070fa:	2c00      	cmp	r4, #0
 80070fc:	d0d4      	beq.n	80070a8 <USB_EPStartXfer+0x174>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 80070fe:	441c      	add	r4, r3
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007100:	4a0a      	ldr	r2, [pc, #40]	@ (800712c <USB_EPStartXfer+0x1f8>)
 8007102:	f8dc e010 	ldr.w	lr, [ip, #16]
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007106:	3c01      	subs	r4, #1
 8007108:	fbb4 f4f3 	udiv	r4, r4, r3
 800710c:	b2a4      	uxth	r4, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800710e:	ea02 42c4 	and.w	r2, r2, r4, lsl #19
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007112:	4363      	muls	r3, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007114:	ea42 020e 	orr.w	r2, r2, lr
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007118:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800711a:	f8cc 2010 	str.w	r2, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 800711e:	f8dc 2010 	ldr.w	r2, [ip, #16]
 8007122:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007126:	4313      	orrs	r3, r2
 8007128:	e7c9      	b.n	80070be <USB_EPStartXfer+0x18a>
 800712a:	bf00      	nop
 800712c:	1ff80000 	.word	0x1ff80000
 8007130:	e007ffff 	.word	0xe007ffff
 8007134:	fff80000 	.word	0xfff80000

08007138 <USB_ReadPacket>:
{
 8007138:	4603      	mov	r3, r0
 800713a:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
 800713c:	2000      	movs	r0, #0
  uint32_t count32b = (uint32_t)len >> 2U;
 800713e:	0894      	lsrs	r4, r2, #2
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8007140:	f503 5580 	add.w	r5, r3, #4096	@ 0x1000
  uint16_t remaining_bytes = len % 4U;
 8007144:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 8007148:	42a0      	cmp	r0, r4
 800714a:	d310      	bcc.n	800716e <USB_ReadPacket+0x36>
 800714c:	eb01 0084 	add.w	r0, r1, r4, lsl #2
  if (remaining_bytes != 0U)
 8007150:	b162      	cbz	r2, 800716c <USB_ReadPacket+0x34>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 8007152:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8007156:	681c      	ldr	r4, [r3, #0]
    i = 0U;
 8007158:	2300      	movs	r3, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 800715a:	00d9      	lsls	r1, r3, #3
 800715c:	fa24 f101 	lsr.w	r1, r4, r1
 8007160:	54c1      	strb	r1, [r0, r3]
      i++;
 8007162:	3301      	adds	r3, #1
    } while (remaining_bytes != 0U);
 8007164:	b299      	uxth	r1, r3
 8007166:	428a      	cmp	r2, r1
 8007168:	d1f7      	bne.n	800715a <USB_ReadPacket+0x22>
 800716a:	4410      	add	r0, r2
}
 800716c:	bd70      	pop	{r4, r5, r6, pc}
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 800716e:	682e      	ldr	r6, [r5, #0]
 8007170:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
  for (i = 0U; i < count32b; i++)
 8007174:	3001      	adds	r0, #1
 8007176:	e7e7      	b.n	8007148 <USB_ReadPacket+0x10>

08007178 <USB_EPSetStall>:
  if (ep->is_in == 1U)
 8007178:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 800717a:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 800717c:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 800717e:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 8007182:	d112      	bne.n	80071aa <USB_EPSetStall+0x32>
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8007184:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 8007188:	2a00      	cmp	r2, #0
 800718a:	db06      	blt.n	800719a <USB_EPSetStall+0x22>
 800718c:	b12b      	cbz	r3, 800719a <USB_EPSetStall+0x22>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 800718e:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007192:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8007196:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 800719a:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 800719e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80071a2:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 80071a6:	2000      	movs	r0, #0
 80071a8:	4770      	bx	lr
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 80071aa:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 80071ae:	2a00      	cmp	r2, #0
 80071b0:	db06      	blt.n	80071c0 <USB_EPSetStall+0x48>
 80071b2:	b12b      	cbz	r3, 80071c0 <USB_EPSetStall+0x48>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 80071b4:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80071b8:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80071bc:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 80071c0:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80071c4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80071c8:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 80071cc:	e7eb      	b.n	80071a6 <USB_EPSetStall+0x2e>

080071ce <USB_EPClearStall>:
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80071ce:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 80071d0:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80071d2:	eb00 1043 	add.w	r0, r0, r3, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80071d6:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
 80071d8:	2a01      	cmp	r2, #1
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80071da:	f1a3 0302 	sub.w	r3, r3, #2
 80071de:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
 80071e0:	d10f      	bne.n	8007202 <USB_EPClearStall+0x34>
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80071e2:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80071e6:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80071e8:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 80071ec:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80071f0:	d805      	bhi.n	80071fe <USB_EPClearStall+0x30>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 80071f2:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80071f6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80071fa:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 80071fe:	2000      	movs	r0, #0
 8007200:	4770      	bx	lr
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007202:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007206:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 800720a:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 800720c:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007210:	bf9e      	ittt	ls
 8007212:	f8d0 3b00 	ldrls.w	r3, [r0, #2816]	@ 0xb00
 8007216:	f043 5380 	orrls.w	r3, r3, #268435456	@ 0x10000000
 800721a:	f8c0 3b00 	strls.w	r3, [r0, #2816]	@ 0xb00
 800721e:	e7ee      	b.n	80071fe <USB_EPClearStall+0x30>

08007220 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 8007220:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007224:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8007228:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 800722c:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007230:	0109      	lsls	r1, r1, #4
 8007232:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
 8007236:	4319      	orrs	r1, r3
 8007238:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 800723c:	2000      	movs	r0, #0
 800723e:	4770      	bx	lr

08007240 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007240:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007244:	f023 0303 	bic.w	r3, r3, #3
 8007248:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 800724c:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007250:	f023 0302 	bic.w	r3, r3, #2
 8007254:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007258:	2000      	movs	r0, #0
 800725a:	4770      	bx	lr

0800725c <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 800725c:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007260:	f023 0303 	bic.w	r3, r3, #3
 8007264:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007268:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 800726c:	f043 0302 	orr.w	r3, r3, #2
 8007270:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007274:	2000      	movs	r0, #0
 8007276:	4770      	bx	lr

08007278 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 8007278:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 800727a:	6980      	ldr	r0, [r0, #24]
}
 800727c:	4010      	ands	r0, r2
 800727e:	4770      	bx	lr

08007280 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8007280:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8007284:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007288:	69c0      	ldr	r0, [r0, #28]
 800728a:	4018      	ands	r0, r3
}
 800728c:	0c00      	lsrs	r0, r0, #16
 800728e:	4770      	bx	lr

08007290 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8007290:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8007294:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007298:	69c0      	ldr	r0, [r0, #28]
 800729a:	4018      	ands	r0, r3
}
 800729c:	b280      	uxth	r0, r0
 800729e:	4770      	bx	lr

080072a0 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 80072a0:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80072a4:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 80072a8:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80072ac:	6940      	ldr	r0, [r0, #20]
}
 80072ae:	4010      	ands	r0, r2
 80072b0:	4770      	bx	lr

080072b2 <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
 80072b2:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 80072b6:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80072ba:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80072be:	f001 010f 	and.w	r1, r1, #15
 80072c2:	40cb      	lsrs	r3, r1
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80072c4:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80072c8:	01db      	lsls	r3, r3, #7
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80072ca:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80072cc:	b2db      	uxtb	r3, r3
 80072ce:	4313      	orrs	r3, r2
}
 80072d0:	4018      	ands	r0, r3
 80072d2:	4770      	bx	lr

080072d4 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 80072d4:	6940      	ldr	r0, [r0, #20]
}
 80072d6:	f000 0001 	and.w	r0, r0, #1
 80072da:	4770      	bx	lr

080072dc <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 80072dc:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80072e0:	f36f 030a 	bfc	r3, #0, #11
 80072e4:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 80072e8:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 80072ec:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80072f0:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 80072f4:	2000      	movs	r0, #0
 80072f6:	4770      	bx	lr

080072f8 <USB_EP0_OutStart>:
{
 80072f8:	b530      	push	{r4, r5, lr}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 80072fa:	6c05      	ldr	r5, [r0, #64]	@ 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 80072fc:	4c10      	ldr	r4, [pc, #64]	@ (8007340 <USB_EP0_OutStart+0x48>)
 80072fe:	42a5      	cmp	r5, r4
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007300:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8007304:	d903      	bls.n	800730e <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007306:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
 800730a:	2c00      	cmp	r4, #0
 800730c:	db16      	blt.n	800733c <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 800730e:	2400      	movs	r4, #0
 8007310:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8007312:	691c      	ldr	r4, [r3, #16]
 8007314:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 8007318:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 800731a:	691c      	ldr	r4, [r3, #16]
 800731c:	f044 0418 	orr.w	r4, r4, #24
 8007320:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007322:	691c      	ldr	r4, [r3, #16]
  if (dma == 1U)
 8007324:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007326:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
 800732a:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 800732c:	bf01      	itttt	eq
 800732e:	615a      	streq	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 8007330:	f8d0 3b00 	ldreq.w	r3, [r0, #2816]	@ 0xb00
 8007334:	f043 2380 	orreq.w	r3, r3, #2147516416	@ 0x80008000
 8007338:	f8c0 3b00 	streq.w	r3, [r0, #2816]	@ 0xb00
}
 800733c:	2000      	movs	r0, #0
 800733e:	bd30      	pop	{r4, r5, pc}
 8007340:	4f54300a 	.word	0x4f54300a

08007344 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007344:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007346:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800734a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800734c:	f001 fe10 	bl	8008f70 <xTaskGetSchedulerState>
 8007350:	2801      	cmp	r0, #1
 8007352:	d003      	beq.n	800735c <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007354:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007358:	f000 bbdc 	b.w	8007b14 <xPortSysTickHandler>
}
 800735c:	bd08      	pop	{r3, pc}
	...

08007360 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007360:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007364:	b92b      	cbnz	r3, 8007372 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007366:	4b06      	ldr	r3, [pc, #24]	@ (8007380 <osKernelInitialize+0x20>)
 8007368:	6818      	ldr	r0, [r3, #0]
 800736a:	b928      	cbnz	r0, 8007378 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800736c:	2201      	movs	r2, #1
 800736e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007370:	4770      	bx	lr
    stat = osErrorISR;
 8007372:	f06f 0005 	mvn.w	r0, #5
 8007376:	4770      	bx	lr
    } else {
      stat = osError;
 8007378:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800737c:	4770      	bx	lr
 800737e:	bf00      	nop
 8007380:	20003958 	.word	0x20003958

08007384 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007384:	b510      	push	{r4, lr}
 8007386:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800738a:	b95c      	cbnz	r4, 80073a4 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800738c:	4b08      	ldr	r3, [pc, #32]	@ (80073b0 <osKernelStart+0x2c>)
 800738e:	681a      	ldr	r2, [r3, #0]
 8007390:	2a01      	cmp	r2, #1
 8007392:	d10a      	bne.n	80073aa <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007394:	4a07      	ldr	r2, [pc, #28]	@ (80073b4 <osKernelStart+0x30>)
 8007396:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8007398:	2202      	movs	r2, #2
 800739a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800739c:	f001 fb56 	bl	8008a4c <vTaskStartScheduler>
      stat = osOK;
 80073a0:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 80073a2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80073a4:	f06f 0005 	mvn.w	r0, #5
 80073a8:	e7fb      	b.n	80073a2 <osKernelStart+0x1e>
      stat = osError;
 80073aa:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80073ae:	e7f8      	b.n	80073a2 <osKernelStart+0x1e>
 80073b0:	20003958 	.word	0x20003958
 80073b4:	e000ed00 	.word	0xe000ed00

080073b8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80073b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80073ba:	b087      	sub	sp, #28
 80073bc:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80073be:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80073c0:	460b      	mov	r3, r1
  hTask = NULL;
 80073c2:	9205      	str	r2, [sp, #20]
 80073c4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80073c8:	b9fa      	cbnz	r2, 800740a <osThreadNew+0x52>
 80073ca:	b1f0      	cbz	r0, 800740a <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80073cc:	b354      	cbz	r4, 8007424 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80073ce:	69a5      	ldr	r5, [r4, #24]
 80073d0:	b125      	cbz	r5, 80073dc <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80073d2:	1e69      	subs	r1, r5, #1
 80073d4:	2937      	cmp	r1, #55	@ 0x37
 80073d6:	d902      	bls.n	80073de <osThreadNew+0x26>
        return (NULL);
 80073d8:	2000      	movs	r0, #0
 80073da:	e017      	b.n	800740c <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 80073dc:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80073de:	6862      	ldr	r2, [r4, #4]
 80073e0:	07d2      	lsls	r2, r2, #31
 80073e2:	d4f9      	bmi.n	80073d8 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 80073e4:	6966      	ldr	r6, [r4, #20]
 80073e6:	b19e      	cbz	r6, 8007410 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80073e8:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80073ea:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 80073ee:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80073f0:	b187      	cbz	r7, 8007414 <osThreadNew+0x5c>
 80073f2:	f1bc 0fab 	cmp.w	ip, #171	@ 0xab
 80073f6:	d908      	bls.n	800740a <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80073f8:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80073fa:	b134      	cbz	r4, 800740a <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80073fc:	b12e      	cbz	r6, 800740a <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80073fe:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007402:	9500      	str	r5, [sp, #0]
 8007404:	f001 fabc 	bl	8008980 <xTaskCreateStatic>
 8007408:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800740a:	9805      	ldr	r0, [sp, #20]
}
 800740c:	b007      	add	sp, #28
 800740e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007410:	2280      	movs	r2, #128	@ 0x80
 8007412:	e7ea      	b.n	80073ea <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007414:	f1bc 0f00 	cmp.w	ip, #0
 8007418:	d1f7      	bne.n	800740a <osThreadNew+0x52>
 800741a:	6924      	ldr	r4, [r4, #16]
 800741c:	2c00      	cmp	r4, #0
 800741e:	d1f4      	bne.n	800740a <osThreadNew+0x52>
 8007420:	460c      	mov	r4, r1
 8007422:	e001      	b.n	8007428 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8007424:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 8007426:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007428:	a905      	add	r1, sp, #20
 800742a:	e9cd 5100 	strd	r5, r1, [sp]
 800742e:	b292      	uxth	r2, r2
 8007430:	4621      	mov	r1, r4
 8007432:	f001 fadd 	bl	80089f0 <xTaskCreate>
 8007436:	2801      	cmp	r0, #1
            hTask = NULL;
 8007438:	bf1c      	itt	ne
 800743a:	2300      	movne	r3, #0
 800743c:	9305      	strne	r3, [sp, #20]
 800743e:	e7e4      	b.n	800740a <osThreadNew+0x52>

08007440 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8007440:	b508      	push	{r3, lr}
 8007442:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007446:	b922      	cbnz	r2, 8007452 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8007448:	b108      	cbz	r0, 800744e <osDelay+0xe>
      vTaskDelay(ticks);
 800744a:	f001 fc67 	bl	8008d1c <vTaskDelay>
    stat = osOK;
 800744e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007450:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8007452:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8007456:	e7fb      	b.n	8007450 <osDelay+0x10>

08007458 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007458:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800745a:	4604      	mov	r4, r0
 800745c:	460e      	mov	r6, r1
 800745e:	4615      	mov	r5, r2
 8007460:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007464:	b942      	cbnz	r2, 8007478 <osSemaphoreNew+0x20>
 8007466:	b138      	cbz	r0, 8007478 <osSemaphoreNew+0x20>
 8007468:	4288      	cmp	r0, r1
 800746a:	d305      	bcc.n	8007478 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800746c:	b155      	cbz	r5, 8007484 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800746e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8007472:	b12b      	cbz	r3, 8007480 <osSemaphoreNew+0x28>
 8007474:	2f4f      	cmp	r7, #79	@ 0x4f
 8007476:	d822      	bhi.n	80074be <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8007478:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800747a:	4620      	mov	r0, r4
 800747c:	b003      	add	sp, #12
 800747e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007480:	2f00      	cmp	r7, #0
 8007482:	d1f9      	bne.n	8007478 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8007484:	2c01      	cmp	r4, #1
 8007486:	d00c      	beq.n	80074a2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007488:	4620      	mov	r0, r4
 800748a:	4631      	mov	r1, r6
 800748c:	f000 fd7a 	bl	8007f84 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007490:	4604      	mov	r4, r0
 8007492:	2800      	cmp	r0, #0
 8007494:	d0f0      	beq.n	8007478 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 8007496:	b985      	cbnz	r5, 80074ba <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8007498:	4629      	mov	r1, r5
 800749a:	4620      	mov	r0, r4
 800749c:	f001 f898 	bl	80085d0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80074a0:	e7eb      	b.n	800747a <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 80074a2:	2203      	movs	r2, #3
 80074a4:	2100      	movs	r1, #0
 80074a6:	2001      	movs	r0, #1
 80074a8:	f000 fd23 	bl	8007ef2 <xQueueGenericCreate>
 80074ac:	e00e      	b.n	80074cc <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80074ae:	461a      	mov	r2, r3
 80074b0:	f000 fd46 	bl	8007f40 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80074b4:	4604      	mov	r4, r0
 80074b6:	2800      	cmp	r0, #0
 80074b8:	d0de      	beq.n	8007478 <osSemaphoreNew+0x20>
          name = attr->name;
 80074ba:	682d      	ldr	r5, [r5, #0]
 80074bc:	e7ec      	b.n	8007498 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 80074be:	2801      	cmp	r0, #1
 80074c0:	d1f5      	bne.n	80074ae <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80074c2:	2103      	movs	r1, #3
 80074c4:	9100      	str	r1, [sp, #0]
 80074c6:	4611      	mov	r1, r2
 80074c8:	f000 fcc5 	bl	8007e56 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 80074cc:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80074ce:	2800      	cmp	r0, #0
 80074d0:	d0d2      	beq.n	8007478 <osSemaphoreNew+0x20>
 80074d2:	2e00      	cmp	r6, #0
 80074d4:	d0df      	beq.n	8007496 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80074d6:	2300      	movs	r3, #0
 80074d8:	461a      	mov	r2, r3
 80074da:	4619      	mov	r1, r3
 80074dc:	f000 fd70 	bl	8007fc0 <xQueueGenericSend>
 80074e0:	2801      	cmp	r0, #1
 80074e2:	d0d8      	beq.n	8007496 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 80074e4:	4620      	mov	r0, r4
 80074e6:	f001 f89d 	bl	8008624 <vQueueDelete>
      if (hSemaphore != NULL) {
 80074ea:	e7c5      	b.n	8007478 <osSemaphoreNew+0x20>

080074ec <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80074ec:	b513      	push	{r0, r1, r4, lr}
 80074ee:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80074f0:	b328      	cbz	r0, 800753e <osSemaphoreAcquire+0x52>
 80074f2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80074f6:	b1cb      	cbz	r3, 800752c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 80074f8:	bb09      	cbnz	r1, 800753e <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80074fa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80074fc:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80074fe:	f001 f81a 	bl	8008536 <xQueueReceiveFromISR>
 8007502:	2801      	cmp	r0, #1
 8007504:	d003      	beq.n	800750e <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8007506:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800750a:	b002      	add	sp, #8
 800750c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800750e:	9b01      	ldr	r3, [sp, #4]
 8007510:	b90b      	cbnz	r3, 8007516 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8007512:	2000      	movs	r0, #0
 8007514:	e7f9      	b.n	800750a <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 8007516:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800751a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800751e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007522:	f3bf 8f4f 	dsb	sy
 8007526:	f3bf 8f6f 	isb	sy
 800752a:	e7f2      	b.n	8007512 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800752c:	f000 ff46 	bl	80083bc <xQueueSemaphoreTake>
 8007530:	2801      	cmp	r0, #1
 8007532:	d0ee      	beq.n	8007512 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8007534:	2c00      	cmp	r4, #0
 8007536:	d0e6      	beq.n	8007506 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 8007538:	f06f 0001 	mvn.w	r0, #1
 800753c:	e7e5      	b.n	800750a <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800753e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007542:	e7e2      	b.n	800750a <osSemaphoreAcquire+0x1e>

08007544 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007544:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007546:	b318      	cbz	r0, 8007590 <osSemaphoreRelease+0x4c>
 8007548:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800754c:	b1cb      	cbz	r3, 8007582 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800754e:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007550:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007552:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007554:	f000 fe43 	bl	80081de <xQueueGiveFromISR>
 8007558:	2801      	cmp	r0, #1
 800755a:	d004      	beq.n	8007566 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800755c:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8007560:	b003      	add	sp, #12
 8007562:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8007566:	9b01      	ldr	r3, [sp, #4]
 8007568:	b14b      	cbz	r3, 800757e <osSemaphoreRelease+0x3a>
 800756a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800756e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007572:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007576:	f3bf 8f4f 	dsb	sy
 800757a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800757e:	2000      	movs	r0, #0
 8007580:	e7ee      	b.n	8007560 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007582:	461a      	mov	r2, r3
 8007584:	4619      	mov	r1, r3
 8007586:	f000 fd1b 	bl	8007fc0 <xQueueGenericSend>
 800758a:	2801      	cmp	r0, #1
 800758c:	d0f7      	beq.n	800757e <osSemaphoreRelease+0x3a>
 800758e:	e7e5      	b.n	800755c <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8007590:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007594:	e7e4      	b.n	8007560 <osSemaphoreRelease+0x1c>

08007596 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007596:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007598:	4605      	mov	r5, r0
 800759a:	460e      	mov	r6, r1
 800759c:	4614      	mov	r4, r2
 800759e:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80075a2:	b11f      	cbz	r7, 80075ac <osMessageQueueNew+0x16>
  hQueue = NULL;
 80075a4:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80075a6:	4628      	mov	r0, r5
 80075a8:	b003      	add	sp, #12
 80075aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80075ac:	2800      	cmp	r0, #0
 80075ae:	d0f9      	beq.n	80075a4 <osMessageQueueNew+0xe>
 80075b0:	2900      	cmp	r1, #0
 80075b2:	d0f7      	beq.n	80075a4 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80075b4:	b1da      	cbz	r2, 80075ee <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80075b6:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80075ba:	b183      	cbz	r3, 80075de <osMessageQueueNew+0x48>
 80075bc:	2a4f      	cmp	r2, #79	@ 0x4f
 80075be:	d9f1      	bls.n	80075a4 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80075c0:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80075c2:	2a00      	cmp	r2, #0
 80075c4:	d0ee      	beq.n	80075a4 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80075c6:	6966      	ldr	r6, [r4, #20]
 80075c8:	434d      	muls	r5, r1
 80075ca:	42ae      	cmp	r6, r5
 80075cc:	d3ea      	bcc.n	80075a4 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80075ce:	9700      	str	r7, [sp, #0]
 80075d0:	f000 fc41 	bl	8007e56 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80075d4:	4605      	mov	r5, r0
 80075d6:	2800      	cmp	r0, #0
 80075d8:	d0e4      	beq.n	80075a4 <osMessageQueueNew+0xe>
        name = attr->name;
 80075da:	6824      	ldr	r4, [r4, #0]
 80075dc:	e011      	b.n	8007602 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80075de:	2a00      	cmp	r2, #0
 80075e0:	d1e0      	bne.n	80075a4 <osMessageQueueNew+0xe>
 80075e2:	6923      	ldr	r3, [r4, #16]
 80075e4:	2b00      	cmp	r3, #0
 80075e6:	d1dd      	bne.n	80075a4 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80075e8:	6963      	ldr	r3, [r4, #20]
 80075ea:	2b00      	cmp	r3, #0
 80075ec:	d1da      	bne.n	80075a4 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80075ee:	4628      	mov	r0, r5
 80075f0:	2200      	movs	r2, #0
 80075f2:	4631      	mov	r1, r6
 80075f4:	f000 fc7d 	bl	8007ef2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80075f8:	4605      	mov	r5, r0
 80075fa:	2800      	cmp	r0, #0
 80075fc:	d0d2      	beq.n	80075a4 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80075fe:	2c00      	cmp	r4, #0
 8007600:	d1eb      	bne.n	80075da <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8007602:	4621      	mov	r1, r4
 8007604:	4628      	mov	r0, r5
 8007606:	f000 ffe3 	bl	80085d0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800760a:	e7cc      	b.n	80075a6 <osMessageQueueNew+0x10>

0800760c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800760c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800760e:	461c      	mov	r4, r3
 8007610:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007614:	b1de      	cbz	r6, 800764e <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007616:	b338      	cbz	r0, 8007668 <osMessageQueuePut+0x5c>
 8007618:	b331      	cbz	r1, 8007668 <osMessageQueuePut+0x5c>
 800761a:	bb2b      	cbnz	r3, 8007668 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800761c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800761e:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007620:	f000 fd80 	bl	8008124 <xQueueGenericSendFromISR>
 8007624:	2801      	cmp	r0, #1
 8007626:	d003      	beq.n	8007630 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8007628:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800762c:	b002      	add	sp, #8
 800762e:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8007630:	9b01      	ldr	r3, [sp, #4]
 8007632:	b90b      	cbnz	r3, 8007638 <osMessageQueuePut+0x2c>
  stat = osOK;
 8007634:	2000      	movs	r0, #0
 8007636:	e7f9      	b.n	800762c <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8007638:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800763c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007640:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007644:	f3bf 8f4f 	dsb	sy
 8007648:	f3bf 8f6f 	isb	sy
 800764c:	e7f2      	b.n	8007634 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800764e:	b158      	cbz	r0, 8007668 <osMessageQueuePut+0x5c>
 8007650:	b151      	cbz	r1, 8007668 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007652:	4633      	mov	r3, r6
 8007654:	4622      	mov	r2, r4
 8007656:	f000 fcb3 	bl	8007fc0 <xQueueGenericSend>
 800765a:	2801      	cmp	r0, #1
 800765c:	d0ea      	beq.n	8007634 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800765e:	2c00      	cmp	r4, #0
 8007660:	d0e2      	beq.n	8007628 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8007662:	f06f 0001 	mvn.w	r0, #1
 8007666:	e7e1      	b.n	800762c <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8007668:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800766c:	e7de      	b.n	800762c <osMessageQueuePut+0x20>

0800766e <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800766e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007670:	461c      	mov	r4, r3
 8007672:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007676:	b1db      	cbz	r3, 80076b0 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007678:	b330      	cbz	r0, 80076c8 <osMessageQueueGet+0x5a>
 800767a:	b329      	cbz	r1, 80076c8 <osMessageQueueGet+0x5a>
 800767c:	bb24      	cbnz	r4, 80076c8 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800767e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007680:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007682:	f000 ff58 	bl	8008536 <xQueueReceiveFromISR>
 8007686:	2801      	cmp	r0, #1
 8007688:	d003      	beq.n	8007692 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 800768a:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800768e:	b003      	add	sp, #12
 8007690:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8007692:	9b01      	ldr	r3, [sp, #4]
 8007694:	b90b      	cbnz	r3, 800769a <osMessageQueueGet+0x2c>
  stat = osOK;
 8007696:	2000      	movs	r0, #0
 8007698:	e7f9      	b.n	800768e <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 800769a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800769e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80076a2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80076a6:	f3bf 8f4f 	dsb	sy
 80076aa:	f3bf 8f6f 	isb	sy
 80076ae:	e7f2      	b.n	8007696 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80076b0:	b150      	cbz	r0, 80076c8 <osMessageQueueGet+0x5a>
 80076b2:	b149      	cbz	r1, 80076c8 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80076b4:	4622      	mov	r2, r4
 80076b6:	f000 fde3 	bl	8008280 <xQueueReceive>
 80076ba:	2801      	cmp	r0, #1
 80076bc:	d0eb      	beq.n	8007696 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 80076be:	2c00      	cmp	r4, #0
 80076c0:	d0e3      	beq.n	800768a <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 80076c2:	f06f 0001 	mvn.w	r0, #1
 80076c6:	e7e2      	b.n	800768e <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 80076c8:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80076cc:	e7df      	b.n	800768e <osMessageQueueGet+0x20>
	...

080076d0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80076d0:	4b03      	ldr	r3, [pc, #12]	@ (80076e0 <vApplicationGetIdleTaskMemory+0x10>)
 80076d2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80076d4:	4b03      	ldr	r3, [pc, #12]	@ (80076e4 <vApplicationGetIdleTaskMemory+0x14>)
 80076d6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80076d8:	2380      	movs	r3, #128	@ 0x80
 80076da:	6013      	str	r3, [r2, #0]
}
 80076dc:	4770      	bx	lr
 80076de:	bf00      	nop
 80076e0:	200038ac 	.word	0x200038ac
 80076e4:	200036ac 	.word	0x200036ac

080076e8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80076e8:	4b03      	ldr	r3, [pc, #12]	@ (80076f8 <vApplicationGetTimerTaskMemory+0x10>)
 80076ea:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80076ec:	4b03      	ldr	r3, [pc, #12]	@ (80076fc <vApplicationGetTimerTaskMemory+0x14>)
 80076ee:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80076f0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80076f4:	6013      	str	r3, [r2, #0]
}
 80076f6:	4770      	bx	lr
 80076f8:	20003600 	.word	0x20003600
 80076fc:	20003200 	.word	0x20003200

08007700 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007700:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007702:	4b10      	ldr	r3, [pc, #64]	@ (8007744 <prvInsertBlockIntoFreeList+0x44>)
 8007704:	461a      	mov	r2, r3
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	4283      	cmp	r3, r0
 800770a:	d3fb      	bcc.n	8007704 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800770c:	6854      	ldr	r4, [r2, #4]
 800770e:	1911      	adds	r1, r2, r4
 8007710:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007712:	bf01      	itttt	eq
 8007714:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 8007716:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007718:	1909      	addeq	r1, r1, r4
 800771a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800771c:	6844      	ldr	r4, [r0, #4]
 800771e:	1901      	adds	r1, r0, r4
 8007720:	428b      	cmp	r3, r1
 8007722:	d10c      	bne.n	800773e <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007724:	4908      	ldr	r1, [pc, #32]	@ (8007748 <prvInsertBlockIntoFreeList+0x48>)
 8007726:	6809      	ldr	r1, [r1, #0]
 8007728:	428b      	cmp	r3, r1
 800772a:	d003      	beq.n	8007734 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800772c:	6859      	ldr	r1, [r3, #4]
 800772e:	4421      	add	r1, r4
 8007730:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007732:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8007734:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007736:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007738:	bf18      	it	ne
 800773a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800773c:	bd10      	pop	{r4, pc}
 800773e:	4619      	mov	r1, r3
 8007740:	e7f8      	b.n	8007734 <prvInsertBlockIntoFreeList+0x34>
 8007742:	bf00      	nop
 8007744:	20003974 	.word	0x20003974
 8007748:	20003970 	.word	0x20003970

0800774c <pvPortMalloc>:
{
 800774c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007750:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007752:	f001 f9cb 	bl	8008aec <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007756:	4942      	ldr	r1, [pc, #264]	@ (8007860 <pvPortMalloc+0x114>)
 8007758:	4d42      	ldr	r5, [pc, #264]	@ (8007864 <pvPortMalloc+0x118>)
 800775a:	680b      	ldr	r3, [r1, #0]
 800775c:	bb0b      	cbnz	r3, 80077a2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800775e:	4a42      	ldr	r2, [pc, #264]	@ (8007868 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007760:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007762:	bf1f      	itttt	ne
 8007764:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007766:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800776a:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800776e:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007770:	bf0c      	ite	eq
 8007772:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007776:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007778:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800777a:	4e3c      	ldr	r6, [pc, #240]	@ (800786c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800777c:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800777e:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007782:	2000      	movs	r0, #0
 8007784:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007786:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007788:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800778c:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800778e:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8007792:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007794:	4b36      	ldr	r3, [pc, #216]	@ (8007870 <pvPortMalloc+0x124>)
 8007796:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007798:	4b36      	ldr	r3, [pc, #216]	@ (8007874 <pvPortMalloc+0x128>)
 800779a:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800779c:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 80077a0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80077a2:	682e      	ldr	r6, [r5, #0]
 80077a4:	4226      	tst	r6, r4
 80077a6:	d155      	bne.n	8007854 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 80077a8:	2c00      	cmp	r4, #0
 80077aa:	d046      	beq.n	800783a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 80077ac:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80077b0:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80077b2:	bf1c      	itt	ne
 80077b4:	f023 0307 	bicne.w	r3, r3, #7
 80077b8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80077ba:	2b00      	cmp	r3, #0
 80077bc:	d04a      	beq.n	8007854 <pvPortMalloc+0x108>
 80077be:	4f2d      	ldr	r7, [pc, #180]	@ (8007874 <pvPortMalloc+0x128>)
 80077c0:	683c      	ldr	r4, [r7, #0]
 80077c2:	429c      	cmp	r4, r3
 80077c4:	d346      	bcc.n	8007854 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 80077c6:	4a29      	ldr	r2, [pc, #164]	@ (800786c <pvPortMalloc+0x120>)
 80077c8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80077ca:	6868      	ldr	r0, [r5, #4]
 80077cc:	4298      	cmp	r0, r3
 80077ce:	d204      	bcs.n	80077da <pvPortMalloc+0x8e>
 80077d0:	f8d5 c000 	ldr.w	ip, [r5]
 80077d4:	f1bc 0f00 	cmp.w	ip, #0
 80077d8:	d115      	bne.n	8007806 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80077da:	6809      	ldr	r1, [r1, #0]
 80077dc:	42a9      	cmp	r1, r5
 80077de:	d039      	beq.n	8007854 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80077e0:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80077e2:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80077e6:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80077e8:	1ac2      	subs	r2, r0, r3
 80077ea:	2a10      	cmp	r2, #16
 80077ec:	d912      	bls.n	8007814 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80077ee:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80077f0:	0741      	lsls	r1, r0, #29
 80077f2:	d00b      	beq.n	800780c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80077f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077f8:	f383 8811 	msr	BASEPRI, r3
 80077fc:	f3bf 8f6f 	isb	sy
 8007800:	f3bf 8f4f 	dsb	sy
 8007804:	e7fe      	b.n	8007804 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 8007806:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 8007808:	4665      	mov	r5, ip
 800780a:	e7de      	b.n	80077ca <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800780c:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800780e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007810:	f7ff ff76 	bl	8007700 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007814:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007816:	4916      	ldr	r1, [pc, #88]	@ (8007870 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007818:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800781a:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 800781c:	4a16      	ldr	r2, [pc, #88]	@ (8007878 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800781e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007820:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8007822:	2300      	movs	r3, #0
 8007824:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8007826:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007828:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800782a:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 800782c:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007830:	bf38      	it	cc
 8007832:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8007834:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007836:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800783a:	f001 f9fb 	bl	8008c34 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800783e:	0763      	lsls	r3, r4, #29
 8007840:	d00a      	beq.n	8007858 <pvPortMalloc+0x10c>
 8007842:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007846:	f383 8811 	msr	BASEPRI, r3
 800784a:	f3bf 8f6f 	isb	sy
 800784e:	f3bf 8f4f 	dsb	sy
 8007852:	e7fe      	b.n	8007852 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8007854:	2400      	movs	r4, #0
 8007856:	e7f0      	b.n	800783a <pvPortMalloc+0xee>
}
 8007858:	4620      	mov	r0, r4
 800785a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800785e:	bf00      	nop
 8007860:	20003970 	.word	0x20003970
 8007864:	2000395c 	.word	0x2000395c
 8007868:	2000397c 	.word	0x2000397c
 800786c:	20003974 	.word	0x20003974
 8007870:	20003968 	.word	0x20003968
 8007874:	2000396c 	.word	0x2000396c
 8007878:	20003964 	.word	0x20003964

0800787c <vPortFree>:
{
 800787c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800787e:	4604      	mov	r4, r0
 8007880:	b390      	cbz	r0, 80078e8 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007882:	4a1a      	ldr	r2, [pc, #104]	@ (80078ec <vPortFree+0x70>)
 8007884:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007888:	6812      	ldr	r2, [r2, #0]
 800788a:	4213      	tst	r3, r2
 800788c:	d108      	bne.n	80078a0 <vPortFree+0x24>
 800788e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007892:	f383 8811 	msr	BASEPRI, r3
 8007896:	f3bf 8f6f 	isb	sy
 800789a:	f3bf 8f4f 	dsb	sy
 800789e:	e7fe      	b.n	800789e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80078a0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80078a4:	b141      	cbz	r1, 80078b8 <vPortFree+0x3c>
 80078a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80078aa:	f383 8811 	msr	BASEPRI, r3
 80078ae:	f3bf 8f6f 	isb	sy
 80078b2:	f3bf 8f4f 	dsb	sy
 80078b6:	e7fe      	b.n	80078b6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80078b8:	ea23 0302 	bic.w	r3, r3, r2
 80078bc:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80078c0:	f001 f914 	bl	8008aec <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80078c4:	4a0a      	ldr	r2, [pc, #40]	@ (80078f0 <vPortFree+0x74>)
 80078c6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80078ca:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80078cc:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80078d0:	440b      	add	r3, r1
 80078d2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80078d4:	f7ff ff14 	bl	8007700 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80078d8:	4a06      	ldr	r2, [pc, #24]	@ (80078f4 <vPortFree+0x78>)
 80078da:	6813      	ldr	r3, [r2, #0]
}
 80078dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80078e0:	3301      	adds	r3, #1
 80078e2:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80078e4:	f001 b9a6 	b.w	8008c34 <xTaskResumeAll>
}
 80078e8:	bd10      	pop	{r4, pc}
 80078ea:	bf00      	nop
 80078ec:	2000395c 	.word	0x2000395c
 80078f0:	2000396c 	.word	0x2000396c
 80078f4:	20003960 	.word	0x20003960

080078f8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80078f8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80078fc:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007900:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007904:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007906:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007908:	2300      	movs	r3, #0
 800790a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800790c:	4770      	bx	lr

0800790e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800790e:	2300      	movs	r3, #0
 8007910:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007912:	4770      	bx	lr

08007914 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007914:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007916:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007918:	689a      	ldr	r2, [r3, #8]
 800791a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800791c:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800791e:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007920:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007922:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007924:	3301      	adds	r3, #1
 8007926:	6003      	str	r3, [r0, #0]
}
 8007928:	4770      	bx	lr

0800792a <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800792a:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800792c:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800792e:	1c63      	adds	r3, r4, #1
 8007930:	d10a      	bne.n	8007948 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007932:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007934:	685a      	ldr	r2, [r3, #4]
 8007936:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007938:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800793a:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800793c:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800793e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007940:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007942:	3301      	adds	r3, #1
 8007944:	6003      	str	r3, [r0, #0]
}
 8007946:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007948:	f100 0208 	add.w	r2, r0, #8
 800794c:	4613      	mov	r3, r2
 800794e:	6852      	ldr	r2, [r2, #4]
 8007950:	6815      	ldr	r5, [r2, #0]
 8007952:	42a5      	cmp	r5, r4
 8007954:	d9fa      	bls.n	800794c <vListInsert+0x22>
 8007956:	e7ed      	b.n	8007934 <vListInsert+0xa>

08007958 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007958:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800795c:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800795e:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007960:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007962:	6859      	ldr	r1, [r3, #4]
 8007964:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007966:	bf08      	it	eq
 8007968:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800796a:	2200      	movs	r2, #0
 800796c:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800796e:	681a      	ldr	r2, [r3, #0]
 8007970:	3a01      	subs	r2, #1
 8007972:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007974:	6818      	ldr	r0, [r3, #0]
}
 8007976:	4770      	bx	lr

08007978 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007978:	4808      	ldr	r0, [pc, #32]	@ (800799c <prvPortStartFirstTask+0x24>)
 800797a:	6800      	ldr	r0, [r0, #0]
 800797c:	6800      	ldr	r0, [r0, #0]
 800797e:	f380 8808 	msr	MSP, r0
 8007982:	f04f 0000 	mov.w	r0, #0
 8007986:	f380 8814 	msr	CONTROL, r0
 800798a:	b662      	cpsie	i
 800798c:	b661      	cpsie	f
 800798e:	f3bf 8f4f 	dsb	sy
 8007992:	f3bf 8f6f 	isb	sy
 8007996:	df00      	svc	0
 8007998:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800799a:	0000      	.short	0x0000
 800799c:	e000ed08 	.word	0xe000ed08

080079a0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80079a0:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 80079b0 <vPortEnableVFP+0x10>
 80079a4:	6801      	ldr	r1, [r0, #0]
 80079a6:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80079aa:	6001      	str	r1, [r0, #0]
 80079ac:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80079ae:	0000      	.short	0x0000
 80079b0:	e000ed88 	.word	0xe000ed88

080079b4 <prvTaskExitError>:
{
 80079b4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80079b6:	2300      	movs	r3, #0
 80079b8:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80079ba:	4b0d      	ldr	r3, [pc, #52]	@ (80079f0 <prvTaskExitError+0x3c>)
 80079bc:	681b      	ldr	r3, [r3, #0]
 80079be:	3301      	adds	r3, #1
 80079c0:	d008      	beq.n	80079d4 <prvTaskExitError+0x20>
 80079c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079c6:	f383 8811 	msr	BASEPRI, r3
 80079ca:	f3bf 8f6f 	isb	sy
 80079ce:	f3bf 8f4f 	dsb	sy
 80079d2:	e7fe      	b.n	80079d2 <prvTaskExitError+0x1e>
 80079d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079d8:	f383 8811 	msr	BASEPRI, r3
 80079dc:	f3bf 8f6f 	isb	sy
 80079e0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80079e4:	9b01      	ldr	r3, [sp, #4]
 80079e6:	2b00      	cmp	r3, #0
 80079e8:	d0fc      	beq.n	80079e4 <prvTaskExitError+0x30>
}
 80079ea:	b002      	add	sp, #8
 80079ec:	4770      	bx	lr
 80079ee:	bf00      	nop
 80079f0:	200000d8 	.word	0x200000d8

080079f4 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80079f4:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80079f8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80079fc:	4b07      	ldr	r3, [pc, #28]	@ (8007a1c <pxPortInitialiseStack+0x28>)
 80079fe:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007a02:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007a06:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007a0a:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007a0e:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007a12:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007a16:	3844      	subs	r0, #68	@ 0x44
 8007a18:	4770      	bx	lr
 8007a1a:	bf00      	nop
 8007a1c:	080079b5 	.word	0x080079b5

08007a20 <SVC_Handler>:
	__asm volatile (
 8007a20:	4b07      	ldr	r3, [pc, #28]	@ (8007a40 <pxCurrentTCBConst2>)
 8007a22:	6819      	ldr	r1, [r3, #0]
 8007a24:	6808      	ldr	r0, [r1, #0]
 8007a26:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a2a:	f380 8809 	msr	PSP, r0
 8007a2e:	f3bf 8f6f 	isb	sy
 8007a32:	f04f 0000 	mov.w	r0, #0
 8007a36:	f380 8811 	msr	BASEPRI, r0
 8007a3a:	4770      	bx	lr
 8007a3c:	f3af 8000 	nop.w

08007a40 <pxCurrentTCBConst2>:
 8007a40:	20013ebc 	.word	0x20013ebc

08007a44 <vPortEnterCritical>:
 8007a44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a48:	f383 8811 	msr	BASEPRI, r3
 8007a4c:	f3bf 8f6f 	isb	sy
 8007a50:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007a54:	4a0a      	ldr	r2, [pc, #40]	@ (8007a80 <vPortEnterCritical+0x3c>)
 8007a56:	6813      	ldr	r3, [r2, #0]
 8007a58:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8007a5a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8007a5c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8007a5e:	d10e      	bne.n	8007a7e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007a60:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007a64:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8007a68:	b2db      	uxtb	r3, r3
 8007a6a:	b143      	cbz	r3, 8007a7e <vPortEnterCritical+0x3a>
 8007a6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a70:	f383 8811 	msr	BASEPRI, r3
 8007a74:	f3bf 8f6f 	isb	sy
 8007a78:	f3bf 8f4f 	dsb	sy
 8007a7c:	e7fe      	b.n	8007a7c <vPortEnterCritical+0x38>
}
 8007a7e:	4770      	bx	lr
 8007a80:	200000d8 	.word	0x200000d8

08007a84 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007a84:	4a08      	ldr	r2, [pc, #32]	@ (8007aa8 <vPortExitCritical+0x24>)
 8007a86:	6813      	ldr	r3, [r2, #0]
 8007a88:	b943      	cbnz	r3, 8007a9c <vPortExitCritical+0x18>
 8007a8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a8e:	f383 8811 	msr	BASEPRI, r3
 8007a92:	f3bf 8f6f 	isb	sy
 8007a96:	f3bf 8f4f 	dsb	sy
 8007a9a:	e7fe      	b.n	8007a9a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007a9c:	3b01      	subs	r3, #1
 8007a9e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007aa0:	b90b      	cbnz	r3, 8007aa6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007aa2:	f383 8811 	msr	BASEPRI, r3
}
 8007aa6:	4770      	bx	lr
 8007aa8:	200000d8 	.word	0x200000d8
 8007aac:	00000000 	.word	0x00000000

08007ab0 <PendSV_Handler>:
	__asm volatile
 8007ab0:	f3ef 8009 	mrs	r0, PSP
 8007ab4:	f3bf 8f6f 	isb	sy
 8007ab8:	4b15      	ldr	r3, [pc, #84]	@ (8007b10 <pxCurrentTCBConst>)
 8007aba:	681a      	ldr	r2, [r3, #0]
 8007abc:	f01e 0f10 	tst.w	lr, #16
 8007ac0:	bf08      	it	eq
 8007ac2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007ac6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007aca:	6010      	str	r0, [r2, #0]
 8007acc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007ad0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8007ad4:	f380 8811 	msr	BASEPRI, r0
 8007ad8:	f3bf 8f4f 	dsb	sy
 8007adc:	f3bf 8f6f 	isb	sy
 8007ae0:	f001 f940 	bl	8008d64 <vTaskSwitchContext>
 8007ae4:	f04f 0000 	mov.w	r0, #0
 8007ae8:	f380 8811 	msr	BASEPRI, r0
 8007aec:	bc09      	pop	{r0, r3}
 8007aee:	6819      	ldr	r1, [r3, #0]
 8007af0:	6808      	ldr	r0, [r1, #0]
 8007af2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007af6:	f01e 0f10 	tst.w	lr, #16
 8007afa:	bf08      	it	eq
 8007afc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007b00:	f380 8809 	msr	PSP, r0
 8007b04:	f3bf 8f6f 	isb	sy
 8007b08:	4770      	bx	lr
 8007b0a:	bf00      	nop
 8007b0c:	f3af 8000 	nop.w

08007b10 <pxCurrentTCBConst>:
 8007b10:	20013ebc 	.word	0x20013ebc

08007b14 <xPortSysTickHandler>:
{
 8007b14:	b508      	push	{r3, lr}
	__asm volatile
 8007b16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b1a:	f383 8811 	msr	BASEPRI, r3
 8007b1e:	f3bf 8f6f 	isb	sy
 8007b22:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007b26:	f000 ffef 	bl	8008b08 <xTaskIncrementTick>
 8007b2a:	b128      	cbz	r0, 8007b38 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007b2c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007b30:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007b34:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8007b38:	2300      	movs	r3, #0
 8007b3a:	f383 8811 	msr	BASEPRI, r3
}
 8007b3e:	bd08      	pop	{r3, pc}

08007b40 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007b40:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8007b44:	2300      	movs	r3, #0
 8007b46:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007b48:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007b4a:	4b05      	ldr	r3, [pc, #20]	@ (8007b60 <vPortSetupTimerInterrupt+0x20>)
 8007b4c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8007b50:	681b      	ldr	r3, [r3, #0]
 8007b52:	fbb3 f3f1 	udiv	r3, r3, r1
 8007b56:	3b01      	subs	r3, #1
 8007b58:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007b5a:	2307      	movs	r3, #7
 8007b5c:	6113      	str	r3, [r2, #16]
}
 8007b5e:	4770      	bx	lr
 8007b60:	200000cc 	.word	0x200000cc

08007b64 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007b64:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8007b68:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007b6a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 8007b6e:	4a38      	ldr	r2, [pc, #224]	@ (8007c50 <xPortStartScheduler+0xec>)
 8007b70:	4291      	cmp	r1, r2
 8007b72:	d108      	bne.n	8007b86 <xPortStartScheduler+0x22>
	__asm volatile
 8007b74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b78:	f383 8811 	msr	BASEPRI, r3
 8007b7c:	f3bf 8f6f 	isb	sy
 8007b80:	f3bf 8f4f 	dsb	sy
 8007b84:	e7fe      	b.n	8007b84 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007b86:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 8007b8a:	4b32      	ldr	r3, [pc, #200]	@ (8007c54 <xPortStartScheduler+0xf0>)
 8007b8c:	429a      	cmp	r2, r3
 8007b8e:	d108      	bne.n	8007ba2 <xPortStartScheduler+0x3e>
 8007b90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b94:	f383 8811 	msr	BASEPRI, r3
 8007b98:	f3bf 8f6f 	isb	sy
 8007b9c:	f3bf 8f4f 	dsb	sy
 8007ba0:	e7fe      	b.n	8007ba0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007ba2:	4b2d      	ldr	r3, [pc, #180]	@ (8007c58 <xPortStartScheduler+0xf4>)
 8007ba4:	781a      	ldrb	r2, [r3, #0]
 8007ba6:	b2d2      	uxtb	r2, r2
 8007ba8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007baa:	22ff      	movs	r2, #255	@ 0xff
 8007bac:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007bae:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007bb0:	4a2a      	ldr	r2, [pc, #168]	@ (8007c5c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007bb2:	b2db      	uxtb	r3, r3
 8007bb4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007bb8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007bbc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8007bc0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007bc2:	4a27      	ldr	r2, [pc, #156]	@ (8007c60 <xPortStartScheduler+0xfc>)
 8007bc4:	2307      	movs	r3, #7
 8007bc6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007bc8:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8007bcc:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007bce:	0609      	lsls	r1, r1, #24
 8007bd0:	d40a      	bmi.n	8007be8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007bd2:	2b03      	cmp	r3, #3
 8007bd4:	d011      	beq.n	8007bfa <xPortStartScheduler+0x96>
 8007bd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bda:	f383 8811 	msr	BASEPRI, r3
 8007bde:	f3bf 8f6f 	isb	sy
 8007be2:	f3bf 8f4f 	dsb	sy
 8007be6:	e7fe      	b.n	8007be6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8007be8:	3b01      	subs	r3, #1
 8007bea:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007bec:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007bf0:	005b      	lsls	r3, r3, #1
 8007bf2:	b2db      	uxtb	r3, r3
 8007bf4:	f88d 3003 	strb.w	r3, [sp, #3]
 8007bf8:	e7e6      	b.n	8007bc8 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007bfa:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8007bfe:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007c00:	9b01      	ldr	r3, [sp, #4]
 8007c02:	4a15      	ldr	r2, [pc, #84]	@ (8007c58 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007c04:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007c08:	b2db      	uxtb	r3, r3
 8007c0a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007c0c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007c10:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8007c14:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007c18:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007c1c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8007c20:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8007c24:	f7ff ff8c 	bl	8007b40 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007c28:	4b0e      	ldr	r3, [pc, #56]	@ (8007c64 <xPortStartScheduler+0x100>)
 8007c2a:	2500      	movs	r5, #0
 8007c2c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007c2e:	f7ff feb7 	bl	80079a0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007c32:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8007c36:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8007c3a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 8007c3e:	f7ff fe9b 	bl	8007978 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007c42:	f001 f88f 	bl	8008d64 <vTaskSwitchContext>
	prvTaskExitError();
 8007c46:	f7ff feb5 	bl	80079b4 <prvTaskExitError>
}
 8007c4a:	4628      	mov	r0, r5
 8007c4c:	b003      	add	sp, #12
 8007c4e:	bd30      	pop	{r4, r5, pc}
 8007c50:	410fc271 	.word	0x410fc271
 8007c54:	410fc270 	.word	0x410fc270
 8007c58:	e000e400 	.word	0xe000e400
 8007c5c:	20013980 	.word	0x20013980
 8007c60:	2001397c 	.word	0x2001397c
 8007c64:	200000d8 	.word	0x200000d8

08007c68 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007c68:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007c6c:	2b0f      	cmp	r3, #15
 8007c6e:	d90e      	bls.n	8007c8e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007c70:	4a11      	ldr	r2, [pc, #68]	@ (8007cb8 <vPortValidateInterruptPriority+0x50>)
 8007c72:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007c74:	4a11      	ldr	r2, [pc, #68]	@ (8007cbc <vPortValidateInterruptPriority+0x54>)
 8007c76:	7812      	ldrb	r2, [r2, #0]
 8007c78:	429a      	cmp	r2, r3
 8007c7a:	d908      	bls.n	8007c8e <vPortValidateInterruptPriority+0x26>
 8007c7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c80:	f383 8811 	msr	BASEPRI, r3
 8007c84:	f3bf 8f6f 	isb	sy
 8007c88:	f3bf 8f4f 	dsb	sy
 8007c8c:	e7fe      	b.n	8007c8c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007c8e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007c92:	4a0b      	ldr	r2, [pc, #44]	@ (8007cc0 <vPortValidateInterruptPriority+0x58>)
 8007c94:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8007c98:	6812      	ldr	r2, [r2, #0]
 8007c9a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007c9e:	4293      	cmp	r3, r2
 8007ca0:	d908      	bls.n	8007cb4 <vPortValidateInterruptPriority+0x4c>
 8007ca2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ca6:	f383 8811 	msr	BASEPRI, r3
 8007caa:	f3bf 8f6f 	isb	sy
 8007cae:	f3bf 8f4f 	dsb	sy
 8007cb2:	e7fe      	b.n	8007cb2 <vPortValidateInterruptPriority+0x4a>
	}
 8007cb4:	4770      	bx	lr
 8007cb6:	bf00      	nop
 8007cb8:	e000e3f0 	.word	0xe000e3f0
 8007cbc:	20013980 	.word	0x20013980
 8007cc0:	2001397c 	.word	0x2001397c

08007cc4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007cc4:	b510      	push	{r4, lr}
 8007cc6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007cc8:	f7ff febc 	bl	8007a44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007ccc:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007cce:	f7ff fed9 	bl	8007a84 <vPortExitCritical>

	return xReturn;
}
 8007cd2:	fab4 f084 	clz	r0, r4
 8007cd6:	0940      	lsrs	r0, r0, #5
 8007cd8:	bd10      	pop	{r4, pc}

08007cda <prvCopyDataToQueue>:
{
 8007cda:	b570      	push	{r4, r5, r6, lr}
 8007cdc:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007cde:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007ce0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8007ce2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007ce4:	b942      	cbnz	r2, 8007cf8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007ce6:	6806      	ldr	r6, [r0, #0]
 8007ce8:	b99e      	cbnz	r6, 8007d12 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007cea:	6880      	ldr	r0, [r0, #8]
 8007cec:	f001 f98e 	bl	800900c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007cf0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007cf2:	3501      	adds	r5, #1
 8007cf4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8007cf6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007cf8:	b96e      	cbnz	r6, 8007d16 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007cfa:	6840      	ldr	r0, [r0, #4]
 8007cfc:	f01b f959 	bl	8022fb2 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d00:	6863      	ldr	r3, [r4, #4]
 8007d02:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007d04:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d06:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d08:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d0a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007d0c:	bf24      	itt	cs
 8007d0e:	6823      	ldrcs	r3, [r4, #0]
 8007d10:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8007d12:	2000      	movs	r0, #0
 8007d14:	e7ed      	b.n	8007cf2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007d16:	68c0      	ldr	r0, [r0, #12]
 8007d18:	f01b f94b 	bl	8022fb2 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007d1c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007d1e:	68e3      	ldr	r3, [r4, #12]
 8007d20:	4251      	negs	r1, r2
 8007d22:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d24:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007d26:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d28:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007d2a:	bf3e      	ittt	cc
 8007d2c:	68a3      	ldrcc	r3, [r4, #8]
 8007d2e:	185b      	addcc	r3, r3, r1
 8007d30:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007d32:	2e02      	cmp	r6, #2
 8007d34:	d1ed      	bne.n	8007d12 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007d36:	b10d      	cbz	r5, 8007d3c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007d38:	3d01      	subs	r5, #1
 8007d3a:	e7ea      	b.n	8007d12 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007d3c:	4628      	mov	r0, r5
 8007d3e:	e7d8      	b.n	8007cf2 <prvCopyDataToQueue+0x18>

08007d40 <prvCopyDataFromQueue>:
{
 8007d40:	4603      	mov	r3, r0
 8007d42:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007d44:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007d46:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007d48:	b16a      	cbz	r2, 8007d66 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d4a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007d4c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d4e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007d50:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007d52:	bf28      	it	cs
 8007d54:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d56:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007d58:	bf28      	it	cs
 8007d5a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007d5c:	68d9      	ldr	r1, [r3, #12]
}
 8007d5e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007d62:	f01b b926 	b.w	8022fb2 <memcpy>
}
 8007d66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007d6a:	4770      	bx	lr

08007d6c <prvUnlockQueue>:
{
 8007d6c:	b570      	push	{r4, r5, r6, lr}
 8007d6e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007d70:	f7ff fe68 	bl	8007a44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007d74:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007d78:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007d7c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007d7e:	2d00      	cmp	r5, #0
 8007d80:	dd01      	ble.n	8007d86 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007d82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007d84:	b9b3      	cbnz	r3, 8007db4 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8007d86:	23ff      	movs	r3, #255	@ 0xff
 8007d88:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8007d8c:	f7ff fe7a 	bl	8007a84 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007d90:	f7ff fe58 	bl	8007a44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007d94:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007d98:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007d9c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007d9e:	2d00      	cmp	r5, #0
 8007da0:	dd01      	ble.n	8007da6 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007da2:	6923      	ldr	r3, [r4, #16]
 8007da4:	b97b      	cbnz	r3, 8007dc6 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8007da6:	23ff      	movs	r3, #255	@ 0xff
 8007da8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8007dac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007db0:	f7ff be68 	b.w	8007a84 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007db4:	4630      	mov	r0, r6
 8007db6:	f001 f84d 	bl	8008e54 <xTaskRemoveFromEventList>
 8007dba:	b108      	cbz	r0, 8007dc0 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 8007dbc:	f001 f8d2 	bl	8008f64 <vTaskMissedYield>
			--cTxLock;
 8007dc0:	3d01      	subs	r5, #1
 8007dc2:	b26d      	sxtb	r5, r5
 8007dc4:	e7db      	b.n	8007d7e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007dc6:	4630      	mov	r0, r6
 8007dc8:	f001 f844 	bl	8008e54 <xTaskRemoveFromEventList>
 8007dcc:	b108      	cbz	r0, 8007dd2 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 8007dce:	f001 f8c9 	bl	8008f64 <vTaskMissedYield>
				--cRxLock;
 8007dd2:	3d01      	subs	r5, #1
 8007dd4:	b26d      	sxtb	r5, r5
 8007dd6:	e7e2      	b.n	8007d9e <prvUnlockQueue+0x32>

08007dd8 <xQueueGenericReset>:
{
 8007dd8:	b538      	push	{r3, r4, r5, lr}
 8007dda:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007ddc:	4604      	mov	r4, r0
 8007dde:	b940      	cbnz	r0, 8007df2 <xQueueGenericReset+0x1a>
 8007de0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007de4:	f383 8811 	msr	BASEPRI, r3
 8007de8:	f3bf 8f6f 	isb	sy
 8007dec:	f3bf 8f4f 	dsb	sy
 8007df0:	e7fe      	b.n	8007df0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007df2:	f7ff fe27 	bl	8007a44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007df6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 8007dfa:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007dfc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007dfe:	434b      	muls	r3, r1
 8007e00:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e02:	1a5b      	subs	r3, r3, r1
 8007e04:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e06:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8007e08:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007e0a:	2000      	movs	r0, #0
 8007e0c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e0e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8007e10:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007e14:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8007e18:	b9a5      	cbnz	r5, 8007e44 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007e1a:	6923      	ldr	r3, [r4, #16]
 8007e1c:	b173      	cbz	r3, 8007e3c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007e1e:	f104 0010 	add.w	r0, r4, #16
 8007e22:	f001 f817 	bl	8008e54 <xTaskRemoveFromEventList>
 8007e26:	b148      	cbz	r0, 8007e3c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007e28:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e2c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e30:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007e34:	f3bf 8f4f 	dsb	sy
 8007e38:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007e3c:	f7ff fe22 	bl	8007a84 <vPortExitCritical>
}
 8007e40:	2001      	movs	r0, #1
 8007e42:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007e44:	f104 0010 	add.w	r0, r4, #16
 8007e48:	f7ff fd56 	bl	80078f8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007e4c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007e50:	f7ff fd52 	bl	80078f8 <vListInitialise>
 8007e54:	e7f2      	b.n	8007e3c <xQueueGenericReset+0x64>

08007e56 <xQueueGenericCreateStatic>:
	{
 8007e56:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007e58:	460d      	mov	r5, r1
 8007e5a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007e5c:	b940      	cbnz	r0, 8007e70 <xQueueGenericCreateStatic+0x1a>
 8007e5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e62:	f383 8811 	msr	BASEPRI, r3
 8007e66:	f3bf 8f6f 	isb	sy
 8007e6a:	f3bf 8f4f 	dsb	sy
 8007e6e:	e7fe      	b.n	8007e6e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8007e70:	b943      	cbnz	r3, 8007e84 <xQueueGenericCreateStatic+0x2e>
 8007e72:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e76:	f383 8811 	msr	BASEPRI, r3
 8007e7a:	f3bf 8f6f 	isb	sy
 8007e7e:	f3bf 8f4f 	dsb	sy
 8007e82:	e7fe      	b.n	8007e82 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007e84:	b14a      	cbz	r2, 8007e9a <xQueueGenericCreateStatic+0x44>
 8007e86:	b991      	cbnz	r1, 8007eae <xQueueGenericCreateStatic+0x58>
 8007e88:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e8c:	f383 8811 	msr	BASEPRI, r3
 8007e90:	f3bf 8f6f 	isb	sy
 8007e94:	f3bf 8f4f 	dsb	sy
 8007e98:	e7fe      	b.n	8007e98 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007e9a:	b141      	cbz	r1, 8007eae <xQueueGenericCreateStatic+0x58>
 8007e9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ea0:	f383 8811 	msr	BASEPRI, r3
 8007ea4:	f3bf 8f6f 	isb	sy
 8007ea8:	f3bf 8f4f 	dsb	sy
 8007eac:	e7fe      	b.n	8007eac <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8007eae:	2350      	movs	r3, #80	@ 0x50
 8007eb0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007eb2:	9b01      	ldr	r3, [sp, #4]
 8007eb4:	2b50      	cmp	r3, #80	@ 0x50
 8007eb6:	d008      	beq.n	8007eca <xQueueGenericCreateStatic+0x74>
 8007eb8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ebc:	f383 8811 	msr	BASEPRI, r3
 8007ec0:	f3bf 8f6f 	isb	sy
 8007ec4:	f3bf 8f4f 	dsb	sy
 8007ec8:	e7fe      	b.n	8007ec8 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007eca:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007ecc:	2d00      	cmp	r5, #0
 8007ece:	bf08      	it	eq
 8007ed0:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8007ed2:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007ed6:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 8007eda:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007edc:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007ede:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007ee0:	f7ff ff7a 	bl	8007dd8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007ee4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8007ee8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8007eec:	4620      	mov	r0, r4
 8007eee:	b003      	add	sp, #12
 8007ef0:	bd30      	pop	{r4, r5, pc}

08007ef2 <xQueueGenericCreate>:
	{
 8007ef2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ef4:	460d      	mov	r5, r1
 8007ef6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007ef8:	4606      	mov	r6, r0
 8007efa:	b940      	cbnz	r0, 8007f0e <xQueueGenericCreate+0x1c>
 8007efc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f00:	f383 8811 	msr	BASEPRI, r3
 8007f04:	f3bf 8f6f 	isb	sy
 8007f08:	f3bf 8f4f 	dsb	sy
 8007f0c:	e7fe      	b.n	8007f0c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007f0e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007f10:	3050      	adds	r0, #80	@ 0x50
 8007f12:	f7ff fc1b 	bl	800774c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007f16:	4604      	mov	r4, r0
 8007f18:	b170      	cbz	r0, 8007f38 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007f1a:	2300      	movs	r3, #0
 8007f1c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007f20:	b165      	cbz	r5, 8007f3c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007f22:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007f26:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 8007f2a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007f2c:	2101      	movs	r1, #1
 8007f2e:	4620      	mov	r0, r4
 8007f30:	f7ff ff52 	bl	8007dd8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007f34:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8007f38:	4620      	mov	r0, r4
 8007f3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007f3c:	4603      	mov	r3, r0
 8007f3e:	e7f2      	b.n	8007f26 <xQueueGenericCreate+0x34>

08007f40 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007f40:	b513      	push	{r0, r1, r4, lr}
 8007f42:	4613      	mov	r3, r2
 8007f44:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007f46:	b940      	cbnz	r0, 8007f5a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007f48:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f4c:	f383 8811 	msr	BASEPRI, r3
 8007f50:	f3bf 8f6f 	isb	sy
 8007f54:	f3bf 8f4f 	dsb	sy
 8007f58:	e7fe      	b.n	8007f58 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007f5a:	4288      	cmp	r0, r1
 8007f5c:	d208      	bcs.n	8007f70 <xQueueCreateCountingSemaphoreStatic+0x30>
 8007f5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f62:	f383 8811 	msr	BASEPRI, r3
 8007f66:	f3bf 8f6f 	isb	sy
 8007f6a:	f3bf 8f4f 	dsb	sy
 8007f6e:	e7fe      	b.n	8007f6e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007f70:	2202      	movs	r2, #2
 8007f72:	9200      	str	r2, [sp, #0]
 8007f74:	2200      	movs	r2, #0
 8007f76:	4611      	mov	r1, r2
 8007f78:	f7ff ff6d 	bl	8007e56 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007f7c:	b100      	cbz	r0, 8007f80 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007f7e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007f80:	b002      	add	sp, #8
 8007f82:	bd10      	pop	{r4, pc}

08007f84 <xQueueCreateCountingSemaphore>:
	{
 8007f84:	b510      	push	{r4, lr}
 8007f86:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007f88:	b940      	cbnz	r0, 8007f9c <xQueueCreateCountingSemaphore+0x18>
 8007f8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f8e:	f383 8811 	msr	BASEPRI, r3
 8007f92:	f3bf 8f6f 	isb	sy
 8007f96:	f3bf 8f4f 	dsb	sy
 8007f9a:	e7fe      	b.n	8007f9a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007f9c:	4288      	cmp	r0, r1
 8007f9e:	d208      	bcs.n	8007fb2 <xQueueCreateCountingSemaphore+0x2e>
 8007fa0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fa4:	f383 8811 	msr	BASEPRI, r3
 8007fa8:	f3bf 8f6f 	isb	sy
 8007fac:	f3bf 8f4f 	dsb	sy
 8007fb0:	e7fe      	b.n	8007fb0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007fb2:	2202      	movs	r2, #2
 8007fb4:	2100      	movs	r1, #0
 8007fb6:	f7ff ff9c 	bl	8007ef2 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007fba:	b100      	cbz	r0, 8007fbe <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007fbc:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007fbe:	bd10      	pop	{r4, pc}

08007fc0 <xQueueGenericSend>:
{
 8007fc0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007fc4:	460f      	mov	r7, r1
 8007fc6:	9201      	str	r2, [sp, #4]
 8007fc8:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007fca:	4604      	mov	r4, r0
 8007fcc:	b940      	cbnz	r0, 8007fe0 <xQueueGenericSend+0x20>
 8007fce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fd2:	f383 8811 	msr	BASEPRI, r3
 8007fd6:	f3bf 8f6f 	isb	sy
 8007fda:	f3bf 8f4f 	dsb	sy
 8007fde:	e7fe      	b.n	8007fde <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007fe0:	b951      	cbnz	r1, 8007ff8 <xQueueGenericSend+0x38>
 8007fe2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007fe4:	b143      	cbz	r3, 8007ff8 <xQueueGenericSend+0x38>
 8007fe6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fea:	f383 8811 	msr	BASEPRI, r3
 8007fee:	f3bf 8f6f 	isb	sy
 8007ff2:	f3bf 8f4f 	dsb	sy
 8007ff6:	e7fe      	b.n	8007ff6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007ff8:	2e02      	cmp	r6, #2
 8007ffa:	d10b      	bne.n	8008014 <xQueueGenericSend+0x54>
 8007ffc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007ffe:	2b01      	cmp	r3, #1
 8008000:	d008      	beq.n	8008014 <xQueueGenericSend+0x54>
 8008002:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008006:	f383 8811 	msr	BASEPRI, r3
 800800a:	f3bf 8f6f 	isb	sy
 800800e:	f3bf 8f4f 	dsb	sy
 8008012:	e7fe      	b.n	8008012 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008014:	f000 ffac 	bl	8008f70 <xTaskGetSchedulerState>
 8008018:	4605      	mov	r5, r0
 800801a:	b320      	cbz	r0, 8008066 <xQueueGenericSend+0xa6>
 800801c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800801e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008022:	f7ff fd0f 	bl	8007a44 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008026:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008028:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800802a:	429a      	cmp	r2, r3
 800802c:	d227      	bcs.n	800807e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800802e:	4632      	mov	r2, r6
 8008030:	4639      	mov	r1, r7
 8008032:	4620      	mov	r0, r4
 8008034:	f7ff fe51 	bl	8007cda <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008038:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800803a:	b11b      	cbz	r3, 8008044 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800803c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008040:	f000 ff08 	bl	8008e54 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008044:	b148      	cbz	r0, 800805a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8008046:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800804a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800804e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008052:	f3bf 8f4f 	dsb	sy
 8008056:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800805a:	f7ff fd13 	bl	8007a84 <vPortExitCritical>
				return pdPASS;
 800805e:	2001      	movs	r0, #1
}
 8008060:	b004      	add	sp, #16
 8008062:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008066:	9b01      	ldr	r3, [sp, #4]
 8008068:	2b00      	cmp	r3, #0
 800806a:	d0d8      	beq.n	800801e <xQueueGenericSend+0x5e>
 800806c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008070:	f383 8811 	msr	BASEPRI, r3
 8008074:	f3bf 8f6f 	isb	sy
 8008078:	f3bf 8f4f 	dsb	sy
 800807c:	e7fe      	b.n	800807c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800807e:	2e02      	cmp	r6, #2
 8008080:	d0d5      	beq.n	800802e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008082:	9b01      	ldr	r3, [sp, #4]
 8008084:	b91b      	cbnz	r3, 800808e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8008086:	f7ff fcfd 	bl	8007a84 <vPortExitCritical>
					return errQUEUE_FULL;
 800808a:	2000      	movs	r0, #0
 800808c:	e7e8      	b.n	8008060 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800808e:	b915      	cbnz	r5, 8008096 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008090:	a802      	add	r0, sp, #8
 8008092:	f000 ff1f 	bl	8008ed4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008096:	f7ff fcf5 	bl	8007a84 <vPortExitCritical>
		vTaskSuspendAll();
 800809a:	f000 fd27 	bl	8008aec <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800809e:	f7ff fcd1 	bl	8007a44 <vPortEnterCritical>
 80080a2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80080a6:	2bff      	cmp	r3, #255	@ 0xff
 80080a8:	bf08      	it	eq
 80080aa:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80080ae:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80080b2:	2bff      	cmp	r3, #255	@ 0xff
 80080b4:	bf08      	it	eq
 80080b6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80080ba:	f7ff fce3 	bl	8007a84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80080be:	a901      	add	r1, sp, #4
 80080c0:	a802      	add	r0, sp, #8
 80080c2:	f000 ff13 	bl	8008eec <xTaskCheckForTimeOut>
 80080c6:	bb38      	cbnz	r0, 8008118 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80080c8:	f7ff fcbc 	bl	8007a44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80080cc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80080ce:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80080d0:	429a      	cmp	r2, r3
 80080d2:	d10e      	bne.n	80080f2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80080d4:	f7ff fcd6 	bl	8007a84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80080d8:	9901      	ldr	r1, [sp, #4]
 80080da:	f104 0010 	add.w	r0, r4, #16
 80080de:	f000 fe81 	bl	8008de4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80080e2:	4620      	mov	r0, r4
 80080e4:	f7ff fe42 	bl	8007d6c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80080e8:	f000 fda4 	bl	8008c34 <xTaskResumeAll>
 80080ec:	b148      	cbz	r0, 8008102 <xQueueGenericSend+0x142>
 80080ee:	2501      	movs	r5, #1
 80080f0:	e797      	b.n	8008022 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 80080f2:	f7ff fcc7 	bl	8007a84 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80080f6:	4620      	mov	r0, r4
 80080f8:	f7ff fe38 	bl	8007d6c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80080fc:	f000 fd9a 	bl	8008c34 <xTaskResumeAll>
 8008100:	e7f5      	b.n	80080ee <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8008102:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008106:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800810a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800810e:	f3bf 8f4f 	dsb	sy
 8008112:	f3bf 8f6f 	isb	sy
 8008116:	e7ea      	b.n	80080ee <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8008118:	4620      	mov	r0, r4
 800811a:	f7ff fe27 	bl	8007d6c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800811e:	f000 fd89 	bl	8008c34 <xTaskResumeAll>
			return errQUEUE_FULL;
 8008122:	e7b2      	b.n	800808a <xQueueGenericSend+0xca>

08008124 <xQueueGenericSendFromISR>:
{
 8008124:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008128:	4689      	mov	r9, r1
 800812a:	4617      	mov	r7, r2
 800812c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800812e:	4604      	mov	r4, r0
 8008130:	b940      	cbnz	r0, 8008144 <xQueueGenericSendFromISR+0x20>
 8008132:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008136:	f383 8811 	msr	BASEPRI, r3
 800813a:	f3bf 8f6f 	isb	sy
 800813e:	f3bf 8f4f 	dsb	sy
 8008142:	e7fe      	b.n	8008142 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008144:	b951      	cbnz	r1, 800815c <xQueueGenericSendFromISR+0x38>
 8008146:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008148:	b143      	cbz	r3, 800815c <xQueueGenericSendFromISR+0x38>
 800814a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800814e:	f383 8811 	msr	BASEPRI, r3
 8008152:	f3bf 8f6f 	isb	sy
 8008156:	f3bf 8f4f 	dsb	sy
 800815a:	e7fe      	b.n	800815a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800815c:	2e02      	cmp	r6, #2
 800815e:	d10b      	bne.n	8008178 <xQueueGenericSendFromISR+0x54>
 8008160:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008162:	2b01      	cmp	r3, #1
 8008164:	d008      	beq.n	8008178 <xQueueGenericSendFromISR+0x54>
 8008166:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800816a:	f383 8811 	msr	BASEPRI, r3
 800816e:	f3bf 8f6f 	isb	sy
 8008172:	f3bf 8f4f 	dsb	sy
 8008176:	e7fe      	b.n	8008176 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008178:	f7ff fd76 	bl	8007c68 <vPortValidateInterruptPriority>
	__asm volatile
 800817c:	f3ef 8811 	mrs	r8, BASEPRI
 8008180:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008184:	f383 8811 	msr	BASEPRI, r3
 8008188:	f3bf 8f6f 	isb	sy
 800818c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008190:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008192:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008194:	429a      	cmp	r2, r3
 8008196:	d301      	bcc.n	800819c <xQueueGenericSendFromISR+0x78>
 8008198:	2e02      	cmp	r6, #2
 800819a:	d11e      	bne.n	80081da <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 800819c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80081a0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80081a2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80081a4:	4632      	mov	r2, r6
 80081a6:	4649      	mov	r1, r9
 80081a8:	4620      	mov	r0, r4
 80081aa:	f7ff fd96 	bl	8007cda <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80081ae:	1c6b      	adds	r3, r5, #1
 80081b0:	d10e      	bne.n	80081d0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80081b2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80081b4:	b13b      	cbz	r3, 80081c6 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80081b6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80081ba:	f000 fe4b 	bl	8008e54 <xTaskRemoveFromEventList>
 80081be:	b110      	cbz	r0, 80081c6 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 80081c0:	b10f      	cbz	r7, 80081c6 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80081c2:	2301      	movs	r3, #1
 80081c4:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 80081c6:	2001      	movs	r0, #1
	__asm volatile
 80081c8:	f388 8811 	msr	BASEPRI, r8
}
 80081cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80081d0:	3501      	adds	r5, #1
 80081d2:	b26d      	sxtb	r5, r5
 80081d4:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 80081d8:	e7f5      	b.n	80081c6 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 80081da:	2000      	movs	r0, #0
 80081dc:	e7f4      	b.n	80081c8 <xQueueGenericSendFromISR+0xa4>

080081de <xQueueGiveFromISR>:
{
 80081de:	b570      	push	{r4, r5, r6, lr}
 80081e0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80081e2:	4604      	mov	r4, r0
 80081e4:	b940      	cbnz	r0, 80081f8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80081e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081ea:	f383 8811 	msr	BASEPRI, r3
 80081ee:	f3bf 8f6f 	isb	sy
 80081f2:	f3bf 8f4f 	dsb	sy
 80081f6:	e7fe      	b.n	80081f6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80081f8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80081fa:	b143      	cbz	r3, 800820e <xQueueGiveFromISR+0x30>
 80081fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008200:	f383 8811 	msr	BASEPRI, r3
 8008204:	f3bf 8f6f 	isb	sy
 8008208:	f3bf 8f4f 	dsb	sy
 800820c:	e7fe      	b.n	800820c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800820e:	6803      	ldr	r3, [r0, #0]
 8008210:	b953      	cbnz	r3, 8008228 <xQueueGiveFromISR+0x4a>
 8008212:	6883      	ldr	r3, [r0, #8]
 8008214:	b143      	cbz	r3, 8008228 <xQueueGiveFromISR+0x4a>
 8008216:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800821a:	f383 8811 	msr	BASEPRI, r3
 800821e:	f3bf 8f6f 	isb	sy
 8008222:	f3bf 8f4f 	dsb	sy
 8008226:	e7fe      	b.n	8008226 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008228:	f7ff fd1e 	bl	8007c68 <vPortValidateInterruptPriority>
	__asm volatile
 800822c:	f3ef 8611 	mrs	r6, BASEPRI
 8008230:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008234:	f383 8811 	msr	BASEPRI, r3
 8008238:	f3bf 8f6f 	isb	sy
 800823c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008240:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008242:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008244:	4293      	cmp	r3, r2
 8008246:	d919      	bls.n	800827c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008248:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800824c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800824e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008250:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008252:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008254:	d10d      	bne.n	8008272 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008256:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008258:	b13b      	cbz	r3, 800826a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800825a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800825e:	f000 fdf9 	bl	8008e54 <xTaskRemoveFromEventList>
 8008262:	b110      	cbz	r0, 800826a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008264:	b10d      	cbz	r5, 800826a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008266:	2301      	movs	r3, #1
 8008268:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800826a:	2001      	movs	r0, #1
	__asm volatile
 800826c:	f386 8811 	msr	BASEPRI, r6
}
 8008270:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008272:	3301      	adds	r3, #1
 8008274:	b25b      	sxtb	r3, r3
 8008276:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800827a:	e7f6      	b.n	800826a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800827c:	2000      	movs	r0, #0
 800827e:	e7f5      	b.n	800826c <xQueueGiveFromISR+0x8e>

08008280 <xQueueReceive>:
{
 8008280:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008284:	460e      	mov	r6, r1
 8008286:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008288:	4604      	mov	r4, r0
 800828a:	b940      	cbnz	r0, 800829e <xQueueReceive+0x1e>
	__asm volatile
 800828c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008290:	f383 8811 	msr	BASEPRI, r3
 8008294:	f3bf 8f6f 	isb	sy
 8008298:	f3bf 8f4f 	dsb	sy
 800829c:	e7fe      	b.n	800829c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800829e:	b951      	cbnz	r1, 80082b6 <xQueueReceive+0x36>
 80082a0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80082a2:	b143      	cbz	r3, 80082b6 <xQueueReceive+0x36>
 80082a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082a8:	f383 8811 	msr	BASEPRI, r3
 80082ac:	f3bf 8f6f 	isb	sy
 80082b0:	f3bf 8f4f 	dsb	sy
 80082b4:	e7fe      	b.n	80082b4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80082b6:	f000 fe5b 	bl	8008f70 <xTaskGetSchedulerState>
 80082ba:	4605      	mov	r5, r0
 80082bc:	b318      	cbz	r0, 8008306 <xQueueReceive+0x86>
 80082be:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80082c0:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80082c4:	f7ff fbbe 	bl	8007a44 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80082c8:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80082ca:	b347      	cbz	r7, 800831e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80082cc:	4631      	mov	r1, r6
 80082ce:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80082d0:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80082d2:	f7ff fd35 	bl	8007d40 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80082d6:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80082d8:	6923      	ldr	r3, [r4, #16]
 80082da:	b173      	cbz	r3, 80082fa <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80082dc:	f104 0010 	add.w	r0, r4, #16
 80082e0:	f000 fdb8 	bl	8008e54 <xTaskRemoveFromEventList>
 80082e4:	b148      	cbz	r0, 80082fa <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 80082e6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80082ea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80082ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80082f2:	f3bf 8f4f 	dsb	sy
 80082f6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80082fa:	f7ff fbc3 	bl	8007a84 <vPortExitCritical>
				return pdPASS;
 80082fe:	2001      	movs	r0, #1
}
 8008300:	b004      	add	sp, #16
 8008302:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008306:	9b01      	ldr	r3, [sp, #4]
 8008308:	2b00      	cmp	r3, #0
 800830a:	d0d9      	beq.n	80082c0 <xQueueReceive+0x40>
 800830c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008310:	f383 8811 	msr	BASEPRI, r3
 8008314:	f3bf 8f6f 	isb	sy
 8008318:	f3bf 8f4f 	dsb	sy
 800831c:	e7fe      	b.n	800831c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800831e:	9b01      	ldr	r3, [sp, #4]
 8008320:	b91b      	cbnz	r3, 800832a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8008322:	f7ff fbaf 	bl	8007a84 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008326:	2000      	movs	r0, #0
 8008328:	e7ea      	b.n	8008300 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800832a:	b915      	cbnz	r5, 8008332 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800832c:	a802      	add	r0, sp, #8
 800832e:	f000 fdd1 	bl	8008ed4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008332:	f7ff fba7 	bl	8007a84 <vPortExitCritical>
		vTaskSuspendAll();
 8008336:	f000 fbd9 	bl	8008aec <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800833a:	f7ff fb83 	bl	8007a44 <vPortEnterCritical>
 800833e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008342:	2bff      	cmp	r3, #255	@ 0xff
 8008344:	bf08      	it	eq
 8008346:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800834a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800834e:	2bff      	cmp	r3, #255	@ 0xff
 8008350:	bf08      	it	eq
 8008352:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8008356:	f7ff fb95 	bl	8007a84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800835a:	a901      	add	r1, sp, #4
 800835c:	a802      	add	r0, sp, #8
 800835e:	f000 fdc5 	bl	8008eec <xTaskCheckForTimeOut>
 8008362:	bb00      	cbnz	r0, 80083a6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008364:	4620      	mov	r0, r4
 8008366:	f7ff fcad 	bl	8007cc4 <prvIsQueueEmpty>
 800836a:	b1b0      	cbz	r0, 800839a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800836c:	9901      	ldr	r1, [sp, #4]
 800836e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008372:	f000 fd37 	bl	8008de4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008376:	4620      	mov	r0, r4
 8008378:	f7ff fcf8 	bl	8007d6c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800837c:	f000 fc5a 	bl	8008c34 <xTaskResumeAll>
 8008380:	b948      	cbnz	r0, 8008396 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8008382:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008386:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800838a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800838e:	f3bf 8f4f 	dsb	sy
 8008392:	f3bf 8f6f 	isb	sy
 8008396:	2501      	movs	r5, #1
 8008398:	e794      	b.n	80082c4 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800839a:	4620      	mov	r0, r4
 800839c:	f7ff fce6 	bl	8007d6c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80083a0:	f000 fc48 	bl	8008c34 <xTaskResumeAll>
 80083a4:	e7f7      	b.n	8008396 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 80083a6:	4620      	mov	r0, r4
 80083a8:	f7ff fce0 	bl	8007d6c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80083ac:	f000 fc42 	bl	8008c34 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80083b0:	4620      	mov	r0, r4
 80083b2:	f7ff fc87 	bl	8007cc4 <prvIsQueueEmpty>
 80083b6:	2800      	cmp	r0, #0
 80083b8:	d0ed      	beq.n	8008396 <xQueueReceive+0x116>
 80083ba:	e7b4      	b.n	8008326 <xQueueReceive+0xa6>

080083bc <xQueueSemaphoreTake>:
{
 80083bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80083be:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80083c0:	4604      	mov	r4, r0
{
 80083c2:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80083c4:	b940      	cbnz	r0, 80083d8 <xQueueSemaphoreTake+0x1c>
 80083c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083ca:	f383 8811 	msr	BASEPRI, r3
 80083ce:	f3bf 8f6f 	isb	sy
 80083d2:	f3bf 8f4f 	dsb	sy
 80083d6:	e7fe      	b.n	80083d6 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80083d8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80083da:	b145      	cbz	r5, 80083ee <xQueueSemaphoreTake+0x32>
 80083dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083e0:	f383 8811 	msr	BASEPRI, r3
 80083e4:	f3bf 8f6f 	isb	sy
 80083e8:	f3bf 8f4f 	dsb	sy
 80083ec:	e7fe      	b.n	80083ec <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80083ee:	f000 fdbf 	bl	8008f70 <xTaskGetSchedulerState>
 80083f2:	4606      	mov	r6, r0
 80083f4:	b320      	cbz	r0, 8008440 <xQueueSemaphoreTake+0x84>
 80083f6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80083f8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 80083fa:	f7ff fb23 	bl	8007a44 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80083fe:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008400:	b353      	cbz	r3, 8008458 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008402:	3b01      	subs	r3, #1
 8008404:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008406:	6823      	ldr	r3, [r4, #0]
 8008408:	b913      	cbnz	r3, 8008410 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800840a:	f000 fe8f 	bl	800912c <pvTaskIncrementMutexHeldCount>
 800840e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008410:	6923      	ldr	r3, [r4, #16]
 8008412:	b173      	cbz	r3, 8008432 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008414:	f104 0010 	add.w	r0, r4, #16
 8008418:	f000 fd1c 	bl	8008e54 <xTaskRemoveFromEventList>
 800841c:	b148      	cbz	r0, 8008432 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800841e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008422:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008426:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800842a:	f3bf 8f4f 	dsb	sy
 800842e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008432:	f7ff fb27 	bl	8007a84 <vPortExitCritical>
				return pdPASS;
 8008436:	2001      	movs	r0, #1
}
 8008438:	b005      	add	sp, #20
 800843a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800843c:	4635      	mov	r5, r6
 800843e:	e7db      	b.n	80083f8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008440:	9b01      	ldr	r3, [sp, #4]
 8008442:	2b00      	cmp	r3, #0
 8008444:	d0fa      	beq.n	800843c <xQueueSemaphoreTake+0x80>
 8008446:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800844a:	f383 8811 	msr	BASEPRI, r3
 800844e:	f3bf 8f6f 	isb	sy
 8008452:	f3bf 8f4f 	dsb	sy
 8008456:	e7fe      	b.n	8008456 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008458:	9b01      	ldr	r3, [sp, #4]
 800845a:	b953      	cbnz	r3, 8008472 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800845c:	2d00      	cmp	r5, #0
 800845e:	d066      	beq.n	800852e <xQueueSemaphoreTake+0x172>
 8008460:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008464:	f383 8811 	msr	BASEPRI, r3
 8008468:	f3bf 8f6f 	isb	sy
 800846c:	f3bf 8f4f 	dsb	sy
 8008470:	e7fe      	b.n	8008470 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8008472:	b916      	cbnz	r6, 800847a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008474:	a802      	add	r0, sp, #8
 8008476:	f000 fd2d 	bl	8008ed4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800847a:	f7ff fb03 	bl	8007a84 <vPortExitCritical>
		vTaskSuspendAll();
 800847e:	f000 fb35 	bl	8008aec <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008482:	f7ff fadf 	bl	8007a44 <vPortEnterCritical>
 8008486:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800848a:	2bff      	cmp	r3, #255	@ 0xff
 800848c:	bf08      	it	eq
 800848e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8008492:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008496:	2bff      	cmp	r3, #255	@ 0xff
 8008498:	bf08      	it	eq
 800849a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800849e:	f7ff faf1 	bl	8007a84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80084a2:	a901      	add	r1, sp, #4
 80084a4:	a802      	add	r0, sp, #8
 80084a6:	f000 fd21 	bl	8008eec <xTaskCheckForTimeOut>
 80084aa:	bb50      	cbnz	r0, 8008502 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80084ac:	4620      	mov	r0, r4
 80084ae:	f7ff fc09 	bl	8007cc4 <prvIsQueueEmpty>
 80084b2:	b300      	cbz	r0, 80084f6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80084b4:	6823      	ldr	r3, [r4, #0]
 80084b6:	b93b      	cbnz	r3, 80084c8 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 80084b8:	f7ff fac4 	bl	8007a44 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80084bc:	68a0      	ldr	r0, [r4, #8]
 80084be:	f000 fd67 	bl	8008f90 <xTaskPriorityInherit>
 80084c2:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80084c4:	f7ff fade 	bl	8007a84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80084c8:	9901      	ldr	r1, [sp, #4]
 80084ca:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80084ce:	f000 fc89 	bl	8008de4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80084d2:	4620      	mov	r0, r4
 80084d4:	f7ff fc4a 	bl	8007d6c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80084d8:	f000 fbac 	bl	8008c34 <xTaskResumeAll>
 80084dc:	b948      	cbnz	r0, 80084f2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 80084de:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80084e2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80084e6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80084ea:	f3bf 8f4f 	dsb	sy
 80084ee:	f3bf 8f6f 	isb	sy
 80084f2:	2601      	movs	r6, #1
 80084f4:	e781      	b.n	80083fa <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 80084f6:	4620      	mov	r0, r4
 80084f8:	f7ff fc38 	bl	8007d6c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80084fc:	f000 fb9a 	bl	8008c34 <xTaskResumeAll>
 8008500:	e7f7      	b.n	80084f2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8008502:	4620      	mov	r0, r4
 8008504:	f7ff fc32 	bl	8007d6c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008508:	f000 fb94 	bl	8008c34 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800850c:	4620      	mov	r0, r4
 800850e:	f7ff fbd9 	bl	8007cc4 <prvIsQueueEmpty>
 8008512:	2800      	cmp	r0, #0
 8008514:	d0ed      	beq.n	80084f2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8008516:	b165      	cbz	r5, 8008532 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8008518:	f7ff fa94 	bl	8007a44 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800851c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800851e:	b119      	cbz	r1, 8008528 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008520:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008522:	6819      	ldr	r1, [r3, #0]
 8008524:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008528:	68a0      	ldr	r0, [r4, #8]
 800852a:	f000 fdb1 	bl	8009090 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800852e:	f7ff faa9 	bl	8007a84 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008532:	2000      	movs	r0, #0
 8008534:	e780      	b.n	8008438 <xQueueSemaphoreTake+0x7c>

08008536 <xQueueReceiveFromISR>:
{
 8008536:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800853a:	4689      	mov	r9, r1
 800853c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800853e:	4604      	mov	r4, r0
 8008540:	b940      	cbnz	r0, 8008554 <xQueueReceiveFromISR+0x1e>
 8008542:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008546:	f383 8811 	msr	BASEPRI, r3
 800854a:	f3bf 8f6f 	isb	sy
 800854e:	f3bf 8f4f 	dsb	sy
 8008552:	e7fe      	b.n	8008552 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008554:	b951      	cbnz	r1, 800856c <xQueueReceiveFromISR+0x36>
 8008556:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008558:	b143      	cbz	r3, 800856c <xQueueReceiveFromISR+0x36>
 800855a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800855e:	f383 8811 	msr	BASEPRI, r3
 8008562:	f3bf 8f6f 	isb	sy
 8008566:	f3bf 8f4f 	dsb	sy
 800856a:	e7fe      	b.n	800856a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800856c:	f7ff fb7c 	bl	8007c68 <vPortValidateInterruptPriority>
	__asm volatile
 8008570:	f3ef 8711 	mrs	r7, BASEPRI
 8008574:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008578:	f383 8811 	msr	BASEPRI, r3
 800857c:	f3bf 8f6f 	isb	sy
 8008580:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008584:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008586:	b30d      	cbz	r5, 80085cc <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008588:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800858c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800858e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008590:	4620      	mov	r0, r4
 8008592:	f7ff fbd5 	bl	8007d40 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008596:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8008598:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800859a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800859c:	d111      	bne.n	80085c2 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800859e:	6923      	ldr	r3, [r4, #16]
 80085a0:	b153      	cbz	r3, 80085b8 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80085a2:	f104 0010 	add.w	r0, r4, #16
 80085a6:	f000 fc55 	bl	8008e54 <xTaskRemoveFromEventList>
 80085aa:	b128      	cbz	r0, 80085b8 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 80085ac:	f1b8 0f00 	cmp.w	r8, #0
 80085b0:	d002      	beq.n	80085b8 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80085b2:	2301      	movs	r3, #1
 80085b4:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 80085b8:	2001      	movs	r0, #1
	__asm volatile
 80085ba:	f387 8811 	msr	BASEPRI, r7
}
 80085be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80085c2:	3601      	adds	r6, #1
 80085c4:	b276      	sxtb	r6, r6
 80085c6:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 80085ca:	e7f5      	b.n	80085b8 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 80085cc:	4628      	mov	r0, r5
 80085ce:	e7f4      	b.n	80085ba <xQueueReceiveFromISR+0x84>

080085d0 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80085d0:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80085d2:	4a07      	ldr	r2, [pc, #28]	@ (80085f0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80085d4:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80085d6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80085da:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80085de:	b91d      	cbnz	r5, 80085e8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80085e0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80085e4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80085e6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80085e8:	3301      	adds	r3, #1
 80085ea:	2b08      	cmp	r3, #8
 80085ec:	d1f3      	bne.n	80085d6 <vQueueAddToRegistry+0x6>
 80085ee:	e7fa      	b.n	80085e6 <vQueueAddToRegistry+0x16>
 80085f0:	20013984 	.word	0x20013984

080085f4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80085f4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80085f6:	4a09      	ldr	r2, [pc, #36]	@ (800861c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80085f8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80085fa:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 80085fe:	4281      	cmp	r1, r0
 8008600:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8008604:	d106      	bne.n	8008614 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008606:	4a06      	ldr	r2, [pc, #24]	@ (8008620 <vQueueUnregisterQueue+0x2c>)
 8008608:	2100      	movs	r1, #0
 800860a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800860e:	4422      	add	r2, r4
 8008610:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008612:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008614:	3301      	adds	r3, #1
 8008616:	2b08      	cmp	r3, #8
 8008618:	d1ef      	bne.n	80085fa <vQueueUnregisterQueue+0x6>
 800861a:	e7fa      	b.n	8008612 <vQueueUnregisterQueue+0x1e>
 800861c:	20013988 	.word	0x20013988
 8008620:	20013984 	.word	0x20013984

08008624 <vQueueDelete>:
{
 8008624:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008626:	b940      	cbnz	r0, 800863a <vQueueDelete+0x16>
	__asm volatile
 8008628:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800862c:	f383 8811 	msr	BASEPRI, r3
 8008630:	f3bf 8f6f 	isb	sy
 8008634:	f3bf 8f4f 	dsb	sy
 8008638:	e7fe      	b.n	8008638 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800863a:	f7ff ffdb 	bl	80085f4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800863e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008642:	b91b      	cbnz	r3, 800864c <vQueueDelete+0x28>
}
 8008644:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008648:	f7ff b918 	b.w	800787c <vPortFree>
}
 800864c:	bd10      	pop	{r4, pc}

0800864e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800864e:	b570      	push	{r4, r5, r6, lr}
 8008650:	4604      	mov	r4, r0
 8008652:	460d      	mov	r5, r1
 8008654:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008656:	f7ff f9f5 	bl	8007a44 <vPortEnterCritical>
 800865a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800865e:	2bff      	cmp	r3, #255	@ 0xff
 8008660:	bf04      	itt	eq
 8008662:	2300      	moveq	r3, #0
 8008664:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8008668:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800866c:	2bff      	cmp	r3, #255	@ 0xff
 800866e:	bf04      	itt	eq
 8008670:	2300      	moveq	r3, #0
 8008672:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8008676:	f7ff fa05 	bl	8007a84 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800867a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800867c:	b92b      	cbnz	r3, 800868a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800867e:	4632      	mov	r2, r6
 8008680:	4629      	mov	r1, r5
 8008682:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008686:	f000 fbc7 	bl	8008e18 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800868a:	4620      	mov	r0, r4
	}
 800868c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008690:	f7ff bb6c 	b.w	8007d6c <prvUnlockQueue>

08008694 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008694:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008698:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800869a:	f7ff f9d3 	bl	8007a44 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800869e:	4b30      	ldr	r3, [pc, #192]	@ (8008760 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80086a0:	4e30      	ldr	r6, [pc, #192]	@ (8008764 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80086a2:	681a      	ldr	r2, [r3, #0]
 80086a4:	4f30      	ldr	r7, [pc, #192]	@ (8008768 <prvAddNewTaskToReadyList+0xd4>)
 80086a6:	3201      	adds	r2, #1
 80086a8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80086aa:	6835      	ldr	r5, [r6, #0]
 80086ac:	2d00      	cmp	r5, #0
 80086ae:	d14b      	bne.n	8008748 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80086b0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80086b2:	681b      	ldr	r3, [r3, #0]
 80086b4:	2b01      	cmp	r3, #1
 80086b6:	d11f      	bne.n	80086f8 <prvAddNewTaskToReadyList+0x64>
 80086b8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80086ba:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80086bc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80086be:	f7ff f91b 	bl	80078f8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80086c2:	2d38      	cmp	r5, #56	@ 0x38
 80086c4:	f108 0814 	add.w	r8, r8, #20
 80086c8:	d1f7      	bne.n	80086ba <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80086ca:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8008790 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80086ce:	4d27      	ldr	r5, [pc, #156]	@ (800876c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80086d0:	4640      	mov	r0, r8
 80086d2:	f7ff f911 	bl	80078f8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80086d6:	4628      	mov	r0, r5
 80086d8:	f7ff f90e 	bl	80078f8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80086dc:	4824      	ldr	r0, [pc, #144]	@ (8008770 <prvAddNewTaskToReadyList+0xdc>)
 80086de:	f7ff f90b 	bl	80078f8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80086e2:	4824      	ldr	r0, [pc, #144]	@ (8008774 <prvAddNewTaskToReadyList+0xe0>)
 80086e4:	f7ff f908 	bl	80078f8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80086e8:	4823      	ldr	r0, [pc, #140]	@ (8008778 <prvAddNewTaskToReadyList+0xe4>)
 80086ea:	f7ff f905 	bl	80078f8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80086ee:	4b23      	ldr	r3, [pc, #140]	@ (800877c <prvAddNewTaskToReadyList+0xe8>)
 80086f0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80086f4:	4b22      	ldr	r3, [pc, #136]	@ (8008780 <prvAddNewTaskToReadyList+0xec>)
 80086f6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80086f8:	4a22      	ldr	r2, [pc, #136]	@ (8008784 <prvAddNewTaskToReadyList+0xf0>)
 80086fa:	6813      	ldr	r3, [r2, #0]
 80086fc:	3301      	adds	r3, #1
 80086fe:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008700:	4a21      	ldr	r2, [pc, #132]	@ (8008788 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008702:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008704:	6811      	ldr	r1, [r2, #0]
 8008706:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008708:	2014      	movs	r0, #20
 800870a:	428b      	cmp	r3, r1
 800870c:	fb00 7003 	mla	r0, r0, r3, r7
 8008710:	f104 0104 	add.w	r1, r4, #4
 8008714:	bf88      	it	hi
 8008716:	6013      	strhi	r3, [r2, #0]
 8008718:	f7ff f8fc 	bl	8007914 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800871c:	f7ff f9b2 	bl	8007a84 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008720:	4b1a      	ldr	r3, [pc, #104]	@ (800878c <prvAddNewTaskToReadyList+0xf8>)
 8008722:	681b      	ldr	r3, [r3, #0]
 8008724:	b173      	cbz	r3, 8008744 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008726:	6833      	ldr	r3, [r6, #0]
 8008728:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800872a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800872c:	429a      	cmp	r2, r3
 800872e:	d209      	bcs.n	8008744 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008730:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008734:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008738:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800873c:	f3bf 8f4f 	dsb	sy
 8008740:	f3bf 8f6f 	isb	sy
}
 8008744:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008748:	4b10      	ldr	r3, [pc, #64]	@ (800878c <prvAddNewTaskToReadyList+0xf8>)
 800874a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800874c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800874e:	2a00      	cmp	r2, #0
 8008750:	d1d2      	bne.n	80086f8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008752:	6832      	ldr	r2, [r6, #0]
 8008754:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008756:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008758:	bf98      	it	ls
 800875a:	6034      	strls	r4, [r6, #0]
 800875c:	e7cc      	b.n	80086f8 <prvAddNewTaskToReadyList+0x64>
 800875e:	bf00      	nop
 8008760:	200139e8 	.word	0x200139e8
 8008764:	20013ebc 	.word	0x20013ebc
 8008768:	20013a5c 	.word	0x20013a5c
 800876c:	20013a34 	.word	0x20013a34
 8008770:	20013a18 	.word	0x20013a18
 8008774:	20013a04 	.word	0x20013a04
 8008778:	200139ec 	.word	0x200139ec
 800877c:	20013a30 	.word	0x20013a30
 8008780:	20013a2c 	.word	0x20013a2c
 8008784:	200139cc 	.word	0x200139cc
 8008788:	200139e0 	.word	0x200139e0
 800878c:	200139dc 	.word	0x200139dc
 8008790:	20013a48 	.word	0x20013a48

08008794 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008796:	4b15      	ldr	r3, [pc, #84]	@ (80087ec <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008798:	4d15      	ldr	r5, [pc, #84]	@ (80087f0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800879a:	681c      	ldr	r4, [r3, #0]
{
 800879c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800879e:	6828      	ldr	r0, [r5, #0]
 80087a0:	3004      	adds	r0, #4
{
 80087a2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80087a4:	f7ff f8d8 	bl	8007958 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80087a8:	1c73      	adds	r3, r6, #1
 80087aa:	d107      	bne.n	80087bc <prvAddCurrentTaskToDelayedList+0x28>
 80087ac:	b137      	cbz	r7, 80087bc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087ae:	6829      	ldr	r1, [r5, #0]
 80087b0:	4810      	ldr	r0, [pc, #64]	@ (80087f4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80087b2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087b6:	3104      	adds	r1, #4
 80087b8:	f7ff b8ac 	b.w	8007914 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80087bc:	682b      	ldr	r3, [r5, #0]
 80087be:	19a4      	adds	r4, r4, r6
 80087c0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80087c2:	d307      	bcc.n	80087d4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087c4:	4b0c      	ldr	r3, [pc, #48]	@ (80087f8 <prvAddCurrentTaskToDelayedList+0x64>)
 80087c6:	6818      	ldr	r0, [r3, #0]
 80087c8:	6829      	ldr	r1, [r5, #0]
}
 80087ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087ce:	3104      	adds	r1, #4
 80087d0:	f7ff b8ab 	b.w	800792a <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087d4:	4b09      	ldr	r3, [pc, #36]	@ (80087fc <prvAddCurrentTaskToDelayedList+0x68>)
 80087d6:	6818      	ldr	r0, [r3, #0]
 80087d8:	6829      	ldr	r1, [r5, #0]
 80087da:	3104      	adds	r1, #4
 80087dc:	f7ff f8a5 	bl	800792a <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80087e0:	4b07      	ldr	r3, [pc, #28]	@ (8008800 <prvAddCurrentTaskToDelayedList+0x6c>)
 80087e2:	681a      	ldr	r2, [r3, #0]
 80087e4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80087e6:	bf88      	it	hi
 80087e8:	601c      	strhi	r4, [r3, #0]
}
 80087ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80087ec:	200139e4 	.word	0x200139e4
 80087f0:	20013ebc 	.word	0x20013ebc
 80087f4:	200139ec 	.word	0x200139ec
 80087f8:	20013a2c 	.word	0x20013a2c
 80087fc:	20013a30 	.word	0x20013a30
 8008800:	200139c8 	.word	0x200139c8

08008804 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008804:	4a06      	ldr	r2, [pc, #24]	@ (8008820 <prvResetNextTaskUnblockTime+0x1c>)
 8008806:	6813      	ldr	r3, [r2, #0]
 8008808:	6819      	ldr	r1, [r3, #0]
 800880a:	4b06      	ldr	r3, [pc, #24]	@ (8008824 <prvResetNextTaskUnblockTime+0x20>)
 800880c:	b919      	cbnz	r1, 8008816 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800880e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008812:	601a      	str	r2, [r3, #0]
}
 8008814:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008816:	6812      	ldr	r2, [r2, #0]
 8008818:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800881a:	68d2      	ldr	r2, [r2, #12]
 800881c:	6852      	ldr	r2, [r2, #4]
 800881e:	e7f8      	b.n	8008812 <prvResetNextTaskUnblockTime+0xe>
 8008820:	20013a30 	.word	0x20013a30
 8008824:	200139c8 	.word	0x200139c8

08008828 <prvDeleteTCB>:
	{
 8008828:	b510      	push	{r4, lr}
 800882a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800882c:	3058      	adds	r0, #88	@ 0x58
 800882e:	f01a fadb 	bl	8022de8 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008832:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
 8008836:	b93b      	cbnz	r3, 8008848 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8008838:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800883a:	f7ff f81f 	bl	800787c <vPortFree>
				vPortFree( pxTCB );
 800883e:	4620      	mov	r0, r4
	}
 8008840:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008844:	f7ff b81a 	b.w	800787c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008848:	2b01      	cmp	r3, #1
 800884a:	d0f8      	beq.n	800883e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800884c:	2b02      	cmp	r3, #2
 800884e:	d008      	beq.n	8008862 <prvDeleteTCB+0x3a>
 8008850:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008854:	f383 8811 	msr	BASEPRI, r3
 8008858:	f3bf 8f6f 	isb	sy
 800885c:	f3bf 8f4f 	dsb	sy
 8008860:	e7fe      	b.n	8008860 <prvDeleteTCB+0x38>
	}
 8008862:	bd10      	pop	{r4, pc}

08008864 <prvIdleTask>:
{
 8008864:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008866:	4c13      	ldr	r4, [pc, #76]	@ (80088b4 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008868:	4f13      	ldr	r7, [pc, #76]	@ (80088b8 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800886a:	4d14      	ldr	r5, [pc, #80]	@ (80088bc <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800886c:	6823      	ldr	r3, [r4, #0]
 800886e:	b973      	cbnz	r3, 800888e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008870:	4b13      	ldr	r3, [pc, #76]	@ (80088c0 <prvIdleTask+0x5c>)
 8008872:	681b      	ldr	r3, [r3, #0]
 8008874:	2b01      	cmp	r3, #1
 8008876:	d9f8      	bls.n	800886a <prvIdleTask+0x6>
				taskYIELD();
 8008878:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800887c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008880:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008884:	f3bf 8f4f 	dsb	sy
 8008888:	f3bf 8f6f 	isb	sy
 800888c:	e7ed      	b.n	800886a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800888e:	f7ff f8d9 	bl	8007a44 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008892:	68fb      	ldr	r3, [r7, #12]
 8008894:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008896:	1d30      	adds	r0, r6, #4
 8008898:	f7ff f85e 	bl	8007958 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800889c:	682b      	ldr	r3, [r5, #0]
 800889e:	3b01      	subs	r3, #1
 80088a0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80088a2:	6823      	ldr	r3, [r4, #0]
 80088a4:	3b01      	subs	r3, #1
 80088a6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80088a8:	f7ff f8ec 	bl	8007a84 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80088ac:	4630      	mov	r0, r6
 80088ae:	f7ff ffbb 	bl	8008828 <prvDeleteTCB>
 80088b2:	e7db      	b.n	800886c <prvIdleTask+0x8>
 80088b4:	20013a00 	.word	0x20013a00
 80088b8:	20013a04 	.word	0x20013a04
 80088bc:	200139e8 	.word	0x200139e8
 80088c0:	20013a5c 	.word	0x20013a5c

080088c4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80088c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80088c8:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80088cc:	0096      	lsls	r6, r2, #2
 80088ce:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80088d0:	4607      	mov	r7, r0
 80088d2:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80088d4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80088d6:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80088d8:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80088da:	f01a fa3c 	bl	8022d56 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80088de:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80088e0:	3e04      	subs	r6, #4
 80088e2:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80088e4:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80088e8:	2d00      	cmp	r5, #0
 80088ea:	d043      	beq.n	8008974 <prvInitialiseNewTask.constprop.0+0xb0>
 80088ec:	1e6b      	subs	r3, r5, #1
 80088ee:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 80088f2:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80088f4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80088f8:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 80088fc:	b109      	cbz	r1, 8008902 <prvInitialiseNewTask.constprop.0+0x3e>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80088fe:	42ab      	cmp	r3, r5
 8008900:	d1f8      	bne.n	80088f4 <prvInitialiseNewTask.constprop.0+0x30>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008902:	2300      	movs	r3, #0
 8008904:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008908:	9d08      	ldr	r5, [sp, #32]
 800890a:	2d37      	cmp	r5, #55	@ 0x37
 800890c:	bf28      	it	cs
 800890e:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008910:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008914:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008916:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008918:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800891a:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800891e:	f7fe fff6 	bl	800790e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008922:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008926:	f104 0018 	add.w	r0, r4, #24
 800892a:	f7fe fff0 	bl	800790e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800892e:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008932:	224c      	movs	r2, #76	@ 0x4c
 8008934:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008936:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008938:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800893a:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800893c:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008940:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008944:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8008948:	f01a fa05 	bl	8022d56 <memset>
 800894c:	4b0b      	ldr	r3, [pc, #44]	@ (800897c <prvInitialiseNewTask.constprop.0+0xb8>)
 800894e:	65e3      	str	r3, [r4, #92]	@ 0x5c
 8008950:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8008954:	33d0      	adds	r3, #208	@ 0xd0
 8008956:	6622      	str	r2, [r4, #96]	@ 0x60
 8008958:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800895a:	4642      	mov	r2, r8
 800895c:	4639      	mov	r1, r7
 800895e:	4630      	mov	r0, r6
 8008960:	f7ff f848 	bl	80079f4 <pxPortInitialiseStack>
 8008964:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008966:	f1b9 0f00 	cmp.w	r9, #0
 800896a:	d001      	beq.n	8008970 <prvInitialiseNewTask.constprop.0+0xac>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800896c:	f8c9 4000 	str.w	r4, [r9]
}
 8008970:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008974:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8008978:	e7c6      	b.n	8008908 <prvInitialiseNewTask.constprop.0+0x44>
 800897a:	bf00      	nop
 800897c:	20014a60 	.word	0x20014a60

08008980 <xTaskCreateStatic>:
	{
 8008980:	b570      	push	{r4, r5, r6, lr}
 8008982:	b086      	sub	sp, #24
 8008984:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008988:	b945      	cbnz	r5, 800899c <xTaskCreateStatic+0x1c>
 800898a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800898e:	f383 8811 	msr	BASEPRI, r3
 8008992:	f3bf 8f6f 	isb	sy
 8008996:	f3bf 8f4f 	dsb	sy
 800899a:	e7fe      	b.n	800899a <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800899c:	b944      	cbnz	r4, 80089b0 <xTaskCreateStatic+0x30>
 800899e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089a2:	f383 8811 	msr	BASEPRI, r3
 80089a6:	f3bf 8f6f 	isb	sy
 80089aa:	f3bf 8f4f 	dsb	sy
 80089ae:	e7fe      	b.n	80089ae <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80089b0:	26ac      	movs	r6, #172	@ 0xac
 80089b2:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80089b4:	9e05      	ldr	r6, [sp, #20]
 80089b6:	2eac      	cmp	r6, #172	@ 0xac
 80089b8:	d008      	beq.n	80089cc <xTaskCreateStatic+0x4c>
 80089ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089be:	f383 8811 	msr	BASEPRI, r3
 80089c2:	f3bf 8f6f 	isb	sy
 80089c6:	f3bf 8f4f 	dsb	sy
 80089ca:	e7fe      	b.n	80089ca <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80089cc:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80089ce:	2502      	movs	r5, #2
 80089d0:	f884 50a9 	strb.w	r5, [r4, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80089d4:	ad04      	add	r5, sp, #16
 80089d6:	9501      	str	r5, [sp, #4]
 80089d8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80089da:	9402      	str	r4, [sp, #8]
 80089dc:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80089de:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80089e0:	f7ff ff70 	bl	80088c4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80089e4:	4620      	mov	r0, r4
 80089e6:	f7ff fe55 	bl	8008694 <prvAddNewTaskToReadyList>
	}
 80089ea:	9804      	ldr	r0, [sp, #16]
 80089ec:	b006      	add	sp, #24
 80089ee:	bd70      	pop	{r4, r5, r6, pc}

080089f0 <xTaskCreate>:
	{
 80089f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80089f4:	4607      	mov	r7, r0
 80089f6:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80089f8:	0090      	lsls	r0, r2, #2
	{
 80089fa:	4688      	mov	r8, r1
 80089fc:	4616      	mov	r6, r2
 80089fe:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008a00:	f7fe fea4 	bl	800774c <pvPortMalloc>
			if( pxStack != NULL )
 8008a04:	4605      	mov	r5, r0
 8008a06:	b920      	cbnz	r0, 8008a12 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008a08:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8008a0c:	b005      	add	sp, #20
 8008a0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008a12:	20ac      	movs	r0, #172	@ 0xac
 8008a14:	f7fe fe9a 	bl	800774c <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008a18:	4604      	mov	r4, r0
 8008a1a:	b198      	cbz	r0, 8008a44 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008a1c:	2300      	movs	r3, #0
 8008a1e:	f880 30a9 	strb.w	r3, [r0, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008a22:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 8008a24:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008a26:	9301      	str	r3, [sp, #4]
 8008a28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008a2a:	9002      	str	r0, [sp, #8]
 8008a2c:	9300      	str	r3, [sp, #0]
 8008a2e:	4632      	mov	r2, r6
 8008a30:	464b      	mov	r3, r9
 8008a32:	4641      	mov	r1, r8
 8008a34:	4638      	mov	r0, r7
 8008a36:	f7ff ff45 	bl	80088c4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008a3a:	4620      	mov	r0, r4
 8008a3c:	f7ff fe2a 	bl	8008694 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008a40:	2001      	movs	r0, #1
 8008a42:	e7e3      	b.n	8008a0c <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8008a44:	4628      	mov	r0, r5
 8008a46:	f7fe ff19 	bl	800787c <vPortFree>
		if( pxNewTCB != NULL )
 8008a4a:	e7dd      	b.n	8008a08 <xTaskCreate+0x18>

08008a4c <vTaskStartScheduler>:
{
 8008a4c:	b510      	push	{r4, lr}
 8008a4e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008a50:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008a52:	aa07      	add	r2, sp, #28
 8008a54:	a906      	add	r1, sp, #24
 8008a56:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008a58:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008a5c:	f7fe fe38 	bl	80076d0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008a60:	9b05      	ldr	r3, [sp, #20]
 8008a62:	9302      	str	r3, [sp, #8]
 8008a64:	9b06      	ldr	r3, [sp, #24]
 8008a66:	9a07      	ldr	r2, [sp, #28]
 8008a68:	4919      	ldr	r1, [pc, #100]	@ (8008ad0 <vTaskStartScheduler+0x84>)
 8008a6a:	481a      	ldr	r0, [pc, #104]	@ (8008ad4 <vTaskStartScheduler+0x88>)
 8008a6c:	e9cd 4300 	strd	r4, r3, [sp]
 8008a70:	4623      	mov	r3, r4
 8008a72:	f7ff ff85 	bl	8008980 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008a76:	b340      	cbz	r0, 8008aca <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8008a78:	f000 fbb6 	bl	80091e8 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008a7c:	2801      	cmp	r0, #1
 8008a7e:	d119      	bne.n	8008ab4 <vTaskStartScheduler+0x68>
 8008a80:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a84:	f383 8811 	msr	BASEPRI, r3
 8008a88:	f3bf 8f6f 	isb	sy
 8008a8c:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008a90:	4b11      	ldr	r3, [pc, #68]	@ (8008ad8 <vTaskStartScheduler+0x8c>)
 8008a92:	4a12      	ldr	r2, [pc, #72]	@ (8008adc <vTaskStartScheduler+0x90>)
 8008a94:	681b      	ldr	r3, [r3, #0]
 8008a96:	3358      	adds	r3, #88	@ 0x58
 8008a98:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8008a9a:	4b11      	ldr	r3, [pc, #68]	@ (8008ae0 <vTaskStartScheduler+0x94>)
 8008a9c:	f04f 32ff 	mov.w	r2, #4294967295
 8008aa0:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008aa2:	4b10      	ldr	r3, [pc, #64]	@ (8008ae4 <vTaskStartScheduler+0x98>)
 8008aa4:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008aa6:	4b10      	ldr	r3, [pc, #64]	@ (8008ae8 <vTaskStartScheduler+0x9c>)
 8008aa8:	601c      	str	r4, [r3, #0]
}
 8008aaa:	b008      	add	sp, #32
 8008aac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008ab0:	f7ff b858 	b.w	8007b64 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008ab4:	3001      	adds	r0, #1
 8008ab6:	d108      	bne.n	8008aca <vTaskStartScheduler+0x7e>
 8008ab8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008abc:	f383 8811 	msr	BASEPRI, r3
 8008ac0:	f3bf 8f6f 	isb	sy
 8008ac4:	f3bf 8f4f 	dsb	sy
 8008ac8:	e7fe      	b.n	8008ac8 <vTaskStartScheduler+0x7c>
}
 8008aca:	b008      	add	sp, #32
 8008acc:	bd10      	pop	{r4, pc}
 8008ace:	bf00      	nop
 8008ad0:	08024844 	.word	0x08024844
 8008ad4:	08008865 	.word	0x08008865
 8008ad8:	20013ebc 	.word	0x20013ebc
 8008adc:	20000228 	.word	0x20000228
 8008ae0:	200139c8 	.word	0x200139c8
 8008ae4:	200139dc 	.word	0x200139dc
 8008ae8:	200139e4 	.word	0x200139e4

08008aec <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008aec:	4a02      	ldr	r2, [pc, #8]	@ (8008af8 <vTaskSuspendAll+0xc>)
 8008aee:	6813      	ldr	r3, [r2, #0]
 8008af0:	3301      	adds	r3, #1
 8008af2:	6013      	str	r3, [r2, #0]
}
 8008af4:	4770      	bx	lr
 8008af6:	bf00      	nop
 8008af8:	200139c4 	.word	0x200139c4

08008afc <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008afc:	4b01      	ldr	r3, [pc, #4]	@ (8008b04 <xTaskGetTickCount+0x8>)
 8008afe:	6818      	ldr	r0, [r3, #0]
}
 8008b00:	4770      	bx	lr
 8008b02:	bf00      	nop
 8008b04:	200139e4 	.word	0x200139e4

08008b08 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008b08:	4b3f      	ldr	r3, [pc, #252]	@ (8008c08 <xTaskIncrementTick+0x100>)
 8008b0a:	681b      	ldr	r3, [r3, #0]
{
 8008b0c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008b10:	2b00      	cmp	r3, #0
 8008b12:	d172      	bne.n	8008bfa <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008b14:	4b3d      	ldr	r3, [pc, #244]	@ (8008c0c <xTaskIncrementTick+0x104>)
 8008b16:	681c      	ldr	r4, [r3, #0]
 8008b18:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8008b1a:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008b1c:	b9bc      	cbnz	r4, 8008b4e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008b1e:	4b3c      	ldr	r3, [pc, #240]	@ (8008c10 <xTaskIncrementTick+0x108>)
 8008b20:	681a      	ldr	r2, [r3, #0]
 8008b22:	6812      	ldr	r2, [r2, #0]
 8008b24:	b142      	cbz	r2, 8008b38 <xTaskIncrementTick+0x30>
 8008b26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b2a:	f383 8811 	msr	BASEPRI, r3
 8008b2e:	f3bf 8f6f 	isb	sy
 8008b32:	f3bf 8f4f 	dsb	sy
 8008b36:	e7fe      	b.n	8008b36 <xTaskIncrementTick+0x2e>
 8008b38:	4a36      	ldr	r2, [pc, #216]	@ (8008c14 <xTaskIncrementTick+0x10c>)
 8008b3a:	6819      	ldr	r1, [r3, #0]
 8008b3c:	6810      	ldr	r0, [r2, #0]
 8008b3e:	6018      	str	r0, [r3, #0]
 8008b40:	6011      	str	r1, [r2, #0]
 8008b42:	4a35      	ldr	r2, [pc, #212]	@ (8008c18 <xTaskIncrementTick+0x110>)
 8008b44:	6813      	ldr	r3, [r2, #0]
 8008b46:	3301      	adds	r3, #1
 8008b48:	6013      	str	r3, [r2, #0]
 8008b4a:	f7ff fe5b 	bl	8008804 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008b4e:	4d33      	ldr	r5, [pc, #204]	@ (8008c1c <xTaskIncrementTick+0x114>)
 8008b50:	4e33      	ldr	r6, [pc, #204]	@ (8008c20 <xTaskIncrementTick+0x118>)
 8008b52:	682b      	ldr	r3, [r5, #0]
 8008b54:	4f33      	ldr	r7, [pc, #204]	@ (8008c24 <xTaskIncrementTick+0x11c>)
 8008b56:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8008b58:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008b5c:	d212      	bcs.n	8008b84 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008b5e:	683a      	ldr	r2, [r7, #0]
 8008b60:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008b62:	2114      	movs	r1, #20
 8008b64:	434a      	muls	r2, r1
 8008b66:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8008b68:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8008b6a:	4a2f      	ldr	r2, [pc, #188]	@ (8008c28 <xTaskIncrementTick+0x120>)
 8008b6c:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8008b6e:	bf28      	it	cs
 8008b70:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8008b74:	2a00      	cmp	r2, #0
 8008b76:	bf18      	it	ne
 8008b78:	f04f 0b01 	movne.w	fp, #1
}
 8008b7c:	4658      	mov	r0, fp
 8008b7e:	b003      	add	sp, #12
 8008b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008b84:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8008c10 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008b88:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8008c30 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008b8c:	f8d9 2000 	ldr.w	r2, [r9]
 8008b90:	6812      	ldr	r2, [r2, #0]
 8008b92:	b91a      	cbnz	r2, 8008b9c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b94:	f04f 32ff 	mov.w	r2, #4294967295
 8008b98:	602a      	str	r2, [r5, #0]
					break;
 8008b9a:	e7e0      	b.n	8008b5e <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b9c:	f8d9 2000 	ldr.w	r2, [r9]
 8008ba0:	68d2      	ldr	r2, [r2, #12]
 8008ba2:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008ba6:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8008baa:	428c      	cmp	r4, r1
 8008bac:	d201      	bcs.n	8008bb2 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008bae:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008bb0:	e7d5      	b.n	8008b5e <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008bb2:	f108 0304 	add.w	r3, r8, #4
 8008bb6:	4618      	mov	r0, r3
 8008bb8:	9301      	str	r3, [sp, #4]
 8008bba:	f7fe fecd 	bl	8007958 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008bbe:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8008bc2:	b119      	cbz	r1, 8008bcc <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008bc4:	f108 0018 	add.w	r0, r8, #24
 8008bc8:	f7fe fec6 	bl	8007958 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008bcc:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8008bd0:	f8da 1000 	ldr.w	r1, [sl]
 8008bd4:	2314      	movs	r3, #20
 8008bd6:	4288      	cmp	r0, r1
 8008bd8:	bf88      	it	hi
 8008bda:	f8ca 0000 	strhi.w	r0, [sl]
 8008bde:	9901      	ldr	r1, [sp, #4]
 8008be0:	fb03 6000 	mla	r0, r3, r0, r6
 8008be4:	f7fe fe96 	bl	8007914 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008be8:	6838      	ldr	r0, [r7, #0]
 8008bea:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008bee:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008bf0:	4291      	cmp	r1, r2
 8008bf2:	bf28      	it	cs
 8008bf4:	f04f 0b01 	movcs.w	fp, #1
 8008bf8:	e7c8      	b.n	8008b8c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008bfa:	4a0c      	ldr	r2, [pc, #48]	@ (8008c2c <xTaskIncrementTick+0x124>)
 8008bfc:	6813      	ldr	r3, [r2, #0]
 8008bfe:	3301      	adds	r3, #1
 8008c00:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008c02:	f04f 0b00 	mov.w	fp, #0
 8008c06:	e7b9      	b.n	8008b7c <xTaskIncrementTick+0x74>
 8008c08:	200139c4 	.word	0x200139c4
 8008c0c:	200139e4 	.word	0x200139e4
 8008c10:	20013a30 	.word	0x20013a30
 8008c14:	20013a2c 	.word	0x20013a2c
 8008c18:	200139d0 	.word	0x200139d0
 8008c1c:	200139c8 	.word	0x200139c8
 8008c20:	20013a5c 	.word	0x20013a5c
 8008c24:	20013ebc 	.word	0x20013ebc
 8008c28:	200139d4 	.word	0x200139d4
 8008c2c:	200139d8 	.word	0x200139d8
 8008c30:	200139e0 	.word	0x200139e0

08008c34 <xTaskResumeAll>:
{
 8008c34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8008c38:	4c30      	ldr	r4, [pc, #192]	@ (8008cfc <xTaskResumeAll+0xc8>)
 8008c3a:	6823      	ldr	r3, [r4, #0]
 8008c3c:	b943      	cbnz	r3, 8008c50 <xTaskResumeAll+0x1c>
 8008c3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c42:	f383 8811 	msr	BASEPRI, r3
 8008c46:	f3bf 8f6f 	isb	sy
 8008c4a:	f3bf 8f4f 	dsb	sy
 8008c4e:	e7fe      	b.n	8008c4e <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8008c50:	f7fe fef8 	bl	8007a44 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008c54:	6823      	ldr	r3, [r4, #0]
 8008c56:	3b01      	subs	r3, #1
 8008c58:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008c5a:	6824      	ldr	r4, [r4, #0]
 8008c5c:	b12c      	cbz	r4, 8008c6a <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8008c5e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008c60:	f7fe ff10 	bl	8007a84 <vPortExitCritical>
}
 8008c64:	4620      	mov	r0, r4
 8008c66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008c6a:	4b25      	ldr	r3, [pc, #148]	@ (8008d00 <xTaskResumeAll+0xcc>)
 8008c6c:	681b      	ldr	r3, [r3, #0]
 8008c6e:	2b00      	cmp	r3, #0
 8008c70:	d0f5      	beq.n	8008c5e <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008c72:	4d24      	ldr	r5, [pc, #144]	@ (8008d04 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008c74:	4e24      	ldr	r6, [pc, #144]	@ (8008d08 <xTaskResumeAll+0xd4>)
 8008c76:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8008d18 <xTaskResumeAll+0xe4>
 8008c7a:	e01d      	b.n	8008cb8 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c7c:	68eb      	ldr	r3, [r5, #12]
 8008c7e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008c80:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008c82:	f104 0018 	add.w	r0, r4, #24
 8008c86:	f7fe fe67 	bl	8007958 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008c8a:	4638      	mov	r0, r7
 8008c8c:	f7fe fe64 	bl	8007958 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008c90:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008c92:	6832      	ldr	r2, [r6, #0]
 8008c94:	2014      	movs	r0, #20
 8008c96:	4293      	cmp	r3, r2
 8008c98:	fb00 8003 	mla	r0, r0, r3, r8
 8008c9c:	4639      	mov	r1, r7
 8008c9e:	bf88      	it	hi
 8008ca0:	6033      	strhi	r3, [r6, #0]
 8008ca2:	f7fe fe37 	bl	8007914 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008ca6:	4b19      	ldr	r3, [pc, #100]	@ (8008d0c <xTaskResumeAll+0xd8>)
 8008ca8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008caa:	681b      	ldr	r3, [r3, #0]
 8008cac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008cae:	429a      	cmp	r2, r3
 8008cb0:	d302      	bcc.n	8008cb8 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8008cb2:	4b17      	ldr	r3, [pc, #92]	@ (8008d10 <xTaskResumeAll+0xdc>)
 8008cb4:	2201      	movs	r2, #1
 8008cb6:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008cb8:	682b      	ldr	r3, [r5, #0]
 8008cba:	2b00      	cmp	r3, #0
 8008cbc:	d1de      	bne.n	8008c7c <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8008cbe:	b10c      	cbz	r4, 8008cc4 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008cc0:	f7ff fda0 	bl	8008804 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008cc4:	4d13      	ldr	r5, [pc, #76]	@ (8008d14 <xTaskResumeAll+0xe0>)
 8008cc6:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008cc8:	b144      	cbz	r4, 8008cdc <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8008cca:	4e11      	ldr	r6, [pc, #68]	@ (8008d10 <xTaskResumeAll+0xdc>)
 8008ccc:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008cce:	f7ff ff1b 	bl	8008b08 <xTaskIncrementTick>
 8008cd2:	b100      	cbz	r0, 8008cd6 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8008cd4:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008cd6:	3c01      	subs	r4, #1
 8008cd8:	d1f9      	bne.n	8008cce <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8008cda:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008cdc:	4b0c      	ldr	r3, [pc, #48]	@ (8008d10 <xTaskResumeAll+0xdc>)
 8008cde:	681b      	ldr	r3, [r3, #0]
 8008ce0:	2b00      	cmp	r3, #0
 8008ce2:	d0bc      	beq.n	8008c5e <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008ce4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008ce8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008cec:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008cf0:	f3bf 8f4f 	dsb	sy
 8008cf4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008cf8:	2401      	movs	r4, #1
 8008cfa:	e7b1      	b.n	8008c60 <xTaskResumeAll+0x2c>
 8008cfc:	200139c4 	.word	0x200139c4
 8008d00:	200139e8 	.word	0x200139e8
 8008d04:	20013a18 	.word	0x20013a18
 8008d08:	200139e0 	.word	0x200139e0
 8008d0c:	20013ebc 	.word	0x20013ebc
 8008d10:	200139d4 	.word	0x200139d4
 8008d14:	200139d8 	.word	0x200139d8
 8008d18:	20013a5c 	.word	0x20013a5c

08008d1c <vTaskDelay>:
	{
 8008d1c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008d1e:	b950      	cbnz	r0, 8008d36 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008d20:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d24:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d28:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d2c:	f3bf 8f4f 	dsb	sy
 8008d30:	f3bf 8f6f 	isb	sy
	}
 8008d34:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008d36:	4b0a      	ldr	r3, [pc, #40]	@ (8008d60 <vTaskDelay+0x44>)
 8008d38:	6819      	ldr	r1, [r3, #0]
 8008d3a:	b141      	cbz	r1, 8008d4e <vTaskDelay+0x32>
 8008d3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d40:	f383 8811 	msr	BASEPRI, r3
 8008d44:	f3bf 8f6f 	isb	sy
 8008d48:	f3bf 8f4f 	dsb	sy
 8008d4c:	e7fe      	b.n	8008d4c <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008d4e:	f7ff fecd 	bl	8008aec <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008d52:	f7ff fd1f 	bl	8008794 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008d56:	f7ff ff6d 	bl	8008c34 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008d5a:	2800      	cmp	r0, #0
 8008d5c:	d0e0      	beq.n	8008d20 <vTaskDelay+0x4>
 8008d5e:	e7e9      	b.n	8008d34 <vTaskDelay+0x18>
 8008d60:	200139c4 	.word	0x200139c4

08008d64 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008d64:	4b19      	ldr	r3, [pc, #100]	@ (8008dcc <vTaskSwitchContext+0x68>)
 8008d66:	681a      	ldr	r2, [r3, #0]
 8008d68:	4b19      	ldr	r3, [pc, #100]	@ (8008dd0 <vTaskSwitchContext+0x6c>)
{
 8008d6a:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008d6c:	b112      	cbz	r2, 8008d74 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008d6e:	2201      	movs	r2, #1
 8008d70:	601a      	str	r2, [r3, #0]
}
 8008d72:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d74:	4d17      	ldr	r5, [pc, #92]	@ (8008dd4 <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8008d76:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d78:	682a      	ldr	r2, [r5, #0]
 8008d7a:	4917      	ldr	r1, [pc, #92]	@ (8008dd8 <vTaskSwitchContext+0x74>)
 8008d7c:	2614      	movs	r6, #20
 8008d7e:	fb06 f302 	mul.w	r3, r6, r2
 8008d82:	18c8      	adds	r0, r1, r3
 8008d84:	58cc      	ldr	r4, [r1, r3]
 8008d86:	b1ac      	cbz	r4, 8008db4 <vTaskSwitchContext+0x50>
 8008d88:	6844      	ldr	r4, [r0, #4]
 8008d8a:	3308      	adds	r3, #8
 8008d8c:	6864      	ldr	r4, [r4, #4]
 8008d8e:	6044      	str	r4, [r0, #4]
 8008d90:	440b      	add	r3, r1
 8008d92:	429c      	cmp	r4, r3
 8008d94:	bf04      	itt	eq
 8008d96:	6863      	ldreq	r3, [r4, #4]
 8008d98:	6043      	streq	r3, [r0, #4]
 8008d9a:	2314      	movs	r3, #20
 8008d9c:	fb03 1102 	mla	r1, r3, r2, r1
 8008da0:	684b      	ldr	r3, [r1, #4]
 8008da2:	68d9      	ldr	r1, [r3, #12]
 8008da4:	4b0d      	ldr	r3, [pc, #52]	@ (8008ddc <vTaskSwitchContext+0x78>)
 8008da6:	6019      	str	r1, [r3, #0]
 8008da8:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008daa:	681b      	ldr	r3, [r3, #0]
 8008dac:	4a0c      	ldr	r2, [pc, #48]	@ (8008de0 <vTaskSwitchContext+0x7c>)
 8008dae:	3358      	adds	r3, #88	@ 0x58
 8008db0:	6013      	str	r3, [r2, #0]
}
 8008db2:	e7de      	b.n	8008d72 <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008db4:	b942      	cbnz	r2, 8008dc8 <vTaskSwitchContext+0x64>
 8008db6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dba:	f383 8811 	msr	BASEPRI, r3
 8008dbe:	f3bf 8f6f 	isb	sy
 8008dc2:	f3bf 8f4f 	dsb	sy
 8008dc6:	e7fe      	b.n	8008dc6 <vTaskSwitchContext+0x62>
 8008dc8:	3a01      	subs	r2, #1
 8008dca:	e7d8      	b.n	8008d7e <vTaskSwitchContext+0x1a>
 8008dcc:	200139c4 	.word	0x200139c4
 8008dd0:	200139d4 	.word	0x200139d4
 8008dd4:	200139e0 	.word	0x200139e0
 8008dd8:	20013a5c 	.word	0x20013a5c
 8008ddc:	20013ebc 	.word	0x20013ebc
 8008de0:	20000228 	.word	0x20000228

08008de4 <vTaskPlaceOnEventList>:
{
 8008de4:	b510      	push	{r4, lr}
 8008de6:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008de8:	b940      	cbnz	r0, 8008dfc <vTaskPlaceOnEventList+0x18>
 8008dea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dee:	f383 8811 	msr	BASEPRI, r3
 8008df2:	f3bf 8f6f 	isb	sy
 8008df6:	f3bf 8f4f 	dsb	sy
 8008dfa:	e7fe      	b.n	8008dfa <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008dfc:	4b05      	ldr	r3, [pc, #20]	@ (8008e14 <vTaskPlaceOnEventList+0x30>)
 8008dfe:	6819      	ldr	r1, [r3, #0]
 8008e00:	3118      	adds	r1, #24
 8008e02:	f7fe fd92 	bl	800792a <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008e06:	4620      	mov	r0, r4
 8008e08:	2101      	movs	r1, #1
}
 8008e0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008e0e:	f7ff bcc1 	b.w	8008794 <prvAddCurrentTaskToDelayedList>
 8008e12:	bf00      	nop
 8008e14:	20013ebc 	.word	0x20013ebc

08008e18 <vTaskPlaceOnEventListRestricted>:
	{
 8008e18:	b538      	push	{r3, r4, r5, lr}
 8008e1a:	460d      	mov	r5, r1
 8008e1c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008e1e:	b940      	cbnz	r0, 8008e32 <vTaskPlaceOnEventListRestricted+0x1a>
 8008e20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e24:	f383 8811 	msr	BASEPRI, r3
 8008e28:	f3bf 8f6f 	isb	sy
 8008e2c:	f3bf 8f4f 	dsb	sy
 8008e30:	e7fe      	b.n	8008e30 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008e32:	4b07      	ldr	r3, [pc, #28]	@ (8008e50 <vTaskPlaceOnEventListRestricted+0x38>)
 8008e34:	6819      	ldr	r1, [r3, #0]
 8008e36:	3118      	adds	r1, #24
 8008e38:	f7fe fd6c 	bl	8007914 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008e3c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008e3e:	4621      	mov	r1, r4
 8008e40:	bf0c      	ite	eq
 8008e42:	4628      	moveq	r0, r5
 8008e44:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008e48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008e4c:	f7ff bca2 	b.w	8008794 <prvAddCurrentTaskToDelayedList>
 8008e50:	20013ebc 	.word	0x20013ebc

08008e54 <xTaskRemoveFromEventList>:
{
 8008e54:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008e56:	68c3      	ldr	r3, [r0, #12]
 8008e58:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008e5a:	b944      	cbnz	r4, 8008e6e <xTaskRemoveFromEventList+0x1a>
 8008e5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e60:	f383 8811 	msr	BASEPRI, r3
 8008e64:	f3bf 8f6f 	isb	sy
 8008e68:	f3bf 8f4f 	dsb	sy
 8008e6c:	e7fe      	b.n	8008e6c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008e6e:	f104 0518 	add.w	r5, r4, #24
 8008e72:	4628      	mov	r0, r5
 8008e74:	f7fe fd70 	bl	8007958 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e78:	4b10      	ldr	r3, [pc, #64]	@ (8008ebc <xTaskRemoveFromEventList+0x68>)
 8008e7a:	681b      	ldr	r3, [r3, #0]
 8008e7c:	b9db      	cbnz	r3, 8008eb6 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008e7e:	1d25      	adds	r5, r4, #4
 8008e80:	4628      	mov	r0, r5
 8008e82:	f7fe fd69 	bl	8007958 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008e86:	4a0e      	ldr	r2, [pc, #56]	@ (8008ec0 <xTaskRemoveFromEventList+0x6c>)
 8008e88:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008e8a:	6811      	ldr	r1, [r2, #0]
 8008e8c:	428b      	cmp	r3, r1
 8008e8e:	bf88      	it	hi
 8008e90:	6013      	strhi	r3, [r2, #0]
 8008e92:	4a0c      	ldr	r2, [pc, #48]	@ (8008ec4 <xTaskRemoveFromEventList+0x70>)
 8008e94:	2014      	movs	r0, #20
 8008e96:	4629      	mov	r1, r5
 8008e98:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008e9c:	f7fe fd3a 	bl	8007914 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008ea0:	4b09      	ldr	r3, [pc, #36]	@ (8008ec8 <xTaskRemoveFromEventList+0x74>)
 8008ea2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008ea4:	681b      	ldr	r3, [r3, #0]
 8008ea6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008ea8:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008eaa:	bf83      	ittte	hi
 8008eac:	4b07      	ldrhi	r3, [pc, #28]	@ (8008ecc <xTaskRemoveFromEventList+0x78>)
 8008eae:	2001      	movhi	r0, #1
 8008eb0:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8008eb2:	2000      	movls	r0, #0
}
 8008eb4:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008eb6:	4806      	ldr	r0, [pc, #24]	@ (8008ed0 <xTaskRemoveFromEventList+0x7c>)
 8008eb8:	4629      	mov	r1, r5
 8008eba:	e7ef      	b.n	8008e9c <xTaskRemoveFromEventList+0x48>
 8008ebc:	200139c4 	.word	0x200139c4
 8008ec0:	200139e0 	.word	0x200139e0
 8008ec4:	20013a5c 	.word	0x20013a5c
 8008ec8:	20013ebc 	.word	0x20013ebc
 8008ecc:	200139d4 	.word	0x200139d4
 8008ed0:	20013a18 	.word	0x20013a18

08008ed4 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008ed4:	4b03      	ldr	r3, [pc, #12]	@ (8008ee4 <vTaskInternalSetTimeOutState+0x10>)
 8008ed6:	681b      	ldr	r3, [r3, #0]
 8008ed8:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008eda:	4b03      	ldr	r3, [pc, #12]	@ (8008ee8 <vTaskInternalSetTimeOutState+0x14>)
 8008edc:	681b      	ldr	r3, [r3, #0]
 8008ede:	6043      	str	r3, [r0, #4]
}
 8008ee0:	4770      	bx	lr
 8008ee2:	bf00      	nop
 8008ee4:	200139d0 	.word	0x200139d0
 8008ee8:	200139e4 	.word	0x200139e4

08008eec <xTaskCheckForTimeOut>:
{
 8008eec:	b570      	push	{r4, r5, r6, lr}
 8008eee:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008ef0:	4605      	mov	r5, r0
 8008ef2:	b940      	cbnz	r0, 8008f06 <xTaskCheckForTimeOut+0x1a>
 8008ef4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ef8:	f383 8811 	msr	BASEPRI, r3
 8008efc:	f3bf 8f6f 	isb	sy
 8008f00:	f3bf 8f4f 	dsb	sy
 8008f04:	e7fe      	b.n	8008f04 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008f06:	b941      	cbnz	r1, 8008f1a <xTaskCheckForTimeOut+0x2e>
 8008f08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f0c:	f383 8811 	msr	BASEPRI, r3
 8008f10:	f3bf 8f6f 	isb	sy
 8008f14:	f3bf 8f4f 	dsb	sy
 8008f18:	e7fe      	b.n	8008f18 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008f1a:	f7fe fd93 	bl	8007a44 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008f1e:	4b0f      	ldr	r3, [pc, #60]	@ (8008f5c <xTaskCheckForTimeOut+0x70>)
 8008f20:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008f22:	6823      	ldr	r3, [r4, #0]
 8008f24:	1c5a      	adds	r2, r3, #1
 8008f26:	d010      	beq.n	8008f4a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008f28:	480d      	ldr	r0, [pc, #52]	@ (8008f60 <xTaskCheckForTimeOut+0x74>)
 8008f2a:	682e      	ldr	r6, [r5, #0]
 8008f2c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008f2e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008f30:	4286      	cmp	r6, r0
 8008f32:	d001      	beq.n	8008f38 <xTaskCheckForTimeOut+0x4c>
 8008f34:	428a      	cmp	r2, r1
 8008f36:	d90f      	bls.n	8008f58 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008f38:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008f3a:	4283      	cmp	r3, r0
 8008f3c:	d90a      	bls.n	8008f54 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008f3e:	1a5b      	subs	r3, r3, r1
 8008f40:	4413      	add	r3, r2
 8008f42:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008f44:	4628      	mov	r0, r5
 8008f46:	f7ff ffc5 	bl	8008ed4 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008f4a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008f4c:	f7fe fd9a 	bl	8007a84 <vPortExitCritical>
}
 8008f50:	4620      	mov	r0, r4
 8008f52:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008f54:	2300      	movs	r3, #0
 8008f56:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008f58:	2401      	movs	r4, #1
 8008f5a:	e7f7      	b.n	8008f4c <xTaskCheckForTimeOut+0x60>
 8008f5c:	200139e4 	.word	0x200139e4
 8008f60:	200139d0 	.word	0x200139d0

08008f64 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008f64:	4b01      	ldr	r3, [pc, #4]	@ (8008f6c <vTaskMissedYield+0x8>)
 8008f66:	2201      	movs	r2, #1
 8008f68:	601a      	str	r2, [r3, #0]
}
 8008f6a:	4770      	bx	lr
 8008f6c:	200139d4 	.word	0x200139d4

08008f70 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008f70:	4b05      	ldr	r3, [pc, #20]	@ (8008f88 <xTaskGetSchedulerState+0x18>)
 8008f72:	681b      	ldr	r3, [r3, #0]
 8008f74:	b133      	cbz	r3, 8008f84 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008f76:	4b05      	ldr	r3, [pc, #20]	@ (8008f8c <xTaskGetSchedulerState+0x1c>)
 8008f78:	6818      	ldr	r0, [r3, #0]
 8008f7a:	fab0 f080 	clz	r0, r0
 8008f7e:	0940      	lsrs	r0, r0, #5
 8008f80:	0040      	lsls	r0, r0, #1
 8008f82:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008f84:	2001      	movs	r0, #1
	}
 8008f86:	4770      	bx	lr
 8008f88:	200139dc 	.word	0x200139dc
 8008f8c:	200139c4 	.word	0x200139c4

08008f90 <xTaskPriorityInherit>:
	{
 8008f90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8008f92:	4604      	mov	r4, r0
 8008f94:	b338      	cbz	r0, 8008fe6 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008f96:	4d1a      	ldr	r5, [pc, #104]	@ (8009000 <xTaskPriorityInherit+0x70>)
 8008f98:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008f9a:	682a      	ldr	r2, [r5, #0]
 8008f9c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008f9e:	4293      	cmp	r3, r2
 8008fa0:	d226      	bcs.n	8008ff0 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008fa2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008fa4:	4e17      	ldr	r6, [pc, #92]	@ (8009004 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008fa6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008fa8:	bfa1      	itttt	ge
 8008faa:	682a      	ldrge	r2, [r5, #0]
 8008fac:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 8008fae:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 8008fb2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008fb4:	2214      	movs	r2, #20
 8008fb6:	fb02 6303 	mla	r3, r2, r3, r6
 8008fba:	6942      	ldr	r2, [r0, #20]
 8008fbc:	429a      	cmp	r2, r3
 8008fbe:	d113      	bne.n	8008fe8 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008fc0:	1d07      	adds	r7, r0, #4
 8008fc2:	4638      	mov	r0, r7
 8008fc4:	f7fe fcc8 	bl	8007958 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008fc8:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008fca:	4a0f      	ldr	r2, [pc, #60]	@ (8009008 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008fcc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008fce:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008fd0:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008fd2:	2014      	movs	r0, #20
 8008fd4:	428b      	cmp	r3, r1
 8008fd6:	fb00 6003 	mla	r0, r0, r3, r6
 8008fda:	4639      	mov	r1, r7
 8008fdc:	bf88      	it	hi
 8008fde:	6013      	strhi	r3, [r2, #0]
 8008fe0:	f7fe fc98 	bl	8007914 <vListInsertEnd>
				xReturn = pdTRUE;
 8008fe4:	2001      	movs	r0, #1
	}
 8008fe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008fe8:	682b      	ldr	r3, [r5, #0]
 8008fea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008fec:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8008fee:	e7f9      	b.n	8008fe4 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008ff0:	682b      	ldr	r3, [r5, #0]
 8008ff2:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8008ff4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008ff6:	4298      	cmp	r0, r3
 8008ff8:	bf2c      	ite	cs
 8008ffa:	2000      	movcs	r0, #0
 8008ffc:	2001      	movcc	r0, #1
 8008ffe:	e7f2      	b.n	8008fe6 <xTaskPriorityInherit+0x56>
 8009000:	20013ebc 	.word	0x20013ebc
 8009004:	20013a5c 	.word	0x20013a5c
 8009008:	200139e0 	.word	0x200139e0

0800900c <xTaskPriorityDisinherit>:
	{
 800900c:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800900e:	b908      	cbnz	r0, 8009014 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8009010:	2000      	movs	r0, #0
	}
 8009012:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009014:	4b1b      	ldr	r3, [pc, #108]	@ (8009084 <xTaskPriorityDisinherit+0x78>)
 8009016:	681c      	ldr	r4, [r3, #0]
 8009018:	4284      	cmp	r4, r0
 800901a:	d008      	beq.n	800902e <xTaskPriorityDisinherit+0x22>
 800901c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009020:	f383 8811 	msr	BASEPRI, r3
 8009024:	f3bf 8f6f 	isb	sy
 8009028:	f3bf 8f4f 	dsb	sy
 800902c:	e7fe      	b.n	800902c <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800902e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009030:	b943      	cbnz	r3, 8009044 <xTaskPriorityDisinherit+0x38>
 8009032:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009036:	f383 8811 	msr	BASEPRI, r3
 800903a:	f3bf 8f6f 	isb	sy
 800903e:	f3bf 8f4f 	dsb	sy
 8009042:	e7fe      	b.n	8009042 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009044:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8009046:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009048:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800904a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800904c:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800904e:	d0df      	beq.n	8009010 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009050:	2b00      	cmp	r3, #0
 8009052:	d1dd      	bne.n	8009010 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009054:	1d25      	adds	r5, r4, #4
 8009056:	4628      	mov	r0, r5
 8009058:	f7fe fc7e 	bl	8007958 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800905c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800905e:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009060:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009064:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009066:	4a08      	ldr	r2, [pc, #32]	@ (8009088 <xTaskPriorityDisinherit+0x7c>)
 8009068:	6811      	ldr	r1, [r2, #0]
 800906a:	428b      	cmp	r3, r1
 800906c:	bf88      	it	hi
 800906e:	6013      	strhi	r3, [r2, #0]
 8009070:	4a06      	ldr	r2, [pc, #24]	@ (800908c <xTaskPriorityDisinherit+0x80>)
 8009072:	2014      	movs	r0, #20
 8009074:	fb00 2003 	mla	r0, r0, r3, r2
 8009078:	4629      	mov	r1, r5
 800907a:	f7fe fc4b 	bl	8007914 <vListInsertEnd>
					xReturn = pdTRUE;
 800907e:	2001      	movs	r0, #1
		return xReturn;
 8009080:	e7c7      	b.n	8009012 <xTaskPriorityDisinherit+0x6>
 8009082:	bf00      	nop
 8009084:	20013ebc 	.word	0x20013ebc
 8009088:	200139e0 	.word	0x200139e0
 800908c:	20013a5c 	.word	0x20013a5c

08009090 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009090:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009092:	4604      	mov	r4, r0
 8009094:	2800      	cmp	r0, #0
 8009096:	d041      	beq.n	800911c <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8009098:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800909a:	b942      	cbnz	r2, 80090ae <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800909c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090a0:	f383 8811 	msr	BASEPRI, r3
 80090a4:	f3bf 8f6f 	isb	sy
 80090a8:	f3bf 8f4f 	dsb	sy
 80090ac:	e7fe      	b.n	80090ac <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 80090ae:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 80090b0:	4299      	cmp	r1, r3
 80090b2:	bf38      	it	cc
 80090b4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 80090b6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80090b8:	428b      	cmp	r3, r1
 80090ba:	d02f      	beq.n	800911c <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 80090bc:	2a01      	cmp	r2, #1
 80090be:	d12d      	bne.n	800911c <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 80090c0:	4a17      	ldr	r2, [pc, #92]	@ (8009120 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 80090c2:	6812      	ldr	r2, [r2, #0]
 80090c4:	4282      	cmp	r2, r0
 80090c6:	d108      	bne.n	80090da <vTaskPriorityDisinheritAfterTimeout+0x4a>
 80090c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090cc:	f383 8811 	msr	BASEPRI, r3
 80090d0:	f3bf 8f6f 	isb	sy
 80090d4:	f3bf 8f4f 	dsb	sy
 80090d8:	e7fe      	b.n	80090d8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80090da:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80090dc:	4d11      	ldr	r5, [pc, #68]	@ (8009124 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 80090de:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80090e0:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80090e2:	f04f 0214 	mov.w	r2, #20
 80090e6:	fb02 5303 	mla	r3, r2, r3, r5
 80090ea:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80090ec:	bfa4      	itt	ge
 80090ee:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 80090f2:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80090f4:	429a      	cmp	r2, r3
 80090f6:	d111      	bne.n	800911c <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80090f8:	1d06      	adds	r6, r0, #4
 80090fa:	4630      	mov	r0, r6
 80090fc:	f7fe fc2c 	bl	8007958 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009100:	4a09      	ldr	r2, [pc, #36]	@ (8009128 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009102:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009104:	6811      	ldr	r1, [r2, #0]
 8009106:	2014      	movs	r0, #20
 8009108:	428b      	cmp	r3, r1
 800910a:	fb00 5003 	mla	r0, r0, r3, r5
 800910e:	4631      	mov	r1, r6
	}
 8009110:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8009114:	bf88      	it	hi
 8009116:	6013      	strhi	r3, [r2, #0]
 8009118:	f7fe bbfc 	b.w	8007914 <vListInsertEnd>
	}
 800911c:	bd70      	pop	{r4, r5, r6, pc}
 800911e:	bf00      	nop
 8009120:	20013ebc 	.word	0x20013ebc
 8009124:	20013a5c 	.word	0x20013a5c
 8009128:	200139e0 	.word	0x200139e0

0800912c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800912c:	4b04      	ldr	r3, [pc, #16]	@ (8009140 <pvTaskIncrementMutexHeldCount+0x14>)
 800912e:	681a      	ldr	r2, [r3, #0]
 8009130:	b11a      	cbz	r2, 800913a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009132:	6819      	ldr	r1, [r3, #0]
 8009134:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8009136:	3201      	adds	r2, #1
 8009138:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800913a:	6818      	ldr	r0, [r3, #0]
	}
 800913c:	4770      	bx	lr
 800913e:	bf00      	nop
 8009140:	20013ebc 	.word	0x20013ebc

08009144 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009144:	4291      	cmp	r1, r2
{
 8009146:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009148:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800914a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800914c:	d80a      	bhi.n	8009164 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800914e:	1ad2      	subs	r2, r2, r3
 8009150:	6983      	ldr	r3, [r0, #24]
 8009152:	429a      	cmp	r2, r3
 8009154:	d20d      	bcs.n	8009172 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009156:	4b08      	ldr	r3, [pc, #32]	@ (8009178 <prvInsertTimerInActiveList+0x34>)
 8009158:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800915a:	6818      	ldr	r0, [r3, #0]
 800915c:	f7fe fbe5 	bl	800792a <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009160:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009162:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009164:	429a      	cmp	r2, r3
 8009166:	d201      	bcs.n	800916c <prvInsertTimerInActiveList+0x28>
 8009168:	4299      	cmp	r1, r3
 800916a:	d202      	bcs.n	8009172 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800916c:	4b03      	ldr	r3, [pc, #12]	@ (800917c <prvInsertTimerInActiveList+0x38>)
 800916e:	1d01      	adds	r1, r0, #4
 8009170:	e7f3      	b.n	800915a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009172:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009174:	e7f5      	b.n	8009162 <prvInsertTimerInActiveList+0x1e>
 8009176:	bf00      	nop
 8009178:	20013fbc 	.word	0x20013fbc
 800917c:	20013fc0 	.word	0x20013fc0

08009180 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009180:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009182:	4c11      	ldr	r4, [pc, #68]	@ (80091c8 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009184:	f7fe fc5e 	bl	8007a44 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009188:	6825      	ldr	r5, [r4, #0]
 800918a:	b9bd      	cbnz	r5, 80091bc <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800918c:	4f0f      	ldr	r7, [pc, #60]	@ (80091cc <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800918e:	4e10      	ldr	r6, [pc, #64]	@ (80091d0 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009190:	4638      	mov	r0, r7
 8009192:	f7fe fbb1 	bl	80078f8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009196:	4630      	mov	r0, r6
 8009198:	f7fe fbae 	bl	80078f8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800919c:	4b0d      	ldr	r3, [pc, #52]	@ (80091d4 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800919e:	4a0e      	ldr	r2, [pc, #56]	@ (80091d8 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80091a0:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80091a2:	4b0e      	ldr	r3, [pc, #56]	@ (80091dc <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80091a4:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 80091a6:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80091a8:	200a      	movs	r0, #10
 80091aa:	4b0d      	ldr	r3, [pc, #52]	@ (80091e0 <prvCheckForValidListAndQueue+0x60>)
 80091ac:	9500      	str	r5, [sp, #0]
 80091ae:	f7fe fe52 	bl	8007e56 <xQueueGenericCreateStatic>
 80091b2:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 80091b4:	b110      	cbz	r0, 80091bc <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80091b6:	490b      	ldr	r1, [pc, #44]	@ (80091e4 <prvCheckForValidListAndQueue+0x64>)
 80091b8:	f7ff fa0a 	bl	80085d0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 80091bc:	b003      	add	sp, #12
 80091be:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 80091c2:	f7fe bc5f 	b.w	8007a84 <vPortExitCritical>
 80091c6:	bf00      	nop
 80091c8:	20013fb8 	.word	0x20013fb8
 80091cc:	20013fd8 	.word	0x20013fd8
 80091d0:	20013fc4 	.word	0x20013fc4
 80091d4:	20013fc0 	.word	0x20013fc0
 80091d8:	20013f10 	.word	0x20013f10
 80091dc:	20013fbc 	.word	0x20013fbc
 80091e0:	20013ec0 	.word	0x20013ec0
 80091e4:	08024849 	.word	0x08024849

080091e8 <xTimerCreateTimerTask>:
{
 80091e8:	b510      	push	{r4, lr}
 80091ea:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80091ec:	f7ff ffc8 	bl	8009180 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80091f0:	4b12      	ldr	r3, [pc, #72]	@ (800923c <xTimerCreateTimerTask+0x54>)
 80091f2:	681b      	ldr	r3, [r3, #0]
 80091f4:	b1b3      	cbz	r3, 8009224 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80091f6:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80091f8:	aa07      	add	r2, sp, #28
 80091fa:	a906      	add	r1, sp, #24
 80091fc:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80091fe:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009202:	f7fe fa71 	bl	80076e8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009206:	9b05      	ldr	r3, [sp, #20]
 8009208:	9302      	str	r3, [sp, #8]
 800920a:	9b06      	ldr	r3, [sp, #24]
 800920c:	9301      	str	r3, [sp, #4]
 800920e:	2302      	movs	r3, #2
 8009210:	9300      	str	r3, [sp, #0]
 8009212:	9a07      	ldr	r2, [sp, #28]
 8009214:	490a      	ldr	r1, [pc, #40]	@ (8009240 <xTimerCreateTimerTask+0x58>)
 8009216:	480b      	ldr	r0, [pc, #44]	@ (8009244 <xTimerCreateTimerTask+0x5c>)
 8009218:	4623      	mov	r3, r4
 800921a:	f7ff fbb1 	bl	8008980 <xTaskCreateStatic>
 800921e:	4b0a      	ldr	r3, [pc, #40]	@ (8009248 <xTimerCreateTimerTask+0x60>)
 8009220:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009222:	b940      	cbnz	r0, 8009236 <xTimerCreateTimerTask+0x4e>
 8009224:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009228:	f383 8811 	msr	BASEPRI, r3
 800922c:	f3bf 8f6f 	isb	sy
 8009230:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009234:	e7fe      	b.n	8009234 <xTimerCreateTimerTask+0x4c>
}
 8009236:	2001      	movs	r0, #1
 8009238:	b008      	add	sp, #32
 800923a:	bd10      	pop	{r4, pc}
 800923c:	20013fb8 	.word	0x20013fb8
 8009240:	0802484e 	.word	0x0802484e
 8009244:	08009349 	.word	0x08009349
 8009248:	20013fb4 	.word	0x20013fb4

0800924c <xTimerGenericCommand>:
{
 800924c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800924e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009250:	4604      	mov	r4, r0
{
 8009252:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009254:	b940      	cbnz	r0, 8009268 <xTimerGenericCommand+0x1c>
 8009256:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800925a:	f383 8811 	msr	BASEPRI, r3
 800925e:	f3bf 8f6f 	isb	sy
 8009262:	f3bf 8f4f 	dsb	sy
 8009266:	e7fe      	b.n	8009266 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009268:	4d0d      	ldr	r5, [pc, #52]	@ (80092a0 <xTimerGenericCommand+0x54>)
 800926a:	6828      	ldr	r0, [r5, #0]
 800926c:	b180      	cbz	r0, 8009290 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800926e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009270:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009274:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009276:	dc0d      	bgt.n	8009294 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009278:	f7ff fe7a 	bl	8008f70 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800927c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800927e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009280:	bf08      	it	eq
 8009282:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009284:	6828      	ldr	r0, [r5, #0]
 8009286:	bf18      	it	ne
 8009288:	461a      	movne	r2, r3
 800928a:	4669      	mov	r1, sp
 800928c:	f7fe fe98 	bl	8007fc0 <xQueueGenericSend>
}
 8009290:	b004      	add	sp, #16
 8009292:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009294:	2300      	movs	r3, #0
 8009296:	4669      	mov	r1, sp
 8009298:	f7fe ff44 	bl	8008124 <xQueueGenericSendFromISR>
 800929c:	e7f8      	b.n	8009290 <xTimerGenericCommand+0x44>
 800929e:	bf00      	nop
 80092a0:	20013fb8 	.word	0x20013fb8

080092a4 <prvSampleTimeNow>:
{
 80092a4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 80092a8:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8009344 <prvSampleTimeNow+0xa0>
{
 80092ac:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 80092ae:	f7ff fc25 	bl	8008afc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80092b2:	f8d8 3000 	ldr.w	r3, [r8]
 80092b6:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 80092b8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80092ba:	d909      	bls.n	80092d0 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80092bc:	4f1f      	ldr	r7, [pc, #124]	@ (800933c <prvSampleTimeNow+0x98>)
 80092be:	683b      	ldr	r3, [r7, #0]
 80092c0:	681a      	ldr	r2, [r3, #0]
 80092c2:	b96a      	cbnz	r2, 80092e0 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 80092c4:	4a1e      	ldr	r2, [pc, #120]	@ (8009340 <prvSampleTimeNow+0x9c>)
 80092c6:	6811      	ldr	r1, [r2, #0]
 80092c8:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 80092ca:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 80092cc:	2301      	movs	r3, #1
 80092ce:	e000      	b.n	80092d2 <prvSampleTimeNow+0x2e>
 80092d0:	2300      	movs	r3, #0
}
 80092d2:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 80092d4:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 80092d6:	f8c8 5000 	str.w	r5, [r8]
}
 80092da:	b002      	add	sp, #8
 80092dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80092e0:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80092e2:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80092e4:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80092e8:	f104 0a04 	add.w	sl, r4, #4
 80092ec:	4650      	mov	r0, sl
 80092ee:	f7fe fb33 	bl	8007958 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80092f2:	6a23      	ldr	r3, [r4, #32]
 80092f4:	4620      	mov	r0, r4
 80092f6:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80092f8:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80092fc:	075b      	lsls	r3, r3, #29
 80092fe:	d5de      	bpl.n	80092be <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009300:	69a3      	ldr	r3, [r4, #24]
 8009302:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8009304:	4599      	cmp	r9, r3
 8009306:	d206      	bcs.n	8009316 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009308:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800930a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800930c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800930e:	4651      	mov	r1, sl
 8009310:	f7fe fb0b 	bl	800792a <vListInsert>
 8009314:	e7d3      	b.n	80092be <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009316:	2300      	movs	r3, #0
 8009318:	9300      	str	r3, [sp, #0]
 800931a:	464a      	mov	r2, r9
 800931c:	4619      	mov	r1, r3
 800931e:	4620      	mov	r0, r4
 8009320:	f7ff ff94 	bl	800924c <xTimerGenericCommand>
				configASSERT( xResult );
 8009324:	2800      	cmp	r0, #0
 8009326:	d1ca      	bne.n	80092be <prvSampleTimeNow+0x1a>
 8009328:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800932c:	f383 8811 	msr	BASEPRI, r3
 8009330:	f3bf 8f6f 	isb	sy
 8009334:	f3bf 8f4f 	dsb	sy
 8009338:	e7fe      	b.n	8009338 <prvSampleTimeNow+0x94>
 800933a:	bf00      	nop
 800933c:	20013fc0 	.word	0x20013fc0
 8009340:	20013fbc 	.word	0x20013fbc
 8009344:	20013fb0 	.word	0x20013fb0

08009348 <prvTimerTask>:
{
 8009348:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800934c:	4d6e      	ldr	r5, [pc, #440]	@ (8009508 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800934e:	4e6f      	ldr	r6, [pc, #444]	@ (800950c <prvTimerTask+0x1c4>)
{
 8009350:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009352:	682b      	ldr	r3, [r5, #0]
 8009354:	f8d3 8000 	ldr.w	r8, [r3]
 8009358:	f1b8 0f00 	cmp.w	r8, #0
 800935c:	d035      	beq.n	80093ca <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800935e:	68db      	ldr	r3, [r3, #12]
 8009360:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009364:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009366:	f7ff fbc1 	bl	8008aec <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800936a:	a804      	add	r0, sp, #16
 800936c:	f7ff ff9a 	bl	80092a4 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009370:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009372:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009374:	2b00      	cmp	r3, #0
 8009376:	d169      	bne.n	800944c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009378:	2c00      	cmp	r4, #0
 800937a:	d14c      	bne.n	8009416 <prvTimerTask+0xce>
 800937c:	4540      	cmp	r0, r8
 800937e:	d350      	bcc.n	8009422 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009380:	f7ff fc58 	bl	8008c34 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009384:	682b      	ldr	r3, [r5, #0]
 8009386:	68db      	ldr	r3, [r3, #12]
 8009388:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800938a:	1d38      	adds	r0, r7, #4
 800938c:	f7fe fae4 	bl	8007958 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009390:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009394:	0758      	lsls	r0, r3, #29
 8009396:	d51a      	bpl.n	80093ce <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009398:	69b9      	ldr	r1, [r7, #24]
 800939a:	4643      	mov	r3, r8
 800939c:	464a      	mov	r2, r9
 800939e:	4441      	add	r1, r8
 80093a0:	4638      	mov	r0, r7
 80093a2:	f7ff fecf 	bl	8009144 <prvInsertTimerInActiveList>
 80093a6:	b1b0      	cbz	r0, 80093d6 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80093a8:	9400      	str	r4, [sp, #0]
 80093aa:	4623      	mov	r3, r4
 80093ac:	4642      	mov	r2, r8
 80093ae:	4621      	mov	r1, r4
 80093b0:	4638      	mov	r0, r7
 80093b2:	f7ff ff4b 	bl	800924c <xTimerGenericCommand>
			configASSERT( xResult );
 80093b6:	b970      	cbnz	r0, 80093d6 <prvTimerTask+0x8e>
 80093b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093bc:	f383 8811 	msr	BASEPRI, r3
 80093c0:	f3bf 8f6f 	isb	sy
 80093c4:	f3bf 8f4f 	dsb	sy
 80093c8:	e7fe      	b.n	80093c8 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80093ca:	2401      	movs	r4, #1
 80093cc:	e7cb      	b.n	8009366 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80093ce:	f023 0301 	bic.w	r3, r3, #1
 80093d2:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80093d6:	6a3b      	ldr	r3, [r7, #32]
 80093d8:	4638      	mov	r0, r7
 80093da:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80093dc:	6830      	ldr	r0, [r6, #0]
 80093de:	2200      	movs	r2, #0
 80093e0:	a904      	add	r1, sp, #16
 80093e2:	f7fe ff4d 	bl	8008280 <xQueueReceive>
 80093e6:	2800      	cmp	r0, #0
 80093e8:	d0b3      	beq.n	8009352 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80093ea:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80093ec:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80093ee:	2b00      	cmp	r3, #0
 80093f0:	db2f      	blt.n	8009452 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80093f2:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80093f4:	6963      	ldr	r3, [r4, #20]
 80093f6:	2b00      	cmp	r3, #0
 80093f8:	d132      	bne.n	8009460 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80093fa:	a803      	add	r0, sp, #12
 80093fc:	f7ff ff52 	bl	80092a4 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009400:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009402:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009404:	2b09      	cmp	r3, #9
 8009406:	d8e9      	bhi.n	80093dc <prvTimerTask+0x94>
 8009408:	e8df f003 	tbb	[pc, r3]
 800940c:	572e2e2e 	.word	0x572e2e2e
 8009410:	2e2e765e 	.word	0x2e2e765e
 8009414:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009416:	4b3e      	ldr	r3, [pc, #248]	@ (8009510 <prvTimerTask+0x1c8>)
 8009418:	681b      	ldr	r3, [r3, #0]
 800941a:	681c      	ldr	r4, [r3, #0]
 800941c:	fab4 f484 	clz	r4, r4
 8009420:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009422:	6830      	ldr	r0, [r6, #0]
 8009424:	4622      	mov	r2, r4
 8009426:	eba8 0109 	sub.w	r1, r8, r9
 800942a:	f7ff f910 	bl	800864e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800942e:	f7ff fc01 	bl	8008c34 <xTaskResumeAll>
 8009432:	2800      	cmp	r0, #0
 8009434:	d1d2      	bne.n	80093dc <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009436:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800943a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800943e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009442:	f3bf 8f4f 	dsb	sy
 8009446:	f3bf 8f6f 	isb	sy
 800944a:	e7c7      	b.n	80093dc <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800944c:	f7ff fbf2 	bl	8008c34 <xTaskResumeAll>
}
 8009450:	e7c4      	b.n	80093dc <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009452:	9b05      	ldr	r3, [sp, #20]
 8009454:	9907      	ldr	r1, [sp, #28]
 8009456:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009458:	9b04      	ldr	r3, [sp, #16]
 800945a:	2b00      	cmp	r3, #0
 800945c:	dbbe      	blt.n	80093dc <prvTimerTask+0x94>
 800945e:	e7c8      	b.n	80093f2 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009460:	1d20      	adds	r0, r4, #4
 8009462:	f7fe fa79 	bl	8007958 <uxListRemove>
 8009466:	e7c8      	b.n	80093fa <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009468:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800946c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800946e:	f043 0301 	orr.w	r3, r3, #1
 8009472:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009476:	9b05      	ldr	r3, [sp, #20]
 8009478:	4620      	mov	r0, r4
 800947a:	4419      	add	r1, r3
 800947c:	f7ff fe62 	bl	8009144 <prvInsertTimerInActiveList>
 8009480:	2800      	cmp	r0, #0
 8009482:	d0ab      	beq.n	80093dc <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009484:	6a23      	ldr	r3, [r4, #32]
 8009486:	4620      	mov	r0, r4
 8009488:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800948a:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800948e:	0759      	lsls	r1, r3, #29
 8009490:	d5a4      	bpl.n	80093dc <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009492:	69a2      	ldr	r2, [r4, #24]
 8009494:	9905      	ldr	r1, [sp, #20]
 8009496:	2300      	movs	r3, #0
 8009498:	440a      	add	r2, r1
 800949a:	9300      	str	r3, [sp, #0]
 800949c:	4619      	mov	r1, r3
 800949e:	4620      	mov	r0, r4
 80094a0:	f7ff fed4 	bl	800924c <xTimerGenericCommand>
							configASSERT( xResult );
 80094a4:	2800      	cmp	r0, #0
 80094a6:	d199      	bne.n	80093dc <prvTimerTask+0x94>
 80094a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094ac:	f383 8811 	msr	BASEPRI, r3
 80094b0:	f3bf 8f6f 	isb	sy
 80094b4:	f3bf 8f4f 	dsb	sy
 80094b8:	e7fe      	b.n	80094b8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80094ba:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80094be:	f023 0301 	bic.w	r3, r3, #1
 80094c2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 80094c6:	e789      	b.n	80093dc <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80094c8:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80094cc:	f043 0301 	orr.w	r3, r3, #1
 80094d0:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80094d4:	9905      	ldr	r1, [sp, #20]
 80094d6:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80094d8:	b941      	cbnz	r1, 80094ec <prvTimerTask+0x1a4>
 80094da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094de:	f383 8811 	msr	BASEPRI, r3
 80094e2:	f3bf 8f6f 	isb	sy
 80094e6:	f3bf 8f4f 	dsb	sy
 80094ea:	e7fe      	b.n	80094ea <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80094ec:	4603      	mov	r3, r0
 80094ee:	4401      	add	r1, r0
 80094f0:	4620      	mov	r0, r4
 80094f2:	f7ff fe27 	bl	8009144 <prvInsertTimerInActiveList>
					break;
 80094f6:	e771      	b.n	80093dc <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80094f8:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80094fc:	079a      	lsls	r2, r3, #30
 80094fe:	d4de      	bmi.n	80094be <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009500:	4620      	mov	r0, r4
 8009502:	f7fe f9bb 	bl	800787c <vPortFree>
 8009506:	e769      	b.n	80093dc <prvTimerTask+0x94>
 8009508:	20013fc0 	.word	0x20013fc0
 800950c:	20013fb8 	.word	0x20013fb8
 8009510:	20013fbc 	.word	0x20013fbc

08009514 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 8009514:	b178      	cbz	r0, 8009536 <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 8009516:	2300      	movs	r3, #0
 8009518:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
 800951c:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 8009520:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8009524:	b109      	cbz	r1, 800952a <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
 8009526:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800952a:	2301      	movs	r3, #1
 800952c:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  pdev->id = id;
 8009530:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 8009532:	f7f8 b9ed 	b.w	8001910 <USBD_LL_Init>

  return ret;
}
 8009536:	2003      	movs	r0, #3
 8009538:	4770      	bx	lr

0800953a <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 800953a:	b513      	push	{r0, r1, r4, lr}
  uint16_t len = 0U;
 800953c:	2300      	movs	r3, #0
{
 800953e:	4604      	mov	r4, r0
  uint16_t len = 0U;
 8009540:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 8009544:	b181      	cbz	r1, 8009568 <USBD_RegisterClass+0x2e>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009546:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
  pdev->pClass[0] = pclass;
 8009548:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 800954c:	b123      	cbz	r3, 8009558 <USBD_RegisterClass+0x1e>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 800954e:	f10d 0006 	add.w	r0, sp, #6
 8009552:	4798      	blx	r3
 8009554:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
 8009558:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 800955c:	3301      	adds	r3, #1
 800955e:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
 8009562:	2000      	movs	r0, #0
}
 8009564:	b002      	add	sp, #8
 8009566:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8009568:	2003      	movs	r0, #3
 800956a:	e7fb      	b.n	8009564 <USBD_RegisterClass+0x2a>

0800956c <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 800956c:	f7f8 ba21 	b.w	80019b2 <USBD_LL_Start>

08009570 <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 8009570:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009574:	b10b      	cbz	r3, 800957a <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 8009576:	681b      	ldr	r3, [r3, #0]
 8009578:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800957a:	4618      	mov	r0, r3
 800957c:	4770      	bx	lr

0800957e <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800957e:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 8009580:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009584:	685b      	ldr	r3, [r3, #4]
 8009586:	4798      	blx	r3
  {
    ret = USBD_FAIL;
 8009588:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800958a:	bf18      	it	ne
 800958c:	2003      	movne	r0, #3
 800958e:	bd08      	pop	{r3, pc}

08009590 <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 8009590:	b538      	push	{r3, r4, r5, lr}
 8009592:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 8009594:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 8009598:	4628      	mov	r0, r5
 800959a:	f000 fba0 	bl	8009cde <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 800959e:	2301      	movs	r3, #1

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
 80095a0:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
 80095a4:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
  pdev->ep0_data_len = pdev->request.wLength;
 80095a8:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0
 80095ac:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
  switch (pdev->request.bmRequest & 0x1FU)
 80095b0:	f001 031f 	and.w	r3, r1, #31
 80095b4:	2b01      	cmp	r3, #1
 80095b6:	d008      	beq.n	80095ca <USBD_LL_SetupStage+0x3a>
 80095b8:	2b02      	cmp	r3, #2
 80095ba:	d00c      	beq.n	80095d6 <USBD_LL_SetupStage+0x46>
 80095bc:	b98b      	cbnz	r3, 80095e2 <USBD_LL_SetupStage+0x52>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 80095be:	4629      	mov	r1, r5
 80095c0:	4620      	mov	r0, r4
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
      break;
  }

  return ret;
}
 80095c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
 80095c6:	f000 b953 	b.w	8009870 <USBD_StdDevReq>
      ret = USBD_StdItfReq(pdev, &pdev->request);
 80095ca:	4629      	mov	r1, r5
 80095cc:	4620      	mov	r0, r4
}
 80095ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 80095d2:	f000 bab1 	b.w	8009b38 <USBD_StdItfReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 80095d6:	4629      	mov	r1, r5
 80095d8:	4620      	mov	r0, r4
}
 80095da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
 80095de:	f000 bada 	b.w	8009b96 <USBD_StdEPReq>
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 80095e2:	4620      	mov	r0, r4
 80095e4:	f001 0180 	and.w	r1, r1, #128	@ 0x80
}
 80095e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 80095ec:	f7f8 b9ff 	b.w	80019ee <USBD_LL_StallEP>

080095f0 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 80095f0:	b570      	push	{r4, r5, r6, lr}
 80095f2:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  UNUSED(pdata);

  if (epnum == 0U)
 80095f4:	bb39      	cbnz	r1, 8009646 <USBD_LL_DataOutStage+0x56>
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 80095f6:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 80095fa:	2b03      	cmp	r3, #3
 80095fc:	d112      	bne.n	8009624 <USBD_LL_DataOutStage+0x34>
    {
      if (pep->rem_length > pep->maxpacket)
 80095fe:	f8d0 3158 	ldr.w	r3, [r0, #344]	@ 0x158
 8009602:	f8b0 2160 	ldrh.w	r2, [r0, #352]	@ 0x160
 8009606:	4293      	cmp	r3, r2
 8009608:	d90e      	bls.n	8009628 <USBD_LL_DataOutStage+0x38>
      {
        pep->rem_length -= pep->maxpacket;
        pep->pbuffer += pep->maxpacket;
 800960a:	f8d0 1164 	ldr.w	r1, [r0, #356]	@ 0x164
        pep->rem_length -= pep->maxpacket;
 800960e:	1a9b      	subs	r3, r3, r2
        pep->pbuffer += pep->maxpacket;
 8009610:	4411      	add	r1, r2

        (void)USBD_CtlContinueRx(pdev, pep->pbuffer, MAX(pep->rem_length, pep->maxpacket));
 8009612:	429a      	cmp	r2, r3
        pep->rem_length -= pep->maxpacket;
 8009614:	f8c0 3158 	str.w	r3, [r0, #344]	@ 0x158
        pep->pbuffer += pep->maxpacket;
 8009618:	f8c0 1164 	str.w	r1, [r0, #356]	@ 0x164
        (void)USBD_CtlContinueRx(pdev, pep->pbuffer, MAX(pep->rem_length, pep->maxpacket));
 800961c:	bf38      	it	cc
 800961e:	461a      	movcc	r2, r3
 8009620:	f000 fca7 	bl	8009f72 <USBD_CtlContinueRx>
      }
    }
  }

  return USBD_OK;
}
 8009624:	2000      	movs	r0, #0
 8009626:	bd70      	pop	{r4, r5, r6, pc}
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009628:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800962c:	2b03      	cmp	r3, #3
 800962e:	d106      	bne.n	800963e <USBD_LL_DataOutStage+0x4e>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 8009630:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009634:	691b      	ldr	r3, [r3, #16]
 8009636:	b113      	cbz	r3, 800963e <USBD_LL_DataOutStage+0x4e>
              pdev->classId = idx;
 8009638:	f8c0 12d4 	str.w	r1, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 800963c:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 800963e:	4620      	mov	r0, r4
 8009640:	f000 fc9f 	bl	8009f82 <USBD_CtlSendStatus>
 8009644:	e7ee      	b.n	8009624 <USBD_LL_DataOutStage+0x34>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009646:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800964a:	2b03      	cmp	r3, #3
 800964c:	d1ea      	bne.n	8009624 <USBD_LL_DataOutStage+0x34>
        if (pdev->pClass[idx]->DataOut != NULL)
 800964e:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009652:	699b      	ldr	r3, [r3, #24]
 8009654:	2b00      	cmp	r3, #0
 8009656:	d0e5      	beq.n	8009624 <USBD_LL_DataOutStage+0x34>
          pdev->classId = idx;
 8009658:	2200      	movs	r2, #0
}
 800965a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800965e:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 8009662:	4718      	bx	r3

08009664 <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 8009664:	b570      	push	{r4, r5, r6, lr}
 8009666:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;
  uint8_t idx;

  UNUSED(pdata);

  if (epnum == 0U)
 8009668:	460d      	mov	r5, r1
 800966a:	2900      	cmp	r1, #0
 800966c:	d13f      	bne.n	80096ee <USBD_LL_DataInStage+0x8a>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800966e:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 8009672:	2b02      	cmp	r3, #2
 8009674:	d110      	bne.n	8009698 <USBD_LL_DataInStage+0x34>
    {
      if (pep->rem_length > pep->maxpacket)
 8009676:	6982      	ldr	r2, [r0, #24]
 8009678:	8c03      	ldrh	r3, [r0, #32]
 800967a:	429a      	cmp	r2, r3
 800967c:	d914      	bls.n	80096a8 <USBD_LL_DataInStage+0x44>
      {
        pep->rem_length -= pep->maxpacket;
        pep->pbuffer += pep->maxpacket;
 800967e:	6a41      	ldr	r1, [r0, #36]	@ 0x24
        pep->rem_length -= pep->maxpacket;
 8009680:	1ad2      	subs	r2, r2, r3
        pep->pbuffer += pep->maxpacket;
 8009682:	4419      	add	r1, r3
        pep->rem_length -= pep->maxpacket;
 8009684:	6182      	str	r2, [r0, #24]
        pep->pbuffer += pep->maxpacket;
 8009686:	6241      	str	r1, [r0, #36]	@ 0x24

        (void)USBD_CtlContinueSendData(pdev, pep->pbuffer, pep->rem_length);
 8009688:	f000 fc6b 	bl	8009f62 <USBD_CtlContinueSendData>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
          pdev->ep0_data_len = 0U;

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800968c:	462b      	mov	r3, r5
 800968e:	462a      	mov	r2, r5
 8009690:	4629      	mov	r1, r5
 8009692:	4620      	mov	r0, r4
 8009694:	f7f8 f9cf 	bl	8001a36 <USBD_LL_PrepareReceive>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
 8009698:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800969c:	b113      	cbz	r3, 80096a4 <USBD_LL_DataInStage+0x40>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
 800969e:	2300      	movs	r3, #0
 80096a0:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
 80096a4:	2000      	movs	r0, #0
 80096a6:	bd70      	pop	{r4, r5, r6, pc}
        if ((pep->maxpacket == pep->rem_length) &&
 80096a8:	d10c      	bne.n	80096c4 <USBD_LL_DataInStage+0x60>
            (pep->total_length >= pep->maxpacket) &&
 80096aa:	6943      	ldr	r3, [r0, #20]
        if ((pep->maxpacket == pep->rem_length) &&
 80096ac:	429a      	cmp	r2, r3
 80096ae:	d809      	bhi.n	80096c4 <USBD_LL_DataInStage+0x60>
            (pep->total_length >= pep->maxpacket) &&
 80096b0:	f8d0 2298 	ldr.w	r2, [r0, #664]	@ 0x298
 80096b4:	4293      	cmp	r3, r2
 80096b6:	d205      	bcs.n	80096c4 <USBD_LL_DataInStage+0x60>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 80096b8:	460a      	mov	r2, r1
 80096ba:	f000 fc52 	bl	8009f62 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 80096be:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 80096c2:	e7e3      	b.n	800968c <USBD_LL_DataInStage+0x28>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80096c4:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 80096c8:	2b03      	cmp	r3, #3
 80096ca:	d108      	bne.n	80096de <USBD_LL_DataInStage+0x7a>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 80096cc:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 80096d0:	68db      	ldr	r3, [r3, #12]
 80096d2:	b123      	cbz	r3, 80096de <USBD_LL_DataInStage+0x7a>
              pdev->classId = 0U;
 80096d4:	2200      	movs	r2, #0
 80096d6:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 80096da:	4620      	mov	r0, r4
 80096dc:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 80096de:	2180      	movs	r1, #128	@ 0x80
 80096e0:	4620      	mov	r0, r4
 80096e2:	f7f8 f984 	bl	80019ee <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 80096e6:	4620      	mov	r0, r4
 80096e8:	f000 fc56 	bl	8009f98 <USBD_CtlReceiveStatus>
 80096ec:	e7d4      	b.n	8009698 <USBD_LL_DataInStage+0x34>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80096ee:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80096f2:	2b03      	cmp	r3, #3
 80096f4:	d1d6      	bne.n	80096a4 <USBD_LL_DataInStage+0x40>
        if (pdev->pClass[idx]->DataIn != NULL)
 80096f6:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80096fa:	695b      	ldr	r3, [r3, #20]
 80096fc:	2b00      	cmp	r3, #0
 80096fe:	d0d1      	beq.n	80096a4 <USBD_LL_DataInStage+0x40>
          pdev->classId = idx;
 8009700:	2200      	movs	r2, #0
}
 8009702:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 8009706:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 800970a:	4718      	bx	r3

0800970c <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800970c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800970e:	2301      	movs	r3, #1
 8009710:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 8009714:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
 8009718:	2100      	movs	r1, #0
{
 800971a:	4604      	mov	r4, r0
  pdev->ep0_state = USBD_EP0_IDLE;
 800971c:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_config = 0U;
 8009720:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 8009722:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
 8009726:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
 800972a:	b9bb      	cbnz	r3, 800975c <USBD_LL_Reset+0x50>
  USBD_StatusTypeDef ret = USBD_OK;
 800972c:	2600      	movs	r6, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800972e:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 8009730:	2540      	movs	r5, #64	@ 0x40
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8009732:	4611      	mov	r1, r2
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 8009734:	2701      	movs	r7, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8009736:	2340      	movs	r3, #64	@ 0x40
 8009738:	4620      	mov	r0, r4
 800973a:	f7f8 f943 	bl	80019c4 <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800973e:	f884 7163 	strb.w	r7, [r4, #355]	@ 0x163
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 8009742:	f8a4 5160 	strh.w	r5, [r4, #352]	@ 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8009746:	462b      	mov	r3, r5
 8009748:	2200      	movs	r2, #0
 800974a:	2180      	movs	r1, #128	@ 0x80
 800974c:	4620      	mov	r0, r4
 800974e:	f7f8 f939 	bl	80019c4 <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 8009752:	f884 7023 	strb.w	r7, [r4, #35]	@ 0x23

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 8009756:	8425      	strh	r5, [r4, #32]

  return ret;
}
 8009758:	4630      	mov	r0, r6
 800975a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pdev->pClass[0]->DeInit != NULL)
 800975c:	685b      	ldr	r3, [r3, #4]
 800975e:	2b00      	cmp	r3, #0
 8009760:	d0e4      	beq.n	800972c <USBD_LL_Reset+0x20>
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 8009762:	4798      	blx	r3
 8009764:	2800      	cmp	r0, #0
 8009766:	d0e1      	beq.n	800972c <USBD_LL_Reset+0x20>
        ret = USBD_FAIL;
 8009768:	2603      	movs	r6, #3
 800976a:	e7e0      	b.n	800972e <USBD_LL_Reset+0x22>

0800976c <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 800976c:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 800976e:	2000      	movs	r0, #0
 8009770:	4770      	bx	lr

08009772 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
 8009772:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009776:	2b04      	cmp	r3, #4
  {
    pdev->dev_old_state = pdev->dev_state;
 8009778:	bf1e      	ittt	ne
 800977a:	f890 329c 	ldrbne.w	r3, [r0, #668]	@ 0x29c
 800977e:	b2db      	uxtbne	r3, r3
 8009780:	f880 329d 	strbne.w	r3, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
 8009784:	2304      	movs	r3, #4
 8009786:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  return USBD_OK;
}
 800978a:	2000      	movs	r0, #0
 800978c:	4770      	bx	lr

0800978e <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800978e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009792:	2b04      	cmp	r3, #4
  {
    pdev->dev_state = pdev->dev_old_state;
 8009794:	bf02      	ittt	eq
 8009796:	f890 329d 	ldrbeq.w	r3, [r0, #669]	@ 0x29d
 800979a:	b2db      	uxtbeq	r3, r3
 800979c:	f880 329c 	strbeq.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
 80097a0:	2000      	movs	r0, #0
 80097a2:	4770      	bx	lr

080097a4 <USBD_LL_SOF>:
  *         Handle SOF event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 80097a4:	b508      	push	{r3, lr}
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80097a6:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 80097aa:	2a03      	cmp	r2, #3
 80097ac:	d105      	bne.n	80097ba <USBD_LL_SOF+0x16>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 80097ae:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80097b2:	b113      	cbz	r3, 80097ba <USBD_LL_SOF+0x16>
    {
      if (pdev->pClass[0]->SOF != NULL)
 80097b4:	69db      	ldr	r3, [r3, #28]
 80097b6:	b103      	cbz	r3, 80097ba <USBD_LL_SOF+0x16>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 80097b8:	4798      	blx	r3
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
 80097ba:	2000      	movs	r0, #0
 80097bc:	bd08      	pop	{r3, pc}

080097be <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 80097be:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 80097c2:	32ae      	adds	r2, #174	@ 0xae
{
 80097c4:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 80097c6:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80097ca:	b14a      	cbz	r2, 80097e0 <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80097cc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80097d0:	2b03      	cmp	r3, #3
 80097d2:	d101      	bne.n	80097d8 <USBD_LL_IsoINIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 80097d4:	6a13      	ldr	r3, [r2, #32]
 80097d6:	b90b      	cbnz	r3, 80097dc <USBD_LL_IsoINIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 80097d8:	2000      	movs	r0, #0
}
 80097da:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 80097dc:	4798      	blx	r3
 80097de:	e7fb      	b.n	80097d8 <USBD_LL_IsoINIncomplete+0x1a>
    return USBD_FAIL;
 80097e0:	2003      	movs	r0, #3
 80097e2:	e7fa      	b.n	80097da <USBD_LL_IsoINIncomplete+0x1c>

080097e4 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 80097e4:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 80097e8:	32ae      	adds	r2, #174	@ 0xae
{
 80097ea:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 80097ec:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80097f0:	b14a      	cbz	r2, 8009806 <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80097f2:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80097f6:	2b03      	cmp	r3, #3
 80097f8:	d101      	bne.n	80097fe <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 80097fa:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 80097fc:	b90b      	cbnz	r3, 8009802 <USBD_LL_IsoOUTIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 80097fe:	2000      	movs	r0, #0
}
 8009800:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 8009802:	4798      	blx	r3
 8009804:	e7fb      	b.n	80097fe <USBD_LL_IsoOUTIncomplete+0x1a>
    return USBD_FAIL;
 8009806:	2003      	movs	r0, #3
 8009808:	e7fa      	b.n	8009800 <USBD_LL_IsoOUTIncomplete+0x1c>

0800980a <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
 800980a:	2000      	movs	r0, #0
 800980c:	4770      	bx	lr

0800980e <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800980e:	2201      	movs	r2, #1
{
 8009810:	b508      	push	{r3, lr}
  pdev->dev_state = USBD_STATE_DEFAULT;
 8009812:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 8009816:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 800981a:	b90a      	cbnz	r2, 8009820 <USBD_LL_DevDisconnected+0x12>
  USBD_StatusTypeDef   ret = USBD_OK;
 800981c:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800981e:	bd08      	pop	{r3, pc}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 8009820:	6852      	ldr	r2, [r2, #4]
 8009822:	7901      	ldrb	r1, [r0, #4]
 8009824:	4790      	blx	r2
 8009826:	2800      	cmp	r0, #0
 8009828:	d0f8      	beq.n	800981c <USBD_LL_DevDisconnected+0xe>
      ret = USBD_FAIL;
 800982a:	2003      	movs	r0, #3
 800982c:	e7f7      	b.n	800981e <USBD_LL_DevDisconnected+0x10>

0800982e <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
 800982e:	2000      	movs	r0, #0
 8009830:	4770      	bx	lr

08009832 <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
 8009832:	2000      	movs	r0, #0
 8009834:	4770      	bx	lr

08009836 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 8009836:	b510      	push	{r4, lr}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 8009838:	8842      	ldrh	r2, [r0, #2]
 800983a:	7803      	ldrb	r3, [r0, #0]
 800983c:	429a      	cmp	r2, r3
 800983e:	d801      	bhi.n	8009844 <USBD_GetEpDesc+0xe>
  USBD_EpDescTypeDef *pEpDesc = NULL;
 8009840:	2000      	movs	r0, #0
      }
    }
  }

  return (void *)pEpDesc;
}
 8009842:	bd10      	pop	{r4, pc}
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
 8009844:	7804      	ldrb	r4, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 8009846:	4420      	add	r0, r4
  *ptr += pnext->bLength;
 8009848:	4423      	add	r3, r4
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800984a:	7844      	ldrb	r4, [r0, #1]
 800984c:	2c05      	cmp	r4, #5
  *ptr += pnext->bLength;
 800984e:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 8009850:	d1f4      	bne.n	800983c <USBD_GetEpDesc+0x6>
        if (pEpDesc->bEndpointAddress == EpAddr)
 8009852:	7884      	ldrb	r4, [r0, #2]
 8009854:	428c      	cmp	r4, r1
 8009856:	d1f1      	bne.n	800983c <USBD_GetEpDesc+0x6>
 8009858:	e7f3      	b.n	8009842 <USBD_GetEpDesc+0xc>

0800985a <USBD_CtlError.constprop.0>:
  *         Handle USB low level Error
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800985a:	b510      	push	{r4, lr}
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800985c:	2180      	movs	r1, #128	@ 0x80
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800985e:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009860:	f7f8 f8c5 	bl	80019ee <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 8009864:	4620      	mov	r0, r4
 8009866:	2100      	movs	r1, #0
}
 8009868:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800986c:	f7f8 b8bf 	b.w	80019ee <USBD_LL_StallEP>

08009870 <USBD_StdDevReq>:
{
 8009870:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009872:	780b      	ldrb	r3, [r1, #0]
 8009874:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009878:	2b20      	cmp	r3, #32
{
 800987a:	4604      	mov	r4, r0
 800987c:	460d      	mov	r5, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800987e:	d009      	beq.n	8009894 <USBD_StdDevReq+0x24>
 8009880:	2b40      	cmp	r3, #64	@ 0x40
 8009882:	d007      	beq.n	8009894 <USBD_StdDevReq+0x24>
 8009884:	b193      	cbz	r3, 80098ac <USBD_StdDevReq+0x3c>
      USBD_CtlError(pdev, req);
 8009886:	4620      	mov	r0, r4
 8009888:	f7ff ffe7 	bl	800985a <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800988c:	2500      	movs	r5, #0
}
 800988e:	4628      	mov	r0, r5
 8009890:	b002      	add	sp, #8
 8009892:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 8009894:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 8009898:	33ae      	adds	r3, #174	@ 0xae
 800989a:	4629      	mov	r1, r5
 800989c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80098a0:	689b      	ldr	r3, [r3, #8]
 80098a2:	4620      	mov	r0, r4
}
 80098a4:	b002      	add	sp, #8
 80098a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 80098aa:	4718      	bx	r3
      switch (req->bRequest)
 80098ac:	784b      	ldrb	r3, [r1, #1]
 80098ae:	2b09      	cmp	r3, #9
 80098b0:	d8e9      	bhi.n	8009886 <USBD_StdDevReq+0x16>
 80098b2:	a201      	add	r2, pc, #4	@ (adr r2, 80098b8 <USBD_StdDevReq+0x48>)
 80098b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80098b8:	08009ad9 	.word	0x08009ad9
 80098bc:	08009b1d 	.word	0x08009b1d
 80098c0:	08009887 	.word	0x08009887
 80098c4:	08009b01 	.word	0x08009b01
 80098c8:	08009887 	.word	0x08009887
 80098cc:	080099d3 	.word	0x080099d3
 80098d0:	080098e1 	.word	0x080098e1
 80098d4:	08009887 	.word	0x08009887
 80098d8:	08009aad 	.word	0x08009aad
 80098dc:	08009a15 	.word	0x08009a15
  uint16_t len = 0U;
 80098e0:	2300      	movs	r3, #0
 80098e2:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 80098e6:	884b      	ldrh	r3, [r1, #2]
 80098e8:	0a1a      	lsrs	r2, r3, #8
 80098ea:	3a01      	subs	r2, #1
 80098ec:	2a06      	cmp	r2, #6
 80098ee:	d8ca      	bhi.n	8009886 <USBD_StdDevReq+0x16>
 80098f0:	a101      	add	r1, pc, #4	@ (adr r1, 80098f8 <USBD_StdDevReq+0x88>)
 80098f2:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80098f6:	bf00      	nop
 80098f8:	08009915 	.word	0x08009915
 80098fc:	08009947 	.word	0x08009947
 8009900:	08009961 	.word	0x08009961
 8009904:	08009887 	.word	0x08009887
 8009908:	08009887 	.word	0x08009887
 800990c:	080099a5 	.word	0x080099a5
 8009910:	080099bb 	.word	0x080099bb
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 8009914:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009918:	681b      	ldr	r3, [r3, #0]
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800991a:	7c20      	ldrb	r0, [r4, #16]
 800991c:	f10d 0106 	add.w	r1, sp, #6
 8009920:	4798      	blx	r3
  if (req->wLength != 0U)
 8009922:	88ea      	ldrh	r2, [r5, #6]
 8009924:	2a00      	cmp	r2, #0
 8009926:	f000 80a4 	beq.w	8009a72 <USBD_StdDevReq+0x202>
    if (len != 0U)
 800992a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800992e:	2b00      	cmp	r3, #0
 8009930:	d0a9      	beq.n	8009886 <USBD_StdDevReq+0x16>
      len = MIN(len, req->wLength);
 8009932:	429a      	cmp	r2, r3
 8009934:	bf28      	it	cs
 8009936:	461a      	movcs	r2, r3
 8009938:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800993c:	4601      	mov	r1, r0
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800993e:	4620      	mov	r0, r4
 8009940:	f000 fb01 	bl	8009f46 <USBD_CtlSendData>
      break;
 8009944:	e7a2      	b.n	800988c <USBD_StdDevReq+0x1c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009946:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 8009948:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800994c:	b932      	cbnz	r2, 800995c <USBD_StdDevReq+0xec>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800994e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 8009950:	f10d 0006 	add.w	r0, sp, #6
 8009954:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 8009956:	2302      	movs	r3, #2
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 8009958:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 800995a:	e7e2      	b.n	8009922 <USBD_StdDevReq+0xb2>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800995c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800995e:	e7f7      	b.n	8009950 <USBD_StdDevReq+0xe0>
      switch ((uint8_t)(req->wValue))
 8009960:	b2db      	uxtb	r3, r3
 8009962:	2b05      	cmp	r3, #5
 8009964:	d88f      	bhi.n	8009886 <USBD_StdDevReq+0x16>
 8009966:	e8df f003 	tbb	[pc, r3]
 800996a:	0903      	.short	0x0903
 800996c:	1915110d 	.word	0x1915110d
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 8009970:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009974:	685b      	ldr	r3, [r3, #4]
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 8009976:	2b00      	cmp	r3, #0
 8009978:	d1cf      	bne.n	800991a <USBD_StdDevReq+0xaa>
 800997a:	e784      	b.n	8009886 <USBD_StdDevReq+0x16>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 800997c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009980:	689b      	ldr	r3, [r3, #8]
 8009982:	e7f8      	b.n	8009976 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 8009984:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009988:	68db      	ldr	r3, [r3, #12]
 800998a:	e7f4      	b.n	8009976 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800998c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009990:	691b      	ldr	r3, [r3, #16]
 8009992:	e7f0      	b.n	8009976 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 8009994:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009998:	695b      	ldr	r3, [r3, #20]
 800999a:	e7ec      	b.n	8009976 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800999c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 80099a0:	699b      	ldr	r3, [r3, #24]
 80099a2:	e7e8      	b.n	8009976 <USBD_StdDevReq+0x106>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 80099a4:	7c03      	ldrb	r3, [r0, #16]
 80099a6:	2b00      	cmp	r3, #0
 80099a8:	f47f af6d 	bne.w	8009886 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 80099ac:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80099b0:	f10d 0006 	add.w	r0, sp, #6
 80099b4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80099b6:	4798      	blx	r3
  if (err != 0U)
 80099b8:	e7b3      	b.n	8009922 <USBD_StdDevReq+0xb2>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 80099ba:	7c03      	ldrb	r3, [r0, #16]
 80099bc:	2b00      	cmp	r3, #0
 80099be:	f47f af62 	bne.w	8009886 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 80099c2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80099c6:	f10d 0006 	add.w	r0, sp, #6
 80099ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80099cc:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 80099ce:	2307      	movs	r3, #7
 80099d0:	e7c2      	b.n	8009958 <USBD_StdDevReq+0xe8>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 80099d2:	888b      	ldrh	r3, [r1, #4]
 80099d4:	2b00      	cmp	r3, #0
 80099d6:	f47f af56 	bne.w	8009886 <USBD_StdDevReq+0x16>
 80099da:	88cb      	ldrh	r3, [r1, #6]
 80099dc:	2b00      	cmp	r3, #0
 80099de:	f47f af52 	bne.w	8009886 <USBD_StdDevReq+0x16>
 80099e2:	884d      	ldrh	r5, [r1, #2]
 80099e4:	2d7f      	cmp	r5, #127	@ 0x7f
 80099e6:	f63f af4e 	bhi.w	8009886 <USBD_StdDevReq+0x16>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80099ea:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80099ee:	2b03      	cmp	r3, #3
 80099f0:	f43f af49 	beq.w	8009886 <USBD_StdDevReq+0x16>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 80099f4:	b2ed      	uxtb	r5, r5
      pdev->dev_address = dev_addr;
 80099f6:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 80099fa:	4629      	mov	r1, r5
 80099fc:	f7f8 f809 	bl	8001a12 <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 8009a00:	4620      	mov	r0, r4
 8009a02:	f000 fabe 	bl	8009f82 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 8009a06:	b11d      	cbz	r5, 8009a10 <USBD_StdDevReq+0x1a0>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8009a08:	2302      	movs	r3, #2
          pdev->dev_state = USBD_STATE_CONFIGURED;
 8009a0a:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 8009a0e:	e73d      	b.n	800988c <USBD_StdDevReq+0x1c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 8009a10:	2301      	movs	r3, #1
 8009a12:	e7fa      	b.n	8009a0a <USBD_StdDevReq+0x19a>
  cfgidx = (uint8_t)(req->wValue);
 8009a14:	7889      	ldrb	r1, [r1, #2]
 8009a16:	4d47      	ldr	r5, [pc, #284]	@ (8009b34 <USBD_StdDevReq+0x2c4>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 8009a18:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
 8009a1a:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 8009a1c:	d903      	bls.n	8009a26 <USBD_StdDevReq+0x1b6>
    USBD_CtlError(pdev, req);
 8009a1e:	f7ff ff1c 	bl	800985a <USBD_CtlError.constprop.0>
    return USBD_FAIL;
 8009a22:	2503      	movs	r5, #3
 8009a24:	e733      	b.n	800988e <USBD_StdDevReq+0x1e>
  switch (pdev->dev_state)
 8009a26:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009a2a:	2b02      	cmp	r3, #2
 8009a2c:	b2de      	uxtb	r6, r3
 8009a2e:	d008      	beq.n	8009a42 <USBD_StdDevReq+0x1d2>
 8009a30:	2e03      	cmp	r6, #3
 8009a32:	d017      	beq.n	8009a64 <USBD_StdDevReq+0x1f4>
      USBD_CtlError(pdev, req);
 8009a34:	f7ff ff11 	bl	800985a <USBD_CtlError.constprop.0>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 8009a38:	7829      	ldrb	r1, [r5, #0]
 8009a3a:	4620      	mov	r0, r4
 8009a3c:	f7ff fd9f 	bl	800957e <USBD_ClrClassConfig>
      break;
 8009a40:	e7ef      	b.n	8009a22 <USBD_StdDevReq+0x1b2>
      if (cfgidx != 0U)
 8009a42:	b1b1      	cbz	r1, 8009a72 <USBD_StdDevReq+0x202>
        pdev->dev_config = cfgidx;
 8009a44:	2101      	movs	r1, #1
 8009a46:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 8009a48:	f7ff fd92 	bl	8009570 <USBD_SetClassConfig>
        if (ret != USBD_OK)
 8009a4c:	4605      	mov	r5, r0
          USBD_CtlError(pdev, req);
 8009a4e:	4620      	mov	r0, r4
        if (ret != USBD_OK)
 8009a50:	b125      	cbz	r5, 8009a5c <USBD_StdDevReq+0x1ec>
          USBD_CtlError(pdev, req);
 8009a52:	f7ff ff02 	bl	800985a <USBD_CtlError.constprop.0>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8009a56:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 8009a5a:	e718      	b.n	800988e <USBD_StdDevReq+0x1e>
          (void)USBD_CtlSendStatus(pdev);
 8009a5c:	f000 fa91 	bl	8009f82 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 8009a60:	2303      	movs	r3, #3
 8009a62:	e7d2      	b.n	8009a0a <USBD_StdDevReq+0x19a>
      if (cfgidx == 0U)
 8009a64:	b949      	cbnz	r1, 8009a7a <USBD_StdDevReq+0x20a>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8009a66:	2302      	movs	r3, #2
 8009a68:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        pdev->dev_config = cfgidx;
 8009a6c:	6041      	str	r1, [r0, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 8009a6e:	f7ff fd86 	bl	800957e <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 8009a72:	4620      	mov	r0, r4
 8009a74:	f000 fa85 	bl	8009f82 <USBD_CtlSendStatus>
 8009a78:	e708      	b.n	800988c <USBD_StdDevReq+0x1c>
      else if (cfgidx != pdev->dev_config)
 8009a7a:	6841      	ldr	r1, [r0, #4]
 8009a7c:	2901      	cmp	r1, #1
 8009a7e:	d0f8      	beq.n	8009a72 <USBD_StdDevReq+0x202>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8009a80:	b2c9      	uxtb	r1, r1
 8009a82:	f7ff fd7c 	bl	800957e <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 8009a86:	7829      	ldrb	r1, [r5, #0]
 8009a88:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 8009a8a:	4620      	mov	r0, r4
 8009a8c:	f7ff fd70 	bl	8009570 <USBD_SetClassConfig>
        if (ret != USBD_OK)
 8009a90:	4605      	mov	r5, r0
 8009a92:	2800      	cmp	r0, #0
 8009a94:	d0ed      	beq.n	8009a72 <USBD_StdDevReq+0x202>
          USBD_CtlError(pdev, req);
 8009a96:	4620      	mov	r0, r4
 8009a98:	f7ff fedf 	bl	800985a <USBD_CtlError.constprop.0>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8009a9c:	7921      	ldrb	r1, [r4, #4]
 8009a9e:	4620      	mov	r0, r4
 8009aa0:	f7ff fd6d 	bl	800957e <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8009aa4:	2302      	movs	r3, #2
 8009aa6:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 8009aaa:	e6f0      	b.n	800988e <USBD_StdDevReq+0x1e>
  if (req->wLength != 1U)
 8009aac:	88ca      	ldrh	r2, [r1, #6]
 8009aae:	2a01      	cmp	r2, #1
 8009ab0:	f47f aee9 	bne.w	8009886 <USBD_StdDevReq+0x16>
    switch (pdev->dev_state)
 8009ab4:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
 8009ab8:	2902      	cmp	r1, #2
 8009aba:	b2cb      	uxtb	r3, r1
 8009abc:	d807      	bhi.n	8009ace <USBD_StdDevReq+0x25e>
 8009abe:	2b00      	cmp	r3, #0
 8009ac0:	f43f aee1 	beq.w	8009886 <USBD_StdDevReq+0x16>
        pdev->dev_default_config = 0U;
 8009ac4:	4601      	mov	r1, r0
 8009ac6:	2300      	movs	r3, #0
 8009ac8:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 8009acc:	e737      	b.n	800993e <USBD_StdDevReq+0xce>
    switch (pdev->dev_state)
 8009ace:	2b03      	cmp	r3, #3
 8009ad0:	f47f aed9 	bne.w	8009886 <USBD_StdDevReq+0x16>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 8009ad4:	1d01      	adds	r1, r0, #4
 8009ad6:	e732      	b.n	800993e <USBD_StdDevReq+0xce>
  switch (pdev->dev_state)
 8009ad8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009adc:	3b01      	subs	r3, #1
 8009ade:	2b02      	cmp	r3, #2
 8009ae0:	f63f aed1 	bhi.w	8009886 <USBD_StdDevReq+0x16>
      if (req->wLength != 0x2U)
 8009ae4:	88ca      	ldrh	r2, [r1, #6]
 8009ae6:	2a02      	cmp	r2, #2
 8009ae8:	f47f aecd 	bne.w	8009886 <USBD_StdDevReq+0x16>
      if (pdev->dev_remote_wakeup != 0U)
 8009aec:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 8009af0:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 8009af2:	2b00      	cmp	r3, #0
 8009af4:	bf0c      	ite	eq
 8009af6:	2301      	moveq	r3, #1
 8009af8:	2303      	movne	r3, #3
 8009afa:	f841 3f0c 	str.w	r3, [r1, #12]!
 8009afe:	e71e      	b.n	800993e <USBD_StdDevReq+0xce>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8009b00:	884b      	ldrh	r3, [r1, #2]
 8009b02:	2b01      	cmp	r3, #1
 8009b04:	d102      	bne.n	8009b0c <USBD_StdDevReq+0x29c>
        pdev->dev_remote_wakeup = 0U;
 8009b06:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 8009b0a:	e7b2      	b.n	8009a72 <USBD_StdDevReq+0x202>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 8009b0c:	2b02      	cmp	r3, #2
 8009b0e:	f47f aeba 	bne.w	8009886 <USBD_StdDevReq+0x16>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
 8009b12:	888b      	ldrh	r3, [r1, #4]
 8009b14:	0a1b      	lsrs	r3, r3, #8
 8009b16:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 8009b1a:	e7aa      	b.n	8009a72 <USBD_StdDevReq+0x202>
  switch (pdev->dev_state)
 8009b1c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009b20:	3b01      	subs	r3, #1
 8009b22:	2b02      	cmp	r3, #2
 8009b24:	f63f aeaf 	bhi.w	8009886 <USBD_StdDevReq+0x16>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8009b28:	884b      	ldrh	r3, [r1, #2]
 8009b2a:	2b01      	cmp	r3, #1
 8009b2c:	f47f aeae 	bne.w	800988c <USBD_StdDevReq+0x1c>
        pdev->dev_remote_wakeup = 0U;
 8009b30:	2300      	movs	r3, #0
 8009b32:	e7e8      	b.n	8009b06 <USBD_StdDevReq+0x296>
 8009b34:	20013fec 	.word	0x20013fec

08009b38 <USBD_StdItfReq>:
{
 8009b38:	b570      	push	{r4, r5, r6, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009b3a:	780b      	ldrb	r3, [r1, #0]
 8009b3c:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 8009b40:	065b      	lsls	r3, r3, #25
{
 8009b42:	4604      	mov	r4, r0
 8009b44:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009b46:	d501      	bpl.n	8009b4c <USBD_StdItfReq+0x14>
 8009b48:	2a40      	cmp	r2, #64	@ 0x40
 8009b4a:	d11f      	bne.n	8009b8c <USBD_StdItfReq+0x54>
      switch (pdev->dev_state)
 8009b4c:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 8009b50:	3b01      	subs	r3, #1
 8009b52:	2b02      	cmp	r3, #2
 8009b54:	d81a      	bhi.n	8009b8c <USBD_StdItfReq+0x54>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8009b56:	7931      	ldrb	r1, [r6, #4]
 8009b58:	2901      	cmp	r1, #1
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 8009b5a:	4620      	mov	r0, r4
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8009b5c:	d817      	bhi.n	8009b8e <USBD_StdItfReq+0x56>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 8009b5e:	f7ff fe66 	bl	800982e <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 8009b62:	b988      	cbnz	r0, 8009b88 <USBD_StdItfReq+0x50>
              if (pdev->pClass[idx]->Setup != NULL)
 8009b64:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 8009b68:	689b      	ldr	r3, [r3, #8]
 8009b6a:	b16b      	cbz	r3, 8009b88 <USBD_StdItfReq+0x50>
                pdev->classId = idx;
 8009b6c:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009b70:	4631      	mov	r1, r6
 8009b72:	4620      	mov	r0, r4
 8009b74:	4798      	blx	r3
 8009b76:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
 8009b78:	88f3      	ldrh	r3, [r6, #6]
 8009b7a:	b91b      	cbnz	r3, 8009b84 <USBD_StdItfReq+0x4c>
 8009b7c:	b915      	cbnz	r5, 8009b84 <USBD_StdItfReq+0x4c>
              (void)USBD_CtlSendStatus(pdev);
 8009b7e:	4620      	mov	r0, r4
 8009b80:	f000 f9ff 	bl	8009f82 <USBD_CtlSendStatus>
}
 8009b84:	4628      	mov	r0, r5
 8009b86:	bd70      	pop	{r4, r5, r6, pc}
                ret = USBD_FAIL;
 8009b88:	2503      	movs	r5, #3
 8009b8a:	e7f5      	b.n	8009b78 <USBD_StdItfReq+0x40>
          USBD_CtlError(pdev, req);
 8009b8c:	4620      	mov	r0, r4
            USBD_CtlError(pdev, req);
 8009b8e:	f7ff fe64 	bl	800985a <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 8009b92:	2500      	movs	r5, #0
 8009b94:	e7f6      	b.n	8009b84 <USBD_StdItfReq+0x4c>

08009b96 <USBD_StdEPReq>:
{
 8009b96:	b570      	push	{r4, r5, r6, lr}
 8009b98:	780b      	ldrb	r3, [r1, #0]
  ep_addr = LOBYTE(req->wIndex);
 8009b9a:	888a      	ldrh	r2, [r1, #4]
 8009b9c:	790d      	ldrb	r5, [r1, #4]
 8009b9e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009ba2:	2b20      	cmp	r3, #32
{
 8009ba4:	4604      	mov	r4, r0
 8009ba6:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009ba8:	d059      	beq.n	8009c5e <USBD_StdEPReq+0xc8>
 8009baa:	2b40      	cmp	r3, #64	@ 0x40
 8009bac:	d057      	beq.n	8009c5e <USBD_StdEPReq+0xc8>
 8009bae:	b11b      	cbz	r3, 8009bb8 <USBD_StdEPReq+0x22>
              USBD_CtlError(pdev, req);
 8009bb0:	4620      	mov	r0, r4
 8009bb2:	f7ff fe52 	bl	800985a <USBD_CtlError.constprop.0>
              break;
 8009bb6:	e03e      	b.n	8009c36 <USBD_StdEPReq+0xa0>
      switch (req->bRequest)
 8009bb8:	784b      	ldrb	r3, [r1, #1]
 8009bba:	2b01      	cmp	r3, #1
 8009bbc:	d03d      	beq.n	8009c3a <USBD_StdEPReq+0xa4>
 8009bbe:	2b03      	cmp	r3, #3
 8009bc0:	d026      	beq.n	8009c10 <USBD_StdEPReq+0x7a>
 8009bc2:	2b00      	cmp	r3, #0
 8009bc4:	d1f4      	bne.n	8009bb0 <USBD_StdEPReq+0x1a>
          switch (pdev->dev_state)
 8009bc6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009bca:	2b02      	cmp	r3, #2
 8009bcc:	b2d9      	uxtb	r1, r3
 8009bce:	d062      	beq.n	8009c96 <USBD_StdEPReq+0x100>
 8009bd0:	2903      	cmp	r1, #3
 8009bd2:	d1ed      	bne.n	8009bb0 <USBD_StdEPReq+0x1a>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009bd4:	f005 030f 	and.w	r3, r5, #15
              if ((ep_addr & 0x80U) == 0x80U)
 8009bd8:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8009bdc:	f04f 0214 	mov.w	r2, #20
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009be0:	fb02 0303 	mla	r3, r2, r3, r0
              if ((ep_addr & 0x80U) == 0x80U)
 8009be4:	d067      	beq.n	8009cb6 <USBD_StdEPReq+0x120>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009be6:	f893 3023 	ldrb.w	r3, [r3, #35]	@ 0x23
 8009bea:	2b00      	cmp	r3, #0
 8009bec:	d0e0      	beq.n	8009bb0 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009bee:	f005 067f 	and.w	r6, r5, #127	@ 0x7f
 8009bf2:	3601      	adds	r6, #1
 8009bf4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009bf8:	2d80      	cmp	r5, #128	@ 0x80
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009bfa:	eb00 0686 	add.w	r6, r0, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009bfe:	d066      	beq.n	8009cce <USBD_StdEPReq+0x138>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 8009c00:	4629      	mov	r1, r5
 8009c02:	4620      	mov	r0, r4
 8009c04:	f7f7 feb8 	bl	8001978 <USBD_LL_IsStallEP>
 8009c08:	2800      	cmp	r0, #0
 8009c0a:	d066      	beq.n	8009cda <USBD_StdEPReq+0x144>
                pep->status = 0x0001U;
 8009c0c:	2301      	movs	r3, #1
 8009c0e:	e05f      	b.n	8009cd0 <USBD_StdEPReq+0x13a>
          switch (pdev->dev_state)
 8009c10:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009c14:	2b02      	cmp	r3, #2
 8009c16:	b2da      	uxtb	r2, r3
 8009c18:	d033      	beq.n	8009c82 <USBD_StdEPReq+0xec>
 8009c1a:	2a03      	cmp	r2, #3
 8009c1c:	d1c8      	bne.n	8009bb0 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 8009c1e:	884b      	ldrh	r3, [r1, #2]
 8009c20:	b933      	cbnz	r3, 8009c30 <USBD_StdEPReq+0x9a>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 8009c22:	0669      	lsls	r1, r5, #25
 8009c24:	d004      	beq.n	8009c30 <USBD_StdEPReq+0x9a>
 8009c26:	88f3      	ldrh	r3, [r6, #6]
 8009c28:	b913      	cbnz	r3, 8009c30 <USBD_StdEPReq+0x9a>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 8009c2a:	4629      	mov	r1, r5
 8009c2c:	f7f7 fedf 	bl	80019ee <USBD_LL_StallEP>
              (void)USBD_CtlSendStatus(pdev);
 8009c30:	4620      	mov	r0, r4
 8009c32:	f000 f9a6 	bl	8009f82 <USBD_CtlSendStatus>
}
 8009c36:	2000      	movs	r0, #0
 8009c38:	bd70      	pop	{r4, r5, r6, pc}
          switch (pdev->dev_state)
 8009c3a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009c3e:	2b02      	cmp	r3, #2
 8009c40:	b2da      	uxtb	r2, r3
 8009c42:	d01e      	beq.n	8009c82 <USBD_StdEPReq+0xec>
 8009c44:	2a03      	cmp	r2, #3
 8009c46:	d1b3      	bne.n	8009bb0 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 8009c48:	884b      	ldrh	r3, [r1, #2]
 8009c4a:	2b00      	cmp	r3, #0
 8009c4c:	d1f3      	bne.n	8009c36 <USBD_StdEPReq+0xa0>
                if ((ep_addr & 0x7FU) != 0x00U)
 8009c4e:	066b      	lsls	r3, r5, #25
 8009c50:	d002      	beq.n	8009c58 <USBD_StdEPReq+0xc2>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 8009c52:	4629      	mov	r1, r5
 8009c54:	f7f7 fed4 	bl	8001a00 <USBD_LL_ClearStallEP>
                (void)USBD_CtlSendStatus(pdev);
 8009c58:	4620      	mov	r0, r4
 8009c5a:	f000 f992 	bl	8009f82 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
 8009c5e:	4629      	mov	r1, r5
 8009c60:	4620      	mov	r0, r4
 8009c62:	f7ff fde6 	bl	8009832 <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 8009c66:	2800      	cmp	r0, #0
 8009c68:	d1e5      	bne.n	8009c36 <USBD_StdEPReq+0xa0>
                  if (pdev->pClass[idx]->Setup != NULL)
 8009c6a:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
                  pdev->classId = idx;
 8009c6e:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
 8009c72:	689b      	ldr	r3, [r3, #8]
 8009c74:	2b00      	cmp	r3, #0
 8009c76:	d0de      	beq.n	8009c36 <USBD_StdEPReq+0xa0>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009c78:	4631      	mov	r1, r6
 8009c7a:	4620      	mov	r0, r4
}
 8009c7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009c80:	4718      	bx	r3
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009c82:	066a      	lsls	r2, r5, #25
 8009c84:	d094      	beq.n	8009bb0 <USBD_StdEPReq+0x1a>
                (void)USBD_LL_StallEP(pdev, ep_addr);
 8009c86:	4629      	mov	r1, r5
 8009c88:	f7f7 feb1 	bl	80019ee <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 8009c8c:	2180      	movs	r1, #128	@ 0x80
 8009c8e:	4620      	mov	r0, r4
 8009c90:	f7f7 fead 	bl	80019ee <USBD_LL_StallEP>
 8009c94:	e7cf      	b.n	8009c36 <USBD_StdEPReq+0xa0>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009c96:	0669      	lsls	r1, r5, #25
 8009c98:	d18a      	bne.n	8009bb0 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009c9a:	0613      	lsls	r3, r2, #24
 8009c9c:	bf4c      	ite	mi
 8009c9e:	f100 0114 	addmi.w	r1, r0, #20
 8009ca2:	f500 71aa 	addpl.w	r1, r0, #340	@ 0x154
              pep->status = 0x0000U;
 8009ca6:	2300      	movs	r3, #0
 8009ca8:	f801 3f0e 	strb.w	r3, [r1, #14]!
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009cac:	2202      	movs	r2, #2
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009cae:	4620      	mov	r0, r4
 8009cb0:	f000 f949 	bl	8009f46 <USBD_CtlSendData>
              break;
 8009cb4:	e7bf      	b.n	8009c36 <USBD_StdEPReq+0xa0>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 8009cb6:	f893 3163 	ldrb.w	r3, [r3, #355]	@ 0x163
 8009cba:	2b00      	cmp	r3, #0
 8009cbc:	f43f af78 	beq.w	8009bb0 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009cc0:	2614      	movs	r6, #20
 8009cc2:	fb06 0605 	mla	r6, r6, r5, r0
 8009cc6:	f506 76aa 	add.w	r6, r6, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009cca:	2d00      	cmp	r5, #0
 8009ccc:	d198      	bne.n	8009c00 <USBD_StdEPReq+0x6a>
                pep->status = 0x0000U;
 8009cce:	2300      	movs	r3, #0
                pep->status = 0x0001U;
 8009cd0:	73b3      	strb	r3, [r6, #14]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009cd2:	2202      	movs	r2, #2
 8009cd4:	f106 010e 	add.w	r1, r6, #14
 8009cd8:	e7e9      	b.n	8009cae <USBD_StdEPReq+0x118>
                pep->status = 0x0000U;
 8009cda:	73b0      	strb	r0, [r6, #14]
 8009cdc:	e7f9      	b.n	8009cd2 <USBD_StdEPReq+0x13c>

08009cde <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 8009cde:	780b      	ldrb	r3, [r1, #0]
 8009ce0:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 8009ce2:	784b      	ldrb	r3, [r1, #1]
 8009ce4:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
 8009ce6:	884b      	ldrh	r3, [r1, #2]
 8009ce8:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
 8009cea:	888b      	ldrh	r3, [r1, #4]
 8009cec:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
 8009cee:	88cb      	ldrh	r3, [r1, #6]
 8009cf0:	80c3      	strh	r3, [r0, #6]
}
 8009cf2:	4770      	bx	lr

08009cf4 <USBD_CtlError>:
{
 8009cf4:	b510      	push	{r4, lr}
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009cf6:	2180      	movs	r1, #128	@ 0x80
{
 8009cf8:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009cfa:	f7f7 fe78 	bl	80019ee <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 8009cfe:	4620      	mov	r0, r4
 8009d00:	2100      	movs	r1, #0
}
 8009d02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 8009d06:	f7f7 be72 	b.w	80019ee <USBD_LL_StallEP>

08009d0a <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 8009d0a:	b570      	push	{r4, r5, r6, lr}
 8009d0c:	460d      	mov	r5, r1
 8009d0e:	4616      	mov	r6, r2
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
 8009d10:	4604      	mov	r4, r0
 8009d12:	b170      	cbz	r0, 8009d32 <USBD_GetString+0x28>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 8009d14:	f7f6 fa6c 	bl	80001f0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
 8009d18:	b2c3      	uxtb	r3, r0
 8009d1a:	3301      	adds	r3, #1
 8009d1c:	005b      	lsls	r3, r3, #1
 8009d1e:	8033      	strh	r3, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 8009d20:	702b      	strb	r3, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 8009d22:	2303      	movs	r3, #3
 8009d24:	706b      	strb	r3, [r5, #1]
  while (*pdesc != (uint8_t)'\0')
 8009d26:	3c01      	subs	r4, #1
  idx++;
 8009d28:	2302      	movs	r3, #2
    unicode[idx] = 0U;
 8009d2a:	2100      	movs	r1, #0
  while (*pdesc != (uint8_t)'\0')
 8009d2c:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8009d30:	b902      	cbnz	r2, 8009d34 <USBD_GetString+0x2a>
}
 8009d32:	bd70      	pop	{r4, r5, r6, pc}
    unicode[idx] = *pdesc;
 8009d34:	54ea      	strb	r2, [r5, r3]
    idx++;
 8009d36:	1c5a      	adds	r2, r3, #1
    unicode[idx] = 0U;
 8009d38:	b2d2      	uxtb	r2, r2
    idx++;
 8009d3a:	3302      	adds	r3, #2
    unicode[idx] = 0U;
 8009d3c:	54a9      	strb	r1, [r5, r2]
    idx++;
 8009d3e:	b2db      	uxtb	r3, r3
 8009d40:	e7f4      	b.n	8009d2c <USBD_GetString+0x22>

08009d42 <USBD_HID_DataIn>:
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
 8009d42:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 8009d46:	33b0      	adds	r3, #176	@ 0xb0
 8009d48:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8009d4c:	2000      	movs	r0, #0
 8009d4e:	7318      	strb	r0, [r3, #12]

  return (uint8_t)USBD_OK;
}
 8009d50:	4770      	bx	lr
	...

08009d54 <USBD_HID_GetDeviceQualifierDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
 8009d54:	230a      	movs	r3, #10
 8009d56:	8003      	strh	r3, [r0, #0]

  return USBD_HID_DeviceQualifierDesc;
}
 8009d58:	4800      	ldr	r0, [pc, #0]	@ (8009d5c <USBD_HID_GetDeviceQualifierDesc+0x8>)
 8009d5a:	4770      	bx	lr
 8009d5c:	20000128 	.word	0x20000128

08009d60 <USBD_HID_GetFSCfgDesc>:
{
 8009d60:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009d62:	2181      	movs	r1, #129	@ 0x81
{
 8009d64:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009d66:	4805      	ldr	r0, [pc, #20]	@ (8009d7c <USBD_HID_GetFSCfgDesc+0x1c>)
 8009d68:	f7ff fd65 	bl	8009836 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 8009d6c:	b108      	cbz	r0, 8009d72 <USBD_HID_GetFSCfgDesc+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
 8009d6e:	230a      	movs	r3, #10
 8009d70:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009d72:	2322      	movs	r3, #34	@ 0x22
}
 8009d74:	4801      	ldr	r0, [pc, #4]	@ (8009d7c <USBD_HID_GetFSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009d76:	8023      	strh	r3, [r4, #0]
}
 8009d78:	bd10      	pop	{r4, pc}
 8009d7a:	bf00      	nop
 8009d7c:	20000140 	.word	0x20000140

08009d80 <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
 8009d80:	f7ff bfee 	b.w	8009d60 <USBD_HID_GetFSCfgDesc>

08009d84 <USBD_HID_GetHSCfgDesc>:
{
 8009d84:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009d86:	2181      	movs	r1, #129	@ 0x81
{
 8009d88:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009d8a:	4805      	ldr	r0, [pc, #20]	@ (8009da0 <USBD_HID_GetHSCfgDesc+0x1c>)
 8009d8c:	f7ff fd53 	bl	8009836 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 8009d90:	b108      	cbz	r0, 8009d96 <USBD_HID_GetHSCfgDesc+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
 8009d92:	2307      	movs	r3, #7
 8009d94:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009d96:	2322      	movs	r3, #34	@ 0x22
}
 8009d98:	4801      	ldr	r0, [pc, #4]	@ (8009da0 <USBD_HID_GetHSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009d9a:	8023      	strh	r3, [r4, #0]
}
 8009d9c:	bd10      	pop	{r4, pc}
 8009d9e:	bf00      	nop
 8009da0:	20000140 	.word	0x20000140

08009da4 <USBD_HID_Setup>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009da4:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
 8009da8:	b513      	push	{r0, r1, r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009daa:	33b0      	adds	r3, #176	@ 0xb0
  uint16_t status_info = 0U;
 8009dac:	2200      	movs	r2, #0
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009dae:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  uint16_t status_info = 0U;
 8009db2:	f8ad 2006 	strh.w	r2, [sp, #6]
  if (hhid == NULL)
 8009db6:	2b00      	cmp	r3, #0
 8009db8:	d04a      	beq.n	8009e50 <USBD_HID_Setup+0xac>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009dba:	780a      	ldrb	r2, [r1, #0]
 8009dbc:	f012 0260 	ands.w	r2, r2, #96	@ 0x60
 8009dc0:	d01d      	beq.n	8009dfe <USBD_HID_Setup+0x5a>
 8009dc2:	2a20      	cmp	r2, #32
 8009dc4:	d142      	bne.n	8009e4c <USBD_HID_Setup+0xa8>
      switch (req->bRequest)
 8009dc6:	784a      	ldrb	r2, [r1, #1]
 8009dc8:	3a02      	subs	r2, #2
 8009dca:	2a09      	cmp	r2, #9
 8009dcc:	d83e      	bhi.n	8009e4c <USBD_HID_Setup+0xa8>
 8009dce:	e8df f002 	tbb	[pc, r2]
 8009dd2:	0a13      	.short	0x0a13
 8009dd4:	3d3d3d3d 	.word	0x3d3d3d3d
 8009dd8:	050f3d3d 	.word	0x050f3d3d
          hhid->Protocol = (uint8_t)(req->wValue);
 8009ddc:	788a      	ldrb	r2, [r1, #2]
 8009dde:	601a      	str	r2, [r3, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 8009de0:	2000      	movs	r0, #0
}
 8009de2:	b002      	add	sp, #8
 8009de4:	bd10      	pop	{r4, pc}
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
 8009de6:	2201      	movs	r2, #1
 8009de8:	4619      	mov	r1, r3
          (void)USBD_CtlSendData(pdev, pbuf, len);
 8009dea:	f000 f8ac 	bl	8009f46 <USBD_CtlSendData>
          break;
 8009dee:	e7f7      	b.n	8009de0 <USBD_HID_Setup+0x3c>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 8009df0:	884a      	ldrh	r2, [r1, #2]
 8009df2:	0a12      	lsrs	r2, r2, #8
 8009df4:	605a      	str	r2, [r3, #4]
          break;
 8009df6:	e7f3      	b.n	8009de0 <USBD_HID_Setup+0x3c>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
 8009df8:	2201      	movs	r2, #1
 8009dfa:	1d19      	adds	r1, r3, #4
 8009dfc:	e7f5      	b.n	8009dea <USBD_HID_Setup+0x46>
      switch (req->bRequest)
 8009dfe:	784a      	ldrb	r2, [r1, #1]
 8009e00:	2a0b      	cmp	r2, #11
 8009e02:	d823      	bhi.n	8009e4c <USBD_HID_Setup+0xa8>
 8009e04:	a401      	add	r4, pc, #4	@ (adr r4, 8009e0c <USBD_HID_Setup+0x68>)
 8009e06:	f854 f022 	ldr.w	pc, [r4, r2, lsl #2]
 8009e0a:	bf00      	nop
 8009e0c:	08009e3d 	.word	0x08009e3d
 8009e10:	08009de1 	.word	0x08009de1
 8009e14:	08009e4d 	.word	0x08009e4d
 8009e18:	08009e4d 	.word	0x08009e4d
 8009e1c:	08009e4d 	.word	0x08009e4d
 8009e20:	08009e4d 	.word	0x08009e4d
 8009e24:	08009e55 	.word	0x08009e55
 8009e28:	08009e4d 	.word	0x08009e4d
 8009e2c:	08009e4d 	.word	0x08009e4d
 8009e30:	08009e4d 	.word	0x08009e4d
 8009e34:	08009e79 	.word	0x08009e79
 8009e38:	08009e89 	.word	0x08009e89
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009e3c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009e40:	2b03      	cmp	r3, #3
 8009e42:	d103      	bne.n	8009e4c <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 8009e44:	2202      	movs	r2, #2
 8009e46:	f10d 0106 	add.w	r1, sp, #6
 8009e4a:	e7ce      	b.n	8009dea <USBD_HID_Setup+0x46>
            USBD_CtlError(pdev, req);
 8009e4c:	f7ff ff52 	bl	8009cf4 <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
 8009e50:	2003      	movs	r0, #3
 8009e52:	e7c6      	b.n	8009de2 <USBD_HID_Setup+0x3e>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
 8009e54:	884b      	ldrh	r3, [r1, #2]
 8009e56:	0a1b      	lsrs	r3, r3, #8
 8009e58:	2b22      	cmp	r3, #34	@ 0x22
 8009e5a:	d105      	bne.n	8009e68 <USBD_HID_Setup+0xc4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 8009e5c:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
 8009e5e:	490e      	ldr	r1, [pc, #56]	@ (8009e98 <USBD_HID_Setup+0xf4>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 8009e60:	2a4a      	cmp	r2, #74	@ 0x4a
 8009e62:	bf28      	it	cs
 8009e64:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
 8009e66:	e7c0      	b.n	8009dea <USBD_HID_Setup+0x46>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
 8009e68:	2b21      	cmp	r3, #33	@ 0x21
 8009e6a:	d1ef      	bne.n	8009e4c <USBD_HID_Setup+0xa8>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 8009e6c:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_Desc;
 8009e6e:	490b      	ldr	r1, [pc, #44]	@ (8009e9c <USBD_HID_Setup+0xf8>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 8009e70:	2a09      	cmp	r2, #9
 8009e72:	bf28      	it	cs
 8009e74:	2209      	movcs	r2, #9
 8009e76:	e7b8      	b.n	8009dea <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009e78:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 8009e7c:	2a03      	cmp	r2, #3
 8009e7e:	d1e5      	bne.n	8009e4c <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
 8009e80:	2201      	movs	r2, #1
 8009e82:	f103 0108 	add.w	r1, r3, #8
 8009e86:	e7b0      	b.n	8009dea <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009e88:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 8009e8c:	2a03      	cmp	r2, #3
 8009e8e:	d1dd      	bne.n	8009e4c <USBD_HID_Setup+0xa8>
            hhid->AltSetting = (uint8_t)(req->wValue);
 8009e90:	788a      	ldrb	r2, [r1, #2]
 8009e92:	609a      	str	r2, [r3, #8]
 8009e94:	e7a4      	b.n	8009de0 <USBD_HID_Setup+0x3c>
 8009e96:	bf00      	nop
 8009e98:	200000dc 	.word	0x200000dc
 8009e9c:	20000134 	.word	0x20000134

08009ea0 <USBD_HID_DeInit>:
{
 8009ea0:	b538      	push	{r3, r4, r5, lr}
 8009ea2:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
 8009ea4:	2181      	movs	r1, #129	@ 0x81
 8009ea6:	f7f7 fd99 	bl	80019dc <USBD_LL_CloseEP>
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009eaa:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 8009eae:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009eb0:	33b0      	adds	r3, #176	@ 0xb0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 8009eb2:	f884 5037 	strb.w	r5, [r4, #55]	@ 0x37
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009eb6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
  pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = 0U;
 8009eba:	6325      	str	r5, [r4, #48]	@ 0x30
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009ebc:	b130      	cbz	r0, 8009ecc <USBD_HID_DeInit+0x2c>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 8009ebe:	f7f7 fd71 	bl	80019a4 <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009ec2:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 8009ec6:	33b0      	adds	r3, #176	@ 0xb0
 8009ec8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
 8009ecc:	2000      	movs	r0, #0
 8009ece:	bd38      	pop	{r3, r4, r5, pc}

08009ed0 <USBD_HID_Init>:
{
 8009ed0:	b538      	push	{r3, r4, r5, lr}
 8009ed2:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
 8009ed4:	2010      	movs	r0, #16
 8009ed6:	f7f7 fd61 	bl	800199c <USBD_static_malloc>
  if (hhid == NULL)
 8009eda:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009ede:	33b0      	adds	r3, #176	@ 0xb0
  if (hhid == NULL)
 8009ee0:	4605      	mov	r5, r0
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009ee2:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
  if (hhid == NULL)
 8009ee6:	b908      	cbnz	r0, 8009eec <USBD_HID_Init+0x1c>
    return (uint8_t)USBD_EMEM;
 8009ee8:	2002      	movs	r0, #2
}
 8009eea:	bd38      	pop	{r3, r4, r5, pc}
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009eec:	7c23      	ldrb	r3, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 8009eee:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
 8009ef2:	2b00      	cmp	r3, #0
 8009ef4:	bf14      	ite	ne
 8009ef6:	230a      	movne	r3, #10
 8009ef8:	2307      	moveq	r3, #7
 8009efa:	6323      	str	r3, [r4, #48]	@ 0x30
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
 8009efc:	2203      	movs	r2, #3
 8009efe:	2304      	movs	r3, #4
 8009f00:	2181      	movs	r1, #129	@ 0x81
 8009f02:	4620      	mov	r0, r4
 8009f04:	f7f7 fd5e 	bl	80019c4 <USBD_LL_OpenEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 8009f08:	2301      	movs	r3, #1
  hhid->state = USBD_HID_IDLE;
 8009f0a:	2000      	movs	r0, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 8009f0c:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
  hhid->state = USBD_HID_IDLE;
 8009f10:	7328      	strb	r0, [r5, #12]
  return (uint8_t)USBD_OK;
 8009f12:	e7ea      	b.n	8009eea <USBD_HID_Init+0x1a>

08009f14 <USBD_HID_SendReport>:
{
 8009f14:	4613      	mov	r3, r2
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009f16:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 8009f1a:	32b0      	adds	r2, #176	@ 0xb0
{
 8009f1c:	b510      	push	{r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009f1e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  if (hhid == NULL)
 8009f22:	b172      	cbz	r2, 8009f42 <USBD_HID_SendReport+0x2e>
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009f24:	f890 429c 	ldrb.w	r4, [r0, #668]	@ 0x29c
 8009f28:	2c03      	cmp	r4, #3
 8009f2a:	d101      	bne.n	8009f30 <USBD_HID_SendReport+0x1c>
    if (hhid->state == USBD_HID_IDLE)
 8009f2c:	7b14      	ldrb	r4, [r2, #12]
 8009f2e:	b10c      	cbz	r4, 8009f34 <USBD_HID_SendReport+0x20>
  return (uint8_t)USBD_OK;
 8009f30:	2000      	movs	r0, #0
}
 8009f32:	bd10      	pop	{r4, pc}
      hhid->state = USBD_HID_BUSY;
 8009f34:	2401      	movs	r4, #1
 8009f36:	7314      	strb	r4, [r2, #12]
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
 8009f38:	460a      	mov	r2, r1
 8009f3a:	2181      	movs	r1, #129	@ 0x81
 8009f3c:	f7f7 fd72 	bl	8001a24 <USBD_LL_Transmit>
 8009f40:	e7f6      	b.n	8009f30 <USBD_HID_SendReport+0x1c>
    return (uint8_t)USBD_FAIL;
 8009f42:	2003      	movs	r0, #3
 8009f44:	e7f5      	b.n	8009f32 <USBD_HID_SendReport+0x1e>

08009f46 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 8009f46:	b510      	push	{r4, lr}
 8009f48:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 8009f4a:	2202      	movs	r2, #2
 8009f4c:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  pdev->ep_in[0].total_length = len;
 8009f50:	6143      	str	r3, [r0, #20]
#else
  pdev->ep_in[0].rem_length = len;
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8009f52:	460a      	mov	r2, r1
  pdev->ep_in[0].pbuffer = pbuf;
 8009f54:	6241      	str	r1, [r0, #36]	@ 0x24
  pdev->ep_in[0].rem_length = len;
 8009f56:	6183      	str	r3, [r0, #24]
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8009f58:	2100      	movs	r1, #0
 8009f5a:	f7f7 fd63 	bl	8001a24 <USBD_LL_Transmit>

  return USBD_OK;
}
 8009f5e:	2000      	movs	r0, #0
 8009f60:	bd10      	pop	{r4, pc}

08009f62 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 8009f62:	b508      	push	{r3, lr}
 8009f64:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8009f66:	460a      	mov	r2, r1
 8009f68:	2100      	movs	r1, #0
 8009f6a:	f7f7 fd5b 	bl	8001a24 <USBD_LL_Transmit>

  return USBD_OK;
}
 8009f6e:	2000      	movs	r0, #0
 8009f70:	bd08      	pop	{r3, pc}

08009f72 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 8009f72:	b508      	push	{r3, lr}
 8009f74:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 8009f76:	460a      	mov	r2, r1
 8009f78:	2100      	movs	r1, #0
 8009f7a:	f7f7 fd5c 	bl	8001a36 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 8009f7e:	2000      	movs	r0, #0
 8009f80:	bd08      	pop	{r3, pc}

08009f82 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 8009f82:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 8009f84:	2204      	movs	r2, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 8009f86:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 8009f88:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 8009f8c:	4619      	mov	r1, r3
 8009f8e:	461a      	mov	r2, r3
 8009f90:	f7f7 fd48 	bl	8001a24 <USBD_LL_Transmit>

  return USBD_OK;
}
 8009f94:	2000      	movs	r0, #0
 8009f96:	bd08      	pop	{r3, pc}

08009f98 <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 8009f98:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 8009f9a:	2205      	movs	r2, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8009f9c:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 8009f9e:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8009fa2:	4619      	mov	r1, r3
 8009fa4:	461a      	mov	r2, r3
 8009fa6:	f7f7 fd46 	bl	8001a36 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 8009faa:	2000      	movs	r0, #0
 8009fac:	bd08      	pop	{r3, pc}

08009fae <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009fae:	8880      	ldrh	r0, [r0, #4]
 8009fb0:	4770      	bx	lr

08009fb2 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009fb2:	b570      	push	{r4, r5, r6, lr}
 8009fb4:	6803      	ldr	r3, [r0, #0]
 8009fb6:	4605      	mov	r5, r0
 8009fb8:	460c      	mov	r4, r1
 8009fba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009fbc:	2100      	movs	r1, #0
 8009fbe:	4798      	blx	r3
 8009fc0:	682b      	ldr	r3, [r5, #0]
 8009fc2:	4606      	mov	r6, r0
 8009fc4:	6a1b      	ldr	r3, [r3, #32]
 8009fc6:	4628      	mov	r0, r5
 8009fc8:	4798      	blx	r3
 8009fca:	1ba4      	subs	r4, r4, r6
 8009fcc:	b2a4      	uxth	r4, r4
 8009fce:	fbb4 f0f0 	udiv	r0, r4, r0
 8009fd2:	bd70      	pop	{r4, r5, r6, pc}

08009fd4 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009fd4:	2300      	movs	r3, #0
 8009fd6:	8083      	strh	r3, [r0, #4]
 8009fd8:	4770      	bx	lr

08009fda <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009fda:	b510      	push	{r4, lr}
 8009fdc:	6803      	ldr	r3, [r0, #0]
 8009fde:	8881      	ldrh	r1, [r0, #4]
 8009fe0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009fe2:	4604      	mov	r4, r0
 8009fe4:	4798      	blx	r3
 8009fe6:	88a3      	ldrh	r3, [r4, #4]
 8009fe8:	3301      	adds	r3, #1
 8009fea:	80a3      	strh	r3, [r4, #4]
 8009fec:	bd10      	pop	{r4, pc}

08009fee <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009fee:	6803      	ldr	r3, [r0, #0]
 8009ff0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009ff2:	4718      	bx	r3

08009ff4 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009ff4:	4770      	bx	lr
	...

08009ff8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009ff8:	4a02      	ldr	r2, [pc, #8]	@ (800a004 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009ffa:	6002      	str	r2, [r0, #0]
 8009ffc:	2200      	movs	r2, #0
 8009ffe:	8082      	strh	r2, [r0, #4]
 800a000:	4770      	bx	lr
 800a002:	bf00      	nop
 800a004:	08024e48 	.word	0x08024e48

0800a008 <_ZN8touchgfx9Container13getFirstChildEv>:
 800a008:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800a00a:	4770      	bx	lr

0800a00c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a00c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a00e:	2000      	movs	r0, #0
 800a010:	b12b      	cbz	r3, 800a01e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a012:	b920      	cbnz	r0, 800a01e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a014:	1a5a      	subs	r2, r3, r1
 800a016:	4250      	negs	r0, r2
 800a018:	4150      	adcs	r0, r2
 800a01a:	699b      	ldr	r3, [r3, #24]
 800a01c:	e7f8      	b.n	800a010 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a01e:	4770      	bx	lr

0800a020 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a020:	2300      	movs	r3, #0
 800a022:	6148      	str	r0, [r1, #20]
 800a024:	618b      	str	r3, [r1, #24]
 800a026:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a028:	b913      	cbnz	r3, 800a030 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a02a:	6281      	str	r1, [r0, #40]	@ 0x28
 800a02c:	4770      	bx	lr
 800a02e:	4613      	mov	r3, r2
 800a030:	699a      	ldr	r2, [r3, #24]
 800a032:	2a00      	cmp	r2, #0
 800a034:	d1fb      	bne.n	800a02e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a036:	6199      	str	r1, [r3, #24]
 800a038:	4770      	bx	lr

0800a03a <_ZN8touchgfx9Container9removeAllEv>:
 800a03a:	2200      	movs	r2, #0
 800a03c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a03e:	b123      	cbz	r3, 800a04a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a040:	6999      	ldr	r1, [r3, #24]
 800a042:	6281      	str	r1, [r0, #40]	@ 0x28
 800a044:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a048:	e7f8      	b.n	800a03c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a04a:	4770      	bx	lr

0800a04c <_ZN8touchgfx9Container6unlinkEv>:
 800a04c:	2300      	movs	r3, #0
 800a04e:	6283      	str	r3, [r0, #40]	@ 0x28
 800a050:	4770      	bx	lr

0800a052 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a052:	2200      	movs	r2, #0
 800a054:	8002      	strh	r2, [r0, #0]
 800a056:	8042      	strh	r2, [r0, #2]
 800a058:	8082      	strh	r2, [r0, #4]
 800a05a:	80c2      	strh	r2, [r0, #6]
 800a05c:	4770      	bx	lr

0800a05e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a05e:	b570      	push	{r4, r5, r6, lr}
 800a060:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a062:	460d      	mov	r5, r1
 800a064:	4616      	mov	r6, r2
 800a066:	b13c      	cbz	r4, 800a078 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a068:	6823      	ldr	r3, [r4, #0]
 800a06a:	4620      	mov	r0, r4
 800a06c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a06e:	4632      	mov	r2, r6
 800a070:	4629      	mov	r1, r5
 800a072:	4798      	blx	r3
 800a074:	69a4      	ldr	r4, [r4, #24]
 800a076:	e7f6      	b.n	800a066 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a078:	bd70      	pop	{r4, r5, r6, pc}

0800a07a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a07a:	b538      	push	{r3, r4, r5, lr}
 800a07c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a07e:	460d      	mov	r5, r1
 800a080:	b134      	cbz	r4, 800a090 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a082:	682b      	ldr	r3, [r5, #0]
 800a084:	4621      	mov	r1, r4
 800a086:	689b      	ldr	r3, [r3, #8]
 800a088:	4628      	mov	r0, r5
 800a08a:	4798      	blx	r3
 800a08c:	69a4      	ldr	r4, [r4, #24]
 800a08e:	e7f7      	b.n	800a080 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a090:	bd38      	pop	{r3, r4, r5, pc}

0800a092 <_ZN8touchgfx9ContainerD1Ev>:
 800a092:	4770      	bx	lr

0800a094 <_ZN8touchgfx9ContainerD0Ev>:
 800a094:	b510      	push	{r4, lr}
 800a096:	212c      	movs	r1, #44	@ 0x2c
 800a098:	4604      	mov	r4, r0
 800a09a:	f017 fce2 	bl	8021a62 <_ZdlPvj>
 800a09e:	4620      	mov	r0, r4
 800a0a0:	bd10      	pop	{r4, pc}

0800a0a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a0a2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a0a4:	b19b      	cbz	r3, 800a0ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a0a6:	428b      	cmp	r3, r1
 800a0a8:	d109      	bne.n	800a0be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a0aa:	699a      	ldr	r2, [r3, #24]
 800a0ac:	2100      	movs	r1, #0
 800a0ae:	6159      	str	r1, [r3, #20]
 800a0b0:	6282      	str	r2, [r0, #40]	@ 0x28
 800a0b2:	b902      	cbnz	r2, 800a0b6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a0b4:	4770      	bx	lr
 800a0b6:	6199      	str	r1, [r3, #24]
 800a0b8:	4770      	bx	lr
 800a0ba:	4613      	mov	r3, r2
 800a0bc:	b13a      	cbz	r2, 800a0ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a0be:	699a      	ldr	r2, [r3, #24]
 800a0c0:	428a      	cmp	r2, r1
 800a0c2:	d1fa      	bne.n	800a0ba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a0c4:	698a      	ldr	r2, [r1, #24]
 800a0c6:	619a      	str	r2, [r3, #24]
 800a0c8:	2300      	movs	r3, #0
 800a0ca:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a0ce:	4770      	bx	lr

0800a0d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a0d0:	b410      	push	{r4}
 800a0d2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a0d4:	4604      	mov	r4, r0
 800a0d6:	b92b      	cbnz	r3, 800a0e4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a0d8:	6803      	ldr	r3, [r0, #0]
 800a0da:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a0de:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a0e0:	4611      	mov	r1, r2
 800a0e2:	4718      	bx	r3
 800a0e4:	b941      	cbnz	r1, 800a0f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a0e6:	6193      	str	r3, [r2, #24]
 800a0e8:	6282      	str	r2, [r0, #40]	@ 0x28
 800a0ea:	6154      	str	r4, [r2, #20]
 800a0ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a0f0:	4770      	bx	lr
 800a0f2:	4603      	mov	r3, r0
 800a0f4:	2800      	cmp	r0, #0
 800a0f6:	d0f9      	beq.n	800a0ec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a0f8:	4299      	cmp	r1, r3
 800a0fa:	6998      	ldr	r0, [r3, #24]
 800a0fc:	d1f9      	bne.n	800a0f2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a0fe:	6190      	str	r0, [r2, #24]
 800a100:	618a      	str	r2, [r1, #24]
 800a102:	e7f2      	b.n	800a0ea <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a104 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a108:	461f      	mov	r7, r3
 800a10a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800a10e:	460d      	mov	r5, r1
 800a110:	4616      	mov	r6, r2
 800a112:	b103      	cbz	r3, 800a116 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a114:	6038      	str	r0, [r7, #0]
 800a116:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a118:	b314      	cbz	r4, 800a160 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a11a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a11e:	b1eb      	cbz	r3, 800a15c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a120:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a124:	428d      	cmp	r5, r1
 800a126:	db19      	blt.n	800a15c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a128:	8923      	ldrh	r3, [r4, #8]
 800a12a:	b289      	uxth	r1, r1
 800a12c:	440b      	add	r3, r1
 800a12e:	b21b      	sxth	r3, r3
 800a130:	429d      	cmp	r5, r3
 800a132:	da13      	bge.n	800a15c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a134:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a138:	4296      	cmp	r6, r2
 800a13a:	db0f      	blt.n	800a15c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a13c:	8963      	ldrh	r3, [r4, #10]
 800a13e:	b292      	uxth	r2, r2
 800a140:	4413      	add	r3, r2
 800a142:	b21b      	sxth	r3, r3
 800a144:	429e      	cmp	r6, r3
 800a146:	da09      	bge.n	800a15c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a148:	6823      	ldr	r3, [r4, #0]
 800a14a:	1ab2      	subs	r2, r6, r2
 800a14c:	1a69      	subs	r1, r5, r1
 800a14e:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800a152:	b212      	sxth	r2, r2
 800a154:	463b      	mov	r3, r7
 800a156:	b209      	sxth	r1, r1
 800a158:	4620      	mov	r0, r4
 800a15a:	47c0      	blx	r8
 800a15c:	69a4      	ldr	r4, [r4, #24]
 800a15e:	e7db      	b.n	800a118 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a160:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a164 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a168:	4c6e      	ldr	r4, [pc, #440]	@ (800a324 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a16a:	b0a1      	sub	sp, #132	@ 0x84
 800a16c:	6824      	ldr	r4, [r4, #0]
 800a16e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800a170:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800a174:	9303      	str	r3, [sp, #12]
 800a176:	2400      	movs	r4, #0
 800a178:	802c      	strh	r4, [r5, #0]
 800a17a:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800a17c:	802c      	strh	r4, [r5, #0]
 800a17e:	601c      	str	r4, [r3, #0]
 800a180:	4606      	mov	r6, r0
 800a182:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a186:	f7ff ffbd 	bl	800a104 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a18a:	f1b9 0f03 	cmp.w	r9, #3
 800a18e:	f340 80c2 	ble.w	800a316 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800a192:	4631      	mov	r1, r6
 800a194:	a80c      	add	r0, sp, #48	@ 0x30
 800a196:	f006 fc1d 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a19a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800a19e:	9306      	str	r3, [sp, #24]
 800a1a0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800a1a4:	9307      	str	r3, [sp, #28]
 800a1a6:	9b03      	ldr	r3, [sp, #12]
 800a1a8:	f8d3 a000 	ldr.w	sl, [r3]
 800a1ac:	f1ba 0f00 	cmp.w	sl, #0
 800a1b0:	f000 80b4 	beq.w	800a31c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800a1b4:	4651      	mov	r1, sl
 800a1b6:	a810      	add	r0, sp, #64	@ 0x40
 800a1b8:	f006 fc0c 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a1bc:	9b01      	ldr	r3, [sp, #4]
 800a1be:	9a06      	ldr	r2, [sp, #24]
 800a1c0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800a1c4:	189d      	adds	r5, r3, r2
 800a1c6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800a1ca:	9a07      	ldr	r2, [sp, #28]
 800a1cc:	2002      	movs	r0, #2
 800a1ce:	fb91 f1f0 	sdiv	r1, r1, r0
 800a1d2:	4419      	add	r1, r3
 800a1d4:	1a6d      	subs	r5, r5, r1
 800a1d6:	9b02      	ldr	r3, [sp, #8]
 800a1d8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800a1dc:	4413      	add	r3, r2
 800a1de:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800a1e2:	fb92 f2f0 	sdiv	r2, r2, r0
 800a1e6:	440a      	add	r2, r1
 800a1e8:	1a9b      	subs	r3, r3, r2
 800a1ea:	435b      	muls	r3, r3
 800a1ec:	fb05 3505 	mla	r5, r5, r5, r3
 800a1f0:	4f4d      	ldr	r7, [pc, #308]	@ (800a328 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800a1f2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a1f4:	ac10      	add	r4, sp, #64	@ 0x40
 800a1f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a1f8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a1fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a1fc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a1fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a200:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a204:	f1b9 0f0c 	cmp.w	r9, #12
 800a208:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a20c:	f04f 0303 	mov.w	r3, #3
 800a210:	bfc8      	it	gt
 800a212:	4698      	movgt	r8, r3
 800a214:	f8cd 9000 	str.w	r9, [sp]
 800a218:	f04f 0400 	mov.w	r4, #0
 800a21c:	bfdc      	itt	le
 800a21e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a222:	fb92 f8f3 	sdivle	r8, r2, r3
 800a226:	1c63      	adds	r3, r4, #1
 800a228:	aa10      	add	r2, sp, #64	@ 0x40
 800a22a:	f004 0401 	and.w	r4, r4, #1
 800a22e:	9308      	str	r3, [sp, #32]
 800a230:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a234:	9b00      	ldr	r3, [sp, #0]
 800a236:	fb93 f3f8 	sdiv	r3, r3, r8
 800a23a:	b29b      	uxth	r3, r3
 800a23c:	3404      	adds	r4, #4
 800a23e:	f04f 0b00 	mov.w	fp, #0
 800a242:	9304      	str	r3, [sp, #16]
 800a244:	9a04      	ldr	r2, [sp, #16]
 800a246:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a24a:	fb13 f302 	smulbb	r3, r3, r2
 800a24e:	9a01      	ldr	r2, [sp, #4]
 800a250:	b29b      	uxth	r3, r3
 800a252:	1899      	adds	r1, r3, r2
 800a254:	9305      	str	r3, [sp, #20]
 800a256:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a25a:	b209      	sxth	r1, r1
 800a25c:	4299      	cmp	r1, r3
 800a25e:	db4d      	blt.n	800a2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a260:	8932      	ldrh	r2, [r6, #8]
 800a262:	4413      	add	r3, r2
 800a264:	b21b      	sxth	r3, r3
 800a266:	4299      	cmp	r1, r3
 800a268:	da48      	bge.n	800a2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a26a:	9b04      	ldr	r3, [sp, #16]
 800a26c:	6827      	ldr	r7, [r4, #0]
 800a26e:	fb17 f703 	smulbb	r7, r7, r3
 800a272:	9b02      	ldr	r3, [sp, #8]
 800a274:	b2bf      	uxth	r7, r7
 800a276:	18fa      	adds	r2, r7, r3
 800a278:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a27c:	b212      	sxth	r2, r2
 800a27e:	429a      	cmp	r2, r3
 800a280:	db3c      	blt.n	800a2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a282:	8970      	ldrh	r0, [r6, #10]
 800a284:	4403      	add	r3, r0
 800a286:	b21b      	sxth	r3, r3
 800a288:	429a      	cmp	r2, r3
 800a28a:	da37      	bge.n	800a2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a28c:	2300      	movs	r3, #0
 800a28e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a290:	4630      	mov	r0, r6
 800a292:	ab0b      	add	r3, sp, #44	@ 0x2c
 800a294:	f7ff ff36 	bl	800a104 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a298:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800a29a:	b37a      	cbz	r2, 800a2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a29c:	4552      	cmp	r2, sl
 800a29e:	d02d      	beq.n	800a2fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a2a0:	4611      	mov	r1, r2
 800a2a2:	a80e      	add	r0, sp, #56	@ 0x38
 800a2a4:	9209      	str	r2, [sp, #36]	@ 0x24
 800a2a6:	f006 fb95 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a2aa:	9a06      	ldr	r2, [sp, #24]
 800a2ac:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800a2b0:	9b01      	ldr	r3, [sp, #4]
 800a2b2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800a2b6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800a2ba:	4413      	add	r3, r2
 800a2bc:	f04f 0e02 	mov.w	lr, #2
 800a2c0:	fb91 f1fe 	sdiv	r1, r1, lr
 800a2c4:	4401      	add	r1, r0
 800a2c6:	1a58      	subs	r0, r3, r1
 800a2c8:	9a07      	ldr	r2, [sp, #28]
 800a2ca:	9b02      	ldr	r3, [sp, #8]
 800a2cc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800a2d0:	fb9c fcfe 	sdiv	ip, ip, lr
 800a2d4:	4413      	add	r3, r2
 800a2d6:	448c      	add	ip, r1
 800a2d8:	eba3 030c 	sub.w	r3, r3, ip
 800a2dc:	435b      	muls	r3, r3
 800a2de:	fb00 3300 	mla	r3, r0, r0, r3
 800a2e2:	42ab      	cmp	r3, r5
 800a2e4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a2e6:	d208      	bcs.n	800a2fa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a2e8:	9803      	ldr	r0, [sp, #12]
 800a2ea:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a2ec:	6001      	str	r1, [r0, #0]
 800a2ee:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800a2f0:	9805      	ldr	r0, [sp, #20]
 800a2f2:	8008      	strh	r0, [r1, #0]
 800a2f4:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800a2f6:	461d      	mov	r5, r3
 800a2f8:	800f      	strh	r7, [r1, #0]
 800a2fa:	4692      	mov	sl, r2
 800a2fc:	f10b 0b01 	add.w	fp, fp, #1
 800a300:	f1bb 0f04 	cmp.w	fp, #4
 800a304:	f104 0408 	add.w	r4, r4, #8
 800a308:	d19c      	bne.n	800a244 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a30a:	9b00      	ldr	r3, [sp, #0]
 800a30c:	9c08      	ldr	r4, [sp, #32]
 800a30e:	444b      	add	r3, r9
 800a310:	4544      	cmp	r4, r8
 800a312:	9300      	str	r3, [sp, #0]
 800a314:	d187      	bne.n	800a226 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a316:	b021      	add	sp, #132	@ 0x84
 800a318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a31c:	f04f 35ff 	mov.w	r5, #4294967295
 800a320:	e766      	b.n	800a1f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a322:	bf00      	nop
 800a324:	20013ffc 	.word	0x20013ffc
 800a328:	08023da8 	.word	0x08023da8

0800a32c <_ZN8touchgfx4RectaNERKS0_>:
 800a32c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a330:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a334:	888c      	ldrh	r4, [r1, #4]
 800a336:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a33a:	443c      	add	r4, r7
 800a33c:	b2a4      	uxth	r4, r4
 800a33e:	fa0f f884 	sxth.w	r8, r4
 800a342:	45c1      	cmp	r9, r8
 800a344:	da2f      	bge.n	800a3a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a346:	8882      	ldrh	r2, [r0, #4]
 800a348:	444a      	add	r2, r9
 800a34a:	b292      	uxth	r2, r2
 800a34c:	fa0f fe82 	sxth.w	lr, r2
 800a350:	4577      	cmp	r7, lr
 800a352:	da28      	bge.n	800a3a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a354:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a358:	88cb      	ldrh	r3, [r1, #6]
 800a35a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a35e:	442b      	add	r3, r5
 800a360:	b21b      	sxth	r3, r3
 800a362:	429e      	cmp	r6, r3
 800a364:	da1f      	bge.n	800a3a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a366:	88c3      	ldrh	r3, [r0, #6]
 800a368:	4433      	add	r3, r6
 800a36a:	b29b      	uxth	r3, r3
 800a36c:	fa0f fc83 	sxth.w	ip, r3
 800a370:	4565      	cmp	r5, ip
 800a372:	da18      	bge.n	800a3a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a374:	454f      	cmp	r7, r9
 800a376:	bfb8      	it	lt
 800a378:	464f      	movlt	r7, r9
 800a37a:	42b5      	cmp	r5, r6
 800a37c:	bfb8      	it	lt
 800a37e:	4635      	movlt	r5, r6
 800a380:	45f0      	cmp	r8, lr
 800a382:	bfd8      	it	le
 800a384:	4622      	movle	r2, r4
 800a386:	1bd2      	subs	r2, r2, r7
 800a388:	8082      	strh	r2, [r0, #4]
 800a38a:	884a      	ldrh	r2, [r1, #2]
 800a38c:	88c9      	ldrh	r1, [r1, #6]
 800a38e:	8007      	strh	r7, [r0, #0]
 800a390:	440a      	add	r2, r1
 800a392:	b292      	uxth	r2, r2
 800a394:	b211      	sxth	r1, r2
 800a396:	458c      	cmp	ip, r1
 800a398:	bfa8      	it	ge
 800a39a:	4613      	movge	r3, r2
 800a39c:	1b5b      	subs	r3, r3, r5
 800a39e:	80c3      	strh	r3, [r0, #6]
 800a3a0:	8045      	strh	r5, [r0, #2]
 800a3a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a3a6:	2300      	movs	r3, #0
 800a3a8:	8003      	strh	r3, [r0, #0]
 800a3aa:	8043      	strh	r3, [r0, #2]
 800a3ac:	8083      	strh	r3, [r0, #4]
 800a3ae:	80c3      	strh	r3, [r0, #6]
 800a3b0:	e7f7      	b.n	800a3a2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a3b2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a3b6:	2b00      	cmp	r3, #0
 800a3b8:	dd06      	ble.n	800a3c8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a3ba:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a3be:	2800      	cmp	r0, #0
 800a3c0:	bfcc      	ite	gt
 800a3c2:	2000      	movgt	r0, #0
 800a3c4:	2001      	movle	r0, #1
 800a3c6:	4770      	bx	lr
 800a3c8:	2001      	movs	r0, #1
 800a3ca:	4770      	bx	lr

0800a3cc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a3cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3d0:	2300      	movs	r3, #0
 800a3d2:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800a3d4:	8003      	strh	r3, [r0, #0]
 800a3d6:	4604      	mov	r4, r0
 800a3d8:	8043      	strh	r3, [r0, #2]
 800a3da:	8083      	strh	r3, [r0, #4]
 800a3dc:	80c3      	strh	r3, [r0, #6]
 800a3de:	2d00      	cmp	r5, #0
 800a3e0:	d040      	beq.n	800a464 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a3e2:	1d28      	adds	r0, r5, #4
 800a3e4:	f7ff ffe5 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a3e8:	b988      	cbnz	r0, 800a40e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a3ea:	4620      	mov	r0, r4
 800a3ec:	f7ff ffe1 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a3f0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a3f4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a3f8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a3fc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a400:	b138      	cbz	r0, 800a412 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a402:	8022      	strh	r2, [r4, #0]
 800a404:	8063      	strh	r3, [r4, #2]
 800a406:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a40a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a40e:	69ad      	ldr	r5, [r5, #24]
 800a410:	e7e5      	b.n	800a3de <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a412:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a416:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a41a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a41e:	4290      	cmp	r0, r2
 800a420:	4607      	mov	r7, r0
 800a422:	bfa8      	it	ge
 800a424:	4617      	movge	r7, r2
 800a426:	4472      	add	r2, lr
 800a428:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a42c:	8027      	strh	r7, [r4, #0]
 800a42e:	4299      	cmp	r1, r3
 800a430:	460e      	mov	r6, r1
 800a432:	4440      	add	r0, r8
 800a434:	bfa8      	it	ge
 800a436:	461e      	movge	r6, r3
 800a438:	4471      	add	r1, lr
 800a43a:	4463      	add	r3, ip
 800a43c:	b200      	sxth	r0, r0
 800a43e:	b212      	sxth	r2, r2
 800a440:	b209      	sxth	r1, r1
 800a442:	b21b      	sxth	r3, r3
 800a444:	4290      	cmp	r0, r2
 800a446:	bfac      	ite	ge
 800a448:	ebc7 0200 	rsbge	r2, r7, r0
 800a44c:	ebc7 0202 	rsblt	r2, r7, r2
 800a450:	4299      	cmp	r1, r3
 800a452:	bfac      	ite	ge
 800a454:	ebc6 0301 	rsbge	r3, r6, r1
 800a458:	ebc6 0303 	rsblt	r3, r6, r3
 800a45c:	8066      	strh	r6, [r4, #2]
 800a45e:	80a2      	strh	r2, [r4, #4]
 800a460:	80e3      	strh	r3, [r4, #6]
 800a462:	e7d4      	b.n	800a40e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a464:	4620      	mov	r0, r4
 800a466:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a46a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a46a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a46e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a472:	b383      	cbz	r3, 800a4d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a474:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a476:	b374      	cbz	r4, 800a4d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a478:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a47c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a480:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a484:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a488:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a48c:	b303      	cbz	r3, 800a4d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a48e:	4668      	mov	r0, sp
 800a490:	1d21      	adds	r1, r4, #4
 800a492:	f8ad 5000 	strh.w	r5, [sp]
 800a496:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a49a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a49e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a4a2:	f7ff ff43 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 800a4a6:	4668      	mov	r0, sp
 800a4a8:	f7ff ff83 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a4ac:	b980      	cbnz	r0, 800a4d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a4ae:	f8bd 3000 	ldrh.w	r3, [sp]
 800a4b2:	88a2      	ldrh	r2, [r4, #4]
 800a4b4:	1a9b      	subs	r3, r3, r2
 800a4b6:	f8ad 3000 	strh.w	r3, [sp]
 800a4ba:	88e2      	ldrh	r2, [r4, #6]
 800a4bc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a4c0:	1a9b      	subs	r3, r3, r2
 800a4c2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a4c6:	6823      	ldr	r3, [r4, #0]
 800a4c8:	4669      	mov	r1, sp
 800a4ca:	689b      	ldr	r3, [r3, #8]
 800a4cc:	4620      	mov	r0, r4
 800a4ce:	4798      	blx	r3
 800a4d0:	69a4      	ldr	r4, [r4, #24]
 800a4d2:	2c00      	cmp	r4, #0
 800a4d4:	d1d8      	bne.n	800a488 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a4d6:	b002      	add	sp, #8
 800a4d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a4dc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a4dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a4de:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a4e2:	460d      	mov	r5, r1
 800a4e4:	4616      	mov	r6, r2
 800a4e6:	b323      	cbz	r3, 800a532 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a4e8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a4ea:	b314      	cbz	r4, 800a532 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a4ec:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a4f0:	b1eb      	cbz	r3, 800a52e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a4f2:	6828      	ldr	r0, [r5, #0]
 800a4f4:	6869      	ldr	r1, [r5, #4]
 800a4f6:	466b      	mov	r3, sp
 800a4f8:	c303      	stmia	r3!, {r0, r1}
 800a4fa:	4668      	mov	r0, sp
 800a4fc:	1d21      	adds	r1, r4, #4
 800a4fe:	f7ff ff15 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 800a502:	4668      	mov	r0, sp
 800a504:	f7ff ff55 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a508:	b988      	cbnz	r0, 800a52e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a50a:	f8bd 3000 	ldrh.w	r3, [sp]
 800a50e:	88a2      	ldrh	r2, [r4, #4]
 800a510:	1a9b      	subs	r3, r3, r2
 800a512:	f8ad 3000 	strh.w	r3, [sp]
 800a516:	88e2      	ldrh	r2, [r4, #6]
 800a518:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a51c:	1a9b      	subs	r3, r3, r2
 800a51e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a522:	6823      	ldr	r3, [r4, #0]
 800a524:	4632      	mov	r2, r6
 800a526:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800a528:	4669      	mov	r1, sp
 800a52a:	4620      	mov	r0, r4
 800a52c:	4798      	blx	r3
 800a52e:	69a4      	ldr	r4, [r4, #24]
 800a530:	e7db      	b.n	800a4ea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a532:	b002      	add	sp, #8
 800a534:	bd70      	pop	{r4, r5, r6, pc}

0800a536 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a536:	b513      	push	{r0, r1, r4, lr}
 800a538:	6803      	ldr	r3, [r0, #0]
 800a53a:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800a53e:	2300      	movs	r3, #0
 800a540:	e9cd 3300 	strd	r3, r3, [sp]
 800a544:	466b      	mov	r3, sp
 800a546:	47a0      	blx	r4
 800a548:	b002      	add	sp, #8
 800a54a:	bd10      	pop	{r4, pc}

0800a54c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a54c:	2301      	movs	r3, #1
 800a54e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a552:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a556:	4770      	bx	lr

0800a558 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a558:	2301      	movs	r3, #1
 800a55a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a55e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a562:	4770      	bx	lr

0800a564 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a564:	6843      	ldr	r3, [r0, #4]
 800a566:	2201      	movs	r2, #1
 800a568:	725a      	strb	r2, [r3, #9]
 800a56a:	6840      	ldr	r0, [r0, #4]
 800a56c:	6803      	ldr	r3, [r0, #0]
 800a56e:	691b      	ldr	r3, [r3, #16]
 800a570:	4718      	bx	r3

0800a572 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a572:	6840      	ldr	r0, [r0, #4]
 800a574:	6803      	ldr	r3, [r0, #0]
 800a576:	689b      	ldr	r3, [r3, #8]
 800a578:	4718      	bx	r3

0800a57a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a57a:	b530      	push	{r4, r5, lr}
 800a57c:	b08b      	sub	sp, #44	@ 0x2c
 800a57e:	6804      	ldr	r4, [r0, #0]
 800a580:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800a584:	9509      	str	r5, [sp, #36]	@ 0x24
 800a586:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800a58a:	9508      	str	r5, [sp, #32]
 800a58c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800a590:	9507      	str	r5, [sp, #28]
 800a592:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800a596:	9506      	str	r5, [sp, #24]
 800a598:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800a59c:	9505      	str	r5, [sp, #20]
 800a59e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800a5a2:	9504      	str	r5, [sp, #16]
 800a5a4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800a5a8:	9503      	str	r5, [sp, #12]
 800a5aa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800a5ae:	9502      	str	r5, [sp, #8]
 800a5b0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800a5b4:	e9cd 3500 	strd	r3, r5, [sp]
 800a5b8:	4613      	mov	r3, r2
 800a5ba:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800a5bc:	2200      	movs	r2, #0
 800a5be:	47a0      	blx	r4
 800a5c0:	b00b      	add	sp, #44	@ 0x2c
 800a5c2:	bd30      	pop	{r4, r5, pc}

0800a5c4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a5c4:	4b04      	ldr	r3, [pc, #16]	@ (800a5d8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a5c6:	781b      	ldrb	r3, [r3, #0]
 800a5c8:	b123      	cbz	r3, 800a5d4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a5ca:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800a5ce:	f080 0001 	eor.w	r0, r0, #1
 800a5d2:	4770      	bx	lr
 800a5d4:	2001      	movs	r0, #1
 800a5d6:	4770      	bx	lr
 800a5d8:	20013ff8 	.word	0x20013ff8

0800a5dc <_ZN8touchgfx3HAL8endFrameEv>:
 800a5dc:	b510      	push	{r4, lr}
 800a5de:	4604      	mov	r4, r0
 800a5e0:	6840      	ldr	r0, [r0, #4]
 800a5e2:	6803      	ldr	r3, [r0, #0]
 800a5e4:	689b      	ldr	r3, [r3, #8]
 800a5e6:	4798      	blx	r3
 800a5e8:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800a5ec:	b113      	cbz	r3, 800a5f4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a5ee:	2301      	movs	r3, #1
 800a5f0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800a5f4:	bd10      	pop	{r4, pc}

0800a5f6 <_ZN8touchgfx3HAL10initializeEv>:
 800a5f6:	b510      	push	{r4, lr}
 800a5f8:	4604      	mov	r4, r0
 800a5fa:	f7f6 faa5 	bl	8000b48 <_ZN8touchgfx10OSWrappers10initializeEv>
 800a5fe:	f7f6 f9ad 	bl	800095c <_ZN8touchgfx4GPIO4initEv>
 800a602:	6860      	ldr	r0, [r4, #4]
 800a604:	6803      	ldr	r3, [r0, #0]
 800a606:	68db      	ldr	r3, [r3, #12]
 800a608:	4798      	blx	r3
 800a60a:	68e0      	ldr	r0, [r4, #12]
 800a60c:	6803      	ldr	r3, [r0, #0]
 800a60e:	689b      	ldr	r3, [r3, #8]
 800a610:	4798      	blx	r3
 800a612:	6823      	ldr	r3, [r4, #0]
 800a614:	4620      	mov	r0, r4
 800a616:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a61c:	4718      	bx	r3
	...

0800a620 <_ZN8touchgfx3HAL4tickEv>:
 800a620:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a622:	6803      	ldr	r3, [r0, #0]
 800a624:	4d62      	ldr	r5, [pc, #392]	@ (800a7b0 <_ZN8touchgfx3HAL4tickEv+0x190>)
 800a626:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800a62a:	4604      	mov	r4, r0
 800a62c:	4798      	blx	r3
 800a62e:	2800      	cmp	r0, #0
 800a630:	f000 809e 	beq.w	800a770 <_ZN8touchgfx3HAL4tickEv+0x150>
 800a634:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800a638:	2b02      	cmp	r3, #2
 800a63a:	d002      	beq.n	800a642 <_ZN8touchgfx3HAL4tickEv+0x22>
 800a63c:	2001      	movs	r0, #1
 800a63e:	f7f6 f90b 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a642:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800a646:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a64a:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800a64e:	2600      	movs	r6, #0
 800a650:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800a654:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800a658:	b133      	cbz	r3, 800a668 <_ZN8touchgfx3HAL4tickEv+0x48>
 800a65a:	6823      	ldr	r3, [r4, #0]
 800a65c:	4620      	mov	r0, r4
 800a65e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800a662:	4798      	blx	r3
 800a664:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800a668:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800a66c:	6862      	ldr	r2, [r4, #4]
 800a66e:	f083 0301 	eor.w	r3, r3, #1
 800a672:	7253      	strb	r3, [r2, #9]
 800a674:	2601      	movs	r6, #1
 800a676:	702e      	strb	r6, [r5, #0]
 800a678:	f004 ff5e 	bl	800f538 <_ZN8touchgfx11Application11getInstanceEv>
 800a67c:	6803      	ldr	r3, [r0, #0]
 800a67e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a680:	4798      	blx	r3
 800a682:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a686:	b90b      	cbnz	r3, 800a68c <_ZN8touchgfx3HAL4tickEv+0x6c>
 800a688:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800a68c:	f004 ff54 	bl	800f538 <_ZN8touchgfx11Application11getInstanceEv>
 800a690:	6803      	ldr	r3, [r0, #0]
 800a692:	695b      	ldr	r3, [r3, #20]
 800a694:	4798      	blx	r3
 800a696:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a698:	6803      	ldr	r3, [r0, #0]
 800a69a:	691b      	ldr	r3, [r3, #16]
 800a69c:	4798      	blx	r3
 800a69e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a6a2:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800a6a6:	3b01      	subs	r3, #1
 800a6a8:	b2db      	uxtb	r3, r3
 800a6aa:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a6ae:	b10a      	cbz	r2, 800a6b4 <_ZN8touchgfx3HAL4tickEv+0x94>
 800a6b0:	2b00      	cmp	r3, #0
 800a6b2:	d1eb      	bne.n	800a68c <_ZN8touchgfx3HAL4tickEv+0x6c>
 800a6b4:	4a3f      	ldr	r2, [pc, #252]	@ (800a7b4 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800a6b6:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800a6ba:	7813      	ldrb	r3, [r2, #0]
 800a6bc:	3301      	adds	r3, #1
 800a6be:	b25b      	sxtb	r3, r3
 800a6c0:	4299      	cmp	r1, r3
 800a6c2:	7013      	strb	r3, [r2, #0]
 800a6c4:	dc10      	bgt.n	800a6e8 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800a6c6:	68e0      	ldr	r0, [r4, #12]
 800a6c8:	2300      	movs	r3, #0
 800a6ca:	7013      	strb	r3, [r2, #0]
 800a6cc:	6803      	ldr	r3, [r0, #0]
 800a6ce:	aa03      	add	r2, sp, #12
 800a6d0:	68db      	ldr	r3, [r3, #12]
 800a6d2:	a902      	add	r1, sp, #8
 800a6d4:	4798      	blx	r3
 800a6d6:	6823      	ldr	r3, [r4, #0]
 800a6d8:	2800      	cmp	r0, #0
 800a6da:	d059      	beq.n	800a790 <_ZN8touchgfx3HAL4tickEv+0x170>
 800a6dc:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800a6e0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a6e4:	4620      	mov	r0, r4
 800a6e6:	4798      	blx	r3
 800a6e8:	6960      	ldr	r0, [r4, #20]
 800a6ea:	2300      	movs	r3, #0
 800a6ec:	f88d 3007 	strb.w	r3, [sp, #7]
 800a6f0:	b158      	cbz	r0, 800a70a <_ZN8touchgfx3HAL4tickEv+0xea>
 800a6f2:	6803      	ldr	r3, [r0, #0]
 800a6f4:	f10d 0107 	add.w	r1, sp, #7
 800a6f8:	68db      	ldr	r3, [r3, #12]
 800a6fa:	4798      	blx	r3
 800a6fc:	b128      	cbz	r0, 800a70a <_ZN8touchgfx3HAL4tickEv+0xea>
 800a6fe:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a700:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a704:	6803      	ldr	r3, [r0, #0]
 800a706:	68db      	ldr	r3, [r3, #12]
 800a708:	4798      	blx	r3
 800a70a:	f104 001c 	add.w	r0, r4, #28
 800a70e:	f016 fba7 	bl	8020e60 <_ZN8touchgfx8Gestures4tickEv>
 800a712:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800a716:	b30b      	cbz	r3, 800a75c <_ZN8touchgfx3HAL4tickEv+0x13c>
 800a718:	6920      	ldr	r0, [r4, #16]
 800a71a:	6803      	ldr	r3, [r0, #0]
 800a71c:	691b      	ldr	r3, [r3, #16]
 800a71e:	4798      	blx	r3
 800a720:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a722:	4606      	mov	r6, r0
 800a724:	b903      	cbnz	r3, 800a728 <_ZN8touchgfx3HAL4tickEv+0x108>
 800a726:	6760      	str	r0, [r4, #116]	@ 0x74
 800a728:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a72a:	4a23      	ldr	r2, [pc, #140]	@ (800a7b8 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800a72c:	1af3      	subs	r3, r6, r3
 800a72e:	4293      	cmp	r3, r2
 800a730:	d914      	bls.n	800a75c <_ZN8touchgfx3HAL4tickEv+0x13c>
 800a732:	6920      	ldr	r0, [r4, #16]
 800a734:	6803      	ldr	r3, [r0, #0]
 800a736:	699b      	ldr	r3, [r3, #24]
 800a738:	4798      	blx	r3
 800a73a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a73c:	2264      	movs	r2, #100	@ 0x64
 800a73e:	1af3      	subs	r3, r6, r3
 800a740:	fbb3 f3f2 	udiv	r3, r3, r2
 800a744:	fbb0 f0f3 	udiv	r0, r0, r3
 800a748:	2800      	cmp	r0, #0
 800a74a:	dc26      	bgt.n	800a79a <_ZN8touchgfx3HAL4tickEv+0x17a>
 800a74c:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800a750:	6920      	ldr	r0, [r4, #16]
 800a752:	6803      	ldr	r3, [r0, #0]
 800a754:	2100      	movs	r1, #0
 800a756:	69db      	ldr	r3, [r3, #28]
 800a758:	4798      	blx	r3
 800a75a:	6766      	str	r6, [r4, #116]	@ 0x74
 800a75c:	6823      	ldr	r3, [r4, #0]
 800a75e:	4620      	mov	r0, r4
 800a760:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800a764:	4798      	blx	r3
 800a766:	f004 fee7 	bl	800f538 <_ZN8touchgfx11Application11getInstanceEv>
 800a76a:	6803      	ldr	r3, [r0, #0]
 800a76c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a76e:	4798      	blx	r3
 800a770:	6823      	ldr	r3, [r4, #0]
 800a772:	4620      	mov	r0, r4
 800a774:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800a778:	4798      	blx	r3
 800a77a:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800a77e:	2b02      	cmp	r3, #2
 800a780:	d002      	beq.n	800a788 <_ZN8touchgfx3HAL4tickEv+0x168>
 800a782:	2001      	movs	r0, #1
 800a784:	f7f6 f892 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a788:	2300      	movs	r3, #0
 800a78a:	702b      	strb	r3, [r5, #0]
 800a78c:	b004      	add	sp, #16
 800a78e:	bd70      	pop	{r4, r5, r6, pc}
 800a790:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800a794:	4620      	mov	r0, r4
 800a796:	4798      	blx	r3
 800a798:	e7a6      	b.n	800a6e8 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800a79a:	2863      	cmp	r0, #99	@ 0x63
 800a79c:	bfcb      	itete	gt
 800a79e:	2300      	movgt	r3, #0
 800a7a0:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800a7a4:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800a7a8:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800a7ac:	e7d0      	b.n	800a750 <_ZN8touchgfx3HAL4tickEv+0x130>
 800a7ae:	bf00      	nop
 800a7b0:	20014000 	.word	0x20014000
 800a7b4:	20014001 	.word	0x20014001
 800a7b8:	05f5e100 	.word	0x05f5e100

0800a7bc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a7bc:	b510      	push	{r4, lr}
 800a7be:	4604      	mov	r4, r0
 800a7c0:	f7f6 f9f2 	bl	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800a7c4:	6863      	ldr	r3, [r4, #4]
 800a7c6:	2200      	movs	r2, #0
 800a7c8:	729a      	strb	r2, [r3, #10]
 800a7ca:	bd10      	pop	{r4, pc}

0800a7cc <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a7cc:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800a7ce:	301c      	adds	r0, #28
 800a7d0:	f016 bb44 	b.w	8020e5c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a7d4 <_ZN8touchgfx3HAL5touchEll>:
 800a7d4:	b530      	push	{r4, r5, lr}
 800a7d6:	b087      	sub	sp, #28
 800a7d8:	4604      	mov	r4, r0
 800a7da:	a804      	add	r0, sp, #16
 800a7dc:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a7e0:	f004 fc92 	bl	800f108 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a7e4:	9b04      	ldr	r3, [sp, #16]
 800a7e6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a7ea:	a906      	add	r1, sp, #24
 800a7ec:	9b05      	ldr	r3, [sp, #20]
 800a7ee:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a7f2:	a803      	add	r0, sp, #12
 800a7f4:	f004 fcda 	bl	800f1ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a7f8:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800a7fc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a800:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a804:	f104 001c 	add.w	r0, r4, #28
 800a808:	b189      	cbz	r1, 800a82e <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a80a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800a80e:	9300      	str	r3, [sp, #0]
 800a810:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800a814:	4613      	mov	r3, r2
 800a816:	462a      	mov	r2, r5
 800a818:	f016 fb30 	bl	8020e7c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a81c:	b128      	cbz	r0, 800a82a <_ZN8touchgfx3HAL5touchEll+0x56>
 800a81e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a822:	6623      	str	r3, [r4, #96]	@ 0x60
 800a824:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a828:	6663      	str	r3, [r4, #100]	@ 0x64
 800a82a:	b007      	add	sp, #28
 800a82c:	bd30      	pop	{r4, r5, pc}
 800a82e:	f016 fb65 	bl	8020efc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a832:	2301      	movs	r3, #1
 800a834:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a838:	e7f1      	b.n	800a81e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a83a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a83a:	b510      	push	{r4, lr}
 800a83c:	2b00      	cmp	r3, #0
 800a83e:	d046      	beq.n	800a8ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a840:	ea81 0002 	eor.w	r0, r1, r2
 800a844:	07c4      	lsls	r4, r0, #31
 800a846:	d508      	bpl.n	800a85a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a848:	440b      	add	r3, r1
 800a84a:	3a01      	subs	r2, #1
 800a84c:	428b      	cmp	r3, r1
 800a84e:	d93e      	bls.n	800a8ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a850:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a854:	f801 0b01 	strb.w	r0, [r1], #1
 800a858:	e7f8      	b.n	800a84c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a85a:	07d0      	lsls	r0, r2, #31
 800a85c:	bf42      	ittt	mi
 800a85e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a862:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a866:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a86a:	2b01      	cmp	r3, #1
 800a86c:	d911      	bls.n	800a892 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a86e:	ea81 0402 	eor.w	r4, r1, r2
 800a872:	07a4      	lsls	r4, r4, #30
 800a874:	4610      	mov	r0, r2
 800a876:	d022      	beq.n	800a8be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800a878:	f023 0401 	bic.w	r4, r3, #1
 800a87c:	440c      	add	r4, r1
 800a87e:	428c      	cmp	r4, r1
 800a880:	4602      	mov	r2, r0
 800a882:	d904      	bls.n	800a88e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800a884:	8812      	ldrh	r2, [r2, #0]
 800a886:	f821 2b02 	strh.w	r2, [r1], #2
 800a88a:	3002      	adds	r0, #2
 800a88c:	e7f7      	b.n	800a87e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800a88e:	f003 0301 	and.w	r3, r3, #1
 800a892:	f023 0003 	bic.w	r0, r3, #3
 800a896:	4408      	add	r0, r1
 800a898:	4288      	cmp	r0, r1
 800a89a:	4614      	mov	r4, r2
 800a89c:	d904      	bls.n	800a8a8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800a89e:	6824      	ldr	r4, [r4, #0]
 800a8a0:	f841 4b04 	str.w	r4, [r1], #4
 800a8a4:	3204      	adds	r2, #4
 800a8a6:	e7f7      	b.n	800a898 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a8a8:	f003 0303 	and.w	r3, r3, #3
 800a8ac:	440b      	add	r3, r1
 800a8ae:	3a01      	subs	r2, #1
 800a8b0:	428b      	cmp	r3, r1
 800a8b2:	d90c      	bls.n	800a8ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a8b4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a8b8:	f801 0b01 	strb.w	r0, [r1], #1
 800a8bc:	e7f8      	b.n	800a8b0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a8be:	0790      	lsls	r0, r2, #30
 800a8c0:	d0e7      	beq.n	800a892 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a8c2:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a8c6:	f821 0b02 	strh.w	r0, [r1], #2
 800a8ca:	3b02      	subs	r3, #2
 800a8cc:	e7e1      	b.n	800a892 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a8ce:	2001      	movs	r0, #1
 800a8d0:	bd10      	pop	{r4, pc}

0800a8d2 <_ZN8touchgfx3HAL7noTouchEv>:
 800a8d2:	b510      	push	{r4, lr}
 800a8d4:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800a8d8:	4604      	mov	r4, r0
 800a8da:	b153      	cbz	r3, 800a8f2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a8dc:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800a8e0:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800a8e4:	2101      	movs	r1, #1
 800a8e6:	301c      	adds	r0, #28
 800a8e8:	f016 fb08 	bl	8020efc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a8ec:	2300      	movs	r3, #0
 800a8ee:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a8f2:	bd10      	pop	{r4, pc}

0800a8f4 <_ZN8touchgfx8Drawable5setXYEss>:
 800a8f4:	b570      	push	{r4, r5, r6, lr}
 800a8f6:	6803      	ldr	r3, [r0, #0]
 800a8f8:	4604      	mov	r4, r0
 800a8fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a8fc:	4615      	mov	r5, r2
 800a8fe:	4798      	blx	r3
 800a900:	6823      	ldr	r3, [r4, #0]
 800a902:	4629      	mov	r1, r5
 800a904:	4620      	mov	r0, r4
 800a906:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a908:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a90c:	4718      	bx	r3
	...

0800a910 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a910:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a914:	b085      	sub	sp, #20
 800a916:	ad04      	add	r5, sp, #16
 800a918:	4604      	mov	r4, r0
 800a91a:	2000      	movs	r0, #0
 800a91c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a920:	69a0      	ldr	r0, [r4, #24]
 800a922:	6806      	ldr	r6, [r0, #0]
 800a924:	9501      	str	r5, [sp, #4]
 800a926:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800a92a:	9500      	str	r5, [sp, #0]
 800a92c:	6835      	ldr	r5, [r6, #0]
 800a92e:	4699      	mov	r9, r3
 800a930:	460f      	mov	r7, r1
 800a932:	4690      	mov	r8, r2
 800a934:	47a8      	blx	r5
 800a936:	4d10      	ldr	r5, [pc, #64]	@ (800a978 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a938:	4606      	mov	r6, r0
 800a93a:	f8a5 9000 	strh.w	r9, [r5]
 800a93e:	f7f8 f86f 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 800a942:	6803      	ldr	r3, [r0, #0]
 800a944:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a946:	4798      	blx	r3
 800a948:	b128      	cbz	r0, 800a956 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a94a:	2801      	cmp	r0, #1
 800a94c:	d00b      	beq.n	800a966 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a94e:	4630      	mov	r0, r6
 800a950:	b005      	add	sp, #20
 800a952:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a956:	882b      	ldrh	r3, [r5, #0]
 800a958:	fb08 7203 	mla	r2, r8, r3, r7
 800a95c:	9b03      	ldr	r3, [sp, #12]
 800a95e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a962:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800a964:	e7f3      	b.n	800a94e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a966:	882a      	ldrh	r2, [r5, #0]
 800a968:	9b03      	ldr	r3, [sp, #12]
 800a96a:	fb08 7202 	mla	r2, r8, r2, r7
 800a96e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a972:	1a9a      	subs	r2, r3, r2
 800a974:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800a976:	e7ea      	b.n	800a94e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a978:	20013ff4 	.word	0x20013ff4

0800a97c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800a97c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a97e:	4b15      	ldr	r3, [pc, #84]	@ (800a9d4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800a980:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800a984:	881b      	ldrh	r3, [r3, #0]
 800a986:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800a988:	fb93 f4f4 	sdiv	r4, r3, r4
 800a98c:	460f      	mov	r7, r1
 800a98e:	4606      	mov	r6, r0
 800a990:	f7f8 f846 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 800a994:	6803      	ldr	r3, [r0, #0]
 800a996:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a998:	4798      	blx	r3
 800a99a:	2801      	cmp	r0, #1
 800a99c:	d00b      	beq.n	800a9b6 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800a99e:	d303      	bcc.n	800a9a8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800a9a0:	2802      	cmp	r0, #2
 800a9a2:	d010      	beq.n	800a9c6 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800a9a4:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800a9a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a9a8:	4b0b      	ldr	r3, [pc, #44]	@ (800a9d8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a9aa:	8819      	ldrh	r1, [r3, #0]
 800a9ac:	437c      	muls	r4, r7
 800a9ae:	434c      	muls	r4, r1
 800a9b0:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800a9b4:	e7f6      	b.n	800a9a4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800a9b6:	4b08      	ldr	r3, [pc, #32]	@ (800a9d8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a9b8:	8819      	ldrh	r1, [r3, #0]
 800a9ba:	437c      	muls	r4, r7
 800a9bc:	434c      	muls	r4, r1
 800a9be:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800a9c2:	1b2d      	subs	r5, r5, r4
 800a9c4:	e7ee      	b.n	800a9a4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800a9c6:	4b04      	ldr	r3, [pc, #16]	@ (800a9d8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a9c8:	8819      	ldrh	r1, [r3, #0]
 800a9ca:	437c      	muls	r4, r7
 800a9cc:	434c      	muls	r4, r1
 800a9ce:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800a9d2:	e7e7      	b.n	800a9a4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800a9d4:	20013ff6 	.word	0x20013ff6
 800a9d8:	20013ff4 	.word	0x20013ff4

0800a9dc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800a9dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a9de:	b08b      	sub	sp, #44	@ 0x2c
 800a9e0:	4617      	mov	r7, r2
 800a9e2:	4604      	mov	r4, r0
 800a9e4:	460e      	mov	r6, r1
 800a9e6:	461d      	mov	r5, r3
 800a9e8:	f7f8 f81a 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 800a9ec:	6803      	ldr	r3, [r0, #0]
 800a9ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a9f0:	4798      	blx	r3
 800a9f2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800a9f6:	9007      	str	r0, [sp, #28]
 800a9f8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a9fc:	4b0d      	ldr	r3, [pc, #52]	@ (800aa34 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800a9fe:	6822      	ldr	r2, [r4, #0]
 800aa00:	881b      	ldrh	r3, [r3, #0]
 800aa02:	9306      	str	r3, [sp, #24]
 800aa04:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800aa08:	9305      	str	r3, [sp, #20]
 800aa0a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800aa0e:	9304      	str	r3, [sp, #16]
 800aa10:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800aa14:	9303      	str	r3, [sp, #12]
 800aa16:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800aa1a:	9302      	str	r3, [sp, #8]
 800aa1c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800aa20:	e9cd 5300 	strd	r5, r3, [sp]
 800aa24:	4631      	mov	r1, r6
 800aa26:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800aa28:	463b      	mov	r3, r7
 800aa2a:	2200      	movs	r2, #0
 800aa2c:	4620      	mov	r0, r4
 800aa2e:	47a8      	blx	r5
 800aa30:	b00b      	add	sp, #44	@ 0x2c
 800aa32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa34:	20013ff4 	.word	0x20013ff4

0800aa38 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800aa38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aa3c:	4698      	mov	r8, r3
 800aa3e:	6803      	ldr	r3, [r0, #0]
 800aa40:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800aa42:	4b15      	ldr	r3, [pc, #84]	@ (800aa98 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800aa44:	b08b      	sub	sp, #44	@ 0x2c
 800aa46:	4617      	mov	r7, r2
 800aa48:	f8b3 9000 	ldrh.w	r9, [r3]
 800aa4c:	460e      	mov	r6, r1
 800aa4e:	4604      	mov	r4, r0
 800aa50:	f7f7 ffe6 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 800aa54:	6803      	ldr	r3, [r0, #0]
 800aa56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa58:	4798      	blx	r3
 800aa5a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800aa5e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800aa62:	2302      	movs	r3, #2
 800aa64:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800aa68:	2301      	movs	r3, #1
 800aa6a:	9305      	str	r3, [sp, #20]
 800aa6c:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800aa70:	9304      	str	r3, [sp, #16]
 800aa72:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800aa76:	9303      	str	r3, [sp, #12]
 800aa78:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800aa7c:	9302      	str	r3, [sp, #8]
 800aa7e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800aa82:	2200      	movs	r2, #0
 800aa84:	e9cd 8300 	strd	r8, r3, [sp]
 800aa88:	4631      	mov	r1, r6
 800aa8a:	463b      	mov	r3, r7
 800aa8c:	4620      	mov	r0, r4
 800aa8e:	47a8      	blx	r5
 800aa90:	b00b      	add	sp, #44	@ 0x2c
 800aa92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa96:	bf00      	nop
 800aa98:	20013ff4 	.word	0x20013ff4

0800aa9c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800aa9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aaa0:	4698      	mov	r8, r3
 800aaa2:	6803      	ldr	r3, [r0, #0]
 800aaa4:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800aaa6:	4b11      	ldr	r3, [pc, #68]	@ (800aaec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800aaa8:	b087      	sub	sp, #28
 800aaaa:	f8b3 9000 	ldrh.w	r9, [r3]
 800aaae:	460e      	mov	r6, r1
 800aab0:	4617      	mov	r7, r2
 800aab2:	4604      	mov	r4, r0
 800aab4:	f7f7 ffb4 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 800aab8:	6803      	ldr	r3, [r0, #0]
 800aaba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aabc:	4798      	blx	r3
 800aabe:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800aac2:	f8cd 900c 	str.w	r9, [sp, #12]
 800aac6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800aaca:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800aace:	9302      	str	r3, [sp, #8]
 800aad0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800aad4:	9301      	str	r3, [sp, #4]
 800aad6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800aada:	9300      	str	r3, [sp, #0]
 800aadc:	463a      	mov	r2, r7
 800aade:	4643      	mov	r3, r8
 800aae0:	4631      	mov	r1, r6
 800aae2:	4620      	mov	r0, r4
 800aae4:	47a8      	blx	r5
 800aae6:	b007      	add	sp, #28
 800aae8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aaec:	20013ff4 	.word	0x20013ff4

0800aaf0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800aaf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aaf4:	4604      	mov	r4, r0
 800aaf6:	b08f      	sub	sp, #60	@ 0x3c
 800aaf8:	4610      	mov	r0, r2
 800aafa:	460d      	mov	r5, r1
 800aafc:	4691      	mov	r9, r2
 800aafe:	461e      	mov	r6, r3
 800ab00:	f007 fe9c 	bl	801283c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ab04:	2800      	cmp	r0, #0
 800ab06:	f000 809d 	beq.w	800ac44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ab0a:	6823      	ldr	r3, [r4, #0]
 800ab0c:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800aca8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ab10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ab12:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800acac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ab16:	4f61      	ldr	r7, [pc, #388]	@ (800ac9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ab18:	4620      	mov	r0, r4
 800ab1a:	4798      	blx	r3
 800ab1c:	6823      	ldr	r3, [r4, #0]
 800ab1e:	4620      	mov	r0, r4
 800ab20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ab22:	4798      	blx	r3
 800ab24:	f8bb 3000 	ldrh.w	r3, [fp]
 800ab28:	9301      	str	r3, [sp, #4]
 800ab2a:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800ab2e:	f8ba 3000 	ldrh.w	r3, [sl]
 800ab32:	9302      	str	r3, [sp, #8]
 800ab34:	883b      	ldrh	r3, [r7, #0]
 800ab36:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ab3a:	9303      	str	r3, [sp, #12]
 800ab3c:	4b58      	ldr	r3, [pc, #352]	@ (800aca0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ab3e:	9305      	str	r3, [sp, #20]
 800ab40:	881a      	ldrh	r2, [r3, #0]
 800ab42:	9204      	str	r2, [sp, #16]
 800ab44:	4640      	mov	r0, r8
 800ab46:	f007 ff0d 	bl	8012964 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ab4a:	8038      	strh	r0, [r7, #0]
 800ab4c:	4640      	mov	r0, r8
 800ab4e:	f007 ff3d 	bl	80129cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ab52:	9b05      	ldr	r3, [sp, #20]
 800ab54:	b280      	uxth	r0, r0
 800ab56:	8018      	strh	r0, [r3, #0]
 800ab58:	4b52      	ldr	r3, [pc, #328]	@ (800aca4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ab5a:	781b      	ldrb	r3, [r3, #0]
 800ab5c:	2b00      	cmp	r3, #0
 800ab5e:	d174      	bne.n	800ac4a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800ab60:	883b      	ldrh	r3, [r7, #0]
 800ab62:	f8ab 3000 	strh.w	r3, [fp]
 800ab66:	f8aa 0000 	strh.w	r0, [sl]
 800ab6a:	4648      	mov	r0, r9
 800ab6c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800ab70:	f007 fe64 	bl	801283c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ab74:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800ab78:	2200      	movs	r2, #0
 800ab7a:	4611      	mov	r1, r2
 800ab7c:	4628      	mov	r0, r5
 800ab7e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800ab82:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ab86:	f7ff feb5 	bl	800a8f4 <_ZN8touchgfx8Drawable5setXYEss>
 800ab8a:	2301      	movs	r3, #1
 800ab8c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800ab90:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800ab94:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ab98:	2b00      	cmp	r3, #0
 800ab9a:	dd5c      	ble.n	800ac56 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ab9c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800aba0:	2b00      	cmp	r3, #0
 800aba2:	dd58      	ble.n	800ac56 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800aba4:	462a      	mov	r2, r5
 800aba6:	ab0a      	add	r3, sp, #40	@ 0x28
 800aba8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800abac:	6851      	ldr	r1, [r2, #4]
 800abae:	c303      	stmia	r3!, {r0, r1}
 800abb0:	4631      	mov	r1, r6
 800abb2:	a80a      	add	r0, sp, #40	@ 0x28
 800abb4:	f7ff fbba 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 800abb8:	4b38      	ldr	r3, [pc, #224]	@ (800ac9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800abba:	f9b3 2000 	ldrsh.w	r2, [r3]
 800abbe:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800abc2:	2100      	movs	r1, #0
 800abc4:	aa0a      	add	r2, sp, #40	@ 0x28
 800abc6:	4b36      	ldr	r3, [pc, #216]	@ (800aca0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800abc8:	910c      	str	r1, [sp, #48]	@ 0x30
 800abca:	e892 0003 	ldmia.w	r2, {r0, r1}
 800abce:	f9b3 3000 	ldrsh.w	r3, [r3]
 800abd2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800abd6:	ab08      	add	r3, sp, #32
 800abd8:	e883 0003 	stmia.w	r3, {r0, r1}
 800abdc:	4618      	mov	r0, r3
 800abde:	a90c      	add	r1, sp, #48	@ 0x30
 800abe0:	f7ff fba4 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 800abe4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800abe6:	2b00      	cmp	r3, #0
 800abe8:	d13c      	bne.n	800ac64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800abea:	2000      	movs	r0, #0
 800abec:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800abf0:	2600      	movs	r6, #0
 800abf2:	682a      	ldr	r2, [r5, #0]
 800abf4:	696b      	ldr	r3, [r5, #20]
 800abf6:	616e      	str	r6, [r5, #20]
 800abf8:	9305      	str	r3, [sp, #20]
 800abfa:	6892      	ldr	r2, [r2, #8]
 800abfc:	a908      	add	r1, sp, #32
 800abfe:	4628      	mov	r0, r5
 800ac00:	4790      	blx	r2
 800ac02:	9b05      	ldr	r3, [sp, #20]
 800ac04:	616b      	str	r3, [r5, #20]
 800ac06:	4652      	mov	r2, sl
 800ac08:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800ac0c:	4649      	mov	r1, r9
 800ac0e:	4628      	mov	r0, r5
 800ac10:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800ac14:	f7ff fe6e 	bl	800a8f4 <_ZN8touchgfx8Drawable5setXYEss>
 800ac18:	4b23      	ldr	r3, [pc, #140]	@ (800aca8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ac1a:	9a01      	ldr	r2, [sp, #4]
 800ac1c:	801a      	strh	r2, [r3, #0]
 800ac1e:	4b23      	ldr	r3, [pc, #140]	@ (800acac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800ac20:	9a02      	ldr	r2, [sp, #8]
 800ac22:	801a      	strh	r2, [r3, #0]
 800ac24:	4b1d      	ldr	r3, [pc, #116]	@ (800ac9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ac26:	9a03      	ldr	r2, [sp, #12]
 800ac28:	801a      	strh	r2, [r3, #0]
 800ac2a:	4b1d      	ldr	r3, [pc, #116]	@ (800aca0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ac2c:	9a04      	ldr	r2, [sp, #16]
 800ac2e:	801a      	strh	r2, [r3, #0]
 800ac30:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800ac34:	6823      	ldr	r3, [r4, #0]
 800ac36:	4620      	mov	r0, r4
 800ac38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ac3a:	4798      	blx	r3
 800ac3c:	6823      	ldr	r3, [r4, #0]
 800ac3e:	4620      	mov	r0, r4
 800ac40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ac42:	4798      	blx	r3
 800ac44:	b00f      	add	sp, #60	@ 0x3c
 800ac46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac4a:	883b      	ldrh	r3, [r7, #0]
 800ac4c:	f8ab 0000 	strh.w	r0, [fp]
 800ac50:	f8aa 3000 	strh.w	r3, [sl]
 800ac54:	e789      	b.n	800ab6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800ac56:	462a      	mov	r2, r5
 800ac58:	ab0a      	add	r3, sp, #40	@ 0x28
 800ac5a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ac5e:	6851      	ldr	r1, [r2, #4]
 800ac60:	c303      	stmia	r3!, {r0, r1}
 800ac62:	e7a9      	b.n	800abb8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800ac64:	a807      	add	r0, sp, #28
 800ac66:	f007 fff3 	bl	8012c50 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ac6a:	4606      	mov	r6, r0
 800ac6c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800ac6e:	6803      	ldr	r3, [r0, #0]
 800ac70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ac72:	4798      	blx	r3
 800ac74:	4286      	cmp	r6, r0
 800ac76:	d1b8      	bne.n	800abea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800ac78:	f7f7 fed2 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 800ac7c:	6803      	ldr	r3, [r0, #0]
 800ac7e:	4606      	mov	r6, r0
 800ac80:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ac82:	9305      	str	r3, [sp, #20]
 800ac84:	a807      	add	r0, sp, #28
 800ac86:	f007 ffe3 	bl	8012c50 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ac8a:	9b05      	ldr	r3, [sp, #20]
 800ac8c:	4601      	mov	r1, r0
 800ac8e:	4630      	mov	r0, r6
 800ac90:	4798      	blx	r3
 800ac92:	f080 0001 	eor.w	r0, r0, #1
 800ac96:	b2c0      	uxtb	r0, r0
 800ac98:	e7a8      	b.n	800abec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800ac9a:	bf00      	nop
 800ac9c:	20013fee 	.word	0x20013fee
 800aca0:	20013ff0 	.word	0x20013ff0
 800aca4:	20013ff2 	.word	0x20013ff2
 800aca8:	20013ff4 	.word	0x20013ff4
 800acac:	20013ff6 	.word	0x20013ff6

0800acb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800acb0:	b510      	push	{r4, lr}
 800acb2:	4b07      	ldr	r3, [pc, #28]	@ (800acd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800acb4:	781b      	ldrb	r3, [r3, #0]
 800acb6:	4604      	mov	r4, r0
 800acb8:	b13b      	cbz	r3, 800acca <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800acba:	6803      	ldr	r3, [r0, #0]
 800acbc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800acbe:	4798      	blx	r3
 800acc0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800acc2:	4283      	cmp	r3, r0
 800acc4:	d101      	bne.n	800acca <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800acc6:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800acc8:	bd10      	pop	{r4, pc}
 800acca:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800accc:	e7fc      	b.n	800acc8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800acce:	bf00      	nop
 800acd0:	20013ff8 	.word	0x20013ff8

0800acd4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800acd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800acd8:	b08a      	sub	sp, #40	@ 0x28
 800acda:	461d      	mov	r5, r3
 800acdc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800ace0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ace4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ace8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800acec:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800acf0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800acf4:	2400      	movs	r4, #0
 800acf6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800acfa:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800acfe:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ad02:	4690      	mov	r8, r2
 800ad04:	4607      	mov	r7, r0
 800ad06:	9404      	str	r4, [sp, #16]
 800ad08:	f88d 4020 	strb.w	r4, [sp, #32]
 800ad0c:	f7ff ffd0 	bl	800acb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad10:	fb06 8505 	mla	r5, r6, r5, r8
 800ad14:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ad18:	6878      	ldr	r0, [r7, #4]
 800ad1a:	9505      	str	r5, [sp, #20]
 800ad1c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ad20:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ad24:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800ad28:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800ad2c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800ad30:	6803      	ldr	r3, [r0, #0]
 800ad32:	a901      	add	r1, sp, #4
 800ad34:	685b      	ldr	r3, [r3, #4]
 800ad36:	4798      	blx	r3
 800ad38:	b00a      	add	sp, #40	@ 0x28
 800ad3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ad3e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800ad3e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad42:	b08b      	sub	sp, #44	@ 0x2c
 800ad44:	2400      	movs	r4, #0
 800ad46:	461d      	mov	r5, r3
 800ad48:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800ad4c:	4688      	mov	r8, r1
 800ad4e:	4691      	mov	r9, r2
 800ad50:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800ad54:	9404      	str	r4, [sp, #16]
 800ad56:	4607      	mov	r7, r0
 800ad58:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ad5c:	f7ff ffa8 	bl	800acb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad60:	fb06 9505 	mla	r5, r6, r5, r9
 800ad64:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ad68:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ad6c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ad70:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800ad74:	6878      	ldr	r0, [r7, #4]
 800ad76:	9505      	str	r5, [sp, #20]
 800ad78:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ad7c:	f8ad 401c 	strh.w	r4, [sp, #28]
 800ad80:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ad84:	f8cd 8010 	str.w	r8, [sp, #16]
 800ad88:	f8ad 4020 	strh.w	r4, [sp, #32]
 800ad8c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ad90:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800ad94:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800ad98:	6803      	ldr	r3, [r0, #0]
 800ad9a:	a901      	add	r1, sp, #4
 800ad9c:	685b      	ldr	r3, [r3, #4]
 800ad9e:	4798      	blx	r3
 800ada0:	b00b      	add	sp, #44	@ 0x2c
 800ada2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800ada8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800ada8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800adac:	b08a      	sub	sp, #40	@ 0x28
 800adae:	4698      	mov	r8, r3
 800adb0:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800adb4:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800adb8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800adbc:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800adc0:	2300      	movs	r3, #0
 800adc2:	2d0b      	cmp	r5, #11
 800adc4:	4606      	mov	r6, r0
 800adc6:	9304      	str	r3, [sp, #16]
 800adc8:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800adcc:	d138      	bne.n	800ae40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800adce:	2380      	movs	r3, #128	@ 0x80
 800add0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800add4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800add8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800addc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ade0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ade4:	f88d 0020 	strb.w	r0, [sp, #32]
 800ade8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800adec:	f8ad 301c 	strh.w	r3, [sp, #28]
 800adf0:	4630      	mov	r0, r6
 800adf2:	9203      	str	r2, [sp, #12]
 800adf4:	f7ff ff5c 	bl	800acb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800adf8:	2c0b      	cmp	r4, #11
 800adfa:	bf98      	it	ls
 800adfc:	4b1b      	ldrls	r3, [pc, #108]	@ (800ae6c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800adfe:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800ae02:	bf98      	it	ls
 800ae04:	5d19      	ldrbls	r1, [r3, r4]
 800ae06:	f8ad 701e 	strh.w	r7, [sp, #30]
 800ae0a:	bf88      	it	hi
 800ae0c:	2100      	movhi	r1, #0
 800ae0e:	fb02 8307 	mla	r3, r2, r7, r8
 800ae12:	10c9      	asrs	r1, r1, #3
 800ae14:	fb01 0003 	mla	r0, r1, r3, r0
 800ae18:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800ae1c:	9005      	str	r0, [sp, #20]
 800ae1e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800ae22:	6870      	ldr	r0, [r6, #4]
 800ae24:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800ae28:	2300      	movs	r3, #0
 800ae2a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ae2e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800ae32:	6803      	ldr	r3, [r0, #0]
 800ae34:	a901      	add	r1, sp, #4
 800ae36:	685b      	ldr	r3, [r3, #4]
 800ae38:	4798      	blx	r3
 800ae3a:	b00a      	add	sp, #40	@ 0x28
 800ae3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae40:	2d02      	cmp	r5, #2
 800ae42:	d109      	bne.n	800ae58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800ae44:	28ff      	cmp	r0, #255	@ 0xff
 800ae46:	d105      	bne.n	800ae54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800ae48:	f1bc 0f00 	cmp.w	ip, #0
 800ae4c:	bf14      	ite	ne
 800ae4e:	2340      	movne	r3, #64	@ 0x40
 800ae50:	2320      	moveq	r3, #32
 800ae52:	e7bd      	b.n	800add0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ae54:	2340      	movs	r3, #64	@ 0x40
 800ae56:	e7bb      	b.n	800add0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ae58:	28ff      	cmp	r0, #255	@ 0xff
 800ae5a:	d105      	bne.n	800ae68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800ae5c:	f1bc 0f00 	cmp.w	ip, #0
 800ae60:	bf14      	ite	ne
 800ae62:	2304      	movne	r3, #4
 800ae64:	2301      	moveq	r3, #1
 800ae66:	e7b3      	b.n	800add0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ae68:	2304      	movs	r3, #4
 800ae6a:	e7b1      	b.n	800add0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ae6c:	08024f04 	.word	0x08024f04

0800ae70 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800ae70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae74:	b08b      	sub	sp, #44	@ 0x2c
 800ae76:	461d      	mov	r5, r3
 800ae78:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800ae7c:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800ae80:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800ae84:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800ae88:	bf14      	ite	ne
 800ae8a:	2308      	movne	r3, #8
 800ae8c:	2302      	moveq	r3, #2
 800ae8e:	2400      	movs	r4, #0
 800ae90:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ae94:	4688      	mov	r8, r1
 800ae96:	4693      	mov	fp, r2
 800ae98:	9404      	str	r4, [sp, #16]
 800ae9a:	4607      	mov	r7, r0
 800ae9c:	f7ff ff08 	bl	800acb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aea0:	2e0b      	cmp	r6, #11
 800aea2:	bf98      	it	ls
 800aea4:	4b15      	ldrls	r3, [pc, #84]	@ (800aefc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800aea6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800aeaa:	bf98      	it	ls
 800aeac:	5d9c      	ldrbls	r4, [r3, r6]
 800aeae:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800aeb2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800aeb6:	fb05 b50a 	mla	r5, r5, sl, fp
 800aeba:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800aebe:	f8ad 301a 	strh.w	r3, [sp, #26]
 800aec2:	10e4      	asrs	r4, r4, #3
 800aec4:	fb04 0405 	mla	r4, r4, r5, r0
 800aec8:	2300      	movs	r3, #0
 800aeca:	6878      	ldr	r0, [r7, #4]
 800aecc:	9405      	str	r4, [sp, #20]
 800aece:	f8ad 301c 	strh.w	r3, [sp, #28]
 800aed2:	f8ad a01e 	strh.w	sl, [sp, #30]
 800aed6:	f8cd 8010 	str.w	r8, [sp, #16]
 800aeda:	f88d 9020 	strb.w	r9, [sp, #32]
 800aede:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800aee2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800aee6:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800aeea:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800aeee:	6803      	ldr	r3, [r0, #0]
 800aef0:	a901      	add	r1, sp, #4
 800aef2:	685b      	ldr	r3, [r3, #4]
 800aef4:	4798      	blx	r3
 800aef6:	b00b      	add	sp, #44	@ 0x2c
 800aef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aefc:	08024f04 	.word	0x08024f04

0800af00 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800af00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af04:	461e      	mov	r6, r3
 800af06:	4b0a      	ldr	r3, [pc, #40]	@ (800af30 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800af08:	460f      	mov	r7, r1
 800af0a:	881d      	ldrh	r5, [r3, #0]
 800af0c:	4690      	mov	r8, r2
 800af0e:	f7f7 fd87 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 800af12:	6803      	ldr	r3, [r0, #0]
 800af14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af16:	4798      	blx	r3
 800af18:	280b      	cmp	r0, #11
 800af1a:	bf9a      	itte	ls
 800af1c:	4b05      	ldrls	r3, [pc, #20]	@ (800af34 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800af1e:	5c1c      	ldrbls	r4, [r3, r0]
 800af20:	2400      	movhi	r4, #0
 800af22:	fb08 7005 	mla	r0, r8, r5, r7
 800af26:	10e4      	asrs	r4, r4, #3
 800af28:	fb04 6000 	mla	r0, r4, r0, r6
 800af2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800af30:	20013ff4 	.word	0x20013ff4
 800af34:	08024f04 	.word	0x08024f04

0800af38 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800af38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af3a:	b08b      	sub	sp, #44	@ 0x2c
 800af3c:	461f      	mov	r7, r3
 800af3e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800af42:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800af46:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800af4a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800af4e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800af52:	f8ad 301a 	strh.w	r3, [sp, #26]
 800af56:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800af5a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800af5e:	2500      	movs	r5, #0
 800af60:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800af64:	f88d 3020 	strb.w	r3, [sp, #32]
 800af68:	4604      	mov	r4, r0
 800af6a:	4616      	mov	r6, r2
 800af6c:	9504      	str	r5, [sp, #16]
 800af6e:	f7ff fe9f 	bl	800acb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800af72:	463a      	mov	r2, r7
 800af74:	4631      	mov	r1, r6
 800af76:	4603      	mov	r3, r0
 800af78:	4620      	mov	r0, r4
 800af7a:	f7ff ffc1 	bl	800af00 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800af7e:	4b0e      	ldr	r3, [pc, #56]	@ (800afb8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800af80:	9005      	str	r0, [sp, #20]
 800af82:	881b      	ldrh	r3, [r3, #0]
 800af84:	f8ad 301e 	strh.w	r3, [sp, #30]
 800af88:	f7f7 fd4a 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 800af8c:	6803      	ldr	r3, [r0, #0]
 800af8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af90:	4798      	blx	r3
 800af92:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800af94:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800af98:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800af9c:	9304      	str	r3, [sp, #16]
 800af9e:	6860      	ldr	r0, [r4, #4]
 800afa0:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800afa4:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800afa8:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800afac:	6803      	ldr	r3, [r0, #0]
 800afae:	a901      	add	r1, sp, #4
 800afb0:	685b      	ldr	r3, [r3, #4]
 800afb2:	4798      	blx	r3
 800afb4:	b00b      	add	sp, #44	@ 0x2c
 800afb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800afb8:	20013ff4 	.word	0x20013ff4

0800afbc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800afbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800afbe:	b08d      	sub	sp, #52	@ 0x34
 800afc0:	466b      	mov	r3, sp
 800afc2:	e883 0006 	stmia.w	r3, {r1, r2}
 800afc6:	2300      	movs	r3, #0
 800afc8:	9306      	str	r3, [sp, #24]
 800afca:	6803      	ldr	r3, [r0, #0]
 800afcc:	f8bd 6000 	ldrh.w	r6, [sp]
 800afd0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800afd2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800afd6:	2501      	movs	r5, #1
 800afd8:	9503      	str	r5, [sp, #12]
 800afda:	4604      	mov	r4, r0
 800afdc:	4798      	blx	r3
 800afde:	463a      	mov	r2, r7
 800afe0:	4631      	mov	r1, r6
 800afe2:	4603      	mov	r3, r0
 800afe4:	4620      	mov	r0, r4
 800afe6:	f7ff ff8b 	bl	800af00 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800afea:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800afec:	9307      	str	r3, [sp, #28]
 800afee:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800aff2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800aff6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800affa:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800affe:	4b0f      	ldr	r3, [pc, #60]	@ (800b03c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b000:	9004      	str	r0, [sp, #16]
 800b002:	881b      	ldrh	r3, [r3, #0]
 800b004:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b008:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b00c:	f7f7 fd08 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 800b010:	6803      	ldr	r3, [r0, #0]
 800b012:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b014:	4798      	blx	r3
 800b016:	23ff      	movs	r3, #255	@ 0xff
 800b018:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b01c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b020:	6860      	ldr	r0, [r4, #4]
 800b022:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b026:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b02a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b02e:	6803      	ldr	r3, [r0, #0]
 800b030:	a903      	add	r1, sp, #12
 800b032:	685b      	ldr	r3, [r3, #4]
 800b034:	4798      	blx	r3
 800b036:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800b038:	b00d      	add	sp, #52	@ 0x34
 800b03a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b03c:	20013ff4 	.word	0x20013ff4

0800b040 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b040:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b044:	b08c      	sub	sp, #48	@ 0x30
 800b046:	461e      	mov	r6, r3
 800b048:	466d      	mov	r5, sp
 800b04a:	2300      	movs	r3, #0
 800b04c:	e885 0006 	stmia.w	r5, {r1, r2}
 800b050:	9306      	str	r3, [sp, #24]
 800b052:	6803      	ldr	r3, [r0, #0]
 800b054:	f8bd 7000 	ldrh.w	r7, [sp]
 800b058:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b05a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b05e:	2501      	movs	r5, #1
 800b060:	9503      	str	r5, [sp, #12]
 800b062:	4604      	mov	r4, r0
 800b064:	4798      	blx	r3
 800b066:	4642      	mov	r2, r8
 800b068:	4639      	mov	r1, r7
 800b06a:	4603      	mov	r3, r0
 800b06c:	4620      	mov	r0, r4
 800b06e:	f7ff ff47 	bl	800af00 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b072:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b076:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b07a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b07e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b082:	4b11      	ldr	r3, [pc, #68]	@ (800b0c8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b084:	9004      	str	r0, [sp, #16]
 800b086:	881b      	ldrh	r3, [r3, #0]
 800b088:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b08c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b08e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b092:	9607      	str	r6, [sp, #28]
 800b094:	f7f7 fcc4 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 800b098:	6803      	ldr	r3, [r0, #0]
 800b09a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b09c:	4798      	blx	r3
 800b09e:	23ff      	movs	r3, #255	@ 0xff
 800b0a0:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b0a4:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b0a8:	6860      	ldr	r0, [r4, #4]
 800b0aa:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b0ae:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b0b2:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b0b6:	6803      	ldr	r3, [r0, #0]
 800b0b8:	a903      	add	r1, sp, #12
 800b0ba:	685b      	ldr	r3, [r3, #4]
 800b0bc:	4798      	blx	r3
 800b0be:	4630      	mov	r0, r6
 800b0c0:	b00c      	add	sp, #48	@ 0x30
 800b0c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b0c6:	bf00      	nop
 800b0c8:	20013ff4 	.word	0x20013ff4

0800b0cc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b0cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b0ce:	b085      	sub	sp, #20
 800b0d0:	ac02      	add	r4, sp, #8
 800b0d2:	e884 0006 	stmia.w	r4, {r1, r2}
 800b0d6:	4605      	mov	r5, r0
 800b0d8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b0dc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b0e0:	f7ff fde6 	bl	800acb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b0e4:	463a      	mov	r2, r7
 800b0e6:	4603      	mov	r3, r0
 800b0e8:	4631      	mov	r1, r6
 800b0ea:	4628      	mov	r0, r5
 800b0ec:	f7ff ff08 	bl	800af00 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b0f0:	4a05      	ldr	r2, [pc, #20]	@ (800b108 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b0f2:	682b      	ldr	r3, [r5, #0]
 800b0f4:	8812      	ldrh	r2, [r2, #0]
 800b0f6:	9200      	str	r2, [sp, #0]
 800b0f8:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800b0fa:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b0fe:	4603      	mov	r3, r0
 800b100:	4628      	mov	r0, r5
 800b102:	47b0      	blx	r6
 800b104:	b005      	add	sp, #20
 800b106:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b108:	20013ff4 	.word	0x20013ff4

0800b10c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b10c:	b570      	push	{r4, r5, r6, lr}
 800b10e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b112:	4604      	mov	r4, r0
 800b114:	b19b      	cbz	r3, 800b13e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b116:	2002      	movs	r0, #2
 800b118:	f7f5 fbf2 	bl	8000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b11c:	2300      	movs	r3, #0
 800b11e:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b122:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b126:	6823      	ldr	r3, [r4, #0]
 800b128:	4620      	mov	r0, r4
 800b12a:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800b12e:	f7ff fdbf 	bl	800acb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b132:	462b      	mov	r3, r5
 800b134:	4601      	mov	r1, r0
 800b136:	4620      	mov	r0, r4
 800b138:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b13c:	4718      	bx	r3
 800b13e:	bd70      	pop	{r4, r5, r6, pc}

0800b140 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b140:	b538      	push	{r3, r4, r5, lr}
 800b142:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800b146:	428b      	cmp	r3, r1
 800b148:	4604      	mov	r4, r0
 800b14a:	460d      	mov	r5, r1
 800b14c:	d006      	beq.n	800b15c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b14e:	6803      	ldr	r3, [r0, #0]
 800b150:	b929      	cbnz	r1, 800b15e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b152:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800b156:	4798      	blx	r3
 800b158:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b15c:	bd38      	pop	{r3, r4, r5, pc}
 800b15e:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800b162:	e7f8      	b.n	800b156 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b164 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b164:	b510      	push	{r4, lr}
 800b166:	4b0c      	ldr	r3, [pc, #48]	@ (800b198 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800b168:	781b      	ldrb	r3, [r3, #0]
 800b16a:	4604      	mov	r4, r0
 800b16c:	b953      	cbnz	r3, 800b184 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b16e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800b172:	b93b      	cbnz	r3, 800b184 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b174:	6840      	ldr	r0, [r0, #4]
 800b176:	f000 f92b 	bl	800b3d0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b17a:	b118      	cbz	r0, 800b184 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b17c:	6862      	ldr	r2, [r4, #4]
 800b17e:	7a53      	ldrb	r3, [r2, #9]
 800b180:	2b00      	cmp	r3, #0
 800b182:	d0fc      	beq.n	800b17e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800b184:	f7f5 fd08 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b188:	4620      	mov	r0, r4
 800b18a:	2100      	movs	r1, #0
 800b18c:	f7ff ffd8 	bl	800b140 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b190:	4620      	mov	r0, r4
 800b192:	f7ff fd8d 	bl	800acb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b196:	bd10      	pop	{r4, pc}
 800b198:	20013ff8 	.word	0x20013ff8

0800b19c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b19c:	b570      	push	{r4, r5, r6, lr}
 800b19e:	4604      	mov	r4, r0
 800b1a0:	6803      	ldr	r3, [r0, #0]
 800b1a2:	b919      	cbnz	r1, 800b1ac <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b1a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b1a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1aa:	4718      	bx	r3
 800b1ac:	2200      	movs	r2, #0
 800b1ae:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800b1b2:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800b1b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b1b8:	4798      	blx	r3
 800b1ba:	6863      	ldr	r3, [r4, #4]
 800b1bc:	2101      	movs	r1, #1
 800b1be:	4605      	mov	r5, r0
 800b1c0:	7299      	strb	r1, [r3, #10]
 800b1c2:	4620      	mov	r0, r4
 800b1c4:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800b1c8:	f7ff ffba 	bl	800b140 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b1cc:	4628      	mov	r0, r5
 800b1ce:	bd70      	pop	{r4, r5, r6, pc}

0800b1d0 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b1d0:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b1d4:	1a13      	subs	r3, r2, r0
 800b1d6:	4258      	negs	r0, r3
 800b1d8:	4158      	adcs	r0, r3
 800b1da:	4770      	bx	lr

0800b1dc <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b1dc:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b1e0:	1a9b      	subs	r3, r3, r2
 800b1e2:	2b00      	cmp	r3, #0
 800b1e4:	bfdc      	itt	le
 800b1e6:	6882      	ldrle	r2, [r0, #8]
 800b1e8:	189b      	addle	r3, r3, r2
 800b1ea:	2b01      	cmp	r3, #1
 800b1ec:	bfcc      	ite	gt
 800b1ee:	2000      	movgt	r0, #0
 800b1f0:	2001      	movle	r0, #1
 800b1f2:	4770      	bx	lr

0800b1f4 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b1f4:	6902      	ldr	r2, [r0, #16]
 800b1f6:	6843      	ldr	r3, [r0, #4]
 800b1f8:	2024      	movs	r0, #36	@ 0x24
 800b1fa:	fb00 3002 	mla	r0, r0, r2, r3
 800b1fe:	4770      	bx	lr

0800b200 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b200:	6803      	ldr	r3, [r0, #0]
 800b202:	691b      	ldr	r3, [r3, #16]
 800b204:	4718      	bx	r3

0800b206 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b206:	b570      	push	{r4, r5, r6, lr}
 800b208:	2301      	movs	r3, #1
 800b20a:	7203      	strb	r3, [r0, #8]
 800b20c:	4604      	mov	r4, r0
 800b20e:	6840      	ldr	r0, [r0, #4]
 800b210:	6803      	ldr	r3, [r0, #0]
 800b212:	699b      	ldr	r3, [r3, #24]
 800b214:	4798      	blx	r3
 800b216:	6803      	ldr	r3, [r0, #0]
 800b218:	2b40      	cmp	r3, #64	@ 0x40
 800b21a:	4605      	mov	r5, r0
 800b21c:	d00c      	beq.n	800b238 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b21e:	d810      	bhi.n	800b242 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b220:	2b04      	cmp	r3, #4
 800b222:	d01d      	beq.n	800b260 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b224:	d804      	bhi.n	800b230 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b226:	2b01      	cmp	r3, #1
 800b228:	d006      	beq.n	800b238 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b22a:	2b02      	cmp	r3, #2
 800b22c:	d02c      	beq.n	800b288 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b22e:	bd70      	pop	{r4, r5, r6, pc}
 800b230:	2b08      	cmp	r3, #8
 800b232:	d01d      	beq.n	800b270 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b234:	2b20      	cmp	r3, #32
 800b236:	d1fa      	bne.n	800b22e <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b238:	6823      	ldr	r3, [r4, #0]
 800b23a:	4620      	mov	r0, r4
 800b23c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b23e:	4798      	blx	r3
 800b240:	e013      	b.n	800b26a <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b242:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b246:	d0f7      	beq.n	800b238 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b248:	d804      	bhi.n	800b254 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b24a:	2b80      	cmp	r3, #128	@ 0x80
 800b24c:	d0f4      	beq.n	800b238 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b24e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b252:	e7f0      	b.n	800b236 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b254:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800b258:	d0ee      	beq.n	800b238 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b25a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b25e:	e7e5      	b.n	800b22c <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b260:	6823      	ldr	r3, [r4, #0]
 800b262:	7f01      	ldrb	r1, [r0, #28]
 800b264:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b266:	4620      	mov	r0, r4
 800b268:	4798      	blx	r3
 800b26a:	6823      	ldr	r3, [r4, #0]
 800b26c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b26e:	e006      	b.n	800b27e <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b270:	6823      	ldr	r3, [r4, #0]
 800b272:	7f01      	ldrb	r1, [r0, #28]
 800b274:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b276:	4620      	mov	r0, r4
 800b278:	4798      	blx	r3
 800b27a:	6823      	ldr	r3, [r4, #0]
 800b27c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b27e:	4629      	mov	r1, r5
 800b280:	4620      	mov	r0, r4
 800b282:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b286:	4718      	bx	r3
 800b288:	6823      	ldr	r3, [r4, #0]
 800b28a:	4620      	mov	r0, r4
 800b28c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b28e:	4798      	blx	r3
 800b290:	e7f3      	b.n	800b27a <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b292 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b292:	4770      	bx	lr

0800b294 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b294:	4770      	bx	lr

0800b296 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b296:	4770      	bx	lr

0800b298 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b298:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b29c:	1ad2      	subs	r2, r2, r3
 800b29e:	2a00      	cmp	r2, #0
 800b2a0:	b510      	push	{r4, lr}
 800b2a2:	bfdc      	itt	le
 800b2a4:	6884      	ldrle	r4, [r0, #8]
 800b2a6:	1912      	addle	r2, r2, r4
 800b2a8:	2a01      	cmp	r2, #1
 800b2aa:	dd16      	ble.n	800b2da <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b2ac:	6842      	ldr	r2, [r0, #4]
 800b2ae:	2424      	movs	r4, #36	@ 0x24
 800b2b0:	fb04 2303 	mla	r3, r4, r3, r2
 800b2b4:	f101 0220 	add.w	r2, r1, #32
 800b2b8:	f851 4b04 	ldr.w	r4, [r1], #4
 800b2bc:	f843 4b04 	str.w	r4, [r3], #4
 800b2c0:	4291      	cmp	r1, r2
 800b2c2:	d1f9      	bne.n	800b2b8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b2c4:	780a      	ldrb	r2, [r1, #0]
 800b2c6:	701a      	strb	r2, [r3, #0]
 800b2c8:	68c3      	ldr	r3, [r0, #12]
 800b2ca:	6882      	ldr	r2, [r0, #8]
 800b2cc:	f3bf 8f5b 	dmb	ish
 800b2d0:	3301      	adds	r3, #1
 800b2d2:	429a      	cmp	r2, r3
 800b2d4:	bfd8      	it	le
 800b2d6:	1a9b      	suble	r3, r3, r2
 800b2d8:	60c3      	str	r3, [r0, #12]
 800b2da:	bd10      	pop	{r4, pc}

0800b2dc <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b2dc:	6903      	ldr	r3, [r0, #16]
 800b2de:	6882      	ldr	r2, [r0, #8]
 800b2e0:	f3bf 8f5b 	dmb	ish
 800b2e4:	3301      	adds	r3, #1
 800b2e6:	429a      	cmp	r2, r3
 800b2e8:	bfd8      	it	le
 800b2ea:	1a9b      	suble	r3, r3, r2
 800b2ec:	6103      	str	r3, [r0, #16]
 800b2ee:	4770      	bx	lr

0800b2f0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b2f0:	b570      	push	{r4, r5, r6, lr}
 800b2f2:	4604      	mov	r4, r0
 800b2f4:	460e      	mov	r6, r1
 800b2f6:	6860      	ldr	r0, [r4, #4]
 800b2f8:	6803      	ldr	r3, [r0, #0]
 800b2fa:	685b      	ldr	r3, [r3, #4]
 800b2fc:	4798      	blx	r3
 800b2fe:	2800      	cmp	r0, #0
 800b300:	d1f9      	bne.n	800b2f6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b302:	4d0d      	ldr	r5, [pc, #52]	@ (800b338 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b304:	6828      	ldr	r0, [r5, #0]
 800b306:	6803      	ldr	r3, [r0, #0]
 800b308:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b30c:	4798      	blx	r3
 800b30e:	f7f5 fc51 	bl	8000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b312:	6828      	ldr	r0, [r5, #0]
 800b314:	2101      	movs	r1, #1
 800b316:	f7ff ff13 	bl	800b140 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b31a:	6860      	ldr	r0, [r4, #4]
 800b31c:	6803      	ldr	r3, [r0, #0]
 800b31e:	4631      	mov	r1, r6
 800b320:	689b      	ldr	r3, [r3, #8]
 800b322:	4798      	blx	r3
 800b324:	6823      	ldr	r3, [r4, #0]
 800b326:	4620      	mov	r0, r4
 800b328:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b32a:	4798      	blx	r3
 800b32c:	6828      	ldr	r0, [r5, #0]
 800b32e:	6803      	ldr	r3, [r0, #0]
 800b330:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b334:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b336:	4718      	bx	r3
 800b338:	20013ffc 	.word	0x20013ffc

0800b33c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b33c:	b508      	push	{r3, lr}
 800b33e:	f7f5 fc2b 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b342:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b346:	f7f5 bc2f 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b34a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b34a:	b510      	push	{r4, lr}
 800b34c:	2114      	movs	r1, #20
 800b34e:	4604      	mov	r4, r0
 800b350:	f016 fb87 	bl	8021a62 <_ZdlPvj>
 800b354:	4620      	mov	r0, r4
 800b356:	bd10      	pop	{r4, pc}

0800b358 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b358:	b510      	push	{r4, lr}
 800b35a:	4604      	mov	r4, r0
 800b35c:	6840      	ldr	r0, [r0, #4]
 800b35e:	6803      	ldr	r3, [r0, #0]
 800b360:	681b      	ldr	r3, [r3, #0]
 800b362:	4798      	blx	r3
 800b364:	b948      	cbnz	r0, 800b37a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b366:	7a63      	ldrb	r3, [r4, #9]
 800b368:	b13b      	cbz	r3, 800b37a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b36a:	7a23      	ldrb	r3, [r4, #8]
 800b36c:	b92b      	cbnz	r3, 800b37a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b36e:	6823      	ldr	r3, [r4, #0]
 800b370:	4620      	mov	r0, r4
 800b372:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b374:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b378:	4718      	bx	r3
 800b37a:	bd10      	pop	{r4, pc}

0800b37c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b37c:	b570      	push	{r4, r5, r6, lr}
 800b37e:	4604      	mov	r4, r0
 800b380:	6840      	ldr	r0, [r0, #4]
 800b382:	6803      	ldr	r3, [r0, #0]
 800b384:	681b      	ldr	r3, [r3, #0]
 800b386:	4798      	blx	r3
 800b388:	4605      	mov	r5, r0
 800b38a:	b930      	cbnz	r0, 800b39a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b38c:	7a23      	ldrb	r3, [r4, #8]
 800b38e:	b123      	cbz	r3, 800b39a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b390:	6860      	ldr	r0, [r4, #4]
 800b392:	6803      	ldr	r3, [r0, #0]
 800b394:	695b      	ldr	r3, [r3, #20]
 800b396:	4798      	blx	r3
 800b398:	7225      	strb	r5, [r4, #8]
 800b39a:	6860      	ldr	r0, [r4, #4]
 800b39c:	6803      	ldr	r3, [r0, #0]
 800b39e:	681b      	ldr	r3, [r3, #0]
 800b3a0:	4798      	blx	r3
 800b3a2:	b928      	cbnz	r0, 800b3b0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b3a4:	6823      	ldr	r3, [r4, #0]
 800b3a6:	4620      	mov	r0, r4
 800b3a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b3aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b3ae:	4718      	bx	r3
 800b3b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b3b4:	f7f5 bc06 	b.w	8000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b3b8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b3b8:	b510      	push	{r4, lr}
 800b3ba:	4c04      	ldr	r4, [pc, #16]	@ (800b3cc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b3bc:	6082      	str	r2, [r0, #8]
 800b3be:	2200      	movs	r2, #0
 800b3c0:	e9c0 4100 	strd	r4, r1, [r0]
 800b3c4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b3c8:	bd10      	pop	{r4, pc}
 800b3ca:	bf00      	nop
 800b3cc:	08024f18 	.word	0x08024f18

0800b3d0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b3d0:	6840      	ldr	r0, [r0, #4]
 800b3d2:	6803      	ldr	r3, [r0, #0]
 800b3d4:	681b      	ldr	r3, [r3, #0]
 800b3d6:	4718      	bx	r3

0800b3d8 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800b3d8:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800b3dc:	4f20      	ldr	r7, [pc, #128]	@ (800b460 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800b3de:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800b3e2:	fb80 0101 	smull	r0, r1, r0, r1
 800b3e6:	fba0 bc07 	umull	fp, ip, r0, r7
 800b3ea:	fb07 cc01 	mla	ip, r7, r1, ip
 800b3ee:	fb0b f70c 	mul.w	r7, fp, ip
 800b3f2:	fbab 010b 	umull	r0, r1, fp, fp
 800b3f6:	461c      	mov	r4, r3
 800b3f8:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800b3fc:	fb00 f30c 	mul.w	r3, r0, ip
 800b400:	fb0b 3301 	mla	r3, fp, r1, r3
 800b404:	fba0 010b 	umull	r0, r1, r0, fp
 800b408:	4616      	mov	r6, r2
 800b40a:	4419      	add	r1, r3
 800b40c:	a312      	add	r3, pc, #72	@ (adr r3, 800b458 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800b40e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b412:	f7f4 ff45 	bl	80002a0 <__aeabi_ldivmod>
 800b416:	2ef7      	cmp	r6, #247	@ 0xf7
 800b418:	b290      	uxth	r0, r2
 800b41a:	bf9e      	ittt	ls
 800b41c:	f002 0207 	andls.w	r2, r2, #7
 800b420:	18b6      	addls	r6, r6, r2
 800b422:	b2f6      	uxtbls	r6, r6
 800b424:	2cfb      	cmp	r4, #251	@ 0xfb
 800b426:	bf9e      	ittt	ls
 800b428:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800b42c:	18e4      	addls	r4, r4, r3
 800b42e:	b2e4      	uxtbls	r4, r4
 800b430:	2df7      	cmp	r5, #247	@ 0xf7
 800b432:	bf9c      	itt	ls
 800b434:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800b438:	182d      	addls	r5, r5, r0
 800b43a:	480a      	ldr	r0, [pc, #40]	@ (800b464 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800b43c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800b440:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800b444:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800b448:	bf98      	it	ls
 800b44a:	b2ed      	uxtbls	r5, r5
 800b44c:	4304      	orrs	r4, r0
 800b44e:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800b452:	b280      	uxth	r0, r0
 800b454:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800b458:	797a8d77 	.word	0x797a8d77
 800b45c:	00000000 	.word	0x00000000
 800b460:	00ec4ba7 	.word	0x00ec4ba7
 800b464:	fffff800 	.word	0xfffff800

0800b468 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800b468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b46c:	ed2d 8b02 	vpush	{d8}
 800b470:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b474:	b087      	sub	sp, #28
 800b476:	7c41      	ldrb	r1, [r0, #17]
 800b478:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800b47c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800b480:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800b484:	4605      	mov	r5, r0
 800b486:	2900      	cmp	r1, #0
 800b488:	f000 809a 	beq.w	800b5c0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800b48c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b490:	ed90 7a08 	vldr	s14, [r0, #32]
 800b494:	68c0      	ldr	r0, [r0, #12]
 800b496:	454a      	cmp	r2, r9
 800b498:	db25      	blt.n	800b4e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800b49a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b49e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b4a2:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800b4a6:	bfc8      	it	gt
 800b4a8:	2200      	movgt	r2, #0
 800b4aa:	5882      	ldr	r2, [r0, r2]
 800b4ac:	2100      	movs	r1, #0
 800b4ae:	7c2d      	ldrb	r5, [r5, #16]
 800b4b0:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800b4b4:	0950      	lsrs	r0, r2, #5
 800b4b6:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800b4ba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800b4be:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800b4c2:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800b4c6:	2d00      	cmp	r5, #0
 800b4c8:	d044      	beq.n	800b554 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800b4ca:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b4ce:	d141      	bne.n	800b554 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800b4d0:	bb61      	cbnz	r1, 800b52c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800b4d2:	ea4e 0000 	orr.w	r0, lr, r0
 800b4d6:	ea4c 0500 	orr.w	r5, ip, r0
 800b4da:	42bc      	cmp	r4, r7
 800b4dc:	f080 8217 	bcs.w	800b90e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b4e0:	f824 5b02 	strh.w	r5, [r4], #2
 800b4e4:	e7f9      	b.n	800b4da <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800b4e6:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800b4ea:	454f      	cmp	r7, r9
 800b4ec:	dc08      	bgt.n	800b500 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800b4ee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b4f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b4f6:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800b4fa:	bfd8      	it	le
 800b4fc:	2200      	movle	r2, #0
 800b4fe:	e7d4      	b.n	800b4aa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800b500:	eba9 0202 	sub.w	r2, r9, r2
 800b504:	ee07 2a90 	vmov	s15, r2
 800b508:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b50c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b510:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b514:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b518:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b51c:	ee17 2a90 	vmov	r2, s15
 800b520:	bfd8      	it	le
 800b522:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800b526:	0092      	lsls	r2, r2, #2
 800b528:	5882      	ldr	r2, [r0, r2]
 800b52a:	e7c0      	b.n	800b4ae <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800b52c:	b2d5      	uxtb	r5, r2
 800b52e:	fa5f f888 	uxtb.w	r8, r8
 800b532:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800b536:	461e      	mov	r6, r3
 800b538:	42bc      	cmp	r4, r7
 800b53a:	f080 81e8 	bcs.w	800b90e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b53e:	4630      	mov	r0, r6
 800b540:	9500      	str	r5, [sp, #0]
 800b542:	4643      	mov	r3, r8
 800b544:	4652      	mov	r2, sl
 800b546:	4649      	mov	r1, r9
 800b548:	f7ff ff46 	bl	800b3d8 <_ZN8touchgfxL10applyNoiseEiihhh>
 800b54c:	3601      	adds	r6, #1
 800b54e:	f824 0b02 	strh.w	r0, [r4], #2
 800b552:	e7f1      	b.n	800b538 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800b554:	0e12      	lsrs	r2, r2, #24
 800b556:	fb02 f20a 	mul.w	r2, r2, sl
 800b55a:	1c53      	adds	r3, r2, #1
 800b55c:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800b560:	1212      	asrs	r2, r2, #8
 800b562:	fb02 f50c 	mul.w	r5, r2, ip
 800b566:	fb02 f10e 	mul.w	r1, r2, lr
 800b56a:	4350      	muls	r0, r2
 800b56c:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800b920 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b570:	43d2      	mvns	r2, r2
 800b572:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b576:	26ff      	movs	r6, #255	@ 0xff
 800b578:	42bc      	cmp	r4, r7
 800b57a:	f080 81c8 	bcs.w	800b90e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b57e:	f8b4 e000 	ldrh.w	lr, [r4]
 800b582:	ea0e 030c 	and.w	r3, lr, ip
 800b586:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800b58a:	fb02 1303 	mla	r3, r2, r3, r1
 800b58e:	fb02 0808 	mla	r8, r2, r8, r0
 800b592:	fb93 f3f6 	sdiv	r3, r3, r6
 800b596:	fb98 f8f6 	sdiv	r8, r8, r6
 800b59a:	ea03 030c 	and.w	r3, r3, ip
 800b59e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800b5a2:	f00e 0e1f 	and.w	lr, lr, #31
 800b5a6:	ea43 0308 	orr.w	r3, r3, r8
 800b5aa:	fb02 5e0e 	mla	lr, r2, lr, r5
 800b5ae:	fb9e fef6 	sdiv	lr, lr, r6
 800b5b2:	f00e 0e1f 	and.w	lr, lr, #31
 800b5b6:	ea43 030e 	orr.w	r3, r3, lr
 800b5ba:	f824 3b02 	strh.w	r3, [r4], #2
 800b5be:	e7db      	b.n	800b578 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800b5c0:	7c82      	ldrb	r2, [r0, #18]
 800b5c2:	2a00      	cmp	r2, #0
 800b5c4:	d04f      	beq.n	800b666 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800b5c6:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b5ca:	ee07 2a90 	vmov	s15, r2
 800b5ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b5d2:	ee07 3a10 	vmov	s14, r3
 800b5d6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800b5da:	461f      	mov	r7, r3
 800b5dc:	eef4 6ae7 	vcmpe.f32	s13, s15
 800b5e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5e4:	f200 8095 	bhi.w	800b712 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800b5e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b5ec:	ee37 7a87 	vadd.f32	s14, s15, s14
 800b5f0:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800b5f4:	ee37 7a66 	vsub.f32	s14, s14, s13
 800b5f8:	ee06 6a90 	vmov	s13, r6
 800b5fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800b600:	68ea      	ldr	r2, [r5, #12]
 800b602:	f895 c010 	ldrb.w	ip, [r5, #16]
 800b606:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800b60a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b60e:	bf4a      	itet	mi
 800b610:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800b614:	9602      	strpl	r6, [sp, #8]
 800b616:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800b61a:	ed95 7a08 	vldr	s14, [r5, #32]
 800b61e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b622:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b626:	bfc8      	it	gt
 800b628:	2100      	movgt	r1, #0
 800b62a:	5852      	ldr	r2, [r2, r1]
 800b62c:	9902      	ldr	r1, [sp, #8]
 800b62e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800b632:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800b636:	0950      	lsrs	r0, r2, #5
 800b638:	9103      	str	r1, [sp, #12]
 800b63a:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800b63e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800b642:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800b646:	f1bc 0f00 	cmp.w	ip, #0
 800b64a:	d024      	beq.n	800b696 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800b64c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b650:	d121      	bne.n	800b696 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800b652:	ea4b 0b00 	orr.w	fp, fp, r0
 800b656:	ea41 010b 	orr.w	r1, r1, fp
 800b65a:	9a03      	ldr	r2, [sp, #12]
 800b65c:	4294      	cmp	r4, r2
 800b65e:	d255      	bcs.n	800b70c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800b660:	f824 1b02 	strh.w	r1, [r4], #2
 800b664:	e7f9      	b.n	800b65a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800b666:	ee07 9a10 	vmov	s14, r9
 800b66a:	edd0 7a06 	vldr	s15, [r0, #24]
 800b66e:	edd0 6a05 	vldr	s13, [r0, #20]
 800b672:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b676:	ee37 7a67 	vsub.f32	s14, s14, s15
 800b67a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800b67e:	ed90 7a08 	vldr	s14, [r0, #32]
 800b682:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b686:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b68a:	bf44      	itt	mi
 800b68c:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800b690:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800b694:	e79d      	b.n	800b5d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800b696:	0e12      	lsrs	r2, r2, #24
 800b698:	fb02 f20a 	mul.w	r2, r2, sl
 800b69c:	f102 0c01 	add.w	ip, r2, #1
 800b6a0:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800b6a4:	1212      	asrs	r2, r2, #8
 800b6a6:	4350      	muls	r0, r2
 800b6a8:	4351      	muls	r1, r2
 800b6aa:	fb02 fb0b 	mul.w	fp, r2, fp
 800b6ae:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800b920 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b6b2:	9004      	str	r0, [sp, #16]
 800b6b4:	43d2      	mvns	r2, r2
 800b6b6:	9105      	str	r1, [sp, #20]
 800b6b8:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b6bc:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800b6c0:	9903      	ldr	r1, [sp, #12]
 800b6c2:	428c      	cmp	r4, r1
 800b6c4:	d222      	bcs.n	800b70c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800b6c6:	8820      	ldrh	r0, [r4, #0]
 800b6c8:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800b6cc:	460f      	mov	r7, r1
 800b6ce:	9904      	ldr	r1, [sp, #16]
 800b6d0:	ea00 0c08 	and.w	ip, r0, r8
 800b6d4:	fb02 bc0c 	mla	ip, r2, ip, fp
 800b6d8:	fb02 1107 	mla	r1, r2, r7, r1
 800b6dc:	fb9c fcfe 	sdiv	ip, ip, lr
 800b6e0:	fb91 f1fe 	sdiv	r1, r1, lr
 800b6e4:	ea0c 0c08 	and.w	ip, ip, r8
 800b6e8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800b6ec:	ea4c 0101 	orr.w	r1, ip, r1
 800b6f0:	f000 0c1f 	and.w	ip, r0, #31
 800b6f4:	9805      	ldr	r0, [sp, #20]
 800b6f6:	fb02 0c0c 	mla	ip, r2, ip, r0
 800b6fa:	fb9c fcfe 	sdiv	ip, ip, lr
 800b6fe:	f00c 0c1f 	and.w	ip, ip, #31
 800b702:	ea41 010c 	orr.w	r1, r1, ip
 800b706:	f824 1b02 	strh.w	r1, [r4], #2
 800b70a:	e7d9      	b.n	800b6c0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800b70c:	9a02      	ldr	r2, [sp, #8]
 800b70e:	441a      	add	r2, r3
 800b710:	4617      	mov	r7, r2
 800b712:	441e      	add	r6, r3
 800b714:	b236      	sxth	r6, r6
 800b716:	42be      	cmp	r6, r7
 800b718:	f340 80f9 	ble.w	800b90e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b71c:	ed95 7a07 	vldr	s14, [r5, #28]
 800b720:	ee06 7a90 	vmov	s13, r7
 800b724:	ee37 7a87 	vadd.f32	s14, s15, s14
 800b728:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800b72c:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800b730:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b734:	f340 80b5 	ble.w	800b8a2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800b738:	ee06 6a10 	vmov	s12, r6
 800b73c:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800b740:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800b918 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800b744:	7c2b      	ldrb	r3, [r5, #16]
 800b746:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800b74a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b74e:	bfd8      	it	le
 800b750:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800b754:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800b91c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800b758:	bfd8      	it	le
 800b75a:	ee17 8a10 	vmovle	r8, s14
 800b75e:	ed95 7a08 	vldr	s14, [r5, #32]
 800b762:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b766:	bfc8      	it	gt
 800b768:	46b0      	movgt	r8, r6
 800b76a:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800b76e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b772:	eba8 0707 	sub.w	r7, r8, r7
 800b776:	bfd8      	it	le
 800b778:	eeb0 8a46 	vmovle.f32	s16, s12
 800b77c:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800b780:	eea7 8a27 	vfma.f32	s16, s14, s15
 800b784:	b1db      	cbz	r3, 800b7be <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800b786:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b78a:	d118      	bne.n	800b7be <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800b78c:	42bc      	cmp	r4, r7
 800b78e:	d262      	bcs.n	800b856 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800b790:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b794:	68eb      	ldr	r3, [r5, #12]
 800b796:	ee17 0a90 	vmov	r0, s15
 800b79a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800b79e:	b2d3      	uxtb	r3, r2
 800b7a0:	9300      	str	r3, [sp, #0]
 800b7a2:	4649      	mov	r1, r9
 800b7a4:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800b7a8:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800b7ac:	f7ff fe14 	bl	800b3d8 <_ZN8touchgfxL10applyNoiseEiihhh>
 800b7b0:	f824 0b02 	strh.w	r0, [r4], #2
 800b7b4:	edd5 7a08 	vldr	s15, [r5, #32]
 800b7b8:	ee38 8a27 	vadd.f32	s16, s16, s15
 800b7bc:	e7e6      	b.n	800b78c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800b7be:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800b920 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b7c2:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800b7c6:	42bc      	cmp	r4, r7
 800b7c8:	d245      	bcs.n	800b856 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800b7ca:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b7ce:	68eb      	ldr	r3, [r5, #12]
 800b7d0:	f8b4 e000 	ldrh.w	lr, [r4]
 800b7d4:	ee17 2a90 	vmov	r2, s15
 800b7d8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800b7dc:	0e13      	lsrs	r3, r2, #24
 800b7de:	fb03 f30a 	mul.w	r3, r3, sl
 800b7e2:	1c58      	adds	r0, r3, #1
 800b7e4:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800b7e8:	1200      	asrs	r0, r0, #8
 800b7ea:	ea6f 0c00 	mvn.w	ip, r0
 800b7ee:	fa5f fc8c 	uxtb.w	ip, ip
 800b7f2:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800b7f6:	ea0e 030b 	and.w	r3, lr, fp
 800b7fa:	fb0c f303 	mul.w	r3, ip, r3
 800b7fe:	b289      	uxth	r1, r1
 800b800:	fb00 3101 	mla	r1, r0, r1, r3
 800b804:	fb91 f1f9 	sdiv	r1, r1, r9
 800b808:	ea01 030b 	and.w	r3, r1, fp
 800b80c:	9302      	str	r3, [sp, #8]
 800b80e:	0953      	lsrs	r3, r2, #5
 800b810:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b814:	4619      	mov	r1, r3
 800b816:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800b81a:	fb0c f303 	mul.w	r3, ip, r3
 800b81e:	fb00 3301 	mla	r3, r0, r1, r3
 800b822:	f00e 0e1f 	and.w	lr, lr, #31
 800b826:	9902      	ldr	r1, [sp, #8]
 800b828:	fb93 f3f9 	sdiv	r3, r3, r9
 800b82c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800b830:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b834:	fb0c fc0e 	mul.w	ip, ip, lr
 800b838:	4319      	orrs	r1, r3
 800b83a:	fb00 c002 	mla	r0, r0, r2, ip
 800b83e:	fb90 f0f9 	sdiv	r0, r0, r9
 800b842:	f000 001f 	and.w	r0, r0, #31
 800b846:	4301      	orrs	r1, r0
 800b848:	f824 1b02 	strh.w	r1, [r4], #2
 800b84c:	edd5 7a08 	vldr	s15, [r5, #32]
 800b850:	ee38 8a27 	vadd.f32	s16, s16, s15
 800b854:	e7b7      	b.n	800b7c6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800b856:	4546      	cmp	r6, r8
 800b858:	dd59      	ble.n	800b90e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b85a:	edd5 7a08 	vldr	s15, [r5, #32]
 800b85e:	68ea      	ldr	r2, [r5, #12]
 800b860:	7c29      	ldrb	r1, [r5, #16]
 800b862:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b86a:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800b86e:	bfd8      	it	le
 800b870:	2300      	movle	r3, #0
 800b872:	eba6 0608 	sub.w	r6, r6, r8
 800b876:	58d2      	ldr	r2, [r2, r3]
 800b878:	0a10      	lsrs	r0, r2, #8
 800b87a:	0953      	lsrs	r3, r2, #5
 800b87c:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800b880:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800b884:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b888:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800b88c:	b159      	cbz	r1, 800b8a6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800b88e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b892:	d108      	bne.n	800b8a6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800b894:	4318      	orrs	r0, r3
 800b896:	4338      	orrs	r0, r7
 800b898:	42b4      	cmp	r4, r6
 800b89a:	d238      	bcs.n	800b90e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b89c:	f824 0b02 	strh.w	r0, [r4], #2
 800b8a0:	e7fa      	b.n	800b898 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800b8a2:	46b8      	mov	r8, r7
 800b8a4:	e7d9      	b.n	800b85a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800b8a6:	0e12      	lsrs	r2, r2, #24
 800b8a8:	fb02 f10a 	mul.w	r1, r2, sl
 800b8ac:	1c4a      	adds	r2, r1, #1
 800b8ae:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800b8b2:	1212      	asrs	r2, r2, #8
 800b8b4:	fb02 f507 	mul.w	r5, r2, r7
 800b8b8:	4350      	muls	r0, r2
 800b8ba:	4353      	muls	r3, r2
 800b8bc:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800b920 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b8c0:	43d2      	mvns	r2, r2
 800b8c2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b8c6:	27ff      	movs	r7, #255	@ 0xff
 800b8c8:	42b4      	cmp	r4, r6
 800b8ca:	d220      	bcs.n	800b90e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b8cc:	f8b4 e000 	ldrh.w	lr, [r4]
 800b8d0:	ea0e 010c 	and.w	r1, lr, ip
 800b8d4:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800b8d8:	fb02 0101 	mla	r1, r2, r1, r0
 800b8dc:	fb02 3808 	mla	r8, r2, r8, r3
 800b8e0:	fb91 f1f7 	sdiv	r1, r1, r7
 800b8e4:	fb98 f8f7 	sdiv	r8, r8, r7
 800b8e8:	ea01 010c 	and.w	r1, r1, ip
 800b8ec:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800b8f0:	f00e 0e1f 	and.w	lr, lr, #31
 800b8f4:	ea41 0108 	orr.w	r1, r1, r8
 800b8f8:	fb02 5e0e 	mla	lr, r2, lr, r5
 800b8fc:	fb9e fef7 	sdiv	lr, lr, r7
 800b900:	f00e 0e1f 	and.w	lr, lr, #31
 800b904:	ea41 010e 	orr.w	r1, r1, lr
 800b908:	f824 1b02 	strh.w	r1, [r4], #2
 800b90c:	e7dc      	b.n	800b8c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800b90e:	b007      	add	sp, #28
 800b910:	ecbd 8b02 	vpop	{d8}
 800b914:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b918:	00000000 	.word	0x00000000
 800b91c:	447ffffe 	.word	0x447ffffe
 800b920:	fffff800 	.word	0xfffff800

0800b924 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800b924:	4770      	bx	lr

0800b926 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800b926:	4770      	bx	lr

0800b928 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800b928:	b510      	push	{r4, lr}
 800b92a:	2124      	movs	r1, #36	@ 0x24
 800b92c:	4604      	mov	r4, r0
 800b92e:	f016 f898 	bl	8021a62 <_ZdlPvj>
 800b932:	4620      	mov	r0, r4
 800b934:	bd10      	pop	{r4, pc}
	...

0800b938 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b938:	4b06      	ldr	r3, [pc, #24]	@ (800b954 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800b93a:	60c1      	str	r1, [r0, #12]
 800b93c:	094a      	lsrs	r2, r1, #5
 800b93e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800b942:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800b946:	4313      	orrs	r3, r2
 800b948:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800b94c:	4319      	orrs	r1, r3
 800b94e:	8201      	strh	r1, [r0, #16]
 800b950:	4770      	bx	lr
 800b952:	bf00      	nop
 800b954:	fffff800 	.word	0xfffff800

0800b958 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b958:	f1a0 0008 	sub.w	r0, r0, #8
 800b95c:	e7ec      	b.n	800b938 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800b95e:	bf00      	nop

0800b960 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800b960:	b508      	push	{r3, lr}
 800b962:	4b05      	ldr	r3, [pc, #20]	@ (800b978 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800b964:	6818      	ldr	r0, [r3, #0]
 800b966:	6803      	ldr	r3, [r0, #0]
 800b968:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b96c:	4798      	blx	r3
 800b96e:	1e43      	subs	r3, r0, #1
 800b970:	4258      	negs	r0, r3
 800b972:	4158      	adcs	r0, r3
 800b974:	bd08      	pop	{r3, pc}
 800b976:	bf00      	nop
 800b978:	20013ffc 	.word	0x20013ffc

0800b97c <_ZN8touchgfx13PainterRGB565D1Ev>:
 800b97c:	4770      	bx	lr

0800b97e <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800b97e:	3808      	subs	r0, #8
 800b980:	4770      	bx	lr

0800b982 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800b982:	b430      	push	{r4, r5}
 800b984:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b988:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800b98c:	8a02      	ldrh	r2, [r0, #16]
 800b98e:	9202      	str	r2, [sp, #8]
 800b990:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800b994:	68c2      	ldr	r2, [r0, #12]
 800b996:	4629      	mov	r1, r5
 800b998:	4620      	mov	r0, r4
 800b99a:	bc30      	pop	{r4, r5}
 800b99c:	f7f5 bada 	b.w	8000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800b9a0 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800b9a0:	f7f5 bacc 	b.w	8000f3c <_ZN8touchgfx5paint8tearDownEv>

0800b9a4 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800b9a4:	b510      	push	{r4, lr}
 800b9a6:	2114      	movs	r1, #20
 800b9a8:	4604      	mov	r4, r0
 800b9aa:	f016 f85a 	bl	8021a62 <_ZdlPvj>
 800b9ae:	4620      	mov	r0, r4
 800b9b0:	bd10      	pop	{r4, pc}

0800b9b2 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800b9b2:	f1a0 0008 	sub.w	r0, r0, #8
 800b9b6:	e7f5      	b.n	800b9a4 <_ZN8touchgfx13PainterRGB565D0Ev>

0800b9b8 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800b9b8:	2300      	movs	r3, #0
 800b9ba:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800b9bc:	8503      	strh	r3, [r0, #40]	@ 0x28
 800b9be:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800b9c0:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800b9c2:	6980      	ldr	r0, [r0, #24]
 800b9c4:	b110      	cbz	r0, 800b9cc <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800b9c6:	6803      	ldr	r3, [r0, #0]
 800b9c8:	691b      	ldr	r3, [r3, #16]
 800b9ca:	4718      	bx	r3
 800b9cc:	4770      	bx	lr

0800b9ce <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800b9ce:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800b9d2:	4770      	bx	lr

0800b9d4 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800b9d4:	b538      	push	{r3, r4, r5, lr}
 800b9d6:	0e0b      	lsrs	r3, r1, #24
 800b9d8:	7783      	strb	r3, [r0, #30]
 800b9da:	6803      	ldr	r3, [r0, #0]
 800b9dc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b9de:	4604      	mov	r4, r0
 800b9e0:	460d      	mov	r5, r1
 800b9e2:	4798      	blx	r3
 800b9e4:	6803      	ldr	r3, [r0, #0]
 800b9e6:	4629      	mov	r1, r5
 800b9e8:	689b      	ldr	r3, [r3, #8]
 800b9ea:	4798      	blx	r3
 800b9ec:	6823      	ldr	r3, [r4, #0]
 800b9ee:	4620      	mov	r0, r4
 800b9f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b9f2:	4798      	blx	r3
 800b9f4:	61a0      	str	r0, [r4, #24]
 800b9f6:	bd38      	pop	{r3, r4, r5, pc}

0800b9f8 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800b9f8:	7741      	strb	r1, [r0, #29]
 800b9fa:	4770      	bx	lr

0800b9fc <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800b9fc:	b530      	push	{r4, r5, lr}
 800b9fe:	460d      	mov	r5, r1
 800ba00:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800ba04:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ba06:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ba08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ba0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ba0c:	682b      	ldr	r3, [r5, #0]
 800ba0e:	6023      	str	r3, [r4, #0]
 800ba10:	bd30      	pop	{r4, r5, pc}

0800ba12 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800ba12:	b538      	push	{r3, r4, r5, lr}
 800ba14:	4604      	mov	r4, r0
 800ba16:	1d03      	adds	r3, r0, #4
 800ba18:	6808      	ldr	r0, [r1, #0]
 800ba1a:	6849      	ldr	r1, [r1, #4]
 800ba1c:	c303      	stmia	r3!, {r0, r1}
 800ba1e:	6813      	ldr	r3, [r2, #0]
 800ba20:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800ba24:	6853      	ldr	r3, [r2, #4]
 800ba26:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800ba2a:	2500      	movs	r5, #0
 800ba2c:	61a5      	str	r5, [r4, #24]
 800ba2e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800ba32:	f005 fac1 	bl	8010fb8 <_ZN8touchgfx9Matrix3x35resetEv>
 800ba36:	23ff      	movs	r3, #255	@ 0xff
 800ba38:	7763      	strb	r3, [r4, #29]
 800ba3a:	77a3      	strb	r3, [r4, #30]
 800ba3c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800ba40:	6323      	str	r3, [r4, #48]	@ 0x30
 800ba42:	2301      	movs	r3, #1
 800ba44:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800ba48:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800ba4c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800ba50 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800ba50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba54:	ed2d 8b0a 	vpush	{d8-d12}
 800ba58:	ee70 7a41 	vsub.f32	s15, s0, s2
 800ba5c:	b087      	sub	sp, #28
 800ba5e:	eef5 7a40 	vcmp.f32	s15, #0.0
 800ba62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ba66:	4605      	mov	r5, r0
 800ba68:	eef0 9a40 	vmov.f32	s19, s0
 800ba6c:	eeb0 aa60 	vmov.f32	s20, s1
 800ba70:	eeb0 9a41 	vmov.f32	s18, s2
 800ba74:	eef0 8a61 	vmov.f32	s17, s3
 800ba78:	eeb0 ca42 	vmov.f32	s24, s4
 800ba7c:	eef0 ca62 	vmov.f32	s25, s5
 800ba80:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800ba84:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800ba86:	6802      	ldr	r2, [r0, #0]
 800ba88:	d112      	bne.n	800bab0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800ba8a:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800ba8e:	eef5 7a40 	vcmp.f32	s15, #0.0
 800ba92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ba96:	d10b      	bne.n	800bab0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800ba98:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800ba9c:	3901      	subs	r1, #1
 800ba9e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800baa0:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800baa4:	b007      	add	sp, #28
 800baa6:	ecbd 8b0a 	vpop	{d8-d12}
 800baaa:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800baae:	4710      	bx	r2
 800bab0:	23ff      	movs	r3, #255	@ 0xff
 800bab2:	77ab      	strb	r3, [r5, #30]
 800bab4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800bab6:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800bd7c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800baba:	4628      	mov	r0, r5
 800babc:	4798      	blx	r3
 800babe:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800bac2:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800bac6:	80c3      	strh	r3, [r0, #6]
 800bac8:	eef0 0a4a 	vmov.f32	s1, s20
 800bacc:	eeb0 0a69 	vmov.f32	s0, s19
 800bad0:	4604      	mov	r4, r0
 800bad2:	4640      	mov	r0, r8
 800bad4:	f005 fb1f 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bad8:	4640      	mov	r0, r8
 800bada:	eeb0 ba40 	vmov.f32	s22, s0
 800bade:	eef0 ba60 	vmov.f32	s23, s1
 800bae2:	ed8d 0a00 	vstr	s0, [sp]
 800bae6:	edcd 0a01 	vstr	s1, [sp, #4]
 800baea:	eeb0 0a49 	vmov.f32	s0, s18
 800baee:	eef0 0a68 	vmov.f32	s1, s17
 800baf2:	f005 fb10 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800baf6:	eeb4 ba40 	vcmp.f32	s22, s0
 800bafa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bafe:	eef4 ba60 	vcmp.f32	s23, s1
 800bb02:	bf0c      	ite	eq
 800bb04:	2301      	moveq	r3, #1
 800bb06:	2300      	movne	r3, #0
 800bb08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb0c:	eeb4 ba40 	vcmp.f32	s22, s0
 800bb10:	7463      	strb	r3, [r4, #17]
 800bb12:	bf0c      	ite	eq
 800bb14:	2301      	moveq	r3, #1
 800bb16:	2300      	movne	r3, #0
 800bb18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb1c:	eeb0 8a40 	vmov.f32	s16, s0
 800bb20:	eef0 aa60 	vmov.f32	s21, s1
 800bb24:	ed8d 0a02 	vstr	s0, [sp, #8]
 800bb28:	edcd 0a03 	vstr	s1, [sp, #12]
 800bb2c:	74a3      	strb	r3, [r4, #18]
 800bb2e:	d030      	beq.n	800bb92 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bb30:	eef4 ba60 	vcmp.f32	s23, s1
 800bb34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb38:	d02b      	beq.n	800bb92 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bb3a:	ee39 9a69 	vsub.f32	s18, s18, s19
 800bb3e:	ee78 8aca 	vsub.f32	s17, s17, s20
 800bb42:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800bb46:	4640      	mov	r0, r8
 800bb48:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800bb4c:	eef0 0a4a 	vmov.f32	s1, s20
 800bb50:	eeb0 0a69 	vmov.f32	s0, s19
 800bb54:	eea7 0acc 	vfms.f32	s0, s15, s24
 800bb58:	eeec 0a87 	vfma.f32	s1, s25, s14
 800bb5c:	f005 fadb 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bb60:	f899 3000 	ldrb.w	r3, [r9]
 800bb64:	edcd 0a05 	vstr	s1, [sp, #20]
 800bb68:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800bb6c:	2b01      	cmp	r3, #1
 800bb6e:	ed8d 0a04 	vstr	s0, [sp, #16]
 800bb72:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800bb76:	bf02      	ittt	eq
 800bb78:	eef1 7a60 	vnegeq.f32	s15, s1
 800bb7c:	eef0 0a40 	vmoveq.f32	s1, s0
 800bb80:	eeb0 0a67 	vmoveq.f32	s0, s15
 800bb84:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800bb88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb8c:	d134      	bne.n	800bbf8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800bb8e:	2301      	movs	r3, #1
 800bb90:	74a3      	strb	r3, [r4, #18]
 800bb92:	f899 2000 	ldrb.w	r2, [r9]
 800bb96:	7c63      	ldrb	r3, [r4, #17]
 800bb98:	2a01      	cmp	r2, #1
 800bb9a:	f040 80a3 	bne.w	800bce4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800bb9e:	2b00      	cmp	r3, #0
 800bba0:	d072      	beq.n	800bc88 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800bba2:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800bba6:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800bd74 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bbaa:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bbae:	eef4 baea 	vcmpe.f32	s23, s21
 800bbb2:	edc4 7a08 	vstr	s15, [r4, #32]
 800bbb6:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800bbba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbbe:	ee17 3a90 	vmov	r3, s15
 800bbc2:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800bbc6:	b21a      	sxth	r2, r3
 800bbc8:	ee17 3a90 	vmov	r3, s15
 800bbcc:	b21b      	sxth	r3, r3
 800bbce:	bf47      	ittee	mi
 800bbd0:	8123      	strhmi	r3, [r4, #8]
 800bbd2:	8162      	strhmi	r2, [r4, #10]
 800bbd4:	8122      	strhpl	r2, [r4, #8]
 800bbd6:	8163      	strhpl	r3, [r4, #10]
 800bbd8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bbdc:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bbe0:	1a9b      	subs	r3, r3, r2
 800bbe2:	ee07 3a90 	vmov	s15, r3
 800bbe6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bbea:	2300      	movs	r3, #0
 800bbec:	7463      	strb	r3, [r4, #17]
 800bbee:	edc4 7a07 	vstr	s15, [r4, #28]
 800bbf2:	2301      	movs	r3, #1
 800bbf4:	74a3      	strb	r3, [r4, #18]
 800bbf6:	e03f      	b.n	800bc78 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bbf8:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800bbfc:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800bc00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc04:	ed84 7a05 	vstr	s14, [r4, #20]
 800bc08:	d102      	bne.n	800bc10 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800bc0a:	2301      	movs	r3, #1
 800bc0c:	7463      	strb	r3, [r4, #17]
 800bc0e:	e7c0      	b.n	800bb92 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bc10:	2b01      	cmp	r3, #1
 800bc12:	bf03      	ittte	eq
 800bc14:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800bc18:	ee07 2a90 	vmoveq	s15, r2
 800bc1c:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800bc20:	eef0 7a6b 	vmovne.f32	s15, s23
 800bc24:	bf0a      	itet	eq
 800bc26:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800bc2a:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800bc2e:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800bc32:	2b01      	cmp	r3, #1
 800bc34:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800bc38:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800bc3c:	edc4 7a06 	vstr	s15, [r4, #24]
 800bc40:	bf02      	ittt	eq
 800bc42:	eef1 7a48 	vnegeq.f32	s15, s16
 800bc46:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800bc4a:	eef0 aa67 	vmoveq.f32	s21, s15
 800bc4e:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800bc52:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800bd78 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800bc56:	ee38 8a67 	vsub.f32	s16, s16, s15
 800bc5a:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800bc5e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800bc62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc66:	ed84 8a07 	vstr	s16, [r4, #28]
 800bc6a:	edc4 7a08 	vstr	s15, [r4, #32]
 800bc6e:	d503      	bpl.n	800bc78 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bc70:	eeb1 8a48 	vneg.f32	s16, s16
 800bc74:	ed84 8a07 	vstr	s16, [r4, #28]
 800bc78:	60e7      	str	r7, [r4, #12]
 800bc7a:	7426      	strb	r6, [r4, #16]
 800bc7c:	61ac      	str	r4, [r5, #24]
 800bc7e:	b007      	add	sp, #28
 800bc80:	ecbd 8b0a 	vpop	{d8-d12}
 800bc84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bc88:	7ca3      	ldrb	r3, [r4, #18]
 800bc8a:	2b00      	cmp	r3, #0
 800bc8c:	d0f4      	beq.n	800bc78 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bc8e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800bc92:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800bd74 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bc96:	ee00 3a10 	vmov	s0, r3
 800bc9a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800bc9e:	ee30 8a48 	vsub.f32	s16, s0, s16
 800bca2:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800bca6:	ee38 7a40 	vsub.f32	s14, s16, s0
 800bcaa:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800bcae:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bcb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcb6:	edc4 7a08 	vstr	s15, [r4, #32]
 800bcba:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800bcbe:	ee17 3a90 	vmov	r3, s15
 800bcc2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800bcc6:	b21a      	sxth	r2, r3
 800bcc8:	ee17 3a90 	vmov	r3, s15
 800bccc:	b21b      	sxth	r3, r3
 800bcce:	bfcc      	ite	gt
 800bcd0:	8123      	strhgt	r3, [r4, #8]
 800bcd2:	8163      	strhle	r3, [r4, #10]
 800bcd4:	f04f 0301 	mov.w	r3, #1
 800bcd8:	7463      	strb	r3, [r4, #17]
 800bcda:	bfcc      	ite	gt
 800bcdc:	8162      	strhgt	r2, [r4, #10]
 800bcde:	8122      	strhle	r2, [r4, #8]
 800bce0:	2300      	movs	r3, #0
 800bce2:	e787      	b.n	800bbf4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800bce4:	b1db      	cbz	r3, 800bd1e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800bce6:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800bcea:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800bd74 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bcee:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bcf2:	eef4 baea 	vcmpe.f32	s23, s21
 800bcf6:	edc4 7a08 	vstr	s15, [r4, #32]
 800bcfa:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800bcfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd02:	ee17 3a90 	vmov	r3, s15
 800bd06:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800bd0a:	b21a      	sxth	r2, r3
 800bd0c:	ee17 3a90 	vmov	r3, s15
 800bd10:	b21b      	sxth	r3, r3
 800bd12:	bf47      	ittee	mi
 800bd14:	8123      	strhmi	r3, [r4, #8]
 800bd16:	8162      	strhmi	r2, [r4, #10]
 800bd18:	8122      	strhpl	r2, [r4, #8]
 800bd1a:	8163      	strhpl	r3, [r4, #10]
 800bd1c:	e7ac      	b.n	800bc78 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bd1e:	7ca3      	ldrb	r3, [r4, #18]
 800bd20:	2b00      	cmp	r3, #0
 800bd22:	d0a9      	beq.n	800bc78 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bd24:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800bd28:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800bd74 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bd2c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bd30:	eeb4 bac8 	vcmpe.f32	s22, s16
 800bd34:	edc4 7a08 	vstr	s15, [r4, #32]
 800bd38:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800bd3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd40:	ee17 3a90 	vmov	r3, s15
 800bd44:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800bd48:	b21a      	sxth	r2, r3
 800bd4a:	ee17 3a90 	vmov	r3, s15
 800bd4e:	b21b      	sxth	r3, r3
 800bd50:	bf47      	ittee	mi
 800bd52:	8123      	strhmi	r3, [r4, #8]
 800bd54:	8162      	strhmi	r2, [r4, #10]
 800bd56:	8122      	strhpl	r2, [r4, #8]
 800bd58:	8163      	strhpl	r3, [r4, #10]
 800bd5a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bd5e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bd62:	1a9b      	subs	r3, r3, r2
 800bd64:	ee07 3a90 	vmov	s15, r3
 800bd68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bd6c:	edc4 7a07 	vstr	s15, [r4, #28]
 800bd70:	e782      	b.n	800bc78 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bd72:	bf00      	nop
 800bd74:	447ffffe 	.word	0x447ffffe
 800bd78:	44800000 	.word	0x44800000
 800bd7c:	20013ff2 	.word	0x20013ff2

0800bd80 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800bd80:	b510      	push	{r4, lr}
 800bd82:	2100      	movs	r1, #0
 800bd84:	ed2d 8b02 	vpush	{d8}
 800bd88:	eef0 8a62 	vmov.f32	s17, s5
 800bd8c:	4604      	mov	r4, r0
 800bd8e:	eeb0 8a42 	vmov.f32	s16, s4
 800bd92:	f015 fbf5 	bl	8021580 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800bd96:	eef0 7a68 	vmov.f32	s15, s17
 800bd9a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bd9e:	6823      	ldr	r3, [r4, #0]
 800bda0:	ee17 2a90 	vmov	r2, s15
 800bda4:	eef0 7a48 	vmov.f32	s15, s16
 800bda8:	ecbd 8b02 	vpop	{d8}
 800bdac:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bdb0:	4620      	mov	r0, r4
 800bdb2:	689b      	ldr	r3, [r3, #8]
 800bdb4:	ee17 1a90 	vmov	r1, s15
 800bdb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdbc:	4718      	bx	r3

0800bdbe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800bdbe:	b510      	push	{r4, lr}
 800bdc0:	2100      	movs	r1, #0
 800bdc2:	ed2d 8b02 	vpush	{d8}
 800bdc6:	eef0 8a63 	vmov.f32	s17, s7
 800bdca:	4604      	mov	r4, r0
 800bdcc:	eeb0 8a43 	vmov.f32	s16, s6
 800bdd0:	f015 fc98 	bl	8021704 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800bdd4:	eef0 7a68 	vmov.f32	s15, s17
 800bdd8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bddc:	6823      	ldr	r3, [r4, #0]
 800bdde:	ee17 2a90 	vmov	r2, s15
 800bde2:	eef0 7a48 	vmov.f32	s15, s16
 800bde6:	ecbd 8b02 	vpop	{d8}
 800bdea:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bdee:	4620      	mov	r0, r4
 800bdf0:	689b      	ldr	r3, [r3, #8]
 800bdf2:	ee17 1a90 	vmov	r1, s15
 800bdf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdfa:	4718      	bx	r3

0800bdfc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800bdfc:	b513      	push	{r0, r1, r4, lr}
 800bdfe:	4604      	mov	r4, r0
 800be00:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800be02:	f005 f988 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800be06:	eef0 7a60 	vmov.f32	s15, s1
 800be0a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be0e:	4620      	mov	r0, r4
 800be10:	ee17 2a90 	vmov	r2, s15
 800be14:	eef0 7a40 	vmov.f32	s15, s0
 800be18:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be1c:	ee17 1a90 	vmov	r1, s15
 800be20:	b002      	add	sp, #8
 800be22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be26:	f015 bb05 	b.w	8021434 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800be2a:	b513      	push	{r0, r1, r4, lr}
 800be2c:	4604      	mov	r4, r0
 800be2e:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800be30:	f005 f971 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800be34:	eef0 7a60 	vmov.f32	s15, s1
 800be38:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be3c:	4620      	mov	r0, r4
 800be3e:	ee17 2a90 	vmov	r2, s15
 800be42:	eef0 7a40 	vmov.f32	s15, s0
 800be46:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be4a:	ee17 1a90 	vmov	r1, s15
 800be4e:	b002      	add	sp, #8
 800be50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be54:	f015 bb3b 	b.w	80214ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800be58 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800be58:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be5a:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800be5e:	2400      	movs	r4, #0
 800be60:	9f07      	ldr	r7, [sp, #28]
 800be62:	4463      	add	r3, ip
 800be64:	4626      	mov	r6, r4
 800be66:	f04f 0e01 	mov.w	lr, #1
 800be6a:	4563      	cmp	r3, ip
 800be6c:	d02d      	beq.n	800beca <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800be6e:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800be72:	2d06      	cmp	r5, #6
 800be74:	d8f9      	bhi.n	800be6a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800be76:	fa0e f505 	lsl.w	r5, lr, r5
 800be7a:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800be7e:	d10d      	bne.n	800be9c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800be80:	f015 0f10 	tst.w	r5, #16
 800be84:	d117      	bne.n	800beb6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800be86:	072d      	lsls	r5, r5, #28
 800be88:	d5ef      	bpl.n	800be6a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800be8a:	3801      	subs	r0, #1
 800be8c:	b91e      	cbnz	r6, 800be96 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800be8e:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800be92:	682d      	ldr	r5, [r5, #0]
 800be94:	600d      	str	r5, [r1, #0]
 800be96:	b96c      	cbnz	r4, 800beb4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800be98:	2601      	movs	r6, #1
 800be9a:	e7e6      	b.n	800be6a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800be9c:	b926      	cbnz	r6, 800bea8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800be9e:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800bea2:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800bea6:	600b      	str	r3, [r1, #0]
 800bea8:	b924      	cbnz	r4, 800beb4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800beaa:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800beae:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800beb2:	6013      	str	r3, [r2, #0]
 800beb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800beb6:	3801      	subs	r0, #1
 800beb8:	b91c      	cbnz	r4, 800bec2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800beba:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800bebe:	6824      	ldr	r4, [r4, #0]
 800bec0:	6014      	str	r4, [r2, #0]
 800bec2:	2e00      	cmp	r6, #0
 800bec4:	d1f6      	bne.n	800beb4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800bec6:	2401      	movs	r4, #1
 800bec8:	e7cf      	b.n	800be6a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800beca:	b90e      	cbnz	r6, 800bed0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800becc:	2300      	movs	r3, #0
 800bece:	600b      	str	r3, [r1, #0]
 800bed0:	2c00      	cmp	r4, #0
 800bed2:	d1ef      	bne.n	800beb4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800bed4:	2300      	movs	r3, #0
 800bed6:	e7ec      	b.n	800beb2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800bed8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800bed8:	b538      	push	{r3, r4, r5, lr}
 800beda:	4604      	mov	r4, r0
 800bedc:	ed2d 8b0a 	vpush	{d8-d12}
 800bee0:	460d      	mov	r5, r1
 800bee2:	eef0 ba40 	vmov.f32	s23, s0
 800bee6:	eeb0 ca60 	vmov.f32	s24, s1
 800beea:	eef0 aa41 	vmov.f32	s21, s2
 800beee:	eeb0 ba61 	vmov.f32	s22, s3
 800bef2:	eeb0 9a42 	vmov.f32	s18, s4
 800bef6:	eef0 9a62 	vmov.f32	s19, s5
 800befa:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800befe:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800bf02:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800bf06:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800bf0a:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800bf0e:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800bf12:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800bf16:	ee20 0a00 	vmul.f32	s0, s0, s0
 800bf1a:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800bf1e:	f015 fdcb 	bl	8021ab8 <sqrtf>
 800bf22:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800bf26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf2a:	d12e      	bne.n	800bf8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800bf2c:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800bf30:	ee39 7acb 	vsub.f32	s14, s19, s22
 800bf34:	eeb0 8a6a 	vmov.f32	s16, s21
 800bf38:	eef0 8a4b 	vmov.f32	s17, s22
 800bf3c:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800bf40:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800bf44:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800bf48:	eee7 8aca 	vfms.f32	s17, s15, s20
 800bf4c:	2d02      	cmp	r5, #2
 800bf4e:	dc2f      	bgt.n	800bfb0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800bf50:	3501      	adds	r5, #1
 800bf52:	eef0 1a4b 	vmov.f32	s3, s22
 800bf56:	eeb0 1a6a 	vmov.f32	s2, s21
 800bf5a:	4629      	mov	r1, r5
 800bf5c:	eef0 2a68 	vmov.f32	s5, s17
 800bf60:	eeb0 2a48 	vmov.f32	s4, s16
 800bf64:	eef0 0a4c 	vmov.f32	s1, s24
 800bf68:	eeb0 0a6b 	vmov.f32	s0, s23
 800bf6c:	4620      	mov	r0, r4
 800bf6e:	f7ff ffb3 	bl	800bed8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800bf72:	eef0 0a68 	vmov.f32	s1, s17
 800bf76:	eeb0 0a48 	vmov.f32	s0, s16
 800bf7a:	4620      	mov	r0, r4
 800bf7c:	f7ff ff55 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bf80:	eeb0 ba68 	vmov.f32	s22, s17
 800bf84:	eef0 aa48 	vmov.f32	s21, s16
 800bf88:	e7b9      	b.n	800befe <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800bf8a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800bf8e:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800bf92:	ee78 8acc 	vsub.f32	s17, s17, s24
 800bf96:	ee28 7a27 	vmul.f32	s14, s16, s15
 800bf9a:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800bf9e:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800bfa2:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800bfa6:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800bfaa:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800bfae:	e7cd      	b.n	800bf4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800bfb0:	eef0 0a68 	vmov.f32	s1, s17
 800bfb4:	eeb0 0a48 	vmov.f32	s0, s16
 800bfb8:	4620      	mov	r0, r4
 800bfba:	f7ff ff36 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bfbe:	ecbd 8b0a 	vpop	{d8-d12}
 800bfc2:	bd38      	pop	{r3, r4, r5, pc}

0800bfc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800bfc4:	b510      	push	{r4, lr}
 800bfc6:	ed2d 8b0a 	vpush	{d8-d12}
 800bfca:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800bfce:	2b02      	cmp	r3, #2
 800bfd0:	4604      	mov	r4, r0
 800bfd2:	eeb0 ca40 	vmov.f32	s24, s0
 800bfd6:	eeb0 9a60 	vmov.f32	s18, s1
 800bfda:	eef0 9a41 	vmov.f32	s19, s2
 800bfde:	eef0 8a61 	vmov.f32	s17, s3
 800bfe2:	eeb0 ba42 	vmov.f32	s22, s4
 800bfe6:	eef0 ba62 	vmov.f32	s23, s5
 800bfea:	eeb0 aa43 	vmov.f32	s20, s6
 800bfee:	eef0 aa63 	vmov.f32	s21, s7
 800bff2:	eeb0 8a44 	vmov.f32	s16, s8
 800bff6:	eef0 ca64 	vmov.f32	s25, s9
 800bffa:	d12c      	bne.n	800c056 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800bffc:	eef0 0a62 	vmov.f32	s1, s5
 800c000:	eeb0 0a42 	vmov.f32	s0, s4
 800c004:	f7ff ff11 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c008:	ee79 9acb 	vsub.f32	s19, s19, s22
 800c00c:	ee7a caec 	vsub.f32	s25, s21, s25
 800c010:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800c014:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800c018:	ee69 9aac 	vmul.f32	s19, s19, s25
 800c01c:	ee28 8a88 	vmul.f32	s16, s17, s16
 800c020:	eef4 9ac8 	vcmpe.f32	s19, s16
 800c024:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c028:	db0f      	blt.n	800c04a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800c02a:	2101      	movs	r1, #1
 800c02c:	eef0 2a6a 	vmov.f32	s5, s21
 800c030:	eeb0 2a4a 	vmov.f32	s4, s20
 800c034:	eef0 1a6b 	vmov.f32	s3, s23
 800c038:	eeb0 1a4b 	vmov.f32	s2, s22
 800c03c:	eef0 0a49 	vmov.f32	s1, s18
 800c040:	eeb0 0a4c 	vmov.f32	s0, s24
 800c044:	4620      	mov	r0, r4
 800c046:	f7ff ff47 	bl	800bed8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800c04a:	eef0 0a6a 	vmov.f32	s1, s21
 800c04e:	eeb0 0a4a 	vmov.f32	s0, s20
 800c052:	4620      	mov	r0, r4
 800c054:	e035      	b.n	800c0c2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800c056:	2b01      	cmp	r3, #1
 800c058:	d138      	bne.n	800c0cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c05a:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800c05e:	ee33 6a48 	vsub.f32	s12, s6, s16
 800c062:	ee71 7a42 	vsub.f32	s15, s2, s4
 800c066:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800c06a:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800c06e:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800c072:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800c076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c07a:	d027      	beq.n	800c0cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c07c:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800c080:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800c084:	eea4 8a83 	vfma.f32	s16, s9, s6
 800c088:	eee1 8a22 	vfma.f32	s17, s2, s5
 800c08c:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800c090:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800c094:	eee6 7a28 	vfma.f32	s15, s12, s17
 800c098:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800c09c:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800c0a0:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800c0a4:	ee3c ca40 	vsub.f32	s24, s24, s0
 800c0a8:	ee39 9a60 	vsub.f32	s18, s18, s1
 800c0ac:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800c0b0:	ee29 9a09 	vmul.f32	s18, s18, s18
 800c0b4:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800c0b8:	eef4 7ac9 	vcmpe.f32	s15, s18
 800c0bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c0c0:	db04      	blt.n	800c0cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c0c2:	f7ff feb2 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c0c6:	ecbd 8b0a 	vpop	{d8-d12}
 800c0ca:	bd10      	pop	{r4, pc}
 800c0cc:	eef0 0a6b 	vmov.f32	s1, s23
 800c0d0:	eeb0 0a4b 	vmov.f32	s0, s22
 800c0d4:	4620      	mov	r0, r4
 800c0d6:	f7ff fea8 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c0da:	e7b6      	b.n	800c04a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800c0dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800c0dc:	b510      	push	{r4, lr}
 800c0de:	ed2d 8b0c 	vpush	{d8-d13}
 800c0e2:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800c0e6:	4604      	mov	r4, r0
 800c0e8:	eeb0 9a40 	vmov.f32	s18, s0
 800c0ec:	eef0 9a60 	vmov.f32	s19, s1
 800c0f0:	eef0 aa41 	vmov.f32	s21, s2
 800c0f4:	eeb0 ba61 	vmov.f32	s22, s3
 800c0f8:	b933      	cbnz	r3, 800c108 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800c0fa:	f7ff fe96 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c0fe:	eef0 0a4b 	vmov.f32	s1, s22
 800c102:	eeb0 0a6a 	vmov.f32	s0, s21
 800c106:	e015      	b.n	800c134 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800c108:	ee71 8a40 	vsub.f32	s17, s2, s0
 800c10c:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800c110:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800c114:	2b02      	cmp	r3, #2
 800c116:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800c11a:	ee28 8a27 	vmul.f32	s16, s16, s15
 800c11e:	d10f      	bne.n	800c140 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800c120:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800c124:	ee30 0a08 	vadd.f32	s0, s0, s16
 800c128:	f7ff fe7f 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c12c:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800c130:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800c134:	4620      	mov	r0, r4
 800c136:	f7ff fe78 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c13a:	ecbd 8b0c 	vpop	{d8-d13}
 800c13e:	bd10      	pop	{r4, pc}
 800c140:	f7ff fe73 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c144:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800c27c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800c148:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800c280 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800c14c:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800c284 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800c150:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800c288 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800c154:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800c28c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800c158:	eef0 0a69 	vmov.f32	s1, s19
 800c15c:	eeb0 0a49 	vmov.f32	s0, s18
 800c160:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c164:	4620      	mov	r0, r4
 800c166:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c16a:	eeb1 aa68 	vneg.f32	s20, s17
 800c16e:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800c172:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800c176:	f7ff fe58 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c17a:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800c290 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800c17e:	eef0 0a69 	vmov.f32	s1, s19
 800c182:	eeb0 0a49 	vmov.f32	s0, s18
 800c186:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c18a:	4620      	mov	r0, r4
 800c18c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c190:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800c194:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800c198:	f7ff fe47 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c19c:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800c294 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800c1a0:	eef0 0a69 	vmov.f32	s1, s19
 800c1a4:	eeb0 0a49 	vmov.f32	s0, s18
 800c1a8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c1ac:	4620      	mov	r0, r4
 800c1ae:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c1b2:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800c1b6:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800c1ba:	f7ff fe36 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c1be:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800c298 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800c1c2:	eef0 0a69 	vmov.f32	s1, s19
 800c1c6:	eeb0 0a49 	vmov.f32	s0, s18
 800c1ca:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c1ce:	4620      	mov	r0, r4
 800c1d0:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c1d4:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800c1d8:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800c1dc:	f7ff fe25 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c1e0:	ee79 0a88 	vadd.f32	s1, s19, s16
 800c1e4:	ee39 0a28 	vadd.f32	s0, s18, s17
 800c1e8:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800c1ec:	ee30 0a08 	vadd.f32	s0, s0, s16
 800c1f0:	4620      	mov	r0, r4
 800c1f2:	f7ff fe1a 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c1f6:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800c29c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800c1fa:	eef0 0a69 	vmov.f32	s1, s19
 800c1fe:	eeb0 0a49 	vmov.f32	s0, s18
 800c202:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c206:	4620      	mov	r0, r4
 800c208:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c20c:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800c210:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800c214:	f7ff fe09 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c218:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800c2a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800c21c:	eef0 0a69 	vmov.f32	s1, s19
 800c220:	eeb0 0a49 	vmov.f32	s0, s18
 800c224:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c228:	4620      	mov	r0, r4
 800c22a:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c22e:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800c232:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800c236:	f7ff fdf8 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c23a:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800c2a4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800c23e:	eef0 0a69 	vmov.f32	s1, s19
 800c242:	eeb0 0a49 	vmov.f32	s0, s18
 800c246:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c24a:	4620      	mov	r0, r4
 800c24c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c250:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800c254:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800c258:	f7ff fde7 	bl	800be2a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c25c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800c2a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800c260:	eef0 0a69 	vmov.f32	s1, s19
 800c264:	eeb0 0a49 	vmov.f32	s0, s18
 800c268:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c26c:	4620      	mov	r0, r4
 800c26e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c272:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800c276:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800c27a:	e73e      	b.n	800c0fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800c27c:	3d23d70a 	.word	0x3d23d70a
 800c280:	3e8f5c29 	.word	0x3e8f5c29
 800c284:	3f19999a 	.word	0x3f19999a
 800c288:	3f4ccccd 	.word	0x3f4ccccd
 800c28c:	3f75c28f 	.word	0x3f75c28f
 800c290:	3e4ccccd 	.word	0x3e4ccccd
 800c294:	3ecccccd 	.word	0x3ecccccd
 800c298:	3f3851ec 	.word	0x3f3851ec
 800c29c:	3fa3d70a 	.word	0x3fa3d70a
 800c2a0:	3fcccccd 	.word	0x3fcccccd
 800c2a4:	3fe66666 	.word	0x3fe66666
 800c2a8:	3ffae148 	.word	0x3ffae148

0800c2ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800c2ac:	b570      	push	{r4, r5, r6, lr}
 800c2ae:	ed2d 8b06 	vpush	{d8-d10}
 800c2b2:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800c2b6:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800c2ba:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800c2be:	ee30 9a49 	vsub.f32	s18, s0, s18
 800c2c2:	eef0 aa40 	vmov.f32	s21, s0
 800c2c6:	ee28 0a08 	vmul.f32	s0, s16, s16
 800c2ca:	4604      	mov	r4, r0
 800c2cc:	eea9 0a09 	vfma.f32	s0, s18, s18
 800c2d0:	eeb0 aa60 	vmov.f32	s20, s1
 800c2d4:	f015 fbf0 	bl	8021ab8 <sqrtf>
 800c2d8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800c2dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c2e0:	dd36      	ble.n	800c350 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800c2e2:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800c2e6:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800c2ea:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800c2ee:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800c2f2:	2600      	movs	r6, #0
 800c2f4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800c2f8:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800c2fc:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800c300:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800c304:	ee70 9a28 	vadd.f32	s19, s0, s17
 800c308:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800c30c:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800c310:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800c314:	b1fd      	cbz	r5, 800c356 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800c316:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800c31a:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800c31e:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800c322:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800c326:	eef0 0a49 	vmov.f32	s1, s18
 800c32a:	eeb0 0a69 	vmov.f32	s0, s19
 800c32e:	4620      	mov	r0, r4
 800c330:	f7ff fd64 	bl	800bdfc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800c334:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800c338:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800c33c:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800c340:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800c344:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800c348:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800c34c:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800c350:	ecbd 8b06 	vpop	{d8-d10}
 800c354:	bd70      	pop	{r4, r5, r6, pc}
 800c356:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800c35a:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800c35e:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800c362:	b16b      	cbz	r3, 800c380 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800c364:	eef0 1a49 	vmov.f32	s3, s18
 800c368:	eeb0 1a69 	vmov.f32	s2, s19
 800c36c:	eef0 0a62 	vmov.f32	s1, s5
 800c370:	eeb0 0a42 	vmov.f32	s0, s4
 800c374:	4620      	mov	r0, r4
 800c376:	f7ff feb1 	bl	800c0dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c37a:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800c37e:	e7db      	b.n	800c338 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800c380:	eef0 4a48 	vmov.f32	s9, s16
 800c384:	eeb0 4a68 	vmov.f32	s8, s17
 800c388:	eef0 3a49 	vmov.f32	s7, s18
 800c38c:	eeb0 3a69 	vmov.f32	s6, s19
 800c390:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800c394:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800c398:	4620      	mov	r0, r4
 800c39a:	f7ff fe13 	bl	800bfc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800c39e:	e7cb      	b.n	800c338 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800c3a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800c3a0:	ee07 2a90 	vmov	s15, r2
 800c3a4:	ee07 1a10 	vmov	s14, r1
 800c3a8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800c3ac:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800c3b0:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800c3c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800c3b4:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800c3b8:	ee20 0a27 	vmul.f32	s0, s0, s15
 800c3bc:	f7ff bf76 	b.w	800c2ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c3c0:	3d000000 	.word	0x3d000000

0800c3c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800c3c4:	b538      	push	{r3, r4, r5, lr}
 800c3c6:	ed2d 8b02 	vpush	{d8}
 800c3ca:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800c3ce:	4604      	mov	r4, r0
 800c3d0:	b31d      	cbz	r5, 800c41a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800c3d2:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800c3d6:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800c3da:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800c3de:	ee78 8a67 	vsub.f32	s17, s16, s15
 800c3e2:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c3e6:	eef0 0a68 	vmov.f32	s1, s17
 800c3ea:	f7ff fd07 	bl	800bdfc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800c3ee:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800c3f2:	eef0 1a48 	vmov.f32	s3, s16
 800c3f6:	eeb0 0a41 	vmov.f32	s0, s2
 800c3fa:	eef0 0a68 	vmov.f32	s1, s17
 800c3fe:	4620      	mov	r0, r4
 800c400:	f7ff fe6c 	bl	800c0dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c404:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800c408:	eef0 1a68 	vmov.f32	s3, s17
 800c40c:	eef0 0a48 	vmov.f32	s1, s16
 800c410:	eeb0 0a41 	vmov.f32	s0, s2
 800c414:	4620      	mov	r0, r4
 800c416:	f7ff fe61 	bl	800c0dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c41a:	ecbd 8b02 	vpop	{d8}
 800c41e:	4628      	mov	r0, r5
 800c420:	bd38      	pop	{r3, r4, r5, pc}

0800c422 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800c422:	b510      	push	{r4, lr}
 800c424:	ed2d 8b02 	vpush	{d8}
 800c428:	4604      	mov	r4, r0
 800c42a:	eeb0 8a40 	vmov.f32	s16, s0
 800c42e:	eef0 8a60 	vmov.f32	s17, s1
 800c432:	f7ff ffc7 	bl	800c3c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c436:	b9d0      	cbnz	r0, 800c46e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800c438:	4620      	mov	r0, r4
 800c43a:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800c43e:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800c442:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800c446:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800c44a:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800c44e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800c452:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800c456:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800c45a:	eef0 0a68 	vmov.f32	s1, s17
 800c45e:	eeb0 0a48 	vmov.f32	s0, s16
 800c462:	f7ff fdaf 	bl	800bfc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800c466:	2001      	movs	r0, #1
 800c468:	ecbd 8b02 	vpop	{d8}
 800c46c:	bd10      	pop	{r4, pc}
 800c46e:	2000      	movs	r0, #0
 800c470:	e7fa      	b.n	800c468 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800c472 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800c472:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800c476:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800c47a:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800c47e:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800c482:	f7ff be2b 	b.w	800c0dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800c488 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800c488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c48c:	b089      	sub	sp, #36	@ 0x24
 800c48e:	461c      	mov	r4, r3
 800c490:	f10d 0820 	add.w	r8, sp, #32
 800c494:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800c498:	9304      	str	r3, [sp, #16]
 800c49a:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800c49c:	9105      	str	r1, [sp, #20]
 800c49e:	2300      	movs	r3, #0
 800c4a0:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800c4a4:	9306      	str	r3, [sp, #24]
 800c4a6:	f848 3d04 	str.w	r3, [r8, #-4]!
 800c4aa:	9b04      	ldr	r3, [sp, #16]
 800c4ac:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800c4b0:	4682      	mov	sl, r0
 800c4b2:	4615      	mov	r5, r2
 800c4b4:	9b05      	ldr	r3, [sp, #20]
 800c4b6:	429d      	cmp	r5, r3
 800c4b8:	d96d      	bls.n	800c596 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800c4ba:	3d01      	subs	r5, #1
 800c4bc:	f819 3005 	ldrb.w	r3, [r9, r5]
 800c4c0:	2b06      	cmp	r3, #6
 800c4c2:	d8f7      	bhi.n	800c4b4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c4c4:	a201      	add	r2, pc, #4	@ (adr r2, 800c4cc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800c4c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c4ca:	bf00      	nop
 800c4cc:	0800c4eb 	.word	0x0800c4eb
 800c4d0:	0800c4b5 	.word	0x0800c4b5
 800c4d4:	0800c4e9 	.word	0x0800c4e9
 800c4d8:	0800c50d 	.word	0x0800c50d
 800c4dc:	0800c50d 	.word	0x0800c50d
 800c4e0:	0800c511 	.word	0x0800c511
 800c4e4:	0800c551 	.word	0x0800c551
 800c4e8:	3c02      	subs	r4, #2
 800c4ea:	4650      	mov	r0, sl
 800c4ec:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c4f0:	9400      	str	r4, [sp, #0]
 800c4f2:	462b      	mov	r3, r5
 800c4f4:	4642      	mov	r2, r8
 800c4f6:	a906      	add	r1, sp, #24
 800c4f8:	f7ff fcae 	bl	800be58 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c4fc:	eddd 0a07 	vldr	s1, [sp, #28]
 800c500:	ed9d 0a06 	vldr	s0, [sp, #24]
 800c504:	4630      	mov	r0, r6
 800c506:	f7ff fed1 	bl	800c2ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c50a:	e7d3      	b.n	800c4b4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c50c:	3c01      	subs	r4, #1
 800c50e:	e7ec      	b.n	800c4ea <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800c510:	f1a4 0b04 	sub.w	fp, r4, #4
 800c514:	3c02      	subs	r4, #2
 800c516:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800c51a:	4650      	mov	r0, sl
 800c51c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c520:	f8cd b000 	str.w	fp, [sp]
 800c524:	462b      	mov	r3, r5
 800c526:	4642      	mov	r2, r8
 800c528:	a906      	add	r1, sp, #24
 800c52a:	f7ff fc95 	bl	800be58 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c52e:	eddd 2a07 	vldr	s5, [sp, #28]
 800c532:	ed9d 2a06 	vldr	s4, [sp, #24]
 800c536:	ed54 1a01 	vldr	s3, [r4, #-4]
 800c53a:	ed14 1a02 	vldr	s2, [r4, #-8]
 800c53e:	edd4 0a01 	vldr	s1, [r4, #4]
 800c542:	ed94 0a00 	vldr	s0, [r4]
 800c546:	4630      	mov	r0, r6
 800c548:	f7ff fc1a 	bl	800bd80 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c54c:	465c      	mov	r4, fp
 800c54e:	e7b1      	b.n	800c4b4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c550:	f1a4 0b06 	sub.w	fp, r4, #6
 800c554:	3c02      	subs	r4, #2
 800c556:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800c55a:	4650      	mov	r0, sl
 800c55c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c560:	f8cd b000 	str.w	fp, [sp]
 800c564:	462b      	mov	r3, r5
 800c566:	4642      	mov	r2, r8
 800c568:	a906      	add	r1, sp, #24
 800c56a:	f7ff fc75 	bl	800be58 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c56e:	eddd 3a07 	vldr	s7, [sp, #28]
 800c572:	ed9d 3a06 	vldr	s6, [sp, #24]
 800c576:	ed54 2a03 	vldr	s5, [r4, #-12]
 800c57a:	ed14 2a04 	vldr	s4, [r4, #-16]
 800c57e:	ed54 1a01 	vldr	s3, [r4, #-4]
 800c582:	ed14 1a02 	vldr	s2, [r4, #-8]
 800c586:	edd4 0a01 	vldr	s1, [r4, #4]
 800c58a:	ed94 0a00 	vldr	s0, [r4]
 800c58e:	4630      	mov	r0, r6
 800c590:	f7ff fc15 	bl	800bdbe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800c594:	e7da      	b.n	800c54c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800c596:	9b04      	ldr	r3, [sp, #16]
 800c598:	b113      	cbz	r3, 800c5a0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800c59a:	4630      	mov	r0, r6
 800c59c:	f7ff ff69 	bl	800c472 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800c5a0:	b009      	add	sp, #36	@ 0x24
 800c5a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5a6:	bf00      	nop

0800c5a8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800c5a8:	eef0 7a60 	vmov.f32	s15, s1
 800c5ac:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c5b0:	6803      	ldr	r3, [r0, #0]
 800c5b2:	ee17 2a90 	vmov	r2, s15
 800c5b6:	eef0 7a40 	vmov.f32	s15, s0
 800c5ba:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c5be:	689b      	ldr	r3, [r3, #8]
 800c5c0:	ee17 1a90 	vmov	r1, s15
 800c5c4:	4718      	bx	r3
	...

0800c5c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800c5c8:	b510      	push	{r4, lr}
 800c5ca:	4b04      	ldr	r3, [pc, #16]	@ (800c5dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800c5cc:	4604      	mov	r4, r0
 800c5ce:	f840 3b14 	str.w	r3, [r0], #20
 800c5d2:	f001 f8d3 	bl	800d77c <_ZN8touchgfx7OutlineD1Ev>
 800c5d6:	4620      	mov	r0, r4
 800c5d8:	bd10      	pop	{r4, pc}
 800c5da:	bf00      	nop
 800c5dc:	08025648 	.word	0x08025648

0800c5e0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800c5e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5e4:	ed2d 8b04 	vpush	{d8-d9}
 800c5e8:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800c5ec:	b0b5      	sub	sp, #212	@ 0xd4
 800c5ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c5f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c5f6:	4605      	mov	r5, r0
 800c5f8:	468b      	mov	fp, r1
 800c5fa:	9206      	str	r2, [sp, #24]
 800c5fc:	461e      	mov	r6, r3
 800c5fe:	f04f 0400 	mov.w	r4, #0
 800c602:	f240 814e 	bls.w	800c8a2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800c606:	23ff      	movs	r3, #255	@ 0xff
 800c608:	9300      	str	r3, [sp, #0]
 800c60a:	1d02      	adds	r2, r0, #4
 800c60c:	6981      	ldr	r1, [r0, #24]
 800c60e:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800c610:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800c8a8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800c614:	a808      	add	r0, sp, #32
 800c616:	f014 fdc1 	bl	802119c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800c61a:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800c61e:	4ba3      	ldr	r3, [pc, #652]	@ (800c8ac <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800c620:	edd5 6a08 	vldr	s13, [r5, #32]
 800c624:	9308      	str	r3, [sp, #32]
 800c626:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c62a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c62e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800c632:	bf48      	it	mi
 800c634:	eef1 7a67 	vnegmi.f32	s15, s15
 800c638:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c63c:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800c640:	2201      	movs	r2, #1
 800c642:	9325      	str	r3, [sp, #148]	@ 0x94
 800c644:	2300      	movs	r3, #0
 800c646:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800c64a:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800c64e:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800c652:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800c656:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800c65a:	7f6a      	ldrb	r2, [r5, #29]
 800c65c:	7fab      	ldrb	r3, [r5, #30]
 800c65e:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800c662:	435a      	muls	r2, r3
 800c664:	ee27 7a26 	vmul.f32	s14, s14, s13
 800c668:	1c53      	adds	r3, r2, #1
 800c66a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800c66e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800c672:	f04f 0800 	mov.w	r8, #0
 800c676:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800c67a:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800c67e:	942a      	str	r4, [sp, #168]	@ 0xa8
 800c680:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800c684:	942b      	str	r4, [sp, #172]	@ 0xac
 800c686:	942c      	str	r4, [sp, #176]	@ 0xb0
 800c688:	942d      	str	r4, [sp, #180]	@ 0xb4
 800c68a:	942e      	str	r4, [sp, #184]	@ 0xb8
 800c68c:	942f      	str	r4, [sp, #188]	@ 0xbc
 800c68e:	9430      	str	r4, [sp, #192]	@ 0xc0
 800c690:	9431      	str	r4, [sp, #196]	@ 0xc4
 800c692:	9432      	str	r4, [sp, #200]	@ 0xc8
 800c694:	9433      	str	r4, [sp, #204]	@ 0xcc
 800c696:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800c69a:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800c69e:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800c6a2:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800c6a6:	eef0 9a49 	vmov.f32	s19, s18
 800c6aa:	eeb0 8a49 	vmov.f32	s16, s18
 800c6ae:	eef0 8a49 	vmov.f32	s17, s18
 800c6b2:	4644      	mov	r4, r8
 800c6b4:	46c1      	mov	r9, r8
 800c6b6:	af08      	add	r7, sp, #32
 800c6b8:	f04f 0a01 	mov.w	sl, #1
 800c6bc:	9b06      	ldr	r3, [sp, #24]
 800c6be:	454b      	cmp	r3, r9
 800c6c0:	f000 80cc 	beq.w	800c85c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800c6c4:	f109 0301 	add.w	r3, r9, #1
 800c6c8:	9305      	str	r3, [sp, #20]
 800c6ca:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800c6ce:	2b06      	cmp	r3, #6
 800c6d0:	d839      	bhi.n	800c746 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c6d2:	e8df f003 	tbb	[pc, r3]
 800c6d6:	3b04      	.short	0x3b04
 800c6d8:	817c6f60 	.word	0x817c6f60
 800c6dc:	a0          	.byte	0xa0
 800c6dd:	00          	.byte	0x00
 800c6de:	45c1      	cmp	r9, r8
 800c6e0:	d92b      	bls.n	800c73a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800c6e2:	eef0 0a49 	vmov.f32	s1, s18
 800c6e6:	eeb0 0a69 	vmov.f32	s0, s19
 800c6ea:	4638      	mov	r0, r7
 800c6ec:	f7ff fdde 	bl	800c2ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c6f0:	4638      	mov	r0, r7
 800c6f2:	f7ff fe67 	bl	800c3c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c6f6:	4681      	mov	r9, r0
 800c6f8:	b9f8      	cbnz	r0, 800c73a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800c6fa:	eef0 0a49 	vmov.f32	s1, s18
 800c6fe:	eeb0 0a69 	vmov.f32	s0, s19
 800c702:	4638      	mov	r0, r7
 800c704:	f7ff fe8d 	bl	800c422 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800c708:	4628      	mov	r0, r5
 800c70a:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800c70e:	e9cd b600 	strd	fp, r6, [sp]
 800c712:	4623      	mov	r3, r4
 800c714:	9a05      	ldr	r2, [sp, #20]
 800c716:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800c71a:	4641      	mov	r1, r8
 800c71c:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800c720:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800c724:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800c728:	f7ff feae 	bl	800c488 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c72c:	eef0 0a49 	vmov.f32	s1, s18
 800c730:	eeb0 0a69 	vmov.f32	s0, s19
 800c734:	4638      	mov	r0, r7
 800c736:	f7ff fe74 	bl	800c422 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800c73a:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800c73e:	eeb0 8a49 	vmov.f32	s16, s18
 800c742:	eef0 8a69 	vmov.f32	s17, s19
 800c746:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800c74a:	e7b7      	b.n	800c6bc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800c74c:	45c1      	cmp	r9, r8
 800c74e:	d90d      	bls.n	800c76c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800c750:	4638      	mov	r0, r7
 800c752:	f7ff fe37 	bl	800c3c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c756:	b948      	cbnz	r0, 800c76c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800c758:	e9cd a702 	strd	sl, r7, [sp, #8]
 800c75c:	e9cd b600 	strd	fp, r6, [sp]
 800c760:	4623      	mov	r3, r4
 800c762:	464a      	mov	r2, r9
 800c764:	4641      	mov	r1, r8
 800c766:	4628      	mov	r0, r5
 800c768:	f7ff fe8e 	bl	800c488 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c76c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c770:	edd3 8a00 	vldr	s17, [r3]
 800c774:	ed93 8a01 	vldr	s16, [r3, #4]
 800c778:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800c77c:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800c780:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800c784:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800c788:	3402      	adds	r4, #2
 800c78a:	46c8      	mov	r8, r9
 800c78c:	eeb0 9a48 	vmov.f32	s18, s16
 800c790:	eef0 9a68 	vmov.f32	s19, s17
 800c794:	e7d7      	b.n	800c746 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c796:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c79a:	edd3 8a00 	vldr	s17, [r3]
 800c79e:	ed93 8a01 	vldr	s16, [r3, #4]
 800c7a2:	eeb0 0a68 	vmov.f32	s0, s17
 800c7a6:	eef0 0a48 	vmov.f32	s1, s16
 800c7aa:	4638      	mov	r0, r7
 800c7ac:	f7ff fd7e 	bl	800c2ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c7b0:	3402      	adds	r4, #2
 800c7b2:	e7c8      	b.n	800c746 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c7b4:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c7b8:	edd3 8a00 	vldr	s17, [r3]
 800c7bc:	eef0 0a48 	vmov.f32	s1, s16
 800c7c0:	eeb0 0a68 	vmov.f32	s0, s17
 800c7c4:	4638      	mov	r0, r7
 800c7c6:	f7ff fd71 	bl	800c2ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c7ca:	3401      	adds	r4, #1
 800c7cc:	e7bb      	b.n	800c746 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c7ce:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c7d2:	ed93 8a00 	vldr	s16, [r3]
 800c7d6:	e7f1      	b.n	800c7bc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800c7d8:	00a3      	lsls	r3, r4, #2
 800c7da:	f103 0208 	add.w	r2, r3, #8
 800c7de:	f103 090c 	add.w	r9, r3, #12
 800c7e2:	4432      	add	r2, r6
 800c7e4:	4433      	add	r3, r6
 800c7e6:	44b1      	add	r9, r6
 800c7e8:	ed92 2a00 	vldr	s4, [r2]
 800c7ec:	edd9 2a00 	vldr	s5, [r9]
 800c7f0:	edd3 1a01 	vldr	s3, [r3, #4]
 800c7f4:	ed93 1a00 	vldr	s2, [r3]
 800c7f8:	9207      	str	r2, [sp, #28]
 800c7fa:	eef0 0a48 	vmov.f32	s1, s16
 800c7fe:	eeb0 0a68 	vmov.f32	s0, s17
 800c802:	4638      	mov	r0, r7
 800c804:	f7ff fabc 	bl	800bd80 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c808:	9a07      	ldr	r2, [sp, #28]
 800c80a:	ed99 8a00 	vldr	s16, [r9]
 800c80e:	edd2 8a00 	vldr	s17, [r2]
 800c812:	3404      	adds	r4, #4
 800c814:	e797      	b.n	800c746 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c816:	00a3      	lsls	r3, r4, #2
 800c818:	f103 0210 	add.w	r2, r3, #16
 800c81c:	f103 0914 	add.w	r9, r3, #20
 800c820:	4432      	add	r2, r6
 800c822:	4433      	add	r3, r6
 800c824:	44b1      	add	r9, r6
 800c826:	ed92 3a00 	vldr	s6, [r2]
 800c82a:	edd9 3a00 	vldr	s7, [r9]
 800c82e:	edd3 2a03 	vldr	s5, [r3, #12]
 800c832:	ed93 2a02 	vldr	s4, [r3, #8]
 800c836:	edd3 1a01 	vldr	s3, [r3, #4]
 800c83a:	ed93 1a00 	vldr	s2, [r3]
 800c83e:	9207      	str	r2, [sp, #28]
 800c840:	eef0 0a48 	vmov.f32	s1, s16
 800c844:	eeb0 0a68 	vmov.f32	s0, s17
 800c848:	4638      	mov	r0, r7
 800c84a:	f7ff fab8 	bl	800bdbe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800c84e:	9a07      	ldr	r2, [sp, #28]
 800c850:	ed99 8a00 	vldr	s16, [r9]
 800c854:	edd2 8a00 	vldr	s17, [r2]
 800c858:	3406      	adds	r4, #6
 800c85a:	e774      	b.n	800c746 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c85c:	9b06      	ldr	r3, [sp, #24]
 800c85e:	4543      	cmp	r3, r8
 800c860:	af08      	add	r7, sp, #32
 800c862:	d90f      	bls.n	800c884 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800c864:	4638      	mov	r0, r7
 800c866:	f7ff fdad 	bl	800c3c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c86a:	b958      	cbnz	r0, 800c884 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800c86c:	2301      	movs	r3, #1
 800c86e:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800c872:	9703      	str	r7, [sp, #12]
 800c874:	f8cd b000 	str.w	fp, [sp]
 800c878:	4623      	mov	r3, r4
 800c87a:	9a06      	ldr	r2, [sp, #24]
 800c87c:	4641      	mov	r1, r8
 800c87e:	4628      	mov	r0, r5
 800c880:	f7ff fe02 	bl	800c488 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c884:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800c888:	4638      	mov	r0, r7
 800c88a:	f014 fd1b 	bl	80212c4 <_ZN8touchgfx6Canvas6renderEh>
 800c88e:	4604      	mov	r4, r0
 800c890:	4638      	mov	r0, r7
 800c892:	f7ff fe99 	bl	800c5c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800c896:	4620      	mov	r0, r4
 800c898:	b035      	add	sp, #212	@ 0xd4
 800c89a:	ecbd 8b04 	vpop	{d8-d9}
 800c89e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8a2:	2401      	movs	r4, #1
 800c8a4:	e7f7      	b.n	800c896 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800c8a6:	bf00      	nop
 800c8a8:	00000000 	.word	0x00000000
 800c8ac:	08024f94 	.word	0x08024f94

0800c8b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800c8b0:	b510      	push	{r4, lr}
 800c8b2:	4604      	mov	r4, r0
 800c8b4:	f7ff fe88 	bl	800c5c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800c8b8:	4620      	mov	r0, r4
 800c8ba:	21b0      	movs	r1, #176	@ 0xb0
 800c8bc:	f015 f8d1 	bl	8021a62 <_ZdlPvj>
 800c8c0:	4620      	mov	r0, r4
 800c8c2:	bd10      	pop	{r4, pc}

0800c8c4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800c8c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c8c8:	ed2d 8b06 	vpush	{d8-d10}
 800c8cc:	b0aa      	sub	sp, #168	@ 0xa8
 800c8ce:	4698      	mov	r8, r3
 800c8d0:	23ff      	movs	r3, #255	@ 0xff
 800c8d2:	4607      	mov	r7, r0
 800c8d4:	9300      	str	r3, [sp, #0]
 800c8d6:	4689      	mov	r9, r1
 800c8d8:	4692      	mov	sl, r2
 800c8da:	6981      	ldr	r1, [r0, #24]
 800c8dc:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800c8de:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800cae8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800c8e2:	1d02      	adds	r2, r0, #4
 800c8e4:	a80d      	add	r0, sp, #52	@ 0x34
 800c8e6:	f014 fc59 	bl	802119c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800c8ea:	7f3b      	ldrb	r3, [r7, #28]
 800c8ec:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800cae8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800c8f0:	1e5a      	subs	r2, r3, #1
 800c8f2:	4253      	negs	r3, r2
 800c8f4:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800c8f8:	4153      	adcs	r3, r2
 800c8fa:	eeb0 0a60 	vmov.f32	s0, s1
 800c8fe:	4628      	mov	r0, r5
 800c900:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800c904:	f004 fc07 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c908:	44ca      	add	sl, r9
 800c90a:	eeb0 9a40 	vmov.f32	s18, s0
 800c90e:	eef0 9a60 	vmov.f32	s19, s1
 800c912:	eef0 8a48 	vmov.f32	s17, s16
 800c916:	2400      	movs	r4, #0
 800c918:	45ca      	cmp	sl, r9
 800c91a:	f000 80cd 	beq.w	800cab8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800c91e:	f819 3b01 	ldrb.w	r3, [r9], #1
 800c922:	2b06      	cmp	r3, #6
 800c924:	d8f8      	bhi.n	800c918 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c926:	e8df f003 	tbb	[pc, r3]
 800c92a:	0804      	.short	0x0804
 800c92c:	58533f2a 	.word	0x58533f2a
 800c930:	8a          	.byte	0x8a
 800c931:	00          	.byte	0x00
 800c932:	a80d      	add	r0, sp, #52	@ 0x34
 800c934:	f014 fca4 	bl	8021280 <_ZN8touchgfx6Canvas5closeEv>
 800c938:	e7ee      	b.n	800c918 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c93a:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c93e:	edd3 8a00 	vldr	s17, [r3]
 800c942:	ed93 8a01 	vldr	s16, [r3, #4]
 800c946:	eeb0 0a68 	vmov.f32	s0, s17
 800c94a:	eef0 0a48 	vmov.f32	s1, s16
 800c94e:	4628      	mov	r0, r5
 800c950:	f004 fbe1 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c954:	eef0 7a60 	vmov.f32	s15, s1
 800c958:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c95c:	a80d      	add	r0, sp, #52	@ 0x34
 800c95e:	ee17 2a90 	vmov	r2, s15
 800c962:	eef0 7a40 	vmov.f32	s15, s0
 800c966:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c96a:	eeb0 9a40 	vmov.f32	s18, s0
 800c96e:	ee17 1a90 	vmov	r1, s15
 800c972:	eef0 9a60 	vmov.f32	s19, s1
 800c976:	f014 fd5d 	bl	8021434 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c97a:	3402      	adds	r4, #2
 800c97c:	e7cc      	b.n	800c918 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c97e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c982:	edd3 8a00 	vldr	s17, [r3]
 800c986:	ed93 8a01 	vldr	s16, [r3, #4]
 800c98a:	eeb0 0a68 	vmov.f32	s0, s17
 800c98e:	eef0 0a48 	vmov.f32	s1, s16
 800c992:	4628      	mov	r0, r5
 800c994:	f004 fbbf 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c998:	a80d      	add	r0, sp, #52	@ 0x34
 800c99a:	eeb0 9a40 	vmov.f32	s18, s0
 800c99e:	eef0 9a60 	vmov.f32	s19, s1
 800c9a2:	f7ff fe01 	bl	800c5a8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800c9a6:	e7e8      	b.n	800c97a <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800c9a8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c9ac:	edd3 8a00 	vldr	s17, [r3]
 800c9b0:	eef0 0a48 	vmov.f32	s1, s16
 800c9b4:	eeb0 0a68 	vmov.f32	s0, s17
 800c9b8:	4628      	mov	r0, r5
 800c9ba:	f004 fbac 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c9be:	a80d      	add	r0, sp, #52	@ 0x34
 800c9c0:	eeb0 9a40 	vmov.f32	s18, s0
 800c9c4:	eef0 9a60 	vmov.f32	s19, s1
 800c9c8:	3401      	adds	r4, #1
 800c9ca:	f7ff fded 	bl	800c5a8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800c9ce:	e7a3      	b.n	800c918 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c9d0:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c9d4:	ed93 8a00 	vldr	s16, [r3]
 800c9d8:	e7ea      	b.n	800c9b0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800c9da:	1ca3      	adds	r3, r4, #2
 800c9dc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800c9e0:	ed53 0a01 	vldr	s1, [r3, #-4]
 800c9e4:	ed13 0a02 	vldr	s0, [r3, #-8]
 800c9e8:	edd3 8a00 	vldr	s17, [r3]
 800c9ec:	ed93 8a01 	vldr	s16, [r3, #4]
 800c9f0:	4628      	mov	r0, r5
 800c9f2:	f004 fb90 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c9f6:	4628      	mov	r0, r5
 800c9f8:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800c9fc:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800ca00:	eeb0 0a68 	vmov.f32	s0, s17
 800ca04:	eef0 0a48 	vmov.f32	s1, s16
 800ca08:	f004 fb85 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca0c:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800ca10:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800ca14:	eef0 2a60 	vmov.f32	s5, s1
 800ca18:	eeb0 2a40 	vmov.f32	s4, s0
 800ca1c:	eeb0 aa40 	vmov.f32	s20, s0
 800ca20:	eef0 aa60 	vmov.f32	s21, s1
 800ca24:	eeb0 0a49 	vmov.f32	s0, s18
 800ca28:	eef0 0a69 	vmov.f32	s1, s19
 800ca2c:	a80d      	add	r0, sp, #52	@ 0x34
 800ca2e:	f7ff f9a7 	bl	800bd80 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800ca32:	3404      	adds	r4, #4
 800ca34:	eef0 9a6a 	vmov.f32	s19, s21
 800ca38:	eeb0 9a4a 	vmov.f32	s18, s20
 800ca3c:	e76c      	b.n	800c918 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800ca3e:	1d26      	adds	r6, r4, #4
 800ca40:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800ca44:	ed56 0a03 	vldr	s1, [r6, #-12]
 800ca48:	ed16 0a04 	vldr	s0, [r6, #-16]
 800ca4c:	edd6 8a00 	vldr	s17, [r6]
 800ca50:	ed96 8a01 	vldr	s16, [r6, #4]
 800ca54:	4628      	mov	r0, r5
 800ca56:	f004 fb5e 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca5a:	4628      	mov	r0, r5
 800ca5c:	ed8d 0a07 	vstr	s0, [sp, #28]
 800ca60:	edcd 0a08 	vstr	s1, [sp, #32]
 800ca64:	ed16 0a02 	vldr	s0, [r6, #-8]
 800ca68:	ed56 0a01 	vldr	s1, [r6, #-4]
 800ca6c:	f004 fb53 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca70:	4628      	mov	r0, r5
 800ca72:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800ca76:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800ca7a:	eeb0 0a68 	vmov.f32	s0, s17
 800ca7e:	eef0 0a48 	vmov.f32	s1, s16
 800ca82:	f004 fb48 	bl	8011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca86:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800ca8a:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800ca8e:	eddd 1a08 	vldr	s3, [sp, #32]
 800ca92:	ed9d 1a07 	vldr	s2, [sp, #28]
 800ca96:	eef0 3a60 	vmov.f32	s7, s1
 800ca9a:	eeb0 3a40 	vmov.f32	s6, s0
 800ca9e:	eeb0 aa40 	vmov.f32	s20, s0
 800caa2:	eef0 aa60 	vmov.f32	s21, s1
 800caa6:	eeb0 0a49 	vmov.f32	s0, s18
 800caaa:	eef0 0a69 	vmov.f32	s1, s19
 800caae:	a80d      	add	r0, sp, #52	@ 0x34
 800cab0:	f7ff f985 	bl	800bdbe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800cab4:	3406      	adds	r4, #6
 800cab6:	e7bd      	b.n	800ca34 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800cab8:	7f7b      	ldrb	r3, [r7, #29]
 800caba:	7fb9      	ldrb	r1, [r7, #30]
 800cabc:	4359      	muls	r1, r3
 800cabe:	1c4b      	adds	r3, r1, #1
 800cac0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800cac4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800cac8:	a80d      	add	r0, sp, #52	@ 0x34
 800caca:	f014 fbfb 	bl	80212c4 <_ZN8touchgfx6Canvas6renderEh>
 800cace:	4b07      	ldr	r3, [pc, #28]	@ (800caec <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800cad0:	930d      	str	r3, [sp, #52]	@ 0x34
 800cad2:	4604      	mov	r4, r0
 800cad4:	a812      	add	r0, sp, #72	@ 0x48
 800cad6:	f000 fe51 	bl	800d77c <_ZN8touchgfx7OutlineD1Ev>
 800cada:	4620      	mov	r0, r4
 800cadc:	b02a      	add	sp, #168	@ 0xa8
 800cade:	ecbd 8b06 	vpop	{d8-d10}
 800cae2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cae6:	bf00      	nop
 800cae8:	00000000 	.word	0x00000000
 800caec:	08025648 	.word	0x08025648

0800caf0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800caf0:	b410      	push	{r4}
 800caf2:	7f04      	ldrb	r4, [r0, #28]
 800caf4:	b11c      	cbz	r4, 800cafe <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800caf6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cafa:	f7ff bee3 	b.w	800c8c4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800cafe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cb02:	f7ff bd6d 	b.w	800c5e0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800cb08 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800cb08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb0c:	4691      	mov	r9, r2
 800cb0e:	4602      	mov	r2, r0
 800cb10:	4605      	mov	r5, r0
 800cb12:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800cb16:	b085      	sub	sp, #20
 800cb18:	4688      	mov	r8, r1
 800cb1a:	6851      	ldr	r1, [r2, #4]
 800cb1c:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800cb20:	469a      	mov	sl, r3
 800cb22:	ab02      	add	r3, sp, #8
 800cb24:	c303      	stmia	r3!, {r0, r1}
 800cb26:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cb2a:	2b00      	cmp	r3, #0
 800cb2c:	af02      	add	r7, sp, #8
 800cb2e:	dd08      	ble.n	800cb42 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cb30:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800cb34:	2c00      	cmp	r4, #0
 800cb36:	dd04      	ble.n	800cb42 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cb38:	4a2e      	ldr	r2, [pc, #184]	@ (800cbf4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800cb3a:	7812      	ldrb	r2, [r2, #0]
 800cb3c:	b122      	cbz	r2, 800cb48 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800cb3e:	2a01      	cmp	r2, #1
 800cb40:	d02d      	beq.n	800cb9e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800cb42:	b005      	add	sp, #20
 800cb44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb48:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cb4c:	441c      	add	r4, r3
 800cb4e:	b2a4      	uxth	r4, r4
 800cb50:	b226      	sxth	r6, r4
 800cb52:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800cb56:	42b3      	cmp	r3, r6
 800cb58:	daf3      	bge.n	800cb42 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cb5a:	e9cd b700 	strd	fp, r7, [sp]
 800cb5e:	4653      	mov	r3, sl
 800cb60:	464a      	mov	r2, r9
 800cb62:	4641      	mov	r1, r8
 800cb64:	4628      	mov	r0, r5
 800cb66:	f7ff ffc3 	bl	800caf0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800cb6a:	b940      	cbnz	r0, 800cb7e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800cb6c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cb70:	2b01      	cmp	r3, #1
 800cb72:	d004      	beq.n	800cb7e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800cb74:	3301      	adds	r3, #1
 800cb76:	105b      	asrs	r3, r3, #1
 800cb78:	f8ad 300e 	strh.w	r3, [sp, #14]
 800cb7c:	e7ed      	b.n	800cb5a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800cb7e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800cb82:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cb86:	4413      	add	r3, r2
 800cb88:	b29b      	uxth	r3, r3
 800cb8a:	441a      	add	r2, r3
 800cb8c:	b212      	sxth	r2, r2
 800cb8e:	4296      	cmp	r6, r2
 800cb90:	f8ad 300a 	strh.w	r3, [sp, #10]
 800cb94:	dadd      	bge.n	800cb52 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800cb96:	1ae3      	subs	r3, r4, r3
 800cb98:	f8ad 300e 	strh.w	r3, [sp, #14]
 800cb9c:	e7d9      	b.n	800cb52 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800cb9e:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800cba2:	441c      	add	r4, r3
 800cba4:	b2a4      	uxth	r4, r4
 800cba6:	b226      	sxth	r6, r4
 800cba8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800cbac:	42b3      	cmp	r3, r6
 800cbae:	dac8      	bge.n	800cb42 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cbb0:	e9cd b700 	strd	fp, r7, [sp]
 800cbb4:	4653      	mov	r3, sl
 800cbb6:	464a      	mov	r2, r9
 800cbb8:	4641      	mov	r1, r8
 800cbba:	4628      	mov	r0, r5
 800cbbc:	f7ff ff98 	bl	800caf0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800cbc0:	b940      	cbnz	r0, 800cbd4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800cbc2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cbc6:	2b01      	cmp	r3, #1
 800cbc8:	d004      	beq.n	800cbd4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800cbca:	3301      	adds	r3, #1
 800cbcc:	105b      	asrs	r3, r3, #1
 800cbce:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cbd2:	e7ed      	b.n	800cbb0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800cbd4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800cbd8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800cbdc:	4413      	add	r3, r2
 800cbde:	b29b      	uxth	r3, r3
 800cbe0:	441a      	add	r2, r3
 800cbe2:	b212      	sxth	r2, r2
 800cbe4:	4296      	cmp	r6, r2
 800cbe6:	f8ad 3008 	strh.w	r3, [sp, #8]
 800cbea:	dadd      	bge.n	800cba8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800cbec:	1ae3      	subs	r3, r4, r3
 800cbee:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cbf2:	e7d9      	b.n	800cba8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800cbf4:	20013ff2 	.word	0x20013ff2

0800cbf8 <_ZN8touchgfx6CircleD1Ev>:
 800cbf8:	4770      	bx	lr

0800cbfa <_ZN8touchgfx6CircleD0Ev>:
 800cbfa:	b510      	push	{r4, lr}
 800cbfc:	2148      	movs	r1, #72	@ 0x48
 800cbfe:	4604      	mov	r4, r0
 800cc00:	f014 ff2f 	bl	8021a62 <_ZdlPvj>
 800cc04:	4620      	mov	r0, r4
 800cc06:	bd10      	pop	{r4, pc}

0800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800cc08:	b507      	push	{r0, r1, r2, lr}
 800cc0a:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800cc0e:	ab01      	add	r3, sp, #4
 800cc10:	6809      	ldr	r1, [r1, #0]
 800cc12:	6800      	ldr	r0, [r0, #0]
 800cc14:	f004 fb98 	bl	8011348 <_ZN8touchgfx6muldivElllRl>
 800cc18:	b003      	add	sp, #12
 800cc1a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800cc20 <_ZN8touchgfx7CWRUtil4sineEi>:
 800cc20:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 800cc24:	fb90 f2f3 	sdiv	r2, r0, r3
 800cc28:	fb02 0013 	mls	r0, r2, r3, r0
 800cc2c:	2800      	cmp	r0, #0
 800cc2e:	bfb8      	it	lt
 800cc30:	18c0      	addlt	r0, r0, r3
 800cc32:	285a      	cmp	r0, #90	@ 0x5a
 800cc34:	4b09      	ldr	r3, [pc, #36]	@ (800cc5c <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800cc36:	dc02      	bgt.n	800cc3e <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800cc38:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800cc3c:	4770      	bx	lr
 800cc3e:	28b4      	cmp	r0, #180	@ 0xb4
 800cc40:	dc02      	bgt.n	800cc48 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800cc42:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 800cc46:	e7f7      	b.n	800cc38 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800cc48:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 800cc4c:	bfd4      	ite	le
 800cc4e:	38b4      	suble	r0, #180	@ 0xb4
 800cc50:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 800cc54:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800cc58:	4240      	negs	r0, r0
 800cc5a:	4770      	bx	lr
 800cc5c:	08024fec 	.word	0x08024fec

0800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800cc60:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 800cc64:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cc66:	fb90 f2f3 	sdiv	r2, r0, r3
 800cc6a:	fb02 0013 	mls	r0, r2, r3, r0
 800cc6e:	2800      	cmp	r0, #0
 800cc70:	bfb8      	it	lt
 800cc72:	18c0      	addlt	r0, r0, r3
 800cc74:	1144      	asrs	r4, r0, #5
 800cc76:	f000 061f 	and.w	r6, r0, #31
 800cc7a:	4620      	mov	r0, r4
 800cc7c:	f7ff ffd0 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineEi>
 800cc80:	4605      	mov	r5, r0
 800cc82:	b90e      	cbnz	r6, 800cc88 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800cc84:	b002      	add	sp, #8
 800cc86:	bd70      	pop	{r4, r5, r6, pc}
 800cc88:	1c60      	adds	r0, r4, #1
 800cc8a:	f7ff ffc9 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineEi>
 800cc8e:	ab01      	add	r3, sp, #4
 800cc90:	2220      	movs	r2, #32
 800cc92:	4631      	mov	r1, r6
 800cc94:	1b40      	subs	r0, r0, r5
 800cc96:	f004 fb57 	bl	8011348 <_ZN8touchgfx6muldivElllRl>
 800cc9a:	4428      	add	r0, r5
 800cc9c:	e7f2      	b.n	800cc84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800cc9e:	b508      	push	{r3, lr}
 800cca0:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 800cca4:	f7ff ffdc 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cca8:	bd08      	pop	{r3, pc}
	...

0800ccac <_ZN8touchgfx6CircleC1Ev>:
 800ccac:	b510      	push	{r4, lr}
 800ccae:	4604      	mov	r4, r0
 800ccb0:	f000 fd0a 	bl	800d6c8 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800ccb4:	4b08      	ldr	r3, [pc, #32]	@ (800ccd8 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800ccb6:	6023      	str	r3, [r4, #0]
 800ccb8:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 800ccbc:	2300      	movs	r3, #0
 800ccbe:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 800ccc2:	f24b 4205 	movw	r2, #46085	@ 0xb405
 800ccc6:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 800ccca:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 800ccce:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 800ccd2:	60a3      	str	r3, [r4, #8]
 800ccd4:	4620      	mov	r0, r4
 800ccd6:	bd10      	pop	{r4, pc}
 800ccd8:	080250ac 	.word	0x080250ac

0800ccdc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800ccdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cce0:	428a      	cmp	r2, r1
 800cce2:	4680      	mov	r8, r0
 800cce4:	4610      	mov	r0, r2
 800cce6:	4699      	mov	r9, r3
 800cce8:	bfa6      	itte	ge
 800ccea:	460a      	movge	r2, r1
 800ccec:	4603      	movge	r3, r0
 800ccee:	460b      	movlt	r3, r1
 800ccf0:	1a99      	subs	r1, r3, r2
 800ccf2:	b085      	sub	sp, #20
 800ccf4:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 800ccf8:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 800ccfc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 800ccfe:	bfa4      	itt	ge
 800cd00:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 800cd04:	2200      	movge	r2, #0
 800cd06:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 800cd0a:	9300      	str	r3, [sp, #0]
 800cd0c:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 800cd10:	f102 0b01 	add.w	fp, r2, #1
 800cd14:	2c00      	cmp	r4, #0
 800cd16:	f040 80af 	bne.w	800ce78 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 800cd1a:	4610      	mov	r0, r2
 800cd1c:	9201      	str	r2, [sp, #4]
 800cd1e:	f7ff ff9f 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cd22:	a903      	add	r1, sp, #12
 800cd24:	9003      	str	r0, [sp, #12]
 800cd26:	4650      	mov	r0, sl
 800cd28:	f7ff ff6e 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd2c:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800cd30:	9a01      	ldr	r2, [sp, #4]
 800cd32:	4408      	add	r0, r1
 800cd34:	f8d9 1000 	ldr.w	r1, [r9]
 800cd38:	4281      	cmp	r1, r0
 800cd3a:	bfc8      	it	gt
 800cd3c:	f8c9 0000 	strgt.w	r0, [r9]
 800cd40:	6839      	ldr	r1, [r7, #0]
 800cd42:	4288      	cmp	r0, r1
 800cd44:	bfc8      	it	gt
 800cd46:	6038      	strgt	r0, [r7, #0]
 800cd48:	4610      	mov	r0, r2
 800cd4a:	f7ff ffa8 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cd4e:	a903      	add	r1, sp, #12
 800cd50:	9003      	str	r0, [sp, #12]
 800cd52:	4650      	mov	r0, sl
 800cd54:	f7ff ff58 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd58:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cd5c:	1a10      	subs	r0, r2, r0
 800cd5e:	6832      	ldr	r2, [r6, #0]
 800cd60:	4282      	cmp	r2, r0
 800cd62:	bfc8      	it	gt
 800cd64:	6030      	strgt	r0, [r6, #0]
 800cd66:	682a      	ldr	r2, [r5, #0]
 800cd68:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800cd6c:	4290      	cmp	r0, r2
 800cd6e:	fb9b f2f1 	sdiv	r2, fp, r1
 800cd72:	fb01 b212 	mls	r2, r1, r2, fp
 800cd76:	eba1 0202 	sub.w	r2, r1, r2
 800cd7a:	bfc8      	it	gt
 800cd7c:	6028      	strgt	r0, [r5, #0]
 800cd7e:	fb92 f0f1 	sdiv	r0, r2, r1
 800cd82:	fb01 2210 	mls	r2, r1, r0, r2
 800cd86:	4493      	add	fp, r2
 800cd88:	9b00      	ldr	r3, [sp, #0]
 800cd8a:	455b      	cmp	r3, fp
 800cd8c:	db2a      	blt.n	800cde4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 800cd8e:	4658      	mov	r0, fp
 800cd90:	f7ff ff66 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cd94:	a903      	add	r1, sp, #12
 800cd96:	9003      	str	r0, [sp, #12]
 800cd98:	4650      	mov	r0, sl
 800cd9a:	f7ff ff35 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd9e:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cda2:	4410      	add	r0, r2
 800cda4:	f8d9 2000 	ldr.w	r2, [r9]
 800cda8:	4282      	cmp	r2, r0
 800cdaa:	bfc8      	it	gt
 800cdac:	f8c9 0000 	strgt.w	r0, [r9]
 800cdb0:	683a      	ldr	r2, [r7, #0]
 800cdb2:	4290      	cmp	r0, r2
 800cdb4:	bfc8      	it	gt
 800cdb6:	6038      	strgt	r0, [r7, #0]
 800cdb8:	4658      	mov	r0, fp
 800cdba:	f7ff ff70 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cdbe:	a903      	add	r1, sp, #12
 800cdc0:	9003      	str	r0, [sp, #12]
 800cdc2:	4650      	mov	r0, sl
 800cdc4:	f7ff ff20 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cdc8:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cdcc:	1a10      	subs	r0, r2, r0
 800cdce:	6832      	ldr	r2, [r6, #0]
 800cdd0:	4282      	cmp	r2, r0
 800cdd2:	bfc8      	it	gt
 800cdd4:	6030      	strgt	r0, [r6, #0]
 800cdd6:	682a      	ldr	r2, [r5, #0]
 800cdd8:	4290      	cmp	r0, r2
 800cdda:	bfc8      	it	gt
 800cddc:	6028      	strgt	r0, [r5, #0]
 800cdde:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800cde2:	e7d1      	b.n	800cd88 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 800cde4:	9b00      	ldr	r3, [sp, #0]
 800cde6:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800cdea:	455b      	cmp	r3, fp
 800cdec:	dd27      	ble.n	800ce3e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 800cdee:	4618      	mov	r0, r3
 800cdf0:	f7ff ff36 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cdf4:	a903      	add	r1, sp, #12
 800cdf6:	9003      	str	r0, [sp, #12]
 800cdf8:	4650      	mov	r0, sl
 800cdfa:	f7ff ff05 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cdfe:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800ce02:	4410      	add	r0, r2
 800ce04:	f8d9 2000 	ldr.w	r2, [r9]
 800ce08:	4282      	cmp	r2, r0
 800ce0a:	bfc8      	it	gt
 800ce0c:	f8c9 0000 	strgt.w	r0, [r9]
 800ce10:	683a      	ldr	r2, [r7, #0]
 800ce12:	4290      	cmp	r0, r2
 800ce14:	bfc8      	it	gt
 800ce16:	6038      	strgt	r0, [r7, #0]
 800ce18:	9800      	ldr	r0, [sp, #0]
 800ce1a:	f7ff ff40 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800ce1e:	a903      	add	r1, sp, #12
 800ce20:	9003      	str	r0, [sp, #12]
 800ce22:	4650      	mov	r0, sl
 800ce24:	f7ff fef0 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ce28:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800ce2c:	1a10      	subs	r0, r2, r0
 800ce2e:	6832      	ldr	r2, [r6, #0]
 800ce30:	4282      	cmp	r2, r0
 800ce32:	bfc8      	it	gt
 800ce34:	6030      	strgt	r0, [r6, #0]
 800ce36:	682a      	ldr	r2, [r5, #0]
 800ce38:	4290      	cmp	r0, r2
 800ce3a:	bfc8      	it	gt
 800ce3c:	6028      	strgt	r0, [r5, #0]
 800ce3e:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800ce42:	f8d9 1000 	ldr.w	r1, [r9]
 800ce46:	4291      	cmp	r1, r2
 800ce48:	bfc8      	it	gt
 800ce4a:	f8c9 2000 	strgt.w	r2, [r9]
 800ce4e:	683a      	ldr	r2, [r7, #0]
 800ce50:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 800ce54:	429a      	cmp	r2, r3
 800ce56:	bfb8      	it	lt
 800ce58:	603b      	strlt	r3, [r7, #0]
 800ce5a:	6832      	ldr	r2, [r6, #0]
 800ce5c:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800ce60:	429a      	cmp	r2, r3
 800ce62:	bfc8      	it	gt
 800ce64:	6033      	strgt	r3, [r6, #0]
 800ce66:	682a      	ldr	r2, [r5, #0]
 800ce68:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800ce6c:	429a      	cmp	r2, r3
 800ce6e:	da00      	bge.n	800ce72 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800ce70:	602b      	str	r3, [r5, #0]
 800ce72:	b005      	add	sp, #20
 800ce74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce78:	2002      	movs	r0, #2
 800ce7a:	3401      	adds	r4, #1
 800ce7c:	fb94 f4f0 	sdiv	r4, r4, r0
 800ce80:	4610      	mov	r0, r2
 800ce82:	9201      	str	r2, [sp, #4]
 800ce84:	f7ff feec 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800ce88:	a903      	add	r1, sp, #12
 800ce8a:	9003      	str	r0, [sp, #12]
 800ce8c:	4650      	mov	r0, sl
 800ce8e:	f7ff febb 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ce92:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800ce96:	9a01      	ldr	r2, [sp, #4]
 800ce98:	4408      	add	r0, r1
 800ce9a:	f8d9 1000 	ldr.w	r1, [r9]
 800ce9e:	1b03      	subs	r3, r0, r4
 800cea0:	4299      	cmp	r1, r3
 800cea2:	bfc8      	it	gt
 800cea4:	f8c9 3000 	strgt.w	r3, [r9]
 800cea8:	6839      	ldr	r1, [r7, #0]
 800ceaa:	428b      	cmp	r3, r1
 800ceac:	bfc8      	it	gt
 800ceae:	603b      	strgt	r3, [r7, #0]
 800ceb0:	f8d9 1000 	ldr.w	r1, [r9]
 800ceb4:	4420      	add	r0, r4
 800ceb6:	4281      	cmp	r1, r0
 800ceb8:	bfc8      	it	gt
 800ceba:	f8c9 0000 	strgt.w	r0, [r9]
 800cebe:	6839      	ldr	r1, [r7, #0]
 800cec0:	4288      	cmp	r0, r1
 800cec2:	bfc8      	it	gt
 800cec4:	6038      	strgt	r0, [r7, #0]
 800cec6:	4610      	mov	r0, r2
 800cec8:	f7ff fee9 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cecc:	a903      	add	r1, sp, #12
 800cece:	9003      	str	r0, [sp, #12]
 800ced0:	4650      	mov	r0, sl
 800ced2:	f7ff fe99 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ced6:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800ceda:	1a10      	subs	r0, r2, r0
 800cedc:	6832      	ldr	r2, [r6, #0]
 800cede:	1b01      	subs	r1, r0, r4
 800cee0:	428a      	cmp	r2, r1
 800cee2:	bfc8      	it	gt
 800cee4:	6031      	strgt	r1, [r6, #0]
 800cee6:	682a      	ldr	r2, [r5, #0]
 800cee8:	4291      	cmp	r1, r2
 800ceea:	bfc8      	it	gt
 800ceec:	6029      	strgt	r1, [r5, #0]
 800ceee:	6832      	ldr	r2, [r6, #0]
 800cef0:	4420      	add	r0, r4
 800cef2:	4282      	cmp	r2, r0
 800cef4:	bfc8      	it	gt
 800cef6:	6030      	strgt	r0, [r6, #0]
 800cef8:	682a      	ldr	r2, [r5, #0]
 800cefa:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800cefe:	4290      	cmp	r0, r2
 800cf00:	fb9b f2f1 	sdiv	r2, fp, r1
 800cf04:	fb01 b212 	mls	r2, r1, r2, fp
 800cf08:	eba1 0202 	sub.w	r2, r1, r2
 800cf0c:	bfc8      	it	gt
 800cf0e:	6028      	strgt	r0, [r5, #0]
 800cf10:	fb92 f0f1 	sdiv	r0, r2, r1
 800cf14:	fb01 2210 	mls	r2, r1, r0, r2
 800cf18:	4493      	add	fp, r2
 800cf1a:	9b00      	ldr	r3, [sp, #0]
 800cf1c:	455b      	cmp	r3, fp
 800cf1e:	db40      	blt.n	800cfa2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 800cf20:	4658      	mov	r0, fp
 800cf22:	f7ff fe9d 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cf26:	a903      	add	r1, sp, #12
 800cf28:	9003      	str	r0, [sp, #12]
 800cf2a:	4650      	mov	r0, sl
 800cf2c:	f7ff fe6c 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf30:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cf34:	4410      	add	r0, r2
 800cf36:	f8d9 2000 	ldr.w	r2, [r9]
 800cf3a:	1b01      	subs	r1, r0, r4
 800cf3c:	428a      	cmp	r2, r1
 800cf3e:	bfc8      	it	gt
 800cf40:	f8c9 1000 	strgt.w	r1, [r9]
 800cf44:	683a      	ldr	r2, [r7, #0]
 800cf46:	4291      	cmp	r1, r2
 800cf48:	bfc8      	it	gt
 800cf4a:	6039      	strgt	r1, [r7, #0]
 800cf4c:	f8d9 2000 	ldr.w	r2, [r9]
 800cf50:	4420      	add	r0, r4
 800cf52:	4282      	cmp	r2, r0
 800cf54:	bfc8      	it	gt
 800cf56:	f8c9 0000 	strgt.w	r0, [r9]
 800cf5a:	683a      	ldr	r2, [r7, #0]
 800cf5c:	4290      	cmp	r0, r2
 800cf5e:	bfc8      	it	gt
 800cf60:	6038      	strgt	r0, [r7, #0]
 800cf62:	4658      	mov	r0, fp
 800cf64:	f7ff fe9b 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cf68:	a903      	add	r1, sp, #12
 800cf6a:	9003      	str	r0, [sp, #12]
 800cf6c:	4650      	mov	r0, sl
 800cf6e:	f7ff fe4b 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf72:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cf76:	1a10      	subs	r0, r2, r0
 800cf78:	6832      	ldr	r2, [r6, #0]
 800cf7a:	1b01      	subs	r1, r0, r4
 800cf7c:	428a      	cmp	r2, r1
 800cf7e:	bfc8      	it	gt
 800cf80:	6031      	strgt	r1, [r6, #0]
 800cf82:	682a      	ldr	r2, [r5, #0]
 800cf84:	4291      	cmp	r1, r2
 800cf86:	bfc8      	it	gt
 800cf88:	6029      	strgt	r1, [r5, #0]
 800cf8a:	6832      	ldr	r2, [r6, #0]
 800cf8c:	4420      	add	r0, r4
 800cf8e:	4282      	cmp	r2, r0
 800cf90:	bfc8      	it	gt
 800cf92:	6030      	strgt	r0, [r6, #0]
 800cf94:	682a      	ldr	r2, [r5, #0]
 800cf96:	4290      	cmp	r0, r2
 800cf98:	bfc8      	it	gt
 800cf9a:	6028      	strgt	r0, [r5, #0]
 800cf9c:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800cfa0:	e7bb      	b.n	800cf1a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 800cfa2:	9b00      	ldr	r3, [sp, #0]
 800cfa4:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800cfa8:	455b      	cmp	r3, fp
 800cfaa:	f77f af62 	ble.w	800ce72 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800cfae:	4618      	mov	r0, r3
 800cfb0:	f7ff fe56 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cfb4:	a903      	add	r1, sp, #12
 800cfb6:	9003      	str	r0, [sp, #12]
 800cfb8:	4650      	mov	r0, sl
 800cfba:	f7ff fe25 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cfbe:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cfc2:	4410      	add	r0, r2
 800cfc4:	f8d9 2000 	ldr.w	r2, [r9]
 800cfc8:	1b01      	subs	r1, r0, r4
 800cfca:	428a      	cmp	r2, r1
 800cfcc:	bfc8      	it	gt
 800cfce:	f8c9 1000 	strgt.w	r1, [r9]
 800cfd2:	683a      	ldr	r2, [r7, #0]
 800cfd4:	4291      	cmp	r1, r2
 800cfd6:	bfc8      	it	gt
 800cfd8:	6039      	strgt	r1, [r7, #0]
 800cfda:	f8d9 2000 	ldr.w	r2, [r9]
 800cfde:	4420      	add	r0, r4
 800cfe0:	4282      	cmp	r2, r0
 800cfe2:	bfc8      	it	gt
 800cfe4:	f8c9 0000 	strgt.w	r0, [r9]
 800cfe8:	683b      	ldr	r3, [r7, #0]
 800cfea:	4298      	cmp	r0, r3
 800cfec:	bfc8      	it	gt
 800cfee:	6038      	strgt	r0, [r7, #0]
 800cff0:	9800      	ldr	r0, [sp, #0]
 800cff2:	f7ff fe54 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cff6:	a903      	add	r1, sp, #12
 800cff8:	9003      	str	r0, [sp, #12]
 800cffa:	4650      	mov	r0, sl
 800cffc:	f7ff fe04 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d000:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800d004:	6832      	ldr	r2, [r6, #0]
 800d006:	1a18      	subs	r0, r3, r0
 800d008:	1b03      	subs	r3, r0, r4
 800d00a:	429a      	cmp	r2, r3
 800d00c:	bfc8      	it	gt
 800d00e:	6033      	strgt	r3, [r6, #0]
 800d010:	682a      	ldr	r2, [r5, #0]
 800d012:	4293      	cmp	r3, r2
 800d014:	bfc8      	it	gt
 800d016:	602b      	strgt	r3, [r5, #0]
 800d018:	6833      	ldr	r3, [r6, #0]
 800d01a:	4404      	add	r4, r0
 800d01c:	42a3      	cmp	r3, r4
 800d01e:	bfc8      	it	gt
 800d020:	6034      	strgt	r4, [r6, #0]
 800d022:	682b      	ldr	r3, [r5, #0]
 800d024:	429c      	cmp	r4, r3
 800d026:	bfc8      	it	gt
 800d028:	602c      	strgt	r4, [r5, #0]
 800d02a:	e722      	b.n	800ce72 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0800d02c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800d02c:	b530      	push	{r4, r5, lr}
 800d02e:	4604      	mov	r4, r0
 800d030:	4608      	mov	r0, r1
 800d032:	4611      	mov	r1, r2
 800d034:	461a      	mov	r2, r3
 800d036:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d03a:	b089      	sub	sp, #36	@ 0x24
 800d03c:	015b      	lsls	r3, r3, #5
 800d03e:	9304      	str	r3, [sp, #16]
 800d040:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d044:	2500      	movs	r5, #0
 800d046:	015b      	lsls	r3, r3, #5
 800d048:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800d04c:	ab07      	add	r3, sp, #28
 800d04e:	9302      	str	r3, [sp, #8]
 800d050:	ab06      	add	r3, sp, #24
 800d052:	9301      	str	r3, [sp, #4]
 800d054:	ab05      	add	r3, sp, #20
 800d056:	9300      	str	r3, [sp, #0]
 800d058:	ab04      	add	r3, sp, #16
 800d05a:	9505      	str	r5, [sp, #20]
 800d05c:	f7ff fe3e 	bl	800ccdc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800d060:	2520      	movs	r5, #32
 800d062:	9a04      	ldr	r2, [sp, #16]
 800d064:	9805      	ldr	r0, [sp, #20]
 800d066:	fb92 f2f5 	sdiv	r2, r2, r5
 800d06a:	fb90 f0f5 	sdiv	r0, r0, r5
 800d06e:	b292      	uxth	r2, r2
 800d070:	3002      	adds	r0, #2
 800d072:	1a80      	subs	r0, r0, r2
 800d074:	9b06      	ldr	r3, [sp, #24]
 800d076:	9907      	ldr	r1, [sp, #28]
 800d078:	fb93 f3f5 	sdiv	r3, r3, r5
 800d07c:	fb91 f1f5 	sdiv	r1, r1, r5
 800d080:	b29b      	uxth	r3, r3
 800d082:	3102      	adds	r1, #2
 800d084:	1ac9      	subs	r1, r1, r3
 800d086:	3a01      	subs	r2, #1
 800d088:	3b01      	subs	r3, #1
 800d08a:	80a0      	strh	r0, [r4, #4]
 800d08c:	4620      	mov	r0, r4
 800d08e:	8022      	strh	r2, [r4, #0]
 800d090:	8063      	strh	r3, [r4, #2]
 800d092:	80e1      	strh	r1, [r4, #6]
 800d094:	b009      	add	sp, #36	@ 0x24
 800d096:	bd30      	pop	{r4, r5, pc}

0800d098 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800d098:	b510      	push	{r4, lr}
 800d09a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 800d09e:	4604      	mov	r4, r0
 800d0a0:	f7ff ffc4 	bl	800d02c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800d0a4:	4620      	mov	r0, r4
 800d0a6:	bd10      	pop	{r4, pc}

0800d0a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800d0a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0ac:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 800d0b0:	42b5      	cmp	r5, r6
 800d0b2:	bfa2      	ittt	ge
 800d0b4:	462b      	movge	r3, r5
 800d0b6:	4635      	movge	r5, r6
 800d0b8:	461e      	movge	r6, r3
 800d0ba:	1b73      	subs	r3, r6, r5
 800d0bc:	468a      	mov	sl, r1
 800d0be:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 800d0c0:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 800d0c4:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 800d0c8:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 800d0ca:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d0ce:	b0af      	sub	sp, #188	@ 0xbc
 800d0d0:	f04f 0320 	mov.w	r3, #32
 800d0d4:	4604      	mov	r4, r0
 800d0d6:	bfa4      	itt	ge
 800d0d8:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 800d0dc:	2500      	movge	r5, #0
 800d0de:	fb99 f9f3 	sdiv	r9, r9, r3
 800d0e2:	fb9b fbf3 	sdiv	fp, fp, r3
 800d0e6:	2900      	cmp	r1, #0
 800d0e8:	f000 80ff 	beq.w	800d2ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 800d0ec:	f9ba 0000 	ldrsh.w	r0, [sl]
 800d0f0:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 800d0f4:	eba9 0700 	sub.w	r7, r9, r0
 800d0f8:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 800d0fc:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 800d100:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 800d104:	ebab 0803 	sub.w	r8, fp, r3
 800d108:	4407      	add	r7, r0
 800d10a:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 800d10e:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 800d112:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 800d116:	b23f      	sxth	r7, r7
 800d118:	4498      	add	r8, r3
 800d11a:	eba9 0707 	sub.w	r7, r9, r7
 800d11e:	fa0f f888 	sxth.w	r8, r8
 800d122:	ebab 0808 	sub.w	r8, fp, r8
 800d126:	2f00      	cmp	r7, #0
 800d128:	bfb8      	it	lt
 800d12a:	427f      	neglt	r7, r7
 800d12c:	f1b8 0f00 	cmp.w	r8, #0
 800d130:	bfb8      	it	lt
 800d132:	f1c8 0800 	rsblt	r8, r8, #0
 800d136:	45bc      	cmp	ip, r7
 800d138:	bfcc      	ite	gt
 800d13a:	f10c 0701 	addgt.w	r7, ip, #1
 800d13e:	3701      	addle	r7, #1
 800d140:	4540      	cmp	r0, r8
 800d142:	bfc8      	it	gt
 800d144:	f100 0801 	addgt.w	r8, r0, #1
 800d148:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 800d14c:	f100 0001 	add.w	r0, r0, #1
 800d150:	ea4f 0060 	mov.w	r0, r0, asr #1
 800d154:	f04f 0302 	mov.w	r3, #2
 800d158:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 800d15c:	fb91 f1f3 	sdiv	r1, r1, r3
 800d160:	eba2 0201 	sub.w	r2, r2, r1
 800d164:	bfd8      	it	le
 800d166:	f108 0801 	addle.w	r8, r8, #1
 800d16a:	9303      	str	r3, [sp, #12]
 800d16c:	920f      	str	r2, [sp, #60]	@ 0x3c
 800d16e:	f7ff fd57 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineEi>
 800d172:	a92e      	add	r1, sp, #184	@ 0xb8
 800d174:	fb08 f808 	mul.w	r8, r8, r8
 800d178:	f841 0d74 	str.w	r0, [r1, #-116]!
 800d17c:	a80f      	add	r0, sp, #60	@ 0x3c
 800d17e:	f7ff fd43 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d182:	fb07 8707 	mla	r7, r7, r7, r8
 800d186:	f04f 0c20 	mov.w	ip, #32
 800d18a:	fb90 f0fc 	sdiv	r0, r0, ip
 800d18e:	4340      	muls	r0, r0
 800d190:	4287      	cmp	r7, r0
 800d192:	9b03      	ldr	r3, [sp, #12]
 800d194:	da04      	bge.n	800d1a0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 800d196:	2401      	movs	r4, #1
 800d198:	4620      	mov	r0, r4
 800d19a:	b02f      	add	sp, #188	@ 0xbc
 800d19c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d1a0:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800d1a2:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800d1a4:	fb91 f2f3 	sdiv	r2, r1, r3
 800d1a8:	4402      	add	r2, r0
 800d1aa:	fb92 f2fc 	sdiv	r2, r2, ip
 800d1ae:	f9ba 1000 	ldrsh.w	r1, [sl]
 800d1b2:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 800d1b6:	440b      	add	r3, r1
 800d1b8:	b21b      	sxth	r3, r3
 800d1ba:	454b      	cmp	r3, r9
 800d1bc:	bfa8      	it	ge
 800d1be:	464b      	movge	r3, r9
 800d1c0:	428b      	cmp	r3, r1
 800d1c2:	bfac      	ite	ge
 800d1c4:	eba9 0903 	subge.w	r9, r9, r3
 800d1c8:	eba9 0901 	sublt.w	r9, r9, r1
 800d1cc:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 800d1d0:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 800d1d4:	440b      	add	r3, r1
 800d1d6:	b21b      	sxth	r3, r3
 800d1d8:	455b      	cmp	r3, fp
 800d1da:	bfa8      	it	ge
 800d1dc:	465b      	movge	r3, fp
 800d1de:	428b      	cmp	r3, r1
 800d1e0:	bfac      	ite	ge
 800d1e2:	ebab 0b03 	subge.w	fp, fp, r3
 800d1e6:	ebab 0b01 	sublt.w	fp, fp, r1
 800d1ea:	3201      	adds	r2, #1
 800d1ec:	fb0b fb0b 	mul.w	fp, fp, fp
 800d1f0:	fb09 b909 	mla	r9, r9, r9, fp
 800d1f4:	4352      	muls	r2, r2
 800d1f6:	4591      	cmp	r9, r2
 800d1f8:	dccd      	bgt.n	800d196 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 800d1fa:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 800d1fe:	4621      	mov	r1, r4
 800d200:	4648      	mov	r0, r9
 800d202:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 800d204:	f003 fbe6 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d208:	6823      	ldr	r3, [r4, #0]
 800d20a:	4620      	mov	r0, r4
 800d20c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800d20e:	4798      	blx	r3
 800d210:	4653      	mov	r3, sl
 800d212:	9000      	str	r0, [sp, #0]
 800d214:	464a      	mov	r2, r9
 800d216:	4639      	mov	r1, r7
 800d218:	a811      	add	r0, sp, #68	@ 0x44
 800d21a:	f013 ffbf 	bl	802119c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d21e:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 800d220:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800d222:	920b      	str	r2, [sp, #44]	@ 0x2c
 800d224:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800d228:	930c      	str	r3, [sp, #48]	@ 0x30
 800d22a:	dd07      	ble.n	800d23c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 800d22c:	2102      	movs	r1, #2
 800d22e:	fb93 f3f1 	sdiv	r3, r3, r1
 800d232:	4413      	add	r3, r2
 800d234:	930c      	str	r3, [sp, #48]	@ 0x30
 800d236:	fb93 f3f1 	sdiv	r3, r3, r1
 800d23a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800d23c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d240:	4628      	mov	r0, r5
 800d242:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d246:	930d      	str	r3, [sp, #52]	@ 0x34
 800d248:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 800d24c:	f7ff fd08 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d250:	4649      	mov	r1, r9
 800d252:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d254:	a80d      	add	r0, sp, #52	@ 0x34
 800d256:	f7ff fcd7 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d25a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d25c:	f04f 0a02 	mov.w	sl, #2
 800d260:	fb90 f0fa 	sdiv	r0, r0, sl
 800d264:	eb00 0b03 	add.w	fp, r0, r3
 800d268:	4628      	mov	r0, r5
 800d26a:	f7ff fd18 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d26e:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 800d272:	017f      	lsls	r7, r7, #5
 800d274:	f848 0d80 	str.w	r0, [r8, #-128]!
 800d278:	a80d      	add	r0, sp, #52	@ 0x34
 800d27a:	4641      	mov	r1, r8
 800d27c:	f7ff fcc4 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d280:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d282:	fb90 f0fa 	sdiv	r0, r0, sl
 800d286:	4659      	mov	r1, fp
 800d288:	1a12      	subs	r2, r2, r0
 800d28a:	a811      	add	r0, sp, #68	@ 0x44
 800d28c:	f014 f8d2 	bl	8021434 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d290:	f105 0a20 	add.w	sl, r5, #32
 800d294:	bb67      	cbnz	r7, 800d2f0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 800d296:	46ab      	mov	fp, r5
 800d298:	45b2      	cmp	sl, r6
 800d29a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800d29c:	dc33      	bgt.n	800d306 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 800d29e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800d2a0:	4650      	mov	r0, sl
 800d2a2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 800d2a6:	920d      	str	r2, [sp, #52]	@ 0x34
 800d2a8:	f7ff fcda 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d2ac:	4641      	mov	r1, r8
 800d2ae:	900e      	str	r0, [sp, #56]	@ 0x38
 800d2b0:	a80d      	add	r0, sp, #52	@ 0x34
 800d2b2:	f7ff fca9 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d2b6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d2b8:	2302      	movs	r3, #2
 800d2ba:	fb90 f0f3 	sdiv	r0, r0, r3
 800d2be:	eb00 0b02 	add.w	fp, r0, r2
 800d2c2:	4650      	mov	r0, sl
 800d2c4:	f7ff fceb 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d2c8:	4649      	mov	r1, r9
 800d2ca:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d2cc:	a80d      	add	r0, sp, #52	@ 0x34
 800d2ce:	f7ff fc9b 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d2d2:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d2d4:	2302      	movs	r3, #2
 800d2d6:	4659      	mov	r1, fp
 800d2d8:	fb90 f0f3 	sdiv	r0, r0, r3
 800d2dc:	1a12      	subs	r2, r2, r0
 800d2de:	a811      	add	r0, sp, #68	@ 0x44
 800d2e0:	46d3      	mov	fp, sl
 800d2e2:	f014 f8f4 	bl	80214ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d2e6:	44ba      	add	sl, r7
 800d2e8:	e7d6      	b.n	800d298 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 800d2ea:	fb92 f2f3 	sdiv	r2, r2, r3
 800d2ee:	e75e      	b.n	800d1ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 800d2f0:	fb9a f2f7 	sdiv	r2, sl, r7
 800d2f4:	fb07 a212 	mls	r2, r7, r2, sl
 800d2f8:	1aba      	subs	r2, r7, r2
 800d2fa:	fb92 f1f7 	sdiv	r1, r2, r7
 800d2fe:	fb07 2211 	mls	r2, r7, r1, r2
 800d302:	4492      	add	sl, r2
 800d304:	e7c7      	b.n	800d296 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 800d306:	455e      	cmp	r6, fp
 800d308:	dd23      	ble.n	800d352 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 800d30a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800d30c:	4630      	mov	r0, r6
 800d30e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800d312:	920d      	str	r2, [sp, #52]	@ 0x34
 800d314:	f7ff fca4 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d318:	4641      	mov	r1, r8
 800d31a:	900e      	str	r0, [sp, #56]	@ 0x38
 800d31c:	a80d      	add	r0, sp, #52	@ 0x34
 800d31e:	f7ff fc73 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d322:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d324:	f04f 0a02 	mov.w	sl, #2
 800d328:	fb90 f0fa 	sdiv	r0, r0, sl
 800d32c:	4403      	add	r3, r0
 800d32e:	4630      	mov	r0, r6
 800d330:	9303      	str	r3, [sp, #12]
 800d332:	f7ff fcb4 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d336:	4649      	mov	r1, r9
 800d338:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d33a:	a80d      	add	r0, sp, #52	@ 0x34
 800d33c:	f7ff fc64 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d340:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d342:	9b03      	ldr	r3, [sp, #12]
 800d344:	fb90 f0fa 	sdiv	r0, r0, sl
 800d348:	4619      	mov	r1, r3
 800d34a:	1a12      	subs	r2, r2, r0
 800d34c:	a811      	add	r0, sp, #68	@ 0x44
 800d34e:	f014 f8be 	bl	80214ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d352:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d354:	b99b      	cbnz	r3, 800d37e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 800d356:	1b75      	subs	r5, r6, r5
 800d358:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 800d35c:	da04      	bge.n	800d368 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d35e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 800d362:	a811      	add	r0, sp, #68	@ 0x44
 800d364:	f014 f8b3 	bl	80214ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d368:	21ff      	movs	r1, #255	@ 0xff
 800d36a:	a811      	add	r0, sp, #68	@ 0x44
 800d36c:	f013 ffaa 	bl	80212c4 <_ZN8touchgfx6Canvas6renderEh>
 800d370:	4604      	mov	r4, r0
 800d372:	4b8a      	ldr	r3, [pc, #552]	@ (800d59c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 800d374:	9311      	str	r3, [sp, #68]	@ 0x44
 800d376:	a816      	add	r0, sp, #88	@ 0x58
 800d378:	f000 fa00 	bl	800d77c <_ZN8touchgfx7OutlineD1Ev>
 800d37c:	e70c      	b.n	800d198 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 800d37e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 800d382:	429a      	cmp	r2, r3
 800d384:	f0c0 8107 	bcc.w	800d596 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 800d388:	1b73      	subs	r3, r6, r5
 800d38a:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 800d38e:	9303      	str	r3, [sp, #12]
 800d390:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d394:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 800d398:	da43      	bge.n	800d422 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800d39a:	4630      	mov	r0, r6
 800d39c:	f7ff fc60 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d3a0:	4649      	mov	r1, r9
 800d3a2:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d3a4:	a80b      	add	r0, sp, #44	@ 0x2c
 800d3a6:	f7ff fc2f 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d3aa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d3ac:	18c3      	adds	r3, r0, r3
 800d3ae:	4630      	mov	r0, r6
 800d3b0:	9305      	str	r3, [sp, #20]
 800d3b2:	f7ff fc74 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d3b6:	4649      	mov	r1, r9
 800d3b8:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d3ba:	a80b      	add	r0, sp, #44	@ 0x2c
 800d3bc:	f7ff fc24 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d3c0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d3c2:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 800d3c6:	1a1b      	subs	r3, r3, r0
 800d3c8:	9304      	str	r3, [sp, #16]
 800d3ca:	9206      	str	r2, [sp, #24]
 800d3cc:	eb06 030a 	add.w	r3, r6, sl
 800d3d0:	9a06      	ldr	r2, [sp, #24]
 800d3d2:	4293      	cmp	r3, r2
 800d3d4:	da25      	bge.n	800d422 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800d3d6:	4618      	mov	r0, r3
 800d3d8:	9308      	str	r3, [sp, #32]
 800d3da:	f7ff fc41 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d3de:	4649      	mov	r1, r9
 800d3e0:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d3e2:	a80c      	add	r0, sp, #48	@ 0x30
 800d3e4:	f7ff fc10 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d3e8:	9b05      	ldr	r3, [sp, #20]
 800d3ea:	2202      	movs	r2, #2
 800d3ec:	fb90 f0f2 	sdiv	r0, r0, r2
 800d3f0:	18c3      	adds	r3, r0, r3
 800d3f2:	9307      	str	r3, [sp, #28]
 800d3f4:	9b08      	ldr	r3, [sp, #32]
 800d3f6:	9209      	str	r2, [sp, #36]	@ 0x24
 800d3f8:	4618      	mov	r0, r3
 800d3fa:	f7ff fc50 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d3fe:	a92e      	add	r1, sp, #184	@ 0xb8
 800d400:	f841 0d80 	str.w	r0, [r1, #-128]!
 800d404:	a80c      	add	r0, sp, #48	@ 0x30
 800d406:	f7ff fbff 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d40a:	9b04      	ldr	r3, [sp, #16]
 800d40c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d40e:	9907      	ldr	r1, [sp, #28]
 800d410:	fb90 f2f2 	sdiv	r2, r0, r2
 800d414:	a811      	add	r0, sp, #68	@ 0x44
 800d416:	1a9a      	subs	r2, r3, r2
 800d418:	f014 f859 	bl	80214ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d41c:	9b08      	ldr	r3, [sp, #32]
 800d41e:	4453      	add	r3, sl
 800d420:	e7d6      	b.n	800d3d0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 800d422:	455e      	cmp	r6, fp
 800d424:	dd25      	ble.n	800d472 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 800d426:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d42a:	4630      	mov	r0, r6
 800d42c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d430:	930d      	str	r3, [sp, #52]	@ 0x34
 800d432:	f7ff fc15 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d436:	4641      	mov	r1, r8
 800d438:	900e      	str	r0, [sp, #56]	@ 0x38
 800d43a:	a80d      	add	r0, sp, #52	@ 0x34
 800d43c:	f7ff fbe4 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d440:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d442:	2202      	movs	r2, #2
 800d444:	fb90 f0f2 	sdiv	r0, r0, r2
 800d448:	eb00 0903 	add.w	r9, r0, r3
 800d44c:	4630      	mov	r0, r6
 800d44e:	9204      	str	r2, [sp, #16]
 800d450:	f7ff fc25 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d454:	a92e      	add	r1, sp, #184	@ 0xb8
 800d456:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800d45a:	a80d      	add	r0, sp, #52	@ 0x34
 800d45c:	f7ff fbd4 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d460:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d462:	9a04      	ldr	r2, [sp, #16]
 800d464:	fb90 f2f2 	sdiv	r2, r0, r2
 800d468:	4649      	mov	r1, r9
 800d46a:	1a9a      	subs	r2, r3, r2
 800d46c:	a811      	add	r0, sp, #68	@ 0x44
 800d46e:	f014 f82e 	bl	80214ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d472:	46d9      	mov	r9, fp
 800d474:	2602      	movs	r6, #2
 800d476:	45a9      	cmp	r9, r5
 800d478:	db25      	blt.n	800d4c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 800d47a:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d47e:	4648      	mov	r0, r9
 800d480:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d484:	930d      	str	r3, [sp, #52]	@ 0x34
 800d486:	f7ff fbeb 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d48a:	4641      	mov	r1, r8
 800d48c:	900e      	str	r0, [sp, #56]	@ 0x38
 800d48e:	a80d      	add	r0, sp, #52	@ 0x34
 800d490:	f7ff fbba 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d494:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d496:	fb90 f0f6 	sdiv	r0, r0, r6
 800d49a:	eb00 0b03 	add.w	fp, r0, r3
 800d49e:	4648      	mov	r0, r9
 800d4a0:	f7ff fbfd 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d4a4:	a90f      	add	r1, sp, #60	@ 0x3c
 800d4a6:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d4a8:	a80d      	add	r0, sp, #52	@ 0x34
 800d4aa:	f7ff fbad 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d4ae:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d4b0:	fb90 f0f6 	sdiv	r0, r0, r6
 800d4b4:	4659      	mov	r1, fp
 800d4b6:	1a12      	subs	r2, r2, r0
 800d4b8:	a811      	add	r0, sp, #68	@ 0x44
 800d4ba:	46cb      	mov	fp, r9
 800d4bc:	f014 f807 	bl	80214ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d4c0:	eba9 0907 	sub.w	r9, r9, r7
 800d4c4:	e7d7      	b.n	800d476 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 800d4c6:	455d      	cmp	r5, fp
 800d4c8:	da22      	bge.n	800d510 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 800d4ca:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d4ce:	4628      	mov	r0, r5
 800d4d0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d4d4:	930d      	str	r3, [sp, #52]	@ 0x34
 800d4d6:	f7ff fbc3 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d4da:	4641      	mov	r1, r8
 800d4dc:	900e      	str	r0, [sp, #56]	@ 0x38
 800d4de:	a80d      	add	r0, sp, #52	@ 0x34
 800d4e0:	f7ff fb92 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d4e4:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800d4e6:	2602      	movs	r6, #2
 800d4e8:	fb90 f0f6 	sdiv	r0, r0, r6
 800d4ec:	4407      	add	r7, r0
 800d4ee:	4628      	mov	r0, r5
 800d4f0:	f7ff fbd5 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d4f4:	a92e      	add	r1, sp, #184	@ 0xb8
 800d4f6:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800d4fa:	a80d      	add	r0, sp, #52	@ 0x34
 800d4fc:	f7ff fb84 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d500:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d502:	fb90 f0f6 	sdiv	r0, r0, r6
 800d506:	4639      	mov	r1, r7
 800d508:	1a12      	subs	r2, r2, r0
 800d50a:	a811      	add	r0, sp, #68	@ 0x44
 800d50c:	f013 ffdf 	bl	80214ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d510:	9b03      	ldr	r3, [sp, #12]
 800d512:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d516:	f6bf af27 	bge.w	800d368 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d51a:	4628      	mov	r0, r5
 800d51c:	f7ff fba0 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d520:	ae2e      	add	r6, sp, #184	@ 0xb8
 800d522:	f04f 0b02 	mov.w	fp, #2
 800d526:	f846 0d7c 	str.w	r0, [r6, #-124]!
 800d52a:	a80b      	add	r0, sp, #44	@ 0x2c
 800d52c:	4631      	mov	r1, r6
 800d52e:	f7ff fb6b 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d532:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d534:	eb00 0903 	add.w	r9, r0, r3
 800d538:	4628      	mov	r0, r5
 800d53a:	f7ff fbb0 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d53e:	4631      	mov	r1, r6
 800d540:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d542:	a80b      	add	r0, sp, #44	@ 0x2c
 800d544:	f7ff fb60 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d548:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d54a:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 800d54e:	eba3 0800 	sub.w	r8, r3, r0
 800d552:	4454      	add	r4, sl
 800d554:	42a5      	cmp	r5, r4
 800d556:	f77f af07 	ble.w	800d368 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d55a:	4620      	mov	r0, r4
 800d55c:	f7ff fb80 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d560:	4631      	mov	r1, r6
 800d562:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d564:	a80c      	add	r0, sp, #48	@ 0x30
 800d566:	f7ff fb4f 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d56a:	fb90 f0fb 	sdiv	r0, r0, fp
 800d56e:	eb00 0709 	add.w	r7, r0, r9
 800d572:	4620      	mov	r0, r4
 800d574:	f7ff fb93 	bl	800cc9e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d578:	a90e      	add	r1, sp, #56	@ 0x38
 800d57a:	900e      	str	r0, [sp, #56]	@ 0x38
 800d57c:	a80c      	add	r0, sp, #48	@ 0x30
 800d57e:	f7ff fb43 	bl	800cc08 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d582:	4639      	mov	r1, r7
 800d584:	fb90 f2fb 	sdiv	r2, r0, fp
 800d588:	a811      	add	r0, sp, #68	@ 0x44
 800d58a:	eba8 0202 	sub.w	r2, r8, r2
 800d58e:	f013 ff9e 	bl	80214ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d592:	4454      	add	r4, sl
 800d594:	e7de      	b.n	800d554 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 800d596:	2400      	movs	r4, #0
 800d598:	e6eb      	b.n	800d372 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 800d59a:	bf00      	nop
 800d59c:	08025648 	.word	0x08025648

0800d5a0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800d5a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d5a2:	6803      	ldr	r3, [r0, #0]
 800d5a4:	460d      	mov	r5, r1
 800d5a6:	4604      	mov	r4, r0
 800d5a8:	4601      	mov	r1, r0
 800d5aa:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d5ac:	a802      	add	r0, sp, #8
 800d5ae:	4798      	blx	r3
 800d5b0:	6828      	ldr	r0, [r5, #0]
 800d5b2:	6869      	ldr	r1, [r5, #4]
 800d5b4:	466b      	mov	r3, sp
 800d5b6:	c303      	stmia	r3!, {r0, r1}
 800d5b8:	4668      	mov	r0, sp
 800d5ba:	4619      	mov	r1, r3
 800d5bc:	f7fc feb6 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 800d5c0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800d5c2:	b188      	cbz	r0, 800d5e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d5c4:	6803      	ldr	r3, [r0, #0]
 800d5c6:	1d21      	adds	r1, r4, #4
 800d5c8:	68db      	ldr	r3, [r3, #12]
 800d5ca:	4798      	blx	r3
 800d5cc:	b160      	cbz	r0, 800d5e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d5ce:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d5d2:	2b00      	cmp	r3, #0
 800d5d4:	dd08      	ble.n	800d5e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d5d6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800d5da:	2d00      	cmp	r5, #0
 800d5dc:	dd04      	ble.n	800d5e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d5de:	4a2b      	ldr	r2, [pc, #172]	@ (800d68c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800d5e0:	7812      	ldrb	r2, [r2, #0]
 800d5e2:	b11a      	cbz	r2, 800d5ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800d5e4:	2a01      	cmp	r2, #1
 800d5e6:	d029      	beq.n	800d63c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800d5e8:	b004      	add	sp, #16
 800d5ea:	bd70      	pop	{r4, r5, r6, pc}
 800d5ec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d5f0:	441d      	add	r5, r3
 800d5f2:	b2ad      	uxth	r5, r5
 800d5f4:	b22e      	sxth	r6, r5
 800d5f6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800d5fa:	42b3      	cmp	r3, r6
 800d5fc:	daf4      	bge.n	800d5e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d5fe:	6823      	ldr	r3, [r4, #0]
 800d600:	4669      	mov	r1, sp
 800d602:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d604:	4620      	mov	r0, r4
 800d606:	4798      	blx	r3
 800d608:	b940      	cbnz	r0, 800d61c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d60a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d60e:	2b01      	cmp	r3, #1
 800d610:	d004      	beq.n	800d61c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d612:	3301      	adds	r3, #1
 800d614:	105b      	asrs	r3, r3, #1
 800d616:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d61a:	e7f0      	b.n	800d5fe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d61c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d620:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d624:	4413      	add	r3, r2
 800d626:	b29b      	uxth	r3, r3
 800d628:	441a      	add	r2, r3
 800d62a:	b212      	sxth	r2, r2
 800d62c:	4296      	cmp	r6, r2
 800d62e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d632:	dae0      	bge.n	800d5f6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d634:	1aeb      	subs	r3, r5, r3
 800d636:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d63a:	e7dc      	b.n	800d5f6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d63c:	f8bd 5000 	ldrh.w	r5, [sp]
 800d640:	441d      	add	r5, r3
 800d642:	b2ad      	uxth	r5, r5
 800d644:	b22e      	sxth	r6, r5
 800d646:	f9bd 3000 	ldrsh.w	r3, [sp]
 800d64a:	42b3      	cmp	r3, r6
 800d64c:	dacc      	bge.n	800d5e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d64e:	6823      	ldr	r3, [r4, #0]
 800d650:	4669      	mov	r1, sp
 800d652:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d654:	4620      	mov	r0, r4
 800d656:	4798      	blx	r3
 800d658:	b940      	cbnz	r0, 800d66c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d65a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d65e:	2b01      	cmp	r3, #1
 800d660:	d004      	beq.n	800d66c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d662:	3301      	adds	r3, #1
 800d664:	105b      	asrs	r3, r3, #1
 800d666:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d66a:	e7f0      	b.n	800d64e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800d66c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d670:	f8bd 3000 	ldrh.w	r3, [sp]
 800d674:	4413      	add	r3, r2
 800d676:	b29b      	uxth	r3, r3
 800d678:	441a      	add	r2, r3
 800d67a:	b212      	sxth	r2, r2
 800d67c:	4296      	cmp	r6, r2
 800d67e:	f8ad 3000 	strh.w	r3, [sp]
 800d682:	dae0      	bge.n	800d646 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d684:	1aeb      	subs	r3, r5, r3
 800d686:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d68a:	e7dc      	b.n	800d646 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d68c:	20013ff2 	.word	0x20013ff2

0800d690 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800d690:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d692:	6803      	ldr	r3, [r0, #0]
 800d694:	4604      	mov	r4, r0
 800d696:	4601      	mov	r1, r0
 800d698:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d69a:	4668      	mov	r0, sp
 800d69c:	4798      	blx	r3
 800d69e:	2100      	movs	r1, #0
 800d6a0:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800d6a4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d6a8:	9102      	str	r1, [sp, #8]
 800d6aa:	4668      	mov	r0, sp
 800d6ac:	a902      	add	r1, sp, #8
 800d6ae:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d6b2:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d6b6:	f7fc fe39 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 800d6ba:	6823      	ldr	r3, [r4, #0]
 800d6bc:	4669      	mov	r1, sp
 800d6be:	691b      	ldr	r3, [r3, #16]
 800d6c0:	4620      	mov	r0, r4
 800d6c2:	4798      	blx	r3
 800d6c4:	b004      	add	sp, #16
 800d6c6:	bd10      	pop	{r4, pc}

0800d6c8 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800d6c8:	2101      	movs	r1, #1
 800d6ca:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800d6ce:	490b      	ldr	r1, [pc, #44]	@ (800d6fc <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800d6d0:	6001      	str	r1, [r0, #0]
 800d6d2:	2200      	movs	r2, #0
 800d6d4:	21ff      	movs	r1, #255	@ 0xff
 800d6d6:	8082      	strh	r2, [r0, #4]
 800d6d8:	80c2      	strh	r2, [r0, #6]
 800d6da:	8102      	strh	r2, [r0, #8]
 800d6dc:	8142      	strh	r2, [r0, #10]
 800d6de:	8182      	strh	r2, [r0, #12]
 800d6e0:	81c2      	strh	r2, [r0, #14]
 800d6e2:	8202      	strh	r2, [r0, #16]
 800d6e4:	8242      	strh	r2, [r0, #18]
 800d6e6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d6ea:	61c2      	str	r2, [r0, #28]
 800d6ec:	8402      	strh	r2, [r0, #32]
 800d6ee:	8442      	strh	r2, [r0, #34]	@ 0x22
 800d6f0:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800d6f4:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800d6f8:	6282      	str	r2, [r0, #40]	@ 0x28
 800d6fa:	4770      	bx	lr
 800d6fc:	08025124 	.word	0x08025124

0800d700 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d700:	2300      	movs	r3, #0
 800d702:	8083      	strh	r3, [r0, #4]
 800d704:	80c3      	strh	r3, [r0, #6]
 800d706:	8003      	strh	r3, [r0, #0]
 800d708:	8043      	strh	r3, [r0, #2]
 800d70a:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800d70e:	2bff      	cmp	r3, #255	@ 0xff
 800d710:	bf01      	itttt	eq
 800d712:	890b      	ldrheq	r3, [r1, #8]
 800d714:	8083      	strheq	r3, [r0, #4]
 800d716:	894b      	ldrheq	r3, [r1, #10]
 800d718:	80c3      	strheq	r3, [r0, #6]
 800d71a:	4770      	bx	lr

0800d71c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d71c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d71e:	4604      	mov	r4, r0
 800d720:	6808      	ldr	r0, [r1, #0]
 800d722:	6849      	ldr	r1, [r1, #4]
 800d724:	466b      	mov	r3, sp
 800d726:	c303      	stmia	r3!, {r0, r1}
 800d728:	6823      	ldr	r3, [r4, #0]
 800d72a:	4669      	mov	r1, sp
 800d72c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d72e:	4620      	mov	r0, r4
 800d730:	4798      	blx	r3
 800d732:	4b08      	ldr	r3, [pc, #32]	@ (800d754 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d734:	681b      	ldr	r3, [r3, #0]
 800d736:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800d73a:	b10a      	cbz	r2, 800d740 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d73c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800d73e:	b900      	cbnz	r0, 800d742 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d740:	6898      	ldr	r0, [r3, #8]
 800d742:	6803      	ldr	r3, [r0, #0]
 800d744:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800d746:	6a1d      	ldr	r5, [r3, #32]
 800d748:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800d74c:	4669      	mov	r1, sp
 800d74e:	47a8      	blx	r5
 800d750:	b003      	add	sp, #12
 800d752:	bd30      	pop	{r4, r5, pc}
 800d754:	20013ffc 	.word	0x20013ffc

0800d758 <_ZN8touchgfx3BoxD1Ev>:
 800d758:	4770      	bx	lr

0800d75a <_ZN8touchgfx3BoxD0Ev>:
 800d75a:	b510      	push	{r4, lr}
 800d75c:	212c      	movs	r1, #44	@ 0x2c
 800d75e:	4604      	mov	r4, r0
 800d760:	f014 f97f 	bl	8021a62 <_ZdlPvj>
 800d764:	4620      	mov	r0, r4
 800d766:	bd10      	pop	{r4, pc}

0800d768 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d768:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800d76c:	b12a      	cbz	r2, 800d77a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d76e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800d772:	b112      	cbz	r2, 800d77a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d774:	6803      	ldr	r3, [r0, #0]
 800d776:	695b      	ldr	r3, [r3, #20]
 800d778:	4718      	bx	r3
 800d77a:	4770      	bx	lr

0800d77c <_ZN8touchgfx7OutlineD1Ev>:
 800d77c:	4770      	bx	lr

0800d77e <_ZN8touchgfx7OutlineD0Ev>:
 800d77e:	b510      	push	{r4, lr}
 800d780:	2130      	movs	r1, #48	@ 0x30
 800d782:	4604      	mov	r4, r0
 800d784:	f014 f96d 	bl	8021a62 <_ZdlPvj>
 800d788:	4620      	mov	r0, r4
 800d78a:	bd10      	pop	{r4, pc}

0800d78c <_ZN8touchgfx7Outline5resetEv>:
 800d78c:	b510      	push	{r4, lr}
 800d78e:	4604      	mov	r4, r0
 800d790:	f000 fe8c 	bl	800e4ac <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800d794:	60e0      	str	r0, [r4, #12]
 800d796:	f000 fe8f 	bl	800e4b8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800d79a:	68e3      	ldr	r3, [r4, #12]
 800d79c:	6123      	str	r3, [r4, #16]
 800d79e:	08c0      	lsrs	r0, r0, #3
 800d7a0:	2200      	movs	r2, #0
 800d7a2:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800d7a6:	3801      	subs	r0, #1
 800d7a8:	6060      	str	r0, [r4, #4]
 800d7aa:	60a2      	str	r2, [r4, #8]
 800d7ac:	8019      	strh	r1, [r3, #0]
 800d7ae:	8059      	strh	r1, [r3, #2]
 800d7b0:	809a      	strh	r2, [r3, #4]
 800d7b2:	80da      	strh	r2, [r3, #6]
 800d7b4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d7b6:	f023 0301 	bic.w	r3, r3, #1
 800d7ba:	f043 0302 	orr.w	r3, r3, #2
 800d7be:	6263      	str	r3, [r4, #36]	@ 0x24
 800d7c0:	bd10      	pop	{r4, pc}
	...

0800d7c4 <_ZN8touchgfx7OutlineC1Ev>:
 800d7c4:	b510      	push	{r4, lr}
 800d7c6:	4b0a      	ldr	r3, [pc, #40]	@ (800d7f0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800d7c8:	6003      	str	r3, [r0, #0]
 800d7ca:	2300      	movs	r3, #0
 800d7cc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800d7d0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d7d4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800d7d8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800d7dc:	6243      	str	r3, [r0, #36]	@ 0x24
 800d7de:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800d7e2:	4604      	mov	r4, r0
 800d7e4:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800d7e8:	f7ff ffd0 	bl	800d78c <_ZN8touchgfx7Outline5resetEv>
 800d7ec:	4620      	mov	r0, r4
 800d7ee:	bd10      	pop	{r4, pc}
 800d7f0:	08025204 	.word	0x08025204

0800d7f4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800d7f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7f8:	b093      	sub	sp, #76	@ 0x4c
 800d7fa:	1156      	asrs	r6, r2, #5
 800d7fc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800d7fe:	9305      	str	r3, [sp, #20]
 800d800:	f004 051f 	and.w	r5, r4, #31
 800d804:	1153      	asrs	r3, r2, #5
 800d806:	9504      	str	r5, [sp, #16]
 800d808:	1165      	asrs	r5, r4, #5
 800d80a:	9303      	str	r3, [sp, #12]
 800d80c:	42ae      	cmp	r6, r5
 800d80e:	ea4f 1364 	mov.w	r3, r4, asr #5
 800d812:	9306      	str	r3, [sp, #24]
 800d814:	f002 031f 	and.w	r3, r2, #31
 800d818:	f040 80f8 	bne.w	800da0c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800d81c:	9c04      	ldr	r4, [sp, #16]
 800d81e:	9a05      	ldr	r2, [sp, #20]
 800d820:	42a3      	cmp	r3, r4
 800d822:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800d826:	6902      	ldr	r2, [r0, #16]
 800d828:	d125      	bne.n	800d876 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800d82a:	f9b2 3000 	ldrsh.w	r3, [r2]
 800d82e:	459e      	cmp	lr, r3
 800d830:	d103      	bne.n	800d83a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800d832:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d836:	429e      	cmp	r6, r3
 800d838:	d035      	beq.n	800d8a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d83a:	88d1      	ldrh	r1, [r2, #6]
 800d83c:	8893      	ldrh	r3, [r2, #4]
 800d83e:	430b      	orrs	r3, r1
 800d840:	d010      	beq.n	800d864 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d842:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d846:	2b00      	cmp	r3, #0
 800d848:	db0c      	blt.n	800d864 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d84a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800d84c:	428b      	cmp	r3, r1
 800d84e:	da09      	bge.n	800d864 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d850:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800d854:	428b      	cmp	r3, r1
 800d856:	bf38      	it	cc
 800d858:	3208      	addcc	r2, #8
 800d85a:	f103 0301 	add.w	r3, r3, #1
 800d85e:	bf38      	it	cc
 800d860:	6102      	strcc	r2, [r0, #16]
 800d862:	6083      	str	r3, [r0, #8]
 800d864:	6903      	ldr	r3, [r0, #16]
 800d866:	9a03      	ldr	r2, [sp, #12]
 800d868:	f8a3 e000 	strh.w	lr, [r3]
 800d86c:	805a      	strh	r2, [r3, #2]
 800d86e:	2200      	movs	r2, #0
 800d870:	809a      	strh	r2, [r3, #4]
 800d872:	80da      	strh	r2, [r3, #6]
 800d874:	e017      	b.n	800d8a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d876:	9c05      	ldr	r4, [sp, #20]
 800d878:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800d87c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800d880:	f004 041f 	and.w	r4, r4, #31
 800d884:	114e      	asrs	r6, r1, #5
 800d886:	9402      	str	r4, [sp, #8]
 800d888:	9c04      	ldr	r4, [sp, #16]
 800d88a:	4576      	cmp	r6, lr
 800d88c:	f001 0c1f 	and.w	ip, r1, #31
 800d890:	eba4 0403 	sub.w	r4, r4, r3
 800d894:	d10a      	bne.n	800d8ac <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800d896:	9b02      	ldr	r3, [sp, #8]
 800d898:	449c      	add	ip, r3
 800d89a:	44a0      	add	r8, r4
 800d89c:	fb04 a40c 	mla	r4, r4, ip, sl
 800d8a0:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d8a4:	80d4      	strh	r4, [r2, #6]
 800d8a6:	b013      	add	sp, #76	@ 0x4c
 800d8a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d8ac:	9d05      	ldr	r5, [sp, #20]
 800d8ae:	1a69      	subs	r1, r5, r1
 800d8b0:	bf5b      	ittet	pl
 800d8b2:	f1cc 0520 	rsbpl	r5, ip, #32
 800d8b6:	436c      	mulpl	r4, r5
 800d8b8:	2500      	movmi	r5, #0
 800d8ba:	2520      	movpl	r5, #32
 800d8bc:	bf44      	itt	mi
 800d8be:	fb04 f40c 	mulmi.w	r4, r4, ip
 800d8c2:	4249      	negmi	r1, r1
 800d8c4:	9501      	str	r5, [sp, #4]
 800d8c6:	9f01      	ldr	r7, [sp, #4]
 800d8c8:	fb94 f5f1 	sdiv	r5, r4, r1
 800d8cc:	fb01 4415 	mls	r4, r1, r5, r4
 800d8d0:	bf54      	ite	pl
 800d8d2:	f04f 0901 	movpl.w	r9, #1
 800d8d6:	f04f 39ff 	movmi.w	r9, #4294967295
 800d8da:	2c00      	cmp	r4, #0
 800d8dc:	bfb8      	it	lt
 800d8de:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800d8e2:	44bc      	add	ip, r7
 800d8e4:	44a8      	add	r8, r5
 800d8e6:	fb05 ac0c 	mla	ip, r5, ip, sl
 800d8ea:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d8ee:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d8f2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d8f6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800d8fa:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800d8fe:	bfb8      	it	lt
 800d900:	1864      	addlt	r4, r4, r1
 800d902:	ea58 0202 	orrs.w	r2, r8, r2
 800d906:	444e      	add	r6, r9
 800d908:	d011      	beq.n	800d92e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d90a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800d90e:	f1b8 0f00 	cmp.w	r8, #0
 800d912:	db0c      	blt.n	800d92e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d914:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800d916:	4590      	cmp	r8, r2
 800d918:	da09      	bge.n	800d92e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d91a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800d91e:	4590      	cmp	r8, r2
 800d920:	bf3c      	itt	cc
 800d922:	f10c 0208 	addcc.w	r2, ip, #8
 800d926:	6102      	strcc	r2, [r0, #16]
 800d928:	f108 0201 	add.w	r2, r8, #1
 800d92c:	6082      	str	r2, [r0, #8]
 800d92e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d932:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d936:	f8ac 6000 	strh.w	r6, [ip]
 800d93a:	2700      	movs	r7, #0
 800d93c:	45b6      	cmp	lr, r6
 800d93e:	f8ac 2002 	strh.w	r2, [ip, #2]
 800d942:	f8ac 7004 	strh.w	r7, [ip, #4]
 800d946:	f8ac 7006 	strh.w	r7, [ip, #6]
 800d94a:	442b      	add	r3, r5
 800d94c:	d04d      	beq.n	800d9ea <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800d94e:	9f04      	ldr	r7, [sp, #16]
 800d950:	1aff      	subs	r7, r7, r3
 800d952:	443d      	add	r5, r7
 800d954:	016d      	lsls	r5, r5, #5
 800d956:	fb95 f8f1 	sdiv	r8, r5, r1
 800d95a:	fb01 5518 	mls	r5, r1, r8, r5
 800d95e:	2d00      	cmp	r5, #0
 800d960:	bfb8      	it	lt
 800d962:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800d966:	f108 0701 	add.w	r7, r8, #1
 800d96a:	bfb8      	it	lt
 800d96c:	186d      	addlt	r5, r5, r1
 800d96e:	1a64      	subs	r4, r4, r1
 800d970:	9703      	str	r7, [sp, #12]
 800d972:	f04f 0a00 	mov.w	sl, #0
 800d976:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d97a:	1964      	adds	r4, r4, r5
 800d97c:	bf58      	it	pl
 800d97e:	9f03      	ldrpl	r7, [sp, #12]
 800d980:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800d984:	bf48      	it	mi
 800d986:	4647      	movmi	r7, r8
 800d988:	44bb      	add	fp, r7
 800d98a:	f8ac b004 	strh.w	fp, [ip, #4]
 800d98e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d992:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800d996:	f8ac b006 	strh.w	fp, [ip, #6]
 800d99a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d99e:	443b      	add	r3, r7
 800d9a0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d9a4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800d9a8:	bf58      	it	pl
 800d9aa:	1a64      	subpl	r4, r4, r1
 800d9ac:	ea5b 0707 	orrs.w	r7, fp, r7
 800d9b0:	444e      	add	r6, r9
 800d9b2:	d011      	beq.n	800d9d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d9b4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800d9b8:	f1bb 0f00 	cmp.w	fp, #0
 800d9bc:	db0c      	blt.n	800d9d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d9be:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800d9c0:	45bb      	cmp	fp, r7
 800d9c2:	da09      	bge.n	800d9d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d9c4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800d9c8:	45bb      	cmp	fp, r7
 800d9ca:	bf3c      	itt	cc
 800d9cc:	f10c 0708 	addcc.w	r7, ip, #8
 800d9d0:	6107      	strcc	r7, [r0, #16]
 800d9d2:	f10b 0701 	add.w	r7, fp, #1
 800d9d6:	6087      	str	r7, [r0, #8]
 800d9d8:	6907      	ldr	r7, [r0, #16]
 800d9da:	45b6      	cmp	lr, r6
 800d9dc:	803e      	strh	r6, [r7, #0]
 800d9de:	807a      	strh	r2, [r7, #2]
 800d9e0:	f8a7 a004 	strh.w	sl, [r7, #4]
 800d9e4:	f8a7 a006 	strh.w	sl, [r7, #6]
 800d9e8:	d1c5      	bne.n	800d976 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800d9ea:	9a04      	ldr	r2, [sp, #16]
 800d9ec:	1ad3      	subs	r3, r2, r3
 800d9ee:	6902      	ldr	r2, [r0, #16]
 800d9f0:	8891      	ldrh	r1, [r2, #4]
 800d9f2:	88d6      	ldrh	r6, [r2, #6]
 800d9f4:	4419      	add	r1, r3
 800d9f6:	8091      	strh	r1, [r2, #4]
 800d9f8:	9902      	ldr	r1, [sp, #8]
 800d9fa:	f101 0c20 	add.w	ip, r1, #32
 800d9fe:	9901      	ldr	r1, [sp, #4]
 800da00:	ebac 0c01 	sub.w	ip, ip, r1
 800da04:	fb03 630c 	mla	r3, r3, ip, r6
 800da08:	80d3      	strh	r3, [r2, #6]
 800da0a:	e74c      	b.n	800d8a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800da0c:	9d05      	ldr	r5, [sp, #20]
 800da0e:	1aa2      	subs	r2, r4, r2
 800da10:	eba5 0501 	sub.w	r5, r5, r1
 800da14:	9508      	str	r5, [sp, #32]
 800da16:	9202      	str	r2, [sp, #8]
 800da18:	f140 8128 	bpl.w	800dc6c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800da1c:	9a03      	ldr	r2, [sp, #12]
 800da1e:	2a00      	cmp	r2, #0
 800da20:	f6ff af41 	blt.w	800d8a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800da24:	9a02      	ldr	r2, [sp, #8]
 800da26:	4252      	negs	r2, r2
 800da28:	9202      	str	r2, [sp, #8]
 800da2a:	9a06      	ldr	r2, [sp, #24]
 800da2c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800da30:	f04f 34ff 	mov.w	r4, #4294967295
 800da34:	9206      	str	r2, [sp, #24]
 800da36:	462a      	mov	r2, r5
 800da38:	940b      	str	r4, [sp, #44]	@ 0x2c
 800da3a:	435a      	muls	r2, r3
 800da3c:	2400      	movs	r4, #0
 800da3e:	9d02      	ldr	r5, [sp, #8]
 800da40:	9401      	str	r4, [sp, #4]
 800da42:	9c02      	ldr	r4, [sp, #8]
 800da44:	fb92 f4f4 	sdiv	r4, r2, r4
 800da48:	fb05 2214 	mls	r2, r5, r4, r2
 800da4c:	2a00      	cmp	r2, #0
 800da4e:	9207      	str	r2, [sp, #28]
 800da50:	bfbc      	itt	lt
 800da52:	1952      	addlt	r2, r2, r5
 800da54:	9207      	strlt	r2, [sp, #28]
 800da56:	9a01      	ldr	r2, [sp, #4]
 800da58:	6905      	ldr	r5, [r0, #16]
 800da5a:	bfb8      	it	lt
 800da5c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800da60:	eb04 0901 	add.w	r9, r4, r1
 800da64:	429a      	cmp	r2, r3
 800da66:	ea4f 1669 	mov.w	r6, r9, asr #5
 800da6a:	f040 8112 	bne.w	800dc92 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800da6e:	f9b5 3000 	ldrsh.w	r3, [r5]
 800da72:	429e      	cmp	r6, r3
 800da74:	d104      	bne.n	800da80 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800da76:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800da7a:	9a03      	ldr	r2, [sp, #12]
 800da7c:	429a      	cmp	r2, r3
 800da7e:	d01b      	beq.n	800dab8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800da80:	88ea      	ldrh	r2, [r5, #6]
 800da82:	88ab      	ldrh	r3, [r5, #4]
 800da84:	4313      	orrs	r3, r2
 800da86:	d010      	beq.n	800daaa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800da88:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800da8c:	2a00      	cmp	r2, #0
 800da8e:	db0c      	blt.n	800daaa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800da90:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800da92:	429a      	cmp	r2, r3
 800da94:	da09      	bge.n	800daaa <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800da96:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800da9a:	429a      	cmp	r2, r3
 800da9c:	bf38      	it	cc
 800da9e:	3508      	addcc	r5, #8
 800daa0:	f102 0201 	add.w	r2, r2, #1
 800daa4:	bf38      	it	cc
 800daa6:	6105      	strcc	r5, [r0, #16]
 800daa8:	6082      	str	r2, [r0, #8]
 800daaa:	6903      	ldr	r3, [r0, #16]
 800daac:	9a03      	ldr	r2, [sp, #12]
 800daae:	805a      	strh	r2, [r3, #2]
 800dab0:	2200      	movs	r2, #0
 800dab2:	801e      	strh	r6, [r3, #0]
 800dab4:	809a      	strh	r2, [r3, #4]
 800dab6:	80da      	strh	r2, [r3, #6]
 800dab8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800daba:	9a03      	ldr	r2, [sp, #12]
 800dabc:	6901      	ldr	r1, [r0, #16]
 800dabe:	441a      	add	r2, r3
 800dac0:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dac4:	42b3      	cmp	r3, r6
 800dac6:	d103      	bne.n	800dad0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800dac8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800dacc:	429a      	cmp	r2, r3
 800dace:	d01a      	beq.n	800db06 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800dad0:	88cc      	ldrh	r4, [r1, #6]
 800dad2:	888b      	ldrh	r3, [r1, #4]
 800dad4:	4323      	orrs	r3, r4
 800dad6:	d010      	beq.n	800dafa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800dad8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800dadc:	2c00      	cmp	r4, #0
 800dade:	db0c      	blt.n	800dafa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800dae0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800dae2:	429c      	cmp	r4, r3
 800dae4:	da09      	bge.n	800dafa <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800dae6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800daea:	429c      	cmp	r4, r3
 800daec:	bf38      	it	cc
 800daee:	3108      	addcc	r1, #8
 800daf0:	f104 0401 	add.w	r4, r4, #1
 800daf4:	bf38      	it	cc
 800daf6:	6101      	strcc	r1, [r0, #16]
 800daf8:	6084      	str	r4, [r0, #8]
 800dafa:	6903      	ldr	r3, [r0, #16]
 800dafc:	2100      	movs	r1, #0
 800dafe:	801e      	strh	r6, [r3, #0]
 800db00:	805a      	strh	r2, [r3, #2]
 800db02:	8099      	strh	r1, [r3, #4]
 800db04:	80d9      	strh	r1, [r3, #6]
 800db06:	9b06      	ldr	r3, [sp, #24]
 800db08:	4293      	cmp	r3, r2
 800db0a:	f000 8082 	beq.w	800dc12 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800db0e:	9b08      	ldr	r3, [sp, #32]
 800db10:	9c02      	ldr	r4, [sp, #8]
 800db12:	9902      	ldr	r1, [sp, #8]
 800db14:	015b      	lsls	r3, r3, #5
 800db16:	fb93 f1f1 	sdiv	r1, r3, r1
 800db1a:	fb04 3311 	mls	r3, r4, r1, r3
 800db1e:	2b00      	cmp	r3, #0
 800db20:	9103      	str	r1, [sp, #12]
 800db22:	9308      	str	r3, [sp, #32]
 800db24:	da04      	bge.n	800db30 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800db26:	1e4b      	subs	r3, r1, #1
 800db28:	9303      	str	r3, [sp, #12]
 800db2a:	9b08      	ldr	r3, [sp, #32]
 800db2c:	4423      	add	r3, r4
 800db2e:	9308      	str	r3, [sp, #32]
 800db30:	9b07      	ldr	r3, [sp, #28]
 800db32:	9902      	ldr	r1, [sp, #8]
 800db34:	1a5b      	subs	r3, r3, r1
 800db36:	9307      	str	r3, [sp, #28]
 800db38:	9b01      	ldr	r3, [sp, #4]
 800db3a:	f1c3 0320 	rsb	r3, r3, #32
 800db3e:	930e      	str	r3, [sp, #56]	@ 0x38
 800db40:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800db42:	9b01      	ldr	r3, [sp, #4]
 800db44:	1a5b      	subs	r3, r3, r1
 800db46:	464f      	mov	r7, r9
 800db48:	930a      	str	r3, [sp, #40]	@ 0x28
 800db4a:	2600      	movs	r6, #0
 800db4c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800db50:	185b      	adds	r3, r3, r1
 800db52:	bf58      	it	pl
 800db54:	9902      	ldrpl	r1, [sp, #8]
 800db56:	9307      	str	r3, [sp, #28]
 800db58:	bf5d      	ittte	pl
 800db5a:	1a5b      	subpl	r3, r3, r1
 800db5c:	9307      	strpl	r3, [sp, #28]
 800db5e:	9b03      	ldrpl	r3, [sp, #12]
 800db60:	9903      	ldrmi	r1, [sp, #12]
 800db62:	bf58      	it	pl
 800db64:	1c59      	addpl	r1, r3, #1
 800db66:	4489      	add	r9, r1
 800db68:	2a00      	cmp	r2, #0
 800db6a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800db6e:	db2e      	blt.n	800dbce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800db70:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800db72:	4293      	cmp	r3, r2
 800db74:	dd2b      	ble.n	800dbce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800db76:	9c01      	ldr	r4, [sp, #4]
 800db78:	6905      	ldr	r5, [r0, #16]
 800db7a:	46a0      	mov	r8, r4
 800db7c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800db7e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800db82:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800db86:	45a0      	cmp	r8, r4
 800db88:	f040 814f 	bne.w	800de2a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800db8c:	f9b5 1000 	ldrsh.w	r1, [r5]
 800db90:	4551      	cmp	r1, sl
 800db92:	d103      	bne.n	800db9c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800db94:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800db98:	4291      	cmp	r1, r2
 800db9a:	d018      	beq.n	800dbce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800db9c:	ea5c 010e 	orrs.w	r1, ip, lr
 800dba0:	d00f      	beq.n	800dbc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dba2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800dba6:	2900      	cmp	r1, #0
 800dba8:	db0b      	blt.n	800dbc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dbaa:	428b      	cmp	r3, r1
 800dbac:	dd09      	ble.n	800dbc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dbae:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800dbb2:	4299      	cmp	r1, r3
 800dbb4:	bf38      	it	cc
 800dbb6:	3508      	addcc	r5, #8
 800dbb8:	f101 0101 	add.w	r1, r1, #1
 800dbbc:	bf38      	it	cc
 800dbbe:	6105      	strcc	r5, [r0, #16]
 800dbc0:	6081      	str	r1, [r0, #8]
 800dbc2:	6903      	ldr	r3, [r0, #16]
 800dbc4:	f8a3 a000 	strh.w	sl, [r3]
 800dbc8:	805a      	strh	r2, [r3, #2]
 800dbca:	809e      	strh	r6, [r3, #4]
 800dbcc:	80de      	strh	r6, [r3, #6]
 800dbce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800dbd0:	6901      	ldr	r1, [r0, #16]
 800dbd2:	441a      	add	r2, r3
 800dbd4:	88cc      	ldrh	r4, [r1, #6]
 800dbd6:	888b      	ldrh	r3, [r1, #4]
 800dbd8:	4323      	orrs	r3, r4
 800dbda:	d010      	beq.n	800dbfe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dbdc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800dbe0:	2c00      	cmp	r4, #0
 800dbe2:	db0c      	blt.n	800dbfe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dbe4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800dbe6:	429c      	cmp	r4, r3
 800dbe8:	da09      	bge.n	800dbfe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dbea:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800dbee:	429c      	cmp	r4, r3
 800dbf0:	bf38      	it	cc
 800dbf2:	3108      	addcc	r1, #8
 800dbf4:	f104 0401 	add.w	r4, r4, #1
 800dbf8:	bf38      	it	cc
 800dbfa:	6101      	strcc	r1, [r0, #16]
 800dbfc:	6084      	str	r4, [r0, #8]
 800dbfe:	6903      	ldr	r3, [r0, #16]
 800dc00:	f8a3 a000 	strh.w	sl, [r3]
 800dc04:	805a      	strh	r2, [r3, #2]
 800dc06:	809e      	strh	r6, [r3, #4]
 800dc08:	80de      	strh	r6, [r3, #6]
 800dc0a:	9b06      	ldr	r3, [sp, #24]
 800dc0c:	4293      	cmp	r3, r2
 800dc0e:	464f      	mov	r7, r9
 800dc10:	d19c      	bne.n	800db4c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800dc12:	9b01      	ldr	r3, [sp, #4]
 800dc14:	6907      	ldr	r7, [r0, #16]
 800dc16:	f1c3 0620 	rsb	r6, r3, #32
 800dc1a:	9b05      	ldr	r3, [sp, #20]
 800dc1c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800dc20:	9b04      	ldr	r3, [sp, #16]
 800dc22:	429e      	cmp	r6, r3
 800dc24:	f040 81cc 	bne.w	800dfc0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800dc28:	f9b7 3000 	ldrsh.w	r3, [r7]
 800dc2c:	459e      	cmp	lr, r3
 800dc2e:	d104      	bne.n	800dc3a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800dc30:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dc34:	429a      	cmp	r2, r3
 800dc36:	f43f ae36 	beq.w	800d8a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dc3a:	88f9      	ldrh	r1, [r7, #6]
 800dc3c:	88bb      	ldrh	r3, [r7, #4]
 800dc3e:	430b      	orrs	r3, r1
 800dc40:	d010      	beq.n	800dc64 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc42:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dc46:	2b00      	cmp	r3, #0
 800dc48:	db0c      	blt.n	800dc64 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc4a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800dc4c:	428b      	cmp	r3, r1
 800dc4e:	da09      	bge.n	800dc64 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc50:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dc54:	428b      	cmp	r3, r1
 800dc56:	bf38      	it	cc
 800dc58:	3708      	addcc	r7, #8
 800dc5a:	f103 0301 	add.w	r3, r3, #1
 800dc5e:	bf38      	it	cc
 800dc60:	6107      	strcc	r7, [r0, #16]
 800dc62:	6083      	str	r3, [r0, #8]
 800dc64:	6903      	ldr	r3, [r0, #16]
 800dc66:	f8a3 e000 	strh.w	lr, [r3]
 800dc6a:	e5ff      	b.n	800d86c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800dc6c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800dc6e:	9c03      	ldr	r4, [sp, #12]
 800dc70:	42a2      	cmp	r2, r4
 800dc72:	f6ff ae18 	blt.w	800d8a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dc76:	9c06      	ldr	r4, [sp, #24]
 800dc78:	42a2      	cmp	r2, r4
 800dc7a:	bfb8      	it	lt
 800dc7c:	3201      	addlt	r2, #1
 800dc7e:	9c08      	ldr	r4, [sp, #32]
 800dc80:	bfb8      	it	lt
 800dc82:	9206      	strlt	r2, [sp, #24]
 800dc84:	f1c3 0220 	rsb	r2, r3, #32
 800dc88:	4362      	muls	r2, r4
 800dc8a:	2401      	movs	r4, #1
 800dc8c:	940b      	str	r4, [sp, #44]	@ 0x2c
 800dc8e:	2420      	movs	r4, #32
 800dc90:	e6d5      	b.n	800da3e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800dc92:	f009 021f 	and.w	r2, r9, #31
 800dc96:	ea4f 1861 	mov.w	r8, r1, asr #5
 800dc9a:	920c      	str	r2, [sp, #48]	@ 0x30
 800dc9c:	9a01      	ldr	r2, [sp, #4]
 800dc9e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800dca2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800dca6:	45b0      	cmp	r8, r6
 800dca8:	f001 011f 	and.w	r1, r1, #31
 800dcac:	eba2 0203 	sub.w	r2, r2, r3
 800dcb0:	d108      	bne.n	800dcc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800dcb2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800dcb4:	4419      	add	r1, r3
 800dcb6:	4496      	add	lr, r2
 800dcb8:	fb02 a101 	mla	r1, r2, r1, sl
 800dcbc:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dcc0:	80e9      	strh	r1, [r5, #6]
 800dcc2:	e6f9      	b.n	800dab8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800dcc4:	2c00      	cmp	r4, #0
 800dcc6:	f2c0 80a9 	blt.w	800de1c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800dcca:	2701      	movs	r7, #1
 800dccc:	f1c1 0c20 	rsb	ip, r1, #32
 800dcd0:	970a      	str	r7, [sp, #40]	@ 0x28
 800dcd2:	fb02 f20c 	mul.w	r2, r2, ip
 800dcd6:	2720      	movs	r7, #32
 800dcd8:	9709      	str	r7, [sp, #36]	@ 0x24
 800dcda:	fb92 fcf4 	sdiv	ip, r2, r4
 800dcde:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800dce0:	fb04 221c 	mls	r2, r4, ip, r2
 800dce4:	2a00      	cmp	r2, #0
 800dce6:	bfb8      	it	lt
 800dce8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800dcec:	4439      	add	r1, r7
 800dcee:	fb0c a101 	mla	r1, ip, r1, sl
 800dcf2:	80e9      	strh	r1, [r5, #6]
 800dcf4:	44e6      	add	lr, ip
 800dcf6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800dcf8:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dcfc:	eb08 0501 	add.w	r5, r8, r1
 800dd00:	6901      	ldr	r1, [r0, #16]
 800dd02:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800dd06:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800dd0a:	bfb8      	it	lt
 800dd0c:	1912      	addlt	r2, r2, r4
 800dd0e:	ea58 070e 	orrs.w	r7, r8, lr
 800dd12:	d010      	beq.n	800dd36 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dd14:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800dd18:	f1be 0f00 	cmp.w	lr, #0
 800dd1c:	db0b      	blt.n	800dd36 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dd1e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800dd20:	45be      	cmp	lr, r7
 800dd22:	da08      	bge.n	800dd36 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dd24:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800dd28:	45be      	cmp	lr, r7
 800dd2a:	bf3c      	itt	cc
 800dd2c:	3108      	addcc	r1, #8
 800dd2e:	6101      	strcc	r1, [r0, #16]
 800dd30:	f10e 0101 	add.w	r1, lr, #1
 800dd34:	6081      	str	r1, [r0, #8]
 800dd36:	6901      	ldr	r1, [r0, #16]
 800dd38:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800dd3c:	800d      	strh	r5, [r1, #0]
 800dd3e:	f04f 0e00 	mov.w	lr, #0
 800dd42:	42ae      	cmp	r6, r5
 800dd44:	f8a1 8002 	strh.w	r8, [r1, #2]
 800dd48:	f8a1 e004 	strh.w	lr, [r1, #4]
 800dd4c:	f8a1 e006 	strh.w	lr, [r1, #6]
 800dd50:	4463      	add	r3, ip
 800dd52:	d054      	beq.n	800ddfe <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800dd54:	9901      	ldr	r1, [sp, #4]
 800dd56:	1ac9      	subs	r1, r1, r3
 800dd58:	4461      	add	r1, ip
 800dd5a:	0149      	lsls	r1, r1, #5
 800dd5c:	fb91 fef4 	sdiv	lr, r1, r4
 800dd60:	fb04 111e 	mls	r1, r4, lr, r1
 800dd64:	2900      	cmp	r1, #0
 800dd66:	bfb8      	it	lt
 800dd68:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800dd6c:	f10e 0701 	add.w	r7, lr, #1
 800dd70:	bfb8      	it	lt
 800dd72:	1909      	addlt	r1, r1, r4
 800dd74:	1b12      	subs	r2, r2, r4
 800dd76:	970d      	str	r7, [sp, #52]	@ 0x34
 800dd78:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800dd7c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800dd7e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800dd82:	1852      	adds	r2, r2, r1
 800dd84:	bf54      	ite	pl
 800dd86:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800dd8a:	46f4      	movmi	ip, lr
 800dd8c:	44e3      	add	fp, ip
 800dd8e:	f8aa b004 	strh.w	fp, [sl, #4]
 800dd92:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800dd96:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800dd9a:	f8aa b006 	strh.w	fp, [sl, #6]
 800dd9e:	4463      	add	r3, ip
 800dda0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dda4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800dda8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800ddac:	bf58      	it	pl
 800ddae:	1b12      	subpl	r2, r2, r4
 800ddb0:	443d      	add	r5, r7
 800ddb2:	ea5b 070a 	orrs.w	r7, fp, sl
 800ddb6:	d014      	beq.n	800dde2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ddb8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800ddbc:	f1ba 0f00 	cmp.w	sl, #0
 800ddc0:	db0f      	blt.n	800dde2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ddc2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ddc4:	45ba      	cmp	sl, r7
 800ddc6:	da0c      	bge.n	800dde2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ddc8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800ddcc:	45ba      	cmp	sl, r7
 800ddce:	bf38      	it	cc
 800ddd0:	f10c 0c08 	addcc.w	ip, ip, #8
 800ddd4:	f10a 0a01 	add.w	sl, sl, #1
 800ddd8:	bf38      	it	cc
 800ddda:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800ddde:	f8c0 a008 	str.w	sl, [r0, #8]
 800dde2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dde6:	f04f 0700 	mov.w	r7, #0
 800ddea:	42ae      	cmp	r6, r5
 800ddec:	f8ac 5000 	strh.w	r5, [ip]
 800ddf0:	f8ac 8002 	strh.w	r8, [ip, #2]
 800ddf4:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ddf8:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ddfc:	d1bc      	bne.n	800dd78 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800ddfe:	6904      	ldr	r4, [r0, #16]
 800de00:	9a01      	ldr	r2, [sp, #4]
 800de02:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800de04:	1ad3      	subs	r3, r2, r3
 800de06:	88a2      	ldrh	r2, [r4, #4]
 800de08:	441a      	add	r2, r3
 800de0a:	80a2      	strh	r2, [r4, #4]
 800de0c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800de0e:	3120      	adds	r1, #32
 800de10:	1a89      	subs	r1, r1, r2
 800de12:	88e2      	ldrh	r2, [r4, #6]
 800de14:	fb03 2301 	mla	r3, r3, r1, r2
 800de18:	80e3      	strh	r3, [r4, #6]
 800de1a:	e64d      	b.n	800dab8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800de1c:	f04f 37ff 	mov.w	r7, #4294967295
 800de20:	970a      	str	r7, [sp, #40]	@ 0x28
 800de22:	434a      	muls	r2, r1
 800de24:	4264      	negs	r4, r4
 800de26:	2700      	movs	r7, #0
 800de28:	e756      	b.n	800dcd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800de2a:	ea4f 1867 	mov.w	r8, r7, asr #5
 800de2e:	f009 031f 	and.w	r3, r9, #31
 800de32:	45d0      	cmp	r8, sl
 800de34:	f007 071f 	and.w	r7, r7, #31
 800de38:	930f      	str	r3, [sp, #60]	@ 0x3c
 800de3a:	fa1f fc8c 	uxth.w	ip, ip
 800de3e:	fa1f fe8e 	uxth.w	lr, lr
 800de42:	d10a      	bne.n	800de5a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800de44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800de46:	449c      	add	ip, r3
 800de48:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800de4a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800de4e:	441f      	add	r7, r3
 800de50:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800de52:	fb03 e707 	mla	r7, r3, r7, lr
 800de56:	80ef      	strh	r7, [r5, #6]
 800de58:	e6b9      	b.n	800dbce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800de5a:	2900      	cmp	r1, #0
 800de5c:	f2c0 80a8 	blt.w	800dfb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800de60:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800de62:	f1c7 0320 	rsb	r3, r7, #32
 800de66:	4363      	muls	r3, r4
 800de68:	2401      	movs	r4, #1
 800de6a:	940d      	str	r4, [sp, #52]	@ 0x34
 800de6c:	2420      	movs	r4, #32
 800de6e:	940c      	str	r4, [sp, #48]	@ 0x30
 800de70:	fb93 f4f1 	sdiv	r4, r3, r1
 800de74:	fb01 3b14 	mls	fp, r1, r4, r3
 800de78:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800de7a:	f1bb 0f00 	cmp.w	fp, #0
 800de7e:	bfb8      	it	lt
 800de80:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800de84:	441f      	add	r7, r3
 800de86:	fb04 e707 	mla	r7, r4, r7, lr
 800de8a:	44a4      	add	ip, r4
 800de8c:	f8a5 c004 	strh.w	ip, [r5, #4]
 800de90:	80ef      	strh	r7, [r5, #6]
 800de92:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800de96:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800de98:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800de9c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800dea0:	bfb8      	it	lt
 800dea2:	448b      	addlt	fp, r1
 800dea4:	eb08 0503 	add.w	r5, r8, r3
 800dea8:	ea5e 0307 	orrs.w	r3, lr, r7
 800deac:	d011      	beq.n	800ded2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800deae:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800deb2:	f1be 0f00 	cmp.w	lr, #0
 800deb6:	db0c      	blt.n	800ded2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800deb8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800deba:	45be      	cmp	lr, r7
 800debc:	da09      	bge.n	800ded2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800debe:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800dec2:	45be      	cmp	lr, r7
 800dec4:	bf3c      	itt	cc
 800dec6:	f10c 0708 	addcc.w	r7, ip, #8
 800deca:	6107      	strcc	r7, [r0, #16]
 800decc:	f10e 0701 	add.w	r7, lr, #1
 800ded0:	6087      	str	r7, [r0, #8]
 800ded2:	6907      	ldr	r7, [r0, #16]
 800ded4:	b213      	sxth	r3, r2
 800ded6:	9310      	str	r3, [sp, #64]	@ 0x40
 800ded8:	807b      	strh	r3, [r7, #2]
 800deda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800dedc:	803d      	strh	r5, [r7, #0]
 800dede:	4555      	cmp	r5, sl
 800dee0:	80be      	strh	r6, [r7, #4]
 800dee2:	80fe      	strh	r6, [r7, #6]
 800dee4:	eb04 0c03 	add.w	ip, r4, r3
 800dee8:	d051      	beq.n	800df8e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800deea:	9b01      	ldr	r3, [sp, #4]
 800deec:	eba3 070c 	sub.w	r7, r3, ip
 800def0:	443c      	add	r4, r7
 800def2:	0164      	lsls	r4, r4, #5
 800def4:	fb94 f8f1 	sdiv	r8, r4, r1
 800def8:	fb01 4418 	mls	r4, r1, r8, r4
 800defc:	2c00      	cmp	r4, #0
 800defe:	bfb8      	it	lt
 800df00:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800df04:	ebab 0301 	sub.w	r3, fp, r1
 800df08:	f108 0701 	add.w	r7, r8, #1
 800df0c:	bfb8      	it	lt
 800df0e:	1864      	addlt	r4, r4, r1
 800df10:	9309      	str	r3, [sp, #36]	@ 0x24
 800df12:	9711      	str	r7, [sp, #68]	@ 0x44
 800df14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800df16:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800df1a:	191b      	adds	r3, r3, r4
 800df1c:	bf58      	it	pl
 800df1e:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800df20:	f8be b004 	ldrh.w	fp, [lr, #4]
 800df24:	9309      	str	r3, [sp, #36]	@ 0x24
 800df26:	bf48      	it	mi
 800df28:	4647      	movmi	r7, r8
 800df2a:	44bb      	add	fp, r7
 800df2c:	f8ae b004 	strh.w	fp, [lr, #4]
 800df30:	f8be b006 	ldrh.w	fp, [lr, #6]
 800df34:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800df38:	f8ae b006 	strh.w	fp, [lr, #6]
 800df3c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800df40:	44bc      	add	ip, r7
 800df42:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800df44:	f8be b006 	ldrh.w	fp, [lr, #6]
 800df48:	443d      	add	r5, r7
 800df4a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800df4e:	bf5c      	itt	pl
 800df50:	1a5b      	subpl	r3, r3, r1
 800df52:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800df54:	ea5b 0307 	orrs.w	r3, fp, r7
 800df58:	d011      	beq.n	800df7e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800df5a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800df5e:	f1bb 0f00 	cmp.w	fp, #0
 800df62:	db0c      	blt.n	800df7e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800df64:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800df66:	45bb      	cmp	fp, r7
 800df68:	da09      	bge.n	800df7e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800df6a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800df6e:	45bb      	cmp	fp, r7
 800df70:	bf3c      	itt	cc
 800df72:	f10e 0708 	addcc.w	r7, lr, #8
 800df76:	6107      	strcc	r7, [r0, #16]
 800df78:	f10b 0701 	add.w	r7, fp, #1
 800df7c:	6087      	str	r7, [r0, #8]
 800df7e:	6907      	ldr	r7, [r0, #16]
 800df80:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800df82:	803d      	strh	r5, [r7, #0]
 800df84:	4555      	cmp	r5, sl
 800df86:	807b      	strh	r3, [r7, #2]
 800df88:	80be      	strh	r6, [r7, #4]
 800df8a:	80fe      	strh	r6, [r7, #6]
 800df8c:	d1c2      	bne.n	800df14 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800df8e:	9b01      	ldr	r3, [sp, #4]
 800df90:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800df92:	eba3 0c0c 	sub.w	ip, r3, ip
 800df96:	6903      	ldr	r3, [r0, #16]
 800df98:	8899      	ldrh	r1, [r3, #4]
 800df9a:	4461      	add	r1, ip
 800df9c:	8099      	strh	r1, [r3, #4]
 800df9e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800dfa0:	3720      	adds	r7, #32
 800dfa2:	1a7f      	subs	r7, r7, r1
 800dfa4:	88d9      	ldrh	r1, [r3, #6]
 800dfa6:	fb0c 1c07 	mla	ip, ip, r7, r1
 800dfaa:	f8a3 c006 	strh.w	ip, [r3, #6]
 800dfae:	e60e      	b.n	800dbce <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800dfb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800dfb2:	f04f 34ff 	mov.w	r4, #4294967295
 800dfb6:	940d      	str	r4, [sp, #52]	@ 0x34
 800dfb8:	437b      	muls	r3, r7
 800dfba:	4249      	negs	r1, r1
 800dfbc:	2400      	movs	r4, #0
 800dfbe:	e756      	b.n	800de6e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800dfc0:	9905      	ldr	r1, [sp, #20]
 800dfc2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800dfc6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800dfca:	f001 011f 	and.w	r1, r1, #31
 800dfce:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800dfd2:	9102      	str	r1, [sp, #8]
 800dfd4:	9904      	ldr	r1, [sp, #16]
 800dfd6:	45f3      	cmp	fp, lr
 800dfd8:	f009 0c1f 	and.w	ip, r9, #31
 800dfdc:	eba1 0406 	sub.w	r4, r1, r6
 800dfe0:	d108      	bne.n	800dff4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800dfe2:	9b02      	ldr	r3, [sp, #8]
 800dfe4:	449c      	add	ip, r3
 800dfe6:	44a0      	add	r8, r4
 800dfe8:	fb04 a40c 	mla	r4, r4, ip, sl
 800dfec:	f8a7 8004 	strh.w	r8, [r7, #4]
 800dff0:	80fc      	strh	r4, [r7, #6]
 800dff2:	e458      	b.n	800d8a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dff4:	9905      	ldr	r1, [sp, #20]
 800dff6:	ebb1 0109 	subs.w	r1, r1, r9
 800dffa:	bf5b      	ittet	pl
 800dffc:	f1cc 0520 	rsbpl	r5, ip, #32
 800e000:	436c      	mulpl	r4, r5
 800e002:	2500      	movmi	r5, #0
 800e004:	2520      	movpl	r5, #32
 800e006:	bf44      	itt	mi
 800e008:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e00c:	4249      	negmi	r1, r1
 800e00e:	9501      	str	r5, [sp, #4]
 800e010:	9b01      	ldr	r3, [sp, #4]
 800e012:	fb94 f5f1 	sdiv	r5, r4, r1
 800e016:	fb01 4415 	mls	r4, r1, r5, r4
 800e01a:	bf54      	ite	pl
 800e01c:	f04f 0901 	movpl.w	r9, #1
 800e020:	f04f 39ff 	movmi.w	r9, #4294967295
 800e024:	2c00      	cmp	r4, #0
 800e026:	bfb8      	it	lt
 800e028:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e02c:	449c      	add	ip, r3
 800e02e:	44a8      	add	r8, r5
 800e030:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e034:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e038:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e03c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e040:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e044:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e048:	bfb8      	it	lt
 800e04a:	1864      	addlt	r4, r4, r1
 800e04c:	ea58 0707 	orrs.w	r7, r8, r7
 800e050:	eb0b 0309 	add.w	r3, fp, r9
 800e054:	d011      	beq.n	800e07a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e056:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e05a:	f1b8 0f00 	cmp.w	r8, #0
 800e05e:	db0c      	blt.n	800e07a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e060:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e062:	45b8      	cmp	r8, r7
 800e064:	da09      	bge.n	800e07a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e066:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e06a:	45b8      	cmp	r8, r7
 800e06c:	bf3c      	itt	cc
 800e06e:	f10c 0708 	addcc.w	r7, ip, #8
 800e072:	6107      	strcc	r7, [r0, #16]
 800e074:	f108 0701 	add.w	r7, r8, #1
 800e078:	6087      	str	r7, [r0, #8]
 800e07a:	6907      	ldr	r7, [r0, #16]
 800e07c:	f04f 0c00 	mov.w	ip, #0
 800e080:	b212      	sxth	r2, r2
 800e082:	459e      	cmp	lr, r3
 800e084:	803b      	strh	r3, [r7, #0]
 800e086:	807a      	strh	r2, [r7, #2]
 800e088:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e08c:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e090:	442e      	add	r6, r5
 800e092:	d04d      	beq.n	800e130 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800e094:	9f04      	ldr	r7, [sp, #16]
 800e096:	1bbf      	subs	r7, r7, r6
 800e098:	443d      	add	r5, r7
 800e09a:	016d      	lsls	r5, r5, #5
 800e09c:	fb95 f8f1 	sdiv	r8, r5, r1
 800e0a0:	fb01 5518 	mls	r5, r1, r8, r5
 800e0a4:	4565      	cmp	r5, ip
 800e0a6:	bfb8      	it	lt
 800e0a8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e0ac:	f108 0701 	add.w	r7, r8, #1
 800e0b0:	bfb8      	it	lt
 800e0b2:	186d      	addlt	r5, r5, r1
 800e0b4:	1a64      	subs	r4, r4, r1
 800e0b6:	9703      	str	r7, [sp, #12]
 800e0b8:	f04f 0a00 	mov.w	sl, #0
 800e0bc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e0c0:	1964      	adds	r4, r4, r5
 800e0c2:	bf58      	it	pl
 800e0c4:	9f03      	ldrpl	r7, [sp, #12]
 800e0c6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e0ca:	bf48      	it	mi
 800e0cc:	4647      	movmi	r7, r8
 800e0ce:	44bb      	add	fp, r7
 800e0d0:	f8ac b004 	strh.w	fp, [ip, #4]
 800e0d4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e0d8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e0dc:	f8ac b006 	strh.w	fp, [ip, #6]
 800e0e0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e0e4:	443e      	add	r6, r7
 800e0e6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e0ea:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e0ee:	bf58      	it	pl
 800e0f0:	1a64      	subpl	r4, r4, r1
 800e0f2:	ea5b 0707 	orrs.w	r7, fp, r7
 800e0f6:	444b      	add	r3, r9
 800e0f8:	d011      	beq.n	800e11e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e0fa:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e0fe:	f1bb 0f00 	cmp.w	fp, #0
 800e102:	db0c      	blt.n	800e11e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e104:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e106:	45bb      	cmp	fp, r7
 800e108:	da09      	bge.n	800e11e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e10a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e10e:	45bb      	cmp	fp, r7
 800e110:	bf3c      	itt	cc
 800e112:	f10c 0708 	addcc.w	r7, ip, #8
 800e116:	6107      	strcc	r7, [r0, #16]
 800e118:	f10b 0701 	add.w	r7, fp, #1
 800e11c:	6087      	str	r7, [r0, #8]
 800e11e:	6907      	ldr	r7, [r0, #16]
 800e120:	459e      	cmp	lr, r3
 800e122:	803b      	strh	r3, [r7, #0]
 800e124:	807a      	strh	r2, [r7, #2]
 800e126:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e12a:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e12e:	d1c5      	bne.n	800e0bc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800e130:	9b04      	ldr	r3, [sp, #16]
 800e132:	1b9e      	subs	r6, r3, r6
 800e134:	6903      	ldr	r3, [r0, #16]
 800e136:	889a      	ldrh	r2, [r3, #4]
 800e138:	4432      	add	r2, r6
 800e13a:	809a      	strh	r2, [r3, #4]
 800e13c:	9a02      	ldr	r2, [sp, #8]
 800e13e:	f102 0c20 	add.w	ip, r2, #32
 800e142:	9a01      	ldr	r2, [sp, #4]
 800e144:	ebac 0c02 	sub.w	ip, ip, r2
 800e148:	88da      	ldrh	r2, [r3, #6]
 800e14a:	fb06 260c 	mla	r6, r6, ip, r2
 800e14e:	80de      	strh	r6, [r3, #6]
 800e150:	f7ff bba9 	b.w	800d8a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800e154 <_ZN8touchgfx7Outline6lineToEii>:
 800e154:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e156:	079b      	lsls	r3, r3, #30
 800e158:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e15a:	460e      	mov	r6, r1
 800e15c:	4615      	mov	r5, r2
 800e15e:	d511      	bpl.n	800e184 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e160:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e164:	ea86 0701 	eor.w	r7, r6, r1
 800e168:	ea85 0302 	eor.w	r3, r5, r2
 800e16c:	433b      	orrs	r3, r7
 800e16e:	d009      	beq.n	800e184 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e170:	4633      	mov	r3, r6
 800e172:	9500      	str	r5, [sp, #0]
 800e174:	f7ff fb3e 	bl	800d7f4 <_ZN8touchgfx7Outline10renderLineEiiii>
 800e178:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e17a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e17e:	f043 0301 	orr.w	r3, r3, #1
 800e182:	6243      	str	r3, [r0, #36]	@ 0x24
 800e184:	b003      	add	sp, #12
 800e186:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e188 <_ZN8touchgfx7Outline6moveToEii>:
 800e188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e18a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e18c:	4615      	mov	r5, r2
 800e18e:	079a      	lsls	r2, r3, #30
 800e190:	4604      	mov	r4, r0
 800e192:	460e      	mov	r6, r1
 800e194:	d401      	bmi.n	800e19a <_ZN8touchgfx7Outline6moveToEii+0x12>
 800e196:	f7ff faf9 	bl	800d78c <_ZN8touchgfx7Outline5resetEv>
 800e19a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e19c:	07db      	lsls	r3, r3, #31
 800e19e:	d504      	bpl.n	800e1aa <_ZN8touchgfx7Outline6moveToEii+0x22>
 800e1a0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800e1a4:	4620      	mov	r0, r4
 800e1a6:	f7ff ffd5 	bl	800e154 <_ZN8touchgfx7Outline6lineToEii>
 800e1aa:	6923      	ldr	r3, [r4, #16]
 800e1ac:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e1b0:	1170      	asrs	r0, r6, #5
 800e1b2:	4290      	cmp	r0, r2
 800e1b4:	ea4f 1165 	mov.w	r1, r5, asr #5
 800e1b8:	d103      	bne.n	800e1c2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800e1ba:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e1be:	4291      	cmp	r1, r2
 800e1c0:	d01a      	beq.n	800e1f8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800e1c2:	88df      	ldrh	r7, [r3, #6]
 800e1c4:	889a      	ldrh	r2, [r3, #4]
 800e1c6:	433a      	orrs	r2, r7
 800e1c8:	d010      	beq.n	800e1ec <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e1ca:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e1ce:	2a00      	cmp	r2, #0
 800e1d0:	db0c      	blt.n	800e1ec <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e1d2:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800e1d4:	42ba      	cmp	r2, r7
 800e1d6:	da09      	bge.n	800e1ec <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e1d8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800e1dc:	42ba      	cmp	r2, r7
 800e1de:	bf38      	it	cc
 800e1e0:	3308      	addcc	r3, #8
 800e1e2:	f102 0201 	add.w	r2, r2, #1
 800e1e6:	bf38      	it	cc
 800e1e8:	6123      	strcc	r3, [r4, #16]
 800e1ea:	60a2      	str	r2, [r4, #8]
 800e1ec:	6923      	ldr	r3, [r4, #16]
 800e1ee:	2200      	movs	r2, #0
 800e1f0:	8018      	strh	r0, [r3, #0]
 800e1f2:	8059      	strh	r1, [r3, #2]
 800e1f4:	809a      	strh	r2, [r3, #4]
 800e1f6:	80da      	strh	r2, [r3, #6]
 800e1f8:	6166      	str	r6, [r4, #20]
 800e1fa:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800e1fe:	6225      	str	r5, [r4, #32]
 800e200:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e202 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800e202:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e206:	b0d0      	sub	sp, #320	@ 0x140
 800e208:	466c      	mov	r4, sp
 800e20a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800e20e:	4627      	mov	r7, r4
 800e210:	1a0d      	subs	r5, r1, r0
 800e212:	2d48      	cmp	r5, #72	@ 0x48
 800e214:	f100 0308 	add.w	r3, r0, #8
 800e218:	f340 80d5 	ble.w	800e3c6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e21c:	112d      	asrs	r5, r5, #4
 800e21e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800e222:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e226:	6816      	ldr	r6, [r2, #0]
 800e228:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800e22c:	6006      	str	r6, [r0, #0]
 800e22e:	6856      	ldr	r6, [r2, #4]
 800e230:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e234:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e238:	6046      	str	r6, [r0, #4]
 800e23a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e23e:	f8a2 8002 	strh.w	r8, [r2, #2]
 800e242:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e246:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e24a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e24e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800e252:	4565      	cmp	r5, ip
 800e254:	f1a1 0208 	sub.w	r2, r1, #8
 800e258:	db06      	blt.n	800e268 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800e25a:	d119      	bne.n	800e290 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e25c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e260:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800e264:	42ae      	cmp	r6, r5
 800e266:	dd13      	ble.n	800e290 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e268:	460e      	mov	r6, r1
 800e26a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800e26e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e272:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800e276:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800e27a:	601d      	str	r5, [r3, #0]
 800e27c:	6875      	ldr	r5, [r6, #4]
 800e27e:	605d      	str	r5, [r3, #4]
 800e280:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e284:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e288:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e28c:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e290:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e294:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800e298:	42ae      	cmp	r6, r5
 800e29a:	db06      	blt.n	800e2aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800e29c:	d116      	bne.n	800e2cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e29e:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e2a2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800e2a6:	45ac      	cmp	ip, r5
 800e2a8:	da10      	bge.n	800e2cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e2aa:	681d      	ldr	r5, [r3, #0]
 800e2ac:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e2b0:	6005      	str	r5, [r0, #0]
 800e2b2:	685d      	ldr	r5, [r3, #4]
 800e2b4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e2b8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e2bc:	f8a0 8008 	strh.w	r8, [r0, #8]
 800e2c0:	6045      	str	r5, [r0, #4]
 800e2c2:	8146      	strh	r6, [r0, #10]
 800e2c4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800e2c8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800e2cc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e2d0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e2d4:	4565      	cmp	r5, ip
 800e2d6:	db06      	blt.n	800e2e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800e2d8:	d119      	bne.n	800e30e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e2da:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800e2de:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e2e2:	42ae      	cmp	r6, r5
 800e2e4:	da13      	bge.n	800e30e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e2e6:	460e      	mov	r6, r1
 800e2e8:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e2ec:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e2f0:	6005      	str	r5, [r0, #0]
 800e2f2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e2f6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800e2fa:	6875      	ldr	r5, [r6, #4]
 800e2fc:	6045      	str	r5, [r0, #4]
 800e2fe:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e302:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e306:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e30a:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e30e:	3308      	adds	r3, #8
 800e310:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e314:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800e318:	45e6      	cmp	lr, ip
 800e31a:	dbf8      	blt.n	800e30e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e31c:	d105      	bne.n	800e32a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e31e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e322:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e326:	42ae      	cmp	r6, r5
 800e328:	dbf1      	blt.n	800e30e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e32a:	4615      	mov	r5, r2
 800e32c:	3a08      	subs	r2, #8
 800e32e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800e332:	45b4      	cmp	ip, r6
 800e334:	dbf9      	blt.n	800e32a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e336:	d105      	bne.n	800e344 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800e338:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e33c:	f9b2 6000 	ldrsh.w	r6, [r2]
 800e340:	45b0      	cmp	r8, r6
 800e342:	dbf2      	blt.n	800e32a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e344:	4293      	cmp	r3, r2
 800e346:	f1a5 0608 	sub.w	r6, r5, #8
 800e34a:	d816      	bhi.n	800e37a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800e34c:	f8d6 c000 	ldr.w	ip, [r6]
 800e350:	f9b3 a000 	ldrsh.w	sl, [r3]
 800e354:	f8c3 c000 	str.w	ip, [r3]
 800e358:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800e35c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800e360:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800e364:	f8c3 c004 	str.w	ip, [r3, #4]
 800e368:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e36c:	f825 ec06 	strh.w	lr, [r5, #-6]
 800e370:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e374:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e378:	e7c9      	b.n	800e30e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e37a:	f8d6 e000 	ldr.w	lr, [r6]
 800e37e:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e382:	f8c0 e000 	str.w	lr, [r0]
 800e386:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800e38a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800e38e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800e392:	f8c0 e004 	str.w	lr, [r0, #4]
 800e396:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e39a:	f825 cc06 	strh.w	ip, [r5, #-6]
 800e39e:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e3a2:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e3a6:	1acd      	subs	r5, r1, r3
 800e3a8:	1a16      	subs	r6, r2, r0
 800e3aa:	10ed      	asrs	r5, r5, #3
 800e3ac:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800e3b0:	bfb5      	itete	lt
 800e3b2:	e9c4 0200 	strdlt	r0, r2, [r4]
 800e3b6:	e9c4 3100 	strdge	r3, r1, [r4]
 800e3ba:	460a      	movlt	r2, r1
 800e3bc:	4603      	movge	r3, r0
 800e3be:	3408      	adds	r4, #8
 800e3c0:	4618      	mov	r0, r3
 800e3c2:	4611      	mov	r1, r2
 800e3c4:	e724      	b.n	800e210 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e3c6:	4299      	cmp	r1, r3
 800e3c8:	d928      	bls.n	800e41c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800e3ca:	f1a3 0210 	sub.w	r2, r3, #16
 800e3ce:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800e3d2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800e3d6:	45ac      	cmp	ip, r5
 800e3d8:	db06      	blt.n	800e3e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800e3da:	d11d      	bne.n	800e418 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e3dc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800e3e0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800e3e4:	42ae      	cmp	r6, r5
 800e3e6:	da17      	bge.n	800e418 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e3e8:	4615      	mov	r5, r2
 800e3ea:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800e3ee:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800e3f2:	6116      	str	r6, [r2, #16]
 800e3f4:	686e      	ldr	r6, [r5, #4]
 800e3f6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800e3fa:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800e3fe:	f8a2 9008 	strh.w	r9, [r2, #8]
 800e402:	42a8      	cmp	r0, r5
 800e404:	6156      	str	r6, [r2, #20]
 800e406:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800e40a:	f8a2 800c 	strh.w	r8, [r2, #12]
 800e40e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800e412:	f1a2 0208 	sub.w	r2, r2, #8
 800e416:	d1da      	bne.n	800e3ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800e418:	3308      	adds	r3, #8
 800e41a:	e7d4      	b.n	800e3c6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e41c:	42bc      	cmp	r4, r7
 800e41e:	d903      	bls.n	800e428 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800e420:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800e424:	3c08      	subs	r4, #8
 800e426:	e6f3      	b.n	800e210 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e428:	b050      	add	sp, #320	@ 0x140
 800e42a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800e42e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800e42e:	b510      	push	{r4, lr}
 800e430:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e432:	07da      	lsls	r2, r3, #31
 800e434:	4604      	mov	r4, r0
 800e436:	d507      	bpl.n	800e448 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800e438:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800e43c:	f7ff fe8a 	bl	800e154 <_ZN8touchgfx7Outline6lineToEii>
 800e440:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e442:	f023 0301 	bic.w	r3, r3, #1
 800e446:	6243      	str	r3, [r0, #36]	@ 0x24
 800e448:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e44a:	079b      	lsls	r3, r3, #30
 800e44c:	d521      	bpl.n	800e492 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800e44e:	6923      	ldr	r3, [r4, #16]
 800e450:	88d9      	ldrh	r1, [r3, #6]
 800e452:	889a      	ldrh	r2, [r3, #4]
 800e454:	430a      	orrs	r2, r1
 800e456:	d010      	beq.n	800e47a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e458:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e45c:	2a00      	cmp	r2, #0
 800e45e:	db0c      	blt.n	800e47a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e460:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800e462:	428a      	cmp	r2, r1
 800e464:	da09      	bge.n	800e47a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e466:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e46a:	4291      	cmp	r1, r2
 800e46c:	bf88      	it	hi
 800e46e:	3308      	addhi	r3, #8
 800e470:	f102 0201 	add.w	r2, r2, #1
 800e474:	bf88      	it	hi
 800e476:	6123      	strhi	r3, [r4, #16]
 800e478:	60a2      	str	r2, [r4, #8]
 800e47a:	68a1      	ldr	r1, [r4, #8]
 800e47c:	b129      	cbz	r1, 800e48a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e47e:	6863      	ldr	r3, [r4, #4]
 800e480:	4299      	cmp	r1, r3
 800e482:	d802      	bhi.n	800e48a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e484:	68e0      	ldr	r0, [r4, #12]
 800e486:	f7ff febc 	bl	800e202 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e48a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e48c:	f023 0302 	bic.w	r3, r3, #2
 800e490:	6263      	str	r3, [r4, #36]	@ 0x24
 800e492:	68e0      	ldr	r0, [r4, #12]
 800e494:	bd10      	pop	{r4, pc}
	...

0800e498 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e498:	4b02      	ldr	r3, [pc, #8]	@ (800e4a4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e49a:	6018      	str	r0, [r3, #0]
 800e49c:	4b02      	ldr	r3, [pc, #8]	@ (800e4a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e49e:	6019      	str	r1, [r3, #0]
 800e4a0:	4770      	bx	lr
 800e4a2:	bf00      	nop
 800e4a4:	20014004 	.word	0x20014004
 800e4a8:	20014008 	.word	0x20014008

0800e4ac <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e4ac:	4b01      	ldr	r3, [pc, #4]	@ (800e4b4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e4ae:	6818      	ldr	r0, [r3, #0]
 800e4b0:	4770      	bx	lr
 800e4b2:	bf00      	nop
 800e4b4:	20014004 	.word	0x20014004

0800e4b8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e4b8:	4b01      	ldr	r3, [pc, #4]	@ (800e4c0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e4ba:	6818      	ldr	r0, [r3, #0]
 800e4bc:	4770      	bx	lr
 800e4be:	bf00      	nop
 800e4c0:	20014008 	.word	0x20014008

0800e4c4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e4c4:	b510      	push	{r4, lr}
 800e4c6:	6803      	ldr	r3, [r0, #0]
 800e4c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4ca:	460c      	mov	r4, r1
 800e4cc:	4798      	blx	r3
 800e4ce:	1b03      	subs	r3, r0, r4
 800e4d0:	4258      	negs	r0, r3
 800e4d2:	4158      	adcs	r0, r3
 800e4d4:	bd10      	pop	{r4, pc}
	...

0800e4d8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e4d8:	4b01      	ldr	r3, [pc, #4]	@ (800e4e0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e4da:	6019      	str	r1, [r3, #0]
 800e4dc:	4770      	bx	lr
 800e4de:	bf00      	nop
 800e4e0:	2001400c 	.word	0x2001400c

0800e4e4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e4e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4e8:	4696      	mov	lr, r2
 800e4ea:	4605      	mov	r5, r0
 800e4ec:	4614      	mov	r4, r2
 800e4ee:	460e      	mov	r6, r1
 800e4f0:	461f      	mov	r7, r3
 800e4f2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e4f6:	b097      	sub	sp, #92	@ 0x5c
 800e4f8:	f10d 0c1c 	add.w	ip, sp, #28
 800e4fc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e500:	f8de 3000 	ldr.w	r3, [lr]
 800e504:	f8cc 3000 	str.w	r3, [ip]
 800e508:	f104 0e14 	add.w	lr, r4, #20
 800e50c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e510:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e514:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e518:	f8de 3000 	ldr.w	r3, [lr]
 800e51c:	f8cc 3000 	str.w	r3, [ip]
 800e520:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e524:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e528:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e52c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e530:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800e534:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800e538:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800e53c:	f8de 3000 	ldr.w	r3, [lr]
 800e540:	f8cc 3000 	str.w	r3, [ip]
 800e544:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e546:	682b      	ldr	r3, [r5, #0]
 800e548:	9201      	str	r2, [sp, #4]
 800e54a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e54e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e550:	9200      	str	r2, [sp, #0]
 800e552:	f8cd 8008 	str.w	r8, [sp, #8]
 800e556:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800e55a:	aa07      	add	r2, sp, #28
 800e55c:	463b      	mov	r3, r7
 800e55e:	4631      	mov	r1, r6
 800e560:	4628      	mov	r0, r5
 800e562:	47d8      	blx	fp
 800e564:	46a6      	mov	lr, r4
 800e566:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e56a:	f10d 0c1c 	add.w	ip, sp, #28
 800e56e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e572:	f8de 3000 	ldr.w	r3, [lr]
 800e576:	f8cc 3000 	str.w	r3, [ip]
 800e57a:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e57e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e582:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e586:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e58a:	343c      	adds	r4, #60	@ 0x3c
 800e58c:	f8de 3000 	ldr.w	r3, [lr]
 800e590:	f8cc 3000 	str.w	r3, [ip]
 800e594:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e596:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e59a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e59e:	6823      	ldr	r3, [r4, #0]
 800e5a0:	f8cc 3000 	str.w	r3, [ip]
 800e5a4:	682b      	ldr	r3, [r5, #0]
 800e5a6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e5aa:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e5ac:	9201      	str	r2, [sp, #4]
 800e5ae:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e5b0:	9200      	str	r2, [sp, #0]
 800e5b2:	f8cd 8008 	str.w	r8, [sp, #8]
 800e5b6:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800e5b8:	aa07      	add	r2, sp, #28
 800e5ba:	463b      	mov	r3, r7
 800e5bc:	4631      	mov	r1, r6
 800e5be:	4628      	mov	r0, r5
 800e5c0:	47a0      	blx	r4
 800e5c2:	b017      	add	sp, #92	@ 0x5c
 800e5c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e5c8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e5c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5cc:	b08d      	sub	sp, #52	@ 0x34
 800e5ce:	4688      	mov	r8, r1
 800e5d0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800e5d2:	f8d3 c000 	ldr.w	ip, [r3]
 800e5d6:	680f      	ldr	r7, [r1, #0]
 800e5d8:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800e5dc:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800e5e0:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800e5e4:	edd3 6a07 	vldr	s13, [r3, #28]
 800e5e8:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800e5ea:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800e5ee:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e5f2:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e5f6:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800e5fa:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800e5fe:	eba7 070c 	sub.w	r7, r7, ip
 800e602:	42bc      	cmp	r4, r7
 800e604:	bfa8      	it	ge
 800e606:	463c      	movge	r4, r7
 800e608:	ee07 4a90 	vmov	s15, r4
 800e60c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e610:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800e614:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e618:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e61c:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e620:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800e624:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e628:	eb09 0e0c 	add.w	lr, r9, ip
 800e62c:	4571      	cmp	r1, lr
 800e62e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e632:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e636:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e63a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e63e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e642:	f340 808d 	ble.w	800e760 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800e646:	eba1 060e 	sub.w	r6, r1, lr
 800e64a:	fb96 f5f4 	sdiv	r5, r6, r4
 800e64e:	ee07 5a10 	vmov	s14, r5
 800e652:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e656:	2d00      	cmp	r5, #0
 800e658:	fb04 6615 	mls	r6, r4, r5, r6
 800e65c:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e660:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e664:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e668:	dd13      	ble.n	800e692 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800e66a:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e66e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e672:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e676:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e67a:	bf18      	it	ne
 800e67c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e680:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e684:	bf08      	it	eq
 800e686:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e68a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e68e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e692:	fb05 f204 	mul.w	r2, r5, r4
 800e696:	1abf      	subs	r7, r7, r2
 800e698:	4494      	add	ip, r2
 800e69a:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e69e:	4411      	add	r1, r2
 800e6a0:	eb09 020c 	add.w	r2, r9, ip
 800e6a4:	443a      	add	r2, r7
 800e6a6:	b209      	sxth	r1, r1
 800e6a8:	428a      	cmp	r2, r1
 800e6aa:	bfc4      	itt	gt
 800e6ac:	eba1 0209 	subgt.w	r2, r1, r9
 800e6b0:	eba2 070c 	subgt.w	r7, r2, ip
 800e6b4:	2f00      	cmp	r7, #0
 800e6b6:	dd50      	ble.n	800e75a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800e6b8:	fb97 f1f4 	sdiv	r1, r7, r4
 800e6bc:	fb04 7211 	mls	r2, r4, r1, r7
 800e6c0:	b90a      	cbnz	r2, 800e6c6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800e6c2:	3901      	subs	r1, #1
 800e6c4:	4622      	mov	r2, r4
 800e6c6:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e6ca:	6840      	ldr	r0, [r0, #4]
 800e6cc:	900b      	str	r0, [sp, #44]	@ 0x2c
 800e6ce:	f8d0 a000 	ldr.w	sl, [r0]
 800e6d2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800e6d4:	9008      	str	r0, [sp, #32]
 800e6d6:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800e6da:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800e6dc:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800e6e0:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e6e4:	695b      	ldr	r3, [r3, #20]
 800e6e6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800e6e8:	445b      	add	r3, fp
 800e6ea:	eef0 6a42 	vmov.f32	s13, s4
 800e6ee:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e6f2:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e6f6:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e6fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e6fe:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e702:	9307      	str	r3, [sp, #28]
 800e704:	ee17 7a90 	vmov	r7, s15
 800e708:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e70c:	eeb0 7a61 	vmov.f32	s14, s3
 800e710:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e714:	ee16 3a90 	vmov	r3, s13
 800e718:	fb97 f7f4 	sdiv	r7, r7, r4
 800e71c:	ee17 ca90 	vmov	ip, s15
 800e720:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e724:	fb9c fcf4 	sdiv	ip, ip, r4
 800e728:	fb0c 3306 	mla	r3, ip, r6, r3
 800e72c:	9302      	str	r3, [sp, #8]
 800e72e:	ee17 3a10 	vmov	r3, s14
 800e732:	44b6      	add	lr, r6
 800e734:	fb04 e505 	mla	r5, r4, r5, lr
 800e738:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e73c:	fb07 3706 	mla	r7, r7, r6, r3
 800e740:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e744:	e9cd 4700 	strd	r4, r7, [sp]
 800e748:	2900      	cmp	r1, #0
 800e74a:	bfcc      	ite	gt
 800e74c:	46a1      	movgt	r9, r4
 800e74e:	4691      	movle	r9, r2
 800e750:	eba9 0306 	sub.w	r3, r9, r6
 800e754:	f8da 4008 	ldr.w	r4, [sl, #8]
 800e758:	47a0      	blx	r4
 800e75a:	b00d      	add	sp, #52	@ 0x34
 800e75c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e760:	2500      	movs	r5, #0
 800e762:	462e      	mov	r6, r5
 800e764:	e799      	b.n	800e69a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800e768 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e76c:	b0db      	sub	sp, #364	@ 0x16c
 800e76e:	461d      	mov	r5, r3
 800e770:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800e774:	930a      	str	r3, [sp, #40]	@ 0x28
 800e776:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800e77a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800e77c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800e780:	9310      	str	r3, [sp, #64]	@ 0x40
 800e782:	6803      	ldr	r3, [r0, #0]
 800e784:	910f      	str	r1, [sp, #60]	@ 0x3c
 800e786:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800e788:	9009      	str	r0, [sp, #36]	@ 0x24
 800e78a:	4614      	mov	r4, r2
 800e78c:	4629      	mov	r1, r5
 800e78e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800e792:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800e796:	47b8      	blx	r7
 800e798:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e79a:	6058      	str	r0, [r3, #4]
 800e79c:	2800      	cmp	r0, #0
 800e79e:	f000 83a1 	beq.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7a2:	682b      	ldr	r3, [r5, #0]
 800e7a4:	9314      	str	r3, [sp, #80]	@ 0x50
 800e7a6:	686b      	ldr	r3, [r5, #4]
 800e7a8:	9315      	str	r3, [sp, #84]	@ 0x54
 800e7aa:	4bc4      	ldr	r3, [pc, #784]	@ (800eabc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800e7ac:	ed94 7a02 	vldr	s14, [r4, #8]
 800e7b0:	7819      	ldrb	r1, [r3, #0]
 800e7b2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800e7b6:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800e7ba:	2900      	cmp	r1, #0
 800e7bc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e7c0:	bf16      	itet	ne
 800e7c2:	4619      	movne	r1, r3
 800e7c4:	4611      	moveq	r1, r2
 800e7c6:	4613      	movne	r3, r2
 800e7c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7cc:	9116      	str	r1, [sp, #88]	@ 0x58
 800e7ce:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800e7d2:	f240 8387 	bls.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7d6:	ed94 7a07 	vldr	s14, [r4, #28]
 800e7da:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e7de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7e2:	f240 837f 	bls.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7e6:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800e7ea:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e7ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7f2:	f240 8377 	bls.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7f6:	6822      	ldr	r2, [r4, #0]
 800e7f8:	4bb1      	ldr	r3, [pc, #708]	@ (800eac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800e7fa:	429a      	cmp	r2, r3
 800e7fc:	f2c0 8372 	blt.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e800:	49b0      	ldr	r1, [pc, #704]	@ (800eac4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800e802:	6963      	ldr	r3, [r4, #20]
 800e804:	428a      	cmp	r2, r1
 800e806:	f300 836d 	bgt.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e80a:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e80e:	48ae      	ldr	r0, [pc, #696]	@ (800eac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800e810:	33ff      	adds	r3, #255	@ 0xff
 800e812:	4283      	cmp	r3, r0
 800e814:	f200 8366 	bhi.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e818:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800e81a:	4dac      	ldr	r5, [pc, #688]	@ (800eacc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800e81c:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e820:	33ff      	adds	r3, #255	@ 0xff
 800e822:	42ab      	cmp	r3, r5
 800e824:	f200 835e 	bhi.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e828:	6862      	ldr	r2, [r4, #4]
 800e82a:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800e82e:	33ff      	adds	r3, #255	@ 0xff
 800e830:	4283      	cmp	r3, r0
 800e832:	f200 8357 	bhi.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e836:	69a1      	ldr	r1, [r4, #24]
 800e838:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800e83c:	33ff      	adds	r3, #255	@ 0xff
 800e83e:	4283      	cmp	r3, r0
 800e840:	f200 8350 	bhi.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e844:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800e846:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800e84a:	30ff      	adds	r0, #255	@ 0xff
 800e84c:	42a8      	cmp	r0, r5
 800e84e:	f200 8349 	bhi.w	800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e852:	428a      	cmp	r2, r1
 800e854:	f280 8110 	bge.w	800ea78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800e858:	429a      	cmp	r2, r3
 800e85a:	f300 8119 	bgt.w	800ea90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800e85e:	4299      	cmp	r1, r3
 800e860:	f280 811d 	bge.w	800ea9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800e864:	2502      	movs	r5, #2
 800e866:	2701      	movs	r7, #1
 800e868:	46a9      	mov	r9, r5
 800e86a:	46b8      	mov	r8, r7
 800e86c:	f04f 0a00 	mov.w	sl, #0
 800e870:	4621      	mov	r1, r4
 800e872:	a849      	add	r0, sp, #292	@ 0x124
 800e874:	f003 fdae 	bl	80123d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800e878:	4622      	mov	r2, r4
 800e87a:	4653      	mov	r3, sl
 800e87c:	a949      	add	r1, sp, #292	@ 0x124
 800e87e:	f8cd 9000 	str.w	r9, [sp]
 800e882:	a819      	add	r0, sp, #100	@ 0x64
 800e884:	f003 fed6 	bl	8012634 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e888:	4622      	mov	r2, r4
 800e88a:	4653      	mov	r3, sl
 800e88c:	a949      	add	r1, sp, #292	@ 0x124
 800e88e:	f8cd 8000 	str.w	r8, [sp]
 800e892:	a829      	add	r0, sp, #164	@ 0xa4
 800e894:	f003 fece 	bl	8012634 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e898:	4643      	mov	r3, r8
 800e89a:	4622      	mov	r2, r4
 800e89c:	a949      	add	r1, sp, #292	@ 0x124
 800e89e:	f8cd 9000 	str.w	r9, [sp]
 800e8a2:	a839      	add	r0, sp, #228	@ 0xe4
 800e8a4:	f003 fec6 	bl	8012634 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e8a8:	42af      	cmp	r7, r5
 800e8aa:	bfb5      	itete	lt
 800e8ac:	2300      	movlt	r3, #0
 800e8ae:	2301      	movge	r3, #1
 800e8b0:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800e8b2:	930e      	strge	r3, [sp, #56]	@ 0x38
 800e8b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e8b6:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e8ba:	af12      	add	r7, sp, #72	@ 0x48
 800e8bc:	bfb9      	ittee	lt
 800e8be:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800e8c0:	ac19      	addlt	r4, sp, #100	@ 0x64
 800e8c2:	ad19      	addge	r5, sp, #100	@ 0x64
 800e8c4:	ac29      	addge	r4, sp, #164	@ 0xa4
 800e8c6:	e887 0003 	stmia.w	r7, {r0, r1}
 800e8ca:	b928      	cbnz	r0, 800e8d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800e8cc:	4b80      	ldr	r3, [pc, #512]	@ (800ead0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800e8ce:	6818      	ldr	r0, [r3, #0]
 800e8d0:	6803      	ldr	r3, [r0, #0]
 800e8d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e8d4:	4798      	blx	r3
 800e8d6:	6038      	str	r0, [r7, #0]
 800e8d8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e8da:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e8de:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e8e2:	930c      	str	r3, [sp, #48]	@ 0x30
 800e8e4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e8e6:	6963      	ldr	r3, [r4, #20]
 800e8e8:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800e8ea:	440b      	add	r3, r1
 800e8ec:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e8f0:	4408      	add	r0, r1
 800e8f2:	b200      	sxth	r0, r0
 800e8f4:	4283      	cmp	r3, r0
 800e8f6:	900d      	str	r0, [sp, #52]	@ 0x34
 800e8f8:	f280 80dd 	bge.w	800eab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800e8fc:	428b      	cmp	r3, r1
 800e8fe:	da08      	bge.n	800e912 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e900:	2a00      	cmp	r2, #0
 800e902:	dd06      	ble.n	800e912 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e904:	1acb      	subs	r3, r1, r3
 800e906:	429a      	cmp	r2, r3
 800e908:	f2c0 80e4 	blt.w	800ead4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800e90c:	2b00      	cmp	r3, #0
 800e90e:	f300 80e2 	bgt.w	800ead6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800e912:	6967      	ldr	r7, [r4, #20]
 800e914:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e916:	443b      	add	r3, r7
 800e918:	461f      	mov	r7, r3
 800e91a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e91c:	1bdf      	subs	r7, r3, r7
 800e91e:	4297      	cmp	r7, r2
 800e920:	bfa8      	it	ge
 800e922:	4617      	movge	r7, r2
 800e924:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800e928:	2f00      	cmp	r7, #0
 800e92a:	f340 8166 	ble.w	800ebfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800e92e:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e930:	6829      	ldr	r1, [r5, #0]
 800e932:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e936:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e93a:	6820      	ldr	r0, [r4, #0]
 800e93c:	4411      	add	r1, r2
 800e93e:	4299      	cmp	r1, r3
 800e940:	dd1a      	ble.n	800e978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e942:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e946:	440b      	add	r3, r1
 800e948:	4402      	add	r2, r0
 800e94a:	b21b      	sxth	r3, r3
 800e94c:	429a      	cmp	r2, r3
 800e94e:	dc13      	bgt.n	800e978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e950:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e952:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800e954:	681b      	ldr	r3, [r3, #0]
 800e956:	9206      	str	r2, [sp, #24]
 800e958:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e95a:	9205      	str	r2, [sp, #20]
 800e95c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e95e:	9500      	str	r5, [sp, #0]
 800e960:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e964:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800e966:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e968:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e96c:	a912      	add	r1, sp, #72	@ 0x48
 800e96e:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800e972:	aa49      	add	r2, sp, #292	@ 0x124
 800e974:	4623      	mov	r3, r4
 800e976:	47c8      	blx	r9
 800e978:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e97c:	441a      	add	r2, r3
 800e97e:	6963      	ldr	r3, [r4, #20]
 800e980:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800e984:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800e988:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800e98c:	68a1      	ldr	r1, [r4, #8]
 800e98e:	ed94 6a08 	vldr	s12, [r4, #32]
 800e992:	6022      	str	r2, [r4, #0]
 800e994:	3301      	adds	r3, #1
 800e996:	6163      	str	r3, [r4, #20]
 800e998:	69a3      	ldr	r3, [r4, #24]
 800e99a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e99e:	3b01      	subs	r3, #1
 800e9a0:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800e9a4:	61a3      	str	r3, [r4, #24]
 800e9a6:	6923      	ldr	r3, [r4, #16]
 800e9a8:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e9ac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e9b0:	edd4 6a07 	vldr	s13, [r4, #28]
 800e9b4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e9b8:	440b      	add	r3, r1
 800e9ba:	68e1      	ldr	r1, [r4, #12]
 800e9bc:	6123      	str	r3, [r4, #16]
 800e9be:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e9c2:	428b      	cmp	r3, r1
 800e9c4:	edc4 6a07 	vstr	s13, [r4, #28]
 800e9c8:	db15      	blt.n	800e9f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800e9ca:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800e9ce:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e9d2:	3201      	adds	r2, #1
 800e9d4:	edc4 6a07 	vstr	s13, [r4, #28]
 800e9d8:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800e9dc:	6022      	str	r2, [r4, #0]
 800e9de:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e9e2:	1a5b      	subs	r3, r3, r1
 800e9e4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e9e8:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800e9ec:	6123      	str	r3, [r4, #16]
 800e9ee:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e9f2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e9f6:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e9fa:	441a      	add	r2, r3
 800e9fc:	696b      	ldr	r3, [r5, #20]
 800e9fe:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ea02:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ea06:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ea0a:	68a9      	ldr	r1, [r5, #8]
 800ea0c:	ed95 6a08 	vldr	s12, [r5, #32]
 800ea10:	602a      	str	r2, [r5, #0]
 800ea12:	3301      	adds	r3, #1
 800ea14:	616b      	str	r3, [r5, #20]
 800ea16:	69ab      	ldr	r3, [r5, #24]
 800ea18:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ea1c:	3b01      	subs	r3, #1
 800ea1e:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ea22:	61ab      	str	r3, [r5, #24]
 800ea24:	692b      	ldr	r3, [r5, #16]
 800ea26:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ea2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ea2e:	edd5 6a07 	vldr	s13, [r5, #28]
 800ea32:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ea36:	440b      	add	r3, r1
 800ea38:	68e9      	ldr	r1, [r5, #12]
 800ea3a:	612b      	str	r3, [r5, #16]
 800ea3c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ea40:	428b      	cmp	r3, r1
 800ea42:	edc5 6a07 	vstr	s13, [r5, #28]
 800ea46:	db15      	blt.n	800ea74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ea48:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ea4c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ea50:	3201      	adds	r2, #1
 800ea52:	edc5 6a07 	vstr	s13, [r5, #28]
 800ea56:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ea5a:	602a      	str	r2, [r5, #0]
 800ea5c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ea60:	1a5b      	subs	r3, r3, r1
 800ea62:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ea66:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ea6a:	612b      	str	r3, [r5, #16]
 800ea6c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ea70:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ea74:	3f01      	subs	r7, #1
 800ea76:	e757      	b.n	800e928 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ea78:	4299      	cmp	r1, r3
 800ea7a:	dc13      	bgt.n	800eaa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ea7c:	429a      	cmp	r2, r3
 800ea7e:	da14      	bge.n	800eaaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ea80:	2502      	movs	r5, #2
 800ea82:	2703      	movs	r7, #3
 800ea84:	46a9      	mov	r9, r5
 800ea86:	f04f 0800 	mov.w	r8, #0
 800ea8a:	f04f 0a01 	mov.w	sl, #1
 800ea8e:	e6ef      	b.n	800e870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ea90:	2501      	movs	r5, #1
 800ea92:	2700      	movs	r7, #0
 800ea94:	46a9      	mov	r9, r5
 800ea96:	46b8      	mov	r8, r7
 800ea98:	f04f 0a02 	mov.w	sl, #2
 800ea9c:	e6e8      	b.n	800e870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ea9e:	2501      	movs	r5, #1
 800eaa0:	2702      	movs	r7, #2
 800eaa2:	e6e1      	b.n	800e868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800eaa4:	2500      	movs	r5, #0
 800eaa6:	2701      	movs	r7, #1
 800eaa8:	e7f4      	b.n	800ea94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800eaaa:	2702      	movs	r7, #2
 800eaac:	2503      	movs	r5, #3
 800eaae:	f04f 0900 	mov.w	r9, #0
 800eab2:	46b8      	mov	r8, r7
 800eab4:	e7e9      	b.n	800ea8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800eab6:	4613      	mov	r3, r2
 800eab8:	e728      	b.n	800e90c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800eaba:	bf00      	nop
 800eabc:	20013ff2 	.word	0x20013ff2
 800eac0:	fffd8f01 	.word	0xfffd8f01
 800eac4:	00027100 	.word	0x00027100
 800eac8:	0004e1ff 	.word	0x0004e1ff
 800eacc:	0004e1fe 	.word	0x0004e1fe
 800ead0:	20013ffc 	.word	0x20013ffc
 800ead4:	4613      	mov	r3, r2
 800ead6:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ead8:	9111      	str	r1, [sp, #68]	@ 0x44
 800eada:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800eade:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800eae2:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800eae4:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800eae8:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800eaec:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800eaf0:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800eaf4:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800eaf8:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800eafc:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800eb00:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800eb04:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800eb08:	469e      	mov	lr, r3
 800eb0a:	469c      	mov	ip, r3
 800eb0c:	f04f 0900 	mov.w	r9, #0
 800eb10:	f1bc 0f00 	cmp.w	ip, #0
 800eb14:	d147      	bne.n	800eba6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800eb16:	eb03 0c07 	add.w	ip, r3, r7
 800eb1a:	1ad7      	subs	r7, r2, r3
 800eb1c:	f1b9 0f00 	cmp.w	r9, #0
 800eb20:	d009      	beq.n	800eb36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800eb22:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800eb26:	9029      	str	r0, [sp, #164]	@ 0xa4
 800eb28:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800eb2c:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800eb30:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800eb34:	912d      	str	r1, [sp, #180]	@ 0xb4
 800eb36:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800eb38:	9111      	str	r1, [sp, #68]	@ 0x44
 800eb3a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800eb3e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800eb42:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800eb46:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800eb4a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800eb4e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800eb52:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800eb56:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800eb5a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800eb5e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800eb62:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800eb66:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800eb6a:	f04f 0800 	mov.w	r8, #0
 800eb6e:	f1be 0f00 	cmp.w	lr, #0
 800eb72:	d031      	beq.n	800ebd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800eb74:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800eb76:	4431      	add	r1, r6
 800eb78:	4549      	cmp	r1, r9
 800eb7a:	4450      	add	r0, sl
 800eb7c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800eb80:	ee37 7a04 	vadd.f32	s14, s14, s8
 800eb84:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800eb88:	db08      	blt.n	800eb9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800eb8a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800eb8e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800eb92:	ee37 7a06 	vadd.f32	s14, s14, s12
 800eb96:	3001      	adds	r0, #1
 800eb98:	eba1 0109 	sub.w	r1, r1, r9
 800eb9c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800eba0:	f04f 0801 	mov.w	r8, #1
 800eba4:	e7e3      	b.n	800eb6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800eba6:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800eba8:	4431      	add	r1, r6
 800ebaa:	4541      	cmp	r1, r8
 800ebac:	4450      	add	r0, sl
 800ebae:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ebb2:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ebb6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ebba:	db08      	blt.n	800ebce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ebbc:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ebc0:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ebc4:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ebc8:	3001      	adds	r0, #1
 800ebca:	eba1 0108 	sub.w	r1, r1, r8
 800ebce:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ebd2:	f04f 0901 	mov.w	r9, #1
 800ebd6:	e79b      	b.n	800eb10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ebd8:	449c      	add	ip, r3
 800ebda:	1aff      	subs	r7, r7, r3
 800ebdc:	f1b8 0f00 	cmp.w	r8, #0
 800ebe0:	d009      	beq.n	800ebf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ebe2:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ebe6:	9019      	str	r0, [sp, #100]	@ 0x64
 800ebe8:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800ebec:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800ebf0:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800ebf4:	911d      	str	r1, [sp, #116]	@ 0x74
 800ebf6:	1ad2      	subs	r2, r2, r3
 800ebf8:	e68b      	b.n	800e912 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ebfa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ebfc:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800ebfe:	2b00      	cmp	r3, #0
 800ec00:	f000 80d1 	beq.w	800eda6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ec04:	ad19      	add	r5, sp, #100	@ 0x64
 800ec06:	ac39      	add	r4, sp, #228	@ 0xe4
 800ec08:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ec0a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ec0e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ec12:	930c      	str	r3, [sp, #48]	@ 0x30
 800ec14:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ec16:	6963      	ldr	r3, [r4, #20]
 800ec18:	440b      	add	r3, r1
 800ec1a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ec1e:	4408      	add	r0, r1
 800ec20:	b200      	sxth	r0, r0
 800ec22:	4283      	cmp	r3, r0
 800ec24:	900d      	str	r0, [sp, #52]	@ 0x34
 800ec26:	f280 80c1 	bge.w	800edac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ec2a:	428b      	cmp	r3, r1
 800ec2c:	da08      	bge.n	800ec40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ec2e:	2a00      	cmp	r2, #0
 800ec30:	dd06      	ble.n	800ec40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ec32:	1acb      	subs	r3, r1, r3
 800ec34:	429a      	cmp	r2, r3
 800ec36:	f2c0 80bb 	blt.w	800edb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ec3a:	2b00      	cmp	r3, #0
 800ec3c:	f300 80b9 	bgt.w	800edb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ec40:	6967      	ldr	r7, [r4, #20]
 800ec42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ec44:	443b      	add	r3, r7
 800ec46:	461f      	mov	r7, r3
 800ec48:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ec4a:	1bdf      	subs	r7, r3, r7
 800ec4c:	4297      	cmp	r7, r2
 800ec4e:	bfa8      	it	ge
 800ec50:	4617      	movge	r7, r2
 800ec52:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ec56:	2f00      	cmp	r7, #0
 800ec58:	f340 813c 	ble.w	800eed4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ec5c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ec5e:	6829      	ldr	r1, [r5, #0]
 800ec60:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ec64:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ec68:	6820      	ldr	r0, [r4, #0]
 800ec6a:	4411      	add	r1, r2
 800ec6c:	4299      	cmp	r1, r3
 800ec6e:	dd1a      	ble.n	800eca6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ec70:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ec74:	440b      	add	r3, r1
 800ec76:	4402      	add	r2, r0
 800ec78:	b21b      	sxth	r3, r3
 800ec7a:	429a      	cmp	r2, r3
 800ec7c:	dc13      	bgt.n	800eca6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ec7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ec80:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ec82:	681b      	ldr	r3, [r3, #0]
 800ec84:	9206      	str	r2, [sp, #24]
 800ec86:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ec88:	9205      	str	r2, [sp, #20]
 800ec8a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ec8c:	9500      	str	r5, [sp, #0]
 800ec8e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ec92:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ec94:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ec96:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ec9a:	a912      	add	r1, sp, #72	@ 0x48
 800ec9c:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800eca0:	aa49      	add	r2, sp, #292	@ 0x124
 800eca2:	4623      	mov	r3, r4
 800eca4:	47c8      	blx	r9
 800eca6:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ecaa:	441a      	add	r2, r3
 800ecac:	6963      	ldr	r3, [r4, #20]
 800ecae:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ecb2:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ecb6:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ecba:	68a1      	ldr	r1, [r4, #8]
 800ecbc:	ed94 6a08 	vldr	s12, [r4, #32]
 800ecc0:	6022      	str	r2, [r4, #0]
 800ecc2:	3301      	adds	r3, #1
 800ecc4:	6163      	str	r3, [r4, #20]
 800ecc6:	69a3      	ldr	r3, [r4, #24]
 800ecc8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800eccc:	3b01      	subs	r3, #1
 800ecce:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ecd2:	61a3      	str	r3, [r4, #24]
 800ecd4:	6923      	ldr	r3, [r4, #16]
 800ecd6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ecda:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ecde:	edd4 6a07 	vldr	s13, [r4, #28]
 800ece2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ece6:	440b      	add	r3, r1
 800ece8:	68e1      	ldr	r1, [r4, #12]
 800ecea:	6123      	str	r3, [r4, #16]
 800ecec:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ecf0:	428b      	cmp	r3, r1
 800ecf2:	edc4 6a07 	vstr	s13, [r4, #28]
 800ecf6:	db15      	blt.n	800ed24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ecf8:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800ecfc:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ed00:	3201      	adds	r2, #1
 800ed02:	edc4 6a07 	vstr	s13, [r4, #28]
 800ed06:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ed0a:	6022      	str	r2, [r4, #0]
 800ed0c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ed10:	1a5b      	subs	r3, r3, r1
 800ed12:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ed16:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800ed1a:	6123      	str	r3, [r4, #16]
 800ed1c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ed20:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ed24:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ed28:	441a      	add	r2, r3
 800ed2a:	696b      	ldr	r3, [r5, #20]
 800ed2c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ed30:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ed34:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ed38:	68a9      	ldr	r1, [r5, #8]
 800ed3a:	ed95 6a08 	vldr	s12, [r5, #32]
 800ed3e:	602a      	str	r2, [r5, #0]
 800ed40:	3301      	adds	r3, #1
 800ed42:	616b      	str	r3, [r5, #20]
 800ed44:	69ab      	ldr	r3, [r5, #24]
 800ed46:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ed4a:	3b01      	subs	r3, #1
 800ed4c:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ed50:	61ab      	str	r3, [r5, #24]
 800ed52:	692b      	ldr	r3, [r5, #16]
 800ed54:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ed58:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed5c:	edd5 6a07 	vldr	s13, [r5, #28]
 800ed60:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ed64:	440b      	add	r3, r1
 800ed66:	68e9      	ldr	r1, [r5, #12]
 800ed68:	612b      	str	r3, [r5, #16]
 800ed6a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ed6e:	428b      	cmp	r3, r1
 800ed70:	edc5 6a07 	vstr	s13, [r5, #28]
 800ed74:	db15      	blt.n	800eda2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ed76:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ed7a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ed7e:	3201      	adds	r2, #1
 800ed80:	edc5 6a07 	vstr	s13, [r5, #28]
 800ed84:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ed88:	602a      	str	r2, [r5, #0]
 800ed8a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ed8e:	1a5b      	subs	r3, r3, r1
 800ed90:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ed94:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ed98:	612b      	str	r3, [r5, #16]
 800ed9a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ed9e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800eda2:	3f01      	subs	r7, #1
 800eda4:	e757      	b.n	800ec56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800eda6:	ad39      	add	r5, sp, #228	@ 0xe4
 800eda8:	ac19      	add	r4, sp, #100	@ 0x64
 800edaa:	e72d      	b.n	800ec08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800edac:	4613      	mov	r3, r2
 800edae:	e744      	b.n	800ec3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800edb0:	4613      	mov	r3, r2
 800edb2:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800edb6:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800edb8:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800edbc:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800edc0:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800edc4:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800edc8:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800edcc:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800edd0:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800edd4:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800edd6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800edda:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800edde:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800ede2:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800ede6:	960e      	str	r6, [sp, #56]	@ 0x38
 800ede8:	469e      	mov	lr, r3
 800edea:	461f      	mov	r7, r3
 800edec:	f04f 0900 	mov.w	r9, #0
 800edf0:	2f00      	cmp	r7, #0
 800edf2:	d146      	bne.n	800ee82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800edf4:	449c      	add	ip, r3
 800edf6:	1ad7      	subs	r7, r2, r3
 800edf8:	f1b9 0f00 	cmp.w	r9, #0
 800edfc:	d009      	beq.n	800ee12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800edfe:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800ee02:	9039      	str	r0, [sp, #228]	@ 0xe4
 800ee04:	913d      	str	r1, [sp, #244]	@ 0xf4
 800ee06:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800ee0a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800ee0e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800ee12:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800ee14:	910e      	str	r1, [sp, #56]	@ 0x38
 800ee16:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800ee1a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800ee1e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800ee22:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800ee26:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800ee2a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800ee2e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800ee32:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ee36:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ee3a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ee3e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ee42:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ee46:	f04f 0800 	mov.w	r8, #0
 800ee4a:	f1be 0f00 	cmp.w	lr, #0
 800ee4e:	d030      	beq.n	800eeb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ee50:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800ee52:	4431      	add	r1, r6
 800ee54:	4549      	cmp	r1, r9
 800ee56:	4450      	add	r0, sl
 800ee58:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ee5c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ee60:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ee64:	db08      	blt.n	800ee78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ee66:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ee6a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ee6e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ee72:	3001      	adds	r0, #1
 800ee74:	eba1 0109 	sub.w	r1, r1, r9
 800ee78:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ee7c:	f04f 0801 	mov.w	r8, #1
 800ee80:	e7e3      	b.n	800ee4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800ee82:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800ee84:	4431      	add	r1, r6
 800ee86:	4541      	cmp	r1, r8
 800ee88:	4450      	add	r0, sl
 800ee8a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ee8e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ee92:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ee96:	db08      	blt.n	800eeaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800ee98:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ee9c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800eea0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800eea4:	3001      	adds	r0, #1
 800eea6:	eba1 0108 	sub.w	r1, r1, r8
 800eeaa:	3f01      	subs	r7, #1
 800eeac:	f04f 0901 	mov.w	r9, #1
 800eeb0:	e79e      	b.n	800edf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800eeb2:	449c      	add	ip, r3
 800eeb4:	1aff      	subs	r7, r7, r3
 800eeb6:	f1b8 0f00 	cmp.w	r8, #0
 800eeba:	d009      	beq.n	800eed0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800eebc:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800eec0:	9019      	str	r0, [sp, #100]	@ 0x64
 800eec2:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800eec6:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800eeca:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800eece:	911d      	str	r1, [sp, #116]	@ 0x74
 800eed0:	1ad2      	subs	r2, r2, r3
 800eed2:	e6b5      	b.n	800ec40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800eed4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800eed6:	681b      	ldr	r3, [r3, #0]
 800eed8:	b923      	cbnz	r3, 800eee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eeda:	4b04      	ldr	r3, [pc, #16]	@ (800eeec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800eedc:	6818      	ldr	r0, [r3, #0]
 800eede:	6803      	ldr	r3, [r0, #0]
 800eee0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800eee2:	4798      	blx	r3
 800eee4:	b05b      	add	sp, #364	@ 0x16c
 800eee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eeea:	bf00      	nop
 800eeec:	20013ffc 	.word	0x20013ffc

0800eef0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800eef0:	2b03      	cmp	r3, #3
 800eef2:	d818      	bhi.n	800ef26 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800eef4:	e8df f003 	tbb	[pc, r3]
 800eef8:	130d0602 	.word	0x130d0602
 800eefc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ef00:	1850      	adds	r0, r2, r1
 800ef02:	4770      	bx	lr
 800ef04:	8803      	ldrh	r3, [r0, #0]
 800ef06:	8880      	ldrh	r0, [r0, #4]
 800ef08:	4418      	add	r0, r3
 800ef0a:	b200      	sxth	r0, r0
 800ef0c:	1a80      	subs	r0, r0, r2
 800ef0e:	3801      	subs	r0, #1
 800ef10:	4770      	bx	lr
 800ef12:	8803      	ldrh	r3, [r0, #0]
 800ef14:	8880      	ldrh	r0, [r0, #4]
 800ef16:	4418      	add	r0, r3
 800ef18:	b200      	sxth	r0, r0
 800ef1a:	1a40      	subs	r0, r0, r1
 800ef1c:	e7f7      	b.n	800ef0e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ef1e:	f9b0 0000 	ldrsh.w	r0, [r0]
 800ef22:	4410      	add	r0, r2
 800ef24:	4770      	bx	lr
 800ef26:	2000      	movs	r0, #0
 800ef28:	4770      	bx	lr

0800ef2a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ef2a:	2b03      	cmp	r3, #3
 800ef2c:	d817      	bhi.n	800ef5e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800ef2e:	e8df f003 	tbb	[pc, r3]
 800ef32:	0602      	.short	0x0602
 800ef34:	1009      	.short	0x1009
 800ef36:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ef3a:	1850      	adds	r0, r2, r1
 800ef3c:	4770      	bx	lr
 800ef3e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ef42:	e7fa      	b.n	800ef3a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800ef44:	8843      	ldrh	r3, [r0, #2]
 800ef46:	88c0      	ldrh	r0, [r0, #6]
 800ef48:	4418      	add	r0, r3
 800ef4a:	b200      	sxth	r0, r0
 800ef4c:	1a80      	subs	r0, r0, r2
 800ef4e:	3801      	subs	r0, #1
 800ef50:	4770      	bx	lr
 800ef52:	8843      	ldrh	r3, [r0, #2]
 800ef54:	88c0      	ldrh	r0, [r0, #6]
 800ef56:	4418      	add	r0, r3
 800ef58:	b200      	sxth	r0, r0
 800ef5a:	1a40      	subs	r0, r0, r1
 800ef5c:	e7f7      	b.n	800ef4e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ef5e:	2000      	movs	r0, #0
 800ef60:	4770      	bx	lr
	...

0800ef64 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800ef64:	4b01      	ldr	r3, [pc, #4]	@ (800ef6c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800ef66:	2200      	movs	r2, #0
 800ef68:	601a      	str	r2, [r3, #0]
 800ef6a:	4770      	bx	lr
 800ef6c:	2001400c 	.word	0x2001400c

0800ef70 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800ef70:	4603      	mov	r3, r0
 800ef72:	b1c8      	cbz	r0, 800efa8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800ef74:	0c02      	lsrs	r2, r0, #16
 800ef76:	0412      	lsls	r2, r2, #16
 800ef78:	b9a2      	cbnz	r2, 800efa4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800ef7a:	0403      	lsls	r3, r0, #16
 800ef7c:	2010      	movs	r0, #16
 800ef7e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800ef82:	bf04      	itt	eq
 800ef84:	021b      	lsleq	r3, r3, #8
 800ef86:	3008      	addeq	r0, #8
 800ef88:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800ef8c:	bf04      	itt	eq
 800ef8e:	011b      	lsleq	r3, r3, #4
 800ef90:	3004      	addeq	r0, #4
 800ef92:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800ef96:	bf04      	itt	eq
 800ef98:	009b      	lsleq	r3, r3, #2
 800ef9a:	3002      	addeq	r0, #2
 800ef9c:	2b00      	cmp	r3, #0
 800ef9e:	db04      	blt.n	800efaa <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800efa0:	3001      	adds	r0, #1
 800efa2:	4770      	bx	lr
 800efa4:	2000      	movs	r0, #0
 800efa6:	e7ea      	b.n	800ef7e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800efa8:	2020      	movs	r0, #32
 800efaa:	4770      	bx	lr

0800efac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800efac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efb0:	b087      	sub	sp, #28
 800efb2:	460d      	mov	r5, r1
 800efb4:	4616      	mov	r6, r2
 800efb6:	4698      	mov	r8, r3
 800efb8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800efbc:	4601      	mov	r1, r0
 800efbe:	b120      	cbz	r0, 800efca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800efc0:	b11a      	cbz	r2, 800efca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800efc2:	2d1f      	cmp	r5, #31
 800efc4:	d801      	bhi.n	800efca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800efc6:	2b1f      	cmp	r3, #31
 800efc8:	d904      	bls.n	800efd4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800efca:	2000      	movs	r0, #0
 800efcc:	6038      	str	r0, [r7, #0]
 800efce:	b007      	add	sp, #28
 800efd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800efd4:	b97d      	cbnz	r5, 800eff6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800efd6:	b143      	cbz	r3, 800efea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800efd8:	4602      	mov	r2, r0
 800efda:	e9cd 4700 	strd	r4, r7, [sp]
 800efde:	462b      	mov	r3, r5
 800efe0:	4641      	mov	r1, r8
 800efe2:	4630      	mov	r0, r6
 800efe4:	f7ff ffe2 	bl	800efac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800efe8:	e7f1      	b.n	800efce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800efea:	f04f 33ff 	mov.w	r3, #4294967295
 800efee:	603b      	str	r3, [r7, #0]
 800eff0:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800eff4:	e7eb      	b.n	800efce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800eff6:	fa32 fa05 	lsrs.w	sl, r2, r5
 800effa:	d106      	bne.n	800f00a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800effc:	4346      	muls	r6, r0
 800effe:	fbb6 f0f4 	udiv	r0, r6, r4
 800f002:	fb04 6610 	mls	r6, r4, r0, r6
 800f006:	603e      	str	r6, [r7, #0]
 800f008:	e7e1      	b.n	800efce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f00a:	2201      	movs	r2, #1
 800f00c:	40aa      	lsls	r2, r5
 800f00e:	3a01      	subs	r2, #1
 800f010:	4016      	ands	r6, r2
 800f012:	fa00 fb05 	lsl.w	fp, r0, r5
 800f016:	4630      	mov	r0, r6
 800f018:	fbbb f9f4 	udiv	r9, fp, r4
 800f01c:	fb0a f309 	mul.w	r3, sl, r9
 800f020:	9303      	str	r3, [sp, #12]
 800f022:	f7ff ffa5 	bl	800ef70 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f026:	462b      	mov	r3, r5
 800f028:	460a      	mov	r2, r1
 800f02a:	e9cd 4700 	strd	r4, r7, [sp]
 800f02e:	4601      	mov	r1, r0
 800f030:	4630      	mov	r0, r6
 800f032:	f7ff ffbb 	bl	800efac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f036:	fb04 b919 	mls	r9, r4, r9, fp
 800f03a:	4606      	mov	r6, r0
 800f03c:	4648      	mov	r0, r9
 800f03e:	eb05 0108 	add.w	r1, r5, r8
 800f042:	f7ff ff95 	bl	800ef70 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f046:	ab05      	add	r3, sp, #20
 800f048:	e9cd 4300 	strd	r4, r3, [sp]
 800f04c:	464a      	mov	r2, r9
 800f04e:	4603      	mov	r3, r0
 800f050:	4650      	mov	r0, sl
 800f052:	f7ff ffab 	bl	800efac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f056:	6839      	ldr	r1, [r7, #0]
 800f058:	9a05      	ldr	r2, [sp, #20]
 800f05a:	9b03      	ldr	r3, [sp, #12]
 800f05c:	4411      	add	r1, r2
 800f05e:	fbb1 f2f4 	udiv	r2, r1, r4
 800f062:	18d3      	adds	r3, r2, r3
 800f064:	441e      	add	r6, r3
 800f066:	fb04 1412 	mls	r4, r4, r2, r1
 800f06a:	4430      	add	r0, r6
 800f06c:	603c      	str	r4, [r7, #0]
 800f06e:	e7ae      	b.n	800efce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800f070 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f070:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f074:	b085      	sub	sp, #20
 800f076:	f1b0 0900 	subs.w	r9, r0, #0
 800f07a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800f07c:	461d      	mov	r5, r3
 800f07e:	bfbf      	itttt	lt
 800f080:	6823      	ldrlt	r3, [r4, #0]
 800f082:	425b      	neglt	r3, r3
 800f084:	f1c9 0900 	rsblt	r9, r9, #0
 800f088:	6023      	strlt	r3, [r4, #0]
 800f08a:	bfb4      	ite	lt
 800f08c:	f04f 36ff 	movlt.w	r6, #4294967295
 800f090:	2601      	movge	r6, #1
 800f092:	2a00      	cmp	r2, #0
 800f094:	4617      	mov	r7, r2
 800f096:	da04      	bge.n	800f0a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f098:	6823      	ldr	r3, [r4, #0]
 800f09a:	425b      	negs	r3, r3
 800f09c:	4257      	negs	r7, r2
 800f09e:	4276      	negs	r6, r6
 800f0a0:	6023      	str	r3, [r4, #0]
 800f0a2:	2d00      	cmp	r5, #0
 800f0a4:	4638      	mov	r0, r7
 800f0a6:	bfba      	itte	lt
 800f0a8:	426d      	neglt	r5, r5
 800f0aa:	f04f 38ff 	movlt.w	r8, #4294967295
 800f0ae:	f04f 0801 	movge.w	r8, #1
 800f0b2:	f7ff ff5d 	bl	800ef70 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f0b6:	ab03      	add	r3, sp, #12
 800f0b8:	e9cd 5300 	strd	r5, r3, [sp]
 800f0bc:	463a      	mov	r2, r7
 800f0be:	4603      	mov	r3, r0
 800f0c0:	4648      	mov	r0, r9
 800f0c2:	f7ff ff73 	bl	800efac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f0c6:	6823      	ldr	r3, [r4, #0]
 800f0c8:	9a03      	ldr	r2, [sp, #12]
 800f0ca:	4546      	cmp	r6, r8
 800f0cc:	441a      	add	r2, r3
 800f0ce:	fb92 f3f5 	sdiv	r3, r2, r5
 800f0d2:	4418      	add	r0, r3
 800f0d4:	bf18      	it	ne
 800f0d6:	4240      	negne	r0, r0
 800f0d8:	fb05 2313 	mls	r3, r5, r3, r2
 800f0dc:	1c72      	adds	r2, r6, #1
 800f0de:	6023      	str	r3, [r4, #0]
 800f0e0:	d105      	bne.n	800f0ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f0e2:	2b00      	cmp	r3, #0
 800f0e4:	f1c3 0200 	rsb	r2, r3, #0
 800f0e8:	db0b      	blt.n	800f102 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f0ea:	6022      	str	r2, [r4, #0]
 800f0ec:	e006      	b.n	800f0fc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f0ee:	2e01      	cmp	r6, #1
 800f0f0:	d104      	bne.n	800f0fc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f0f2:	2b00      	cmp	r3, #0
 800f0f4:	da02      	bge.n	800f0fc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f0f6:	442b      	add	r3, r5
 800f0f8:	3801      	subs	r0, #1
 800f0fa:	6023      	str	r3, [r4, #0]
 800f0fc:	b005      	add	sp, #20
 800f0fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f102:	3801      	subs	r0, #1
 800f104:	1b52      	subs	r2, r2, r5
 800f106:	e7f0      	b.n	800f0ea <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800f108 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f108:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f10c:	4c1c      	ldr	r4, [pc, #112]	@ (800f180 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f10e:	6807      	ldr	r7, [r0, #0]
 800f110:	69a3      	ldr	r3, [r4, #24]
 800f112:	4605      	mov	r5, r0
 800f114:	b92b      	cbnz	r3, 800f122 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f116:	6840      	ldr	r0, [r0, #4]
 800f118:	e9c5 7000 	strd	r7, r0, [r5]
 800f11c:	b004      	add	sp, #16
 800f11e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f122:	68a2      	ldr	r2, [r4, #8]
 800f124:	6820      	ldr	r0, [r4, #0]
 800f126:	ae04      	add	r6, sp, #16
 800f128:	f04f 0802 	mov.w	r8, #2
 800f12c:	fb93 f1f8 	sdiv	r1, r3, r8
 800f130:	440a      	add	r2, r1
 800f132:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f136:	69e1      	ldr	r1, [r4, #28]
 800f138:	9600      	str	r6, [sp, #0]
 800f13a:	463a      	mov	r2, r7
 800f13c:	f7ff ff98 	bl	800f070 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f140:	69a3      	ldr	r3, [r4, #24]
 800f142:	686a      	ldr	r2, [r5, #4]
 800f144:	6a21      	ldr	r1, [r4, #32]
 800f146:	9600      	str	r6, [sp, #0]
 800f148:	4607      	mov	r7, r0
 800f14a:	6860      	ldr	r0, [r4, #4]
 800f14c:	f7ff ff90 	bl	800f070 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f150:	6962      	ldr	r2, [r4, #20]
 800f152:	69a3      	ldr	r3, [r4, #24]
 800f154:	fb93 f8f8 	sdiv	r8, r3, r8
 800f158:	4442      	add	r2, r8
 800f15a:	9203      	str	r2, [sp, #12]
 800f15c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f15e:	682a      	ldr	r2, [r5, #0]
 800f160:	9600      	str	r6, [sp, #0]
 800f162:	4407      	add	r7, r0
 800f164:	68e0      	ldr	r0, [r4, #12]
 800f166:	f7ff ff83 	bl	800f070 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f16a:	9600      	str	r6, [sp, #0]
 800f16c:	4680      	mov	r8, r0
 800f16e:	69a3      	ldr	r3, [r4, #24]
 800f170:	686a      	ldr	r2, [r5, #4]
 800f172:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800f174:	6920      	ldr	r0, [r4, #16]
 800f176:	f7ff ff7b 	bl	800f070 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f17a:	4440      	add	r0, r8
 800f17c:	e7cc      	b.n	800f118 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800f17e:	bf00      	nop
 800f180:	20014010 	.word	0x20014010

0800f184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800f184:	4b07      	ldr	r3, [pc, #28]	@ (800f1a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800f186:	781b      	ldrb	r3, [r3, #0]
 800f188:	2b01      	cmp	r3, #1
 800f18a:	d109      	bne.n	800f1a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800f18c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f190:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f194:	8003      	strh	r3, [r0, #0]
 800f196:	4b04      	ldr	r3, [pc, #16]	@ (800f1a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800f198:	881b      	ldrh	r3, [r3, #0]
 800f19a:	3b01      	subs	r3, #1
 800f19c:	1a9b      	subs	r3, r3, r2
 800f19e:	800b      	strh	r3, [r1, #0]
 800f1a0:	4770      	bx	lr
 800f1a2:	bf00      	nop
 800f1a4:	20013ff2 	.word	0x20013ff2
 800f1a8:	20013fee 	.word	0x20013fee

0800f1ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800f1ac:	b510      	push	{r4, lr}
 800f1ae:	4b07      	ldr	r3, [pc, #28]	@ (800f1cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800f1b0:	781b      	ldrb	r3, [r3, #0]
 800f1b2:	2b01      	cmp	r3, #1
 800f1b4:	d108      	bne.n	800f1c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800f1b6:	4b06      	ldr	r3, [pc, #24]	@ (800f1d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800f1b8:	880c      	ldrh	r4, [r1, #0]
 800f1ba:	881b      	ldrh	r3, [r3, #0]
 800f1bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f1c0:	3b01      	subs	r3, #1
 800f1c2:	1b1b      	subs	r3, r3, r4
 800f1c4:	8003      	strh	r3, [r0, #0]
 800f1c6:	800a      	strh	r2, [r1, #0]
 800f1c8:	bd10      	pop	{r4, pc}
 800f1ca:	bf00      	nop
 800f1cc:	20013ff2 	.word	0x20013ff2
 800f1d0:	20013fee 	.word	0x20013fee

0800f1d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800f1d4:	b510      	push	{r4, lr}
 800f1d6:	4b0a      	ldr	r3, [pc, #40]	@ (800f200 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800f1d8:	781b      	ldrb	r3, [r3, #0]
 800f1da:	2b01      	cmp	r3, #1
 800f1dc:	d10e      	bne.n	800f1fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800f1de:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f1e2:	8843      	ldrh	r3, [r0, #2]
 800f1e4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f1e8:	8044      	strh	r4, [r0, #2]
 800f1ea:	18ca      	adds	r2, r1, r3
 800f1ec:	4b05      	ldr	r3, [pc, #20]	@ (800f204 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800f1ee:	881b      	ldrh	r3, [r3, #0]
 800f1f0:	1a9b      	subs	r3, r3, r2
 800f1f2:	8003      	strh	r3, [r0, #0]
 800f1f4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f1f8:	80c3      	strh	r3, [r0, #6]
 800f1fa:	8081      	strh	r1, [r0, #4]
 800f1fc:	bd10      	pop	{r4, pc}
 800f1fe:	bf00      	nop
 800f200:	20013ff2 	.word	0x20013ff2
 800f204:	20013fee 	.word	0x20013fee

0800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800f208:	4b08      	ldr	r3, [pc, #32]	@ (800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800f20a:	781b      	ldrb	r3, [r3, #0]
 800f20c:	2b01      	cmp	r3, #1
 800f20e:	d10c      	bne.n	800f22a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800f210:	8803      	ldrh	r3, [r0, #0]
 800f212:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800f216:	8842      	ldrh	r2, [r0, #2]
 800f218:	8002      	strh	r2, [r0, #0]
 800f21a:	185a      	adds	r2, r3, r1
 800f21c:	4b04      	ldr	r3, [pc, #16]	@ (800f230 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800f21e:	881b      	ldrh	r3, [r3, #0]
 800f220:	1a9b      	subs	r3, r3, r2
 800f222:	8043      	strh	r3, [r0, #2]
 800f224:	88c3      	ldrh	r3, [r0, #6]
 800f226:	8083      	strh	r3, [r0, #4]
 800f228:	80c1      	strh	r1, [r0, #6]
 800f22a:	4770      	bx	lr
 800f22c:	20013ff2 	.word	0x20013ff2
 800f230:	20013fee 	.word	0x20013fee

0800f234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800f234:	b510      	push	{r4, lr}
 800f236:	4b07      	ldr	r3, [pc, #28]	@ (800f254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800f238:	781b      	ldrb	r3, [r3, #0]
 800f23a:	2b01      	cmp	r3, #1
 800f23c:	d108      	bne.n	800f250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800f23e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f242:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f246:	8003      	strh	r3, [r0, #0]
 800f248:	8893      	ldrh	r3, [r2, #4]
 800f24a:	3b01      	subs	r3, #1
 800f24c:	1b1b      	subs	r3, r3, r4
 800f24e:	800b      	strh	r3, [r1, #0]
 800f250:	bd10      	pop	{r4, pc}
 800f252:	bf00      	nop
 800f254:	20013ff2 	.word	0x20013ff2

0800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800f258:	b510      	push	{r4, lr}
 800f25a:	4b0a      	ldr	r3, [pc, #40]	@ (800f284 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800f25c:	781b      	ldrb	r3, [r3, #0]
 800f25e:	2b01      	cmp	r3, #1
 800f260:	460a      	mov	r2, r1
 800f262:	d10d      	bne.n	800f280 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800f264:	8881      	ldrh	r1, [r0, #4]
 800f266:	8803      	ldrh	r3, [r0, #0]
 800f268:	440b      	add	r3, r1
 800f26a:	4601      	mov	r1, r0
 800f26c:	3b01      	subs	r3, #1
 800f26e:	f821 3b02 	strh.w	r3, [r1], #2
 800f272:	f7ff ffdf 	bl	800f234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800f276:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f27a:	88c2      	ldrh	r2, [r0, #6]
 800f27c:	8082      	strh	r2, [r0, #4]
 800f27e:	80c3      	strh	r3, [r0, #6]
 800f280:	bd10      	pop	{r4, pc}
 800f282:	bf00      	nop
 800f284:	20013ff2 	.word	0x20013ff2

0800f288 <_ZN8touchgfx11Application13requestRedrawEv>:
 800f288:	4b06      	ldr	r3, [pc, #24]	@ (800f2a4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800f28a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f28e:	4b06      	ldr	r3, [pc, #24]	@ (800f2a8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800f290:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800f294:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f298:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800f29c:	2100      	movs	r1, #0
 800f29e:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800f2a2:	4770      	bx	lr
 800f2a4:	20013fee 	.word	0x20013fee
 800f2a8:	20013ff0 	.word	0x20013ff0

0800f2ac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800f2ac:	4b03      	ldr	r3, [pc, #12]	@ (800f2bc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800f2ae:	6818      	ldr	r0, [r3, #0]
 800f2b0:	b110      	cbz	r0, 800f2b8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800f2b2:	6803      	ldr	r3, [r0, #0]
 800f2b4:	699b      	ldr	r3, [r3, #24]
 800f2b6:	4718      	bx	r3
 800f2b8:	4770      	bx	lr
 800f2ba:	bf00      	nop
 800f2bc:	20014040 	.word	0x20014040

0800f2c0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800f2c0:	4770      	bx	lr
	...

0800f2c4 <_ZN8touchgfx11Application4drawEv>:
 800f2c4:	b507      	push	{r0, r1, r2, lr}
 800f2c6:	4b09      	ldr	r3, [pc, #36]	@ (800f2ec <_ZN8touchgfx11Application4drawEv+0x28>)
 800f2c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2cc:	4b08      	ldr	r3, [pc, #32]	@ (800f2f0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800f2ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f2d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f2d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f2da:	6803      	ldr	r3, [r0, #0]
 800f2dc:	2100      	movs	r1, #0
 800f2de:	9100      	str	r1, [sp, #0]
 800f2e0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f2e2:	4669      	mov	r1, sp
 800f2e4:	4798      	blx	r3
 800f2e6:	b003      	add	sp, #12
 800f2e8:	f85d fb04 	ldr.w	pc, [sp], #4
 800f2ec:	20013fee 	.word	0x20013fee
 800f2f0:	20013ff0 	.word	0x20013ff0

0800f2f4 <_ZN8touchgfx11Application10invalidateEv>:
 800f2f4:	4b09      	ldr	r3, [pc, #36]	@ (800f31c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800f2f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2fa:	4b09      	ldr	r3, [pc, #36]	@ (800f320 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800f2fc:	b082      	sub	sp, #8
 800f2fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f302:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f306:	2100      	movs	r1, #0
 800f308:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f30c:	9100      	str	r1, [sp, #0]
 800f30e:	6803      	ldr	r3, [r0, #0]
 800f310:	aa02      	add	r2, sp, #8
 800f312:	e912 0006 	ldmdb	r2, {r1, r2}
 800f316:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f318:	b002      	add	sp, #8
 800f31a:	4718      	bx	r3
 800f31c:	20013fee 	.word	0x20013fee
 800f320:	20013ff0 	.word	0x20013ff0

0800f324 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800f324:	4b03      	ldr	r3, [pc, #12]	@ (800f334 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800f326:	6818      	ldr	r0, [r3, #0]
 800f328:	b110      	cbz	r0, 800f330 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800f32a:	6803      	ldr	r3, [r0, #0]
 800f32c:	69db      	ldr	r3, [r3, #28]
 800f32e:	4718      	bx	r3
 800f330:	4770      	bx	lr
 800f332:	bf00      	nop
 800f334:	20014040 	.word	0x20014040

0800f338 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800f338:	4b03      	ldr	r3, [pc, #12]	@ (800f348 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800f33a:	6818      	ldr	r0, [r3, #0]
 800f33c:	b110      	cbz	r0, 800f344 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800f33e:	6803      	ldr	r3, [r0, #0]
 800f340:	6a1b      	ldr	r3, [r3, #32]
 800f342:	4718      	bx	r3
 800f344:	4770      	bx	lr
 800f346:	bf00      	nop
 800f348:	20014040 	.word	0x20014040

0800f34c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800f34c:	2300      	movs	r3, #0
 800f34e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800f352:	4770      	bx	lr

0800f354 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800f354:	4b03      	ldr	r3, [pc, #12]	@ (800f364 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800f356:	6818      	ldr	r0, [r3, #0]
 800f358:	b110      	cbz	r0, 800f360 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800f35a:	6803      	ldr	r3, [r0, #0]
 800f35c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f35e:	4718      	bx	r3
 800f360:	4770      	bx	lr
 800f362:	bf00      	nop
 800f364:	20014040 	.word	0x20014040

0800f368 <_ZN8touchgfx11ApplicationD1Ev>:
 800f368:	4770      	bx	lr

0800f36a <_ZN8touchgfx11ApplicationD0Ev>:
 800f36a:	b510      	push	{r4, lr}
 800f36c:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800f370:	4604      	mov	r4, r0
 800f372:	f012 fb76 	bl	8021a62 <_ZdlPvj>
 800f376:	4620      	mov	r0, r4
 800f378:	bd10      	pop	{r4, pc}

0800f37a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800f37a:	b510      	push	{r4, lr}
 800f37c:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f380:	888a      	ldrh	r2, [r1, #4]
 800f382:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f386:	4422      	add	r2, r4
 800f388:	b212      	sxth	r2, r2
 800f38a:	4293      	cmp	r3, r2
 800f38c:	da15      	bge.n	800f3ba <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f38e:	8882      	ldrh	r2, [r0, #4]
 800f390:	4413      	add	r3, r2
 800f392:	b21b      	sxth	r3, r3
 800f394:	429c      	cmp	r4, r3
 800f396:	da10      	bge.n	800f3ba <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f398:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f39c:	88c9      	ldrh	r1, [r1, #6]
 800f39e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f3a2:	4419      	add	r1, r3
 800f3a4:	b209      	sxth	r1, r1
 800f3a6:	428a      	cmp	r2, r1
 800f3a8:	da07      	bge.n	800f3ba <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f3aa:	88c0      	ldrh	r0, [r0, #6]
 800f3ac:	4410      	add	r0, r2
 800f3ae:	b200      	sxth	r0, r0
 800f3b0:	4283      	cmp	r3, r0
 800f3b2:	bfac      	ite	ge
 800f3b4:	2000      	movge	r0, #0
 800f3b6:	2001      	movlt	r0, #1
 800f3b8:	bd10      	pop	{r4, pc}
 800f3ba:	2000      	movs	r0, #0
 800f3bc:	e7fc      	b.n	800f3b8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800f3be <_ZN8touchgfx4Rect10restrictToEss>:
 800f3be:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f3c2:	2b00      	cmp	r3, #0
 800f3c4:	b510      	push	{r4, lr}
 800f3c6:	da04      	bge.n	800f3d2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800f3c8:	8884      	ldrh	r4, [r0, #4]
 800f3ca:	4423      	add	r3, r4
 800f3cc:	8083      	strh	r3, [r0, #4]
 800f3ce:	2300      	movs	r3, #0
 800f3d0:	8003      	strh	r3, [r0, #0]
 800f3d2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f3d6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f3da:	1b09      	subs	r1, r1, r4
 800f3dc:	428b      	cmp	r3, r1
 800f3de:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f3e2:	bfc8      	it	gt
 800f3e4:	8081      	strhgt	r1, [r0, #4]
 800f3e6:	2b00      	cmp	r3, #0
 800f3e8:	da04      	bge.n	800f3f4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800f3ea:	88c1      	ldrh	r1, [r0, #6]
 800f3ec:	440b      	add	r3, r1
 800f3ee:	80c3      	strh	r3, [r0, #6]
 800f3f0:	2300      	movs	r3, #0
 800f3f2:	8043      	strh	r3, [r0, #2]
 800f3f4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f3f8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f3fc:	1a52      	subs	r2, r2, r1
 800f3fe:	4293      	cmp	r3, r2
 800f400:	bfc8      	it	gt
 800f402:	80c2      	strhgt	r2, [r0, #6]
 800f404:	bd10      	pop	{r4, pc}
	...

0800f408 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800f408:	b510      	push	{r4, lr}
 800f40a:	4b10      	ldr	r3, [pc, #64]	@ (800f44c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800f40c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f410:	4b0f      	ldr	r3, [pc, #60]	@ (800f450 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800f412:	460c      	mov	r4, r1
 800f414:	4620      	mov	r0, r4
 800f416:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f41a:	f7ff ffd0 	bl	800f3be <_ZN8touchgfx4Rect10restrictToEss>
 800f41e:	4b0d      	ldr	r3, [pc, #52]	@ (800f454 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800f420:	6818      	ldr	r0, [r3, #0]
 800f422:	b190      	cbz	r0, 800f44a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800f424:	6803      	ldr	r3, [r0, #0]
 800f426:	4621      	mov	r1, r4
 800f428:	689b      	ldr	r3, [r3, #8]
 800f42a:	4798      	blx	r3
 800f42c:	4b0a      	ldr	r3, [pc, #40]	@ (800f458 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f42e:	6818      	ldr	r0, [r3, #0]
 800f430:	b118      	cbz	r0, 800f43a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f432:	6803      	ldr	r3, [r0, #0]
 800f434:	4621      	mov	r1, r4
 800f436:	689b      	ldr	r3, [r3, #8]
 800f438:	4798      	blx	r3
 800f43a:	4b08      	ldr	r3, [pc, #32]	@ (800f45c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f43c:	6818      	ldr	r0, [r3, #0]
 800f43e:	6803      	ldr	r3, [r0, #0]
 800f440:	4621      	mov	r1, r4
 800f442:	69db      	ldr	r3, [r3, #28]
 800f444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f448:	4718      	bx	r3
 800f44a:	bd10      	pop	{r4, pc}
 800f44c:	20013ff0 	.word	0x20013ff0
 800f450:	20013fee 	.word	0x20013fee
 800f454:	20014040 	.word	0x20014040
 800f458:	2001403c 	.word	0x2001403c
 800f45c:	20013ffc 	.word	0x20013ffc

0800f460 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f460:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f462:	4606      	mov	r6, r0
 800f464:	4608      	mov	r0, r1
 800f466:	460f      	mov	r7, r1
 800f468:	f7fa ffa3 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f46c:	b9e8      	cbnz	r0, 800f4aa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f46e:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f472:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f476:	42a5      	cmp	r5, r4
 800f478:	db17      	blt.n	800f4aa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f47a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f47e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f482:	429a      	cmp	r2, r3
 800f484:	db11      	blt.n	800f4aa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f486:	88b9      	ldrh	r1, [r7, #4]
 800f488:	440d      	add	r5, r1
 800f48a:	88b1      	ldrh	r1, [r6, #4]
 800f48c:	440c      	add	r4, r1
 800f48e:	b22d      	sxth	r5, r5
 800f490:	b224      	sxth	r4, r4
 800f492:	42a5      	cmp	r5, r4
 800f494:	dc09      	bgt.n	800f4aa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f496:	88f8      	ldrh	r0, [r7, #6]
 800f498:	4410      	add	r0, r2
 800f49a:	88f2      	ldrh	r2, [r6, #6]
 800f49c:	4413      	add	r3, r2
 800f49e:	b200      	sxth	r0, r0
 800f4a0:	b21b      	sxth	r3, r3
 800f4a2:	4298      	cmp	r0, r3
 800f4a4:	bfcc      	ite	gt
 800f4a6:	2000      	movgt	r0, #0
 800f4a8:	2001      	movle	r0, #1
 800f4aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f4ac <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f4ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f4ae:	4604      	mov	r4, r0
 800f4b0:	4608      	mov	r0, r1
 800f4b2:	460d      	mov	r5, r1
 800f4b4:	f7fa ff7d 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f4b8:	b978      	cbnz	r0, 800f4da <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f4ba:	4620      	mov	r0, r4
 800f4bc:	f7fa ff79 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f4c0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f4c4:	b150      	cbz	r0, 800f4dc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f4c6:	8026      	strh	r6, [r4, #0]
 800f4c8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f4cc:	8063      	strh	r3, [r4, #2]
 800f4ce:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f4d2:	80a3      	strh	r3, [r4, #4]
 800f4d4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f4d8:	80e3      	strh	r3, [r4, #6]
 800f4da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f4dc:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f4e0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f4e4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f4e8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f4ec:	88ed      	ldrh	r5, [r5, #6]
 800f4ee:	42b1      	cmp	r1, r6
 800f4f0:	460f      	mov	r7, r1
 800f4f2:	bfa8      	it	ge
 800f4f4:	4637      	movge	r7, r6
 800f4f6:	4293      	cmp	r3, r2
 800f4f8:	4618      	mov	r0, r3
 800f4fa:	4466      	add	r6, ip
 800f4fc:	bfa8      	it	ge
 800f4fe:	4610      	movge	r0, r2
 800f500:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f504:	8027      	strh	r7, [r4, #0]
 800f506:	442a      	add	r2, r5
 800f508:	88e5      	ldrh	r5, [r4, #6]
 800f50a:	8060      	strh	r0, [r4, #2]
 800f50c:	4461      	add	r1, ip
 800f50e:	442b      	add	r3, r5
 800f510:	b236      	sxth	r6, r6
 800f512:	b209      	sxth	r1, r1
 800f514:	b212      	sxth	r2, r2
 800f516:	b21b      	sxth	r3, r3
 800f518:	428e      	cmp	r6, r1
 800f51a:	bfac      	ite	ge
 800f51c:	ebc7 0106 	rsbge	r1, r7, r6
 800f520:	ebc7 0101 	rsblt	r1, r7, r1
 800f524:	429a      	cmp	r2, r3
 800f526:	bfac      	ite	ge
 800f528:	ebc0 0202 	rsbge	r2, r0, r2
 800f52c:	ebc0 0203 	rsblt	r2, r0, r3
 800f530:	80a1      	strh	r1, [r4, #4]
 800f532:	80e2      	strh	r2, [r4, #6]
 800f534:	e7d1      	b.n	800f4da <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800f538 <_ZN8touchgfx11Application11getInstanceEv>:
 800f538:	4b01      	ldr	r3, [pc, #4]	@ (800f540 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f53a:	6818      	ldr	r0, [r3, #0]
 800f53c:	4770      	bx	lr
 800f53e:	bf00      	nop
 800f540:	20014050 	.word	0x20014050

0800f544 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800f544:	b510      	push	{r4, lr}
 800f546:	2300      	movs	r3, #0
 800f548:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800f54c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f550:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f554:	4604      	mov	r4, r0
 800f556:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f55a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800f55e:	429a      	cmp	r2, r3
 800f560:	d90e      	bls.n	800f580 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800f562:	18e2      	adds	r2, r4, r3
 800f564:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800f568:	b122      	cbz	r2, 800f574 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800f56a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800f56e:	6803      	ldr	r3, [r0, #0]
 800f570:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f572:	4798      	blx	r3
 800f574:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f578:	3301      	adds	r3, #1
 800f57a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f57e:	e7ea      	b.n	800f556 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800f580:	bd10      	pop	{r4, pc}

0800f582 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800f582:	2300      	movs	r3, #0
 800f584:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f588:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800f58c:	30a4      	adds	r0, #164	@ 0xa4
 800f58e:	f802 3b01 	strb.w	r3, [r2], #1
 800f592:	4282      	cmp	r2, r0
 800f594:	d1fb      	bne.n	800f58e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800f596:	4770      	bx	lr

0800f598 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800f598:	b570      	push	{r4, r5, r6, lr}
 800f59a:	4c0b      	ldr	r4, [pc, #44]	@ (800f5c8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800f59c:	4605      	mov	r5, r0
 800f59e:	6820      	ldr	r0, [r4, #0]
 800f5a0:	460e      	mov	r6, r1
 800f5a2:	b110      	cbz	r0, 800f5aa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800f5a4:	6803      	ldr	r3, [r0, #0]
 800f5a6:	695b      	ldr	r3, [r3, #20]
 800f5a8:	4798      	blx	r3
 800f5aa:	1d28      	adds	r0, r5, #4
 800f5ac:	f7ff ffe9 	bl	800f582 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f5b0:	6026      	str	r6, [r4, #0]
 800f5b2:	6833      	ldr	r3, [r6, #0]
 800f5b4:	4630      	mov	r0, r6
 800f5b6:	68db      	ldr	r3, [r3, #12]
 800f5b8:	4798      	blx	r3
 800f5ba:	682b      	ldr	r3, [r5, #0]
 800f5bc:	4628      	mov	r0, r5
 800f5be:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f5c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f5c4:	4718      	bx	r3
 800f5c6:	bf00      	nop
 800f5c8:	20014040 	.word	0x20014040

0800f5cc <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800f5cc:	2300      	movs	r3, #0
 800f5ce:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800f5d2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800f5d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f5d8:	461a      	mov	r2, r3
 800f5da:	461c      	mov	r4, r3
 800f5dc:	461d      	mov	r5, r3
 800f5de:	459c      	cmp	ip, r3
 800f5e0:	dd1a      	ble.n	800f618 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800f5e2:	18c6      	adds	r6, r0, r3
 800f5e4:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800f5e8:	b16e      	cbz	r6, 800f606 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800f5ea:	429a      	cmp	r2, r3
 800f5ec:	d008      	beq.n	800f600 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800f5ee:	fa1f fe82 	uxth.w	lr, r2
 800f5f2:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800f5f6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800f5fa:	1887      	adds	r7, r0, r2
 800f5fc:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800f600:	3201      	adds	r2, #1
 800f602:	3301      	adds	r3, #1
 800f604:	e7eb      	b.n	800f5de <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800f606:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800f60a:	4299      	cmp	r1, r3
 800f60c:	bfa8      	it	ge
 800f60e:	3501      	addge	r5, #1
 800f610:	429e      	cmp	r6, r3
 800f612:	bfc8      	it	gt
 800f614:	3401      	addgt	r4, #1
 800f616:	e7f4      	b.n	800f602 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800f618:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800f61c:	1b49      	subs	r1, r1, r5
 800f61e:	1b1b      	subs	r3, r3, r4
 800f620:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800f624:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f628:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f62c:	4293      	cmp	r3, r2
 800f62e:	dd03      	ble.n	800f638 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800f630:	3b01      	subs	r3, #1
 800f632:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f636:	e7f7      	b.n	800f628 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800f638:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f63c <_ZN8touchgfx11Application15handleTickEventEv>:
 800f63c:	b570      	push	{r4, r5, r6, lr}
 800f63e:	4d16      	ldr	r5, [pc, #88]	@ (800f698 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800f640:	4604      	mov	r4, r0
 800f642:	6828      	ldr	r0, [r5, #0]
 800f644:	b140      	cbz	r0, 800f658 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f646:	7a03      	ldrb	r3, [r0, #8]
 800f648:	b933      	cbnz	r3, 800f658 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f64a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f64e:	6803      	ldr	r3, [r0, #0]
 800f650:	689b      	ldr	r3, [r3, #8]
 800f652:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f656:	4718      	bx	r3
 800f658:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800f65c:	4e0f      	ldr	r6, [pc, #60]	@ (800f69c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800f65e:	b973      	cbnz	r3, 800f67e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f660:	b168      	cbz	r0, 800f67e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f662:	7a03      	ldrb	r3, [r0, #8]
 800f664:	b15b      	cbz	r3, 800f67e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f666:	6830      	ldr	r0, [r6, #0]
 800f668:	b110      	cbz	r0, 800f670 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800f66a:	6803      	ldr	r3, [r0, #0]
 800f66c:	691b      	ldr	r3, [r3, #16]
 800f66e:	4798      	blx	r3
 800f670:	6828      	ldr	r0, [r5, #0]
 800f672:	6803      	ldr	r3, [r0, #0]
 800f674:	68db      	ldr	r3, [r3, #12]
 800f676:	4798      	blx	r3
 800f678:	2301      	movs	r3, #1
 800f67a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f67e:	3404      	adds	r4, #4
 800f680:	4620      	mov	r0, r4
 800f682:	f7ff ff5f 	bl	800f544 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800f686:	4620      	mov	r0, r4
 800f688:	f7ff ffa0 	bl	800f5cc <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800f68c:	6830      	ldr	r0, [r6, #0]
 800f68e:	b110      	cbz	r0, 800f696 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800f690:	6803      	ldr	r3, [r0, #0]
 800f692:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f694:	e7dd      	b.n	800f652 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800f696:	bd70      	pop	{r4, r5, r6, pc}
 800f698:	20014044 	.word	0x20014044
 800f69c:	20014040 	.word	0x20014040

0800f6a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800f6a0:	4603      	mov	r3, r0
 800f6a2:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800f6a6:	2200      	movs	r2, #0
 800f6a8:	801a      	strh	r2, [r3, #0]
 800f6aa:	805a      	strh	r2, [r3, #2]
 800f6ac:	809a      	strh	r2, [r3, #4]
 800f6ae:	80da      	strh	r2, [r3, #6]
 800f6b0:	3308      	adds	r3, #8
 800f6b2:	428b      	cmp	r3, r1
 800f6b4:	d1f8      	bne.n	800f6a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800f6b6:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800f6ba:	4770      	bx	lr

0800f6bc <_ZN8touchgfx11ApplicationC1Ev>:
 800f6bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f6be:	4606      	mov	r6, r0
 800f6c0:	4b1c      	ldr	r3, [pc, #112]	@ (800f734 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800f6c2:	f846 3b04 	str.w	r3, [r6], #4
 800f6c6:	4604      	mov	r4, r0
 800f6c8:	2500      	movs	r5, #0
 800f6ca:	22a8      	movs	r2, #168	@ 0xa8
 800f6cc:	2100      	movs	r1, #0
 800f6ce:	4630      	mov	r0, r6
 800f6d0:	f013 fb41 	bl	8022d56 <memset>
 800f6d4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800f6d8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800f6dc:	f7ff ffe0 	bl	800f6a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f6e0:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800f6e4:	f7ff ffdc 	bl	800f6a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f6e8:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800f6ec:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800f6f0:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800f6f4:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800f6f8:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800f6fc:	490e      	ldr	r1, [pc, #56]	@ (800f738 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800f6fe:	480f      	ldr	r0, [pc, #60]	@ (800f73c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800f700:	4f0f      	ldr	r7, [pc, #60]	@ (800f740 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800f702:	f011 fb39 	bl	8020d78 <CRC_Lock>
 800f706:	4b0f      	ldr	r3, [pc, #60]	@ (800f744 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800f708:	b158      	cbz	r0, 800f722 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800f70a:	801d      	strh	r5, [r3, #0]
 800f70c:	4a0e      	ldr	r2, [pc, #56]	@ (800f748 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800f70e:	2300      	movs	r3, #0
 800f710:	6013      	str	r3, [r2, #0]
 800f712:	4a0e      	ldr	r2, [pc, #56]	@ (800f74c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800f714:	603b      	str	r3, [r7, #0]
 800f716:	4630      	mov	r0, r6
 800f718:	6013      	str	r3, [r2, #0]
 800f71a:	f7ff ff32 	bl	800f582 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f71e:	4620      	mov	r0, r4
 800f720:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f722:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800f726:	2002      	movs	r0, #2
 800f728:	801a      	strh	r2, [r3, #0]
 800f72a:	6038      	str	r0, [r7, #0]
 800f72c:	f001 ffcc 	bl	80116c8 <_ZN8touchgfx6Screen4drawEv>
 800f730:	e7ec      	b.n	800f70c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800f732:	bf00      	nop
 800f734:	08025214 	.word	0x08025214
 800f738:	b5e8b5cd 	.word	0xb5e8b5cd
 800f73c:	f407a5c2 	.word	0xf407a5c2
 800f740:	20014040 	.word	0x20014040
 800f744:	2000019c 	.word	0x2000019c
 800f748:	20014050 	.word	0x20014050
 800f74c:	20014044 	.word	0x20014044

0800f750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800f750:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800f754:	3b01      	subs	r3, #1
 800f756:	b29b      	uxth	r3, r3
 800f758:	428b      	cmp	r3, r1
 800f75a:	b510      	push	{r4, lr}
 800f75c:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800f760:	d908      	bls.n	800f774 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800f762:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f766:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800f76a:	681a      	ldr	r2, [r3, #0]
 800f76c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800f770:	685a      	ldr	r2, [r3, #4]
 800f772:	6062      	str	r2, [r4, #4]
 800f774:	bd10      	pop	{r4, pc}
	...

0800f778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800f778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f77c:	4b92      	ldr	r3, [pc, #584]	@ (800f9c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 800f77e:	b08f      	sub	sp, #60	@ 0x3c
 800f780:	ac0a      	add	r4, sp, #40	@ 0x28
 800f782:	e884 0006 	stmia.w	r4, {r1, r2}
 800f786:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f78a:	4b90      	ldr	r3, [pc, #576]	@ (800f9cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 800f78c:	4683      	mov	fp, r0
 800f78e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f792:	4620      	mov	r0, r4
 800f794:	f7ff fe13 	bl	800f3be <_ZN8touchgfx4Rect10restrictToEss>
 800f798:	4620      	mov	r0, r4
 800f79a:	f7fa fe0a 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f79e:	2800      	cmp	r0, #0
 800f7a0:	d170      	bne.n	800f884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f7a2:	4b8b      	ldr	r3, [pc, #556]	@ (800f9d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800f7a4:	681b      	ldr	r3, [r3, #0]
 800f7a6:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800f7aa:	2b02      	cmp	r3, #2
 800f7ac:	d06a      	beq.n	800f884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f7ae:	9403      	str	r4, [sp, #12]
 800f7b0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800f7b4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800f7b8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800f7bc:	35a4      	adds	r5, #164	@ 0xa4
 800f7be:	9301      	str	r3, [sp, #4]
 800f7c0:	b15c      	cbz	r4, 800f7da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800f7c2:	4629      	mov	r1, r5
 800f7c4:	9803      	ldr	r0, [sp, #12]
 800f7c6:	f7ff fe4b 	bl	800f460 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f7ca:	3c01      	subs	r4, #1
 800f7cc:	b118      	cbz	r0, 800f7d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800f7ce:	b2a1      	uxth	r1, r4
 800f7d0:	9801      	ldr	r0, [sp, #4]
 800f7d2:	f7ff ffbd 	bl	800f750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f7d6:	3d08      	subs	r5, #8
 800f7d8:	e7f2      	b.n	800f7c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800f7da:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800f7de:	f8cd a010 	str.w	sl, [sp, #16]
 800f7e2:	f10a 33ff 	add.w	r3, sl, #4294967295
 800f7e6:	9302      	str	r3, [sp, #8]
 800f7e8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800f7ec:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800f7f0:	9306      	str	r3, [sp, #24]
 800f7f2:	445c      	add	r4, fp
 800f7f4:	2500      	movs	r5, #0
 800f7f6:	4626      	mov	r6, r4
 800f7f8:	f8cd a014 	str.w	sl, [sp, #20]
 800f7fc:	462f      	mov	r7, r5
 800f7fe:	9b05      	ldr	r3, [sp, #20]
 800f800:	2b00      	cmp	r3, #0
 800f802:	d073      	beq.n	800f8ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 800f804:	9903      	ldr	r1, [sp, #12]
 800f806:	4630      	mov	r0, r6
 800f808:	f7ff fdb7 	bl	800f37a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f80c:	b350      	cbz	r0, 800f864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800f80e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800f812:	f9b6 c000 	ldrsh.w	ip, [r6]
 800f816:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800f81a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800f81e:	45e6      	cmp	lr, ip
 800f820:	db33      	blt.n	800f88a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800f822:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800f826:	88b3      	ldrh	r3, [r6, #4]
 800f828:	4472      	add	r2, lr
 800f82a:	4463      	add	r3, ip
 800f82c:	b212      	sxth	r2, r2
 800f82e:	b21b      	sxth	r3, r3
 800f830:	429a      	cmp	r2, r3
 800f832:	dc2a      	bgt.n	800f88a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800f834:	88f3      	ldrh	r3, [r6, #6]
 800f836:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800f83a:	fa1f f289 	uxth.w	r2, r9
 800f83e:	4413      	add	r3, r2
 800f840:	b29b      	uxth	r3, r3
 800f842:	45c8      	cmp	r8, r9
 800f844:	fa1f fc88 	uxth.w	ip, r8
 800f848:	fa0f fe83 	sxth.w	lr, r3
 800f84c:	db0f      	blt.n	800f86e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 800f84e:	eba3 030c 	sub.w	r3, r3, ip
 800f852:	1ac9      	subs	r1, r1, r3
 800f854:	b209      	sxth	r1, r1
 800f856:	2900      	cmp	r1, #0
 800f858:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f85c:	dd12      	ble.n	800f884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f85e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800f862:	4605      	mov	r5, r0
 800f864:	9b05      	ldr	r3, [sp, #20]
 800f866:	3b01      	subs	r3, #1
 800f868:	9305      	str	r3, [sp, #20]
 800f86a:	3e08      	subs	r6, #8
 800f86c:	e7c7      	b.n	800f7fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 800f86e:	4461      	add	r1, ip
 800f870:	b209      	sxth	r1, r1
 800f872:	4571      	cmp	r1, lr
 800f874:	dc38      	bgt.n	800f8e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f876:	eba2 020c 	sub.w	r2, r2, ip
 800f87a:	b212      	sxth	r2, r2
 800f87c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800f880:	2a00      	cmp	r2, #0
 800f882:	dcee      	bgt.n	800f862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f884:	b00f      	add	sp, #60	@ 0x3c
 800f886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f88a:	45c8      	cmp	r8, r9
 800f88c:	db2c      	blt.n	800f8e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f88e:	88f3      	ldrh	r3, [r6, #6]
 800f890:	4499      	add	r9, r3
 800f892:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800f896:	4498      	add	r8, r3
 800f898:	fa0f f989 	sxth.w	r9, r9
 800f89c:	fa0f f888 	sxth.w	r8, r8
 800f8a0:	45c1      	cmp	r9, r8
 800f8a2:	db21      	blt.n	800f8e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f8a4:	88b3      	ldrh	r3, [r6, #4]
 800f8a6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800f8aa:	fa1f f28c 	uxth.w	r2, ip
 800f8ae:	4413      	add	r3, r2
 800f8b0:	b29b      	uxth	r3, r3
 800f8b2:	45e6      	cmp	lr, ip
 800f8b4:	fa1f f88e 	uxth.w	r8, lr
 800f8b8:	fa0f f983 	sxth.w	r9, r3
 800f8bc:	db0a      	blt.n	800f8d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 800f8be:	eba3 0308 	sub.w	r3, r3, r8
 800f8c2:	1ac9      	subs	r1, r1, r3
 800f8c4:	b209      	sxth	r1, r1
 800f8c6:	2900      	cmp	r1, #0
 800f8c8:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800f8cc:	ddda      	ble.n	800f884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f8ce:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800f8d2:	e7c6      	b.n	800f862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f8d4:	4441      	add	r1, r8
 800f8d6:	b209      	sxth	r1, r1
 800f8d8:	4549      	cmp	r1, r9
 800f8da:	dc05      	bgt.n	800f8e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f8dc:	eba2 0208 	sub.w	r2, r2, r8
 800f8e0:	b212      	sxth	r2, r2
 800f8e2:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800f8e6:	e7cb      	b.n	800f880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 800f8e8:	4607      	mov	r7, r0
 800f8ea:	e7bb      	b.n	800f864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800f8ec:	2d00      	cmp	r5, #0
 800f8ee:	d181      	bne.n	800f7f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 800f8f0:	2f00      	cmp	r7, #0
 800f8f2:	f000 81df 	beq.w	800fcb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800f8f6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800f8fa:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800f8fe:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800f902:	b2b3      	uxth	r3, r6
 800f904:	9305      	str	r3, [sp, #20]
 800f906:	9a05      	ldr	r2, [sp, #20]
 800f908:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800f90c:	4413      	add	r3, r2
 800f90e:	b2ba      	uxth	r2, r7
 800f910:	4492      	add	sl, r2
 800f912:	b29b      	uxth	r3, r3
 800f914:	fa1f fa8a 	uxth.w	sl, sl
 800f918:	fa0f f883 	sxth.w	r8, r3
 800f91c:	fa0f f98a 	sxth.w	r9, sl
 800f920:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800f924:	9b04      	ldr	r3, [sp, #16]
 800f926:	2b00      	cmp	r3, #0
 800f928:	d054      	beq.n	800f9d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 800f92a:	9903      	ldr	r1, [sp, #12]
 800f92c:	4620      	mov	r0, r4
 800f92e:	f7ff fd24 	bl	800f37a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f932:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800f936:	b1c0      	cbz	r0, 800f96a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f938:	f9b4 e000 	ldrsh.w	lr, [r4]
 800f93c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f940:	4576      	cmp	r6, lr
 800f942:	dc22      	bgt.n	800f98a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800f944:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f948:	44f4      	add	ip, lr
 800f94a:	fa0f fc8c 	sxth.w	ip, ip
 800f94e:	45e0      	cmp	r8, ip
 800f950:	db1b      	blt.n	800f98a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800f952:	428f      	cmp	r7, r1
 800f954:	fa1f fc81 	uxth.w	ip, r1
 800f958:	88e1      	ldrh	r1, [r4, #6]
 800f95a:	dc0d      	bgt.n	800f978 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 800f95c:	ebaa 0c0c 	sub.w	ip, sl, ip
 800f960:	eba1 010c 	sub.w	r1, r1, ip
 800f964:	f8a4 9002 	strh.w	r9, [r4, #2]
 800f968:	80e1      	strh	r1, [r4, #6]
 800f96a:	4628      	mov	r0, r5
 800f96c:	9904      	ldr	r1, [sp, #16]
 800f96e:	3901      	subs	r1, #1
 800f970:	9104      	str	r1, [sp, #16]
 800f972:	3c08      	subs	r4, #8
 800f974:	4605      	mov	r5, r0
 800f976:	e7d3      	b.n	800f920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 800f978:	4461      	add	r1, ip
 800f97a:	b209      	sxth	r1, r1
 800f97c:	4549      	cmp	r1, r9
 800f97e:	dcf5      	bgt.n	800f96c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f980:	eba2 0c0c 	sub.w	ip, r2, ip
 800f984:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f988:	e7ef      	b.n	800f96a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f98a:	428f      	cmp	r7, r1
 800f98c:	dcee      	bgt.n	800f96c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f98e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800f992:	4461      	add	r1, ip
 800f994:	b209      	sxth	r1, r1
 800f996:	4589      	cmp	r9, r1
 800f998:	dbe8      	blt.n	800f96c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f99a:	4576      	cmp	r6, lr
 800f99c:	fa1f fc8e 	uxth.w	ip, lr
 800f9a0:	88a1      	ldrh	r1, [r4, #4]
 800f9a2:	dc07      	bgt.n	800f9b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 800f9a4:	eba3 0c0c 	sub.w	ip, r3, ip
 800f9a8:	eba1 010c 	sub.w	r1, r1, ip
 800f9ac:	f8a4 8000 	strh.w	r8, [r4]
 800f9b0:	80a1      	strh	r1, [r4, #4]
 800f9b2:	e7da      	b.n	800f96a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f9b4:	4461      	add	r1, ip
 800f9b6:	b209      	sxth	r1, r1
 800f9b8:	4588      	cmp	r8, r1
 800f9ba:	dbd7      	blt.n	800f96c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f9bc:	9905      	ldr	r1, [sp, #20]
 800f9be:	eba1 0c0c 	sub.w	ip, r1, ip
 800f9c2:	f8a4 c004 	strh.w	ip, [r4, #4]
 800f9c6:	e7d0      	b.n	800f96a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f9c8:	20013ff0 	.word	0x20013ff0
 800f9cc:	20013fee 	.word	0x20013fee
 800f9d0:	20013ffc 	.word	0x20013ffc
 800f9d4:	2d00      	cmp	r5, #0
 800f9d6:	f000 816d 	beq.w	800fcb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800f9da:	9b06      	ldr	r3, [sp, #24]
 800f9dc:	445b      	add	r3, fp
 800f9de:	461c      	mov	r4, r3
 800f9e0:	9b02      	ldr	r3, [sp, #8]
 800f9e2:	3301      	adds	r3, #1
 800f9e4:	f000 8166 	beq.w	800fcb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800f9e8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800f9ec:	4629      	mov	r1, r5
 800f9ee:	9803      	ldr	r0, [sp, #12]
 800f9f0:	f7ff fd36 	bl	800f460 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f9f4:	b120      	cbz	r0, 800fa00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 800f9f6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800f9fa:	9801      	ldr	r0, [sp, #4]
 800f9fc:	f7ff fea8 	bl	800f750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fa00:	9903      	ldr	r1, [sp, #12]
 800fa02:	4628      	mov	r0, r5
 800fa04:	f7ff fcb9 	bl	800f37a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fa08:	2800      	cmp	r0, #0
 800fa0a:	f000 809c 	beq.w	800fb46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800fa0e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800fa12:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fa16:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800fa1a:	9309      	str	r3, [sp, #36]	@ 0x24
 800fa1c:	fa1f f189 	uxth.w	r1, r9
 800fa20:	eb01 0c03 	add.w	ip, r1, r3
 800fa24:	fa1f fa8c 	uxth.w	sl, ip
 800fa28:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800fa2c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800fa30:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800fa34:	b283      	uxth	r3, r0
 800fa36:	eb03 050c 	add.w	r5, r3, ip
 800fa3a:	b2ad      	uxth	r5, r5
 800fa3c:	9505      	str	r5, [sp, #20]
 800fa3e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800fa42:	9504      	str	r5, [sp, #16]
 800fa44:	4548      	cmp	r0, r9
 800fa46:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800fa4a:	f340 8099 	ble.w	800fb80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800fa4e:	1a5b      	subs	r3, r3, r1
 800fa50:	b29b      	uxth	r3, r3
 800fa52:	4596      	cmp	lr, r2
 800fa54:	fa0f f08a 	sxth.w	r0, sl
 800fa58:	b21e      	sxth	r6, r3
 800fa5a:	dd2e      	ble.n	800faba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 800fa5c:	9f02      	ldr	r7, [sp, #8]
 800fa5e:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800fa62:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800fa66:	9f04      	ldr	r7, [sp, #16]
 800fa68:	1a3f      	subs	r7, r7, r0
 800fa6a:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800fa6e:	fa1f fe8e 	uxth.w	lr, lr
 800fa72:	b292      	uxth	r2, r2
 800fa74:	ebae 0102 	sub.w	r1, lr, r2
 800fa78:	44a6      	add	lr, r4
 800fa7a:	4402      	add	r2, r0
 800fa7c:	b289      	uxth	r1, r1
 800fa7e:	fa0f fe8e 	sxth.w	lr, lr
 800fa82:	b212      	sxth	r2, r2
 800fa84:	b20d      	sxth	r5, r1
 800fa86:	ebae 0202 	sub.w	r2, lr, r2
 800fa8a:	436f      	muls	r7, r5
 800fa8c:	4372      	muls	r2, r6
 800fa8e:	4297      	cmp	r7, r2
 800fa90:	db09      	blt.n	800faa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 800fa92:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800fa96:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800fa9a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800fa9e:	449c      	add	ip, r3
 800faa0:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800faa4:	e684      	b.n	800f7b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800faa6:	4421      	add	r1, r4
 800faa8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800faac:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800fab0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fab4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fab8:	e67a      	b.n	800f7b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800faba:	9f04      	ldr	r7, [sp, #16]
 800fabc:	42b8      	cmp	r0, r7
 800fabe:	da27      	bge.n	800fb10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 800fac0:	9902      	ldr	r1, [sp, #8]
 800fac2:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800fac6:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800faca:	eb05 010e 	add.w	r1, r5, lr
 800face:	fa1f f881 	uxth.w	r8, r1
 800fad2:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800fad6:	4411      	add	r1, r2
 800fad8:	eba1 0108 	sub.w	r1, r1, r8
 800fadc:	b289      	uxth	r1, r1
 800fade:	fa0f f988 	sxth.w	r9, r8
 800fae2:	eba2 020e 	sub.w	r2, r2, lr
 800fae6:	fa0f f881 	sxth.w	r8, r1
 800faea:	1a3f      	subs	r7, r7, r0
 800faec:	4372      	muls	r2, r6
 800faee:	fb08 f707 	mul.w	r7, r8, r7
 800faf2:	42ba      	cmp	r2, r7
 800faf4:	dc06      	bgt.n	800fb04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 800faf6:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800fafa:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800fafe:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800fb02:	e7ca      	b.n	800fa9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800fb04:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800fb08:	4429      	add	r1, r5
 800fb0a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fb0e:	e64f      	b.n	800f7b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fb10:	9805      	ldr	r0, [sp, #20]
 800fb12:	ebaa 0000 	sub.w	r0, sl, r0
 800fb16:	b280      	uxth	r0, r0
 800fb18:	2d06      	cmp	r5, #6
 800fb1a:	fa0f fe80 	sxth.w	lr, r0
 800fb1e:	d817      	bhi.n	800fb50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 800fb20:	9b04      	ldr	r3, [sp, #16]
 800fb22:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800fb26:	1c6b      	adds	r3, r5, #1
 800fb28:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800fb2c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800fb30:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fb34:	9b01      	ldr	r3, [sp, #4]
 800fb36:	9801      	ldr	r0, [sp, #4]
 800fb38:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fb3c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800fb40:	805a      	strh	r2, [r3, #2]
 800fb42:	809e      	strh	r6, [r3, #4]
 800fb44:	80d9      	strh	r1, [r3, #6]
 800fb46:	9b02      	ldr	r3, [sp, #8]
 800fb48:	3b01      	subs	r3, #1
 800fb4a:	9302      	str	r3, [sp, #8]
 800fb4c:	3c08      	subs	r4, #8
 800fb4e:	e747      	b.n	800f9e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 800fb50:	9a02      	ldr	r2, [sp, #8]
 800fb52:	45b6      	cmp	lr, r6
 800fb54:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fb58:	db0d      	blt.n	800fb76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 800fb5a:	449c      	add	ip, r3
 800fb5c:	fa1f fc8c 	uxth.w	ip, ip
 800fb60:	445a      	add	r2, fp
 800fb62:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fb66:	448c      	add	ip, r1
 800fb68:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800fb6c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800fb70:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800fb74:	e61c      	b.n	800f7b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fb76:	445a      	add	r2, fp
 800fb78:	4484      	add	ip, r0
 800fb7a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800fb7e:	e78f      	b.n	800faa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fb80:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800fb84:	fa1f f18e 	uxth.w	r1, lr
 800fb88:	eb01 0806 	add.w	r8, r1, r6
 800fb8c:	b293      	uxth	r3, r2
 800fb8e:	fa1f f888 	uxth.w	r8, r8
 800fb92:	9306      	str	r3, [sp, #24]
 800fb94:	fa0f f388 	sxth.w	r3, r8
 800fb98:	9307      	str	r3, [sp, #28]
 800fb9a:	9f06      	ldr	r7, [sp, #24]
 800fb9c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fba0:	443b      	add	r3, r7
 800fba2:	b29b      	uxth	r3, r3
 800fba4:	4596      	cmp	lr, r2
 800fba6:	9308      	str	r3, [sp, #32]
 800fba8:	da24      	bge.n	800fbf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 800fbaa:	9905      	ldr	r1, [sp, #20]
 800fbac:	eba3 0308 	sub.w	r3, r3, r8
 800fbb0:	ebaa 0401 	sub.w	r4, sl, r1
 800fbb4:	b2a4      	uxth	r4, r4
 800fbb6:	b29b      	uxth	r3, r3
 800fbb8:	b225      	sxth	r5, r4
 800fbba:	b219      	sxth	r1, r3
 800fbbc:	eba2 020e 	sub.w	r2, r2, lr
 800fbc0:	eba9 0000 	sub.w	r0, r9, r0
 800fbc4:	436a      	muls	r2, r5
 800fbc6:	4348      	muls	r0, r1
 800fbc8:	4282      	cmp	r2, r0
 800fbca:	9a02      	ldr	r2, [sp, #8]
 800fbcc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fbd0:	445a      	add	r2, fp
 800fbd2:	dc06      	bgt.n	800fbe2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800fbd4:	9b07      	ldr	r3, [sp, #28]
 800fbd6:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800fbda:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800fbde:	44a4      	add	ip, r4
 800fbe0:	e75e      	b.n	800faa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fbe2:	9904      	ldr	r1, [sp, #16]
 800fbe4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800fbe8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800fbec:	4433      	add	r3, r6
 800fbee:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800fbf2:	e5dd      	b.n	800f7b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fbf4:	9f06      	ldr	r7, [sp, #24]
 800fbf6:	9b04      	ldr	r3, [sp, #16]
 800fbf8:	1bc9      	subs	r1, r1, r7
 800fbfa:	fa0f f78a 	sxth.w	r7, sl
 800fbfe:	b289      	uxth	r1, r1
 800fc00:	429f      	cmp	r7, r3
 800fc02:	fa0f fe81 	sxth.w	lr, r1
 800fc06:	dd23      	ble.n	800fc50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 800fc08:	9a05      	ldr	r2, [sp, #20]
 800fc0a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800fc0e:	9d07      	ldr	r5, [sp, #28]
 800fc10:	ebaa 0202 	sub.w	r2, sl, r2
 800fc14:	b292      	uxth	r2, r2
 800fc16:	eba5 0a03 	sub.w	sl, r5, r3
 800fc1a:	b214      	sxth	r4, r2
 800fc1c:	eba9 0000 	sub.w	r0, r9, r0
 800fc20:	9b02      	ldr	r3, [sp, #8]
 800fc22:	fb0e f000 	mul.w	r0, lr, r0
 800fc26:	fb04 fa0a 	mul.w	sl, r4, sl
 800fc2a:	00db      	lsls	r3, r3, #3
 800fc2c:	4550      	cmp	r0, sl
 800fc2e:	445b      	add	r3, fp
 800fc30:	db03      	blt.n	800fc3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800fc32:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800fc36:	4494      	add	ip, r2
 800fc38:	e732      	b.n	800faa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fc3a:	9a04      	ldr	r2, [sp, #16]
 800fc3c:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800fc40:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800fc44:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800fc48:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fc4c:	4431      	add	r1, r6
 800fc4e:	e75c      	b.n	800fb0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 800fc50:	9b08      	ldr	r3, [sp, #32]
 800fc52:	eba3 0308 	sub.w	r3, r3, r8
 800fc56:	b29b      	uxth	r3, r3
 800fc58:	2d06      	cmp	r5, #6
 800fc5a:	b218      	sxth	r0, r3
 800fc5c:	d813      	bhi.n	800fc86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 800fc5e:	9b07      	ldr	r3, [sp, #28]
 800fc60:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800fc64:	1c6b      	adds	r3, r5, #1
 800fc66:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800fc6a:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fc6e:	9b01      	ldr	r3, [sp, #4]
 800fc70:	9901      	ldr	r1, [sp, #4]
 800fc72:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fc76:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800fc7a:	805a      	strh	r2, [r3, #2]
 800fc7c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800fc7e:	809a      	strh	r2, [r3, #4]
 800fc80:	f8a3 e006 	strh.w	lr, [r3, #6]
 800fc84:	e75f      	b.n	800fb46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800fc86:	9c02      	ldr	r4, [sp, #8]
 800fc88:	4570      	cmp	r0, lr
 800fc8a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800fc8e:	db0d      	blt.n	800fcac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 800fc90:	4431      	add	r1, r6
 800fc92:	9b06      	ldr	r3, [sp, #24]
 800fc94:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800fc98:	b289      	uxth	r1, r1
 800fc9a:	445c      	add	r4, fp
 800fc9c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fca0:	4419      	add	r1, r3
 800fca2:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800fca6:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800fcaa:	e581      	b.n	800f7b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fcac:	445c      	add	r4, fp
 800fcae:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800fcb2:	e79b      	b.n	800fbec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 800fcb4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800fcb8:	1e65      	subs	r5, r4, #1
 800fcba:	b2ad      	uxth	r5, r5
 800fcbc:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800fcc0:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800fcc4:	42b5      	cmp	r5, r6
 800fcc6:	d044      	beq.n	800fd52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 800fcc8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800fccc:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800fcd0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800fcd4:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800fcd8:	4282      	cmp	r2, r0
 800fcda:	d11f      	bne.n	800fd1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800fcdc:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800fce0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800fce4:	459c      	cmp	ip, r3
 800fce6:	d119      	bne.n	800fd1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800fce8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800fcec:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800fcf0:	19d8      	adds	r0, r3, r7
 800fcf2:	b200      	sxth	r0, r0
 800fcf4:	4288      	cmp	r0, r1
 800fcf6:	d109      	bne.n	800fd0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800fcf8:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800fcfc:	4413      	add	r3, r2
 800fcfe:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800fd02:	4629      	mov	r1, r5
 800fd04:	9801      	ldr	r0, [sp, #4]
 800fd06:	f7ff fd23 	bl	800f750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fd0a:	e003      	b.n	800fd14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fd0c:	4411      	add	r1, r2
 800fd0e:	b209      	sxth	r1, r1
 800fd10:	42b9      	cmp	r1, r7
 800fd12:	d0f3      	beq.n	800fcfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800fd14:	3d01      	subs	r5, #1
 800fd16:	b2ad      	uxth	r5, r5
 800fd18:	3c08      	subs	r4, #8
 800fd1a:	e7d3      	b.n	800fcc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 800fd1c:	42b9      	cmp	r1, r7
 800fd1e:	d1f9      	bne.n	800fd14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fd20:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800fd24:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fd28:	4299      	cmp	r1, r3
 800fd2a:	d1f3      	bne.n	800fd14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fd2c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fd30:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800fd34:	181f      	adds	r7, r3, r0
 800fd36:	b23f      	sxth	r7, r7
 800fd38:	42ba      	cmp	r2, r7
 800fd3a:	d105      	bne.n	800fd48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 800fd3c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800fd40:	440b      	add	r3, r1
 800fd42:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800fd46:	e7dc      	b.n	800fd02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 800fd48:	440a      	add	r2, r1
 800fd4a:	b212      	sxth	r2, r2
 800fd4c:	4290      	cmp	r0, r2
 800fd4e:	d1e1      	bne.n	800fd14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fd50:	e7f6      	b.n	800fd40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 800fd52:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800fd56:	2e07      	cmp	r6, #7
 800fd58:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800fd5c:	d812      	bhi.n	800fd84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 800fd5e:	1c75      	adds	r5, r6, #1
 800fd60:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800fd64:	9d01      	ldr	r5, [sp, #4]
 800fd66:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800fd6a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800fd6e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800fd72:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800fd76:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800fd7a:	442c      	add	r4, r5
 800fd7c:	8061      	strh	r1, [r4, #2]
 800fd7e:	80a2      	strh	r2, [r4, #4]
 800fd80:	80e3      	strh	r3, [r4, #6]
 800fd82:	e57f      	b.n	800f884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fd84:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800fd88:	3e01      	subs	r6, #1
 800fd8a:	445c      	add	r4, fp
 800fd8c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800fd90:	f04f 37ff 	mov.w	r7, #4294967295
 800fd94:	2500      	movs	r5, #0
 800fd96:	9305      	str	r3, [sp, #20]
 800fd98:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fd9c:	9302      	str	r3, [sp, #8]
 800fd9e:	1e72      	subs	r2, r6, #1
 800fda0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800fda4:	9304      	str	r3, [sp, #16]
 800fda6:	4691      	mov	r9, r2
 800fda8:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800fdac:	f1b9 3fff 	cmp.w	r9, #4294967295
 800fdb0:	bf14      	ite	ne
 800fdb2:	9905      	ldrne	r1, [sp, #20]
 800fdb4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800fdb8:	6818      	ldr	r0, [r3, #0]
 800fdba:	9207      	str	r2, [sp, #28]
 800fdbc:	bf18      	it	ne
 800fdbe:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800fdc2:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800fdc6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800fdca:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800fdce:	9306      	str	r3, [sp, #24]
 800fdd0:	fb18 f801 	smulbb	r8, r8, r1
 800fdd4:	6859      	ldr	r1, [r3, #4]
 800fdd6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800fdda:	4671      	mov	r1, lr
 800fddc:	a80c      	add	r0, sp, #48	@ 0x30
 800fdde:	f7ff fb65 	bl	800f4ac <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fde2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800fde6:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800fdea:	9b04      	ldr	r3, [sp, #16]
 800fdec:	9a02      	ldr	r2, [sp, #8]
 800fdee:	fb10 f001 	smulbb	r0, r0, r1
 800fdf2:	fb02 8803 	mla	r8, r2, r3, r8
 800fdf6:	eba0 0108 	sub.w	r1, r0, r8
 800fdfa:	f04f 0c08 	mov.w	ip, #8
 800fdfe:	fb90 f0fc 	sdiv	r0, r0, ip
 800fe02:	4288      	cmp	r0, r1
 800fe04:	dc20      	bgt.n	800fe48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 800fe06:	4551      	cmp	r1, sl
 800fe08:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800fe0c:	da03      	bge.n	800fe16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 800fe0e:	b1d9      	cbz	r1, 800fe48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 800fe10:	468a      	mov	sl, r1
 800fe12:	464f      	mov	r7, r9
 800fe14:	4635      	mov	r5, r6
 800fe16:	f109 39ff 	add.w	r9, r9, #4294967295
 800fe1a:	f119 0f02 	cmn.w	r9, #2
 800fe1e:	d1c5      	bne.n	800fdac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 800fe20:	4616      	mov	r6, r2
 800fe22:	3201      	adds	r2, #1
 800fe24:	f1a4 0408 	sub.w	r4, r4, #8
 800fe28:	d1b6      	bne.n	800fd98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 800fe2a:	9b01      	ldr	r3, [sp, #4]
 800fe2c:	b2ac      	uxth	r4, r5
 800fe2e:	00ed      	lsls	r5, r5, #3
 800fe30:	1958      	adds	r0, r3, r5
 800fe32:	1c7b      	adds	r3, r7, #1
 800fe34:	d10b      	bne.n	800fe4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 800fe36:	4601      	mov	r1, r0
 800fe38:	9803      	ldr	r0, [sp, #12]
 800fe3a:	f7ff fb37 	bl	800f4ac <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fe3e:	4621      	mov	r1, r4
 800fe40:	9801      	ldr	r0, [sp, #4]
 800fe42:	f7ff fc85 	bl	800f750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fe46:	e4b3      	b.n	800f7b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fe48:	464f      	mov	r7, r9
 800fe4a:	4635      	mov	r5, r6
 800fe4c:	e7ed      	b.n	800fe2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 800fe4e:	9b01      	ldr	r3, [sp, #4]
 800fe50:	00ff      	lsls	r7, r7, #3
 800fe52:	19d9      	adds	r1, r3, r7
 800fe54:	f7ff fb2a 	bl	800f4ac <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fe58:	9b03      	ldr	r3, [sp, #12]
 800fe5a:	cb03      	ldmia	r3!, {r0, r1}
 800fe5c:	445f      	add	r7, fp
 800fe5e:	445d      	add	r5, fp
 800fe60:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800fe64:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800fe68:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800fe6c:	9b03      	ldr	r3, [sp, #12]
 800fe6e:	6869      	ldr	r1, [r5, #4]
 800fe70:	c303      	stmia	r3!, {r0, r1}
 800fe72:	e7e4      	b.n	800fe3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

0800fe74 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800fe74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe78:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800fe7c:	b0a1      	sub	sp, #132	@ 0x84
 800fe7e:	4604      	mov	r4, r0
 800fe80:	4630      	mov	r0, r6
 800fe82:	f7fa fa96 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe86:	4605      	mov	r5, r0
 800fe88:	b948      	cbnz	r0, 800fe9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800fe8a:	6823      	ldr	r3, [r4, #0]
 800fe8c:	e896 0006 	ldmia.w	r6, {r1, r2}
 800fe90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fe92:	4620      	mov	r0, r4
 800fe94:	4798      	blx	r3
 800fe96:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800fe9a:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800fe9e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800fea2:	2b00      	cmp	r3, #0
 800fea4:	d149      	bne.n	800ff3a <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 800fea6:	4bb1      	ldr	r3, [pc, #708]	@ (801016c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 800fea8:	681b      	ldr	r3, [r3, #0]
 800feaa:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 800feae:	1ebb      	subs	r3, r7, #2
 800feb0:	425f      	negs	r7, r3
 800feb2:	415f      	adcs	r7, r3
 800feb4:	4bae      	ldr	r3, [pc, #696]	@ (8010170 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 800feb6:	681b      	ldr	r3, [r3, #0]
 800feb8:	2b00      	cmp	r3, #0
 800feba:	d040      	beq.n	800ff3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800febc:	4dad      	ldr	r5, [pc, #692]	@ (8010174 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 800febe:	4628      	mov	r0, r5
 800fec0:	f7fa fa77 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fec4:	4606      	mov	r6, r0
 800fec6:	2800      	cmp	r0, #0
 800fec8:	d139      	bne.n	800ff3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800feca:	4628      	mov	r0, r5
 800fecc:	f7ff f982 	bl	800f1d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800fed0:	6823      	ldr	r3, [r4, #0]
 800fed2:	6829      	ldr	r1, [r5, #0]
 800fed4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fed6:	686a      	ldr	r2, [r5, #4]
 800fed8:	4620      	mov	r0, r4
 800feda:	4798      	blx	r3
 800fedc:	802e      	strh	r6, [r5, #0]
 800fede:	806e      	strh	r6, [r5, #2]
 800fee0:	80ae      	strh	r6, [r5, #4]
 800fee2:	80ee      	strh	r6, [r5, #6]
 800fee4:	af0f      	add	r7, sp, #60	@ 0x3c
 800fee6:	4ea4      	ldr	r6, [pc, #656]	@ (8010178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 800fee8:	4638      	mov	r0, r7
 800feea:	f7ff fbd9 	bl	800f6a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800feee:	8835      	ldrh	r5, [r6, #0]
 800fef0:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 800fef4:	462b      	mov	r3, r5
 800fef6:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800fefa:	4563      	cmp	r3, ip
 800fefc:	d224      	bcs.n	800ff48 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 800fefe:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 800ff02:	2907      	cmp	r1, #7
 800ff04:	d816      	bhi.n	800ff34 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800ff06:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800ff0a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800ff0e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800ff12:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 800ff16:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 800ff1a:	1c4a      	adds	r2, r1, #1
 800ff1c:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 800ff20:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 800ff24:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 800ff28:	f8a2 a002 	strh.w	sl, [r2, #2]
 800ff2c:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ff30:	f8a2 e006 	strh.w	lr, [r2, #6]
 800ff34:	3301      	adds	r3, #1
 800ff36:	b29b      	uxth	r3, r3
 800ff38:	e7df      	b.n	800fefa <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800ff3a:	2701      	movs	r7, #1
 800ff3c:	e7ba      	b.n	800feb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 800ff3e:	2f00      	cmp	r7, #0
 800ff40:	d1d0      	bne.n	800fee4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 800ff42:	b021      	add	sp, #132	@ 0x84
 800ff44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff48:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800ff4c:	42ab      	cmp	r3, r5
 800ff4e:	d90c      	bls.n	800ff6a <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 800ff50:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800ff54:	6822      	ldr	r2, [r4, #0]
 800ff56:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800ff5a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800ff5c:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800ff60:	4620      	mov	r0, r4
 800ff62:	3501      	adds	r5, #1
 800ff64:	47b8      	blx	r7
 800ff66:	b2ad      	uxth	r5, r5
 800ff68:	e7ee      	b.n	800ff48 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 800ff6a:	4d80      	ldr	r5, [pc, #512]	@ (801016c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 800ff6c:	6828      	ldr	r0, [r5, #0]
 800ff6e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800ff72:	2b01      	cmp	r3, #1
 800ff74:	f040 813b 	bne.w	80101ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 800ff78:	4a80      	ldr	r2, [pc, #512]	@ (801017c <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 800ff7a:	8833      	ldrh	r3, [r6, #0]
 800ff7c:	7812      	ldrb	r2, [r2, #0]
 800ff7e:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 800ff82:	2a01      	cmp	r2, #1
 800ff84:	d014      	beq.n	800ffb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800ff86:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 800ff8a:	32ae      	adds	r2, #174	@ 0xae
 800ff8c:	f04f 0900 	mov.w	r9, #0
 800ff90:	4283      	cmp	r3, r0
 800ff92:	f102 0208 	add.w	r2, r2, #8
 800ff96:	f280 8082 	bge.w	801009e <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800ff9a:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 800ff9e:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 800ffa2:	4439      	add	r1, r7
 800ffa4:	b209      	sxth	r1, r1
 800ffa6:	4589      	cmp	r9, r1
 800ffa8:	bfb8      	it	lt
 800ffaa:	4689      	movlt	r9, r1
 800ffac:	3301      	adds	r3, #1
 800ffae:	e7ef      	b.n	800ff90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 800ffb0:	4f73      	ldr	r7, [pc, #460]	@ (8010180 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 800ffb2:	883a      	ldrh	r2, [r7, #0]
 800ffb4:	4693      	mov	fp, r2
 800ffb6:	4283      	cmp	r3, r0
 800ffb8:	da08      	bge.n	800ffcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 800ffba:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 800ffbe:	3301      	adds	r3, #1
 800ffc0:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 800ffc4:	458b      	cmp	fp, r1
 800ffc6:	bfa8      	it	ge
 800ffc8:	468b      	movge	fp, r1
 800ffca:	e7f4      	b.n	800ffb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 800ffcc:	2300      	movs	r3, #0
 800ffce:	2a0f      	cmp	r2, #15
 800ffd0:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 8010184 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 800ffd4:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800ffd8:	bf8c      	ite	hi
 800ffda:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 800ffde:	f04f 0801 	movls.w	r8, #1
 800ffe2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800ffe6:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800ffea:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800ffee:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 800fff2:	6828      	ldr	r0, [r5, #0]
 800fff4:	455b      	cmp	r3, fp
 800fff6:	f340 80c7 	ble.w	8010188 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 800fffa:	6803      	ldr	r3, [r0, #0]
 800fffc:	f8b7 a000 	ldrh.w	sl, [r7]
 8010000:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010004:	4798      	blx	r3
 8010006:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801000a:	682b      	ldr	r3, [r5, #0]
 801000c:	ebaa 0000 	sub.w	r0, sl, r0
 8010010:	b280      	uxth	r0, r0
 8010012:	ebac 0e08 	sub.w	lr, ip, r8
 8010016:	4570      	cmp	r0, lr
 8010018:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 801001c:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 8010020:	dd05      	ble.n	801002e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8010022:	4558      	cmp	r0, fp
 8010024:	dd03      	ble.n	801002e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8010026:	b901      	cbnz	r1, 801002a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010028:	b392      	cbz	r2, 8010090 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 801002a:	4658      	mov	r0, fp
 801002c:	e006      	b.n	801003c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 801002e:	2900      	cmp	r1, #0
 8010030:	d1fb      	bne.n	801002a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010032:	2a00      	cmp	r2, #0
 8010034:	d1f9      	bne.n	801002a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010036:	4558      	cmp	r0, fp
 8010038:	bfb8      	it	lt
 801003a:	4658      	movlt	r0, fp
 801003c:	f9b9 3000 	ldrsh.w	r3, [r9]
 8010040:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 8010044:	2200      	movs	r2, #0
 8010046:	ebac 0000 	sub.w	r0, ip, r0
 801004a:	f8b6 a000 	ldrh.w	sl, [r6]
 801004e:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010052:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8010056:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801005a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801005e:	4553      	cmp	r3, sl
 8010060:	ddc5      	ble.n	800ffee <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8010062:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8010066:	ab0d      	add	r3, sp, #52	@ 0x34
 8010068:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801006c:	6851      	ldr	r1, [r2, #4]
 801006e:	c303      	stmia	r3!, {r0, r1}
 8010070:	a80d      	add	r0, sp, #52	@ 0x34
 8010072:	a90b      	add	r1, sp, #44	@ 0x2c
 8010074:	f7fa f95a 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 8010078:	a80d      	add	r0, sp, #52	@ 0x34
 801007a:	f7fa f99a 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801007e:	b920      	cbnz	r0, 801008a <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 8010080:	6823      	ldr	r3, [r4, #0]
 8010082:	a90d      	add	r1, sp, #52	@ 0x34
 8010084:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010086:	4620      	mov	r0, r4
 8010088:	4798      	blx	r3
 801008a:	f10a 0a01 	add.w	sl, sl, #1
 801008e:	e7e4      	b.n	801005a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 8010090:	681a      	ldr	r2, [r3, #0]
 8010092:	2101      	movs	r1, #1
 8010094:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 8010098:	4618      	mov	r0, r3
 801009a:	4790      	blx	r2
 801009c:	e7a7      	b.n	800ffee <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801009e:	4b39      	ldr	r3, [pc, #228]	@ (8010184 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 80100a0:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 8010180 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 80100a4:	881f      	ldrh	r7, [r3, #0]
 80100a6:	2300      	movs	r3, #0
 80100a8:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 80100ac:	2f0f      	cmp	r7, #15
 80100ae:	bf8c      	ite	hi
 80100b0:	08ff      	lsrhi	r7, r7, #3
 80100b2:	2701      	movls	r7, #1
 80100b4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80100b8:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 80100bc:	6828      	ldr	r0, [r5, #0]
 80100be:	4413      	add	r3, r2
 80100c0:	b21b      	sxth	r3, r3
 80100c2:	454b      	cmp	r3, r9
 80100c4:	da60      	bge.n	8010188 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 80100c6:	6803      	ldr	r3, [r0, #0]
 80100c8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80100cc:	4798      	blx	r3
 80100ce:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 80100d2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80100d6:	682a      	ldr	r2, [r5, #0]
 80100d8:	4473      	add	r3, lr
 80100da:	b21b      	sxth	r3, r3
 80100dc:	eb03 0e07 	add.w	lr, r3, r7
 80100e0:	4570      	cmp	r0, lr
 80100e2:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 80100e6:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 80100ea:	da0d      	bge.n	8010108 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 80100ec:	4548      	cmp	r0, r9
 80100ee:	da0b      	bge.n	8010108 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 80100f0:	f1bc 0f00 	cmp.w	ip, #0
 80100f4:	d138      	bne.n	8010168 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80100f6:	2900      	cmp	r1, #0
 80100f8:	d136      	bne.n	8010168 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80100fa:	6813      	ldr	r3, [r2, #0]
 80100fc:	2101      	movs	r1, #1
 80100fe:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8010102:	4610      	mov	r0, r2
 8010104:	4798      	blx	r3
 8010106:	e7d5      	b.n	80100b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010108:	f1bc 0f00 	cmp.w	ip, #0
 801010c:	d12c      	bne.n	8010168 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801010e:	bb59      	cbnz	r1, 8010168 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010110:	4548      	cmp	r0, r9
 8010112:	bfa8      	it	ge
 8010114:	4648      	movge	r0, r9
 8010116:	f9b8 2000 	ldrsh.w	r2, [r8]
 801011a:	f8b6 a000 	ldrh.w	sl, [r6]
 801011e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010122:	2100      	movs	r1, #0
 8010124:	1ac0      	subs	r0, r0, r3
 8010126:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801012a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801012e:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8010132:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010136:	4553      	cmp	r3, sl
 8010138:	ddbc      	ble.n	80100b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801013a:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801013e:	ab0d      	add	r3, sp, #52	@ 0x34
 8010140:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010144:	6851      	ldr	r1, [r2, #4]
 8010146:	c303      	stmia	r3!, {r0, r1}
 8010148:	a80d      	add	r0, sp, #52	@ 0x34
 801014a:	a90b      	add	r1, sp, #44	@ 0x2c
 801014c:	f7fa f8ee 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 8010150:	a80d      	add	r0, sp, #52	@ 0x34
 8010152:	f7fa f92e 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010156:	b920      	cbnz	r0, 8010162 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 8010158:	6823      	ldr	r3, [r4, #0]
 801015a:	a90d      	add	r1, sp, #52	@ 0x34
 801015c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801015e:	4620      	mov	r0, r4
 8010160:	4798      	blx	r3
 8010162:	f10a 0a01 	add.w	sl, sl, #1
 8010166:	e7e4      	b.n	8010132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 8010168:	4648      	mov	r0, r9
 801016a:	e7d4      	b.n	8010116 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 801016c:	20013ffc 	.word	0x20013ffc
 8010170:	2001403c 	.word	0x2001403c
 8010174:	20014048 	.word	0x20014048
 8010178:	2000019c 	.word	0x2000019c
 801017c:	20013ff2 	.word	0x20013ff2
 8010180:	20013fee 	.word	0x20013fee
 8010184:	20013ff0 	.word	0x20013ff0
 8010188:	6828      	ldr	r0, [r5, #0]
 801018a:	6803      	ldr	r3, [r0, #0]
 801018c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801018e:	4798      	blx	r3
 8010190:	4ba5      	ldr	r3, [pc, #660]	@ (8010428 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 8010192:	781b      	ldrb	r3, [r3, #0]
 8010194:	2b00      	cmp	r3, #0
 8010196:	f43f aed4 	beq.w	800ff42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 801019a:	2300      	movs	r3, #0
 801019c:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 80101a0:	4ba2      	ldr	r3, [pc, #648]	@ (801042c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 80101a2:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 80101a6:	881b      	ldrh	r3, [r3, #0]
 80101a8:	a80f      	add	r0, sp, #60	@ 0x3c
 80101aa:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 80101ae:	42b3      	cmp	r3, r6
 80101b0:	f4bf aec7 	bcs.w	800ff42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 80101b4:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 80101b8:	2907      	cmp	r1, #7
 80101ba:	d815      	bhi.n	80101e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 80101bc:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80101c0:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 80101c4:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 80101c8:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 80101cc:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 80101d0:	1c4a      	adds	r2, r1, #1
 80101d2:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 80101d6:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 80101da:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 80101de:	f8a2 e002 	strh.w	lr, [r2, #2]
 80101e2:	f8a2 c004 	strh.w	ip, [r2, #4]
 80101e6:	80d7      	strh	r7, [r2, #6]
 80101e8:	3301      	adds	r3, #1
 80101ea:	b29b      	uxth	r3, r3
 80101ec:	e7df      	b.n	80101ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80101ee:	2b02      	cmp	r3, #2
 80101f0:	f040 80d1 	bne.w	8010396 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80101f4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80101f8:	9308      	str	r3, [sp, #32]
 80101fa:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 80101fe:	9307      	str	r3, [sp, #28]
 8010200:	6803      	ldr	r3, [r0, #0]
 8010202:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 8010206:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801020a:	4798      	blx	r3
 801020c:	4b88      	ldr	r3, [pc, #544]	@ (8010430 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 801020e:	881b      	ldrh	r3, [r3, #0]
 8010210:	9302      	str	r3, [sp, #8]
 8010212:	4b88      	ldr	r3, [pc, #544]	@ (8010434 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 8010214:	881e      	ldrh	r6, [r3, #0]
 8010216:	4b88      	ldr	r3, [pc, #544]	@ (8010438 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010218:	781b      	ldrb	r3, [r3, #0]
 801021a:	f10b 37ff 	add.w	r7, fp, #4294967295
 801021e:	2b01      	cmp	r3, #1
 8010220:	bf1c      	itt	ne
 8010222:	9b02      	ldrne	r3, [sp, #8]
 8010224:	9602      	strne	r6, [sp, #8]
 8010226:	b2bf      	uxth	r7, r7
 8010228:	fa0f f887 	sxth.w	r8, r7
 801022c:	4682      	mov	sl, r0
 801022e:	f04f 0000 	mov.w	r0, #0
 8010232:	bf18      	it	ne
 8010234:	461e      	movne	r6, r3
 8010236:	f7f0 fb0f 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801023a:	fb96 fbfb 	sdiv	fp, r6, fp
 801023e:	fb0b f808 	mul.w	r8, fp, r8
 8010242:	45c2      	cmp	sl, r8
 8010244:	da0c      	bge.n	8010260 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 8010246:	6828      	ldr	r0, [r5, #0]
 8010248:	6803      	ldr	r3, [r0, #0]
 801024a:	210a      	movs	r1, #10
 801024c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010250:	4798      	blx	r3
 8010252:	6828      	ldr	r0, [r5, #0]
 8010254:	6803      	ldr	r3, [r0, #0]
 8010256:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801025a:	4798      	blx	r3
 801025c:	4682      	mov	sl, r0
 801025e:	e7f0      	b.n	8010242 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 8010260:	2000      	movs	r0, #0
 8010262:	f7f0 fb23 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010266:	fa1f f38b 	uxth.w	r3, fp
 801026a:	fb17 f703 	smulbb	r7, r7, r3
 801026e:	9304      	str	r3, [sp, #16]
 8010270:	b2bb      	uxth	r3, r7
 8010272:	9305      	str	r3, [sp, #20]
 8010274:	f04f 0800 	mov.w	r8, #0
 8010278:	0973      	lsrs	r3, r6, #5
 801027a:	4f70      	ldr	r7, [pc, #448]	@ (801043c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 801027c:	9306      	str	r3, [sp, #24]
 801027e:	4645      	mov	r5, r8
 8010280:	42b5      	cmp	r5, r6
 8010282:	d085      	beq.n	8010190 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010284:	6838      	ldr	r0, [r7, #0]
 8010286:	6803      	ldr	r3, [r0, #0]
 8010288:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801028c:	4798      	blx	r3
 801028e:	4582      	cmp	sl, r0
 8010290:	4681      	mov	r9, r0
 8010292:	d907      	bls.n	80102a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 8010294:	f1b8 0f00 	cmp.w	r8, #0
 8010298:	d007      	beq.n	80102aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 801029a:	6838      	ldr	r0, [r7, #0]
 801029c:	6803      	ldr	r3, [r0, #0]
 801029e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 80102a2:	e774      	b.n	801018e <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 80102a4:	f1b8 0f00 	cmp.w	r8, #0
 80102a8:	d003      	beq.n	80102b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 80102aa:	454d      	cmp	r5, r9
 80102ac:	d3f5      	bcc.n	801029a <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 80102ae:	f04f 0801 	mov.w	r8, #1
 80102b2:	9a04      	ldr	r2, [sp, #16]
 80102b4:	fb95 f3fb 	sdiv	r3, r5, fp
 80102b8:	9303      	str	r3, [sp, #12]
 80102ba:	3301      	adds	r3, #1
 80102bc:	fb13 f302 	smulbb	r3, r3, r2
 80102c0:	b299      	uxth	r1, r3
 80102c2:	f1b8 0f00 	cmp.w	r8, #0
 80102c6:	d04e      	beq.n	8010366 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 80102c8:	eb09 030b 	add.w	r3, r9, fp
 80102cc:	42b3      	cmp	r3, r6
 80102ce:	bfa8      	it	ge
 80102d0:	4633      	movge	r3, r6
 80102d2:	9807      	ldr	r0, [sp, #28]
 80102d4:	b29b      	uxth	r3, r3
 80102d6:	428b      	cmp	r3, r1
 80102d8:	bf94      	ite	ls
 80102da:	ebc5 0203 	rsbls	r2, r5, r3
 80102de:	ebc5 0201 	rsbhi	r2, r5, r1
 80102e2:	4282      	cmp	r2, r0
 80102e4:	bfa8      	it	ge
 80102e6:	4602      	movge	r2, r0
 80102e8:	9808      	ldr	r0, [sp, #32]
 80102ea:	fa1f fa82 	uxth.w	sl, r2
 80102ee:	4582      	cmp	sl, r0
 80102f0:	d205      	bcs.n	80102fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 80102f2:	fa15 f082 	uxtah	r0, r5, r2
 80102f6:	4286      	cmp	r6, r0
 80102f8:	d001      	beq.n	80102fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 80102fa:	4299      	cmp	r1, r3
 80102fc:	d240      	bcs.n	8010380 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 80102fe:	2001      	movs	r0, #1
 8010300:	9209      	str	r2, [sp, #36]	@ 0x24
 8010302:	f7f0 faa9 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010306:	6838      	ldr	r0, [r7, #0]
 8010308:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 801030c:	6803      	ldr	r3, [r0, #0]
 801030e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010312:	4798      	blx	r3
 8010314:	4b48      	ldr	r3, [pc, #288]	@ (8010438 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010316:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010318:	781b      	ldrb	r3, [r3, #0]
 801031a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801031e:	2b01      	cmp	r3, #1
 8010320:	b212      	sxth	r2, r2
 8010322:	f04f 0000 	mov.w	r0, #0
 8010326:	d122      	bne.n	801036e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 8010328:	1b73      	subs	r3, r6, r5
 801032a:	eba3 030a 	sub.w	r3, r3, sl
 801032e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8010332:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 8010336:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801033a:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 801033e:	6823      	ldr	r3, [r4, #0]
 8010340:	a90d      	add	r1, sp, #52	@ 0x34
 8010342:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010344:	4620      	mov	r0, r4
 8010346:	4798      	blx	r3
 8010348:	6838      	ldr	r0, [r7, #0]
 801034a:	9b03      	ldr	r3, [sp, #12]
 801034c:	4259      	negs	r1, r3
 801034e:	6803      	ldr	r3, [r0, #0]
 8010350:	b209      	sxth	r1, r1
 8010352:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010356:	4798      	blx	r3
 8010358:	4455      	add	r5, sl
 801035a:	2001      	movs	r0, #1
 801035c:	b2ad      	uxth	r5, r5
 801035e:	f7f0 faa5 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010362:	46ca      	mov	sl, r9
 8010364:	e78c      	b.n	8010280 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 8010366:	9b05      	ldr	r3, [sp, #20]
 8010368:	eba9 0303 	sub.w	r3, r9, r3
 801036c:	e7b1      	b.n	80102d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 801036e:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8010372:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 8010376:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 801037a:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 801037e:	e7de      	b.n	801033e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 8010380:	6838      	ldr	r0, [r7, #0]
 8010382:	6803      	ldr	r3, [r0, #0]
 8010384:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010386:	4798      	blx	r3
 8010388:	6838      	ldr	r0, [r7, #0]
 801038a:	9906      	ldr	r1, [sp, #24]
 801038c:	6803      	ldr	r3, [r0, #0]
 801038e:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010392:	4798      	blx	r3
 8010394:	e7e5      	b.n	8010362 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 8010396:	2b03      	cmp	r3, #3
 8010398:	f040 8130 	bne.w	80105fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 801039c:	4b26      	ldr	r3, [pc, #152]	@ (8010438 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801039e:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 80103a2:	781b      	ldrb	r3, [r3, #0]
 80103a4:	2b01      	cmp	r3, #1
 80103a6:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 80103aa:	f000 8093 	beq.w	80104d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 80103ae:	8832      	ldrh	r2, [r6, #0]
 80103b0:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 80103b4:	3201      	adds	r2, #1
 80103b6:	b292      	uxth	r2, r2
 80103b8:	2900      	cmp	r1, #0
 80103ba:	f43f aee9 	beq.w	8010190 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80103be:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 80103c2:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 80103c6:	441d      	add	r5, r3
 80103c8:	b22d      	sxth	r5, r5
 80103ca:	4694      	mov	ip, r2
 80103cc:	f04f 0800 	mov.w	r8, #0
 80103d0:	fa1f f38c 	uxth.w	r3, ip
 80103d4:	4299      	cmp	r1, r3
 80103d6:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80103da:	f240 80ba 	bls.w	8010552 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 80103de:	4427      	add	r7, r4
 80103e0:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80103e4:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 80103e8:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 80103ec:	4283      	cmp	r3, r0
 80103ee:	f340 809c 	ble.w	801052a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 80103f2:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 80103f6:	4405      	add	r5, r0
 80103f8:	b22d      	sxth	r5, r5
 80103fa:	429d      	cmp	r5, r3
 80103fc:	bfa8      	it	ge
 80103fe:	461d      	movge	r5, r3
 8010400:	46e0      	mov	r8, ip
 8010402:	f10c 0c01 	add.w	ip, ip, #1
 8010406:	e7e3      	b.n	80103d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 8010408:	d10a      	bne.n	8010420 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 801040a:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 801040e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8010412:	4562      	cmp	r2, ip
 8010414:	bfb8      	it	lt
 8010416:	4662      	movlt	r2, ip
 8010418:	4288      	cmp	r0, r1
 801041a:	bfb8      	it	lt
 801041c:	4698      	movlt	r8, r3
 801041e:	e082      	b.n	8010526 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010420:	428a      	cmp	r2, r1
 8010422:	bfb8      	it	lt
 8010424:	460a      	movlt	r2, r1
 8010426:	e07e      	b.n	8010526 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010428:	20013ff8 	.word	0x20013ff8
 801042c:	2000019c 	.word	0x2000019c
 8010430:	20013ff0 	.word	0x20013ff0
 8010434:	20013fee 	.word	0x20013fee
 8010438:	20013ff2 	.word	0x20013ff2
 801043c:	20013ffc 	.word	0x20013ffc
 8010440:	19e1      	adds	r1, r4, r7
 8010442:	ab0d      	add	r3, sp, #52	@ 0x34
 8010444:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8010448:	6849      	ldr	r1, [r1, #4]
 801044a:	c303      	stmia	r3!, {r0, r1}
 801044c:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8010450:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010454:	454b      	cmp	r3, r9
 8010456:	bfb8      	it	lt
 8010458:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 801045c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8010460:	440b      	add	r3, r1
 8010462:	1a9b      	subs	r3, r3, r2
 8010464:	a80d      	add	r0, sp, #52	@ 0x34
 8010466:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801046a:	f7fe fecd 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801046e:	a80d      	add	r0, sp, #52	@ 0x34
 8010470:	f7f9 ff9f 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010474:	bb70      	cbnz	r0, 80104d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010476:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 801047a:	6828      	ldr	r0, [r5, #0]
 801047c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8010480:	f8d0 e000 	ldr.w	lr, [r0]
 8010484:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8010488:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801048c:	45cc      	cmp	ip, r9
 801048e:	bfd4      	ite	le
 8010490:	fa1f fc8c 	uxthle.w	ip, ip
 8010494:	fa1f fc89 	uxthgt.w	ip, r9
 8010498:	f8cd c000 	str.w	ip, [sp]
 801049c:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 80104a0:	47d8      	blx	fp
 80104a2:	4683      	mov	fp, r0
 80104a4:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 80104a8:	a80d      	add	r0, sp, #52	@ 0x34
 80104aa:	f7fe fe93 	bl	800f1d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80104ae:	6823      	ldr	r3, [r4, #0]
 80104b0:	4427      	add	r7, r4
 80104b2:	4620      	mov	r0, r4
 80104b4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80104b6:	a90d      	add	r1, sp, #52	@ 0x34
 80104b8:	4798      	blx	r3
 80104ba:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 80104be:	eba0 000b 	sub.w	r0, r0, fp
 80104c2:	b200      	sxth	r0, r0
 80104c4:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 80104c8:	b920      	cbnz	r0, 80104d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 80104ca:	fa1f f188 	uxth.w	r1, r8
 80104ce:	4650      	mov	r0, sl
 80104d0:	f7ff f93e 	bl	800f750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80104d4:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 80104d8:	f1bb 0f00 	cmp.w	fp, #0
 80104dc:	f43f ae58 	beq.w	8010190 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80104e0:	8833      	ldrh	r3, [r6, #0]
 80104e2:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 80104e6:	3301      	adds	r3, #1
 80104e8:	b29b      	uxth	r3, r3
 80104ea:	f04f 0800 	mov.w	r8, #0
 80104ee:	b299      	uxth	r1, r3
 80104f0:	458b      	cmp	fp, r1
 80104f2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80104f6:	d9a3      	bls.n	8010440 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 80104f8:	4427      	add	r7, r4
 80104fa:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80104fe:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 8010502:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 8010506:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801050a:	4408      	add	r0, r1
 801050c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8010510:	4461      	add	r1, ip
 8010512:	b200      	sxth	r0, r0
 8010514:	b209      	sxth	r1, r1
 8010516:	4288      	cmp	r0, r1
 8010518:	f6bf af76 	bge.w	8010408 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 801051c:	4584      	cmp	ip, r0
 801051e:	4662      	mov	r2, ip
 8010520:	4698      	mov	r8, r3
 8010522:	bfb8      	it	lt
 8010524:	4602      	movlt	r2, r0
 8010526:	3301      	adds	r3, #1
 8010528:	e7e1      	b.n	80104ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 801052a:	d10e      	bne.n	801054a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 801052c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8010530:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8010534:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8010538:	4473      	add	r3, lr
 801053a:	b21b      	sxth	r3, r3
 801053c:	429d      	cmp	r5, r3
 801053e:	bfa8      	it	ge
 8010540:	461d      	movge	r5, r3
 8010542:	4287      	cmp	r7, r0
 8010544:	bfb8      	it	lt
 8010546:	46e0      	movlt	r8, ip
 8010548:	e75b      	b.n	8010402 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801054a:	4285      	cmp	r5, r0
 801054c:	bfa8      	it	ge
 801054e:	4605      	movge	r5, r0
 8010550:	e757      	b.n	8010402 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8010552:	eb0a 0007 	add.w	r0, sl, r7
 8010556:	4427      	add	r7, r4
 8010558:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801055c:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8010560:	45cb      	cmp	fp, r9
 8010562:	bfbe      	ittt	lt
 8010564:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 8010568:	445d      	addlt	r5, fp
 801056a:	b22d      	sxthlt	r5, r5
 801056c:	f7f9 ff21 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010570:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8010574:	2800      	cmp	r0, #0
 8010576:	f47f af1f 	bne.w	80103b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 801057a:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 801057e:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010582:	482b      	ldr	r0, [pc, #172]	@ (8010630 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 8010584:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8010588:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 801058c:	6800      	ldr	r0, [r0, #0]
 801058e:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 8010592:	1aad      	subs	r5, r5, r2
 8010594:	454d      	cmp	r5, r9
 8010596:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 801059a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801059e:	bfa8      	it	ge
 80105a0:	464d      	movge	r5, r9
 80105a2:	f8d0 c000 	ldr.w	ip, [r0]
 80105a6:	b2ad      	uxth	r5, r5
 80105a8:	fa1f fb8b 	uxth.w	fp, fp
 80105ac:	455d      	cmp	r5, fp
 80105ae:	bf94      	ite	ls
 80105b0:	9500      	strls	r5, [sp, #0]
 80105b2:	f8cd b000 	strhi.w	fp, [sp]
 80105b6:	b292      	uxth	r2, r2
 80105b8:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 80105bc:	b29b      	uxth	r3, r3
 80105be:	b289      	uxth	r1, r1
 80105c0:	47a8      	blx	r5
 80105c2:	6823      	ldr	r3, [r4, #0]
 80105c4:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 80105c8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80105ca:	a90d      	add	r1, sp, #52	@ 0x34
 80105cc:	4620      	mov	r0, r4
 80105ce:	4798      	blx	r3
 80105d0:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 80105d4:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 80105d8:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 80105dc:	1a5b      	subs	r3, r3, r1
 80105de:	440a      	add	r2, r1
 80105e0:	b21b      	sxth	r3, r3
 80105e2:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 80105e6:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 80105ea:	2b00      	cmp	r3, #0
 80105ec:	f47f aedf 	bne.w	80103ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 80105f0:	fa1f f188 	uxth.w	r1, r8
 80105f4:	4650      	mov	r0, sl
 80105f6:	f7ff f8ab 	bl	800f750 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80105fa:	e6d8      	b.n	80103ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 80105fc:	8835      	ldrh	r5, [r6, #0]
 80105fe:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010602:	42ab      	cmp	r3, r5
 8010604:	f67f adc4 	bls.w	8010190 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010608:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801060c:	ab0d      	add	r3, sp, #52	@ 0x34
 801060e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010612:	6851      	ldr	r1, [r2, #4]
 8010614:	c303      	stmia	r3!, {r0, r1}
 8010616:	a80d      	add	r0, sp, #52	@ 0x34
 8010618:	f7f9 fecb 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801061c:	b920      	cbnz	r0, 8010628 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 801061e:	6823      	ldr	r3, [r4, #0]
 8010620:	a90d      	add	r1, sp, #52	@ 0x34
 8010622:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010624:	4620      	mov	r0, r4
 8010626:	4798      	blx	r3
 8010628:	3501      	adds	r5, #1
 801062a:	b2ad      	uxth	r5, r5
 801062c:	e7e7      	b.n	80105fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 801062e:	bf00      	nop
 8010630:	20013ffc 	.word	0x20013ffc

08010634 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8010634:	4b03      	ldr	r3, [pc, #12]	@ (8010644 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8010636:	2200      	movs	r2, #0
 8010638:	801a      	strh	r2, [r3, #0]
 801063a:	805a      	strh	r2, [r3, #2]
 801063c:	809a      	strh	r2, [r3, #4]
 801063e:	80da      	strh	r2, [r3, #6]
 8010640:	4770      	bx	lr
 8010642:	bf00      	nop
 8010644:	20014048 	.word	0x20014048

08010648 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8010648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801064c:	4606      	mov	r6, r0
 801064e:	b09d      	sub	sp, #116	@ 0x74
 8010650:	a803      	add	r0, sp, #12
 8010652:	4614      	mov	r4, r2
 8010654:	468a      	mov	sl, r1
 8010656:	461d      	mov	r5, r3
 8010658:	f001 f9b0 	bl	80119bc <_ZN8touchgfx12TextProviderC1Ev>
 801065c:	6833      	ldr	r3, [r6, #0]
 801065e:	4630      	mov	r0, r6
 8010660:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010662:	4798      	blx	r3
 8010664:	6833      	ldr	r3, [r6, #0]
 8010666:	4607      	mov	r7, r0
 8010668:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801066a:	4630      	mov	r0, r6
 801066c:	4798      	blx	r3
 801066e:	462a      	mov	r2, r5
 8010670:	9000      	str	r0, [sp, #0]
 8010672:	4621      	mov	r1, r4
 8010674:	463b      	mov	r3, r7
 8010676:	a803      	add	r0, sp, #12
 8010678:	f001 f9f3 	bl	8011a62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801067c:	2500      	movs	r5, #0
 801067e:	462c      	mov	r4, r5
 8010680:	46a9      	mov	r9, r5
 8010682:	46a8      	mov	r8, r5
 8010684:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8010688:	2300      	movs	r3, #0
 801068a:	9302      	str	r3, [sp, #8]
 801068c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010690:	429c      	cmp	r4, r3
 8010692:	d002      	beq.n	801069a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8010694:	455c      	cmp	r4, fp
 8010696:	bf18      	it	ne
 8010698:	4625      	movne	r5, r4
 801069a:	ab02      	add	r3, sp, #8
 801069c:	4632      	mov	r2, r6
 801069e:	4651      	mov	r1, sl
 80106a0:	a803      	add	r0, sp, #12
 80106a2:	f001 fcf9 	bl	8012098 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80106a6:	4604      	mov	r4, r0
 80106a8:	b108      	cbz	r0, 80106ae <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80106aa:	280a      	cmp	r0, #10
 80106ac:	d10a      	bne.n	80106c4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80106ae:	45c1      	cmp	r9, r8
 80106b0:	bf38      	it	cc
 80106b2:	46c1      	movcc	r9, r8
 80106b4:	f04f 0800 	mov.w	r8, #0
 80106b8:	2c00      	cmp	r4, #0
 80106ba:	d1e5      	bne.n	8010688 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80106bc:	4648      	mov	r0, r9
 80106be:	b01d      	add	sp, #116	@ 0x74
 80106c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106c4:	9a02      	ldr	r2, [sp, #8]
 80106c6:	2a00      	cmp	r2, #0
 80106c8:	d0de      	beq.n	8010688 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80106ca:	7b57      	ldrb	r7, [r2, #13]
 80106cc:	6833      	ldr	r3, [r6, #0]
 80106ce:	8894      	ldrh	r4, [r2, #4]
 80106d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80106d2:	007f      	lsls	r7, r7, #1
 80106d4:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 80106d8:	7a97      	ldrb	r7, [r2, #10]
 80106da:	4629      	mov	r1, r5
 80106dc:	4307      	orrs	r7, r0
 80106de:	4630      	mov	r0, r6
 80106e0:	4798      	blx	r3
 80106e2:	4438      	add	r0, r7
 80106e4:	4480      	add	r8, r0
 80106e6:	fa1f f888 	uxth.w	r8, r8
 80106ea:	e7e5      	b.n	80106b8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080106ec <_ZNK8touchgfx4Font12getCharWidthEt>:
 80106ec:	b508      	push	{r3, lr}
 80106ee:	6803      	ldr	r3, [r0, #0]
 80106f0:	68db      	ldr	r3, [r3, #12]
 80106f2:	4798      	blx	r3
 80106f4:	b128      	cbz	r0, 8010702 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80106f6:	7b43      	ldrb	r3, [r0, #13]
 80106f8:	7a80      	ldrb	r0, [r0, #10]
 80106fa:	005b      	lsls	r3, r3, #1
 80106fc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010700:	4318      	orrs	r0, r3
 8010702:	bd08      	pop	{r3, pc}

08010704 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010704:	b40e      	push	{r1, r2, r3}
 8010706:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010708:	b09e      	sub	sp, #120	@ 0x78
 801070a:	ab23      	add	r3, sp, #140	@ 0x8c
 801070c:	4605      	mov	r5, r0
 801070e:	f853 4b04 	ldr.w	r4, [r3], #4
 8010712:	9303      	str	r3, [sp, #12]
 8010714:	a805      	add	r0, sp, #20
 8010716:	f001 f951 	bl	80119bc <_ZN8touchgfx12TextProviderC1Ev>
 801071a:	682b      	ldr	r3, [r5, #0]
 801071c:	4628      	mov	r0, r5
 801071e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010720:	4798      	blx	r3
 8010722:	682b      	ldr	r3, [r5, #0]
 8010724:	4606      	mov	r6, r0
 8010726:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010728:	4628      	mov	r0, r5
 801072a:	4798      	blx	r3
 801072c:	4633      	mov	r3, r6
 801072e:	ae1e      	add	r6, sp, #120	@ 0x78
 8010730:	4621      	mov	r1, r4
 8010732:	9000      	str	r0, [sp, #0]
 8010734:	9a03      	ldr	r2, [sp, #12]
 8010736:	2400      	movs	r4, #0
 8010738:	a805      	add	r0, sp, #20
 801073a:	f001 f992 	bl	8011a62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801073e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8010742:	462a      	mov	r2, r5
 8010744:	4633      	mov	r3, r6
 8010746:	4621      	mov	r1, r4
 8010748:	a805      	add	r0, sp, #20
 801074a:	f001 fca5 	bl	8012098 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801074e:	b1f0      	cbz	r0, 801078e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8010750:	280a      	cmp	r0, #10
 8010752:	d018      	beq.n	8010786 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010754:	9f04      	ldr	r7, [sp, #16]
 8010756:	b1b7      	cbz	r7, 8010786 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010758:	7b78      	ldrb	r0, [r7, #13]
 801075a:	7a3b      	ldrb	r3, [r7, #8]
 801075c:	88ea      	ldrh	r2, [r5, #6]
 801075e:	00c1      	lsls	r1, r0, #3
 8010760:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010764:	4319      	orrs	r1, r3
 8010766:	0643      	lsls	r3, r0, #25
 8010768:	bf44      	itt	mi
 801076a:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 801076e:	b219      	sxthmi	r1, r3
 8010770:	0100      	lsls	r0, r0, #4
 8010772:	79fb      	ldrb	r3, [r7, #7]
 8010774:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8010778:	4303      	orrs	r3, r0
 801077a:	4413      	add	r3, r2
 801077c:	1a5b      	subs	r3, r3, r1
 801077e:	b21b      	sxth	r3, r3
 8010780:	429c      	cmp	r4, r3
 8010782:	bfb8      	it	lt
 8010784:	461c      	movlt	r4, r3
 8010786:	4633      	mov	r3, r6
 8010788:	462a      	mov	r2, r5
 801078a:	2100      	movs	r1, #0
 801078c:	e7dc      	b.n	8010748 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801078e:	b2a0      	uxth	r0, r4
 8010790:	b01e      	add	sp, #120	@ 0x78
 8010792:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010796:	b003      	add	sp, #12
 8010798:	4770      	bx	lr

0801079a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801079a:	7a43      	ldrb	r3, [r0, #9]
 801079c:	8880      	ldrh	r0, [r0, #4]
 801079e:	4418      	add	r0, r3
 80107a0:	b280      	uxth	r0, r0
 80107a2:	4770      	bx	lr

080107a4 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80107a4:	6803      	ldr	r3, [r0, #0]
 80107a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80107a8:	4718      	bx	r3

080107aa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80107aa:	b40e      	push	{r1, r2, r3}
 80107ac:	b570      	push	{r4, r5, r6, lr}
 80107ae:	b09d      	sub	sp, #116	@ 0x74
 80107b0:	ab21      	add	r3, sp, #132	@ 0x84
 80107b2:	4604      	mov	r4, r0
 80107b4:	f853 5b04 	ldr.w	r5, [r3], #4
 80107b8:	9302      	str	r3, [sp, #8]
 80107ba:	a803      	add	r0, sp, #12
 80107bc:	f001 f8fe 	bl	80119bc <_ZN8touchgfx12TextProviderC1Ev>
 80107c0:	6823      	ldr	r3, [r4, #0]
 80107c2:	4620      	mov	r0, r4
 80107c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80107c6:	4798      	blx	r3
 80107c8:	6823      	ldr	r3, [r4, #0]
 80107ca:	4606      	mov	r6, r0
 80107cc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80107ce:	4620      	mov	r0, r4
 80107d0:	4798      	blx	r3
 80107d2:	4633      	mov	r3, r6
 80107d4:	9000      	str	r0, [sp, #0]
 80107d6:	9a02      	ldr	r2, [sp, #8]
 80107d8:	4629      	mov	r1, r5
 80107da:	a803      	add	r0, sp, #12
 80107dc:	f001 f941 	bl	8011a62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80107e0:	a803      	add	r0, sp, #12
 80107e2:	f001 fcdb 	bl	801219c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80107e6:	2401      	movs	r4, #1
 80107e8:	b2a3      	uxth	r3, r4
 80107ea:	b140      	cbz	r0, 80107fe <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80107ec:	280a      	cmp	r0, #10
 80107ee:	bf08      	it	eq
 80107f0:	3301      	addeq	r3, #1
 80107f2:	a803      	add	r0, sp, #12
 80107f4:	bf08      	it	eq
 80107f6:	b21c      	sxtheq	r4, r3
 80107f8:	f001 fcd0 	bl	801219c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80107fc:	e7f4      	b.n	80107e8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80107fe:	4618      	mov	r0, r3
 8010800:	b01d      	add	sp, #116	@ 0x74
 8010802:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010806:	b003      	add	sp, #12
 8010808:	4770      	bx	lr

0801080a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801080a:	b40e      	push	{r1, r2, r3}
 801080c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801080e:	b09e      	sub	sp, #120	@ 0x78
 8010810:	ab23      	add	r3, sp, #140	@ 0x8c
 8010812:	4604      	mov	r4, r0
 8010814:	f853 5b04 	ldr.w	r5, [r3], #4
 8010818:	9303      	str	r3, [sp, #12]
 801081a:	a805      	add	r0, sp, #20
 801081c:	f001 f8ce 	bl	80119bc <_ZN8touchgfx12TextProviderC1Ev>
 8010820:	6823      	ldr	r3, [r4, #0]
 8010822:	4620      	mov	r0, r4
 8010824:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010826:	4798      	blx	r3
 8010828:	6823      	ldr	r3, [r4, #0]
 801082a:	4606      	mov	r6, r0
 801082c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801082e:	4620      	mov	r0, r4
 8010830:	4798      	blx	r3
 8010832:	4633      	mov	r3, r6
 8010834:	4629      	mov	r1, r5
 8010836:	9000      	str	r0, [sp, #0]
 8010838:	9a03      	ldr	r2, [sp, #12]
 801083a:	a805      	add	r0, sp, #20
 801083c:	ad1e      	add	r5, sp, #120	@ 0x78
 801083e:	f001 f910 	bl	8011a62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010842:	2100      	movs	r1, #0
 8010844:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010848:	4622      	mov	r2, r4
 801084a:	462b      	mov	r3, r5
 801084c:	a805      	add	r0, sp, #20
 801084e:	f001 fc23 	bl	8012098 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010852:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8010856:	b1d8      	cbz	r0, 8010890 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8010858:	280a      	cmp	r0, #10
 801085a:	d012      	beq.n	8010882 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801085c:	9804      	ldr	r0, [sp, #16]
 801085e:	b180      	cbz	r0, 8010882 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010860:	7b47      	ldrb	r7, [r0, #13]
 8010862:	88e2      	ldrh	r2, [r4, #6]
 8010864:	00fb      	lsls	r3, r7, #3
 8010866:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801086a:	7a03      	ldrb	r3, [r0, #8]
 801086c:	430b      	orrs	r3, r1
 801086e:	0679      	lsls	r1, r7, #25
 8010870:	bf44      	itt	mi
 8010872:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010876:	b21b      	sxthmi	r3, r3
 8010878:	1ad3      	subs	r3, r2, r3
 801087a:	b21b      	sxth	r3, r3
 801087c:	429e      	cmp	r6, r3
 801087e:	bfa8      	it	ge
 8010880:	461e      	movge	r6, r3
 8010882:	462b      	mov	r3, r5
 8010884:	4622      	mov	r2, r4
 8010886:	2100      	movs	r1, #0
 8010888:	a805      	add	r0, sp, #20
 801088a:	f001 fc05 	bl	8012098 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801088e:	e7e2      	b.n	8010856 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8010890:	4630      	mov	r0, r6
 8010892:	b01e      	add	sp, #120	@ 0x78
 8010894:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010898:	b003      	add	sp, #12
 801089a:	4770      	bx	lr

0801089c <_ZNK8touchgfx8Drawable10invalidateEv>:
 801089c:	b513      	push	{r0, r1, r4, lr}
 801089e:	6803      	ldr	r3, [r0, #0]
 80108a0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80108a4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80108a8:	f8ad 1004 	strh.w	r1, [sp, #4]
 80108ac:	2400      	movs	r4, #0
 80108ae:	9400      	str	r4, [sp, #0]
 80108b0:	f8ad 2006 	strh.w	r2, [sp, #6]
 80108b4:	691b      	ldr	r3, [r3, #16]
 80108b6:	4669      	mov	r1, sp
 80108b8:	4798      	blx	r3
 80108ba:	b002      	add	sp, #8
 80108bc:	bd10      	pop	{r4, pc}

080108be <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80108be:	b538      	push	{r3, r4, r5, lr}
 80108c0:	680b      	ldr	r3, [r1, #0]
 80108c2:	460c      	mov	r4, r1
 80108c4:	68db      	ldr	r3, [r3, #12]
 80108c6:	4605      	mov	r5, r0
 80108c8:	4798      	blx	r3
 80108ca:	6823      	ldr	r3, [r4, #0]
 80108cc:	4620      	mov	r0, r4
 80108ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80108d0:	4629      	mov	r1, r5
 80108d2:	4798      	blx	r3
 80108d4:	4628      	mov	r0, r5
 80108d6:	bd38      	pop	{r3, r4, r5, pc}

080108d8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80108d8:	b410      	push	{r4}
 80108da:	880a      	ldrh	r2, [r1, #0]
 80108dc:	8884      	ldrh	r4, [r0, #4]
 80108de:	4422      	add	r2, r4
 80108e0:	800a      	strh	r2, [r1, #0]
 80108e2:	88c4      	ldrh	r4, [r0, #6]
 80108e4:	884a      	ldrh	r2, [r1, #2]
 80108e6:	4422      	add	r2, r4
 80108e8:	804a      	strh	r2, [r1, #2]
 80108ea:	6940      	ldr	r0, [r0, #20]
 80108ec:	b120      	cbz	r0, 80108f8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80108ee:	6803      	ldr	r3, [r0, #0]
 80108f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80108f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80108f6:	4718      	bx	r3
 80108f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80108fc:	4770      	bx	lr

080108fe <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80108fe:	b570      	push	{r4, r5, r6, lr}
 8010900:	8882      	ldrh	r2, [r0, #4]
 8010902:	880b      	ldrh	r3, [r1, #0]
 8010904:	4413      	add	r3, r2
 8010906:	800b      	strh	r3, [r1, #0]
 8010908:	88c2      	ldrh	r2, [r0, #6]
 801090a:	884b      	ldrh	r3, [r1, #2]
 801090c:	460c      	mov	r4, r1
 801090e:	4413      	add	r3, r2
 8010910:	804b      	strh	r3, [r1, #2]
 8010912:	4605      	mov	r5, r0
 8010914:	1d01      	adds	r1, r0, #4
 8010916:	4620      	mov	r0, r4
 8010918:	f7f9 fd08 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 801091c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010920:	2b00      	cmp	r3, #0
 8010922:	dd0b      	ble.n	801093c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010924:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010928:	2b00      	cmp	r3, #0
 801092a:	dd07      	ble.n	801093c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801092c:	6968      	ldr	r0, [r5, #20]
 801092e:	b128      	cbz	r0, 801093c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010930:	6803      	ldr	r3, [r0, #0]
 8010932:	4621      	mov	r1, r4
 8010934:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010936:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801093a:	4718      	bx	r3
 801093c:	bd70      	pop	{r4, r5, r6, pc}
	...

08010940 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010940:	b570      	push	{r4, r5, r6, lr}
 8010942:	8882      	ldrh	r2, [r0, #4]
 8010944:	880b      	ldrh	r3, [r1, #0]
 8010946:	4413      	add	r3, r2
 8010948:	800b      	strh	r3, [r1, #0]
 801094a:	88c2      	ldrh	r2, [r0, #6]
 801094c:	884b      	ldrh	r3, [r1, #2]
 801094e:	460c      	mov	r4, r1
 8010950:	4413      	add	r3, r2
 8010952:	804b      	strh	r3, [r1, #2]
 8010954:	4605      	mov	r5, r0
 8010956:	1d01      	adds	r1, r0, #4
 8010958:	4620      	mov	r0, r4
 801095a:	f7f9 fce7 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 801095e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010962:	2b00      	cmp	r3, #0
 8010964:	dd19      	ble.n	801099a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010966:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801096a:	2b00      	cmp	r3, #0
 801096c:	dd15      	ble.n	801099a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801096e:	6968      	ldr	r0, [r5, #20]
 8010970:	b128      	cbz	r0, 801097e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010972:	6803      	ldr	r3, [r0, #0]
 8010974:	4621      	mov	r1, r4
 8010976:	691b      	ldr	r3, [r3, #16]
 8010978:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801097c:	4718      	bx	r3
 801097e:	4b07      	ldr	r3, [pc, #28]	@ (801099c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010980:	681b      	ldr	r3, [r3, #0]
 8010982:	3304      	adds	r3, #4
 8010984:	429d      	cmp	r5, r3
 8010986:	d108      	bne.n	801099a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010988:	f7fe fdd6 	bl	800f538 <_ZN8touchgfx11Application11getInstanceEv>
 801098c:	6803      	ldr	r3, [r0, #0]
 801098e:	6821      	ldr	r1, [r4, #0]
 8010990:	6862      	ldr	r2, [r4, #4]
 8010992:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010994:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010998:	4718      	bx	r3
 801099a:	bd70      	pop	{r4, r5, r6, pc}
 801099c:	20014040 	.word	0x20014040

080109a0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80109a0:	b570      	push	{r4, r5, r6, lr}
 80109a2:	4604      	mov	r4, r0
 80109a4:	4616      	mov	r6, r2
 80109a6:	460d      	mov	r5, r1
 80109a8:	b901      	cbnz	r1, 80109ac <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80109aa:	b192      	cbz	r2, 80109d2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80109ac:	6823      	ldr	r3, [r4, #0]
 80109ae:	4620      	mov	r0, r4
 80109b0:	699b      	ldr	r3, [r3, #24]
 80109b2:	4798      	blx	r3
 80109b4:	88e2      	ldrh	r2, [r4, #6]
 80109b6:	88a1      	ldrh	r1, [r4, #4]
 80109b8:	4432      	add	r2, r6
 80109ba:	4429      	add	r1, r5
 80109bc:	4620      	mov	r0, r4
 80109be:	b212      	sxth	r2, r2
 80109c0:	b209      	sxth	r1, r1
 80109c2:	f7f9 ff97 	bl	800a8f4 <_ZN8touchgfx8Drawable5setXYEss>
 80109c6:	6823      	ldr	r3, [r4, #0]
 80109c8:	4620      	mov	r0, r4
 80109ca:	699b      	ldr	r3, [r3, #24]
 80109cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109d0:	4718      	bx	r3
 80109d2:	bd70      	pop	{r4, r5, r6, pc}

080109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80109d4:	b510      	push	{r4, lr}
 80109d6:	4604      	mov	r4, r0
 80109d8:	4608      	mov	r0, r1
 80109da:	2300      	movs	r3, #0
 80109dc:	8023      	strh	r3, [r4, #0]
 80109de:	8063      	strh	r3, [r4, #2]
 80109e0:	6803      	ldr	r3, [r0, #0]
 80109e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80109e6:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80109ea:	80a1      	strh	r1, [r4, #4]
 80109ec:	80e2      	strh	r2, [r4, #6]
 80109ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80109f0:	4621      	mov	r1, r4
 80109f2:	4798      	blx	r3
 80109f4:	4620      	mov	r0, r4
 80109f6:	bd10      	pop	{r4, pc}

080109f8 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 80109f8:	4770      	bx	lr

080109fa <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 80109fa:	b510      	push	{r4, lr}
 80109fc:	211c      	movs	r1, #28
 80109fe:	4604      	mov	r4, r0
 8010a00:	f011 f82f 	bl	8021a62 <_ZdlPvj>
 8010a04:	4620      	mov	r0, r4
 8010a06:	bd10      	pop	{r4, pc}

08010a08 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8010a08:	4a04      	ldr	r2, [pc, #16]	@ (8010a1c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 8010a0a:	6002      	str	r2, [r0, #0]
 8010a0c:	2200      	movs	r2, #0
 8010a0e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8010a12:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010a16:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010a1a:	4770      	bx	lr
 8010a1c:	08025268 	.word	0x08025268

08010a20 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8010a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a24:	4604      	mov	r4, r0
 8010a26:	b087      	sub	sp, #28
 8010a28:	8b45      	ldrh	r5, [r0, #26]
 8010a2a:	f8b2 c000 	ldrh.w	ip, [r2]
 8010a2e:	9105      	str	r1, [sp, #20]
 8010a30:	68e1      	ldr	r1, [r4, #12]
 8010a32:	9203      	str	r2, [sp, #12]
 8010a34:	1c68      	adds	r0, r5, #1
 8010a36:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010a3a:	f01c 0501 	ands.w	r5, ip, #1
 8010a3e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010a42:	9502      	str	r5, [sp, #8]
 8010a44:	b280      	uxth	r0, r0
 8010a46:	d07d      	beq.n	8010b44 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8010a48:	ee07 2a90 	vmov	s15, r2
 8010a4c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8010a50:	8360      	strh	r0, [r4, #26]
 8010a52:	edc1 6a00 	vstr	s13, [r1]
 8010a56:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8010a5a:	8b61      	ldrh	r1, [r4, #26]
 8010a5c:	ee07 2a10 	vmov	s14, r2
 8010a60:	68e2      	ldr	r2, [r4, #12]
 8010a62:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010a66:	f04f 0e00 	mov.w	lr, #0
 8010a6a:	1c48      	adds	r0, r1, #1
 8010a6c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8010a70:	ee06 ea10 	vmov	s12, lr
 8010a74:	8360      	strh	r0, [r4, #26]
 8010a76:	ed82 7a00 	vstr	s14, [r2]
 8010a7a:	8b21      	ldrh	r1, [r4, #24]
 8010a7c:	68a2      	ldr	r2, [r4, #8]
 8010a7e:	2501      	movs	r5, #1
 8010a80:	1c48      	adds	r0, r1, #1
 8010a82:	8320      	strh	r0, [r4, #24]
 8010a84:	5455      	strb	r5, [r2, r1]
 8010a86:	2200      	movs	r2, #0
 8010a88:	3304      	adds	r3, #4
 8010a8a:	ee07 2a90 	vmov	s15, r2
 8010a8e:	9300      	str	r3, [sp, #0]
 8010a90:	46aa      	mov	sl, r5
 8010a92:	4613      	mov	r3, r2
 8010a94:	4611      	mov	r1, r2
 8010a96:	462e      	mov	r6, r5
 8010a98:	9201      	str	r2, [sp, #4]
 8010a9a:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8010a9e:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 8010aa2:	9805      	ldr	r0, [sp, #20]
 8010aa4:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8010aa8:	f108 0701 	add.w	r7, r8, #1
 8010aac:	42a8      	cmp	r0, r5
 8010aae:	b2bf      	uxth	r7, r7
 8010ab0:	eb0b 0908 	add.w	r9, fp, r8
 8010ab4:	f340 80db 	ble.w	8010c6e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 8010ab8:	fa4c f906 	asr.w	r9, ip, r6
 8010abc:	f009 0901 	and.w	r9, r9, #1
 8010ac0:	fa5f f389 	uxtb.w	r3, r9
 8010ac4:	9304      	str	r3, [sp, #16]
 8010ac6:	9b00      	ldr	r3, [sp, #0]
 8010ac8:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010acc:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010ad0:	f1b9 0f00 	cmp.w	r9, #0
 8010ad4:	d07d      	beq.n	8010bd2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 8010ad6:	ee05 1a10 	vmov	s10, r1
 8010ada:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 8010ade:	ee05 3a10 	vmov	s10, r3
 8010ae2:	8327      	strh	r7, [r4, #24]
 8010ae4:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8010ae8:	f1ba 0f00 	cmp.w	sl, #0
 8010aec:	d050      	beq.n	8010b90 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 8010aee:	f04f 0002 	mov.w	r0, #2
 8010af2:	f80b 0008 	strb.w	r0, [fp, r8]
 8010af6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010afa:	68e7      	ldr	r7, [r4, #12]
 8010afc:	f108 0901 	add.w	r9, r8, #1
 8010b00:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010b04:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010b08:	edc7 4a00 	vstr	s9, [r7]
 8010b0c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010b10:	68e7      	ldr	r7, [r4, #12]
 8010b12:	f108 0901 	add.w	r9, r8, #1
 8010b16:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010b1a:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010b1e:	ed87 5a00 	vstr	s10, [r7]
 8010b22:	3601      	adds	r6, #1
 8010b24:	2e10      	cmp	r6, #16
 8010b26:	d106      	bne.n	8010b36 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8010b28:	9e01      	ldr	r6, [sp, #4]
 8010b2a:	9803      	ldr	r0, [sp, #12]
 8010b2c:	3601      	adds	r6, #1
 8010b2e:	9601      	str	r6, [sp, #4]
 8010b30:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 8010b34:	2600      	movs	r6, #0
 8010b36:	9800      	ldr	r0, [sp, #0]
 8010b38:	f8dd a010 	ldr.w	sl, [sp, #16]
 8010b3c:	3004      	adds	r0, #4
 8010b3e:	3501      	adds	r5, #1
 8010b40:	9000      	str	r0, [sp, #0]
 8010b42:	e7ac      	b.n	8010a9e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 8010b44:	ee06 2a10 	vmov	s12, r2
 8010b48:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8010b4c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8010b50:	ee16 5a10 	vmov	r5, s12
 8010b54:	442a      	add	r2, r5
 8010b56:	ee06 2a90 	vmov	s13, r2
 8010b5a:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8010b5e:	8360      	strh	r0, [r4, #26]
 8010b60:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010b64:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8010b68:	4472      	add	r2, lr
 8010b6a:	ee07 2a10 	vmov	s14, r2
 8010b6e:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8010b72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010b76:	edc1 6a00 	vstr	s13, [r1]
 8010b7a:	8b61      	ldrh	r1, [r4, #26]
 8010b7c:	68e2      	ldr	r2, [r4, #12]
 8010b7e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8010b82:	1c48      	adds	r0, r1, #1
 8010b84:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8010b88:	8360      	strh	r0, [r4, #26]
 8010b8a:	ed82 7a00 	vstr	s14, [r2]
 8010b8e:	e774      	b.n	8010a7a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 8010b90:	f04f 0005 	mov.w	r0, #5
 8010b94:	f80b 0008 	strb.w	r0, [fp, r8]
 8010b98:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010b9c:	68e7      	ldr	r7, [r4, #12]
 8010b9e:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 8010ba2:	f108 0901 	add.w	r9, r8, #1
 8010ba6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010baa:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010bae:	ed87 4a00 	vstr	s8, [r7]
 8010bb2:	ee04 2a10 	vmov	s8, r2
 8010bb6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010bba:	68e7      	ldr	r7, [r4, #12]
 8010bbc:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 8010bc0:	f108 0901 	add.w	r9, r8, #1
 8010bc4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010bc8:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010bcc:	ed87 4a00 	vstr	s8, [r7]
 8010bd0:	e791      	b.n	8010af6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 8010bd2:	f1ba 0f00 	cmp.w	sl, #0
 8010bd6:	d146      	bne.n	8010c66 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 8010bd8:	f04f 0005 	mov.w	r0, #5
 8010bdc:	8327      	strh	r7, [r4, #24]
 8010bde:	f80b 0008 	strb.w	r0, [fp, r8]
 8010be2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010be6:	68e7      	ldr	r7, [r4, #12]
 8010be8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010bec:	f108 0901 	add.w	r9, r8, #1
 8010bf0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010bf4:	ee17 0a90 	vmov	r0, s15
 8010bf8:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010bfc:	ed87 5a00 	vstr	s10, [r7]
 8010c00:	ee05 2a10 	vmov	s10, r2
 8010c04:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010c08:	68e7      	ldr	r7, [r4, #12]
 8010c0a:	4408      	add	r0, r1
 8010c0c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8010c10:	ee07 0a90 	vmov	s15, r0
 8010c14:	f108 0901 	add.w	r9, r8, #1
 8010c18:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010c1c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010c20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010c24:	ed87 5a00 	vstr	s10, [r7]
 8010c28:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010c2c:	68e7      	ldr	r7, [r4, #12]
 8010c2e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010c32:	f108 0901 	add.w	r9, r8, #1
 8010c36:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010c3a:	441a      	add	r2, r3
 8010c3c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010c40:	edc7 7a00 	vstr	s15, [r7]
 8010c44:	ee07 2a90 	vmov	s15, r2
 8010c48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010c4c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010c50:	68e7      	ldr	r7, [r4, #12]
 8010c52:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010c56:	f108 0901 	add.w	r9, r8, #1
 8010c5a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010c5e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010c62:	edc7 7a00 	vstr	s15, [r7]
 8010c66:	461a      	mov	r2, r3
 8010c68:	ee07 1a90 	vmov	s15, r1
 8010c6c:	e759      	b.n	8010b22 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 8010c6e:	f1ba 0f00 	cmp.w	sl, #0
 8010c72:	d045      	beq.n	8010d00 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8010c74:	ee05 1a90 	vmov	s11, r1
 8010c78:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010c7c:	eef4 5a66 	vcmp.f32	s11, s13
 8010c80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010c84:	d108      	bne.n	8010c98 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 8010c86:	ee05 3a90 	vmov	s11, r3
 8010c8a:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010c8e:	eef4 5a47 	vcmp.f32	s11, s14
 8010c92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010c96:	d033      	beq.n	8010d00 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8010c98:	9b02      	ldr	r3, [sp, #8]
 8010c9a:	8327      	strh	r7, [r4, #24]
 8010c9c:	b1b3      	cbz	r3, 8010ccc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 8010c9e:	2302      	movs	r3, #2
 8010ca0:	f889 3000 	strb.w	r3, [r9]
 8010ca4:	8b62      	ldrh	r2, [r4, #26]
 8010ca6:	68e3      	ldr	r3, [r4, #12]
 8010ca8:	1c51      	adds	r1, r2, #1
 8010caa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010cae:	8361      	strh	r1, [r4, #26]
 8010cb0:	edc3 6a00 	vstr	s13, [r3]
 8010cb4:	8b62      	ldrh	r2, [r4, #26]
 8010cb6:	68e3      	ldr	r3, [r4, #12]
 8010cb8:	1c51      	adds	r1, r2, #1
 8010cba:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010cbe:	8361      	strh	r1, [r4, #26]
 8010cc0:	ed83 7a00 	vstr	s14, [r3]
 8010cc4:	9800      	ldr	r0, [sp, #0]
 8010cc6:	b007      	add	sp, #28
 8010cc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ccc:	2305      	movs	r3, #5
 8010cce:	f889 3000 	strb.w	r3, [r9]
 8010cd2:	8b62      	ldrh	r2, [r4, #26]
 8010cd4:	68e3      	ldr	r3, [r4, #12]
 8010cd6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8010cda:	1c51      	adds	r1, r2, #1
 8010cdc:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010ce0:	8361      	strh	r1, [r4, #26]
 8010ce2:	ee07 ea90 	vmov	s15, lr
 8010ce6:	ed83 6a00 	vstr	s12, [r3]
 8010cea:	8b62      	ldrh	r2, [r4, #26]
 8010cec:	68e3      	ldr	r3, [r4, #12]
 8010cee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010cf2:	1c51      	adds	r1, r2, #1
 8010cf4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010cf8:	8361      	strh	r1, [r4, #26]
 8010cfa:	edc3 7a00 	vstr	s15, [r3]
 8010cfe:	e7d1      	b.n	8010ca4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8010d00:	ee05 2a90 	vmov	s11, r2
 8010d04:	9902      	ldr	r1, [sp, #8]
 8010d06:	8327      	strh	r7, [r4, #24]
 8010d08:	2305      	movs	r3, #5
 8010d0a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010d0e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010d12:	f889 3000 	strb.w	r3, [r9]
 8010d16:	b181      	cbz	r1, 8010d3a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 8010d18:	8b62      	ldrh	r2, [r4, #26]
 8010d1a:	68e3      	ldr	r3, [r4, #12]
 8010d1c:	1c51      	adds	r1, r2, #1
 8010d1e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010d22:	8361      	strh	r1, [r4, #26]
 8010d24:	ed83 5a00 	vstr	s10, [r3]
 8010d28:	8b62      	ldrh	r2, [r4, #26]
 8010d2a:	68e3      	ldr	r3, [r4, #12]
 8010d2c:	1c51      	adds	r1, r2, #1
 8010d2e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010d32:	8361      	strh	r1, [r4, #26]
 8010d34:	edc3 5a00 	vstr	s11, [r3]
 8010d38:	e7b4      	b.n	8010ca4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8010d3a:	8b65      	ldrh	r5, [r4, #26]
 8010d3c:	68e1      	ldr	r1, [r4, #12]
 8010d3e:	1c6e      	adds	r6, r5, #1
 8010d40:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010d44:	8366      	strh	r6, [r4, #26]
 8010d46:	ed81 5a00 	vstr	s10, [r1]
 8010d4a:	8b65      	ldrh	r5, [r4, #26]
 8010d4c:	68e1      	ldr	r1, [r4, #12]
 8010d4e:	1c6e      	adds	r6, r5, #1
 8010d50:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010d54:	8366      	strh	r6, [r4, #26]
 8010d56:	edc1 5a00 	vstr	s11, [r1]
 8010d5a:	8b65      	ldrh	r5, [r4, #26]
 8010d5c:	68e1      	ldr	r1, [r4, #12]
 8010d5e:	1c6e      	adds	r6, r5, #1
 8010d60:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010d64:	ee17 0a90 	vmov	r0, s15
 8010d68:	ee16 5a10 	vmov	r5, s12
 8010d6c:	4428      	add	r0, r5
 8010d6e:	ee07 0a90 	vmov	s15, r0
 8010d72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010d76:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8010d7a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010d7e:	4472      	add	r2, lr
 8010d80:	8366      	strh	r6, [r4, #26]
 8010d82:	edc1 7a00 	vstr	s15, [r1]
 8010d86:	ee07 2a90 	vmov	s15, r2
 8010d8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010d8e:	8b61      	ldrh	r1, [r4, #26]
 8010d90:	68e5      	ldr	r5, [r4, #12]
 8010d92:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010d96:	1c4e      	adds	r6, r1, #1
 8010d98:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8010d9c:	8366      	strh	r6, [r4, #26]
 8010d9e:	edc1 7a00 	vstr	s15, [r1]
 8010da2:	8b22      	ldrh	r2, [r4, #24]
 8010da4:	68a1      	ldr	r1, [r4, #8]
 8010da6:	1c55      	adds	r5, r2, #1
 8010da8:	8325      	strh	r5, [r4, #24]
 8010daa:	548b      	strb	r3, [r1, r2]
 8010dac:	e791      	b.n	8010cd2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

08010db0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 8010db0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010db4:	b08e      	sub	sp, #56	@ 0x38
 8010db6:	4604      	mov	r4, r0
 8010db8:	4688      	mov	r8, r1
 8010dba:	4615      	mov	r5, r2
 8010dbc:	4699      	mov	r9, r3
 8010dbe:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8010dc0:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 8010dc4:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 8010dc6:	f7f0 fbd3 	bl	8001570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 8010dca:	6060      	str	r0, [r4, #4]
 8010dcc:	f1b9 0f00 	cmp.w	r9, #0
 8010dd0:	f000 80e8 	beq.w	8010fa4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8010dd4:	2800      	cmp	r0, #0
 8010dd6:	f000 80e5 	beq.w	8010fa4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8010dda:	a805      	add	r0, sp, #20
 8010ddc:	f000 f8f9 	bl	8010fd2 <_ZN8touchgfx9Matrix3x3C1Ev>
 8010de0:	6833      	ldr	r3, [r6, #0]
 8010de2:	4630      	mov	r0, r6
 8010de4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8010de6:	4798      	blx	r3
 8010de8:	a805      	add	r0, sp, #20
 8010dea:	eef0 0a40 	vmov.f32	s1, s0
 8010dee:	f000 f8f4 	bl	8010fda <_ZN8touchgfx9Matrix3x35scaleEff>
 8010df2:	6860      	ldr	r0, [r4, #4]
 8010df4:	f1ba 0f03 	cmp.w	sl, #3
 8010df8:	d83b      	bhi.n	8010e72 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 8010dfa:	e8df f00a 	tbb	[pc, sl]
 8010dfe:	1002      	.short	0x1002
 8010e00:	9f71      	.short	0x9f71
 8010e02:	6803      	ldr	r3, [r0, #0]
 8010e04:	462a      	mov	r2, r5
 8010e06:	689b      	ldr	r3, [r3, #8]
 8010e08:	4641      	mov	r1, r8
 8010e0a:	4798      	blx	r3
 8010e0c:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8010e10:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8010e14:	ee07 7a90 	vmov	s15, r7
 8010e18:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8010e1c:	e026      	b.n	8010e6c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 8010e1e:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8010e22:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8010e26:	8869      	ldrh	r1, [r5, #2]
 8010e28:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010e2c:	1a9b      	subs	r3, r3, r2
 8010e2e:	1a5b      	subs	r3, r3, r1
 8010e30:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010e34:	882b      	ldrh	r3, [r5, #0]
 8010e36:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010e3a:	88ab      	ldrh	r3, [r5, #4]
 8010e3c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010e40:	6803      	ldr	r3, [r0, #0]
 8010e42:	aa03      	add	r2, sp, #12
 8010e44:	689b      	ldr	r3, [r3, #8]
 8010e46:	4641      	mov	r1, r8
 8010e48:	4798      	blx	r3
 8010e4a:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 8010fac <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 8010e4e:	a805      	add	r0, sp, #20
 8010e50:	f000 f8e8 	bl	8011024 <_ZN8touchgfx9Matrix3x36rotateEf>
 8010e54:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8010e58:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8010e5a:	ee07 7a90 	vmov	s15, r7
 8010e5e:	1a9b      	subs	r3, r3, r2
 8010e60:	ee00 3a10 	vmov	s0, r3
 8010e64:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8010e68:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8010e6c:	a805      	add	r0, sp, #20
 8010e6e:	f000 f927 	bl	80110c0 <_ZN8touchgfx9Matrix3x39translateEff>
 8010e72:	6860      	ldr	r0, [r4, #4]
 8010e74:	6803      	ldr	r3, [r0, #0]
 8010e76:	a905      	add	r1, sp, #20
 8010e78:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010e7a:	4798      	blx	r3
 8010e7c:	6860      	ldr	r0, [r4, #4]
 8010e7e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8010e80:	6803      	ldr	r3, [r0, #0]
 8010e82:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 8010e86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010e88:	4798      	blx	r3
 8010e8a:	6860      	ldr	r0, [r4, #4]
 8010e8c:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 8010e90:	6803      	ldr	r3, [r0, #0]
 8010e92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010e94:	4798      	blx	r3
 8010e96:	6860      	ldr	r0, [r4, #4]
 8010e98:	6803      	ldr	r3, [r0, #0]
 8010e9a:	2101      	movs	r1, #1
 8010e9c:	68db      	ldr	r3, [r3, #12]
 8010e9e:	2500      	movs	r5, #0
 8010ea0:	4798      	blx	r3
 8010ea2:	f8b9 7000 	ldrh.w	r7, [r9]
 8010ea6:	61a5      	str	r5, [r4, #24]
 8010ea8:	f104 0310 	add.w	r3, r4, #16
 8010eac:	f104 0208 	add.w	r2, r4, #8
 8010eb0:	f104 0114 	add.w	r1, r4, #20
 8010eb4:	f104 000c 	add.w	r0, r4, #12
 8010eb8:	f109 0602 	add.w	r6, r9, #2
 8010ebc:	f7f2 f80a 	bl	8002ed4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8010ec0:	42af      	cmp	r7, r5
 8010ec2:	dd60      	ble.n	8010f86 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 8010ec4:	8831      	ldrh	r1, [r6, #0]
 8010ec6:	f101 030f 	add.w	r3, r1, #15
 8010eca:	1cb2      	adds	r2, r6, #2
 8010ecc:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8010ed0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010ed4:	4620      	mov	r0, r4
 8010ed6:	f7ff fda3 	bl	8010a20 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8010eda:	3501      	adds	r5, #1
 8010edc:	4606      	mov	r6, r0
 8010ede:	e7ef      	b.n	8010ec0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8010ee0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010ee4:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8010ee8:	8829      	ldrh	r1, [r5, #0]
 8010eea:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010eee:	1a9b      	subs	r3, r3, r2
 8010ef0:	1a5b      	subs	r3, r3, r1
 8010ef2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010ef6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8010efa:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010efe:	886d      	ldrh	r5, [r5, #2]
 8010f00:	f8ad 1012 	strh.w	r1, [sp, #18]
 8010f04:	1a5b      	subs	r3, r3, r1
 8010f06:	1b5b      	subs	r3, r3, r5
 8010f08:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010f0c:	6803      	ldr	r3, [r0, #0]
 8010f0e:	aa03      	add	r2, sp, #12
 8010f10:	689b      	ldr	r3, [r3, #8]
 8010f12:	4641      	mov	r1, r8
 8010f14:	4798      	blx	r3
 8010f16:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8010fb0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 8010f1a:	a805      	add	r0, sp, #20
 8010f1c:	f000 f882 	bl	8011024 <_ZN8touchgfx9Matrix3x36rotateEf>
 8010f20:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8010f24:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8010f26:	1a9b      	subs	r3, r3, r2
 8010f28:	ee00 3a90 	vmov	s1, r3
 8010f2c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8010f30:	1bdb      	subs	r3, r3, r7
 8010f32:	ee00 3a10 	vmov	s0, r3
 8010f36:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8010f3a:	e795      	b.n	8010e68 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8010f3c:	886b      	ldrh	r3, [r5, #2]
 8010f3e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010f42:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010f46:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010f4a:	8829      	ldrh	r1, [r5, #0]
 8010f4c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010f50:	1a9b      	subs	r3, r3, r2
 8010f52:	1a5b      	subs	r3, r3, r1
 8010f54:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010f58:	88eb      	ldrh	r3, [r5, #6]
 8010f5a:	f8ad 3010 	strh.w	r3, [sp, #16]
 8010f5e:	6803      	ldr	r3, [r0, #0]
 8010f60:	aa03      	add	r2, sp, #12
 8010f62:	689b      	ldr	r3, [r3, #8]
 8010f64:	4641      	mov	r1, r8
 8010f66:	4798      	blx	r3
 8010f68:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 8010fb4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8010f6c:	a805      	add	r0, sp, #20
 8010f6e:	f000 f859 	bl	8011024 <_ZN8touchgfx9Matrix3x36rotateEf>
 8010f72:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8010f76:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8010f7a:	1bdb      	subs	r3, r3, r7
 8010f7c:	ee00 3a90 	vmov	s1, r3
 8010f80:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8010f84:	e748      	b.n	8010e18 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 8010f86:	6860      	ldr	r0, [r4, #4]
 8010f88:	8b22      	ldrh	r2, [r4, #24]
 8010f8a:	6803      	ldr	r3, [r0, #0]
 8010f8c:	2100      	movs	r1, #0
 8010f8e:	9101      	str	r1, [sp, #4]
 8010f90:	8b61      	ldrh	r1, [r4, #26]
 8010f92:	9100      	str	r1, [sp, #0]
 8010f94:	6a1d      	ldr	r5, [r3, #32]
 8010f96:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 8010f9a:	47a8      	blx	r5
 8010f9c:	6860      	ldr	r0, [r4, #4]
 8010f9e:	6803      	ldr	r3, [r0, #0]
 8010fa0:	69db      	ldr	r3, [r3, #28]
 8010fa2:	4798      	blx	r3
 8010fa4:	b00e      	add	sp, #56	@ 0x38
 8010fa6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010faa:	bf00      	nop
 8010fac:	42b40000 	.word	0x42b40000
 8010fb0:	43340000 	.word	0x43340000
 8010fb4:	43870000 	.word	0x43870000

08010fb8 <_ZN8touchgfx9Matrix3x35resetEv>:
 8010fb8:	2300      	movs	r3, #0
 8010fba:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8010fbe:	6002      	str	r2, [r0, #0]
 8010fc0:	6043      	str	r3, [r0, #4]
 8010fc2:	6083      	str	r3, [r0, #8]
 8010fc4:	60c3      	str	r3, [r0, #12]
 8010fc6:	6102      	str	r2, [r0, #16]
 8010fc8:	6143      	str	r3, [r0, #20]
 8010fca:	6183      	str	r3, [r0, #24]
 8010fcc:	61c3      	str	r3, [r0, #28]
 8010fce:	6202      	str	r2, [r0, #32]
 8010fd0:	4770      	bx	lr

08010fd2 <_ZN8touchgfx9Matrix3x3C1Ev>:
 8010fd2:	b508      	push	{r3, lr}
 8010fd4:	f7ff fff0 	bl	8010fb8 <_ZN8touchgfx9Matrix3x35resetEv>
 8010fd8:	bd08      	pop	{r3, pc}

08010fda <_ZN8touchgfx9Matrix3x35scaleEff>:
 8010fda:	edd0 7a00 	vldr	s15, [r0]
 8010fde:	ee67 7a80 	vmul.f32	s15, s15, s0
 8010fe2:	edc0 7a00 	vstr	s15, [r0]
 8010fe6:	edd0 7a01 	vldr	s15, [r0, #4]
 8010fea:	ee67 7a80 	vmul.f32	s15, s15, s0
 8010fee:	edc0 7a01 	vstr	s15, [r0, #4]
 8010ff2:	edd0 7a02 	vldr	s15, [r0, #8]
 8010ff6:	ee27 0a80 	vmul.f32	s0, s15, s0
 8010ffa:	edd0 7a03 	vldr	s15, [r0, #12]
 8010ffe:	ed80 0a02 	vstr	s0, [r0, #8]
 8011002:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8011006:	edc0 7a03 	vstr	s15, [r0, #12]
 801100a:	edd0 7a04 	vldr	s15, [r0, #16]
 801100e:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8011012:	edc0 7a04 	vstr	s15, [r0, #16]
 8011016:	edd0 7a05 	vldr	s15, [r0, #20]
 801101a:	ee67 0aa0 	vmul.f32	s1, s15, s1
 801101e:	edc0 0a05 	vstr	s1, [r0, #20]
 8011022:	4770      	bx	lr

08011024 <_ZN8touchgfx9Matrix3x36rotateEf>:
 8011024:	b510      	push	{r4, lr}
 8011026:	eddf 7a24 	vldr	s15, [pc, #144]	@ 80110b8 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 801102a:	ee20 0a27 	vmul.f32	s0, s0, s15
 801102e:	eddf 7a23 	vldr	s15, [pc, #140]	@ 80110bc <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8011032:	ed2d 8b02 	vpush	{d8}
 8011036:	eec0 8a27 	vdiv.f32	s17, s0, s15
 801103a:	4604      	mov	r4, r0
 801103c:	eeb0 0a68 	vmov.f32	s0, s17
 8011040:	f010 fd58 	bl	8021af4 <cosf>
 8011044:	eeb0 8a40 	vmov.f32	s16, s0
 8011048:	eeb0 0a68 	vmov.f32	s0, s17
 801104c:	f010 fd96 	bl	8021b7c <sinf>
 8011050:	edd4 6a03 	vldr	s13, [r4, #12]
 8011054:	edd4 4a00 	vldr	s9, [r4]
 8011058:	ed94 7a04 	vldr	s14, [r4, #16]
 801105c:	ed94 5a01 	vldr	s10, [r4, #4]
 8011060:	edd4 5a02 	vldr	s11, [r4, #8]
 8011064:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8011068:	ee66 6a88 	vmul.f32	s13, s13, s16
 801106c:	eee8 7a24 	vfma.f32	s15, s16, s9
 8011070:	eee0 6a24 	vfma.f32	s13, s0, s9
 8011074:	edc4 7a00 	vstr	s15, [r4]
 8011078:	ee60 7a47 	vnmul.f32	s15, s0, s14
 801107c:	ee27 7a08 	vmul.f32	s14, s14, s16
 8011080:	eee8 7a05 	vfma.f32	s15, s16, s10
 8011084:	eea0 7a05 	vfma.f32	s14, s0, s10
 8011088:	edc4 7a01 	vstr	s15, [r4, #4]
 801108c:	edd4 7a05 	vldr	s15, [r4, #20]
 8011090:	edc4 6a03 	vstr	s13, [r4, #12]
 8011094:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8011098:	ee67 7a88 	vmul.f32	s15, s15, s16
 801109c:	eea8 6a25 	vfma.f32	s12, s16, s11
 80110a0:	ecbd 8b02 	vpop	{d8}
 80110a4:	eee0 7a25 	vfma.f32	s15, s0, s11
 80110a8:	ed84 6a02 	vstr	s12, [r4, #8]
 80110ac:	ed84 7a04 	vstr	s14, [r4, #16]
 80110b0:	edc4 7a05 	vstr	s15, [r4, #20]
 80110b4:	bd10      	pop	{r4, pc}
 80110b6:	bf00      	nop
 80110b8:	40490fdb 	.word	0x40490fdb
 80110bc:	43340000 	.word	0x43340000

080110c0 <_ZN8touchgfx9Matrix3x39translateEff>:
 80110c0:	ed90 6a06 	vldr	s12, [r0, #24]
 80110c4:	edd0 7a00 	vldr	s15, [r0]
 80110c8:	edd0 6a07 	vldr	s13, [r0, #28]
 80110cc:	ed90 7a08 	vldr	s14, [r0, #32]
 80110d0:	eee6 7a00 	vfma.f32	s15, s12, s0
 80110d4:	edc0 7a00 	vstr	s15, [r0]
 80110d8:	edd0 7a01 	vldr	s15, [r0, #4]
 80110dc:	eee6 7a80 	vfma.f32	s15, s13, s0
 80110e0:	edc0 7a01 	vstr	s15, [r0, #4]
 80110e4:	edd0 7a02 	vldr	s15, [r0, #8]
 80110e8:	eee7 7a00 	vfma.f32	s15, s14, s0
 80110ec:	edc0 7a02 	vstr	s15, [r0, #8]
 80110f0:	edd0 7a03 	vldr	s15, [r0, #12]
 80110f4:	eee6 7a20 	vfma.f32	s15, s12, s1
 80110f8:	edc0 7a03 	vstr	s15, [r0, #12]
 80110fc:	edd0 7a04 	vldr	s15, [r0, #16]
 8011100:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8011104:	edc0 7a04 	vstr	s15, [r0, #16]
 8011108:	edd0 7a05 	vldr	s15, [r0, #20]
 801110c:	eee7 7a20 	vfma.f32	s15, s14, s1
 8011110:	edc0 7a05 	vstr	s15, [r0, #20]
 8011114:	4770      	bx	lr

08011116 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8011116:	edd0 6a01 	vldr	s13, [r0, #4]
 801111a:	edd0 7a04 	vldr	s15, [r0, #16]
 801111e:	ed90 7a03 	vldr	s14, [r0, #12]
 8011122:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8011126:	ee60 0aa6 	vmul.f32	s1, s1, s13
 801112a:	edd0 6a00 	vldr	s13, [r0]
 801112e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8011132:	b084      	sub	sp, #16
 8011134:	eee6 0a80 	vfma.f32	s1, s13, s0
 8011138:	ed90 7a05 	vldr	s14, [r0, #20]
 801113c:	ed90 0a02 	vldr	s0, [r0, #8]
 8011140:	ee30 0a80 	vadd.f32	s0, s1, s0
 8011144:	ee77 0a87 	vadd.f32	s1, s15, s14
 8011148:	b004      	add	sp, #16
 801114a:	4770      	bx	lr

0801114c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801114c:	b530      	push	{r4, r5, lr}
 801114e:	8083      	strh	r3, [r0, #4]
 8011150:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011154:	80c3      	strh	r3, [r0, #6]
 8011156:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801115a:	7203      	strb	r3, [r0, #8]
 801115c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011160:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8011164:	7243      	strb	r3, [r0, #9]
 8011166:	7a83      	ldrb	r3, [r0, #10]
 8011168:	6141      	str	r1, [r0, #20]
 801116a:	f365 0306 	bfi	r3, r5, #0, #7
 801116e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8011172:	8302      	strh	r2, [r0, #24]
 8011174:	f365 13c7 	bfi	r3, r5, #7, #1
 8011178:	7283      	strb	r3, [r0, #10]
 801117a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801117e:	72c3      	strb	r3, [r0, #11]
 8011180:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8011184:	7303      	strb	r3, [r0, #12]
 8011186:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801118a:	81c3      	strh	r3, [r0, #14]
 801118c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8011190:	8203      	strh	r3, [r0, #16]
 8011192:	4b01      	ldr	r3, [pc, #4]	@ (8011198 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011194:	6003      	str	r3, [r0, #0]
 8011196:	bd30      	pop	{r4, r5, pc}
 8011198:	0802527c 	.word	0x0802527c

0801119c <_ZNK8touchgfx9ConstFont4findEt>:
 801119c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801119e:	6944      	ldr	r4, [r0, #20]
 80111a0:	b3bc      	cbz	r4, 8011212 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111a2:	88a3      	ldrh	r3, [r4, #4]
 80111a4:	8b02      	ldrh	r2, [r0, #24]
 80111a6:	1acb      	subs	r3, r1, r3
 80111a8:	f102 32ff 	add.w	r2, r2, #4294967295
 80111ac:	d431      	bmi.n	8011212 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111ae:	4293      	cmp	r3, r2
 80111b0:	dd0c      	ble.n	80111cc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80111b2:	230e      	movs	r3, #14
 80111b4:	fb03 4302 	mla	r3, r3, r2, r4
 80111b8:	889b      	ldrh	r3, [r3, #4]
 80111ba:	1a5b      	subs	r3, r3, r1
 80111bc:	1ad3      	subs	r3, r2, r3
 80111be:	429a      	cmp	r2, r3
 80111c0:	db27      	blt.n	8011212 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111c2:	2b00      	cmp	r3, #0
 80111c4:	bfbc      	itt	lt
 80111c6:	2302      	movlt	r3, #2
 80111c8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80111cc:	2500      	movs	r5, #0
 80111ce:	260e      	movs	r6, #14
 80111d0:	4295      	cmp	r5, r2
 80111d2:	dc1e      	bgt.n	8011212 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111d4:	fb06 4003 	mla	r0, r6, r3, r4
 80111d8:	8887      	ldrh	r7, [r0, #4]
 80111da:	42b9      	cmp	r1, r7
 80111dc:	d01a      	beq.n	8011214 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80111de:	d20d      	bcs.n	80111fc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80111e0:	1e5a      	subs	r2, r3, #1
 80111e2:	4295      	cmp	r5, r2
 80111e4:	dc15      	bgt.n	8011212 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111e6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80111ea:	1a5b      	subs	r3, r3, r1
 80111ec:	1ad3      	subs	r3, r2, r3
 80111ee:	429a      	cmp	r2, r3
 80111f0:	db0f      	blt.n	8011212 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111f2:	429d      	cmp	r5, r3
 80111f4:	ddec      	ble.n	80111d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80111f6:	1953      	adds	r3, r2, r5
 80111f8:	105b      	asrs	r3, r3, #1
 80111fa:	e7e9      	b.n	80111d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80111fc:	1c5d      	adds	r5, r3, #1
 80111fe:	42aa      	cmp	r2, r5
 8011200:	db07      	blt.n	8011212 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011202:	8a43      	ldrh	r3, [r0, #18]
 8011204:	1acb      	subs	r3, r1, r3
 8011206:	442b      	add	r3, r5
 8011208:	429d      	cmp	r5, r3
 801120a:	dc02      	bgt.n	8011212 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801120c:	429a      	cmp	r2, r3
 801120e:	dadf      	bge.n	80111d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011210:	e7f1      	b.n	80111f6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011212:	2000      	movs	r0, #0
 8011214:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011216 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011216:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011218:	4604      	mov	r4, r0
 801121a:	4617      	mov	r7, r2
 801121c:	461e      	mov	r6, r3
 801121e:	b911      	cbnz	r1, 8011226 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011220:	2500      	movs	r5, #0
 8011222:	4628      	mov	r0, r5
 8011224:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011226:	290a      	cmp	r1, #10
 8011228:	d0fa      	beq.n	8011220 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801122a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801122e:	4291      	cmp	r1, r2
 8011230:	d0f6      	beq.n	8011220 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011232:	f242 020b 	movw	r2, #8203	@ 0x200b
 8011236:	4291      	cmp	r1, r2
 8011238:	d0f2      	beq.n	8011220 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801123a:	f7ff ffaf 	bl	801119c <_ZNK8touchgfx9ConstFont4findEt>
 801123e:	4605      	mov	r5, r0
 8011240:	b950      	cbnz	r0, 8011258 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011242:	6823      	ldr	r3, [r4, #0]
 8011244:	4620      	mov	r0, r4
 8011246:	691b      	ldr	r3, [r3, #16]
 8011248:	4798      	blx	r3
 801124a:	4601      	mov	r1, r0
 801124c:	4620      	mov	r0, r4
 801124e:	f7ff ffa5 	bl	801119c <_ZNK8touchgfx9ConstFont4findEt>
 8011252:	4605      	mov	r5, r0
 8011254:	2800      	cmp	r0, #0
 8011256:	d0e3      	beq.n	8011220 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011258:	6823      	ldr	r3, [r4, #0]
 801125a:	4629      	mov	r1, r5
 801125c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801125e:	4620      	mov	r0, r4
 8011260:	4798      	blx	r3
 8011262:	6038      	str	r0, [r7, #0]
 8011264:	6823      	ldr	r3, [r4, #0]
 8011266:	4620      	mov	r0, r4
 8011268:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801126a:	4798      	blx	r3
 801126c:	7030      	strb	r0, [r6, #0]
 801126e:	e7d8      	b.n	8011222 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011270 <_ZN8touchgfx4clzuEm>:
 8011270:	4603      	mov	r3, r0
 8011272:	b1c8      	cbz	r0, 80112a8 <_ZN8touchgfx4clzuEm+0x38>
 8011274:	0c02      	lsrs	r2, r0, #16
 8011276:	0412      	lsls	r2, r2, #16
 8011278:	b9a2      	cbnz	r2, 80112a4 <_ZN8touchgfx4clzuEm+0x34>
 801127a:	0403      	lsls	r3, r0, #16
 801127c:	2010      	movs	r0, #16
 801127e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8011282:	bf04      	itt	eq
 8011284:	021b      	lsleq	r3, r3, #8
 8011286:	3008      	addeq	r0, #8
 8011288:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 801128c:	bf04      	itt	eq
 801128e:	011b      	lsleq	r3, r3, #4
 8011290:	3004      	addeq	r0, #4
 8011292:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8011296:	bf04      	itt	eq
 8011298:	009b      	lsleq	r3, r3, #2
 801129a:	3002      	addeq	r0, #2
 801129c:	2b00      	cmp	r3, #0
 801129e:	db04      	blt.n	80112aa <_ZN8touchgfx4clzuEm+0x3a>
 80112a0:	3001      	adds	r0, #1
 80112a2:	4770      	bx	lr
 80112a4:	2000      	movs	r0, #0
 80112a6:	e7ea      	b.n	801127e <_ZN8touchgfx4clzuEm+0xe>
 80112a8:	2020      	movs	r0, #32
 80112aa:	4770      	bx	lr

080112ac <_ZN8touchgfx7muldivuEmmmRm>:
 80112ac:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80112b0:	460f      	mov	r7, r1
 80112b2:	4615      	mov	r5, r2
 80112b4:	461e      	mov	r6, r3
 80112b6:	4601      	mov	r1, r0
 80112b8:	b100      	cbz	r0, 80112bc <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80112ba:	b927      	cbnz	r7, 80112c6 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80112bc:	2000      	movs	r0, #0
 80112be:	6030      	str	r0, [r6, #0]
 80112c0:	b002      	add	sp, #8
 80112c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80112c6:	f7ff ffd3 	bl	8011270 <_ZN8touchgfx4clzuEm>
 80112ca:	b980      	cbnz	r0, 80112ee <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80112cc:	4638      	mov	r0, r7
 80112ce:	f7ff ffcf 	bl	8011270 <_ZN8touchgfx4clzuEm>
 80112d2:	2800      	cmp	r0, #0
 80112d4:	dd05      	ble.n	80112e2 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80112d6:	4633      	mov	r3, r6
 80112d8:	462a      	mov	r2, r5
 80112da:	4638      	mov	r0, r7
 80112dc:	f7ff ffe6 	bl	80112ac <_ZN8touchgfx7muldivuEmmmRm>
 80112e0:	e7ee      	b.n	80112c0 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80112e2:	f04f 33ff 	mov.w	r3, #4294967295
 80112e6:	6033      	str	r3, [r6, #0]
 80112e8:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80112ec:	e7e8      	b.n	80112c0 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80112ee:	fa37 f800 	lsrs.w	r8, r7, r0
 80112f2:	fb07 f301 	mul.w	r3, r7, r1
 80112f6:	d105      	bne.n	8011304 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80112f8:	fbb3 f0f5 	udiv	r0, r3, r5
 80112fc:	fb05 3510 	mls	r5, r5, r0, r3
 8011300:	6035      	str	r5, [r6, #0]
 8011302:	e7dd      	b.n	80112c0 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011304:	2301      	movs	r3, #1
 8011306:	fa01 fa00 	lsl.w	sl, r1, r0
 801130a:	fa03 f000 	lsl.w	r0, r3, r0
 801130e:	3801      	subs	r0, #1
 8011310:	462a      	mov	r2, r5
 8011312:	4633      	mov	r3, r6
 8011314:	4038      	ands	r0, r7
 8011316:	f7ff ffc9 	bl	80112ac <_ZN8touchgfx7muldivuEmmmRm>
 801131a:	fbba f9f5 	udiv	r9, sl, r5
 801131e:	462a      	mov	r2, r5
 8011320:	4607      	mov	r7, r0
 8011322:	ab01      	add	r3, sp, #4
 8011324:	fb05 a119 	mls	r1, r5, r9, sl
 8011328:	4640      	mov	r0, r8
 801132a:	f7ff ffbf 	bl	80112ac <_ZN8touchgfx7muldivuEmmmRm>
 801132e:	9b01      	ldr	r3, [sp, #4]
 8011330:	6832      	ldr	r2, [r6, #0]
 8011332:	fb08 f409 	mul.w	r4, r8, r9
 8011336:	441a      	add	r2, r3
 8011338:	fbb2 f3f5 	udiv	r3, r2, r5
 801133c:	441c      	add	r4, r3
 801133e:	443c      	add	r4, r7
 8011340:	4420      	add	r0, r4
 8011342:	fb05 2513 	mls	r5, r5, r3, r2
 8011346:	e7db      	b.n	8011300 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08011348 <_ZN8touchgfx6muldivElllRl>:
 8011348:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801134a:	2800      	cmp	r0, #0
 801134c:	bfba      	itte	lt
 801134e:	4240      	neglt	r0, r0
 8011350:	f04f 34ff 	movlt.w	r4, #4294967295
 8011354:	2401      	movge	r4, #1
 8011356:	2900      	cmp	r1, #0
 8011358:	bfbc      	itt	lt
 801135a:	4249      	neglt	r1, r1
 801135c:	4264      	neglt	r4, r4
 801135e:	2a00      	cmp	r2, #0
 8011360:	bfb6      	itet	lt
 8011362:	4265      	neglt	r5, r4
 8011364:	4625      	movge	r5, r4
 8011366:	4252      	neglt	r2, r2
 8011368:	4288      	cmp	r0, r1
 801136a:	461e      	mov	r6, r3
 801136c:	bfc2      	ittt	gt
 801136e:	4603      	movgt	r3, r0
 8011370:	4608      	movgt	r0, r1
 8011372:	4619      	movgt	r1, r3
 8011374:	ab01      	add	r3, sp, #4
 8011376:	f7ff ff99 	bl	80112ac <_ZN8touchgfx7muldivuEmmmRm>
 801137a:	9b01      	ldr	r3, [sp, #4]
 801137c:	4368      	muls	r0, r5
 801137e:	435c      	muls	r4, r3
 8011380:	6034      	str	r4, [r6, #0]
 8011382:	b002      	add	sp, #8
 8011384:	bd70      	pop	{r4, r5, r6, pc}

08011386 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8011386:	2000      	movs	r0, #0
 8011388:	4770      	bx	lr

0801138a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801138a:	2001      	movs	r0, #1
 801138c:	4770      	bx	lr

0801138e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801138e:	2002      	movs	r0, #2
 8011390:	4770      	bx	lr

08011392 <_ZN8touchgfx6ScreenD1Ev>:
 8011392:	4770      	bx	lr

08011394 <_ZN8touchgfx12GestureEventD1Ev>:
 8011394:	4770      	bx	lr

08011396 <_ZN8touchgfx9DragEventD1Ev>:
 8011396:	4770      	bx	lr

08011398 <_ZN8touchgfx10ClickEventD1Ev>:
 8011398:	4770      	bx	lr

0801139a <_ZN8touchgfx10ClickEventD0Ev>:
 801139a:	b510      	push	{r4, lr}
 801139c:	210c      	movs	r1, #12
 801139e:	4604      	mov	r4, r0
 80113a0:	f010 fb5f 	bl	8021a62 <_ZdlPvj>
 80113a4:	4620      	mov	r0, r4
 80113a6:	bd10      	pop	{r4, pc}

080113a8 <_ZN8touchgfx9DragEventD0Ev>:
 80113a8:	b510      	push	{r4, lr}
 80113aa:	2110      	movs	r1, #16
 80113ac:	4604      	mov	r4, r0
 80113ae:	f010 fb58 	bl	8021a62 <_ZdlPvj>
 80113b2:	4620      	mov	r0, r4
 80113b4:	bd10      	pop	{r4, pc}

080113b6 <_ZN8touchgfx12GestureEventD0Ev>:
 80113b6:	b510      	push	{r4, lr}
 80113b8:	210c      	movs	r1, #12
 80113ba:	4604      	mov	r4, r0
 80113bc:	f010 fb51 	bl	8021a62 <_ZdlPvj>
 80113c0:	4620      	mov	r0, r4
 80113c2:	bd10      	pop	{r4, pc}

080113c4 <_ZN8touchgfx6ScreenD0Ev>:
 80113c4:	b510      	push	{r4, lr}
 80113c6:	213c      	movs	r1, #60	@ 0x3c
 80113c8:	4604      	mov	r4, r0
 80113ca:	f010 fb4a 	bl	8021a62 <_ZdlPvj>
 80113ce:	4620      	mov	r0, r4
 80113d0:	bd10      	pop	{r4, pc}
	...

080113d4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80113d4:	b530      	push	{r4, r5, lr}
 80113d6:	460d      	mov	r5, r1
 80113d8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80113da:	b087      	sub	sp, #28
 80113dc:	4604      	mov	r4, r0
 80113de:	b301      	cbz	r1, 8011422 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80113e0:	a801      	add	r0, sp, #4
 80113e2:	f7ff faf7 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80113e6:	892a      	ldrh	r2, [r5, #8]
 80113e8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80113ec:	7928      	ldrb	r0, [r5, #4]
 80113ee:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80113f2:	f88d 0010 	strb.w	r0, [sp, #16]
 80113f6:	1ad2      	subs	r2, r2, r3
 80113f8:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80113fa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80113fc:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011400:	441a      	add	r2, r3
 8011402:	896b      	ldrh	r3, [r5, #10]
 8011404:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011408:	f8ad 2014 	strh.w	r2, [sp, #20]
 801140c:	1b5b      	subs	r3, r3, r5
 801140e:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8011410:	442b      	add	r3, r5
 8011412:	4d05      	ldr	r5, [pc, #20]	@ (8011428 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011414:	9503      	str	r5, [sp, #12]
 8011416:	f8ad 3016 	strh.w	r3, [sp, #22]
 801141a:	6803      	ldr	r3, [r0, #0]
 801141c:	a903      	add	r1, sp, #12
 801141e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011420:	4798      	blx	r3
 8011422:	b007      	add	sp, #28
 8011424:	bd30      	pop	{r4, r5, pc}
 8011426:	bf00      	nop
 8011428:	0802530c 	.word	0x0802530c

0801142c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801142c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011430:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8011432:	b08a      	sub	sp, #40	@ 0x28
 8011434:	4604      	mov	r4, r0
 8011436:	460d      	mov	r5, r1
 8011438:	b113      	cbz	r3, 8011440 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801143a:	790b      	ldrb	r3, [r1, #4]
 801143c:	2b00      	cmp	r3, #0
 801143e:	d044      	beq.n	80114ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011440:	f104 0804 	add.w	r8, r4, #4
 8011444:	4641      	mov	r1, r8
 8011446:	a803      	add	r0, sp, #12
 8011448:	f7ff fac4 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801144c:	792b      	ldrb	r3, [r5, #4]
 801144e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011452:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8011456:	b983      	cbnz	r3, 801147a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011458:	892a      	ldrh	r2, [r5, #8]
 801145a:	88e9      	ldrh	r1, [r5, #6]
 801145c:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8011460:	1b92      	subs	r2, r2, r6
 8011462:	1bc9      	subs	r1, r1, r7
 8011464:	9301      	str	r3, [sp, #4]
 8011466:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801146a:	9300      	str	r3, [sp, #0]
 801146c:	b212      	sxth	r2, r2
 801146e:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8011472:	b209      	sxth	r1, r1
 8011474:	4640      	mov	r0, r8
 8011476:	f7f8 fe75 	bl	800a164 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801147a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801147c:	b329      	cbz	r1, 80114ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801147e:	a805      	add	r0, sp, #20
 8011480:	f7ff faa8 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011484:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011488:	792b      	ldrb	r3, [r5, #4]
 801148a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 801148c:	f88d 3020 	strb.w	r3, [sp, #32]
 8011490:	1abf      	subs	r7, r7, r2
 8011492:	88ea      	ldrh	r2, [r5, #6]
 8011494:	4417      	add	r7, r2
 8011496:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8011498:	4417      	add	r7, r2
 801149a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801149e:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80114a2:	1ab6      	subs	r6, r6, r2
 80114a4:	892a      	ldrh	r2, [r5, #8]
 80114a6:	4416      	add	r6, r2
 80114a8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80114aa:	4416      	add	r6, r2
 80114ac:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80114b0:	4a07      	ldr	r2, [pc, #28]	@ (80114d0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80114b2:	9207      	str	r2, [sp, #28]
 80114b4:	2600      	movs	r6, #0
 80114b6:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 80114ba:	6803      	ldr	r3, [r0, #0]
 80114bc:	a907      	add	r1, sp, #28
 80114be:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80114c0:	4798      	blx	r3
 80114c2:	792b      	ldrb	r3, [r5, #4]
 80114c4:	b10b      	cbz	r3, 80114ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80114c6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 80114ca:	b00a      	add	sp, #40	@ 0x28
 80114cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114d0:	080252e4 	.word	0x080252e4

080114d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80114d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114d8:	460c      	mov	r4, r1
 80114da:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80114dc:	b088      	sub	sp, #32
 80114de:	4605      	mov	r5, r0
 80114e0:	2900      	cmp	r1, #0
 80114e2:	d06d      	beq.n	80115c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80114e4:	4668      	mov	r0, sp
 80114e6:	f7ff fa75 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80114ea:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 80114ec:	88e3      	ldrh	r3, [r4, #6]
 80114ee:	f9bd 8000 	ldrsh.w	r8, [sp]
 80114f2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80114f6:	440b      	add	r3, r1
 80114f8:	b21b      	sxth	r3, r3
 80114fa:	4543      	cmp	r3, r8
 80114fc:	db31      	blt.n	8011562 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80114fe:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011502:	44c4      	add	ip, r8
 8011504:	fa0f fc8c 	sxth.w	ip, ip
 8011508:	4563      	cmp	r3, ip
 801150a:	da2a      	bge.n	8011562 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801150c:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 801150e:	8926      	ldrh	r6, [r4, #8]
 8011510:	4416      	add	r6, r2
 8011512:	b236      	sxth	r6, r6
 8011514:	42be      	cmp	r6, r7
 8011516:	db24      	blt.n	8011562 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011518:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801151c:	4438      	add	r0, r7
 801151e:	b200      	sxth	r0, r0
 8011520:	4286      	cmp	r6, r0
 8011522:	da1e      	bge.n	8011562 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011524:	8963      	ldrh	r3, [r4, #10]
 8011526:	4419      	add	r1, r3
 8011528:	b209      	sxth	r1, r1
 801152a:	4541      	cmp	r1, r8
 801152c:	db08      	blt.n	8011540 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801152e:	4561      	cmp	r1, ip
 8011530:	da06      	bge.n	8011540 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011532:	89a3      	ldrh	r3, [r4, #12]
 8011534:	441a      	add	r2, r3
 8011536:	b212      	sxth	r2, r2
 8011538:	42ba      	cmp	r2, r7
 801153a:	db01      	blt.n	8011540 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801153c:	4282      	cmp	r2, r0
 801153e:	db10      	blt.n	8011562 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011540:	4b21      	ldr	r3, [pc, #132]	@ (80115c8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011542:	9304      	str	r3, [sp, #16]
 8011544:	2302      	movs	r3, #2
 8011546:	f88d 3014 	strb.w	r3, [sp, #20]
 801154a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801154c:	2300      	movs	r3, #0
 801154e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011552:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011556:	f8ad 301a 	strh.w	r3, [sp, #26]
 801155a:	6803      	ldr	r3, [r0, #0]
 801155c:	a904      	add	r1, sp, #16
 801155e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011560:	4798      	blx	r3
 8011562:	1d29      	adds	r1, r5, #4
 8011564:	a802      	add	r0, sp, #8
 8011566:	f7ff fa35 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801156a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801156e:	88e0      	ldrh	r0, [r4, #6]
 8011570:	7921      	ldrb	r1, [r4, #4]
 8011572:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8011576:	8922      	ldrh	r2, [r4, #8]
 8011578:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 801157a:	f88d 1014 	strb.w	r1, [sp, #20]
 801157e:	eba3 0808 	sub.w	r8, r3, r8
 8011582:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011586:	1bdf      	subs	r7, r3, r7
 8011588:	b2bb      	uxth	r3, r7
 801158a:	fa1f f888 	uxth.w	r8, r8
 801158e:	8967      	ldrh	r7, [r4, #10]
 8011590:	89a4      	ldrh	r4, [r4, #12]
 8011592:	4440      	add	r0, r8
 8011594:	4460      	add	r0, ip
 8011596:	441a      	add	r2, r3
 8011598:	44b8      	add	r8, r7
 801159a:	4423      	add	r3, r4
 801159c:	f8ad 0016 	strh.w	r0, [sp, #22]
 80115a0:	4433      	add	r3, r6
 80115a2:	4432      	add	r2, r6
 80115a4:	44e0      	add	r8, ip
 80115a6:	4c09      	ldr	r4, [pc, #36]	@ (80115cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80115a8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80115aa:	9404      	str	r4, [sp, #16]
 80115ac:	f8ad 2018 	strh.w	r2, [sp, #24]
 80115b0:	f8ad 801a 	strh.w	r8, [sp, #26]
 80115b4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80115b8:	6803      	ldr	r3, [r0, #0]
 80115ba:	a904      	add	r1, sp, #16
 80115bc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80115be:	4798      	blx	r3
 80115c0:	b008      	add	sp, #32
 80115c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80115c6:	bf00      	nop
 80115c8:	080252e4 	.word	0x080252e4
 80115cc:	080252f8 	.word	0x080252f8

080115d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80115d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80115d2:	4604      	mov	r4, r0
 80115d4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80115d8:	3201      	adds	r2, #1
 80115da:	d112      	bne.n	8011602 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80115dc:	6803      	ldr	r3, [r0, #0]
 80115de:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80115e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80115e6:	f8ad 1004 	strh.w	r1, [sp, #4]
 80115ea:	2500      	movs	r5, #0
 80115ec:	9500      	str	r5, [sp, #0]
 80115ee:	466d      	mov	r5, sp
 80115f0:	4629      	mov	r1, r5
 80115f2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80115f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80115f8:	4798      	blx	r3
 80115fa:	e895 0003 	ldmia.w	r5, {r0, r1}
 80115fe:	e884 0003 	stmia.w	r4, {r0, r1}
 8011602:	4620      	mov	r0, r4
 8011604:	b003      	add	sp, #12
 8011606:	bd30      	pop	{r4, r5, pc}

08011608 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011608:	b513      	push	{r0, r1, r4, lr}
 801160a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801160e:	3301      	adds	r3, #1
 8011610:	4604      	mov	r4, r0
 8011612:	d109      	bne.n	8011628 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011614:	4601      	mov	r1, r0
 8011616:	4668      	mov	r0, sp
 8011618:	f7ff f9dc 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801161c:	f8bd 3000 	ldrh.w	r3, [sp]
 8011620:	8423      	strh	r3, [r4, #32]
 8011622:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011626:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011628:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801162c:	b002      	add	sp, #8
 801162e:	bd10      	pop	{r4, pc}

08011630 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011630:	b513      	push	{r0, r1, r4, lr}
 8011632:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8011636:	3301      	adds	r3, #1
 8011638:	4604      	mov	r4, r0
 801163a:	d109      	bne.n	8011650 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801163c:	4601      	mov	r1, r0
 801163e:	4668      	mov	r0, sp
 8011640:	f7ff f9c8 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011644:	f8bd 3000 	ldrh.w	r3, [sp]
 8011648:	8423      	strh	r3, [r4, #32]
 801164a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801164e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011650:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8011654:	b002      	add	sp, #8
 8011656:	bd10      	pop	{r4, pc}

08011658 <_ZN8touchgfx6ScreenC1Ev>:
 8011658:	b570      	push	{r4, r5, r6, lr}
 801165a:	4605      	mov	r5, r0
 801165c:	4b16      	ldr	r3, [pc, #88]	@ (80116b8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801165e:	f845 3b04 	str.w	r3, [r5], #4
 8011662:	2300      	movs	r3, #0
 8011664:	8103      	strh	r3, [r0, #8]
 8011666:	8143      	strh	r3, [r0, #10]
 8011668:	8183      	strh	r3, [r0, #12]
 801166a:	81c3      	strh	r3, [r0, #14]
 801166c:	8203      	strh	r3, [r0, #16]
 801166e:	8243      	strh	r3, [r0, #18]
 8011670:	8283      	strh	r3, [r0, #20]
 8011672:	82c3      	strh	r3, [r0, #22]
 8011674:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011678:	6203      	str	r3, [r0, #32]
 801167a:	8483      	strh	r3, [r0, #36]	@ 0x24
 801167c:	84c3      	strh	r3, [r0, #38]	@ 0x26
 801167e:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8011682:	4a0e      	ldr	r2, [pc, #56]	@ (80116bc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011684:	6343      	str	r3, [r0, #52]	@ 0x34
 8011686:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801168a:	4b0d      	ldr	r3, [pc, #52]	@ (80116c0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801168c:	6042      	str	r2, [r0, #4]
 801168e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011692:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8011694:	4a0b      	ldr	r2, [pc, #44]	@ (80116c4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011696:	4604      	mov	r4, r0
 8011698:	2101      	movs	r1, #1
 801169a:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 801169e:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80116a2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80116a6:	4628      	mov	r0, r5
 80116a8:	4798      	blx	r3
 80116aa:	6863      	ldr	r3, [r4, #4]
 80116ac:	4628      	mov	r0, r5
 80116ae:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80116b0:	4631      	mov	r1, r6
 80116b2:	4798      	blx	r3
 80116b4:	4620      	mov	r0, r4
 80116b6:	bd70      	pop	{r4, r5, r6, pc}
 80116b8:	08025320 	.word	0x08025320
 80116bc:	08024e7c 	.word	0x08024e7c
 80116c0:	20013ff0 	.word	0x20013ff0
 80116c4:	20013fee 	.word	0x20013fee

080116c8 <_ZN8touchgfx6Screen4drawEv>:
 80116c8:	b507      	push	{r0, r1, r2, lr}
 80116ca:	4b09      	ldr	r3, [pc, #36]	@ (80116f0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80116cc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80116d0:	4b08      	ldr	r3, [pc, #32]	@ (80116f4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80116d2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80116d6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80116da:	f8ad 3006 	strh.w	r3, [sp, #6]
 80116de:	6803      	ldr	r3, [r0, #0]
 80116e0:	2100      	movs	r1, #0
 80116e2:	9100      	str	r1, [sp, #0]
 80116e4:	689b      	ldr	r3, [r3, #8]
 80116e6:	4669      	mov	r1, sp
 80116e8:	4798      	blx	r3
 80116ea:	b003      	add	sp, #12
 80116ec:	f85d fb04 	ldr.w	pc, [sp], #4
 80116f0:	20013fee 	.word	0x20013fee
 80116f4:	20013ff0 	.word	0x20013ff0

080116f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80116f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116fc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011700:	2b00      	cmp	r3, #0
 8011702:	b089      	sub	sp, #36	@ 0x24
 8011704:	4680      	mov	r8, r0
 8011706:	460c      	mov	r4, r1
 8011708:	4615      	mov	r5, r2
 801170a:	dd0e      	ble.n	801172a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801170c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011710:	2b00      	cmp	r3, #0
 8011712:	dd0a      	ble.n	801172a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011714:	4628      	mov	r0, r5
 8011716:	f7ff ff5b 	bl	80115d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801171a:	4621      	mov	r1, r4
 801171c:	f7fd fe2d 	bl	800f37a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011720:	69eb      	ldr	r3, [r5, #28]
 8011722:	b928      	cbnz	r0, 8011730 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011724:	461d      	mov	r5, r3
 8011726:	2b00      	cmp	r3, #0
 8011728:	d1f4      	bne.n	8011714 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801172a:	b009      	add	sp, #36	@ 0x24
 801172c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011730:	ae04      	add	r6, sp, #16
 8011732:	2b00      	cmp	r3, #0
 8011734:	f000 80b5 	beq.w	80118a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011738:	682b      	ldr	r3, [r5, #0]
 801173a:	4629      	mov	r1, r5
 801173c:	68db      	ldr	r3, [r3, #12]
 801173e:	a802      	add	r0, sp, #8
 8011740:	4798      	blx	r3
 8011742:	4628      	mov	r0, r5
 8011744:	f7ff ff60 	bl	8011608 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011748:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801174c:	4407      	add	r7, r0
 801174e:	4628      	mov	r0, r5
 8011750:	f7ff ff6e 	bl	8011630 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011754:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011758:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801175c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011760:	4418      	add	r0, r3
 8011762:	4621      	mov	r1, r4
 8011764:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011768:	f8ad 0012 	strh.w	r0, [sp, #18]
 801176c:	b23f      	sxth	r7, r7
 801176e:	4630      	mov	r0, r6
 8011770:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011774:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011778:	f7f8 fdd8 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 801177c:	4628      	mov	r0, r5
 801177e:	f7ff ff27 	bl	80115d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011782:	4602      	mov	r2, r0
 8011784:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011788:	ab06      	add	r3, sp, #24
 801178a:	e883 0003 	stmia.w	r3, {r0, r1}
 801178e:	4611      	mov	r1, r2
 8011790:	4618      	mov	r0, r3
 8011792:	f7f8 fdcb 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 8011796:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801179a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801179e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80117a2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80117a6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80117aa:	4299      	cmp	r1, r3
 80117ac:	d10b      	bne.n	80117c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80117ae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80117b2:	4552      	cmp	r2, sl
 80117b4:	d107      	bne.n	80117c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80117b6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80117ba:	455a      	cmp	r2, fp
 80117bc:	d103      	bne.n	80117c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80117be:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80117c2:	454a      	cmp	r2, r9
 80117c4:	d06d      	beq.n	80118a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80117c6:	f1bb 0f00 	cmp.w	fp, #0
 80117ca:	dd65      	ble.n	8011898 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80117cc:	f1b9 0f00 	cmp.w	r9, #0
 80117d0:	dd62      	ble.n	8011898 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80117d2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80117d6:	fa1f f08a 	uxth.w	r0, sl
 80117da:	4552      	cmp	r2, sl
 80117dc:	9000      	str	r0, [sp, #0]
 80117de:	da12      	bge.n	8011806 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80117e0:	9301      	str	r3, [sp, #4]
 80117e2:	9b00      	ldr	r3, [sp, #0]
 80117e4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80117e8:	f8ad 2012 	strh.w	r2, [sp, #18]
 80117ec:	1a9a      	subs	r2, r3, r2
 80117ee:	f8ad 1010 	strh.w	r1, [sp, #16]
 80117f2:	f8ad 0014 	strh.w	r0, [sp, #20]
 80117f6:	f8ad 2016 	strh.w	r2, [sp, #22]
 80117fa:	69ea      	ldr	r2, [r5, #28]
 80117fc:	4631      	mov	r1, r6
 80117fe:	4640      	mov	r0, r8
 8011800:	f7ff ff7a 	bl	80116f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011804:	9b01      	ldr	r3, [sp, #4]
 8011806:	f9b4 2000 	ldrsh.w	r2, [r4]
 801180a:	429a      	cmp	r2, r3
 801180c:	b29f      	uxth	r7, r3
 801180e:	da0d      	bge.n	801182c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011810:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011814:	1aba      	subs	r2, r7, r2
 8011816:	f8ad a012 	strh.w	sl, [sp, #18]
 801181a:	f8ad 2014 	strh.w	r2, [sp, #20]
 801181e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011822:	69ea      	ldr	r2, [r5, #28]
 8011824:	4631      	mov	r1, r6
 8011826:	4640      	mov	r0, r8
 8011828:	f7ff ff66 	bl	80116f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801182c:	8822      	ldrh	r2, [r4, #0]
 801182e:	88a3      	ldrh	r3, [r4, #4]
 8011830:	445f      	add	r7, fp
 8011832:	4413      	add	r3, r2
 8011834:	b29b      	uxth	r3, r3
 8011836:	b2bf      	uxth	r7, r7
 8011838:	b23a      	sxth	r2, r7
 801183a:	b219      	sxth	r1, r3
 801183c:	4291      	cmp	r1, r2
 801183e:	dd0d      	ble.n	801185c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011840:	1bdb      	subs	r3, r3, r7
 8011842:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011846:	f8ad a012 	strh.w	sl, [sp, #18]
 801184a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801184e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011852:	69ea      	ldr	r2, [r5, #28]
 8011854:	4631      	mov	r1, r6
 8011856:	4640      	mov	r0, r8
 8011858:	f7ff ff4e 	bl	80116f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801185c:	88e2      	ldrh	r2, [r4, #6]
 801185e:	8863      	ldrh	r3, [r4, #2]
 8011860:	4413      	add	r3, r2
 8011862:	9a00      	ldr	r2, [sp, #0]
 8011864:	444a      	add	r2, r9
 8011866:	b29b      	uxth	r3, r3
 8011868:	fa1f f982 	uxth.w	r9, r2
 801186c:	fa0f f289 	sxth.w	r2, r9
 8011870:	b219      	sxth	r1, r3
 8011872:	428a      	cmp	r2, r1
 8011874:	da15      	bge.n	80118a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011876:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801187a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801187e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011882:	eba3 0309 	sub.w	r3, r3, r9
 8011886:	f8ad 0010 	strh.w	r0, [sp, #16]
 801188a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801188e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011892:	69ea      	ldr	r2, [r5, #28]
 8011894:	4631      	mov	r1, r6
 8011896:	e001      	b.n	801189c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011898:	69ea      	ldr	r2, [r5, #28]
 801189a:	4621      	mov	r1, r4
 801189c:	4640      	mov	r0, r8
 801189e:	f7ff ff2b 	bl	80116f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80118a2:	4628      	mov	r0, r5
 80118a4:	f7ff fe94 	bl	80115d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80118a8:	6861      	ldr	r1, [r4, #4]
 80118aa:	4602      	mov	r2, r0
 80118ac:	6820      	ldr	r0, [r4, #0]
 80118ae:	4633      	mov	r3, r6
 80118b0:	c303      	stmia	r3!, {r0, r1}
 80118b2:	4611      	mov	r1, r2
 80118b4:	4630      	mov	r0, r6
 80118b6:	f7f8 fd39 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 80118ba:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80118be:	2b00      	cmp	r3, #0
 80118c0:	f77f af33 	ble.w	801172a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80118c4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80118c8:	2b00      	cmp	r3, #0
 80118ca:	f77f af2e 	ble.w	801172a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80118ce:	4628      	mov	r0, r5
 80118d0:	f7ff fe9a 	bl	8011608 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80118d4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80118d8:	1a18      	subs	r0, r3, r0
 80118da:	f8ad 0010 	strh.w	r0, [sp, #16]
 80118de:	4628      	mov	r0, r5
 80118e0:	f7ff fea6 	bl	8011630 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80118e4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80118e8:	1a18      	subs	r0, r3, r0
 80118ea:	f8ad 0012 	strh.w	r0, [sp, #18]
 80118ee:	682b      	ldr	r3, [r5, #0]
 80118f0:	4631      	mov	r1, r6
 80118f2:	689b      	ldr	r3, [r3, #8]
 80118f4:	4628      	mov	r0, r5
 80118f6:	4798      	blx	r3
 80118f8:	e717      	b.n	801172a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080118fa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80118fa:	b570      	push	{r4, r5, r6, lr}
 80118fc:	460c      	mov	r4, r1
 80118fe:	b086      	sub	sp, #24
 8011900:	1d06      	adds	r6, r0, #4
 8011902:	2300      	movs	r3, #0
 8011904:	4631      	mov	r1, r6
 8011906:	4605      	mov	r5, r0
 8011908:	a802      	add	r0, sp, #8
 801190a:	9301      	str	r3, [sp, #4]
 801190c:	f7ff f862 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011910:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011914:	8822      	ldrh	r2, [r4, #0]
 8011916:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801191a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801191e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011922:	1ad2      	subs	r2, r2, r3
 8011924:	8863      	ldrh	r3, [r4, #2]
 8011926:	f8ad 2010 	strh.w	r2, [sp, #16]
 801192a:	1a5b      	subs	r3, r3, r1
 801192c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011930:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011934:	aa01      	add	r2, sp, #4
 8011936:	a904      	add	r1, sp, #16
 8011938:	4630      	mov	r0, r6
 801193a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801193e:	f7f8 fdcd 	bl	800a4dc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011942:	9a01      	ldr	r2, [sp, #4]
 8011944:	b11a      	cbz	r2, 801194e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8011946:	4621      	mov	r1, r4
 8011948:	4628      	mov	r0, r5
 801194a:	f7ff fed5 	bl	80116f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801194e:	b006      	add	sp, #24
 8011950:	bd70      	pop	{r4, r5, r6, pc}

08011952 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011952:	b530      	push	{r4, r5, lr}
 8011954:	4602      	mov	r2, r0
 8011956:	4604      	mov	r4, r0
 8011958:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801195c:	b085      	sub	sp, #20
 801195e:	460d      	mov	r5, r1
 8011960:	6851      	ldr	r1, [r2, #4]
 8011962:	466b      	mov	r3, sp
 8011964:	c303      	stmia	r3!, {r0, r1}
 8011966:	4629      	mov	r1, r5
 8011968:	4668      	mov	r0, sp
 801196a:	f7f8 fcdf 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 801196e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011972:	b12b      	cbz	r3, 8011980 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011974:	4669      	mov	r1, sp
 8011976:	4620      	mov	r0, r4
 8011978:	f7ff ffbf 	bl	80118fa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801197c:	b005      	add	sp, #20
 801197e:	bd30      	pop	{r4, r5, pc}
 8011980:	3404      	adds	r4, #4
 8011982:	4621      	mov	r1, r4
 8011984:	a802      	add	r0, sp, #8
 8011986:	f7ff f825 	bl	80109d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801198a:	f8bd 3000 	ldrh.w	r3, [sp]
 801198e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011992:	1a9b      	subs	r3, r3, r2
 8011994:	f8ad 3000 	strh.w	r3, [sp]
 8011998:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801199c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80119a0:	4669      	mov	r1, sp
 80119a2:	1a9b      	subs	r3, r3, r2
 80119a4:	4620      	mov	r0, r4
 80119a6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80119aa:	f7f8 fd5e 	bl	800a46a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80119ae:	e7e5      	b.n	801197c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080119b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80119b0:	680a      	ldr	r2, [r1, #0]
 80119b2:	460b      	mov	r3, r1
 80119b4:	6992      	ldr	r2, [r2, #24]
 80119b6:	1d01      	adds	r1, r0, #4
 80119b8:	4618      	mov	r0, r3
 80119ba:	4710      	bx	r2

080119bc <_ZN8touchgfx12TextProviderC1Ev>:
 80119bc:	b538      	push	{r3, r4, r5, lr}
 80119be:	2500      	movs	r5, #0
 80119c0:	2302      	movs	r3, #2
 80119c2:	4604      	mov	r4, r0
 80119c4:	e9c0 5500 	strd	r5, r5, [r0]
 80119c8:	7403      	strb	r3, [r0, #16]
 80119ca:	6145      	str	r5, [r0, #20]
 80119cc:	7605      	strb	r5, [r0, #24]
 80119ce:	83c5      	strh	r5, [r0, #30]
 80119d0:	8405      	strh	r5, [r0, #32]
 80119d2:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80119d4:	8705      	strh	r5, [r0, #56]	@ 0x38
 80119d6:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 80119d8:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 80119dc:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 80119e0:	220e      	movs	r2, #14
 80119e2:	4629      	mov	r1, r5
 80119e4:	304c      	adds	r0, #76	@ 0x4c
 80119e6:	f011 f9b6 	bl	8022d56 <memset>
 80119ea:	2301      	movs	r3, #1
 80119ec:	4620      	mov	r0, r4
 80119ee:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 80119f2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80119f6:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 80119fa:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 80119fe:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8011a02:	f7f1 fa15 	bl	8002e30 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8011a06:	4620      	mov	r0, r4
 8011a08:	bd38      	pop	{r3, r4, r5, pc}

08011a0a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8011a0a:	b530      	push	{r4, r5, lr}
 8011a0c:	2500      	movs	r5, #0
 8011a0e:	2401      	movs	r4, #1
 8011a10:	6843      	ldr	r3, [r0, #4]
 8011a12:	b913      	cbnz	r3, 8011a1a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011a14:	6803      	ldr	r3, [r0, #0]
 8011a16:	b313      	cbz	r3, 8011a5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011a18:	6043      	str	r3, [r0, #4]
 8011a1a:	7e03      	ldrb	r3, [r0, #24]
 8011a1c:	b143      	cbz	r3, 8011a30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011a1e:	6943      	ldr	r3, [r0, #20]
 8011a20:	b12b      	cbz	r3, 8011a2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011a22:	881a      	ldrh	r2, [r3, #0]
 8011a24:	b11a      	cbz	r2, 8011a2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011a26:	1c9a      	adds	r2, r3, #2
 8011a28:	6142      	str	r2, [r0, #20]
 8011a2a:	8818      	ldrh	r0, [r3, #0]
 8011a2c:	bd30      	pop	{r4, r5, pc}
 8011a2e:	7605      	strb	r5, [r0, #24]
 8011a30:	6843      	ldr	r3, [r0, #4]
 8011a32:	8819      	ldrh	r1, [r3, #0]
 8011a34:	b199      	cbz	r1, 8011a5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011a36:	1c9a      	adds	r2, r3, #2
 8011a38:	2902      	cmp	r1, #2
 8011a3a:	6042      	str	r2, [r0, #4]
 8011a3c:	d1f5      	bne.n	8011a2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011a3e:	7c03      	ldrb	r3, [r0, #16]
 8011a40:	2b01      	cmp	r3, #1
 8011a42:	d8e5      	bhi.n	8011a10 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a44:	1c5a      	adds	r2, r3, #1
 8011a46:	3302      	adds	r3, #2
 8011a48:	7402      	strb	r2, [r0, #16]
 8011a4a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011a4e:	6143      	str	r3, [r0, #20]
 8011a50:	2b00      	cmp	r3, #0
 8011a52:	d0dd      	beq.n	8011a10 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a54:	881b      	ldrh	r3, [r3, #0]
 8011a56:	2b00      	cmp	r3, #0
 8011a58:	d0da      	beq.n	8011a10 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a5a:	7604      	strb	r4, [r0, #24]
 8011a5c:	e7d8      	b.n	8011a10 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a5e:	2000      	movs	r0, #0
 8011a60:	e7e4      	b.n	8011a2c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011a62 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011a62:	b430      	push	{r4, r5}
 8011a64:	6001      	str	r1, [r0, #0]
 8011a66:	2100      	movs	r1, #0
 8011a68:	6041      	str	r1, [r0, #4]
 8011a6a:	6815      	ldr	r5, [r2, #0]
 8011a6c:	6085      	str	r5, [r0, #8]
 8011a6e:	6852      	ldr	r2, [r2, #4]
 8011a70:	6443      	str	r3, [r0, #68]	@ 0x44
 8011a72:	9b02      	ldr	r3, [sp, #8]
 8011a74:	60c2      	str	r2, [r0, #12]
 8011a76:	7401      	strb	r1, [r0, #16]
 8011a78:	6141      	str	r1, [r0, #20]
 8011a7a:	7601      	strb	r1, [r0, #24]
 8011a7c:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011a7e:	8401      	strh	r1, [r0, #32]
 8011a80:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8011a84:	6483      	str	r3, [r0, #72]	@ 0x48
 8011a86:	bc30      	pop	{r4, r5}
 8011a88:	f7f1 b9d2 	b.w	8002e30 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011a8c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011a8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a8e:	4605      	mov	r5, r0
 8011a90:	4608      	mov	r0, r1
 8011a92:	b1e9      	cbz	r1, 8011ad0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8011a94:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8011a98:	460b      	mov	r3, r1
 8011a9a:	f101 0708 	add.w	r7, r1, #8
 8011a9e:	4622      	mov	r2, r4
 8011aa0:	6818      	ldr	r0, [r3, #0]
 8011aa2:	6859      	ldr	r1, [r3, #4]
 8011aa4:	4626      	mov	r6, r4
 8011aa6:	c603      	stmia	r6!, {r0, r1}
 8011aa8:	3308      	adds	r3, #8
 8011aaa:	42bb      	cmp	r3, r7
 8011aac:	4634      	mov	r4, r6
 8011aae:	d1f7      	bne.n	8011aa0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011ab0:	6818      	ldr	r0, [r3, #0]
 8011ab2:	6030      	str	r0, [r6, #0]
 8011ab4:	889b      	ldrh	r3, [r3, #4]
 8011ab6:	80b3      	strh	r3, [r6, #4]
 8011ab8:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011abc:	015b      	lsls	r3, r3, #5
 8011abe:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011ac2:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8011ac6:	430b      	orrs	r3, r1
 8011ac8:	425b      	negs	r3, r3
 8011aca:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011ace:	4610      	mov	r0, r2
 8011ad0:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011ad2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8011ad2:	b538      	push	{r3, r4, r5, lr}
 8011ad4:	460c      	mov	r4, r1
 8011ad6:	6811      	ldr	r1, [r2, #0]
 8011ad8:	4610      	mov	r0, r2
 8011ada:	68cd      	ldr	r5, [r1, #12]
 8011adc:	4619      	mov	r1, r3
 8011ade:	47a8      	blx	r5
 8011ae0:	2800      	cmp	r0, #0
 8011ae2:	bf08      	it	eq
 8011ae4:	4620      	moveq	r0, r4
 8011ae6:	bd38      	pop	{r3, r4, r5, pc}

08011ae8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011ae8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011aec:	468c      	mov	ip, r1
 8011aee:	4605      	mov	r5, r0
 8011af0:	4614      	mov	r4, r2
 8011af2:	b942      	cbnz	r2, 8011b06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8011af4:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011af8:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8011afc:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8011b00:	4620      	mov	r0, r4
 8011b02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b06:	7b50      	ldrb	r0, [r2, #13]
 8011b08:	8893      	ldrh	r3, [r2, #4]
 8011b0a:	0106      	lsls	r6, r0, #4
 8011b0c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011b10:	79e6      	ldrb	r6, [r4, #7]
 8011b12:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8011b16:	4316      	orrs	r6, r2
 8011b18:	185a      	adds	r2, r3, r1
 8011b1a:	b291      	uxth	r1, r2
 8011b1c:	291d      	cmp	r1, #29
 8011b1e:	b2b7      	uxth	r7, r6
 8011b20:	d87e      	bhi.n	8011c20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8011b22:	2201      	movs	r2, #1
 8011b24:	408a      	lsls	r2, r1
 8011b26:	498a      	ldr	r1, [pc, #552]	@ (8011d50 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8011b28:	420a      	tst	r2, r1
 8011b2a:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8011b2e:	d12d      	bne.n	8011b8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8011b30:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8011b34:	d074      	beq.n	8011c20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8011b36:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011b3a:	4623      	mov	r3, r4
 8011b3c:	f104 0e08 	add.w	lr, r4, #8
 8011b40:	4614      	mov	r4, r2
 8011b42:	6818      	ldr	r0, [r3, #0]
 8011b44:	6859      	ldr	r1, [r3, #4]
 8011b46:	4694      	mov	ip, r2
 8011b48:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011b4c:	3308      	adds	r3, #8
 8011b4e:	4573      	cmp	r3, lr
 8011b50:	4662      	mov	r2, ip
 8011b52:	d1f6      	bne.n	8011b42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8011b54:	6818      	ldr	r0, [r3, #0]
 8011b56:	f8cc 0000 	str.w	r0, [ip]
 8011b5a:	889b      	ldrh	r3, [r3, #4]
 8011b5c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011b60:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8011b64:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8011b68:	b2b3      	uxth	r3, r6
 8011b6a:	1aca      	subs	r2, r1, r3
 8011b6c:	b292      	uxth	r2, r2
 8011b6e:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8011b72:	10d2      	asrs	r2, r2, #3
 8011b74:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8011b78:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8011b7c:	4302      	orrs	r2, r0
 8011b7e:	1bcf      	subs	r7, r1, r7
 8011b80:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8011b84:	1afb      	subs	r3, r7, r3
 8011b86:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8011b8a:	e7b9      	b.n	8011b00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011b8c:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011b90:	4623      	mov	r3, r4
 8011b92:	f104 0808 	add.w	r8, r4, #8
 8011b96:	4614      	mov	r4, r2
 8011b98:	6818      	ldr	r0, [r3, #0]
 8011b9a:	6859      	ldr	r1, [r3, #4]
 8011b9c:	4696      	mov	lr, r2
 8011b9e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011ba2:	3308      	adds	r3, #8
 8011ba4:	4543      	cmp	r3, r8
 8011ba6:	4672      	mov	r2, lr
 8011ba8:	d1f6      	bne.n	8011b98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8011baa:	6818      	ldr	r0, [r3, #0]
 8011bac:	f8ce 0000 	str.w	r0, [lr]
 8011bb0:	889b      	ldrh	r3, [r3, #4]
 8011bb2:	f8ae 3004 	strh.w	r3, [lr, #4]
 8011bb6:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8011bb8:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8011bbc:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8011bbe:	f640 6333 	movw	r3, #3635	@ 0xe33
 8011bc2:	4299      	cmp	r1, r3
 8011bc4:	d111      	bne.n	8011bea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8011bc6:	f8dc 3000 	ldr.w	r3, [ip]
 8011bca:	4660      	mov	r0, ip
 8011bcc:	68db      	ldr	r3, [r3, #12]
 8011bce:	4798      	blx	r3
 8011bd0:	7b41      	ldrb	r1, [r0, #13]
 8011bd2:	00cb      	lsls	r3, r1, #3
 8011bd4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011bd8:	7a03      	ldrb	r3, [r0, #8]
 8011bda:	4313      	orrs	r3, r2
 8011bdc:	064a      	lsls	r2, r1, #25
 8011bde:	bf44      	itt	mi
 8011be0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011be4:	b21b      	sxthmi	r3, r3
 8011be6:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011bea:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8011bee:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8011bf2:	443b      	add	r3, r7
 8011bf4:	4433      	add	r3, r6
 8011bf6:	b29b      	uxth	r3, r3
 8011bf8:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011bfc:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8011c00:	10db      	asrs	r3, r3, #3
 8011c02:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011c06:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011c0a:	4313      	orrs	r3, r2
 8011c0c:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8011c10:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8011c14:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8011c18:	1a9b      	subs	r3, r3, r2
 8011c1a:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011c1e:	e76f      	b.n	8011b00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011c20:	f023 0204 	bic.w	r2, r3, #4
 8011c24:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8011c28:	428a      	cmp	r2, r1
 8011c2a:	d003      	beq.n	8011c34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8011c2c:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8011c30:	4293      	cmp	r3, r2
 8011c32:	d137      	bne.n	8011ca4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8011c34:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8011c38:	4622      	mov	r2, r4
 8011c3a:	f104 0808 	add.w	r8, r4, #8
 8011c3e:	4634      	mov	r4, r6
 8011c40:	6810      	ldr	r0, [r2, #0]
 8011c42:	6851      	ldr	r1, [r2, #4]
 8011c44:	46b6      	mov	lr, r6
 8011c46:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011c4a:	3208      	adds	r2, #8
 8011c4c:	4542      	cmp	r2, r8
 8011c4e:	4676      	mov	r6, lr
 8011c50:	d1f6      	bne.n	8011c40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8011c52:	6810      	ldr	r0, [r2, #0]
 8011c54:	f8ce 0000 	str.w	r0, [lr]
 8011c58:	8892      	ldrh	r2, [r2, #4]
 8011c5a:	f8ae 2004 	strh.w	r2, [lr, #4]
 8011c5e:	3b01      	subs	r3, #1
 8011c60:	b29b      	uxth	r3, r3
 8011c62:	4662      	mov	r2, ip
 8011c64:	4621      	mov	r1, r4
 8011c66:	4628      	mov	r0, r5
 8011c68:	f7ff ff33 	bl	8011ad2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011c6c:	7b41      	ldrb	r1, [r0, #13]
 8011c6e:	00cb      	lsls	r3, r1, #3
 8011c70:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011c74:	7a03      	ldrb	r3, [r0, #8]
 8011c76:	0648      	lsls	r0, r1, #25
 8011c78:	ea43 0302 	orr.w	r3, r3, r2
 8011c7c:	bf44      	itt	mi
 8011c7e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011c82:	b21b      	sxthmi	r3, r3
 8011c84:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011c88:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011c8c:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8011c90:	005b      	lsls	r3, r3, #1
 8011c92:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011c96:	4313      	orrs	r3, r2
 8011c98:	115a      	asrs	r2, r3, #5
 8011c9a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011c9e:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8011ca2:	e046      	b.n	8011d32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8011ca4:	00c2      	lsls	r2, r0, #3
 8011ca6:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8011caa:	7a22      	ldrb	r2, [r4, #8]
 8011cac:	430a      	orrs	r2, r1
 8011cae:	0641      	lsls	r1, r0, #25
 8011cb0:	bf44      	itt	mi
 8011cb2:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8011cb6:	b212      	sxthmi	r2, r2
 8011cb8:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011cbc:	f640 6109 	movw	r1, #3593	@ 0xe09
 8011cc0:	f023 0210 	bic.w	r2, r3, #16
 8011cc4:	428a      	cmp	r2, r1
 8011cc6:	d003      	beq.n	8011cd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8011cc8:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011ccc:	4293      	cmp	r3, r2
 8011cce:	d13d      	bne.n	8011d4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8011cd0:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011cd4:	f104 0808 	add.w	r8, r4, #8
 8011cd8:	4696      	mov	lr, r2
 8011cda:	6820      	ldr	r0, [r4, #0]
 8011cdc:	6861      	ldr	r1, [r4, #4]
 8011cde:	4616      	mov	r6, r2
 8011ce0:	c603      	stmia	r6!, {r0, r1}
 8011ce2:	3408      	adds	r4, #8
 8011ce4:	4544      	cmp	r4, r8
 8011ce6:	4632      	mov	r2, r6
 8011ce8:	d1f7      	bne.n	8011cda <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8011cea:	6820      	ldr	r0, [r4, #0]
 8011cec:	6030      	str	r0, [r6, #0]
 8011cee:	88a1      	ldrh	r1, [r4, #4]
 8011cf0:	80b1      	strh	r1, [r6, #4]
 8011cf2:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8011cf6:	0076      	lsls	r6, r6, #1
 8011cf8:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011cfc:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8011d00:	4316      	orrs	r6, r2
 8011d02:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011d06:	4293      	cmp	r3, r2
 8011d08:	bf1a      	itte	ne
 8011d0a:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011d0e:	b29b      	uxthne	r3, r3
 8011d10:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8011d14:	4662      	mov	r2, ip
 8011d16:	4671      	mov	r1, lr
 8011d18:	4628      	mov	r0, r5
 8011d1a:	4674      	mov	r4, lr
 8011d1c:	f7ff fed9 	bl	8011ad2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011d20:	7b43      	ldrb	r3, [r0, #13]
 8011d22:	7a82      	ldrb	r2, [r0, #10]
 8011d24:	005b      	lsls	r3, r3, #1
 8011d26:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011d2a:	4313      	orrs	r3, r2
 8011d2c:	1af6      	subs	r6, r6, r3
 8011d2e:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8011d32:	7b61      	ldrb	r1, [r4, #13]
 8011d34:	00cb      	lsls	r3, r1, #3
 8011d36:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011d3a:	7a23      	ldrb	r3, [r4, #8]
 8011d3c:	4313      	orrs	r3, r2
 8011d3e:	064a      	lsls	r2, r1, #25
 8011d40:	bf44      	itt	mi
 8011d42:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011d46:	b21b      	sxthmi	r3, r3
 8011d48:	1bdb      	subs	r3, r3, r7
 8011d4a:	e71c      	b.n	8011b86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8011d4c:	2300      	movs	r3, #0
 8011d4e:	e7a6      	b.n	8011c9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8011d50:	3fc00079 	.word	0x3fc00079

08011d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8011d54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d58:	4604      	mov	r4, r0
 8011d5a:	b942      	cbnz	r2, 8011d6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8011d5c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011d60:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8011d64:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8011d68:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8011d6c:	e047      	b.n	8011dfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011d6e:	7b51      	ldrb	r1, [r2, #13]
 8011d70:	8893      	ldrh	r3, [r2, #4]
 8011d72:	010d      	lsls	r5, r1, #4
 8011d74:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8011d78:	79d5      	ldrb	r5, [r2, #7]
 8011d7a:	4305      	orrs	r5, r0
 8011d7c:	2d04      	cmp	r5, #4
 8011d7e:	bfcc      	ite	gt
 8011d80:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8011d84:	f04f 0e01 	movle.w	lr, #1
 8011d88:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8011d8c:	f200 80ab 	bhi.w	8011ee6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8011d90:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8011d94:	4283      	cmp	r3, r0
 8011d96:	d216      	bcs.n	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d98:	f240 605b 	movw	r0, #1627	@ 0x65b
 8011d9c:	4283      	cmp	r3, r0
 8011d9e:	d859      	bhi.n	8011e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8011da0:	f240 6057 	movw	r0, #1623	@ 0x657
 8011da4:	4283      	cmp	r3, r0
 8011da6:	d20e      	bcs.n	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011da8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011dac:	d24a      	bcs.n	8011e44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8011dae:	f240 604e 	movw	r0, #1614	@ 0x64e
 8011db2:	4283      	cmp	r3, r0
 8011db4:	d207      	bcs.n	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011db6:	f240 601a 	movw	r0, #1562	@ 0x61a
 8011dba:	4283      	cmp	r3, r0
 8011dbc:	d02a      	beq.n	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011dbe:	d821      	bhi.n	8011e04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8011dc0:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8011dc4:	d35b      	bcc.n	8011e7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011dc6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8011dca:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011dce:	f040 80d0 	bne.w	8011f72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011dd2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8011dd6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011dda:	f040 80ca 	bne.w	8011f72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011dde:	00cb      	lsls	r3, r1, #3
 8011de0:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011de4:	7a13      	ldrb	r3, [r2, #8]
 8011de6:	0649      	lsls	r1, r1, #25
 8011de8:	ea43 0300 	orr.w	r3, r3, r0
 8011dec:	bf44      	itt	mi
 8011dee:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011df2:	b21b      	sxthmi	r3, r3
 8011df4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011df8:	1b5d      	subs	r5, r3, r5
 8011dfa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011dfe:	4610      	mov	r0, r2
 8011e00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011e04:	f240 604b 	movw	r0, #1611	@ 0x64b
 8011e08:	4283      	cmp	r3, r0
 8011e0a:	d338      	bcc.n	8011e7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011e0c:	f240 604c 	movw	r0, #1612	@ 0x64c
 8011e10:	4283      	cmp	r3, r0
 8011e12:	d9d8      	bls.n	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e14:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8011e18:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8011e1c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011e20:	f040 80f2 	bne.w	8012008 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011e24:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011e28:	f040 80ee 	bne.w	8012008 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011e2c:	00cb      	lsls	r3, r1, #3
 8011e2e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011e32:	7a13      	ldrb	r3, [r2, #8]
 8011e34:	064e      	lsls	r6, r1, #25
 8011e36:	ea43 0300 	orr.w	r3, r3, r0
 8011e3a:	bf44      	itt	mi
 8011e3c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011e40:	b21b      	sxthmi	r3, r3
 8011e42:	e7d9      	b.n	8011df8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8011e44:	f240 6054 	movw	r0, #1620	@ 0x654
 8011e48:	4283      	cmp	r3, r0
 8011e4a:	d8e3      	bhi.n	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e4c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011e50:	d9e0      	bls.n	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e52:	e7b8      	b.n	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e54:	f240 6074 	movw	r0, #1652	@ 0x674
 8011e58:	4283      	cmp	r3, r0
 8011e5a:	d0b4      	beq.n	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e5c:	d82d      	bhi.n	8011eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8011e5e:	f240 605e 	movw	r0, #1630	@ 0x65e
 8011e62:	4283      	cmp	r3, r0
 8011e64:	d804      	bhi.n	8011e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8011e66:	f240 605d 	movw	r0, #1629	@ 0x65d
 8011e6a:	4283      	cmp	r3, r0
 8011e6c:	d3d2      	bcc.n	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e6e:	e7aa      	b.n	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e70:	f240 605f 	movw	r0, #1631	@ 0x65f
 8011e74:	4283      	cmp	r3, r0
 8011e76:	d0cd      	beq.n	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e78:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8011e7c:	d0a3      	beq.n	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e7e:	00cb      	lsls	r3, r1, #3
 8011e80:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011e84:	7a13      	ldrb	r3, [r2, #8]
 8011e86:	0649      	lsls	r1, r1, #25
 8011e88:	ea43 0300 	orr.w	r3, r3, r0
 8011e8c:	bf44      	itt	mi
 8011e8e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011e92:	b21b      	sxthmi	r3, r3
 8011e94:	1b5d      	subs	r5, r3, r5
 8011e96:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011e9a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011e9e:	7b53      	ldrb	r3, [r2, #13]
 8011ea0:	015b      	lsls	r3, r3, #5
 8011ea2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011ea6:	7993      	ldrb	r3, [r2, #6]
 8011ea8:	430b      	orrs	r3, r1
 8011eaa:	005b      	lsls	r3, r3, #1
 8011eac:	2105      	movs	r1, #5
 8011eae:	fb93 f3f1 	sdiv	r3, r3, r1
 8011eb2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011eb6:	440b      	add	r3, r1
 8011eb8:	e756      	b.n	8011d68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011eba:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8011ebe:	4283      	cmp	r3, r0
 8011ec0:	d809      	bhi.n	8011ed6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8011ec2:	f240 60df 	movw	r0, #1759	@ 0x6df
 8011ec6:	4283      	cmp	r3, r0
 8011ec8:	f4bf af7d 	bcs.w	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011ecc:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8011ed0:	2b05      	cmp	r3, #5
 8011ed2:	d8d4      	bhi.n	8011e7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011ed4:	e777      	b.n	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011ed6:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8011eda:	4283      	cmp	r3, r0
 8011edc:	d09a      	beq.n	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011ede:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8011ee2:	4283      	cmp	r3, r0
 8011ee4:	e7ca      	b.n	8011e7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011ee6:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8011eea:	d22b      	bcs.n	8011f44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011eec:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8011ef0:	4283      	cmp	r3, r0
 8011ef2:	d28f      	bcs.n	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011ef4:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8011ef8:	4283      	cmp	r3, r0
 8011efa:	d816      	bhi.n	8011f2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011efc:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8011f00:	4283      	cmp	r3, r0
 8011f02:	f4bf af60 	bcs.w	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f06:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8011f0a:	4283      	cmp	r3, r0
 8011f0c:	d80a      	bhi.n	8011f24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8011f0e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8011f12:	4283      	cmp	r3, r0
 8011f14:	f4bf af57 	bcs.w	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f18:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8011f1c:	4283      	cmp	r3, r0
 8011f1e:	f43f af79 	beq.w	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f22:	e7ac      	b.n	8011e7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011f24:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8011f28:	e7f8      	b.n	8011f1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8011f2a:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8011f2e:	4283      	cmp	r3, r0
 8011f30:	d802      	bhi.n	8011f38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8011f32:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8011f36:	e798      	b.n	8011e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011f38:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8011f3c:	4283      	cmp	r3, r0
 8011f3e:	f47f af42 	bne.w	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f42:	e767      	b.n	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f44:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8011f48:	4283      	cmp	r3, r0
 8011f4a:	f43f af63 	beq.w	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f4e:	d802      	bhi.n	8011f56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8011f50:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8011f54:	e7f2      	b.n	8011f3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8011f56:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8011f5a:	4283      	cmp	r3, r0
 8011f5c:	d805      	bhi.n	8011f6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8011f5e:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8011f62:	4283      	cmp	r3, r0
 8011f64:	f4ff af2f 	bcc.w	8011dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f68:	e754      	b.n	8011e14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f6a:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8011f6e:	4283      	cmp	r3, r0
 8011f70:	e7af      	b.n	8011ed2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8011f72:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011f76:	4617      	mov	r7, r2
 8011f78:	f102 0808 	add.w	r8, r2, #8
 8011f7c:	4666      	mov	r6, ip
 8011f7e:	6838      	ldr	r0, [r7, #0]
 8011f80:	6879      	ldr	r1, [r7, #4]
 8011f82:	46e6      	mov	lr, ip
 8011f84:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011f88:	3708      	adds	r7, #8
 8011f8a:	4547      	cmp	r7, r8
 8011f8c:	46f4      	mov	ip, lr
 8011f8e:	d1f6      	bne.n	8011f7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8011f90:	6838      	ldr	r0, [r7, #0]
 8011f92:	f8ce 0000 	str.w	r0, [lr]
 8011f96:	88b9      	ldrh	r1, [r7, #4]
 8011f98:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011f9c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8011fa0:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011fa4:	d009      	beq.n	8011fba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8011fa6:	7b51      	ldrb	r1, [r2, #13]
 8011fa8:	7992      	ldrb	r2, [r2, #6]
 8011faa:	0149      	lsls	r1, r1, #5
 8011fac:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011fb0:	4311      	orrs	r1, r2
 8011fb2:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011fb6:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011fba:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011fbe:	b2ad      	uxth	r5, r5
 8011fc0:	d00d      	beq.n	8011fde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8011fc2:	442b      	add	r3, r5
 8011fc4:	b29b      	uxth	r3, r3
 8011fc6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011fca:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8011fce:	10db      	asrs	r3, r3, #3
 8011fd0:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011fd4:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011fd8:	4313      	orrs	r3, r2
 8011fda:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8011fde:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8011fe2:	00cb      	lsls	r3, r1, #3
 8011fe4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011fe8:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8011fec:	064f      	lsls	r7, r1, #25
 8011fee:	ea43 0302 	orr.w	r3, r3, r2
 8011ff2:	bf44      	itt	mi
 8011ff4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011ff8:	b21b      	sxthmi	r3, r3
 8011ffa:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011ffe:	1b5b      	subs	r3, r3, r5
 8012000:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8012004:	4632      	mov	r2, r6
 8012006:	e6fa      	b.n	8011dfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012008:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801200c:	4617      	mov	r7, r2
 801200e:	f102 0908 	add.w	r9, r2, #8
 8012012:	4666      	mov	r6, ip
 8012014:	6838      	ldr	r0, [r7, #0]
 8012016:	6879      	ldr	r1, [r7, #4]
 8012018:	46e0      	mov	r8, ip
 801201a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801201e:	3708      	adds	r7, #8
 8012020:	454f      	cmp	r7, r9
 8012022:	46c4      	mov	ip, r8
 8012024:	d1f6      	bne.n	8012014 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8012026:	6838      	ldr	r0, [r7, #0]
 8012028:	f8c8 0000 	str.w	r0, [r8]
 801202c:	88b9      	ldrh	r1, [r7, #4]
 801202e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012032:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8012036:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801203a:	d009      	beq.n	8012050 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801203c:	7b51      	ldrb	r1, [r2, #13]
 801203e:	7992      	ldrb	r2, [r2, #6]
 8012040:	0149      	lsls	r1, r1, #5
 8012042:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012046:	4311      	orrs	r1, r2
 8012048:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801204c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8012050:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012054:	d00e      	beq.n	8012074 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8012056:	eba3 030e 	sub.w	r3, r3, lr
 801205a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801205e:	b29b      	uxth	r3, r3
 8012060:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012064:	10db      	asrs	r3, r3, #3
 8012066:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801206a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801206e:	4313      	orrs	r3, r2
 8012070:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8012074:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8012078:	00cb      	lsls	r3, r1, #3
 801207a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801207e:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8012082:	0648      	lsls	r0, r1, #25
 8012084:	ea43 0302 	orr.w	r3, r3, r2
 8012088:	bf44      	itt	mi
 801208a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801208e:	b21b      	sxthmi	r3, r3
 8012090:	1b5d      	subs	r5, r3, r5
 8012092:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012096:	e7b5      	b.n	8012004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012098 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801209c:	461e      	mov	r6, r3
 801209e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80120a0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80120a4:	4604      	mov	r4, r0
 80120a6:	4617      	mov	r7, r2
 80120a8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80120ac:	f7f0 fe7e 	bl	8002dac <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80120b0:	4605      	mov	r5, r0
 80120b2:	b918      	cbnz	r0, 80120bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80120b4:	6030      	str	r0, [r6, #0]
 80120b6:	4628      	mov	r0, r5
 80120b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80120bc:	683b      	ldr	r3, [r7, #0]
 80120be:	4601      	mov	r1, r0
 80120c0:	68db      	ldr	r3, [r3, #12]
 80120c2:	4638      	mov	r0, r7
 80120c4:	4798      	blx	r3
 80120c6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80120ca:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80120ce:	4602      	mov	r2, r0
 80120d0:	6030      	str	r0, [r6, #0]
 80120d2:	d213      	bcs.n	80120fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80120d4:	4643      	mov	r3, r8
 80120d6:	4639      	mov	r1, r7
 80120d8:	4620      	mov	r0, r4
 80120da:	f7ff fe3b 	bl	8011d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80120de:	6030      	str	r0, [r6, #0]
 80120e0:	6833      	ldr	r3, [r6, #0]
 80120e2:	b143      	cbz	r3, 80120f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80120e4:	7b5a      	ldrb	r2, [r3, #13]
 80120e6:	7a9b      	ldrb	r3, [r3, #10]
 80120e8:	0052      	lsls	r2, r2, #1
 80120ea:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80120ee:	4313      	orrs	r3, r2
 80120f0:	bf0c      	ite	eq
 80120f2:	2301      	moveq	r3, #1
 80120f4:	2300      	movne	r3, #0
 80120f6:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80120fa:	e7dc      	b.n	80120b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80120fc:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012100:	b29b      	uxth	r3, r3
 8012102:	2b7f      	cmp	r3, #127	@ 0x7f
 8012104:	d804      	bhi.n	8012110 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012106:	4639      	mov	r1, r7
 8012108:	4620      	mov	r0, r4
 801210a:	f7ff fced 	bl	8011ae8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801210e:	e7e6      	b.n	80120de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012110:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8012114:	2b00      	cmp	r3, #0
 8012116:	d0e3      	beq.n	80120e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012118:	f640 1302 	movw	r3, #2306	@ 0x902
 801211c:	429d      	cmp	r5, r3
 801211e:	d1df      	bne.n	80120e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012120:	4601      	mov	r1, r0
 8012122:	4620      	mov	r0, r4
 8012124:	f7ff fcb2 	bl	8011a8c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012128:	e7d9      	b.n	80120de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801212a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801212a:	b510      	push	{r4, lr}
 801212c:	4604      	mov	r4, r0
 801212e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8012132:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012134:	b1f1      	cbz	r1, 8012174 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012136:	2b0a      	cmp	r3, #10
 8012138:	d02f      	beq.n	801219a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801213a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801213c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012140:	3901      	subs	r1, #1
 8012142:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8012144:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8012148:	1c51      	adds	r1, r2, #1
 801214a:	b289      	uxth	r1, r1
 801214c:	2901      	cmp	r1, #1
 801214e:	bf84      	itt	hi
 8012150:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012154:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8012156:	f103 0201 	add.w	r2, r3, #1
 801215a:	8722      	strh	r2, [r4, #56]	@ 0x38
 801215c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801215e:	bf98      	it	ls
 8012160:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8012162:	4413      	add	r3, r2
 8012164:	b29b      	uxth	r3, r3
 8012166:	2b09      	cmp	r3, #9
 8012168:	bf88      	it	hi
 801216a:	3b0a      	subhi	r3, #10
 801216c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012170:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012172:	e7dc      	b.n	801212e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012174:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012176:	2b0a      	cmp	r3, #10
 8012178:	d00f      	beq.n	801219a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801217a:	4620      	mov	r0, r4
 801217c:	f7ff fc45 	bl	8011a0a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012180:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012182:	1c5a      	adds	r2, r3, #1
 8012184:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012186:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012188:	4413      	add	r3, r2
 801218a:	b29b      	uxth	r3, r3
 801218c:	2b09      	cmp	r3, #9
 801218e:	bf88      	it	hi
 8012190:	3b0a      	subhi	r3, #10
 8012192:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012196:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012198:	e7ec      	b.n	8012174 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801219a:	bd10      	pop	{r4, pc}

0801219c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801219c:	b538      	push	{r3, r4, r5, lr}
 801219e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80121a0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80121a4:	4604      	mov	r4, r0
 80121a6:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 80121a8:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 80121aa:	3a01      	subs	r2, #1
 80121ac:	8702      	strh	r2, [r0, #56]	@ 0x38
 80121ae:	1c5a      	adds	r2, r3, #1
 80121b0:	b292      	uxth	r2, r2
 80121b2:	2a09      	cmp	r2, #9
 80121b4:	bf86      	itte	hi
 80121b6:	3b09      	subhi	r3, #9
 80121b8:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 80121ba:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 80121bc:	f7ff ffb5 	bl	801212a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80121c0:	8c23      	ldrh	r3, [r4, #32]
 80121c2:	2b01      	cmp	r3, #1
 80121c4:	bf9c      	itt	ls
 80121c6:	3301      	addls	r3, #1
 80121c8:	8423      	strhls	r3, [r4, #32]
 80121ca:	8be3      	ldrh	r3, [r4, #30]
 80121cc:	b90b      	cbnz	r3, 80121d2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80121ce:	2302      	movs	r3, #2
 80121d0:	83e3      	strh	r3, [r4, #30]
 80121d2:	8be3      	ldrh	r3, [r4, #30]
 80121d4:	3b01      	subs	r3, #1
 80121d6:	b29b      	uxth	r3, r3
 80121d8:	83e3      	strh	r3, [r4, #30]
 80121da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80121de:	4628      	mov	r0, r5
 80121e0:	8365      	strh	r5, [r4, #26]
 80121e2:	bd38      	pop	{r3, r4, r5, pc}

080121e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80121e4:	428a      	cmp	r2, r1
 80121e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80121ea:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80121ec:	d931      	bls.n	8012252 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80121ee:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80121f0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80121f4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80121f8:	19ee      	adds	r6, r5, r7
 80121fa:	1a54      	subs	r4, r2, r1
 80121fc:	3e01      	subs	r6, #1
 80121fe:	fa1f fe84 	uxth.w	lr, r4
 8012202:	b2b4      	uxth	r4, r6
 8012204:	eba4 090e 	sub.w	r9, r4, lr
 8012208:	fa1f f989 	uxth.w	r9, r9
 801220c:	2c09      	cmp	r4, #9
 801220e:	4626      	mov	r6, r4
 8012210:	bf88      	it	hi
 8012212:	f1a4 060a 	subhi.w	r6, r4, #10
 8012216:	f1bc 0f00 	cmp.w	ip, #0
 801221a:	bf08      	it	eq
 801221c:	f04f 0c02 	moveq.w	ip, #2
 8012220:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012224:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012228:	fa1f fc8c 	uxth.w	ip, ip
 801222c:	3c01      	subs	r4, #1
 801222e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8012232:	b2a4      	uxth	r4, r4
 8012234:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012238:	454c      	cmp	r4, r9
 801223a:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801223e:	d1e5      	bne.n	801220c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012240:	eba5 050e 	sub.w	r5, r5, lr
 8012244:	eb0e 0408 	add.w	r4, lr, r8
 8012248:	8705      	strh	r5, [r0, #56]	@ 0x38
 801224a:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 801224e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8012252:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8012254:	1a64      	subs	r4, r4, r1
 8012256:	4439      	add	r1, r7
 8012258:	b289      	uxth	r1, r1
 801225a:	2909      	cmp	r1, #9
 801225c:	bf88      	it	hi
 801225e:	390a      	subhi	r1, #10
 8012260:	8704      	strh	r4, [r0, #56]	@ 0x38
 8012262:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012264:	250a      	movs	r5, #10
 8012266:	b18a      	cbz	r2, 801228c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8012268:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801226a:	3a01      	subs	r2, #1
 801226c:	b292      	uxth	r2, r2
 801226e:	3101      	adds	r1, #1
 8012270:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012274:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012276:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012278:	b901      	cbnz	r1, 801227c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801227a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801227c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801227e:	3901      	subs	r1, #1
 8012280:	b289      	uxth	r1, r1
 8012282:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012284:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012288:	844c      	strh	r4, [r1, #34]	@ 0x22
 801228a:	e7ec      	b.n	8012266 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801228c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012290:	f7ff bf4b 	b.w	801212a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08012294 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8012294:	b570      	push	{r4, r5, r6, lr}
 8012296:	2500      	movs	r5, #0
 8012298:	4295      	cmp	r5, r2
 801229a:	d011      	beq.n	80122c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801229c:	8bc4      	ldrh	r4, [r0, #30]
 801229e:	f831 6b02 	ldrh.w	r6, [r1], #2
 80122a2:	4414      	add	r4, r2
 80122a4:	3c01      	subs	r4, #1
 80122a6:	1b64      	subs	r4, r4, r5
 80122a8:	b2a4      	uxth	r4, r4
 80122aa:	2c01      	cmp	r4, #1
 80122ac:	bf88      	it	hi
 80122ae:	3c02      	subhi	r4, #2
 80122b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80122b4:	8b64      	ldrh	r4, [r4, #26]
 80122b6:	42b4      	cmp	r4, r6
 80122b8:	d117      	bne.n	80122ea <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80122ba:	3501      	adds	r5, #1
 80122bc:	b2ad      	uxth	r5, r5
 80122be:	e7eb      	b.n	8012298 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80122c0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80122c4:	2400      	movs	r4, #0
 80122c6:	4413      	add	r3, r2
 80122c8:	b2a2      	uxth	r2, r4
 80122ca:	429a      	cmp	r2, r3
 80122cc:	da0f      	bge.n	80122ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80122ce:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 80122d0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80122d4:	4432      	add	r2, r6
 80122d6:	b292      	uxth	r2, r2
 80122d8:	2a09      	cmp	r2, #9
 80122da:	bf88      	it	hi
 80122dc:	3a0a      	subhi	r2, #10
 80122de:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80122e2:	3401      	adds	r4, #1
 80122e4:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80122e6:	42aa      	cmp	r2, r5
 80122e8:	d0ee      	beq.n	80122c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80122ea:	2000      	movs	r0, #0
 80122ec:	bd70      	pop	{r4, r5, r6, pc}
 80122ee:	2001      	movs	r0, #1
 80122f0:	e7fc      	b.n	80122ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080122f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80122f2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122f6:	4605      	mov	r5, r0
 80122f8:	4616      	mov	r6, r2
 80122fa:	1c8c      	adds	r4, r1, #2
 80122fc:	8809      	ldrh	r1, [r1, #0]
 80122fe:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012302:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012306:	42b3      	cmp	r3, r6
 8012308:	d124      	bne.n	8012354 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801230a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801230e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012312:	f001 070f 	and.w	r7, r1, #15
 8012316:	f8cd 8000 	str.w	r8, [sp]
 801231a:	464b      	mov	r3, r9
 801231c:	4652      	mov	r2, sl
 801231e:	4621      	mov	r1, r4
 8012320:	4628      	mov	r0, r5
 8012322:	f7ff ffb7 	bl	8012294 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012326:	4683      	mov	fp, r0
 8012328:	b168      	cbz	r0, 8012346 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801232a:	eb0a 0109 	add.w	r1, sl, r9
 801232e:	4441      	add	r1, r8
 8012330:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012334:	463a      	mov	r2, r7
 8012336:	4649      	mov	r1, r9
 8012338:	4628      	mov	r0, r5
 801233a:	f7ff ff53 	bl	80121e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801233e:	4658      	mov	r0, fp
 8012340:	b003      	add	sp, #12
 8012342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012346:	eb07 010a 	add.w	r1, r7, sl
 801234a:	4449      	add	r1, r9
 801234c:	4441      	add	r1, r8
 801234e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012352:	e7d2      	b.n	80122fa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012354:	f04f 0b00 	mov.w	fp, #0
 8012358:	e7f1      	b.n	801233e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801235a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801235a:	b570      	push	{r4, r5, r6, lr}
 801235c:	8810      	ldrh	r0, [r2, #0]
 801235e:	4298      	cmp	r0, r3
 8012360:	d817      	bhi.n	8012392 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012362:	1e48      	subs	r0, r1, #1
 8012364:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012368:	4298      	cmp	r0, r3
 801236a:	d312      	bcc.n	8012392 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801236c:	2400      	movs	r4, #0
 801236e:	428c      	cmp	r4, r1
 8012370:	d20f      	bcs.n	8012392 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012372:	1860      	adds	r0, r4, r1
 8012374:	1040      	asrs	r0, r0, #1
 8012376:	0085      	lsls	r5, r0, #2
 8012378:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801237c:	42b3      	cmp	r3, r6
 801237e:	d902      	bls.n	8012386 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012380:	3001      	adds	r0, #1
 8012382:	b284      	uxth	r4, r0
 8012384:	e7f3      	b.n	801236e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012386:	d201      	bcs.n	801238c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012388:	b281      	uxth	r1, r0
 801238a:	e7f0      	b.n	801236e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801238c:	442a      	add	r2, r5
 801238e:	8850      	ldrh	r0, [r2, #2]
 8012390:	bd70      	pop	{r4, r5, r6, pc}
 8012392:	2000      	movs	r0, #0
 8012394:	e7fc      	b.n	8012390 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012396 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012396:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801239a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801239c:	886f      	ldrh	r7, [r5, #2]
 801239e:	4604      	mov	r4, r0
 80123a0:	087f      	lsrs	r7, r7, #1
 80123a2:	260b      	movs	r6, #11
 80123a4:	3e01      	subs	r6, #1
 80123a6:	d013      	beq.n	80123d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80123a8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80123aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80123ae:	462a      	mov	r2, r5
 80123b0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80123b4:	4639      	mov	r1, r7
 80123b6:	4643      	mov	r3, r8
 80123b8:	4620      	mov	r0, r4
 80123ba:	f7ff ffce 	bl	801235a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80123be:	b138      	cbz	r0, 80123d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80123c0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80123c4:	4642      	mov	r2, r8
 80123c6:	4620      	mov	r0, r4
 80123c8:	f7ff ff93 	bl	80122f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80123cc:	2800      	cmp	r0, #0
 80123ce:	d1e9      	bne.n	80123a4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80123d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080123d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80123d4:	b570      	push	{r4, r5, r6, lr}
 80123d6:	694a      	ldr	r2, [r1, #20]
 80123d8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80123da:	684b      	ldr	r3, [r1, #4]
 80123dc:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80123de:	1b54      	subs	r4, r2, r5
 80123e0:	f000 8106 	beq.w	80125f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80123e4:	1b9b      	subs	r3, r3, r6
 80123e6:	d003      	beq.n	80123f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80123e8:	4363      	muls	r3, r4
 80123ea:	2210      	movs	r2, #16
 80123ec:	fb93 f3f2 	sdiv	r3, r3, r2
 80123f0:	680c      	ldr	r4, [r1, #0]
 80123f2:	698a      	ldr	r2, [r1, #24]
 80123f4:	1b65      	subs	r5, r4, r5
 80123f6:	f000 80fd 	beq.w	80125f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80123fa:	1b92      	subs	r2, r2, r6
 80123fc:	d003      	beq.n	8012406 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80123fe:	436a      	muls	r2, r5
 8012400:	2410      	movs	r4, #16
 8012402:	fb92 f2f4 	sdiv	r2, r2, r4
 8012406:	1a9b      	subs	r3, r3, r2
 8012408:	ee07 3a90 	vmov	s15, r3
 801240c:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8012630 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012410:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012414:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012418:	ee67 7a84 	vmul.f32	s15, s15, s8
 801241c:	460a      	mov	r2, r1
 801241e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012422:	4603      	mov	r3, r0
 8012424:	f100 040c 	add.w	r4, r0, #12
 8012428:	eeb1 6a43 	vneg.f32	s12, s6
 801242c:	edd2 7a02 	vldr	s15, [r2, #8]
 8012430:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012434:	3214      	adds	r2, #20
 8012436:	ece3 6a01 	vstmia	r3!, {s13}
 801243a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801243e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012442:	429c      	cmp	r4, r3
 8012444:	edc3 7a02 	vstr	s15, [r3, #8]
 8012448:	ed52 7a01 	vldr	s15, [r2, #-4]
 801244c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012450:	edc3 7a05 	vstr	s15, [r3, #20]
 8012454:	d1ea      	bne.n	801242c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012456:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012458:	698b      	ldr	r3, [r1, #24]
 801245a:	edd0 4a02 	vldr	s9, [r0, #8]
 801245e:	edd0 3a00 	vldr	s7, [r0]
 8012462:	edd0 6a01 	vldr	s13, [r0, #4]
 8012466:	ed90 5a05 	vldr	s10, [r0, #20]
 801246a:	ed90 2a03 	vldr	s4, [r0, #12]
 801246e:	edd0 5a04 	vldr	s11, [r0, #16]
 8012472:	ed90 1a07 	vldr	s2, [r0, #28]
 8012476:	edd0 2a06 	vldr	s5, [r0, #24]
 801247a:	1a9b      	subs	r3, r3, r2
 801247c:	ee07 3a90 	vmov	s15, r3
 8012480:	684b      	ldr	r3, [r1, #4]
 8012482:	1a9b      	subs	r3, r3, r2
 8012484:	ee07 3a10 	vmov	s14, r3
 8012488:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801248c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012490:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012494:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012498:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801249c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80124a0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124a4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80124a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80124ac:	ee32 5a45 	vsub.f32	s10, s4, s10
 80124b0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80124b4:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80124b8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80124ba:	694a      	ldr	r2, [r1, #20]
 80124bc:	1b13      	subs	r3, r2, r4
 80124be:	ee07 3a10 	vmov	s14, r3
 80124c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124c6:	680b      	ldr	r3, [r1, #0]
 80124c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124cc:	1b1b      	subs	r3, r3, r4
 80124ce:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80124d2:	ee07 3a10 	vmov	s14, r3
 80124d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124da:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124de:	eee6 4a87 	vfma.f32	s9, s13, s14
 80124e2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80124e6:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80124ea:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80124ec:	698b      	ldr	r3, [r1, #24]
 80124ee:	1a9b      	subs	r3, r3, r2
 80124f0:	ee06 3a90 	vmov	s13, r3
 80124f4:	684b      	ldr	r3, [r1, #4]
 80124f6:	1a9b      	subs	r3, r3, r2
 80124f8:	ee07 3a10 	vmov	s14, r3
 80124fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012500:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012504:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012508:	ee27 7a04 	vmul.f32	s14, s14, s8
 801250c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012510:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012514:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012518:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 801251c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801251e:	694a      	ldr	r2, [r1, #20]
 8012520:	1b13      	subs	r3, r2, r4
 8012522:	ee07 3a10 	vmov	s14, r3
 8012526:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801252a:	680b      	ldr	r3, [r1, #0]
 801252c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012530:	1b1b      	subs	r3, r3, r4
 8012532:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012536:	ee07 3a10 	vmov	s14, r3
 801253a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801253e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012542:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012546:	edd0 5a08 	vldr	s11, [r0, #32]
 801254a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801254e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012552:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8012556:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012558:	698b      	ldr	r3, [r1, #24]
 801255a:	1a9b      	subs	r3, r3, r2
 801255c:	ee07 3a10 	vmov	s14, r3
 8012560:	684b      	ldr	r3, [r1, #4]
 8012562:	1a9b      	subs	r3, r3, r2
 8012564:	ee01 3a90 	vmov	s3, r3
 8012568:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801256c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012570:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012574:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012578:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801257c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012580:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012584:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012588:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801258c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801258e:	694a      	ldr	r2, [r1, #20]
 8012590:	1b13      	subs	r3, r2, r4
 8012592:	ee03 3a10 	vmov	s6, r3
 8012596:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801259a:	680b      	ldr	r3, [r1, #0]
 801259c:	ee23 3a04 	vmul.f32	s6, s6, s8
 80125a0:	1b1b      	subs	r3, r3, r4
 80125a2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80125a6:	ee03 3a10 	vmov	s6, r3
 80125aa:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80125ae:	ee23 4a04 	vmul.f32	s8, s6, s8
 80125b2:	eee1 5a04 	vfma.f32	s11, s2, s8
 80125b6:	ee25 6a86 	vmul.f32	s12, s11, s12
 80125ba:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80125be:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80125c2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80125c6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80125ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125ce:	dd13      	ble.n	80125f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80125d0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80125d4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80125d8:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80125da:	eee3 7a87 	vfma.f32	s15, s7, s14
 80125de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80125e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125e6:	dd15      	ble.n	8012614 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80125e8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80125ec:	6403      	str	r3, [r0, #64]	@ 0x40
 80125ee:	bd70      	pop	{r4, r5, r6, pc}
 80125f0:	4623      	mov	r3, r4
 80125f2:	e6fd      	b.n	80123f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80125f4:	462a      	mov	r2, r5
 80125f6:	e706      	b.n	8012406 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80125f8:	d502      	bpl.n	8012600 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80125fa:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80125fe:	e7e9      	b.n	80125d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012600:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012604:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012608:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801260c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012610:	dade      	bge.n	80125d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012612:	e7f2      	b.n	80125fa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012614:	d502      	bpl.n	801261c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012616:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801261a:	e7e7      	b.n	80125ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801261c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012620:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012624:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012628:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801262c:	dadc      	bge.n	80125e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801262e:	e7f2      	b.n	8012616 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012630:	3d800000 	.word	0x3d800000

08012634 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012634:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012638:	2714      	movs	r7, #20
 801263a:	435f      	muls	r7, r3
 801263c:	eb02 0c07 	add.w	ip, r2, r7
 8012640:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012644:	f115 0e0f 	adds.w	lr, r5, #15
 8012648:	f100 80a2 	bmi.w	8012790 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801264c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012650:	9c08      	ldr	r4, [sp, #32]
 8012652:	f8c0 e014 	str.w	lr, [r0, #20]
 8012656:	2614      	movs	r6, #20
 8012658:	4366      	muls	r6, r4
 801265a:	eb02 0806 	add.w	r8, r2, r6
 801265e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012662:	f115 040f 	adds.w	r4, r5, #15
 8012666:	f100 809f 	bmi.w	80127a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801266a:	1124      	asrs	r4, r4, #4
 801266c:	eba4 040e 	sub.w	r4, r4, lr
 8012670:	6184      	str	r4, [r0, #24]
 8012672:	2c00      	cmp	r4, #0
 8012674:	f000 808a 	beq.w	801278c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012678:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801267c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012680:	5995      	ldr	r5, [r2, r6]
 8012682:	eba4 0809 	sub.w	r8, r4, r9
 8012686:	59d4      	ldr	r4, [r2, r7]
 8012688:	eba5 0a04 	sub.w	sl, r5, r4
 801268c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012690:	fb0e fe05 	mul.w	lr, lr, r5
 8012694:	fb0a ee19 	mls	lr, sl, r9, lr
 8012698:	fb08 e404 	mla	r4, r8, r4, lr
 801269c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80126a0:	3c01      	subs	r4, #1
 80126a2:	19a4      	adds	r4, r4, r6
 80126a4:	f100 808c 	bmi.w	80127c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80126a8:	fb94 fef6 	sdiv	lr, r4, r6
 80126ac:	f8c0 e000 	str.w	lr, [r0]
 80126b0:	fb06 441e 	mls	r4, r6, lr, r4
 80126b4:	6104      	str	r4, [r0, #16]
 80126b6:	2d00      	cmp	r5, #0
 80126b8:	f2c0 8095 	blt.w	80127e6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80126bc:	fb95 f4f6 	sdiv	r4, r5, r6
 80126c0:	6044      	str	r4, [r0, #4]
 80126c2:	fb06 5514 	mls	r5, r6, r4, r5
 80126c6:	6085      	str	r5, [r0, #8]
 80126c8:	60c6      	str	r6, [r0, #12]
 80126ca:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80126ce:	6945      	ldr	r5, [r0, #20]
 80126d0:	59d2      	ldr	r2, [r2, r7]
 80126d2:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8012808 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80126d6:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80126da:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80126de:	ee07 4a10 	vmov	s14, r4
 80126e2:	6804      	ldr	r4, [r0, #0]
 80126e4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80126e8:	ee07 2a90 	vmov	s15, r2
 80126ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80126f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80126f4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80126f8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80126fc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012700:	edd3 6a00 	vldr	s13, [r3]
 8012704:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012708:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 801270c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012710:	edc0 6a07 	vstr	s13, [r0, #28]
 8012714:	edd0 6a01 	vldr	s13, [r0, #4]
 8012718:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 801271c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012720:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012724:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012728:	ed80 6a08 	vstr	s12, [r0, #32]
 801272c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801272e:	6242      	str	r2, [r0, #36]	@ 0x24
 8012730:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8012734:	ed93 6a03 	vldr	s12, [r3, #12]
 8012738:	eea5 6a87 	vfma.f32	s12, s11, s14
 801273c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012740:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012744:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8012748:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801274c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8012750:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012754:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8012758:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801275a:	6302      	str	r2, [r0, #48]	@ 0x30
 801275c:	ed93 6a06 	vldr	s12, [r3, #24]
 8012760:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8012764:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012768:	eeb0 7a46 	vmov.f32	s14, s12
 801276c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8012770:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012774:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012778:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 801277c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8012780:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012784:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8012788:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801278a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801278c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012790:	f1c5 0501 	rsb	r5, r5, #1
 8012794:	f015 050f 	ands.w	r5, r5, #15
 8012798:	bf18      	it	ne
 801279a:	2501      	movne	r5, #1
 801279c:	2410      	movs	r4, #16
 801279e:	fb9e fef4 	sdiv	lr, lr, r4
 80127a2:	ebae 0e05 	sub.w	lr, lr, r5
 80127a6:	e753      	b.n	8012650 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80127a8:	f1c5 0501 	rsb	r5, r5, #1
 80127ac:	f015 050f 	ands.w	r5, r5, #15
 80127b0:	bf18      	it	ne
 80127b2:	2501      	movne	r5, #1
 80127b4:	f04f 0910 	mov.w	r9, #16
 80127b8:	fb94 f4f9 	sdiv	r4, r4, r9
 80127bc:	1b64      	subs	r4, r4, r5
 80127be:	e755      	b.n	801266c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80127c0:	4264      	negs	r4, r4
 80127c2:	fb94 fef6 	sdiv	lr, r4, r6
 80127c6:	f1ce 0800 	rsb	r8, lr, #0
 80127ca:	fb06 441e 	mls	r4, r6, lr, r4
 80127ce:	f8c0 8000 	str.w	r8, [r0]
 80127d2:	6104      	str	r4, [r0, #16]
 80127d4:	2c00      	cmp	r4, #0
 80127d6:	f43f af6e 	beq.w	80126b6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80127da:	ea6f 0e0e 	mvn.w	lr, lr
 80127de:	f8c0 e000 	str.w	lr, [r0]
 80127e2:	1b34      	subs	r4, r6, r4
 80127e4:	e766      	b.n	80126b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80127e6:	426d      	negs	r5, r5
 80127e8:	fb95 f4f6 	sdiv	r4, r5, r6
 80127ec:	f1c4 0e00 	rsb	lr, r4, #0
 80127f0:	fb06 5514 	mls	r5, r6, r4, r5
 80127f4:	f8c0 e004 	str.w	lr, [r0, #4]
 80127f8:	6085      	str	r5, [r0, #8]
 80127fa:	2d00      	cmp	r5, #0
 80127fc:	f43f af64 	beq.w	80126c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012800:	43e4      	mvns	r4, r4
 8012802:	6044      	str	r4, [r0, #4]
 8012804:	1b75      	subs	r5, r6, r5
 8012806:	e75e      	b.n	80126c6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012808:	3d800000 	.word	0x3d800000

0801280c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801280c:	4b01      	ldr	r3, [pc, #4]	@ (8012814 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801280e:	6018      	str	r0, [r3, #0]
 8012810:	4770      	bx	lr
 8012812:	bf00      	nop
 8012814:	20014064 	.word	0x20014064

08012818 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8012818:	4b06      	ldr	r3, [pc, #24]	@ (8012834 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801281a:	881a      	ldrh	r2, [r3, #0]
 801281c:	4282      	cmp	r2, r0
 801281e:	d807      	bhi.n	8012830 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012820:	4b05      	ldr	r3, [pc, #20]	@ (8012838 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012822:	881b      	ldrh	r3, [r3, #0]
 8012824:	4413      	add	r3, r2
 8012826:	4298      	cmp	r0, r3
 8012828:	bfac      	ite	ge
 801282a:	2000      	movge	r0, #0
 801282c:	2001      	movlt	r0, #1
 801282e:	4770      	bx	lr
 8012830:	2000      	movs	r0, #0
 8012832:	4770      	bx	lr
 8012834:	20014084 	.word	0x20014084
 8012838:	20014088 	.word	0x20014088

0801283c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801283c:	b508      	push	{r3, lr}
 801283e:	4601      	mov	r1, r0
 8012840:	f7ff ffea 	bl	8012818 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012844:	b118      	cbz	r0, 801284e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8012846:	4b02      	ldr	r3, [pc, #8]	@ (8012850 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8012848:	681b      	ldr	r3, [r3, #0]
 801284a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801284e:	bd08      	pop	{r3, pc}
 8012850:	20014068 	.word	0x20014068

08012854 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012854:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012856:	4c24      	ldr	r4, [pc, #144]	@ (80128e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012858:	6823      	ldr	r3, [r4, #0]
 801285a:	2b00      	cmp	r3, #0
 801285c:	d042      	beq.n	80128e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801285e:	4a23      	ldr	r2, [pc, #140]	@ (80128ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012860:	4d23      	ldr	r5, [pc, #140]	@ (80128f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8012862:	8811      	ldrh	r1, [r2, #0]
 8012864:	f8b5 c000 	ldrh.w	ip, [r5]
 8012868:	4822      	ldr	r0, [pc, #136]	@ (80128f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801286a:	4461      	add	r1, ip
 801286c:	1c4a      	adds	r2, r1, #1
 801286e:	f022 0201 	bic.w	r2, r2, #1
 8012872:	008f      	lsls	r7, r1, #2
 8012874:	0412      	lsls	r2, r2, #16
 8012876:	19de      	adds	r6, r3, r7
 8012878:	0c12      	lsrs	r2, r2, #16
 801287a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801287e:	6006      	str	r6, [r0, #0]
 8012880:	4e1d      	ldr	r6, [pc, #116]	@ (80128f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8012882:	19da      	adds	r2, r3, r7
 8012884:	6032      	str	r2, [r6, #0]
 8012886:	220e      	movs	r2, #14
 8012888:	fb02 f20c 	mul.w	r2, r2, ip
 801288c:	3203      	adds	r2, #3
 801288e:	f022 0203 	bic.w	r2, r2, #3
 8012892:	443a      	add	r2, r7
 8012894:	4f19      	ldr	r7, [pc, #100]	@ (80128fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8012896:	4413      	add	r3, r2
 8012898:	603b      	str	r3, [r7, #0]
 801289a:	4f19      	ldr	r7, [pc, #100]	@ (8012900 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801289c:	2300      	movs	r3, #0
 801289e:	803b      	strh	r3, [r7, #0]
 80128a0:	4f18      	ldr	r7, [pc, #96]	@ (8012904 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80128a2:	683f      	ldr	r7, [r7, #0]
 80128a4:	1aba      	subs	r2, r7, r2
 80128a6:	4f18      	ldr	r7, [pc, #96]	@ (8012908 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80128a8:	603a      	str	r2, [r7, #0]
 80128aa:	4a18      	ldr	r2, [pc, #96]	@ (801290c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80128ac:	469c      	mov	ip, r3
 80128ae:	8013      	strh	r3, [r2, #0]
 80128b0:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80128b4:	428b      	cmp	r3, r1
 80128b6:	d10d      	bne.n	80128d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80128b8:	882d      	ldrh	r5, [r5, #0]
 80128ba:	6830      	ldr	r0, [r6, #0]
 80128bc:	2300      	movs	r3, #0
 80128be:	240e      	movs	r4, #14
 80128c0:	429d      	cmp	r5, r3
 80128c2:	d90f      	bls.n	80128e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80128c4:	fb04 0203 	mla	r2, r4, r3, r0
 80128c8:	3301      	adds	r3, #1
 80128ca:	7b11      	ldrb	r1, [r2, #12]
 80128cc:	f36f 1145 	bfc	r1, #5, #1
 80128d0:	7311      	strb	r1, [r2, #12]
 80128d2:	e7f5      	b.n	80128c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80128d4:	6822      	ldr	r2, [r4, #0]
 80128d6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80128da:	6802      	ldr	r2, [r0, #0]
 80128dc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80128e0:	3301      	adds	r3, #1
 80128e2:	e7e7      	b.n	80128b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80128e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80128e6:	bf00      	nop
 80128e8:	20014068 	.word	0x20014068
 80128ec:	20014084 	.word	0x20014084
 80128f0:	20014088 	.word	0x20014088
 80128f4:	2001407c 	.word	0x2001407c
 80128f8:	2001406c 	.word	0x2001406c
 80128fc:	20014074 	.word	0x20014074
 8012900:	20014086 	.word	0x20014086
 8012904:	20014070 	.word	0x20014070
 8012908:	20014080 	.word	0x20014080
 801290c:	20014078 	.word	0x20014078

08012910 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012910:	4b06      	ldr	r3, [pc, #24]	@ (801292c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012912:	681b      	ldr	r3, [r3, #0]
 8012914:	b943      	cbnz	r3, 8012928 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012916:	b139      	cbz	r1, 8012928 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012918:	4b05      	ldr	r3, [pc, #20]	@ (8012930 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801291a:	801a      	strh	r2, [r3, #0]
 801291c:	4b05      	ldr	r3, [pc, #20]	@ (8012934 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801291e:	6019      	str	r1, [r3, #0]
 8012920:	4b05      	ldr	r3, [pc, #20]	@ (8012938 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012922:	6018      	str	r0, [r3, #0]
 8012924:	f7ff bf96 	b.w	8012854 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012928:	4770      	bx	lr
 801292a:	bf00      	nop
 801292c:	20014074 	.word	0x20014074
 8012930:	20014088 	.word	0x20014088
 8012934:	20014070 	.word	0x20014070
 8012938:	20014068 	.word	0x20014068

0801293c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801293c:	b470      	push	{r4, r5, r6}
 801293e:	4c07      	ldr	r4, [pc, #28]	@ (801295c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012940:	6826      	ldr	r6, [r4, #0]
 8012942:	4605      	mov	r5, r0
 8012944:	4610      	mov	r0, r2
 8012946:	9a03      	ldr	r2, [sp, #12]
 8012948:	b936      	cbnz	r6, 8012958 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801294a:	6025      	str	r5, [r4, #0]
 801294c:	4c04      	ldr	r4, [pc, #16]	@ (8012960 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801294e:	8021      	strh	r1, [r4, #0]
 8012950:	bc70      	pop	{r4, r5, r6}
 8012952:	4619      	mov	r1, r3
 8012954:	f7ff bfdc 	b.w	8012910 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8012958:	bc70      	pop	{r4, r5, r6}
 801295a:	4770      	bx	lr
 801295c:	2001408c 	.word	0x2001408c
 8012960:	20014084 	.word	0x20014084

08012964 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012964:	4a12      	ldr	r2, [pc, #72]	@ (80129b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8012966:	8803      	ldrh	r3, [r0, #0]
 8012968:	8812      	ldrh	r2, [r2, #0]
 801296a:	4293      	cmp	r3, r2
 801296c:	d207      	bcs.n	801297e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801296e:	4a11      	ldr	r2, [pc, #68]	@ (80129b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012970:	6812      	ldr	r2, [r2, #0]
 8012972:	2114      	movs	r1, #20
 8012974:	fb01 2303 	mla	r3, r1, r3, r2
 8012978:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801297c:	4770      	bx	lr
 801297e:	490e      	ldr	r1, [pc, #56]	@ (80129b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012980:	8809      	ldrh	r1, [r1, #0]
 8012982:	4411      	add	r1, r2
 8012984:	428b      	cmp	r3, r1
 8012986:	da04      	bge.n	8012992 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8012988:	1a9b      	subs	r3, r3, r2
 801298a:	4a0c      	ldr	r2, [pc, #48]	@ (80129bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801298c:	210e      	movs	r1, #14
 801298e:	6812      	ldr	r2, [r2, #0]
 8012990:	e7f0      	b.n	8012974 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012992:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012996:	4293      	cmp	r3, r2
 8012998:	d108      	bne.n	80129ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801299a:	4b09      	ldr	r3, [pc, #36]	@ (80129c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801299c:	781b      	ldrb	r3, [r3, #0]
 801299e:	b91b      	cbnz	r3, 80129a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80129a0:	4b08      	ldr	r3, [pc, #32]	@ (80129c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80129a2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80129a6:	4770      	bx	lr
 80129a8:	4b07      	ldr	r3, [pc, #28]	@ (80129c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80129aa:	e7fa      	b.n	80129a2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80129ac:	2000      	movs	r0, #0
 80129ae:	4770      	bx	lr
 80129b0:	20014084 	.word	0x20014084
 80129b4:	2001408c 	.word	0x2001408c
 80129b8:	20014088 	.word	0x20014088
 80129bc:	2001406c 	.word	0x2001406c
 80129c0:	20013ff2 	.word	0x20013ff2
 80129c4:	20013ff4 	.word	0x20013ff4
 80129c8:	20013ff6 	.word	0x20013ff6

080129cc <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80129cc:	4a12      	ldr	r2, [pc, #72]	@ (8012a18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80129ce:	8803      	ldrh	r3, [r0, #0]
 80129d0:	8812      	ldrh	r2, [r2, #0]
 80129d2:	4293      	cmp	r3, r2
 80129d4:	d207      	bcs.n	80129e6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80129d6:	4a11      	ldr	r2, [pc, #68]	@ (8012a1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80129d8:	6812      	ldr	r2, [r2, #0]
 80129da:	2114      	movs	r1, #20
 80129dc:	fb01 2303 	mla	r3, r1, r3, r2
 80129e0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80129e4:	4770      	bx	lr
 80129e6:	490e      	ldr	r1, [pc, #56]	@ (8012a20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80129e8:	8809      	ldrh	r1, [r1, #0]
 80129ea:	4411      	add	r1, r2
 80129ec:	428b      	cmp	r3, r1
 80129ee:	da04      	bge.n	80129fa <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80129f0:	1a9b      	subs	r3, r3, r2
 80129f2:	4a0c      	ldr	r2, [pc, #48]	@ (8012a24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80129f4:	210e      	movs	r1, #14
 80129f6:	6812      	ldr	r2, [r2, #0]
 80129f8:	e7f0      	b.n	80129dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80129fa:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80129fe:	4293      	cmp	r3, r2
 8012a00:	d108      	bne.n	8012a14 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012a02:	4b09      	ldr	r3, [pc, #36]	@ (8012a28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012a04:	781b      	ldrb	r3, [r3, #0]
 8012a06:	b91b      	cbnz	r3, 8012a10 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8012a08:	4b08      	ldr	r3, [pc, #32]	@ (8012a2c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8012a0a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012a0e:	4770      	bx	lr
 8012a10:	4b07      	ldr	r3, [pc, #28]	@ (8012a30 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012a12:	e7fa      	b.n	8012a0a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012a14:	2000      	movs	r0, #0
 8012a16:	4770      	bx	lr
 8012a18:	20014084 	.word	0x20014084
 8012a1c:	2001408c 	.word	0x2001408c
 8012a20:	20014088 	.word	0x20014088
 8012a24:	2001406c 	.word	0x2001406c
 8012a28:	20013ff2 	.word	0x20013ff2
 8012a2c:	20013ff6 	.word	0x20013ff6
 8012a30:	20013ff4 	.word	0x20013ff4

08012a34 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012a34:	b530      	push	{r4, r5, lr}
 8012a36:	4a22      	ldr	r2, [pc, #136]	@ (8012ac0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8012a38:	880b      	ldrh	r3, [r1, #0]
 8012a3a:	8812      	ldrh	r2, [r2, #0]
 8012a3c:	4293      	cmp	r3, r2
 8012a3e:	d213      	bcs.n	8012a68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8012a40:	4a20      	ldr	r2, [pc, #128]	@ (8012ac4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012a42:	6812      	ldr	r2, [r2, #0]
 8012a44:	2114      	movs	r1, #20
 8012a46:	fb01 2303 	mla	r3, r1, r3, r2
 8012a4a:	8a1a      	ldrh	r2, [r3, #16]
 8012a4c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8012a50:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012a54:	8a5b      	ldrh	r3, [r3, #18]
 8012a56:	8004      	strh	r4, [r0, #0]
 8012a58:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012a5c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012a60:	8041      	strh	r1, [r0, #2]
 8012a62:	8082      	strh	r2, [r0, #4]
 8012a64:	80c3      	strh	r3, [r0, #6]
 8012a66:	e024      	b.n	8012ab2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8012a68:	4917      	ldr	r1, [pc, #92]	@ (8012ac8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012a6a:	8809      	ldrh	r1, [r1, #0]
 8012a6c:	4411      	add	r1, r2
 8012a6e:	428b      	cmp	r3, r1
 8012a70:	da10      	bge.n	8012a94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8012a72:	1a9b      	subs	r3, r3, r2
 8012a74:	220e      	movs	r2, #14
 8012a76:	4353      	muls	r3, r2
 8012a78:	4a14      	ldr	r2, [pc, #80]	@ (8012acc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8012a7a:	6811      	ldr	r1, [r2, #0]
 8012a7c:	18ca      	adds	r2, r1, r3
 8012a7e:	5ecd      	ldrsh	r5, [r1, r3]
 8012a80:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8012a84:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8012a88:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8012a8c:	8005      	strh	r5, [r0, #0]
 8012a8e:	8044      	strh	r4, [r0, #2]
 8012a90:	8081      	strh	r1, [r0, #4]
 8012a92:	e7e7      	b.n	8012a64 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012a94:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012a98:	4293      	cmp	r3, r2
 8012a9a:	d10b      	bne.n	8012ab4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8012a9c:	4b0c      	ldr	r3, [pc, #48]	@ (8012ad0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8012a9e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012aa2:	4b0c      	ldr	r3, [pc, #48]	@ (8012ad4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8012aa4:	8081      	strh	r1, [r0, #4]
 8012aa6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012aaa:	80c2      	strh	r2, [r0, #6]
 8012aac:	2300      	movs	r3, #0
 8012aae:	8003      	strh	r3, [r0, #0]
 8012ab0:	8043      	strh	r3, [r0, #2]
 8012ab2:	bd30      	pop	{r4, r5, pc}
 8012ab4:	2300      	movs	r3, #0
 8012ab6:	8003      	strh	r3, [r0, #0]
 8012ab8:	8043      	strh	r3, [r0, #2]
 8012aba:	8083      	strh	r3, [r0, #4]
 8012abc:	e7d2      	b.n	8012a64 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012abe:	bf00      	nop
 8012ac0:	20014084 	.word	0x20014084
 8012ac4:	2001408c 	.word	0x2001408c
 8012ac8:	20014088 	.word	0x20014088
 8012acc:	2001406c 	.word	0x2001406c
 8012ad0:	20013fee 	.word	0x20013fee
 8012ad4:	20013ff0 	.word	0x20013ff0

08012ad8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8012ad8:	4a17      	ldr	r2, [pc, #92]	@ (8012b38 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8012ada:	8803      	ldrh	r3, [r0, #0]
 8012adc:	8812      	ldrh	r2, [r2, #0]
 8012ade:	4293      	cmp	r3, r2
 8012ae0:	d213      	bcs.n	8012b0a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8012ae2:	4a16      	ldr	r2, [pc, #88]	@ (8012b3c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8012ae4:	6812      	ldr	r2, [r2, #0]
 8012ae6:	2114      	movs	r1, #20
 8012ae8:	fb01 2303 	mla	r3, r1, r3, r2
 8012aec:	8a1a      	ldrh	r2, [r3, #16]
 8012aee:	8919      	ldrh	r1, [r3, #8]
 8012af0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012af4:	428a      	cmp	r2, r1
 8012af6:	db1d      	blt.n	8012b34 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012af8:	8a58      	ldrh	r0, [r3, #18]
 8012afa:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012afe:	895b      	ldrh	r3, [r3, #10]
 8012b00:	4298      	cmp	r0, r3
 8012b02:	bfac      	ite	ge
 8012b04:	2000      	movge	r0, #0
 8012b06:	2001      	movlt	r0, #1
 8012b08:	4770      	bx	lr
 8012b0a:	490d      	ldr	r1, [pc, #52]	@ (8012b40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8012b0c:	8809      	ldrh	r1, [r1, #0]
 8012b0e:	4411      	add	r1, r2
 8012b10:	428b      	cmp	r3, r1
 8012b12:	da0d      	bge.n	8012b30 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8012b14:	1a9b      	subs	r3, r3, r2
 8012b16:	4a0b      	ldr	r2, [pc, #44]	@ (8012b44 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8012b18:	6812      	ldr	r2, [r2, #0]
 8012b1a:	210e      	movs	r1, #14
 8012b1c:	fb01 2303 	mla	r3, r1, r3, r2
 8012b20:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012b24:	891a      	ldrh	r2, [r3, #8]
 8012b26:	4291      	cmp	r1, r2
 8012b28:	db04      	blt.n	8012b34 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012b2a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8012b2e:	e7e6      	b.n	8012afe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8012b30:	2000      	movs	r0, #0
 8012b32:	4770      	bx	lr
 8012b34:	2001      	movs	r0, #1
 8012b36:	4770      	bx	lr
 8012b38:	20014084 	.word	0x20014084
 8012b3c:	2001408c 	.word	0x2001408c
 8012b40:	20014088 	.word	0x20014088
 8012b44:	2001406c 	.word	0x2001406c

08012b48 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8012b48:	4a12      	ldr	r2, [pc, #72]	@ (8012b94 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8012b4a:	8803      	ldrh	r3, [r0, #0]
 8012b4c:	8811      	ldrh	r1, [r2, #0]
 8012b4e:	428b      	cmp	r3, r1
 8012b50:	d20b      	bcs.n	8012b6a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8012b52:	4a11      	ldr	r2, [pc, #68]	@ (8012b98 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012b54:	6812      	ldr	r2, [r2, #0]
 8012b56:	b112      	cbz	r2, 8012b5e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8012b58:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012b5c:	b9c0      	cbnz	r0, 8012b90 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012b5e:	4a0f      	ldr	r2, [pc, #60]	@ (8012b9c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012b60:	6811      	ldr	r1, [r2, #0]
 8012b62:	2214      	movs	r2, #20
 8012b64:	4353      	muls	r3, r2
 8012b66:	58c8      	ldr	r0, [r1, r3]
 8012b68:	4770      	bx	lr
 8012b6a:	4a0d      	ldr	r2, [pc, #52]	@ (8012ba0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012b6c:	8812      	ldrh	r2, [r2, #0]
 8012b6e:	440a      	add	r2, r1
 8012b70:	4293      	cmp	r3, r2
 8012b72:	da04      	bge.n	8012b7e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8012b74:	4a08      	ldr	r2, [pc, #32]	@ (8012b98 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012b76:	6812      	ldr	r2, [r2, #0]
 8012b78:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012b7c:	4770      	bx	lr
 8012b7e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012b82:	4293      	cmp	r3, r2
 8012b84:	d103      	bne.n	8012b8e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8012b86:	4b07      	ldr	r3, [pc, #28]	@ (8012ba4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8012b88:	681b      	ldr	r3, [r3, #0]
 8012b8a:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8012b8c:	4770      	bx	lr
 8012b8e:	2000      	movs	r0, #0
 8012b90:	4770      	bx	lr
 8012b92:	bf00      	nop
 8012b94:	20014084 	.word	0x20014084
 8012b98:	20014068 	.word	0x20014068
 8012b9c:	2001408c 	.word	0x2001408c
 8012ba0:	20014088 	.word	0x20014088
 8012ba4:	20013ffc 	.word	0x20013ffc

08012ba8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8012ba8:	4b24      	ldr	r3, [pc, #144]	@ (8012c3c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8012baa:	8802      	ldrh	r2, [r0, #0]
 8012bac:	8818      	ldrh	r0, [r3, #0]
 8012bae:	4282      	cmp	r2, r0
 8012bb0:	d221      	bcs.n	8012bf6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8012bb2:	4b23      	ldr	r3, [pc, #140]	@ (8012c40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8012bb4:	6819      	ldr	r1, [r3, #0]
 8012bb6:	2314      	movs	r3, #20
 8012bb8:	fb03 1302 	mla	r3, r3, r2, r1
 8012bbc:	6858      	ldr	r0, [r3, #4]
 8012bbe:	2800      	cmp	r0, #0
 8012bc0:	d03a      	beq.n	8012c38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012bc2:	4920      	ldr	r1, [pc, #128]	@ (8012c44 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012bc4:	6809      	ldr	r1, [r1, #0]
 8012bc6:	2900      	cmp	r1, #0
 8012bc8:	d036      	beq.n	8012c38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012bca:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8012bce:	2900      	cmp	r1, #0
 8012bd0:	d032      	beq.n	8012c38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012bd2:	891a      	ldrh	r2, [r3, #8]
 8012bd4:	8958      	ldrh	r0, [r3, #10]
 8012bd6:	4350      	muls	r0, r2
 8012bd8:	7c5a      	ldrb	r2, [r3, #17]
 8012bda:	7cdb      	ldrb	r3, [r3, #19]
 8012bdc:	0952      	lsrs	r2, r2, #5
 8012bde:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012be2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8012be6:	2b0b      	cmp	r3, #11
 8012be8:	bf18      	it	ne
 8012bea:	0040      	lslne	r0, r0, #1
 8012bec:	3003      	adds	r0, #3
 8012bee:	f020 0003 	bic.w	r0, r0, #3
 8012bf2:	4408      	add	r0, r1
 8012bf4:	4770      	bx	lr
 8012bf6:	4b14      	ldr	r3, [pc, #80]	@ (8012c48 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8012bf8:	881b      	ldrh	r3, [r3, #0]
 8012bfa:	4403      	add	r3, r0
 8012bfc:	429a      	cmp	r2, r3
 8012bfe:	da1a      	bge.n	8012c36 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012c00:	4b12      	ldr	r3, [pc, #72]	@ (8012c4c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012c02:	681b      	ldr	r3, [r3, #0]
 8012c04:	1a10      	subs	r0, r2, r0
 8012c06:	210e      	movs	r1, #14
 8012c08:	fb01 3000 	mla	r0, r1, r0, r3
 8012c0c:	7b03      	ldrb	r3, [r0, #12]
 8012c0e:	f003 031f 	and.w	r3, r3, #31
 8012c12:	2b0b      	cmp	r3, #11
 8012c14:	d10b      	bne.n	8012c2e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8012c16:	8903      	ldrh	r3, [r0, #8]
 8012c18:	8940      	ldrh	r0, [r0, #10]
 8012c1a:	4358      	muls	r0, r3
 8012c1c:	4b09      	ldr	r3, [pc, #36]	@ (8012c44 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012c1e:	6819      	ldr	r1, [r3, #0]
 8012c20:	3003      	adds	r0, #3
 8012c22:	f020 0303 	bic.w	r3, r0, #3
 8012c26:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8012c2a:	4418      	add	r0, r3
 8012c2c:	4770      	bx	lr
 8012c2e:	2b0d      	cmp	r3, #13
 8012c30:	d101      	bne.n	8012c36 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012c32:	300d      	adds	r0, #13
 8012c34:	4770      	bx	lr
 8012c36:	2000      	movs	r0, #0
 8012c38:	4770      	bx	lr
 8012c3a:	bf00      	nop
 8012c3c:	20014084 	.word	0x20014084
 8012c40:	2001408c 	.word	0x2001408c
 8012c44:	20014068 	.word	0x20014068
 8012c48:	20014088 	.word	0x20014088
 8012c4c:	2001406c 	.word	0x2001406c

08012c50 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8012c50:	b510      	push	{r4, lr}
 8012c52:	4b1f      	ldr	r3, [pc, #124]	@ (8012cd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8012c54:	8802      	ldrh	r2, [r0, #0]
 8012c56:	881b      	ldrh	r3, [r3, #0]
 8012c58:	429a      	cmp	r2, r3
 8012c5a:	d21a      	bcs.n	8012c92 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8012c5c:	4b1d      	ldr	r3, [pc, #116]	@ (8012cd4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8012c5e:	681b      	ldr	r3, [r3, #0]
 8012c60:	2114      	movs	r1, #20
 8012c62:	fb01 3102 	mla	r1, r1, r2, r3
 8012c66:	7c4b      	ldrb	r3, [r1, #17]
 8012c68:	0958      	lsrs	r0, r3, #5
 8012c6a:	7ccb      	ldrb	r3, [r1, #19]
 8012c6c:	491a      	ldr	r1, [pc, #104]	@ (8012cd8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8012c6e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012c72:	6809      	ldr	r1, [r1, #0]
 8012c74:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8012c78:	b2d8      	uxtb	r0, r3
 8012c7a:	b149      	cbz	r1, 8012c90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012c7c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8012c80:	b132      	cbz	r2, 8012c90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012c82:	2b0e      	cmp	r3, #14
 8012c84:	d021      	beq.n	8012cca <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012c86:	280f      	cmp	r0, #15
 8012c88:	d01d      	beq.n	8012cc6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8012c8a:	2810      	cmp	r0, #16
 8012c8c:	bf08      	it	eq
 8012c8e:	2002      	moveq	r0, #2
 8012c90:	bd10      	pop	{r4, pc}
 8012c92:	4912      	ldr	r1, [pc, #72]	@ (8012cdc <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8012c94:	8809      	ldrh	r1, [r1, #0]
 8012c96:	4419      	add	r1, r3
 8012c98:	428a      	cmp	r2, r1
 8012c9a:	da09      	bge.n	8012cb0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8012c9c:	1ad3      	subs	r3, r2, r3
 8012c9e:	4a10      	ldr	r2, [pc, #64]	@ (8012ce0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8012ca0:	6812      	ldr	r2, [r2, #0]
 8012ca2:	210e      	movs	r1, #14
 8012ca4:	fb01 2303 	mla	r3, r1, r3, r2
 8012ca8:	7b18      	ldrb	r0, [r3, #12]
 8012caa:	f000 001f 	and.w	r0, r0, #31
 8012cae:	e7ef      	b.n	8012c90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012cb0:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8012cb4:	429a      	cmp	r2, r3
 8012cb6:	d108      	bne.n	8012cca <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012cb8:	f7ef feb2 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 8012cbc:	6803      	ldr	r3, [r0, #0]
 8012cbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012cc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012cc4:	4718      	bx	r3
 8012cc6:	2001      	movs	r0, #1
 8012cc8:	e7e2      	b.n	8012c90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012cca:	2000      	movs	r0, #0
 8012ccc:	e7e0      	b.n	8012c90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012cce:	bf00      	nop
 8012cd0:	20014084 	.word	0x20014084
 8012cd4:	2001408c 	.word	0x2001408c
 8012cd8:	20014068 	.word	0x20014068
 8012cdc:	20014088 	.word	0x20014088
 8012ce0:	2001406c 	.word	0x2001406c

08012ce4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8012ce4:	2010      	movs	r0, #16
 8012ce6:	4770      	bx	lr

08012ce8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8012ce8:	2000      	movs	r0, #0
 8012cea:	4770      	bx	lr

08012cec <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012cec:	4b02      	ldr	r3, [pc, #8]	@ (8012cf8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8012cee:	8818      	ldrh	r0, [r3, #0]
 8012cf0:	0040      	lsls	r0, r0, #1
 8012cf2:	b280      	uxth	r0, r0
 8012cf4:	4770      	bx	lr
 8012cf6:	bf00      	nop
 8012cf8:	20013ff4 	.word	0x20013ff4

08012cfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8012cfc:	2bff      	cmp	r3, #255	@ 0xff
 8012cfe:	d05e      	beq.n	8012dbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8012d00:	2a0b      	cmp	r2, #11
 8012d02:	d058      	beq.n	8012db6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012d04:	d80e      	bhi.n	8012d24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8012d06:	2a03      	cmp	r2, #3
 8012d08:	d04d      	beq.n	8012da6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8012d0a:	d804      	bhi.n	8012d16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8012d0c:	2a01      	cmp	r2, #1
 8012d0e:	d04c      	beq.n	8012daa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8012d10:	d94d      	bls.n	8012dae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8012d12:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8012d14:	e031      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d16:	2a09      	cmp	r2, #9
 8012d18:	d04d      	beq.n	8012db6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012d1a:	d84a      	bhi.n	8012db2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012d1c:	2a08      	cmp	r2, #8
 8012d1e:	d048      	beq.n	8012db2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012d20:	2300      	movs	r3, #0
 8012d22:	e02a      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d24:	2a2f      	cmp	r2, #47	@ 0x2f
 8012d26:	d02c      	beq.n	8012d82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8012d28:	d811      	bhi.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8012d2a:	2a2d      	cmp	r2, #45	@ 0x2d
 8012d2c:	d018      	beq.n	8012d60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8012d2e:	d831      	bhi.n	8012d94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8012d30:	2a2c      	cmp	r2, #44	@ 0x2c
 8012d32:	d1f5      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d34:	684a      	ldr	r2, [r1, #4]
 8012d36:	7813      	ldrb	r3, [r2, #0]
 8012d38:	7852      	ldrb	r2, [r2, #1]
 8012d3a:	2a00      	cmp	r2, #0
 8012d3c:	d1f0      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d3e:	2b01      	cmp	r3, #1
 8012d40:	d01d      	beq.n	8012d7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8012d42:	2b00      	cmp	r3, #0
 8012d44:	d02d      	beq.n	8012da2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8012d46:	2b02      	cmp	r3, #2
 8012d48:	d1ea      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d4a:	68c3      	ldr	r3, [r0, #12]
 8012d4c:	e015      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d4e:	2a31      	cmp	r2, #49	@ 0x31
 8012d50:	d004      	beq.n	8012d5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8012d52:	d332      	bcc.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012d54:	2a32      	cmp	r2, #50	@ 0x32
 8012d56:	d030      	beq.n	8012dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012d58:	2a33      	cmp	r2, #51	@ 0x33
 8012d5a:	d1e1      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d5c:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8012d5e:	e00c      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d60:	684a      	ldr	r2, [r1, #4]
 8012d62:	7813      	ldrb	r3, [r2, #0]
 8012d64:	7852      	ldrb	r2, [r2, #1]
 8012d66:	2a00      	cmp	r2, #0
 8012d68:	d1da      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d6a:	2b01      	cmp	r3, #1
 8012d6c:	d004      	beq.n	8012d78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8012d6e:	d30f      	bcc.n	8012d90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8012d70:	2b02      	cmp	r3, #2
 8012d72:	d1d5      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d74:	6943      	ldr	r3, [r0, #20]
 8012d76:	e000      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d78:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012d7a:	4618      	mov	r0, r3
 8012d7c:	4770      	bx	lr
 8012d7e:	69c3      	ldr	r3, [r0, #28]
 8012d80:	e7fb      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d82:	684b      	ldr	r3, [r1, #4]
 8012d84:	781a      	ldrb	r2, [r3, #0]
 8012d86:	785b      	ldrb	r3, [r3, #1]
 8012d88:	2b00      	cmp	r3, #0
 8012d8a:	d1c9      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d8c:	2a00      	cmp	r2, #0
 8012d8e:	d1f4      	bne.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d90:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8012d92:	e7f2      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d94:	684b      	ldr	r3, [r1, #4]
 8012d96:	781a      	ldrb	r2, [r3, #0]
 8012d98:	785b      	ldrb	r3, [r3, #1]
 8012d9a:	2b00      	cmp	r3, #0
 8012d9c:	d1c0      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d9e:	2a00      	cmp	r2, #0
 8012da0:	d1eb      	bne.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012da2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012da4:	e7e9      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012da6:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8012da8:	e7e7      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012daa:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8012dac:	e7e5      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dae:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8012db0:	e7e3      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012db2:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8012db4:	e7e1      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012db6:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8012db8:	e7df      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dba:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8012dbc:	e7dd      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dbe:	2a0b      	cmp	r2, #11
 8012dc0:	d059      	beq.n	8012e76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012dc2:	d80e      	bhi.n	8012de2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8012dc4:	2a03      	cmp	r2, #3
 8012dc6:	d050      	beq.n	8012e6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8012dc8:	d804      	bhi.n	8012dd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8012dca:	2a01      	cmp	r2, #1
 8012dcc:	d04f      	beq.n	8012e6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8012dce:	d950      	bls.n	8012e72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8012dd0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8012dd2:	e7d2      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dd4:	2a09      	cmp	r2, #9
 8012dd6:	d04e      	beq.n	8012e76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012dd8:	d801      	bhi.n	8012dde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8012dda:	2a08      	cmp	r2, #8
 8012ddc:	d1a0      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012dde:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8012de0:	e7cb      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012de2:	2a2f      	cmp	r2, #47	@ 0x2f
 8012de4:	d02d      	beq.n	8012e42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8012de6:	d811      	bhi.n	8012e0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8012de8:	2a2d      	cmp	r2, #45	@ 0x2d
 8012dea:	d018      	beq.n	8012e1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8012dec:	d833      	bhi.n	8012e56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8012dee:	2a2c      	cmp	r2, #44	@ 0x2c
 8012df0:	d196      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012df2:	684a      	ldr	r2, [r1, #4]
 8012df4:	7813      	ldrb	r3, [r2, #0]
 8012df6:	7852      	ldrb	r2, [r2, #1]
 8012df8:	2a00      	cmp	r2, #0
 8012dfa:	d191      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012dfc:	2b01      	cmp	r3, #1
 8012dfe:	d01e      	beq.n	8012e3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8012e00:	2b00      	cmp	r3, #0
 8012e02:	d030      	beq.n	8012e66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8012e04:	2b02      	cmp	r3, #2
 8012e06:	d18b      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e08:	6903      	ldr	r3, [r0, #16]
 8012e0a:	e7b6      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e0c:	2a31      	cmp	r2, #49	@ 0x31
 8012e0e:	d004      	beq.n	8012e1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8012e10:	d333      	bcc.n	8012e7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8012e12:	2a32      	cmp	r2, #50	@ 0x32
 8012e14:	d031      	beq.n	8012e7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8012e16:	2a33      	cmp	r2, #51	@ 0x33
 8012e18:	d182      	bne.n	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e1a:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8012e1c:	e7ad      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e1e:	684a      	ldr	r2, [r1, #4]
 8012e20:	7813      	ldrb	r3, [r2, #0]
 8012e22:	7852      	ldrb	r2, [r2, #1]
 8012e24:	2a00      	cmp	r2, #0
 8012e26:	f47f af7b 	bne.w	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e2a:	2b01      	cmp	r3, #1
 8012e2c:	d005      	beq.n	8012e3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8012e2e:	d310      	bcc.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8012e30:	2b02      	cmp	r3, #2
 8012e32:	f47f af75 	bne.w	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e36:	6983      	ldr	r3, [r0, #24]
 8012e38:	e79f      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e3a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8012e3c:	e79d      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e3e:	6a03      	ldr	r3, [r0, #32]
 8012e40:	e79b      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e42:	684b      	ldr	r3, [r1, #4]
 8012e44:	781a      	ldrb	r2, [r3, #0]
 8012e46:	785b      	ldrb	r3, [r3, #1]
 8012e48:	2b00      	cmp	r3, #0
 8012e4a:	f47f af69 	bne.w	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e4e:	2a00      	cmp	r2, #0
 8012e50:	d193      	bne.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e52:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8012e54:	e791      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e56:	684b      	ldr	r3, [r1, #4]
 8012e58:	781a      	ldrb	r2, [r3, #0]
 8012e5a:	785b      	ldrb	r3, [r3, #1]
 8012e5c:	2b00      	cmp	r3, #0
 8012e5e:	f47f af5f 	bne.w	8012d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e62:	2a00      	cmp	r2, #0
 8012e64:	d189      	bne.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e66:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8012e68:	e787      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e6a:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8012e6c:	e785      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e6e:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8012e70:	e783      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e72:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8012e74:	e781      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e76:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8012e78:	e77f      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e7a:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8012e7c:	e77d      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08012e7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012e7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e82:	b087      	sub	sp, #28
 8012e84:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8012e86:	9205      	str	r2, [sp, #20]
 8012e88:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012e8c:	9202      	str	r2, [sp, #8]
 8012e8e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8012e92:	9101      	str	r1, [sp, #4]
 8012e94:	6841      	ldr	r1, [r0, #4]
 8012e96:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8012e9a:	fb01 2404 	mla	r4, r1, r4, r2
 8012e9e:	6802      	ldr	r2, [r0, #0]
 8012ea0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012ea4:	f8de 2000 	ldr.w	r2, [lr]
 8012ea8:	9203      	str	r2, [sp, #12]
 8012eaa:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012eae:	3204      	adds	r2, #4
 8012eb0:	9204      	str	r2, [sp, #16]
 8012eb2:	9a02      	ldr	r2, [sp, #8]
 8012eb4:	43d6      	mvns	r6, r2
 8012eb6:	b2f6      	uxtb	r6, r6
 8012eb8:	9a01      	ldr	r2, [sp, #4]
 8012eba:	2a00      	cmp	r2, #0
 8012ebc:	dc03      	bgt.n	8012ec6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012ebe:	9a05      	ldr	r2, [sp, #20]
 8012ec0:	2a00      	cmp	r2, #0
 8012ec2:	f340 8129 	ble.w	8013118 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8012ec6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012ec8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8012ecc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8012ed0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012ed4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012ed6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012eda:	2b00      	cmp	r3, #0
 8012edc:	dd0e      	ble.n	8012efc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012ede:	1408      	asrs	r0, r1, #16
 8012ee0:	d405      	bmi.n	8012eee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012ee2:	4560      	cmp	r0, ip
 8012ee4:	da03      	bge.n	8012eee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012ee6:	1410      	asrs	r0, r2, #16
 8012ee8:	d401      	bmi.n	8012eee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012eea:	42b8      	cmp	r0, r7
 8012eec:	db07      	blt.n	8012efe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012eee:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012ef0:	4401      	add	r1, r0
 8012ef2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012ef4:	3b01      	subs	r3, #1
 8012ef6:	4402      	add	r2, r0
 8012ef8:	3402      	adds	r4, #2
 8012efa:	e7ee      	b.n	8012eda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8012efc:	d071      	beq.n	8012fe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012efe:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012f00:	1e58      	subs	r0, r3, #1
 8012f02:	fb05 1500 	mla	r5, r5, r0, r1
 8012f06:	142d      	asrs	r5, r5, #16
 8012f08:	d45f      	bmi.n	8012fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012f0a:	4565      	cmp	r5, ip
 8012f0c:	da5d      	bge.n	8012fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012f0e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8012f10:	fb05 2000 	mla	r0, r5, r0, r2
 8012f14:	1400      	asrs	r0, r0, #16
 8012f16:	d458      	bmi.n	8012fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012f18:	42b8      	cmp	r0, r7
 8012f1a:	da56      	bge.n	8012fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012f1c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8012f20:	4699      	mov	r9, r3
 8012f22:	46a2      	mov	sl, r4
 8012f24:	f1b9 0f00 	cmp.w	r9, #0
 8012f28:	dd57      	ble.n	8012fda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8012f2a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012f2e:	9803      	ldr	r0, [sp, #12]
 8012f30:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8012f34:	140d      	asrs	r5, r1, #16
 8012f36:	fb07 000c 	mla	r0, r7, ip, r0
 8012f3a:	f109 39ff 	add.w	r9, r9, #4294967295
 8012f3e:	5d40      	ldrb	r0, [r0, r5]
 8012f40:	9d04      	ldr	r5, [sp, #16]
 8012f42:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012f46:	f8ba 5000 	ldrh.w	r5, [sl]
 8012f4a:	122f      	asrs	r7, r5, #8
 8012f4c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012f50:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012f54:	fb17 f706 	smulbb	r7, r7, r6
 8012f58:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012f5c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012f60:	00ed      	lsls	r5, r5, #3
 8012f62:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012f66:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8012f6a:	10c7      	asrs	r7, r0, #3
 8012f6c:	b2ed      	uxtb	r5, r5
 8012f6e:	00c0      	lsls	r0, r0, #3
 8012f70:	fb18 f806 	smulbb	r8, r8, r6
 8012f74:	fb15 f506 	smulbb	r5, r5, r6
 8012f78:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012f7c:	b2c0      	uxtb	r0, r0
 8012f7e:	fa1f fc8c 	uxth.w	ip, ip
 8012f82:	fb07 870b 	mla	r7, r7, fp, r8
 8012f86:	fb00 500b 	mla	r0, r0, fp, r5
 8012f8a:	b280      	uxth	r0, r0
 8012f8c:	b2bf      	uxth	r7, r7
 8012f8e:	f10c 0501 	add.w	r5, ip, #1
 8012f92:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012f96:	f107 0801 	add.w	r8, r7, #1
 8012f9a:	1c45      	adds	r5, r0, #1
 8012f9c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012fa0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8012fa4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012fa6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012faa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012fae:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012fb2:	ea45 0c0c 	orr.w	ip, r5, ip
 8012fb6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8012fba:	4401      	add	r1, r0
 8012fbc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012fbe:	ea4c 0c08 	orr.w	ip, ip, r8
 8012fc2:	f82a cb02 	strh.w	ip, [sl], #2
 8012fc6:	4402      	add	r2, r0
 8012fc8:	e7ac      	b.n	8012f24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012fca:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8012fce:	f04f 0800 	mov.w	r8, #0
 8012fd2:	eb03 0008 	add.w	r0, r3, r8
 8012fd6:	2800      	cmp	r0, #0
 8012fd8:	dc41      	bgt.n	801305e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8012fda:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012fde:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012fe2:	9b01      	ldr	r3, [sp, #4]
 8012fe4:	2b00      	cmp	r3, #0
 8012fe6:	f340 8097 	ble.w	8013118 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8012fea:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012fee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012ff2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012ff6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012ff8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012ffc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013000:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013004:	eef0 6a62 	vmov.f32	s13, s5
 8013008:	ee61 7a27 	vmul.f32	s15, s2, s15
 801300c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013010:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013014:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013018:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801301c:	eef0 6a43 	vmov.f32	s13, s6
 8013020:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013024:	ee12 2a90 	vmov	r2, s5
 8013028:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801302c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013030:	ee13 2a10 	vmov	r2, s6
 8013034:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013036:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013038:	fb92 f3f3 	sdiv	r3, r2, r3
 801303c:	9314      	str	r3, [sp, #80]	@ 0x50
 801303e:	9b01      	ldr	r3, [sp, #4]
 8013040:	9a05      	ldr	r2, [sp, #20]
 8013042:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013046:	3b01      	subs	r3, #1
 8013048:	9301      	str	r3, [sp, #4]
 801304a:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801304e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013050:	eeb0 3a67 	vmov.f32	s6, s15
 8013054:	bf08      	it	eq
 8013056:	4613      	moveq	r3, r2
 8013058:	eef0 2a47 	vmov.f32	s5, s14
 801305c:	e72c      	b.n	8012eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801305e:	140f      	asrs	r7, r1, #16
 8013060:	d453      	bmi.n	801310a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013062:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013066:	42bd      	cmp	r5, r7
 8013068:	dd4f      	ble.n	801310a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801306a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801306e:	d44c      	bmi.n	801310a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013070:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013074:	4560      	cmp	r0, ip
 8013076:	dd48      	ble.n	801310a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013078:	9803      	ldr	r0, [sp, #12]
 801307a:	b22d      	sxth	r5, r5
 801307c:	fb0c 0505 	mla	r5, ip, r5, r0
 8013080:	5de8      	ldrb	r0, [r5, r7]
 8013082:	9d04      	ldr	r5, [sp, #16]
 8013084:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013088:	f06f 0501 	mvn.w	r5, #1
 801308c:	fb05 fb08 	mul.w	fp, r5, r8
 8013090:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013094:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013098:	122f      	asrs	r7, r5, #8
 801309a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801309e:	fb17 f706 	smulbb	r7, r7, r6
 80130a2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80130a6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80130aa:	00ed      	lsls	r5, r5, #3
 80130ac:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80130b0:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80130b4:	10c7      	asrs	r7, r0, #3
 80130b6:	b2ed      	uxtb	r5, r5
 80130b8:	00c0      	lsls	r0, r0, #3
 80130ba:	fb19 f906 	smulbb	r9, r9, r6
 80130be:	fb15 f506 	smulbb	r5, r5, r6
 80130c2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80130c6:	b2c0      	uxtb	r0, r0
 80130c8:	fa1f fc8c 	uxth.w	ip, ip
 80130cc:	fb07 970a 	mla	r7, r7, sl, r9
 80130d0:	fb00 500a 	mla	r0, r0, sl, r5
 80130d4:	b2bf      	uxth	r7, r7
 80130d6:	b280      	uxth	r0, r0
 80130d8:	f10c 0501 	add.w	r5, ip, #1
 80130dc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80130e0:	f107 0901 	add.w	r9, r7, #1
 80130e4:	1c45      	adds	r5, r0, #1
 80130e6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80130ea:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80130ee:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80130f2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80130f6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80130fa:	ea45 0c0c 	orr.w	ip, r5, ip
 80130fe:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013102:	ea4c 0c09 	orr.w	ip, ip, r9
 8013106:	f824 c00b 	strh.w	ip, [r4, fp]
 801310a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801310c:	4401      	add	r1, r0
 801310e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013110:	f108 38ff 	add.w	r8, r8, #4294967295
 8013114:	4402      	add	r2, r0
 8013116:	e75c      	b.n	8012fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013118:	b007      	add	sp, #28
 801311a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801311e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801311e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013122:	b085      	sub	sp, #20
 8013124:	4693      	mov	fp, r2
 8013126:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013128:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801312a:	6870      	ldr	r0, [r6, #4]
 801312c:	9100      	str	r1, [sp, #0]
 801312e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013132:	fb00 2404 	mla	r4, r0, r4, r2
 8013136:	6832      	ldr	r2, [r6, #0]
 8013138:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801313c:	682a      	ldr	r2, [r5, #0]
 801313e:	9201      	str	r2, [sp, #4]
 8013140:	686a      	ldr	r2, [r5, #4]
 8013142:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8013146:	3204      	adds	r2, #4
 8013148:	9202      	str	r2, [sp, #8]
 801314a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801314e:	9a00      	ldr	r2, [sp, #0]
 8013150:	2a00      	cmp	r2, #0
 8013152:	dc03      	bgt.n	801315c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013154:	f1bb 0f00 	cmp.w	fp, #0
 8013158:	f340 80a0 	ble.w	801329c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801315c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801315e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013162:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013166:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801316a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801316c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013170:	2b00      	cmp	r3, #0
 8013172:	dd0c      	ble.n	801318e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013174:	1406      	asrs	r6, r0, #16
 8013176:	d405      	bmi.n	8013184 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013178:	454e      	cmp	r6, r9
 801317a:	da03      	bge.n	8013184 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801317c:	1416      	asrs	r6, r2, #16
 801317e:	d401      	bmi.n	8013184 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013180:	4546      	cmp	r6, r8
 8013182:	db05      	blt.n	8013190 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013184:	4470      	add	r0, lr
 8013186:	4462      	add	r2, ip
 8013188:	3b01      	subs	r3, #1
 801318a:	3402      	adds	r4, #2
 801318c:	e7f0      	b.n	8013170 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801318e:	d00f      	beq.n	80131b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013190:	1e5e      	subs	r6, r3, #1
 8013192:	fb0e 0706 	mla	r7, lr, r6, r0
 8013196:	143f      	asrs	r7, r7, #16
 8013198:	d541      	bpl.n	801321e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801319a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801319e:	4698      	mov	r8, r3
 80131a0:	9603      	str	r6, [sp, #12]
 80131a2:	f1b8 0f00 	cmp.w	r8, #0
 80131a6:	dc59      	bgt.n	801325c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80131a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80131ac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80131b0:	9b00      	ldr	r3, [sp, #0]
 80131b2:	2b00      	cmp	r3, #0
 80131b4:	dd72      	ble.n	801329c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80131b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80131ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80131be:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80131c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80131c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80131c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80131cc:	eeb0 6a62 	vmov.f32	s12, s5
 80131d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80131d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80131d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80131dc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80131e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80131e4:	eeb0 6a43 	vmov.f32	s12, s6
 80131e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80131ec:	ee12 2a90 	vmov	r2, s5
 80131f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80131f4:	fb92 fef3 	sdiv	lr, r2, r3
 80131f8:	ee13 2a10 	vmov	r2, s6
 80131fc:	fb92 fcf3 	sdiv	ip, r2, r3
 8013200:	9b00      	ldr	r3, [sp, #0]
 8013202:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013206:	3b01      	subs	r3, #1
 8013208:	9300      	str	r3, [sp, #0]
 801320a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801320e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013210:	eeb0 3a67 	vmov.f32	s6, s15
 8013214:	bf08      	it	eq
 8013216:	465b      	moveq	r3, fp
 8013218:	eef0 2a47 	vmov.f32	s5, s14
 801321c:	e797      	b.n	801314e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801321e:	454f      	cmp	r7, r9
 8013220:	dabb      	bge.n	801319a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013222:	fb0c 2606 	mla	r6, ip, r6, r2
 8013226:	1436      	asrs	r6, r6, #16
 8013228:	d4b7      	bmi.n	801319a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801322a:	4546      	cmp	r6, r8
 801322c:	dab5      	bge.n	801319a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801322e:	461e      	mov	r6, r3
 8013230:	46a0      	mov	r8, r4
 8013232:	2e00      	cmp	r6, #0
 8013234:	ddb8      	ble.n	80131a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013236:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801323a:	9901      	ldr	r1, [sp, #4]
 801323c:	1417      	asrs	r7, r2, #16
 801323e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013242:	fb0a 1707 	mla	r7, sl, r7, r1
 8013246:	9902      	ldr	r1, [sp, #8]
 8013248:	f817 7009 	ldrb.w	r7, [r7, r9]
 801324c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013250:	f828 7b02 	strh.w	r7, [r8], #2
 8013254:	4470      	add	r0, lr
 8013256:	4462      	add	r2, ip
 8013258:	3e01      	subs	r6, #1
 801325a:	e7ea      	b.n	8013232 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801325c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013260:	d417      	bmi.n	8013292 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013262:	68ae      	ldr	r6, [r5, #8]
 8013264:	454e      	cmp	r6, r9
 8013266:	dd14      	ble.n	8013292 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013268:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801326c:	d411      	bmi.n	8013292 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801326e:	68ef      	ldr	r7, [r5, #12]
 8013270:	4557      	cmp	r7, sl
 8013272:	dd0e      	ble.n	8013292 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013274:	9f01      	ldr	r7, [sp, #4]
 8013276:	b236      	sxth	r6, r6
 8013278:	fb0a 7606 	mla	r6, sl, r6, r7
 801327c:	9f02      	ldr	r7, [sp, #8]
 801327e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8013282:	f06f 0101 	mvn.w	r1, #1
 8013286:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801328a:	fb01 f608 	mul.w	r6, r1, r8
 801328e:	9903      	ldr	r1, [sp, #12]
 8013290:	538f      	strh	r7, [r1, r6]
 8013292:	4470      	add	r0, lr
 8013294:	4462      	add	r2, ip
 8013296:	f108 38ff 	add.w	r8, r8, #4294967295
 801329a:	e782      	b.n	80131a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801329c:	b005      	add	sp, #20
 801329e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080132a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80132a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132a6:	b087      	sub	sp, #28
 80132a8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80132aa:	9205      	str	r2, [sp, #20]
 80132ac:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80132b0:	9203      	str	r2, [sp, #12]
 80132b2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80132b6:	9102      	str	r1, [sp, #8]
 80132b8:	6861      	ldr	r1, [r4, #4]
 80132ba:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80132be:	fb01 2000 	mla	r0, r1, r0, r2
 80132c2:	6822      	ldr	r2, [r4, #0]
 80132c4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80132c8:	9200      	str	r2, [sp, #0]
 80132ca:	f8dc 2000 	ldr.w	r2, [ip]
 80132ce:	9204      	str	r2, [sp, #16]
 80132d0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80132d4:	3204      	adds	r2, #4
 80132d6:	9201      	str	r2, [sp, #4]
 80132d8:	9a03      	ldr	r2, [sp, #12]
 80132da:	43d5      	mvns	r5, r2
 80132dc:	b2ed      	uxtb	r5, r5
 80132de:	9a02      	ldr	r2, [sp, #8]
 80132e0:	2a00      	cmp	r2, #0
 80132e2:	dc03      	bgt.n	80132ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80132e4:	9a05      	ldr	r2, [sp, #20]
 80132e6:	2a00      	cmp	r2, #0
 80132e8:	f340 812c 	ble.w	8013544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80132ec:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80132ee:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80132f2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80132f6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80132fa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80132fc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013300:	2b00      	cmp	r3, #0
 8013302:	dd10      	ble.n	8013326 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013304:	140c      	asrs	r4, r1, #16
 8013306:	d405      	bmi.n	8013314 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013308:	4574      	cmp	r4, lr
 801330a:	da03      	bge.n	8013314 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801330c:	1414      	asrs	r4, r2, #16
 801330e:	d401      	bmi.n	8013314 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013310:	42bc      	cmp	r4, r7
 8013312:	db09      	blt.n	8013328 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013314:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013316:	9800      	ldr	r0, [sp, #0]
 8013318:	4421      	add	r1, r4
 801331a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801331c:	3002      	adds	r0, #2
 801331e:	4422      	add	r2, r4
 8013320:	3b01      	subs	r3, #1
 8013322:	9000      	str	r0, [sp, #0]
 8013324:	e7ec      	b.n	8013300 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013326:	d071      	beq.n	801340c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013328:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801332a:	1e5c      	subs	r4, r3, #1
 801332c:	fb06 1604 	mla	r6, r6, r4, r1
 8013330:	1436      	asrs	r6, r6, #16
 8013332:	d45d      	bmi.n	80133f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013334:	4576      	cmp	r6, lr
 8013336:	da5b      	bge.n	80133f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013338:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801333a:	fb06 2404 	mla	r4, r6, r4, r2
 801333e:	1424      	asrs	r4, r4, #16
 8013340:	d456      	bmi.n	80133f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013342:	42bc      	cmp	r4, r7
 8013344:	da54      	bge.n	80133f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013346:	f8dd 9000 	ldr.w	r9, [sp]
 801334a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801334e:	4698      	mov	r8, r3
 8013350:	f1b8 0f00 	cmp.w	r8, #0
 8013354:	dd54      	ble.n	8013400 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013356:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801335a:	9804      	ldr	r0, [sp, #16]
 801335c:	1414      	asrs	r4, r2, #16
 801335e:	fb07 0404 	mla	r4, r7, r4, r0
 8013362:	140e      	asrs	r6, r1, #16
 8013364:	9801      	ldr	r0, [sp, #4]
 8013366:	f814 e006 	ldrb.w	lr, [r4, r6]
 801336a:	f8b9 4000 	ldrh.w	r4, [r9]
 801336e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013372:	eb00 0b0e 	add.w	fp, r0, lr
 8013376:	1227      	asrs	r7, r4, #8
 8013378:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801337c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013380:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013384:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013386:	fb16 f60a 	smulbb	r6, r6, sl
 801338a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801338e:	fb07 6705 	mla	r7, r7, r5, r6
 8013392:	10e6      	asrs	r6, r4, #3
 8013394:	00e4      	lsls	r4, r4, #3
 8013396:	b2e4      	uxtb	r4, r4
 8013398:	fb1b fb0a 	smulbb	fp, fp, sl
 801339c:	fb14 f405 	smulbb	r4, r4, r5
 80133a0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80133a4:	b2bf      	uxth	r7, r7
 80133a6:	fb06 b605 	mla	r6, r6, r5, fp
 80133aa:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80133ae:	b2b6      	uxth	r6, r6
 80133b0:	fa1f fe8e 	uxth.w	lr, lr
 80133b4:	1c7c      	adds	r4, r7, #1
 80133b6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80133ba:	f106 0b01 	add.w	fp, r6, #1
 80133be:	f10e 0401 	add.w	r4, lr, #1
 80133c2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80133c6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80133ca:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80133ce:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80133d2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80133d6:	4327      	orrs	r7, r4
 80133d8:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80133dc:	4401      	add	r1, r0
 80133de:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80133e0:	ea47 070b 	orr.w	r7, r7, fp
 80133e4:	f829 7b02 	strh.w	r7, [r9], #2
 80133e8:	4402      	add	r2, r0
 80133ea:	f108 38ff 	add.w	r8, r8, #4294967295
 80133ee:	e7af      	b.n	8013350 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80133f0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80133f4:	f04f 0e00 	mov.w	lr, #0
 80133f8:	eb03 040e 	add.w	r4, r3, lr
 80133fc:	2c00      	cmp	r4, #0
 80133fe:	dc43      	bgt.n	8013488 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8013400:	9a00      	ldr	r2, [sp, #0]
 8013402:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013406:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801340a:	9300      	str	r3, [sp, #0]
 801340c:	9b02      	ldr	r3, [sp, #8]
 801340e:	2b00      	cmp	r3, #0
 8013410:	f340 8098 	ble.w	8013544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013414:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013418:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801341c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013420:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013422:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013426:	ee31 1a05 	vadd.f32	s2, s2, s10
 801342a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801342e:	eef0 6a62 	vmov.f32	s13, s5
 8013432:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013436:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801343a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801343e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013442:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013446:	eef0 6a43 	vmov.f32	s13, s6
 801344a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801344e:	ee12 2a90 	vmov	r2, s5
 8013452:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013456:	fb92 f3f3 	sdiv	r3, r2, r3
 801345a:	ee13 2a10 	vmov	r2, s6
 801345e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013460:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013462:	fb92 f3f3 	sdiv	r3, r2, r3
 8013466:	9314      	str	r3, [sp, #80]	@ 0x50
 8013468:	9b02      	ldr	r3, [sp, #8]
 801346a:	9a05      	ldr	r2, [sp, #20]
 801346c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013470:	3b01      	subs	r3, #1
 8013472:	9302      	str	r3, [sp, #8]
 8013474:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013478:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801347a:	eeb0 3a67 	vmov.f32	s6, s15
 801347e:	bf08      	it	eq
 8013480:	4613      	moveq	r3, r2
 8013482:	eef0 2a47 	vmov.f32	s5, s14
 8013486:	e72a      	b.n	80132de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013488:	140f      	asrs	r7, r1, #16
 801348a:	d454      	bmi.n	8013536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801348c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013490:	42be      	cmp	r6, r7
 8013492:	dd50      	ble.n	8013536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013494:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013498:	d44d      	bmi.n	8013536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801349a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801349e:	4544      	cmp	r4, r8
 80134a0:	dd49      	ble.n	8013536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80134a2:	9c04      	ldr	r4, [sp, #16]
 80134a4:	b236      	sxth	r6, r6
 80134a6:	fb08 4606 	mla	r6, r8, r6, r4
 80134aa:	f06f 0001 	mvn.w	r0, #1
 80134ae:	f816 8007 	ldrb.w	r8, [r6, r7]
 80134b2:	9c01      	ldr	r4, [sp, #4]
 80134b4:	fb00 fa0e 	mul.w	sl, r0, lr
 80134b8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80134bc:	9800      	ldr	r0, [sp, #0]
 80134be:	eb04 0b08 	add.w	fp, r4, r8
 80134c2:	f830 400a 	ldrh.w	r4, [r0, sl]
 80134c6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80134ca:	9801      	ldr	r0, [sp, #4]
 80134cc:	f89b b001 	ldrb.w	fp, [fp, #1]
 80134d0:	f810 8008 	ldrb.w	r8, [r0, r8]
 80134d4:	9800      	ldr	r0, [sp, #0]
 80134d6:	1227      	asrs	r7, r4, #8
 80134d8:	fb16 f609 	smulbb	r6, r6, r9
 80134dc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80134e0:	fb07 6705 	mla	r7, r7, r5, r6
 80134e4:	10e6      	asrs	r6, r4, #3
 80134e6:	00e4      	lsls	r4, r4, #3
 80134e8:	b2e4      	uxtb	r4, r4
 80134ea:	fb1b fb09 	smulbb	fp, fp, r9
 80134ee:	fb14 f405 	smulbb	r4, r4, r5
 80134f2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80134f6:	b2bf      	uxth	r7, r7
 80134f8:	fb06 b605 	mla	r6, r6, r5, fp
 80134fc:	fb08 4809 	mla	r8, r8, r9, r4
 8013500:	b2b6      	uxth	r6, r6
 8013502:	fa1f f888 	uxth.w	r8, r8
 8013506:	1c7c      	adds	r4, r7, #1
 8013508:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801350c:	f106 0b01 	add.w	fp, r6, #1
 8013510:	f108 0401 	add.w	r4, r8, #1
 8013514:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8013518:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801351c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013520:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013524:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013528:	4327      	orrs	r7, r4
 801352a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801352e:	ea47 070b 	orr.w	r7, r7, fp
 8013532:	f820 700a 	strh.w	r7, [r0, sl]
 8013536:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013538:	4401      	add	r1, r0
 801353a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801353c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013540:	4402      	add	r2, r0
 8013542:	e759      	b.n	80133f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013544:	b007      	add	sp, #28
 8013546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801354c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801354c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013550:	b085      	sub	sp, #20
 8013552:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013556:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013558:	9203      	str	r2, [sp, #12]
 801355a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801355e:	6870      	ldr	r0, [r6, #4]
 8013560:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013562:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8013566:	686f      	ldr	r7, [r5, #4]
 8013568:	9101      	str	r1, [sp, #4]
 801356a:	fb00 2404 	mla	r4, r0, r4, r2
 801356e:	6832      	ldr	r2, [r6, #0]
 8013570:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013574:	682a      	ldr	r2, [r5, #0]
 8013576:	9202      	str	r2, [sp, #8]
 8013578:	3704      	adds	r7, #4
 801357a:	9a01      	ldr	r2, [sp, #4]
 801357c:	2a00      	cmp	r2, #0
 801357e:	dc03      	bgt.n	8013588 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013580:	9a03      	ldr	r2, [sp, #12]
 8013582:	2a00      	cmp	r2, #0
 8013584:	f340 80cc 	ble.w	8013720 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013588:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801358a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801358e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013592:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013596:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013598:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801359c:	2b00      	cmp	r3, #0
 801359e:	dd0d      	ble.n	80135bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80135a0:	1406      	asrs	r6, r0, #16
 80135a2:	d405      	bmi.n	80135b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80135a4:	454e      	cmp	r6, r9
 80135a6:	da03      	bge.n	80135b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80135a8:	1416      	asrs	r6, r2, #16
 80135aa:	d401      	bmi.n	80135b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80135ac:	4546      	cmp	r6, r8
 80135ae:	db06      	blt.n	80135be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80135b0:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80135b2:	4460      	add	r0, ip
 80135b4:	4432      	add	r2, r6
 80135b6:	3b01      	subs	r3, #1
 80135b8:	3402      	adds	r4, #2
 80135ba:	e7ef      	b.n	801359c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80135bc:	d00f      	beq.n	80135de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80135be:	1e5e      	subs	r6, r3, #1
 80135c0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80135c4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80135c8:	d543      	bpl.n	8013652 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80135ca:	4698      	mov	r8, r3
 80135cc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80135d0:	f1b8 0f00 	cmp.w	r8, #0
 80135d4:	dc71      	bgt.n	80136ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80135d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80135da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80135de:	9b01      	ldr	r3, [sp, #4]
 80135e0:	2b00      	cmp	r3, #0
 80135e2:	f340 809d 	ble.w	8013720 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80135e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80135ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80135ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80135f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80135f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80135f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80135fc:	eeb0 6a62 	vmov.f32	s12, s5
 8013600:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013604:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013608:	ee77 2a62 	vsub.f32	s5, s14, s5
 801360c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013610:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013614:	eeb0 6a43 	vmov.f32	s12, s6
 8013618:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801361c:	ee12 2a90 	vmov	r2, s5
 8013620:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013624:	fb92 fcf3 	sdiv	ip, r2, r3
 8013628:	ee13 2a10 	vmov	r2, s6
 801362c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013630:	9312      	str	r3, [sp, #72]	@ 0x48
 8013632:	9b01      	ldr	r3, [sp, #4]
 8013634:	9a03      	ldr	r2, [sp, #12]
 8013636:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801363a:	3b01      	subs	r3, #1
 801363c:	9301      	str	r3, [sp, #4]
 801363e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013642:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013644:	eeb0 3a67 	vmov.f32	s6, s15
 8013648:	bf08      	it	eq
 801364a:	4613      	moveq	r3, r2
 801364c:	eef0 2a47 	vmov.f32	s5, s14
 8013650:	e793      	b.n	801357a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013652:	45ce      	cmp	lr, r9
 8013654:	dab9      	bge.n	80135ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013656:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013658:	fb01 2606 	mla	r6, r1, r6, r2
 801365c:	1436      	asrs	r6, r6, #16
 801365e:	d4b4      	bmi.n	80135ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013660:	4546      	cmp	r6, r8
 8013662:	dab2      	bge.n	80135ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013664:	4698      	mov	r8, r3
 8013666:	46a2      	mov	sl, r4
 8013668:	f1b8 0f00 	cmp.w	r8, #0
 801366c:	ddb3      	ble.n	80135d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801366e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013672:	9902      	ldr	r1, [sp, #8]
 8013674:	1416      	asrs	r6, r2, #16
 8013676:	fb09 1606 	mla	r6, r9, r6, r1
 801367a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801367e:	492a      	ldr	r1, [pc, #168]	@ (8013728 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8013680:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8013684:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013688:	eb07 0b0e 	add.w	fp, r7, lr
 801368c:	4460      	add	r0, ip
 801368e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8013692:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8013696:	00f6      	lsls	r6, r6, #3
 8013698:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801369c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80136a0:	ea49 0606 	orr.w	r6, r9, r6
 80136a4:	f817 900e 	ldrb.w	r9, [r7, lr]
 80136a8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80136aa:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80136ae:	f82a 6b02 	strh.w	r6, [sl], #2
 80136b2:	440a      	add	r2, r1
 80136b4:	f108 38ff 	add.w	r8, r8, #4294967295
 80136b8:	e7d6      	b.n	8013668 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80136ba:	ea5f 4920 	movs.w	r9, r0, asr #16
 80136be:	d429      	bmi.n	8013714 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80136c0:	68ae      	ldr	r6, [r5, #8]
 80136c2:	454e      	cmp	r6, r9
 80136c4:	dd26      	ble.n	8013714 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80136c6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80136ca:	d423      	bmi.n	8013714 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80136cc:	68e9      	ldr	r1, [r5, #12]
 80136ce:	4559      	cmp	r1, fp
 80136d0:	dd20      	ble.n	8013714 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80136d2:	9902      	ldr	r1, [sp, #8]
 80136d4:	fa0f fe86 	sxth.w	lr, r6
 80136d8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80136dc:	f06f 0101 	mvn.w	r1, #1
 80136e0:	f81e e009 	ldrb.w	lr, [lr, r9]
 80136e4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80136e8:	eb07 060e 	add.w	r6, r7, lr
 80136ec:	fb01 f908 	mul.w	r9, r1, r8
 80136f0:	f896 b002 	ldrb.w	fp, [r6, #2]
 80136f4:	7876      	ldrb	r6, [r6, #1]
 80136f6:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80136fa:	00f6      	lsls	r6, r6, #3
 80136fc:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8013700:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013704:	ea4b 0606 	orr.w	r6, fp, r6
 8013708:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801370c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8013710:	f82a 6009 	strh.w	r6, [sl, r9]
 8013714:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013716:	4460      	add	r0, ip
 8013718:	440a      	add	r2, r1
 801371a:	f108 38ff 	add.w	r8, r8, #4294967295
 801371e:	e757      	b.n	80135d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013720:	b005      	add	sp, #20
 8013722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013726:	bf00      	nop
 8013728:	fffff800 	.word	0xfffff800

0801372c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801372c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013730:	b087      	sub	sp, #28
 8013732:	468b      	mov	fp, r1
 8013734:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013736:	9204      	str	r2, [sp, #16]
 8013738:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801373c:	9205      	str	r2, [sp, #20]
 801373e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013742:	6841      	ldr	r1, [r0, #4]
 8013744:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013748:	fb01 2404 	mla	r4, r1, r4, r2
 801374c:	6802      	ldr	r2, [r0, #0]
 801374e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013752:	f8dc 2000 	ldr.w	r2, [ip]
 8013756:	9201      	str	r2, [sp, #4]
 8013758:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801375c:	3204      	adds	r2, #4
 801375e:	9202      	str	r2, [sp, #8]
 8013760:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013764:	f1bb 0f00 	cmp.w	fp, #0
 8013768:	dc03      	bgt.n	8013772 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801376a:	9a04      	ldr	r2, [sp, #16]
 801376c:	2a00      	cmp	r2, #0
 801376e:	f340 8138 	ble.w	80139e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013772:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013774:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013778:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801377c:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013780:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013782:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013786:	2b00      	cmp	r3, #0
 8013788:	dd0e      	ble.n	80137a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801378a:	1402      	asrs	r2, r0, #16
 801378c:	d405      	bmi.n	801379a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801378e:	42ba      	cmp	r2, r7
 8013790:	da03      	bge.n	801379a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013792:	140a      	asrs	r2, r1, #16
 8013794:	d401      	bmi.n	801379a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013796:	42b2      	cmp	r2, r6
 8013798:	db07      	blt.n	80137aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801379a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801379c:	4410      	add	r0, r2
 801379e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80137a0:	3b01      	subs	r3, #1
 80137a2:	4411      	add	r1, r2
 80137a4:	3402      	adds	r4, #2
 80137a6:	e7ee      	b.n	8013786 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80137a8:	d019      	beq.n	80137de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80137aa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80137ac:	1e5a      	subs	r2, r3, #1
 80137ae:	fb05 0502 	mla	r5, r5, r2, r0
 80137b2:	142d      	asrs	r5, r5, #16
 80137b4:	d409      	bmi.n	80137ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80137b6:	42bd      	cmp	r5, r7
 80137b8:	da07      	bge.n	80137ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80137ba:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80137bc:	fb05 1202 	mla	r2, r5, r2, r1
 80137c0:	1412      	asrs	r2, r2, #16
 80137c2:	d402      	bmi.n	80137ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80137c4:	42b2      	cmp	r2, r6
 80137c6:	f2c0 80ac 	blt.w	8013922 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80137ca:	f04f 0e00 	mov.w	lr, #0
 80137ce:	eb03 020e 	add.w	r2, r3, lr
 80137d2:	2a00      	cmp	r2, #0
 80137d4:	dc3e      	bgt.n	8013854 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80137d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80137da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80137de:	f1bb 0f00 	cmp.w	fp, #0
 80137e2:	f340 80fe 	ble.w	80139e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80137e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80137ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80137ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80137f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80137f4:	f1bb 0b01 	subs.w	fp, fp, #1
 80137f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80137fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013800:	eeb0 6a62 	vmov.f32	s12, s5
 8013804:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013808:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801380c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013810:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013814:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013818:	eeb0 6a43 	vmov.f32	s12, s6
 801381c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013820:	ee12 2a90 	vmov	r2, s5
 8013824:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013828:	fb92 f3f3 	sdiv	r3, r2, r3
 801382c:	ee13 2a10 	vmov	r2, s6
 8013830:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013834:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013836:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013838:	fb92 f3f3 	sdiv	r3, r2, r3
 801383c:	9a04      	ldr	r2, [sp, #16]
 801383e:	9314      	str	r3, [sp, #80]	@ 0x50
 8013840:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013844:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013846:	eeb0 3a67 	vmov.f32	s6, s15
 801384a:	bf08      	it	eq
 801384c:	4613      	moveq	r3, r2
 801384e:	eef0 2a47 	vmov.f32	s5, s14
 8013852:	e787      	b.n	8013764 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013854:	1406      	asrs	r6, r0, #16
 8013856:	d45d      	bmi.n	8013914 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013858:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801385c:	42b5      	cmp	r5, r6
 801385e:	dd59      	ble.n	8013914 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013860:	140f      	asrs	r7, r1, #16
 8013862:	d457      	bmi.n	8013914 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013864:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8013868:	42ba      	cmp	r2, r7
 801386a:	dd53      	ble.n	8013914 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801386c:	9a01      	ldr	r2, [sp, #4]
 801386e:	b22d      	sxth	r5, r5
 8013870:	fb07 2505 	mla	r5, r7, r5, r2
 8013874:	5daa      	ldrb	r2, [r5, r6]
 8013876:	9d02      	ldr	r5, [sp, #8]
 8013878:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801387c:	0e2e      	lsrs	r6, r5, #24
 801387e:	d049      	beq.n	8013914 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013880:	f06f 0201 	mvn.w	r2, #1
 8013884:	fb02 f20e 	mul.w	r2, r2, lr
 8013888:	9203      	str	r2, [sp, #12]
 801388a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801388e:	9a05      	ldr	r2, [sp, #20]
 8013890:	4356      	muls	r6, r2
 8013892:	1c72      	adds	r2, r6, #1
 8013894:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013898:	1212      	asrs	r2, r2, #8
 801389a:	fa1f f982 	uxth.w	r9, r2
 801389e:	ea4f 2728 	mov.w	r7, r8, asr #8
 80138a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80138a6:	43d2      	mvns	r2, r2
 80138a8:	b2d2      	uxtb	r2, r2
 80138aa:	fb16 f609 	smulbb	r6, r6, r9
 80138ae:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80138b2:	fb07 6702 	mla	r7, r7, r2, r6
 80138b6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80138ba:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80138be:	b2ed      	uxtb	r5, r5
 80138c0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80138c4:	fa5f f888 	uxtb.w	r8, r8
 80138c8:	fb15 f509 	smulbb	r5, r5, r9
 80138cc:	fb08 5502 	mla	r5, r8, r2, r5
 80138d0:	b2bf      	uxth	r7, r7
 80138d2:	fb1a fa09 	smulbb	sl, sl, r9
 80138d6:	b2ad      	uxth	r5, r5
 80138d8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80138dc:	fb06 a602 	mla	r6, r6, r2, sl
 80138e0:	1c7a      	adds	r2, r7, #1
 80138e2:	f105 0a01 	add.w	sl, r5, #1
 80138e6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80138ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80138ee:	b2b6      	uxth	r6, r6
 80138f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80138f4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80138f8:	ea4a 0707 	orr.w	r7, sl, r7
 80138fc:	f106 0a01 	add.w	sl, r6, #1
 8013900:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013904:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013908:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801390c:	9a03      	ldr	r2, [sp, #12]
 801390e:	ea47 070a 	orr.w	r7, r7, sl
 8013912:	52a7      	strh	r7, [r4, r2]
 8013914:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013916:	4410      	add	r0, r2
 8013918:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801391a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801391e:	4411      	add	r1, r2
 8013920:	e755      	b.n	80137ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013922:	f04f 0800 	mov.w	r8, #0
 8013926:	eba3 0208 	sub.w	r2, r3, r8
 801392a:	2a00      	cmp	r2, #0
 801392c:	f77f af53 	ble.w	80137d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013930:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013934:	9f01      	ldr	r7, [sp, #4]
 8013936:	140a      	asrs	r2, r1, #16
 8013938:	1405      	asrs	r5, r0, #16
 801393a:	fb06 7202 	mla	r2, r6, r2, r7
 801393e:	5d52      	ldrb	r2, [r2, r5]
 8013940:	9d02      	ldr	r5, [sp, #8]
 8013942:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013946:	0e2e      	lsrs	r6, r5, #24
 8013948:	d044      	beq.n	80139d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801394a:	9a05      	ldr	r2, [sp, #20]
 801394c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013950:	4356      	muls	r6, r2
 8013952:	1c72      	adds	r2, r6, #1
 8013954:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013958:	1212      	asrs	r2, r2, #8
 801395a:	fa1f f982 	uxth.w	r9, r2
 801395e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013962:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013966:	43d2      	mvns	r2, r2
 8013968:	b2d2      	uxtb	r2, r2
 801396a:	fb16 f609 	smulbb	r6, r6, r9
 801396e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013972:	fb07 6702 	mla	r7, r7, r2, r6
 8013976:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801397a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801397e:	b2ed      	uxtb	r5, r5
 8013980:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013984:	fa5f fe8e 	uxtb.w	lr, lr
 8013988:	fb15 f509 	smulbb	r5, r5, r9
 801398c:	fb0e 5502 	mla	r5, lr, r2, r5
 8013990:	b2bf      	uxth	r7, r7
 8013992:	fb1a fa09 	smulbb	sl, sl, r9
 8013996:	b2ad      	uxth	r5, r5
 8013998:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801399c:	fb06 a602 	mla	r6, r6, r2, sl
 80139a0:	1c7a      	adds	r2, r7, #1
 80139a2:	f105 0a01 	add.w	sl, r5, #1
 80139a6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80139aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80139ae:	b2b6      	uxth	r6, r6
 80139b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80139b4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80139b8:	ea4a 0707 	orr.w	r7, sl, r7
 80139bc:	f106 0a01 	add.w	sl, r6, #1
 80139c0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80139c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80139c8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80139cc:	ea47 070a 	orr.w	r7, r7, sl
 80139d0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80139d4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80139d6:	4410      	add	r0, r2
 80139d8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80139da:	f108 0801 	add.w	r8, r8, #1
 80139de:	4411      	add	r1, r2
 80139e0:	e7a1      	b.n	8013926 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80139e2:	b007      	add	sp, #28
 80139e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080139e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80139e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139ec:	b085      	sub	sp, #20
 80139ee:	468b      	mov	fp, r1
 80139f0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80139f2:	9203      	str	r2, [sp, #12]
 80139f4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80139f8:	6841      	ldr	r1, [r0, #4]
 80139fa:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80139fe:	fb01 2404 	mla	r4, r1, r4, r2
 8013a02:	6802      	ldr	r2, [r0, #0]
 8013a04:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013a08:	f8de 2000 	ldr.w	r2, [lr]
 8013a0c:	9200      	str	r2, [sp, #0]
 8013a0e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013a12:	3204      	adds	r2, #4
 8013a14:	9201      	str	r2, [sp, #4]
 8013a16:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013a1a:	f1bb 0f00 	cmp.w	fp, #0
 8013a1e:	dc03      	bgt.n	8013a28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013a20:	9a03      	ldr	r2, [sp, #12]
 8013a22:	2a00      	cmp	r2, #0
 8013a24:	f340 8153 	ble.w	8013cce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013a28:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013a2a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013a2e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013a32:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013a36:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013a38:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013a3c:	2b00      	cmp	r3, #0
 8013a3e:	dd0e      	ble.n	8013a5e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013a40:	1408      	asrs	r0, r1, #16
 8013a42:	d405      	bmi.n	8013a50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013a44:	42b8      	cmp	r0, r7
 8013a46:	da03      	bge.n	8013a50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013a48:	1410      	asrs	r0, r2, #16
 8013a4a:	d401      	bmi.n	8013a50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013a4c:	42b0      	cmp	r0, r6
 8013a4e:	db07      	blt.n	8013a60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013a50:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013a52:	4401      	add	r1, r0
 8013a54:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013a56:	3b01      	subs	r3, #1
 8013a58:	4402      	add	r2, r0
 8013a5a:	3402      	adds	r4, #2
 8013a5c:	e7ee      	b.n	8013a3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013a5e:	d017      	beq.n	8013a90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013a60:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013a62:	1e58      	subs	r0, r3, #1
 8013a64:	fb05 1500 	mla	r5, r5, r0, r1
 8013a68:	142d      	asrs	r5, r5, #16
 8013a6a:	d409      	bmi.n	8013a80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013a6c:	42bd      	cmp	r5, r7
 8013a6e:	da07      	bge.n	8013a80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013a70:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013a72:	fb05 2000 	mla	r0, r5, r0, r2
 8013a76:	1400      	asrs	r0, r0, #16
 8013a78:	d402      	bmi.n	8013a80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013a7a:	42b0      	cmp	r0, r6
 8013a7c:	f2c0 80bc 	blt.w	8013bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013a80:	2600      	movs	r6, #0
 8013a82:	1998      	adds	r0, r3, r6
 8013a84:	2800      	cmp	r0, #0
 8013a86:	dc3e      	bgt.n	8013b06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8013a88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013a8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013a90:	f1bb 0f00 	cmp.w	fp, #0
 8013a94:	f340 811b 	ble.w	8013cce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013a98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013a9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013aa0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013aa4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013aa6:	f1bb 0b01 	subs.w	fp, fp, #1
 8013aaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013aae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013ab2:	eeb0 6a62 	vmov.f32	s12, s5
 8013ab6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013aba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013abe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ac2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013ac6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013aca:	eeb0 6a43 	vmov.f32	s12, s6
 8013ace:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013ad2:	ee12 2a90 	vmov	r2, s5
 8013ad6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ada:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ade:	ee13 2a10 	vmov	r2, s6
 8013ae2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ae6:	9311      	str	r3, [sp, #68]	@ 0x44
 8013ae8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013aea:	fb92 f3f3 	sdiv	r3, r2, r3
 8013aee:	9a03      	ldr	r2, [sp, #12]
 8013af0:	9312      	str	r3, [sp, #72]	@ 0x48
 8013af2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013af6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013af8:	eeb0 3a67 	vmov.f32	s6, s15
 8013afc:	bf08      	it	eq
 8013afe:	4613      	moveq	r3, r2
 8013b00:	eef0 2a47 	vmov.f32	s5, s14
 8013b04:	e789      	b.n	8013a1a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013b06:	140f      	asrs	r7, r1, #16
 8013b08:	d426      	bmi.n	8013b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013b0a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013b0e:	42bd      	cmp	r5, r7
 8013b10:	dd22      	ble.n	8013b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013b12:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013b16:	d41f      	bmi.n	8013b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013b18:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013b1c:	4560      	cmp	r0, ip
 8013b1e:	dd1b      	ble.n	8013b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013b20:	9800      	ldr	r0, [sp, #0]
 8013b22:	b22d      	sxth	r5, r5
 8013b24:	fb0c 0505 	mla	r5, ip, r5, r0
 8013b28:	5de8      	ldrb	r0, [r5, r7]
 8013b2a:	9d01      	ldr	r5, [sp, #4]
 8013b2c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013b30:	0e07      	lsrs	r7, r0, #24
 8013b32:	2fff      	cmp	r7, #255	@ 0xff
 8013b34:	d116      	bne.n	8013b64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013b36:	f06f 0501 	mvn.w	r5, #1
 8013b3a:	fb05 f706 	mul.w	r7, r5, r6
 8013b3e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8013b42:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8013b46:	0945      	lsrs	r5, r0, #5
 8013b48:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013b4c:	ea4c 0505 	orr.w	r5, ip, r5
 8013b50:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013b54:	4305      	orrs	r5, r0
 8013b56:	53e5      	strh	r5, [r4, r7]
 8013b58:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013b5a:	4401      	add	r1, r0
 8013b5c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013b5e:	3e01      	subs	r6, #1
 8013b60:	4402      	add	r2, r0
 8013b62:	e78e      	b.n	8013a82 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8013b64:	b2fd      	uxtb	r5, r7
 8013b66:	2f00      	cmp	r7, #0
 8013b68:	d0f6      	beq.n	8013b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013b6a:	f06f 0701 	mvn.w	r7, #1
 8013b6e:	4377      	muls	r7, r6
 8013b70:	fa1f f985 	uxth.w	r9, r5
 8013b74:	f834 8007 	ldrh.w	r8, [r4, r7]
 8013b78:	9702      	str	r7, [sp, #8]
 8013b7a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013b7e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8013b82:	43ed      	mvns	r5, r5
 8013b84:	b2ed      	uxtb	r5, r5
 8013b86:	fb17 f709 	smulbb	r7, r7, r9
 8013b8a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013b8e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013b92:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8013b96:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8013b9a:	b2c0      	uxtb	r0, r0
 8013b9c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013ba0:	fa5f f888 	uxtb.w	r8, r8
 8013ba4:	fb10 f009 	smulbb	r0, r0, r9
 8013ba8:	fb08 0005 	mla	r0, r8, r5, r0
 8013bac:	b280      	uxth	r0, r0
 8013bae:	fa1f fc8c 	uxth.w	ip, ip
 8013bb2:	fb1a fa09 	smulbb	sl, sl, r9
 8013bb6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013bba:	fb07 a705 	mla	r7, r7, r5, sl
 8013bbe:	f100 0a01 	add.w	sl, r0, #1
 8013bc2:	f10c 0501 	add.w	r5, ip, #1
 8013bc6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013bca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013bce:	b2bf      	uxth	r7, r7
 8013bd0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013bd4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013bd8:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013bdc:	f107 0a01 	add.w	sl, r7, #1
 8013be0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013be4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013be8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013bec:	9802      	ldr	r0, [sp, #8]
 8013bee:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013bf2:	f824 c000 	strh.w	ip, [r4, r0]
 8013bf6:	e7af      	b.n	8013b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013bf8:	f04f 0800 	mov.w	r8, #0
 8013bfc:	eba3 0008 	sub.w	r0, r3, r8
 8013c00:	2800      	cmp	r0, #0
 8013c02:	f77f af41 	ble.w	8013a88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013c06:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013c0a:	9f00      	ldr	r7, [sp, #0]
 8013c0c:	1410      	asrs	r0, r2, #16
 8013c0e:	140d      	asrs	r5, r1, #16
 8013c10:	fb06 7000 	mla	r0, r6, r0, r7
 8013c14:	5d40      	ldrb	r0, [r0, r5]
 8013c16:	9d01      	ldr	r5, [sp, #4]
 8013c18:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8013c1c:	0e2e      	lsrs	r6, r5, #24
 8013c1e:	2eff      	cmp	r6, #255	@ 0xff
 8013c20:	d112      	bne.n	8013c48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8013c22:	482c      	ldr	r0, [pc, #176]	@ (8013cd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8013c24:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013c28:	0968      	lsrs	r0, r5, #5
 8013c2a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013c2e:	4330      	orrs	r0, r6
 8013c30:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013c34:	4328      	orrs	r0, r5
 8013c36:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8013c3a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013c3c:	4401      	add	r1, r0
 8013c3e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013c40:	f108 0801 	add.w	r8, r8, #1
 8013c44:	4402      	add	r2, r0
 8013c46:	e7d9      	b.n	8013bfc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013c48:	b2f0      	uxtb	r0, r6
 8013c4a:	2e00      	cmp	r6, #0
 8013c4c:	d0f5      	beq.n	8013c3a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013c4e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8013c52:	fa1f f980 	uxth.w	r9, r0
 8013c56:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013c5a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013c5e:	43c0      	mvns	r0, r0
 8013c60:	b2c0      	uxtb	r0, r0
 8013c62:	fb16 f609 	smulbb	r6, r6, r9
 8013c66:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013c6a:	fb07 6700 	mla	r7, r7, r0, r6
 8013c6e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013c72:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013c76:	b2ed      	uxtb	r5, r5
 8013c78:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013c7c:	fa5f fc8c 	uxtb.w	ip, ip
 8013c80:	fb15 f509 	smulbb	r5, r5, r9
 8013c84:	fb0c 5500 	mla	r5, ip, r0, r5
 8013c88:	b2bf      	uxth	r7, r7
 8013c8a:	fb1a fa09 	smulbb	sl, sl, r9
 8013c8e:	b2ad      	uxth	r5, r5
 8013c90:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013c94:	fb06 a600 	mla	r6, r6, r0, sl
 8013c98:	1c78      	adds	r0, r7, #1
 8013c9a:	f105 0a01 	add.w	sl, r5, #1
 8013c9e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013ca2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013ca6:	b2b6      	uxth	r6, r6
 8013ca8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013cac:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013cb0:	ea4a 0707 	orr.w	r7, sl, r7
 8013cb4:	f106 0a01 	add.w	sl, r6, #1
 8013cb8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013cbc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013cc0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013cc4:	ea47 070a 	orr.w	r7, r7, sl
 8013cc8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013ccc:	e7b5      	b.n	8013c3a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013cce:	b005      	add	sp, #20
 8013cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013cd4:	fffff800 	.word	0xfffff800

08013cd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cdc:	b087      	sub	sp, #28
 8013cde:	468b      	mov	fp, r1
 8013ce0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013ce2:	9204      	str	r2, [sp, #16]
 8013ce4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013ce8:	9205      	str	r2, [sp, #20]
 8013cea:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013cee:	6861      	ldr	r1, [r4, #4]
 8013cf0:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8013cf4:	fb01 2000 	mla	r0, r1, r0, r2
 8013cf8:	6822      	ldr	r2, [r4, #0]
 8013cfa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013cfe:	f8de 2000 	ldr.w	r2, [lr]
 8013d02:	9201      	str	r2, [sp, #4]
 8013d04:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013d08:	9202      	str	r2, [sp, #8]
 8013d0a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013d0e:	f1bb 0f00 	cmp.w	fp, #0
 8013d12:	dc03      	bgt.n	8013d1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013d14:	9a04      	ldr	r2, [sp, #16]
 8013d16:	2a00      	cmp	r2, #0
 8013d18:	f340 8142 	ble.w	8013fa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013d1c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013d1e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013d22:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013d26:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013d2a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013d2c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013d30:	2b00      	cmp	r3, #0
 8013d32:	dd0e      	ble.n	8013d52 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013d34:	140c      	asrs	r4, r1, #16
 8013d36:	d405      	bmi.n	8013d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013d38:	42bc      	cmp	r4, r7
 8013d3a:	da03      	bge.n	8013d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013d3c:	1414      	asrs	r4, r2, #16
 8013d3e:	d401      	bmi.n	8013d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013d40:	42b4      	cmp	r4, r6
 8013d42:	db07      	blt.n	8013d54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013d44:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013d46:	4421      	add	r1, r4
 8013d48:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013d4a:	3b01      	subs	r3, #1
 8013d4c:	4422      	add	r2, r4
 8013d4e:	3002      	adds	r0, #2
 8013d50:	e7ee      	b.n	8013d30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013d52:	d019      	beq.n	8013d88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013d54:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013d56:	1e5c      	subs	r4, r3, #1
 8013d58:	fb05 1504 	mla	r5, r5, r4, r1
 8013d5c:	142d      	asrs	r5, r5, #16
 8013d5e:	d409      	bmi.n	8013d74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013d60:	42bd      	cmp	r5, r7
 8013d62:	da07      	bge.n	8013d74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013d64:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013d66:	fb05 2404 	mla	r4, r5, r4, r2
 8013d6a:	1424      	asrs	r4, r4, #16
 8013d6c:	d402      	bmi.n	8013d74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013d6e:	42b4      	cmp	r4, r6
 8013d70:	f2c0 80b1 	blt.w	8013ed6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8013d74:	f04f 0800 	mov.w	r8, #0
 8013d78:	eb03 0408 	add.w	r4, r3, r8
 8013d7c:	2c00      	cmp	r4, #0
 8013d7e:	dc3e      	bgt.n	8013dfe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8013d80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013d84:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013d88:	f1bb 0f00 	cmp.w	fp, #0
 8013d8c:	f340 8108 	ble.w	8013fa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013d90:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013d94:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013d98:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013d9c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013d9e:	f1bb 0b01 	subs.w	fp, fp, #1
 8013da2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013da6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013daa:	eeb0 6a62 	vmov.f32	s12, s5
 8013dae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013db2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013db6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013dba:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013dbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013dc2:	eeb0 6a43 	vmov.f32	s12, s6
 8013dc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013dca:	ee12 2a90 	vmov	r2, s5
 8013dce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013dd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013dd6:	ee13 2a10 	vmov	r2, s6
 8013dda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013dde:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013de0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013de2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013de6:	9a04      	ldr	r2, [sp, #16]
 8013de8:	9314      	str	r3, [sp, #80]	@ 0x50
 8013dea:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013dee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013df0:	eeb0 3a67 	vmov.f32	s6, s15
 8013df4:	bf08      	it	eq
 8013df6:	4613      	moveq	r3, r2
 8013df8:	eef0 2a47 	vmov.f32	s5, s14
 8013dfc:	e787      	b.n	8013d0e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8013dfe:	140e      	asrs	r6, r1, #16
 8013e00:	d462      	bmi.n	8013ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013e02:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013e06:	42b5      	cmp	r5, r6
 8013e08:	dd5e      	ble.n	8013ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013e0a:	1417      	asrs	r7, r2, #16
 8013e0c:	d45c      	bmi.n	8013ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013e0e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8013e12:	42bc      	cmp	r4, r7
 8013e14:	dd58      	ble.n	8013ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013e16:	b22d      	sxth	r5, r5
 8013e18:	fb07 6505 	mla	r5, r7, r5, r6
 8013e1c:	9c02      	ldr	r4, [sp, #8]
 8013e1e:	5d66      	ldrb	r6, [r4, r5]
 8013e20:	2e00      	cmp	r6, #0
 8013e22:	d051      	beq.n	8013ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013e24:	9c01      	ldr	r4, [sp, #4]
 8013e26:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8013e2a:	f06f 0401 	mvn.w	r4, #1
 8013e2e:	fb04 f408 	mul.w	r4, r4, r8
 8013e32:	9403      	str	r4, [sp, #12]
 8013e34:	5b05      	ldrh	r5, [r0, r4]
 8013e36:	9c05      	ldr	r4, [sp, #20]
 8013e38:	4366      	muls	r6, r4
 8013e3a:	1c74      	adds	r4, r6, #1
 8013e3c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013e40:	1224      	asrs	r4, r4, #8
 8013e42:	b2a7      	uxth	r7, r4
 8013e44:	122e      	asrs	r6, r5, #8
 8013e46:	43e4      	mvns	r4, r4
 8013e48:	b2e4      	uxtb	r4, r4
 8013e4a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8013e4e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013e52:	fb16 f604 	smulbb	r6, r6, r4
 8013e56:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013e5a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013e5e:	00ed      	lsls	r5, r5, #3
 8013e60:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013e64:	b2ed      	uxtb	r5, r5
 8013e66:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8013e6a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8013e6e:	fb15 f504 	smulbb	r5, r5, r4
 8013e72:	fa5f f989 	uxtb.w	r9, r9
 8013e76:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013e7a:	fb09 5507 	mla	r5, r9, r7, r5
 8013e7e:	fb1a fa04 	smulbb	sl, sl, r4
 8013e82:	fa1f fc8c 	uxth.w	ip, ip
 8013e86:	b2ad      	uxth	r5, r5
 8013e88:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013e8c:	fb06 a607 	mla	r6, r6, r7, sl
 8013e90:	f10c 0401 	add.w	r4, ip, #1
 8013e94:	f105 0a01 	add.w	sl, r5, #1
 8013e98:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013e9c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013ea0:	b2b6      	uxth	r6, r6
 8013ea2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013ea6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013eaa:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013eae:	f106 0a01 	add.w	sl, r6, #1
 8013eb2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013eb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013eba:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013ebe:	9c03      	ldr	r4, [sp, #12]
 8013ec0:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013ec4:	f820 c004 	strh.w	ip, [r0, r4]
 8013ec8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013eca:	4421      	add	r1, r4
 8013ecc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013ece:	f108 38ff 	add.w	r8, r8, #4294967295
 8013ed2:	4422      	add	r2, r4
 8013ed4:	e750      	b.n	8013d78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013ed6:	f04f 0900 	mov.w	r9, #0
 8013eda:	eba3 0409 	sub.w	r4, r3, r9
 8013ede:	2c00      	cmp	r4, #0
 8013ee0:	f77f af4e 	ble.w	8013d80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013ee4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013ee8:	140d      	asrs	r5, r1, #16
 8013eea:	1414      	asrs	r4, r2, #16
 8013eec:	fb06 5404 	mla	r4, r6, r4, r5
 8013ef0:	9d02      	ldr	r5, [sp, #8]
 8013ef2:	5d2e      	ldrb	r6, [r5, r4]
 8013ef4:	2e00      	cmp	r6, #0
 8013ef6:	d04c      	beq.n	8013f92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8013ef8:	9d01      	ldr	r5, [sp, #4]
 8013efa:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8013efe:	9c05      	ldr	r4, [sp, #20]
 8013f00:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8013f04:	4366      	muls	r6, r4
 8013f06:	1c74      	adds	r4, r6, #1
 8013f08:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013f0c:	1224      	asrs	r4, r4, #8
 8013f0e:	b2a7      	uxth	r7, r4
 8013f10:	122e      	asrs	r6, r5, #8
 8013f12:	43e4      	mvns	r4, r4
 8013f14:	b2e4      	uxtb	r4, r4
 8013f16:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013f1a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013f1e:	fb16 f604 	smulbb	r6, r6, r4
 8013f22:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013f26:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013f2a:	00ed      	lsls	r5, r5, #3
 8013f2c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013f30:	b2ed      	uxtb	r5, r5
 8013f32:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013f36:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013f3a:	fb15 f504 	smulbb	r5, r5, r4
 8013f3e:	fa5f f888 	uxtb.w	r8, r8
 8013f42:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013f46:	fb08 5507 	mla	r5, r8, r7, r5
 8013f4a:	fb1a fa04 	smulbb	sl, sl, r4
 8013f4e:	fa1f fc8c 	uxth.w	ip, ip
 8013f52:	b2ad      	uxth	r5, r5
 8013f54:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013f58:	fb06 a607 	mla	r6, r6, r7, sl
 8013f5c:	f10c 0401 	add.w	r4, ip, #1
 8013f60:	f105 0a01 	add.w	sl, r5, #1
 8013f64:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013f68:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013f6c:	b2b6      	uxth	r6, r6
 8013f6e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013f72:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013f76:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013f7a:	f106 0a01 	add.w	sl, r6, #1
 8013f7e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013f82:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f86:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013f8a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013f8e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8013f92:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013f94:	4421      	add	r1, r4
 8013f96:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013f98:	f109 0901 	add.w	r9, r9, #1
 8013f9c:	4422      	add	r2, r4
 8013f9e:	e79c      	b.n	8013eda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8013fa0:	b007      	add	sp, #28
 8013fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013fa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013fa6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013faa:	b085      	sub	sp, #20
 8013fac:	468b      	mov	fp, r1
 8013fae:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013fb0:	9203      	str	r2, [sp, #12]
 8013fb2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8013fb6:	6861      	ldr	r1, [r4, #4]
 8013fb8:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8013fbc:	fb01 2000 	mla	r0, r1, r0, r2
 8013fc0:	6822      	ldr	r2, [r4, #0]
 8013fc2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013fc6:	f8d8 2000 	ldr.w	r2, [r8]
 8013fca:	9200      	str	r2, [sp, #0]
 8013fcc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8013fd0:	9201      	str	r2, [sp, #4]
 8013fd2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013fd6:	f1bb 0f00 	cmp.w	fp, #0
 8013fda:	dc03      	bgt.n	8013fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013fdc:	9a03      	ldr	r2, [sp, #12]
 8013fde:	2a00      	cmp	r2, #0
 8013fe0:	f340 8146 	ble.w	8014270 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8013fe4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013fe6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8013fea:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8013fee:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013ff2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013ff4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013ff8:	2b00      	cmp	r3, #0
 8013ffa:	dd0e      	ble.n	801401a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8013ffc:	140c      	asrs	r4, r1, #16
 8013ffe:	d405      	bmi.n	801400c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014000:	42bc      	cmp	r4, r7
 8014002:	da03      	bge.n	801400c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014004:	1414      	asrs	r4, r2, #16
 8014006:	d401      	bmi.n	801400c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014008:	42b4      	cmp	r4, r6
 801400a:	db07      	blt.n	801401c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801400c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801400e:	4421      	add	r1, r4
 8014010:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014012:	3b01      	subs	r3, #1
 8014014:	4422      	add	r2, r4
 8014016:	3002      	adds	r0, #2
 8014018:	e7ee      	b.n	8013ff8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801401a:	d017      	beq.n	801404c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801401c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801401e:	1e5c      	subs	r4, r3, #1
 8014020:	fb05 1504 	mla	r5, r5, r4, r1
 8014024:	142d      	asrs	r5, r5, #16
 8014026:	d409      	bmi.n	801403c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014028:	42bd      	cmp	r5, r7
 801402a:	da07      	bge.n	801403c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801402c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801402e:	fb05 2404 	mla	r4, r5, r4, r2
 8014032:	1424      	asrs	r4, r4, #16
 8014034:	d402      	bmi.n	801403c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014036:	42b4      	cmp	r4, r6
 8014038:	f2c0 80b3 	blt.w	80141a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801403c:	2600      	movs	r6, #0
 801403e:	199c      	adds	r4, r3, r6
 8014040:	2c00      	cmp	r4, #0
 8014042:	dc3e      	bgt.n	80140c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014044:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014048:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801404c:	f1bb 0f00 	cmp.w	fp, #0
 8014050:	f340 810e 	ble.w	8014270 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014054:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014058:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801405c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014060:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014062:	f1bb 0b01 	subs.w	fp, fp, #1
 8014066:	ee31 1a05 	vadd.f32	s2, s2, s10
 801406a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801406e:	eeb0 6a62 	vmov.f32	s12, s5
 8014072:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014076:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801407a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801407e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014082:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014086:	eeb0 6a43 	vmov.f32	s12, s6
 801408a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801408e:	ee12 2a90 	vmov	r2, s5
 8014092:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014096:	fb92 f3f3 	sdiv	r3, r2, r3
 801409a:	ee13 2a10 	vmov	r2, s6
 801409e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80140a2:	9311      	str	r3, [sp, #68]	@ 0x44
 80140a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80140a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80140aa:	9a03      	ldr	r2, [sp, #12]
 80140ac:	9312      	str	r3, [sp, #72]	@ 0x48
 80140ae:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80140b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80140b4:	eeb0 3a67 	vmov.f32	s6, s15
 80140b8:	bf08      	it	eq
 80140ba:	4613      	moveq	r3, r2
 80140bc:	eef0 2a47 	vmov.f32	s5, s14
 80140c0:	e789      	b.n	8013fd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80140c2:	140f      	asrs	r7, r1, #16
 80140c4:	d418      	bmi.n	80140f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80140c6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80140ca:	42bd      	cmp	r5, r7
 80140cc:	dd14      	ble.n	80140f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80140ce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80140d2:	d411      	bmi.n	80140f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80140d4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80140d8:	4564      	cmp	r4, ip
 80140da:	dd0d      	ble.n	80140f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80140dc:	b22d      	sxth	r5, r5
 80140de:	fb0c 7505 	mla	r5, ip, r5, r7
 80140e2:	9c01      	ldr	r4, [sp, #4]
 80140e4:	5d64      	ldrb	r4, [r4, r5]
 80140e6:	2cff      	cmp	r4, #255	@ 0xff
 80140e8:	d10c      	bne.n	8014104 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80140ea:	9c00      	ldr	r4, [sp, #0]
 80140ec:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80140f0:	f06f 0401 	mvn.w	r4, #1
 80140f4:	4374      	muls	r4, r6
 80140f6:	5305      	strh	r5, [r0, r4]
 80140f8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80140fa:	4421      	add	r1, r4
 80140fc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80140fe:	3e01      	subs	r6, #1
 8014100:	4422      	add	r2, r4
 8014102:	e79c      	b.n	801403e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014104:	2c00      	cmp	r4, #0
 8014106:	d0f7      	beq.n	80140f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014108:	9f00      	ldr	r7, [sp, #0]
 801410a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801410e:	f06f 0501 	mvn.w	r5, #1
 8014112:	4375      	muls	r5, r6
 8014114:	9502      	str	r5, [sp, #8]
 8014116:	5b45      	ldrh	r5, [r0, r5]
 8014118:	fa1f fc84 	uxth.w	ip, r4
 801411c:	122f      	asrs	r7, r5, #8
 801411e:	43e4      	mvns	r4, r4
 8014120:	b2e4      	uxtb	r4, r4
 8014122:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8014126:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801412a:	fb17 f704 	smulbb	r7, r7, r4
 801412e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014132:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014136:	00ed      	lsls	r5, r5, #3
 8014138:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801413c:	b2ed      	uxtb	r5, r5
 801413e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014142:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014146:	fb15 f504 	smulbb	r5, r5, r4
 801414a:	fa5f f989 	uxtb.w	r9, r9
 801414e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014152:	fb09 550c 	mla	r5, r9, ip, r5
 8014156:	fb1a fa04 	smulbb	sl, sl, r4
 801415a:	fa1f fe8e 	uxth.w	lr, lr
 801415e:	b2ad      	uxth	r5, r5
 8014160:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014164:	fb07 a70c 	mla	r7, r7, ip, sl
 8014168:	f10e 0401 	add.w	r4, lr, #1
 801416c:	f105 0a01 	add.w	sl, r5, #1
 8014170:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8014174:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014178:	b2bf      	uxth	r7, r7
 801417a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801417e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014182:	ea4a 0e0e 	orr.w	lr, sl, lr
 8014186:	f107 0a01 	add.w	sl, r7, #1
 801418a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801418e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014192:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014196:	9c02      	ldr	r4, [sp, #8]
 8014198:	ea4e 0e0a 	orr.w	lr, lr, sl
 801419c:	f820 e004 	strh.w	lr, [r0, r4]
 80141a0:	e7aa      	b.n	80140f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80141a2:	f04f 0900 	mov.w	r9, #0
 80141a6:	eba3 0409 	sub.w	r4, r3, r9
 80141aa:	2c00      	cmp	r4, #0
 80141ac:	f77f af4a 	ble.w	8014044 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80141b0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80141b4:	1414      	asrs	r4, r2, #16
 80141b6:	140d      	asrs	r5, r1, #16
 80141b8:	fb06 5504 	mla	r5, r6, r4, r5
 80141bc:	9c01      	ldr	r4, [sp, #4]
 80141be:	5d64      	ldrb	r4, [r4, r5]
 80141c0:	2cff      	cmp	r4, #255	@ 0xff
 80141c2:	d10b      	bne.n	80141dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80141c4:	9c00      	ldr	r4, [sp, #0]
 80141c6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80141ca:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80141ce:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80141d0:	4421      	add	r1, r4
 80141d2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80141d4:	f109 0901 	add.w	r9, r9, #1
 80141d8:	4422      	add	r2, r4
 80141da:	e7e4      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80141dc:	2c00      	cmp	r4, #0
 80141de:	d0f6      	beq.n	80141ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80141e0:	9e00      	ldr	r6, [sp, #0]
 80141e2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80141e6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80141ea:	b2a7      	uxth	r7, r4
 80141ec:	122e      	asrs	r6, r5, #8
 80141ee:	43e4      	mvns	r4, r4
 80141f0:	b2e4      	uxtb	r4, r4
 80141f2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80141f6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80141fa:	fb16 f604 	smulbb	r6, r6, r4
 80141fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014202:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014206:	00ed      	lsls	r5, r5, #3
 8014208:	fb0c 6c07 	mla	ip, ip, r7, r6
 801420c:	b2ed      	uxtb	r5, r5
 801420e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014212:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014216:	fb15 f504 	smulbb	r5, r5, r4
 801421a:	fa5f fe8e 	uxtb.w	lr, lr
 801421e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014222:	fb0e 5507 	mla	r5, lr, r7, r5
 8014226:	fb1a fa04 	smulbb	sl, sl, r4
 801422a:	fa1f fc8c 	uxth.w	ip, ip
 801422e:	b2ad      	uxth	r5, r5
 8014230:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014234:	fb06 a607 	mla	r6, r6, r7, sl
 8014238:	f10c 0401 	add.w	r4, ip, #1
 801423c:	f105 0a01 	add.w	sl, r5, #1
 8014240:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014244:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014248:	b2b6      	uxth	r6, r6
 801424a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801424e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014252:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014256:	f106 0a01 	add.w	sl, r6, #1
 801425a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801425e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014262:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014266:	ea4c 0c0a 	orr.w	ip, ip, sl
 801426a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801426e:	e7ae      	b.n	80141ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014270:	b005      	add	sp, #20
 8014272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014276 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014276:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801427a:	b085      	sub	sp, #20
 801427c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801427e:	9203      	str	r2, [sp, #12]
 8014280:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8014284:	9201      	str	r2, [sp, #4]
 8014286:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801428a:	9100      	str	r1, [sp, #0]
 801428c:	6841      	ldr	r1, [r0, #4]
 801428e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014292:	fb01 2404 	mla	r4, r1, r4, r2
 8014296:	6802      	ldr	r2, [r0, #0]
 8014298:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801429c:	f8de 2000 	ldr.w	r2, [lr]
 80142a0:	9202      	str	r2, [sp, #8]
 80142a2:	9a01      	ldr	r2, [sp, #4]
 80142a4:	43d6      	mvns	r6, r2
 80142a6:	b2f6      	uxtb	r6, r6
 80142a8:	9a00      	ldr	r2, [sp, #0]
 80142aa:	2a00      	cmp	r2, #0
 80142ac:	dc03      	bgt.n	80142b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80142ae:	9a03      	ldr	r2, [sp, #12]
 80142b0:	2a00      	cmp	r2, #0
 80142b2:	f340 8124 	ble.w	80144fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80142b6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80142b8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80142bc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80142c0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80142c4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80142c6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80142ca:	2b00      	cmp	r3, #0
 80142cc:	dd0e      	ble.n	80142ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80142ce:	1408      	asrs	r0, r1, #16
 80142d0:	d405      	bmi.n	80142de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80142d2:	4560      	cmp	r0, ip
 80142d4:	da03      	bge.n	80142de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80142d6:	1410      	asrs	r0, r2, #16
 80142d8:	d401      	bmi.n	80142de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80142da:	42b8      	cmp	r0, r7
 80142dc:	db07      	blt.n	80142ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80142de:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80142e0:	4401      	add	r1, r0
 80142e2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80142e4:	3b01      	subs	r3, #1
 80142e6:	4402      	add	r2, r0
 80142e8:	3402      	adds	r4, #2
 80142ea:	e7ee      	b.n	80142ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80142ec:	d06e      	beq.n	80143cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80142ee:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80142f0:	1e58      	subs	r0, r3, #1
 80142f2:	fb05 1500 	mla	r5, r5, r0, r1
 80142f6:	142d      	asrs	r5, r5, #16
 80142f8:	d45c      	bmi.n	80143b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80142fa:	4565      	cmp	r5, ip
 80142fc:	da5a      	bge.n	80143b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80142fe:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014300:	fb05 2000 	mla	r0, r5, r0, r2
 8014304:	1400      	asrs	r0, r0, #16
 8014306:	d455      	bmi.n	80143b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014308:	42b8      	cmp	r0, r7
 801430a:	da53      	bge.n	80143b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801430c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8014310:	4699      	mov	r9, r3
 8014312:	46a2      	mov	sl, r4
 8014314:	f1b9 0f00 	cmp.w	r9, #0
 8014318:	dd54      	ble.n	80143c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801431a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801431e:	140d      	asrs	r5, r1, #16
 8014320:	1410      	asrs	r0, r2, #16
 8014322:	fb07 5000 	mla	r0, r7, r0, r5
 8014326:	9d02      	ldr	r5, [sp, #8]
 8014328:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801432c:	f8ba 5000 	ldrh.w	r5, [sl]
 8014330:	122f      	asrs	r7, r5, #8
 8014332:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014336:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801433a:	fb17 f706 	smulbb	r7, r7, r6
 801433e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014342:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014346:	00ed      	lsls	r5, r5, #3
 8014348:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801434c:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014350:	10c7      	asrs	r7, r0, #3
 8014352:	b2ed      	uxtb	r5, r5
 8014354:	00c0      	lsls	r0, r0, #3
 8014356:	fb18 f806 	smulbb	r8, r8, r6
 801435a:	fb15 f506 	smulbb	r5, r5, r6
 801435e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014362:	b2c0      	uxtb	r0, r0
 8014364:	fa1f fc8c 	uxth.w	ip, ip
 8014368:	fb07 870b 	mla	r7, r7, fp, r8
 801436c:	fb00 500b 	mla	r0, r0, fp, r5
 8014370:	b280      	uxth	r0, r0
 8014372:	b2bf      	uxth	r7, r7
 8014374:	f10c 0501 	add.w	r5, ip, #1
 8014378:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801437c:	f107 0801 	add.w	r8, r7, #1
 8014380:	1c45      	adds	r5, r0, #1
 8014382:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014386:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801438a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801438c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014390:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014394:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014398:	ea45 0c0c 	orr.w	ip, r5, ip
 801439c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80143a0:	4401      	add	r1, r0
 80143a2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80143a4:	ea4c 0c08 	orr.w	ip, ip, r8
 80143a8:	f82a cb02 	strh.w	ip, [sl], #2
 80143ac:	4402      	add	r2, r0
 80143ae:	f109 39ff 	add.w	r9, r9, #4294967295
 80143b2:	e7af      	b.n	8014314 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80143b4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80143b8:	f04f 0800 	mov.w	r8, #0
 80143bc:	eb03 0008 	add.w	r0, r3, r8
 80143c0:	2800      	cmp	r0, #0
 80143c2:	dc41      	bgt.n	8014448 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80143c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80143c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80143cc:	9b00      	ldr	r3, [sp, #0]
 80143ce:	2b00      	cmp	r3, #0
 80143d0:	f340 8095 	ble.w	80144fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80143d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80143d8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80143dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80143e0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80143e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80143e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80143ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80143ee:	eef0 6a62 	vmov.f32	s13, s5
 80143f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80143f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80143fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80143fe:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8014402:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014406:	eef0 6a43 	vmov.f32	s13, s6
 801440a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801440e:	ee12 2a90 	vmov	r2, s5
 8014412:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014416:	fb92 f3f3 	sdiv	r3, r2, r3
 801441a:	ee13 2a10 	vmov	r2, s6
 801441e:	9311      	str	r3, [sp, #68]	@ 0x44
 8014420:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014422:	fb92 f3f3 	sdiv	r3, r2, r3
 8014426:	9312      	str	r3, [sp, #72]	@ 0x48
 8014428:	9b00      	ldr	r3, [sp, #0]
 801442a:	9a03      	ldr	r2, [sp, #12]
 801442c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014430:	3b01      	subs	r3, #1
 8014432:	9300      	str	r3, [sp, #0]
 8014434:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014438:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801443a:	eeb0 3a67 	vmov.f32	s6, s15
 801443e:	bf08      	it	eq
 8014440:	4613      	moveq	r3, r2
 8014442:	eef0 2a47 	vmov.f32	s5, s14
 8014446:	e72f      	b.n	80142a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014448:	140f      	asrs	r7, r1, #16
 801444a:	d451      	bmi.n	80144f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801444c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014450:	42bd      	cmp	r5, r7
 8014452:	dd4d      	ble.n	80144f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014454:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014458:	d44a      	bmi.n	80144f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801445a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801445e:	4560      	cmp	r0, ip
 8014460:	dd46      	ble.n	80144f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014462:	b22d      	sxth	r5, r5
 8014464:	fb0c 7505 	mla	r5, ip, r5, r7
 8014468:	9802      	ldr	r0, [sp, #8]
 801446a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801446e:	f06f 0501 	mvn.w	r5, #1
 8014472:	fb05 fb08 	mul.w	fp, r5, r8
 8014476:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801447a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801447e:	122f      	asrs	r7, r5, #8
 8014480:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014484:	fb17 f706 	smulbb	r7, r7, r6
 8014488:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801448c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014490:	00ed      	lsls	r5, r5, #3
 8014492:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014496:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801449a:	10c7      	asrs	r7, r0, #3
 801449c:	b2ed      	uxtb	r5, r5
 801449e:	00c0      	lsls	r0, r0, #3
 80144a0:	fb19 f906 	smulbb	r9, r9, r6
 80144a4:	fb15 f506 	smulbb	r5, r5, r6
 80144a8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80144ac:	b2c0      	uxtb	r0, r0
 80144ae:	fa1f fc8c 	uxth.w	ip, ip
 80144b2:	fb07 970a 	mla	r7, r7, sl, r9
 80144b6:	fb00 500a 	mla	r0, r0, sl, r5
 80144ba:	b2bf      	uxth	r7, r7
 80144bc:	b280      	uxth	r0, r0
 80144be:	f10c 0501 	add.w	r5, ip, #1
 80144c2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80144c6:	f107 0901 	add.w	r9, r7, #1
 80144ca:	1c45      	adds	r5, r0, #1
 80144cc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80144d0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80144d4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80144d8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80144dc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80144e0:	ea45 0c0c 	orr.w	ip, r5, ip
 80144e4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80144e8:	ea4c 0c09 	orr.w	ip, ip, r9
 80144ec:	f824 c00b 	strh.w	ip, [r4, fp]
 80144f0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80144f2:	4401      	add	r1, r0
 80144f4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80144f6:	f108 38ff 	add.w	r8, r8, #4294967295
 80144fa:	4402      	add	r2, r0
 80144fc:	e75e      	b.n	80143bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80144fe:	b005      	add	sp, #20
 8014500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014504 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014508:	b085      	sub	sp, #20
 801450a:	4693      	mov	fp, r2
 801450c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801450e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014510:	6870      	ldr	r0, [r6, #4]
 8014512:	9101      	str	r1, [sp, #4]
 8014514:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014518:	fb00 2404 	mla	r4, r0, r4, r2
 801451c:	6832      	ldr	r2, [r6, #0]
 801451e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8014522:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014526:	682a      	ldr	r2, [r5, #0]
 8014528:	9202      	str	r2, [sp, #8]
 801452a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801452e:	9a01      	ldr	r2, [sp, #4]
 8014530:	2a00      	cmp	r2, #0
 8014532:	dc03      	bgt.n	801453c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014534:	f1bb 0f00 	cmp.w	fp, #0
 8014538:	f340 809a 	ble.w	8014670 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801453c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801453e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014542:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014546:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801454a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801454c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014550:	2b00      	cmp	r3, #0
 8014552:	dd0c      	ble.n	801456e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014554:	1406      	asrs	r6, r0, #16
 8014556:	d405      	bmi.n	8014564 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014558:	454e      	cmp	r6, r9
 801455a:	da03      	bge.n	8014564 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801455c:	1416      	asrs	r6, r2, #16
 801455e:	d401      	bmi.n	8014564 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014560:	4546      	cmp	r6, r8
 8014562:	db05      	blt.n	8014570 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014564:	4470      	add	r0, lr
 8014566:	4462      	add	r2, ip
 8014568:	3b01      	subs	r3, #1
 801456a:	3402      	adds	r4, #2
 801456c:	e7f0      	b.n	8014550 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801456e:	d00f      	beq.n	8014590 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014570:	1e5e      	subs	r6, r3, #1
 8014572:	fb0e 0706 	mla	r7, lr, r6, r0
 8014576:	143f      	asrs	r7, r7, #16
 8014578:	d541      	bpl.n	80145fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801457a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801457e:	4698      	mov	r8, r3
 8014580:	9603      	str	r6, [sp, #12]
 8014582:	f1b8 0f00 	cmp.w	r8, #0
 8014586:	dc56      	bgt.n	8014636 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014588:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801458c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014590:	9b01      	ldr	r3, [sp, #4]
 8014592:	2b00      	cmp	r3, #0
 8014594:	dd6c      	ble.n	8014670 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014596:	ee30 0a04 	vadd.f32	s0, s0, s8
 801459a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801459e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80145a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80145a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80145a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80145ac:	eeb0 6a62 	vmov.f32	s12, s5
 80145b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80145b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80145bc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80145c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80145c4:	eeb0 6a43 	vmov.f32	s12, s6
 80145c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80145cc:	ee12 2a90 	vmov	r2, s5
 80145d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80145d4:	fb92 fef3 	sdiv	lr, r2, r3
 80145d8:	ee13 2a10 	vmov	r2, s6
 80145dc:	fb92 fcf3 	sdiv	ip, r2, r3
 80145e0:	9b01      	ldr	r3, [sp, #4]
 80145e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145e6:	3b01      	subs	r3, #1
 80145e8:	9301      	str	r3, [sp, #4]
 80145ea:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80145ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80145f0:	eeb0 3a67 	vmov.f32	s6, s15
 80145f4:	bf08      	it	eq
 80145f6:	465b      	moveq	r3, fp
 80145f8:	eef0 2a47 	vmov.f32	s5, s14
 80145fc:	e797      	b.n	801452e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80145fe:	454f      	cmp	r7, r9
 8014600:	dabb      	bge.n	801457a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014602:	fb0c 2606 	mla	r6, ip, r6, r2
 8014606:	1436      	asrs	r6, r6, #16
 8014608:	d4b7      	bmi.n	801457a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801460a:	4546      	cmp	r6, r8
 801460c:	dab5      	bge.n	801457a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801460e:	461e      	mov	r6, r3
 8014610:	46a0      	mov	r8, r4
 8014612:	2e00      	cmp	r6, #0
 8014614:	ddb8      	ble.n	8014588 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014616:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801461a:	9902      	ldr	r1, [sp, #8]
 801461c:	1417      	asrs	r7, r2, #16
 801461e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014622:	fb0a 9707 	mla	r7, sl, r7, r9
 8014626:	4470      	add	r0, lr
 8014628:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801462c:	f828 7b02 	strh.w	r7, [r8], #2
 8014630:	4462      	add	r2, ip
 8014632:	3e01      	subs	r6, #1
 8014634:	e7ed      	b.n	8014612 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8014636:	ea5f 4920 	movs.w	r9, r0, asr #16
 801463a:	d414      	bmi.n	8014666 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801463c:	68ae      	ldr	r6, [r5, #8]
 801463e:	454e      	cmp	r6, r9
 8014640:	dd11      	ble.n	8014666 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014642:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014646:	d40e      	bmi.n	8014666 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014648:	68ef      	ldr	r7, [r5, #12]
 801464a:	4557      	cmp	r7, sl
 801464c:	dd0b      	ble.n	8014666 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801464e:	b236      	sxth	r6, r6
 8014650:	fb0a 9606 	mla	r6, sl, r6, r9
 8014654:	9f02      	ldr	r7, [sp, #8]
 8014656:	f06f 0101 	mvn.w	r1, #1
 801465a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801465e:	fb01 f608 	mul.w	r6, r1, r8
 8014662:	9903      	ldr	r1, [sp, #12]
 8014664:	538f      	strh	r7, [r1, r6]
 8014666:	4470      	add	r0, lr
 8014668:	4462      	add	r2, ip
 801466a:	f108 38ff 	add.w	r8, r8, #4294967295
 801466e:	e788      	b.n	8014582 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014670:	b005      	add	sp, #20
 8014672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014676:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801467a:	b087      	sub	sp, #28
 801467c:	468b      	mov	fp, r1
 801467e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014680:	9203      	str	r2, [sp, #12]
 8014682:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014686:	9204      	str	r2, [sp, #16]
 8014688:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 801468c:	6841      	ldr	r1, [r0, #4]
 801468e:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014692:	fb01 2505 	mla	r5, r1, r5, r2
 8014696:	6802      	ldr	r2, [r0, #0]
 8014698:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801469c:	f8d9 2000 	ldr.w	r2, [r9]
 80146a0:	9201      	str	r2, [sp, #4]
 80146a2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80146a6:	f1bb 0f00 	cmp.w	fp, #0
 80146aa:	dc03      	bgt.n	80146b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80146ac:	9a03      	ldr	r2, [sp, #12]
 80146ae:	2a00      	cmp	r2, #0
 80146b0:	f340 8159 	ble.w	8014966 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80146b4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80146b6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80146ba:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80146be:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80146c2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80146c4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80146c8:	2b00      	cmp	r3, #0
 80146ca:	dd0e      	ble.n	80146ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80146cc:	1402      	asrs	r2, r0, #16
 80146ce:	d405      	bmi.n	80146dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80146d0:	42ba      	cmp	r2, r7
 80146d2:	da03      	bge.n	80146dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80146d4:	140a      	asrs	r2, r1, #16
 80146d6:	d401      	bmi.n	80146dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80146d8:	42b2      	cmp	r2, r6
 80146da:	db07      	blt.n	80146ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80146dc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80146de:	4410      	add	r0, r2
 80146e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80146e2:	3b01      	subs	r3, #1
 80146e4:	4411      	add	r1, r2
 80146e6:	3502      	adds	r5, #2
 80146e8:	e7ee      	b.n	80146c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80146ea:	d017      	beq.n	801471c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80146ec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80146ee:	1e5a      	subs	r2, r3, #1
 80146f0:	fb04 0402 	mla	r4, r4, r2, r0
 80146f4:	1424      	asrs	r4, r4, #16
 80146f6:	d409      	bmi.n	801470c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80146f8:	42bc      	cmp	r4, r7
 80146fa:	da07      	bge.n	801470c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80146fc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80146fe:	fb04 1202 	mla	r2, r4, r2, r1
 8014702:	1412      	asrs	r2, r2, #16
 8014704:	d402      	bmi.n	801470c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014706:	42b2      	cmp	r2, r6
 8014708:	f2c0 80bf 	blt.w	801488a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801470c:	2700      	movs	r7, #0
 801470e:	19da      	adds	r2, r3, r7
 8014710:	2a00      	cmp	r2, #0
 8014712:	dc3e      	bgt.n	8014792 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014714:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014718:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801471c:	f1bb 0f00 	cmp.w	fp, #0
 8014720:	f340 8121 	ble.w	8014966 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8014724:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014728:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801472c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014730:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014732:	f1bb 0b01 	subs.w	fp, fp, #1
 8014736:	ee31 1a05 	vadd.f32	s2, s2, s10
 801473a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801473e:	eeb0 6a62 	vmov.f32	s12, s5
 8014742:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014746:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801474a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801474e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014752:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014756:	eeb0 6a43 	vmov.f32	s12, s6
 801475a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801475e:	ee12 2a90 	vmov	r2, s5
 8014762:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014766:	fb92 f3f3 	sdiv	r3, r2, r3
 801476a:	ee13 2a10 	vmov	r2, s6
 801476e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014772:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014774:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014776:	fb92 f3f3 	sdiv	r3, r2, r3
 801477a:	9a03      	ldr	r2, [sp, #12]
 801477c:	9314      	str	r3, [sp, #80]	@ 0x50
 801477e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014782:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014784:	eeb0 3a67 	vmov.f32	s6, s15
 8014788:	bf08      	it	eq
 801478a:	4613      	moveq	r3, r2
 801478c:	eef0 2a47 	vmov.f32	s5, s14
 8014790:	e789      	b.n	80146a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014792:	1406      	asrs	r6, r0, #16
 8014794:	d42d      	bmi.n	80147f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014796:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801479a:	42b4      	cmp	r4, r6
 801479c:	dd29      	ble.n	80147f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801479e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80147a2:	d426      	bmi.n	80147f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80147a4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80147a8:	4562      	cmp	r2, ip
 80147aa:	dd22      	ble.n	80147f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80147ac:	b224      	sxth	r4, r4
 80147ae:	9a01      	ldr	r2, [sp, #4]
 80147b0:	fb0c 6404 	mla	r4, ip, r4, r6
 80147b4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80147b8:	0e22      	lsrs	r2, r4, #24
 80147ba:	d01a      	beq.n	80147f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80147bc:	9e04      	ldr	r6, [sp, #16]
 80147be:	4372      	muls	r2, r6
 80147c0:	1c56      	adds	r6, r2, #1
 80147c2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80147c6:	1212      	asrs	r2, r2, #8
 80147c8:	0a26      	lsrs	r6, r4, #8
 80147ca:	2aff      	cmp	r2, #255	@ 0xff
 80147cc:	9605      	str	r6, [sp, #20]
 80147ce:	d116      	bne.n	80147fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80147d0:	f06f 0201 	mvn.w	r2, #1
 80147d4:	fb02 fc07 	mul.w	ip, r2, r7
 80147d8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80147dc:	0962      	lsrs	r2, r4, #5
 80147de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80147e2:	f026 0607 	bic.w	r6, r6, #7
 80147e6:	4316      	orrs	r6, r2
 80147e8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80147ec:	4326      	orrs	r6, r4
 80147ee:	f825 600c 	strh.w	r6, [r5, ip]
 80147f2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80147f4:	4410      	add	r0, r2
 80147f6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80147f8:	3f01      	subs	r7, #1
 80147fa:	4411      	add	r1, r2
 80147fc:	e787      	b.n	801470e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80147fe:	f06f 0601 	mvn.w	r6, #1
 8014802:	437e      	muls	r6, r7
 8014804:	fa1f fa82 	uxth.w	sl, r2
 8014808:	f835 8006 	ldrh.w	r8, [r5, r6]
 801480c:	9602      	str	r6, [sp, #8]
 801480e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014812:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8014816:	43d2      	mvns	r2, r2
 8014818:	b2d2      	uxtb	r2, r2
 801481a:	fb1c fc0a 	smulbb	ip, ip, sl
 801481e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014822:	fb0e ce02 	mla	lr, lr, r2, ip
 8014826:	b2e4      	uxtb	r4, r4
 8014828:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801482c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014830:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014834:	fa5f f888 	uxtb.w	r8, r8
 8014838:	fb14 f40a 	smulbb	r4, r4, sl
 801483c:	fb08 4402 	mla	r4, r8, r2, r4
 8014840:	fa1f fe8e 	uxth.w	lr, lr
 8014844:	fb16 f60a 	smulbb	r6, r6, sl
 8014848:	b2a4      	uxth	r4, r4
 801484a:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801484e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014852:	f10e 0201 	add.w	r2, lr, #1
 8014856:	1c66      	adds	r6, r4, #1
 8014858:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801485c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014860:	fa1f fc8c 	uxth.w	ip, ip
 8014864:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014868:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801486c:	ea46 0e0e 	orr.w	lr, r6, lr
 8014870:	f10c 0601 	add.w	r6, ip, #1
 8014874:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014878:	0976      	lsrs	r6, r6, #5
 801487a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801487e:	9a02      	ldr	r2, [sp, #8]
 8014880:	ea4e 0e06 	orr.w	lr, lr, r6
 8014884:	f825 e002 	strh.w	lr, [r5, r2]
 8014888:	e7b3      	b.n	80147f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801488a:	f04f 0800 	mov.w	r8, #0
 801488e:	eba3 0208 	sub.w	r2, r3, r8
 8014892:	2a00      	cmp	r2, #0
 8014894:	f77f af3e 	ble.w	8014714 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014898:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801489c:	1404      	asrs	r4, r0, #16
 801489e:	140a      	asrs	r2, r1, #16
 80148a0:	fb06 4202 	mla	r2, r6, r2, r4
 80148a4:	9c01      	ldr	r4, [sp, #4]
 80148a6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80148aa:	0e22      	lsrs	r2, r4, #24
 80148ac:	d016      	beq.n	80148dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80148ae:	9e04      	ldr	r6, [sp, #16]
 80148b0:	4372      	muls	r2, r6
 80148b2:	1c56      	adds	r6, r2, #1
 80148b4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80148b8:	1212      	asrs	r2, r2, #8
 80148ba:	2aff      	cmp	r2, #255	@ 0xff
 80148bc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80148c0:	d113      	bne.n	80148ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80148c2:	0962      	lsrs	r2, r4, #5
 80148c4:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80148c8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80148cc:	f026 0607 	bic.w	r6, r6, #7
 80148d0:	4316      	orrs	r6, r2
 80148d2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80148d6:	4326      	orrs	r6, r4
 80148d8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80148dc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80148de:	4410      	add	r0, r2
 80148e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80148e2:	f108 0801 	add.w	r8, r8, #1
 80148e6:	4411      	add	r1, r2
 80148e8:	e7d1      	b.n	801488e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80148ea:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80148ee:	fa1f fa82 	uxth.w	sl, r2
 80148f2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80148f6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80148fa:	43d2      	mvns	r2, r2
 80148fc:	b2d2      	uxtb	r2, r2
 80148fe:	fb17 f70a 	smulbb	r7, r7, sl
 8014902:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014906:	fb0c 7c02 	mla	ip, ip, r2, r7
 801490a:	b2e4      	uxtb	r4, r4
 801490c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014910:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014914:	fa5f fe8e 	uxtb.w	lr, lr
 8014918:	fb14 f40a 	smulbb	r4, r4, sl
 801491c:	fb0e 4402 	mla	r4, lr, r2, r4
 8014920:	b2f6      	uxtb	r6, r6
 8014922:	fa1f fc8c 	uxth.w	ip, ip
 8014926:	fb16 f60a 	smulbb	r6, r6, sl
 801492a:	b2a4      	uxth	r4, r4
 801492c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014930:	fb07 6702 	mla	r7, r7, r2, r6
 8014934:	f10c 0201 	add.w	r2, ip, #1
 8014938:	1c66      	adds	r6, r4, #1
 801493a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801493e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014942:	b2bf      	uxth	r7, r7
 8014944:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014948:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801494c:	ea46 0c0c 	orr.w	ip, r6, ip
 8014950:	1c7e      	adds	r6, r7, #1
 8014952:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014956:	0976      	lsrs	r6, r6, #5
 8014958:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801495c:	ea4c 0c06 	orr.w	ip, ip, r6
 8014960:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014964:	e7ba      	b.n	80148dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014966:	b007      	add	sp, #28
 8014968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801496c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801496c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014970:	b085      	sub	sp, #20
 8014972:	468b      	mov	fp, r1
 8014974:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014976:	9203      	str	r2, [sp, #12]
 8014978:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801497c:	6841      	ldr	r1, [r0, #4]
 801497e:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014982:	fb01 2404 	mla	r4, r1, r4, r2
 8014986:	6802      	ldr	r2, [r0, #0]
 8014988:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801498c:	f8d8 2000 	ldr.w	r2, [r8]
 8014990:	9201      	str	r2, [sp, #4]
 8014992:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014996:	f1bb 0f00 	cmp.w	fp, #0
 801499a:	dc03      	bgt.n	80149a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801499c:	9a03      	ldr	r2, [sp, #12]
 801499e:	2a00      	cmp	r2, #0
 80149a0:	f340 814f 	ble.w	8014c42 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80149a4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80149a6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80149aa:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80149ae:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80149b2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80149b4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80149b8:	2b00      	cmp	r3, #0
 80149ba:	dd0e      	ble.n	80149da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80149bc:	1408      	asrs	r0, r1, #16
 80149be:	d405      	bmi.n	80149cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80149c0:	42b8      	cmp	r0, r7
 80149c2:	da03      	bge.n	80149cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80149c4:	1410      	asrs	r0, r2, #16
 80149c6:	d401      	bmi.n	80149cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80149c8:	42b0      	cmp	r0, r6
 80149ca:	db07      	blt.n	80149dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149cc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80149ce:	4401      	add	r1, r0
 80149d0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80149d2:	3b01      	subs	r3, #1
 80149d4:	4402      	add	r2, r0
 80149d6:	3402      	adds	r4, #2
 80149d8:	e7ee      	b.n	80149b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80149da:	d017      	beq.n	8014a0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80149dc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80149de:	1e58      	subs	r0, r3, #1
 80149e0:	fb05 1500 	mla	r5, r5, r0, r1
 80149e4:	142d      	asrs	r5, r5, #16
 80149e6:	d409      	bmi.n	80149fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80149e8:	42bd      	cmp	r5, r7
 80149ea:	da07      	bge.n	80149fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80149ec:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80149ee:	fb05 2000 	mla	r0, r5, r0, r2
 80149f2:	1400      	asrs	r0, r0, #16
 80149f4:	d402      	bmi.n	80149fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80149f6:	42b0      	cmp	r0, r6
 80149f8:	f2c0 80ba 	blt.w	8014b70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80149fc:	2600      	movs	r6, #0
 80149fe:	1998      	adds	r0, r3, r6
 8014a00:	2800      	cmp	r0, #0
 8014a02:	dc3e      	bgt.n	8014a82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014a04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014a08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014a0c:	f1bb 0f00 	cmp.w	fp, #0
 8014a10:	f340 8117 	ble.w	8014c42 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014a14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014a20:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a22:	f1bb 0b01 	subs.w	fp, fp, #1
 8014a26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a2e:	eeb0 6a62 	vmov.f32	s12, s5
 8014a32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a3e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014a42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a46:	eeb0 6a43 	vmov.f32	s12, s6
 8014a4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a4e:	ee12 2a90 	vmov	r2, s5
 8014a52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a56:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a5a:	ee13 2a10 	vmov	r2, s6
 8014a5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a62:	9311      	str	r3, [sp, #68]	@ 0x44
 8014a64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a66:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a6a:	9a03      	ldr	r2, [sp, #12]
 8014a6c:	9312      	str	r3, [sp, #72]	@ 0x48
 8014a6e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014a72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a74:	eeb0 3a67 	vmov.f32	s6, s15
 8014a78:	bf08      	it	eq
 8014a7a:	4613      	moveq	r3, r2
 8014a7c:	eef0 2a47 	vmov.f32	s5, s14
 8014a80:	e789      	b.n	8014996 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014a82:	140f      	asrs	r7, r1, #16
 8014a84:	d424      	bmi.n	8014ad0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014a86:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014a8a:	42bd      	cmp	r5, r7
 8014a8c:	dd20      	ble.n	8014ad0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014a8e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014a92:	d41d      	bmi.n	8014ad0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014a94:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014a98:	4560      	cmp	r0, ip
 8014a9a:	dd19      	ble.n	8014ad0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014a9c:	b22d      	sxth	r5, r5
 8014a9e:	fb0c 7505 	mla	r5, ip, r5, r7
 8014aa2:	9801      	ldr	r0, [sp, #4]
 8014aa4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8014aa8:	0e07      	lsrs	r7, r0, #24
 8014aaa:	2fff      	cmp	r7, #255	@ 0xff
 8014aac:	d116      	bne.n	8014adc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014aae:	f06f 0501 	mvn.w	r5, #1
 8014ab2:	fb05 f706 	mul.w	r7, r5, r6
 8014ab6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8014aba:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014abe:	0945      	lsrs	r5, r0, #5
 8014ac0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014ac4:	ea4c 0505 	orr.w	r5, ip, r5
 8014ac8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014acc:	4305      	orrs	r5, r0
 8014ace:	53e5      	strh	r5, [r4, r7]
 8014ad0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014ad2:	4401      	add	r1, r0
 8014ad4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014ad6:	3e01      	subs	r6, #1
 8014ad8:	4402      	add	r2, r0
 8014ada:	e790      	b.n	80149fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014adc:	b2fd      	uxtb	r5, r7
 8014ade:	2f00      	cmp	r7, #0
 8014ae0:	d0f6      	beq.n	8014ad0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014ae2:	f06f 0701 	mvn.w	r7, #1
 8014ae6:	4377      	muls	r7, r6
 8014ae8:	fa1f f985 	uxth.w	r9, r5
 8014aec:	f834 e007 	ldrh.w	lr, [r4, r7]
 8014af0:	9702      	str	r7, [sp, #8]
 8014af2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014af6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014afa:	43ed      	mvns	r5, r5
 8014afc:	b2ed      	uxtb	r5, r5
 8014afe:	fb17 f709 	smulbb	r7, r7, r9
 8014b02:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014b06:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014b0a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014b0e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014b12:	b2c0      	uxtb	r0, r0
 8014b14:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014b18:	fa5f fe8e 	uxtb.w	lr, lr
 8014b1c:	fb10 f009 	smulbb	r0, r0, r9
 8014b20:	fb0e 0005 	mla	r0, lr, r5, r0
 8014b24:	b280      	uxth	r0, r0
 8014b26:	fa1f fc8c 	uxth.w	ip, ip
 8014b2a:	fb1a fa09 	smulbb	sl, sl, r9
 8014b2e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014b32:	fb07 a705 	mla	r7, r7, r5, sl
 8014b36:	f100 0a01 	add.w	sl, r0, #1
 8014b3a:	f10c 0501 	add.w	r5, ip, #1
 8014b3e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014b42:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014b46:	b2bf      	uxth	r7, r7
 8014b48:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014b4c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014b50:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014b54:	f107 0a01 	add.w	sl, r7, #1
 8014b58:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014b5c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014b60:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014b64:	9802      	ldr	r0, [sp, #8]
 8014b66:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014b6a:	f824 c000 	strh.w	ip, [r4, r0]
 8014b6e:	e7af      	b.n	8014ad0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014b70:	f04f 0e00 	mov.w	lr, #0
 8014b74:	eba3 000e 	sub.w	r0, r3, lr
 8014b78:	2800      	cmp	r0, #0
 8014b7a:	f77f af43 	ble.w	8014a04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014b7e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014b82:	140d      	asrs	r5, r1, #16
 8014b84:	1410      	asrs	r0, r2, #16
 8014b86:	fb06 5000 	mla	r0, r6, r0, r5
 8014b8a:	9d01      	ldr	r5, [sp, #4]
 8014b8c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014b90:	0e2e      	lsrs	r6, r5, #24
 8014b92:	2eff      	cmp	r6, #255	@ 0xff
 8014b94:	d112      	bne.n	8014bbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8014b96:	482c      	ldr	r0, [pc, #176]	@ (8014c48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8014b98:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014b9c:	0968      	lsrs	r0, r5, #5
 8014b9e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014ba2:	4330      	orrs	r0, r6
 8014ba4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014ba8:	4328      	orrs	r0, r5
 8014baa:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8014bae:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014bb0:	4401      	add	r1, r0
 8014bb2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014bb4:	f10e 0e01 	add.w	lr, lr, #1
 8014bb8:	4402      	add	r2, r0
 8014bba:	e7db      	b.n	8014b74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8014bbc:	b2f0      	uxtb	r0, r6
 8014bbe:	2e00      	cmp	r6, #0
 8014bc0:	d0f5      	beq.n	8014bae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014bc2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014bc6:	fa1f f980 	uxth.w	r9, r0
 8014bca:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014bce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014bd2:	43c0      	mvns	r0, r0
 8014bd4:	b2c0      	uxtb	r0, r0
 8014bd6:	fb16 f609 	smulbb	r6, r6, r9
 8014bda:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014bde:	fb07 6700 	mla	r7, r7, r0, r6
 8014be2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014be6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014bea:	b2ed      	uxtb	r5, r5
 8014bec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014bf0:	fa5f fc8c 	uxtb.w	ip, ip
 8014bf4:	fb15 f509 	smulbb	r5, r5, r9
 8014bf8:	fb0c 5500 	mla	r5, ip, r0, r5
 8014bfc:	b2bf      	uxth	r7, r7
 8014bfe:	fb1a fa09 	smulbb	sl, sl, r9
 8014c02:	b2ad      	uxth	r5, r5
 8014c04:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014c08:	fb06 a600 	mla	r6, r6, r0, sl
 8014c0c:	1c78      	adds	r0, r7, #1
 8014c0e:	f105 0a01 	add.w	sl, r5, #1
 8014c12:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014c16:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014c1a:	b2b6      	uxth	r6, r6
 8014c1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014c20:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014c24:	ea4a 0707 	orr.w	r7, sl, r7
 8014c28:	f106 0a01 	add.w	sl, r6, #1
 8014c2c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014c30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014c34:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014c38:	ea47 070a 	orr.w	r7, r7, sl
 8014c3c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8014c40:	e7b5      	b.n	8014bae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014c42:	b005      	add	sp, #20
 8014c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c48:	fffff800 	.word	0xfffff800

08014c4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c50:	b087      	sub	sp, #28
 8014c52:	468b      	mov	fp, r1
 8014c54:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014c56:	9203      	str	r2, [sp, #12]
 8014c58:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014c5c:	9204      	str	r2, [sp, #16]
 8014c5e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014c62:	6841      	ldr	r1, [r0, #4]
 8014c64:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014c68:	fb01 2404 	mla	r4, r1, r4, r2
 8014c6c:	6802      	ldr	r2, [r0, #0]
 8014c6e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c72:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014c76:	3201      	adds	r2, #1
 8014c78:	f022 0201 	bic.w	r2, r2, #1
 8014c7c:	9200      	str	r2, [sp, #0]
 8014c7e:	f8d9 2000 	ldr.w	r2, [r9]
 8014c82:	9201      	str	r2, [sp, #4]
 8014c84:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014c88:	f1bb 0f00 	cmp.w	fp, #0
 8014c8c:	dc03      	bgt.n	8014c96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014c8e:	9a03      	ldr	r2, [sp, #12]
 8014c90:	2a00      	cmp	r2, #0
 8014c92:	f340 8169 	ble.w	8014f68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014c96:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014c98:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014c9c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014ca0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014ca4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014ca6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014caa:	2b00      	cmp	r3, #0
 8014cac:	dd0e      	ble.n	8014ccc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014cae:	1402      	asrs	r2, r0, #16
 8014cb0:	d405      	bmi.n	8014cbe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014cb2:	42ba      	cmp	r2, r7
 8014cb4:	da03      	bge.n	8014cbe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014cb6:	140a      	asrs	r2, r1, #16
 8014cb8:	d401      	bmi.n	8014cbe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014cba:	42b2      	cmp	r2, r6
 8014cbc:	db07      	blt.n	8014cce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8014cbe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014cc0:	4410      	add	r0, r2
 8014cc2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014cc4:	3b01      	subs	r3, #1
 8014cc6:	4411      	add	r1, r2
 8014cc8:	3402      	adds	r4, #2
 8014cca:	e7ee      	b.n	8014caa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014ccc:	d017      	beq.n	8014cfe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014cce:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014cd0:	1e5a      	subs	r2, r3, #1
 8014cd2:	fb05 0502 	mla	r5, r5, r2, r0
 8014cd6:	142d      	asrs	r5, r5, #16
 8014cd8:	d409      	bmi.n	8014cee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014cda:	42bd      	cmp	r5, r7
 8014cdc:	da07      	bge.n	8014cee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014cde:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014ce0:	fb05 1202 	mla	r2, r5, r2, r1
 8014ce4:	1412      	asrs	r2, r2, #16
 8014ce6:	d402      	bmi.n	8014cee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014ce8:	42b2      	cmp	r2, r6
 8014cea:	f2c0 80c7 	blt.w	8014e7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8014cee:	2700      	movs	r7, #0
 8014cf0:	19da      	adds	r2, r3, r7
 8014cf2:	2a00      	cmp	r2, #0
 8014cf4:	dc3e      	bgt.n	8014d74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014cf6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014cfa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014cfe:	f1bb 0f00 	cmp.w	fp, #0
 8014d02:	f340 8131 	ble.w	8014f68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014d06:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014d0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014d0e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014d12:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d14:	f1bb 0b01 	subs.w	fp, fp, #1
 8014d18:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014d1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014d20:	eeb0 6a62 	vmov.f32	s12, s5
 8014d24:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014d28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d2c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d30:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014d34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d38:	eeb0 6a43 	vmov.f32	s12, s6
 8014d3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d40:	ee12 2a90 	vmov	r2, s5
 8014d44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d48:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d4c:	ee13 2a10 	vmov	r2, s6
 8014d50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d54:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014d56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d58:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d5c:	9a03      	ldr	r2, [sp, #12]
 8014d5e:	9314      	str	r3, [sp, #80]	@ 0x50
 8014d60:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014d64:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d66:	eeb0 3a67 	vmov.f32	s6, s15
 8014d6a:	bf08      	it	eq
 8014d6c:	4613      	moveq	r3, r2
 8014d6e:	eef0 2a47 	vmov.f32	s5, s14
 8014d72:	e789      	b.n	8014c88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014d74:	1405      	asrs	r5, r0, #16
 8014d76:	d435      	bmi.n	8014de4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014d78:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014d7c:	42aa      	cmp	r2, r5
 8014d7e:	dd31      	ble.n	8014de4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014d80:	140e      	asrs	r6, r1, #16
 8014d82:	d42f      	bmi.n	8014de4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014d84:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014d88:	42b2      	cmp	r2, r6
 8014d8a:	dd2b      	ble.n	8014de4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014d8c:	9a00      	ldr	r2, [sp, #0]
 8014d8e:	fb06 5502 	mla	r5, r6, r2, r5
 8014d92:	086a      	lsrs	r2, r5, #1
 8014d94:	9e01      	ldr	r6, [sp, #4]
 8014d96:	5cb2      	ldrb	r2, [r6, r2]
 8014d98:	07ee      	lsls	r6, r5, #31
 8014d9a:	bf54      	ite	pl
 8014d9c:	f002 020f 	andpl.w	r2, r2, #15
 8014da0:	1112      	asrmi	r2, r2, #4
 8014da2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014da6:	b2d2      	uxtb	r2, r2
 8014da8:	b1e2      	cbz	r2, 8014de4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014daa:	9d04      	ldr	r5, [sp, #16]
 8014dac:	436a      	muls	r2, r5
 8014dae:	1c55      	adds	r5, r2, #1
 8014db0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014db4:	4d6e      	ldr	r5, [pc, #440]	@ (8014f70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014db6:	682d      	ldr	r5, [r5, #0]
 8014db8:	1212      	asrs	r2, r2, #8
 8014dba:	0a2e      	lsrs	r6, r5, #8
 8014dbc:	2aff      	cmp	r2, #255	@ 0xff
 8014dbe:	9605      	str	r6, [sp, #20]
 8014dc0:	d116      	bne.n	8014df0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8014dc2:	f06f 0201 	mvn.w	r2, #1
 8014dc6:	fb02 fc07 	mul.w	ip, r2, r7
 8014dca:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014dce:	096a      	lsrs	r2, r5, #5
 8014dd0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014dd4:	f026 0607 	bic.w	r6, r6, #7
 8014dd8:	4316      	orrs	r6, r2
 8014dda:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014dde:	432e      	orrs	r6, r5
 8014de0:	f824 600c 	strh.w	r6, [r4, ip]
 8014de4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014de6:	4410      	add	r0, r2
 8014de8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014dea:	3f01      	subs	r7, #1
 8014dec:	4411      	add	r1, r2
 8014dee:	e77f      	b.n	8014cf0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8014df0:	f06f 0601 	mvn.w	r6, #1
 8014df4:	437e      	muls	r6, r7
 8014df6:	fa1f fa82 	uxth.w	sl, r2
 8014dfa:	f834 8006 	ldrh.w	r8, [r4, r6]
 8014dfe:	9602      	str	r6, [sp, #8]
 8014e00:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014e04:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8014e08:	43d2      	mvns	r2, r2
 8014e0a:	b2d2      	uxtb	r2, r2
 8014e0c:	fb1c fc0a 	smulbb	ip, ip, sl
 8014e10:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014e14:	fb0e ce02 	mla	lr, lr, r2, ip
 8014e18:	b2ed      	uxtb	r5, r5
 8014e1a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014e1e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014e22:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014e26:	fa5f f888 	uxtb.w	r8, r8
 8014e2a:	fb15 f50a 	smulbb	r5, r5, sl
 8014e2e:	fb08 5502 	mla	r5, r8, r2, r5
 8014e32:	fa1f fe8e 	uxth.w	lr, lr
 8014e36:	fb16 f60a 	smulbb	r6, r6, sl
 8014e3a:	b2ad      	uxth	r5, r5
 8014e3c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014e40:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014e44:	f10e 0201 	add.w	r2, lr, #1
 8014e48:	1c6e      	adds	r6, r5, #1
 8014e4a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014e4e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8014e52:	fa1f fc8c 	uxth.w	ip, ip
 8014e56:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014e5a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014e5e:	ea46 0e0e 	orr.w	lr, r6, lr
 8014e62:	f10c 0601 	add.w	r6, ip, #1
 8014e66:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014e6a:	0976      	lsrs	r6, r6, #5
 8014e6c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014e70:	9a02      	ldr	r2, [sp, #8]
 8014e72:	ea4e 0e06 	orr.w	lr, lr, r6
 8014e76:	f824 e002 	strh.w	lr, [r4, r2]
 8014e7a:	e7b3      	b.n	8014de4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014e7c:	f04f 0800 	mov.w	r8, #0
 8014e80:	eba3 0208 	sub.w	r2, r3, r8
 8014e84:	2a00      	cmp	r2, #0
 8014e86:	f77f af36 	ble.w	8014cf6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014e8a:	9e00      	ldr	r6, [sp, #0]
 8014e8c:	1402      	asrs	r2, r0, #16
 8014e8e:	140d      	asrs	r5, r1, #16
 8014e90:	fb06 2505 	mla	r5, r6, r5, r2
 8014e94:	086a      	lsrs	r2, r5, #1
 8014e96:	9e01      	ldr	r6, [sp, #4]
 8014e98:	5cb2      	ldrb	r2, [r6, r2]
 8014e9a:	07ed      	lsls	r5, r5, #31
 8014e9c:	bf54      	ite	pl
 8014e9e:	f002 020f 	andpl.w	r2, r2, #15
 8014ea2:	1112      	asrmi	r2, r2, #4
 8014ea4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014ea8:	b2d2      	uxtb	r2, r2
 8014eaa:	b1c2      	cbz	r2, 8014ede <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8014eac:	9d04      	ldr	r5, [sp, #16]
 8014eae:	436a      	muls	r2, r5
 8014eb0:	1c55      	adds	r5, r2, #1
 8014eb2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014eb6:	4d2e      	ldr	r5, [pc, #184]	@ (8014f70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014eb8:	1212      	asrs	r2, r2, #8
 8014eba:	682e      	ldr	r6, [r5, #0]
 8014ebc:	2aff      	cmp	r2, #255	@ 0xff
 8014ebe:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8014ec2:	d113      	bne.n	8014eec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014ec4:	0972      	lsrs	r2, r6, #5
 8014ec6:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8014eca:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014ece:	f025 0507 	bic.w	r5, r5, #7
 8014ed2:	4315      	orrs	r5, r2
 8014ed4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8014ed8:	4335      	orrs	r5, r6
 8014eda:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8014ede:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014ee0:	4410      	add	r0, r2
 8014ee2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014ee4:	f108 0801 	add.w	r8, r8, #1
 8014ee8:	4411      	add	r1, r2
 8014eea:	e7c9      	b.n	8014e80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8014eec:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014ef0:	fa1f fa82 	uxth.w	sl, r2
 8014ef4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014ef8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8014efc:	43d2      	mvns	r2, r2
 8014efe:	b2d2      	uxtb	r2, r2
 8014f00:	fb17 f70a 	smulbb	r7, r7, sl
 8014f04:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014f08:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014f0c:	b2f6      	uxtb	r6, r6
 8014f0e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014f12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014f16:	fa5f fe8e 	uxtb.w	lr, lr
 8014f1a:	fb16 f60a 	smulbb	r6, r6, sl
 8014f1e:	fb0e 6602 	mla	r6, lr, r2, r6
 8014f22:	b2ed      	uxtb	r5, r5
 8014f24:	fa1f fc8c 	uxth.w	ip, ip
 8014f28:	fb15 f50a 	smulbb	r5, r5, sl
 8014f2c:	b2b6      	uxth	r6, r6
 8014f2e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014f32:	fb07 5702 	mla	r7, r7, r2, r5
 8014f36:	f10c 0201 	add.w	r2, ip, #1
 8014f3a:	1c75      	adds	r5, r6, #1
 8014f3c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014f40:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8014f44:	b2bf      	uxth	r7, r7
 8014f46:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014f4a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014f4e:	ea45 0c0c 	orr.w	ip, r5, ip
 8014f52:	1c7d      	adds	r5, r7, #1
 8014f54:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8014f58:	096d      	lsrs	r5, r5, #5
 8014f5a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014f5e:	ea4c 0c05 	orr.w	ip, ip, r5
 8014f62:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8014f66:	e7ba      	b.n	8014ede <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8014f68:	b007      	add	sp, #28
 8014f6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f6e:	bf00      	nop
 8014f70:	2001400c 	.word	0x2001400c

08014f74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f78:	b087      	sub	sp, #28
 8014f7a:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8015288 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014f7e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014f80:	9205      	str	r2, [sp, #20]
 8014f82:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014f86:	9101      	str	r1, [sp, #4]
 8014f88:	6841      	ldr	r1, [r0, #4]
 8014f8a:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8014f8e:	fb01 2404 	mla	r4, r1, r4, r2
 8014f92:	6802      	ldr	r2, [r0, #0]
 8014f94:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014f98:	f8db 2008 	ldr.w	r2, [fp, #8]
 8014f9c:	3201      	adds	r2, #1
 8014f9e:	f022 0201 	bic.w	r2, r2, #1
 8014fa2:	9202      	str	r2, [sp, #8]
 8014fa4:	f8db 2000 	ldr.w	r2, [fp]
 8014fa8:	9203      	str	r2, [sp, #12]
 8014faa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014fae:	9a01      	ldr	r2, [sp, #4]
 8014fb0:	2a00      	cmp	r2, #0
 8014fb2:	dc03      	bgt.n	8014fbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014fb4:	9a05      	ldr	r2, [sp, #20]
 8014fb6:	2a00      	cmp	r2, #0
 8014fb8:	f340 8162 	ble.w	8015280 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8014fbc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014fbe:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8014fc2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8014fc6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014fca:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014fcc:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014fd0:	2b00      	cmp	r3, #0
 8014fd2:	dd0e      	ble.n	8014ff2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014fd4:	1402      	asrs	r2, r0, #16
 8014fd6:	d405      	bmi.n	8014fe4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014fd8:	42ba      	cmp	r2, r7
 8014fda:	da03      	bge.n	8014fe4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014fdc:	140a      	asrs	r2, r1, #16
 8014fde:	d401      	bmi.n	8014fe4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014fe0:	42b2      	cmp	r2, r6
 8014fe2:	db07      	blt.n	8014ff4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014fe4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014fe6:	4410      	add	r0, r2
 8014fe8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014fea:	3b01      	subs	r3, #1
 8014fec:	4411      	add	r1, r2
 8014fee:	3402      	adds	r4, #2
 8014ff0:	e7ee      	b.n	8014fd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014ff2:	d017      	beq.n	8015024 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014ff4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014ff6:	1e5a      	subs	r2, r3, #1
 8014ff8:	fb05 0502 	mla	r5, r5, r2, r0
 8014ffc:	142d      	asrs	r5, r5, #16
 8014ffe:	d409      	bmi.n	8015014 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015000:	42bd      	cmp	r5, r7
 8015002:	da07      	bge.n	8015014 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015004:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015006:	fb05 1202 	mla	r2, r5, r2, r1
 801500a:	1412      	asrs	r2, r2, #16
 801500c:	d402      	bmi.n	8015014 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801500e:	42b2      	cmp	r2, r6
 8015010:	f2c0 80c3 	blt.w	801519a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8015014:	2500      	movs	r5, #0
 8015016:	195a      	adds	r2, r3, r5
 8015018:	2a00      	cmp	r2, #0
 801501a:	dc3f      	bgt.n	801509c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801501c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015020:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015024:	9b01      	ldr	r3, [sp, #4]
 8015026:	2b00      	cmp	r3, #0
 8015028:	f340 812a 	ble.w	8015280 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801502c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015030:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015034:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015038:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801503a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801503e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015042:	eeb0 6a62 	vmov.f32	s12, s5
 8015046:	ee61 7a27 	vmul.f32	s15, s2, s15
 801504a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801504e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015052:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015056:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801505a:	eeb0 6a43 	vmov.f32	s12, s6
 801505e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015062:	ee12 2a90 	vmov	r2, s5
 8015066:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801506a:	fb92 f3f3 	sdiv	r3, r2, r3
 801506e:	ee13 2a10 	vmov	r2, s6
 8015072:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015074:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015076:	fb92 f3f3 	sdiv	r3, r2, r3
 801507a:	9314      	str	r3, [sp, #80]	@ 0x50
 801507c:	9b01      	ldr	r3, [sp, #4]
 801507e:	9a05      	ldr	r2, [sp, #20]
 8015080:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015084:	3b01      	subs	r3, #1
 8015086:	9301      	str	r3, [sp, #4]
 8015088:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801508c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801508e:	eeb0 3a67 	vmov.f32	s6, s15
 8015092:	bf08      	it	eq
 8015094:	4613      	moveq	r3, r2
 8015096:	eef0 2a47 	vmov.f32	s5, s14
 801509a:	e788      	b.n	8014fae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801509c:	1406      	asrs	r6, r0, #16
 801509e:	d42c      	bmi.n	80150fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80150a0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80150a4:	42b2      	cmp	r2, r6
 80150a6:	dd28      	ble.n	80150fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80150a8:	140f      	asrs	r7, r1, #16
 80150aa:	d426      	bmi.n	80150fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80150ac:	f8db 200c 	ldr.w	r2, [fp, #12]
 80150b0:	42ba      	cmp	r2, r7
 80150b2:	dd22      	ble.n	80150fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80150b4:	9a02      	ldr	r2, [sp, #8]
 80150b6:	fb07 6602 	mla	r6, r7, r2, r6
 80150ba:	0872      	lsrs	r2, r6, #1
 80150bc:	9f03      	ldr	r7, [sp, #12]
 80150be:	5cba      	ldrb	r2, [r7, r2]
 80150c0:	07f6      	lsls	r6, r6, #31
 80150c2:	bf54      	ite	pl
 80150c4:	f002 020f 	andpl.w	r2, r2, #15
 80150c8:	1112      	asrmi	r2, r2, #4
 80150ca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80150ce:	b2d2      	uxtb	r2, r2
 80150d0:	2aff      	cmp	r2, #255	@ 0xff
 80150d2:	d118      	bne.n	8015106 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80150d4:	f8d8 2000 	ldr.w	r2, [r8]
 80150d8:	f06f 0601 	mvn.w	r6, #1
 80150dc:	fb06 f705 	mul.w	r7, r6, r5
 80150e0:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 80150e4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80150e8:	0956      	lsrs	r6, r2, #5
 80150ea:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80150ee:	ea4c 0606 	orr.w	r6, ip, r6
 80150f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80150f6:	4316      	orrs	r6, r2
 80150f8:	53e6      	strh	r6, [r4, r7]
 80150fa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80150fc:	4410      	add	r0, r2
 80150fe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015100:	3d01      	subs	r5, #1
 8015102:	4411      	add	r1, r2
 8015104:	e787      	b.n	8015016 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015106:	2a00      	cmp	r2, #0
 8015108:	d0f7      	beq.n	80150fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801510a:	f06f 0601 	mvn.w	r6, #1
 801510e:	436e      	muls	r6, r5
 8015110:	f8d8 c000 	ldr.w	ip, [r8]
 8015114:	f834 e006 	ldrh.w	lr, [r4, r6]
 8015118:	9604      	str	r6, [sp, #16]
 801511a:	fa1f f982 	uxth.w	r9, r2
 801511e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015122:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8015126:	43d2      	mvns	r2, r2
 8015128:	b2d2      	uxtb	r2, r2
 801512a:	fb16 f609 	smulbb	r6, r6, r9
 801512e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015132:	fb07 6702 	mla	r7, r7, r2, r6
 8015136:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801513a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801513e:	fa5f fc8c 	uxtb.w	ip, ip
 8015142:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015146:	fa5f fe8e 	uxtb.w	lr, lr
 801514a:	fb1c fc09 	smulbb	ip, ip, r9
 801514e:	fb0e cc02 	mla	ip, lr, r2, ip
 8015152:	b2bf      	uxth	r7, r7
 8015154:	fb1a fa09 	smulbb	sl, sl, r9
 8015158:	fa1f fc8c 	uxth.w	ip, ip
 801515c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015160:	fb06 a602 	mla	r6, r6, r2, sl
 8015164:	1c7a      	adds	r2, r7, #1
 8015166:	f10c 0a01 	add.w	sl, ip, #1
 801516a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801516e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8015172:	b2b6      	uxth	r6, r6
 8015174:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015178:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801517c:	ea4a 0707 	orr.w	r7, sl, r7
 8015180:	f106 0a01 	add.w	sl, r6, #1
 8015184:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015188:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801518c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015190:	9a04      	ldr	r2, [sp, #16]
 8015192:	ea47 070a 	orr.w	r7, r7, sl
 8015196:	52a7      	strh	r7, [r4, r2]
 8015198:	e7af      	b.n	80150fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801519a:	f04f 0e00 	mov.w	lr, #0
 801519e:	eba3 020e 	sub.w	r2, r3, lr
 80151a2:	2a00      	cmp	r2, #0
 80151a4:	f77f af3a 	ble.w	801501c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80151a8:	9e02      	ldr	r6, [sp, #8]
 80151aa:	1402      	asrs	r2, r0, #16
 80151ac:	140d      	asrs	r5, r1, #16
 80151ae:	fb06 2505 	mla	r5, r6, r5, r2
 80151b2:	086a      	lsrs	r2, r5, #1
 80151b4:	9e03      	ldr	r6, [sp, #12]
 80151b6:	5cb2      	ldrb	r2, [r6, r2]
 80151b8:	07ed      	lsls	r5, r5, #31
 80151ba:	bf54      	ite	pl
 80151bc:	f002 020f 	andpl.w	r2, r2, #15
 80151c0:	1112      	asrmi	r2, r2, #4
 80151c2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80151c6:	b2d2      	uxtb	r2, r2
 80151c8:	2aff      	cmp	r2, #255	@ 0xff
 80151ca:	d115      	bne.n	80151f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80151cc:	f8d8 5000 	ldr.w	r5, [r8]
 80151d0:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 80151d4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80151d8:	096a      	lsrs	r2, r5, #5
 80151da:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80151de:	4332      	orrs	r2, r6
 80151e0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80151e4:	432a      	orrs	r2, r5
 80151e6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80151ea:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80151ec:	4410      	add	r0, r2
 80151ee:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80151f0:	f10e 0e01 	add.w	lr, lr, #1
 80151f4:	4411      	add	r1, r2
 80151f6:	e7d2      	b.n	801519e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80151f8:	2a00      	cmp	r2, #0
 80151fa:	d0f6      	beq.n	80151ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80151fc:	f8d8 7000 	ldr.w	r7, [r8]
 8015200:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015204:	fa1f f982 	uxth.w	r9, r2
 8015208:	ea4f 262c 	mov.w	r6, ip, asr #8
 801520c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8015210:	43d2      	mvns	r2, r2
 8015212:	b2d2      	uxtb	r2, r2
 8015214:	fb15 f509 	smulbb	r5, r5, r9
 8015218:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801521c:	fb06 5602 	mla	r6, r6, r2, r5
 8015220:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8015224:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015228:	b2ff      	uxtb	r7, r7
 801522a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801522e:	fa5f fc8c 	uxtb.w	ip, ip
 8015232:	fb17 f709 	smulbb	r7, r7, r9
 8015236:	fb0c 7702 	mla	r7, ip, r2, r7
 801523a:	b2b6      	uxth	r6, r6
 801523c:	fb1a fa09 	smulbb	sl, sl, r9
 8015240:	b2bf      	uxth	r7, r7
 8015242:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015246:	fb05 a502 	mla	r5, r5, r2, sl
 801524a:	1c72      	adds	r2, r6, #1
 801524c:	f107 0a01 	add.w	sl, r7, #1
 8015250:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015254:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015258:	b2ad      	uxth	r5, r5
 801525a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801525e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015262:	ea4a 0606 	orr.w	r6, sl, r6
 8015266:	f105 0a01 	add.w	sl, r5, #1
 801526a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801526e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015272:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015276:	ea46 060a 	orr.w	r6, r6, sl
 801527a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801527e:	e7b4      	b.n	80151ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015280:	b007      	add	sp, #28
 8015282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015286:	bf00      	nop
 8015288:	2001400c 	.word	0x2001400c

0801528c <_ZN8touchgfx8LCD16bppD1Ev>:
 801528c:	4770      	bx	lr

0801528e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 801528e:	4770      	bx	lr

08015290 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8015290:	4770      	bx	lr

08015292 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8015292:	4770      	bx	lr

08015294 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8015294:	4770      	bx	lr

08015296 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8015296:	4770      	bx	lr

08015298 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8015298:	4770      	bx	lr

0801529a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801529a:	4770      	bx	lr

0801529c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801529c:	4770      	bx	lr

0801529e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801529e:	4770      	bx	lr

080152a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80152a0:	4770      	bx	lr

080152a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80152a2:	4770      	bx	lr

080152a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80152a4:	4770      	bx	lr

080152a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80152a6:	4770      	bx	lr

080152a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80152a8:	4770      	bx	lr

080152aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80152aa:	4770      	bx	lr

080152ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80152ac:	4770      	bx	lr

080152ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80152ae:	4770      	bx	lr

080152b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80152b0:	4770      	bx	lr

080152b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80152b2:	4770      	bx	lr

080152b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80152b4:	4770      	bx	lr

080152b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80152b6:	4770      	bx	lr

080152b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80152b8:	4770      	bx	lr

080152ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80152ba:	4770      	bx	lr

080152bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80152bc:	4770      	bx	lr

080152be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80152be:	4770      	bx	lr

080152c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80152c0:	4770      	bx	lr

080152c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80152c2:	4770      	bx	lr

080152c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80152c4:	4770      	bx	lr

080152c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80152c6:	4770      	bx	lr

080152c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80152c8:	4770      	bx	lr

080152ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80152ca:	4770      	bx	lr

080152cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80152cc:	4770      	bx	lr

080152ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80152ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80152d2:	b088      	sub	sp, #32
 80152d4:	ac08      	add	r4, sp, #32
 80152d6:	4606      	mov	r6, r0
 80152d8:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80152dc:	4620      	mov	r0, r4
 80152de:	4688      	mov	r8, r1
 80152e0:	4691      	mov	r9, r2
 80152e2:	f7fd fc31 	bl	8012b48 <_ZNK8touchgfx6Bitmap7getDataEv>
 80152e6:	6833      	ldr	r3, [r6, #0]
 80152e8:	4605      	mov	r5, r0
 80152ea:	4620      	mov	r0, r4
 80152ec:	699f      	ldr	r7, [r3, #24]
 80152ee:	f7fd fb39 	bl	8012964 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80152f2:	4682      	mov	sl, r0
 80152f4:	4620      	mov	r0, r4
 80152f6:	f7fd fb69 	bl	80129cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80152fa:	9500      	str	r5, [sp, #0]
 80152fc:	e9cd a001 	strd	sl, r0, [sp, #4]
 8015300:	464b      	mov	r3, r9
 8015302:	a806      	add	r0, sp, #24
 8015304:	4642      	mov	r2, r8
 8015306:	4631      	mov	r1, r6
 8015308:	47b8      	blx	r7
 801530a:	4628      	mov	r0, r5
 801530c:	b008      	add	sp, #32
 801530e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08015314 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8015314:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015318:	2300      	movs	r3, #0
 801531a:	9300      	str	r3, [sp, #0]
 801531c:	4b3d      	ldr	r3, [pc, #244]	@ (8015414 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801531e:	781b      	ldrb	r3, [r3, #0]
 8015320:	2b00      	cmp	r3, #0
 8015322:	d137      	bne.n	8015394 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8015324:	4a3c      	ldr	r2, [pc, #240]	@ (8015418 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015326:	f9b2 2000 	ldrsh.w	r2, [r2]
 801532a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801532e:	2b00      	cmp	r3, #0
 8015330:	d132      	bne.n	8015398 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015332:	4b3a      	ldr	r3, [pc, #232]	@ (801541c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015334:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015338:	6808      	ldr	r0, [r1, #0]
 801533a:	6849      	ldr	r1, [r1, #4]
 801533c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015340:	ac02      	add	r4, sp, #8
 8015342:	ab02      	add	r3, sp, #8
 8015344:	c303      	stmia	r3!, {r0, r1}
 8015346:	4669      	mov	r1, sp
 8015348:	4620      	mov	r0, r4
 801534a:	f7f9 ff85 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801534e:	4668      	mov	r0, sp
 8015350:	f7f9 ff5a 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015354:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015358:	f8bd 2000 	ldrh.w	r2, [sp]
 801535c:	4d30      	ldr	r5, [pc, #192]	@ (8015420 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801535e:	4413      	add	r3, r2
 8015360:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015364:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8015368:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801536c:	6828      	ldr	r0, [r5, #0]
 801536e:	4413      	add	r3, r2
 8015370:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015374:	6803      	ldr	r3, [r0, #0]
 8015376:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015378:	4798      	blx	r3
 801537a:	f010 0f01 	tst.w	r0, #1
 801537e:	462f      	mov	r7, r5
 8015380:	d00c      	beq.n	801539c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015382:	6828      	ldr	r0, [r5, #0]
 8015384:	6803      	ldr	r3, [r0, #0]
 8015386:	e894 0006 	ldmia.w	r4, {r1, r2}
 801538a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801538c:	4798      	blx	r3
 801538e:	b004      	add	sp, #16
 8015390:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015394:	4a21      	ldr	r2, [pc, #132]	@ (801541c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015396:	e7c6      	b.n	8015326 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8015398:	4b1f      	ldr	r3, [pc, #124]	@ (8015418 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801539a:	e7cb      	b.n	8015334 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801539c:	6838      	ldr	r0, [r7, #0]
 801539e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80153a2:	6803      	ldr	r3, [r0, #0]
 80153a4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80153a8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80153aa:	4798      	blx	r3
 80153ac:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80153b0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80153b4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80153b8:	fb16 3602 	smlabb	r6, r6, r2, r3
 80153bc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80153c0:	6838      	ldr	r0, [r7, #0]
 80153c2:	6803      	ldr	r3, [r0, #0]
 80153c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80153c6:	4798      	blx	r3
 80153c8:	4a13      	ldr	r2, [pc, #76]	@ (8015418 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80153ca:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80153ce:	8813      	ldrh	r3, [r2, #0]
 80153d0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80153d4:	fb03 1404 	mla	r4, r3, r4, r1
 80153d8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80153dc:	435d      	muls	r5, r3
 80153de:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80153e2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80153e6:	4691      	mov	r9, r2
 80153e8:	6838      	ldr	r0, [r7, #0]
 80153ea:	42ac      	cmp	r4, r5
 80153ec:	6803      	ldr	r3, [r0, #0]
 80153ee:	d20e      	bcs.n	801540e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80153f0:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 80153f4:	4632      	mov	r2, r6
 80153f6:	4643      	mov	r3, r8
 80153f8:	4621      	mov	r1, r4
 80153fa:	47d0      	blx	sl
 80153fc:	f8b9 3000 	ldrh.w	r3, [r9]
 8015400:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015404:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8015408:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801540c:	e7ec      	b.n	80153e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801540e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015410:	4798      	blx	r3
 8015412:	e7bc      	b.n	801538e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8015414:	20013ff2 	.word	0x20013ff2
 8015418:	20013ff4 	.word	0x20013ff4
 801541c:	20013ff6 	.word	0x20013ff6
 8015420:	20013ffc 	.word	0x20013ffc

08015424 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8015424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015428:	b08b      	sub	sp, #44	@ 0x2c
 801542a:	460f      	mov	r7, r1
 801542c:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8015430:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8015434:	4616      	mov	r6, r2
 8015436:	f1bb 0f00 	cmp.w	fp, #0
 801543a:	d04a      	beq.n	80154d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801543c:	6810      	ldr	r0, [r2, #0]
 801543e:	6851      	ldr	r1, [r2, #4]
 8015440:	ad06      	add	r5, sp, #24
 8015442:	c503      	stmia	r5!, {r0, r1}
 8015444:	6818      	ldr	r0, [r3, #0]
 8015446:	6859      	ldr	r1, [r3, #4]
 8015448:	ad08      	add	r5, sp, #32
 801544a:	c503      	stmia	r5!, {r0, r1}
 801544c:	a806      	add	r0, sp, #24
 801544e:	f7f9 fedb 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015452:	4631      	mov	r1, r6
 8015454:	a808      	add	r0, sp, #32
 8015456:	f7f9 feff 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801545a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801545e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8015462:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8015466:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801546a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801546e:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015472:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8015476:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801547a:	4f5f      	ldr	r7, [pc, #380]	@ (80155f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801547c:	440a      	add	r2, r1
 801547e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015482:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015486:	6838      	ldr	r0, [r7, #0]
 8015488:	4413      	add	r3, r2
 801548a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801548e:	6803      	ldr	r3, [r0, #0]
 8015490:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015492:	4798      	blx	r3
 8015494:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8015498:	46b9      	mov	r9, r7
 801549a:	d11d      	bne.n	80154d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801549c:	b9fc      	cbnz	r4, 80154de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801549e:	f010 0f01 	tst.w	r0, #1
 80154a2:	d01c      	beq.n	80154de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80154a4:	f8d9 0000 	ldr.w	r0, [r9]
 80154a8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80154ac:	6801      	ldr	r1, [r0, #0]
 80154ae:	f8cd b00c 	str.w	fp, [sp, #12]
 80154b2:	2700      	movs	r7, #0
 80154b4:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80154b8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80154bc:	9402      	str	r4, [sp, #8]
 80154be:	b2ad      	uxth	r5, r5
 80154c0:	fa1f f488 	uxth.w	r4, r8
 80154c4:	9501      	str	r5, [sp, #4]
 80154c6:	9400      	str	r4, [sp, #0]
 80154c8:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 80154ca:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80154ce:	4631      	mov	r1, r6
 80154d0:	47a0      	blx	r4
 80154d2:	b00b      	add	sp, #44	@ 0x2c
 80154d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154d8:	f010 0f04 	tst.w	r0, #4
 80154dc:	e7e1      	b.n	80154a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80154de:	f8d9 0000 	ldr.w	r0, [r9]
 80154e2:	6803      	ldr	r3, [r0, #0]
 80154e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80154e6:	4798      	blx	r3
 80154e8:	4b44      	ldr	r3, [pc, #272]	@ (80155fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80154ea:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80154ee:	881a      	ldrh	r2, [r3, #0]
 80154f0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80154f4:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80154f8:	fb02 1404 	mla	r4, r2, r4, r1
 80154fc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015500:	469a      	mov	sl, r3
 8015502:	fb05 f502 	mul.w	r5, r5, r2
 8015506:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801550a:	d059      	beq.n	80155c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801550c:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8015510:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015514:	fa1f f28b 	uxth.w	r2, fp
 8015518:	fa1f f989 	uxth.w	r9, r9
 801551c:	469e      	mov	lr, r3
 801551e:	42ac      	cmp	r4, r5
 8015520:	d264      	bcs.n	80155ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015522:	eb04 0a07 	add.w	sl, r4, r7
 8015526:	4554      	cmp	r4, sl
 8015528:	d23d      	bcs.n	80155a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801552a:	8821      	ldrh	r1, [r4, #0]
 801552c:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015530:	1208      	asrs	r0, r1, #8
 8015532:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015536:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801553a:	fb10 f009 	smulbb	r0, r0, r9
 801553e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015542:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015546:	00c9      	lsls	r1, r1, #3
 8015548:	fb0c 0c02 	mla	ip, ip, r2, r0
 801554c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015550:	10d8      	asrs	r0, r3, #3
 8015552:	b2c9      	uxtb	r1, r1
 8015554:	00db      	lsls	r3, r3, #3
 8015556:	fa1f fc8c 	uxth.w	ip, ip
 801555a:	fb1b fb09 	smulbb	fp, fp, r9
 801555e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8015562:	b2db      	uxtb	r3, r3
 8015564:	fb11 f109 	smulbb	r1, r1, r9
 8015568:	fb00 b002 	mla	r0, r0, r2, fp
 801556c:	fb03 1302 	mla	r3, r3, r2, r1
 8015570:	f10c 0b01 	add.w	fp, ip, #1
 8015574:	b29b      	uxth	r3, r3
 8015576:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801557a:	b280      	uxth	r0, r0
 801557c:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8015580:	f103 0c01 	add.w	ip, r3, #1
 8015584:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015588:	1c43      	adds	r3, r0, #1
 801558a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801558e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015592:	0940      	lsrs	r0, r0, #5
 8015594:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015598:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801559c:	ea4c 0c00 	orr.w	ip, ip, r0
 80155a0:	f824 cb02 	strh.w	ip, [r4], #2
 80155a4:	e7bf      	b.n	8015526 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80155a6:	f8be 3000 	ldrh.w	r3, [lr]
 80155aa:	eba3 0308 	sub.w	r3, r3, r8
 80155ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155b2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80155b6:	eba3 0308 	sub.w	r3, r3, r8
 80155ba:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80155be:	e7ae      	b.n	801551e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80155c0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80155c4:	f8d9 0000 	ldr.w	r0, [r9]
 80155c8:	42ac      	cmp	r4, r5
 80155ca:	6803      	ldr	r3, [r0, #0]
 80155cc:	d20e      	bcs.n	80155ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80155ce:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 80155d2:	4632      	mov	r2, r6
 80155d4:	463b      	mov	r3, r7
 80155d6:	4621      	mov	r1, r4
 80155d8:	47c0      	blx	r8
 80155da:	f8ba 3000 	ldrh.w	r3, [sl]
 80155de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155e2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80155e6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80155ea:	e7eb      	b.n	80155c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80155ec:	4b02      	ldr	r3, [pc, #8]	@ (80155f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80155ee:	6818      	ldr	r0, [r3, #0]
 80155f0:	6803      	ldr	r3, [r0, #0]
 80155f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80155f4:	4798      	blx	r3
 80155f6:	e76c      	b.n	80154d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80155f8:	20013ffc 	.word	0x20013ffc
 80155fc:	20013ff4 	.word	0x20013ff4

08015600 <_ZN8touchgfx8LCD16bppD0Ev>:
 8015600:	b510      	push	{r4, lr}
 8015602:	218c      	movs	r1, #140	@ 0x8c
 8015604:	4604      	mov	r4, r0
 8015606:	f00c fa2c 	bl	8021a62 <_ZdlPvj>
 801560a:	4620      	mov	r0, r4
 801560c:	bd10      	pop	{r4, pc}

0801560e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801560e:	b510      	push	{r4, lr}
 8015610:	2104      	movs	r1, #4
 8015612:	4604      	mov	r4, r0
 8015614:	f00c fa25 	bl	8021a62 <_ZdlPvj>
 8015618:	4620      	mov	r0, r4
 801561a:	bd10      	pop	{r4, pc}

0801561c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801561c:	b510      	push	{r4, lr}
 801561e:	2104      	movs	r1, #4
 8015620:	4604      	mov	r4, r0
 8015622:	f00c fa1e 	bl	8021a62 <_ZdlPvj>
 8015626:	4620      	mov	r0, r4
 8015628:	bd10      	pop	{r4, pc}

0801562a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801562a:	b510      	push	{r4, lr}
 801562c:	f640 0144 	movw	r1, #2116	@ 0x844
 8015630:	4604      	mov	r4, r0
 8015632:	f00c fa16 	bl	8021a62 <_ZdlPvj>
 8015636:	4620      	mov	r0, r4
 8015638:	bd10      	pop	{r4, pc}

0801563a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801563a:	b510      	push	{r4, lr}
 801563c:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8015640:	4604      	mov	r4, r0
 8015642:	f00c fa0e 	bl	8021a62 <_ZdlPvj>
 8015646:	4620      	mov	r0, r4
 8015648:	bd10      	pop	{r4, pc}

0801564a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801564a:	b510      	push	{r4, lr}
 801564c:	2104      	movs	r1, #4
 801564e:	4604      	mov	r4, r0
 8015650:	f00c fa07 	bl	8021a62 <_ZdlPvj>
 8015654:	4620      	mov	r0, r4
 8015656:	bd10      	pop	{r4, pc}

08015658 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015658:	b510      	push	{r4, lr}
 801565a:	2104      	movs	r1, #4
 801565c:	4604      	mov	r4, r0
 801565e:	f00c fa00 	bl	8021a62 <_ZdlPvj>
 8015662:	4620      	mov	r0, r4
 8015664:	bd10      	pop	{r4, pc}

08015666 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015666:	b510      	push	{r4, lr}
 8015668:	2104      	movs	r1, #4
 801566a:	4604      	mov	r4, r0
 801566c:	f00c f9f9 	bl	8021a62 <_ZdlPvj>
 8015670:	4620      	mov	r0, r4
 8015672:	bd10      	pop	{r4, pc}

08015674 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015674:	b510      	push	{r4, lr}
 8015676:	2104      	movs	r1, #4
 8015678:	4604      	mov	r4, r0
 801567a:	f00c f9f2 	bl	8021a62 <_ZdlPvj>
 801567e:	4620      	mov	r0, r4
 8015680:	bd10      	pop	{r4, pc}

08015682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015682:	b510      	push	{r4, lr}
 8015684:	2104      	movs	r1, #4
 8015686:	4604      	mov	r4, r0
 8015688:	f00c f9eb 	bl	8021a62 <_ZdlPvj>
 801568c:	4620      	mov	r0, r4
 801568e:	bd10      	pop	{r4, pc}

08015690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015690:	b510      	push	{r4, lr}
 8015692:	2104      	movs	r1, #4
 8015694:	4604      	mov	r4, r0
 8015696:	f00c f9e4 	bl	8021a62 <_ZdlPvj>
 801569a:	4620      	mov	r0, r4
 801569c:	bd10      	pop	{r4, pc}

0801569e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801569e:	b510      	push	{r4, lr}
 80156a0:	2104      	movs	r1, #4
 80156a2:	4604      	mov	r4, r0
 80156a4:	f00c f9dd 	bl	8021a62 <_ZdlPvj>
 80156a8:	4620      	mov	r0, r4
 80156aa:	bd10      	pop	{r4, pc}

080156ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80156ac:	b510      	push	{r4, lr}
 80156ae:	2104      	movs	r1, #4
 80156b0:	4604      	mov	r4, r0
 80156b2:	f00c f9d6 	bl	8021a62 <_ZdlPvj>
 80156b6:	4620      	mov	r0, r4
 80156b8:	bd10      	pop	{r4, pc}

080156ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80156ba:	b510      	push	{r4, lr}
 80156bc:	2104      	movs	r1, #4
 80156be:	4604      	mov	r4, r0
 80156c0:	f00c f9cf 	bl	8021a62 <_ZdlPvj>
 80156c4:	4620      	mov	r0, r4
 80156c6:	bd10      	pop	{r4, pc}

080156c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80156c8:	b510      	push	{r4, lr}
 80156ca:	2104      	movs	r1, #4
 80156cc:	4604      	mov	r4, r0
 80156ce:	f00c f9c8 	bl	8021a62 <_ZdlPvj>
 80156d2:	4620      	mov	r0, r4
 80156d4:	bd10      	pop	{r4, pc}

080156d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80156d6:	b510      	push	{r4, lr}
 80156d8:	2104      	movs	r1, #4
 80156da:	4604      	mov	r4, r0
 80156dc:	f00c f9c1 	bl	8021a62 <_ZdlPvj>
 80156e0:	4620      	mov	r0, r4
 80156e2:	bd10      	pop	{r4, pc}

080156e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80156e4:	b510      	push	{r4, lr}
 80156e6:	2104      	movs	r1, #4
 80156e8:	4604      	mov	r4, r0
 80156ea:	f00c f9ba 	bl	8021a62 <_ZdlPvj>
 80156ee:	4620      	mov	r0, r4
 80156f0:	bd10      	pop	{r4, pc}

080156f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80156f2:	b510      	push	{r4, lr}
 80156f4:	2104      	movs	r1, #4
 80156f6:	4604      	mov	r4, r0
 80156f8:	f00c f9b3 	bl	8021a62 <_ZdlPvj>
 80156fc:	4620      	mov	r0, r4
 80156fe:	bd10      	pop	{r4, pc}

08015700 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015700:	b510      	push	{r4, lr}
 8015702:	2104      	movs	r1, #4
 8015704:	4604      	mov	r4, r0
 8015706:	f00c f9ac 	bl	8021a62 <_ZdlPvj>
 801570a:	4620      	mov	r0, r4
 801570c:	bd10      	pop	{r4, pc}

0801570e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801570e:	b510      	push	{r4, lr}
 8015710:	2104      	movs	r1, #4
 8015712:	4604      	mov	r4, r0
 8015714:	f00c f9a5 	bl	8021a62 <_ZdlPvj>
 8015718:	4620      	mov	r0, r4
 801571a:	bd10      	pop	{r4, pc}

0801571c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801571c:	b510      	push	{r4, lr}
 801571e:	2104      	movs	r1, #4
 8015720:	4604      	mov	r4, r0
 8015722:	f00c f99e 	bl	8021a62 <_ZdlPvj>
 8015726:	4620      	mov	r0, r4
 8015728:	bd10      	pop	{r4, pc}

0801572a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801572a:	b510      	push	{r4, lr}
 801572c:	2104      	movs	r1, #4
 801572e:	4604      	mov	r4, r0
 8015730:	f00c f997 	bl	8021a62 <_ZdlPvj>
 8015734:	4620      	mov	r0, r4
 8015736:	bd10      	pop	{r4, pc}

08015738 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015738:	b510      	push	{r4, lr}
 801573a:	2104      	movs	r1, #4
 801573c:	4604      	mov	r4, r0
 801573e:	f00c f990 	bl	8021a62 <_ZdlPvj>
 8015742:	4620      	mov	r0, r4
 8015744:	bd10      	pop	{r4, pc}

08015746 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015746:	b510      	push	{r4, lr}
 8015748:	2104      	movs	r1, #4
 801574a:	4604      	mov	r4, r0
 801574c:	f00c f989 	bl	8021a62 <_ZdlPvj>
 8015750:	4620      	mov	r0, r4
 8015752:	bd10      	pop	{r4, pc}

08015754 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015754:	b510      	push	{r4, lr}
 8015756:	2104      	movs	r1, #4
 8015758:	4604      	mov	r4, r0
 801575a:	f00c f982 	bl	8021a62 <_ZdlPvj>
 801575e:	4620      	mov	r0, r4
 8015760:	bd10      	pop	{r4, pc}

08015762 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015762:	b510      	push	{r4, lr}
 8015764:	2104      	movs	r1, #4
 8015766:	4604      	mov	r4, r0
 8015768:	f00c f97b 	bl	8021a62 <_ZdlPvj>
 801576c:	4620      	mov	r0, r4
 801576e:	bd10      	pop	{r4, pc}

08015770 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015770:	b510      	push	{r4, lr}
 8015772:	2104      	movs	r1, #4
 8015774:	4604      	mov	r4, r0
 8015776:	f00c f974 	bl	8021a62 <_ZdlPvj>
 801577a:	4620      	mov	r0, r4
 801577c:	bd10      	pop	{r4, pc}

0801577e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801577e:	b510      	push	{r4, lr}
 8015780:	2104      	movs	r1, #4
 8015782:	4604      	mov	r4, r0
 8015784:	f00c f96d 	bl	8021a62 <_ZdlPvj>
 8015788:	4620      	mov	r0, r4
 801578a:	bd10      	pop	{r4, pc}

0801578c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801578c:	b510      	push	{r4, lr}
 801578e:	2104      	movs	r1, #4
 8015790:	4604      	mov	r4, r0
 8015792:	f00c f966 	bl	8021a62 <_ZdlPvj>
 8015796:	4620      	mov	r0, r4
 8015798:	bd10      	pop	{r4, pc}

0801579a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801579a:	b510      	push	{r4, lr}
 801579c:	2104      	movs	r1, #4
 801579e:	4604      	mov	r4, r0
 80157a0:	f00c f95f 	bl	8021a62 <_ZdlPvj>
 80157a4:	4620      	mov	r0, r4
 80157a6:	bd10      	pop	{r4, pc}

080157a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80157a8:	b510      	push	{r4, lr}
 80157aa:	2104      	movs	r1, #4
 80157ac:	4604      	mov	r4, r0
 80157ae:	f00c f958 	bl	8021a62 <_ZdlPvj>
 80157b2:	4620      	mov	r0, r4
 80157b4:	bd10      	pop	{r4, pc}

080157b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80157b6:	b510      	push	{r4, lr}
 80157b8:	2104      	movs	r1, #4
 80157ba:	4604      	mov	r4, r0
 80157bc:	f00c f951 	bl	8021a62 <_ZdlPvj>
 80157c0:	4620      	mov	r0, r4
 80157c2:	bd10      	pop	{r4, pc}

080157c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80157c4:	b510      	push	{r4, lr}
 80157c6:	2104      	movs	r1, #4
 80157c8:	4604      	mov	r4, r0
 80157ca:	f00c f94a 	bl	8021a62 <_ZdlPvj>
 80157ce:	4620      	mov	r0, r4
 80157d0:	bd10      	pop	{r4, pc}
	...

080157d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 80157d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157d8:	b08f      	sub	sp, #60	@ 0x3c
 80157da:	4616      	mov	r6, r2
 80157dc:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80157e0:	9205      	str	r2, [sp, #20]
 80157e2:	4682      	mov	sl, r0
 80157e4:	460d      	mov	r5, r1
 80157e6:	2a00      	cmp	r2, #0
 80157e8:	f000 82b7 	beq.w	8015d5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80157ec:	6830      	ldr	r0, [r6, #0]
 80157ee:	6871      	ldr	r1, [r6, #4]
 80157f0:	ac0a      	add	r4, sp, #40	@ 0x28
 80157f2:	c403      	stmia	r4!, {r0, r1}
 80157f4:	6818      	ldr	r0, [r3, #0]
 80157f6:	6859      	ldr	r1, [r3, #4]
 80157f8:	ac0c      	add	r4, sp, #48	@ 0x30
 80157fa:	c403      	stmia	r4!, {r0, r1}
 80157fc:	a80a      	add	r0, sp, #40	@ 0x28
 80157fe:	f7f9 fd03 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015802:	4631      	mov	r1, r6
 8015804:	a80c      	add	r0, sp, #48	@ 0x30
 8015806:	f7f9 fd27 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801580a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801580e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8015812:	bfd7      	itett	le
 8015814:	b293      	uxthle	r3, r2
 8015816:	2301      	movgt	r3, #1
 8015818:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801581c:	fb91 f3f3 	sdivle	r3, r1, r3
 8015820:	9300      	str	r3, [sp, #0]
 8015822:	f105 0308 	add.w	r3, r5, #8
 8015826:	9900      	ldr	r1, [sp, #0]
 8015828:	9306      	str	r3, [sp, #24]
 801582a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801582e:	440b      	add	r3, r1
 8015830:	3b01      	subs	r3, #1
 8015832:	fb93 f3f1 	sdiv	r3, r3, r1
 8015836:	9906      	ldr	r1, [sp, #24]
 8015838:	3b01      	subs	r3, #1
 801583a:	b29b      	uxth	r3, r3
 801583c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015840:	9307      	str	r3, [sp, #28]
 8015842:	9900      	ldr	r1, [sp, #0]
 8015844:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8015848:	fb93 f0f1 	sdiv	r0, r3, r1
 801584c:	b284      	uxth	r4, r0
 801584e:	9402      	str	r4, [sp, #8]
 8015850:	9d02      	ldr	r5, [sp, #8]
 8015852:	9c00      	ldr	r4, [sp, #0]
 8015854:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8015858:	fb05 3414 	mls	r4, r5, r4, r3
 801585c:	fb14 f402 	smulbb	r4, r4, r2
 8015860:	440c      	add	r4, r1
 8015862:	b2a4      	uxth	r4, r4
 8015864:	2d00      	cmp	r5, #0
 8015866:	d06c      	beq.n	8015942 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8015868:	1e6a      	subs	r2, r5, #1
 801586a:	9806      	ldr	r0, [sp, #24]
 801586c:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8015870:	9a07      	ldr	r2, [sp, #28]
 8015872:	ba36      	rev	r6, r6
 8015874:	4416      	add	r6, r2
 8015876:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801587a:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801587e:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8015bb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8015882:	4411      	add	r1, r2
 8015884:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8015888:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801588c:	4413      	add	r3, r2
 801588e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015892:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8015896:	9301      	str	r3, [sp, #4]
 8015898:	4bc4      	ldr	r3, [pc, #784]	@ (8015bac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801589a:	6818      	ldr	r0, [r3, #0]
 801589c:	6803      	ldr	r3, [r0, #0]
 801589e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80158a0:	4798      	blx	r3
 80158a2:	4bc3      	ldr	r3, [pc, #780]	@ (8015bb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 80158a4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80158a8:	881b      	ldrh	r3, [r3, #0]
 80158aa:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 80158ae:	fb03 2808 	mla	r8, r3, r8, r2
 80158b2:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 80158b6:	436b      	muls	r3, r5
 80158b8:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 80158bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80158be:	2500      	movs	r5, #0
 80158c0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80158c4:	fb94 f3f3 	sdiv	r3, r4, r3
 80158c8:	9304      	str	r3, [sp, #16]
 80158ca:	f10a 0304 	add.w	r3, sl, #4
 80158ce:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80158d2:	4629      	mov	r1, r5
 80158d4:	4618      	mov	r0, r3
 80158d6:	9308      	str	r3, [sp, #32]
 80158d8:	f00d fa3d 	bl	8022d56 <memset>
 80158dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80158de:	4543      	cmp	r3, r8
 80158e0:	f240 8236 	bls.w	8015d50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80158e4:	2203      	movs	r2, #3
 80158e6:	2107      	movs	r1, #7
 80158e8:	200b      	movs	r0, #11
 80158ea:	2c00      	cmp	r4, #0
 80158ec:	f000 8131 	beq.w	8015b52 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80158f0:	7833      	ldrb	r3, [r6, #0]
 80158f2:	b2db      	uxtb	r3, r3
 80158f4:	2bfe      	cmp	r3, #254	@ 0xfe
 80158f6:	d126      	bne.n	8015946 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80158f8:	f896 e001 	ldrb.w	lr, [r6, #1]
 80158fc:	f896 c002 	ldrb.w	ip, [r6, #2]
 8015900:	f896 b003 	ldrb.w	fp, [r6, #3]
 8015904:	fa5f fe8e 	uxtb.w	lr, lr
 8015908:	fa5f fc8c 	uxtb.w	ip, ip
 801590c:	f36e 0507 	bfi	r5, lr, #0, #8
 8015910:	f36c 250f 	bfi	r5, ip, #8, #8
 8015914:	fa5f fb8b 	uxtb.w	fp, fp
 8015918:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801591c:	f36b 4517 	bfi	r5, fp, #16, #8
 8015920:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8015924:	0e2b      	lsrs	r3, r5, #24
 8015926:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801592a:	fb10 c303 	smlabb	r3, r0, r3, ip
 801592e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015932:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015936:	3c01      	subs	r4, #1
 8015938:	1d37      	adds	r7, r6, #4
 801593a:	b2a4      	uxth	r4, r4
 801593c:	605d      	str	r5, [r3, #4]
 801593e:	463e      	mov	r6, r7
 8015940:	e7d3      	b.n	80158ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8015942:	9e07      	ldr	r6, [sp, #28]
 8015944:	e797      	b.n	8015876 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 8015946:	2bff      	cmp	r3, #255	@ 0xff
 8015948:	d127      	bne.n	801599a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801594a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801594e:	78b3      	ldrb	r3, [r6, #2]
 8015950:	f896 e003 	ldrb.w	lr, [r6, #3]
 8015954:	f896 b004 	ldrb.w	fp, [r6, #4]
 8015958:	fa5f fc8c 	uxtb.w	ip, ip
 801595c:	b2db      	uxtb	r3, r3
 801595e:	f36c 0507 	bfi	r5, ip, #0, #8
 8015962:	f363 250f 	bfi	r5, r3, #8, #8
 8015966:	fa5f fe8e 	uxtb.w	lr, lr
 801596a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801596e:	fb12 330e 	smlabb	r3, r2, lr, r3
 8015972:	fa5f fb8b 	uxtb.w	fp, fp
 8015976:	f36e 4517 	bfi	r5, lr, #16, #8
 801597a:	fb11 330c 	smlabb	r3, r1, ip, r3
 801597e:	f36b 651f 	bfi	r5, fp, #24, #8
 8015982:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 8015986:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801598a:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801598e:	3c01      	subs	r4, #1
 8015990:	1d77      	adds	r7, r6, #5
 8015992:	b2a4      	uxth	r4, r4
 8015994:	f8cb 5004 	str.w	r5, [fp, #4]
 8015998:	e7d1      	b.n	801593e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801599a:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801599e:	f106 0701 	add.w	r7, r6, #1
 80159a2:	d107      	bne.n	80159b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 80159a4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80159a8:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80159ac:	685d      	ldr	r5, [r3, #4]
 80159ae:	3c01      	subs	r4, #1
 80159b0:	b2a4      	uxth	r4, r4
 80159b2:	e7c4      	b.n	801593e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80159b4:	f1bc 0f01 	cmp.w	ip, #1
 80159b8:	d12c      	bne.n	8015a14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 80159ba:	f003 0e03 	and.w	lr, r3, #3
 80159be:	f1ae 0e02 	sub.w	lr, lr, #2
 80159c2:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 80159c6:	fa5f fe8e 	uxtb.w	lr, lr
 80159ca:	f003 0c0c 	and.w	ip, r3, #12
 80159ce:	f36e 0507 	bfi	r5, lr, #0, #8
 80159d2:	f1ac 0c08 	sub.w	ip, ip, #8
 80159d6:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80159da:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80159de:	f36c 250f 	bfi	r5, ip, #8, #8
 80159e2:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80159e6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80159ea:	3b02      	subs	r3, #2
 80159ec:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80159f0:	b2db      	uxtb	r3, r3
 80159f2:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80159f6:	f363 4517 	bfi	r5, r3, #16, #8
 80159fa:	fb12 cc03 	smlabb	ip, r2, r3, ip
 80159fe:	0e2e      	lsrs	r6, r5, #24
 8015a00:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8015a04:	fb10 c606 	smlabb	r6, r0, r6, ip
 8015a08:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8015a0c:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8015a10:	6075      	str	r5, [r6, #4]
 8015a12:	e7cc      	b.n	80159ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8015a14:	f1bc 0f02 	cmp.w	ip, #2
 8015a18:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015a1c:	d12a      	bne.n	8015a74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8015a1e:	1cb7      	adds	r7, r6, #2
 8015a20:	7876      	ldrb	r6, [r6, #1]
 8015a22:	b2f6      	uxtb	r6, r6
 8015a24:	f006 0c0f 	and.w	ip, r6, #15
 8015a28:	3b20      	subs	r3, #32
 8015a2a:	f1ac 0c08 	sub.w	ip, ip, #8
 8015a2e:	449c      	add	ip, r3
 8015a30:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8015a34:	fa5f fc8c 	uxtb.w	ip, ip
 8015a38:	f36c 0507 	bfi	r5, ip, #0, #8
 8015a3c:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8015a40:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8015a44:	fa5f fe8e 	uxtb.w	lr, lr
 8015a48:	1136      	asrs	r6, r6, #4
 8015a4a:	f36e 250f 	bfi	r5, lr, #8, #8
 8015a4e:	3e08      	subs	r6, #8
 8015a50:	4433      	add	r3, r6
 8015a52:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015a56:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015a5a:	b2db      	uxtb	r3, r3
 8015a5c:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8015a60:	f363 4517 	bfi	r5, r3, #16, #8
 8015a64:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8015a68:	0e2e      	lsrs	r6, r5, #24
 8015a6a:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8015a6e:	fb10 e606 	smlabb	r6, r0, r6, lr
 8015a72:	e7c9      	b.n	8015a08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8015a74:	1c5e      	adds	r6, r3, #1
 8015a76:	42a6      	cmp	r6, r4
 8015a78:	dd4e      	ble.n	8015b18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8015a7a:	1b36      	subs	r6, r6, r4
 8015a7c:	2e00      	cmp	r6, #0
 8015a7e:	dc4e      	bgt.n	8015b1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8015a80:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015a84:	2400      	movs	r4, #0
 8015a86:	f1bb 0f00 	cmp.w	fp, #0
 8015a8a:	f340 8122 	ble.w	8015cd2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8015a8e:	1c7b      	adds	r3, r7, #1
 8015a90:	9303      	str	r3, [sp, #12]
 8015a92:	783b      	ldrb	r3, [r7, #0]
 8015a94:	b2db      	uxtb	r3, r3
 8015a96:	2bfe      	cmp	r3, #254	@ 0xfe
 8015a98:	d160      	bne.n	8015b5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8015a9a:	7879      	ldrb	r1, [r7, #1]
 8015a9c:	78ba      	ldrb	r2, [r7, #2]
 8015a9e:	78f8      	ldrb	r0, [r7, #3]
 8015aa0:	b2c9      	uxtb	r1, r1
 8015aa2:	f361 0507 	bfi	r5, r1, #0, #8
 8015aa6:	b2d2      	uxtb	r2, r2
 8015aa8:	1d3b      	adds	r3, r7, #4
 8015aaa:	f362 250f 	bfi	r5, r2, #8, #8
 8015aae:	b2c0      	uxtb	r0, r0
 8015ab0:	9303      	str	r3, [sp, #12]
 8015ab2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015ab6:	2303      	movs	r3, #3
 8015ab8:	fb13 2200 	smlabb	r2, r3, r0, r2
 8015abc:	f360 4517 	bfi	r5, r0, #16, #8
 8015ac0:	2307      	movs	r3, #7
 8015ac2:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015ac6:	0e2e      	lsrs	r6, r5, #24
 8015ac8:	230b      	movs	r3, #11
 8015aca:	fb13 1306 	smlabb	r3, r3, r6, r1
 8015ace:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015ad2:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015ad6:	605d      	str	r5, [r3, #4]
 8015ad8:	2601      	movs	r6, #1
 8015ada:	4637      	mov	r7, r6
 8015adc:	0e2b      	lsrs	r3, r5, #24
 8015ade:	ebab 0b07 	sub.w	fp, fp, r7
 8015ae2:	eba6 0607 	sub.w	r6, r6, r7
 8015ae6:	f040 80d3 	bne.w	8015c90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8015aea:	b18c      	cbz	r4, 8015b10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8015aec:	4648      	mov	r0, r9
 8015aee:	00a1      	lsls	r1, r4, #2
 8015af0:	f7eb fa2e 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015af4:	9b05      	ldr	r3, [sp, #20]
 8015af6:	4622      	mov	r2, r4
 8015af8:	4649      	mov	r1, r9
 8015afa:	4640      	mov	r0, r8
 8015afc:	f7eb fa76 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015b00:	4b2c      	ldr	r3, [pc, #176]	@ (8015bb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8015b02:	4a2d      	ldr	r2, [pc, #180]	@ (8015bb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8015b04:	4599      	cmp	r9, r3
 8015b06:	bf08      	it	eq
 8015b08:	4613      	moveq	r3, r2
 8015b0a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015b0e:	4699      	mov	r9, r3
 8015b10:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8015b14:	2400      	movs	r4, #0
 8015b16:	e0da      	b.n	8015cce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8015b18:	1ba6      	subs	r6, r4, r6
 8015b1a:	b2b4      	uxth	r4, r6
 8015b1c:	e70f      	b.n	801593e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015b1e:	9b01      	ldr	r3, [sp, #4]
 8015b20:	9a01      	ldr	r2, [sp, #4]
 8015b22:	42b3      	cmp	r3, r6
 8015b24:	bfa8      	it	ge
 8015b26:	4633      	movge	r3, r6
 8015b28:	0e2c      	lsrs	r4, r5, #24
 8015b2a:	eba2 0b03 	sub.w	fp, r2, r3
 8015b2e:	eba6 0603 	sub.w	r6, r6, r3
 8015b32:	d00b      	beq.n	8015b4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8015b34:	f1a9 0104 	sub.w	r1, r9, #4
 8015b38:	461a      	mov	r2, r3
 8015b3a:	2a00      	cmp	r2, #0
 8015b3c:	dc02      	bgt.n	8015b44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8015b3e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015b42:	e7a0      	b.n	8015a86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015b44:	f841 5f04 	str.w	r5, [r1, #4]!
 8015b48:	3a01      	subs	r2, #1
 8015b4a:	e7f6      	b.n	8015b3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8015b4c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015b50:	e799      	b.n	8015a86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015b52:	4637      	mov	r7, r6
 8015b54:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015b58:	4626      	mov	r6, r4
 8015b5a:	e794      	b.n	8015a86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015b5c:	2bff      	cmp	r3, #255	@ 0xff
 8015b5e:	d11d      	bne.n	8015b9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8015b60:	7878      	ldrb	r0, [r7, #1]
 8015b62:	78ba      	ldrb	r2, [r7, #2]
 8015b64:	78fe      	ldrb	r6, [r7, #3]
 8015b66:	1d7b      	adds	r3, r7, #5
 8015b68:	b2c0      	uxtb	r0, r0
 8015b6a:	9303      	str	r3, [sp, #12]
 8015b6c:	793b      	ldrb	r3, [r7, #4]
 8015b6e:	f360 0507 	bfi	r5, r0, #0, #8
 8015b72:	b2d2      	uxtb	r2, r2
 8015b74:	b2d9      	uxtb	r1, r3
 8015b76:	f362 250f 	bfi	r5, r2, #8, #8
 8015b7a:	b2f6      	uxtb	r6, r6
 8015b7c:	2303      	movs	r3, #3
 8015b7e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015b82:	fb13 2206 	smlabb	r2, r3, r6, r2
 8015b86:	2307      	movs	r3, #7
 8015b88:	fb13 2000 	smlabb	r0, r3, r0, r2
 8015b8c:	f366 4517 	bfi	r5, r6, #16, #8
 8015b90:	230b      	movs	r3, #11
 8015b92:	f361 651f 	bfi	r5, r1, #24, #8
 8015b96:	fb13 0301 	smlabb	r3, r3, r1, r0
 8015b9a:	e798      	b.n	8015ace <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8015b9c:	119e      	asrs	r6, r3, #6
 8015b9e:	d10d      	bne.n	8015bbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8015ba0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015ba4:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015ba8:	685d      	ldr	r5, [r3, #4]
 8015baa:	e795      	b.n	8015ad8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015bac:	20013ffc 	.word	0x20013ffc
 8015bb0:	20013ff4 	.word	0x20013ff4
 8015bb4:	20000280 	.word	0x20000280
 8015bb8:	20000380 	.word	0x20000380
 8015bbc:	2e01      	cmp	r6, #1
 8015bbe:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8015bc2:	d12b      	bne.n	8015c1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8015bc4:	f003 0003 	and.w	r0, r3, #3
 8015bc8:	3802      	subs	r0, #2
 8015bca:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8015bce:	b2c0      	uxtb	r0, r0
 8015bd0:	f003 020c 	and.w	r2, r3, #12
 8015bd4:	f360 0507 	bfi	r5, r0, #0, #8
 8015bd8:	3a08      	subs	r2, #8
 8015bda:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015bde:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8015be2:	f362 250f 	bfi	r5, r2, #8, #8
 8015be6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015bea:	1e9f      	subs	r7, r3, #2
 8015bec:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8015bf0:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8015bf4:	b2db      	uxtb	r3, r3
 8015bf6:	2703      	movs	r7, #3
 8015bf8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015bfc:	fb17 2203 	smlabb	r2, r7, r3, r2
 8015c00:	2707      	movs	r7, #7
 8015c02:	f363 4517 	bfi	r5, r3, #16, #8
 8015c06:	fb17 2000 	smlabb	r0, r7, r0, r2
 8015c0a:	230b      	movs	r3, #11
 8015c0c:	fb13 0101 	smlabb	r1, r3, r1, r0
 8015c10:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015c14:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015c18:	604d      	str	r5, [r1, #4]
 8015c1a:	e75e      	b.n	8015ada <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8015c1c:	2e02      	cmp	r6, #2
 8015c1e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015c22:	d12f      	bne.n	8015c84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8015c24:	7878      	ldrb	r0, [r7, #1]
 8015c26:	1cba      	adds	r2, r7, #2
 8015c28:	b2c0      	uxtb	r0, r0
 8015c2a:	9203      	str	r2, [sp, #12]
 8015c2c:	f000 020f 	and.w	r2, r0, #15
 8015c30:	3b20      	subs	r3, #32
 8015c32:	3a08      	subs	r2, #8
 8015c34:	441a      	add	r2, r3
 8015c36:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8015c3a:	b2d2      	uxtb	r2, r2
 8015c3c:	f362 0507 	bfi	r5, r2, #0, #8
 8015c40:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8015c44:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8015c48:	b2f6      	uxtb	r6, r6
 8015c4a:	1100      	asrs	r0, r0, #4
 8015c4c:	f366 250f 	bfi	r5, r6, #8, #8
 8015c50:	3808      	subs	r0, #8
 8015c52:	4403      	add	r3, r0
 8015c54:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8015c58:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015c5c:	b2db      	uxtb	r3, r3
 8015c5e:	2003      	movs	r0, #3
 8015c60:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8015c64:	fb10 6603 	smlabb	r6, r0, r3, r6
 8015c68:	2007      	movs	r0, #7
 8015c6a:	f363 4517 	bfi	r5, r3, #16, #8
 8015c6e:	fb10 6202 	smlabb	r2, r0, r2, r6
 8015c72:	230b      	movs	r3, #11
 8015c74:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015c78:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015c7c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015c80:	604d      	str	r5, [r1, #4]
 8015c82:	e729      	b.n	8015ad8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015c84:	1c5e      	adds	r6, r3, #1
 8015c86:	45b3      	cmp	fp, r6
 8015c88:	465f      	mov	r7, fp
 8015c8a:	bfa8      	it	ge
 8015c8c:	4637      	movge	r7, r6
 8015c8e:	e725      	b.n	8015adc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8015c90:	193b      	adds	r3, r7, r4
 8015c92:	2b40      	cmp	r3, #64	@ 0x40
 8015c94:	dd13      	ble.n	8015cbe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8015c96:	4648      	mov	r0, r9
 8015c98:	00a1      	lsls	r1, r4, #2
 8015c9a:	f7eb f959 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015c9e:	4649      	mov	r1, r9
 8015ca0:	9b05      	ldr	r3, [sp, #20]
 8015ca2:	4622      	mov	r2, r4
 8015ca4:	4640      	mov	r0, r8
 8015ca6:	f7eb f9a1 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015caa:	4b2d      	ldr	r3, [pc, #180]	@ (8015d60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8015cac:	4599      	cmp	r9, r3
 8015cae:	bf0c      	ite	eq
 8015cb0:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8015d6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8015cb4:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8015d60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8015cb8:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015cbc:	2400      	movs	r4, #0
 8015cbe:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8015cc2:	463b      	mov	r3, r7
 8015cc4:	3b01      	subs	r3, #1
 8015cc6:	f842 5b04 	str.w	r5, [r2], #4
 8015cca:	d1fb      	bne.n	8015cc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8015ccc:	443c      	add	r4, r7
 8015cce:	9f03      	ldr	r7, [sp, #12]
 8015cd0:	e6d9      	b.n	8015a86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015cd2:	b15c      	cbz	r4, 8015cec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8015cd4:	00a1      	lsls	r1, r4, #2
 8015cd6:	4648      	mov	r0, r9
 8015cd8:	f7eb f93a 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015cdc:	4640      	mov	r0, r8
 8015cde:	9b05      	ldr	r3, [sp, #20]
 8015ce0:	4622      	mov	r2, r4
 8015ce2:	4649      	mov	r1, r9
 8015ce4:	f7eb f982 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015ce8:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015cec:	4b1d      	ldr	r3, [pc, #116]	@ (8015d64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8015cee:	9a01      	ldr	r2, [sp, #4]
 8015cf0:	881b      	ldrh	r3, [r3, #0]
 8015cf2:	1a9b      	subs	r3, r3, r2
 8015cf4:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015cf8:	9b04      	ldr	r3, [sp, #16]
 8015cfa:	3301      	adds	r3, #1
 8015cfc:	9304      	str	r3, [sp, #16]
 8015cfe:	9a04      	ldr	r2, [sp, #16]
 8015d00:	9b00      	ldr	r3, [sp, #0]
 8015d02:	4293      	cmp	r3, r2
 8015d04:	d11d      	bne.n	8015d42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8015d06:	9b02      	ldr	r3, [sp, #8]
 8015d08:	9a02      	ldr	r2, [sp, #8]
 8015d0a:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8015d0e:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8015d12:	9808      	ldr	r0, [sp, #32]
 8015d14:	f103 0b01 	add.w	fp, r3, #1
 8015d18:	9b06      	ldr	r3, [sp, #24]
 8015d1a:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8015d1e:	9b07      	ldr	r3, [sp, #28]
 8015d20:	2500      	movs	r5, #0
 8015d22:	ba3f      	rev	r7, r7
 8015d24:	1ba4      	subs	r4, r4, r6
 8015d26:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015d2a:	4629      	mov	r1, r5
 8015d2c:	441f      	add	r7, r3
 8015d2e:	b2a4      	uxth	r4, r4
 8015d30:	f00d f811 	bl	8022d56 <memset>
 8015d34:	f8cd b008 	str.w	fp, [sp, #8]
 8015d38:	9504      	str	r5, [sp, #16]
 8015d3a:	f7eb f8ff 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 8015d3e:	463e      	mov	r6, r7
 8015d40:	e5cc      	b.n	80158dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8015d42:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015d46:	9b01      	ldr	r3, [sp, #4]
 8015d48:	1ae4      	subs	r4, r4, r3
 8015d4a:	1ba4      	subs	r4, r4, r6
 8015d4c:	b2a4      	uxth	r4, r4
 8015d4e:	e7f4      	b.n	8015d3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8015d50:	4b05      	ldr	r3, [pc, #20]	@ (8015d68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8015d52:	6818      	ldr	r0, [r3, #0]
 8015d54:	6803      	ldr	r3, [r0, #0]
 8015d56:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015d58:	4798      	blx	r3
 8015d5a:	b00f      	add	sp, #60	@ 0x3c
 8015d5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d60:	20000280 	.word	0x20000280
 8015d64:	20013ff4 	.word	0x20013ff4
 8015d68:	20013ffc 	.word	0x20013ffc
 8015d6c:	20000380 	.word	0x20000380

08015d70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d74:	b08f      	sub	sp, #60	@ 0x3c
 8015d76:	461c      	mov	r4, r3
 8015d78:	9205      	str	r2, [sp, #20]
 8015d7a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015d7e:	9100      	str	r1, [sp, #0]
 8015d80:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015d82:	9201      	str	r2, [sp, #4]
 8015d84:	2a00      	cmp	r2, #0
 8015d86:	f000 8115 	beq.w	8015fb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8015d8a:	6820      	ldr	r0, [r4, #0]
 8015d8c:	6861      	ldr	r1, [r4, #4]
 8015d8e:	aa0a      	add	r2, sp, #40	@ 0x28
 8015d90:	c203      	stmia	r2!, {r0, r1}
 8015d92:	6818      	ldr	r0, [r3, #0]
 8015d94:	6859      	ldr	r1, [r3, #4]
 8015d96:	aa0c      	add	r2, sp, #48	@ 0x30
 8015d98:	c203      	stmia	r2!, {r0, r1}
 8015d9a:	a80a      	add	r0, sp, #40	@ 0x28
 8015d9c:	f7f9 fa34 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015da0:	4621      	mov	r1, r4
 8015da2:	a80c      	add	r0, sp, #48	@ 0x30
 8015da4:	f7f9 fa58 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015da8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8015dac:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8015db0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8015db4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8015db8:	bfde      	ittt	le
 8015dba:	b2b3      	uxthle	r3, r6
 8015dbc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8015dc0:	fb92 f3f3 	sdivle	r3, r2, r3
 8015dc4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015dc8:	bfc8      	it	gt
 8015dca:	2301      	movgt	r3, #1
 8015dcc:	fb92 f1f3 	sdiv	r1, r2, r3
 8015dd0:	fa1f fc81 	uxth.w	ip, r1
 8015dd4:	fb0c 2413 	mls	r4, ip, r3, r2
 8015dd8:	fb14 f406 	smulbb	r4, r4, r6
 8015ddc:	441d      	add	r5, r3
 8015dde:	4404      	add	r4, r0
 8015de0:	4661      	mov	r1, ip
 8015de2:	3d01      	subs	r5, #1
 8015de4:	b2a4      	uxth	r4, r4
 8015de6:	fb95 f5f3 	sdiv	r5, r5, r3
 8015dea:	b131      	cbz	r1, 8015dfa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8015dec:	9b05      	ldr	r3, [sp, #20]
 8015dee:	9900      	ldr	r1, [sp, #0]
 8015df0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015df4:	ba1b      	rev	r3, r3
 8015df6:	4419      	add	r1, r3
 8015df8:	9100      	str	r1, [sp, #0]
 8015dfa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015dfe:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8015e02:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8015e06:	4418      	add	r0, r3
 8015e08:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8015e0c:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8015e10:	441a      	add	r2, r3
 8015e12:	4b6a      	ldr	r3, [pc, #424]	@ (8015fbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015e14:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8015e18:	6818      	ldr	r0, [r3, #0]
 8015e1a:	6803      	ldr	r3, [r0, #0]
 8015e1c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015e1e:	4798      	blx	r3
 8015e20:	4967      	ldr	r1, [pc, #412]	@ (8015fc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8015e22:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015e26:	880b      	ldrh	r3, [r1, #0]
 8015e28:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8015e2c:	9109      	str	r1, [sp, #36]	@ 0x24
 8015e2e:	fb03 c202 	mla	r2, r3, r2, ip
 8015e32:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015e36:	4373      	muls	r3, r6
 8015e38:	b2ad      	uxth	r5, r5
 8015e3a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015e3e:	00ad      	lsls	r5, r5, #2
 8015e40:	9306      	str	r3, [sp, #24]
 8015e42:	1d2b      	adds	r3, r5, #4
 8015e44:	9307      	str	r3, [sp, #28]
 8015e46:	9b01      	ldr	r3, [sp, #4]
 8015e48:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015e4c:	9103      	str	r1, [sp, #12]
 8015e4e:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8015e52:	2c00      	cmp	r4, #0
 8015e54:	bf0c      	ite	eq
 8015e56:	46c6      	moveq	lr, r8
 8015e58:	f04f 0e00 	movne.w	lr, #0
 8015e5c:	2300      	movs	r3, #0
 8015e5e:	b292      	uxth	r2, r2
 8015e60:	fa1f fe8e 	uxth.w	lr, lr
 8015e64:	9302      	str	r3, [sp, #8]
 8015e66:	9204      	str	r2, [sp, #16]
 8015e68:	9a06      	ldr	r2, [sp, #24]
 8015e6a:	4282      	cmp	r2, r0
 8015e6c:	f240 809d 	bls.w	8015faa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8015e70:	b963      	cbnz	r3, 8015e8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8015e72:	9b00      	ldr	r3, [sp, #0]
 8015e74:	781a      	ldrb	r2, [r3, #0]
 8015e76:	0993      	lsrs	r3, r2, #6
 8015e78:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8015e7c:	9202      	str	r2, [sp, #8]
 8015e7e:	1e5a      	subs	r2, r3, #1
 8015e80:	2a02      	cmp	r2, #2
 8015e82:	d815      	bhi.n	8015eb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8015e84:	9a00      	ldr	r2, [sp, #0]
 8015e86:	3201      	adds	r2, #1
 8015e88:	9200      	str	r2, [sp, #0]
 8015e8a:	b29b      	uxth	r3, r3
 8015e8c:	b1b4      	cbz	r4, 8015ebc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8015e8e:	429c      	cmp	r4, r3
 8015e90:	bf95      	itete	ls
 8015e92:	1b1c      	subls	r4, r3, r4
 8015e94:	1ae4      	subhi	r4, r4, r3
 8015e96:	fa1f fa84 	uxthls.w	sl, r4
 8015e9a:	b2a4      	uxthhi	r4, r4
 8015e9c:	bf87      	ittee	hi
 8015e9e:	4671      	movhi	r1, lr
 8015ea0:	f04f 0a00 	movhi.w	sl, #0
 8015ea4:	fa1f f188 	uxthls.w	r1, r8
 8015ea8:	2400      	movls	r4, #0
 8015eaa:	4653      	mov	r3, sl
 8015eac:	468e      	mov	lr, r1
 8015eae:	e7db      	b.n	8015e68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8015eb0:	9a00      	ldr	r2, [sp, #0]
 8015eb2:	9b00      	ldr	r3, [sp, #0]
 8015eb4:	3202      	adds	r2, #2
 8015eb6:	785b      	ldrb	r3, [r3, #1]
 8015eb8:	9200      	str	r2, [sp, #0]
 8015eba:	e7e7      	b.n	8015e8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8015ebc:	2202      	movs	r2, #2
 8015ebe:	4615      	mov	r5, r2
 8015ec0:	9907      	ldr	r1, [sp, #28]
 8015ec2:	9a02      	ldr	r2, [sp, #8]
 8015ec4:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015ec8:	9905      	ldr	r1, [sp, #20]
 8015eca:	4573      	cmp	r3, lr
 8015ecc:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015ed0:	9a01      	ldr	r2, [sp, #4]
 8015ed2:	bf2b      	itete	cs
 8015ed4:	eba3 0a0e 	subcs.w	sl, r3, lr
 8015ed8:	ebae 0103 	subcc.w	r1, lr, r3
 8015edc:	46f1      	movcs	r9, lr
 8015ede:	4699      	movcc	r9, r3
 8015ee0:	bf27      	ittee	cs
 8015ee2:	fa1f fa8a 	uxthcs.w	sl, sl
 8015ee6:	4621      	movcs	r1, r4
 8015ee8:	b289      	uxthcc	r1, r1
 8015eea:	46a2      	movcc	sl, r4
 8015eec:	2aff      	cmp	r2, #255	@ 0xff
 8015eee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015ef2:	d105      	bne.n	8015f00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8015ef4:	4481      	add	r9, r0
 8015ef6:	4581      	cmp	r9, r0
 8015ef8:	d045      	beq.n	8015f86 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8015efa:	f820 cb02 	strh.w	ip, [r0], #2
 8015efe:	e7fa      	b.n	8015ef6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8015f00:	9d03      	ldr	r5, [sp, #12]
 8015f02:	ea4f 222c 	mov.w	r2, ip, asr #8
 8015f06:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015f0a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8015f0e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015f12:	436a      	muls	r2, r5
 8015f14:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015f18:	fa5f fc8c 	uxtb.w	ip, ip
 8015f1c:	9208      	str	r2, [sp, #32]
 8015f1e:	fb0b fb05 	mul.w	fp, fp, r5
 8015f22:	fb0c fc05 	mul.w	ip, ip, r5
 8015f26:	4481      	add	r9, r0
 8015f28:	4581      	cmp	r9, r0
 8015f2a:	d02c      	beq.n	8015f86 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8015f2c:	8802      	ldrh	r2, [r0, #0]
 8015f2e:	9d04      	ldr	r5, [sp, #16]
 8015f30:	9f04      	ldr	r7, [sp, #16]
 8015f32:	1216      	asrs	r6, r2, #8
 8015f34:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015f38:	fb16 f605 	smulbb	r6, r6, r5
 8015f3c:	9d08      	ldr	r5, [sp, #32]
 8015f3e:	442e      	add	r6, r5
 8015f40:	10d5      	asrs	r5, r2, #3
 8015f42:	00d2      	lsls	r2, r2, #3
 8015f44:	b2d2      	uxtb	r2, r2
 8015f46:	fb12 f207 	smulbb	r2, r2, r7
 8015f4a:	b2b6      	uxth	r6, r6
 8015f4c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015f50:	4462      	add	r2, ip
 8015f52:	fb15 f507 	smulbb	r5, r5, r7
 8015f56:	b292      	uxth	r2, r2
 8015f58:	1c77      	adds	r7, r6, #1
 8015f5a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8015f5e:	1c57      	adds	r7, r2, #1
 8015f60:	445d      	add	r5, fp
 8015f62:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8015f66:	b2ad      	uxth	r5, r5
 8015f68:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015f6c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015f70:	4316      	orrs	r6, r2
 8015f72:	1c6a      	adds	r2, r5, #1
 8015f74:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015f78:	096d      	lsrs	r5, r5, #5
 8015f7a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015f7e:	432e      	orrs	r6, r5
 8015f80:	f820 6b02 	strh.w	r6, [r0], #2
 8015f84:	e7d0      	b.n	8015f28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8015f86:	4573      	cmp	r3, lr
 8015f88:	d38f      	bcc.n	8015eaa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8015f8a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015f8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015f90:	fa1f f188 	uxth.w	r1, r8
 8015f94:	1a64      	subs	r4, r4, r1
 8015f96:	881b      	ldrh	r3, [r3, #0]
 8015f98:	b2a4      	uxth	r4, r4
 8015f9a:	2c00      	cmp	r4, #0
 8015f9c:	eba3 0308 	sub.w	r3, r3, r8
 8015fa0:	bf18      	it	ne
 8015fa2:	2100      	movne	r1, #0
 8015fa4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015fa8:	e77f      	b.n	8015eaa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8015faa:	4b04      	ldr	r3, [pc, #16]	@ (8015fbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015fac:	6818      	ldr	r0, [r3, #0]
 8015fae:	6803      	ldr	r3, [r0, #0]
 8015fb0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015fb2:	4798      	blx	r3
 8015fb4:	b00f      	add	sp, #60	@ 0x3c
 8015fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015fba:	bf00      	nop
 8015fbc:	20013ffc 	.word	0x20013ffc
 8015fc0:	20013ff4 	.word	0x20013ff4

08015fc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fc8:	b09f      	sub	sp, #124	@ 0x7c
 8015fca:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8015fce:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8015fd2:	9209      	str	r2, [sp, #36]	@ 0x24
 8015fd4:	461d      	mov	r5, r3
 8015fd6:	4604      	mov	r4, r0
 8015fd8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8015fda:	2a00      	cmp	r2, #0
 8015fdc:	f000 81eb 	beq.w	80163b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8015fe0:	6828      	ldr	r0, [r5, #0]
 8015fe2:	6869      	ldr	r1, [r5, #4]
 8015fe4:	aa1a      	add	r2, sp, #104	@ 0x68
 8015fe6:	c203      	stmia	r2!, {r0, r1}
 8015fe8:	6818      	ldr	r0, [r3, #0]
 8015fea:	6859      	ldr	r1, [r3, #4]
 8015fec:	aa1c      	add	r2, sp, #112	@ 0x70
 8015fee:	c203      	stmia	r2!, {r0, r1}
 8015ff0:	a81a      	add	r0, sp, #104	@ 0x68
 8015ff2:	f7f9 f909 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015ff6:	4629      	mov	r1, r5
 8015ff8:	a81c      	add	r0, sp, #112	@ 0x70
 8015ffa:	f7f9 f92d 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015ffe:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016002:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8016006:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801600a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801600e:	bfd7      	itett	le
 8016010:	b29a      	uxthle	r2, r3
 8016012:	2201      	movgt	r2, #1
 8016014:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016018:	fb91 f2f2 	sdivle	r2, r1, r2
 801601c:	9202      	str	r2, [sp, #8]
 801601e:	9802      	ldr	r0, [sp, #8]
 8016020:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8016024:	fb92 f0f0 	sdiv	r0, r2, r0
 8016028:	b280      	uxth	r0, r0
 801602a:	9010      	str	r0, [sp, #64]	@ 0x40
 801602c:	9902      	ldr	r1, [sp, #8]
 801602e:	9802      	ldr	r0, [sp, #8]
 8016030:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8016032:	4488      	add	r8, r1
 8016034:	fb05 2510 	mls	r5, r5, r0, r2
 8016038:	fb15 f503 	smulbb	r5, r5, r3
 801603c:	f108 38ff 	add.w	r8, r8, #4294967295
 8016040:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016044:	fb98 f8f1 	sdiv	r8, r8, r1
 8016048:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801604c:	440d      	add	r5, r1
 801604e:	4419      	add	r1, r3
 8016050:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016054:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8016058:	441a      	add	r2, r3
 801605a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801605e:	9304      	str	r3, [sp, #16]
 8016060:	4b95      	ldr	r3, [pc, #596]	@ (80162b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8016062:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8016066:	6818      	ldr	r0, [r3, #0]
 8016068:	6803      	ldr	r3, [r0, #0]
 801606a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801606c:	4798      	blx	r3
 801606e:	4b93      	ldr	r3, [pc, #588]	@ (80162bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016070:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016074:	881a      	ldrh	r2, [r3, #0]
 8016076:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801607a:	9318      	str	r3, [sp, #96]	@ 0x60
 801607c:	fb02 7101 	mla	r1, r2, r1, r7
 8016080:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016084:	4356      	muls	r6, r2
 8016086:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801608a:	f108 0801 	add.w	r8, r8, #1
 801608e:	920a      	str	r2, [sp, #40]	@ 0x28
 8016090:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016092:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8016096:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016098:	fa1f f888 	uxth.w	r8, r8
 801609c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80160a0:	f108 0204 	add.w	r2, r8, #4
 80160a4:	9211      	str	r2, [sp, #68]	@ 0x44
 80160a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80160a8:	4b85      	ldr	r3, [pc, #532]	@ (80162c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80160aa:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 80160ae:	b2ad      	uxth	r5, r5
 80160b0:	9215      	str	r2, [sp, #84]	@ 0x54
 80160b2:	2d00      	cmp	r5, #0
 80160b4:	9a04      	ldr	r2, [sp, #16]
 80160b6:	f04f 0100 	mov.w	r1, #0
 80160ba:	bf18      	it	ne
 80160bc:	2200      	movne	r2, #0
 80160be:	1b1b      	subs	r3, r3, r4
 80160c0:	b292      	uxth	r2, r2
 80160c2:	910d      	str	r1, [sp, #52]	@ 0x34
 80160c4:	9319      	str	r3, [sp, #100]	@ 0x64
 80160c6:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80160c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80160ca:	fa11 f383 	uxtah	r3, r1, r3
 80160ce:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80160d0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80160d4:	3304      	adds	r3, #4
 80160d6:	9306      	str	r3, [sp, #24]
 80160d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80160da:	4283      	cmp	r3, r0
 80160dc:	f240 8166 	bls.w	80163ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 80160e0:	9902      	ldr	r1, [sp, #8]
 80160e2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80160e6:	fbb5 f3f3 	udiv	r3, r5, r3
 80160ea:	1acb      	subs	r3, r1, r3
 80160ec:	b29b      	uxth	r3, r3
 80160ee:	9316      	str	r3, [sp, #88]	@ 0x58
 80160f0:	9b06      	ldr	r3, [sp, #24]
 80160f2:	9e06      	ldr	r6, [sp, #24]
 80160f4:	7859      	ldrb	r1, [r3, #1]
 80160f6:	789b      	ldrb	r3, [r3, #2]
 80160f8:	7836      	ldrb	r6, [r6, #0]
 80160fa:	9612      	str	r6, [sp, #72]	@ 0x48
 80160fc:	021b      	lsls	r3, r3, #8
 80160fe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8016102:	9906      	ldr	r1, [sp, #24]
 8016104:	78c9      	ldrb	r1, [r1, #3]
 8016106:	430b      	orrs	r3, r1
 8016108:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801610a:	3601      	adds	r6, #1
 801610c:	4419      	add	r1, r3
 801610e:	9605      	str	r6, [sp, #20]
 8016110:	1c4e      	adds	r6, r1, #1
 8016112:	9603      	str	r6, [sp, #12]
 8016114:	7849      	ldrb	r1, [r1, #1]
 8016116:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016118:	0209      	lsls	r1, r1, #8
 801611a:	5cf3      	ldrb	r3, [r6, r3]
 801611c:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8016120:	4319      	orrs	r1, r3
 8016122:	b28b      	uxth	r3, r1
 8016124:	930c      	str	r3, [sp, #48]	@ 0x30
 8016126:	2300      	movs	r3, #0
 8016128:	f04f 0a01 	mov.w	sl, #1
 801612c:	9307      	str	r3, [sp, #28]
 801612e:	469c      	mov	ip, r3
 8016130:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016134:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8016138:	46d3      	mov	fp, sl
 801613a:	4657      	mov	r7, sl
 801613c:	930e      	str	r3, [sp, #56]	@ 0x38
 801613e:	2d00      	cmp	r5, #0
 8016140:	d07e      	beq.n	8016240 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016142:	42af      	cmp	r7, r5
 8016144:	d26e      	bcs.n	8016224 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8016146:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016148:	9201      	str	r2, [sp, #4]
 801614a:	1bed      	subs	r5, r5, r7
 801614c:	4283      	cmp	r3, r0
 801614e:	b2ad      	uxth	r5, r5
 8016150:	d802      	bhi.n	8016158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8016152:	e073      	b.n	801623c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8016154:	2b00      	cmp	r3, #0
 8016156:	d15f      	bne.n	8016218 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8016158:	9b03      	ldr	r3, [sp, #12]
 801615a:	785b      	ldrb	r3, [r3, #1]
 801615c:	f1cb 0207 	rsb	r2, fp, #7
 8016160:	4093      	lsls	r3, r2
 8016162:	005b      	lsls	r3, r3, #1
 8016164:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016168:	9b03      	ldr	r3, [sp, #12]
 801616a:	781b      	ldrb	r3, [r3, #0]
 801616c:	fa43 f30b 	asr.w	r3, r3, fp
 8016170:	b2db      	uxtb	r3, r3
 8016172:	4313      	orrs	r3, r2
 8016174:	f10b 0201 	add.w	r2, fp, #1
 8016178:	fa5f fb82 	uxtb.w	fp, r2
 801617c:	9a03      	ldr	r2, [sp, #12]
 801617e:	f1bb 0f08 	cmp.w	fp, #8
 8016182:	bf15      	itete	ne
 8016184:	3201      	addne	r2, #1
 8016186:	3202      	addeq	r2, #2
 8016188:	9203      	strne	r2, [sp, #12]
 801618a:	9203      	streq	r2, [sp, #12]
 801618c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801618e:	b29f      	uxth	r7, r3
 8016190:	bf08      	it	eq
 8016192:	f04f 0b00 	moveq.w	fp, #0
 8016196:	42ba      	cmp	r2, r7
 8016198:	d309      	bcc.n	80161ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801619a:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801619e:	2301      	movs	r3, #1
 80161a0:	9a05      	ldr	r2, [sp, #20]
 80161a2:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 80161a6:	d30e      	bcc.n	80161c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 80161a8:	469a      	mov	sl, r3
 80161aa:	2600      	movs	r6, #0
 80161ac:	e035      	b.n	801621a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 80161ae:	9b05      	ldr	r3, [sp, #20]
 80161b0:	429f      	cmp	r7, r3
 80161b2:	d318      	bcc.n	80161e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 80161b4:	eb04 030a 	add.w	r3, r4, sl
 80161b8:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 80161bc:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 80161c0:	f10a 0301 	add.w	r3, sl, #1
 80161c4:	b29b      	uxth	r3, r3
 80161c6:	9a05      	ldr	r2, [sp, #20]
 80161c8:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80161cc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80161ce:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80161d2:	7116      	strb	r6, [r2, #4]
 80161d4:	f10a 0601 	add.w	r6, sl, #1
 80161d8:	80d1      	strh	r1, [r2, #6]
 80161da:	7156      	strb	r6, [r2, #5]
 80161dc:	9a05      	ldr	r2, [sp, #20]
 80161de:	3201      	adds	r2, #1
 80161e0:	b292      	uxth	r2, r2
 80161e2:	9205      	str	r2, [sp, #20]
 80161e4:	e7e0      	b.n	80161a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 80161e6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 80161ea:	463a      	mov	r2, r7
 80161ec:	795b      	ldrb	r3, [r3, #5]
 80161ee:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80161f2:	4426      	add	r6, r4
 80161f4:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80161f6:	eb01 0c06 	add.w	ip, r1, r6
 80161fa:	f1bc 0f00 	cmp.w	ip, #0
 80161fe:	dd07      	ble.n	8016210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8016200:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016204:	f892 c004 	ldrb.w	ip, [r2, #4]
 8016208:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801620c:	88d2      	ldrh	r2, [r2, #6]
 801620e:	e7f1      	b.n	80161f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8016210:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8016214:	b29b      	uxth	r3, r3
 8016216:	e7c3      	b.n	80161a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8016218:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801621a:	970c      	str	r7, [sp, #48]	@ 0x30
 801621c:	9a01      	ldr	r2, [sp, #4]
 801621e:	46b4      	mov	ip, r6
 8016220:	461f      	mov	r7, r3
 8016222:	e78c      	b.n	801613e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8016224:	1b7b      	subs	r3, r7, r5
 8016226:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801622a:	9201      	str	r2, [sp, #4]
 801622c:	eb0c 0605 	add.w	r6, ip, r5
 8016230:	b29b      	uxth	r3, r3
 8016232:	b2b6      	uxth	r6, r6
 8016234:	2500      	movs	r5, #0
 8016236:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016238:	4282      	cmp	r2, r0
 801623a:	d88b      	bhi.n	8016154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801623c:	9a01      	ldr	r2, [sp, #4]
 801623e:	e74b      	b.n	80160d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8016240:	4297      	cmp	r7, r2
 8016242:	d332      	bcc.n	80162aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8016244:	1abb      	subs	r3, r7, r2
 8016246:	b29b      	uxth	r3, r3
 8016248:	9208      	str	r2, [sp, #32]
 801624a:	9501      	str	r5, [sp, #4]
 801624c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801624e:	29ff      	cmp	r1, #255	@ 0xff
 8016250:	9908      	ldr	r1, [sp, #32]
 8016252:	eb0c 0601 	add.w	r6, ip, r1
 8016256:	d135      	bne.n	80162c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8016258:	f1a0 0e02 	sub.w	lr, r0, #2
 801625c:	b2b6      	uxth	r6, r6
 801625e:	45b4      	cmp	ip, r6
 8016260:	f040 808c 	bne.w	801637c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8016264:	9908      	ldr	r1, [sp, #32]
 8016266:	4297      	cmp	r7, r2
 8016268:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801626c:	d3e2      	bcc.n	8016234 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801626e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8016270:	9904      	ldr	r1, [sp, #16]
 8016272:	8812      	ldrh	r2, [r2, #0]
 8016274:	1a52      	subs	r2, r2, r1
 8016276:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801627a:	9a07      	ldr	r2, [sp, #28]
 801627c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801627e:	3201      	adds	r2, #1
 8016280:	428a      	cmp	r2, r1
 8016282:	9207      	str	r2, [sp, #28]
 8016284:	f040 8087 	bne.w	8016396 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8016288:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801628c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8016290:	9b04      	ldr	r3, [sp, #16]
 8016292:	1bed      	subs	r5, r5, r7
 8016294:	b2ad      	uxth	r5, r5
 8016296:	2d00      	cmp	r5, #0
 8016298:	bf08      	it	eq
 801629a:	461a      	moveq	r2, r3
 801629c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801629e:	bf18      	it	ne
 80162a0:	2200      	movne	r2, #0
 80162a2:	3301      	adds	r3, #1
 80162a4:	930d      	str	r3, [sp, #52]	@ 0x34
 80162a6:	b292      	uxth	r2, r2
 80162a8:	e70d      	b.n	80160c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 80162aa:	1bd1      	subs	r1, r2, r7
 80162ac:	b28b      	uxth	r3, r1
 80162ae:	9301      	str	r3, [sp, #4]
 80162b0:	9708      	str	r7, [sp, #32]
 80162b2:	462b      	mov	r3, r5
 80162b4:	e7ca      	b.n	801624c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 80162b6:	bf00      	nop
 80162b8:	20013ffc 	.word	0x20013ffc
 80162bc:	20013ff4 	.word	0x20013ff4
 80162c0:	fffff7fb 	.word	0xfffff7fb
 80162c4:	b2b6      	uxth	r6, r6
 80162c6:	900b      	str	r0, [sp, #44]	@ 0x2c
 80162c8:	45b4      	cmp	ip, r6
 80162ca:	d0cb      	beq.n	8016264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 80162cc:	f10c 0101 	add.w	r1, ip, #1
 80162d0:	44a4      	add	ip, r4
 80162d2:	9117      	str	r1, [sp, #92]	@ 0x5c
 80162d4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80162d8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80162da:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80162de:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80162e0:	f8b1 c000 	ldrh.w	ip, [r1]
 80162e4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80162e6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80162ea:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80162ee:	fb1e fe01 	smulbb	lr, lr, r1
 80162f2:	ea4f 2825 	mov.w	r8, r5, asr #8
 80162f6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80162f8:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80162fc:	fb08 e801 	mla	r8, r8, r1, lr
 8016300:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8016304:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016306:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801630a:	fb19 f901 	smulbb	r9, r9, r1
 801630e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8016312:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016314:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8016318:	fb0e 9e01 	mla	lr, lr, r1, r9
 801631c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016320:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016322:	fa5f fc8c 	uxtb.w	ip, ip
 8016326:	fb1c fc01 	smulbb	ip, ip, r1
 801632a:	00ed      	lsls	r5, r5, #3
 801632c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801632e:	b2ed      	uxtb	r5, r5
 8016330:	fb05 c501 	mla	r5, r5, r1, ip
 8016334:	fa1f f888 	uxth.w	r8, r8
 8016338:	fa1f fe8e 	uxth.w	lr, lr
 801633c:	b2ad      	uxth	r5, r5
 801633e:	f108 0c01 	add.w	ip, r8, #1
 8016342:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016346:	f10e 0901 	add.w	r9, lr, #1
 801634a:	f105 0c01 	add.w	ip, r5, #1
 801634e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016352:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016356:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801635a:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801635e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016362:	ea4c 0808 	orr.w	r8, ip, r8
 8016366:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016368:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801636c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016370:	ea48 0809 	orr.w	r8, r8, r9
 8016374:	f821 8b02 	strh.w	r8, [r1], #2
 8016378:	910b      	str	r1, [sp, #44]	@ 0x2c
 801637a:	e7a5      	b.n	80162c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801637c:	f10c 0801 	add.w	r8, ip, #1
 8016380:	44a4      	add	ip, r4
 8016382:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016384:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016388:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801638c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016390:	fa1f fc88 	uxth.w	ip, r8
 8016394:	e763      	b.n	801625e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8016396:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801639a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801639e:	1aad      	subs	r5, r5, r2
 80163a0:	b2ad      	uxth	r5, r5
 80163a2:	2d00      	cmp	r5, #0
 80163a4:	bf18      	it	ne
 80163a6:	2200      	movne	r2, #0
 80163a8:	9201      	str	r2, [sp, #4]
 80163aa:	e744      	b.n	8016236 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 80163ac:	4b03      	ldr	r3, [pc, #12]	@ (80163bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 80163ae:	6818      	ldr	r0, [r3, #0]
 80163b0:	6803      	ldr	r3, [r0, #0]
 80163b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80163b4:	4798      	blx	r3
 80163b6:	b01f      	add	sp, #124	@ 0x7c
 80163b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163bc:	20013ffc 	.word	0x20013ffc

080163c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 80163c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163c4:	b093      	sub	sp, #76	@ 0x4c
 80163c6:	4616      	mov	r6, r2
 80163c8:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 80163cc:	9003      	str	r0, [sp, #12]
 80163ce:	460d      	mov	r5, r1
 80163d0:	9201      	str	r2, [sp, #4]
 80163d2:	2a00      	cmp	r2, #0
 80163d4:	f000 8304 	beq.w	80169e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 80163d8:	6830      	ldr	r0, [r6, #0]
 80163da:	6871      	ldr	r1, [r6, #4]
 80163dc:	ac0e      	add	r4, sp, #56	@ 0x38
 80163de:	c403      	stmia	r4!, {r0, r1}
 80163e0:	6818      	ldr	r0, [r3, #0]
 80163e2:	6859      	ldr	r1, [r3, #4]
 80163e4:	ac10      	add	r4, sp, #64	@ 0x40
 80163e6:	c403      	stmia	r4!, {r0, r1}
 80163e8:	a80e      	add	r0, sp, #56	@ 0x38
 80163ea:	f7f8 ff0d 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80163ee:	4631      	mov	r1, r6
 80163f0:	a810      	add	r0, sp, #64	@ 0x40
 80163f2:	f7f8 ff31 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80163f6:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80163fa:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80163fe:	bfd7      	itett	le
 8016400:	b293      	uxthle	r3, r2
 8016402:	2301      	movgt	r3, #1
 8016404:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016408:	fb91 f3f3 	sdivle	r3, r1, r3
 801640c:	9304      	str	r3, [sp, #16]
 801640e:	f105 0308 	add.w	r3, r5, #8
 8016412:	9904      	ldr	r1, [sp, #16]
 8016414:	9308      	str	r3, [sp, #32]
 8016416:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801641a:	440b      	add	r3, r1
 801641c:	3b01      	subs	r3, #1
 801641e:	fb93 f3f1 	sdiv	r3, r3, r1
 8016422:	9908      	ldr	r1, [sp, #32]
 8016424:	3b01      	subs	r3, #1
 8016426:	b29b      	uxth	r3, r3
 8016428:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801642c:	9309      	str	r3, [sp, #36]	@ 0x24
 801642e:	9904      	ldr	r1, [sp, #16]
 8016430:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8016434:	fb93 f0f1 	sdiv	r0, r3, r1
 8016438:	b284      	uxth	r4, r0
 801643a:	9405      	str	r4, [sp, #20]
 801643c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8016440:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8016444:	fb05 3914 	mls	r9, r5, r4, r3
 8016448:	fb19 f902 	smulbb	r9, r9, r2
 801644c:	4489      	add	r9, r1
 801644e:	fa1f f989 	uxth.w	r9, r9
 8016452:	2d00      	cmp	r5, #0
 8016454:	d05d      	beq.n	8016512 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8016456:	1e6a      	subs	r2, r5, #1
 8016458:	9808      	ldr	r0, [sp, #32]
 801645a:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801645e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016460:	fa9a fa8a 	rev.w	sl, sl
 8016464:	4492      	add	sl, r2
 8016466:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801646a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801646e:	4411      	add	r1, r2
 8016470:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8016474:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8016478:	4413      	add	r3, r2
 801647a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801647e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8016482:	9302      	str	r3, [sp, #8]
 8016484:	4bcb      	ldr	r3, [pc, #812]	@ (80167b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 8016486:	6818      	ldr	r0, [r3, #0]
 8016488:	6803      	ldr	r3, [r0, #0]
 801648a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801648c:	4798      	blx	r3
 801648e:	4bca      	ldr	r3, [pc, #808]	@ (80167b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8016490:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8016494:	881b      	ldrh	r3, [r3, #0]
 8016496:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801649a:	fb03 2404 	mla	r4, r3, r4, r2
 801649e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80164a2:	436b      	muls	r3, r5
 80164a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80164a8:	930d      	str	r3, [sp, #52]	@ 0x34
 80164aa:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80164ae:	fb99 f3f3 	sdiv	r3, r9, r3
 80164b2:	9306      	str	r3, [sp, #24]
 80164b4:	9b01      	ldr	r3, [sp, #4]
 80164b6:	43db      	mvns	r3, r3
 80164b8:	b2db      	uxtb	r3, r3
 80164ba:	930a      	str	r3, [sp, #40]	@ 0x28
 80164bc:	9b03      	ldr	r3, [sp, #12]
 80164be:	3304      	adds	r3, #4
 80164c0:	4618      	mov	r0, r3
 80164c2:	2280      	movs	r2, #128	@ 0x80
 80164c4:	2100      	movs	r1, #0
 80164c6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80164c8:	f00c fc45 	bl	8022d56 <memset>
 80164cc:	4bbb      	ldr	r3, [pc, #748]	@ (80167bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 80164ce:	9300      	str	r3, [sp, #0]
 80164d0:	2300      	movs	r3, #0
 80164d2:	f04f 0600 	mov.w	r6, #0
 80164d6:	9307      	str	r3, [sp, #28]
 80164d8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80164da:	42a3      	cmp	r3, r4
 80164dc:	f240 827b 	bls.w	80169d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 80164e0:	f04f 0e07 	mov.w	lr, #7
 80164e4:	f1b9 0f00 	cmp.w	r9, #0
 80164e8:	f000 8159 	beq.w	801679e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 80164ec:	f89a 5000 	ldrb.w	r5, [sl]
 80164f0:	b2ed      	uxtb	r5, r5
 80164f2:	11aa      	asrs	r2, r5, #6
 80164f4:	f10a 0701 	add.w	r7, sl, #1
 80164f8:	d10e      	bne.n	8016518 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80164fa:	9b03      	ldr	r3, [sp, #12]
 80164fc:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016500:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016504:	88ae      	ldrh	r6, [r5, #4]
 8016506:	f109 39ff 	add.w	r9, r9, #4294967295
 801650a:	fa1f f989 	uxth.w	r9, r9
 801650e:	46ba      	mov	sl, r7
 8016510:	e7e8      	b.n	80164e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8016512:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8016516:	e7a6      	b.n	8016466 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 8016518:	2a01      	cmp	r2, #1
 801651a:	d129      	bne.n	8016570 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801651c:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8016520:	f005 0203 	and.w	r2, r5, #3
 8016524:	3b02      	subs	r3, #2
 8016526:	4413      	add	r3, r2
 8016528:	f003 031f 	and.w	r3, r3, #31
 801652c:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8016530:	f363 0604 	bfi	r6, r3, #0, #5
 8016534:	3a02      	subs	r2, #2
 8016536:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801653a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801653e:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8016542:	f362 164a 	bfi	r6, r2, #5, #6
 8016546:	3d02      	subs	r5, #2
 8016548:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801654c:	f005 051f 	and.w	r5, r5, #31
 8016550:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016554:	2103      	movs	r1, #3
 8016556:	fb11 2205 	smlabb	r2, r1, r5, r2
 801655a:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801655e:	9a03      	ldr	r2, [sp, #12]
 8016560:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016564:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016568:	f365 26cf 	bfi	r6, r5, #11, #5
 801656c:	809e      	strh	r6, [r3, #4]
 801656e:	e7ca      	b.n	8016506 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8016570:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016574:	2a02      	cmp	r2, #2
 8016576:	b2ab      	uxth	r3, r5
 8016578:	d136      	bne.n	80165e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801657a:	2101      	movs	r1, #1
 801657c:	fb12 1205 	smlabb	r2, r2, r5, r1
 8016580:	4492      	add	sl, r2
 8016582:	463a      	mov	r2, r7
 8016584:	4552      	cmp	r2, sl
 8016586:	d01c      	beq.n	80165c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8016588:	4694      	mov	ip, r2
 801658a:	f04f 0b03 	mov.w	fp, #3
 801658e:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8016592:	7852      	ldrb	r2, [r2, #1]
 8016594:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8016598:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801659c:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 80165a0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80165a4:	f001 021f 	and.w	r2, r1, #31
 80165a8:	fb1b 0008 	smlabb	r0, fp, r8, r0
 80165ac:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80165b0:	9a03      	ldr	r2, [sp, #12]
 80165b2:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80165b6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80165ba:	460e      	mov	r6, r1
 80165bc:	8081      	strh	r1, [r0, #4]
 80165be:	4662      	mov	r2, ip
 80165c0:	e7e0      	b.n	8016584 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 80165c2:	4599      	cmp	r9, r3
 80165c4:	d20b      	bcs.n	80165de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 80165c6:	eba5 0509 	sub.w	r5, r5, r9
 80165ca:	2d00      	cmp	r5, #0
 80165cc:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 80165d0:	f300 8209 	bgt.w	80169e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 80165d4:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80165d8:	2301      	movs	r3, #1
 80165da:	9307      	str	r3, [sp, #28]
 80165dc:	e00c      	b.n	80165f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80165de:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80165e2:	eba9 0903 	sub.w	r9, r9, r3
 80165e6:	e790      	b.n	801650a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80165e8:	4599      	cmp	r9, r3
 80165ea:	d2fa      	bcs.n	80165e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80165ec:	eba5 0509 	sub.w	r5, r5, r9
 80165f0:	2d00      	cmp	r5, #0
 80165f2:	dc1d      	bgt.n	8016630 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80165f4:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80165f8:	f04f 0b00 	mov.w	fp, #0
 80165fc:	f1b8 0f00 	cmp.w	r8, #0
 8016600:	f340 81a1 	ble.w	8016946 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 8016604:	783b      	ldrb	r3, [r7, #0]
 8016606:	b2db      	uxtb	r3, r3
 8016608:	119a      	asrs	r2, r3, #6
 801660a:	f107 0a01 	add.w	sl, r7, #1
 801660e:	f040 80d7 	bne.w	80167c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 8016612:	9a03      	ldr	r2, [sp, #12]
 8016614:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016618:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801661c:	889e      	ldrh	r6, [r3, #4]
 801661e:	9b01      	ldr	r3, [sp, #4]
 8016620:	2bff      	cmp	r3, #255	@ 0xff
 8016622:	f040 81e9 	bne.w	80169f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 8016626:	8026      	strh	r6, [r4, #0]
 8016628:	f108 38ff 	add.w	r8, r8, #4294967295
 801662c:	3402      	adds	r4, #2
 801662e:	e0be      	b.n	80167ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016630:	9b02      	ldr	r3, [sp, #8]
 8016632:	9a02      	ldr	r2, [sp, #8]
 8016634:	42ab      	cmp	r3, r5
 8016636:	bfa8      	it	ge
 8016638:	462b      	movge	r3, r5
 801663a:	eba2 0803 	sub.w	r8, r2, r3
 801663e:	9a07      	ldr	r2, [sp, #28]
 8016640:	1aed      	subs	r5, r5, r3
 8016642:	2a00      	cmp	r2, #0
 8016644:	d05a      	beq.n	80166fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 8016646:	9a01      	ldr	r2, [sp, #4]
 8016648:	2aff      	cmp	r2, #255	@ 0xff
 801664a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801664e:	d049      	beq.n	80166e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8016650:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8016654:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8016658:	42a3      	cmp	r3, r4
 801665a:	f240 80a5 	bls.w	80167a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801665e:	46bc      	mov	ip, r7
 8016660:	8820      	ldrh	r0, [r4, #0]
 8016662:	f81c 2b02 	ldrb.w	r2, [ip], #2
 8016666:	7879      	ldrb	r1, [r7, #1]
 8016668:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801666c:	b212      	sxth	r2, r2
 801666e:	b291      	uxth	r1, r2
 8016670:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8016674:	120f      	asrs	r7, r1, #8
 8016676:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801667a:	fb1a fa09 	smulbb	sl, sl, r9
 801667e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016682:	fb07 a70e 	mla	r7, r7, lr, sl
 8016686:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801668a:	00c0      	lsls	r0, r0, #3
 801668c:	10c9      	asrs	r1, r1, #3
 801668e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016692:	00d2      	lsls	r2, r2, #3
 8016694:	b2c0      	uxtb	r0, r0
 8016696:	fb1a fa09 	smulbb	sl, sl, r9
 801669a:	fb10 f009 	smulbb	r0, r0, r9
 801669e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80166a2:	b2d2      	uxtb	r2, r2
 80166a4:	b2bf      	uxth	r7, r7
 80166a6:	fb01 a10e 	mla	r1, r1, lr, sl
 80166aa:	fb02 020e 	mla	r2, r2, lr, r0
 80166ae:	b289      	uxth	r1, r1
 80166b0:	b292      	uxth	r2, r2
 80166b2:	1c78      	adds	r0, r7, #1
 80166b4:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80166b8:	f101 0a01 	add.w	sl, r1, #1
 80166bc:	1c50      	adds	r0, r2, #1
 80166be:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80166c2:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 80166c6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80166ca:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80166ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80166d2:	4307      	orrs	r7, r0
 80166d4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80166d8:	ea47 070a 	orr.w	r7, r7, sl
 80166dc:	f824 7b02 	strh.w	r7, [r4], #2
 80166e0:	4667      	mov	r7, ip
 80166e2:	e7b9      	b.n	8016658 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80166e4:	42a3      	cmp	r3, r4
 80166e6:	d95f      	bls.n	80167a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80166e8:	463a      	mov	r2, r7
 80166ea:	f812 1b02 	ldrb.w	r1, [r2], #2
 80166ee:	7878      	ldrb	r0, [r7, #1]
 80166f0:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80166f4:	f824 1b02 	strh.w	r1, [r4], #2
 80166f8:	4617      	mov	r7, r2
 80166fa:	e7f3      	b.n	80166e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80166fc:	9901      	ldr	r1, [sp, #4]
 80166fe:	29ff      	cmp	r1, #255	@ 0xff
 8016700:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016704:	b2b2      	uxth	r2, r6
 8016706:	d044      	beq.n	8016792 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8016708:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801670c:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 8016710:	ea4f 2922 	mov.w	r9, r2, asr #8
 8016714:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8016718:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801671c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8016720:	4608      	mov	r0, r1
 8016722:	fb09 f901 	mul.w	r9, r9, r1
 8016726:	fb0e fe01 	mul.w	lr, lr, r1
 801672a:	00d1      	lsls	r1, r2, #3
 801672c:	b2c9      	uxtb	r1, r1
 801672e:	4341      	muls	r1, r0
 8016730:	429c      	cmp	r4, r3
 8016732:	f4bf af61 	bcs.w	80165f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016736:	8822      	ldrh	r2, [r4, #0]
 8016738:	1210      	asrs	r0, r2, #8
 801673a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801673e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016742:	00d2      	lsls	r2, r2, #3
 8016744:	fb00 900a 	mla	r0, r0, sl, r9
 8016748:	b2d2      	uxtb	r2, r2
 801674a:	b280      	uxth	r0, r0
 801674c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8016750:	fb02 120a 	mla	r2, r2, sl, r1
 8016754:	b292      	uxth	r2, r2
 8016756:	f100 0b01 	add.w	fp, r0, #1
 801675a:	fb0c ec0a 	mla	ip, ip, sl, lr
 801675e:	fa1f fc8c 	uxth.w	ip, ip
 8016762:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8016766:	1c50      	adds	r0, r2, #1
 8016768:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801676c:	f10c 0201 	add.w	r2, ip, #1
 8016770:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016774:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8016778:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801677c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016780:	ea40 0b0b 	orr.w	fp, r0, fp
 8016784:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8016788:	ea4b 0b0c 	orr.w	fp, fp, ip
 801678c:	f824 bb02 	strh.w	fp, [r4], #2
 8016790:	e7ce      	b.n	8016730 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8016792:	429c      	cmp	r4, r3
 8016794:	f4bf af30 	bcs.w	80165f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016798:	f824 2b02 	strh.w	r2, [r4], #2
 801679c:	e7f9      	b.n	8016792 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801679e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80167a2:	4657      	mov	r7, sl
 80167a4:	464d      	mov	r5, r9
 80167a6:	e727      	b.n	80165f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80167a8:	2300      	movs	r3, #0
 80167aa:	e716      	b.n	80165da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 80167ac:	44bb      	add	fp, r7
 80167ae:	4657      	mov	r7, sl
 80167b0:	e724      	b.n	80165fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 80167b2:	bf00      	nop
 80167b4:	20013ffc 	.word	0x20013ffc
 80167b8:	20013ff4 	.word	0x20013ff4
 80167bc:	20000280 	.word	0x20000280
 80167c0:	2a01      	cmp	r2, #1
 80167c2:	d12a      	bne.n	801681a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 80167c4:	f3c6 0104 	ubfx	r1, r6, #0, #5
 80167c8:	f003 0203 	and.w	r2, r3, #3
 80167cc:	3902      	subs	r1, #2
 80167ce:	4411      	add	r1, r2
 80167d0:	f001 011f 	and.w	r1, r1, #31
 80167d4:	f3c3 0081 	ubfx	r0, r3, #2, #2
 80167d8:	f361 0604 	bfi	r6, r1, #0, #5
 80167dc:	3802      	subs	r0, #2
 80167de:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80167e2:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80167e6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80167ea:	f360 164a 	bfi	r6, r0, #5, #6
 80167ee:	3b02      	subs	r3, #2
 80167f0:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80167f4:	f002 031f 	and.w	r3, r2, #31
 80167f8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80167fc:	2203      	movs	r2, #3
 80167fe:	f363 26cf 	bfi	r6, r3, #11, #5
 8016802:	fb12 0303 	smlabb	r3, r2, r3, r0
 8016806:	2207      	movs	r2, #7
 8016808:	fb12 3301 	smlabb	r3, r2, r1, r3
 801680c:	9a03      	ldr	r2, [sp, #12]
 801680e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016812:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016816:	809e      	strh	r6, [r3, #4]
 8016818:	e701      	b.n	801661e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801681a:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801681e:	45a8      	cmp	r8, r5
 8016820:	4647      	mov	r7, r8
 8016822:	bfa8      	it	ge
 8016824:	462f      	movge	r7, r5
 8016826:	2a02      	cmp	r2, #2
 8016828:	d154      	bne.n	80168d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801682a:	9b01      	ldr	r3, [sp, #4]
 801682c:	2bff      	cmp	r3, #255	@ 0xff
 801682e:	d01a      	beq.n	8016866 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8016830:	eb0b 0307 	add.w	r3, fp, r7
 8016834:	2b40      	cmp	r3, #64	@ 0x40
 8016836:	dd16      	ble.n	8016866 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8016838:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801683c:	4649      	mov	r1, r9
 801683e:	9800      	ldr	r0, [sp, #0]
 8016840:	f7ea fb86 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8016844:	465a      	mov	r2, fp
 8016846:	9b01      	ldr	r3, [sp, #4]
 8016848:	9900      	ldr	r1, [sp, #0]
 801684a:	4620      	mov	r0, r4
 801684c:	f7ea fbaa 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016850:	9b00      	ldr	r3, [sp, #0]
 8016852:	461a      	mov	r2, r3
 8016854:	4b6c      	ldr	r3, [pc, #432]	@ (8016a08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016856:	429a      	cmp	r2, r3
 8016858:	bf0c      	ite	eq
 801685a:	4b6c      	ldreq	r3, [pc, #432]	@ (8016a0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801685c:	4b6a      	ldrne	r3, [pc, #424]	@ (8016a08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801685e:	9300      	str	r3, [sp, #0]
 8016860:	444c      	add	r4, r9
 8016862:	f04f 0b00 	mov.w	fp, #0
 8016866:	4652      	mov	r2, sl
 8016868:	2100      	movs	r1, #0
 801686a:	42a9      	cmp	r1, r5
 801686c:	da2c      	bge.n	80168c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801686e:	4694      	mov	ip, r2
 8016870:	f04f 0903 	mov.w	r9, #3
 8016874:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8016878:	7852      	ldrb	r2, [r2, #1]
 801687a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801687e:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8016882:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 8016886:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801688a:	f003 021f 	and.w	r2, r3, #31
 801688e:	fb19 000e 	smlabb	r0, r9, lr, r0
 8016892:	f04f 0e07 	mov.w	lr, #7
 8016896:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801689a:	9a03      	ldr	r2, [sp, #12]
 801689c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80168a0:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80168a4:	42b9      	cmp	r1, r7
 80168a6:	461e      	mov	r6, r3
 80168a8:	8083      	strh	r3, [r0, #4]
 80168aa:	da0a      	bge.n	80168c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 80168ac:	9a01      	ldr	r2, [sp, #4]
 80168ae:	2aff      	cmp	r2, #255	@ 0xff
 80168b0:	bf15      	itete	ne
 80168b2:	9a00      	ldrne	r2, [sp, #0]
 80168b4:	8023      	strheq	r3, [r4, #0]
 80168b6:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 80168ba:	3402      	addeq	r4, #2
 80168bc:	bf18      	it	ne
 80168be:	f10b 0b01 	addne.w	fp, fp, #1
 80168c2:	3101      	adds	r1, #1
 80168c4:	4662      	mov	r2, ip
 80168c6:	e7d0      	b.n	801686a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 80168c8:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80168cc:	eba8 0807 	sub.w	r8, r8, r7
 80168d0:	1bed      	subs	r5, r5, r7
 80168d2:	e76c      	b.n	80167ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80168d4:	9b01      	ldr	r3, [sp, #4]
 80168d6:	2bff      	cmp	r3, #255	@ 0xff
 80168d8:	eba8 0807 	sub.w	r8, r8, r7
 80168dc:	eba5 0507 	sub.w	r5, r5, r7
 80168e0:	fa1f f986 	uxth.w	r9, r6
 80168e4:	d027      	beq.n	8016936 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80168e6:	eb0b 0307 	add.w	r3, fp, r7
 80168ea:	2b40      	cmp	r3, #64	@ 0x40
 80168ec:	dd18      	ble.n	8016920 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80168ee:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80168f2:	4619      	mov	r1, r3
 80168f4:	9800      	ldr	r0, [sp, #0]
 80168f6:	930c      	str	r3, [sp, #48]	@ 0x30
 80168f8:	f7ea fb2a 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 80168fc:	465a      	mov	r2, fp
 80168fe:	9b01      	ldr	r3, [sp, #4]
 8016900:	9900      	ldr	r1, [sp, #0]
 8016902:	4620      	mov	r0, r4
 8016904:	f7ea fb4e 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016908:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801690a:	441c      	add	r4, r3
 801690c:	9b00      	ldr	r3, [sp, #0]
 801690e:	461a      	mov	r2, r3
 8016910:	4b3d      	ldr	r3, [pc, #244]	@ (8016a08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016912:	429a      	cmp	r2, r3
 8016914:	bf0c      	ite	eq
 8016916:	4b3d      	ldreq	r3, [pc, #244]	@ (8016a0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8016918:	4b3b      	ldrne	r3, [pc, #236]	@ (8016a08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801691a:	9300      	str	r3, [sp, #0]
 801691c:	f04f 0b00 	mov.w	fp, #0
 8016920:	9b00      	ldr	r3, [sp, #0]
 8016922:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 8016926:	463b      	mov	r3, r7
 8016928:	2b00      	cmp	r3, #0
 801692a:	f43f af3f 	beq.w	80167ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801692e:	f822 9b02 	strh.w	r9, [r2], #2
 8016932:	3b01      	subs	r3, #1
 8016934:	e7f8      	b.n	8016928 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 8016936:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801693a:	42a7      	cmp	r7, r4
 801693c:	f67f af37 	bls.w	80167ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016940:	f824 9b02 	strh.w	r9, [r4], #2
 8016944:	e7f9      	b.n	801693a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 8016946:	f1bb 0f00 	cmp.w	fp, #0
 801694a:	d00c      	beq.n	8016966 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 801694c:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8016950:	4641      	mov	r1, r8
 8016952:	9800      	ldr	r0, [sp, #0]
 8016954:	f7ea fafc 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8016958:	4620      	mov	r0, r4
 801695a:	9b01      	ldr	r3, [sp, #4]
 801695c:	9900      	ldr	r1, [sp, #0]
 801695e:	465a      	mov	r2, fp
 8016960:	f7ea fb20 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016964:	4444      	add	r4, r8
 8016966:	4b2a      	ldr	r3, [pc, #168]	@ (8016a10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8016968:	9a02      	ldr	r2, [sp, #8]
 801696a:	881b      	ldrh	r3, [r3, #0]
 801696c:	1a9b      	subs	r3, r3, r2
 801696e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016972:	9b06      	ldr	r3, [sp, #24]
 8016974:	3301      	adds	r3, #1
 8016976:	9306      	str	r3, [sp, #24]
 8016978:	9a06      	ldr	r2, [sp, #24]
 801697a:	9b04      	ldr	r3, [sp, #16]
 801697c:	4293      	cmp	r3, r2
 801697e:	d120      	bne.n	80169c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8016980:	9b05      	ldr	r3, [sp, #20]
 8016982:	9a05      	ldr	r2, [sp, #20]
 8016984:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8016988:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801698c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801698e:	f103 0801 	add.w	r8, r3, #1
 8016992:	9b08      	ldr	r3, [sp, #32]
 8016994:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8016998:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801699a:	ba3f      	rev	r7, r7
 801699c:	2280      	movs	r2, #128	@ 0x80
 801699e:	2100      	movs	r1, #0
 80169a0:	441f      	add	r7, r3
 80169a2:	eba9 0905 	sub.w	r9, r9, r5
 80169a6:	f00c f9d6 	bl	8022d56 <memset>
 80169aa:	2300      	movs	r3, #0
 80169ac:	fa1f f989 	uxth.w	r9, r9
 80169b0:	f04f 0600 	mov.w	r6, #0
 80169b4:	f8cd 8014 	str.w	r8, [sp, #20]
 80169b8:	9306      	str	r3, [sp, #24]
 80169ba:	f7ea fabf 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 80169be:	46ba      	mov	sl, r7
 80169c0:	e58a      	b.n	80164d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 80169c2:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 80169c6:	9b02      	ldr	r3, [sp, #8]
 80169c8:	eba9 0903 	sub.w	r9, r9, r3
 80169cc:	eba9 0505 	sub.w	r5, r9, r5
 80169d0:	fa1f f985 	uxth.w	r9, r5
 80169d4:	e7f1      	b.n	80169ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 80169d6:	4b0f      	ldr	r3, [pc, #60]	@ (8016a14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 80169d8:	6818      	ldr	r0, [r3, #0]
 80169da:	6803      	ldr	r3, [r0, #0]
 80169dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80169de:	4798      	blx	r3
 80169e0:	b013      	add	sp, #76	@ 0x4c
 80169e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169e6:	9b02      	ldr	r3, [sp, #8]
 80169e8:	9a02      	ldr	r2, [sp, #8]
 80169ea:	42ab      	cmp	r3, r5
 80169ec:	bfa8      	it	ge
 80169ee:	462b      	movge	r3, r5
 80169f0:	eba2 0803 	sub.w	r8, r2, r3
 80169f4:	1aed      	subs	r5, r5, r3
 80169f6:	e626      	b.n	8016646 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 80169f8:	f108 38ff 	add.w	r8, r8, #4294967295
 80169fc:	fa1f f986 	uxth.w	r9, r6
 8016a00:	2500      	movs	r5, #0
 8016a02:	2701      	movs	r7, #1
 8016a04:	e76f      	b.n	80168e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 8016a06:	bf00      	nop
 8016a08:	20000280 	.word	0x20000280
 8016a0c:	20000380 	.word	0x20000380
 8016a10:	20013ff4 	.word	0x20013ff4
 8016a14:	20013ffc 	.word	0x20013ffc

08016a18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a1c:	b08f      	sub	sp, #60	@ 0x3c
 8016a1e:	461c      	mov	r4, r3
 8016a20:	9203      	str	r2, [sp, #12]
 8016a22:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016a26:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016a28:	9202      	str	r2, [sp, #8]
 8016a2a:	460f      	mov	r7, r1
 8016a2c:	2a00      	cmp	r2, #0
 8016a2e:	f000 8128 	beq.w	8016c82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8016a32:	6820      	ldr	r0, [r4, #0]
 8016a34:	6861      	ldr	r1, [r4, #4]
 8016a36:	aa0a      	add	r2, sp, #40	@ 0x28
 8016a38:	c203      	stmia	r2!, {r0, r1}
 8016a3a:	6818      	ldr	r0, [r3, #0]
 8016a3c:	6859      	ldr	r1, [r3, #4]
 8016a3e:	aa0c      	add	r2, sp, #48	@ 0x30
 8016a40:	c203      	stmia	r2!, {r0, r1}
 8016a42:	a80a      	add	r0, sp, #40	@ 0x28
 8016a44:	f7f8 fbe0 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a48:	4621      	mov	r1, r4
 8016a4a:	a80c      	add	r0, sp, #48	@ 0x30
 8016a4c:	f7f8 fc04 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016a50:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016a54:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016a58:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8016a5c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016a60:	bfde      	ittt	le
 8016a62:	b2b3      	uxthle	r3, r6
 8016a64:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016a68:	fb92 f3f3 	sdivle	r3, r2, r3
 8016a6c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016a70:	bfc8      	it	gt
 8016a72:	2301      	movgt	r3, #1
 8016a74:	fb92 f1f3 	sdiv	r1, r2, r3
 8016a78:	fa1f fc81 	uxth.w	ip, r1
 8016a7c:	fb0c 2413 	mls	r4, ip, r3, r2
 8016a80:	fb14 f406 	smulbb	r4, r4, r6
 8016a84:	441d      	add	r5, r3
 8016a86:	4404      	add	r4, r0
 8016a88:	4661      	mov	r1, ip
 8016a8a:	3d01      	subs	r5, #1
 8016a8c:	b2a4      	uxth	r4, r4
 8016a8e:	fb95 f5f3 	sdiv	r5, r5, r3
 8016a92:	b121      	cbz	r1, 8016a9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8016a94:	9b03      	ldr	r3, [sp, #12]
 8016a96:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016a9a:	ba1b      	rev	r3, r3
 8016a9c:	441f      	add	r7, r3
 8016a9e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016aa2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8016aa6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016aaa:	4418      	add	r0, r3
 8016aac:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016ab0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016ab4:	441a      	add	r2, r3
 8016ab6:	4b74      	ldr	r3, [pc, #464]	@ (8016c88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016ab8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016abc:	6818      	ldr	r0, [r3, #0]
 8016abe:	6803      	ldr	r3, [r0, #0]
 8016ac0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016ac2:	4798      	blx	r3
 8016ac4:	4a71      	ldr	r2, [pc, #452]	@ (8016c8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8016ac6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8016aca:	8813      	ldrh	r3, [r2, #0]
 8016acc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016ad0:	9209      	str	r2, [sp, #36]	@ 0x24
 8016ad2:	fb03 c101 	mla	r1, r3, r1, ip
 8016ad6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016ada:	4373      	muls	r3, r6
 8016adc:	b2ad      	uxth	r5, r5
 8016ade:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016ae2:	00ad      	lsls	r5, r5, #2
 8016ae4:	2c00      	cmp	r4, #0
 8016ae6:	9304      	str	r3, [sp, #16]
 8016ae8:	f105 0304 	add.w	r3, r5, #4
 8016aec:	9305      	str	r3, [sp, #20]
 8016aee:	bf0c      	ite	eq
 8016af0:	46c8      	moveq	r8, r9
 8016af2:	f04f 0800 	movne.w	r8, #0
 8016af6:	2300      	movs	r3, #0
 8016af8:	fa1f f888 	uxth.w	r8, r8
 8016afc:	9301      	str	r3, [sp, #4]
 8016afe:	9a04      	ldr	r2, [sp, #16]
 8016b00:	4282      	cmp	r2, r0
 8016b02:	f240 80b9 	bls.w	8016c78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8016b06:	b95b      	cbnz	r3, 8016b20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8016b08:	783a      	ldrb	r2, [r7, #0]
 8016b0a:	0993      	lsrs	r3, r2, #6
 8016b0c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016b10:	9201      	str	r2, [sp, #4]
 8016b12:	1e5a      	subs	r2, r3, #1
 8016b14:	2a02      	cmp	r2, #2
 8016b16:	bf8d      	iteet	hi
 8016b18:	787b      	ldrbhi	r3, [r7, #1]
 8016b1a:	3701      	addls	r7, #1
 8016b1c:	b29b      	uxthls	r3, r3
 8016b1e:	3702      	addhi	r7, #2
 8016b20:	b184      	cbz	r4, 8016b44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8016b22:	429c      	cmp	r4, r3
 8016b24:	bf95      	itete	ls
 8016b26:	1b1c      	subls	r4, r3, r4
 8016b28:	1ae4      	subhi	r4, r4, r3
 8016b2a:	fa1f fa84 	uxthls.w	sl, r4
 8016b2e:	b2a4      	uxthhi	r4, r4
 8016b30:	bf87      	ittee	hi
 8016b32:	46c4      	movhi	ip, r8
 8016b34:	f04f 0a00 	movhi.w	sl, #0
 8016b38:	fa1f fc89 	uxthls.w	ip, r9
 8016b3c:	2400      	movls	r4, #0
 8016b3e:	4653      	mov	r3, sl
 8016b40:	46e0      	mov	r8, ip
 8016b42:	e7dc      	b.n	8016afe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8016b44:	2204      	movs	r2, #4
 8016b46:	4615      	mov	r5, r2
 8016b48:	9905      	ldr	r1, [sp, #20]
 8016b4a:	9a01      	ldr	r2, [sp, #4]
 8016b4c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016b50:	9903      	ldr	r1, [sp, #12]
 8016b52:	588a      	ldr	r2, [r1, r2]
 8016b54:	4543      	cmp	r3, r8
 8016b56:	bf27      	ittee	cs
 8016b58:	eba3 0a08 	subcs.w	sl, r3, r8
 8016b5c:	46c6      	movcs	lr, r8
 8016b5e:	eba8 0c03 	subcc.w	ip, r8, r3
 8016b62:	469e      	movcc	lr, r3
 8016b64:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8016b68:	bf27      	ittee	cs
 8016b6a:	fa1f fa8a 	uxthcs.w	sl, sl
 8016b6e:	46a4      	movcs	ip, r4
 8016b70:	fa1f fc8c 	uxthcc.w	ip, ip
 8016b74:	46a2      	movcc	sl, r4
 8016b76:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8016b7a:	2900      	cmp	r1, #0
 8016b7c:	d066      	beq.n	8016c4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8016b7e:	29ff      	cmp	r1, #255	@ 0xff
 8016b80:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016b84:	d114      	bne.n	8016bb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016b86:	9d02      	ldr	r5, [sp, #8]
 8016b88:	2dff      	cmp	r5, #255	@ 0xff
 8016b8a:	d111      	bne.n	8016bb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016b8c:	0951      	lsrs	r1, r2, #5
 8016b8e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016b92:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016b96:	f026 0607 	bic.w	r6, r6, #7
 8016b9a:	430e      	orrs	r6, r1
 8016b9c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016ba0:	4316      	orrs	r6, r2
 8016ba2:	b2b6      	uxth	r6, r6
 8016ba4:	4486      	add	lr, r0
 8016ba6:	4586      	cmp	lr, r0
 8016ba8:	d051      	beq.n	8016c4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016baa:	f820 6b02 	strh.w	r6, [r0], #2
 8016bae:	e7fa      	b.n	8016ba6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8016bb0:	9d02      	ldr	r5, [sp, #8]
 8016bb2:	4369      	muls	r1, r5
 8016bb4:	1c4d      	adds	r5, r1, #1
 8016bb6:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8016bba:	122d      	asrs	r5, r5, #8
 8016bbc:	ea6f 0b05 	mvn.w	fp, r5
 8016bc0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8016bc4:	b2ad      	uxth	r5, r5
 8016bc6:	b2f6      	uxtb	r6, r6
 8016bc8:	b2d2      	uxtb	r2, r2
 8016bca:	fb11 f105 	smulbb	r1, r1, r5
 8016bce:	fb16 f605 	smulbb	r6, r6, r5
 8016bd2:	fb12 f205 	smulbb	r2, r2, r5
 8016bd6:	b289      	uxth	r1, r1
 8016bd8:	b2b6      	uxth	r6, r6
 8016bda:	b292      	uxth	r2, r2
 8016bdc:	9106      	str	r1, [sp, #24]
 8016bde:	9607      	str	r6, [sp, #28]
 8016be0:	9208      	str	r2, [sp, #32]
 8016be2:	4486      	add	lr, r0
 8016be4:	fa5f fb8b 	uxtb.w	fp, fp
 8016be8:	4586      	cmp	lr, r0
 8016bea:	d030      	beq.n	8016c4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016bec:	8802      	ldrh	r2, [r0, #0]
 8016bee:	9906      	ldr	r1, [sp, #24]
 8016bf0:	1216      	asrs	r6, r2, #8
 8016bf2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016bf6:	10d5      	asrs	r5, r2, #3
 8016bf8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016bfc:	fb06 160b 	mla	r6, r6, fp, r1
 8016c00:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016c04:	9907      	ldr	r1, [sp, #28]
 8016c06:	00d2      	lsls	r2, r2, #3
 8016c08:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016c0c:	fb05 150b 	mla	r5, r5, fp, r1
 8016c10:	b2d2      	uxtb	r2, r2
 8016c12:	9908      	ldr	r1, [sp, #32]
 8016c14:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016c18:	b2b6      	uxth	r6, r6
 8016c1a:	fb02 120b 	mla	r2, r2, fp, r1
 8016c1e:	b292      	uxth	r2, r2
 8016c20:	1c71      	adds	r1, r6, #1
 8016c22:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8016c26:	1c51      	adds	r1, r2, #1
 8016c28:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016c2c:	b2ad      	uxth	r5, r5
 8016c2e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016c32:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016c36:	4316      	orrs	r6, r2
 8016c38:	1c6a      	adds	r2, r5, #1
 8016c3a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016c3e:	096d      	lsrs	r5, r5, #5
 8016c40:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016c44:	432e      	orrs	r6, r5
 8016c46:	f820 6b02 	strh.w	r6, [r0], #2
 8016c4a:	e7cd      	b.n	8016be8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8016c4c:	4470      	add	r0, lr
 8016c4e:	4543      	cmp	r3, r8
 8016c50:	f4ff af75 	bcc.w	8016b3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016c54:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016c58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c5a:	fa1f fc89 	uxth.w	ip, r9
 8016c5e:	eba4 040c 	sub.w	r4, r4, ip
 8016c62:	881b      	ldrh	r3, [r3, #0]
 8016c64:	b2a4      	uxth	r4, r4
 8016c66:	2c00      	cmp	r4, #0
 8016c68:	eba3 0309 	sub.w	r3, r3, r9
 8016c6c:	bf18      	it	ne
 8016c6e:	f04f 0c00 	movne.w	ip, #0
 8016c72:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016c76:	e762      	b.n	8016b3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016c78:	4b03      	ldr	r3, [pc, #12]	@ (8016c88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016c7a:	6818      	ldr	r0, [r3, #0]
 8016c7c:	6803      	ldr	r3, [r0, #0]
 8016c7e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016c80:	4798      	blx	r3
 8016c82:	b00f      	add	sp, #60	@ 0x3c
 8016c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c88:	20013ffc 	.word	0x20013ffc
 8016c8c:	20013ff4 	.word	0x20013ff4

08016c90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c94:	b093      	sub	sp, #76	@ 0x4c
 8016c96:	461c      	mov	r4, r3
 8016c98:	9205      	str	r2, [sp, #20]
 8016c9a:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8016c9e:	9101      	str	r1, [sp, #4]
 8016ca0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016ca2:	9202      	str	r2, [sp, #8]
 8016ca4:	2a00      	cmp	r2, #0
 8016ca6:	f000 812c 	beq.w	8016f02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8016caa:	6820      	ldr	r0, [r4, #0]
 8016cac:	6861      	ldr	r1, [r4, #4]
 8016cae:	aa0e      	add	r2, sp, #56	@ 0x38
 8016cb0:	c203      	stmia	r2!, {r0, r1}
 8016cb2:	6818      	ldr	r0, [r3, #0]
 8016cb4:	6859      	ldr	r1, [r3, #4]
 8016cb6:	aa10      	add	r2, sp, #64	@ 0x40
 8016cb8:	c203      	stmia	r2!, {r0, r1}
 8016cba:	a80e      	add	r0, sp, #56	@ 0x38
 8016cbc:	f7f8 faa4 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016cc0:	4621      	mov	r1, r4
 8016cc2:	a810      	add	r0, sp, #64	@ 0x40
 8016cc4:	f7f8 fac8 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016cc8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8016ccc:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8016cd0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8016cd4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016cd8:	bfde      	ittt	le
 8016cda:	b2b3      	uxthle	r3, r6
 8016cdc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016ce0:	fb92 f3f3 	sdivle	r3, r2, r3
 8016ce4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016ce8:	bfc8      	it	gt
 8016cea:	2301      	movgt	r3, #1
 8016cec:	fb92 f1f3 	sdiv	r1, r2, r3
 8016cf0:	fa1f fc81 	uxth.w	ip, r1
 8016cf4:	fb0c 2413 	mls	r4, ip, r3, r2
 8016cf8:	fb14 f406 	smulbb	r4, r4, r6
 8016cfc:	441d      	add	r5, r3
 8016cfe:	4404      	add	r4, r0
 8016d00:	4661      	mov	r1, ip
 8016d02:	3d01      	subs	r5, #1
 8016d04:	b2a4      	uxth	r4, r4
 8016d06:	fb95 f5f3 	sdiv	r5, r5, r3
 8016d0a:	b131      	cbz	r1, 8016d1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8016d0c:	9b05      	ldr	r3, [sp, #20]
 8016d0e:	9901      	ldr	r1, [sp, #4]
 8016d10:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016d14:	ba1b      	rev	r3, r3
 8016d16:	4419      	add	r1, r3
 8016d18:	9101      	str	r1, [sp, #4]
 8016d1a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8016d1e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016d22:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8016d26:	4418      	add	r0, r3
 8016d28:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8016d2c:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8016d30:	441a      	add	r2, r3
 8016d32:	4b75      	ldr	r3, [pc, #468]	@ (8016f08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8016d34:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8016d38:	6818      	ldr	r0, [r3, #0]
 8016d3a:	6803      	ldr	r3, [r0, #0]
 8016d3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016d3e:	4798      	blx	r3
 8016d40:	4972      	ldr	r1, [pc, #456]	@ (8016f0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016d42:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8016d46:	880b      	ldrh	r3, [r1, #0]
 8016d48:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016d4c:	910d      	str	r1, [sp, #52]	@ 0x34
 8016d4e:	fb03 c202 	mla	r2, r3, r2, ip
 8016d52:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016d56:	4373      	muls	r3, r6
 8016d58:	b2ad      	uxth	r5, r5
 8016d5a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016d5e:	00ad      	lsls	r5, r5, #2
 8016d60:	9308      	str	r3, [sp, #32]
 8016d62:	1d2b      	adds	r3, r5, #4
 8016d64:	9309      	str	r3, [sp, #36]	@ 0x24
 8016d66:	9b02      	ldr	r3, [sp, #8]
 8016d68:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016d6c:	9106      	str	r1, [sp, #24]
 8016d6e:	43da      	mvns	r2, r3
 8016d70:	2c00      	cmp	r4, #0
 8016d72:	bf0c      	ite	eq
 8016d74:	46dc      	moveq	ip, fp
 8016d76:	f04f 0c00 	movne.w	ip, #0
 8016d7a:	2300      	movs	r3, #0
 8016d7c:	b2d2      	uxtb	r2, r2
 8016d7e:	fa1f fc8c 	uxth.w	ip, ip
 8016d82:	9303      	str	r3, [sp, #12]
 8016d84:	9207      	str	r2, [sp, #28]
 8016d86:	9a08      	ldr	r2, [sp, #32]
 8016d88:	4282      	cmp	r2, r0
 8016d8a:	f240 80b5 	bls.w	8016ef8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8016d8e:	b963      	cbnz	r3, 8016daa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8016d90:	9b01      	ldr	r3, [sp, #4]
 8016d92:	781a      	ldrb	r2, [r3, #0]
 8016d94:	0993      	lsrs	r3, r2, #6
 8016d96:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016d9a:	9203      	str	r2, [sp, #12]
 8016d9c:	1e5a      	subs	r2, r3, #1
 8016d9e:	2a02      	cmp	r2, #2
 8016da0:	d815      	bhi.n	8016dce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8016da2:	9a01      	ldr	r2, [sp, #4]
 8016da4:	3201      	adds	r2, #1
 8016da6:	9201      	str	r2, [sp, #4]
 8016da8:	b29b      	uxth	r3, r3
 8016daa:	b1b4      	cbz	r4, 8016dda <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8016dac:	429c      	cmp	r4, r3
 8016dae:	bf95      	itete	ls
 8016db0:	1b1c      	subls	r4, r3, r4
 8016db2:	1ae4      	subhi	r4, r4, r3
 8016db4:	fa1f f884 	uxthls.w	r8, r4
 8016db8:	b2a4      	uxthhi	r4, r4
 8016dba:	bf87      	ittee	hi
 8016dbc:	4666      	movhi	r6, ip
 8016dbe:	f04f 0800 	movhi.w	r8, #0
 8016dc2:	fa1f f68b 	uxthls.w	r6, fp
 8016dc6:	2400      	movls	r4, #0
 8016dc8:	4643      	mov	r3, r8
 8016dca:	46b4      	mov	ip, r6
 8016dcc:	e7db      	b.n	8016d86 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8016dce:	9a01      	ldr	r2, [sp, #4]
 8016dd0:	9b01      	ldr	r3, [sp, #4]
 8016dd2:	3202      	adds	r2, #2
 8016dd4:	785b      	ldrb	r3, [r3, #1]
 8016dd6:	9201      	str	r2, [sp, #4]
 8016dd8:	e7e7      	b.n	8016daa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8016dda:	2203      	movs	r2, #3
 8016ddc:	4615      	mov	r5, r2
 8016dde:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016de0:	9a03      	ldr	r2, [sp, #12]
 8016de2:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016de6:	9905      	ldr	r1, [sp, #20]
 8016de8:	4563      	cmp	r3, ip
 8016dea:	eb01 0502 	add.w	r5, r1, r2
 8016dee:	9902      	ldr	r1, [sp, #8]
 8016df0:	bf29      	itett	cs
 8016df2:	eba3 080c 	subcs.w	r8, r3, ip
 8016df6:	ebac 0603 	subcc.w	r6, ip, r3
 8016dfa:	fa1f f888 	uxthcs.w	r8, r8
 8016dfe:	46e1      	movcs	r9, ip
 8016e00:	bf2f      	iteee	cs
 8016e02:	4626      	movcs	r6, r4
 8016e04:	b2b6      	uxthcc	r6, r6
 8016e06:	4699      	movcc	r9, r3
 8016e08:	46a0      	movcc	r8, r4
 8016e0a:	29ff      	cmp	r1, #255	@ 0xff
 8016e0c:	d04a      	beq.n	8016ea4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8016e0e:	9f06      	ldr	r7, [sp, #24]
 8016e10:	78a9      	ldrb	r1, [r5, #2]
 8016e12:	9004      	str	r0, [sp, #16]
 8016e14:	4379      	muls	r1, r7
 8016e16:	910a      	str	r1, [sp, #40]	@ 0x28
 8016e18:	7869      	ldrb	r1, [r5, #1]
 8016e1a:	4379      	muls	r1, r7
 8016e1c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016e1e:	9905      	ldr	r1, [sp, #20]
 8016e20:	5c8a      	ldrb	r2, [r1, r2]
 8016e22:	437a      	muls	r2, r7
 8016e24:	920c      	str	r2, [sp, #48]	@ 0x30
 8016e26:	46ca      	mov	sl, r9
 8016e28:	f1ba 0f00 	cmp.w	sl, #0
 8016e2c:	d03d      	beq.n	8016eaa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8016e2e:	9a04      	ldr	r2, [sp, #16]
 8016e30:	9f07      	ldr	r7, [sp, #28]
 8016e32:	8812      	ldrh	r2, [r2, #0]
 8016e34:	1215      	asrs	r5, r2, #8
 8016e36:	46be      	mov	lr, r7
 8016e38:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8016e3c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8016e3e:	10d1      	asrs	r1, r2, #3
 8016e40:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8016e44:	fb05 750e 	mla	r5, r5, lr, r7
 8016e48:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016e4c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8016e4e:	00d2      	lsls	r2, r2, #3
 8016e50:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8016e54:	fb01 710e 	mla	r1, r1, lr, r7
 8016e58:	b2d2      	uxtb	r2, r2
 8016e5a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8016e5c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016e60:	b2ad      	uxth	r5, r5
 8016e62:	fb02 720e 	mla	r2, r2, lr, r7
 8016e66:	b292      	uxth	r2, r2
 8016e68:	f105 0e01 	add.w	lr, r5, #1
 8016e6c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8016e70:	f102 0e01 	add.w	lr, r2, #1
 8016e74:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8016e78:	b289      	uxth	r1, r1
 8016e7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016e7e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8016e82:	4315      	orrs	r5, r2
 8016e84:	1c4a      	adds	r2, r1, #1
 8016e86:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016e8a:	0949      	lsrs	r1, r1, #5
 8016e8c:	9a04      	ldr	r2, [sp, #16]
 8016e8e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016e92:	430d      	orrs	r5, r1
 8016e94:	f822 5b02 	strh.w	r5, [r2], #2
 8016e98:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016e9c:	9204      	str	r2, [sp, #16]
 8016e9e:	fa1f fa8a 	uxth.w	sl, sl
 8016ea2:	e7c1      	b.n	8016e28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8016ea4:	4649      	mov	r1, r9
 8016ea6:	4686      	mov	lr, r0
 8016ea8:	b999      	cbnz	r1, 8016ed2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8016eaa:	4563      	cmp	r3, ip
 8016eac:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8016eb0:	d38a      	bcc.n	8016dc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016eb2:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8016eb6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016eb8:	fa1f f68b 	uxth.w	r6, fp
 8016ebc:	1ba4      	subs	r4, r4, r6
 8016ebe:	881b      	ldrh	r3, [r3, #0]
 8016ec0:	b2a4      	uxth	r4, r4
 8016ec2:	2c00      	cmp	r4, #0
 8016ec4:	eba3 030b 	sub.w	r3, r3, fp
 8016ec8:	bf18      	it	ne
 8016eca:	2600      	movne	r6, #0
 8016ecc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016ed0:	e77a      	b.n	8016dc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016ed2:	78aa      	ldrb	r2, [r5, #2]
 8016ed4:	4f0e      	ldr	r7, [pc, #56]	@ (8016f10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8016ed6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8016eda:	786a      	ldrb	r2, [r5, #1]
 8016edc:	00d2      	lsls	r2, r2, #3
 8016ede:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016ee2:	ea4a 0202 	orr.w	r2, sl, r2
 8016ee6:	f895 a000 	ldrb.w	sl, [r5]
 8016eea:	3901      	subs	r1, #1
 8016eec:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8016ef0:	f82e 2b02 	strh.w	r2, [lr], #2
 8016ef4:	b289      	uxth	r1, r1
 8016ef6:	e7d7      	b.n	8016ea8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8016ef8:	4b03      	ldr	r3, [pc, #12]	@ (8016f08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8016efa:	6818      	ldr	r0, [r3, #0]
 8016efc:	6803      	ldr	r3, [r0, #0]
 8016efe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016f00:	4798      	blx	r3
 8016f02:	b013      	add	sp, #76	@ 0x4c
 8016f04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f08:	20013ffc 	.word	0x20013ffc
 8016f0c:	20013ff4 	.word	0x20013ff4
 8016f10:	fffff800 	.word	0xfffff800

08016f14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f18:	b09d      	sub	sp, #116	@ 0x74
 8016f1a:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8016f1e:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8016f22:	920e      	str	r2, [sp, #56]	@ 0x38
 8016f24:	461c      	mov	r4, r3
 8016f26:	4683      	mov	fp, r0
 8016f28:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016f2a:	2a00      	cmp	r2, #0
 8016f2c:	f000 81e0 	beq.w	80172f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8016f30:	6820      	ldr	r0, [r4, #0]
 8016f32:	6861      	ldr	r1, [r4, #4]
 8016f34:	aa18      	add	r2, sp, #96	@ 0x60
 8016f36:	c203      	stmia	r2!, {r0, r1}
 8016f38:	6818      	ldr	r0, [r3, #0]
 8016f3a:	6859      	ldr	r1, [r3, #4]
 8016f3c:	aa1a      	add	r2, sp, #104	@ 0x68
 8016f3e:	c203      	stmia	r2!, {r0, r1}
 8016f40:	a818      	add	r0, sp, #96	@ 0x60
 8016f42:	f7f8 f961 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f46:	4621      	mov	r1, r4
 8016f48:	a81a      	add	r0, sp, #104	@ 0x68
 8016f4a:	f7f8 f985 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f4e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8016f52:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8016f56:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8016f5a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016f5e:	bfd7      	itett	le
 8016f60:	b29a      	uxthle	r2, r3
 8016f62:	2201      	movgt	r2, #1
 8016f64:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016f68:	fb91 f2f2 	sdivle	r2, r1, r2
 8016f6c:	9202      	str	r2, [sp, #8]
 8016f6e:	9802      	ldr	r0, [sp, #8]
 8016f70:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8016f74:	fb92 f0f0 	sdiv	r0, r2, r0
 8016f78:	b280      	uxth	r0, r0
 8016f7a:	900f      	str	r0, [sp, #60]	@ 0x3c
 8016f7c:	9902      	ldr	r1, [sp, #8]
 8016f7e:	9802      	ldr	r0, [sp, #8]
 8016f80:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8016f82:	440c      	add	r4, r1
 8016f84:	fb05 2510 	mls	r5, r5, r0, r2
 8016f88:	fb15 f503 	smulbb	r5, r5, r3
 8016f8c:	3c01      	subs	r4, #1
 8016f8e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8016f92:	fb94 f4f1 	sdiv	r4, r4, r1
 8016f96:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8016f9a:	440d      	add	r5, r1
 8016f9c:	4419      	add	r1, r3
 8016f9e:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8016fa2:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8016fa6:	441a      	add	r2, r3
 8016fa8:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016fac:	9306      	str	r3, [sp, #24]
 8016fae:	4bb3      	ldr	r3, [pc, #716]	@ (801727c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8016fb0:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8016fb4:	6818      	ldr	r0, [r3, #0]
 8016fb6:	6803      	ldr	r3, [r0, #0]
 8016fb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016fba:	4798      	blx	r3
 8016fbc:	4bb0      	ldr	r3, [pc, #704]	@ (8017280 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8016fbe:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8016fc2:	881a      	ldrh	r2, [r3, #0]
 8016fc4:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8016fc8:	9316      	str	r3, [sp, #88]	@ 0x58
 8016fca:	fb02 7101 	mla	r1, r2, r1, r7
 8016fce:	3401      	adds	r4, #1
 8016fd0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8016fd4:	b2a4      	uxth	r4, r4
 8016fd6:	4356      	muls	r6, r2
 8016fd8:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8016fdc:	00a4      	lsls	r4, r4, #2
 8016fde:	920a      	str	r2, [sp, #40]	@ 0x28
 8016fe0:	1d22      	adds	r2, r4, #4
 8016fe2:	b2ad      	uxth	r5, r5
 8016fe4:	9213      	str	r2, [sp, #76]	@ 0x4c
 8016fe6:	4ba7      	ldr	r3, [pc, #668]	@ (8017284 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8016fe8:	9a06      	ldr	r2, [sp, #24]
 8016fea:	2d00      	cmp	r5, #0
 8016fec:	bf0c      	ite	eq
 8016fee:	4611      	moveq	r1, r2
 8016ff0:	2100      	movne	r1, #0
 8016ff2:	2200      	movs	r2, #0
 8016ff4:	eba3 030b 	sub.w	r3, r3, fp
 8016ff8:	b289      	uxth	r1, r1
 8016ffa:	920d      	str	r2, [sp, #52]	@ 0x34
 8016ffc:	9317      	str	r3, [sp, #92]	@ 0x5c
 8016ffe:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017000:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017002:	fa12 f383 	uxtah	r3, r2, r3
 8017006:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017008:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801700c:	3304      	adds	r3, #4
 801700e:	9308      	str	r3, [sp, #32]
 8017010:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017012:	4543      	cmp	r3, r8
 8017014:	f240 8167 	bls.w	80172e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8017018:	9a02      	ldr	r2, [sp, #8]
 801701a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801701e:	fbb5 f3f3 	udiv	r3, r5, r3
 8017022:	1ad3      	subs	r3, r2, r3
 8017024:	b29b      	uxth	r3, r3
 8017026:	9314      	str	r3, [sp, #80]	@ 0x50
 8017028:	9b08      	ldr	r3, [sp, #32]
 801702a:	9808      	ldr	r0, [sp, #32]
 801702c:	785a      	ldrb	r2, [r3, #1]
 801702e:	789b      	ldrb	r3, [r3, #2]
 8017030:	7800      	ldrb	r0, [r0, #0]
 8017032:	9010      	str	r0, [sp, #64]	@ 0x40
 8017034:	021b      	lsls	r3, r3, #8
 8017036:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801703a:	9a08      	ldr	r2, [sp, #32]
 801703c:	78d2      	ldrb	r2, [r2, #3]
 801703e:	4313      	orrs	r3, r2
 8017040:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017042:	3001      	adds	r0, #1
 8017044:	441a      	add	r2, r3
 8017046:	9007      	str	r0, [sp, #28]
 8017048:	1c50      	adds	r0, r2, #1
 801704a:	9005      	str	r0, [sp, #20]
 801704c:	7852      	ldrb	r2, [r2, #1]
 801704e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017050:	0212      	lsls	r2, r2, #8
 8017052:	5cc3      	ldrb	r3, [r0, r3]
 8017054:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017058:	431a      	orrs	r2, r3
 801705a:	b293      	uxth	r3, r2
 801705c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801705e:	2300      	movs	r3, #0
 8017060:	9309      	str	r3, [sp, #36]	@ 0x24
 8017062:	2301      	movs	r3, #1
 8017064:	9301      	str	r3, [sp, #4]
 8017066:	9304      	str	r3, [sp, #16]
 8017068:	2300      	movs	r3, #0
 801706a:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801706e:	9303      	str	r3, [sp, #12]
 8017070:	f04f 0e01 	mov.w	lr, #1
 8017074:	2d00      	cmp	r5, #0
 8017076:	d07c      	beq.n	8017172 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8017078:	45ae      	cmp	lr, r5
 801707a:	d26b      	bcs.n	8017154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801707c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801707e:	eba5 050e 	sub.w	r5, r5, lr
 8017082:	4543      	cmp	r3, r8
 8017084:	b2ad      	uxth	r5, r5
 8017086:	460c      	mov	r4, r1
 8017088:	d802      	bhi.n	8017090 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801708a:	e070      	b.n	801716e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801708c:	2b00      	cmp	r3, #0
 801708e:	d15c      	bne.n	801714a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017090:	9b05      	ldr	r3, [sp, #20]
 8017092:	9a04      	ldr	r2, [sp, #16]
 8017094:	785b      	ldrb	r3, [r3, #1]
 8017096:	9904      	ldr	r1, [sp, #16]
 8017098:	f1c2 0207 	rsb	r2, r2, #7
 801709c:	4093      	lsls	r3, r2
 801709e:	005b      	lsls	r3, r3, #1
 80170a0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80170a4:	9b05      	ldr	r3, [sp, #20]
 80170a6:	781b      	ldrb	r3, [r3, #0]
 80170a8:	410b      	asrs	r3, r1
 80170aa:	3101      	adds	r1, #1
 80170ac:	b2c9      	uxtb	r1, r1
 80170ae:	2908      	cmp	r1, #8
 80170b0:	9104      	str	r1, [sp, #16]
 80170b2:	9905      	ldr	r1, [sp, #20]
 80170b4:	bf0a      	itet	eq
 80170b6:	3102      	addeq	r1, #2
 80170b8:	3101      	addne	r1, #1
 80170ba:	9105      	streq	r1, [sp, #20]
 80170bc:	b2db      	uxtb	r3, r3
 80170be:	bf0a      	itet	eq
 80170c0:	2100      	moveq	r1, #0
 80170c2:	9105      	strne	r1, [sp, #20]
 80170c4:	9104      	streq	r1, [sp, #16]
 80170c6:	4313      	orrs	r3, r2
 80170c8:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80170ca:	b29a      	uxth	r2, r3
 80170cc:	4291      	cmp	r1, r2
 80170ce:	d30a      	bcc.n	80170e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 80170d0:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 80170d4:	2301      	movs	r3, #1
 80170d6:	9907      	ldr	r1, [sp, #28]
 80170d8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80170dc:	d30f      	bcc.n	80170fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 80170de:	2100      	movs	r1, #0
 80170e0:	9301      	str	r3, [sp, #4]
 80170e2:	9103      	str	r1, [sp, #12]
 80170e4:	e032      	b.n	801714c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 80170e6:	9b07      	ldr	r3, [sp, #28]
 80170e8:	429a      	cmp	r2, r3
 80170ea:	d318      	bcc.n	801711e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 80170ec:	9b01      	ldr	r3, [sp, #4]
 80170ee:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 80170f2:	445b      	add	r3, fp
 80170f4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80170f8:	9b01      	ldr	r3, [sp, #4]
 80170fa:	3301      	adds	r3, #1
 80170fc:	b29b      	uxth	r3, r3
 80170fe:	9907      	ldr	r1, [sp, #28]
 8017100:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8017104:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017108:	7108      	strb	r0, [r1, #4]
 801710a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801710c:	80c8      	strh	r0, [r1, #6]
 801710e:	9801      	ldr	r0, [sp, #4]
 8017110:	3001      	adds	r0, #1
 8017112:	7148      	strb	r0, [r1, #5]
 8017114:	9907      	ldr	r1, [sp, #28]
 8017116:	3101      	adds	r1, #1
 8017118:	b289      	uxth	r1, r1
 801711a:	9107      	str	r1, [sp, #28]
 801711c:	e7df      	b.n	80170de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801711e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8017122:	4611      	mov	r1, r2
 8017124:	795b      	ldrb	r3, [r3, #5]
 8017126:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801712a:	4458      	add	r0, fp
 801712c:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801712e:	4406      	add	r6, r0
 8017130:	2e00      	cmp	r6, #0
 8017132:	dd06      	ble.n	8017142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8017134:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017138:	790e      	ldrb	r6, [r1, #4]
 801713a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801713e:	88c9      	ldrh	r1, [r1, #6]
 8017140:	e7f4      	b.n	801712c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8017142:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8017146:	b29b      	uxth	r3, r3
 8017148:	e7c5      	b.n	80170d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801714a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801714c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801714e:	4621      	mov	r1, r4
 8017150:	469e      	mov	lr, r3
 8017152:	e78f      	b.n	8017074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8017154:	9a03      	ldr	r2, [sp, #12]
 8017156:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801715a:	442a      	add	r2, r5
 801715c:	ebae 0305 	sub.w	r3, lr, r5
 8017160:	b292      	uxth	r2, r2
 8017162:	b29b      	uxth	r3, r3
 8017164:	9203      	str	r2, [sp, #12]
 8017166:	2500      	movs	r5, #0
 8017168:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801716a:	4542      	cmp	r2, r8
 801716c:	d88e      	bhi.n	801708c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801716e:	4621      	mov	r1, r4
 8017170:	e74e      	b.n	8017010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8017172:	458e      	cmp	lr, r1
 8017174:	bf29      	itett	cs
 8017176:	ebae 0301 	subcs.w	r3, lr, r1
 801717a:	eba1 040e 	subcc.w	r4, r1, lr
 801717e:	b29b      	uxthcs	r3, r3
 8017180:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8017182:	bf2f      	iteee	cs
 8017184:	462c      	movcs	r4, r5
 8017186:	b2a4      	uxthcc	r4, r4
 8017188:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801718c:	462b      	movcc	r3, r5
 801718e:	f04f 0900 	mov.w	r9, #0
 8017192:	9a03      	ldr	r2, [sp, #12]
 8017194:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8017196:	444a      	add	r2, r9
 8017198:	4548      	cmp	r0, r9
 801719a:	b292      	uxth	r2, r2
 801719c:	d074      	beq.n	8017288 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801719e:	445a      	add	r2, fp
 80171a0:	2004      	movs	r0, #4
 80171a2:	4605      	mov	r5, r0
 80171a4:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 80171a8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80171aa:	fb15 0202 	smlabb	r2, r5, r2, r0
 80171ae:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80171b0:	5880      	ldr	r0, [r0, r2]
 80171b2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 80171b6:	d014      	beq.n	80171e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80171b8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80171bc:	ea4f 2510 	mov.w	r5, r0, lsr #8
 80171c0:	d112      	bne.n	80171e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 80171c2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80171c4:	2aff      	cmp	r2, #255	@ 0xff
 80171c6:	d10f      	bne.n	80171e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 80171c8:	0942      	lsrs	r2, r0, #5
 80171ca:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80171ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80171d2:	f025 0507 	bic.w	r5, r5, #7
 80171d6:	4315      	orrs	r5, r2
 80171d8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80171dc:	4305      	orrs	r5, r0
 80171de:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 80171e2:	f109 0901 	add.w	r9, r9, #1
 80171e6:	e7d4      	b.n	8017192 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 80171e8:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 80171ec:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80171f0:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 80171f4:	9215      	str	r2, [sp, #84]	@ 0x54
 80171f6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80171f8:	fb02 fa0a 	mul.w	sl, r2, sl
 80171fc:	f10a 0201 	add.w	r2, sl, #1
 8017200:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8017204:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017208:	1212      	asrs	r2, r2, #8
 801720a:	fa1f fa82 	uxth.w	sl, r2
 801720e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8017212:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017216:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801721a:	43d2      	mvns	r2, r2
 801721c:	b2d2      	uxtb	r2, r2
 801721e:	fb16 f60a 	smulbb	r6, r6, sl
 8017222:	fa5f fc8c 	uxtb.w	ip, ip
 8017226:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801722a:	b2c0      	uxtb	r0, r0
 801722c:	fb07 6702 	mla	r7, r7, r2, r6
 8017230:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8017234:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8017236:	fb10 f00a 	smulbb	r0, r0, sl
 801723a:	fb0c 0002 	mla	r0, ip, r2, r0
 801723e:	b2ed      	uxtb	r5, r5
 8017240:	b2bf      	uxth	r7, r7
 8017242:	fb15 f50a 	smulbb	r5, r5, sl
 8017246:	b280      	uxth	r0, r0
 8017248:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801724c:	fb06 5602 	mla	r6, r6, r2, r5
 8017250:	1c7a      	adds	r2, r7, #1
 8017252:	1c45      	adds	r5, r0, #1
 8017254:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017258:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801725c:	b2b6      	uxth	r6, r6
 801725e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017262:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017266:	432f      	orrs	r7, r5
 8017268:	1c75      	adds	r5, r6, #1
 801726a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801726e:	096d      	lsrs	r5, r5, #5
 8017270:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017274:	432f      	orrs	r7, r5
 8017276:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801727a:	e7b2      	b.n	80171e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801727c:	20013ffc 	.word	0x20013ffc
 8017280:	20013ff4 	.word	0x20013ff4
 8017284:	fffff7fb 	.word	0xfffff7fb
 8017288:	9203      	str	r2, [sp, #12]
 801728a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801728c:	458e      	cmp	lr, r1
 801728e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017292:	f4ff af68 	bcc.w	8017166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8017296:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8017298:	9906      	ldr	r1, [sp, #24]
 801729a:	8812      	ldrh	r2, [r2, #0]
 801729c:	1a52      	subs	r2, r2, r1
 801729e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80172a2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80172a4:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80172a6:	3201      	adds	r2, #1
 80172a8:	428a      	cmp	r2, r1
 80172aa:	9209      	str	r2, [sp, #36]	@ 0x24
 80172ac:	d111      	bne.n	80172d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 80172ae:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 80172b2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 80172b6:	9b06      	ldr	r3, [sp, #24]
 80172b8:	eba5 0509 	sub.w	r5, r5, r9
 80172bc:	b2ad      	uxth	r5, r5
 80172be:	2d00      	cmp	r5, #0
 80172c0:	bf08      	it	eq
 80172c2:	4619      	moveq	r1, r3
 80172c4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80172c6:	bf18      	it	ne
 80172c8:	2100      	movne	r1, #0
 80172ca:	3301      	adds	r3, #1
 80172cc:	930d      	str	r3, [sp, #52]	@ 0x34
 80172ce:	b289      	uxth	r1, r1
 80172d0:	e695      	b.n	8016ffe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 80172d2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80172d6:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 80172da:	1b2d      	subs	r5, r5, r4
 80172dc:	b2ad      	uxth	r5, r5
 80172de:	2d00      	cmp	r5, #0
 80172e0:	bf18      	it	ne
 80172e2:	2400      	movne	r4, #0
 80172e4:	e740      	b.n	8017168 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 80172e6:	4b04      	ldr	r3, [pc, #16]	@ (80172f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 80172e8:	6818      	ldr	r0, [r3, #0]
 80172ea:	6803      	ldr	r3, [r0, #0]
 80172ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80172ee:	4798      	blx	r3
 80172f0:	b01d      	add	sp, #116	@ 0x74
 80172f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172f6:	bf00      	nop
 80172f8:	20013ffc 	.word	0x20013ffc

080172fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80172fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017300:	b09f      	sub	sp, #124	@ 0x7c
 8017302:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8017306:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801730a:	920a      	str	r2, [sp, #40]	@ 0x28
 801730c:	461d      	mov	r5, r3
 801730e:	4604      	mov	r4, r0
 8017310:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017312:	2a00      	cmp	r2, #0
 8017314:	f000 81fa 	beq.w	801770c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8017318:	6828      	ldr	r0, [r5, #0]
 801731a:	6869      	ldr	r1, [r5, #4]
 801731c:	aa1a      	add	r2, sp, #104	@ 0x68
 801731e:	c203      	stmia	r2!, {r0, r1}
 8017320:	6818      	ldr	r0, [r3, #0]
 8017322:	6859      	ldr	r1, [r3, #4]
 8017324:	aa1c      	add	r2, sp, #112	@ 0x70
 8017326:	c203      	stmia	r2!, {r0, r1}
 8017328:	a81a      	add	r0, sp, #104	@ 0x68
 801732a:	f7f7 ff6d 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801732e:	4629      	mov	r1, r5
 8017330:	a81c      	add	r0, sp, #112	@ 0x70
 8017332:	f7f7 ff91 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017336:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801733a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801733e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8017342:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017346:	bfd7      	itett	le
 8017348:	b29a      	uxthle	r2, r3
 801734a:	2201      	movgt	r2, #1
 801734c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017350:	fb91 f2f2 	sdivle	r2, r1, r2
 8017354:	9201      	str	r2, [sp, #4]
 8017356:	9801      	ldr	r0, [sp, #4]
 8017358:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801735c:	fb92 f0f0 	sdiv	r0, r2, r0
 8017360:	b280      	uxth	r0, r0
 8017362:	9010      	str	r0, [sp, #64]	@ 0x40
 8017364:	9901      	ldr	r1, [sp, #4]
 8017366:	9801      	ldr	r0, [sp, #4]
 8017368:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801736a:	440e      	add	r6, r1
 801736c:	fb05 2510 	mls	r5, r5, r0, r2
 8017370:	fb15 f503 	smulbb	r5, r5, r3
 8017374:	3e01      	subs	r6, #1
 8017376:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801737a:	fb96 f6f1 	sdiv	r6, r6, r1
 801737e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8017382:	440d      	add	r5, r1
 8017384:	4419      	add	r1, r3
 8017386:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801738a:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801738e:	441a      	add	r2, r3
 8017390:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017394:	9304      	str	r3, [sp, #16]
 8017396:	4b96      	ldr	r3, [pc, #600]	@ (80175f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8017398:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801739c:	6818      	ldr	r0, [r3, #0]
 801739e:	6803      	ldr	r3, [r0, #0]
 80173a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80173a2:	4798      	blx	r3
 80173a4:	4b93      	ldr	r3, [pc, #588]	@ (80175f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80173a6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 80173aa:	881a      	ldrh	r2, [r3, #0]
 80173ac:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 80173b0:	9318      	str	r3, [sp, #96]	@ 0x60
 80173b2:	fb02 c101 	mla	r1, r2, r1, ip
 80173b6:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 80173ba:	4357      	muls	r7, r2
 80173bc:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 80173c0:	3601      	adds	r6, #1
 80173c2:	920b      	str	r2, [sp, #44]	@ 0x2c
 80173c4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80173c6:	4b8c      	ldr	r3, [pc, #560]	@ (80175f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80173c8:	b2b6      	uxth	r6, r6
 80173ca:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80173ce:	1d32      	adds	r2, r6, #4
 80173d0:	9206      	str	r2, [sp, #24]
 80173d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80173d4:	43d2      	mvns	r2, r2
 80173d6:	b2d2      	uxtb	r2, r2
 80173d8:	b2ad      	uxth	r5, r5
 80173da:	9215      	str	r2, [sp, #84]	@ 0x54
 80173dc:	9a04      	ldr	r2, [sp, #16]
 80173de:	2d00      	cmp	r5, #0
 80173e0:	bf0c      	ite	eq
 80173e2:	4611      	moveq	r1, r2
 80173e4:	2100      	movne	r1, #0
 80173e6:	2200      	movs	r2, #0
 80173e8:	1b1b      	subs	r3, r3, r4
 80173ea:	b289      	uxth	r1, r1
 80173ec:	920d      	str	r2, [sp, #52]	@ 0x34
 80173ee:	9319      	str	r3, [sp, #100]	@ 0x64
 80173f0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80173f2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80173f4:	fa12 f383 	uxtah	r3, r2, r3
 80173f8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80173fa:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80173fe:	3304      	adds	r3, #4
 8017400:	9307      	str	r3, [sp, #28]
 8017402:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017404:	455b      	cmp	r3, fp
 8017406:	f240 817c 	bls.w	8017702 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801740a:	9a01      	ldr	r2, [sp, #4]
 801740c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8017410:	fbb5 f3f3 	udiv	r3, r5, r3
 8017414:	1ad3      	subs	r3, r2, r3
 8017416:	b29b      	uxth	r3, r3
 8017418:	9316      	str	r3, [sp, #88]	@ 0x58
 801741a:	9b07      	ldr	r3, [sp, #28]
 801741c:	9807      	ldr	r0, [sp, #28]
 801741e:	785a      	ldrb	r2, [r3, #1]
 8017420:	789b      	ldrb	r3, [r3, #2]
 8017422:	7800      	ldrb	r0, [r0, #0]
 8017424:	9011      	str	r0, [sp, #68]	@ 0x44
 8017426:	021b      	lsls	r3, r3, #8
 8017428:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801742c:	9a07      	ldr	r2, [sp, #28]
 801742e:	78d2      	ldrb	r2, [r2, #3]
 8017430:	4313      	orrs	r3, r2
 8017432:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017434:	3001      	adds	r0, #1
 8017436:	441a      	add	r2, r3
 8017438:	9005      	str	r0, [sp, #20]
 801743a:	1c50      	adds	r0, r2, #1
 801743c:	9003      	str	r0, [sp, #12]
 801743e:	7852      	ldrb	r2, [r2, #1]
 8017440:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017442:	0212      	lsls	r2, r2, #8
 8017444:	5cc3      	ldrb	r3, [r0, r3]
 8017446:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801744a:	431a      	orrs	r2, r3
 801744c:	b293      	uxth	r3, r2
 801744e:	930c      	str	r3, [sp, #48]	@ 0x30
 8017450:	2300      	movs	r3, #0
 8017452:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8017456:	9308      	str	r3, [sp, #32]
 8017458:	461a      	mov	r2, r3
 801745a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801745e:	930e      	str	r3, [sp, #56]	@ 0x38
 8017460:	f04f 0801 	mov.w	r8, #1
 8017464:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8017468:	f8cd 8008 	str.w	r8, [sp, #8]
 801746c:	46c4      	mov	ip, r8
 801746e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017470:	2d00      	cmp	r5, #0
 8017472:	d07c      	beq.n	801756e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8017474:	45ac      	cmp	ip, r5
 8017476:	d26c      	bcs.n	8017552 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8017478:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801747a:	eba5 050c 	sub.w	r5, r5, ip
 801747e:	455b      	cmp	r3, fp
 8017480:	b2ad      	uxth	r5, r5
 8017482:	4608      	mov	r0, r1
 8017484:	d802      	bhi.n	801748c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8017486:	e070      	b.n	801756a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8017488:	2b00      	cmp	r3, #0
 801748a:	d15c      	bne.n	8017546 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801748c:	9b03      	ldr	r3, [sp, #12]
 801748e:	9a02      	ldr	r2, [sp, #8]
 8017490:	785b      	ldrb	r3, [r3, #1]
 8017492:	9902      	ldr	r1, [sp, #8]
 8017494:	f1c2 0207 	rsb	r2, r2, #7
 8017498:	4093      	lsls	r3, r2
 801749a:	005b      	lsls	r3, r3, #1
 801749c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80174a0:	9b03      	ldr	r3, [sp, #12]
 80174a2:	781b      	ldrb	r3, [r3, #0]
 80174a4:	410b      	asrs	r3, r1
 80174a6:	3101      	adds	r1, #1
 80174a8:	b2c9      	uxtb	r1, r1
 80174aa:	2908      	cmp	r1, #8
 80174ac:	9102      	str	r1, [sp, #8]
 80174ae:	9903      	ldr	r1, [sp, #12]
 80174b0:	bf0a      	itet	eq
 80174b2:	3102      	addeq	r1, #2
 80174b4:	3101      	addne	r1, #1
 80174b6:	9103      	streq	r1, [sp, #12]
 80174b8:	b2db      	uxtb	r3, r3
 80174ba:	bf0a      	itet	eq
 80174bc:	2100      	moveq	r1, #0
 80174be:	9103      	strne	r1, [sp, #12]
 80174c0:	9102      	streq	r1, [sp, #8]
 80174c2:	4313      	orrs	r3, r2
 80174c4:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80174c6:	b29a      	uxth	r2, r3
 80174c8:	4291      	cmp	r1, r2
 80174ca:	d30a      	bcc.n	80174e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 80174cc:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80174d0:	2301      	movs	r3, #1
 80174d2:	9905      	ldr	r1, [sp, #20]
 80174d4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80174d8:	d30f      	bcc.n	80174fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 80174da:	2100      	movs	r1, #0
 80174dc:	4698      	mov	r8, r3
 80174de:	9100      	str	r1, [sp, #0]
 80174e0:	e032      	b.n	8017548 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 80174e2:	9b05      	ldr	r3, [sp, #20]
 80174e4:	429a      	cmp	r2, r3
 80174e6:	d318      	bcc.n	801751a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80174e8:	eb04 0308 	add.w	r3, r4, r8
 80174ec:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 80174f0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80174f4:	f108 0301 	add.w	r3, r8, #1
 80174f8:	b29b      	uxth	r3, r3
 80174fa:	9905      	ldr	r1, [sp, #20]
 80174fc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8017500:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017504:	710e      	strb	r6, [r1, #4]
 8017506:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8017508:	80ce      	strh	r6, [r1, #6]
 801750a:	f108 0601 	add.w	r6, r8, #1
 801750e:	714e      	strb	r6, [r1, #5]
 8017510:	9905      	ldr	r1, [sp, #20]
 8017512:	3101      	adds	r1, #1
 8017514:	b289      	uxth	r1, r1
 8017516:	9105      	str	r1, [sp, #20]
 8017518:	e7df      	b.n	80174da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801751a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801751e:	4611      	mov	r1, r2
 8017520:	795b      	ldrb	r3, [r3, #5]
 8017522:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8017526:	4426      	add	r6, r4
 8017528:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801752a:	4437      	add	r7, r6
 801752c:	2f00      	cmp	r7, #0
 801752e:	dd06      	ble.n	801753e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8017530:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017534:	790f      	ldrb	r7, [r1, #4]
 8017536:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801753a:	88c9      	ldrh	r1, [r1, #6]
 801753c:	e7f4      	b.n	8017528 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801753e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8017542:	b29b      	uxth	r3, r3
 8017544:	e7c5      	b.n	80174d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8017546:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017548:	920c      	str	r2, [sp, #48]	@ 0x30
 801754a:	4601      	mov	r1, r0
 801754c:	9a00      	ldr	r2, [sp, #0]
 801754e:	469c      	mov	ip, r3
 8017550:	e78e      	b.n	8017470 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8017552:	1957      	adds	r7, r2, r5
 8017554:	ebac 0305 	sub.w	r3, ip, r5
 8017558:	b2ba      	uxth	r2, r7
 801755a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801755e:	9200      	str	r2, [sp, #0]
 8017560:	b29b      	uxth	r3, r3
 8017562:	2500      	movs	r5, #0
 8017564:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017566:	455a      	cmp	r2, fp
 8017568:	d88e      	bhi.n	8017488 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801756a:	4601      	mov	r1, r0
 801756c:	e749      	b.n	8017402 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801756e:	458c      	cmp	ip, r1
 8017570:	bf2c      	ite	cs
 8017572:	4628      	movcs	r0, r5
 8017574:	462b      	movcc	r3, r5
 8017576:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8017578:	bf27      	ittee	cs
 801757a:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801757c:	ebac 0301 	subcs.w	r3, ip, r1
 8017580:	eba1 000c 	subcc.w	r0, r1, ip
 8017584:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8017588:	bf2c      	ite	cs
 801758a:	b29b      	uxthcs	r3, r3
 801758c:	b280      	uxthcc	r0, r0
 801758e:	2dff      	cmp	r5, #255	@ 0xff
 8017590:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8017592:	eb02 0705 	add.w	r7, r2, r5
 8017596:	b2bd      	uxth	r5, r7
 8017598:	9500      	str	r5, [sp, #0]
 801759a:	d12f      	bne.n	80175fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801759c:	465e      	mov	r6, fp
 801759e:	9d00      	ldr	r5, [sp, #0]
 80175a0:	42aa      	cmp	r2, r5
 80175a2:	f040 8084 	bne.w	80176ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 80175a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80175a8:	458c      	cmp	ip, r1
 80175aa:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80175ae:	d3d8      	bcc.n	8017562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 80175b0:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80175b2:	9904      	ldr	r1, [sp, #16]
 80175b4:	8812      	ldrh	r2, [r2, #0]
 80175b6:	1a52      	subs	r2, r2, r1
 80175b8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80175bc:	9a08      	ldr	r2, [sp, #32]
 80175be:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80175c0:	3201      	adds	r2, #1
 80175c2:	428a      	cmp	r2, r1
 80175c4:	9208      	str	r2, [sp, #32]
 80175c6:	f040 8092 	bne.w	80176ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 80175ca:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80175ce:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 80175d2:	9b04      	ldr	r3, [sp, #16]
 80175d4:	eba5 050c 	sub.w	r5, r5, ip
 80175d8:	b2ad      	uxth	r5, r5
 80175da:	2d00      	cmp	r5, #0
 80175dc:	bf08      	it	eq
 80175de:	4619      	moveq	r1, r3
 80175e0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80175e2:	bf18      	it	ne
 80175e4:	2100      	movne	r1, #0
 80175e6:	3301      	adds	r3, #1
 80175e8:	930d      	str	r3, [sp, #52]	@ 0x34
 80175ea:	b289      	uxth	r1, r1
 80175ec:	e700      	b.n	80173f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80175ee:	bf00      	nop
 80175f0:	20013ffc 	.word	0x20013ffc
 80175f4:	20013ff4 	.word	0x20013ff4
 80175f8:	fffff7fb 	.word	0xfffff7fb
 80175fc:	46d9      	mov	r9, fp
 80175fe:	9d00      	ldr	r5, [sp, #0]
 8017600:	42aa      	cmp	r2, r5
 8017602:	d0d0      	beq.n	80175a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8017604:	1c55      	adds	r5, r2, #1
 8017606:	4422      	add	r2, r4
 8017608:	9517      	str	r5, [sp, #92]	@ 0x5c
 801760a:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801760e:	9a06      	ldr	r2, [sp, #24]
 8017610:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017614:	4472      	add	r2, lr
 8017616:	9212      	str	r2, [sp, #72]	@ 0x48
 8017618:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801761a:	f8b9 2000 	ldrh.w	r2, [r9]
 801761e:	f897 a002 	ldrb.w	sl, [r7, #2]
 8017622:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017624:	1216      	asrs	r6, r2, #8
 8017626:	fb1a fa07 	smulbb	sl, sl, r7
 801762a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801762e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017630:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017634:	fb06 a607 	mla	r6, r6, r7, sl
 8017638:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801763a:	f897 a001 	ldrb.w	sl, [r7, #1]
 801763e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017640:	10d5      	asrs	r5, r2, #3
 8017642:	fb1a fa07 	smulbb	sl, sl, r7
 8017646:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801764a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801764c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017650:	fb05 a507 	mla	r5, r5, r7, sl
 8017654:	9f06      	ldr	r7, [sp, #24]
 8017656:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801765a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801765c:	00d2      	lsls	r2, r2, #3
 801765e:	fb1e fe07 	smulbb	lr, lr, r7
 8017662:	b2d2      	uxtb	r2, r2
 8017664:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017666:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801766a:	b2b6      	uxth	r6, r6
 801766c:	fb02 e207 	mla	r2, r2, r7, lr
 8017670:	b292      	uxth	r2, r2
 8017672:	b2ad      	uxth	r5, r5
 8017674:	f106 0a01 	add.w	sl, r6, #1
 8017678:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801767c:	f102 0e01 	add.w	lr, r2, #1
 8017680:	f105 0a01 	add.w	sl, r5, #1
 8017684:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8017688:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801768c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017690:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017694:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017698:	ea4e 0606 	orr.w	r6, lr, r6
 801769c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80176a0:	ea46 060a 	orr.w	r6, r6, sl
 80176a4:	f829 6b02 	strh.w	r6, [r9], #2
 80176a8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80176ac:	e7a7      	b.n	80175fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 80176ae:	f102 0e01 	add.w	lr, r2, #1
 80176b2:	4422      	add	r2, r4
 80176b4:	9f06      	ldr	r7, [sp, #24]
 80176b6:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 80176ba:	9a06      	ldr	r2, [sp, #24]
 80176bc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80176c0:	eb02 0a05 	add.w	sl, r2, r5
 80176c4:	4a13      	ldr	r2, [pc, #76]	@ (8017714 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 80176c6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80176ca:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80176ce:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80176d2:	00d2      	lsls	r2, r2, #3
 80176d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80176d8:	ea49 0202 	orr.w	r2, r9, r2
 80176dc:	f817 9005 	ldrb.w	r9, [r7, r5]
 80176e0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80176e4:	f826 2b02 	strh.w	r2, [r6], #2
 80176e8:	fa1f f28e 	uxth.w	r2, lr
 80176ec:	e757      	b.n	801759e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80176ee:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80176f2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80176f6:	1a2d      	subs	r5, r5, r0
 80176f8:	b2ad      	uxth	r5, r5
 80176fa:	2d00      	cmp	r5, #0
 80176fc:	bf18      	it	ne
 80176fe:	2000      	movne	r0, #0
 8017700:	e730      	b.n	8017564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8017702:	4b05      	ldr	r3, [pc, #20]	@ (8017718 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8017704:	6818      	ldr	r0, [r3, #0]
 8017706:	6803      	ldr	r3, [r0, #0]
 8017708:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801770a:	4798      	blx	r3
 801770c:	b01f      	add	sp, #124	@ 0x7c
 801770e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017712:	bf00      	nop
 8017714:	fffff800 	.word	0xfffff800
 8017718:	20013ffc 	.word	0x20013ffc

0801771c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801771c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017720:	b091      	sub	sp, #68	@ 0x44
 8017722:	469b      	mov	fp, r3
 8017724:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8017728:	4616      	mov	r6, r2
 801772a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801772e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017732:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8017736:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801773a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801773e:	4604      	mov	r4, r0
 8017740:	460d      	mov	r5, r1
 8017742:	4640      	mov	r0, r8
 8017744:	4659      	mov	r1, fp
 8017746:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801774a:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801774e:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8017752:	f7f2 fdeb 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 8017756:	4631      	mov	r1, r6
 8017758:	4640      	mov	r0, r8
 801775a:	f7f2 fde7 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 801775e:	4b74      	ldr	r3, [pc, #464]	@ (8017930 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017760:	8818      	ldrh	r0, [r3, #0]
 8017762:	4b74      	ldr	r3, [pc, #464]	@ (8017934 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017764:	8819      	ldrh	r1, [r3, #0]
 8017766:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801776a:	2b00      	cmp	r3, #0
 801776c:	b202      	sxth	r2, r0
 801776e:	b20e      	sxth	r6, r1
 8017770:	da07      	bge.n	8017782 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017772:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8017776:	4463      	add	r3, ip
 8017778:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801777c:	2300      	movs	r3, #0
 801777e:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8017782:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8017786:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801778a:	1ad2      	subs	r2, r2, r3
 801778c:	4594      	cmp	ip, r2
 801778e:	bfc4      	itt	gt
 8017790:	1ac2      	subgt	r2, r0, r3
 8017792:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8017796:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801779a:	2a00      	cmp	r2, #0
 801779c:	da07      	bge.n	80177ae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801779e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80177a2:	4462      	add	r2, ip
 80177a4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80177a8:	2200      	movs	r2, #0
 80177aa:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80177ae:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80177b2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80177b6:	eba6 060a 	sub.w	r6, r6, sl
 80177ba:	42b2      	cmp	r2, r6
 80177bc:	bfc4      	itt	gt
 80177be:	eba1 020a 	subgt.w	r2, r1, sl
 80177c2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 80177c6:	4a5c      	ldr	r2, [pc, #368]	@ (8017938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80177c8:	7812      	ldrb	r2, [r2, #0]
 80177ca:	b9a2      	cbnz	r2, 80177f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80177cc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80177d0:	4286      	cmp	r6, r0
 80177d2:	4640      	mov	r0, r8
 80177d4:	9303      	str	r3, [sp, #12]
 80177d6:	bf14      	ite	ne
 80177d8:	2600      	movne	r6, #0
 80177da:	2601      	moveq	r6, #1
 80177dc:	f7f2 fde9 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80177e0:	9b03      	ldr	r3, [sp, #12]
 80177e2:	b160      	cbz	r0, 80177fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80177e4:	2300      	movs	r3, #0
 80177e6:	8023      	strh	r3, [r4, #0]
 80177e8:	8063      	strh	r3, [r4, #2]
 80177ea:	80a3      	strh	r3, [r4, #4]
 80177ec:	4620      	mov	r0, r4
 80177ee:	80e3      	strh	r3, [r4, #6]
 80177f0:	b011      	add	sp, #68	@ 0x44
 80177f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177f6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80177fa:	428e      	cmp	r6, r1
 80177fc:	e7e9      	b.n	80177d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80177fe:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8017802:	9205      	str	r2, [sp, #20]
 8017804:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017808:	9206      	str	r2, [sp, #24]
 801780a:	f8bb 2000 	ldrh.w	r2, [fp]
 801780e:	900e      	str	r0, [sp, #56]	@ 0x38
 8017810:	1a9b      	subs	r3, r3, r2
 8017812:	b21b      	sxth	r3, r3
 8017814:	9303      	str	r3, [sp, #12]
 8017816:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801781a:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801781e:	ebaa 0a03 	sub.w	sl, sl, r3
 8017822:	fa0f f38a 	sxth.w	r3, sl
 8017826:	9304      	str	r3, [sp, #16]
 8017828:	9b03      	ldr	r3, [sp, #12]
 801782a:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801782e:	9b04      	ldr	r3, [sp, #16]
 8017830:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017834:	9b05      	ldr	r3, [sp, #20]
 8017836:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801783a:	a90e      	add	r1, sp, #56	@ 0x38
 801783c:	9b06      	ldr	r3, [sp, #24]
 801783e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8017842:	a80c      	add	r0, sp, #48	@ 0x30
 8017844:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8017848:	f7f7 fd06 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801784c:	4640      	mov	r0, r8
 801784e:	f7f7 fcdb 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017852:	a80e      	add	r0, sp, #56	@ 0x38
 8017854:	f7f7 fcd8 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017858:	4b38      	ldr	r3, [pc, #224]	@ (801793c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801785a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801785e:	881b      	ldrh	r3, [r3, #0]
 8017860:	9307      	str	r3, [sp, #28]
 8017862:	682b      	ldr	r3, [r5, #0]
 8017864:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8017940 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017868:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801786a:	4628      	mov	r0, r5
 801786c:	4798      	blx	r3
 801786e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8017872:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8017876:	4681      	mov	r9, r0
 8017878:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801787c:	f8db 0000 	ldr.w	r0, [fp]
 8017880:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8017882:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017886:	6803      	ldr	r3, [r0, #0]
 8017888:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801788a:	4798      	blx	r3
 801788c:	4607      	mov	r7, r0
 801788e:	f8db 0000 	ldr.w	r0, [fp]
 8017892:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8017896:	6803      	ldr	r3, [r0, #0]
 8017898:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801789c:	9109      	str	r1, [sp, #36]	@ 0x24
 801789e:	9208      	str	r2, [sp, #32]
 80178a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80178a2:	4798      	blx	r3
 80178a4:	f010 0f01 	tst.w	r0, #1
 80178a8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80178ac:	d012      	beq.n	80178d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80178ae:	f8db 0000 	ldr.w	r0, [fp]
 80178b2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80178b6:	6803      	ldr	r3, [r0, #0]
 80178b8:	9200      	str	r2, [sp, #0]
 80178ba:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 80178bc:	e898 0006 	ldmia.w	r8, {r1, r2}
 80178c0:	462b      	mov	r3, r5
 80178c2:	47b0      	blx	r6
 80178c4:	9b03      	ldr	r3, [sp, #12]
 80178c6:	8023      	strh	r3, [r4, #0]
 80178c8:	9b04      	ldr	r3, [sp, #16]
 80178ca:	8063      	strh	r3, [r4, #2]
 80178cc:	9b05      	ldr	r3, [sp, #20]
 80178ce:	80a3      	strh	r3, [r4, #4]
 80178d0:	9b06      	ldr	r3, [sp, #24]
 80178d2:	e78b      	b.n	80177ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80178d4:	fb09 f202 	mul.w	r2, r9, r2
 80178d8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80178dc:	440f      	add	r7, r1
 80178de:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80178e2:	b166      	cbz	r6, 80178fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80178e4:	9a07      	ldr	r2, [sp, #28]
 80178e6:	4592      	cmp	sl, r2
 80178e8:	d109      	bne.n	80178fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80178ea:	f8db 0000 	ldr.w	r0, [fp]
 80178ee:	6802      	ldr	r2, [r0, #0]
 80178f0:	fb09 f303 	mul.w	r3, r9, r3
 80178f4:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 80178f6:	4629      	mov	r1, r5
 80178f8:	463a      	mov	r2, r7
 80178fa:	47b0      	blx	r6
 80178fc:	e7e2      	b.n	80178c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80178fe:	fb0a f303 	mul.w	r3, sl, r3
 8017902:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8017940 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017906:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801790a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801790e:	4545      	cmp	r5, r8
 8017910:	d2d8      	bcs.n	80178c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017912:	f8db 0000 	ldr.w	r0, [fp]
 8017916:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801791a:	6802      	ldr	r2, [r0, #0]
 801791c:	4629      	mov	r1, r5
 801791e:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 8017922:	005b      	lsls	r3, r3, #1
 8017924:	463a      	mov	r2, r7
 8017926:	47d0      	blx	sl
 8017928:	444f      	add	r7, r9
 801792a:	4435      	add	r5, r6
 801792c:	e7ef      	b.n	801790e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801792e:	bf00      	nop
 8017930:	20013fee 	.word	0x20013fee
 8017934:	20013ff0 	.word	0x20013ff0
 8017938:	20013ff2 	.word	0x20013ff2
 801793c:	20013ff4 	.word	0x20013ff4
 8017940:	20013ffc 	.word	0x20013ffc

08017944 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017944:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017946:	4606      	mov	r6, r0
 8017948:	b087      	sub	sp, #28
 801794a:	460c      	mov	r4, r1
 801794c:	4617      	mov	r7, r2
 801794e:	461d      	mov	r5, r3
 8017950:	b333      	cbz	r3, 80179a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017952:	4608      	mov	r0, r1
 8017954:	f7f2 fd2d 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017958:	bb10      	cbnz	r0, 80179a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801795a:	6820      	ldr	r0, [r4, #0]
 801795c:	6861      	ldr	r1, [r4, #4]
 801795e:	4c1c      	ldr	r4, [pc, #112]	@ (80179d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017960:	ab04      	add	r3, sp, #16
 8017962:	c303      	stmia	r3!, {r0, r1}
 8017964:	a804      	add	r0, sp, #16
 8017966:	f7f7 fc4f 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801796a:	6820      	ldr	r0, [r4, #0]
 801796c:	6803      	ldr	r3, [r0, #0]
 801796e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017970:	4798      	blx	r3
 8017972:	2dff      	cmp	r5, #255	@ 0xff
 8017974:	d016      	beq.n	80179a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8017976:	f010 0f08 	tst.w	r0, #8
 801797a:	6820      	ldr	r0, [r4, #0]
 801797c:	d015      	beq.n	80179aa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801797e:	2400      	movs	r4, #0
 8017980:	6801      	ldr	r1, [r0, #0]
 8017982:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017986:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801798a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801798e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017992:	9401      	str	r4, [sp, #4]
 8017994:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017998:	9400      	str	r4, [sp, #0]
 801799a:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 801799c:	4639      	mov	r1, r7
 801799e:	47a0      	blx	r4
 80179a0:	b007      	add	sp, #28
 80179a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80179a4:	f010 0f02 	tst.w	r0, #2
 80179a8:	e7e7      	b.n	801797a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80179aa:	6803      	ldr	r3, [r0, #0]
 80179ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80179ae:	4798      	blx	r3
 80179b0:	4b08      	ldr	r3, [pc, #32]	@ (80179d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80179b2:	881a      	ldrh	r2, [r3, #0]
 80179b4:	6833      	ldr	r3, [r6, #0]
 80179b6:	e9cd 7500 	strd	r7, r5, [sp]
 80179ba:	4601      	mov	r1, r0
 80179bc:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80179be:	4630      	mov	r0, r6
 80179c0:	ab04      	add	r3, sp, #16
 80179c2:	47a8      	blx	r5
 80179c4:	6820      	ldr	r0, [r4, #0]
 80179c6:	6803      	ldr	r3, [r0, #0]
 80179c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80179ca:	4798      	blx	r3
 80179cc:	e7e8      	b.n	80179a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80179ce:	bf00      	nop
 80179d0:	20013ffc 	.word	0x20013ffc
 80179d4:	20013ff4 	.word	0x20013ff4

080179d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80179d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80179dc:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80179e0:	9e08      	ldr	r6, [sp, #32]
 80179e2:	4688      	mov	r8, r1
 80179e4:	4614      	mov	r4, r2
 80179e6:	461d      	mov	r5, r3
 80179e8:	2f00      	cmp	r7, #0
 80179ea:	f000 80a9 	beq.w	8017b40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80179ee:	4618      	mov	r0, r3
 80179f0:	f7f2 fcdf 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80179f4:	2800      	cmp	r0, #0
 80179f6:	f040 80a3 	bne.w	8017b40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80179fa:	f9b5 1000 	ldrsh.w	r1, [r5]
 80179fe:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017a02:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017a06:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8017a0a:	fb04 1303 	mla	r3, r4, r3, r1
 8017a0e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017a12:	4365      	muls	r5, r4
 8017a14:	2fff      	cmp	r7, #255	@ 0xff
 8017a16:	eba4 0200 	sub.w	r2, r4, r0
 8017a1a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017a1e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017a22:	d04a      	beq.n	8017aba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017a24:	b2bc      	uxth	r4, r7
 8017a26:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8017a2a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017a2e:	fa5f f788 	uxtb.w	r7, r8
 8017a32:	b2f3      	uxtb	r3, r6
 8017a34:	0040      	lsls	r0, r0, #1
 8017a36:	fb0e fe04 	mul.w	lr, lr, r4
 8017a3a:	4367      	muls	r7, r4
 8017a3c:	4363      	muls	r3, r4
 8017a3e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017a42:	fa1f fc8c 	uxth.w	ip, ip
 8017a46:	42a9      	cmp	r1, r5
 8017a48:	d27a      	bcs.n	8017b40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017a4a:	eb01 0900 	add.w	r9, r1, r0
 8017a4e:	4549      	cmp	r1, r9
 8017a50:	d231      	bcs.n	8017ab6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017a52:	880a      	ldrh	r2, [r1, #0]
 8017a54:	1214      	asrs	r4, r2, #8
 8017a56:	10d6      	asrs	r6, r2, #3
 8017a58:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8017a5c:	00d2      	lsls	r2, r2, #3
 8017a5e:	b2d2      	uxtb	r2, r2
 8017a60:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017a64:	fb14 f40c 	smulbb	r4, r4, ip
 8017a68:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017a6c:	4474      	add	r4, lr
 8017a6e:	fb12 f20c 	smulbb	r2, r2, ip
 8017a72:	b2a4      	uxth	r4, r4
 8017a74:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017a78:	441a      	add	r2, r3
 8017a7a:	b292      	uxth	r2, r2
 8017a7c:	f104 0a01 	add.w	sl, r4, #1
 8017a80:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017a84:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017a88:	fb16 f60c 	smulbb	r6, r6, ip
 8017a8c:	f102 0a01 	add.w	sl, r2, #1
 8017a90:	443e      	add	r6, r7
 8017a92:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017a96:	b2b6      	uxth	r6, r6
 8017a98:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8017a9c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017aa0:	4322      	orrs	r2, r4
 8017aa2:	1c74      	adds	r4, r6, #1
 8017aa4:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017aa8:	0976      	lsrs	r6, r6, #5
 8017aaa:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017aae:	4332      	orrs	r2, r6
 8017ab0:	f821 2b02 	strh.w	r2, [r1], #2
 8017ab4:	e7cb      	b.n	8017a4e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017ab6:	4441      	add	r1, r8
 8017ab8:	e7c5      	b.n	8017a46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8017aba:	4f22      	ldr	r7, [pc, #136]	@ (8017b44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017abc:	0973      	lsrs	r3, r6, #5
 8017abe:	ea08 0707 	and.w	r7, r8, r7
 8017ac2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017ac6:	433b      	orrs	r3, r7
 8017ac8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017acc:	4333      	orrs	r3, r6
 8017ace:	07e7      	lsls	r7, r4, #31
 8017ad0:	b29b      	uxth	r3, r3
 8017ad2:	d50b      	bpl.n	8017aec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017ad4:	0040      	lsls	r0, r0, #1
 8017ad6:	0052      	lsls	r2, r2, #1
 8017ad8:	42a9      	cmp	r1, r5
 8017ada:	d231      	bcs.n	8017b40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017adc:	180c      	adds	r4, r1, r0
 8017ade:	42a1      	cmp	r1, r4
 8017ae0:	d202      	bcs.n	8017ae8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017ae2:	f821 3b02 	strh.w	r3, [r1], #2
 8017ae6:	e7fa      	b.n	8017ade <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017ae8:	4411      	add	r1, r2
 8017aea:	e7f5      	b.n	8017ad8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017aec:	078e      	lsls	r6, r1, #30
 8017aee:	d008      	beq.n	8017b02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017af0:	0066      	lsls	r6, r4, #1
 8017af2:	460a      	mov	r2, r1
 8017af4:	42aa      	cmp	r2, r5
 8017af6:	d202      	bcs.n	8017afe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017af8:	8013      	strh	r3, [r2, #0]
 8017afa:	4432      	add	r2, r6
 8017afc:	e7fa      	b.n	8017af4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017afe:	3102      	adds	r1, #2
 8017b00:	3801      	subs	r0, #1
 8017b02:	07c2      	lsls	r2, r0, #31
 8017b04:	d50b      	bpl.n	8017b1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017b06:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8017b0a:	3a01      	subs	r2, #1
 8017b0c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017b10:	0066      	lsls	r6, r4, #1
 8017b12:	42aa      	cmp	r2, r5
 8017b14:	d202      	bcs.n	8017b1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017b16:	8013      	strh	r3, [r2, #0]
 8017b18:	4432      	add	r2, r6
 8017b1a:	e7fa      	b.n	8017b12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017b1c:	3801      	subs	r0, #1
 8017b1e:	b178      	cbz	r0, 8017b40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b20:	1040      	asrs	r0, r0, #1
 8017b22:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017b26:	0080      	lsls	r0, r0, #2
 8017b28:	0064      	lsls	r4, r4, #1
 8017b2a:	42a9      	cmp	r1, r5
 8017b2c:	d208      	bcs.n	8017b40 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b2e:	180e      	adds	r6, r1, r0
 8017b30:	460a      	mov	r2, r1
 8017b32:	42b2      	cmp	r2, r6
 8017b34:	d202      	bcs.n	8017b3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017b36:	f842 3b04 	str.w	r3, [r2], #4
 8017b3a:	e7fa      	b.n	8017b32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8017b3c:	4421      	add	r1, r4
 8017b3e:	e7f4      	b.n	8017b2a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017b40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017b44:	00fff800 	.word	0x00fff800

08017b48 <_ZN8touchgfx8LCD16bppC1Ev>:
 8017b48:	2200      	movs	r2, #0
 8017b4a:	4912      	ldr	r1, [pc, #72]	@ (8017b94 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8017b4c:	6001      	str	r1, [r0, #0]
 8017b4e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8017b52:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8017b56:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017b5a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8017b5e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8017b62:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8017b66:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8017b6a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8017b6e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8017b72:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8017b76:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8017b7a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8017b7e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8017b82:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8017b86:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8017b8a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8017b8e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8017b92:	4770      	bx	lr
 8017b94:	080255f0 	.word	0x080255f0

08017b98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b9c:	460d      	mov	r5, r1
 8017b9e:	b08d      	sub	sp, #52	@ 0x34
 8017ba0:	4604      	mov	r4, r0
 8017ba2:	6808      	ldr	r0, [r1, #0]
 8017ba4:	6849      	ldr	r1, [r1, #4]
 8017ba6:	4699      	mov	r9, r3
 8017ba8:	ab08      	add	r3, sp, #32
 8017baa:	c303      	stmia	r3!, {r0, r1}
 8017bac:	6810      	ldr	r0, [r2, #0]
 8017bae:	6851      	ldr	r1, [r2, #4]
 8017bb0:	ab0a      	add	r3, sp, #40	@ 0x28
 8017bb2:	c303      	stmia	r3!, {r0, r1}
 8017bb4:	a808      	add	r0, sp, #32
 8017bb6:	f7f7 fb27 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017bba:	4629      	mov	r1, r5
 8017bbc:	a80a      	add	r0, sp, #40	@ 0x28
 8017bbe:	f7f7 fb4b 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017bc2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8017bc6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8017bca:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8017bce:	4d63      	ldr	r5, [pc, #396]	@ (8017d5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017bd0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8017bd4:	6828      	ldr	r0, [r5, #0]
 8017bd6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8017bda:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017bde:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017be2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017be6:	440a      	add	r2, r1
 8017be8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017bec:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8017bf0:	4413      	add	r3, r2
 8017bf2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017bf6:	6803      	ldr	r3, [r0, #0]
 8017bf8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017bfa:	4798      	blx	r3
 8017bfc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017c00:	d119      	bne.n	8017c36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017c02:	f010 0f20 	tst.w	r0, #32
 8017c06:	6828      	ldr	r0, [r5, #0]
 8017c08:	d018      	beq.n	8017c3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017c0a:	2500      	movs	r5, #0
 8017c0c:	6801      	ldr	r1, [r0, #0]
 8017c0e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017c12:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017c16:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017c1a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8017c1e:	9502      	str	r5, [sp, #8]
 8017c20:	b2b6      	uxth	r6, r6
 8017c22:	fa1f f588 	uxth.w	r5, r8
 8017c26:	9601      	str	r6, [sp, #4]
 8017c28:	9500      	str	r5, [sp, #0]
 8017c2a:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8017c2c:	4621      	mov	r1, r4
 8017c2e:	47a8      	blx	r5
 8017c30:	b00d      	add	sp, #52	@ 0x34
 8017c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c36:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8017c3a:	e7e4      	b.n	8017c06 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017c3c:	6803      	ldr	r3, [r0, #0]
 8017c3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017c40:	4798      	blx	r3
 8017c42:	4947      	ldr	r1, [pc, #284]	@ (8017d60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017c44:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017c48:	880b      	ldrh	r3, [r1, #0]
 8017c4a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8017c4e:	fb03 5202 	mla	r2, r3, r2, r5
 8017c52:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017c56:	4373      	muls	r3, r6
 8017c58:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017c5c:	9307      	str	r3, [sp, #28]
 8017c5e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017c62:	9306      	str	r3, [sp, #24]
 8017c64:	468a      	mov	sl, r1
 8017c66:	9b07      	ldr	r3, [sp, #28]
 8017c68:	4298      	cmp	r0, r3
 8017c6a:	d270      	bcs.n	8017d4e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017c6c:	9b06      	ldr	r3, [sp, #24]
 8017c6e:	4621      	mov	r1, r4
 8017c70:	eb00 0b03 	add.w	fp, r0, r3
 8017c74:	4558      	cmp	r0, fp
 8017c76:	d25d      	bcs.n	8017d34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017c78:	f851 4b04 	ldr.w	r4, [r1], #4
 8017c7c:	0e23      	lsrs	r3, r4, #24
 8017c7e:	d014      	beq.n	8017caa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017c80:	2bff      	cmp	r3, #255	@ 0xff
 8017c82:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017c86:	d112      	bne.n	8017cae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017c88:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017c8c:	d10f      	bne.n	8017cae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017c8e:	0963      	lsrs	r3, r4, #5
 8017c90:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8017c94:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017c98:	f02c 0c07 	bic.w	ip, ip, #7
 8017c9c:	ea43 0c0c 	orr.w	ip, r3, ip
 8017ca0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017ca4:	ea4c 0404 	orr.w	r4, ip, r4
 8017ca8:	8004      	strh	r4, [r0, #0]
 8017caa:	3002      	adds	r0, #2
 8017cac:	e7e2      	b.n	8017c74 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017cae:	fb09 f303 	mul.w	r3, r9, r3
 8017cb2:	8807      	ldrh	r7, [r0, #0]
 8017cb4:	1c5a      	adds	r2, r3, #1
 8017cb6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017cba:	1212      	asrs	r2, r2, #8
 8017cbc:	123e      	asrs	r6, r7, #8
 8017cbe:	b293      	uxth	r3, r2
 8017cc0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017cc4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017cc8:	43d2      	mvns	r2, r2
 8017cca:	b2d2      	uxtb	r2, r2
 8017ccc:	10fd      	asrs	r5, r7, #3
 8017cce:	fb1e fe03 	smulbb	lr, lr, r3
 8017cd2:	00ff      	lsls	r7, r7, #3
 8017cd4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017cd8:	fb06 e602 	mla	r6, r6, r2, lr
 8017cdc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017ce0:	b2ff      	uxtb	r7, r7
 8017ce2:	fa5f fc8c 	uxtb.w	ip, ip
 8017ce6:	b2e4      	uxtb	r4, r4
 8017ce8:	b2b6      	uxth	r6, r6
 8017cea:	fb1c fc03 	smulbb	ip, ip, r3
 8017cee:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017cf2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017cf6:	fb14 f403 	smulbb	r4, r4, r3
 8017cfa:	fb05 c502 	mla	r5, r5, r2, ip
 8017cfe:	f106 0e01 	add.w	lr, r6, #1
 8017d02:	fb07 4702 	mla	r7, r7, r2, r4
 8017d06:	b2ad      	uxth	r5, r5
 8017d08:	b2bf      	uxth	r7, r7
 8017d0a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017d0e:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8017d12:	f105 0c01 	add.w	ip, r5, #1
 8017d16:	1c7e      	adds	r6, r7, #1
 8017d18:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017d1c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017d20:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017d24:	096d      	lsrs	r5, r5, #5
 8017d26:	ea46 060e 	orr.w	r6, r6, lr
 8017d2a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017d2e:	432e      	orrs	r6, r5
 8017d30:	8006      	strh	r6, [r0, #0]
 8017d32:	e7ba      	b.n	8017caa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017d34:	f8ba 3000 	ldrh.w	r3, [sl]
 8017d38:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8017d3c:	eba3 0308 	sub.w	r3, r3, r8
 8017d40:	eba4 0408 	sub.w	r4, r4, r8
 8017d44:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017d48:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017d4c:	e78b      	b.n	8017c66 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017d4e:	4b03      	ldr	r3, [pc, #12]	@ (8017d5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017d50:	6818      	ldr	r0, [r3, #0]
 8017d52:	6803      	ldr	r3, [r0, #0]
 8017d54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017d56:	4798      	blx	r3
 8017d58:	e76a      	b.n	8017c30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017d5a:	bf00      	nop
 8017d5c:	20013ffc 	.word	0x20013ffc
 8017d60:	20013ff4 	.word	0x20013ff4

08017d64 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017d64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017d68:	460c      	mov	r4, r1
 8017d6a:	b085      	sub	sp, #20
 8017d6c:	6810      	ldr	r0, [r2, #0]
 8017d6e:	6851      	ldr	r1, [r2, #4]
 8017d70:	466d      	mov	r5, sp
 8017d72:	c503      	stmia	r5!, {r0, r1}
 8017d74:	6818      	ldr	r0, [r3, #0]
 8017d76:	6859      	ldr	r1, [r3, #4]
 8017d78:	4616      	mov	r6, r2
 8017d7a:	c503      	stmia	r5!, {r0, r1}
 8017d7c:	4668      	mov	r0, sp
 8017d7e:	f7f7 fa43 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d82:	4631      	mov	r1, r6
 8017d84:	a802      	add	r0, sp, #8
 8017d86:	f7f7 fa67 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d8a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017d8e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017d92:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017d96:	4d28      	ldr	r5, [pc, #160]	@ (8017e38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017d98:	4e28      	ldr	r6, [pc, #160]	@ (8017e3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017d9a:	6828      	ldr	r0, [r5, #0]
 8017d9c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017da0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017da4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017da8:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017dac:	f8bd 1000 	ldrh.w	r1, [sp]
 8017db0:	440a      	add	r2, r1
 8017db2:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017db6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017dba:	4413      	add	r3, r2
 8017dbc:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017dc0:	6803      	ldr	r3, [r0, #0]
 8017dc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017dc4:	4798      	blx	r3
 8017dc6:	8833      	ldrh	r3, [r6, #0]
 8017dc8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017dcc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017dd0:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8017e40 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017dd4:	fb03 1202 	mla	r2, r3, r2, r1
 8017dd8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017ddc:	fb08 f303 	mul.w	r3, r8, r3
 8017de0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017de4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017de8:	4298      	cmp	r0, r3
 8017dea:	d21d      	bcs.n	8017e28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017dec:	eb00 080c 	add.w	r8, r0, ip
 8017df0:	4540      	cmp	r0, r8
 8017df2:	d20f      	bcs.n	8017e14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017df4:	f854 1b04 	ldr.w	r1, [r4], #4
 8017df8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017dfc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017e00:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017e04:	ea42 0209 	orr.w	r2, r2, r9
 8017e08:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017e0c:	430a      	orrs	r2, r1
 8017e0e:	f820 2b02 	strh.w	r2, [r0], #2
 8017e12:	e7ed      	b.n	8017df0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017e14:	8832      	ldrh	r2, [r6, #0]
 8017e16:	1bd2      	subs	r2, r2, r7
 8017e18:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017e1c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017e20:	1bd2      	subs	r2, r2, r7
 8017e22:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017e26:	e7df      	b.n	8017de8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017e28:	6828      	ldr	r0, [r5, #0]
 8017e2a:	6803      	ldr	r3, [r0, #0]
 8017e2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017e2e:	4798      	blx	r3
 8017e30:	b005      	add	sp, #20
 8017e32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017e36:	bf00      	nop
 8017e38:	20013ffc 	.word	0x20013ffc
 8017e3c:	20013ff4 	.word	0x20013ff4
 8017e40:	fffff800 	.word	0xfffff800

08017e44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017e44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017e48:	460e      	mov	r6, r1
 8017e4a:	b08e      	sub	sp, #56	@ 0x38
 8017e4c:	4604      	mov	r4, r0
 8017e4e:	6808      	ldr	r0, [r1, #0]
 8017e50:	6849      	ldr	r1, [r1, #4]
 8017e52:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801802c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017e56:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8018030 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017e5a:	461d      	mov	r5, r3
 8017e5c:	ab0a      	add	r3, sp, #40	@ 0x28
 8017e5e:	c303      	stmia	r3!, {r0, r1}
 8017e60:	6810      	ldr	r0, [r2, #0]
 8017e62:	6851      	ldr	r1, [r2, #4]
 8017e64:	ab0c      	add	r3, sp, #48	@ 0x30
 8017e66:	c303      	stmia	r3!, {r0, r1}
 8017e68:	a80a      	add	r0, sp, #40	@ 0x28
 8017e6a:	f7f7 f9cd 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e6e:	4631      	mov	r1, r6
 8017e70:	a80c      	add	r0, sp, #48	@ 0x30
 8017e72:	f7f7 f9f1 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e76:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8017e7a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8017e7e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017e82:	f8d8 0000 	ldr.w	r0, [r8]
 8017e86:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8017e8a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8017e8e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017e92:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017e96:	440c      	add	r4, r1
 8017e98:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8017e9c:	440a      	add	r2, r1
 8017e9e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8017ea2:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8017ea6:	4413      	add	r3, r2
 8017ea8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017eac:	6803      	ldr	r3, [r0, #0]
 8017eae:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017eb0:	4798      	blx	r3
 8017eb2:	2dff      	cmp	r5, #255	@ 0xff
 8017eb4:	d124      	bne.n	8017f00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017eb6:	f010 0f01 	tst.w	r0, #1
 8017eba:	f8d8 0000 	ldr.w	r0, [r8]
 8017ebe:	d022      	beq.n	8017f06 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017ec0:	2100      	movs	r1, #0
 8017ec2:	f8d0 c000 	ldr.w	ip, [r0]
 8017ec6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8017eca:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8017ece:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017ed2:	f04f 0e01 	mov.w	lr, #1
 8017ed6:	f8cd e018 	str.w	lr, [sp, #24]
 8017eda:	f8b9 e000 	ldrh.w	lr, [r9]
 8017ede:	9503      	str	r5, [sp, #12]
 8017ee0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017ee4:	b2b6      	uxth	r6, r6
 8017ee6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017eea:	9102      	str	r1, [sp, #8]
 8017eec:	b2bf      	uxth	r7, r7
 8017eee:	9601      	str	r6, [sp, #4]
 8017ef0:	9700      	str	r7, [sp, #0]
 8017ef2:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 8017ef6:	4621      	mov	r1, r4
 8017ef8:	47a8      	blx	r5
 8017efa:	b00e      	add	sp, #56	@ 0x38
 8017efc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017f00:	f010 0f04 	tst.w	r0, #4
 8017f04:	e7d9      	b.n	8017eba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017f06:	6803      	ldr	r3, [r0, #0]
 8017f08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017f0a:	4798      	blx	r3
 8017f0c:	f8b9 3000 	ldrh.w	r3, [r9]
 8017f10:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017f14:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8017f18:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017f1c:	fb03 1202 	mla	r2, r3, r2, r1
 8017f20:	ebac 0c07 	sub.w	ip, ip, r7
 8017f24:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017f28:	435e      	muls	r6, r3
 8017f2a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017f2e:	2dff      	cmp	r5, #255	@ 0xff
 8017f30:	eba3 0707 	sub.w	r7, r3, r7
 8017f34:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017f38:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017f3c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017f40:	d049      	beq.n	8017fd6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017f42:	43eb      	mvns	r3, r5
 8017f44:	fa1f f985 	uxth.w	r9, r5
 8017f48:	b2db      	uxtb	r3, r3
 8017f4a:	42b0      	cmp	r0, r6
 8017f4c:	d266      	bcs.n	801801c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017f4e:	eb00 0a0e 	add.w	sl, r0, lr
 8017f52:	4550      	cmp	r0, sl
 8017f54:	4621      	mov	r1, r4
 8017f56:	f104 0403 	add.w	r4, r4, #3
 8017f5a:	d25b      	bcs.n	8018014 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017f5c:	8802      	ldrh	r2, [r0, #0]
 8017f5e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017f62:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017f66:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8017f6a:	fb11 f109 	smulbb	r1, r1, r9
 8017f6e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017f72:	10d5      	asrs	r5, r2, #3
 8017f74:	fb08 1803 	mla	r8, r8, r3, r1
 8017f78:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017f7c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017f80:	fb11 f109 	smulbb	r1, r1, r9
 8017f84:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017f88:	fb05 1503 	mla	r5, r5, r3, r1
 8017f8c:	00d2      	lsls	r2, r2, #3
 8017f8e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017f92:	b2d2      	uxtb	r2, r2
 8017f94:	fb11 f109 	smulbb	r1, r1, r9
 8017f98:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017f9c:	fa1f f888 	uxth.w	r8, r8
 8017fa0:	fb02 1203 	mla	r2, r2, r3, r1
 8017fa4:	b292      	uxth	r2, r2
 8017fa6:	f108 0101 	add.w	r1, r8, #1
 8017faa:	b2ad      	uxth	r5, r5
 8017fac:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017fb0:	1c51      	adds	r1, r2, #1
 8017fb2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017fb6:	1c69      	adds	r1, r5, #1
 8017fb8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017fbc:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8017fc0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017fc4:	096d      	lsrs	r5, r5, #5
 8017fc6:	ea42 0208 	orr.w	r2, r2, r8
 8017fca:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017fce:	432a      	orrs	r2, r5
 8017fd0:	f820 2b02 	strh.w	r2, [r0], #2
 8017fd4:	e7bd      	b.n	8017f52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017fd6:	4a14      	ldr	r2, [pc, #80]	@ (8018028 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017fd8:	42b0      	cmp	r0, r6
 8017fda:	d21f      	bcs.n	801801c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017fdc:	eb00 050e 	add.w	r5, r0, lr
 8017fe0:	42a8      	cmp	r0, r5
 8017fe2:	4621      	mov	r1, r4
 8017fe4:	f104 0403 	add.w	r4, r4, #3
 8017fe8:	d210      	bcs.n	801800c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017fea:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017fee:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017ff2:	00db      	lsls	r3, r3, #3
 8017ff4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017ff8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017ffc:	430b      	orrs	r3, r1
 8017ffe:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018002:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8018006:	f820 3b02 	strh.w	r3, [r0], #2
 801800a:	e7e9      	b.n	8017fe0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801800c:	4438      	add	r0, r7
 801800e:	eb01 040c 	add.w	r4, r1, ip
 8018012:	e7e1      	b.n	8017fd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8018014:	4438      	add	r0, r7
 8018016:	eb01 040c 	add.w	r4, r1, ip
 801801a:	e796      	b.n	8017f4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801801c:	4b03      	ldr	r3, [pc, #12]	@ (801802c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801801e:	6818      	ldr	r0, [r3, #0]
 8018020:	6803      	ldr	r3, [r0, #0]
 8018022:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018024:	4798      	blx	r3
 8018026:	e768      	b.n	8017efa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8018028:	fffff800 	.word	0xfffff800
 801802c:	20013ffc 	.word	0x20013ffc
 8018030:	20013ff4 	.word	0x20013ff4

08018034 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018034:	b4f0      	push	{r4, r5, r6, r7}
 8018036:	4616      	mov	r6, r2
 8018038:	2e01      	cmp	r6, #1
 801803a:	461c      	mov	r4, r3
 801803c:	460d      	mov	r5, r1
 801803e:	9a04      	ldr	r2, [sp, #16]
 8018040:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018044:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8018048:	d012      	beq.n	8018070 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801804a:	d303      	bcc.n	8018054 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801804c:	2e02      	cmp	r6, #2
 801804e:	d00a      	beq.n	8018066 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8018050:	bcf0      	pop	{r4, r5, r6, r7}
 8018052:	4770      	bx	lr
 8018054:	6805      	ldr	r5, [r0, #0]
 8018056:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801805a:	68ed      	ldr	r5, [r5, #12]
 801805c:	4613      	mov	r3, r2
 801805e:	46ac      	mov	ip, r5
 8018060:	4622      	mov	r2, r4
 8018062:	bcf0      	pop	{r4, r5, r6, r7}
 8018064:	4760      	bx	ip
 8018066:	4621      	mov	r1, r4
 8018068:	4628      	mov	r0, r5
 801806a:	bcf0      	pop	{r4, r5, r6, r7}
 801806c:	f7ff bd94 	b.w	8017b98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018070:	4621      	mov	r1, r4
 8018072:	4628      	mov	r0, r5
 8018074:	bcf0      	pop	{r4, r5, r6, r7}
 8018076:	f7ff bee5 	b.w	8017e44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801807c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801807c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018080:	4681      	mov	r9, r0
 8018082:	b093      	sub	sp, #76	@ 0x4c
 8018084:	6810      	ldr	r0, [r2, #0]
 8018086:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801808a:	4f6d      	ldr	r7, [pc, #436]	@ (8018240 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801808c:	4688      	mov	r8, r1
 801808e:	6851      	ldr	r1, [r2, #4]
 8018090:	ac0e      	add	r4, sp, #56	@ 0x38
 8018092:	c403      	stmia	r4!, {r0, r1}
 8018094:	6818      	ldr	r0, [r3, #0]
 8018096:	6859      	ldr	r1, [r3, #4]
 8018098:	ac10      	add	r4, sp, #64	@ 0x40
 801809a:	4616      	mov	r6, r2
 801809c:	c403      	stmia	r4!, {r0, r1}
 801809e:	a80e      	add	r0, sp, #56	@ 0x38
 80180a0:	f7f7 f8b2 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80180a4:	4631      	mov	r1, r6
 80180a6:	a810      	add	r0, sp, #64	@ 0x40
 80180a8:	f7f7 f8d6 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80180ac:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 80180b0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80180b4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 80180b8:	4e62      	ldr	r6, [pc, #392]	@ (8018244 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80180ba:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 80180be:	6830      	ldr	r0, [r6, #0]
 80180c0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80180c4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80180c8:	4489      	add	r9, r1
 80180ca:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 80180ce:	440a      	add	r2, r1
 80180d0:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 80180d4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80180d8:	4413      	add	r3, r2
 80180da:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80180de:	6803      	ldr	r3, [r0, #0]
 80180e0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80180e2:	4798      	blx	r3
 80180e4:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80180e8:	6830      	ldr	r0, [r6, #0]
 80180ea:	d01d      	beq.n	8018128 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80180ec:	2200      	movs	r2, #0
 80180ee:	6801      	ldr	r1, [r0, #0]
 80180f0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80180f4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80180f8:	220b      	movs	r2, #11
 80180fa:	9207      	str	r2, [sp, #28]
 80180fc:	883a      	ldrh	r2, [r7, #0]
 80180fe:	9206      	str	r2, [sp, #24]
 8018100:	2201      	movs	r2, #1
 8018102:	e9cd a204 	strd	sl, r2, [sp, #16]
 8018106:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801810a:	9203      	str	r2, [sp, #12]
 801810c:	b2a4      	uxth	r4, r4
 801810e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8018112:	9200      	str	r2, [sp, #0]
 8018114:	b2ad      	uxth	r5, r5
 8018116:	9502      	str	r5, [sp, #8]
 8018118:	9401      	str	r4, [sp, #4]
 801811a:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 801811c:	4642      	mov	r2, r8
 801811e:	4649      	mov	r1, r9
 8018120:	47a0      	blx	r4
 8018122:	b013      	add	sp, #76	@ 0x4c
 8018124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018128:	6803      	ldr	r3, [r0, #0]
 801812a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801812c:	4798      	blx	r3
 801812e:	883b      	ldrh	r3, [r7, #0]
 8018130:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018134:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8018138:	fb03 1202 	mla	r2, r3, r2, r1
 801813c:	435d      	muls	r5, r3
 801813e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018142:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8018146:	920c      	str	r2, [sp, #48]	@ 0x30
 8018148:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801814c:	1b12      	subs	r2, r2, r4
 801814e:	920d      	str	r2, [sp, #52]	@ 0x34
 8018150:	0062      	lsls	r2, r4, #1
 8018152:	1b1c      	subs	r4, r3, r4
 8018154:	0063      	lsls	r3, r4, #1
 8018156:	920a      	str	r2, [sp, #40]	@ 0x28
 8018158:	930b      	str	r3, [sp, #44]	@ 0x2c
 801815a:	f04f 0e04 	mov.w	lr, #4
 801815e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018160:	4298      	cmp	r0, r3
 8018162:	d266      	bcs.n	8018232 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8018164:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018166:	eb00 0b03 	add.w	fp, r0, r3
 801816a:	4558      	cmp	r0, fp
 801816c:	d25c      	bcs.n	8018228 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801816e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8018172:	fb1e e303 	smlabb	r3, lr, r3, lr
 8018176:	f858 2003 	ldr.w	r2, [r8, r3]
 801817a:	0e11      	lsrs	r1, r2, #24
 801817c:	d012      	beq.n	80181a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801817e:	29ff      	cmp	r1, #255	@ 0xff
 8018180:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8018184:	d110      	bne.n	80181a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018186:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801818a:	d10d      	bne.n	80181a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801818c:	0953      	lsrs	r3, r2, #5
 801818e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8018192:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018196:	f027 0707 	bic.w	r7, r7, #7
 801819a:	431f      	orrs	r7, r3
 801819c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80181a0:	433a      	orrs	r2, r7
 80181a2:	8002      	strh	r2, [r0, #0]
 80181a4:	3002      	adds	r0, #2
 80181a6:	e7e0      	b.n	801816a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80181a8:	fb0a f101 	mul.w	r1, sl, r1
 80181ac:	8806      	ldrh	r6, [r0, #0]
 80181ae:	1c4b      	adds	r3, r1, #1
 80181b0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80181b4:	1235      	asrs	r5, r6, #8
 80181b6:	10f4      	asrs	r4, r6, #3
 80181b8:	121b      	asrs	r3, r3, #8
 80181ba:	00f6      	lsls	r6, r6, #3
 80181bc:	b299      	uxth	r1, r3
 80181be:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80181c2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80181c6:	b2f6      	uxtb	r6, r6
 80181c8:	43db      	mvns	r3, r3
 80181ca:	b2d2      	uxtb	r2, r2
 80181cc:	b2db      	uxtb	r3, r3
 80181ce:	fb1c fc01 	smulbb	ip, ip, r1
 80181d2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80181d6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80181da:	fb12 f201 	smulbb	r2, r2, r1
 80181de:	fb05 c503 	mla	r5, r5, r3, ip
 80181e2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80181e6:	b2ff      	uxtb	r7, r7
 80181e8:	fb06 2203 	mla	r2, r6, r3, r2
 80181ec:	b2ad      	uxth	r5, r5
 80181ee:	fb17 f701 	smulbb	r7, r7, r1
 80181f2:	b292      	uxth	r2, r2
 80181f4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80181f8:	fb04 7403 	mla	r4, r4, r3, r7
 80181fc:	f105 0c01 	add.w	ip, r5, #1
 8018200:	1c57      	adds	r7, r2, #1
 8018202:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018206:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801820a:	b2a4      	uxth	r4, r4
 801820c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018210:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018214:	433d      	orrs	r5, r7
 8018216:	1c67      	adds	r7, r4, #1
 8018218:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801821c:	0964      	lsrs	r4, r4, #5
 801821e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8018222:	4325      	orrs	r5, r4
 8018224:	8005      	strh	r5, [r0, #0]
 8018226:	e7bd      	b.n	80181a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018228:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801822a:	4418      	add	r0, r3
 801822c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801822e:	4499      	add	r9, r3
 8018230:	e795      	b.n	801815e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8018232:	4b04      	ldr	r3, [pc, #16]	@ (8018244 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018234:	6818      	ldr	r0, [r3, #0]
 8018236:	6803      	ldr	r3, [r0, #0]
 8018238:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801823a:	4798      	blx	r3
 801823c:	e771      	b.n	8018122 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801823e:	bf00      	nop
 8018240:	20013ff4 	.word	0x20013ff4
 8018244:	20013ffc 	.word	0x20013ffc

08018248 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8018248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801824c:	b087      	sub	sp, #28
 801824e:	4680      	mov	r8, r0
 8018250:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8018254:	460d      	mov	r5, r1
 8018256:	4614      	mov	r4, r2
 8018258:	2e00      	cmp	r6, #0
 801825a:	f000 80b9 	beq.w	80183d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801825e:	6810      	ldr	r0, [r2, #0]
 8018260:	6851      	ldr	r1, [r2, #4]
 8018262:	af02      	add	r7, sp, #8
 8018264:	c703      	stmia	r7!, {r0, r1}
 8018266:	6818      	ldr	r0, [r3, #0]
 8018268:	6859      	ldr	r1, [r3, #4]
 801826a:	af04      	add	r7, sp, #16
 801826c:	c703      	stmia	r7!, {r0, r1}
 801826e:	a802      	add	r0, sp, #8
 8018270:	f7f6 ffca 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018274:	4621      	mov	r1, r4
 8018276:	a804      	add	r0, sp, #16
 8018278:	f7f6 ffee 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801827c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018280:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018284:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8018288:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801828c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018290:	eb08 0401 	add.w	r4, r8, r1
 8018294:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018298:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801829c:	440a      	add	r2, r1
 801829e:	f8ad 2010 	strh.w	r2, [sp, #16]
 80182a2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80182a6:	4413      	add	r3, r2
 80182a8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80182ac:	4b4a      	ldr	r3, [pc, #296]	@ (80183d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80182ae:	6818      	ldr	r0, [r3, #0]
 80182b0:	6803      	ldr	r3, [r0, #0]
 80182b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80182b4:	4798      	blx	r3
 80182b6:	4b49      	ldr	r3, [pc, #292]	@ (80183dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80182b8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80182bc:	881a      	ldrh	r2, [r3, #0]
 80182be:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80182c2:	2eff      	cmp	r6, #255	@ 0xff
 80182c4:	fb02 c101 	mla	r1, r2, r1, ip
 80182c8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80182cc:	fb02 f207 	mul.w	r2, r2, r7
 80182d0:	f105 0104 	add.w	r1, r5, #4
 80182d4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80182d8:	461d      	mov	r5, r3
 80182da:	d05a      	beq.n	8018392 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80182dc:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 80182e0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80182e4:	b2b6      	uxth	r6, r6
 80182e6:	fa1f fe8e 	uxth.w	lr, lr
 80182ea:	9301      	str	r3, [sp, #4]
 80182ec:	4282      	cmp	r2, r0
 80182ee:	d96a      	bls.n	80183c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80182f0:	eb00 0b0a 	add.w	fp, r0, sl
 80182f4:	4583      	cmp	fp, r0
 80182f6:	d940      	bls.n	801837a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80182f8:	f814 3b01 	ldrb.w	r3, [r4], #1
 80182fc:	8805      	ldrh	r5, [r0, #0]
 80182fe:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018302:	122f      	asrs	r7, r5, #8
 8018304:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018308:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801830c:	fb17 f70e 	smulbb	r7, r7, lr
 8018310:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018314:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018318:	00ed      	lsls	r5, r5, #3
 801831a:	fb0c 7c06 	mla	ip, ip, r6, r7
 801831e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8018322:	10df      	asrs	r7, r3, #3
 8018324:	b2ed      	uxtb	r5, r5
 8018326:	00db      	lsls	r3, r3, #3
 8018328:	fa1f fc8c 	uxth.w	ip, ip
 801832c:	fb19 f90e 	smulbb	r9, r9, lr
 8018330:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018334:	b2db      	uxtb	r3, r3
 8018336:	fb15 f50e 	smulbb	r5, r5, lr
 801833a:	fb07 9706 	mla	r7, r7, r6, r9
 801833e:	fb03 5306 	mla	r3, r3, r6, r5
 8018342:	f10c 0901 	add.w	r9, ip, #1
 8018346:	b29b      	uxth	r3, r3
 8018348:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801834c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8018350:	f103 0c01 	add.w	ip, r3, #1
 8018354:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018358:	b2bf      	uxth	r7, r7
 801835a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801835e:	ea4c 0c09 	orr.w	ip, ip, r9
 8018362:	f107 0901 	add.w	r9, r7, #1
 8018366:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801836a:	097f      	lsrs	r7, r7, #5
 801836c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018370:	ea4c 0c07 	orr.w	ip, ip, r7
 8018374:	f820 cb02 	strh.w	ip, [r0], #2
 8018378:	e7bc      	b.n	80182f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801837a:	9b01      	ldr	r3, [sp, #4]
 801837c:	881b      	ldrh	r3, [r3, #0]
 801837e:	eba3 0308 	sub.w	r3, r3, r8
 8018382:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018386:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801838a:	eba3 0308 	sub.w	r3, r3, r8
 801838e:	441c      	add	r4, r3
 8018390:	e7ac      	b.n	80182ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8018392:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018396:	4282      	cmp	r2, r0
 8018398:	d915      	bls.n	80183c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801839a:	eb00 060a 	add.w	r6, r0, sl
 801839e:	4286      	cmp	r6, r0
 80183a0:	d906      	bls.n	80183b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80183a2:	f814 3b01 	ldrb.w	r3, [r4], #1
 80183a6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80183aa:	f820 3b02 	strh.w	r3, [r0], #2
 80183ae:	e7f6      	b.n	801839e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80183b0:	882b      	ldrh	r3, [r5, #0]
 80183b2:	eba3 0308 	sub.w	r3, r3, r8
 80183b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80183ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80183be:	eba3 0308 	sub.w	r3, r3, r8
 80183c2:	441c      	add	r4, r3
 80183c4:	e7e7      	b.n	8018396 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80183c6:	4b04      	ldr	r3, [pc, #16]	@ (80183d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80183c8:	6818      	ldr	r0, [r3, #0]
 80183ca:	6803      	ldr	r3, [r0, #0]
 80183cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80183ce:	4798      	blx	r3
 80183d0:	b007      	add	sp, #28
 80183d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183d6:	bf00      	nop
 80183d8:	20013ffc 	.word	0x20013ffc
 80183dc:	20013ff4 	.word	0x20013ff4

080183e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80183e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183e4:	b091      	sub	sp, #68	@ 0x44
 80183e6:	4680      	mov	r8, r0
 80183e8:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 80183ec:	460f      	mov	r7, r1
 80183ee:	4614      	mov	r4, r2
 80183f0:	2d00      	cmp	r5, #0
 80183f2:	d051      	beq.n	8018498 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80183f4:	6810      	ldr	r0, [r2, #0]
 80183f6:	6851      	ldr	r1, [r2, #4]
 80183f8:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 80185fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80183fc:	ae0c      	add	r6, sp, #48	@ 0x30
 80183fe:	c603      	stmia	r6!, {r0, r1}
 8018400:	6818      	ldr	r0, [r3, #0]
 8018402:	6859      	ldr	r1, [r3, #4]
 8018404:	ae0e      	add	r6, sp, #56	@ 0x38
 8018406:	c603      	stmia	r6!, {r0, r1}
 8018408:	a80c      	add	r0, sp, #48	@ 0x30
 801840a:	f7f6 fefd 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801840e:	4621      	mov	r1, r4
 8018410:	a80e      	add	r0, sp, #56	@ 0x38
 8018412:	f7f6 ff21 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018416:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801841a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801841e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8018422:	f8d9 0000 	ldr.w	r0, [r9]
 8018426:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801842a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801842e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018432:	eb08 0401 	add.w	r4, r8, r1
 8018436:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801843a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8018600 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801843e:	440a      	add	r2, r1
 8018440:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8018444:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8018448:	4413      	add	r3, r2
 801844a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801844e:	6803      	ldr	r3, [r0, #0]
 8018450:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018452:	4798      	blx	r3
 8018454:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018458:	f8d9 0000 	ldr.w	r0, [r9]
 801845c:	d01f      	beq.n	801849e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801845e:	2200      	movs	r2, #0
 8018460:	6801      	ldr	r1, [r0, #0]
 8018462:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8018466:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801846a:	220b      	movs	r2, #11
 801846c:	9207      	str	r2, [sp, #28]
 801846e:	f8b8 2000 	ldrh.w	r2, [r8]
 8018472:	9206      	str	r2, [sp, #24]
 8018474:	2201      	movs	r2, #1
 8018476:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801847a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801847e:	9203      	str	r2, [sp, #12]
 8018480:	fa1f f28a 	uxth.w	r2, sl
 8018484:	9202      	str	r2, [sp, #8]
 8018486:	b2b6      	uxth	r6, r6
 8018488:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801848c:	9200      	str	r2, [sp, #0]
 801848e:	9601      	str	r6, [sp, #4]
 8018490:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 8018492:	463a      	mov	r2, r7
 8018494:	4621      	mov	r1, r4
 8018496:	47a8      	blx	r5
 8018498:	b011      	add	sp, #68	@ 0x44
 801849a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801849e:	6803      	ldr	r3, [r0, #0]
 80184a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80184a2:	4798      	blx	r3
 80184a4:	f8b8 2000 	ldrh.w	r2, [r8]
 80184a8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80184ac:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 80184b0:	2dff      	cmp	r5, #255	@ 0xff
 80184b2:	fb02 1303 	mla	r3, r2, r3, r1
 80184b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80184ba:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80184be:	fb0a fa02 	mul.w	sl, sl, r2
 80184c2:	d062      	beq.n	801858a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80184c4:	ea6f 0c05 	mvn.w	ip, r5
 80184c8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80184cc:	930a      	str	r3, [sp, #40]	@ 0x28
 80184ce:	b2ad      	uxth	r5, r5
 80184d0:	fa5f fc8c 	uxtb.w	ip, ip
 80184d4:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 80184d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80184da:	4298      	cmp	r0, r3
 80184dc:	f080 8085 	bcs.w	80185ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80184e0:	eb00 0b09 	add.w	fp, r0, r9
 80184e4:	4558      	cmp	r0, fp
 80184e6:	d246      	bcs.n	8018576 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80184e8:	f814 eb01 	ldrb.w	lr, [r4], #1
 80184ec:	2303      	movs	r3, #3
 80184ee:	2204      	movs	r2, #4
 80184f0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80184f4:	eb07 0a0e 	add.w	sl, r7, lr
 80184f8:	8803      	ldrh	r3, [r0, #0]
 80184fa:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80184fe:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018502:	1219      	asrs	r1, r3, #8
 8018504:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018508:	fb18 f805 	smulbb	r8, r8, r5
 801850c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018510:	10da      	asrs	r2, r3, #3
 8018512:	fb01 810c 	mla	r1, r1, ip, r8
 8018516:	00db      	lsls	r3, r3, #3
 8018518:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801851c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018520:	b2db      	uxtb	r3, r3
 8018522:	fb18 f805 	smulbb	r8, r8, r5
 8018526:	fb1e fe05 	smulbb	lr, lr, r5
 801852a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801852e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8018532:	b289      	uxth	r1, r1
 8018534:	fb02 820c 	mla	r2, r2, ip, r8
 8018538:	fb03 e30c 	mla	r3, r3, ip, lr
 801853c:	b292      	uxth	r2, r2
 801853e:	b29b      	uxth	r3, r3
 8018540:	f101 0801 	add.w	r8, r1, #1
 8018544:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8018548:	f103 0e01 	add.w	lr, r3, #1
 801854c:	f102 0801 	add.w	r8, r2, #1
 8018550:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018554:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8018558:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801855c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018560:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018564:	ea4e 0101 	orr.w	r1, lr, r1
 8018568:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801856c:	ea41 0108 	orr.w	r1, r1, r8
 8018570:	f820 1b02 	strh.w	r1, [r0], #2
 8018574:	e7b6      	b.n	80184e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8018576:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018578:	881b      	ldrh	r3, [r3, #0]
 801857a:	1b9b      	subs	r3, r3, r6
 801857c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018580:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018584:	1b9b      	subs	r3, r3, r6
 8018586:	441c      	add	r4, r3
 8018588:	e7a6      	b.n	80184d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801858a:	491b      	ldr	r1, [pc, #108]	@ (80185f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801858c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018590:	2203      	movs	r2, #3
 8018592:	2504      	movs	r5, #4
 8018594:	4550      	cmp	r0, sl
 8018596:	d228      	bcs.n	80185ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018598:	eb00 0c09 	add.w	ip, r0, r9
 801859c:	4560      	cmp	r0, ip
 801859e:	4623      	mov	r3, r4
 80185a0:	d219      	bcs.n	80185d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80185a2:	f893 e000 	ldrb.w	lr, [r3]
 80185a6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80185aa:	eb07 0b0e 	add.w	fp, r7, lr
 80185ae:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80185b2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80185b6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80185ba:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80185be:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80185c2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80185c6:	ea43 030b 	orr.w	r3, r3, fp
 80185ca:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80185ce:	3401      	adds	r4, #1
 80185d0:	f820 3b02 	strh.w	r3, [r0], #2
 80185d4:	e7e2      	b.n	801859c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80185d6:	f8b8 3000 	ldrh.w	r3, [r8]
 80185da:	1b9b      	subs	r3, r3, r6
 80185dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80185e0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80185e4:	1b9b      	subs	r3, r3, r6
 80185e6:	441c      	add	r4, r3
 80185e8:	e7d4      	b.n	8018594 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80185ea:	4b04      	ldr	r3, [pc, #16]	@ (80185fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80185ec:	6818      	ldr	r0, [r3, #0]
 80185ee:	6803      	ldr	r3, [r0, #0]
 80185f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80185f2:	4798      	blx	r3
 80185f4:	e750      	b.n	8018498 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80185f6:	bf00      	nop
 80185f8:	fffff800 	.word	0xfffff800
 80185fc:	20013ffc 	.word	0x20013ffc
 8018600:	20013ff4 	.word	0x20013ff4

08018604 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018604:	b4f0      	push	{r4, r5, r6, r7}
 8018606:	460c      	mov	r4, r1
 8018608:	4611      	mov	r1, r2
 801860a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801860e:	780f      	ldrb	r7, [r1, #0]
 8018610:	784e      	ldrb	r6, [r1, #1]
 8018612:	2f01      	cmp	r7, #1
 8018614:	461a      	mov	r2, r3
 8018616:	9b04      	ldr	r3, [sp, #16]
 8018618:	d038      	beq.n	801868c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801861a:	d31f      	bcc.n	801865c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801861c:	2f02      	cmp	r7, #2
 801861e:	d14d      	bne.n	80186bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018620:	2e03      	cmp	r6, #3
 8018622:	d84b      	bhi.n	80186bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018624:	e8df f006 	tbb	[pc, r6]
 8018628:	17140702 	.word	0x17140702
 801862c:	9504      	str	r5, [sp, #16]
 801862e:	4620      	mov	r0, r4
 8018630:	bcf0      	pop	{r4, r5, r6, r7}
 8018632:	f7ff be09 	b.w	8018248 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8018636:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018638:	2800      	cmp	r0, #0
 801863a:	d03f      	beq.n	80186bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801863c:	6806      	ldr	r6, [r0, #0]
 801863e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018642:	68b5      	ldr	r5, [r6, #8]
 8018644:	4613      	mov	r3, r2
 8018646:	46ac      	mov	ip, r5
 8018648:	460a      	mov	r2, r1
 801864a:	4621      	mov	r1, r4
 801864c:	bcf0      	pop	{r4, r5, r6, r7}
 801864e:	4760      	bx	ip
 8018650:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018654:	e7f0      	b.n	8018638 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018656:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801865a:	e7ed      	b.n	8018638 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801865c:	2e03      	cmp	r6, #3
 801865e:	d82d      	bhi.n	80186bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018660:	e8df f006 	tbb	[pc, r6]
 8018664:	110e0702 	.word	0x110e0702
 8018668:	9504      	str	r5, [sp, #16]
 801866a:	4620      	mov	r0, r4
 801866c:	bcf0      	pop	{r4, r5, r6, r7}
 801866e:	f7ff bd05 	b.w	801807c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018672:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018674:	b310      	cbz	r0, 80186bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018676:	6806      	ldr	r6, [r0, #0]
 8018678:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801867c:	68f5      	ldr	r5, [r6, #12]
 801867e:	e7e1      	b.n	8018644 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018680:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018684:	e7f6      	b.n	8018674 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018686:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801868a:	e7f3      	b.n	8018674 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801868c:	2e03      	cmp	r6, #3
 801868e:	d815      	bhi.n	80186bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018690:	e8df f006 	tbb	[pc, r6]
 8018694:	110e0702 	.word	0x110e0702
 8018698:	9504      	str	r5, [sp, #16]
 801869a:	4620      	mov	r0, r4
 801869c:	bcf0      	pop	{r4, r5, r6, r7}
 801869e:	f7ff be9f 	b.w	80183e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80186a2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80186a4:	b150      	cbz	r0, 80186bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80186a6:	6806      	ldr	r6, [r0, #0]
 80186a8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80186ac:	6935      	ldr	r5, [r6, #16]
 80186ae:	e7c9      	b.n	8018644 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80186b0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80186b4:	e7f6      	b.n	80186a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80186b6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80186ba:	e7f3      	b.n	80186a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80186bc:	bcf0      	pop	{r4, r5, r6, r7}
 80186be:	4770      	bx	lr

080186c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80186c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186c4:	4604      	mov	r4, r0
 80186c6:	b087      	sub	sp, #28
 80186c8:	6810      	ldr	r0, [r2, #0]
 80186ca:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 80186ce:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8018908 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80186d2:	460e      	mov	r6, r1
 80186d4:	6851      	ldr	r1, [r2, #4]
 80186d6:	ad02      	add	r5, sp, #8
 80186d8:	c503      	stmia	r5!, {r0, r1}
 80186da:	6818      	ldr	r0, [r3, #0]
 80186dc:	6859      	ldr	r1, [r3, #4]
 80186de:	ad04      	add	r5, sp, #16
 80186e0:	4617      	mov	r7, r2
 80186e2:	c503      	stmia	r5!, {r0, r1}
 80186e4:	a802      	add	r0, sp, #8
 80186e6:	f7f6 fd8f 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80186ea:	4639      	mov	r1, r7
 80186ec:	a804      	add	r0, sp, #16
 80186ee:	f7f6 fdb3 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80186f2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80186f6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80186fa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80186fe:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018702:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018706:	fb11 2103 	smlabb	r1, r1, r3, r2
 801870a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801870e:	440e      	add	r6, r1
 8018710:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018714:	440a      	add	r2, r1
 8018716:	f8ad 2010 	strh.w	r2, [sp, #16]
 801871a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801871e:	4413      	add	r3, r2
 8018720:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018724:	4b77      	ldr	r3, [pc, #476]	@ (8018904 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018726:	6818      	ldr	r0, [r3, #0]
 8018728:	6803      	ldr	r3, [r0, #0]
 801872a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801872c:	4798      	blx	r3
 801872e:	f8b9 b000 	ldrh.w	fp, [r9]
 8018732:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018736:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801873a:	fb0b 2303 	mla	r3, fp, r3, r2
 801873e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018742:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018746:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801874a:	fb05 f50b 	mul.w	r5, r5, fp
 801874e:	9300      	str	r3, [sp, #0]
 8018750:	d069      	beq.n	8018826 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018752:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018756:	4558      	cmp	r0, fp
 8018758:	f080 80cc 	bcs.w	80188f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801875c:	9b00      	ldr	r3, [sp, #0]
 801875e:	18c3      	adds	r3, r0, r3
 8018760:	9301      	str	r3, [sp, #4]
 8018762:	4631      	mov	r1, r6
 8018764:	9b01      	ldr	r3, [sp, #4]
 8018766:	4298      	cmp	r0, r3
 8018768:	d24f      	bcs.n	801880a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801876a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801876e:	2a00      	cmp	r2, #0
 8018770:	d048      	beq.n	8018804 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018772:	fb0a f202 	mul.w	r2, sl, r2
 8018776:	1c53      	adds	r3, r2, #1
 8018778:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801877c:	121b      	asrs	r3, r3, #8
 801877e:	d041      	beq.n	8018804 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018780:	8802      	ldrh	r2, [r0, #0]
 8018782:	f8b4 c000 	ldrh.w	ip, [r4]
 8018786:	b29e      	uxth	r6, r3
 8018788:	1215      	asrs	r5, r2, #8
 801878a:	43db      	mvns	r3, r3
 801878c:	b2db      	uxtb	r3, r3
 801878e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018792:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018796:	fb15 f503 	smulbb	r5, r5, r3
 801879a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801879e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80187a2:	00d2      	lsls	r2, r2, #3
 80187a4:	fb07 5706 	mla	r7, r7, r6, r5
 80187a8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80187ac:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80187b0:	b2d2      	uxtb	r2, r2
 80187b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80187b6:	b2bf      	uxth	r7, r7
 80187b8:	fb1e fe03 	smulbb	lr, lr, r3
 80187bc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80187c0:	fa5f fc8c 	uxtb.w	ip, ip
 80187c4:	fb12 f203 	smulbb	r2, r2, r3
 80187c8:	fb05 e506 	mla	r5, r5, r6, lr
 80187cc:	fb0c 2c06 	mla	ip, ip, r6, r2
 80187d0:	f107 0e01 	add.w	lr, r7, #1
 80187d4:	fa1f fc8c 	uxth.w	ip, ip
 80187d8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80187dc:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 80187e0:	f10c 0701 	add.w	r7, ip, #1
 80187e4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80187e8:	b2ad      	uxth	r5, r5
 80187ea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80187ee:	ea47 070e 	orr.w	r7, r7, lr
 80187f2:	f105 0e01 	add.w	lr, r5, #1
 80187f6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80187fa:	096d      	lsrs	r5, r5, #5
 80187fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018800:	432f      	orrs	r7, r5
 8018802:	8007      	strh	r7, [r0, #0]
 8018804:	3002      	adds	r0, #2
 8018806:	3402      	adds	r4, #2
 8018808:	e7ac      	b.n	8018764 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801880a:	f8b9 3000 	ldrh.w	r3, [r9]
 801880e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018812:	eba3 0308 	sub.w	r3, r3, r8
 8018816:	eba6 0608 	sub.w	r6, r6, r8
 801881a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801881e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018822:	440e      	add	r6, r1
 8018824:	e797      	b.n	8018756 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018826:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801882a:	42a8      	cmp	r0, r5
 801882c:	d262      	bcs.n	80188f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801882e:	9b00      	ldr	r3, [sp, #0]
 8018830:	4631      	mov	r1, r6
 8018832:	eb00 0b03 	add.w	fp, r0, r3
 8018836:	4558      	cmp	r0, fp
 8018838:	d24e      	bcs.n	80188d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801883a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801883e:	b12b      	cbz	r3, 801884c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018840:	2bff      	cmp	r3, #255	@ 0xff
 8018842:	f8b4 e000 	ldrh.w	lr, [r4]
 8018846:	d104      	bne.n	8018852 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018848:	f8a0 e000 	strh.w	lr, [r0]
 801884c:	3002      	adds	r0, #2
 801884e:	3402      	adds	r4, #2
 8018850:	e7f1      	b.n	8018836 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018852:	8802      	ldrh	r2, [r0, #0]
 8018854:	b29f      	uxth	r7, r3
 8018856:	1216      	asrs	r6, r2, #8
 8018858:	43db      	mvns	r3, r3
 801885a:	b2db      	uxtb	r3, r3
 801885c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018860:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018864:	fb16 f603 	smulbb	r6, r6, r3
 8018868:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801886c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018870:	00d2      	lsls	r2, r2, #3
 8018872:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018876:	b2d2      	uxtb	r2, r2
 8018878:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801887c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018880:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018884:	fb1a fa03 	smulbb	sl, sl, r3
 8018888:	fa1f fc8c 	uxth.w	ip, ip
 801888c:	fb12 f303 	smulbb	r3, r2, r3
 8018890:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018894:	fa5f fe8e 	uxtb.w	lr, lr
 8018898:	fb06 a607 	mla	r6, r6, r7, sl
 801889c:	f10c 0201 	add.w	r2, ip, #1
 80188a0:	fb0e 3307 	mla	r3, lr, r7, r3
 80188a4:	b2b6      	uxth	r6, r6
 80188a6:	b29b      	uxth	r3, r3
 80188a8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80188ac:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80188b0:	f106 0a01 	add.w	sl, r6, #1
 80188b4:	f103 0c01 	add.w	ip, r3, #1
 80188b8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80188bc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80188c0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80188c4:	0976      	lsrs	r6, r6, #5
 80188c6:	ea4c 0c02 	orr.w	ip, ip, r2
 80188ca:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80188ce:	ea4c 0c06 	orr.w	ip, ip, r6
 80188d2:	f8a0 c000 	strh.w	ip, [r0]
 80188d6:	e7b9      	b.n	801884c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80188d8:	f8b9 3000 	ldrh.w	r3, [r9]
 80188dc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80188e0:	eba3 0308 	sub.w	r3, r3, r8
 80188e4:	eba6 0608 	sub.w	r6, r6, r8
 80188e8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80188ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80188f0:	440e      	add	r6, r1
 80188f2:	e79a      	b.n	801882a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80188f4:	4b03      	ldr	r3, [pc, #12]	@ (8018904 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80188f6:	6818      	ldr	r0, [r3, #0]
 80188f8:	6803      	ldr	r3, [r0, #0]
 80188fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80188fc:	4798      	blx	r3
 80188fe:	b007      	add	sp, #28
 8018900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018904:	20013ffc 	.word	0x20013ffc
 8018908:	20013ff4 	.word	0x20013ff4

0801890c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801890c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018910:	b089      	sub	sp, #36	@ 0x24
 8018912:	4607      	mov	r7, r0
 8018914:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8018918:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801891a:	4688      	mov	r8, r1
 801891c:	4692      	mov	sl, r2
 801891e:	4699      	mov	r9, r3
 8018920:	2e00      	cmp	r6, #0
 8018922:	d048      	beq.n	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018924:	4608      	mov	r0, r1
 8018926:	f7fa f81d 	bl	8012964 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801892a:	4605      	mov	r5, r0
 801892c:	4640      	mov	r0, r8
 801892e:	f7fa f84d 	bl	80129cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018932:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018936:	4640      	mov	r0, r8
 8018938:	f8ad a008 	strh.w	sl, [sp, #8]
 801893c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018940:	f8ad 900a 	strh.w	r9, [sp, #10]
 8018944:	f7fa f900 	bl	8012b48 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018948:	4605      	mov	r5, r0
 801894a:	4640      	mov	r0, r8
 801894c:	f7fa f92c 	bl	8012ba8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018950:	4682      	mov	sl, r0
 8018952:	4640      	mov	r0, r8
 8018954:	f7fa f97c 	bl	8012c50 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018958:	2810      	cmp	r0, #16
 801895a:	d82c      	bhi.n	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801895c:	e8df f010 	tbh	[pc, r0, lsl #1]
 8018960:	00ba00ca 	.word	0x00ba00ca
 8018964:	002b0011 	.word	0x002b0011
 8018968:	002b002b 	.word	0x002b002b
 801896c:	002b002b 	.word	0x002b002b
 8018970:	002b002b 	.word	0x002b002b
 8018974:	00c1002b 	.word	0x00c1002b
 8018978:	002b002b 	.word	0x002b002b
 801897c:	002b0180 	.word	0x002b0180
 8018980:	0173      	.short	0x0173
 8018982:	4bbc      	ldr	r3, [pc, #752]	@ (8018c74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8018984:	6818      	ldr	r0, [r3, #0]
 8018986:	6803      	ldr	r3, [r0, #0]
 8018988:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801898a:	4798      	blx	r3
 801898c:	2eff      	cmp	r6, #255	@ 0xff
 801898e:	d101      	bne.n	8018994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018990:	0683      	lsls	r3, r0, #26
 8018992:	d506      	bpl.n	80189a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8018994:	4633      	mov	r3, r6
 8018996:	4622      	mov	r2, r4
 8018998:	a902      	add	r1, sp, #8
 801899a:	4628      	mov	r0, r5
 801899c:	f7ff f8fc 	bl	8017b98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80189a0:	e009      	b.n	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80189a2:	4640      	mov	r0, r8
 80189a4:	f7fa f898 	bl	8012ad8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80189a8:	b940      	cbnz	r0, 80189bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 80189aa:	4623      	mov	r3, r4
 80189ac:	aa02      	add	r2, sp, #8
 80189ae:	4629      	mov	r1, r5
 80189b0:	4638      	mov	r0, r7
 80189b2:	f7ff f9d7 	bl	8017d64 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80189b6:	b009      	add	sp, #36	@ 0x24
 80189b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189bc:	f10d 0918 	add.w	r9, sp, #24
 80189c0:	4641      	mov	r1, r8
 80189c2:	4648      	mov	r0, r9
 80189c4:	f7fa f836 	bl	8012a34 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80189c8:	e899 0003 	ldmia.w	r9, {r0, r1}
 80189cc:	f10d 0810 	add.w	r8, sp, #16
 80189d0:	e888 0003 	stmia.w	r8, {r0, r1}
 80189d4:	4640      	mov	r0, r8
 80189d6:	4621      	mov	r1, r4
 80189d8:	f7f1 fca8 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 80189dc:	4640      	mov	r0, r8
 80189de:	f7f1 fce8 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80189e2:	2800      	cmp	r0, #0
 80189e4:	d1d6      	bne.n	8018994 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80189e6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80189ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80189ee:	4293      	cmp	r3, r2
 80189f0:	dd12      	ble.n	8018a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 80189f2:	1a9b      	subs	r3, r3, r2
 80189f4:	f9b4 0000 	ldrsh.w	r0, [r4]
 80189f8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80189fc:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018a00:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018a04:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018a08:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018a0c:	464a      	mov	r2, r9
 8018a0e:	4633      	mov	r3, r6
 8018a10:	a902      	add	r1, sp, #8
 8018a12:	4628      	mov	r0, r5
 8018a14:	f7ff f8c0 	bl	8017b98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a18:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018a1c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018a20:	4293      	cmp	r3, r2
 8018a22:	dd12      	ble.n	8018a4a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8018a24:	1a9b      	subs	r3, r3, r2
 8018a26:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018a2a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018a2e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018a32:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018a36:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018a3a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018a3e:	23ff      	movs	r3, #255	@ 0xff
 8018a40:	464a      	mov	r2, r9
 8018a42:	a902      	add	r1, sp, #8
 8018a44:	4628      	mov	r0, r5
 8018a46:	f7ff f8a7 	bl	8017b98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a4a:	4643      	mov	r3, r8
 8018a4c:	aa02      	add	r2, sp, #8
 8018a4e:	4629      	mov	r1, r5
 8018a50:	4638      	mov	r0, r7
 8018a52:	f7ff f987 	bl	8017d64 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018a56:	88a2      	ldrh	r2, [r4, #4]
 8018a58:	8823      	ldrh	r3, [r4, #0]
 8018a5a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018a5e:	4413      	add	r3, r2
 8018a60:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018a64:	440a      	add	r2, r1
 8018a66:	b29b      	uxth	r3, r3
 8018a68:	b292      	uxth	r2, r2
 8018a6a:	b211      	sxth	r1, r2
 8018a6c:	b218      	sxth	r0, r3
 8018a6e:	4288      	cmp	r0, r1
 8018a70:	dd12      	ble.n	8018a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8018a72:	1a9b      	subs	r3, r3, r2
 8018a74:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018a78:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018a7c:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018a80:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018a84:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018a88:	23ff      	movs	r3, #255	@ 0xff
 8018a8a:	464a      	mov	r2, r9
 8018a8c:	a902      	add	r1, sp, #8
 8018a8e:	4628      	mov	r0, r5
 8018a90:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018a94:	f7ff f880 	bl	8017b98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a98:	88e2      	ldrh	r2, [r4, #6]
 8018a9a:	8863      	ldrh	r3, [r4, #2]
 8018a9c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018aa0:	4413      	add	r3, r2
 8018aa2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018aa6:	440a      	add	r2, r1
 8018aa8:	b29b      	uxth	r3, r3
 8018aaa:	b292      	uxth	r2, r2
 8018aac:	b211      	sxth	r1, r2
 8018aae:	b218      	sxth	r0, r3
 8018ab0:	4288      	cmp	r0, r1
 8018ab2:	dd80      	ble.n	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018ab4:	1a9b      	subs	r3, r3, r2
 8018ab6:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018aba:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018abe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018ac2:	f8ad 6018 	strh.w	r6, [sp, #24]
 8018ac6:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018aca:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018ace:	23ff      	movs	r3, #255	@ 0xff
 8018ad0:	464a      	mov	r2, r9
 8018ad2:	e761      	b.n	8018998 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018ad4:	4633      	mov	r3, r6
 8018ad6:	4622      	mov	r2, r4
 8018ad8:	a902      	add	r1, sp, #8
 8018ada:	4628      	mov	r0, r5
 8018adc:	f7ff f9b2 	bl	8017e44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018ae0:	e769      	b.n	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018ae2:	e9cd 4600 	strd	r4, r6, [sp]
 8018ae6:	ab02      	add	r3, sp, #8
 8018ae8:	4652      	mov	r2, sl
 8018aea:	4629      	mov	r1, r5
 8018aec:	4638      	mov	r0, r7
 8018aee:	f7ff fd89 	bl	8018604 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018af2:	e760      	b.n	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018af4:	4640      	mov	r0, r8
 8018af6:	f7f9 ffef 	bl	8012ad8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018afa:	b948      	cbnz	r0, 8018b10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8018afc:	683b      	ldr	r3, [r7, #0]
 8018afe:	e9cd 6000 	strd	r6, r0, [sp]
 8018b02:	aa02      	add	r2, sp, #8
 8018b04:	68de      	ldr	r6, [r3, #12]
 8018b06:	4629      	mov	r1, r5
 8018b08:	4623      	mov	r3, r4
 8018b0a:	4638      	mov	r0, r7
 8018b0c:	47b0      	blx	r6
 8018b0e:	e752      	b.n	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018b10:	f10d 0918 	add.w	r9, sp, #24
 8018b14:	4641      	mov	r1, r8
 8018b16:	4648      	mov	r0, r9
 8018b18:	f7f9 ff8c 	bl	8012a34 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018b1c:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018b20:	f10d 0810 	add.w	r8, sp, #16
 8018b24:	e888 0003 	stmia.w	r8, {r0, r1}
 8018b28:	4640      	mov	r0, r8
 8018b2a:	4621      	mov	r1, r4
 8018b2c:	f7f1 fbfe 	bl	800a32c <_ZN8touchgfx4RectaNERKS0_>
 8018b30:	4640      	mov	r0, r8
 8018b32:	f7f1 fc3e 	bl	800a3b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018b36:	b138      	cbz	r0, 8018b48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8018b38:	9600      	str	r6, [sp, #0]
 8018b3a:	4623      	mov	r3, r4
 8018b3c:	aa02      	add	r2, sp, #8
 8018b3e:	4651      	mov	r1, sl
 8018b40:	4628      	mov	r0, r5
 8018b42:	f7ff fdbd 	bl	80186c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018b46:	e736      	b.n	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018b48:	683b      	ldr	r3, [r7, #0]
 8018b4a:	e9cd 6000 	strd	r6, r0, [sp]
 8018b4e:	aa02      	add	r2, sp, #8
 8018b50:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018b54:	4629      	mov	r1, r5
 8018b56:	4643      	mov	r3, r8
 8018b58:	4638      	mov	r0, r7
 8018b5a:	47d8      	blx	fp
 8018b5c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018b60:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018b64:	4293      	cmp	r3, r2
 8018b66:	dd13      	ble.n	8018b90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8018b68:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018b6c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018b70:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018b74:	1a9b      	subs	r3, r3, r2
 8018b76:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018b7a:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018b7e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018b82:	9600      	str	r6, [sp, #0]
 8018b84:	464b      	mov	r3, r9
 8018b86:	aa02      	add	r2, sp, #8
 8018b88:	4651      	mov	r1, sl
 8018b8a:	4628      	mov	r0, r5
 8018b8c:	f7ff fd98 	bl	80186c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018b90:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018b94:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018b98:	4293      	cmp	r3, r2
 8018b9a:	dd13      	ble.n	8018bc4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8018b9c:	1a9b      	subs	r3, r3, r2
 8018b9e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018ba2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018ba6:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018baa:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018bae:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018bb2:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018bb6:	9600      	str	r6, [sp, #0]
 8018bb8:	464b      	mov	r3, r9
 8018bba:	aa02      	add	r2, sp, #8
 8018bbc:	4651      	mov	r1, sl
 8018bbe:	4628      	mov	r0, r5
 8018bc0:	f7ff fd7e 	bl	80186c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018bc4:	88a2      	ldrh	r2, [r4, #4]
 8018bc6:	8823      	ldrh	r3, [r4, #0]
 8018bc8:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018bcc:	4413      	add	r3, r2
 8018bce:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018bd2:	440a      	add	r2, r1
 8018bd4:	b29b      	uxth	r3, r3
 8018bd6:	b292      	uxth	r2, r2
 8018bd8:	b211      	sxth	r1, r2
 8018bda:	b218      	sxth	r0, r3
 8018bdc:	4288      	cmp	r0, r1
 8018bde:	dd13      	ble.n	8018c08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8018be0:	1a9b      	subs	r3, r3, r2
 8018be2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018be6:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018bea:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018bee:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018bf2:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018bf6:	9600      	str	r6, [sp, #0]
 8018bf8:	464b      	mov	r3, r9
 8018bfa:	aa02      	add	r2, sp, #8
 8018bfc:	4651      	mov	r1, sl
 8018bfe:	4628      	mov	r0, r5
 8018c00:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018c04:	f7ff fd5c 	bl	80186c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018c08:	88e2      	ldrh	r2, [r4, #6]
 8018c0a:	8863      	ldrh	r3, [r4, #2]
 8018c0c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018c10:	4413      	add	r3, r2
 8018c12:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018c16:	440a      	add	r2, r1
 8018c18:	b29b      	uxth	r3, r3
 8018c1a:	b292      	uxth	r2, r2
 8018c1c:	b211      	sxth	r1, r2
 8018c1e:	b218      	sxth	r0, r3
 8018c20:	4288      	cmp	r0, r1
 8018c22:	f77f aec8 	ble.w	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c26:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018c2a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018c2e:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018c32:	1a9b      	subs	r3, r3, r2
 8018c34:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018c38:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018c3c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018c40:	9600      	str	r6, [sp, #0]
 8018c42:	464b      	mov	r3, r9
 8018c44:	e77a      	b.n	8018b3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8018c46:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018c4a:	2800      	cmp	r0, #0
 8018c4c:	f43f aeb3 	beq.w	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c50:	6803      	ldr	r3, [r0, #0]
 8018c52:	9600      	str	r6, [sp, #0]
 8018c54:	68de      	ldr	r6, [r3, #12]
 8018c56:	4623      	mov	r3, r4
 8018c58:	aa02      	add	r2, sp, #8
 8018c5a:	4629      	mov	r1, r5
 8018c5c:	47b0      	blx	r6
 8018c5e:	e6aa      	b.n	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c60:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018c64:	2800      	cmp	r0, #0
 8018c66:	f43f aea6 	beq.w	80189b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c6a:	6803      	ldr	r3, [r0, #0]
 8018c6c:	9600      	str	r6, [sp, #0]
 8018c6e:	689e      	ldr	r6, [r3, #8]
 8018c70:	e7f1      	b.n	8018c56 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8018c72:	bf00      	nop
 8018c74:	20013ffc 	.word	0x20013ffc

08018c78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018c78:	b180      	cbz	r0, 8018c9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018c7a:	2903      	cmp	r1, #3
 8018c7c:	d81c      	bhi.n	8018cb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018c7e:	e8df f001 	tbb	[pc, r1]
 8018c82:	1d02      	.short	0x1d02
 8018c84:	1f08      	.short	0x1f08
 8018c86:	4b10      	ldr	r3, [pc, #64]	@ (8018cc8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018c88:	8818      	ldrh	r0, [r3, #0]
 8018c8a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018c8e:	4240      	negs	r0, r0
 8018c90:	4770      	bx	lr
 8018c92:	4b0d      	ldr	r3, [pc, #52]	@ (8018cc8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018c94:	8818      	ldrh	r0, [r3, #0]
 8018c96:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018c9a:	4770      	bx	lr
 8018c9c:	2903      	cmp	r1, #3
 8018c9e:	d80b      	bhi.n	8018cb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018ca0:	a301      	add	r3, pc, #4	@ (adr r3, 8018ca8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8018ca2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018ca6:	bf00      	nop
 8018ca8:	08018cbd 	.word	0x08018cbd
 8018cac:	08018c93 	.word	0x08018c93
 8018cb0:	08018cc1 	.word	0x08018cc1
 8018cb4:	08018c87 	.word	0x08018c87
 8018cb8:	2000      	movs	r0, #0
 8018cba:	4770      	bx	lr
 8018cbc:	2001      	movs	r0, #1
 8018cbe:	4770      	bx	lr
 8018cc0:	f04f 30ff 	mov.w	r0, #4294967295
 8018cc4:	4770      	bx	lr
 8018cc6:	bf00      	nop
 8018cc8:	20013ff4 	.word	0x20013ff4

08018ccc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018ccc:	b180      	cbz	r0, 8018cf0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018cce:	2903      	cmp	r1, #3
 8018cd0:	d81c      	bhi.n	8018d0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018cd2:	e8df f001 	tbb	[pc, r1]
 8018cd6:	021d      	.short	0x021d
 8018cd8:	071f      	.short	0x071f
 8018cda:	4b10      	ldr	r3, [pc, #64]	@ (8018d1c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018cdc:	8818      	ldrh	r0, [r3, #0]
 8018cde:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018ce2:	4770      	bx	lr
 8018ce4:	4b0d      	ldr	r3, [pc, #52]	@ (8018d1c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018ce6:	8818      	ldrh	r0, [r3, #0]
 8018ce8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018cec:	4240      	negs	r0, r0
 8018cee:	4770      	bx	lr
 8018cf0:	2903      	cmp	r1, #3
 8018cf2:	d80b      	bhi.n	8018d0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018cf4:	a301      	add	r3, pc, #4	@ (adr r3, 8018cfc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018cf6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018cfa:	bf00      	nop
 8018cfc:	08018cdb 	.word	0x08018cdb
 8018d00:	08018d15 	.word	0x08018d15
 8018d04:	08018ce5 	.word	0x08018ce5
 8018d08:	08018d11 	.word	0x08018d11
 8018d0c:	2000      	movs	r0, #0
 8018d0e:	4770      	bx	lr
 8018d10:	2001      	movs	r0, #1
 8018d12:	4770      	bx	lr
 8018d14:	f04f 30ff 	mov.w	r0, #4294967295
 8018d18:	4770      	bx	lr
 8018d1a:	bf00      	nop
 8018d1c:	20013ff4 	.word	0x20013ff4

08018d20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d24:	b099      	sub	sp, #100	@ 0x64
 8018d26:	910d      	str	r1, [sp, #52]	@ 0x34
 8018d28:	a914      	add	r1, sp, #80	@ 0x50
 8018d2a:	e881 000c 	stmia.w	r1, {r2, r3}
 8018d2e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8018d32:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018d34:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8018d38:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8018d3c:	9310      	str	r3, [sp, #64]	@ 0x40
 8018d3e:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8018d42:	9308      	str	r3, [sp, #32]
 8018d44:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8018d48:	9309      	str	r3, [sp, #36]	@ 0x24
 8018d4a:	7b4b      	ldrb	r3, [r1, #13]
 8018d4c:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8018d50:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8018d54:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8018d58:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8018d5a:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8018d5e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8018d62:	ea4f 1843 	mov.w	r8, r3, lsl #5
 8018d66:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8018d6a:	f891 8006 	ldrb.w	r8, [r1, #6]
 8018d6e:	ea58 0800 	orrs.w	r8, r8, r0
 8018d72:	f000 81ce 	beq.w	8019112 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018d76:	011b      	lsls	r3, r3, #4
 8018d78:	79c8      	ldrb	r0, [r1, #7]
 8018d7a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8018d7e:	4303      	orrs	r3, r0
 8018d80:	930c      	str	r3, [sp, #48]	@ 0x30
 8018d82:	f000 81c6 	beq.w	8019112 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018d86:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018d8a:	b29b      	uxth	r3, r3
 8018d8c:	2d00      	cmp	r5, #0
 8018d8e:	f000 812c 	beq.w	8018fea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 8018d92:	1aed      	subs	r5, r5, r3
 8018d94:	b2ad      	uxth	r5, r5
 8018d96:	0429      	lsls	r1, r5, #16
 8018d98:	d502      	bpl.n	8018da0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8018d9a:	1b64      	subs	r4, r4, r5
 8018d9c:	b224      	sxth	r4, r4
 8018d9e:	2500      	movs	r5, #0
 8018da0:	f9b2 0000 	ldrsh.w	r0, [r2]
 8018da4:	8891      	ldrh	r1, [r2, #4]
 8018da6:	4284      	cmp	r4, r0
 8018da8:	b283      	uxth	r3, r0
 8018daa:	bfb8      	it	lt
 8018dac:	18ed      	addlt	r5, r5, r3
 8018dae:	440b      	add	r3, r1
 8018db0:	b21b      	sxth	r3, r3
 8018db2:	930a      	str	r3, [sp, #40]	@ 0x28
 8018db4:	88d3      	ldrh	r3, [r2, #6]
 8018db6:	8852      	ldrh	r2, [r2, #2]
 8018db8:	4413      	add	r3, r2
 8018dba:	b21b      	sxth	r3, r3
 8018dbc:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018dbe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018dc0:	930e      	str	r3, [sp, #56]	@ 0x38
 8018dc2:	bfb8      	it	lt
 8018dc4:	1b2c      	sublt	r4, r5, r4
 8018dc6:	4bb5      	ldr	r3, [pc, #724]	@ (801909c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8018dc8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018dca:	f893 b000 	ldrb.w	fp, [r3]
 8018dce:	bfbc      	itt	lt
 8018dd0:	b2a5      	uxthlt	r5, r4
 8018dd2:	4604      	movlt	r4, r0
 8018dd4:	4653      	mov	r3, sl
 8018dd6:	4621      	mov	r1, r4
 8018dd8:	a814      	add	r0, sp, #80	@ 0x50
 8018dda:	f7f6 f889 	bl	800eef0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8018dde:	4621      	mov	r1, r4
 8018de0:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8018de4:	4653      	mov	r3, sl
 8018de6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018de8:	a814      	add	r0, sp, #80	@ 0x50
 8018dea:	f7f6 f89e 	bl	800ef2a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8018dee:	a918      	add	r1, sp, #96	@ 0x60
 8018df0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018df4:	a817      	add	r0, sp, #92	@ 0x5c
 8018df6:	f7f6 f9c5 	bl	800f184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018dfa:	f1ba 0f00 	cmp.w	sl, #0
 8018dfe:	f040 80f7 	bne.w	8018ff0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8018e02:	f1bb 0f01 	cmp.w	fp, #1
 8018e06:	f040 80fb 	bne.w	8019000 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 8018e0a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018e0c:	2b00      	cmp	r3, #0
 8018e0e:	f040 81a8 	bne.w	8019162 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 8018e12:	fa1f f288 	uxth.w	r2, r8
 8018e16:	b905      	cbnz	r5, 8018e1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 8018e18:	b15e      	cbz	r6, 8018e32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8018e1a:	9808      	ldr	r0, [sp, #32]
 8018e1c:	fb06 5302 	mla	r3, r6, r2, r5
 8018e20:	4343      	muls	r3, r0
 8018e22:	4631      	mov	r1, r6
 8018e24:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8018e28:	f003 0607 	and.w	r6, r3, #7
 8018e2c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e2e:	1a5b      	subs	r3, r3, r1
 8018e30:	930e      	str	r3, [sp, #56]	@ 0x38
 8018e32:	f10b 31ff 	add.w	r1, fp, #4294967295
 8018e36:	424b      	negs	r3, r1
 8018e38:	414b      	adcs	r3, r1
 8018e3a:	4618      	mov	r0, r3
 8018e3c:	4651      	mov	r1, sl
 8018e3e:	930c      	str	r3, [sp, #48]	@ 0x30
 8018e40:	f7ff ff1a 	bl	8018c78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018e44:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e46:	4683      	mov	fp, r0
 8018e48:	4618      	mov	r0, r3
 8018e4a:	f7ff ff3f 	bl	8018ccc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018e4e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8018e50:	4603      	mov	r3, r0
 8018e52:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018e54:	eba1 0a00 	sub.w	sl, r1, r0
 8018e58:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018e5a:	458a      	cmp	sl, r1
 8018e5c:	bfa8      	it	ge
 8018e5e:	468a      	movge	sl, r1
 8018e60:	f1ba 0f00 	cmp.w	sl, #0
 8018e64:	f340 8155 	ble.w	8019112 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018e68:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8018e6a:	1b64      	subs	r4, r4, r5
 8018e6c:	1b0c      	subs	r4, r1, r4
 8018e6e:	4544      	cmp	r4, r8
 8018e70:	bfd4      	ite	le
 8018e72:	ebc5 0504 	rsble	r5, r5, r4
 8018e76:	ebc5 0508 	rsbgt	r5, r5, r8
 8018e7a:	2d00      	cmp	r5, #0
 8018e7c:	f340 8149 	ble.w	8019112 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018e80:	9908      	ldr	r1, [sp, #32]
 8018e82:	1b52      	subs	r2, r2, r5
 8018e84:	434a      	muls	r2, r1
 8018e86:	920e      	str	r2, [sp, #56]	@ 0x38
 8018e88:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8018e8a:	2a00      	cmp	r2, #0
 8018e8c:	f040 8175 	bne.w	801917a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8018e90:	4a83      	ldr	r2, [pc, #524]	@ (80190a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8018e92:	930a      	str	r3, [sp, #40]	@ 0x28
 8018e94:	6810      	ldr	r0, [r2, #0]
 8018e96:	6802      	ldr	r2, [r0, #0]
 8018e98:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8018e9a:	4790      	blx	r2
 8018e9c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018e9e:	9908      	ldr	r1, [sp, #32]
 8018ea0:	2201      	movs	r2, #1
 8018ea2:	408a      	lsls	r2, r1
 8018ea4:	3a01      	subs	r2, #1
 8018ea6:	497f      	ldr	r1, [pc, #508]	@ (80190a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8018ea8:	b2d2      	uxtb	r2, r2
 8018eaa:	880c      	ldrh	r4, [r1, #0]
 8018eac:	920c      	str	r2, [sp, #48]	@ 0x30
 8018eae:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8018eb2:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 8018eb6:	fb04 1202 	mla	r2, r4, r2, r1
 8018eba:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018ebe:	ea4f 2419 	mov.w	r4, r9, lsr #8
 8018ec2:	920a      	str	r2, [sp, #40]	@ 0x28
 8018ec4:	f3c9 4207 	ubfx	r2, r9, #16, #8
 8018ec8:	9212      	str	r2, [sp, #72]	@ 0x48
 8018eca:	b2e2      	uxtb	r2, r4
 8018ecc:	9211      	str	r2, [sp, #68]	@ 0x44
 8018ece:	fa5f f289 	uxtb.w	r2, r9
 8018ed2:	9210      	str	r2, [sp, #64]	@ 0x40
 8018ed4:	4a74      	ldr	r2, [pc, #464]	@ (80190a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8018ed6:	ea4f 1159 	mov.w	r1, r9, lsr #5
 8018eda:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018ede:	4022      	ands	r2, r4
 8018ee0:	430a      	orrs	r2, r1
 8018ee2:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 8018ee6:	ea42 0209 	orr.w	r2, r2, r9
 8018eea:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8018eee:	b292      	uxth	r2, r2
 8018ef0:	fb05 3b1b 	mls	fp, r5, fp, r3
 8018ef4:	920f      	str	r2, [sp, #60]	@ 0x3c
 8018ef6:	460b      	mov	r3, r1
 8018ef8:	783a      	ldrb	r2, [r7, #0]
 8018efa:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018efc:	436b      	muls	r3, r5
 8018efe:	4132      	asrs	r2, r6
 8018f00:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8018f04:	b2d2      	uxtb	r2, r2
 8018f06:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018f08:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018f0c:	f0c0 8149 	bcc.w	80191a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 8018f10:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8018f14:	46a9      	mov	r9, r5
 8018f16:	f119 39ff 	adds.w	r9, r9, #4294967295
 8018f1a:	f0c0 8132 	bcc.w	8019182 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 8018f1e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018f20:	4013      	ands	r3, r2
 8018f22:	d054      	beq.n	8018fce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 8018f24:	20ff      	movs	r0, #255	@ 0xff
 8018f26:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018f28:	fb90 f1f1 	sdiv	r1, r0, r1
 8018f2c:	434b      	muls	r3, r1
 8018f2e:	2bfe      	cmp	r3, #254	@ 0xfe
 8018f30:	dd03      	ble.n	8018f3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 8018f32:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018f34:	4281      	cmp	r1, r0
 8018f36:	f000 8122 	beq.w	801917e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8018f3a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018f3c:	f8b8 4000 	ldrh.w	r4, [r8]
 8018f40:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018f42:	fb11 f303 	smulbb	r3, r1, r3
 8018f46:	b29b      	uxth	r3, r3
 8018f48:	1c59      	adds	r1, r3, #1
 8018f4a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018f4e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018f52:	fa1f fe83 	uxth.w	lr, r3
 8018f56:	1221      	asrs	r1, r4, #8
 8018f58:	fb10 fb0e 	smulbb	fp, r0, lr
 8018f5c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018f60:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018f62:	43db      	mvns	r3, r3
 8018f64:	b2db      	uxtb	r3, r3
 8018f66:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018f6a:	fb01 b103 	mla	r1, r1, r3, fp
 8018f6e:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8018f72:	fb10 fb0e 	smulbb	fp, r0, lr
 8018f76:	00e4      	lsls	r4, r4, #3
 8018f78:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8018f7a:	b2e4      	uxtb	r4, r4
 8018f7c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018f80:	fb10 fe0e 	smulbb	lr, r0, lr
 8018f84:	fb04 e403 	mla	r4, r4, r3, lr
 8018f88:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8018f8c:	b289      	uxth	r1, r1
 8018f8e:	b2a4      	uxth	r4, r4
 8018f90:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8018f94:	fb0c bc03 	mla	ip, ip, r3, fp
 8018f98:	1c4b      	adds	r3, r1, #1
 8018f9a:	f104 0b01 	add.w	fp, r4, #1
 8018f9e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018fa2:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 8018fa6:	fa1f fc8c 	uxth.w	ip, ip
 8018faa:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8018fae:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018fb2:	ea4b 0101 	orr.w	r1, fp, r1
 8018fb6:	f10c 0b01 	add.w	fp, ip, #1
 8018fba:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8018fbe:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018fc2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018fc6:	ea41 010b 	orr.w	r1, r1, fp
 8018fca:	f8a8 1000 	strh.w	r1, [r8]
 8018fce:	9b08      	ldr	r3, [sp, #32]
 8018fd0:	441e      	add	r6, r3
 8018fd2:	b2b6      	uxth	r6, r6
 8018fd4:	2e07      	cmp	r6, #7
 8018fd6:	bf98      	it	ls
 8018fd8:	411a      	asrls	r2, r3
 8018fda:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018fdc:	bf89      	itett	hi
 8018fde:	787a      	ldrbhi	r2, [r7, #1]
 8018fe0:	b2d2      	uxtbls	r2, r2
 8018fe2:	3701      	addhi	r7, #1
 8018fe4:	2600      	movhi	r6, #0
 8018fe6:	4498      	add	r8, r3
 8018fe8:	e795      	b.n	8018f16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 8018fea:	441c      	add	r4, r3
 8018fec:	b224      	sxth	r4, r4
 8018fee:	e6d7      	b.n	8018da0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8018ff0:	f1ba 0f01 	cmp.w	sl, #1
 8018ff4:	f47f af09 	bne.w	8018e0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8018ff8:	f1bb 0f01 	cmp.w	fp, #1
 8018ffc:	f47f af05 	bne.w	8018e0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019000:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019002:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019004:	1a99      	subs	r1, r3, r2
 8019006:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019008:	1b9b      	subs	r3, r3, r6
 801900a:	4299      	cmp	r1, r3
 801900c:	bfa8      	it	ge
 801900e:	4619      	movge	r1, r3
 8019010:	2900      	cmp	r1, #0
 8019012:	9112      	str	r1, [sp, #72]	@ 0x48
 8019014:	dd7d      	ble.n	8019112 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019016:	4a22      	ldr	r2, [pc, #136]	@ (80190a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8019018:	9211      	str	r2, [sp, #68]	@ 0x44
 801901a:	6810      	ldr	r0, [r2, #0]
 801901c:	6803      	ldr	r3, [r0, #0]
 801901e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019020:	4798      	blx	r3
 8019022:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8019026:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8019028:	d006      	beq.n	8019038 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801902a:	9b08      	ldr	r3, [sp, #32]
 801902c:	2b04      	cmp	r3, #4
 801902e:	d133      	bne.n	8019098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8019030:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019032:	3300      	adds	r3, #0
 8019034:	bf18      	it	ne
 8019036:	2301      	movne	r3, #1
 8019038:	0582      	lsls	r2, r0, #22
 801903a:	fa1f fc88 	uxth.w	ip, r8
 801903e:	f140 80b9 	bpl.w	80191b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8019042:	9808      	ldr	r0, [sp, #32]
 8019044:	2808      	cmp	r0, #8
 8019046:	f040 80b5 	bne.w	80191b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801904a:	2b00      	cmp	r3, #0
 801904c:	d064      	beq.n	8019118 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 801904e:	f10c 0c01 	add.w	ip, ip, #1
 8019052:	f02c 0301 	bic.w	r3, ip, #1
 8019056:	b29b      	uxth	r3, r3
 8019058:	bb45      	cbnz	r5, 80190ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801905a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801905c:	eb08 0004 	add.w	r0, r8, r4
 8019060:	4290      	cmp	r0, r2
 8019062:	dc23      	bgt.n	80190ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8019064:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019066:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801906a:	6810      	ldr	r0, [r2, #0]
 801906c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019070:	6804      	ldr	r4, [r0, #0]
 8019072:	9506      	str	r5, [sp, #24]
 8019074:	f44f 7580 	mov.w	r5, #256	@ 0x100
 8019078:	9505      	str	r5, [sp, #20]
 801907a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801907c:	9302      	str	r3, [sp, #8]
 801907e:	b289      	uxth	r1, r1
 8019080:	e9cd 3100 	strd	r3, r1, [sp]
 8019084:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8019088:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801908c:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 801908e:	4673      	mov	r3, lr
 8019090:	fb06 710c 	mla	r1, r6, ip, r7
 8019094:	47a0      	blx	r4
 8019096:	e03c      	b.n	8019112 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019098:	2300      	movs	r3, #0
 801909a:	e7cd      	b.n	8019038 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801909c:	20013ff2 	.word	0x20013ff2
 80190a0:	20013ffc 	.word	0x20013ffc
 80190a4:	20013ff4 	.word	0x20013ff4
 80190a8:	00fff800 	.word	0x00fff800
 80190ac:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80190ae:	eba4 0e05 	sub.w	lr, r4, r5
 80190b2:	eba2 0e0e 	sub.w	lr, r2, lr
 80190b6:	45c6      	cmp	lr, r8
 80190b8:	bfd4      	ite	le
 80190ba:	ebc5 0e0e 	rsble	lr, r5, lr
 80190be:	ebc5 0e08 	rsbgt	lr, r5, r8
 80190c2:	f1be 0f00 	cmp.w	lr, #0
 80190c6:	d024      	beq.n	8019112 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80190c8:	07e8      	lsls	r0, r5, #31
 80190ca:	f53f ae9e 	bmi.w	8018e0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 80190ce:	f01e 0001 	ands.w	r0, lr, #1
 80190d2:	f47f ae9a 	bne.w	8018e0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 80190d6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80190d8:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 80190dc:	6814      	ldr	r4, [r2, #0]
 80190de:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80190e2:	086d      	lsrs	r5, r5, #1
 80190e4:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 80190e8:	fb06 560c 	mla	r6, r6, ip, r5
 80190ec:	6825      	ldr	r5, [r4, #0]
 80190ee:	9006      	str	r0, [sp, #24]
 80190f0:	f44f 7080 	mov.w	r0, #256	@ 0x100
 80190f4:	9005      	str	r0, [sp, #20]
 80190f6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80190f8:	9302      	str	r3, [sp, #8]
 80190fa:	e9cd 9003 	strd	r9, r0, [sp, #12]
 80190fe:	b289      	uxth	r1, r1
 8019100:	fa1f f38e 	uxth.w	r3, lr
 8019104:	9101      	str	r1, [sp, #4]
 8019106:	9300      	str	r3, [sp, #0]
 8019108:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 801910a:	4643      	mov	r3, r8
 801910c:	19b9      	adds	r1, r7, r6
 801910e:	4620      	mov	r0, r4
 8019110:	47a8      	blx	r5
 8019112:	b019      	add	sp, #100	@ 0x64
 8019114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019118:	4a28      	ldr	r2, [pc, #160]	@ (80191bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801911a:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801911e:	6810      	ldr	r0, [r2, #0]
 8019120:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019124:	f8d0 a000 	ldr.w	sl, [r0]
 8019128:	9306      	str	r3, [sp, #24]
 801912a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801912e:	9305      	str	r3, [sp, #20]
 8019130:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019132:	f8cd c008 	str.w	ip, [sp, #8]
 8019136:	e9cd 9303 	strd	r9, r3, [sp, #12]
 801913a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801913c:	1b64      	subs	r4, r4, r5
 801913e:	1b1c      	subs	r4, r3, r4
 8019140:	fb06 5608 	mla	r6, r6, r8, r5
 8019144:	4544      	cmp	r4, r8
 8019146:	bfd4      	ite	le
 8019148:	ebc5 0504 	rsble	r5, r5, r4
 801914c:	ebc5 0508 	rsbgt	r5, r5, r8
 8019150:	b289      	uxth	r1, r1
 8019152:	b2ad      	uxth	r5, r5
 8019154:	9101      	str	r1, [sp, #4]
 8019156:	9500      	str	r5, [sp, #0]
 8019158:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 801915c:	4673      	mov	r3, lr
 801915e:	19b9      	adds	r1, r7, r6
 8019160:	e798      	b.n	8019094 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8019162:	2208      	movs	r2, #8
 8019164:	9b08      	ldr	r3, [sp, #32]
 8019166:	fb92 f3f3 	sdiv	r3, r2, r3
 801916a:	1e5a      	subs	r2, r3, #1
 801916c:	4442      	add	r2, r8
 801916e:	fb92 f2f3 	sdiv	r2, r2, r3
 8019172:	fb12 f203 	smulbb	r2, r2, r3
 8019176:	b292      	uxth	r2, r2
 8019178:	e64d      	b.n	8018e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 801917a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801917c:	e68f      	b.n	8018e9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 801917e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019180:	e723      	b.n	8018fca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8019182:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019184:	b143      	cbz	r3, 8019198 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 8019186:	441e      	add	r6, r3
 8019188:	b2b6      	uxth	r6, r6
 801918a:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 801918e:	f006 0607 	and.w	r6, r6, #7
 8019192:	783a      	ldrb	r2, [r7, #0]
 8019194:	4132      	asrs	r2, r6
 8019196:	b2d2      	uxtb	r2, r2
 8019198:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801919a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801919c:	4419      	add	r1, r3
 801919e:	910a      	str	r1, [sp, #40]	@ 0x28
 80191a0:	e6b2      	b.n	8018f08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 80191a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80191a4:	2b00      	cmp	r3, #0
 80191a6:	d1b4      	bne.n	8019112 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80191a8:	4b04      	ldr	r3, [pc, #16]	@ (80191bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 80191aa:	6818      	ldr	r0, [r3, #0]
 80191ac:	6803      	ldr	r3, [r0, #0]
 80191ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80191b0:	4798      	blx	r3
 80191b2:	e7ae      	b.n	8019112 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80191b4:	2b00      	cmp	r3, #0
 80191b6:	f47f af4a 	bne.w	801904e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 80191ba:	e626      	b.n	8018e0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 80191bc:	20013ffc 	.word	0x20013ffc

080191c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80191c0:	b538      	push	{r3, r4, r5, lr}
 80191c2:	4c15      	ldr	r4, [pc, #84]	@ (8019218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80191c4:	7823      	ldrb	r3, [r4, #0]
 80191c6:	f3bf 8f5b 	dmb	ish
 80191ca:	07da      	lsls	r2, r3, #31
 80191cc:	4605      	mov	r5, r0
 80191ce:	d40b      	bmi.n	80191e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80191d0:	4620      	mov	r0, r4
 80191d2:	f008 fc48 	bl	8021a66 <__cxa_guard_acquire>
 80191d6:	b138      	cbz	r0, 80191e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80191d8:	4620      	mov	r0, r4
 80191da:	f008 fc50 	bl	8021a7e <__cxa_guard_release>
 80191de:	4a0f      	ldr	r2, [pc, #60]	@ (801921c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80191e0:	490f      	ldr	r1, [pc, #60]	@ (8019220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80191e2:	4810      	ldr	r0, [pc, #64]	@ (8019224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80191e4:	f008 fc38 	bl	8021a58 <__aeabi_atexit>
 80191e8:	4c0f      	ldr	r4, [pc, #60]	@ (8019228 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80191ea:	7823      	ldrb	r3, [r4, #0]
 80191ec:	f3bf 8f5b 	dmb	ish
 80191f0:	07db      	lsls	r3, r3, #31
 80191f2:	d40b      	bmi.n	801920c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80191f4:	4620      	mov	r0, r4
 80191f6:	f008 fc36 	bl	8021a66 <__cxa_guard_acquire>
 80191fa:	b138      	cbz	r0, 801920c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80191fc:	4620      	mov	r0, r4
 80191fe:	f008 fc3e 	bl	8021a7e <__cxa_guard_release>
 8019202:	4a06      	ldr	r2, [pc, #24]	@ (801921c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019204:	4909      	ldr	r1, [pc, #36]	@ (801922c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8019206:	480a      	ldr	r0, [pc, #40]	@ (8019230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019208:	f008 fc26 	bl	8021a58 <__aeabi_atexit>
 801920c:	4b05      	ldr	r3, [pc, #20]	@ (8019224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801920e:	616b      	str	r3, [r5, #20]
 8019210:	4b07      	ldr	r3, [pc, #28]	@ (8019230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019212:	61ab      	str	r3, [r5, #24]
 8019214:	bd38      	pop	{r3, r4, r5, pc}
 8019216:	bf00      	nop
 8019218:	200140e0 	.word	0x200140e0
 801921c:	20000000 	.word	0x20000000
 8019220:	080152c9 	.word	0x080152c9
 8019224:	200001e8 	.word	0x200001e8
 8019228:	200140e4 	.word	0x200140e4
 801922c:	080152c7 	.word	0x080152c7
 8019230:	200001ec 	.word	0x200001ec

08019234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019234:	b538      	push	{r3, r4, r5, lr}
 8019236:	4c15      	ldr	r4, [pc, #84]	@ (801928c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019238:	7823      	ldrb	r3, [r4, #0]
 801923a:	f3bf 8f5b 	dmb	ish
 801923e:	07da      	lsls	r2, r3, #31
 8019240:	4605      	mov	r5, r0
 8019242:	d40b      	bmi.n	801925c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019244:	4620      	mov	r0, r4
 8019246:	f008 fc0e 	bl	8021a66 <__cxa_guard_acquire>
 801924a:	b138      	cbz	r0, 801925c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801924c:	4620      	mov	r0, r4
 801924e:	f008 fc16 	bl	8021a7e <__cxa_guard_release>
 8019252:	4a0f      	ldr	r2, [pc, #60]	@ (8019290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019254:	490f      	ldr	r1, [pc, #60]	@ (8019294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019256:	4810      	ldr	r0, [pc, #64]	@ (8019298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019258:	f008 fbfe 	bl	8021a58 <__aeabi_atexit>
 801925c:	4c0f      	ldr	r4, [pc, #60]	@ (801929c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801925e:	7823      	ldrb	r3, [r4, #0]
 8019260:	f3bf 8f5b 	dmb	ish
 8019264:	07db      	lsls	r3, r3, #31
 8019266:	d40b      	bmi.n	8019280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019268:	4620      	mov	r0, r4
 801926a:	f008 fbfc 	bl	8021a66 <__cxa_guard_acquire>
 801926e:	b138      	cbz	r0, 8019280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019270:	4620      	mov	r0, r4
 8019272:	f008 fc04 	bl	8021a7e <__cxa_guard_release>
 8019276:	4a06      	ldr	r2, [pc, #24]	@ (8019290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019278:	4909      	ldr	r1, [pc, #36]	@ (80192a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801927a:	480a      	ldr	r0, [pc, #40]	@ (80192a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801927c:	f008 fbec 	bl	8021a58 <__aeabi_atexit>
 8019280:	4b05      	ldr	r3, [pc, #20]	@ (8019298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019282:	60eb      	str	r3, [r5, #12]
 8019284:	4b07      	ldr	r3, [pc, #28]	@ (80192a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019286:	612b      	str	r3, [r5, #16]
 8019288:	bd38      	pop	{r3, r4, r5, pc}
 801928a:	bf00      	nop
 801928c:	200140b8 	.word	0x200140b8
 8019290:	20000000 	.word	0x20000000
 8019294:	080152cd 	.word	0x080152cd
 8019298:	200001c0 	.word	0x200001c0
 801929c:	200140bc 	.word	0x200140bc
 80192a0:	080152cb 	.word	0x080152cb
 80192a4:	200001c4 	.word	0x200001c4

080192a8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80192a8:	b510      	push	{r4, lr}
 80192aa:	4604      	mov	r4, r0
 80192ac:	f7ff ff88 	bl	80191c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80192b0:	4620      	mov	r0, r4
 80192b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192b6:	f7ff bfbd 	b.w	8019234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080192bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80192bc:	b538      	push	{r3, r4, r5, lr}
 80192be:	4c15      	ldr	r4, [pc, #84]	@ (8019314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80192c0:	7823      	ldrb	r3, [r4, #0]
 80192c2:	f3bf 8f5b 	dmb	ish
 80192c6:	07da      	lsls	r2, r3, #31
 80192c8:	4605      	mov	r5, r0
 80192ca:	d40b      	bmi.n	80192e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80192cc:	4620      	mov	r0, r4
 80192ce:	f008 fbca 	bl	8021a66 <__cxa_guard_acquire>
 80192d2:	b138      	cbz	r0, 80192e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80192d4:	4620      	mov	r0, r4
 80192d6:	f008 fbd2 	bl	8021a7e <__cxa_guard_release>
 80192da:	4a0f      	ldr	r2, [pc, #60]	@ (8019318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80192dc:	490f      	ldr	r1, [pc, #60]	@ (801931c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80192de:	4810      	ldr	r0, [pc, #64]	@ (8019320 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80192e0:	f008 fbba 	bl	8021a58 <__aeabi_atexit>
 80192e4:	4c0f      	ldr	r4, [pc, #60]	@ (8019324 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80192e6:	7823      	ldrb	r3, [r4, #0]
 80192e8:	f3bf 8f5b 	dmb	ish
 80192ec:	07db      	lsls	r3, r3, #31
 80192ee:	d40b      	bmi.n	8019308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80192f0:	4620      	mov	r0, r4
 80192f2:	f008 fbb8 	bl	8021a66 <__cxa_guard_acquire>
 80192f6:	b138      	cbz	r0, 8019308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80192f8:	4620      	mov	r0, r4
 80192fa:	f008 fbc0 	bl	8021a7e <__cxa_guard_release>
 80192fe:	4a06      	ldr	r2, [pc, #24]	@ (8019318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019300:	4909      	ldr	r1, [pc, #36]	@ (8019328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8019302:	480a      	ldr	r0, [pc, #40]	@ (801932c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019304:	f008 fba8 	bl	8021a58 <__aeabi_atexit>
 8019308:	4b05      	ldr	r3, [pc, #20]	@ (8019320 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801930a:	626b      	str	r3, [r5, #36]	@ 0x24
 801930c:	4b07      	ldr	r3, [pc, #28]	@ (801932c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801930e:	62ab      	str	r3, [r5, #40]	@ 0x28
 8019310:	bd38      	pop	{r3, r4, r5, pc}
 8019312:	bf00      	nop
 8019314:	200140e8 	.word	0x200140e8
 8019318:	20000000 	.word	0x20000000
 801931c:	080152c1 	.word	0x080152c1
 8019320:	200001f0 	.word	0x200001f0
 8019324:	200140ec 	.word	0x200140ec
 8019328:	080152bf 	.word	0x080152bf
 801932c:	200001f4 	.word	0x200001f4

08019330 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019330:	b538      	push	{r3, r4, r5, lr}
 8019332:	4c15      	ldr	r4, [pc, #84]	@ (8019388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019334:	7823      	ldrb	r3, [r4, #0]
 8019336:	f3bf 8f5b 	dmb	ish
 801933a:	07da      	lsls	r2, r3, #31
 801933c:	4605      	mov	r5, r0
 801933e:	d40b      	bmi.n	8019358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019340:	4620      	mov	r0, r4
 8019342:	f008 fb90 	bl	8021a66 <__cxa_guard_acquire>
 8019346:	b138      	cbz	r0, 8019358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019348:	4620      	mov	r0, r4
 801934a:	f008 fb98 	bl	8021a7e <__cxa_guard_release>
 801934e:	4a0f      	ldr	r2, [pc, #60]	@ (801938c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019350:	490f      	ldr	r1, [pc, #60]	@ (8019390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019352:	4810      	ldr	r0, [pc, #64]	@ (8019394 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019354:	f008 fb80 	bl	8021a58 <__aeabi_atexit>
 8019358:	4c0f      	ldr	r4, [pc, #60]	@ (8019398 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801935a:	7823      	ldrb	r3, [r4, #0]
 801935c:	f3bf 8f5b 	dmb	ish
 8019360:	07db      	lsls	r3, r3, #31
 8019362:	d40b      	bmi.n	801937c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019364:	4620      	mov	r0, r4
 8019366:	f008 fb7e 	bl	8021a66 <__cxa_guard_acquire>
 801936a:	b138      	cbz	r0, 801937c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801936c:	4620      	mov	r0, r4
 801936e:	f008 fb86 	bl	8021a7e <__cxa_guard_release>
 8019372:	4a06      	ldr	r2, [pc, #24]	@ (801938c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019374:	4909      	ldr	r1, [pc, #36]	@ (801939c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019376:	480a      	ldr	r0, [pc, #40]	@ (80193a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019378:	f008 fb6e 	bl	8021a58 <__aeabi_atexit>
 801937c:	4b05      	ldr	r3, [pc, #20]	@ (8019394 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801937e:	61eb      	str	r3, [r5, #28]
 8019380:	4b07      	ldr	r3, [pc, #28]	@ (80193a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019382:	622b      	str	r3, [r5, #32]
 8019384:	bd38      	pop	{r3, r4, r5, pc}
 8019386:	bf00      	nop
 8019388:	200140c0 	.word	0x200140c0
 801938c:	20000000 	.word	0x20000000
 8019390:	080152c5 	.word	0x080152c5
 8019394:	200001c8 	.word	0x200001c8
 8019398:	200140c4 	.word	0x200140c4
 801939c:	080152c3 	.word	0x080152c3
 80193a0:	200001cc 	.word	0x200001cc

080193a4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80193a4:	b510      	push	{r4, lr}
 80193a6:	4604      	mov	r4, r0
 80193a8:	f7ff ff88 	bl	80192bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80193ac:	4620      	mov	r0, r4
 80193ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80193b2:	f7ff bfbd 	b.w	8019330 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080193b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80193b8:	b538      	push	{r3, r4, r5, lr}
 80193ba:	4c15      	ldr	r4, [pc, #84]	@ (8019410 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80193bc:	7823      	ldrb	r3, [r4, #0]
 80193be:	f3bf 8f5b 	dmb	ish
 80193c2:	07da      	lsls	r2, r3, #31
 80193c4:	4605      	mov	r5, r0
 80193c6:	d40b      	bmi.n	80193e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80193c8:	4620      	mov	r0, r4
 80193ca:	f008 fb4c 	bl	8021a66 <__cxa_guard_acquire>
 80193ce:	b138      	cbz	r0, 80193e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80193d0:	4620      	mov	r0, r4
 80193d2:	f008 fb54 	bl	8021a7e <__cxa_guard_release>
 80193d6:	4a0f      	ldr	r2, [pc, #60]	@ (8019414 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80193d8:	490f      	ldr	r1, [pc, #60]	@ (8019418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80193da:	4810      	ldr	r0, [pc, #64]	@ (801941c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80193dc:	f008 fb3c 	bl	8021a58 <__aeabi_atexit>
 80193e0:	4c0f      	ldr	r4, [pc, #60]	@ (8019420 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80193e2:	7823      	ldrb	r3, [r4, #0]
 80193e4:	f3bf 8f5b 	dmb	ish
 80193e8:	07db      	lsls	r3, r3, #31
 80193ea:	d40b      	bmi.n	8019404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80193ec:	4620      	mov	r0, r4
 80193ee:	f008 fb3a 	bl	8021a66 <__cxa_guard_acquire>
 80193f2:	b138      	cbz	r0, 8019404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80193f4:	4620      	mov	r0, r4
 80193f6:	f008 fb42 	bl	8021a7e <__cxa_guard_release>
 80193fa:	4a06      	ldr	r2, [pc, #24]	@ (8019414 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80193fc:	4909      	ldr	r1, [pc, #36]	@ (8019424 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80193fe:	480a      	ldr	r0, [pc, #40]	@ (8019428 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019400:	f008 fb2a 	bl	8021a58 <__aeabi_atexit>
 8019404:	4b05      	ldr	r3, [pc, #20]	@ (801941c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019406:	636b      	str	r3, [r5, #52]	@ 0x34
 8019408:	4b07      	ldr	r3, [pc, #28]	@ (8019428 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801940a:	63ab      	str	r3, [r5, #56]	@ 0x38
 801940c:	bd38      	pop	{r3, r4, r5, pc}
 801940e:	bf00      	nop
 8019410:	200140f8 	.word	0x200140f8
 8019414:	20000000 	.word	0x20000000
 8019418:	080152b9 	.word	0x080152b9
 801941c:	20000200 	.word	0x20000200
 8019420:	200140fc 	.word	0x200140fc
 8019424:	080152b7 	.word	0x080152b7
 8019428:	20000204 	.word	0x20000204

0801942c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801942c:	b538      	push	{r3, r4, r5, lr}
 801942e:	4c15      	ldr	r4, [pc, #84]	@ (8019484 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019430:	7823      	ldrb	r3, [r4, #0]
 8019432:	f3bf 8f5b 	dmb	ish
 8019436:	07da      	lsls	r2, r3, #31
 8019438:	4605      	mov	r5, r0
 801943a:	d40b      	bmi.n	8019454 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801943c:	4620      	mov	r0, r4
 801943e:	f008 fb12 	bl	8021a66 <__cxa_guard_acquire>
 8019442:	b138      	cbz	r0, 8019454 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019444:	4620      	mov	r0, r4
 8019446:	f008 fb1a 	bl	8021a7e <__cxa_guard_release>
 801944a:	4a0f      	ldr	r2, [pc, #60]	@ (8019488 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801944c:	490f      	ldr	r1, [pc, #60]	@ (801948c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801944e:	4810      	ldr	r0, [pc, #64]	@ (8019490 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019450:	f008 fb02 	bl	8021a58 <__aeabi_atexit>
 8019454:	4c0f      	ldr	r4, [pc, #60]	@ (8019494 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019456:	7823      	ldrb	r3, [r4, #0]
 8019458:	f3bf 8f5b 	dmb	ish
 801945c:	07db      	lsls	r3, r3, #31
 801945e:	d40b      	bmi.n	8019478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019460:	4620      	mov	r0, r4
 8019462:	f008 fb00 	bl	8021a66 <__cxa_guard_acquire>
 8019466:	b138      	cbz	r0, 8019478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019468:	4620      	mov	r0, r4
 801946a:	f008 fb08 	bl	8021a7e <__cxa_guard_release>
 801946e:	4a06      	ldr	r2, [pc, #24]	@ (8019488 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019470:	4909      	ldr	r1, [pc, #36]	@ (8019498 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019472:	480a      	ldr	r0, [pc, #40]	@ (801949c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019474:	f008 faf0 	bl	8021a58 <__aeabi_atexit>
 8019478:	4b05      	ldr	r3, [pc, #20]	@ (8019490 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801947a:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801947c:	4b07      	ldr	r3, [pc, #28]	@ (801949c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801947e:	632b      	str	r3, [r5, #48]	@ 0x30
 8019480:	bd38      	pop	{r3, r4, r5, pc}
 8019482:	bf00      	nop
 8019484:	200140c8 	.word	0x200140c8
 8019488:	20000000 	.word	0x20000000
 801948c:	080152bd 	.word	0x080152bd
 8019490:	200001d0 	.word	0x200001d0
 8019494:	200140cc 	.word	0x200140cc
 8019498:	080152bb 	.word	0x080152bb
 801949c:	200001d4 	.word	0x200001d4

080194a0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80194a0:	b510      	push	{r4, lr}
 80194a2:	4604      	mov	r4, r0
 80194a4:	f7ff ff88 	bl	80193b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80194a8:	4620      	mov	r0, r4
 80194aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80194ae:	f7ff bfbd 	b.w	801942c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080194b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80194b4:	b538      	push	{r3, r4, r5, lr}
 80194b6:	4c15      	ldr	r4, [pc, #84]	@ (801950c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80194b8:	7823      	ldrb	r3, [r4, #0]
 80194ba:	f3bf 8f5b 	dmb	ish
 80194be:	07da      	lsls	r2, r3, #31
 80194c0:	4605      	mov	r5, r0
 80194c2:	d40b      	bmi.n	80194dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80194c4:	4620      	mov	r0, r4
 80194c6:	f008 face 	bl	8021a66 <__cxa_guard_acquire>
 80194ca:	b138      	cbz	r0, 80194dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80194cc:	4620      	mov	r0, r4
 80194ce:	f008 fad6 	bl	8021a7e <__cxa_guard_release>
 80194d2:	4a0f      	ldr	r2, [pc, #60]	@ (8019510 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80194d4:	490f      	ldr	r1, [pc, #60]	@ (8019514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80194d6:	4810      	ldr	r0, [pc, #64]	@ (8019518 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80194d8:	f008 fabe 	bl	8021a58 <__aeabi_atexit>
 80194dc:	4c0f      	ldr	r4, [pc, #60]	@ (801951c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80194de:	7823      	ldrb	r3, [r4, #0]
 80194e0:	f3bf 8f5b 	dmb	ish
 80194e4:	07db      	lsls	r3, r3, #31
 80194e6:	d40b      	bmi.n	8019500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80194e8:	4620      	mov	r0, r4
 80194ea:	f008 fabc 	bl	8021a66 <__cxa_guard_acquire>
 80194ee:	b138      	cbz	r0, 8019500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80194f0:	4620      	mov	r0, r4
 80194f2:	f008 fac4 	bl	8021a7e <__cxa_guard_release>
 80194f6:	4a06      	ldr	r2, [pc, #24]	@ (8019510 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80194f8:	4909      	ldr	r1, [pc, #36]	@ (8019520 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80194fa:	480a      	ldr	r0, [pc, #40]	@ (8019524 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80194fc:	f008 faac 	bl	8021a58 <__aeabi_atexit>
 8019500:	4b05      	ldr	r3, [pc, #20]	@ (8019518 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019502:	656b      	str	r3, [r5, #84]	@ 0x54
 8019504:	4b07      	ldr	r3, [pc, #28]	@ (8019524 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019506:	65ab      	str	r3, [r5, #88]	@ 0x58
 8019508:	bd38      	pop	{r3, r4, r5, pc}
 801950a:	bf00      	nop
 801950c:	20014100 	.word	0x20014100
 8019510:	20000000 	.word	0x20000000
 8019514:	080152a9 	.word	0x080152a9
 8019518:	20000208 	.word	0x20000208
 801951c:	20014104 	.word	0x20014104
 8019520:	080152a7 	.word	0x080152a7
 8019524:	2000020c 	.word	0x2000020c

08019528 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019528:	b538      	push	{r3, r4, r5, lr}
 801952a:	4c15      	ldr	r4, [pc, #84]	@ (8019580 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801952c:	7823      	ldrb	r3, [r4, #0]
 801952e:	f3bf 8f5b 	dmb	ish
 8019532:	07da      	lsls	r2, r3, #31
 8019534:	4605      	mov	r5, r0
 8019536:	d40b      	bmi.n	8019550 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019538:	4620      	mov	r0, r4
 801953a:	f008 fa94 	bl	8021a66 <__cxa_guard_acquire>
 801953e:	b138      	cbz	r0, 8019550 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019540:	4620      	mov	r0, r4
 8019542:	f008 fa9c 	bl	8021a7e <__cxa_guard_release>
 8019546:	4a0f      	ldr	r2, [pc, #60]	@ (8019584 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019548:	490f      	ldr	r1, [pc, #60]	@ (8019588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801954a:	4810      	ldr	r0, [pc, #64]	@ (801958c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801954c:	f008 fa84 	bl	8021a58 <__aeabi_atexit>
 8019550:	4c0f      	ldr	r4, [pc, #60]	@ (8019590 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019552:	7823      	ldrb	r3, [r4, #0]
 8019554:	f3bf 8f5b 	dmb	ish
 8019558:	07db      	lsls	r3, r3, #31
 801955a:	d40b      	bmi.n	8019574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801955c:	4620      	mov	r0, r4
 801955e:	f008 fa82 	bl	8021a66 <__cxa_guard_acquire>
 8019562:	b138      	cbz	r0, 8019574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019564:	4620      	mov	r0, r4
 8019566:	f008 fa8a 	bl	8021a7e <__cxa_guard_release>
 801956a:	4a06      	ldr	r2, [pc, #24]	@ (8019584 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801956c:	4909      	ldr	r1, [pc, #36]	@ (8019594 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801956e:	480a      	ldr	r0, [pc, #40]	@ (8019598 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019570:	f008 fa72 	bl	8021a58 <__aeabi_atexit>
 8019574:	4b05      	ldr	r3, [pc, #20]	@ (801958c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019576:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8019578:	4b07      	ldr	r3, [pc, #28]	@ (8019598 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801957a:	652b      	str	r3, [r5, #80]	@ 0x50
 801957c:	bd38      	pop	{r3, r4, r5, pc}
 801957e:	bf00      	nop
 8019580:	20014108 	.word	0x20014108
 8019584:	20000000 	.word	0x20000000
 8019588:	080152ad 	.word	0x080152ad
 801958c:	20000210 	.word	0x20000210
 8019590:	2001410c 	.word	0x2001410c
 8019594:	080152ab 	.word	0x080152ab
 8019598:	20000214 	.word	0x20000214

0801959c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801959c:	b538      	push	{r3, r4, r5, lr}
 801959e:	4c15      	ldr	r4, [pc, #84]	@ (80195f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80195a0:	7823      	ldrb	r3, [r4, #0]
 80195a2:	f3bf 8f5b 	dmb	ish
 80195a6:	07da      	lsls	r2, r3, #31
 80195a8:	4605      	mov	r5, r0
 80195aa:	d40b      	bmi.n	80195c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80195ac:	4620      	mov	r0, r4
 80195ae:	f008 fa5a 	bl	8021a66 <__cxa_guard_acquire>
 80195b2:	b138      	cbz	r0, 80195c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80195b4:	4620      	mov	r0, r4
 80195b6:	f008 fa62 	bl	8021a7e <__cxa_guard_release>
 80195ba:	4a0f      	ldr	r2, [pc, #60]	@ (80195f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80195bc:	490f      	ldr	r1, [pc, #60]	@ (80195fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80195be:	4810      	ldr	r0, [pc, #64]	@ (8019600 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80195c0:	f008 fa4a 	bl	8021a58 <__aeabi_atexit>
 80195c4:	4c0f      	ldr	r4, [pc, #60]	@ (8019604 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80195c6:	7823      	ldrb	r3, [r4, #0]
 80195c8:	f3bf 8f5b 	dmb	ish
 80195cc:	07db      	lsls	r3, r3, #31
 80195ce:	d40b      	bmi.n	80195e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80195d0:	4620      	mov	r0, r4
 80195d2:	f008 fa48 	bl	8021a66 <__cxa_guard_acquire>
 80195d6:	b138      	cbz	r0, 80195e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80195d8:	4620      	mov	r0, r4
 80195da:	f008 fa50 	bl	8021a7e <__cxa_guard_release>
 80195de:	4a06      	ldr	r2, [pc, #24]	@ (80195f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80195e0:	4909      	ldr	r1, [pc, #36]	@ (8019608 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80195e2:	480a      	ldr	r0, [pc, #40]	@ (801960c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80195e4:	f008 fa38 	bl	8021a58 <__aeabi_atexit>
 80195e8:	4b05      	ldr	r3, [pc, #20]	@ (8019600 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80195ea:	646b      	str	r3, [r5, #68]	@ 0x44
 80195ec:	4b07      	ldr	r3, [pc, #28]	@ (801960c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80195ee:	64ab      	str	r3, [r5, #72]	@ 0x48
 80195f0:	bd38      	pop	{r3, r4, r5, pc}
 80195f2:	bf00      	nop
 80195f4:	200140d0 	.word	0x200140d0
 80195f8:	20000000 	.word	0x20000000
 80195fc:	080152b1 	.word	0x080152b1
 8019600:	200001d8 	.word	0x200001d8
 8019604:	200140d4 	.word	0x200140d4
 8019608:	080152af 	.word	0x080152af
 801960c:	200001dc 	.word	0x200001dc

08019610 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8019610:	b538      	push	{r3, r4, r5, lr}
 8019612:	4c15      	ldr	r4, [pc, #84]	@ (8019668 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8019614:	7823      	ldrb	r3, [r4, #0]
 8019616:	f3bf 8f5b 	dmb	ish
 801961a:	07da      	lsls	r2, r3, #31
 801961c:	4605      	mov	r5, r0
 801961e:	d40b      	bmi.n	8019638 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019620:	4620      	mov	r0, r4
 8019622:	f008 fa20 	bl	8021a66 <__cxa_guard_acquire>
 8019626:	b138      	cbz	r0, 8019638 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019628:	4620      	mov	r0, r4
 801962a:	f008 fa28 	bl	8021a7e <__cxa_guard_release>
 801962e:	4a0f      	ldr	r2, [pc, #60]	@ (801966c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019630:	490f      	ldr	r1, [pc, #60]	@ (8019670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019632:	4810      	ldr	r0, [pc, #64]	@ (8019674 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019634:	f008 fa10 	bl	8021a58 <__aeabi_atexit>
 8019638:	4c0f      	ldr	r4, [pc, #60]	@ (8019678 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801963a:	7823      	ldrb	r3, [r4, #0]
 801963c:	f3bf 8f5b 	dmb	ish
 8019640:	07db      	lsls	r3, r3, #31
 8019642:	d40b      	bmi.n	801965c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019644:	4620      	mov	r0, r4
 8019646:	f008 fa0e 	bl	8021a66 <__cxa_guard_acquire>
 801964a:	b138      	cbz	r0, 801965c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801964c:	4620      	mov	r0, r4
 801964e:	f008 fa16 	bl	8021a7e <__cxa_guard_release>
 8019652:	4a06      	ldr	r2, [pc, #24]	@ (801966c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019654:	4909      	ldr	r1, [pc, #36]	@ (801967c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019656:	480a      	ldr	r0, [pc, #40]	@ (8019680 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019658:	f008 f9fe 	bl	8021a58 <__aeabi_atexit>
 801965c:	4b05      	ldr	r3, [pc, #20]	@ (8019674 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801965e:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8019660:	4b07      	ldr	r3, [pc, #28]	@ (8019680 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019662:	642b      	str	r3, [r5, #64]	@ 0x40
 8019664:	bd38      	pop	{r3, r4, r5, pc}
 8019666:	bf00      	nop
 8019668:	200140f0 	.word	0x200140f0
 801966c:	20000000 	.word	0x20000000
 8019670:	080152b5 	.word	0x080152b5
 8019674:	200001f8 	.word	0x200001f8
 8019678:	200140f4 	.word	0x200140f4
 801967c:	080152b3 	.word	0x080152b3
 8019680:	200001fc 	.word	0x200001fc

08019684 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019684:	b510      	push	{r4, lr}
 8019686:	4604      	mov	r4, r0
 8019688:	f7ff ff14 	bl	80194b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801968c:	4620      	mov	r0, r4
 801968e:	f7ff ff85 	bl	801959c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019692:	4620      	mov	r0, r4
 8019694:	f7ff ff48 	bl	8019528 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019698:	4620      	mov	r0, r4
 801969a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801969e:	f7ff bfb7 	b.w	8019610 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080196a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80196a4:	b538      	push	{r3, r4, r5, lr}
 80196a6:	4c15      	ldr	r4, [pc, #84]	@ (80196fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80196a8:	7823      	ldrb	r3, [r4, #0]
 80196aa:	f3bf 8f5b 	dmb	ish
 80196ae:	07da      	lsls	r2, r3, #31
 80196b0:	4605      	mov	r5, r0
 80196b2:	d40b      	bmi.n	80196cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80196b4:	4620      	mov	r0, r4
 80196b6:	f008 f9d6 	bl	8021a66 <__cxa_guard_acquire>
 80196ba:	b138      	cbz	r0, 80196cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80196bc:	4620      	mov	r0, r4
 80196be:	f008 f9de 	bl	8021a7e <__cxa_guard_release>
 80196c2:	4a0f      	ldr	r2, [pc, #60]	@ (8019700 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80196c4:	490f      	ldr	r1, [pc, #60]	@ (8019704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80196c6:	4810      	ldr	r0, [pc, #64]	@ (8019708 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80196c8:	f008 f9c6 	bl	8021a58 <__aeabi_atexit>
 80196cc:	4c0f      	ldr	r4, [pc, #60]	@ (801970c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80196ce:	7823      	ldrb	r3, [r4, #0]
 80196d0:	f3bf 8f5b 	dmb	ish
 80196d4:	07db      	lsls	r3, r3, #31
 80196d6:	d40b      	bmi.n	80196f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80196d8:	4620      	mov	r0, r4
 80196da:	f008 f9c4 	bl	8021a66 <__cxa_guard_acquire>
 80196de:	b138      	cbz	r0, 80196f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80196e0:	4620      	mov	r0, r4
 80196e2:	f008 f9cc 	bl	8021a7e <__cxa_guard_release>
 80196e6:	4a06      	ldr	r2, [pc, #24]	@ (8019700 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80196e8:	4909      	ldr	r1, [pc, #36]	@ (8019710 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80196ea:	480a      	ldr	r0, [pc, #40]	@ (8019714 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80196ec:	f008 f9b4 	bl	8021a58 <__aeabi_atexit>
 80196f0:	4b05      	ldr	r3, [pc, #20]	@ (8019708 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80196f2:	666b      	str	r3, [r5, #100]	@ 0x64
 80196f4:	4b07      	ldr	r3, [pc, #28]	@ (8019714 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80196f6:	66ab      	str	r3, [r5, #104]	@ 0x68
 80196f8:	bd38      	pop	{r3, r4, r5, pc}
 80196fa:	bf00      	nop
 80196fc:	200140d8 	.word	0x200140d8
 8019700:	20000000 	.word	0x20000000
 8019704:	080152a1 	.word	0x080152a1
 8019708:	200001e0 	.word	0x200001e0
 801970c:	200140dc 	.word	0x200140dc
 8019710:	0801529f 	.word	0x0801529f
 8019714:	200001e4 	.word	0x200001e4

08019718 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019718:	b538      	push	{r3, r4, r5, lr}
 801971a:	4c15      	ldr	r4, [pc, #84]	@ (8019770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801971c:	7823      	ldrb	r3, [r4, #0]
 801971e:	f3bf 8f5b 	dmb	ish
 8019722:	07da      	lsls	r2, r3, #31
 8019724:	4605      	mov	r5, r0
 8019726:	d40b      	bmi.n	8019740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019728:	4620      	mov	r0, r4
 801972a:	f008 f99c 	bl	8021a66 <__cxa_guard_acquire>
 801972e:	b138      	cbz	r0, 8019740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019730:	4620      	mov	r0, r4
 8019732:	f008 f9a4 	bl	8021a7e <__cxa_guard_release>
 8019736:	4a0f      	ldr	r2, [pc, #60]	@ (8019774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019738:	490f      	ldr	r1, [pc, #60]	@ (8019778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801973a:	4810      	ldr	r0, [pc, #64]	@ (801977c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801973c:	f008 f98c 	bl	8021a58 <__aeabi_atexit>
 8019740:	4c0f      	ldr	r4, [pc, #60]	@ (8019780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019742:	7823      	ldrb	r3, [r4, #0]
 8019744:	f3bf 8f5b 	dmb	ish
 8019748:	07db      	lsls	r3, r3, #31
 801974a:	d40b      	bmi.n	8019764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801974c:	4620      	mov	r0, r4
 801974e:	f008 f98a 	bl	8021a66 <__cxa_guard_acquire>
 8019752:	b138      	cbz	r0, 8019764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019754:	4620      	mov	r0, r4
 8019756:	f008 f992 	bl	8021a7e <__cxa_guard_release>
 801975a:	4a06      	ldr	r2, [pc, #24]	@ (8019774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801975c:	4909      	ldr	r1, [pc, #36]	@ (8019784 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801975e:	480a      	ldr	r0, [pc, #40]	@ (8019788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019760:	f008 f97a 	bl	8021a58 <__aeabi_atexit>
 8019764:	4b05      	ldr	r3, [pc, #20]	@ (801977c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019766:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8019768:	4b07      	ldr	r3, [pc, #28]	@ (8019788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801976a:	662b      	str	r3, [r5, #96]	@ 0x60
 801976c:	bd38      	pop	{r3, r4, r5, pc}
 801976e:	bf00      	nop
 8019770:	200140b0 	.word	0x200140b0
 8019774:	20000000 	.word	0x20000000
 8019778:	080152a5 	.word	0x080152a5
 801977c:	200001b8 	.word	0x200001b8
 8019780:	200140b4 	.word	0x200140b4
 8019784:	080152a3 	.word	0x080152a3
 8019788:	200001bc 	.word	0x200001bc

0801978c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801978c:	b510      	push	{r4, lr}
 801978e:	4604      	mov	r4, r0
 8019790:	f7ff ff88 	bl	80196a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019794:	4620      	mov	r0, r4
 8019796:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801979a:	f7ff bfbd 	b.w	8019718 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080197a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80197a0:	b538      	push	{r3, r4, r5, lr}
 80197a2:	4c15      	ldr	r4, [pc, #84]	@ (80197f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80197a4:	7823      	ldrb	r3, [r4, #0]
 80197a6:	f3bf 8f5b 	dmb	ish
 80197aa:	07da      	lsls	r2, r3, #31
 80197ac:	4605      	mov	r5, r0
 80197ae:	d40b      	bmi.n	80197c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80197b0:	4620      	mov	r0, r4
 80197b2:	f008 f958 	bl	8021a66 <__cxa_guard_acquire>
 80197b6:	b138      	cbz	r0, 80197c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80197b8:	4620      	mov	r0, r4
 80197ba:	f008 f960 	bl	8021a7e <__cxa_guard_release>
 80197be:	4a0f      	ldr	r2, [pc, #60]	@ (80197fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80197c0:	490f      	ldr	r1, [pc, #60]	@ (8019800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80197c2:	4810      	ldr	r0, [pc, #64]	@ (8019804 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80197c4:	f008 f948 	bl	8021a58 <__aeabi_atexit>
 80197c8:	4c0f      	ldr	r4, [pc, #60]	@ (8019808 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80197ca:	7823      	ldrb	r3, [r4, #0]
 80197cc:	f3bf 8f5b 	dmb	ish
 80197d0:	07db      	lsls	r3, r3, #31
 80197d2:	d40b      	bmi.n	80197ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80197d4:	4620      	mov	r0, r4
 80197d6:	f008 f946 	bl	8021a66 <__cxa_guard_acquire>
 80197da:	b138      	cbz	r0, 80197ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80197dc:	4620      	mov	r0, r4
 80197de:	f008 f94e 	bl	8021a7e <__cxa_guard_release>
 80197e2:	4a06      	ldr	r2, [pc, #24]	@ (80197fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80197e4:	4909      	ldr	r1, [pc, #36]	@ (801980c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80197e6:	480a      	ldr	r0, [pc, #40]	@ (8019810 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80197e8:	f008 f936 	bl	8021a58 <__aeabi_atexit>
 80197ec:	4b05      	ldr	r3, [pc, #20]	@ (8019804 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80197ee:	676b      	str	r3, [r5, #116]	@ 0x74
 80197f0:	4b07      	ldr	r3, [pc, #28]	@ (8019810 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80197f2:	67ab      	str	r3, [r5, #120]	@ 0x78
 80197f4:	bd38      	pop	{r3, r4, r5, pc}
 80197f6:	bf00      	nop
 80197f8:	200140a8 	.word	0x200140a8
 80197fc:	20000000 	.word	0x20000000
 8019800:	08015299 	.word	0x08015299
 8019804:	200001b0 	.word	0x200001b0
 8019808:	200140ac 	.word	0x200140ac
 801980c:	08015297 	.word	0x08015297
 8019810:	200001b4 	.word	0x200001b4

08019814 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019814:	b538      	push	{r3, r4, r5, lr}
 8019816:	4c15      	ldr	r4, [pc, #84]	@ (801986c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019818:	7823      	ldrb	r3, [r4, #0]
 801981a:	f3bf 8f5b 	dmb	ish
 801981e:	07da      	lsls	r2, r3, #31
 8019820:	4605      	mov	r5, r0
 8019822:	d40b      	bmi.n	801983c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019824:	4620      	mov	r0, r4
 8019826:	f008 f91e 	bl	8021a66 <__cxa_guard_acquire>
 801982a:	b138      	cbz	r0, 801983c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801982c:	4620      	mov	r0, r4
 801982e:	f008 f926 	bl	8021a7e <__cxa_guard_release>
 8019832:	4a0f      	ldr	r2, [pc, #60]	@ (8019870 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019834:	490f      	ldr	r1, [pc, #60]	@ (8019874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019836:	4810      	ldr	r0, [pc, #64]	@ (8019878 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019838:	f008 f90e 	bl	8021a58 <__aeabi_atexit>
 801983c:	4c0f      	ldr	r4, [pc, #60]	@ (801987c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801983e:	7823      	ldrb	r3, [r4, #0]
 8019840:	f3bf 8f5b 	dmb	ish
 8019844:	07db      	lsls	r3, r3, #31
 8019846:	d40b      	bmi.n	8019860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019848:	4620      	mov	r0, r4
 801984a:	f008 f90c 	bl	8021a66 <__cxa_guard_acquire>
 801984e:	b138      	cbz	r0, 8019860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019850:	4620      	mov	r0, r4
 8019852:	f008 f914 	bl	8021a7e <__cxa_guard_release>
 8019856:	4a06      	ldr	r2, [pc, #24]	@ (8019870 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019858:	4909      	ldr	r1, [pc, #36]	@ (8019880 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801985a:	480a      	ldr	r0, [pc, #40]	@ (8019884 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801985c:	f008 f8fc 	bl	8021a58 <__aeabi_atexit>
 8019860:	4b05      	ldr	r3, [pc, #20]	@ (8019878 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019862:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8019864:	4b07      	ldr	r3, [pc, #28]	@ (8019884 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019866:	672b      	str	r3, [r5, #112]	@ 0x70
 8019868:	bd38      	pop	{r3, r4, r5, pc}
 801986a:	bf00      	nop
 801986c:	200140a0 	.word	0x200140a0
 8019870:	20000000 	.word	0x20000000
 8019874:	0801529d 	.word	0x0801529d
 8019878:	200001a8 	.word	0x200001a8
 801987c:	200140a4 	.word	0x200140a4
 8019880:	0801529b 	.word	0x0801529b
 8019884:	200001ac 	.word	0x200001ac

08019888 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019888:	b510      	push	{r4, lr}
 801988a:	4604      	mov	r4, r0
 801988c:	f7ff ff88 	bl	80197a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019890:	4620      	mov	r0, r4
 8019892:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019896:	f7ff bfbd 	b.w	8019814 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801989a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801989a:	b510      	push	{r4, lr}
 801989c:	4604      	mov	r4, r0
 801989e:	f7ff fff3 	bl	8019888 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80198a2:	4620      	mov	r0, r4
 80198a4:	f7ff ff72 	bl	801978c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80198a8:	4620      	mov	r0, r4
 80198aa:	f7ff fdf9 	bl	80194a0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80198ae:	4620      	mov	r0, r4
 80198b0:	f7ff fcfa 	bl	80192a8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80198b4:	4620      	mov	r0, r4
 80198b6:	f7ff fd75 	bl	80193a4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80198ba:	4620      	mov	r0, r4
 80198bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80198c0:	f7ff bee0 	b.w	8019684 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080198c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80198c4:	b538      	push	{r3, r4, r5, lr}
 80198c6:	4c0b      	ldr	r4, [pc, #44]	@ (80198f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80198c8:	7823      	ldrb	r3, [r4, #0]
 80198ca:	f3bf 8f5b 	dmb	ish
 80198ce:	07db      	lsls	r3, r3, #31
 80198d0:	4605      	mov	r5, r0
 80198d2:	d40b      	bmi.n	80198ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80198d4:	4620      	mov	r0, r4
 80198d6:	f008 f8c6 	bl	8021a66 <__cxa_guard_acquire>
 80198da:	b138      	cbz	r0, 80198ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80198dc:	4620      	mov	r0, r4
 80198de:	f008 f8ce 	bl	8021a7e <__cxa_guard_release>
 80198e2:	4a05      	ldr	r2, [pc, #20]	@ (80198f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80198e4:	4905      	ldr	r1, [pc, #20]	@ (80198fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80198e6:	4806      	ldr	r0, [pc, #24]	@ (8019900 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80198e8:	f008 f8b6 	bl	8021a58 <__aeabi_atexit>
 80198ec:	4b04      	ldr	r3, [pc, #16]	@ (8019900 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80198ee:	67eb      	str	r3, [r5, #124]	@ 0x7c
 80198f0:	bd38      	pop	{r3, r4, r5, pc}
 80198f2:	bf00      	nop
 80198f4:	20014094 	.word	0x20014094
 80198f8:	20000000 	.word	0x20000000
 80198fc:	08015295 	.word	0x08015295
 8019900:	200001a0 	.word	0x200001a0

08019904 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8019904:	b538      	push	{r3, r4, r5, lr}
 8019906:	4c0b      	ldr	r4, [pc, #44]	@ (8019934 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8019908:	7823      	ldrb	r3, [r4, #0]
 801990a:	f3bf 8f5b 	dmb	ish
 801990e:	07db      	lsls	r3, r3, #31
 8019910:	4605      	mov	r5, r0
 8019912:	d40b      	bmi.n	801992c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019914:	4620      	mov	r0, r4
 8019916:	f008 f8a6 	bl	8021a66 <__cxa_guard_acquire>
 801991a:	b138      	cbz	r0, 801992c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801991c:	4620      	mov	r0, r4
 801991e:	f008 f8ae 	bl	8021a7e <__cxa_guard_release>
 8019922:	4a05      	ldr	r2, [pc, #20]	@ (8019938 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8019924:	4905      	ldr	r1, [pc, #20]	@ (801993c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8019926:	4806      	ldr	r0, [pc, #24]	@ (8019940 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019928:	f008 f896 	bl	8021a58 <__aeabi_atexit>
 801992c:	4b04      	ldr	r3, [pc, #16]	@ (8019940 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801992e:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 8019932:	bd38      	pop	{r3, r4, r5, pc}
 8019934:	20014098 	.word	0x20014098
 8019938:	20000000 	.word	0x20000000
 801993c:	08015293 	.word	0x08015293
 8019940:	200001a4 	.word	0x200001a4

08019944 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8019944:	b570      	push	{r4, r5, r6, lr}
 8019946:	4d0d      	ldr	r5, [pc, #52]	@ (801997c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8019948:	4c0d      	ldr	r4, [pc, #52]	@ (8019980 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801994a:	782b      	ldrb	r3, [r5, #0]
 801994c:	f3bf 8f5b 	dmb	ish
 8019950:	f013 0f01 	tst.w	r3, #1
 8019954:	4606      	mov	r6, r0
 8019956:	d10d      	bne.n	8019974 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019958:	4628      	mov	r0, r5
 801995a:	f008 f884 	bl	8021a66 <__cxa_guard_acquire>
 801995e:	b148      	cbz	r0, 8019974 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019960:	4b08      	ldr	r3, [pc, #32]	@ (8019984 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8019962:	6023      	str	r3, [r4, #0]
 8019964:	4628      	mov	r0, r5
 8019966:	f008 f88a 	bl	8021a7e <__cxa_guard_release>
 801996a:	4a07      	ldr	r2, [pc, #28]	@ (8019988 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801996c:	4907      	ldr	r1, [pc, #28]	@ (801998c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801996e:	4620      	mov	r0, r4
 8019970:	f008 f872 	bl	8021a58 <__aeabi_atexit>
 8019974:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8019978:	bd70      	pop	{r4, r5, r6, pc}
 801997a:	bf00      	nop
 801997c:	2001409c 	.word	0x2001409c
 8019980:	20014214 	.word	0x20014214
 8019984:	0802538c 	.word	0x0802538c
 8019988:	20000000 	.word	0x20000000
 801998c:	08015291 	.word	0x08015291

08019990 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8019990:	b510      	push	{r4, lr}
 8019992:	4604      	mov	r4, r0
 8019994:	f7ff ff96 	bl	80198c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8019998:	4620      	mov	r0, r4
 801999a:	f7ff ffb3 	bl	8019904 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801999e:	4620      	mov	r0, r4
 80199a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80199a4:	f7ff bfce 	b.w	8019944 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080199a8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 80199a8:	b570      	push	{r4, r5, r6, lr}
 80199aa:	4d0d      	ldr	r5, [pc, #52]	@ (80199e0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 80199ac:	4c0d      	ldr	r4, [pc, #52]	@ (80199e4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 80199ae:	782b      	ldrb	r3, [r5, #0]
 80199b0:	f3bf 8f5b 	dmb	ish
 80199b4:	f013 0f01 	tst.w	r3, #1
 80199b8:	4606      	mov	r6, r0
 80199ba:	d10d      	bne.n	80199d8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 80199bc:	4628      	mov	r0, r5
 80199be:	f008 f852 	bl	8021a66 <__cxa_guard_acquire>
 80199c2:	b148      	cbz	r0, 80199d8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 80199c4:	4b08      	ldr	r3, [pc, #32]	@ (80199e8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 80199c6:	6023      	str	r3, [r4, #0]
 80199c8:	4628      	mov	r0, r5
 80199ca:	f008 f858 	bl	8021a7e <__cxa_guard_release>
 80199ce:	4a07      	ldr	r2, [pc, #28]	@ (80199ec <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 80199d0:	4907      	ldr	r1, [pc, #28]	@ (80199f0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 80199d2:	4620      	mov	r0, r4
 80199d4:	f008 f840 	bl	8021a58 <__aeabi_atexit>
 80199d8:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 80199dc:	bd70      	pop	{r4, r5, r6, pc}
 80199de:	bf00      	nop
 80199e0:	20014090 	.word	0x20014090
 80199e4:	20014110 	.word	0x20014110
 80199e8:	080253a8 	.word	0x080253a8
 80199ec:	20000000 	.word	0x20000000
 80199f0:	0801528f 	.word	0x0801528f

080199f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80199f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199f8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 80199fc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8019a00:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8019a04:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8019a08:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8019a0c:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8019a10:	8808      	ldrh	r0, [r1, #0]
 8019a12:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019a16:	2d00      	cmp	r5, #0
 8019a18:	eb02 0a0c 	add.w	sl, r2, ip
 8019a1c:	f2c0 80b0 	blt.w	8019b80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019a20:	45ab      	cmp	fp, r5
 8019a22:	f340 80ad 	ble.w	8019b80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019a26:	2c00      	cmp	r4, #0
 8019a28:	f2c0 80a8 	blt.w	8019b7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019a2c:	45a6      	cmp	lr, r4
 8019a2e:	f340 80a5 	ble.w	8019b7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019a32:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019a36:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019a3a:	1c62      	adds	r2, r4, #1
 8019a3c:	f100 80a3 	bmi.w	8019b86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019a40:	4596      	cmp	lr, r2
 8019a42:	f340 80a0 	ble.w	8019b86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019a46:	f1b9 0f00 	cmp.w	r9, #0
 8019a4a:	f000 809c 	beq.w	8019b86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019a4e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019a52:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019a56:	3501      	adds	r5, #1
 8019a58:	f100 8099 	bmi.w	8019b8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019a5c:	45ab      	cmp	fp, r5
 8019a5e:	f340 8096 	ble.w	8019b8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019a62:	2f00      	cmp	r7, #0
 8019a64:	f000 8093 	beq.w	8019b8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019a68:	2c00      	cmp	r4, #0
 8019a6a:	f2c0 808e 	blt.w	8019b8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019a6e:	45a6      	cmp	lr, r4
 8019a70:	f340 808b 	ble.w	8019b8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019a74:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019a78:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019a7c:	3401      	adds	r4, #1
 8019a7e:	f100 8089 	bmi.w	8019b94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019a82:	45a6      	cmp	lr, r4
 8019a84:	f340 8086 	ble.w	8019b94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019a88:	f1b9 0f00 	cmp.w	r9, #0
 8019a8c:	f000 8082 	beq.w	8019b94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019a90:	44d6      	add	lr, sl
 8019a92:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019a96:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019a9a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019a9e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019aa2:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8019aa6:	fb19 fe07 	smulbb	lr, r9, r7
 8019aaa:	ea44 0808 	orr.w	r8, r4, r8
 8019aae:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019ab2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019ab6:	f1c7 0210 	rsb	r2, r7, #16
 8019aba:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019abe:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019ac2:	ea44 0c0c 	orr.w	ip, r4, ip
 8019ac6:	eba2 0209 	sub.w	r2, r2, r9
 8019aca:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019ace:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019ad2:	fb04 f40c 	mul.w	r4, r4, ip
 8019ad6:	fb02 4808 	mla	r8, r2, r8, r4
 8019ada:	041a      	lsls	r2, r3, #16
 8019adc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019ae0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019ae4:	4313      	orrs	r3, r2
 8019ae6:	042a      	lsls	r2, r5, #16
 8019ae8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019aec:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019af0:	fb0e 8303 	mla	r3, lr, r3, r8
 8019af4:	432a      	orrs	r2, r5
 8019af6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019afa:	fb07 3202 	mla	r2, r7, r2, r3
 8019afe:	0d53      	lsrs	r3, r2, #21
 8019b00:	0952      	lsrs	r2, r2, #5
 8019b02:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019b06:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019b0a:	431a      	orrs	r2, r3
 8019b0c:	b293      	uxth	r3, r2
 8019b0e:	b2b4      	uxth	r4, r6
 8019b10:	1202      	asrs	r2, r0, #8
 8019b12:	43f6      	mvns	r6, r6
 8019b14:	b2f6      	uxtb	r6, r6
 8019b16:	121d      	asrs	r5, r3, #8
 8019b18:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019b1c:	fb12 f206 	smulbb	r2, r2, r6
 8019b20:	10c7      	asrs	r7, r0, #3
 8019b22:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019b26:	00c0      	lsls	r0, r0, #3
 8019b28:	fb05 2504 	mla	r5, r5, r4, r2
 8019b2c:	b2c0      	uxtb	r0, r0
 8019b2e:	10da      	asrs	r2, r3, #3
 8019b30:	00db      	lsls	r3, r3, #3
 8019b32:	b2db      	uxtb	r3, r3
 8019b34:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019b38:	fb10 f006 	smulbb	r0, r0, r6
 8019b3c:	b2ad      	uxth	r5, r5
 8019b3e:	fb03 0004 	mla	r0, r3, r4, r0
 8019b42:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019b46:	fb17 f706 	smulbb	r7, r7, r6
 8019b4a:	b280      	uxth	r0, r0
 8019b4c:	1c6b      	adds	r3, r5, #1
 8019b4e:	fb02 7204 	mla	r2, r2, r4, r7
 8019b52:	b292      	uxth	r2, r2
 8019b54:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019b58:	1c43      	adds	r3, r0, #1
 8019b5a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019b5e:	1c50      	adds	r0, r2, #1
 8019b60:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019b64:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019b68:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019b6c:	0952      	lsrs	r2, r2, #5
 8019b6e:	432b      	orrs	r3, r5
 8019b70:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019b74:	4313      	orrs	r3, r2
 8019b76:	800b      	strh	r3, [r1, #0]
 8019b78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b7c:	4680      	mov	r8, r0
 8019b7e:	e75c      	b.n	8019a3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019b80:	4684      	mov	ip, r0
 8019b82:	4680      	mov	r8, r0
 8019b84:	e767      	b.n	8019a56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019b86:	4684      	mov	ip, r0
 8019b88:	e765      	b.n	8019a56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019b8a:	4605      	mov	r5, r0
 8019b8c:	e776      	b.n	8019a7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019b8e:	4603      	mov	r3, r0
 8019b90:	4605      	mov	r5, r0
 8019b92:	e782      	b.n	8019a9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019b94:	4603      	mov	r3, r0
 8019b96:	e780      	b.n	8019a9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019b98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b9c:	b099      	sub	sp, #100	@ 0x64
 8019b9e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8019ba2:	9215      	str	r2, [sp, #84]	@ 0x54
 8019ba4:	9309      	str	r3, [sp, #36]	@ 0x24
 8019ba6:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8019ba8:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8019bac:	930d      	str	r3, [sp, #52]	@ 0x34
 8019bae:	910c      	str	r1, [sp, #48]	@ 0x30
 8019bb0:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8019bb4:	9016      	str	r0, [sp, #88]	@ 0x58
 8019bb6:	6850      	ldr	r0, [r2, #4]
 8019bb8:	6812      	ldr	r2, [r2, #0]
 8019bba:	fb00 1303 	mla	r3, r0, r3, r1
 8019bbe:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019bc2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019bc4:	681b      	ldr	r3, [r3, #0]
 8019bc6:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019bc8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019bca:	685e      	ldr	r6, [r3, #4]
 8019bcc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019bce:	43db      	mvns	r3, r3
 8019bd0:	b2db      	uxtb	r3, r3
 8019bd2:	3604      	adds	r6, #4
 8019bd4:	930a      	str	r3, [sp, #40]	@ 0x28
 8019bd6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019bd8:	2b00      	cmp	r3, #0
 8019bda:	dc03      	bgt.n	8019be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019bdc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8019bde:	2b00      	cmp	r3, #0
 8019be0:	f340 8225 	ble.w	801a02e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019be4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019be6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019bea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019bee:	1e48      	subs	r0, r1, #1
 8019bf0:	1e57      	subs	r7, r2, #1
 8019bf2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019bf4:	2b00      	cmp	r3, #0
 8019bf6:	f340 80e3 	ble.w	8019dc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019bfa:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8019bfe:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019c02:	d406      	bmi.n	8019c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019c04:	4584      	cmp	ip, r0
 8019c06:	da04      	bge.n	8019c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019c08:	2b00      	cmp	r3, #0
 8019c0a:	db02      	blt.n	8019c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019c0c:	42bb      	cmp	r3, r7
 8019c0e:	f2c0 80d8 	blt.w	8019dc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019c12:	f11c 0c01 	adds.w	ip, ip, #1
 8019c16:	f100 80c9 	bmi.w	8019dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c1a:	4561      	cmp	r1, ip
 8019c1c:	f2c0 80c6 	blt.w	8019dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c20:	3301      	adds	r3, #1
 8019c22:	f100 80c3 	bmi.w	8019dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c26:	429a      	cmp	r2, r3
 8019c28:	f2c0 80c0 	blt.w	8019dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c2c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019c30:	4647      	mov	r7, r8
 8019c32:	f1bb 0f00 	cmp.w	fp, #0
 8019c36:	f340 80e3 	ble.w	8019e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019c3a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8019c3c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019c3e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019c42:	689b      	ldr	r3, [r3, #8]
 8019c44:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019c48:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019c4c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019c50:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019c54:	f100 8121 	bmi.w	8019e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019c58:	f103 39ff 	add.w	r9, r3, #4294967295
 8019c5c:	454a      	cmp	r2, r9
 8019c5e:	f280 811c 	bge.w	8019e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019c62:	f1bc 0f00 	cmp.w	ip, #0
 8019c66:	f2c0 8118 	blt.w	8019e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019c6a:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019c6e:	45cc      	cmp	ip, r9
 8019c70:	f280 8113 	bge.w	8019e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019c74:	b21b      	sxth	r3, r3
 8019c76:	fb0c 2203 	mla	r2, ip, r3, r2
 8019c7a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019c7c:	eb04 0902 	add.w	r9, r4, r2
 8019c80:	5ca2      	ldrb	r2, [r4, r2]
 8019c82:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019c86:	2800      	cmp	r0, #0
 8019c88:	f000 80fe 	beq.w	8019e88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019c8c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019c90:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019c94:	9211      	str	r2, [sp, #68]	@ 0x44
 8019c96:	b151      	cbz	r1, 8019cae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019c98:	eb09 0203 	add.w	r2, r9, r3
 8019c9c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019ca0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019ca4:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019ca6:	7853      	ldrb	r3, [r2, #1]
 8019ca8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019cac:	9312      	str	r3, [sp, #72]	@ 0x48
 8019cae:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019cb0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019cb2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019cb6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019cba:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019cbe:	ea4c 0c03 	orr.w	ip, ip, r3
 8019cc2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8019cc4:	041b      	lsls	r3, r3, #16
 8019cc6:	fb10 f201 	smulbb	r2, r0, r1
 8019cca:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019cce:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019cd2:	10d2      	asrs	r2, r2, #3
 8019cd4:	4323      	orrs	r3, r4
 8019cd6:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019cda:	4353      	muls	r3, r2
 8019cdc:	fb09 330c 	mla	r3, r9, ip, r3
 8019ce0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019ce4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019ce8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019cec:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019cf0:	f1c1 0c10 	rsb	ip, r1, #16
 8019cf4:	ebac 0c00 	sub.w	ip, ip, r0
 8019cf8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019cfc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019d00:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019d02:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019d04:	0418      	lsls	r0, r3, #16
 8019d06:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019d0a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019d0e:	4318      	orrs	r0, r3
 8019d10:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019d14:	fb02 c200 	mla	r2, r2, r0, ip
 8019d18:	0d53      	lsrs	r3, r2, #21
 8019d1a:	0952      	lsrs	r2, r2, #5
 8019d1c:	8838      	ldrh	r0, [r7, #0]
 8019d1e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019d22:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019d26:	431a      	orrs	r2, r3
 8019d28:	b292      	uxth	r2, r2
 8019d2a:	1201      	asrs	r1, r0, #8
 8019d2c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8019d30:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019d34:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019d38:	fb11 f104 	smulbb	r1, r1, r4
 8019d3c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019d40:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019d44:	00c0      	lsls	r0, r0, #3
 8019d46:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019d4a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019d4e:	10d1      	asrs	r1, r2, #3
 8019d50:	b2c0      	uxtb	r0, r0
 8019d52:	00d2      	lsls	r2, r2, #3
 8019d54:	b2d2      	uxtb	r2, r2
 8019d56:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019d5a:	fb1e fe04 	smulbb	lr, lr, r4
 8019d5e:	fb10 f004 	smulbb	r0, r0, r4
 8019d62:	fa1f fc8c 	uxth.w	ip, ip
 8019d66:	fb01 e103 	mla	r1, r1, r3, lr
 8019d6a:	fb02 0303 	mla	r3, r2, r3, r0
 8019d6e:	b29a      	uxth	r2, r3
 8019d70:	f10c 0301 	add.w	r3, ip, #1
 8019d74:	b289      	uxth	r1, r1
 8019d76:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019d7a:	1c53      	adds	r3, r2, #1
 8019d7c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019d80:	1c4a      	adds	r2, r1, #1
 8019d82:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019d86:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019d8a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019d8e:	0949      	lsrs	r1, r1, #5
 8019d90:	ea43 030c 	orr.w	r3, r3, ip
 8019d94:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019d98:	430b      	orrs	r3, r1
 8019d9a:	803b      	strh	r3, [r7, #0]
 8019d9c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019d9e:	449a      	add	sl, r3
 8019da0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019da2:	3702      	adds	r7, #2
 8019da4:	441d      	add	r5, r3
 8019da6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019daa:	e742      	b.n	8019c32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019dac:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019dae:	449a      	add	sl, r3
 8019db0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019db2:	441d      	add	r5, r3
 8019db4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019db6:	3b01      	subs	r3, #1
 8019db8:	9309      	str	r3, [sp, #36]	@ 0x24
 8019dba:	f108 0802 	add.w	r8, r8, #2
 8019dbe:	e718      	b.n	8019bf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019dc0:	d023      	beq.n	8019e0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019dc2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019dc4:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8019dc6:	3b01      	subs	r3, #1
 8019dc8:	fb00 a003 	mla	r0, r0, r3, sl
 8019dcc:	1400      	asrs	r0, r0, #16
 8019dce:	f53f af2d 	bmi.w	8019c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019dd2:	3901      	subs	r1, #1
 8019dd4:	4288      	cmp	r0, r1
 8019dd6:	f6bf af29 	bge.w	8019c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019dda:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8019ddc:	fb01 5303 	mla	r3, r1, r3, r5
 8019de0:	141b      	asrs	r3, r3, #16
 8019de2:	f53f af23 	bmi.w	8019c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019de6:	3a01      	subs	r2, #1
 8019de8:	4293      	cmp	r3, r2
 8019dea:	f6bf af1f 	bge.w	8019c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019dee:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8019df2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8019df6:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8019dfa:	f1be 0f00 	cmp.w	lr, #0
 8019dfe:	dc6c      	bgt.n	8019eda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019e00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019e02:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019e06:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8019e0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019e0c:	2b00      	cmp	r3, #0
 8019e0e:	f340 810e 	ble.w	801a02e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019e12:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e16:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019e1a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019e1e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019e20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e24:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e2c:	eef0 6a62 	vmov.f32	s13, s5
 8019e30:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e38:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e3c:	ee16 aa90 	vmov	sl, s13
 8019e40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e44:	eef0 6a43 	vmov.f32	s13, s6
 8019e48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e4c:	ee12 2a90 	vmov	r2, s5
 8019e50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e54:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e58:	ee13 2a10 	vmov	r2, s6
 8019e5c:	9325      	str	r3, [sp, #148]	@ 0x94
 8019e5e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019e60:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e64:	9326      	str	r3, [sp, #152]	@ 0x98
 8019e66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019e68:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019e6a:	3b01      	subs	r3, #1
 8019e6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e70:	930c      	str	r3, [sp, #48]	@ 0x30
 8019e72:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019e74:	bf08      	it	eq
 8019e76:	4613      	moveq	r3, r2
 8019e78:	ee16 5a90 	vmov	r5, s13
 8019e7c:	9309      	str	r3, [sp, #36]	@ 0x24
 8019e7e:	eeb0 3a67 	vmov.f32	s6, s15
 8019e82:	eef0 2a47 	vmov.f32	s5, s14
 8019e86:	e6a6      	b.n	8019bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019e88:	2900      	cmp	r1, #0
 8019e8a:	f43f af10 	beq.w	8019cae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019e8e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019e92:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019e96:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019e98:	e709      	b.n	8019cae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019e9a:	f112 0901 	adds.w	r9, r2, #1
 8019e9e:	f53f af7d 	bmi.w	8019d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019ea2:	454b      	cmp	r3, r9
 8019ea4:	f6ff af7a 	blt.w	8019d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019ea8:	f11c 0901 	adds.w	r9, ip, #1
 8019eac:	f53f af76 	bmi.w	8019d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019eb0:	45ce      	cmp	lr, r9
 8019eb2:	f6ff af73 	blt.w	8019d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019eb6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019eb8:	9202      	str	r2, [sp, #8]
 8019eba:	b21b      	sxth	r3, r3
 8019ebc:	fa0f f28e 	sxth.w	r2, lr
 8019ec0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019ec4:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019ec8:	9201      	str	r2, [sp, #4]
 8019eca:	9300      	str	r3, [sp, #0]
 8019ecc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019ece:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8019ed0:	4633      	mov	r3, r6
 8019ed2:	4639      	mov	r1, r7
 8019ed4:	f7ff fd8e 	bl	80199f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019ed8:	e760      	b.n	8019d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019eda:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019edc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019ede:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019ee2:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019ee6:	1429      	asrs	r1, r5, #16
 8019ee8:	fb03 2101 	mla	r1, r3, r1, r2
 8019eec:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019eee:	440a      	add	r2, r1
 8019ef0:	5c61      	ldrb	r1, [r4, r1]
 8019ef2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019ef6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019efa:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8019efe:	f1bc 0f00 	cmp.w	ip, #0
 8019f02:	f000 808c 	beq.w	801a01e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019f06:	7857      	ldrb	r7, [r2, #1]
 8019f08:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8019f0c:	9413      	str	r4, [sp, #76]	@ 0x4c
 8019f0e:	b140      	cbz	r0, 8019f22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019f10:	18d7      	adds	r7, r2, r3
 8019f12:	5cd3      	ldrb	r3, [r2, r3]
 8019f14:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019f18:	9310      	str	r3, [sp, #64]	@ 0x40
 8019f1a:	787b      	ldrb	r3, [r7, #1]
 8019f1c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019f20:	9314      	str	r3, [sp, #80]	@ 0x50
 8019f22:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019f24:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019f26:	fb1c f200 	smulbb	r2, ip, r0
 8019f2a:	041f      	lsls	r7, r3, #16
 8019f2c:	10d2      	asrs	r2, r2, #3
 8019f2e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019f32:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8019f36:	431f      	orrs	r7, r3
 8019f38:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019f3c:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019f3e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8019f40:	041b      	lsls	r3, r3, #16
 8019f42:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8019f46:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019f4a:	ea43 030b 	orr.w	r3, r3, fp
 8019f4e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8019f50:	4353      	muls	r3, r2
 8019f52:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019f56:	fb04 3707 	mla	r7, r4, r7, r3
 8019f5a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019f5e:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8019f62:	ea43 0b01 	orr.w	fp, r3, r1
 8019f66:	f1c0 0110 	rsb	r1, r0, #16
 8019f6a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019f6c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019f6e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019f72:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019f76:	fb0c 770b 	mla	r7, ip, fp, r7
 8019f7a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019f7e:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8019f82:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019f86:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019f8a:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019f8e:	fb02 770c 	mla	r7, r2, ip, r7
 8019f92:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019f94:	0d79      	lsrs	r1, r7, #21
 8019f96:	097f      	lsrs	r7, r7, #5
 8019f98:	8812      	ldrh	r2, [r2, #0]
 8019f9a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019f9e:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8019fa2:	430f      	orrs	r7, r1
 8019fa4:	b2bb      	uxth	r3, r7
 8019fa6:	1211      	asrs	r1, r2, #8
 8019fa8:	1218      	asrs	r0, r3, #8
 8019faa:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019fae:	fb11 f104 	smulbb	r1, r1, r4
 8019fb2:	10d7      	asrs	r7, r2, #3
 8019fb4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019fb8:	00d2      	lsls	r2, r2, #3
 8019fba:	fb00 1009 	mla	r0, r0, r9, r1
 8019fbe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019fc2:	10d9      	asrs	r1, r3, #3
 8019fc4:	b2d2      	uxtb	r2, r2
 8019fc6:	00db      	lsls	r3, r3, #3
 8019fc8:	fb17 f704 	smulbb	r7, r7, r4
 8019fcc:	fb12 f204 	smulbb	r2, r2, r4
 8019fd0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019fd4:	b2db      	uxtb	r3, r3
 8019fd6:	b280      	uxth	r0, r0
 8019fd8:	fb01 7109 	mla	r1, r1, r9, r7
 8019fdc:	fb03 2309 	mla	r3, r3, r9, r2
 8019fe0:	b29b      	uxth	r3, r3
 8019fe2:	b289      	uxth	r1, r1
 8019fe4:	1c42      	adds	r2, r0, #1
 8019fe6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019fea:	1c4f      	adds	r7, r1, #1
 8019fec:	1c5a      	adds	r2, r3, #1
 8019fee:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019ff2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019ff6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8019ffa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019ffe:	0949      	lsrs	r1, r1, #5
 801a000:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a002:	4310      	orrs	r0, r2
 801a004:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a008:	4308      	orrs	r0, r1
 801a00a:	f823 0b02 	strh.w	r0, [r3], #2
 801a00e:	930e      	str	r3, [sp, #56]	@ 0x38
 801a010:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a012:	449a      	add	sl, r3
 801a014:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a016:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a01a:	441d      	add	r5, r3
 801a01c:	e6ed      	b.n	8019dfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801a01e:	2800      	cmp	r0, #0
 801a020:	f43f af7f 	beq.w	8019f22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a024:	5cd3      	ldrb	r3, [r2, r3]
 801a026:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a02a:	9310      	str	r3, [sp, #64]	@ 0x40
 801a02c:	e779      	b.n	8019f22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a02e:	b019      	add	sp, #100	@ 0x64
 801a030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a034:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a038:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801a03c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801a040:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801a044:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801a048:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801a04c:	8808      	ldrh	r0, [r1, #0]
 801a04e:	fb08 470e 	mla	r7, r8, lr, r4
 801a052:	f1b8 0f00 	cmp.w	r8, #0
 801a056:	eb02 0907 	add.w	r9, r2, r7
 801a05a:	db67      	blt.n	801a12c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a05c:	45c2      	cmp	sl, r8
 801a05e:	dd65      	ble.n	801a12c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a060:	2c00      	cmp	r4, #0
 801a062:	db61      	blt.n	801a128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a064:	45a6      	cmp	lr, r4
 801a066:	dd5f      	ble.n	801a128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a068:	5dd2      	ldrb	r2, [r2, r7]
 801a06a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a06e:	1c62      	adds	r2, r4, #1
 801a070:	d45f      	bmi.n	801a132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a072:	4596      	cmp	lr, r2
 801a074:	dd5d      	ble.n	801a132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a076:	2d00      	cmp	r5, #0
 801a078:	d05b      	beq.n	801a132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a07a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a07e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801a082:	f118 0801 	adds.w	r8, r8, #1
 801a086:	d458      	bmi.n	801a13a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a088:	45c2      	cmp	sl, r8
 801a08a:	dd56      	ble.n	801a13a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a08c:	2e00      	cmp	r6, #0
 801a08e:	d054      	beq.n	801a13a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a090:	2c00      	cmp	r4, #0
 801a092:	db50      	blt.n	801a136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a094:	45a6      	cmp	lr, r4
 801a096:	dd4e      	ble.n	801a136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a098:	f819 200e 	ldrb.w	r2, [r9, lr]
 801a09c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801a0a0:	3401      	adds	r4, #1
 801a0a2:	d407      	bmi.n	801a0b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a0a4:	45a6      	cmp	lr, r4
 801a0a6:	dd05      	ble.n	801a0b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a0a8:	b125      	cbz	r5, 801a0b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a0aa:	44ce      	add	lr, r9
 801a0ac:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801a0b0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801a0b4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a0b8:	fb15 f406 	smulbb	r4, r5, r6
 801a0bc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a0c0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a0c4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a0c8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a0cc:	ea43 0c0c 	orr.w	ip, r3, ip
 801a0d0:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a0d4:	f1c6 0310 	rsb	r3, r6, #16
 801a0d8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a0dc:	1b5b      	subs	r3, r3, r5
 801a0de:	ea4e 0707 	orr.w	r7, lr, r7
 801a0e2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a0e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a0ea:	437d      	muls	r5, r7
 801a0ec:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a0f0:	0403      	lsls	r3, r0, #16
 801a0f2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a0f6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a0fa:	4318      	orrs	r0, r3
 801a0fc:	0413      	lsls	r3, r2, #16
 801a0fe:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a102:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a106:	4313      	orrs	r3, r2
 801a108:	fb04 c000 	mla	r0, r4, r0, ip
 801a10c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a110:	fb06 0003 	mla	r0, r6, r3, r0
 801a114:	0d43      	lsrs	r3, r0, #21
 801a116:	0940      	lsrs	r0, r0, #5
 801a118:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a11c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a120:	4318      	orrs	r0, r3
 801a122:	8008      	strh	r0, [r1, #0]
 801a124:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a128:	4684      	mov	ip, r0
 801a12a:	e7a0      	b.n	801a06e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801a12c:	4607      	mov	r7, r0
 801a12e:	4684      	mov	ip, r0
 801a130:	e7a7      	b.n	801a082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a132:	4607      	mov	r7, r0
 801a134:	e7a5      	b.n	801a082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a136:	4602      	mov	r2, r0
 801a138:	e7b2      	b.n	801a0a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801a13a:	4602      	mov	r2, r0
 801a13c:	e7ba      	b.n	801a0b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801a13e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a13e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a142:	b093      	sub	sp, #76	@ 0x4c
 801a144:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801a148:	920f      	str	r2, [sp, #60]	@ 0x3c
 801a14a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a14c:	9108      	str	r1, [sp, #32]
 801a14e:	9306      	str	r3, [sp, #24]
 801a150:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801a154:	9010      	str	r0, [sp, #64]	@ 0x40
 801a156:	6850      	ldr	r0, [r2, #4]
 801a158:	6812      	ldr	r2, [r2, #0]
 801a15a:	fb00 1303 	mla	r3, r0, r3, r1
 801a15e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a162:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a164:	681b      	ldr	r3, [r3, #0]
 801a166:	9307      	str	r3, [sp, #28]
 801a168:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a16a:	685f      	ldr	r7, [r3, #4]
 801a16c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a170:	3704      	adds	r7, #4
 801a172:	9b08      	ldr	r3, [sp, #32]
 801a174:	2b00      	cmp	r3, #0
 801a176:	dc03      	bgt.n	801a180 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a178:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a17a:	2b00      	cmp	r3, #0
 801a17c:	f340 81b2 	ble.w	801a4e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a180:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a182:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a186:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a18a:	1e48      	subs	r0, r1, #1
 801a18c:	f102 3cff 	add.w	ip, r2, #4294967295
 801a190:	9b06      	ldr	r3, [sp, #24]
 801a192:	2b00      	cmp	r3, #0
 801a194:	f340 80a9 	ble.w	801a2ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a198:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a19c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a1a0:	d406      	bmi.n	801a1b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1a2:	4586      	cmp	lr, r0
 801a1a4:	da04      	bge.n	801a1b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1a6:	2b00      	cmp	r3, #0
 801a1a8:	db02      	blt.n	801a1b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1aa:	4563      	cmp	r3, ip
 801a1ac:	f2c0 809e 	blt.w	801a2ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a1b0:	f11e 0e01 	adds.w	lr, lr, #1
 801a1b4:	f100 808f 	bmi.w	801a2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a1b8:	4571      	cmp	r1, lr
 801a1ba:	f2c0 808c 	blt.w	801a2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a1be:	3301      	adds	r3, #1
 801a1c0:	f100 8089 	bmi.w	801a2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a1c4:	429a      	cmp	r2, r3
 801a1c6:	f2c0 8086 	blt.w	801a2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a1ca:	f8dd b018 	ldr.w	fp, [sp, #24]
 801a1ce:	46c8      	mov	r8, r9
 801a1d0:	f1bb 0f00 	cmp.w	fp, #0
 801a1d4:	f340 80a6 	ble.w	801a324 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a1d8:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801a1da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a1dc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a1e0:	689b      	ldr	r3, [r3, #8]
 801a1e2:	1422      	asrs	r2, r4, #16
 801a1e4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a1e8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a1ec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a1f0:	f100 80e3 	bmi.w	801a3ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a1f4:	f103 3aff 	add.w	sl, r3, #4294967295
 801a1f8:	4552      	cmp	r2, sl
 801a1fa:	f280 80de 	bge.w	801a3ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a1fe:	f1bc 0f00 	cmp.w	ip, #0
 801a202:	f2c0 80da 	blt.w	801a3ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a206:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a20a:	45d4      	cmp	ip, sl
 801a20c:	f280 80d5 	bge.w	801a3ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a210:	b21b      	sxth	r3, r3
 801a212:	fb0c 2203 	mla	r2, ip, r3, r2
 801a216:	9d07      	ldr	r5, [sp, #28]
 801a218:	eb05 0a02 	add.w	sl, r5, r2
 801a21c:	5caa      	ldrb	r2, [r5, r2]
 801a21e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801a222:	2800      	cmp	r0, #0
 801a224:	f000 80c0 	beq.w	801a3a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a228:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a22c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801a230:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a232:	b151      	cbz	r1, 801a24a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a234:	eb0a 0203 	add.w	r2, sl, r3
 801a238:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a23c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a240:	9309      	str	r3, [sp, #36]	@ 0x24
 801a242:	7853      	ldrb	r3, [r2, #1]
 801a244:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a248:	930c      	str	r3, [sp, #48]	@ 0x30
 801a24a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a24c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a24e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a252:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a256:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a25a:	ea4c 0c03 	orr.w	ip, ip, r3
 801a25e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a260:	041b      	lsls	r3, r3, #16
 801a262:	fb10 f201 	smulbb	r2, r0, r1
 801a266:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a26a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a26e:	10d2      	asrs	r2, r2, #3
 801a270:	432b      	orrs	r3, r5
 801a272:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a276:	4353      	muls	r3, r2
 801a278:	fb0a 330c 	mla	r3, sl, ip, r3
 801a27c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a280:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a284:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a288:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a28c:	f1c1 0c10 	rsb	ip, r1, #16
 801a290:	ebac 0c00 	sub.w	ip, ip, r0
 801a294:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a298:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a29c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a29e:	0418      	lsls	r0, r3, #16
 801a2a0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a2a4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a2a8:	4318      	orrs	r0, r3
 801a2aa:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a2ae:	fb02 c200 	mla	r2, r2, r0, ip
 801a2b2:	0d53      	lsrs	r3, r2, #21
 801a2b4:	0952      	lsrs	r2, r2, #5
 801a2b6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a2ba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a2be:	431a      	orrs	r2, r3
 801a2c0:	f8a8 2000 	strh.w	r2, [r8]
 801a2c4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a2c6:	441c      	add	r4, r3
 801a2c8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a2ca:	f108 0802 	add.w	r8, r8, #2
 801a2ce:	441e      	add	r6, r3
 801a2d0:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a2d4:	e77c      	b.n	801a1d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a2d6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a2d8:	441c      	add	r4, r3
 801a2da:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a2dc:	441e      	add	r6, r3
 801a2de:	9b06      	ldr	r3, [sp, #24]
 801a2e0:	3b01      	subs	r3, #1
 801a2e2:	9306      	str	r3, [sp, #24]
 801a2e4:	f109 0902 	add.w	r9, r9, #2
 801a2e8:	e752      	b.n	801a190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a2ea:	d020      	beq.n	801a32e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a2ec:	9b06      	ldr	r3, [sp, #24]
 801a2ee:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a2f0:	3b01      	subs	r3, #1
 801a2f2:	fb00 4003 	mla	r0, r0, r3, r4
 801a2f6:	1400      	asrs	r0, r0, #16
 801a2f8:	f53f af67 	bmi.w	801a1ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a2fc:	3901      	subs	r1, #1
 801a2fe:	4288      	cmp	r0, r1
 801a300:	f6bf af63 	bge.w	801a1ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a304:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801a306:	fb01 6303 	mla	r3, r1, r3, r6
 801a30a:	141b      	asrs	r3, r3, #16
 801a30c:	f53f af5d 	bmi.w	801a1ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a310:	3a01      	subs	r2, #1
 801a312:	4293      	cmp	r3, r2
 801a314:	f6bf af59 	bge.w	801a1ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a318:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a31c:	46ca      	mov	sl, r9
 801a31e:	f1b8 0f00 	cmp.w	r8, #0
 801a322:	dc67      	bgt.n	801a3f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a324:	9b06      	ldr	r3, [sp, #24]
 801a326:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a32a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a32e:	9b08      	ldr	r3, [sp, #32]
 801a330:	2b00      	cmp	r3, #0
 801a332:	f340 80d7 	ble.w	801a4e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a336:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a33a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a33e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a342:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a344:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a348:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a34c:	eeb0 6a62 	vmov.f32	s12, s5
 801a350:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a354:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a358:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a35c:	ee16 4a10 	vmov	r4, s12
 801a360:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a364:	eeb0 6a43 	vmov.f32	s12, s6
 801a368:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a36c:	ee12 2a90 	vmov	r2, s5
 801a370:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a374:	fb92 f3f3 	sdiv	r3, r2, r3
 801a378:	ee13 2a10 	vmov	r2, s6
 801a37c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a37e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a380:	fb92 f3f3 	sdiv	r3, r2, r3
 801a384:	9320      	str	r3, [sp, #128]	@ 0x80
 801a386:	9b08      	ldr	r3, [sp, #32]
 801a388:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a38a:	3b01      	subs	r3, #1
 801a38c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a390:	9308      	str	r3, [sp, #32]
 801a392:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a394:	bf08      	it	eq
 801a396:	4613      	moveq	r3, r2
 801a398:	ee16 6a10 	vmov	r6, s12
 801a39c:	9306      	str	r3, [sp, #24]
 801a39e:	eeb0 3a67 	vmov.f32	s6, s15
 801a3a2:	eef0 2a47 	vmov.f32	s5, s14
 801a3a6:	e6e4      	b.n	801a172 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a3a8:	2900      	cmp	r1, #0
 801a3aa:	f43f af4e 	beq.w	801a24a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a3ae:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a3b2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a3b6:	9309      	str	r3, [sp, #36]	@ 0x24
 801a3b8:	e747      	b.n	801a24a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a3ba:	f112 0a01 	adds.w	sl, r2, #1
 801a3be:	d481      	bmi.n	801a2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a3c0:	4553      	cmp	r3, sl
 801a3c2:	f6ff af7f 	blt.w	801a2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a3c6:	f11c 0a01 	adds.w	sl, ip, #1
 801a3ca:	f53f af7b 	bmi.w	801a2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a3ce:	45d6      	cmp	lr, sl
 801a3d0:	f6ff af78 	blt.w	801a2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a3d4:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a3d8:	b21b      	sxth	r3, r3
 801a3da:	fa0f f28e 	sxth.w	r2, lr
 801a3de:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a3e2:	9201      	str	r2, [sp, #4]
 801a3e4:	9300      	str	r3, [sp, #0]
 801a3e6:	9a07      	ldr	r2, [sp, #28]
 801a3e8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801a3ea:	463b      	mov	r3, r7
 801a3ec:	4641      	mov	r1, r8
 801a3ee:	f7ff fe21 	bl	801a034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a3f2:	e767      	b.n	801a2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a3f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a3f6:	9d07      	ldr	r5, [sp, #28]
 801a3f8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a3fc:	1422      	asrs	r2, r4, #16
 801a3fe:	1431      	asrs	r1, r6, #16
 801a400:	fb03 2101 	mla	r1, r3, r1, r2
 801a404:	9a07      	ldr	r2, [sp, #28]
 801a406:	440a      	add	r2, r1
 801a408:	5c69      	ldrb	r1, [r5, r1]
 801a40a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a40e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a412:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a416:	f1be 0f00 	cmp.w	lr, #0
 801a41a:	d05c      	beq.n	801a4d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a41c:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a420:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a424:	950d      	str	r5, [sp, #52]	@ 0x34
 801a426:	b150      	cbz	r0, 801a43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a428:	eb02 0c03 	add.w	ip, r2, r3
 801a42c:	5cd3      	ldrb	r3, [r2, r3]
 801a42e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a432:	930a      	str	r3, [sp, #40]	@ 0x28
 801a434:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a438:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a43c:	930e      	str	r3, [sp, #56]	@ 0x38
 801a43e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a440:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a442:	fb1e f200 	smulbb	r2, lr, r0
 801a446:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a44a:	10d2      	asrs	r2, r2, #3
 801a44c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a450:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a454:	ea4c 0c03 	orr.w	ip, ip, r3
 801a458:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a45c:	9311      	str	r3, [sp, #68]	@ 0x44
 801a45e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a460:	041b      	lsls	r3, r3, #16
 801a462:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801a466:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a46a:	ea43 030b 	orr.w	r3, r3, fp
 801a46e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a470:	4353      	muls	r3, r2
 801a472:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a476:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a47a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a47e:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a482:	ea43 0b01 	orr.w	fp, r3, r1
 801a486:	f1c0 0110 	rsb	r1, r0, #16
 801a48a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a48c:	eba1 0e0e 	sub.w	lr, r1, lr
 801a490:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a494:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a498:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a49c:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801a4a0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a4a4:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a4a8:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a4ac:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a4b0:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a4b4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a4b8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a4bc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a4c0:	ea43 0c0c 	orr.w	ip, r3, ip
 801a4c4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a4c6:	f82a cb02 	strh.w	ip, [sl], #2
 801a4ca:	441c      	add	r4, r3
 801a4cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a4ce:	f108 38ff 	add.w	r8, r8, #4294967295
 801a4d2:	441e      	add	r6, r3
 801a4d4:	e723      	b.n	801a31e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a4d6:	2800      	cmp	r0, #0
 801a4d8:	d0b1      	beq.n	801a43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a4da:	5cd3      	ldrb	r3, [r2, r3]
 801a4dc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a4e0:	930a      	str	r3, [sp, #40]	@ 0x28
 801a4e2:	e7ac      	b.n	801a43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a4e4:	b013      	add	sp, #76	@ 0x4c
 801a4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a4ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a4ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4ee:	880d      	ldrh	r5, [r1, #0]
 801a4f0:	b087      	sub	sp, #28
 801a4f2:	10ef      	asrs	r7, r5, #3
 801a4f4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a4f8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a4fc:	00ed      	lsls	r5, r5, #3
 801a4fe:	9701      	str	r7, [sp, #4]
 801a500:	b2ed      	uxtb	r5, r5
 801a502:	9502      	str	r5, [sp, #8]
 801a504:	9d01      	ldr	r5, [sp, #4]
 801a506:	9103      	str	r1, [sp, #12]
 801a508:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801a50c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801a510:	9902      	ldr	r1, [sp, #8]
 801a512:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801a516:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801a51a:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801a51e:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801a522:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801a526:	022d      	lsls	r5, r5, #8
 801a528:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a52c:	fb06 0709 	mla	r7, r6, r9, r0
 801a530:	430d      	orrs	r5, r1
 801a532:	2e00      	cmp	r6, #0
 801a534:	eb02 0c07 	add.w	ip, r2, r7
 801a538:	9505      	str	r5, [sp, #20]
 801a53a:	f2c0 80b6 	blt.w	801a6aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a53e:	45b3      	cmp	fp, r6
 801a540:	f340 80b3 	ble.w	801a6aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a544:	2800      	cmp	r0, #0
 801a546:	f2c0 80ae 	blt.w	801a6a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a54a:	4581      	cmp	r9, r0
 801a54c:	f340 80ab 	ble.w	801a6a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a550:	5dd7      	ldrb	r7, [r2, r7]
 801a552:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a556:	441f      	add	r7, r3
 801a558:	1c42      	adds	r2, r0, #1
 801a55a:	f100 80a9 	bmi.w	801a6b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a55e:	4591      	cmp	r9, r2
 801a560:	f340 80a6 	ble.w	801a6b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a564:	2c00      	cmp	r4, #0
 801a566:	f000 80a3 	beq.w	801a6b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a56a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a56e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a572:	441d      	add	r5, r3
 801a574:	3601      	adds	r6, #1
 801a576:	f100 809f 	bmi.w	801a6b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a57a:	45b3      	cmp	fp, r6
 801a57c:	f340 809c 	ble.w	801a6b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a580:	f1be 0f00 	cmp.w	lr, #0
 801a584:	f000 8098 	beq.w	801a6b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a588:	2800      	cmp	r0, #0
 801a58a:	f2c0 8093 	blt.w	801a6b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a58e:	4581      	cmp	r9, r0
 801a590:	f340 8090 	ble.w	801a6b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a594:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a598:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a59c:	441e      	add	r6, r3
 801a59e:	3001      	adds	r0, #1
 801a5a0:	f100 808d 	bmi.w	801a6be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a5a4:	4581      	cmp	r9, r0
 801a5a6:	f340 808a 	ble.w	801a6be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a5aa:	2c00      	cmp	r4, #0
 801a5ac:	f000 8087 	beq.w	801a6be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a5b0:	44e1      	add	r9, ip
 801a5b2:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a5b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a5ba:	4413      	add	r3, r2
 801a5bc:	b2a4      	uxth	r4, r4
 801a5be:	fa1f fe8e 	uxth.w	lr, lr
 801a5c2:	fb04 fb0e 	mul.w	fp, r4, lr
 801a5c6:	0124      	lsls	r4, r4, #4
 801a5c8:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a5cc:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801a5d0:	eba4 040b 	sub.w	r4, r4, fp
 801a5d4:	fa1f f08e 	uxth.w	r0, lr
 801a5d8:	b2a2      	uxth	r2, r4
 801a5da:	78ac      	ldrb	r4, [r5, #2]
 801a5dc:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a5e0:	9901      	ldr	r1, [sp, #4]
 801a5e2:	eba9 0900 	sub.w	r9, r9, r0
 801a5e6:	fa1f f989 	uxth.w	r9, r9
 801a5ea:	4354      	muls	r4, r2
 801a5ec:	fb09 440c 	mla	r4, r9, ip, r4
 801a5f0:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a5f4:	fb00 440c 	mla	r4, r0, ip, r4
 801a5f8:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a5fc:	fa1f fe88 	uxth.w	lr, r8
 801a600:	ea6f 0808 	mvn.w	r8, r8
 801a604:	fa5f f888 	uxtb.w	r8, r8
 801a608:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a60c:	fb1a fa08 	smulbb	sl, sl, r8
 801a610:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a614:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a618:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a61c:	787c      	ldrb	r4, [r7, #1]
 801a61e:	782d      	ldrb	r5, [r5, #0]
 801a620:	783f      	ldrb	r7, [r7, #0]
 801a622:	fb02 fa0a 	mul.w	sl, r2, sl
 801a626:	fb09 aa04 	mla	sl, r9, r4, sl
 801a62a:	7874      	ldrb	r4, [r6, #1]
 801a62c:	436a      	muls	r2, r5
 801a62e:	7835      	ldrb	r5, [r6, #0]
 801a630:	fb00 aa04 	mla	sl, r0, r4, sl
 801a634:	fb09 2207 	mla	r2, r9, r7, r2
 801a638:	785c      	ldrb	r4, [r3, #1]
 801a63a:	781b      	ldrb	r3, [r3, #0]
 801a63c:	fb00 2005 	mla	r0, r0, r5, r2
 801a640:	fb0b a404 	mla	r4, fp, r4, sl
 801a644:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a648:	9b02      	ldr	r3, [sp, #8]
 801a64a:	fb11 fa08 	smulbb	sl, r1, r8
 801a64e:	fa1f fc8c 	uxth.w	ip, ip
 801a652:	fb13 f808 	smulbb	r8, r3, r8
 801a656:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a65a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a65e:	fb04 a40e 	mla	r4, r4, lr, sl
 801a662:	f10c 0301 	add.w	r3, ip, #1
 801a666:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a66a:	fa1f fe8e 	uxth.w	lr, lr
 801a66e:	b2a4      	uxth	r4, r4
 801a670:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a674:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801a678:	f104 0a01 	add.w	sl, r4, #1
 801a67c:	f10e 0c01 	add.w	ip, lr, #1
 801a680:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a684:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a688:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a68c:	0964      	lsrs	r4, r4, #5
 801a68e:	ea4c 0c03 	orr.w	ip, ip, r3
 801a692:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a696:	9b03      	ldr	r3, [sp, #12]
 801a698:	ea4c 0c04 	orr.w	ip, ip, r4
 801a69c:	f8a3 c000 	strh.w	ip, [r3]
 801a6a0:	b007      	add	sp, #28
 801a6a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6a6:	af05      	add	r7, sp, #20
 801a6a8:	e756      	b.n	801a558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a6aa:	ad05      	add	r5, sp, #20
 801a6ac:	462f      	mov	r7, r5
 801a6ae:	e761      	b.n	801a574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a6b0:	ad05      	add	r5, sp, #20
 801a6b2:	e75f      	b.n	801a574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a6b4:	ae05      	add	r6, sp, #20
 801a6b6:	e772      	b.n	801a59e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a6b8:	ab05      	add	r3, sp, #20
 801a6ba:	461e      	mov	r6, r3
 801a6bc:	e77e      	b.n	801a5bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a6be:	ab05      	add	r3, sp, #20
 801a6c0:	e77c      	b.n	801a5bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a6c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a6c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6c6:	b095      	sub	sp, #84	@ 0x54
 801a6c8:	9212      	str	r2, [sp, #72]	@ 0x48
 801a6ca:	9309      	str	r3, [sp, #36]	@ 0x24
 801a6cc:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a6ce:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801a6d2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a6d4:	910e      	str	r1, [sp, #56]	@ 0x38
 801a6d6:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801a6da:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a6dc:	6850      	ldr	r0, [r2, #4]
 801a6de:	6812      	ldr	r2, [r2, #0]
 801a6e0:	fb00 1303 	mla	r3, r0, r3, r1
 801a6e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a6e8:	930a      	str	r3, [sp, #40]	@ 0x28
 801a6ea:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a6ec:	681b      	ldr	r3, [r3, #0]
 801a6ee:	930d      	str	r3, [sp, #52]	@ 0x34
 801a6f0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a6f2:	685c      	ldr	r4, [r3, #4]
 801a6f4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a6f6:	43db      	mvns	r3, r3
 801a6f8:	b2db      	uxtb	r3, r3
 801a6fa:	3404      	adds	r4, #4
 801a6fc:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a6fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a700:	2b00      	cmp	r3, #0
 801a702:	dc03      	bgt.n	801a70c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a704:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a706:	2b00      	cmp	r3, #0
 801a708:	f340 8255 	ble.w	801abb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a70c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a70e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a712:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a716:	1e48      	subs	r0, r1, #1
 801a718:	1e55      	subs	r5, r2, #1
 801a71a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a71c:	2b00      	cmp	r3, #0
 801a71e:	f340 80f9 	ble.w	801a914 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a722:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801a724:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a726:	1436      	asrs	r6, r6, #16
 801a728:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a72c:	d406      	bmi.n	801a73c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a72e:	4286      	cmp	r6, r0
 801a730:	da04      	bge.n	801a73c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a732:	2b00      	cmp	r3, #0
 801a734:	db02      	blt.n	801a73c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a736:	42ab      	cmp	r3, r5
 801a738:	f2c0 80ed 	blt.w	801a916 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a73c:	3601      	adds	r6, #1
 801a73e:	f100 80da 	bmi.w	801a8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a742:	42b1      	cmp	r1, r6
 801a744:	f2c0 80d7 	blt.w	801a8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a748:	3301      	adds	r3, #1
 801a74a:	f100 80d4 	bmi.w	801a8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a74e:	429a      	cmp	r2, r3
 801a750:	f2c0 80d1 	blt.w	801a8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a754:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a756:	9311      	str	r3, [sp, #68]	@ 0x44
 801a758:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a75a:	930c      	str	r3, [sp, #48]	@ 0x30
 801a75c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a75e:	2b00      	cmp	r3, #0
 801a760:	f340 80fa 	ble.w	801a958 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a764:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801a766:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a768:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a76a:	68c6      	ldr	r6, [r0, #12]
 801a76c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a76e:	141d      	asrs	r5, r3, #16
 801a770:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a774:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a776:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801a778:	1400      	asrs	r0, r0, #16
 801a77a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a77e:	6892      	ldr	r2, [r2, #8]
 801a780:	f100 813e 	bmi.w	801aa00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a784:	1e57      	subs	r7, r2, #1
 801a786:	42b8      	cmp	r0, r7
 801a788:	f280 813a 	bge.w	801aa00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a78c:	2d00      	cmp	r5, #0
 801a78e:	f2c0 8137 	blt.w	801aa00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a792:	1e77      	subs	r7, r6, #1
 801a794:	42bd      	cmp	r5, r7
 801a796:	f280 8133 	bge.w	801aa00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a79a:	b212      	sxth	r2, r2
 801a79c:	fb05 0002 	mla	r0, r5, r2, r0
 801a7a0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a7a2:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a7a6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a7aa:	182e      	adds	r6, r5, r0
 801a7ac:	eb04 050a 	add.w	r5, r4, sl
 801a7b0:	2b00      	cmp	r3, #0
 801a7b2:	f000 8117 	beq.w	801a9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a7b6:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a7ba:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a7be:	44a4      	add	ip, r4
 801a7c0:	2900      	cmp	r1, #0
 801a7c2:	f000 8117 	beq.w	801a9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a7c6:	18b0      	adds	r0, r6, r2
 801a7c8:	5cb2      	ldrb	r2, [r6, r2]
 801a7ca:	7840      	ldrb	r0, [r0, #1]
 801a7cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a7d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a7d4:	4422      	add	r2, r4
 801a7d6:	4420      	add	r0, r4
 801a7d8:	b29b      	uxth	r3, r3
 801a7da:	b289      	uxth	r1, r1
 801a7dc:	fb03 f901 	mul.w	r9, r3, r1
 801a7e0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a7e4:	011b      	lsls	r3, r3, #4
 801a7e6:	b289      	uxth	r1, r1
 801a7e8:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a7ec:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a7f0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a7f2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a7f6:	f8b6 e000 	ldrh.w	lr, [r6]
 801a7fa:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801a7fe:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801a802:	eba3 0309 	sub.w	r3, r3, r9
 801a806:	b29b      	uxth	r3, r3
 801a808:	eba8 0801 	sub.w	r8, r8, r1
 801a80c:	fa1f f888 	uxth.w	r8, r8
 801a810:	435f      	muls	r7, r3
 801a812:	fb08 770b 	mla	r7, r8, fp, r7
 801a816:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a81a:	9310      	str	r3, [sp, #64]	@ 0x40
 801a81c:	fb01 770b 	mla	r7, r1, fp, r7
 801a820:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a824:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a826:	fb09 770b 	mla	r7, r9, fp, r7
 801a82a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a82e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801a832:	fb1b fb03 	smulbb	fp, fp, r3
 801a836:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a83a:	fb07 b706 	mla	r7, r7, r6, fp
 801a83e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a840:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a844:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a848:	f89c c000 	ldrb.w	ip, [ip]
 801a84c:	435d      	muls	r5, r3
 801a84e:	fb08 550b 	mla	r5, r8, fp, r5
 801a852:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a856:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a858:	fb01 550b 	mla	r5, r1, fp, r5
 801a85c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a860:	fb09 550b 	mla	r5, r9, fp, r5
 801a864:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a868:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a86c:	fb1b fb03 	smulbb	fp, fp, r3
 801a870:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a872:	fb03 f30c 	mul.w	r3, r3, ip
 801a876:	f892 c000 	ldrb.w	ip, [r2]
 801a87a:	fb08 330a 	mla	r3, r8, sl, r3
 801a87e:	fb01 330c 	mla	r3, r1, ip, r3
 801a882:	f890 c000 	ldrb.w	ip, [r0]
 801a886:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a88a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a88e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a890:	fa5f fe8e 	uxtb.w	lr, lr
 801a894:	b2bf      	uxth	r7, r7
 801a896:	fb1e fe03 	smulbb	lr, lr, r3
 801a89a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a89e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a8a2:	fb05 b506 	mla	r5, r5, r6, fp
 801a8a6:	1c7b      	adds	r3, r7, #1
 801a8a8:	fb0c e606 	mla	r6, ip, r6, lr
 801a8ac:	b2ad      	uxth	r5, r5
 801a8ae:	b2b6      	uxth	r6, r6
 801a8b0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a8b4:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801a8b8:	f105 0b01 	add.w	fp, r5, #1
 801a8bc:	1c77      	adds	r7, r6, #1
 801a8be:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a8c2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a8c6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a8ca:	096d      	lsrs	r5, r5, #5
 801a8cc:	431f      	orrs	r7, r3
 801a8ce:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a8d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a8d4:	433d      	orrs	r5, r7
 801a8d6:	801d      	strh	r5, [r3, #0]
 801a8d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a8da:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a8dc:	3302      	adds	r3, #2
 801a8de:	930c      	str	r3, [sp, #48]	@ 0x30
 801a8e0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a8e2:	4413      	add	r3, r2
 801a8e4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a8e6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a8e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a8ea:	4413      	add	r3, r2
 801a8ec:	9320      	str	r3, [sp, #128]	@ 0x80
 801a8ee:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a8f0:	3b01      	subs	r3, #1
 801a8f2:	9311      	str	r3, [sp, #68]	@ 0x44
 801a8f4:	e732      	b.n	801a75c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a8f6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a8f8:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801a8fa:	4433      	add	r3, r6
 801a8fc:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a8fe:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801a900:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a902:	4433      	add	r3, r6
 801a904:	9320      	str	r3, [sp, #128]	@ 0x80
 801a906:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a908:	3b01      	subs	r3, #1
 801a90a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a90c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a90e:	3302      	adds	r3, #2
 801a910:	930a      	str	r3, [sp, #40]	@ 0x28
 801a912:	e702      	b.n	801a71a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a914:	d027      	beq.n	801a966 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a916:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a918:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801a91a:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801a91c:	3b01      	subs	r3, #1
 801a91e:	fb00 5003 	mla	r0, r0, r3, r5
 801a922:	1400      	asrs	r0, r0, #16
 801a924:	f53f af16 	bmi.w	801a754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a928:	3901      	subs	r1, #1
 801a92a:	4288      	cmp	r0, r1
 801a92c:	f6bf af12 	bge.w	801a754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a930:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801a932:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a934:	fb01 0303 	mla	r3, r1, r3, r0
 801a938:	141b      	asrs	r3, r3, #16
 801a93a:	f53f af0b 	bmi.w	801a754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a93e:	3a01      	subs	r2, #1
 801a940:	4293      	cmp	r3, r2
 801a942:	f6bf af07 	bge.w	801a754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a946:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a948:	9311      	str	r3, [sp, #68]	@ 0x44
 801a94a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801a94e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a950:	930c      	str	r3, [sp, #48]	@ 0x30
 801a952:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a954:	2b00      	cmp	r3, #0
 801a956:	dc70      	bgt.n	801aa3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a958:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a95a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a95c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a960:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a964:	930a      	str	r3, [sp, #40]	@ 0x28
 801a966:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a968:	2b00      	cmp	r3, #0
 801a96a:	f340 8124 	ble.w	801abb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a96e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a972:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a976:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a97a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a97c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a980:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a984:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a988:	eef0 6a62 	vmov.f32	s13, s5
 801a98c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a990:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a994:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a998:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801a99c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a9a0:	eef0 6a43 	vmov.f32	s13, s6
 801a9a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a9a8:	ee12 2a90 	vmov	r2, s5
 801a9ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a9b0:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9b4:	ee13 2a10 	vmov	r2, s6
 801a9b8:	9321      	str	r3, [sp, #132]	@ 0x84
 801a9ba:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a9bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9c0:	9322      	str	r3, [sp, #136]	@ 0x88
 801a9c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a9c4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a9c6:	3b01      	subs	r3, #1
 801a9c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9cc:	930e      	str	r3, [sp, #56]	@ 0x38
 801a9ce:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a9d0:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801a9d4:	bf08      	it	eq
 801a9d6:	4613      	moveq	r3, r2
 801a9d8:	9309      	str	r3, [sp, #36]	@ 0x24
 801a9da:	eeb0 3a67 	vmov.f32	s6, s15
 801a9de:	eef0 2a47 	vmov.f32	s5, s14
 801a9e2:	e68c      	b.n	801a6fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a9e4:	b149      	cbz	r1, 801a9fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a9e6:	5cb2      	ldrb	r2, [r6, r2]
 801a9e8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a9ec:	4422      	add	r2, r4
 801a9ee:	4628      	mov	r0, r5
 801a9f0:	46ac      	mov	ip, r5
 801a9f2:	e6f1      	b.n	801a7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a9f4:	4628      	mov	r0, r5
 801a9f6:	462a      	mov	r2, r5
 801a9f8:	e6ee      	b.n	801a7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a9fa:	4628      	mov	r0, r5
 801a9fc:	462a      	mov	r2, r5
 801a9fe:	e7f7      	b.n	801a9f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801aa00:	1c47      	adds	r7, r0, #1
 801aa02:	f53f af69 	bmi.w	801a8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa06:	42ba      	cmp	r2, r7
 801aa08:	f6ff af66 	blt.w	801a8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa0c:	1c6f      	adds	r7, r5, #1
 801aa0e:	f53f af63 	bmi.w	801a8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa12:	42be      	cmp	r6, r7
 801aa14:	f6ff af60 	blt.w	801a8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa18:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801aa1a:	9002      	str	r0, [sp, #8]
 801aa1c:	b236      	sxth	r6, r6
 801aa1e:	b212      	sxth	r2, r2
 801aa20:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801aa24:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801aa28:	9200      	str	r2, [sp, #0]
 801aa2a:	9601      	str	r6, [sp, #4]
 801aa2c:	4623      	mov	r3, r4
 801aa2e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801aa32:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801aa34:	f7ff fd59 	bl	801a4ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801aa38:	e74e      	b.n	801a8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa3a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801aa3c:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801aa3e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801aa40:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aa42:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801aa46:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801aa48:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801aa4c:	142d      	asrs	r5, r5, #16
 801aa4e:	1400      	asrs	r0, r0, #16
 801aa50:	fb02 5000 	mla	r0, r2, r0, r5
 801aa54:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801aa56:	f815 9000 	ldrb.w	r9, [r5, r0]
 801aa5a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801aa5e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801aa62:	182e      	adds	r6, r5, r0
 801aa64:	eb04 0509 	add.w	r5, r4, r9
 801aa68:	2b00      	cmp	r3, #0
 801aa6a:	f000 8096 	beq.w	801ab9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801aa6e:	7877      	ldrb	r7, [r6, #1]
 801aa70:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801aa74:	4427      	add	r7, r4
 801aa76:	2900      	cmp	r1, #0
 801aa78:	f000 8097 	beq.w	801abaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801aa7c:	18b0      	adds	r0, r6, r2
 801aa7e:	5cb2      	ldrb	r2, [r6, r2]
 801aa80:	7840      	ldrb	r0, [r0, #1]
 801aa82:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa86:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aa8a:	4422      	add	r2, r4
 801aa8c:	4420      	add	r0, r4
 801aa8e:	b29b      	uxth	r3, r3
 801aa90:	b289      	uxth	r1, r1
 801aa92:	fb03 f801 	mul.w	r8, r3, r1
 801aa96:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801aa98:	f895 b002 	ldrb.w	fp, [r5, #2]
 801aa9c:	f8b6 c000 	ldrh.w	ip, [r6]
 801aaa0:	78be      	ldrb	r6, [r7, #2]
 801aaa2:	f814 9009 	ldrb.w	r9, [r4, r9]
 801aaa6:	011b      	lsls	r3, r3, #4
 801aaa8:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801aaac:	b289      	uxth	r1, r1
 801aaae:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801aab2:	eba3 0308 	sub.w	r3, r3, r8
 801aab6:	b29b      	uxth	r3, r3
 801aab8:	ebae 0e01 	sub.w	lr, lr, r1
 801aabc:	fa1f fe8e 	uxth.w	lr, lr
 801aac0:	435e      	muls	r6, r3
 801aac2:	fb0e 660b 	mla	r6, lr, fp, r6
 801aac6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801aaca:	9310      	str	r3, [sp, #64]	@ 0x40
 801aacc:	fb01 660b 	mla	r6, r1, fp, r6
 801aad0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801aad4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801aad6:	fb08 660b 	mla	r6, r8, fp, r6
 801aada:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801aade:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801aae2:	fb1b fb03 	smulbb	fp, fp, r3
 801aae6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801aaea:	fb06 b60a 	mla	r6, r6, sl, fp
 801aaee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aaf0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801aaf4:	787d      	ldrb	r5, [r7, #1]
 801aaf6:	783f      	ldrb	r7, [r7, #0]
 801aaf8:	435d      	muls	r5, r3
 801aafa:	fb0e 550b 	mla	r5, lr, fp, r5
 801aafe:	f892 b001 	ldrb.w	fp, [r2, #1]
 801ab02:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab04:	fb01 550b 	mla	r5, r1, fp, r5
 801ab08:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ab0c:	fb08 550b 	mla	r5, r8, fp, r5
 801ab10:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801ab14:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801ab18:	fb1b fb03 	smulbb	fp, fp, r3
 801ab1c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ab1e:	437b      	muls	r3, r7
 801ab20:	7817      	ldrb	r7, [r2, #0]
 801ab22:	fb0e 3309 	mla	r3, lr, r9, r3
 801ab26:	fb01 3307 	mla	r3, r1, r7, r3
 801ab2a:	7807      	ldrb	r7, [r0, #0]
 801ab2c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ab30:	fb08 3707 	mla	r7, r8, r7, r3
 801ab34:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab36:	fa5f fc8c 	uxtb.w	ip, ip
 801ab3a:	fb1c fc03 	smulbb	ip, ip, r3
 801ab3e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ab42:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ab46:	fb05 b50a 	mla	r5, r5, sl, fp
 801ab4a:	fb07 c70a 	mla	r7, r7, sl, ip
 801ab4e:	b2b6      	uxth	r6, r6
 801ab50:	b2ad      	uxth	r5, r5
 801ab52:	b2bf      	uxth	r7, r7
 801ab54:	1c73      	adds	r3, r6, #1
 801ab56:	1c7a      	adds	r2, r7, #1
 801ab58:	f105 0b01 	add.w	fp, r5, #1
 801ab5c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801ab60:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ab64:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801ab68:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ab6c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801ab70:	096d      	lsrs	r5, r5, #5
 801ab72:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ab74:	4316      	orrs	r6, r2
 801ab76:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ab7a:	432e      	orrs	r6, r5
 801ab7c:	f823 6b02 	strh.w	r6, [r3], #2
 801ab80:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ab82:	930c      	str	r3, [sp, #48]	@ 0x30
 801ab84:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ab86:	4413      	add	r3, r2
 801ab88:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ab8a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801ab8c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ab8e:	4413      	add	r3, r2
 801ab90:	9320      	str	r3, [sp, #128]	@ 0x80
 801ab92:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ab94:	3b01      	subs	r3, #1
 801ab96:	9311      	str	r3, [sp, #68]	@ 0x44
 801ab98:	e6db      	b.n	801a952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801ab9a:	b149      	cbz	r1, 801abb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ab9c:	5cb2      	ldrb	r2, [r6, r2]
 801ab9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aba2:	4422      	add	r2, r4
 801aba4:	4628      	mov	r0, r5
 801aba6:	462f      	mov	r7, r5
 801aba8:	e771      	b.n	801aa8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801abaa:	4628      	mov	r0, r5
 801abac:	462a      	mov	r2, r5
 801abae:	e76e      	b.n	801aa8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801abb0:	4628      	mov	r0, r5
 801abb2:	462a      	mov	r2, r5
 801abb4:	e7f7      	b.n	801aba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801abb6:	b015      	add	sp, #84	@ 0x54
 801abb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801abbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801abbc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abc0:	880f      	ldrh	r7, [r1, #0]
 801abc2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801abc6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801abca:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801abce:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801abd2:	023c      	lsls	r4, r7, #8
 801abd4:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801abd8:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801abdc:	017c      	lsls	r4, r7, #5
 801abde:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801abe2:	00ff      	lsls	r7, r7, #3
 801abe4:	ea4b 0404 	orr.w	r4, fp, r4
 801abe8:	b2ff      	uxtb	r7, r7
 801abea:	fb05 ca0e 	mla	sl, r5, lr, ip
 801abee:	4327      	orrs	r7, r4
 801abf0:	2d00      	cmp	r5, #0
 801abf2:	eb02 080a 	add.w	r8, r2, sl
 801abf6:	9701      	str	r7, [sp, #4]
 801abf8:	db7e      	blt.n	801acf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801abfa:	45a9      	cmp	r9, r5
 801abfc:	dd7c      	ble.n	801acf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801abfe:	f1bc 0f00 	cmp.w	ip, #0
 801ac02:	db77      	blt.n	801acf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ac04:	45e6      	cmp	lr, ip
 801ac06:	dd75      	ble.n	801acf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ac08:	f812 700a 	ldrb.w	r7, [r2, sl]
 801ac0c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ac10:	441f      	add	r7, r3
 801ac12:	f11c 0201 	adds.w	r2, ip, #1
 801ac16:	d472      	bmi.n	801acfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ac18:	4596      	cmp	lr, r2
 801ac1a:	dd70      	ble.n	801acfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ac1c:	2800      	cmp	r0, #0
 801ac1e:	d06e      	beq.n	801acfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ac20:	f898 4001 	ldrb.w	r4, [r8, #1]
 801ac24:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801ac28:	441c      	add	r4, r3
 801ac2a:	3501      	adds	r5, #1
 801ac2c:	d46b      	bmi.n	801ad06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ac2e:	45a9      	cmp	r9, r5
 801ac30:	dd69      	ble.n	801ad06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ac32:	2e00      	cmp	r6, #0
 801ac34:	d067      	beq.n	801ad06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ac36:	f1bc 0f00 	cmp.w	ip, #0
 801ac3a:	db62      	blt.n	801ad02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801ac3c:	45e6      	cmp	lr, ip
 801ac3e:	dd60      	ble.n	801ad02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801ac40:	f818 500e 	ldrb.w	r5, [r8, lr]
 801ac44:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ac48:	441d      	add	r5, r3
 801ac4a:	f11c 0201 	adds.w	r2, ip, #1
 801ac4e:	d45d      	bmi.n	801ad0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ac50:	4596      	cmp	lr, r2
 801ac52:	dd5b      	ble.n	801ad0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ac54:	2800      	cmp	r0, #0
 801ac56:	d059      	beq.n	801ad0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ac58:	44c6      	add	lr, r8
 801ac5a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ac5e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ac62:	4413      	add	r3, r2
 801ac64:	b280      	uxth	r0, r0
 801ac66:	b2b2      	uxth	r2, r6
 801ac68:	fb00 f602 	mul.w	r6, r0, r2
 801ac6c:	0100      	lsls	r0, r0, #4
 801ac6e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801ac72:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801ac76:	1b80      	subs	r0, r0, r6
 801ac78:	fa1f fc82 	uxth.w	ip, r2
 801ac7c:	b282      	uxth	r2, r0
 801ac7e:	78a0      	ldrb	r0, [r4, #2]
 801ac80:	f897 e002 	ldrb.w	lr, [r7, #2]
 801ac84:	f897 9000 	ldrb.w	r9, [r7]
 801ac88:	787f      	ldrb	r7, [r7, #1]
 801ac8a:	eba8 080c 	sub.w	r8, r8, ip
 801ac8e:	fa1f f888 	uxth.w	r8, r8
 801ac92:	4350      	muls	r0, r2
 801ac94:	fb08 0e0e 	mla	lr, r8, lr, r0
 801ac98:	78a8      	ldrb	r0, [r5, #2]
 801ac9a:	fb0c e000 	mla	r0, ip, r0, lr
 801ac9e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801aca2:	fb06 0e0e 	mla	lr, r6, lr, r0
 801aca6:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801acaa:	f894 e000 	ldrb.w	lr, [r4]
 801acae:	fb02 fe0e 	mul.w	lr, r2, lr
 801acb2:	fb08 e909 	mla	r9, r8, r9, lr
 801acb6:	f895 e000 	ldrb.w	lr, [r5]
 801acba:	fb0c 990e 	mla	r9, ip, lr, r9
 801acbe:	f893 e000 	ldrb.w	lr, [r3]
 801acc2:	785b      	ldrb	r3, [r3, #1]
 801acc4:	fb06 9e0e 	mla	lr, r6, lr, r9
 801acc8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801accc:	ea4e 0e00 	orr.w	lr, lr, r0
 801acd0:	7860      	ldrb	r0, [r4, #1]
 801acd2:	4350      	muls	r0, r2
 801acd4:	786a      	ldrb	r2, [r5, #1]
 801acd6:	fb08 0007 	mla	r0, r8, r7, r0
 801acda:	fb0c 0202 	mla	r2, ip, r2, r0
 801acde:	fb06 2303 	mla	r3, r6, r3, r2
 801ace2:	095b      	lsrs	r3, r3, #5
 801ace4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ace8:	ea4e 0303 	orr.w	r3, lr, r3
 801acec:	800b      	strh	r3, [r1, #0]
 801acee:	b003      	add	sp, #12
 801acf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801acf4:	af01      	add	r7, sp, #4
 801acf6:	e78c      	b.n	801ac12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801acf8:	ac01      	add	r4, sp, #4
 801acfa:	4627      	mov	r7, r4
 801acfc:	e795      	b.n	801ac2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801acfe:	ac01      	add	r4, sp, #4
 801ad00:	e793      	b.n	801ac2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801ad02:	ad01      	add	r5, sp, #4
 801ad04:	e7a1      	b.n	801ac4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801ad06:	ab01      	add	r3, sp, #4
 801ad08:	461d      	mov	r5, r3
 801ad0a:	e7ab      	b.n	801ac64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801ad0c:	ab01      	add	r3, sp, #4
 801ad0e:	e7a9      	b.n	801ac64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801ad10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad14:	b08f      	sub	sp, #60	@ 0x3c
 801ad16:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801ad1a:	920c      	str	r2, [sp, #48]	@ 0x30
 801ad1c:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801ad1e:	910a      	str	r1, [sp, #40]	@ 0x28
 801ad20:	9306      	str	r3, [sp, #24]
 801ad22:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801ad26:	900d      	str	r0, [sp, #52]	@ 0x34
 801ad28:	6850      	ldr	r0, [r2, #4]
 801ad2a:	6812      	ldr	r2, [r2, #0]
 801ad2c:	fb00 1303 	mla	r3, r0, r3, r1
 801ad30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ad34:	9307      	str	r3, [sp, #28]
 801ad36:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad38:	681b      	ldr	r3, [r3, #0]
 801ad3a:	9308      	str	r3, [sp, #32]
 801ad3c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad3e:	685c      	ldr	r4, [r3, #4]
 801ad40:	3404      	adds	r4, #4
 801ad42:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ad44:	2b00      	cmp	r3, #0
 801ad46:	dc03      	bgt.n	801ad50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ad48:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ad4a:	2b00      	cmp	r3, #0
 801ad4c:	f340 81d6 	ble.w	801b0fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ad50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ad56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ad5a:	1e48      	subs	r0, r1, #1
 801ad5c:	1e56      	subs	r6, r2, #1
 801ad5e:	9b06      	ldr	r3, [sp, #24]
 801ad60:	2b00      	cmp	r3, #0
 801ad62:	f340 80b7 	ble.w	801aed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801ad66:	ea5f 472b 	movs.w	r7, fp, asr #16
 801ad6a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ad6e:	d406      	bmi.n	801ad7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ad70:	4287      	cmp	r7, r0
 801ad72:	da04      	bge.n	801ad7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ad74:	2b00      	cmp	r3, #0
 801ad76:	db02      	blt.n	801ad7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ad78:	42b3      	cmp	r3, r6
 801ad7a:	f2c0 80ac 	blt.w	801aed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ad7e:	3701      	adds	r7, #1
 801ad80:	f100 809d 	bmi.w	801aebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ad84:	42b9      	cmp	r1, r7
 801ad86:	f2c0 809a 	blt.w	801aebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ad8a:	3301      	adds	r3, #1
 801ad8c:	f100 8097 	bmi.w	801aebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ad90:	429a      	cmp	r2, r3
 801ad92:	f2c0 8094 	blt.w	801aebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ad96:	9b06      	ldr	r3, [sp, #24]
 801ad98:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ad9a:	9b07      	ldr	r3, [sp, #28]
 801ad9c:	9309      	str	r3, [sp, #36]	@ 0x24
 801ad9e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ada0:	2b00      	cmp	r3, #0
 801ada2:	f340 80b5 	ble.w	801af10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ada6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801ada8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801adaa:	68c7      	ldr	r7, [r0, #12]
 801adac:	6892      	ldr	r2, [r2, #8]
 801adae:	ea5f 402b 	movs.w	r0, fp, asr #16
 801adb2:	ea4f 4625 	mov.w	r6, r5, asr #16
 801adb6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801adba:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801adbe:	f100 80fb 	bmi.w	801afb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801adc2:	f102 3cff 	add.w	ip, r2, #4294967295
 801adc6:	4560      	cmp	r0, ip
 801adc8:	f280 80f6 	bge.w	801afb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801adcc:	2e00      	cmp	r6, #0
 801adce:	f2c0 80f3 	blt.w	801afb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801add2:	f107 3cff 	add.w	ip, r7, #4294967295
 801add6:	4566      	cmp	r6, ip
 801add8:	f280 80ee 	bge.w	801afb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801addc:	b212      	sxth	r2, r2
 801adde:	fb06 0002 	mla	r0, r6, r2, r0
 801ade2:	9e08      	ldr	r6, [sp, #32]
 801ade4:	1837      	adds	r7, r6, r0
 801ade6:	5c30      	ldrb	r0, [r6, r0]
 801ade8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801adec:	eb04 0c08 	add.w	ip, r4, r8
 801adf0:	2b00      	cmp	r3, #0
 801adf2:	f000 80d3 	beq.w	801af9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801adf6:	787e      	ldrb	r6, [r7, #1]
 801adf8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801adfc:	4426      	add	r6, r4
 801adfe:	2900      	cmp	r1, #0
 801ae00:	f000 80d4 	beq.w	801afac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801ae04:	18b8      	adds	r0, r7, r2
 801ae06:	5cba      	ldrb	r2, [r7, r2]
 801ae08:	7840      	ldrb	r0, [r0, #1]
 801ae0a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ae0e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ae12:	4422      	add	r2, r4
 801ae14:	4420      	add	r0, r4
 801ae16:	b29b      	uxth	r3, r3
 801ae18:	b289      	uxth	r1, r1
 801ae1a:	fb03 f901 	mul.w	r9, r3, r1
 801ae1e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ae22:	011b      	lsls	r3, r3, #4
 801ae24:	b289      	uxth	r1, r1
 801ae26:	78b7      	ldrb	r7, [r6, #2]
 801ae28:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ae2c:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ae30:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801ae34:	eba3 0309 	sub.w	r3, r3, r9
 801ae38:	b29b      	uxth	r3, r3
 801ae3a:	ebae 0e01 	sub.w	lr, lr, r1
 801ae3e:	fa1f fe8e 	uxth.w	lr, lr
 801ae42:	435f      	muls	r7, r3
 801ae44:	fb0e 770a 	mla	r7, lr, sl, r7
 801ae48:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ae4c:	fb01 770a 	mla	r7, r1, sl, r7
 801ae50:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ae54:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ae58:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ae5c:	f896 8000 	ldrb.w	r8, [r6]
 801ae60:	7876      	ldrb	r6, [r6, #1]
 801ae62:	fb03 f808 	mul.w	r8, r3, r8
 801ae66:	fb0e 8807 	mla	r8, lr, r7, r8
 801ae6a:	7817      	ldrb	r7, [r2, #0]
 801ae6c:	fb01 8807 	mla	r8, r1, r7, r8
 801ae70:	7807      	ldrb	r7, [r0, #0]
 801ae72:	fb09 8707 	mla	r7, r9, r7, r8
 801ae76:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801ae7a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ae7e:	ea47 070a 	orr.w	r7, r7, sl
 801ae82:	4373      	muls	r3, r6
 801ae84:	f892 a001 	ldrb.w	sl, [r2, #1]
 801ae88:	fb0e 330c 	mla	r3, lr, ip, r3
 801ae8c:	fb01 310a 	mla	r1, r1, sl, r3
 801ae90:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ae94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ae96:	fb09 1a0a 	mla	sl, r9, sl, r1
 801ae9a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae9e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801aea2:	ea47 070a 	orr.w	r7, r7, sl
 801aea6:	801f      	strh	r7, [r3, #0]
 801aea8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aeaa:	3302      	adds	r3, #2
 801aeac:	9309      	str	r3, [sp, #36]	@ 0x24
 801aeae:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801aeb0:	449b      	add	fp, r3
 801aeb2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801aeb4:	441d      	add	r5, r3
 801aeb6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801aeb8:	3b01      	subs	r3, #1
 801aeba:	930b      	str	r3, [sp, #44]	@ 0x2c
 801aebc:	e76f      	b.n	801ad9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801aebe:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801aec0:	449b      	add	fp, r3
 801aec2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801aec4:	441d      	add	r5, r3
 801aec6:	9b06      	ldr	r3, [sp, #24]
 801aec8:	3b01      	subs	r3, #1
 801aeca:	9306      	str	r3, [sp, #24]
 801aecc:	9b07      	ldr	r3, [sp, #28]
 801aece:	3302      	adds	r3, #2
 801aed0:	9307      	str	r3, [sp, #28]
 801aed2:	e744      	b.n	801ad5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801aed4:	d023      	beq.n	801af1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801aed6:	9b06      	ldr	r3, [sp, #24]
 801aed8:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801aeda:	3b01      	subs	r3, #1
 801aedc:	fb00 b003 	mla	r0, r0, r3, fp
 801aee0:	1400      	asrs	r0, r0, #16
 801aee2:	f53f af58 	bmi.w	801ad96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801aee6:	3901      	subs	r1, #1
 801aee8:	4288      	cmp	r0, r1
 801aeea:	f6bf af54 	bge.w	801ad96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801aeee:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801aef0:	fb01 5303 	mla	r3, r1, r3, r5
 801aef4:	141b      	asrs	r3, r3, #16
 801aef6:	f53f af4e 	bmi.w	801ad96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801aefa:	3a01      	subs	r2, #1
 801aefc:	4293      	cmp	r3, r2
 801aefe:	f6bf af4a 	bge.w	801ad96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801af02:	9b06      	ldr	r3, [sp, #24]
 801af04:	9309      	str	r3, [sp, #36]	@ 0x24
 801af06:	9b07      	ldr	r3, [sp, #28]
 801af08:	930b      	str	r3, [sp, #44]	@ 0x2c
 801af0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801af0c:	2b00      	cmp	r3, #0
 801af0e:	dc70      	bgt.n	801aff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801af10:	9b06      	ldr	r3, [sp, #24]
 801af12:	9a07      	ldr	r2, [sp, #28]
 801af14:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af18:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801af1c:	9307      	str	r3, [sp, #28]
 801af1e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801af20:	2b00      	cmp	r3, #0
 801af22:	f340 80eb 	ble.w	801b0fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801af26:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af2a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801af2e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801af32:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801af34:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af38:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af40:	eef0 6a62 	vmov.f32	s13, s5
 801af44:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af4c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af50:	ee16 ba90 	vmov	fp, s13
 801af54:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af58:	eef0 6a43 	vmov.f32	s13, s6
 801af5c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801af60:	ee12 2a90 	vmov	r2, s5
 801af64:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801af68:	fb92 f3f3 	sdiv	r3, r2, r3
 801af6c:	ee13 2a10 	vmov	r2, s6
 801af70:	931b      	str	r3, [sp, #108]	@ 0x6c
 801af72:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801af74:	fb92 f3f3 	sdiv	r3, r2, r3
 801af78:	931c      	str	r3, [sp, #112]	@ 0x70
 801af7a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801af7c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801af7e:	3b01      	subs	r3, #1
 801af80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af84:	930a      	str	r3, [sp, #40]	@ 0x28
 801af86:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801af88:	bf08      	it	eq
 801af8a:	4613      	moveq	r3, r2
 801af8c:	ee16 5a90 	vmov	r5, s13
 801af90:	9306      	str	r3, [sp, #24]
 801af92:	eeb0 3a67 	vmov.f32	s6, s15
 801af96:	eef0 2a47 	vmov.f32	s5, s14
 801af9a:	e6d2      	b.n	801ad42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801af9c:	b149      	cbz	r1, 801afb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801af9e:	5cba      	ldrb	r2, [r7, r2]
 801afa0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801afa4:	4422      	add	r2, r4
 801afa6:	4660      	mov	r0, ip
 801afa8:	4666      	mov	r6, ip
 801afaa:	e734      	b.n	801ae16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801afac:	4660      	mov	r0, ip
 801afae:	4662      	mov	r2, ip
 801afb0:	e731      	b.n	801ae16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801afb2:	4660      	mov	r0, ip
 801afb4:	4662      	mov	r2, ip
 801afb6:	e7f7      	b.n	801afa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801afb8:	f110 0c01 	adds.w	ip, r0, #1
 801afbc:	f53f af74 	bmi.w	801aea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801afc0:	4562      	cmp	r2, ip
 801afc2:	f6ff af71 	blt.w	801aea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801afc6:	f116 0c01 	adds.w	ip, r6, #1
 801afca:	f53f af6d 	bmi.w	801aea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801afce:	4567      	cmp	r7, ip
 801afd0:	f6ff af6a 	blt.w	801aea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801afd4:	b23f      	sxth	r7, r7
 801afd6:	b212      	sxth	r2, r2
 801afd8:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801afdc:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801afe0:	9200      	str	r2, [sp, #0]
 801afe2:	9701      	str	r7, [sp, #4]
 801afe4:	4623      	mov	r3, r4
 801afe6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801afea:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801afec:	f7ff fde6 	bl	801abbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801aff0:	e75a      	b.n	801aea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aff2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801aff4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801aff8:	ea4f 462b 	mov.w	r6, fp, asr #16
 801affc:	1428      	asrs	r0, r5, #16
 801affe:	fb02 6000 	mla	r0, r2, r0, r6
 801b002:	9e08      	ldr	r6, [sp, #32]
 801b004:	f816 8000 	ldrb.w	r8, [r6, r0]
 801b008:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b00c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b010:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b014:	1837      	adds	r7, r6, r0
 801b016:	eb04 0c08 	add.w	ip, r4, r8
 801b01a:	2b00      	cmp	r3, #0
 801b01c:	d060      	beq.n	801b0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801b01e:	787e      	ldrb	r6, [r7, #1]
 801b020:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b024:	4426      	add	r6, r4
 801b026:	2900      	cmp	r1, #0
 801b028:	d062      	beq.n	801b0f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801b02a:	18b8      	adds	r0, r7, r2
 801b02c:	5cba      	ldrb	r2, [r7, r2]
 801b02e:	7840      	ldrb	r0, [r0, #1]
 801b030:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b034:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b038:	4422      	add	r2, r4
 801b03a:	4420      	add	r0, r4
 801b03c:	b29b      	uxth	r3, r3
 801b03e:	b289      	uxth	r1, r1
 801b040:	fb03 f901 	mul.w	r9, r3, r1
 801b044:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b048:	011b      	lsls	r3, r3, #4
 801b04a:	b289      	uxth	r1, r1
 801b04c:	78b7      	ldrb	r7, [r6, #2]
 801b04e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b052:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b056:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b05a:	eba3 0309 	sub.w	r3, r3, r9
 801b05e:	b29b      	uxth	r3, r3
 801b060:	ebae 0e01 	sub.w	lr, lr, r1
 801b064:	fa1f fe8e 	uxth.w	lr, lr
 801b068:	435f      	muls	r7, r3
 801b06a:	fb0e 770a 	mla	r7, lr, sl, r7
 801b06e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b072:	fb01 770a 	mla	r7, r1, sl, r7
 801b076:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b07a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b07e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b082:	f896 8000 	ldrb.w	r8, [r6]
 801b086:	7876      	ldrb	r6, [r6, #1]
 801b088:	fb03 f808 	mul.w	r8, r3, r8
 801b08c:	fb0e 8807 	mla	r8, lr, r7, r8
 801b090:	7817      	ldrb	r7, [r2, #0]
 801b092:	fb01 8807 	mla	r8, r1, r7, r8
 801b096:	7807      	ldrb	r7, [r0, #0]
 801b098:	fb09 8707 	mla	r7, r9, r7, r8
 801b09c:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b0a0:	4373      	muls	r3, r6
 801b0a2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b0a6:	7856      	ldrb	r6, [r2, #1]
 801b0a8:	ea47 070a 	orr.w	r7, r7, sl
 801b0ac:	fb0e 330c 	mla	r3, lr, ip, r3
 801b0b0:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b0b4:	fb01 3306 	mla	r3, r1, r6, r3
 801b0b8:	fb09 3a0a 	mla	sl, r9, sl, r3
 801b0bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b0c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b0c2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b0c6:	ea47 070a 	orr.w	r7, r7, sl
 801b0ca:	f823 7b02 	strh.w	r7, [r3], #2
 801b0ce:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b0d0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b0d2:	449b      	add	fp, r3
 801b0d4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b0d6:	441d      	add	r5, r3
 801b0d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b0da:	3b01      	subs	r3, #1
 801b0dc:	9309      	str	r3, [sp, #36]	@ 0x24
 801b0de:	e714      	b.n	801af0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b0e0:	b149      	cbz	r1, 801b0f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b0e2:	5cba      	ldrb	r2, [r7, r2]
 801b0e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b0e8:	4422      	add	r2, r4
 801b0ea:	4660      	mov	r0, ip
 801b0ec:	4666      	mov	r6, ip
 801b0ee:	e7a5      	b.n	801b03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b0f0:	4660      	mov	r0, ip
 801b0f2:	4662      	mov	r2, ip
 801b0f4:	e7a2      	b.n	801b03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b0f6:	4660      	mov	r0, ip
 801b0f8:	4662      	mov	r2, ip
 801b0fa:	e7f7      	b.n	801b0ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801b0fc:	b00f      	add	sp, #60	@ 0x3c
 801b0fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b102 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801b102:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b106:	b085      	sub	sp, #20
 801b108:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801b10c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801b110:	9102      	str	r1, [sp, #8]
 801b112:	2c00      	cmp	r4, #0
 801b114:	fb04 710c 	mla	r1, r4, ip, r7
 801b118:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801b11c:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801b120:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801b124:	eb02 0e01 	add.w	lr, r2, r1
 801b128:	f2c0 8122 	blt.w	801b370 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b12c:	45a0      	cmp	r8, r4
 801b12e:	f340 811f 	ble.w	801b370 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b132:	2f00      	cmp	r7, #0
 801b134:	f2c0 811a 	blt.w	801b36c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b138:	45bc      	cmp	ip, r7
 801b13a:	f340 8117 	ble.w	801b36c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b13e:	5c52      	ldrb	r2, [r2, r1]
 801b140:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b144:	1c7a      	adds	r2, r7, #1
 801b146:	f100 8116 	bmi.w	801b376 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b14a:	4594      	cmp	ip, r2
 801b14c:	f340 8113 	ble.w	801b376 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b150:	2e00      	cmp	r6, #0
 801b152:	f000 8112 	beq.w	801b37a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801b156:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b15a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b15e:	3401      	adds	r4, #1
 801b160:	f100 810f 	bmi.w	801b382 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b164:	45a0      	cmp	r8, r4
 801b166:	f340 810c 	ble.w	801b382 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b16a:	2800      	cmp	r0, #0
 801b16c:	f000 810c 	beq.w	801b388 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801b170:	2f00      	cmp	r7, #0
 801b172:	f2c0 8104 	blt.w	801b37e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b176:	45bc      	cmp	ip, r7
 801b178:	f340 8101 	ble.w	801b37e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b17c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801b180:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801b184:	3701      	adds	r7, #1
 801b186:	f100 8102 	bmi.w	801b38e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b18a:	45bc      	cmp	ip, r7
 801b18c:	f340 80ff 	ble.w	801b38e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b190:	2e00      	cmp	r6, #0
 801b192:	f000 80fe 	beq.w	801b392 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801b196:	44f4      	add	ip, lr
 801b198:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801b19c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801b1a0:	b2b6      	uxth	r6, r6
 801b1a2:	b280      	uxth	r0, r0
 801b1a4:	fb00 fe06 	mul.w	lr, r0, r6
 801b1a8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b1ac:	0136      	lsls	r6, r6, #4
 801b1ae:	eba6 070e 	sub.w	r7, r6, lr
 801b1b2:	b280      	uxth	r0, r0
 801b1b4:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801b1b8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b1bc:	b2bf      	uxth	r7, r7
 801b1be:	1a1b      	subs	r3, r3, r0
 801b1c0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b1c4:	b29b      	uxth	r3, r3
 801b1c6:	fb0a f607 	mul.w	r6, sl, r7
 801b1ca:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b1ce:	fb0b 6603 	mla	r6, fp, r3, r6
 801b1d2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b1d6:	fb00 6609 	mla	r6, r0, r9, r6
 801b1da:	fb0e 6608 	mla	r6, lr, r8, r6
 801b1de:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b1e2:	9600      	str	r6, [sp, #0]
 801b1e4:	2e00      	cmp	r6, #0
 801b1e6:	f000 80be 	beq.w	801b366 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801b1ea:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b1ee:	fb0b fc0c 	mul.w	ip, fp, ip
 801b1f2:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801b1f6:	fb0b f505 	mul.w	r5, fp, r5
 801b1fa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b1fe:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801b202:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b206:	44dc      	add	ip, fp
 801b208:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b20c:	9501      	str	r5, [sp, #4]
 801b20e:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801b212:	9503      	str	r5, [sp, #12]
 801b214:	9d01      	ldr	r5, [sp, #4]
 801b216:	9e02      	ldr	r6, [sp, #8]
 801b218:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801b21c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b220:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801b224:	fb0a fc0c 	mul.w	ip, sl, ip
 801b228:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b22c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b230:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b234:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b238:	4465      	add	r5, ip
 801b23a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b23e:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801b242:	fb09 fc0c 	mul.w	ip, r9, ip
 801b246:	fb09 f904 	mul.w	r9, r9, r4
 801b24a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801b24e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b252:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801b256:	fb08 f404 	mul.w	r4, r8, r4
 801b25a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b25e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b262:	fb08 f802 	mul.w	r8, r8, r2
 801b266:	fb0a fa01 	mul.w	sl, sl, r1
 801b26a:	0a22      	lsrs	r2, r4, #8
 801b26c:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801b270:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b274:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801b278:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b27c:	4414      	add	r4, r2
 801b27e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b282:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801b286:	0a2d      	lsrs	r5, r5, #8
 801b288:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b28c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b290:	9a03      	ldr	r2, [sp, #12]
 801b292:	8836      	ldrh	r6, [r6, #0]
 801b294:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b298:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b29c:	437d      	muls	r5, r7
 801b29e:	4461      	add	r1, ip
 801b2a0:	0a24      	lsrs	r4, r4, #8
 801b2a2:	fb02 5503 	mla	r5, r2, r3, r5
 801b2a6:	0a09      	lsrs	r1, r1, #8
 801b2a8:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801b2ac:	fb04 540e 	mla	r4, r4, lr, r5
 801b2b0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b2b4:	fb01 4100 	mla	r1, r1, r0, r4
 801b2b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b2bc:	0a09      	lsrs	r1, r1, #8
 801b2be:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b2c2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801b2c6:	fb07 f70a 	mul.w	r7, r7, sl
 801b2ca:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b2ce:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801b2d2:	fb03 7101 	mla	r1, r3, r1, r7
 801b2d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b2da:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801b2de:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b2e2:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801b2e6:	fb00 e101 	mla	r1, r0, r1, lr
 801b2ea:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801b2ee:	9a00      	ldr	r2, [sp, #0]
 801b2f0:	b287      	uxth	r7, r0
 801b2f2:	437a      	muls	r2, r7
 801b2f4:	0a09      	lsrs	r1, r1, #8
 801b2f6:	1c53      	adds	r3, r2, #1
 801b2f8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b2fc:	4321      	orrs	r1, r4
 801b2fe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b302:	1235      	asrs	r5, r6, #8
 801b304:	0c0a      	lsrs	r2, r1, #16
 801b306:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b30a:	b2db      	uxtb	r3, r3
 801b30c:	fb12 f207 	smulbb	r2, r2, r7
 801b310:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b314:	fb05 2503 	mla	r5, r5, r3, r2
 801b318:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b31c:	10f2      	asrs	r2, r6, #3
 801b31e:	b2c8      	uxtb	r0, r1
 801b320:	00f6      	lsls	r6, r6, #3
 801b322:	fb14 f407 	smulbb	r4, r4, r7
 801b326:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b32a:	b2f6      	uxtb	r6, r6
 801b32c:	fb10 f007 	smulbb	r0, r0, r7
 801b330:	fb02 4203 	mla	r2, r2, r3, r4
 801b334:	b2ad      	uxth	r5, r5
 801b336:	fb06 0303 	mla	r3, r6, r3, r0
 801b33a:	b299      	uxth	r1, r3
 801b33c:	b294      	uxth	r4, r2
 801b33e:	1c6b      	adds	r3, r5, #1
 801b340:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b344:	1c62      	adds	r2, r4, #1
 801b346:	1c4b      	adds	r3, r1, #1
 801b348:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b34c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b350:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b354:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b358:	0952      	lsrs	r2, r2, #5
 801b35a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b35e:	432b      	orrs	r3, r5
 801b360:	4313      	orrs	r3, r2
 801b362:	9a02      	ldr	r2, [sp, #8]
 801b364:	8013      	strh	r3, [r2, #0]
 801b366:	b005      	add	sp, #20
 801b368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b36c:	2500      	movs	r5, #0
 801b36e:	e6e9      	b.n	801b144 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b370:	2100      	movs	r1, #0
 801b372:	460d      	mov	r5, r1
 801b374:	e6f3      	b.n	801b15e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b376:	2100      	movs	r1, #0
 801b378:	e6f1      	b.n	801b15e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b37a:	4631      	mov	r1, r6
 801b37c:	e6ef      	b.n	801b15e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b37e:	2400      	movs	r4, #0
 801b380:	e700      	b.n	801b184 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b382:	2200      	movs	r2, #0
 801b384:	4614      	mov	r4, r2
 801b386:	e70b      	b.n	801b1a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b388:	4602      	mov	r2, r0
 801b38a:	4604      	mov	r4, r0
 801b38c:	e708      	b.n	801b1a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b38e:	2200      	movs	r2, #0
 801b390:	e706      	b.n	801b1a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b392:	4632      	mov	r2, r6
 801b394:	e704      	b.n	801b1a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b396 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b396:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b39a:	b09f      	sub	sp, #124	@ 0x7c
 801b39c:	921b      	str	r2, [sp, #108]	@ 0x6c
 801b39e:	9309      	str	r3, [sp, #36]	@ 0x24
 801b3a0:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801b3a2:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801b3a6:	931c      	str	r3, [sp, #112]	@ 0x70
 801b3a8:	9119      	str	r1, [sp, #100]	@ 0x64
 801b3aa:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801b3ae:	901d      	str	r0, [sp, #116]	@ 0x74
 801b3b0:	6850      	ldr	r0, [r2, #4]
 801b3b2:	6812      	ldr	r2, [r2, #0]
 801b3b4:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801b3b6:	fb00 1303 	mla	r3, r0, r3, r1
 801b3ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b3be:	930c      	str	r3, [sp, #48]	@ 0x30
 801b3c0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b3c2:	681b      	ldr	r3, [r3, #0]
 801b3c4:	9312      	str	r3, [sp, #72]	@ 0x48
 801b3c6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b3c8:	685e      	ldr	r6, [r3, #4]
 801b3ca:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801b3ce:	930d      	str	r3, [sp, #52]	@ 0x34
 801b3d0:	3604      	adds	r6, #4
 801b3d2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b3d4:	2b00      	cmp	r3, #0
 801b3d6:	dc03      	bgt.n	801b3e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b3d8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b3da:	2b00      	cmp	r3, #0
 801b3dc:	f340 8388 	ble.w	801baf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b3e0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b3e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b3e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b3ea:	1e48      	subs	r0, r1, #1
 801b3ec:	1e57      	subs	r7, r2, #1
 801b3ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b3f0:	2b00      	cmp	r3, #0
 801b3f2:	f340 8195 	ble.w	801b720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b3f6:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b3f8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b3fc:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b400:	d406      	bmi.n	801b410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b402:	4584      	cmp	ip, r0
 801b404:	da04      	bge.n	801b410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b406:	2b00      	cmp	r3, #0
 801b408:	db02      	blt.n	801b410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b40a:	42bb      	cmp	r3, r7
 801b40c:	f2c0 8189 	blt.w	801b722 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b410:	f11c 0c01 	adds.w	ip, ip, #1
 801b414:	f100 8177 	bmi.w	801b706 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b418:	4561      	cmp	r1, ip
 801b41a:	f2c0 8174 	blt.w	801b706 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b41e:	3301      	adds	r3, #1
 801b420:	f100 8171 	bmi.w	801b706 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b424:	429a      	cmp	r2, r3
 801b426:	f2c0 816e 	blt.w	801b706 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b42a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b42c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b42e:	931a      	str	r3, [sp, #104]	@ 0x68
 801b430:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b432:	2b00      	cmp	r3, #0
 801b434:	f340 8193 	ble.w	801b75e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b438:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b43a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b43e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b440:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b444:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b446:	141b      	asrs	r3, r3, #16
 801b448:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b44c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b450:	f100 81d6 	bmi.w	801b800 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b454:	f100 38ff 	add.w	r8, r0, #4294967295
 801b458:	4543      	cmp	r3, r8
 801b45a:	f280 81d1 	bge.w	801b800 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b45e:	f1bc 0f00 	cmp.w	ip, #0
 801b462:	f2c0 81cd 	blt.w	801b800 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b466:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b46a:	45c4      	cmp	ip, r8
 801b46c:	f280 81c8 	bge.w	801b800 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b470:	b200      	sxth	r0, r0
 801b472:	fb0c 3300 	mla	r3, ip, r0, r3
 801b476:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b478:	eb04 0803 	add.w	r8, r4, r3
 801b47c:	5ce3      	ldrb	r3, [r4, r3]
 801b47e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b482:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b486:	2a00      	cmp	r2, #0
 801b488:	f000 81af 	beq.w	801b7ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b48c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b490:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b494:	940e      	str	r4, [sp, #56]	@ 0x38
 801b496:	0e24      	lsrs	r4, r4, #24
 801b498:	9415      	str	r4, [sp, #84]	@ 0x54
 801b49a:	b179      	cbz	r1, 801b4bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b49c:	eb08 0c00 	add.w	ip, r8, r0
 801b4a0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b4a4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b4a8:	900a      	str	r0, [sp, #40]	@ 0x28
 801b4aa:	0e00      	lsrs	r0, r0, #24
 801b4ac:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b4ae:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b4b2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b4b6:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b4b8:	0e00      	lsrs	r0, r0, #24
 801b4ba:	9016      	str	r0, [sp, #88]	@ 0x58
 801b4bc:	b292      	uxth	r2, r2
 801b4be:	b289      	uxth	r1, r1
 801b4c0:	fb02 f901 	mul.w	r9, r2, r1
 801b4c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b4c8:	0112      	lsls	r2, r2, #4
 801b4ca:	eba2 0809 	sub.w	r8, r2, r9
 801b4ce:	b289      	uxth	r1, r1
 801b4d0:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b4d4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b4d6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b4d8:	fa1f f888 	uxth.w	r8, r8
 801b4dc:	1a52      	subs	r2, r2, r1
 801b4de:	b292      	uxth	r2, r2
 801b4e0:	fb08 f000 	mul.w	r0, r8, r0
 801b4e4:	fb02 000e 	mla	r0, r2, lr, r0
 801b4e8:	fb01 0004 	mla	r0, r1, r4, r0
 801b4ec:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b4ee:	fb09 0004 	mla	r0, r9, r4, r0
 801b4f2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b4f6:	2800      	cmp	r0, #0
 801b4f8:	f000 80fa 	beq.w	801b6f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b4fc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b500:	d01b      	beq.n	801b53a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b502:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b506:	fb0e fa0a 	mul.w	sl, lr, sl
 801b50a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b50e:	fb0e fe03 	mul.w	lr, lr, r3
 801b512:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b516:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b51a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b51e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b522:	4453      	add	r3, sl
 801b524:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b528:	0a1b      	lsrs	r3, r3, #8
 801b52a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b52e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b532:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b536:	ea43 030c 	orr.w	r3, r3, ip
 801b53a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b53c:	2cff      	cmp	r4, #255	@ 0xff
 801b53e:	d021      	beq.n	801b584 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b540:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b542:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b546:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b548:	fb04 fb0b 	mul.w	fp, r4, fp
 801b54c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b54e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b552:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b554:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b558:	fb04 fa0a 	mul.w	sl, r4, sl
 801b55c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b560:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b564:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b568:	44de      	add	lr, fp
 801b56a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b56e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b572:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b576:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b57a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b57e:	ea4e 040a 	orr.w	r4, lr, sl
 801b582:	940e      	str	r4, [sp, #56]	@ 0x38
 801b584:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b586:	2cff      	cmp	r4, #255	@ 0xff
 801b588:	d021      	beq.n	801b5ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801b58a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b58c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b590:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b592:	fb04 fb0b 	mul.w	fp, r4, fp
 801b596:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b598:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b59c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b59e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b5a2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b5a6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b5aa:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b5ae:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b5b2:	44de      	add	lr, fp
 801b5b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b5b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b5bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5c0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b5c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b5c8:	ea4e 040a 	orr.w	r4, lr, sl
 801b5cc:	940a      	str	r4, [sp, #40]	@ 0x28
 801b5ce:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b5d0:	2cff      	cmp	r4, #255	@ 0xff
 801b5d2:	d021      	beq.n	801b618 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b5d4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b5d6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b5da:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b5dc:	fb04 fb0b 	mul.w	fp, r4, fp
 801b5e0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b5e2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b5e6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b5e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b5ec:	fb04 fa0a 	mul.w	sl, r4, sl
 801b5f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b5f4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b5f8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b5fc:	44de      	add	lr, fp
 801b5fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b602:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b606:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b60a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b60e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b612:	ea4e 040a 	orr.w	r4, lr, sl
 801b616:	940f      	str	r4, [sp, #60]	@ 0x3c
 801b618:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b61a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b61e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b620:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801b624:	fb08 fc0c 	mul.w	ip, r8, ip
 801b628:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b62c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b630:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b632:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b636:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b63a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b63c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b640:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801b644:	fb08 f80e 	mul.w	r8, r8, lr
 801b648:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b64c:	fb02 8303 	mla	r3, r2, r3, r8
 801b650:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b652:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b654:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b658:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b65a:	fb01 330a 	mla	r3, r1, sl, r3
 801b65e:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801b662:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b664:	fb09 3901 	mla	r9, r9, r1, r3
 801b668:	4342      	muls	r2, r0
 801b66a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b66e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b672:	883b      	ldrh	r3, [r7, #0]
 801b674:	1c50      	adds	r0, r2, #1
 801b676:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b67a:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b67e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b682:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b686:	1219      	asrs	r1, r3, #8
 801b688:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b68c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b690:	b2c0      	uxtb	r0, r0
 801b692:	fb12 f204 	smulbb	r2, r2, r4
 801b696:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b69a:	fb01 2100 	mla	r1, r1, r0, r2
 801b69e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b6a2:	10da      	asrs	r2, r3, #3
 801b6a4:	fa5f fc8c 	uxtb.w	ip, ip
 801b6a8:	00db      	lsls	r3, r3, #3
 801b6aa:	fb1c fc04 	smulbb	ip, ip, r4
 801b6ae:	b2db      	uxtb	r3, r3
 801b6b0:	b289      	uxth	r1, r1
 801b6b2:	fb03 c300 	mla	r3, r3, r0, ip
 801b6b6:	fa1f fc83 	uxth.w	ip, r3
 801b6ba:	1c4b      	adds	r3, r1, #1
 801b6bc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b6c0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b6c4:	fb1e fe04 	smulbb	lr, lr, r4
 801b6c8:	f10c 0301 	add.w	r3, ip, #1
 801b6cc:	fb02 e200 	mla	r2, r2, r0, lr
 801b6d0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b6d4:	b292      	uxth	r2, r2
 801b6d6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b6da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b6de:	430b      	orrs	r3, r1
 801b6e0:	1c51      	adds	r1, r2, #1
 801b6e2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b6e6:	0952      	lsrs	r2, r2, #5
 801b6e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b6ec:	4313      	orrs	r3, r2
 801b6ee:	803b      	strh	r3, [r7, #0]
 801b6f0:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b6f2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b6f4:	441a      	add	r2, r3
 801b6f6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b6f8:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b6fa:	441d      	add	r5, r3
 801b6fc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b6fe:	3b01      	subs	r3, #1
 801b700:	3702      	adds	r7, #2
 801b702:	931a      	str	r3, [sp, #104]	@ 0x68
 801b704:	e694      	b.n	801b430 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b706:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b708:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b70a:	441c      	add	r4, r3
 801b70c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b70e:	9429      	str	r4, [sp, #164]	@ 0xa4
 801b710:	441d      	add	r5, r3
 801b712:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b714:	3b01      	subs	r3, #1
 801b716:	9309      	str	r3, [sp, #36]	@ 0x24
 801b718:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b71a:	3302      	adds	r3, #2
 801b71c:	930c      	str	r3, [sp, #48]	@ 0x30
 801b71e:	e666      	b.n	801b3ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b720:	d024      	beq.n	801b76c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b722:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b724:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801b726:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b728:	3b01      	subs	r3, #1
 801b72a:	fb00 4003 	mla	r0, r0, r3, r4
 801b72e:	1400      	asrs	r0, r0, #16
 801b730:	f53f ae7b 	bmi.w	801b42a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b734:	3901      	subs	r1, #1
 801b736:	4288      	cmp	r0, r1
 801b738:	f6bf ae77 	bge.w	801b42a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b73c:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801b73e:	fb01 5303 	mla	r3, r1, r3, r5
 801b742:	141b      	asrs	r3, r3, #16
 801b744:	f53f ae71 	bmi.w	801b42a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b748:	3a01      	subs	r2, #1
 801b74a:	4293      	cmp	r3, r2
 801b74c:	f6bf ae6d 	bge.w	801b42a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b750:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801b754:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801b758:	f1bb 0f00 	cmp.w	fp, #0
 801b75c:	dc70      	bgt.n	801b840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b75e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b760:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b764:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b766:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b76a:	930c      	str	r3, [sp, #48]	@ 0x30
 801b76c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b76e:	2b00      	cmp	r3, #0
 801b770:	f340 81be 	ble.w	801baf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b774:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b778:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b77c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b780:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b782:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b786:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b78a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b78e:	eef0 6a62 	vmov.f32	s13, s5
 801b792:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b796:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b79a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b79e:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801b7a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b7a6:	eef0 6a43 	vmov.f32	s13, s6
 801b7aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b7ae:	ee12 2a90 	vmov	r2, s5
 801b7b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b7b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7ba:	ee13 2a10 	vmov	r2, s6
 801b7be:	932b      	str	r3, [sp, #172]	@ 0xac
 801b7c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b7c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7c6:	932c      	str	r3, [sp, #176]	@ 0xb0
 801b7c8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b7ca:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801b7cc:	3b01      	subs	r3, #1
 801b7ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b7d2:	9319      	str	r3, [sp, #100]	@ 0x64
 801b7d4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b7d6:	bf08      	it	eq
 801b7d8:	4613      	moveq	r3, r2
 801b7da:	ee16 5a90 	vmov	r5, s13
 801b7de:	9309      	str	r3, [sp, #36]	@ 0x24
 801b7e0:	eeb0 3a67 	vmov.f32	s6, s15
 801b7e4:	eef0 2a47 	vmov.f32	s5, s14
 801b7e8:	e5f3      	b.n	801b3d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b7ea:	2900      	cmp	r1, #0
 801b7ec:	f43f ae66 	beq.w	801b4bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b7f0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b7f4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b7f8:	900a      	str	r0, [sp, #40]	@ 0x28
 801b7fa:	0e00      	lsrs	r0, r0, #24
 801b7fc:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b7fe:	e65d      	b.n	801b4bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b800:	f113 0801 	adds.w	r8, r3, #1
 801b804:	f53f af74 	bmi.w	801b6f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b808:	4540      	cmp	r0, r8
 801b80a:	f6ff af71 	blt.w	801b6f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b80e:	f11c 0801 	adds.w	r8, ip, #1
 801b812:	f53f af6d 	bmi.w	801b6f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b816:	45c6      	cmp	lr, r8
 801b818:	f6ff af6a 	blt.w	801b6f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b81c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801b81e:	9302      	str	r3, [sp, #8]
 801b820:	b200      	sxth	r0, r0
 801b822:	fa0f f38e 	sxth.w	r3, lr
 801b826:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b82a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b82e:	9301      	str	r3, [sp, #4]
 801b830:	9000      	str	r0, [sp, #0]
 801b832:	4633      	mov	r3, r6
 801b834:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b836:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801b838:	4639      	mov	r1, r7
 801b83a:	f7ff fc62 	bl	801b102 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b83e:	e757      	b.n	801b6f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b840:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b842:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b844:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b848:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b84a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b84e:	1427      	asrs	r7, r4, #16
 801b850:	142b      	asrs	r3, r5, #16
 801b852:	fb01 7303 	mla	r3, r1, r3, r7
 801b856:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b858:	18e7      	adds	r7, r4, r3
 801b85a:	5ce3      	ldrb	r3, [r4, r3]
 801b85c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b860:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b864:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b868:	2a00      	cmp	r2, #0
 801b86a:	f000 8137 	beq.w	801badc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b86e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b872:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b876:	9410      	str	r4, [sp, #64]	@ 0x40
 801b878:	0e24      	lsrs	r4, r4, #24
 801b87a:	9417      	str	r4, [sp, #92]	@ 0x5c
 801b87c:	b170      	cbz	r0, 801b89c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b87e:	eb07 0e01 	add.w	lr, r7, r1
 801b882:	5c79      	ldrb	r1, [r7, r1]
 801b884:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b888:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b88a:	0e09      	lsrs	r1, r1, #24
 801b88c:	9114      	str	r1, [sp, #80]	@ 0x50
 801b88e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b892:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b896:	9111      	str	r1, [sp, #68]	@ 0x44
 801b898:	0e09      	lsrs	r1, r1, #24
 801b89a:	9118      	str	r1, [sp, #96]	@ 0x60
 801b89c:	b292      	uxth	r2, r2
 801b89e:	b280      	uxth	r0, r0
 801b8a0:	fb02 f800 	mul.w	r8, r2, r0
 801b8a4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b8a8:	0112      	lsls	r2, r2, #4
 801b8aa:	eba2 0e08 	sub.w	lr, r2, r8
 801b8ae:	b280      	uxth	r0, r0
 801b8b0:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b8b4:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801b8b6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b8b8:	fa1f fe8e 	uxth.w	lr, lr
 801b8bc:	1a12      	subs	r2, r2, r0
 801b8be:	b292      	uxth	r2, r2
 801b8c0:	fb0e f101 	mul.w	r1, lr, r1
 801b8c4:	fb02 110c 	mla	r1, r2, ip, r1
 801b8c8:	fb00 1104 	mla	r1, r0, r4, r1
 801b8cc:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b8ce:	fb08 1104 	mla	r1, r8, r4, r1
 801b8d2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b8d6:	2900      	cmp	r1, #0
 801b8d8:	f000 80f5 	beq.w	801bac6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b8dc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b8e0:	d019      	beq.n	801b916 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b8e2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b8e6:	fb0c fa0a 	mul.w	sl, ip, sl
 801b8ea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b8ee:	fb0c fc03 	mul.w	ip, ip, r3
 801b8f2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b8f6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b8fa:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b8fe:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b902:	4453      	add	r3, sl
 801b904:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b908:	0a1b      	lsrs	r3, r3, #8
 801b90a:	0a3f      	lsrs	r7, r7, #8
 801b90c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b910:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b914:	433b      	orrs	r3, r7
 801b916:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b918:	2cff      	cmp	r4, #255	@ 0xff
 801b91a:	d020      	beq.n	801b95e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b91c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b91e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b922:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b924:	4367      	muls	r7, r4
 801b926:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b928:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b92c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b92e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b932:	fb04 fa0a 	mul.w	sl, r4, sl
 801b936:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b93a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b93e:	44bc      	add	ip, r7
 801b940:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b944:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b948:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b94c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b950:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b954:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b958:	ea4c 040a 	orr.w	r4, ip, sl
 801b95c:	9410      	str	r4, [sp, #64]	@ 0x40
 801b95e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b960:	2cff      	cmp	r4, #255	@ 0xff
 801b962:	d020      	beq.n	801b9a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b964:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b966:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b96a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b96c:	4367      	muls	r7, r4
 801b96e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b970:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b974:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b976:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b97a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b97e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b982:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b986:	44bc      	add	ip, r7
 801b988:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b98c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b990:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b994:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b998:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b99c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b9a0:	ea4c 040a 	orr.w	r4, ip, sl
 801b9a4:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b9a6:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b9a8:	2cff      	cmp	r4, #255	@ 0xff
 801b9aa:	d020      	beq.n	801b9ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b9ac:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b9ae:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b9b2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b9b4:	4367      	muls	r7, r4
 801b9b6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b9b8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b9bc:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b9be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b9c2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b9c6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b9ca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b9ce:	44bc      	add	ip, r7
 801b9d0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b9d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b9d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9e0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b9e4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b9e8:	ea4c 040a 	orr.w	r4, ip, sl
 801b9ec:	9411      	str	r4, [sp, #68]	@ 0x44
 801b9ee:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b9f0:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b9f4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b9f6:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801b9fa:	fb0e f707 	mul.w	r7, lr, r7
 801b9fe:	fb02 770c 	mla	r7, r2, ip, r7
 801ba02:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ba06:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ba08:	fb00 770c 	mla	r7, r0, ip, r7
 801ba0c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ba10:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ba12:	fb08 770c 	mla	r7, r8, ip, r7
 801ba16:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801ba1a:	fb0e fe0c 	mul.w	lr, lr, ip
 801ba1e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ba22:	fb02 e303 	mla	r3, r2, r3, lr
 801ba26:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ba28:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ba2a:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ba2e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ba30:	fb00 330a 	mla	r3, r0, sl, r3
 801ba34:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801ba38:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ba3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ba3e:	f8b9 0000 	ldrh.w	r0, [r9]
 801ba42:	434b      	muls	r3, r1
 801ba44:	0a3f      	lsrs	r7, r7, #8
 801ba46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba4a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ba4e:	1c59      	adds	r1, r3, #1
 801ba50:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801ba54:	ea47 070c 	orr.w	r7, r7, ip
 801ba58:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ba5c:	1202      	asrs	r2, r0, #8
 801ba5e:	0c3b      	lsrs	r3, r7, #16
 801ba60:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801ba64:	b2c9      	uxtb	r1, r1
 801ba66:	fb13 f304 	smulbb	r3, r3, r4
 801ba6a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ba6e:	fb02 3201 	mla	r2, r2, r1, r3
 801ba72:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801ba76:	10c3      	asrs	r3, r0, #3
 801ba78:	b2ff      	uxtb	r7, r7
 801ba7a:	00c0      	lsls	r0, r0, #3
 801ba7c:	b292      	uxth	r2, r2
 801ba7e:	fb1c fc04 	smulbb	ip, ip, r4
 801ba82:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ba86:	b2c0      	uxtb	r0, r0
 801ba88:	fb17 f704 	smulbb	r7, r7, r4
 801ba8c:	fb03 c301 	mla	r3, r3, r1, ip
 801ba90:	fb00 7001 	mla	r0, r0, r1, r7
 801ba94:	f102 0c01 	add.w	ip, r2, #1
 801ba98:	b280      	uxth	r0, r0
 801ba9a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801ba9e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801baa2:	1c42      	adds	r2, r0, #1
 801baa4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801baa8:	b29b      	uxth	r3, r3
 801baaa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801baae:	ea42 020c 	orr.w	r2, r2, ip
 801bab2:	f103 0c01 	add.w	ip, r3, #1
 801bab6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801baba:	095b      	lsrs	r3, r3, #5
 801babc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bac0:	431a      	orrs	r2, r3
 801bac2:	f8a9 2000 	strh.w	r2, [r9]
 801bac6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801bac8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801baca:	441a      	add	r2, r3
 801bacc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bace:	9229      	str	r2, [sp, #164]	@ 0xa4
 801bad0:	f109 0902 	add.w	r9, r9, #2
 801bad4:	441d      	add	r5, r3
 801bad6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bada:	e63d      	b.n	801b758 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801badc:	2800      	cmp	r0, #0
 801bade:	f43f aedd 	beq.w	801b89c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bae2:	5c79      	ldrb	r1, [r7, r1]
 801bae4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bae8:	910b      	str	r1, [sp, #44]	@ 0x2c
 801baea:	0e09      	lsrs	r1, r1, #24
 801baec:	9114      	str	r1, [sp, #80]	@ 0x50
 801baee:	e6d5      	b.n	801b89c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801baf0:	b01f      	add	sp, #124	@ 0x7c
 801baf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801baf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801baf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bafa:	b089      	sub	sp, #36	@ 0x24
 801bafc:	9101      	str	r1, [sp, #4]
 801bafe:	9801      	ldr	r0, [sp, #4]
 801bb00:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801bb04:	8800      	ldrh	r0, [r0, #0]
 801bb06:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801bb0a:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801bb0e:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801bb12:	1206      	asrs	r6, r0, #8
 801bb14:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801bb18:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801bb1c:	9602      	str	r6, [sp, #8]
 801bb1e:	10c6      	asrs	r6, r0, #3
 801bb20:	00c0      	lsls	r0, r0, #3
 801bb22:	b2c0      	uxtb	r0, r0
 801bb24:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bb28:	9004      	str	r0, [sp, #16]
 801bb2a:	2f00      	cmp	r7, #0
 801bb2c:	fb07 100c 	mla	r0, r7, ip, r1
 801bb30:	9603      	str	r6, [sp, #12]
 801bb32:	eb02 0e00 	add.w	lr, r2, r0
 801bb36:	f2c0 810a 	blt.w	801bd4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bb3a:	45b8      	cmp	r8, r7
 801bb3c:	f340 8107 	ble.w	801bd4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bb40:	2900      	cmp	r1, #0
 801bb42:	f2c0 8102 	blt.w	801bd4a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bb46:	458c      	cmp	ip, r1
 801bb48:	f340 80ff 	ble.w	801bd4a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bb4c:	5c12      	ldrb	r2, [r2, r0]
 801bb4e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801bb52:	1c4a      	adds	r2, r1, #1
 801bb54:	f100 80fe 	bmi.w	801bd54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bb58:	4594      	cmp	ip, r2
 801bb5a:	f340 80fb 	ble.w	801bd54 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bb5e:	2d00      	cmp	r5, #0
 801bb60:	f000 80fa 	beq.w	801bd58 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801bb64:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bb68:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801bb6c:	3701      	adds	r7, #1
 801bb6e:	f100 80f7 	bmi.w	801bd60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bb72:	45b8      	cmp	r8, r7
 801bb74:	f340 80f4 	ble.w	801bd60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bb78:	2c00      	cmp	r4, #0
 801bb7a:	f000 80f4 	beq.w	801bd66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801bb7e:	2900      	cmp	r1, #0
 801bb80:	eb0e 020c 	add.w	r2, lr, ip
 801bb84:	f2c0 80ea 	blt.w	801bd5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bb88:	458c      	cmp	ip, r1
 801bb8a:	f340 80e7 	ble.w	801bd5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bb8e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801bb92:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801bb96:	3101      	adds	r1, #1
 801bb98:	f100 80e8 	bmi.w	801bd6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bb9c:	458c      	cmp	ip, r1
 801bb9e:	f340 80e5 	ble.w	801bd6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bba2:	2d00      	cmp	r5, #0
 801bba4:	f000 80e4 	beq.w	801bd70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801bba8:	7852      	ldrb	r2, [r2, #1]
 801bbaa:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bbae:	0e0b      	lsrs	r3, r1, #24
 801bbb0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801bbb4:	9300      	str	r3, [sp, #0]
 801bbb6:	b2a4      	uxth	r4, r4
 801bbb8:	b2ab      	uxth	r3, r5
 801bbba:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801bbbe:	fb03 f904 	mul.w	r9, r3, r4
 801bbc2:	fb0a f505 	mul.w	r5, sl, r5
 801bbc6:	011b      	lsls	r3, r3, #4
 801bbc8:	eba3 0e09 	sub.w	lr, r3, r9
 801bbcc:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801bbd0:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801bbd4:	0a28      	lsrs	r0, r5, #8
 801bbd6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bbda:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801bbde:	4405      	add	r5, r0
 801bbe0:	0a2d      	lsrs	r5, r5, #8
 801bbe2:	fb0a f303 	mul.w	r3, sl, r3
 801bbe6:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801bbea:	9005      	str	r0, [sp, #20]
 801bbec:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801bbf0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801bbf4:	0a1b      	lsrs	r3, r3, #8
 801bbf6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801bbfa:	9306      	str	r3, [sp, #24]
 801bbfc:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801bc00:	fb0b f303 	mul.w	r3, fp, r3
 801bc04:	0a1d      	lsrs	r5, r3, #8
 801bc06:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bc0a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801bc0e:	fb0b f606 	mul.w	r6, fp, r6
 801bc12:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801bc16:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801bc1a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bc1e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bc22:	fb08 f707 	mul.w	r7, r8, r7
 801bc26:	441d      	add	r5, r3
 801bc28:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801bc2c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801bc30:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801bc34:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801bc38:	fb08 fc0c 	mul.w	ip, r8, ip
 801bc3c:	0a1b      	lsrs	r3, r3, #8
 801bc3e:	9307      	str	r3, [sp, #28]
 801bc40:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801bc44:	0e0b      	lsrs	r3, r1, #24
 801bc46:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801bc4a:	435f      	muls	r7, r3
 801bc4c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bc50:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bc54:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801bc58:	4460      	add	r0, ip
 801bc5a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc5e:	b2a4      	uxth	r4, r4
 801bc60:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bc64:	0a2d      	lsrs	r5, r5, #8
 801bc66:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bc6a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc6e:	fa1f fe8e 	uxth.w	lr, lr
 801bc72:	4359      	muls	r1, r3
 801bc74:	1b12      	subs	r2, r2, r4
 801bc76:	9b05      	ldr	r3, [sp, #20]
 801bc78:	44bc      	add	ip, r7
 801bc7a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bc7e:	b292      	uxth	r2, r2
 801bc80:	fb05 f50e 	mul.w	r5, r5, lr
 801bc84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc88:	fb03 5502 	mla	r5, r3, r2, r5
 801bc8c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc90:	9b06      	ldr	r3, [sp, #24]
 801bc92:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801bc96:	0a36      	lsrs	r6, r6, #8
 801bc98:	0a00      	lsrs	r0, r0, #8
 801bc9a:	fb0c 5509 	mla	r5, ip, r9, r5
 801bc9e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bca2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801bca6:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bcaa:	fb00 5504 	mla	r5, r0, r4, r5
 801bcae:	fb0e f606 	mul.w	r6, lr, r6
 801bcb2:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801bcb6:	0a09      	lsrs	r1, r1, #8
 801bcb8:	9b07      	ldr	r3, [sp, #28]
 801bcba:	fb02 6000 	mla	r0, r2, r0, r6
 801bcbe:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bcc2:	fb09 0001 	mla	r0, r9, r1, r0
 801bcc6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bcca:	fb0e fe0b 	mul.w	lr, lr, fp
 801bcce:	fb04 0003 	mla	r0, r4, r3, r0
 801bcd2:	fb02 e20a 	mla	r2, r2, sl, lr
 801bcd6:	9b00      	ldr	r3, [sp, #0]
 801bcd8:	fb04 2408 	mla	r4, r4, r8, r2
 801bcdc:	fb09 4903 	mla	r9, r9, r3, r4
 801bce0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801bce4:	9b02      	ldr	r3, [sp, #8]
 801bce6:	9a04      	ldr	r2, [sp, #16]
 801bce8:	fa5f f989 	uxtb.w	r9, r9
 801bcec:	fb03 f109 	mul.w	r1, r3, r9
 801bcf0:	9b03      	ldr	r3, [sp, #12]
 801bcf2:	0a2d      	lsrs	r5, r5, #8
 801bcf4:	0a00      	lsrs	r0, r0, #8
 801bcf6:	fb03 f309 	mul.w	r3, r3, r9
 801bcfa:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801bcfe:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bd02:	4305      	orrs	r5, r0
 801bd04:	fb02 f909 	mul.w	r9, r2, r9
 801bd08:	1c58      	adds	r0, r3, #1
 801bd0a:	1c4a      	adds	r2, r1, #1
 801bd0c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bd10:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd14:	0a2b      	lsrs	r3, r5, #8
 801bd16:	0c2a      	lsrs	r2, r5, #16
 801bd18:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bd1c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801bd20:	00db      	lsls	r3, r3, #3
 801bd22:	0212      	lsls	r2, r2, #8
 801bd24:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801bd28:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bd2c:	4313      	orrs	r3, r2
 801bd2e:	f109 0201 	add.w	r2, r9, #1
 801bd32:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801bd36:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801bd3a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bd3e:	431d      	orrs	r5, r3
 801bd40:	9b01      	ldr	r3, [sp, #4]
 801bd42:	801d      	strh	r5, [r3, #0]
 801bd44:	b009      	add	sp, #36	@ 0x24
 801bd46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd4a:	2000      	movs	r0, #0
 801bd4c:	e701      	b.n	801bb52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801bd4e:	2600      	movs	r6, #0
 801bd50:	4630      	mov	r0, r6
 801bd52:	e70b      	b.n	801bb6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bd54:	2600      	movs	r6, #0
 801bd56:	e709      	b.n	801bb6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bd58:	462e      	mov	r6, r5
 801bd5a:	e707      	b.n	801bb6c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bd5c:	2700      	movs	r7, #0
 801bd5e:	e71a      	b.n	801bb96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801bd60:	2100      	movs	r1, #0
 801bd62:	460f      	mov	r7, r1
 801bd64:	e723      	b.n	801bbae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bd66:	4621      	mov	r1, r4
 801bd68:	4627      	mov	r7, r4
 801bd6a:	e720      	b.n	801bbae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bd6c:	2100      	movs	r1, #0
 801bd6e:	e71e      	b.n	801bbae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bd70:	4629      	mov	r1, r5
 801bd72:	e71c      	b.n	801bbae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801bd74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd78:	b09b      	sub	sp, #108	@ 0x6c
 801bd7a:	9218      	str	r2, [sp, #96]	@ 0x60
 801bd7c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801bd7e:	9116      	str	r1, [sp, #88]	@ 0x58
 801bd80:	9307      	str	r3, [sp, #28]
 801bd82:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801bd86:	9019      	str	r0, [sp, #100]	@ 0x64
 801bd88:	6850      	ldr	r0, [r2, #4]
 801bd8a:	6812      	ldr	r2, [r2, #0]
 801bd8c:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801bd8e:	fb00 1303 	mla	r3, r0, r3, r1
 801bd92:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bd96:	930a      	str	r3, [sp, #40]	@ 0x28
 801bd98:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bd9a:	681b      	ldr	r3, [r3, #0]
 801bd9c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bd9e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bda0:	685e      	ldr	r6, [r3, #4]
 801bda2:	3604      	adds	r6, #4
 801bda4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801bda6:	2b00      	cmp	r3, #0
 801bda8:	dc03      	bgt.n	801bdb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bdaa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801bdac:	2b00      	cmp	r3, #0
 801bdae:	f340 8373 	ble.w	801c498 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801bdb2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bdb4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bdb8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bdbc:	1e48      	subs	r0, r1, #1
 801bdbe:	1e57      	subs	r7, r2, #1
 801bdc0:	9b07      	ldr	r3, [sp, #28]
 801bdc2:	2b00      	cmp	r3, #0
 801bdc4:	f340 8190 	ble.w	801c0e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bdc8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801bdca:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801bdce:	ea4f 4325 	mov.w	r3, r5, asr #16
 801bdd2:	d406      	bmi.n	801bde2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bdd4:	4584      	cmp	ip, r0
 801bdd6:	da04      	bge.n	801bde2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bdd8:	2b00      	cmp	r3, #0
 801bdda:	db02      	blt.n	801bde2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bddc:	42bb      	cmp	r3, r7
 801bdde:	f2c0 8184 	blt.w	801c0ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801bde2:	f11c 0c01 	adds.w	ip, ip, #1
 801bde6:	f100 8172 	bmi.w	801c0ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bdea:	4561      	cmp	r1, ip
 801bdec:	f2c0 816f 	blt.w	801c0ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bdf0:	3301      	adds	r3, #1
 801bdf2:	f100 816c 	bmi.w	801c0ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bdf6:	429a      	cmp	r2, r3
 801bdf8:	f2c0 8169 	blt.w	801c0ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bdfc:	9b07      	ldr	r3, [sp, #28]
 801bdfe:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801be00:	9317      	str	r3, [sp, #92]	@ 0x5c
 801be02:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801be04:	2b00      	cmp	r3, #0
 801be06:	f340 818e 	ble.w	801c126 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801be0a:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801be0c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801be10:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801be12:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801be16:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801be18:	141b      	asrs	r3, r3, #16
 801be1a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801be1e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801be22:	f100 81d1 	bmi.w	801c1c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be26:	f101 38ff 	add.w	r8, r1, #4294967295
 801be2a:	4543      	cmp	r3, r8
 801be2c:	f280 81cc 	bge.w	801c1c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be30:	f1bc 0f00 	cmp.w	ip, #0
 801be34:	f2c0 81c8 	blt.w	801c1c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be38:	f10e 38ff 	add.w	r8, lr, #4294967295
 801be3c:	45c4      	cmp	ip, r8
 801be3e:	f280 81c3 	bge.w	801c1c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be42:	b209      	sxth	r1, r1
 801be44:	fb0c 3301 	mla	r3, ip, r1, r3
 801be48:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801be4a:	eb04 0803 	add.w	r8, r4, r3
 801be4e:	5ce3      	ldrb	r3, [r4, r3]
 801be50:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801be54:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801be58:	2a00      	cmp	r2, #0
 801be5a:	f000 81aa 	beq.w	801c1b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801be5e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801be62:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801be66:	940b      	str	r4, [sp, #44]	@ 0x2c
 801be68:	0e24      	lsrs	r4, r4, #24
 801be6a:	9412      	str	r4, [sp, #72]	@ 0x48
 801be6c:	b178      	cbz	r0, 801be8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801be6e:	eb08 0c01 	add.w	ip, r8, r1
 801be72:	f818 1001 	ldrb.w	r1, [r8, r1]
 801be76:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801be7a:	9108      	str	r1, [sp, #32]
 801be7c:	0e09      	lsrs	r1, r1, #24
 801be7e:	9110      	str	r1, [sp, #64]	@ 0x40
 801be80:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801be84:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801be88:	910c      	str	r1, [sp, #48]	@ 0x30
 801be8a:	0e09      	lsrs	r1, r1, #24
 801be8c:	9113      	str	r1, [sp, #76]	@ 0x4c
 801be8e:	b292      	uxth	r2, r2
 801be90:	b280      	uxth	r0, r0
 801be92:	fb02 f900 	mul.w	r9, r2, r0
 801be96:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801be9a:	0112      	lsls	r2, r2, #4
 801be9c:	eba2 0809 	sub.w	r8, r2, r9
 801bea0:	b280      	uxth	r0, r0
 801bea2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801bea6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801bea8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801beaa:	fa1f f888 	uxth.w	r8, r8
 801beae:	1a12      	subs	r2, r2, r0
 801beb0:	b292      	uxth	r2, r2
 801beb2:	fb08 f101 	mul.w	r1, r8, r1
 801beb6:	fb02 110e 	mla	r1, r2, lr, r1
 801beba:	fb00 1104 	mla	r1, r0, r4, r1
 801bebe:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bec0:	fb09 1104 	mla	r1, r9, r4, r1
 801bec4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bec8:	2900      	cmp	r1, #0
 801beca:	f000 80f5 	beq.w	801c0b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bece:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801bed2:	d01b      	beq.n	801bf0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bed4:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bed8:	fb0e fa0a 	mul.w	sl, lr, sl
 801bedc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bee0:	fb0e fe03 	mul.w	lr, lr, r3
 801bee4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bee8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801beec:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bef0:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801bef4:	4453      	add	r3, sl
 801bef6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801befa:	0a1b      	lsrs	r3, r3, #8
 801befc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf00:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf04:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bf08:	ea43 030c 	orr.w	r3, r3, ip
 801bf0c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bf0e:	2cff      	cmp	r4, #255	@ 0xff
 801bf10:	d021      	beq.n	801bf56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801bf12:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bf14:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bf18:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bf1a:	fb04 fb0b 	mul.w	fp, r4, fp
 801bf1e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bf20:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bf24:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bf26:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bf2a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf2e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf32:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bf36:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bf3a:	44de      	add	lr, fp
 801bf3c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bf40:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bf44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf48:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf4c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bf50:	ea4e 040a 	orr.w	r4, lr, sl
 801bf54:	940b      	str	r4, [sp, #44]	@ 0x2c
 801bf56:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bf58:	2cff      	cmp	r4, #255	@ 0xff
 801bf5a:	d021      	beq.n	801bfa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801bf5c:	9c08      	ldr	r4, [sp, #32]
 801bf5e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bf62:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bf64:	fb04 fb0b 	mul.w	fp, r4, fp
 801bf68:	9c08      	ldr	r4, [sp, #32]
 801bf6a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bf6e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bf70:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bf74:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf78:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf7c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bf80:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bf84:	44de      	add	lr, fp
 801bf86:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bf8a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bf8e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf92:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf96:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bf9a:	ea4e 040a 	orr.w	r4, lr, sl
 801bf9e:	9408      	str	r4, [sp, #32]
 801bfa0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bfa2:	2cff      	cmp	r4, #255	@ 0xff
 801bfa4:	d021      	beq.n	801bfea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bfa6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801bfa8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bfac:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bfae:	fb04 fb0b 	mul.w	fp, r4, fp
 801bfb2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801bfb4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bfb8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bfba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bfbe:	fb04 fa0a 	mul.w	sl, r4, sl
 801bfc2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfc6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bfca:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bfce:	44de      	add	lr, fp
 801bfd0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bfd4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bfd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfdc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfe0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bfe4:	ea4e 040a 	orr.w	r4, lr, sl
 801bfe8:	940c      	str	r4, [sp, #48]	@ 0x30
 801bfea:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bfec:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bff0:	9c08      	ldr	r4, [sp, #32]
 801bff2:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801bff6:	fb08 fc0c 	mul.w	ip, r8, ip
 801bffa:	fb02 cc0e 	mla	ip, r2, lr, ip
 801bffe:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c002:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c004:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c008:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c00c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c00e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c012:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c016:	fb08 f80e 	mul.w	r8, r8, lr
 801c01a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c01e:	fb02 8303 	mla	r3, r2, r3, r8
 801c022:	9a08      	ldr	r2, [sp, #32]
 801c024:	f8b7 8000 	ldrh.w	r8, [r7]
 801c028:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c02c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c02e:	fb00 330a 	mla	r3, r0, sl, r3
 801c032:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801c036:	fb09 3900 	mla	r9, r9, r0, r3
 801c03a:	43c9      	mvns	r1, r1
 801c03c:	ea4f 2228 	mov.w	r2, r8, asr #8
 801c040:	fa5f fe81 	uxtb.w	lr, r1
 801c044:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c048:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c04c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c050:	fb02 f20e 	mul.w	r2, r2, lr
 801c054:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c058:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c05c:	ea4c 0c09 	orr.w	ip, ip, r9
 801c060:	1c53      	adds	r3, r2, #1
 801c062:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801c066:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801c06a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801c06e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c072:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c076:	4a63      	ldr	r2, [pc, #396]	@ (801c204 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801c078:	fb00 f00e 	mul.w	r0, r0, lr
 801c07c:	b2db      	uxtb	r3, r3
 801c07e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801c082:	1c43      	adds	r3, r0, #1
 801c084:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c088:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801c08c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801c090:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c094:	b2c9      	uxtb	r1, r1
 801c096:	00db      	lsls	r3, r3, #3
 801c098:	fb01 f10e 	mul.w	r1, r1, lr
 801c09c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c0a0:	4313      	orrs	r3, r2
 801c0a2:	1c4a      	adds	r2, r1, #1
 801c0a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c0a8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c0ac:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c0b0:	ea4c 0c03 	orr.w	ip, ip, r3
 801c0b4:	f8a7 c000 	strh.w	ip, [r7]
 801c0b8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c0ba:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c0bc:	441a      	add	r2, r3
 801c0be:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c0c0:	9225      	str	r2, [sp, #148]	@ 0x94
 801c0c2:	441d      	add	r5, r3
 801c0c4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c0c6:	3b01      	subs	r3, #1
 801c0c8:	3702      	adds	r7, #2
 801c0ca:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c0cc:	e699      	b.n	801be02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c0ce:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c0d0:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c0d2:	441c      	add	r4, r3
 801c0d4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c0d6:	9425      	str	r4, [sp, #148]	@ 0x94
 801c0d8:	441d      	add	r5, r3
 801c0da:	9b07      	ldr	r3, [sp, #28]
 801c0dc:	3b01      	subs	r3, #1
 801c0de:	9307      	str	r3, [sp, #28]
 801c0e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c0e2:	3302      	adds	r3, #2
 801c0e4:	930a      	str	r3, [sp, #40]	@ 0x28
 801c0e6:	e66b      	b.n	801bdc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c0e8:	d024      	beq.n	801c134 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801c0ea:	9b07      	ldr	r3, [sp, #28]
 801c0ec:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801c0ee:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c0f0:	3b01      	subs	r3, #1
 801c0f2:	fb00 4003 	mla	r0, r0, r3, r4
 801c0f6:	1400      	asrs	r0, r0, #16
 801c0f8:	f53f ae80 	bmi.w	801bdfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c0fc:	3901      	subs	r1, #1
 801c0fe:	4288      	cmp	r0, r1
 801c100:	f6bf ae7c 	bge.w	801bdfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c104:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801c106:	fb01 5303 	mla	r3, r1, r3, r5
 801c10a:	141b      	asrs	r3, r3, #16
 801c10c:	f53f ae76 	bmi.w	801bdfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c110:	3a01      	subs	r2, #1
 801c112:	4293      	cmp	r3, r2
 801c114:	f6bf ae72 	bge.w	801bdfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c118:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c11c:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801c120:	f1bb 0f00 	cmp.w	fp, #0
 801c124:	dc70      	bgt.n	801c208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801c126:	9b07      	ldr	r3, [sp, #28]
 801c128:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c12c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c12e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c132:	930a      	str	r3, [sp, #40]	@ 0x28
 801c134:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c136:	2b00      	cmp	r3, #0
 801c138:	f340 81ae 	ble.w	801c498 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c13c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c140:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c144:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c148:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c14a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c14e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c152:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c156:	eef0 6a62 	vmov.f32	s13, s5
 801c15a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c15e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c162:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c166:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801c16a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c16e:	eef0 6a43 	vmov.f32	s13, s6
 801c172:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c176:	ee12 2a90 	vmov	r2, s5
 801c17a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c17e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c182:	ee13 2a10 	vmov	r2, s6
 801c186:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c188:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c18a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c18e:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c190:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c192:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c194:	3b01      	subs	r3, #1
 801c196:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c19a:	9316      	str	r3, [sp, #88]	@ 0x58
 801c19c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c19e:	bf08      	it	eq
 801c1a0:	4613      	moveq	r3, r2
 801c1a2:	ee16 5a90 	vmov	r5, s13
 801c1a6:	9307      	str	r3, [sp, #28]
 801c1a8:	eeb0 3a67 	vmov.f32	s6, s15
 801c1ac:	eef0 2a47 	vmov.f32	s5, s14
 801c1b0:	e5f8      	b.n	801bda4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c1b2:	2800      	cmp	r0, #0
 801c1b4:	f43f ae6b 	beq.w	801be8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c1b8:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c1bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c1c0:	9108      	str	r1, [sp, #32]
 801c1c2:	0e09      	lsrs	r1, r1, #24
 801c1c4:	9110      	str	r1, [sp, #64]	@ 0x40
 801c1c6:	e662      	b.n	801be8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c1c8:	f113 0801 	adds.w	r8, r3, #1
 801c1cc:	f53f af74 	bmi.w	801c0b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c1d0:	4541      	cmp	r1, r8
 801c1d2:	f6ff af71 	blt.w	801c0b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c1d6:	f11c 0801 	adds.w	r8, ip, #1
 801c1da:	f53f af6d 	bmi.w	801c0b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c1de:	45c6      	cmp	lr, r8
 801c1e0:	f6ff af6a 	blt.w	801c0b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c1e4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801c1e8:	b209      	sxth	r1, r1
 801c1ea:	fa0f f38e 	sxth.w	r3, lr
 801c1ee:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801c1f2:	9301      	str	r3, [sp, #4]
 801c1f4:	9100      	str	r1, [sp, #0]
 801c1f6:	4633      	mov	r3, r6
 801c1f8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c1fa:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c1fc:	4639      	mov	r1, r7
 801c1fe:	f7ff fc7a 	bl	801baf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801c202:	e759      	b.n	801c0b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c204:	fffff800 	.word	0xfffff800
 801c208:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c20a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c20c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c210:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c212:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c216:	1427      	asrs	r7, r4, #16
 801c218:	142b      	asrs	r3, r5, #16
 801c21a:	fb01 7303 	mla	r3, r1, r3, r7
 801c21e:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c220:	18e7      	adds	r7, r4, r3
 801c222:	5ce3      	ldrb	r3, [r4, r3]
 801c224:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c228:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c22c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c230:	2a00      	cmp	r2, #0
 801c232:	f000 8127 	beq.w	801c484 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c236:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c23a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c23e:	940d      	str	r4, [sp, #52]	@ 0x34
 801c240:	0e24      	lsrs	r4, r4, #24
 801c242:	9414      	str	r4, [sp, #80]	@ 0x50
 801c244:	b170      	cbz	r0, 801c264 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c246:	eb07 0e01 	add.w	lr, r7, r1
 801c24a:	5c79      	ldrb	r1, [r7, r1]
 801c24c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c250:	9109      	str	r1, [sp, #36]	@ 0x24
 801c252:	0e09      	lsrs	r1, r1, #24
 801c254:	9111      	str	r1, [sp, #68]	@ 0x44
 801c256:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c25a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c25e:	910e      	str	r1, [sp, #56]	@ 0x38
 801c260:	0e09      	lsrs	r1, r1, #24
 801c262:	9115      	str	r1, [sp, #84]	@ 0x54
 801c264:	b292      	uxth	r2, r2
 801c266:	b280      	uxth	r0, r0
 801c268:	fb02 f800 	mul.w	r8, r2, r0
 801c26c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c270:	0112      	lsls	r2, r2, #4
 801c272:	eba2 0e08 	sub.w	lr, r2, r8
 801c276:	b280      	uxth	r0, r0
 801c278:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801c27c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c27e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c280:	fa1f fe8e 	uxth.w	lr, lr
 801c284:	1a09      	subs	r1, r1, r0
 801c286:	b289      	uxth	r1, r1
 801c288:	fb0e f202 	mul.w	r2, lr, r2
 801c28c:	fb01 220c 	mla	r2, r1, ip, r2
 801c290:	fb00 2204 	mla	r2, r0, r4, r2
 801c294:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c296:	fb08 2204 	mla	r2, r8, r4, r2
 801c29a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c29e:	2a00      	cmp	r2, #0
 801c2a0:	f000 80e5 	beq.w	801c46e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c2a4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c2a8:	d019      	beq.n	801c2de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c2aa:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c2ae:	fb0c fa0a 	mul.w	sl, ip, sl
 801c2b2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c2b6:	fb0c fc03 	mul.w	ip, ip, r3
 801c2ba:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c2be:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c2c2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c2c6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c2ca:	4453      	add	r3, sl
 801c2cc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c2d0:	0a1b      	lsrs	r3, r3, #8
 801c2d2:	0a3f      	lsrs	r7, r7, #8
 801c2d4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c2d8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c2dc:	433b      	orrs	r3, r7
 801c2de:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c2e0:	2cff      	cmp	r4, #255	@ 0xff
 801c2e2:	d020      	beq.n	801c326 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c2e4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c2e6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c2ea:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c2ec:	4367      	muls	r7, r4
 801c2ee:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c2f0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c2f4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c2f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c2fa:	fb04 fa0a 	mul.w	sl, r4, sl
 801c2fe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c302:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c306:	44bc      	add	ip, r7
 801c308:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c30c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c310:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c314:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c318:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c31c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c320:	ea4c 040a 	orr.w	r4, ip, sl
 801c324:	940d      	str	r4, [sp, #52]	@ 0x34
 801c326:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c328:	2cff      	cmp	r4, #255	@ 0xff
 801c32a:	d020      	beq.n	801c36e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c32c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c32e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c332:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c334:	4367      	muls	r7, r4
 801c336:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c338:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c33c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c33e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c342:	fb04 fa0a 	mul.w	sl, r4, sl
 801c346:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c34a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c34e:	44bc      	add	ip, r7
 801c350:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c354:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c358:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c35c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c360:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c364:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c368:	ea4c 040a 	orr.w	r4, ip, sl
 801c36c:	9409      	str	r4, [sp, #36]	@ 0x24
 801c36e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c370:	2cff      	cmp	r4, #255	@ 0xff
 801c372:	d020      	beq.n	801c3b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c374:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c376:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c37a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c37c:	4367      	muls	r7, r4
 801c37e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c380:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c384:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c386:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c38a:	fb04 fa0a 	mul.w	sl, r4, sl
 801c38e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c392:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c396:	44bc      	add	ip, r7
 801c398:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c39c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c3a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3a8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c3b0:	ea4c 040a 	orr.w	r4, ip, sl
 801c3b4:	940e      	str	r4, [sp, #56]	@ 0x38
 801c3b6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c3b8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c3bc:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c3be:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c3c2:	fb0e f707 	mul.w	r7, lr, r7
 801c3c6:	fb01 770c 	mla	r7, r1, ip, r7
 801c3ca:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c3ce:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c3d0:	fb00 770c 	mla	r7, r0, ip, r7
 801c3d4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c3d8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c3da:	fb08 770c 	mla	r7, r8, ip, r7
 801c3de:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c3e2:	fb0e fe0c 	mul.w	lr, lr, ip
 801c3e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c3ea:	fb01 e303 	mla	r3, r1, r3, lr
 801c3ee:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c3f0:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801c3f4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c3f6:	fb00 330a 	mla	r3, r0, sl, r3
 801c3fa:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801c3fe:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c402:	f8b9 3000 	ldrh.w	r3, [r9]
 801c406:	43d2      	mvns	r2, r2
 801c408:	1218      	asrs	r0, r3, #8
 801c40a:	b2d2      	uxtb	r2, r2
 801c40c:	10d9      	asrs	r1, r3, #3
 801c40e:	0a3f      	lsrs	r7, r7, #8
 801c410:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c414:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c418:	00db      	lsls	r3, r3, #3
 801c41a:	4350      	muls	r0, r2
 801c41c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c420:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c424:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c428:	b2db      	uxtb	r3, r3
 801c42a:	ea47 070c 	orr.w	r7, r7, ip
 801c42e:	4351      	muls	r1, r2
 801c430:	4353      	muls	r3, r2
 801c432:	1c42      	adds	r2, r0, #1
 801c434:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c438:	0c3a      	lsrs	r2, r7, #16
 801c43a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c43e:	4a18      	ldr	r2, [pc, #96]	@ (801c4a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c440:	b2c0      	uxtb	r0, r0
 801c442:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c446:	1c4a      	adds	r2, r1, #1
 801c448:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c44c:	0a3a      	lsrs	r2, r7, #8
 801c44e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c452:	00c9      	lsls	r1, r1, #3
 801c454:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c458:	4301      	orrs	r1, r0
 801c45a:	1c58      	adds	r0, r3, #1
 801c45c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c460:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c464:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c468:	4308      	orrs	r0, r1
 801c46a:	f8a9 0000 	strh.w	r0, [r9]
 801c46e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c470:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c472:	441a      	add	r2, r3
 801c474:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c476:	9225      	str	r2, [sp, #148]	@ 0x94
 801c478:	f109 0902 	add.w	r9, r9, #2
 801c47c:	441d      	add	r5, r3
 801c47e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c482:	e64d      	b.n	801c120 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801c484:	2800      	cmp	r0, #0
 801c486:	f43f aeed 	beq.w	801c264 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c48a:	5c79      	ldrb	r1, [r7, r1]
 801c48c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c490:	9109      	str	r1, [sp, #36]	@ 0x24
 801c492:	0e09      	lsrs	r1, r1, #24
 801c494:	9111      	str	r1, [sp, #68]	@ 0x44
 801c496:	e6e5      	b.n	801c264 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c498:	b01b      	add	sp, #108	@ 0x6c
 801c49a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c49e:	bf00      	nop
 801c4a0:	fffff800 	.word	0xfffff800

0801c4a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c4a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4a8:	b085      	sub	sp, #20
 801c4aa:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801c4ae:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801c4b2:	9103      	str	r1, [sp, #12]
 801c4b4:	fb00 7406 	mla	r4, r0, r6, r7
 801c4b8:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c4bc:	2800      	cmp	r0, #0
 801c4be:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801c4c2:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801c4c6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801c4ca:	9501      	str	r5, [sp, #4]
 801c4cc:	eb03 0904 	add.w	r9, r3, r4
 801c4d0:	f2c0 8150 	blt.w	801c774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c4d4:	4583      	cmp	fp, r0
 801c4d6:	f340 814d 	ble.w	801c774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c4da:	2f00      	cmp	r7, #0
 801c4dc:	f2c0 8146 	blt.w	801c76c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c4e0:	42be      	cmp	r6, r7
 801c4e2:	f340 8143 	ble.w	801c76c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c4e6:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c4ea:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c4ee:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c4f2:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801c4f6:	4355      	muls	r5, r2
 801c4f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c4fc:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801c500:	fb0c f203 	mul.w	r2, ip, r3
 801c504:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c508:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801c50c:	441d      	add	r5, r3
 801c50e:	f102 0320 	add.w	r3, r2, #32
 801c512:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c516:	0a1b      	lsrs	r3, r3, #8
 801c518:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c51c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c520:	431c      	orrs	r4, r3
 801c522:	1c7b      	adds	r3, r7, #1
 801c524:	f100 812b 	bmi.w	801c77e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c528:	429e      	cmp	r6, r3
 801c52a:	f340 8128 	ble.w	801c77e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c52e:	2900      	cmp	r1, #0
 801c530:	f000 8128 	beq.w	801c784 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c534:	9a01      	ldr	r2, [sp, #4]
 801c536:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c53a:	8855      	ldrh	r5, [r2, #2]
 801c53c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c540:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801c544:	fb08 f802 	mul.w	r8, r8, r2
 801c548:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c54c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801c550:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c554:	435d      	muls	r5, r3
 801c556:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c55a:	44d0      	add	r8, sl
 801c55c:	f105 0a20 	add.w	sl, r5, #32
 801c560:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c564:	0a2d      	lsrs	r5, r5, #8
 801c566:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c56a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c56e:	432a      	orrs	r2, r5
 801c570:	3001      	adds	r0, #1
 801c572:	f100 810d 	bmi.w	801c790 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c576:	4583      	cmp	fp, r0
 801c578:	f340 810a 	ble.w	801c790 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c57c:	f1be 0f00 	cmp.w	lr, #0
 801c580:	f000 810b 	beq.w	801c79a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c584:	2f00      	cmp	r7, #0
 801c586:	f2c0 8100 	blt.w	801c78a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c58a:	42be      	cmp	r6, r7
 801c58c:	f340 80fd 	ble.w	801c78a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c590:	9801      	ldr	r0, [sp, #4]
 801c592:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c596:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c59a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c59e:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801c5a2:	fb0a fa00 	mul.w	sl, sl, r0
 801c5a6:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801c5aa:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c5ae:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c5b2:	fb05 f808 	mul.w	r8, r5, r8
 801c5b6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801c5ba:	4482      	add	sl, r0
 801c5bc:	f108 0020 	add.w	r0, r8, #32
 801c5c0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c5c4:	0a00      	lsrs	r0, r0, #8
 801c5c6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c5ca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c5ce:	ea4b 0b00 	orr.w	fp, fp, r0
 801c5d2:	3701      	adds	r7, #1
 801c5d4:	f100 80e6 	bmi.w	801c7a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c5d8:	42be      	cmp	r6, r7
 801c5da:	f340 80e3 	ble.w	801c7a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c5de:	2900      	cmp	r1, #0
 801c5e0:	f000 80e3 	beq.w	801c7aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c5e4:	3601      	adds	r6, #1
 801c5e6:	9801      	ldr	r0, [sp, #4]
 801c5e8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c5ec:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c5f0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c5f4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801c5f8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c5fc:	fb09 f906 	mul.w	r9, r9, r6
 801c600:	fb07 f800 	mul.w	r8, r7, r0
 801c604:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801c608:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c60c:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801c610:	44d1      	add	r9, sl
 801c612:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c616:	f108 0020 	add.w	r0, r8, #32
 801c61a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c61e:	0a00      	lsrs	r0, r0, #8
 801c620:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c624:	4330      	orrs	r0, r6
 801c626:	b28e      	uxth	r6, r1
 801c628:	fa1f f98e 	uxth.w	r9, lr
 801c62c:	fb06 f809 	mul.w	r8, r6, r9
 801c630:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c634:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c638:	0136      	lsls	r6, r6, #4
 801c63a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c63e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c642:	9601      	str	r6, [sp, #4]
 801c644:	ea4a 0404 	orr.w	r4, sl, r4
 801c648:	fa1f f689 	uxth.w	r6, r9
 801c64c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c650:	fb11 f90e 	smulbb	r9, r1, lr
 801c654:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c658:	9602      	str	r6, [sp, #8]
 801c65a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c65e:	4626      	mov	r6, r4
 801c660:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c664:	f1ce 0410 	rsb	r4, lr, #16
 801c668:	1a64      	subs	r4, r4, r1
 801c66a:	ea4a 0202 	orr.w	r2, sl, r2
 801c66e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c672:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c676:	434a      	muls	r2, r1
 801c678:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c67c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c680:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c684:	fb04 2406 	mla	r4, r4, r6, r2
 801c688:	ea4a 0000 	orr.w	r0, sl, r0
 801c68c:	fb09 4200 	mla	r2, r9, r0, r4
 801c690:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c694:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c698:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801c69c:	ea44 0b0b 	orr.w	fp, r4, fp
 801c6a0:	9c01      	ldr	r4, [sp, #4]
 801c6a2:	9e02      	ldr	r6, [sp, #8]
 801c6a4:	9903      	ldr	r1, [sp, #12]
 801c6a6:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801c6aa:	1ba4      	subs	r4, r4, r6
 801c6ac:	9e01      	ldr	r6, [sp, #4]
 801c6ae:	8808      	ldrh	r0, [r1, #0]
 801c6b0:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801c6b4:	eba6 0608 	sub.w	r6, r6, r8
 801c6b8:	b2b6      	uxth	r6, r6
 801c6ba:	b2a4      	uxth	r4, r4
 801c6bc:	4373      	muls	r3, r6
 801c6be:	fb0c 3304 	mla	r3, ip, r4, r3
 801c6c2:	9c02      	ldr	r4, [sp, #8]
 801c6c4:	fb04 3505 	mla	r5, r4, r5, r3
 801c6c8:	fb08 5707 	mla	r7, r8, r7, r5
 801c6cc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c6d0:	b289      	uxth	r1, r1
 801c6d2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c6d6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c6da:	434f      	muls	r7, r1
 801c6dc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c6e0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c6e4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c6e8:	1c7b      	adds	r3, r7, #1
 801c6ea:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c6ee:	ea42 0e0e 	orr.w	lr, r2, lr
 801c6f2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c6f6:	fa1f f28e 	uxth.w	r2, lr
 801c6fa:	1203      	asrs	r3, r0, #8
 801c6fc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c700:	b2ff      	uxtb	r7, r7
 801c702:	1215      	asrs	r5, r2, #8
 801c704:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c708:	fb13 f307 	smulbb	r3, r3, r7
 801c70c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c710:	fb05 3501 	mla	r5, r5, r1, r3
 801c714:	10c3      	asrs	r3, r0, #3
 801c716:	10d4      	asrs	r4, r2, #3
 801c718:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c71c:	fb13 f307 	smulbb	r3, r3, r7
 801c720:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801c724:	fb04 3401 	mla	r4, r4, r1, r3
 801c728:	00c3      	lsls	r3, r0, #3
 801c72a:	00d2      	lsls	r2, r2, #3
 801c72c:	b2db      	uxtb	r3, r3
 801c72e:	fb13 f307 	smulbb	r3, r3, r7
 801c732:	b2d2      	uxtb	r2, r2
 801c734:	fb02 3101 	mla	r1, r2, r1, r3
 801c738:	b2ad      	uxth	r5, r5
 801c73a:	b289      	uxth	r1, r1
 801c73c:	b2a4      	uxth	r4, r4
 801c73e:	1c6b      	adds	r3, r5, #1
 801c740:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c744:	1c62      	adds	r2, r4, #1
 801c746:	1c4b      	adds	r3, r1, #1
 801c748:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c74c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c750:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c754:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c758:	0964      	lsrs	r4, r4, #5
 801c75a:	432b      	orrs	r3, r5
 801c75c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801c760:	9a03      	ldr	r2, [sp, #12]
 801c762:	4323      	orrs	r3, r4
 801c764:	8013      	strh	r3, [r2, #0]
 801c766:	b005      	add	sp, #20
 801c768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c76c:	f04f 0c00 	mov.w	ip, #0
 801c770:	4664      	mov	r4, ip
 801c772:	e6d6      	b.n	801c522 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c774:	2300      	movs	r3, #0
 801c776:	469c      	mov	ip, r3
 801c778:	461a      	mov	r2, r3
 801c77a:	461c      	mov	r4, r3
 801c77c:	e6f8      	b.n	801c570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c77e:	2300      	movs	r3, #0
 801c780:	461a      	mov	r2, r3
 801c782:	e6f5      	b.n	801c570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c784:	460b      	mov	r3, r1
 801c786:	460a      	mov	r2, r1
 801c788:	e6f2      	b.n	801c570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c78a:	2500      	movs	r5, #0
 801c78c:	46ab      	mov	fp, r5
 801c78e:	e720      	b.n	801c5d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c790:	2700      	movs	r7, #0
 801c792:	463d      	mov	r5, r7
 801c794:	4638      	mov	r0, r7
 801c796:	46bb      	mov	fp, r7
 801c798:	e745      	b.n	801c626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c79a:	4677      	mov	r7, lr
 801c79c:	4675      	mov	r5, lr
 801c79e:	4670      	mov	r0, lr
 801c7a0:	46f3      	mov	fp, lr
 801c7a2:	e740      	b.n	801c626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c7a4:	2700      	movs	r7, #0
 801c7a6:	4638      	mov	r0, r7
 801c7a8:	e73d      	b.n	801c626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c7aa:	460f      	mov	r7, r1
 801c7ac:	4608      	mov	r0, r1
 801c7ae:	e73a      	b.n	801c626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c7b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7b4:	b097      	sub	sp, #92	@ 0x5c
 801c7b6:	9214      	str	r2, [sp, #80]	@ 0x50
 801c7b8:	9308      	str	r3, [sp, #32]
 801c7ba:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c7bc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801c7c0:	9312      	str	r3, [sp, #72]	@ 0x48
 801c7c2:	9111      	str	r1, [sp, #68]	@ 0x44
 801c7c4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801c7c8:	9015      	str	r0, [sp, #84]	@ 0x54
 801c7ca:	6850      	ldr	r0, [r2, #4]
 801c7cc:	6812      	ldr	r2, [r2, #0]
 801c7ce:	fb00 1303 	mla	r3, r0, r3, r1
 801c7d2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c7d6:	9309      	str	r3, [sp, #36]	@ 0x24
 801c7d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c7da:	681b      	ldr	r3, [r3, #0]
 801c7dc:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c7de:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c7e0:	685b      	ldr	r3, [r3, #4]
 801c7e2:	930c      	str	r3, [sp, #48]	@ 0x30
 801c7e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801c7e8:	930a      	str	r3, [sp, #40]	@ 0x28
 801c7ea:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c7ec:	2b00      	cmp	r3, #0
 801c7ee:	dc03      	bgt.n	801c7f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c7f0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801c7f2:	2b00      	cmp	r3, #0
 801c7f4:	f340 83cb 	ble.w	801cf8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c7f8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c7fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c7fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c802:	1e48      	subs	r0, r1, #1
 801c804:	1e55      	subs	r5, r2, #1
 801c806:	9b08      	ldr	r3, [sp, #32]
 801c808:	2b00      	cmp	r3, #0
 801c80a:	f340 81a3 	ble.w	801cb54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c80e:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801c810:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c812:	1436      	asrs	r6, r6, #16
 801c814:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c818:	d406      	bmi.n	801c828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c81a:	4286      	cmp	r6, r0
 801c81c:	da04      	bge.n	801c828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c81e:	2b00      	cmp	r3, #0
 801c820:	db02      	blt.n	801c828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c822:	42ab      	cmp	r3, r5
 801c824:	f2c0 8197 	blt.w	801cb56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c828:	3601      	adds	r6, #1
 801c82a:	f100 8184 	bmi.w	801cb36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c82e:	42b1      	cmp	r1, r6
 801c830:	f2c0 8181 	blt.w	801cb36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c834:	3301      	adds	r3, #1
 801c836:	f100 817e 	bmi.w	801cb36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c83a:	429a      	cmp	r2, r3
 801c83c:	f2c0 817b 	blt.w	801cb36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c840:	9b08      	ldr	r3, [sp, #32]
 801c842:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801c844:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c846:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c84a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c84c:	2b00      	cmp	r3, #0
 801c84e:	f340 81a4 	ble.w	801cb9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c852:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c854:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801c856:	1418      	asrs	r0, r3, #16
 801c858:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c85a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c85e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c860:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c864:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c866:	142d      	asrs	r5, r5, #16
 801c868:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c86c:	f100 81f8 	bmi.w	801cc60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c870:	f102 3eff 	add.w	lr, r2, #4294967295
 801c874:	4575      	cmp	r5, lr
 801c876:	f280 81f3 	bge.w	801cc60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c87a:	2800      	cmp	r0, #0
 801c87c:	f2c0 81f0 	blt.w	801cc60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c880:	f103 3eff 	add.w	lr, r3, #4294967295
 801c884:	4570      	cmp	r0, lr
 801c886:	f280 81eb 	bge.w	801cc60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c88a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c88c:	b212      	sxth	r2, r2
 801c88e:	fb00 5002 	mla	r0, r0, r2, r5
 801c892:	fa1f fe81 	uxth.w	lr, r1
 801c896:	eb03 0a00 	add.w	sl, r3, r0
 801c89a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c89e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c8a2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c8a6:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801c8aa:	b29b      	uxth	r3, r3
 801c8ac:	f1bc 0f00 	cmp.w	ip, #0
 801c8b0:	f000 81b9 	beq.w	801cc26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c8b4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c8b8:	940d      	str	r4, [sp, #52]	@ 0x34
 801c8ba:	eb0a 0b02 	add.w	fp, sl, r2
 801c8be:	fa1f fa8c 	uxth.w	sl, ip
 801c8c2:	fb0a fe0e 	mul.w	lr, sl, lr
 801c8c6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c8ca:	fa1f fa8a 	uxth.w	sl, sl
 801c8ce:	eba5 050e 	sub.w	r5, r5, lr
 801c8d2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c8d6:	940e      	str	r4, [sp, #56]	@ 0x38
 801c8d8:	eba3 030a 	sub.w	r3, r3, sl
 801c8dc:	b2ad      	uxth	r5, r5
 801c8de:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c8e0:	b29b      	uxth	r3, r3
 801c8e2:	fb08 f505 	mul.w	r5, r8, r5
 801c8e6:	fb09 5303 	mla	r3, r9, r3, r5
 801c8ea:	fb0a 3304 	mla	r3, sl, r4, r3
 801c8ee:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c8f0:	fb0e 3304 	mla	r3, lr, r4, r3
 801c8f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c8f8:	2b00      	cmp	r3, #0
 801c8fa:	f000 810f 	beq.w	801cb1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c8fe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c900:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c904:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c908:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c90c:	f000 8190 	beq.w	801cc30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c910:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c914:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c918:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c91c:	fb09 f000 	mul.w	r0, r9, r0
 801c920:	fb0a fe0e 	mul.w	lr, sl, lr
 801c924:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c928:	f100 0b20 	add.w	fp, r0, #32
 801c92c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c930:	44ce      	add	lr, r9
 801c932:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c936:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c93a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c93e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c942:	ea4e 0909 	orr.w	r9, lr, r9
 801c946:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c94a:	8868      	ldrh	r0, [r5, #2]
 801c94c:	d019      	beq.n	801c982 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c94e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c952:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c956:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c95a:	fb08 f800 	mul.w	r8, r8, r0
 801c95e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c962:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c966:	f108 0b20 	add.w	fp, r8, #32
 801c96a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c96e:	4486      	add	lr, r0
 801c970:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c974:	0a00      	lsrs	r0, r0, #8
 801c976:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c97a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c97e:	ea4e 0000 	orr.w	r0, lr, r0
 801c982:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c986:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c98a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801c98e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c992:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c996:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c99a:	ea4e 0909 	orr.w	r9, lr, r9
 801c99e:	ea4a 0000 	orr.w	r0, sl, r0
 801c9a2:	f1bc 0f00 	cmp.w	ip, #0
 801c9a6:	f000 8145 	beq.w	801cc34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c9aa:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801c9ae:	3a01      	subs	r2, #1
 801c9b0:	0052      	lsls	r2, r2, #1
 801c9b2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c9b4:	3202      	adds	r2, #2
 801c9b6:	2cff      	cmp	r4, #255	@ 0xff
 801c9b8:	eb05 0e02 	add.w	lr, r5, r2
 801c9bc:	5aaa      	ldrh	r2, [r5, r2]
 801c9be:	d018      	beq.n	801c9f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c9c0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801c9c4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c9c8:	fb04 fa02 	mul.w	sl, r4, r2
 801c9cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c9d0:	fb08 f805 	mul.w	r8, r8, r5
 801c9d4:	f10a 0520 	add.w	r5, sl, #32
 801c9d8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c9dc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c9e0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c9e4:	4442      	add	r2, r8
 801c9e6:	0a2d      	lsrs	r5, r5, #8
 801c9e8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c9ec:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c9f0:	432a      	orrs	r2, r5
 801c9f2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c9f4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c9f8:	2cff      	cmp	r4, #255	@ 0xff
 801c9fa:	d01a      	beq.n	801ca32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c9fc:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801ca00:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ca04:	fb04 fa05 	mul.w	sl, r4, r5
 801ca08:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ca0c:	fb08 f80e 	mul.w	r8, r8, lr
 801ca10:	f10a 0e20 	add.w	lr, sl, #32
 801ca14:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ca18:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801ca1c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ca20:	4445      	add	r5, r8
 801ca22:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ca26:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ca2a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801ca2e:	ea45 050e 	orr.w	r5, r5, lr
 801ca32:	fb1c fe01 	smulbb	lr, ip, r1
 801ca36:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ca3a:	f1cc 0810 	rsb	r8, ip, #16
 801ca3e:	eba8 0801 	sub.w	r8, r8, r1
 801ca42:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ca46:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ca4a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ca4e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ca52:	4341      	muls	r1, r0
 801ca54:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ca58:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ca5c:	ea4a 0202 	orr.w	r2, sl, r2
 801ca60:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ca64:	fb09 1108 	mla	r1, r9, r8, r1
 801ca68:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ca6c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ca70:	fb0c 1102 	mla	r1, ip, r2, r1
 801ca74:	ea4b 0505 	orr.w	r5, fp, r5
 801ca78:	fb0e 1e05 	mla	lr, lr, r5, r1
 801ca7c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ca80:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ca84:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca88:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ca8c:	ea42 0e0e 	orr.w	lr, r2, lr
 801ca90:	fa1f f28e 	uxth.w	r2, lr
 801ca94:	2bff      	cmp	r3, #255	@ 0xff
 801ca96:	d103      	bne.n	801caa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ca98:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ca9a:	29ff      	cmp	r1, #255	@ 0xff
 801ca9c:	f000 80de 	beq.w	801cc5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801caa0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801caa2:	8838      	ldrh	r0, [r7, #0]
 801caa4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801caa6:	434b      	muls	r3, r1
 801caa8:	f103 0c01 	add.w	ip, r3, #1
 801caac:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801cab0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cab4:	fa5f fc83 	uxtb.w	ip, r3
 801cab8:	1203      	asrs	r3, r0, #8
 801caba:	1215      	asrs	r5, r2, #8
 801cabc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801cac0:	fb13 f30c 	smulbb	r3, r3, ip
 801cac4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cac8:	fb05 3501 	mla	r5, r5, r1, r3
 801cacc:	10c3      	asrs	r3, r0, #3
 801cace:	10d1      	asrs	r1, r2, #3
 801cad0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801cad4:	fb13 f30c 	smulbb	r3, r3, ip
 801cad8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cadc:	fb01 3104 	mla	r1, r1, r4, r3
 801cae0:	00c3      	lsls	r3, r0, #3
 801cae2:	00d2      	lsls	r2, r2, #3
 801cae4:	b2db      	uxtb	r3, r3
 801cae6:	b2d2      	uxtb	r2, r2
 801cae8:	fb13 f30c 	smulbb	r3, r3, ip
 801caec:	b2ad      	uxth	r5, r5
 801caee:	fb02 3304 	mla	r3, r2, r4, r3
 801caf2:	b29a      	uxth	r2, r3
 801caf4:	1c6b      	adds	r3, r5, #1
 801caf6:	b289      	uxth	r1, r1
 801caf8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cafc:	1c53      	adds	r3, r2, #1
 801cafe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cb02:	1c4a      	adds	r2, r1, #1
 801cb04:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cb08:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cb0c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cb10:	0949      	lsrs	r1, r1, #5
 801cb12:	432b      	orrs	r3, r5
 801cb14:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cb18:	430b      	orrs	r3, r1
 801cb1a:	803b      	strh	r3, [r7, #0]
 801cb1c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cb1e:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cb20:	4413      	add	r3, r2
 801cb22:	9321      	str	r3, [sp, #132]	@ 0x84
 801cb24:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cb26:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb28:	441a      	add	r2, r3
 801cb2a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cb2c:	9222      	str	r2, [sp, #136]	@ 0x88
 801cb2e:	3b01      	subs	r3, #1
 801cb30:	3702      	adds	r7, #2
 801cb32:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cb34:	e689      	b.n	801c84a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801cb36:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cb38:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801cb3a:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801cb3c:	4433      	add	r3, r6
 801cb3e:	9321      	str	r3, [sp, #132]	@ 0x84
 801cb40:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb42:	441c      	add	r4, r3
 801cb44:	9b08      	ldr	r3, [sp, #32]
 801cb46:	9422      	str	r4, [sp, #136]	@ 0x88
 801cb48:	3b01      	subs	r3, #1
 801cb4a:	9308      	str	r3, [sp, #32]
 801cb4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cb4e:	3302      	adds	r3, #2
 801cb50:	9309      	str	r3, [sp, #36]	@ 0x24
 801cb52:	e658      	b.n	801c806 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801cb54:	d028      	beq.n	801cba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cb56:	9b08      	ldr	r3, [sp, #32]
 801cb58:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801cb5a:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801cb5c:	3b01      	subs	r3, #1
 801cb5e:	fb00 5003 	mla	r0, r0, r3, r5
 801cb62:	1400      	asrs	r0, r0, #16
 801cb64:	f53f ae6c 	bmi.w	801c840 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cb68:	3901      	subs	r1, #1
 801cb6a:	4288      	cmp	r0, r1
 801cb6c:	f6bf ae68 	bge.w	801c840 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cb70:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801cb72:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801cb74:	fb01 0303 	mla	r3, r1, r3, r0
 801cb78:	141b      	asrs	r3, r3, #16
 801cb7a:	f53f ae61 	bmi.w	801c840 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cb7e:	3a01      	subs	r2, #1
 801cb80:	4293      	cmp	r3, r2
 801cb82:	f6bf ae5d 	bge.w	801c840 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cb86:	9b08      	ldr	r3, [sp, #32]
 801cb88:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801cb8c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cb8e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cb92:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cb94:	2b00      	cmp	r3, #0
 801cb96:	f300 8082 	bgt.w	801cc9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801cb9a:	9b08      	ldr	r3, [sp, #32]
 801cb9c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cba0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cba2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cba6:	9309      	str	r3, [sp, #36]	@ 0x24
 801cba8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cbaa:	2b00      	cmp	r3, #0
 801cbac:	f340 81ef 	ble.w	801cf8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801cbb0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cbb4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cbb8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cbbc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cbbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cbc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cbc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cbca:	eef0 6a62 	vmov.f32	s13, s5
 801cbce:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cbd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cbd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cbda:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801cbde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cbe2:	eef0 6a43 	vmov.f32	s13, s6
 801cbe6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cbea:	ee12 2a90 	vmov	r2, s5
 801cbee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cbf2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cbf6:	ee13 2a10 	vmov	r2, s6
 801cbfa:	9323      	str	r3, [sp, #140]	@ 0x8c
 801cbfc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cbfe:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc02:	9324      	str	r3, [sp, #144]	@ 0x90
 801cc04:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cc06:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cc08:	3b01      	subs	r3, #1
 801cc0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc0e:	9311      	str	r3, [sp, #68]	@ 0x44
 801cc10:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cc12:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801cc16:	bf08      	it	eq
 801cc18:	4613      	moveq	r3, r2
 801cc1a:	9308      	str	r3, [sp, #32]
 801cc1c:	eeb0 3a67 	vmov.f32	s6, s15
 801cc20:	eef0 2a47 	vmov.f32	s5, s14
 801cc24:	e5e1      	b.n	801c7ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cc26:	fb08 f505 	mul.w	r5, r8, r5
 801cc2a:	fb09 5303 	mla	r3, r9, r3, r5
 801cc2e:	e661      	b.n	801c8f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801cc30:	4681      	mov	r9, r0
 801cc32:	e688      	b.n	801c946 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cc34:	f1c1 0210 	rsb	r2, r1, #16
 801cc38:	4341      	muls	r1, r0
 801cc3a:	fb09 1902 	mla	r9, r9, r2, r1
 801cc3e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cc42:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cc46:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cc4a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cc4e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cc52:	ea42 0909 	orr.w	r9, r2, r9
 801cc56:	fa1f f289 	uxth.w	r2, r9
 801cc5a:	e71b      	b.n	801ca94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cc5c:	803a      	strh	r2, [r7, #0]
 801cc5e:	e75d      	b.n	801cb1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc60:	f115 0e01 	adds.w	lr, r5, #1
 801cc64:	f53f af5a 	bmi.w	801cb1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc68:	4572      	cmp	r2, lr
 801cc6a:	f6ff af57 	blt.w	801cb1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc6e:	f110 0e01 	adds.w	lr, r0, #1
 801cc72:	f53f af53 	bmi.w	801cb1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc76:	4573      	cmp	r3, lr
 801cc78:	f6ff af50 	blt.w	801cb1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc7c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801cc7e:	9502      	str	r5, [sp, #8]
 801cc80:	b21b      	sxth	r3, r3
 801cc82:	b212      	sxth	r2, r2
 801cc84:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801cc88:	9301      	str	r3, [sp, #4]
 801cc8a:	9200      	str	r2, [sp, #0]
 801cc8c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801cc90:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801cc94:	4639      	mov	r1, r7
 801cc96:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801cc98:	f7ff fc04 	bl	801c4a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801cc9c:	e73e      	b.n	801cb1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc9e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cca0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cca4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cca6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801ccaa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ccac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ccb0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801ccb2:	141f      	asrs	r7, r3, #16
 801ccb4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801ccb6:	141b      	asrs	r3, r3, #16
 801ccb8:	fb01 3707 	mla	r7, r1, r7, r3
 801ccbc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ccbe:	fa1f fc82 	uxth.w	ip, r2
 801ccc2:	eb03 0a07 	add.w	sl, r3, r7
 801ccc6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801ccca:	f813 9007 	ldrb.w	r9, [r3, r7]
 801ccce:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ccd2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801ccd6:	b29b      	uxth	r3, r3
 801ccd8:	2d00      	cmp	r5, #0
 801ccda:	f000 813d 	beq.w	801cf58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801ccde:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cce2:	940f      	str	r4, [sp, #60]	@ 0x3c
 801cce4:	eb0a 0b01 	add.w	fp, sl, r1
 801cce8:	fa1f fa85 	uxth.w	sl, r5
 801ccec:	fb0a fc0c 	mul.w	ip, sl, ip
 801ccf0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801ccf4:	fa1f fa8a 	uxth.w	sl, sl
 801ccf8:	eba0 000c 	sub.w	r0, r0, ip
 801ccfc:	eba3 030a 	sub.w	r3, r3, sl
 801cd00:	b280      	uxth	r0, r0
 801cd02:	fb08 f000 	mul.w	r0, r8, r0
 801cd06:	b29b      	uxth	r3, r3
 801cd08:	fb09 0303 	mla	r3, r9, r3, r0
 801cd0c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801cd0e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cd12:	9410      	str	r4, [sp, #64]	@ 0x40
 801cd14:	fb0a 3300 	mla	r3, sl, r0, r3
 801cd18:	fb0c 3304 	mla	r3, ip, r4, r3
 801cd1c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cd20:	2b00      	cmp	r3, #0
 801cd22:	f000 810b 	beq.w	801cf3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cd26:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801cd28:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cd2a:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cd2e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cd32:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cd36:	f000 8114 	beq.w	801cf62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801cd3a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801cd3e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cd42:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cd46:	fb09 f707 	mul.w	r7, r9, r7
 801cd4a:	fb0a fc0c 	mul.w	ip, sl, ip
 801cd4e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cd52:	f107 0b20 	add.w	fp, r7, #32
 801cd56:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801cd5a:	44cc      	add	ip, r9
 801cd5c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cd60:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cd64:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cd68:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801cd6c:	ea4c 0909 	orr.w	r9, ip, r9
 801cd70:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801cd74:	8847      	ldrh	r7, [r0, #2]
 801cd76:	d019      	beq.n	801cdac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801cd78:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801cd7c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cd80:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cd84:	fb08 f807 	mul.w	r8, r8, r7
 801cd88:	fb0a fc0c 	mul.w	ip, sl, ip
 801cd8c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801cd90:	f108 0b20 	add.w	fp, r8, #32
 801cd94:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801cd98:	44bc      	add	ip, r7
 801cd9a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801cd9e:	0a3f      	lsrs	r7, r7, #8
 801cda0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cda4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cda8:	ea4c 0707 	orr.w	r7, ip, r7
 801cdac:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801cdb0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801cdb4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cdb8:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cdbc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cdc0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801cdc4:	ea4c 0909 	orr.w	r9, ip, r9
 801cdc8:	ea4a 0707 	orr.w	r7, sl, r7
 801cdcc:	2d00      	cmp	r5, #0
 801cdce:	f000 80ca 	beq.w	801cf66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801cdd2:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801cdd6:	3901      	subs	r1, #1
 801cdd8:	0049      	lsls	r1, r1, #1
 801cdda:	3102      	adds	r1, #2
 801cddc:	eb00 0c01 	add.w	ip, r0, r1
 801cde0:	5a41      	ldrh	r1, [r0, r1]
 801cde2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801cde4:	28ff      	cmp	r0, #255	@ 0xff
 801cde6:	d019      	beq.n	801ce1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801cde8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801cdea:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801cdee:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cdf2:	fb04 fa01 	mul.w	sl, r4, r1
 801cdf6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cdfa:	fb08 f800 	mul.w	r8, r8, r0
 801cdfe:	f10a 0020 	add.w	r0, sl, #32
 801ce02:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801ce06:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801ce0a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ce0e:	4441      	add	r1, r8
 801ce10:	0a00      	lsrs	r0, r0, #8
 801ce12:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801ce16:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ce1a:	4301      	orrs	r1, r0
 801ce1c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ce1e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801ce22:	2cff      	cmp	r4, #255	@ 0xff
 801ce24:	d01a      	beq.n	801ce5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801ce26:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801ce2a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ce2e:	fb04 fa00 	mul.w	sl, r4, r0
 801ce32:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce36:	fb08 f80c 	mul.w	r8, r8, ip
 801ce3a:	f10a 0c20 	add.w	ip, sl, #32
 801ce3e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801ce42:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801ce46:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ce4a:	4440      	add	r0, r8
 801ce4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce50:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801ce54:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ce58:	ea40 000c 	orr.w	r0, r0, ip
 801ce5c:	fb15 fc02 	smulbb	ip, r5, r2
 801ce60:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801ce64:	f1c5 0810 	rsb	r8, r5, #16
 801ce68:	eba8 0802 	sub.w	r8, r8, r2
 801ce6c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ce70:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801ce74:	437a      	muls	r2, r7
 801ce76:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ce7a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801ce7e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ce82:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ce86:	fb09 2208 	mla	r2, r9, r8, r2
 801ce8a:	ea4a 0101 	orr.w	r1, sl, r1
 801ce8e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801ce92:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ce96:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ce9a:	fb05 2201 	mla	r2, r5, r1, r2
 801ce9e:	ea4b 0000 	orr.w	r0, fp, r0
 801cea2:	fb0c 2200 	mla	r2, ip, r0, r2
 801cea6:	0d57      	lsrs	r7, r2, #21
 801cea8:	0952      	lsrs	r2, r2, #5
 801ceaa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ceae:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ceb2:	433a      	orrs	r2, r7
 801ceb4:	2bff      	cmp	r3, #255	@ 0xff
 801ceb6:	b292      	uxth	r2, r2
 801ceb8:	d102      	bne.n	801cec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801ceba:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801cebc:	29ff      	cmp	r1, #255	@ 0xff
 801cebe:	d063      	beq.n	801cf88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801cec0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801cec2:	f8be 1000 	ldrh.w	r1, [lr]
 801cec6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cec8:	4343      	muls	r3, r0
 801ceca:	1c58      	adds	r0, r3, #1
 801cecc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801ced0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801ced4:	1208      	asrs	r0, r1, #8
 801ced6:	b2db      	uxtb	r3, r3
 801ced8:	1215      	asrs	r5, r2, #8
 801ceda:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801cede:	fb10 f003 	smulbb	r0, r0, r3
 801cee2:	10cf      	asrs	r7, r1, #3
 801cee4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cee8:	00c9      	lsls	r1, r1, #3
 801ceea:	fb05 0504 	mla	r5, r5, r4, r0
 801ceee:	b2c9      	uxtb	r1, r1
 801cef0:	10d0      	asrs	r0, r2, #3
 801cef2:	00d2      	lsls	r2, r2, #3
 801cef4:	fb11 f103 	smulbb	r1, r1, r3
 801cef8:	b2d2      	uxtb	r2, r2
 801cefa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801cefe:	fb02 1204 	mla	r2, r2, r4, r1
 801cf02:	fb17 f703 	smulbb	r7, r7, r3
 801cf06:	b2ad      	uxth	r5, r5
 801cf08:	b292      	uxth	r2, r2
 801cf0a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801cf0e:	fb00 7004 	mla	r0, r0, r4, r7
 801cf12:	1c6b      	adds	r3, r5, #1
 801cf14:	1c57      	adds	r7, r2, #1
 801cf16:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cf1a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cf1e:	b280      	uxth	r0, r0
 801cf20:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cf24:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cf28:	433d      	orrs	r5, r7
 801cf2a:	1c47      	adds	r7, r0, #1
 801cf2c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cf30:	097f      	lsrs	r7, r7, #5
 801cf32:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cf36:	433d      	orrs	r5, r7
 801cf38:	f8ae 5000 	strh.w	r5, [lr]
 801cf3c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cf3e:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cf40:	4413      	add	r3, r2
 801cf42:	9321      	str	r3, [sp, #132]	@ 0x84
 801cf44:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cf46:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cf48:	441a      	add	r2, r3
 801cf4a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cf4c:	9222      	str	r2, [sp, #136]	@ 0x88
 801cf4e:	3b01      	subs	r3, #1
 801cf50:	f10e 0e02 	add.w	lr, lr, #2
 801cf54:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cf56:	e61c      	b.n	801cb92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801cf58:	fb08 f000 	mul.w	r0, r8, r0
 801cf5c:	fb09 0303 	mla	r3, r9, r3, r0
 801cf60:	e6dc      	b.n	801cd1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801cf62:	46b9      	mov	r9, r7
 801cf64:	e704      	b.n	801cd70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801cf66:	f1c2 0110 	rsb	r1, r2, #16
 801cf6a:	437a      	muls	r2, r7
 801cf6c:	fb09 2901 	mla	r9, r9, r1, r2
 801cf70:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cf74:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801cf78:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801cf7c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cf80:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cf84:	4302      	orrs	r2, r0
 801cf86:	e795      	b.n	801ceb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801cf88:	f8ae 2000 	strh.w	r2, [lr]
 801cf8c:	e7d6      	b.n	801cf3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cf8e:	b017      	add	sp, #92	@ 0x5c
 801cf90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cf94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801cf94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf98:	b085      	sub	sp, #20
 801cf9a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801cf9e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801cfa2:	9103      	str	r1, [sp, #12]
 801cfa4:	fb00 7406 	mla	r4, r0, r6, r7
 801cfa8:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801cfac:	2800      	cmp	r0, #0
 801cfae:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801cfb2:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801cfb6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801cfba:	9501      	str	r5, [sp, #4]
 801cfbc:	eb02 0904 	add.w	r9, r2, r4
 801cfc0:	f2c0 8141 	blt.w	801d246 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801cfc4:	4583      	cmp	fp, r0
 801cfc6:	f340 813e 	ble.w	801d246 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801cfca:	2f00      	cmp	r7, #0
 801cfcc:	f2c0 8137 	blt.w	801d23e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801cfd0:	42be      	cmp	r6, r7
 801cfd2:	f340 8134 	ble.w	801d23e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801cfd6:	f812 c004 	ldrb.w	ip, [r2, r4]
 801cfda:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801cfde:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cfe2:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801cfe6:	4355      	muls	r5, r2
 801cfe8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cfec:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801cff0:	fb0c f203 	mul.w	r2, ip, r3
 801cff4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cff8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801cffc:	441d      	add	r5, r3
 801cffe:	f102 0320 	add.w	r3, r2, #32
 801d002:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d006:	0a1b      	lsrs	r3, r3, #8
 801d008:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d00c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d010:	431c      	orrs	r4, r3
 801d012:	1c7b      	adds	r3, r7, #1
 801d014:	f100 811c 	bmi.w	801d250 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d018:	429e      	cmp	r6, r3
 801d01a:	f340 8119 	ble.w	801d250 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d01e:	2900      	cmp	r1, #0
 801d020:	f000 8119 	beq.w	801d256 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801d024:	9a01      	ldr	r2, [sp, #4]
 801d026:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d02a:	8855      	ldrh	r5, [r2, #2]
 801d02c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d030:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801d034:	fb08 f802 	mul.w	r8, r8, r2
 801d038:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d03c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801d040:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d044:	435d      	muls	r5, r3
 801d046:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d04a:	44d0      	add	r8, sl
 801d04c:	f105 0a20 	add.w	sl, r5, #32
 801d050:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d054:	0a2d      	lsrs	r5, r5, #8
 801d056:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d05a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d05e:	432a      	orrs	r2, r5
 801d060:	3001      	adds	r0, #1
 801d062:	f100 80fe 	bmi.w	801d262 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d066:	4583      	cmp	fp, r0
 801d068:	f340 80fb 	ble.w	801d262 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d06c:	f1be 0f00 	cmp.w	lr, #0
 801d070:	f000 80fc 	beq.w	801d26c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801d074:	2f00      	cmp	r7, #0
 801d076:	f2c0 80f1 	blt.w	801d25c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d07a:	42be      	cmp	r6, r7
 801d07c:	f340 80ee 	ble.w	801d25c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d080:	9801      	ldr	r0, [sp, #4]
 801d082:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d086:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d08a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d08e:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801d092:	fb0a fa00 	mul.w	sl, sl, r0
 801d096:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801d09a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d09e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d0a2:	fb05 f808 	mul.w	r8, r5, r8
 801d0a6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801d0aa:	4482      	add	sl, r0
 801d0ac:	f108 0020 	add.w	r0, r8, #32
 801d0b0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d0b4:	0a00      	lsrs	r0, r0, #8
 801d0b6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d0ba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0be:	ea4b 0b00 	orr.w	fp, fp, r0
 801d0c2:	3701      	adds	r7, #1
 801d0c4:	f100 80d7 	bmi.w	801d276 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d0c8:	42be      	cmp	r6, r7
 801d0ca:	f340 80d4 	ble.w	801d276 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d0ce:	2900      	cmp	r1, #0
 801d0d0:	f000 80d4 	beq.w	801d27c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801d0d4:	3601      	adds	r6, #1
 801d0d6:	9801      	ldr	r0, [sp, #4]
 801d0d8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d0dc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d0e0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d0e4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d0e8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0ec:	fb09 f906 	mul.w	r9, r9, r6
 801d0f0:	fb07 f800 	mul.w	r8, r7, r0
 801d0f4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d0f8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d0fc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d100:	44d1      	add	r9, sl
 801d102:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d106:	f108 0020 	add.w	r0, r8, #32
 801d10a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d10e:	0a00      	lsrs	r0, r0, #8
 801d110:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d114:	4330      	orrs	r0, r6
 801d116:	b28e      	uxth	r6, r1
 801d118:	fa1f f98e 	uxth.w	r9, lr
 801d11c:	fb06 f809 	mul.w	r8, r6, r9
 801d120:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d124:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d128:	0136      	lsls	r6, r6, #4
 801d12a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d12e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d132:	9601      	str	r6, [sp, #4]
 801d134:	ea4a 0404 	orr.w	r4, sl, r4
 801d138:	fa1f f689 	uxth.w	r6, r9
 801d13c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d140:	fb11 f90e 	smulbb	r9, r1, lr
 801d144:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d148:	9602      	str	r6, [sp, #8]
 801d14a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d14e:	4626      	mov	r6, r4
 801d150:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d154:	f1ce 0410 	rsb	r4, lr, #16
 801d158:	1a64      	subs	r4, r4, r1
 801d15a:	ea4a 0202 	orr.w	r2, sl, r2
 801d15e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d162:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d166:	434a      	muls	r2, r1
 801d168:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d16c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d170:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d174:	fb04 2406 	mla	r4, r4, r6, r2
 801d178:	ea4a 0000 	orr.w	r0, sl, r0
 801d17c:	fb09 4200 	mla	r2, r9, r0, r4
 801d180:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d184:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d188:	9801      	ldr	r0, [sp, #4]
 801d18a:	9903      	ldr	r1, [sp, #12]
 801d18c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d190:	ea44 0b0b 	orr.w	fp, r4, fp
 801d194:	9c02      	ldr	r4, [sp, #8]
 801d196:	8809      	ldrh	r1, [r1, #0]
 801d198:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801d19c:	1b00      	subs	r0, r0, r4
 801d19e:	9c01      	ldr	r4, [sp, #4]
 801d1a0:	eba4 0608 	sub.w	r6, r4, r8
 801d1a4:	b2b6      	uxth	r6, r6
 801d1a6:	b280      	uxth	r0, r0
 801d1a8:	4373      	muls	r3, r6
 801d1aa:	fb0c 3300 	mla	r3, ip, r0, r3
 801d1ae:	9802      	ldr	r0, [sp, #8]
 801d1b0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d1b4:	fb00 3505 	mla	r5, r0, r5, r3
 801d1b8:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d1bc:	fb08 5707 	mla	r7, r8, r7, r5
 801d1c0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d1c4:	120b      	asrs	r3, r1, #8
 801d1c6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d1ca:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801d1ce:	b2ff      	uxtb	r7, r7
 801d1d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d1d4:	10c8      	asrs	r0, r1, #3
 801d1d6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d1da:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d1de:	00c9      	lsls	r1, r1, #3
 801d1e0:	437b      	muls	r3, r7
 801d1e2:	ea42 0e0e 	orr.w	lr, r2, lr
 801d1e6:	b2c9      	uxtb	r1, r1
 801d1e8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d1ec:	fa1f f28e 	uxth.w	r2, lr
 801d1f0:	4378      	muls	r0, r7
 801d1f2:	434f      	muls	r7, r1
 801d1f4:	1c59      	adds	r1, r3, #1
 801d1f6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d1fa:	1213      	asrs	r3, r2, #8
 801d1fc:	f023 0307 	bic.w	r3, r3, #7
 801d200:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d204:	1c41      	adds	r1, r0, #1
 801d206:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d20a:	10d1      	asrs	r1, r2, #3
 801d20c:	f021 0103 	bic.w	r1, r1, #3
 801d210:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d214:	021b      	lsls	r3, r3, #8
 801d216:	00c9      	lsls	r1, r1, #3
 801d218:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d21c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801d220:	430b      	orrs	r3, r1
 801d222:	1c79      	adds	r1, r7, #1
 801d224:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801d228:	00d2      	lsls	r2, r2, #3
 801d22a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d22e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d232:	431a      	orrs	r2, r3
 801d234:	9b03      	ldr	r3, [sp, #12]
 801d236:	801a      	strh	r2, [r3, #0]
 801d238:	b005      	add	sp, #20
 801d23a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d23e:	f04f 0c00 	mov.w	ip, #0
 801d242:	4664      	mov	r4, ip
 801d244:	e6e5      	b.n	801d012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801d246:	2300      	movs	r3, #0
 801d248:	469c      	mov	ip, r3
 801d24a:	461a      	mov	r2, r3
 801d24c:	461c      	mov	r4, r3
 801d24e:	e707      	b.n	801d060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d250:	2300      	movs	r3, #0
 801d252:	461a      	mov	r2, r3
 801d254:	e704      	b.n	801d060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d256:	460b      	mov	r3, r1
 801d258:	460a      	mov	r2, r1
 801d25a:	e701      	b.n	801d060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d25c:	2500      	movs	r5, #0
 801d25e:	46ab      	mov	fp, r5
 801d260:	e72f      	b.n	801d0c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d262:	2700      	movs	r7, #0
 801d264:	463d      	mov	r5, r7
 801d266:	4638      	mov	r0, r7
 801d268:	46bb      	mov	fp, r7
 801d26a:	e754      	b.n	801d116 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d26c:	4677      	mov	r7, lr
 801d26e:	4675      	mov	r5, lr
 801d270:	4670      	mov	r0, lr
 801d272:	46f3      	mov	fp, lr
 801d274:	e74f      	b.n	801d116 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d276:	2700      	movs	r7, #0
 801d278:	4638      	mov	r0, r7
 801d27a:	e74c      	b.n	801d116 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d27c:	460f      	mov	r7, r1
 801d27e:	4608      	mov	r0, r1
 801d280:	e749      	b.n	801d116 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d284 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d288:	b093      	sub	sp, #76	@ 0x4c
 801d28a:	9210      	str	r2, [sp, #64]	@ 0x40
 801d28c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d28e:	910e      	str	r1, [sp, #56]	@ 0x38
 801d290:	9306      	str	r3, [sp, #24]
 801d292:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801d296:	9011      	str	r0, [sp, #68]	@ 0x44
 801d298:	6850      	ldr	r0, [r2, #4]
 801d29a:	6812      	ldr	r2, [r2, #0]
 801d29c:	fb00 1303 	mla	r3, r0, r3, r1
 801d2a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d2a4:	9307      	str	r3, [sp, #28]
 801d2a6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d2a8:	681b      	ldr	r3, [r3, #0]
 801d2aa:	9308      	str	r3, [sp, #32]
 801d2ac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d2ae:	685b      	ldr	r3, [r3, #4]
 801d2b0:	9309      	str	r3, [sp, #36]	@ 0x24
 801d2b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d2b4:	2b00      	cmp	r3, #0
 801d2b6:	dc03      	bgt.n	801d2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d2b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d2ba:	2b00      	cmp	r3, #0
 801d2bc:	f340 83b4 	ble.w	801da28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d2c0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d2c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d2c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d2ca:	1e48      	subs	r0, r1, #1
 801d2cc:	1e55      	subs	r5, r2, #1
 801d2ce:	9b06      	ldr	r3, [sp, #24]
 801d2d0:	2b00      	cmp	r3, #0
 801d2d2:	f340 8163 	ble.w	801d59c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d2d6:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801d2d8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d2da:	1436      	asrs	r6, r6, #16
 801d2dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d2e0:	d406      	bmi.n	801d2f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d2e2:	4286      	cmp	r6, r0
 801d2e4:	da04      	bge.n	801d2f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d2e6:	2b00      	cmp	r3, #0
 801d2e8:	db02      	blt.n	801d2f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d2ea:	42ab      	cmp	r3, r5
 801d2ec:	f2c0 8157 	blt.w	801d59e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801d2f0:	3601      	adds	r6, #1
 801d2f2:	f100 8144 	bmi.w	801d57e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d2f6:	42b1      	cmp	r1, r6
 801d2f8:	f2c0 8141 	blt.w	801d57e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d2fc:	3301      	adds	r3, #1
 801d2fe:	f100 813e 	bmi.w	801d57e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d302:	429a      	cmp	r2, r3
 801d304:	f2c0 813b 	blt.w	801d57e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d308:	9b06      	ldr	r3, [sp, #24]
 801d30a:	9f07      	ldr	r7, [sp, #28]
 801d30c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d30e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d312:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d314:	2b00      	cmp	r3, #0
 801d316:	f340 8164 	ble.w	801d5e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d31a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d31c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d31e:	1418      	asrs	r0, r3, #16
 801d320:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d322:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d326:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d328:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d32c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d32e:	142d      	asrs	r5, r5, #16
 801d330:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d334:	f100 81ee 	bmi.w	801d714 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d338:	f102 3eff 	add.w	lr, r2, #4294967295
 801d33c:	4575      	cmp	r5, lr
 801d33e:	f280 81e9 	bge.w	801d714 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d342:	2800      	cmp	r0, #0
 801d344:	f2c0 81e6 	blt.w	801d714 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d348:	f103 3eff 	add.w	lr, r3, #4294967295
 801d34c:	4570      	cmp	r0, lr
 801d34e:	f280 81e1 	bge.w	801d714 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d352:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d354:	b212      	sxth	r2, r2
 801d356:	fb00 5002 	mla	r0, r0, r2, r5
 801d35a:	fa1f fe81 	uxth.w	lr, r1
 801d35e:	eb03 0a00 	add.w	sl, r3, r0
 801d362:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d366:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d36a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d36e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801d372:	b29b      	uxth	r3, r3
 801d374:	f1bc 0f00 	cmp.w	ip, #0
 801d378:	f000 8179 	beq.w	801d66e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d37c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d380:	940a      	str	r4, [sp, #40]	@ 0x28
 801d382:	eb0a 0b02 	add.w	fp, sl, r2
 801d386:	fa1f fa8c 	uxth.w	sl, ip
 801d38a:	fb0a fe0e 	mul.w	lr, sl, lr
 801d38e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d392:	fa1f fa8a 	uxth.w	sl, sl
 801d396:	eba5 050e 	sub.w	r5, r5, lr
 801d39a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d39e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d3a0:	eba3 030a 	sub.w	r3, r3, sl
 801d3a4:	b2ad      	uxth	r5, r5
 801d3a6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d3a8:	b29b      	uxth	r3, r3
 801d3aa:	fb08 f505 	mul.w	r5, r8, r5
 801d3ae:	fb09 5303 	mla	r3, r9, r3, r5
 801d3b2:	fb0a 3304 	mla	r3, sl, r4, r3
 801d3b6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d3b8:	fb0e 3304 	mla	r3, lr, r4, r3
 801d3bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d3c0:	2b00      	cmp	r3, #0
 801d3c2:	f000 80cf 	beq.w	801d564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d3c6:	9c08      	ldr	r4, [sp, #32]
 801d3c8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d3cc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d3d0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d3d4:	f000 8150 	beq.w	801d678 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d3d8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d3dc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d3e0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d3e4:	fb09 f000 	mul.w	r0, r9, r0
 801d3e8:	fb0a fe0e 	mul.w	lr, sl, lr
 801d3ec:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d3f0:	f100 0b20 	add.w	fp, r0, #32
 801d3f4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d3f8:	44ce      	add	lr, r9
 801d3fa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d3fe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d402:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d406:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d40a:	ea4e 0909 	orr.w	r9, lr, r9
 801d40e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d412:	8868      	ldrh	r0, [r5, #2]
 801d414:	d019      	beq.n	801d44a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d416:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d41a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d41e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d422:	fb08 f800 	mul.w	r8, r8, r0
 801d426:	fb0a fe0e 	mul.w	lr, sl, lr
 801d42a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d42e:	f108 0b20 	add.w	fp, r8, #32
 801d432:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d436:	4486      	add	lr, r0
 801d438:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d43c:	0a00      	lsrs	r0, r0, #8
 801d43e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d442:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d446:	ea4e 0000 	orr.w	r0, lr, r0
 801d44a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d44e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d452:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d456:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d45a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d45e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d462:	ea4e 0909 	orr.w	r9, lr, r9
 801d466:	ea4a 0000 	orr.w	r0, sl, r0
 801d46a:	f1bc 0f00 	cmp.w	ip, #0
 801d46e:	f000 8105 	beq.w	801d67c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d472:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d476:	3a01      	subs	r2, #1
 801d478:	0052      	lsls	r2, r2, #1
 801d47a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d47c:	3202      	adds	r2, #2
 801d47e:	2cff      	cmp	r4, #255	@ 0xff
 801d480:	eb05 0e02 	add.w	lr, r5, r2
 801d484:	5aaa      	ldrh	r2, [r5, r2]
 801d486:	d018      	beq.n	801d4ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d488:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d48c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d490:	fb04 fa02 	mul.w	sl, r4, r2
 801d494:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d498:	fb08 f805 	mul.w	r8, r8, r5
 801d49c:	f10a 0520 	add.w	r5, sl, #32
 801d4a0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d4a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d4a8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d4ac:	4442      	add	r2, r8
 801d4ae:	0a2d      	lsrs	r5, r5, #8
 801d4b0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d4b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d4b8:	432a      	orrs	r2, r5
 801d4ba:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d4bc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d4c0:	2cff      	cmp	r4, #255	@ 0xff
 801d4c2:	d01a      	beq.n	801d4fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d4c4:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d4c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d4cc:	fb04 fa05 	mul.w	sl, r4, r5
 801d4d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d4d4:	fb08 f80e 	mul.w	r8, r8, lr
 801d4d8:	f10a 0e20 	add.w	lr, sl, #32
 801d4dc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d4e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d4e4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d4e8:	4445      	add	r5, r8
 801d4ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d4ee:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d4f2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d4f6:	ea45 050e 	orr.w	r5, r5, lr
 801d4fa:	fb1c fe01 	smulbb	lr, ip, r1
 801d4fe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d502:	f1cc 0810 	rsb	r8, ip, #16
 801d506:	eba8 0801 	sub.w	r8, r8, r1
 801d50a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d50e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d512:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d516:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d51a:	4341      	muls	r1, r0
 801d51c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d520:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d524:	ea4a 0202 	orr.w	r2, sl, r2
 801d528:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d52c:	fb09 1108 	mla	r1, r9, r8, r1
 801d530:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d534:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d538:	fb0c 1102 	mla	r1, ip, r2, r1
 801d53c:	ea4b 0505 	orr.w	r5, fp, r5
 801d540:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d544:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d548:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d54c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d550:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d554:	ea42 0e0e 	orr.w	lr, r2, lr
 801d558:	fa1f f28e 	uxth.w	r2, lr
 801d55c:	2bff      	cmp	r3, #255	@ 0xff
 801d55e:	f040 80a1 	bne.w	801d6a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d562:	803a      	strh	r2, [r7, #0]
 801d564:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d566:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d568:	4413      	add	r3, r2
 801d56a:	931d      	str	r3, [sp, #116]	@ 0x74
 801d56c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d56e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d570:	441a      	add	r2, r3
 801d572:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d574:	921e      	str	r2, [sp, #120]	@ 0x78
 801d576:	3b01      	subs	r3, #1
 801d578:	3702      	adds	r7, #2
 801d57a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d57c:	e6c9      	b.n	801d312 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d57e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d580:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d582:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801d584:	4433      	add	r3, r6
 801d586:	931d      	str	r3, [sp, #116]	@ 0x74
 801d588:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d58a:	441c      	add	r4, r3
 801d58c:	9b06      	ldr	r3, [sp, #24]
 801d58e:	941e      	str	r4, [sp, #120]	@ 0x78
 801d590:	3b01      	subs	r3, #1
 801d592:	9306      	str	r3, [sp, #24]
 801d594:	9b07      	ldr	r3, [sp, #28]
 801d596:	3302      	adds	r3, #2
 801d598:	9307      	str	r3, [sp, #28]
 801d59a:	e698      	b.n	801d2ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d59c:	d028      	beq.n	801d5f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d59e:	9b06      	ldr	r3, [sp, #24]
 801d5a0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d5a2:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d5a4:	3b01      	subs	r3, #1
 801d5a6:	fb00 5003 	mla	r0, r0, r3, r5
 801d5aa:	1400      	asrs	r0, r0, #16
 801d5ac:	f53f aeac 	bmi.w	801d308 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d5b0:	3901      	subs	r1, #1
 801d5b2:	4288      	cmp	r0, r1
 801d5b4:	f6bf aea8 	bge.w	801d308 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d5b8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d5ba:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801d5bc:	fb01 0303 	mla	r3, r1, r3, r0
 801d5c0:	141b      	asrs	r3, r3, #16
 801d5c2:	f53f aea1 	bmi.w	801d308 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d5c6:	3a01      	subs	r2, #1
 801d5c8:	4293      	cmp	r3, r2
 801d5ca:	f6bf ae9d 	bge.w	801d308 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d5ce:	9b06      	ldr	r3, [sp, #24]
 801d5d0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d5d4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d5d6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d5da:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d5dc:	2b00      	cmp	r3, #0
 801d5de:	f300 80b6 	bgt.w	801d74e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d5e2:	9b06      	ldr	r3, [sp, #24]
 801d5e4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d5e8:	9b07      	ldr	r3, [sp, #28]
 801d5ea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d5ee:	9307      	str	r3, [sp, #28]
 801d5f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d5f2:	2b00      	cmp	r3, #0
 801d5f4:	f340 8218 	ble.w	801da28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d5f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d5fc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d600:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d604:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d606:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d60a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d60e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d612:	eef0 6a62 	vmov.f32	s13, s5
 801d616:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d61a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d61e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d622:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801d626:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d62a:	eef0 6a43 	vmov.f32	s13, s6
 801d62e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d632:	ee12 2a90 	vmov	r2, s5
 801d636:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d63a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d63e:	ee13 2a10 	vmov	r2, s6
 801d642:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d644:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d646:	fb92 f3f3 	sdiv	r3, r2, r3
 801d64a:	9320      	str	r3, [sp, #128]	@ 0x80
 801d64c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d64e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d650:	3b01      	subs	r3, #1
 801d652:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d656:	930e      	str	r3, [sp, #56]	@ 0x38
 801d658:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d65a:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801d65e:	bf08      	it	eq
 801d660:	4613      	moveq	r3, r2
 801d662:	9306      	str	r3, [sp, #24]
 801d664:	eeb0 3a67 	vmov.f32	s6, s15
 801d668:	eef0 2a47 	vmov.f32	s5, s14
 801d66c:	e621      	b.n	801d2b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d66e:	fb08 f505 	mul.w	r5, r8, r5
 801d672:	fb09 5303 	mla	r3, r9, r3, r5
 801d676:	e6a1      	b.n	801d3bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d678:	4681      	mov	r9, r0
 801d67a:	e6c8      	b.n	801d40e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d67c:	f1c1 0210 	rsb	r2, r1, #16
 801d680:	4341      	muls	r1, r0
 801d682:	fb09 1902 	mla	r9, r9, r2, r1
 801d686:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d68a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d68e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d692:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d696:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d69a:	ea42 0909 	orr.w	r9, r2, r9
 801d69e:	fa1f f289 	uxth.w	r2, r9
 801d6a2:	e75b      	b.n	801d55c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d6a4:	f8b7 c000 	ldrh.w	ip, [r7]
 801d6a8:	43db      	mvns	r3, r3
 801d6aa:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d6ae:	fa5f fe83 	uxtb.w	lr, r3
 801d6b2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d6b6:	fb00 f00e 	mul.w	r0, r0, lr
 801d6ba:	1c41      	adds	r1, r0, #1
 801d6bc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d6c0:	1211      	asrs	r1, r2, #8
 801d6c2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d6c6:	f021 0107 	bic.w	r1, r1, #7
 801d6ca:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d6ce:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d6d2:	48d7      	ldr	r0, [pc, #860]	@ (801da30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d6d4:	fb05 f50e 	mul.w	r5, r5, lr
 801d6d8:	b2c9      	uxtb	r1, r1
 801d6da:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d6de:	1c69      	adds	r1, r5, #1
 801d6e0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d6e4:	10d1      	asrs	r1, r2, #3
 801d6e6:	f021 0103 	bic.w	r1, r1, #3
 801d6ea:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d6ee:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d6f2:	b2db      	uxtb	r3, r3
 801d6f4:	00c9      	lsls	r1, r1, #3
 801d6f6:	fb03 f30e 	mul.w	r3, r3, lr
 801d6fa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d6fe:	4301      	orrs	r1, r0
 801d700:	1c58      	adds	r0, r3, #1
 801d702:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d706:	00d2      	lsls	r2, r2, #3
 801d708:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d70c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d710:	430a      	orrs	r2, r1
 801d712:	e726      	b.n	801d562 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d714:	f115 0e01 	adds.w	lr, r5, #1
 801d718:	f53f af24 	bmi.w	801d564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d71c:	4572      	cmp	r2, lr
 801d71e:	f6ff af21 	blt.w	801d564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d722:	f110 0e01 	adds.w	lr, r0, #1
 801d726:	f53f af1d 	bmi.w	801d564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d72a:	4573      	cmp	r3, lr
 801d72c:	f6ff af1a 	blt.w	801d564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d730:	b21b      	sxth	r3, r3
 801d732:	b212      	sxth	r2, r2
 801d734:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d738:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d73c:	9301      	str	r3, [sp, #4]
 801d73e:	9200      	str	r2, [sp, #0]
 801d740:	4639      	mov	r1, r7
 801d742:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d746:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801d748:	f7ff fc24 	bl	801cf94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d74c:	e70a      	b.n	801d564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d74e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d750:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d754:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d756:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d75a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d75c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d760:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d762:	141f      	asrs	r7, r3, #16
 801d764:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d766:	141b      	asrs	r3, r3, #16
 801d768:	fb01 3707 	mla	r7, r1, r7, r3
 801d76c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d76e:	fa1f fc82 	uxth.w	ip, r2
 801d772:	eb03 0a07 	add.w	sl, r3, r7
 801d776:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d77a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d77e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d782:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d786:	b29b      	uxth	r3, r3
 801d788:	2d00      	cmp	r5, #0
 801d78a:	f000 80fe 	beq.w	801d98a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d78e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d792:	940c      	str	r4, [sp, #48]	@ 0x30
 801d794:	eb0a 0b01 	add.w	fp, sl, r1
 801d798:	fa1f fa85 	uxth.w	sl, r5
 801d79c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d7a0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d7a4:	fa1f fa8a 	uxth.w	sl, sl
 801d7a8:	eba0 000c 	sub.w	r0, r0, ip
 801d7ac:	eba3 030a 	sub.w	r3, r3, sl
 801d7b0:	b280      	uxth	r0, r0
 801d7b2:	fb08 f000 	mul.w	r0, r8, r0
 801d7b6:	b29b      	uxth	r3, r3
 801d7b8:	fb09 0303 	mla	r3, r9, r3, r0
 801d7bc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d7be:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d7c2:	940d      	str	r4, [sp, #52]	@ 0x34
 801d7c4:	fb0a 3300 	mla	r3, sl, r0, r3
 801d7c8:	fb0c 3304 	mla	r3, ip, r4, r3
 801d7cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d7d0:	2b00      	cmp	r3, #0
 801d7d2:	f000 80cc 	beq.w	801d96e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d7d6:	9808      	ldr	r0, [sp, #32]
 801d7d8:	9c08      	ldr	r4, [sp, #32]
 801d7da:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d7de:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d7e2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d7e6:	f000 80d5 	beq.w	801d994 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d7ea:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d7ee:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d7f2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d7f6:	fb09 f707 	mul.w	r7, r9, r7
 801d7fa:	fb0a fc0c 	mul.w	ip, sl, ip
 801d7fe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d802:	f107 0b20 	add.w	fp, r7, #32
 801d806:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d80a:	44cc      	add	ip, r9
 801d80c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d810:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d814:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d818:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d81c:	ea4c 0909 	orr.w	r9, ip, r9
 801d820:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d824:	8847      	ldrh	r7, [r0, #2]
 801d826:	d019      	beq.n	801d85c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d828:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d82c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d830:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d834:	fb08 f807 	mul.w	r8, r8, r7
 801d838:	fb0a fc0c 	mul.w	ip, sl, ip
 801d83c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d840:	f108 0b20 	add.w	fp, r8, #32
 801d844:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d848:	44bc      	add	ip, r7
 801d84a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d84e:	0a3f      	lsrs	r7, r7, #8
 801d850:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d854:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d858:	ea4c 0707 	orr.w	r7, ip, r7
 801d85c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d860:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d864:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d868:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d86c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d870:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d874:	ea4c 0909 	orr.w	r9, ip, r9
 801d878:	ea4a 0707 	orr.w	r7, sl, r7
 801d87c:	2d00      	cmp	r5, #0
 801d87e:	f000 808b 	beq.w	801d998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d882:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d886:	3901      	subs	r1, #1
 801d888:	0049      	lsls	r1, r1, #1
 801d88a:	3102      	adds	r1, #2
 801d88c:	eb00 0c01 	add.w	ip, r0, r1
 801d890:	5a41      	ldrh	r1, [r0, r1]
 801d892:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d894:	28ff      	cmp	r0, #255	@ 0xff
 801d896:	d019      	beq.n	801d8cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d898:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d89a:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d89e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d8a2:	fb04 fa01 	mul.w	sl, r4, r1
 801d8a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d8aa:	fb08 f800 	mul.w	r8, r8, r0
 801d8ae:	f10a 0020 	add.w	r0, sl, #32
 801d8b2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d8b6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d8ba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d8be:	4441      	add	r1, r8
 801d8c0:	0a00      	lsrs	r0, r0, #8
 801d8c2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d8c6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d8ca:	4301      	orrs	r1, r0
 801d8cc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d8ce:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d8d2:	2cff      	cmp	r4, #255	@ 0xff
 801d8d4:	d01a      	beq.n	801d90c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d8d6:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d8da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d8de:	fb04 fa00 	mul.w	sl, r4, r0
 801d8e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d8e6:	fb08 f80c 	mul.w	r8, r8, ip
 801d8ea:	f10a 0c20 	add.w	ip, sl, #32
 801d8ee:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d8f2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d8f6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d8fa:	4440      	add	r0, r8
 801d8fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d900:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d904:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d908:	ea40 000c 	orr.w	r0, r0, ip
 801d90c:	fb15 fc02 	smulbb	ip, r5, r2
 801d910:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d914:	f1c5 0810 	rsb	r8, r5, #16
 801d918:	eba8 0802 	sub.w	r8, r8, r2
 801d91c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d920:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d924:	437a      	muls	r2, r7
 801d926:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d92a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d92e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d932:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d936:	fb09 2208 	mla	r2, r9, r8, r2
 801d93a:	ea4a 0101 	orr.w	r1, sl, r1
 801d93e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d942:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d946:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d94a:	fb05 2201 	mla	r2, r5, r1, r2
 801d94e:	ea4b 0000 	orr.w	r0, fp, r0
 801d952:	fb0c 2200 	mla	r2, ip, r0, r2
 801d956:	0d57      	lsrs	r7, r2, #21
 801d958:	0952      	lsrs	r2, r2, #5
 801d95a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d95e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d962:	433a      	orrs	r2, r7
 801d964:	2bff      	cmp	r3, #255	@ 0xff
 801d966:	b292      	uxth	r2, r2
 801d968:	d127      	bne.n	801d9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d96a:	f8ae 2000 	strh.w	r2, [lr]
 801d96e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d970:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d972:	4413      	add	r3, r2
 801d974:	931d      	str	r3, [sp, #116]	@ 0x74
 801d976:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d978:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d97a:	441a      	add	r2, r3
 801d97c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d97e:	921e      	str	r2, [sp, #120]	@ 0x78
 801d980:	3b01      	subs	r3, #1
 801d982:	f10e 0e02 	add.w	lr, lr, #2
 801d986:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d988:	e627      	b.n	801d5da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d98a:	fb08 f000 	mul.w	r0, r8, r0
 801d98e:	fb09 0303 	mla	r3, r9, r3, r0
 801d992:	e71b      	b.n	801d7cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d994:	46b9      	mov	r9, r7
 801d996:	e743      	b.n	801d820 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d998:	f1c2 0110 	rsb	r1, r2, #16
 801d99c:	437a      	muls	r2, r7
 801d99e:	fb09 2901 	mla	r9, r9, r1, r2
 801d9a2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d9a6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d9aa:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d9ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d9b2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d9b6:	4302      	orrs	r2, r0
 801d9b8:	e7d4      	b.n	801d964 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d9ba:	f8be 7000 	ldrh.w	r7, [lr]
 801d9be:	4c1c      	ldr	r4, [pc, #112]	@ (801da30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d9c0:	43db      	mvns	r3, r3
 801d9c2:	1238      	asrs	r0, r7, #8
 801d9c4:	fa5f fc83 	uxtb.w	ip, r3
 801d9c8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d9cc:	10fd      	asrs	r5, r7, #3
 801d9ce:	fb00 f00c 	mul.w	r0, r0, ip
 801d9d2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d9d6:	fb05 f10c 	mul.w	r1, r5, ip
 801d9da:	1c45      	adds	r5, r0, #1
 801d9dc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d9e0:	1215      	asrs	r5, r2, #8
 801d9e2:	f025 0507 	bic.w	r5, r5, #7
 801d9e6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d9ea:	1c4d      	adds	r5, r1, #1
 801d9ec:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d9f0:	10d1      	asrs	r1, r2, #3
 801d9f2:	f021 0103 	bic.w	r1, r1, #3
 801d9f6:	00fb      	lsls	r3, r7, #3
 801d9f8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d9fc:	b2db      	uxtb	r3, r3
 801d9fe:	b2c0      	uxtb	r0, r0
 801da00:	00c9      	lsls	r1, r1, #3
 801da02:	fb03 f30c 	mul.w	r3, r3, ip
 801da06:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801da0a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801da0e:	4308      	orrs	r0, r1
 801da10:	1c59      	adds	r1, r3, #1
 801da12:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801da16:	00d2      	lsls	r2, r2, #3
 801da18:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801da1c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801da20:	4318      	orrs	r0, r3
 801da22:	f8ae 0000 	strh.w	r0, [lr]
 801da26:	e7a2      	b.n	801d96e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801da28:	b013      	add	sp, #76	@ 0x4c
 801da2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da2e:	bf00      	nop
 801da30:	fffff800 	.word	0xfffff800

0801da34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801da34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801da38:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801da3c:	fb05 4c03 	mla	ip, r5, r3, r4
 801da40:	2d00      	cmp	r5, #0
 801da42:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801da46:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801da4a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801da4e:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801da52:	8808      	ldrh	r0, [r1, #0]
 801da54:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801da58:	f2c0 80a7 	blt.w	801dbaa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801da5c:	45aa      	cmp	sl, r5
 801da5e:	f340 80a4 	ble.w	801dbaa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801da62:	2c00      	cmp	r4, #0
 801da64:	f2c0 809f 	blt.w	801dba6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801da68:	42a3      	cmp	r3, r4
 801da6a:	f340 809c 	ble.w	801dba6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801da6e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801da72:	1c62      	adds	r2, r4, #1
 801da74:	f100 809c 	bmi.w	801dbb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801da78:	4293      	cmp	r3, r2
 801da7a:	f340 8099 	ble.w	801dbb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801da7e:	f1b9 0f00 	cmp.w	r9, #0
 801da82:	f000 8095 	beq.w	801dbb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801da86:	f8be c002 	ldrh.w	ip, [lr, #2]
 801da8a:	3501      	adds	r5, #1
 801da8c:	f100 8094 	bmi.w	801dbb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801da90:	45aa      	cmp	sl, r5
 801da92:	f340 8091 	ble.w	801dbb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801da96:	2f00      	cmp	r7, #0
 801da98:	f000 808e 	beq.w	801dbb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801da9c:	2c00      	cmp	r4, #0
 801da9e:	f2c0 8089 	blt.w	801dbb4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801daa2:	42a3      	cmp	r3, r4
 801daa4:	f340 8086 	ble.w	801dbb4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801daa8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801daac:	3401      	adds	r4, #1
 801daae:	f100 8086 	bmi.w	801dbbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801dab2:	42a3      	cmp	r3, r4
 801dab4:	f340 8083 	ble.w	801dbbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801dab8:	f1b9 0f00 	cmp.w	r9, #0
 801dabc:	d07f      	beq.n	801dbbe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801dabe:	3301      	adds	r3, #1
 801dac0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801dac4:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801dac8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801dacc:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801dad0:	fb19 fe07 	smulbb	lr, r9, r7
 801dad4:	ea44 0808 	orr.w	r8, r4, r8
 801dad8:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801dadc:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801dae0:	f1c7 0210 	rsb	r2, r7, #16
 801dae4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801dae8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801daec:	ea44 0c0c 	orr.w	ip, r4, ip
 801daf0:	eba2 0209 	sub.w	r2, r2, r9
 801daf4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801daf8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801dafc:	fb04 f40c 	mul.w	r4, r4, ip
 801db00:	fb02 4808 	mla	r8, r2, r8, r4
 801db04:	041a      	lsls	r2, r3, #16
 801db06:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801db0a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801db0e:	4313      	orrs	r3, r2
 801db10:	042a      	lsls	r2, r5, #16
 801db12:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801db16:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801db1a:	fb0e 8303 	mla	r3, lr, r3, r8
 801db1e:	432a      	orrs	r2, r5
 801db20:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801db24:	fb07 3202 	mla	r2, r7, r2, r3
 801db28:	0d53      	lsrs	r3, r2, #21
 801db2a:	0952      	lsrs	r2, r2, #5
 801db2c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801db30:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801db34:	431a      	orrs	r2, r3
 801db36:	b293      	uxth	r3, r2
 801db38:	b2b4      	uxth	r4, r6
 801db3a:	1202      	asrs	r2, r0, #8
 801db3c:	43f6      	mvns	r6, r6
 801db3e:	b2f6      	uxtb	r6, r6
 801db40:	121d      	asrs	r5, r3, #8
 801db42:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801db46:	fb12 f206 	smulbb	r2, r2, r6
 801db4a:	10c7      	asrs	r7, r0, #3
 801db4c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801db50:	00c0      	lsls	r0, r0, #3
 801db52:	fb05 2504 	mla	r5, r5, r4, r2
 801db56:	b2c0      	uxtb	r0, r0
 801db58:	10da      	asrs	r2, r3, #3
 801db5a:	00db      	lsls	r3, r3, #3
 801db5c:	b2db      	uxtb	r3, r3
 801db5e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801db62:	fb10 f006 	smulbb	r0, r0, r6
 801db66:	b2ad      	uxth	r5, r5
 801db68:	fb03 0004 	mla	r0, r3, r4, r0
 801db6c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801db70:	fb17 f706 	smulbb	r7, r7, r6
 801db74:	b280      	uxth	r0, r0
 801db76:	1c6b      	adds	r3, r5, #1
 801db78:	fb02 7204 	mla	r2, r2, r4, r7
 801db7c:	b292      	uxth	r2, r2
 801db7e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801db82:	1c43      	adds	r3, r0, #1
 801db84:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801db88:	1c50      	adds	r0, r2, #1
 801db8a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801db8e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801db92:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801db96:	0952      	lsrs	r2, r2, #5
 801db98:	432b      	orrs	r3, r5
 801db9a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801db9e:	4313      	orrs	r3, r2
 801dba0:	800b      	strh	r3, [r1, #0]
 801dba2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dba6:	4680      	mov	r8, r0
 801dba8:	e763      	b.n	801da72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801dbaa:	4684      	mov	ip, r0
 801dbac:	4680      	mov	r8, r0
 801dbae:	e76c      	b.n	801da8a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801dbb0:	4684      	mov	ip, r0
 801dbb2:	e76a      	b.n	801da8a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801dbb4:	4605      	mov	r5, r0
 801dbb6:	e779      	b.n	801daac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801dbb8:	4603      	mov	r3, r0
 801dbba:	4605      	mov	r5, r0
 801dbbc:	e782      	b.n	801dac4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801dbbe:	4603      	mov	r3, r0
 801dbc0:	e780      	b.n	801dac4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801dbc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dbc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dbc6:	b093      	sub	sp, #76	@ 0x4c
 801dbc8:	461d      	mov	r5, r3
 801dbca:	9210      	str	r2, [sp, #64]	@ 0x40
 801dbcc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801dbce:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801dbd2:	920b      	str	r2, [sp, #44]	@ 0x2c
 801dbd4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801dbd8:	910a      	str	r1, [sp, #40]	@ 0x28
 801dbda:	6859      	ldr	r1, [r3, #4]
 801dbdc:	681b      	ldr	r3, [r3, #0]
 801dbde:	9011      	str	r0, [sp, #68]	@ 0x44
 801dbe0:	fb01 2707 	mla	r7, r1, r7, r2
 801dbe4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801dbe8:	9307      	str	r3, [sp, #28]
 801dbea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dbec:	681b      	ldr	r3, [r3, #0]
 801dbee:	9309      	str	r3, [sp, #36]	@ 0x24
 801dbf0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dbf2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801dbf6:	43db      	mvns	r3, r3
 801dbf8:	b2db      	uxtb	r3, r3
 801dbfa:	9308      	str	r3, [sp, #32]
 801dbfc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dbfe:	2b00      	cmp	r3, #0
 801dc00:	dc03      	bgt.n	801dc0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dc02:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801dc04:	2b00      	cmp	r3, #0
 801dc06:	f340 8203 	ble.w	801e010 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801dc0a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dc0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc10:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dc14:	1e48      	subs	r0, r1, #1
 801dc16:	f102 3cff 	add.w	ip, r2, #4294967295
 801dc1a:	2d00      	cmp	r5, #0
 801dc1c:	f340 80da 	ble.w	801ddd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801dc20:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dc24:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dc28:	d406      	bmi.n	801dc38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc2a:	4586      	cmp	lr, r0
 801dc2c:	da04      	bge.n	801dc38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc2e:	2b00      	cmp	r3, #0
 801dc30:	db02      	blt.n	801dc38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc32:	4563      	cmp	r3, ip
 801dc34:	f2c0 80cf 	blt.w	801ddd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801dc38:	f11e 0e01 	adds.w	lr, lr, #1
 801dc3c:	f100 80c1 	bmi.w	801ddc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc40:	4571      	cmp	r1, lr
 801dc42:	f2c0 80be 	blt.w	801ddc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc46:	3301      	adds	r3, #1
 801dc48:	f100 80bb 	bmi.w	801ddc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc4c:	429a      	cmp	r2, r3
 801dc4e:	f2c0 80b8 	blt.w	801ddc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc52:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801dc56:	46a9      	mov	r9, r5
 801dc58:	f1b9 0f00 	cmp.w	r9, #0
 801dc5c:	f340 80d8 	ble.w	801de10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801dc60:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dc62:	1421      	asrs	r1, r4, #16
 801dc64:	ea4f 4026 	mov.w	r0, r6, asr #16
 801dc68:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dc6c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801dc70:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801dc74:	f100 8111 	bmi.w	801de9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dc78:	f10e 3aff 	add.w	sl, lr, #4294967295
 801dc7c:	4551      	cmp	r1, sl
 801dc7e:	f280 810c 	bge.w	801de9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dc82:	2800      	cmp	r0, #0
 801dc84:	f2c0 8109 	blt.w	801de9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dc88:	f103 3aff 	add.w	sl, r3, #4294967295
 801dc8c:	4550      	cmp	r0, sl
 801dc8e:	f280 8104 	bge.w	801de9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dc92:	fa0f f38e 	sxth.w	r3, lr
 801dc96:	fb00 1103 	mla	r1, r0, r3, r1
 801dc9a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801dc9c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801dca0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801dca4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801dca8:	f1bc 0f00 	cmp.w	ip, #0
 801dcac:	d007      	beq.n	801dcbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801dcae:	005b      	lsls	r3, r3, #1
 801dcb0:	eb0a 0003 	add.w	r0, sl, r3
 801dcb4:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801dcb8:	930c      	str	r3, [sp, #48]	@ 0x30
 801dcba:	8843      	ldrh	r3, [r0, #2]
 801dcbc:	930d      	str	r3, [sp, #52]	@ 0x34
 801dcbe:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801dcc2:	fb12 f30c 	smulbb	r3, r2, ip
 801dcc6:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801dcca:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801dcce:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dcd2:	10db      	asrs	r3, r3, #3
 801dcd4:	ea40 000e 	orr.w	r0, r0, lr
 801dcd8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dcdc:	f1cc 0e10 	rsb	lr, ip, #16
 801dce0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801dce4:	ebae 0e02 	sub.w	lr, lr, r2
 801dce8:	ea4a 0101 	orr.w	r1, sl, r1
 801dcec:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dcf0:	4351      	muls	r1, r2
 801dcf2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801dcf4:	9f08      	ldr	r7, [sp, #32]
 801dcf6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dcfa:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dcfe:	0410      	lsls	r0, r2, #16
 801dd00:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dd04:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dd08:	4310      	orrs	r0, r2
 801dd0a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dd0c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801dd0e:	0412      	lsls	r2, r2, #16
 801dd10:	fb03 e000 	mla	r0, r3, r0, lr
 801dd14:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dd18:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801dd1c:	ea42 020e 	orr.w	r2, r2, lr
 801dd20:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dd24:	fb03 0302 	mla	r3, r3, r2, r0
 801dd28:	0d5a      	lsrs	r2, r3, #21
 801dd2a:	095b      	lsrs	r3, r3, #5
 801dd2c:	f8b8 0000 	ldrh.w	r0, [r8]
 801dd30:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dd34:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801dd38:	4313      	orrs	r3, r2
 801dd3a:	b29b      	uxth	r3, r3
 801dd3c:	1201      	asrs	r1, r0, #8
 801dd3e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801dd42:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801dd46:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801dd4a:	fb11 f107 	smulbb	r1, r1, r7
 801dd4e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801dd52:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801dd56:	00c0      	lsls	r0, r0, #3
 801dd58:	fb0c 1c02 	mla	ip, ip, r2, r1
 801dd5c:	b2c0      	uxtb	r0, r0
 801dd5e:	10d9      	asrs	r1, r3, #3
 801dd60:	00db      	lsls	r3, r3, #3
 801dd62:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801dd66:	b2db      	uxtb	r3, r3
 801dd68:	fb10 f007 	smulbb	r0, r0, r7
 801dd6c:	fa1f fc8c 	uxth.w	ip, ip
 801dd70:	fb03 0302 	mla	r3, r3, r2, r0
 801dd74:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801dd78:	fb1e fe07 	smulbb	lr, lr, r7
 801dd7c:	fb01 e102 	mla	r1, r1, r2, lr
 801dd80:	b29a      	uxth	r2, r3
 801dd82:	f10c 0301 	add.w	r3, ip, #1
 801dd86:	b289      	uxth	r1, r1
 801dd88:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801dd8c:	1c53      	adds	r3, r2, #1
 801dd8e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dd92:	1c4a      	adds	r2, r1, #1
 801dd94:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801dd98:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801dd9c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dda0:	0949      	lsrs	r1, r1, #5
 801dda2:	ea43 030c 	orr.w	r3, r3, ip
 801dda6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ddaa:	430b      	orrs	r3, r1
 801ddac:	f8a8 3000 	strh.w	r3, [r8]
 801ddb0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ddb2:	441c      	add	r4, r3
 801ddb4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ddb6:	f108 0802 	add.w	r8, r8, #2
 801ddba:	441e      	add	r6, r3
 801ddbc:	f109 39ff 	add.w	r9, r9, #4294967295
 801ddc0:	e74a      	b.n	801dc58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ddc2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ddc4:	441c      	add	r4, r3
 801ddc6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ddc8:	441e      	add	r6, r3
 801ddca:	9b07      	ldr	r3, [sp, #28]
 801ddcc:	3302      	adds	r3, #2
 801ddce:	3d01      	subs	r5, #1
 801ddd0:	9307      	str	r3, [sp, #28]
 801ddd2:	e722      	b.n	801dc1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ddd4:	d022      	beq.n	801de1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801ddd6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801ddd8:	1e6b      	subs	r3, r5, #1
 801ddda:	fb00 4003 	mla	r0, r0, r3, r4
 801ddde:	1400      	asrs	r0, r0, #16
 801dde0:	f53f af37 	bmi.w	801dc52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dde4:	3901      	subs	r1, #1
 801dde6:	4288      	cmp	r0, r1
 801dde8:	f6bf af33 	bge.w	801dc52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ddec:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801ddee:	fb01 6303 	mla	r3, r1, r3, r6
 801ddf2:	141b      	asrs	r3, r3, #16
 801ddf4:	f53f af2d 	bmi.w	801dc52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ddf8:	3a01      	subs	r2, #1
 801ddfa:	4293      	cmp	r3, r2
 801ddfc:	f6bf af29 	bge.w	801dc52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801de00:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801de04:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801de08:	46a8      	mov	r8, r5
 801de0a:	f1b8 0f00 	cmp.w	r8, #0
 801de0e:	dc5e      	bgt.n	801dece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801de10:	9b07      	ldr	r3, [sp, #28]
 801de12:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801de16:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801de1a:	9307      	str	r3, [sp, #28]
 801de1c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801de1e:	2b00      	cmp	r3, #0
 801de20:	f340 80f6 	ble.w	801e010 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801de24:	ee30 0a04 	vadd.f32	s0, s0, s8
 801de28:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801de2c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801de30:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801de32:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801de36:	ee31 1a05 	vadd.f32	s2, s2, s10
 801de3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801de3e:	eef0 6a62 	vmov.f32	s13, s5
 801de42:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de4e:	ee16 4a90 	vmov	r4, s13
 801de52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de56:	eef0 6a43 	vmov.f32	s13, s6
 801de5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de5e:	ee12 2a90 	vmov	r2, s5
 801de62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de66:	fb92 f3f3 	sdiv	r3, r2, r3
 801de6a:	ee13 2a10 	vmov	r2, s6
 801de6e:	931f      	str	r3, [sp, #124]	@ 0x7c
 801de70:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801de72:	fb92 f3f3 	sdiv	r3, r2, r3
 801de76:	9320      	str	r3, [sp, #128]	@ 0x80
 801de78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801de7a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801de7c:	3b01      	subs	r3, #1
 801de7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de82:	930a      	str	r3, [sp, #40]	@ 0x28
 801de84:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801de86:	ee16 6a90 	vmov	r6, s13
 801de8a:	bf14      	ite	ne
 801de8c:	461d      	movne	r5, r3
 801de8e:	4615      	moveq	r5, r2
 801de90:	eeb0 3a67 	vmov.f32	s6, s15
 801de94:	eef0 2a47 	vmov.f32	s5, s14
 801de98:	e6b0      	b.n	801dbfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801de9a:	f111 0a01 	adds.w	sl, r1, #1
 801de9e:	d487      	bmi.n	801ddb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dea0:	45d6      	cmp	lr, sl
 801dea2:	db85      	blt.n	801ddb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dea4:	f110 0a01 	adds.w	sl, r0, #1
 801dea8:	d482      	bmi.n	801ddb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801deaa:	4553      	cmp	r3, sl
 801deac:	db80      	blt.n	801ddb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801deae:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801deb0:	9101      	str	r1, [sp, #4]
 801deb2:	b21b      	sxth	r3, r3
 801deb4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801deb8:	9300      	str	r3, [sp, #0]
 801deba:	e9cd c704 	strd	ip, r7, [sp, #16]
 801debe:	fa0f f38e 	sxth.w	r3, lr
 801dec2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801dec4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801dec6:	4641      	mov	r1, r8
 801dec8:	f7ff fdb4 	bl	801da34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801decc:	e770      	b.n	801ddb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dece:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ded0:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801ded2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ded6:	1430      	asrs	r0, r6, #16
 801ded8:	1423      	asrs	r3, r4, #16
 801deda:	fb01 3000 	mla	r0, r1, r0, r3
 801dede:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dee0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801dee4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801dee8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801deec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801def0:	8858      	ldrh	r0, [r3, #2]
 801def2:	f1be 0f00 	cmp.w	lr, #0
 801def6:	d00b      	beq.n	801df10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801def8:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801defc:	3901      	subs	r1, #1
 801defe:	0049      	lsls	r1, r1, #1
 801df00:	3102      	adds	r1, #2
 801df02:	eb03 0b01 	add.w	fp, r3, r1
 801df06:	5a5b      	ldrh	r3, [r3, r1]
 801df08:	930e      	str	r3, [sp, #56]	@ 0x38
 801df0a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801df0e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801df10:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801df14:	fb12 f30e 	smulbb	r3, r2, lr
 801df18:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801df1c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801df20:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801df24:	10db      	asrs	r3, r3, #3
 801df26:	ea41 010c 	orr.w	r1, r1, ip
 801df2a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801df2e:	f1ce 0c10 	rsb	ip, lr, #16
 801df32:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801df36:	ebac 0c02 	sub.w	ip, ip, r2
 801df3a:	ea4b 0000 	orr.w	r0, fp, r0
 801df3e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801df42:	4350      	muls	r0, r2
 801df44:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801df46:	9f08      	ldr	r7, [sp, #32]
 801df48:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801df4c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801df50:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801df54:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801df58:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801df5a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801df5c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801df60:	0412      	lsls	r2, r2, #16
 801df62:	ea4b 0101 	orr.w	r1, fp, r1
 801df66:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801df6a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801df6e:	fb03 c101 	mla	r1, r3, r1, ip
 801df72:	4302      	orrs	r2, r0
 801df74:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801df78:	fb03 1202 	mla	r2, r3, r2, r1
 801df7c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801df80:	0952      	lsrs	r2, r2, #5
 801df82:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801df86:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801df8a:	f8b9 2000 	ldrh.w	r2, [r9]
 801df8e:	ea4b 0303 	orr.w	r3, fp, r3
 801df92:	b29b      	uxth	r3, r3
 801df94:	1211      	asrs	r1, r2, #8
 801df96:	1218      	asrs	r0, r3, #8
 801df98:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801df9c:	fb11 f107 	smulbb	r1, r1, r7
 801dfa0:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801dfa4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801dfa8:	00d2      	lsls	r2, r2, #3
 801dfaa:	fb00 100a 	mla	r0, r0, sl, r1
 801dfae:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801dfb2:	10d9      	asrs	r1, r3, #3
 801dfb4:	b2d2      	uxtb	r2, r2
 801dfb6:	00db      	lsls	r3, r3, #3
 801dfb8:	fb1c fc07 	smulbb	ip, ip, r7
 801dfbc:	fb12 f207 	smulbb	r2, r2, r7
 801dfc0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801dfc4:	b2db      	uxtb	r3, r3
 801dfc6:	b280      	uxth	r0, r0
 801dfc8:	fb01 c10a 	mla	r1, r1, sl, ip
 801dfcc:	fb03 230a 	mla	r3, r3, sl, r2
 801dfd0:	b29b      	uxth	r3, r3
 801dfd2:	b289      	uxth	r1, r1
 801dfd4:	1c42      	adds	r2, r0, #1
 801dfd6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dfda:	f101 0c01 	add.w	ip, r1, #1
 801dfde:	1c5a      	adds	r2, r3, #1
 801dfe0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801dfe4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801dfe8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801dfea:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801dfee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dff2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801dff6:	4310      	orrs	r0, r2
 801dff8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801dffc:	441c      	add	r4, r3
 801dffe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e000:	ea40 000c 	orr.w	r0, r0, ip
 801e004:	f829 0b02 	strh.w	r0, [r9], #2
 801e008:	441e      	add	r6, r3
 801e00a:	f108 38ff 	add.w	r8, r8, #4294967295
 801e00e:	e6fc      	b.n	801de0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801e010:	b013      	add	sp, #76	@ 0x4c
 801e012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e016 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801e016:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e01a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801e01e:	fb0e 4703 	mla	r7, lr, r3, r4
 801e022:	f1be 0f00 	cmp.w	lr, #0
 801e026:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801e02a:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801e02e:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801e032:	8808      	ldrh	r0, [r1, #0]
 801e034:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801e038:	db60      	blt.n	801e0fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e03a:	45f1      	cmp	r9, lr
 801e03c:	dd5e      	ble.n	801e0fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e03e:	2c00      	cmp	r4, #0
 801e040:	db5a      	blt.n	801e0f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e042:	42a3      	cmp	r3, r4
 801e044:	dd58      	ble.n	801e0f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e046:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801e04a:	1c62      	adds	r2, r4, #1
 801e04c:	d459      	bmi.n	801e102 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e04e:	4293      	cmp	r3, r2
 801e050:	dd57      	ble.n	801e102 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e052:	2d00      	cmp	r5, #0
 801e054:	d055      	beq.n	801e102 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e056:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801e05a:	f11e 0e01 	adds.w	lr, lr, #1
 801e05e:	d454      	bmi.n	801e10a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e060:	45f1      	cmp	r9, lr
 801e062:	dd52      	ble.n	801e10a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e064:	2e00      	cmp	r6, #0
 801e066:	d050      	beq.n	801e10a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e068:	2c00      	cmp	r4, #0
 801e06a:	db4c      	blt.n	801e106 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e06c:	42a3      	cmp	r3, r4
 801e06e:	dd4a      	ble.n	801e106 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e070:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801e074:	3401      	adds	r4, #1
 801e076:	d405      	bmi.n	801e084 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e078:	42a3      	cmp	r3, r4
 801e07a:	dd03      	ble.n	801e084 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e07c:	b115      	cbz	r5, 801e084 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e07e:	3301      	adds	r3, #1
 801e080:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801e084:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e088:	fb15 f406 	smulbb	r4, r5, r6
 801e08c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e090:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e094:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e098:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e09c:	ea43 0c0c 	orr.w	ip, r3, ip
 801e0a0:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e0a4:	f1c6 0310 	rsb	r3, r6, #16
 801e0a8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e0ac:	1b5b      	subs	r3, r3, r5
 801e0ae:	ea4e 0707 	orr.w	r7, lr, r7
 801e0b2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e0b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e0ba:	437d      	muls	r5, r7
 801e0bc:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e0c0:	0403      	lsls	r3, r0, #16
 801e0c2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e0c6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e0ca:	4318      	orrs	r0, r3
 801e0cc:	0413      	lsls	r3, r2, #16
 801e0ce:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e0d2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e0d6:	4313      	orrs	r3, r2
 801e0d8:	fb04 c000 	mla	r0, r4, r0, ip
 801e0dc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e0e0:	fb06 0003 	mla	r0, r6, r3, r0
 801e0e4:	0d43      	lsrs	r3, r0, #21
 801e0e6:	0940      	lsrs	r0, r0, #5
 801e0e8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e0ec:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e0f0:	4318      	orrs	r0, r3
 801e0f2:	8008      	strh	r0, [r1, #0]
 801e0f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e0f8:	4684      	mov	ip, r0
 801e0fa:	e7a6      	b.n	801e04a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801e0fc:	4607      	mov	r7, r0
 801e0fe:	4684      	mov	ip, r0
 801e100:	e7ab      	b.n	801e05a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e102:	4607      	mov	r7, r0
 801e104:	e7a9      	b.n	801e05a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e106:	4602      	mov	r2, r0
 801e108:	e7b4      	b.n	801e074 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801e10a:	4602      	mov	r2, r0
 801e10c:	e7ba      	b.n	801e084 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801e10e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e10e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e112:	b08f      	sub	sp, #60	@ 0x3c
 801e114:	461d      	mov	r5, r3
 801e116:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e118:	920c      	str	r2, [sp, #48]	@ 0x30
 801e11a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801e11e:	9107      	str	r1, [sp, #28]
 801e120:	6859      	ldr	r1, [r3, #4]
 801e122:	681b      	ldr	r3, [r3, #0]
 801e124:	900d      	str	r0, [sp, #52]	@ 0x34
 801e126:	fb01 2707 	mla	r7, r1, r7, r2
 801e12a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801e12e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e130:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801e134:	f8d3 8000 	ldr.w	r8, [r3]
 801e138:	9b07      	ldr	r3, [sp, #28]
 801e13a:	2b00      	cmp	r3, #0
 801e13c:	dc03      	bgt.n	801e146 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e13e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e140:	2b00      	cmp	r3, #0
 801e142:	f340 8181 	ble.w	801e448 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e146:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e148:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e14c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e150:	1e48      	subs	r0, r1, #1
 801e152:	f102 3cff 	add.w	ip, r2, #4294967295
 801e156:	2d00      	cmp	r5, #0
 801e158:	f340 809b 	ble.w	801e292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801e15c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e160:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e164:	d406      	bmi.n	801e174 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e166:	4586      	cmp	lr, r0
 801e168:	da04      	bge.n	801e174 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e16a:	2b00      	cmp	r3, #0
 801e16c:	db02      	blt.n	801e174 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e16e:	4563      	cmp	r3, ip
 801e170:	f2c0 8090 	blt.w	801e294 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e174:	f11e 0e01 	adds.w	lr, lr, #1
 801e178:	f100 8084 	bmi.w	801e284 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e17c:	4571      	cmp	r1, lr
 801e17e:	f2c0 8081 	blt.w	801e284 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e182:	3301      	adds	r3, #1
 801e184:	d47e      	bmi.n	801e284 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e186:	429a      	cmp	r2, r3
 801e188:	db7c      	blt.n	801e284 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e18a:	46aa      	mov	sl, r5
 801e18c:	46b9      	mov	r9, r7
 801e18e:	f1ba 0f00 	cmp.w	sl, #0
 801e192:	f340 8099 	ble.w	801e2c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801e196:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e198:	1421      	asrs	r1, r4, #16
 801e19a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e19e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e1a2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e1a6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e1aa:	f100 80d0 	bmi.w	801e34e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e1ae:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e1b2:	4559      	cmp	r1, fp
 801e1b4:	f280 80cb 	bge.w	801e34e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e1b8:	2800      	cmp	r0, #0
 801e1ba:	f2c0 80c8 	blt.w	801e34e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e1be:	f103 3bff 	add.w	fp, r3, #4294967295
 801e1c2:	4558      	cmp	r0, fp
 801e1c4:	f280 80c3 	bge.w	801e34e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e1c8:	fa0f fe8e 	sxth.w	lr, lr
 801e1cc:	fb00 110e 	mla	r1, r0, lr, r1
 801e1d0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e1d4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801e1d8:	8841      	ldrh	r1, [r0, #2]
 801e1da:	f1bc 0f00 	cmp.w	ip, #0
 801e1de:	d00b      	beq.n	801e1f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801e1e0:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801e1e4:	3b01      	subs	r3, #1
 801e1e6:	005b      	lsls	r3, r3, #1
 801e1e8:	3302      	adds	r3, #2
 801e1ea:	eb00 0e03 	add.w	lr, r0, r3
 801e1ee:	5ac3      	ldrh	r3, [r0, r3]
 801e1f0:	9308      	str	r3, [sp, #32]
 801e1f2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801e1f6:	9309      	str	r3, [sp, #36]	@ 0x24
 801e1f8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801e1fc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e200:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e204:	ea40 000b 	orr.w	r0, r0, fp
 801e208:	fb12 f30c 	smulbb	r3, r2, ip
 801e20c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e210:	10db      	asrs	r3, r3, #3
 801e212:	f1cc 0e10 	rsb	lr, ip, #16
 801e216:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e21a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e21e:	ebae 0e02 	sub.w	lr, lr, r2
 801e222:	ea4b 0101 	orr.w	r1, fp, r1
 801e226:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e22a:	4351      	muls	r1, r2
 801e22c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e22e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e232:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e236:	0410      	lsls	r0, r2, #16
 801e238:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e23c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e240:	4310      	orrs	r0, r2
 801e242:	9a08      	ldr	r2, [sp, #32]
 801e244:	9908      	ldr	r1, [sp, #32]
 801e246:	0412      	lsls	r2, r2, #16
 801e248:	fb03 e000 	mla	r0, r3, r0, lr
 801e24c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e250:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e254:	ea42 020e 	orr.w	r2, r2, lr
 801e258:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e25c:	fb03 0302 	mla	r3, r3, r2, r0
 801e260:	0d5a      	lsrs	r2, r3, #21
 801e262:	095b      	lsrs	r3, r3, #5
 801e264:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e268:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e26c:	4313      	orrs	r3, r2
 801e26e:	f8a9 3000 	strh.w	r3, [r9]
 801e272:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e274:	441c      	add	r4, r3
 801e276:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e278:	f109 0902 	add.w	r9, r9, #2
 801e27c:	441e      	add	r6, r3
 801e27e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e282:	e784      	b.n	801e18e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e284:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e286:	441c      	add	r4, r3
 801e288:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e28a:	3d01      	subs	r5, #1
 801e28c:	441e      	add	r6, r3
 801e28e:	3702      	adds	r7, #2
 801e290:	e761      	b.n	801e156 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e292:	d01d      	beq.n	801e2d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e294:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801e296:	1e6b      	subs	r3, r5, #1
 801e298:	fb00 4003 	mla	r0, r0, r3, r4
 801e29c:	1400      	asrs	r0, r0, #16
 801e29e:	f53f af74 	bmi.w	801e18a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e2a2:	3901      	subs	r1, #1
 801e2a4:	4288      	cmp	r0, r1
 801e2a6:	f6bf af70 	bge.w	801e18a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e2aa:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801e2ac:	fb01 6303 	mla	r3, r1, r3, r6
 801e2b0:	141b      	asrs	r3, r3, #16
 801e2b2:	f53f af6a 	bmi.w	801e18a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e2b6:	3a01      	subs	r2, #1
 801e2b8:	4293      	cmp	r3, r2
 801e2ba:	f6bf af66 	bge.w	801e18a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e2be:	46a9      	mov	r9, r5
 801e2c0:	46ba      	mov	sl, r7
 801e2c2:	f1b9 0f00 	cmp.w	r9, #0
 801e2c6:	dc5a      	bgt.n	801e37e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801e2c8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e2cc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e2d0:	9b07      	ldr	r3, [sp, #28]
 801e2d2:	2b00      	cmp	r3, #0
 801e2d4:	f340 80b8 	ble.w	801e448 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e2d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e2dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e2e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e2e4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e2e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e2ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e2ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e2f2:	eef0 6a62 	vmov.f32	s13, s5
 801e2f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e2fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e2fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e302:	ee16 4a90 	vmov	r4, s13
 801e306:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e30a:	eef0 6a43 	vmov.f32	s13, s6
 801e30e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e312:	ee12 2a90 	vmov	r2, s5
 801e316:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e31a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e31e:	ee13 2a10 	vmov	r2, s6
 801e322:	931b      	str	r3, [sp, #108]	@ 0x6c
 801e324:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e326:	fb92 f3f3 	sdiv	r3, r2, r3
 801e32a:	931c      	str	r3, [sp, #112]	@ 0x70
 801e32c:	9b07      	ldr	r3, [sp, #28]
 801e32e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e330:	3b01      	subs	r3, #1
 801e332:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e336:	9307      	str	r3, [sp, #28]
 801e338:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e33a:	ee16 6a90 	vmov	r6, s13
 801e33e:	bf14      	ite	ne
 801e340:	461d      	movne	r5, r3
 801e342:	4615      	moveq	r5, r2
 801e344:	eeb0 3a67 	vmov.f32	s6, s15
 801e348:	eef0 2a47 	vmov.f32	s5, s14
 801e34c:	e6f4      	b.n	801e138 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e34e:	f111 0b01 	adds.w	fp, r1, #1
 801e352:	d48e      	bmi.n	801e272 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e354:	45de      	cmp	lr, fp
 801e356:	db8c      	blt.n	801e272 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e358:	f110 0b01 	adds.w	fp, r0, #1
 801e35c:	d489      	bmi.n	801e272 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e35e:	455b      	cmp	r3, fp
 801e360:	db87      	blt.n	801e272 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e362:	b21b      	sxth	r3, r3
 801e364:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e368:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e36c:	9300      	str	r3, [sp, #0]
 801e36e:	4642      	mov	r2, r8
 801e370:	fa0f f38e 	sxth.w	r3, lr
 801e374:	4649      	mov	r1, r9
 801e376:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e378:	f7ff fe4d 	bl	801e016 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e37c:	e779      	b.n	801e272 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e37e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e380:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e384:	1420      	asrs	r0, r4, #16
 801e386:	1431      	asrs	r1, r6, #16
 801e388:	fb03 0101 	mla	r1, r3, r1, r0
 801e38c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e390:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e394:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e398:	8841      	ldrh	r1, [r0, #2]
 801e39a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e39e:	f1be 0f00 	cmp.w	lr, #0
 801e3a2:	d00b      	beq.n	801e3bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e3a4:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e3a8:	3b01      	subs	r3, #1
 801e3aa:	005b      	lsls	r3, r3, #1
 801e3ac:	3302      	adds	r3, #2
 801e3ae:	eb00 0b03 	add.w	fp, r0, r3
 801e3b2:	5ac3      	ldrh	r3, [r0, r3]
 801e3b4:	930a      	str	r3, [sp, #40]	@ 0x28
 801e3b6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e3ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e3bc:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e3c0:	fb12 f30e 	smulbb	r3, r2, lr
 801e3c4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e3c8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e3cc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e3d0:	10db      	asrs	r3, r3, #3
 801e3d2:	ea40 000c 	orr.w	r0, r0, ip
 801e3d6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e3da:	f1ce 0c10 	rsb	ip, lr, #16
 801e3de:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e3e2:	ebac 0c02 	sub.w	ip, ip, r2
 801e3e6:	ea4b 0101 	orr.w	r1, fp, r1
 801e3ea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e3ee:	4351      	muls	r1, r2
 801e3f0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e3f2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e3f6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e3fa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e3fe:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801e402:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e404:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e406:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e40a:	0412      	lsls	r2, r2, #16
 801e40c:	ea4b 0000 	orr.w	r0, fp, r0
 801e410:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e414:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801e418:	fb03 c000 	mla	r0, r3, r0, ip
 801e41c:	ea42 0b0b 	orr.w	fp, r2, fp
 801e420:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e424:	fb03 000b 	mla	r0, r3, fp, r0
 801e428:	0d43      	lsrs	r3, r0, #21
 801e42a:	0940      	lsrs	r0, r0, #5
 801e42c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e430:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e434:	4318      	orrs	r0, r3
 801e436:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e438:	f82a 0b02 	strh.w	r0, [sl], #2
 801e43c:	441c      	add	r4, r3
 801e43e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e440:	f109 39ff 	add.w	r9, r9, #4294967295
 801e444:	441e      	add	r6, r3
 801e446:	e73c      	b.n	801e2c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e448:	b00f      	add	sp, #60	@ 0x3c
 801e44a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e44e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e44e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e452:	b085      	sub	sp, #20
 801e454:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801e458:	9102      	str	r1, [sp, #8]
 801e45a:	2c00      	cmp	r4, #0
 801e45c:	fb04 7103 	mla	r1, r4, r3, r7
 801e460:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801e464:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801e468:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801e46c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e470:	f2c0 811b 	blt.w	801e6aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e474:	45a6      	cmp	lr, r4
 801e476:	f340 8118 	ble.w	801e6aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e47a:	2f00      	cmp	r7, #0
 801e47c:	f2c0 8113 	blt.w	801e6a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e480:	42bb      	cmp	r3, r7
 801e482:	f340 8110 	ble.w	801e6a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e486:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e48a:	1c7a      	adds	r2, r7, #1
 801e48c:	f100 8110 	bmi.w	801e6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e490:	4293      	cmp	r3, r2
 801e492:	f340 810d 	ble.w	801e6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e496:	2e00      	cmp	r6, #0
 801e498:	f000 810c 	beq.w	801e6b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e49c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e4a0:	3401      	adds	r4, #1
 801e4a2:	f100 810b 	bmi.w	801e6bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e4a6:	45a6      	cmp	lr, r4
 801e4a8:	f340 8108 	ble.w	801e6bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e4ac:	2800      	cmp	r0, #0
 801e4ae:	f000 8108 	beq.w	801e6c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e4b2:	2f00      	cmp	r7, #0
 801e4b4:	f2c0 8100 	blt.w	801e6b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e4b8:	42bb      	cmp	r3, r7
 801e4ba:	f340 80fd 	ble.w	801e6b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e4be:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e4c2:	3701      	adds	r7, #1
 801e4c4:	f100 8100 	bmi.w	801e6c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e4c8:	42bb      	cmp	r3, r7
 801e4ca:	f340 80fd 	ble.w	801e6c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e4ce:	2e00      	cmp	r6, #0
 801e4d0:	f000 80fc 	beq.w	801e6cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e4d4:	3301      	adds	r3, #1
 801e4d6:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e4da:	b2b6      	uxth	r6, r6
 801e4dc:	b280      	uxth	r0, r0
 801e4de:	fb00 fe06 	mul.w	lr, r0, r6
 801e4e2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e4e6:	0136      	lsls	r6, r6, #4
 801e4e8:	eba6 070e 	sub.w	r7, r6, lr
 801e4ec:	b280      	uxth	r0, r0
 801e4ee:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e4f2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e4f6:	b2bf      	uxth	r7, r7
 801e4f8:	1a1b      	subs	r3, r3, r0
 801e4fa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e4fe:	b29b      	uxth	r3, r3
 801e500:	fb0a f607 	mul.w	r6, sl, r7
 801e504:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e508:	fb0b 6603 	mla	r6, fp, r3, r6
 801e50c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e510:	fb00 6609 	mla	r6, r0, r9, r6
 801e514:	fb0e 6608 	mla	r6, lr, r8, r6
 801e518:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e51c:	9600      	str	r6, [sp, #0]
 801e51e:	2e00      	cmp	r6, #0
 801e520:	f000 80be 	beq.w	801e6a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e524:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e528:	fb0b fc0c 	mul.w	ip, fp, ip
 801e52c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e530:	fb0b f505 	mul.w	r5, fp, r5
 801e534:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e538:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e53c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e540:	44dc      	add	ip, fp
 801e542:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e546:	9501      	str	r5, [sp, #4]
 801e548:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e54c:	9503      	str	r5, [sp, #12]
 801e54e:	9d01      	ldr	r5, [sp, #4]
 801e550:	9e02      	ldr	r6, [sp, #8]
 801e552:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e556:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e55a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e55e:	fb0a fc0c 	mul.w	ip, sl, ip
 801e562:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e566:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e56a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e56e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e572:	4465      	add	r5, ip
 801e574:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e578:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e57c:	fb09 fc0c 	mul.w	ip, r9, ip
 801e580:	fb09 f904 	mul.w	r9, r9, r4
 801e584:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e588:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e58c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e590:	fb08 f404 	mul.w	r4, r8, r4
 801e594:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e598:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e59c:	fb08 f802 	mul.w	r8, r8, r2
 801e5a0:	fb0a fa01 	mul.w	sl, sl, r1
 801e5a4:	0a22      	lsrs	r2, r4, #8
 801e5a6:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e5aa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e5ae:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e5b2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e5b6:	4414      	add	r4, r2
 801e5b8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e5bc:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e5c0:	0a2d      	lsrs	r5, r5, #8
 801e5c2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e5c6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e5ca:	9a03      	ldr	r2, [sp, #12]
 801e5cc:	8836      	ldrh	r6, [r6, #0]
 801e5ce:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e5d2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e5d6:	437d      	muls	r5, r7
 801e5d8:	4461      	add	r1, ip
 801e5da:	0a24      	lsrs	r4, r4, #8
 801e5dc:	fb02 5503 	mla	r5, r2, r3, r5
 801e5e0:	0a09      	lsrs	r1, r1, #8
 801e5e2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e5e6:	fb04 540e 	mla	r4, r4, lr, r5
 801e5ea:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e5ee:	fb01 4100 	mla	r1, r1, r0, r4
 801e5f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5f6:	0a09      	lsrs	r1, r1, #8
 801e5f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e5fc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e600:	fb07 f70a 	mul.w	r7, r7, sl
 801e604:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e608:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e60c:	fb03 7101 	mla	r1, r3, r1, r7
 801e610:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e614:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e618:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e61c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e620:	fb00 e101 	mla	r1, r0, r1, lr
 801e624:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801e628:	9a00      	ldr	r2, [sp, #0]
 801e62a:	b287      	uxth	r7, r0
 801e62c:	437a      	muls	r2, r7
 801e62e:	0a09      	lsrs	r1, r1, #8
 801e630:	1c53      	adds	r3, r2, #1
 801e632:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e636:	4321      	orrs	r1, r4
 801e638:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e63c:	1235      	asrs	r5, r6, #8
 801e63e:	0c0a      	lsrs	r2, r1, #16
 801e640:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e644:	b2db      	uxtb	r3, r3
 801e646:	fb12 f207 	smulbb	r2, r2, r7
 801e64a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e64e:	fb05 2503 	mla	r5, r5, r3, r2
 801e652:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e656:	10f2      	asrs	r2, r6, #3
 801e658:	b2c8      	uxtb	r0, r1
 801e65a:	00f6      	lsls	r6, r6, #3
 801e65c:	fb14 f407 	smulbb	r4, r4, r7
 801e660:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e664:	b2f6      	uxtb	r6, r6
 801e666:	fb10 f007 	smulbb	r0, r0, r7
 801e66a:	fb02 4203 	mla	r2, r2, r3, r4
 801e66e:	b2ad      	uxth	r5, r5
 801e670:	fb06 0303 	mla	r3, r6, r3, r0
 801e674:	b299      	uxth	r1, r3
 801e676:	b294      	uxth	r4, r2
 801e678:	1c6b      	adds	r3, r5, #1
 801e67a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e67e:	1c62      	adds	r2, r4, #1
 801e680:	1c4b      	adds	r3, r1, #1
 801e682:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e686:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e68a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e68e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e692:	0952      	lsrs	r2, r2, #5
 801e694:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e698:	432b      	orrs	r3, r5
 801e69a:	4313      	orrs	r3, r2
 801e69c:	9a02      	ldr	r2, [sp, #8]
 801e69e:	8013      	strh	r3, [r2, #0]
 801e6a0:	b005      	add	sp, #20
 801e6a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6a6:	2500      	movs	r5, #0
 801e6a8:	e6ef      	b.n	801e48a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e6aa:	2100      	movs	r1, #0
 801e6ac:	460d      	mov	r5, r1
 801e6ae:	e6f7      	b.n	801e4a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e6b0:	2100      	movs	r1, #0
 801e6b2:	e6f5      	b.n	801e4a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e6b4:	4631      	mov	r1, r6
 801e6b6:	e6f3      	b.n	801e4a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e6b8:	2400      	movs	r4, #0
 801e6ba:	e702      	b.n	801e4c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e6bc:	2200      	movs	r2, #0
 801e6be:	4614      	mov	r4, r2
 801e6c0:	e70b      	b.n	801e4da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e6c2:	4602      	mov	r2, r0
 801e6c4:	4604      	mov	r4, r0
 801e6c6:	e708      	b.n	801e4da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e6c8:	2200      	movs	r2, #0
 801e6ca:	e706      	b.n	801e4da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e6cc:	4632      	mov	r2, r6
 801e6ce:	e704      	b.n	801e4da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e6d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e6d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6d4:	b09d      	sub	sp, #116	@ 0x74
 801e6d6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801e6da:	9219      	str	r2, [sp, #100]	@ 0x64
 801e6dc:	9307      	str	r3, [sp, #28]
 801e6de:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801e6e0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801e6e4:	931a      	str	r3, [sp, #104]	@ 0x68
 801e6e6:	9117      	str	r1, [sp, #92]	@ 0x5c
 801e6e8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801e6ec:	901b      	str	r0, [sp, #108]	@ 0x6c
 801e6ee:	6850      	ldr	r0, [r2, #4]
 801e6f0:	6812      	ldr	r2, [r2, #0]
 801e6f2:	fb00 1303 	mla	r3, r0, r3, r1
 801e6f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e6fa:	930a      	str	r3, [sp, #40]	@ 0x28
 801e6fc:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e6fe:	681b      	ldr	r3, [r3, #0]
 801e700:	9310      	str	r3, [sp, #64]	@ 0x40
 801e702:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801e706:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e708:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e70a:	2b00      	cmp	r3, #0
 801e70c:	dc03      	bgt.n	801e716 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e70e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e710:	2b00      	cmp	r3, #0
 801e712:	f340 8375 	ble.w	801ee00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e716:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e718:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e71c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e720:	1e48      	subs	r0, r1, #1
 801e722:	1e57      	subs	r7, r2, #1
 801e724:	9b07      	ldr	r3, [sp, #28]
 801e726:	2b00      	cmp	r3, #0
 801e728:	f340 818e 	ble.w	801ea48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e72c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e730:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e734:	d406      	bmi.n	801e744 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e736:	4584      	cmp	ip, r0
 801e738:	da04      	bge.n	801e744 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e73a:	2b00      	cmp	r3, #0
 801e73c:	db02      	blt.n	801e744 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e73e:	42bb      	cmp	r3, r7
 801e740:	f2c0 8183 	blt.w	801ea4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e744:	f11c 0c01 	adds.w	ip, ip, #1
 801e748:	f100 8173 	bmi.w	801ea32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e74c:	4561      	cmp	r1, ip
 801e74e:	f2c0 8170 	blt.w	801ea32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e752:	3301      	adds	r3, #1
 801e754:	f100 816d 	bmi.w	801ea32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e758:	429a      	cmp	r2, r3
 801e75a:	f2c0 816a 	blt.w	801ea32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e75e:	9b07      	ldr	r3, [sp, #28]
 801e760:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801e762:	9318      	str	r3, [sp, #96]	@ 0x60
 801e764:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e766:	2b00      	cmp	r3, #0
 801e768:	f340 818c 	ble.w	801ea84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e76c:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801e76e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e770:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e774:	689b      	ldr	r3, [r3, #8]
 801e776:	1422      	asrs	r2, r4, #16
 801e778:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e77c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e780:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e784:	f100 81cd 	bmi.w	801eb22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e788:	f103 38ff 	add.w	r8, r3, #4294967295
 801e78c:	4542      	cmp	r2, r8
 801e78e:	f280 81c8 	bge.w	801eb22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e792:	f1bc 0f00 	cmp.w	ip, #0
 801e796:	f2c0 81c4 	blt.w	801eb22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e79a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e79e:	45c4      	cmp	ip, r8
 801e7a0:	f280 81bf 	bge.w	801eb22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e7a4:	b21b      	sxth	r3, r3
 801e7a6:	fb0c 2203 	mla	r2, ip, r3, r2
 801e7aa:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e7ac:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e7b0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e7b4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e7b8:	2800      	cmp	r0, #0
 801e7ba:	f000 81a9 	beq.w	801eb10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e7be:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e7c2:	950c      	str	r5, [sp, #48]	@ 0x30
 801e7c4:	0e2d      	lsrs	r5, r5, #24
 801e7c6:	9513      	str	r5, [sp, #76]	@ 0x4c
 801e7c8:	b181      	cbz	r1, 801e7ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e7ca:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801e7ce:	3b01      	subs	r3, #1
 801e7d0:	009b      	lsls	r3, r3, #2
 801e7d2:	3304      	adds	r3, #4
 801e7d4:	eb08 0c03 	add.w	ip, r8, r3
 801e7d8:	f858 3003 	ldr.w	r3, [r8, r3]
 801e7dc:	9308      	str	r3, [sp, #32]
 801e7de:	0e1b      	lsrs	r3, r3, #24
 801e7e0:	9311      	str	r3, [sp, #68]	@ 0x44
 801e7e2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e7e6:	930d      	str	r3, [sp, #52]	@ 0x34
 801e7e8:	0e1b      	lsrs	r3, r3, #24
 801e7ea:	9314      	str	r3, [sp, #80]	@ 0x50
 801e7ec:	b280      	uxth	r0, r0
 801e7ee:	b289      	uxth	r1, r1
 801e7f0:	fb00 f901 	mul.w	r9, r0, r1
 801e7f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e7f8:	0100      	lsls	r0, r0, #4
 801e7fa:	eba0 0809 	sub.w	r8, r0, r9
 801e7fe:	b289      	uxth	r1, r1
 801e800:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e804:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e806:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e808:	fa1f f888 	uxth.w	r8, r8
 801e80c:	1a5b      	subs	r3, r3, r1
 801e80e:	b29b      	uxth	r3, r3
 801e810:	fb08 f000 	mul.w	r0, r8, r0
 801e814:	fb03 000e 	mla	r0, r3, lr, r0
 801e818:	fb01 0005 	mla	r0, r1, r5, r0
 801e81c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e81e:	fb09 0005 	mla	r0, r9, r5, r0
 801e822:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e826:	2800      	cmp	r0, #0
 801e828:	f000 80fa 	beq.w	801ea20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e82c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e830:	d01b      	beq.n	801e86a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e832:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801e836:	fb0e fa0a 	mul.w	sl, lr, sl
 801e83a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e83e:	fb0e fe02 	mul.w	lr, lr, r2
 801e842:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e846:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e84a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e84e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e852:	4452      	add	r2, sl
 801e854:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e858:	0a12      	lsrs	r2, r2, #8
 801e85a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e85e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e862:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e866:	ea42 020c 	orr.w	r2, r2, ip
 801e86a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e86c:	2dff      	cmp	r5, #255	@ 0xff
 801e86e:	d021      	beq.n	801e8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e870:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e872:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e876:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e878:	fb05 fb0b 	mul.w	fp, r5, fp
 801e87c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e87e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e882:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e884:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e888:	fb05 fa0a 	mul.w	sl, r5, sl
 801e88c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e890:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e894:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e898:	44de      	add	lr, fp
 801e89a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e89e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e8a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8a6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e8aa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e8ae:	ea4e 050a 	orr.w	r5, lr, sl
 801e8b2:	950c      	str	r5, [sp, #48]	@ 0x30
 801e8b4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e8b6:	2dff      	cmp	r5, #255	@ 0xff
 801e8b8:	d021      	beq.n	801e8fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e8ba:	9d08      	ldr	r5, [sp, #32]
 801e8bc:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e8c0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e8c2:	fb05 fb0b 	mul.w	fp, r5, fp
 801e8c6:	9d08      	ldr	r5, [sp, #32]
 801e8c8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e8cc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e8ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e8d2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e8d6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e8da:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e8de:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e8e2:	44de      	add	lr, fp
 801e8e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e8e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e8ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e8f4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e8f8:	ea4e 050a 	orr.w	r5, lr, sl
 801e8fc:	9508      	str	r5, [sp, #32]
 801e8fe:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e900:	2dff      	cmp	r5, #255	@ 0xff
 801e902:	d021      	beq.n	801e948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e904:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e906:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e90a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e90c:	fb05 fb0b 	mul.w	fp, r5, fp
 801e910:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e912:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e916:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e918:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e91c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e920:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e924:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e928:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e92c:	44de      	add	lr, fp
 801e92e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e932:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e936:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e93a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e93e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e942:	ea4e 050a 	orr.w	r5, lr, sl
 801e946:	950d      	str	r5, [sp, #52]	@ 0x34
 801e948:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e94a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e94e:	9d08      	ldr	r5, [sp, #32]
 801e950:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801e954:	fb08 fc0c 	mul.w	ip, r8, ip
 801e958:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e95c:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e960:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e962:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e966:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e96a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e96c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e970:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801e974:	fb08 f80e 	mul.w	r8, r8, lr
 801e978:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e97c:	fb03 8202 	mla	r2, r3, r2, r8
 801e980:	9b08      	ldr	r3, [sp, #32]
 801e982:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e984:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801e988:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e98a:	fb01 220a 	mla	r2, r1, sl, r2
 801e98e:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801e992:	fb09 2901 	mla	r9, r9, r1, r2
 801e996:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e998:	883b      	ldrh	r3, [r7, #0]
 801e99a:	4342      	muls	r2, r0
 801e99c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e9a4:	1c50      	adds	r0, r2, #1
 801e9a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e9aa:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e9ae:	ea4c 0c09 	orr.w	ip, ip, r9
 801e9b2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e9b6:	1219      	asrs	r1, r3, #8
 801e9b8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e9bc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e9c0:	b2c0      	uxtb	r0, r0
 801e9c2:	fb12 f205 	smulbb	r2, r2, r5
 801e9c6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e9ca:	fb01 2100 	mla	r1, r1, r0, r2
 801e9ce:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e9d2:	10da      	asrs	r2, r3, #3
 801e9d4:	fa5f fc8c 	uxtb.w	ip, ip
 801e9d8:	00db      	lsls	r3, r3, #3
 801e9da:	fb1c fc05 	smulbb	ip, ip, r5
 801e9de:	b2db      	uxtb	r3, r3
 801e9e0:	b289      	uxth	r1, r1
 801e9e2:	fb03 c300 	mla	r3, r3, r0, ip
 801e9e6:	fa1f fc83 	uxth.w	ip, r3
 801e9ea:	1c4b      	adds	r3, r1, #1
 801e9ec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e9f0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e9f4:	fb1e fe05 	smulbb	lr, lr, r5
 801e9f8:	f10c 0301 	add.w	r3, ip, #1
 801e9fc:	fb02 e200 	mla	r2, r2, r0, lr
 801ea00:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ea04:	b292      	uxth	r2, r2
 801ea06:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801ea0a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ea0e:	430b      	orrs	r3, r1
 801ea10:	1c51      	adds	r1, r2, #1
 801ea12:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ea16:	0952      	lsrs	r2, r2, #5
 801ea18:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ea1c:	4313      	orrs	r3, r2
 801ea1e:	803b      	strh	r3, [r7, #0]
 801ea20:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ea22:	441c      	add	r4, r3
 801ea24:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ea26:	441e      	add	r6, r3
 801ea28:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ea2a:	3b01      	subs	r3, #1
 801ea2c:	3702      	adds	r7, #2
 801ea2e:	9318      	str	r3, [sp, #96]	@ 0x60
 801ea30:	e698      	b.n	801e764 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea32:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ea34:	441c      	add	r4, r3
 801ea36:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ea38:	441e      	add	r6, r3
 801ea3a:	9b07      	ldr	r3, [sp, #28]
 801ea3c:	3b01      	subs	r3, #1
 801ea3e:	9307      	str	r3, [sp, #28]
 801ea40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ea42:	3302      	adds	r3, #2
 801ea44:	930a      	str	r3, [sp, #40]	@ 0x28
 801ea46:	e66d      	b.n	801e724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ea48:	d023      	beq.n	801ea92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801ea4a:	9b07      	ldr	r3, [sp, #28]
 801ea4c:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801ea4e:	3b01      	subs	r3, #1
 801ea50:	fb00 4003 	mla	r0, r0, r3, r4
 801ea54:	1400      	asrs	r0, r0, #16
 801ea56:	f53f ae82 	bmi.w	801e75e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ea5a:	3901      	subs	r1, #1
 801ea5c:	4288      	cmp	r0, r1
 801ea5e:	f6bf ae7e 	bge.w	801e75e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ea62:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801ea64:	fb01 6303 	mla	r3, r1, r3, r6
 801ea68:	141b      	asrs	r3, r3, #16
 801ea6a:	f53f ae78 	bmi.w	801e75e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ea6e:	3a01      	subs	r2, #1
 801ea70:	4293      	cmp	r3, r2
 801ea72:	f6bf ae74 	bge.w	801e75e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ea76:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ea7a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801ea7e:	f1bb 0f00 	cmp.w	fp, #0
 801ea82:	dc6c      	bgt.n	801eb5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ea84:	9b07      	ldr	r3, [sp, #28]
 801ea86:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ea8a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ea8c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ea90:	930a      	str	r3, [sp, #40]	@ 0x28
 801ea92:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ea94:	2b00      	cmp	r3, #0
 801ea96:	f340 81b3 	ble.w	801ee00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ea9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ea9e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801eaa2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eaa6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eaa8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eaac:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eab0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eab4:	eef0 6a62 	vmov.f32	s13, s5
 801eab8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eabc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eac0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eac4:	ee16 4a90 	vmov	r4, s13
 801eac8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eacc:	eef0 6a43 	vmov.f32	s13, s6
 801ead0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ead4:	ee12 2a90 	vmov	r2, s5
 801ead8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eadc:	fb92 f3f3 	sdiv	r3, r2, r3
 801eae0:	ee13 2a10 	vmov	r2, s6
 801eae4:	9329      	str	r3, [sp, #164]	@ 0xa4
 801eae6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eae8:	fb92 f3f3 	sdiv	r3, r2, r3
 801eaec:	932a      	str	r3, [sp, #168]	@ 0xa8
 801eaee:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801eaf0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801eaf2:	3b01      	subs	r3, #1
 801eaf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eaf8:	9317      	str	r3, [sp, #92]	@ 0x5c
 801eafa:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eafc:	bf08      	it	eq
 801eafe:	4613      	moveq	r3, r2
 801eb00:	ee16 6a90 	vmov	r6, s13
 801eb04:	9307      	str	r3, [sp, #28]
 801eb06:	eeb0 3a67 	vmov.f32	s6, s15
 801eb0a:	eef0 2a47 	vmov.f32	s5, s14
 801eb0e:	e5fb      	b.n	801e708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801eb10:	2900      	cmp	r1, #0
 801eb12:	f43f ae6b 	beq.w	801e7ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eb16:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801eb1a:	9308      	str	r3, [sp, #32]
 801eb1c:	0e1b      	lsrs	r3, r3, #24
 801eb1e:	9311      	str	r3, [sp, #68]	@ 0x44
 801eb20:	e664      	b.n	801e7ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eb22:	f112 0801 	adds.w	r8, r2, #1
 801eb26:	f53f af7b 	bmi.w	801ea20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb2a:	4543      	cmp	r3, r8
 801eb2c:	f6ff af78 	blt.w	801ea20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb30:	f11c 0801 	adds.w	r8, ip, #1
 801eb34:	f53f af74 	bmi.w	801ea20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb38:	45c6      	cmp	lr, r8
 801eb3a:	f6ff af71 	blt.w	801ea20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb3e:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801eb40:	9201      	str	r2, [sp, #4]
 801eb42:	fa0f f28e 	sxth.w	r2, lr
 801eb46:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801eb4a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801eb4e:	9200      	str	r2, [sp, #0]
 801eb50:	b21b      	sxth	r3, r3
 801eb52:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801eb54:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801eb56:	4639      	mov	r1, r7
 801eb58:	f7ff fc79 	bl	801e44e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801eb5c:	e760      	b.n	801ea20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb5e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801eb60:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eb62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eb66:	1427      	asrs	r7, r4, #16
 801eb68:	1433      	asrs	r3, r6, #16
 801eb6a:	fb01 7303 	mla	r3, r1, r3, r7
 801eb6e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801eb72:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801eb76:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801eb7a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801eb7e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801eb82:	2a00      	cmp	r2, #0
 801eb84:	f000 8133 	beq.w	801edee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801eb88:	687d      	ldr	r5, [r7, #4]
 801eb8a:	950e      	str	r5, [sp, #56]	@ 0x38
 801eb8c:	0e2d      	lsrs	r5, r5, #24
 801eb8e:	9515      	str	r5, [sp, #84]	@ 0x54
 801eb90:	b178      	cbz	r0, 801ebb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801eb92:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801eb96:	3901      	subs	r1, #1
 801eb98:	0089      	lsls	r1, r1, #2
 801eb9a:	3104      	adds	r1, #4
 801eb9c:	eb07 0e01 	add.w	lr, r7, r1
 801eba0:	5879      	ldr	r1, [r7, r1]
 801eba2:	9109      	str	r1, [sp, #36]	@ 0x24
 801eba4:	0e09      	lsrs	r1, r1, #24
 801eba6:	9112      	str	r1, [sp, #72]	@ 0x48
 801eba8:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ebac:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ebae:	0e09      	lsrs	r1, r1, #24
 801ebb0:	9116      	str	r1, [sp, #88]	@ 0x58
 801ebb2:	b292      	uxth	r2, r2
 801ebb4:	b280      	uxth	r0, r0
 801ebb6:	fb02 f800 	mul.w	r8, r2, r0
 801ebba:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ebbe:	0112      	lsls	r2, r2, #4
 801ebc0:	eba2 0e08 	sub.w	lr, r2, r8
 801ebc4:	b280      	uxth	r0, r0
 801ebc6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ebca:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801ebcc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ebce:	fa1f fe8e 	uxth.w	lr, lr
 801ebd2:	1a12      	subs	r2, r2, r0
 801ebd4:	b292      	uxth	r2, r2
 801ebd6:	fb0e f101 	mul.w	r1, lr, r1
 801ebda:	fb02 110c 	mla	r1, r2, ip, r1
 801ebde:	fb00 1105 	mla	r1, r0, r5, r1
 801ebe2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ebe4:	fb08 1105 	mla	r1, r8, r5, r1
 801ebe8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ebec:	2900      	cmp	r1, #0
 801ebee:	f000 80f5 	beq.w	801eddc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801ebf2:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ebf6:	d019      	beq.n	801ec2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801ebf8:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ebfc:	fb0c fa0a 	mul.w	sl, ip, sl
 801ec00:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ec04:	fb0c fc03 	mul.w	ip, ip, r3
 801ec08:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ec0c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ec10:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ec14:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ec18:	4453      	add	r3, sl
 801ec1a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ec1e:	0a1b      	lsrs	r3, r3, #8
 801ec20:	0a3f      	lsrs	r7, r7, #8
 801ec22:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ec26:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ec2a:	433b      	orrs	r3, r7
 801ec2c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ec2e:	2dff      	cmp	r5, #255	@ 0xff
 801ec30:	d020      	beq.n	801ec74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801ec32:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ec34:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ec38:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ec3a:	436f      	muls	r7, r5
 801ec3c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ec3e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ec42:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ec44:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ec48:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec4c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ec50:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec54:	44bc      	add	ip, r7
 801ec56:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ec5a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ec5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec66:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec6a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ec6e:	ea4c 050a 	orr.w	r5, ip, sl
 801ec72:	950e      	str	r5, [sp, #56]	@ 0x38
 801ec74:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ec76:	2dff      	cmp	r5, #255	@ 0xff
 801ec78:	d020      	beq.n	801ecbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801ec7a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ec7c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ec80:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ec82:	436f      	muls	r7, r5
 801ec84:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ec86:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ec8a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ec8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ec90:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec94:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ec98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec9c:	44bc      	add	ip, r7
 801ec9e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801eca2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eca6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecb2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ecb6:	ea4c 050a 	orr.w	r5, ip, sl
 801ecba:	9509      	str	r5, [sp, #36]	@ 0x24
 801ecbc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ecbe:	2dff      	cmp	r5, #255	@ 0xff
 801ecc0:	d020      	beq.n	801ed04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801ecc2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ecc4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ecc8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ecca:	436f      	muls	r7, r5
 801eccc:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ecce:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ecd2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ecd4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ecd8:	fb05 fa0a 	mul.w	sl, r5, sl
 801ecdc:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ece0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ece4:	44bc      	add	ip, r7
 801ece6:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ecea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ecee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecf2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecf6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecfa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ecfe:	ea4c 050a 	orr.w	r5, ip, sl
 801ed02:	950f      	str	r5, [sp, #60]	@ 0x3c
 801ed04:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ed06:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ed0a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ed0c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ed10:	fb0e f707 	mul.w	r7, lr, r7
 801ed14:	fb02 770c 	mla	r7, r2, ip, r7
 801ed18:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ed1c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ed1e:	fb00 770c 	mla	r7, r0, ip, r7
 801ed22:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ed26:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ed28:	fb08 770c 	mla	r7, r8, ip, r7
 801ed2c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801ed30:	fb0e fe0c 	mul.w	lr, lr, ip
 801ed34:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ed38:	fb02 e303 	mla	r3, r2, r3, lr
 801ed3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ed3e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ed40:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ed44:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ed46:	fb00 330a 	mla	r3, r0, sl, r3
 801ed4a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801ed4e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ed52:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ed54:	f8b9 0000 	ldrh.w	r0, [r9]
 801ed58:	4359      	muls	r1, r3
 801ed5a:	0a3f      	lsrs	r7, r7, #8
 801ed5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed60:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ed64:	1c4b      	adds	r3, r1, #1
 801ed66:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801ed6a:	ea47 070c 	orr.w	r7, r7, ip
 801ed6e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ed72:	1202      	asrs	r2, r0, #8
 801ed74:	0c3b      	lsrs	r3, r7, #16
 801ed76:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801ed7a:	b2c9      	uxtb	r1, r1
 801ed7c:	fb13 f305 	smulbb	r3, r3, r5
 801ed80:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ed84:	fb02 3201 	mla	r2, r2, r1, r3
 801ed88:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801ed8c:	10c3      	asrs	r3, r0, #3
 801ed8e:	b2ff      	uxtb	r7, r7
 801ed90:	00c0      	lsls	r0, r0, #3
 801ed92:	b2c0      	uxtb	r0, r0
 801ed94:	fb17 f705 	smulbb	r7, r7, r5
 801ed98:	fb00 7001 	mla	r0, r0, r1, r7
 801ed9c:	b292      	uxth	r2, r2
 801ed9e:	fb1c fc05 	smulbb	ip, ip, r5
 801eda2:	b280      	uxth	r0, r0
 801eda4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801eda8:	fb03 c301 	mla	r3, r3, r1, ip
 801edac:	1c51      	adds	r1, r2, #1
 801edae:	f100 0c01 	add.w	ip, r0, #1
 801edb2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801edb6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801edba:	b29b      	uxth	r3, r3
 801edbc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801edc0:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801edc4:	ea4c 0202 	orr.w	r2, ip, r2
 801edc8:	f103 0c01 	add.w	ip, r3, #1
 801edcc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801edd0:	095b      	lsrs	r3, r3, #5
 801edd2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801edd6:	431a      	orrs	r2, r3
 801edd8:	f8a9 2000 	strh.w	r2, [r9]
 801eddc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801edde:	441c      	add	r4, r3
 801ede0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ede2:	f109 0902 	add.w	r9, r9, #2
 801ede6:	441e      	add	r6, r3
 801ede8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801edec:	e647      	b.n	801ea7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801edee:	2800      	cmp	r0, #0
 801edf0:	f43f aedf 	beq.w	801ebb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801edf4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801edf8:	9109      	str	r1, [sp, #36]	@ 0x24
 801edfa:	0e09      	lsrs	r1, r1, #24
 801edfc:	9112      	str	r1, [sp, #72]	@ 0x48
 801edfe:	e6d8      	b.n	801ebb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ee00:	b01d      	add	sp, #116	@ 0x74
 801ee02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ee06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801ee06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee0a:	b085      	sub	sp, #20
 801ee0c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ee10:	9102      	str	r1, [sp, #8]
 801ee12:	2c00      	cmp	r4, #0
 801ee14:	fb04 7103 	mla	r1, r4, r3, r7
 801ee18:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801ee1c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ee20:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801ee24:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ee28:	f2c0 810c 	blt.w	801f044 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ee2c:	45a6      	cmp	lr, r4
 801ee2e:	f340 8109 	ble.w	801f044 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ee32:	2f00      	cmp	r7, #0
 801ee34:	f2c0 8104 	blt.w	801f040 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ee38:	42bb      	cmp	r3, r7
 801ee3a:	f340 8101 	ble.w	801f040 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ee3e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ee42:	1c7a      	adds	r2, r7, #1
 801ee44:	f100 8101 	bmi.w	801f04a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ee48:	4293      	cmp	r3, r2
 801ee4a:	f340 80fe 	ble.w	801f04a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ee4e:	2e00      	cmp	r6, #0
 801ee50:	f000 80fd 	beq.w	801f04e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801ee54:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ee58:	3401      	adds	r4, #1
 801ee5a:	f100 80fc 	bmi.w	801f056 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ee5e:	45a6      	cmp	lr, r4
 801ee60:	f340 80f9 	ble.w	801f056 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ee64:	2800      	cmp	r0, #0
 801ee66:	f000 80f9 	beq.w	801f05c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801ee6a:	2f00      	cmp	r7, #0
 801ee6c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801ee70:	f2c0 80ef 	blt.w	801f052 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801ee74:	42bb      	cmp	r3, r7
 801ee76:	f340 80ec 	ble.w	801f052 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801ee7a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ee7e:	3701      	adds	r7, #1
 801ee80:	f100 80ef 	bmi.w	801f062 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ee84:	42bb      	cmp	r3, r7
 801ee86:	f340 80ec 	ble.w	801f062 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ee8a:	2e00      	cmp	r6, #0
 801ee8c:	f000 80eb 	beq.w	801f066 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801ee90:	6852      	ldr	r2, [r2, #4]
 801ee92:	b2b6      	uxth	r6, r6
 801ee94:	b280      	uxth	r0, r0
 801ee96:	fb00 fe06 	mul.w	lr, r0, r6
 801ee9a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ee9e:	0136      	lsls	r6, r6, #4
 801eea0:	eba6 070e 	sub.w	r7, r6, lr
 801eea4:	b280      	uxth	r0, r0
 801eea6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801eeaa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801eeae:	b2bf      	uxth	r7, r7
 801eeb0:	1a1b      	subs	r3, r3, r0
 801eeb2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801eeb6:	b29b      	uxth	r3, r3
 801eeb8:	fb07 f60a 	mul.w	r6, r7, sl
 801eebc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801eec0:	fb0b 6603 	mla	r6, fp, r3, r6
 801eec4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801eec8:	fb00 6609 	mla	r6, r0, r9, r6
 801eecc:	fb0e 6608 	mla	r6, lr, r8, r6
 801eed0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801eed4:	9600      	str	r6, [sp, #0]
 801eed6:	2e00      	cmp	r6, #0
 801eed8:	f000 80af 	beq.w	801f03a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801eedc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801eee0:	fb0b fc0c 	mul.w	ip, fp, ip
 801eee4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801eee8:	fb0b f505 	mul.w	r5, fp, r5
 801eeec:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801eef0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801eef4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801eef8:	44dc      	add	ip, fp
 801eefa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eefe:	9501      	str	r5, [sp, #4]
 801ef00:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ef04:	9503      	str	r5, [sp, #12]
 801ef06:	9d01      	ldr	r5, [sp, #4]
 801ef08:	9e02      	ldr	r6, [sp, #8]
 801ef0a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ef0e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ef12:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ef16:	fb0a fc0c 	mul.w	ip, sl, ip
 801ef1a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ef1e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ef22:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ef26:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ef2a:	4465      	add	r5, ip
 801ef2c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ef30:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ef34:	fb09 fc0c 	mul.w	ip, r9, ip
 801ef38:	fb09 f904 	mul.w	r9, r9, r4
 801ef3c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801ef40:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ef44:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801ef48:	fb08 f404 	mul.w	r4, r8, r4
 801ef4c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ef50:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ef54:	fb08 f802 	mul.w	r8, r8, r2
 801ef58:	fb0a fa01 	mul.w	sl, sl, r1
 801ef5c:	0a22      	lsrs	r2, r4, #8
 801ef5e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801ef62:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ef66:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801ef6a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ef6e:	4414      	add	r4, r2
 801ef70:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ef74:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801ef78:	0a2d      	lsrs	r5, r5, #8
 801ef7a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ef7e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ef82:	9a03      	ldr	r2, [sp, #12]
 801ef84:	8836      	ldrh	r6, [r6, #0]
 801ef86:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ef8a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ef8e:	437d      	muls	r5, r7
 801ef90:	4461      	add	r1, ip
 801ef92:	0a24      	lsrs	r4, r4, #8
 801ef94:	fb02 5503 	mla	r5, r2, r3, r5
 801ef98:	0a09      	lsrs	r1, r1, #8
 801ef9a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801ef9e:	fb04 540e 	mla	r4, r4, lr, r5
 801efa2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801efa6:	fb01 4100 	mla	r1, r1, r0, r4
 801efaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efae:	0a09      	lsrs	r1, r1, #8
 801efb0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801efb4:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801efb8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801efbc:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801efc0:	fb07 f70a 	mul.w	r7, r7, sl
 801efc4:	fb03 7101 	mla	r1, r3, r1, r7
 801efc8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801efcc:	9b00      	ldr	r3, [sp, #0]
 801efce:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801efd2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801efd6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801efda:	fb00 e101 	mla	r1, r0, r1, lr
 801efde:	43da      	mvns	r2, r3
 801efe0:	1233      	asrs	r3, r6, #8
 801efe2:	b2d2      	uxtb	r2, r2
 801efe4:	10f0      	asrs	r0, r6, #3
 801efe6:	0a09      	lsrs	r1, r1, #8
 801efe8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801efec:	00f6      	lsls	r6, r6, #3
 801efee:	4353      	muls	r3, r2
 801eff0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801eff4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801eff8:	b2f6      	uxtb	r6, r6
 801effa:	4321      	orrs	r1, r4
 801effc:	4350      	muls	r0, r2
 801effe:	4356      	muls	r6, r2
 801f000:	1c5a      	adds	r2, r3, #1
 801f002:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f006:	0c0b      	lsrs	r3, r1, #16
 801f008:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f00c:	1c42      	adds	r2, r0, #1
 801f00e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f012:	0a0a      	lsrs	r2, r1, #8
 801f014:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f018:	021b      	lsls	r3, r3, #8
 801f01a:	00d2      	lsls	r2, r2, #3
 801f01c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f020:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801f024:	4313      	orrs	r3, r2
 801f026:	1c72      	adds	r2, r6, #1
 801f028:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f02c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801f030:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f034:	4319      	orrs	r1, r3
 801f036:	9b02      	ldr	r3, [sp, #8]
 801f038:	8019      	strh	r1, [r3, #0]
 801f03a:	b005      	add	sp, #20
 801f03c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f040:	2500      	movs	r5, #0
 801f042:	e6fe      	b.n	801ee42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801f044:	2100      	movs	r1, #0
 801f046:	460d      	mov	r5, r1
 801f048:	e706      	b.n	801ee58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f04a:	2100      	movs	r1, #0
 801f04c:	e704      	b.n	801ee58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f04e:	4631      	mov	r1, r6
 801f050:	e702      	b.n	801ee58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f052:	2400      	movs	r4, #0
 801f054:	e713      	b.n	801ee7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801f056:	2200      	movs	r2, #0
 801f058:	4614      	mov	r4, r2
 801f05a:	e71a      	b.n	801ee92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f05c:	4602      	mov	r2, r0
 801f05e:	4604      	mov	r4, r0
 801f060:	e717      	b.n	801ee92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f062:	2200      	movs	r2, #0
 801f064:	e715      	b.n	801ee92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f066:	4632      	mov	r2, r6
 801f068:	e713      	b.n	801ee92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801f06c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f06c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f070:	b09b      	sub	sp, #108	@ 0x6c
 801f072:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801f076:	9218      	str	r2, [sp, #96]	@ 0x60
 801f078:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801f07a:	9116      	str	r1, [sp, #88]	@ 0x58
 801f07c:	9307      	str	r3, [sp, #28]
 801f07e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801f082:	9019      	str	r0, [sp, #100]	@ 0x64
 801f084:	6850      	ldr	r0, [r2, #4]
 801f086:	6812      	ldr	r2, [r2, #0]
 801f088:	fb00 1303 	mla	r3, r0, r3, r1
 801f08c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f090:	930a      	str	r3, [sp, #40]	@ 0x28
 801f092:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f094:	681b      	ldr	r3, [r3, #0]
 801f096:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f098:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f09a:	2b00      	cmp	r3, #0
 801f09c:	dc03      	bgt.n	801f0a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f09e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f0a0:	2b00      	cmp	r3, #0
 801f0a2:	f340 8386 	ble.w	801f7b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f0a6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f0a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f0ac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f0b0:	1e48      	subs	r0, r1, #1
 801f0b2:	1e57      	subs	r7, r2, #1
 801f0b4:	9b07      	ldr	r3, [sp, #28]
 801f0b6:	2b00      	cmp	r3, #0
 801f0b8:	f340 8166 	ble.w	801f388 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801f0bc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f0c0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f0c4:	d406      	bmi.n	801f0d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f0c6:	4584      	cmp	ip, r0
 801f0c8:	da04      	bge.n	801f0d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f0ca:	2b00      	cmp	r3, #0
 801f0cc:	db02      	blt.n	801f0d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f0ce:	42bb      	cmp	r3, r7
 801f0d0:	f2c0 815b 	blt.w	801f38a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f0d4:	f11c 0c01 	adds.w	ip, ip, #1
 801f0d8:	f100 814b 	bmi.w	801f372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f0dc:	4561      	cmp	r1, ip
 801f0de:	f2c0 8148 	blt.w	801f372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f0e2:	3301      	adds	r3, #1
 801f0e4:	f100 8145 	bmi.w	801f372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f0e8:	429a      	cmp	r2, r3
 801f0ea:	f2c0 8142 	blt.w	801f372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f0ee:	9b07      	ldr	r3, [sp, #28]
 801f0f0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f0f2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f0f4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f0f6:	2b00      	cmp	r3, #0
 801f0f8:	f340 8165 	ble.w	801f3c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f0fc:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801f0fe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f100:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f104:	689b      	ldr	r3, [r3, #8]
 801f106:	1422      	asrs	r2, r4, #16
 801f108:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f10c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f110:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f114:	f100 81d5 	bmi.w	801f4c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f118:	f103 38ff 	add.w	r8, r3, #4294967295
 801f11c:	4542      	cmp	r2, r8
 801f11e:	f280 81d0 	bge.w	801f4c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f122:	f1bc 0f00 	cmp.w	ip, #0
 801f126:	f2c0 81cc 	blt.w	801f4c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f12a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f12e:	45c4      	cmp	ip, r8
 801f130:	f280 81c7 	bge.w	801f4c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f134:	b21b      	sxth	r3, r3
 801f136:	fb0c 2203 	mla	r2, ip, r3, r2
 801f13a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f13c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f140:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f144:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f148:	2900      	cmp	r1, #0
 801f14a:	f000 8182 	beq.w	801f452 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f14e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f152:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f154:	0e2d      	lsrs	r5, r5, #24
 801f156:	9512      	str	r5, [sp, #72]	@ 0x48
 801f158:	b180      	cbz	r0, 801f17c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f15a:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f15e:	3b01      	subs	r3, #1
 801f160:	009b      	lsls	r3, r3, #2
 801f162:	3304      	adds	r3, #4
 801f164:	eb08 0c03 	add.w	ip, r8, r3
 801f168:	f858 3003 	ldr.w	r3, [r8, r3]
 801f16c:	9308      	str	r3, [sp, #32]
 801f16e:	0e1b      	lsrs	r3, r3, #24
 801f170:	9310      	str	r3, [sp, #64]	@ 0x40
 801f172:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f176:	930c      	str	r3, [sp, #48]	@ 0x30
 801f178:	0e1b      	lsrs	r3, r3, #24
 801f17a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f17c:	b289      	uxth	r1, r1
 801f17e:	b280      	uxth	r0, r0
 801f180:	fb01 f900 	mul.w	r9, r1, r0
 801f184:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f188:	0109      	lsls	r1, r1, #4
 801f18a:	eba1 0809 	sub.w	r8, r1, r9
 801f18e:	b280      	uxth	r0, r0
 801f190:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801f194:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f196:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f198:	fa1f f888 	uxth.w	r8, r8
 801f19c:	1a09      	subs	r1, r1, r0
 801f19e:	b289      	uxth	r1, r1
 801f1a0:	fb08 f303 	mul.w	r3, r8, r3
 801f1a4:	fb01 330e 	mla	r3, r1, lr, r3
 801f1a8:	fb00 3305 	mla	r3, r0, r5, r3
 801f1ac:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f1ae:	fb09 3305 	mla	r3, r9, r5, r3
 801f1b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f1b6:	2b00      	cmp	r3, #0
 801f1b8:	f000 80d2 	beq.w	801f360 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f1bc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801f1c0:	d01b      	beq.n	801f1fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801f1c2:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801f1c6:	fb0e fa0a 	mul.w	sl, lr, sl
 801f1ca:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f1ce:	fb0e fe02 	mul.w	lr, lr, r2
 801f1d2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f1d6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f1da:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f1de:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801f1e2:	4452      	add	r2, sl
 801f1e4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f1e8:	0a12      	lsrs	r2, r2, #8
 801f1ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f1ee:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f1f2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f1f6:	ea42 020c 	orr.w	r2, r2, ip
 801f1fa:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f1fc:	2dff      	cmp	r5, #255	@ 0xff
 801f1fe:	d021      	beq.n	801f244 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801f200:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f202:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f206:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f208:	fb05 fb0b 	mul.w	fp, r5, fp
 801f20c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f20e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f212:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f214:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f218:	fb05 fa0a 	mul.w	sl, r5, sl
 801f21c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f220:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f224:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f228:	44de      	add	lr, fp
 801f22a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f22e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f232:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f236:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f23a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f23e:	ea4e 050a 	orr.w	r5, lr, sl
 801f242:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f244:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f246:	2dff      	cmp	r5, #255	@ 0xff
 801f248:	d021      	beq.n	801f28e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f24a:	9d08      	ldr	r5, [sp, #32]
 801f24c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f250:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f252:	fb05 fb0b 	mul.w	fp, r5, fp
 801f256:	9d08      	ldr	r5, [sp, #32]
 801f258:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f25c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f25e:	fb05 fa0e 	mul.w	sl, r5, lr
 801f262:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f266:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f26a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f26e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f272:	44de      	add	lr, fp
 801f274:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f278:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f27c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f280:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f284:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f288:	ea4e 050a 	orr.w	r5, lr, sl
 801f28c:	9508      	str	r5, [sp, #32]
 801f28e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f290:	2dff      	cmp	r5, #255	@ 0xff
 801f292:	d021      	beq.n	801f2d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f294:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f296:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f29a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f29c:	fb05 fb0b 	mul.w	fp, r5, fp
 801f2a0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f2a2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f2a6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f2a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f2ac:	fb05 fa0a 	mul.w	sl, r5, sl
 801f2b0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2b4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f2b8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f2bc:	44de      	add	lr, fp
 801f2be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f2c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f2c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2ca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2ce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f2d2:	ea4e 050a 	orr.w	r5, lr, sl
 801f2d6:	950c      	str	r5, [sp, #48]	@ 0x30
 801f2d8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f2da:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f2de:	9d08      	ldr	r5, [sp, #32]
 801f2e0:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801f2e4:	fb08 fc0c 	mul.w	ip, r8, ip
 801f2e8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f2ec:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f2f0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f2f2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f2f6:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f2fa:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f2fc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f300:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f304:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f308:	fb08 f80e 	mul.w	r8, r8, lr
 801f30c:	fb01 8202 	mla	r2, r1, r2, r8
 801f310:	9908      	ldr	r1, [sp, #32]
 801f312:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f316:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f318:	fb00 220a 	mla	r2, r0, sl, r2
 801f31c:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801f320:	fb09 2900 	mla	r9, r9, r0, r2
 801f324:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f328:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f32c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f330:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801f334:	ea4c 0c09 	orr.w	ip, ip, r9
 801f338:	2bff      	cmp	r3, #255	@ 0xff
 801f33a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f33e:	f040 8091 	bne.w	801f464 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f342:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f346:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801f34a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f34e:	f022 0207 	bic.w	r2, r2, #7
 801f352:	431a      	orrs	r2, r3
 801f354:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f358:	ea4c 0c02 	orr.w	ip, ip, r2
 801f35c:	f8a7 c000 	strh.w	ip, [r7]
 801f360:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f362:	441c      	add	r4, r3
 801f364:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f366:	441e      	add	r6, r3
 801f368:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f36a:	3b01      	subs	r3, #1
 801f36c:	3702      	adds	r7, #2
 801f36e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f370:	e6c0      	b.n	801f0f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f372:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f374:	441c      	add	r4, r3
 801f376:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f378:	441e      	add	r6, r3
 801f37a:	9b07      	ldr	r3, [sp, #28]
 801f37c:	3b01      	subs	r3, #1
 801f37e:	9307      	str	r3, [sp, #28]
 801f380:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f382:	3302      	adds	r3, #2
 801f384:	930a      	str	r3, [sp, #40]	@ 0x28
 801f386:	e695      	b.n	801f0b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f388:	d024      	beq.n	801f3d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f38a:	9b07      	ldr	r3, [sp, #28]
 801f38c:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801f38e:	3b01      	subs	r3, #1
 801f390:	fb00 4003 	mla	r0, r0, r3, r4
 801f394:	1400      	asrs	r0, r0, #16
 801f396:	f53f aeaa 	bmi.w	801f0ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f39a:	3901      	subs	r1, #1
 801f39c:	4288      	cmp	r0, r1
 801f39e:	f6bf aea6 	bge.w	801f0ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f3a2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801f3a4:	fb01 6303 	mla	r3, r1, r3, r6
 801f3a8:	141b      	asrs	r3, r3, #16
 801f3aa:	f53f aea0 	bmi.w	801f0ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f3ae:	3a01      	subs	r2, #1
 801f3b0:	4293      	cmp	r3, r2
 801f3b2:	f6bf ae9c 	bge.w	801f0ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f3b6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f3ba:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801f3be:	f1bb 0f00 	cmp.w	fp, #0
 801f3c2:	f300 809a 	bgt.w	801f4fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f3c6:	9b07      	ldr	r3, [sp, #28]
 801f3c8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f3cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f3ce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f3d2:	930a      	str	r3, [sp, #40]	@ 0x28
 801f3d4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f3d6:	2b00      	cmp	r3, #0
 801f3d8:	f340 81eb 	ble.w	801f7b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f3dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f3e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f3e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f3e8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f3ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f3ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f3f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f3f6:	eef0 6a62 	vmov.f32	s13, s5
 801f3fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f3fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f402:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f406:	ee16 4a90 	vmov	r4, s13
 801f40a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f40e:	eef0 6a43 	vmov.f32	s13, s6
 801f412:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f416:	ee12 2a90 	vmov	r2, s5
 801f41a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f41e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f422:	ee13 2a10 	vmov	r2, s6
 801f426:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f428:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f42a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f42e:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f430:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f432:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f434:	3b01      	subs	r3, #1
 801f436:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f43a:	9316      	str	r3, [sp, #88]	@ 0x58
 801f43c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f43e:	bf08      	it	eq
 801f440:	4613      	moveq	r3, r2
 801f442:	ee16 6a90 	vmov	r6, s13
 801f446:	9307      	str	r3, [sp, #28]
 801f448:	eeb0 3a67 	vmov.f32	s6, s15
 801f44c:	eef0 2a47 	vmov.f32	s5, s14
 801f450:	e622      	b.n	801f098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f452:	2800      	cmp	r0, #0
 801f454:	f43f ae92 	beq.w	801f17c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f458:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f45c:	9308      	str	r3, [sp, #32]
 801f45e:	0e1b      	lsrs	r3, r3, #24
 801f460:	9310      	str	r3, [sp, #64]	@ 0x40
 801f462:	e68b      	b.n	801f17c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f464:	8839      	ldrh	r1, [r7, #0]
 801f466:	4dd4      	ldr	r5, [pc, #848]	@ (801f7b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f468:	43db      	mvns	r3, r3
 801f46a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f46e:	fa5f f883 	uxtb.w	r8, r3
 801f472:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801f476:	fb0e fe08 	mul.w	lr, lr, r8
 801f47a:	10c8      	asrs	r0, r1, #3
 801f47c:	00cb      	lsls	r3, r1, #3
 801f47e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f482:	f10e 0101 	add.w	r1, lr, #1
 801f486:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f48a:	fb00 f008 	mul.w	r0, r0, r8
 801f48e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f492:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f496:	f100 0e01 	add.w	lr, r0, #1
 801f49a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f49e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f4a2:	b2db      	uxtb	r3, r3
 801f4a4:	b2c9      	uxtb	r1, r1
 801f4a6:	00d2      	lsls	r2, r2, #3
 801f4a8:	fb03 f308 	mul.w	r3, r3, r8
 801f4ac:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f4b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f4b4:	430a      	orrs	r2, r1
 801f4b6:	1c59      	adds	r1, r3, #1
 801f4b8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f4bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f4c0:	e748      	b.n	801f354 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f4c2:	f112 0801 	adds.w	r8, r2, #1
 801f4c6:	f53f af4b 	bmi.w	801f360 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f4ca:	4543      	cmp	r3, r8
 801f4cc:	f6ff af48 	blt.w	801f360 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f4d0:	f11c 0801 	adds.w	r8, ip, #1
 801f4d4:	f53f af44 	bmi.w	801f360 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f4d8:	45c6      	cmp	lr, r8
 801f4da:	f6ff af41 	blt.w	801f360 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f4de:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f4e2:	fa0f f28e 	sxth.w	r2, lr
 801f4e6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f4ea:	9200      	str	r2, [sp, #0]
 801f4ec:	b21b      	sxth	r3, r3
 801f4ee:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f4f0:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801f4f2:	4639      	mov	r1, r7
 801f4f4:	f7ff fc87 	bl	801ee06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f4f8:	e732      	b.n	801f360 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f4fa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f4fc:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f4fe:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f502:	1421      	asrs	r1, r4, #16
 801f504:	1433      	asrs	r3, r6, #16
 801f506:	fb07 1303 	mla	r3, r7, r3, r1
 801f50a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801f50c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f510:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f514:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f518:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f51c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f520:	2a00      	cmp	r2, #0
 801f522:	f000 8107 	beq.w	801f734 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801f526:	684d      	ldr	r5, [r1, #4]
 801f528:	950d      	str	r5, [sp, #52]	@ 0x34
 801f52a:	0e2d      	lsrs	r5, r5, #24
 801f52c:	9514      	str	r5, [sp, #80]	@ 0x50
 801f52e:	b178      	cbz	r0, 801f550 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f530:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f534:	3f01      	subs	r7, #1
 801f536:	00bf      	lsls	r7, r7, #2
 801f538:	3704      	adds	r7, #4
 801f53a:	eb01 0e07 	add.w	lr, r1, r7
 801f53e:	59c9      	ldr	r1, [r1, r7]
 801f540:	9109      	str	r1, [sp, #36]	@ 0x24
 801f542:	0e09      	lsrs	r1, r1, #24
 801f544:	9111      	str	r1, [sp, #68]	@ 0x44
 801f546:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f54a:	910e      	str	r1, [sp, #56]	@ 0x38
 801f54c:	0e09      	lsrs	r1, r1, #24
 801f54e:	9115      	str	r1, [sp, #84]	@ 0x54
 801f550:	b292      	uxth	r2, r2
 801f552:	b280      	uxth	r0, r0
 801f554:	fb02 f900 	mul.w	r9, r2, r0
 801f558:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f55c:	0112      	lsls	r2, r2, #4
 801f55e:	eba2 0e09 	sub.w	lr, r2, r9
 801f562:	b280      	uxth	r0, r0
 801f564:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801f568:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f56a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f56c:	fa1f fe8e 	uxth.w	lr, lr
 801f570:	1a09      	subs	r1, r1, r0
 801f572:	b289      	uxth	r1, r1
 801f574:	fb0e f202 	mul.w	r2, lr, r2
 801f578:	fb01 220c 	mla	r2, r1, ip, r2
 801f57c:	fb00 2205 	mla	r2, r0, r5, r2
 801f580:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f582:	fb09 2205 	mla	r2, r9, r5, r2
 801f586:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f58a:	2a00      	cmp	r2, #0
 801f58c:	f000 80c9 	beq.w	801f722 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f590:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f594:	d019      	beq.n	801f5ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f596:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f59a:	fb0c fa0a 	mul.w	sl, ip, sl
 801f59e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f5a2:	fb0c fc03 	mul.w	ip, ip, r3
 801f5a6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f5aa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f5ae:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f5b2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f5b6:	4453      	add	r3, sl
 801f5b8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f5bc:	0a1b      	lsrs	r3, r3, #8
 801f5be:	0a3f      	lsrs	r7, r7, #8
 801f5c0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f5c4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f5c8:	433b      	orrs	r3, r7
 801f5ca:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f5cc:	2dff      	cmp	r5, #255	@ 0xff
 801f5ce:	d020      	beq.n	801f612 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f5d0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f5d2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f5d6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f5d8:	436f      	muls	r7, r5
 801f5da:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f5dc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f5e0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f5e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f5e6:	fb05 fa0a 	mul.w	sl, r5, sl
 801f5ea:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f5ee:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f5f2:	44bc      	add	ip, r7
 801f5f4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f5f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f5fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f600:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f604:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f608:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f60c:	ea4c 050a 	orr.w	r5, ip, sl
 801f610:	950d      	str	r5, [sp, #52]	@ 0x34
 801f612:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f614:	2dff      	cmp	r5, #255	@ 0xff
 801f616:	d020      	beq.n	801f65a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f618:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f61a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f61e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f620:	436f      	muls	r7, r5
 801f622:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f624:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f628:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f62a:	fb05 fa0c 	mul.w	sl, r5, ip
 801f62e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f632:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f636:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f63a:	44bc      	add	ip, r7
 801f63c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f640:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f644:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f648:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f64c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f650:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f654:	ea4c 050a 	orr.w	r5, ip, sl
 801f658:	9509      	str	r5, [sp, #36]	@ 0x24
 801f65a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f65c:	2dff      	cmp	r5, #255	@ 0xff
 801f65e:	d020      	beq.n	801f6a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f660:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f662:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f666:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f668:	436f      	muls	r7, r5
 801f66a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f66c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f670:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f672:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f676:	fb05 fa0a 	mul.w	sl, r5, sl
 801f67a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f67e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f682:	44bc      	add	ip, r7
 801f684:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f688:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f68c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f690:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f694:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f698:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f69c:	ea4c 050a 	orr.w	r5, ip, sl
 801f6a0:	950e      	str	r5, [sp, #56]	@ 0x38
 801f6a2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f6a4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f6a8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f6aa:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f6ae:	fb0e f707 	mul.w	r7, lr, r7
 801f6b2:	fb01 770c 	mla	r7, r1, ip, r7
 801f6b6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f6ba:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f6bc:	fb00 770c 	mla	r7, r0, ip, r7
 801f6c0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f6c4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f6c6:	fb09 770c 	mla	r7, r9, ip, r7
 801f6ca:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f6ce:	fb0e fe0c 	mul.w	lr, lr, ip
 801f6d2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f6d6:	fb01 e303 	mla	r3, r1, r3, lr
 801f6da:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f6dc:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f6e0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f6e2:	fb00 330a 	mla	r3, r0, sl, r3
 801f6e6:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f6ea:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f6ee:	0a3f      	lsrs	r7, r7, #8
 801f6f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f6f4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f6f8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f6fc:	ea47 070c 	orr.w	r7, r7, ip
 801f700:	2aff      	cmp	r2, #255	@ 0xff
 801f702:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f706:	d11e      	bne.n	801f746 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f708:	097a      	lsrs	r2, r7, #5
 801f70a:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801f70e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f712:	f023 0307 	bic.w	r3, r3, #7
 801f716:	4313      	orrs	r3, r2
 801f718:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f71c:	431f      	orrs	r7, r3
 801f71e:	f8a8 7000 	strh.w	r7, [r8]
 801f722:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f724:	441c      	add	r4, r3
 801f726:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f728:	f108 0802 	add.w	r8, r8, #2
 801f72c:	441e      	add	r6, r3
 801f72e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f732:	e644      	b.n	801f3be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f734:	2800      	cmp	r0, #0
 801f736:	f43f af0b 	beq.w	801f550 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f73a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f73e:	9109      	str	r1, [sp, #36]	@ 0x24
 801f740:	0e09      	lsrs	r1, r1, #24
 801f742:	9111      	str	r1, [sp, #68]	@ 0x44
 801f744:	e704      	b.n	801f550 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f746:	f8b8 1000 	ldrh.w	r1, [r8]
 801f74a:	43d2      	mvns	r2, r2
 801f74c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f750:	fa5f fe82 	uxtb.w	lr, r2
 801f754:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f758:	fb0c fc0e 	mul.w	ip, ip, lr
 801f75c:	10c8      	asrs	r0, r1, #3
 801f75e:	00ca      	lsls	r2, r1, #3
 801f760:	f10c 0101 	add.w	r1, ip, #1
 801f764:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f768:	0c39      	lsrs	r1, r7, #16
 801f76a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f76e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f772:	4911      	ldr	r1, [pc, #68]	@ (801f7b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f774:	fb00 f00e 	mul.w	r0, r0, lr
 801f778:	fa5f fc8c 	uxtb.w	ip, ip
 801f77c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f780:	b2d2      	uxtb	r2, r2
 801f782:	1c41      	adds	r1, r0, #1
 801f784:	fb02 f20e 	mul.w	r2, r2, lr
 801f788:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f78c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f790:	1c51      	adds	r1, r2, #1
 801f792:	00c0      	lsls	r0, r0, #3
 801f794:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f798:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f79c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f7a0:	ea4c 0c00 	orr.w	ip, ip, r0
 801f7a4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f7a8:	ea47 0c0c 	orr.w	ip, r7, ip
 801f7ac:	f8a8 c000 	strh.w	ip, [r8]
 801f7b0:	e7b7      	b.n	801f722 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f7b2:	b01b      	add	sp, #108	@ 0x6c
 801f7b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f7b8:	fffff800 	.word	0xfffff800

0801f7bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f7bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f7c0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801f7c4:	2d00      	cmp	r5, #0
 801f7c6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f7ca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801f7ce:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801f7d2:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801f7d6:	fb05 0e03 	mla	lr, r5, r3, r0
 801f7da:	f2c0 808c 	blt.w	801f8f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f7de:	45a9      	cmp	r9, r5
 801f7e0:	f340 8089 	ble.w	801f8f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f7e4:	2800      	cmp	r0, #0
 801f7e6:	f2c0 8084 	blt.w	801f8f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f7ea:	4580      	cmp	r8, r0
 801f7ec:	f340 8081 	ble.w	801f8f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f7f0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f7f4:	f01e 0f01 	tst.w	lr, #1
 801f7f8:	5d16      	ldrb	r6, [r2, r4]
 801f7fa:	bf0c      	ite	eq
 801f7fc:	f006 060f 	andeq.w	r6, r6, #15
 801f800:	1136      	asrne	r6, r6, #4
 801f802:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f806:	b2f6      	uxtb	r6, r6
 801f808:	1c44      	adds	r4, r0, #1
 801f80a:	d477      	bmi.n	801f8fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f80c:	45a0      	cmp	r8, r4
 801f80e:	dd75      	ble.n	801f8fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f810:	2f00      	cmp	r7, #0
 801f812:	d075      	beq.n	801f900 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f814:	f10e 0a01 	add.w	sl, lr, #1
 801f818:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f81c:	f01a 0f01 	tst.w	sl, #1
 801f820:	5d14      	ldrb	r4, [r2, r4]
 801f822:	bf0c      	ite	eq
 801f824:	f004 040f 	andeq.w	r4, r4, #15
 801f828:	1124      	asrne	r4, r4, #4
 801f82a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f82e:	b2e4      	uxtb	r4, r4
 801f830:	3501      	adds	r5, #1
 801f832:	d469      	bmi.n	801f908 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f834:	45a9      	cmp	r9, r5
 801f836:	dd67      	ble.n	801f908 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f838:	f1bc 0f00 	cmp.w	ip, #0
 801f83c:	d067      	beq.n	801f90e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f83e:	2800      	cmp	r0, #0
 801f840:	db60      	blt.n	801f904 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f842:	4580      	cmp	r8, r0
 801f844:	dd5e      	ble.n	801f904 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f846:	eb03 090e 	add.w	r9, r3, lr
 801f84a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f84e:	f019 0f01 	tst.w	r9, #1
 801f852:	5d55      	ldrb	r5, [r2, r5]
 801f854:	bf0c      	ite	eq
 801f856:	f005 050f 	andeq.w	r5, r5, #15
 801f85a:	112d      	asrne	r5, r5, #4
 801f85c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f860:	b2ed      	uxtb	r5, r5
 801f862:	3001      	adds	r0, #1
 801f864:	d456      	bmi.n	801f914 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f866:	4580      	cmp	r8, r0
 801f868:	dd54      	ble.n	801f914 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f86a:	2f00      	cmp	r7, #0
 801f86c:	d054      	beq.n	801f918 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f86e:	3301      	adds	r3, #1
 801f870:	449e      	add	lr, r3
 801f872:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f876:	f01e 0f01 	tst.w	lr, #1
 801f87a:	5cd0      	ldrb	r0, [r2, r3]
 801f87c:	bf0c      	ite	eq
 801f87e:	f000 000f 	andeq.w	r0, r0, #15
 801f882:	1100      	asrne	r0, r0, #4
 801f884:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f888:	b2c3      	uxtb	r3, r0
 801f88a:	b2ba      	uxth	r2, r7
 801f88c:	fa1f fc8c 	uxth.w	ip, ip
 801f890:	fb02 f00c 	mul.w	r0, r2, ip
 801f894:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f898:	0112      	lsls	r2, r2, #4
 801f89a:	fa1f fc8c 	uxth.w	ip, ip
 801f89e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801f8a2:	1a12      	subs	r2, r2, r0
 801f8a4:	eba7 070c 	sub.w	r7, r7, ip
 801f8a8:	b292      	uxth	r2, r2
 801f8aa:	b2bf      	uxth	r7, r7
 801f8ac:	4362      	muls	r2, r4
 801f8ae:	fb06 2207 	mla	r2, r6, r7, r2
 801f8b2:	fb0c 2505 	mla	r5, ip, r5, r2
 801f8b6:	fb00 5303 	mla	r3, r0, r3, r5
 801f8ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f8be:	b1b3      	cbz	r3, 801f8ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f8c0:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801f8c4:	435a      	muls	r2, r3
 801f8c6:	1c53      	adds	r3, r2, #1
 801f8c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f8cc:	4a2d      	ldr	r2, [pc, #180]	@ (801f984 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f8ce:	121b      	asrs	r3, r3, #8
 801f8d0:	6812      	ldr	r2, [r2, #0]
 801f8d2:	2bff      	cmp	r3, #255	@ 0xff
 801f8d4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f8d8:	d120      	bne.n	801f91c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f8da:	4b2b      	ldr	r3, [pc, #172]	@ (801f988 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f8dc:	0950      	lsrs	r0, r2, #5
 801f8de:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f8e2:	4033      	ands	r3, r6
 801f8e4:	4318      	orrs	r0, r3
 801f8e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f8ea:	4302      	orrs	r2, r0
 801f8ec:	800a      	strh	r2, [r1, #0]
 801f8ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f8f2:	2600      	movs	r6, #0
 801f8f4:	e788      	b.n	801f808 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f8f6:	2400      	movs	r4, #0
 801f8f8:	4626      	mov	r6, r4
 801f8fa:	e799      	b.n	801f830 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f8fc:	2400      	movs	r4, #0
 801f8fe:	e797      	b.n	801f830 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f900:	463c      	mov	r4, r7
 801f902:	e795      	b.n	801f830 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f904:	2500      	movs	r5, #0
 801f906:	e7ac      	b.n	801f862 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f908:	2300      	movs	r3, #0
 801f90a:	461d      	mov	r5, r3
 801f90c:	e7bd      	b.n	801f88a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f90e:	4663      	mov	r3, ip
 801f910:	4665      	mov	r5, ip
 801f912:	e7ba      	b.n	801f88a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f914:	2300      	movs	r3, #0
 801f916:	e7b8      	b.n	801f88a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f918:	463b      	mov	r3, r7
 801f91a:	e7b6      	b.n	801f88a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f91c:	880d      	ldrh	r5, [r1, #0]
 801f91e:	b29f      	uxth	r7, r3
 801f920:	122c      	asrs	r4, r5, #8
 801f922:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f926:	43db      	mvns	r3, r3
 801f928:	b2db      	uxtb	r3, r3
 801f92a:	fb10 f007 	smulbb	r0, r0, r7
 801f92e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f932:	fb04 0403 	mla	r4, r4, r3, r0
 801f936:	b2f6      	uxtb	r6, r6
 801f938:	10e8      	asrs	r0, r5, #3
 801f93a:	b2d2      	uxtb	r2, r2
 801f93c:	00ed      	lsls	r5, r5, #3
 801f93e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f942:	fb12 f207 	smulbb	r2, r2, r7
 801f946:	fb16 f607 	smulbb	r6, r6, r7
 801f94a:	b2ed      	uxtb	r5, r5
 801f94c:	b2a4      	uxth	r4, r4
 801f94e:	fb00 6603 	mla	r6, r0, r3, r6
 801f952:	fb05 2303 	mla	r3, r5, r3, r2
 801f956:	b29a      	uxth	r2, r3
 801f958:	1c63      	adds	r3, r4, #1
 801f95a:	b2b0      	uxth	r0, r6
 801f95c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f960:	1c53      	adds	r3, r2, #1
 801f962:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f966:	1c42      	adds	r2, r0, #1
 801f968:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f96c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f970:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f974:	0940      	lsrs	r0, r0, #5
 801f976:	4323      	orrs	r3, r4
 801f978:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f97c:	4303      	orrs	r3, r0
 801f97e:	800b      	strh	r3, [r1, #0]
 801f980:	e7b5      	b.n	801f8ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f982:	bf00      	nop
 801f984:	2001400c 	.word	0x2001400c
 801f988:	00fff800 	.word	0x00fff800

0801f98c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f98c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f990:	b097      	sub	sp, #92	@ 0x5c
 801f992:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801f996:	9214      	str	r2, [sp, #80]	@ 0x50
 801f998:	9309      	str	r3, [sp, #36]	@ 0x24
 801f99a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f99c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f9a0:	910d      	str	r1, [sp, #52]	@ 0x34
 801f9a2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f9a4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801f9a8:	9015      	str	r0, [sp, #84]	@ 0x54
 801f9aa:	6850      	ldr	r0, [r2, #4]
 801f9ac:	6812      	ldr	r2, [r2, #0]
 801f9ae:	fb00 1303 	mla	r3, r0, r3, r1
 801f9b2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f9b6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f9b8:	689b      	ldr	r3, [r3, #8]
 801f9ba:	3301      	adds	r3, #1
 801f9bc:	f023 0301 	bic.w	r3, r3, #1
 801f9c0:	930a      	str	r3, [sp, #40]	@ 0x28
 801f9c2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f9c4:	681f      	ldr	r7, [r3, #0]
 801f9c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f9c8:	2b00      	cmp	r3, #0
 801f9ca:	dc03      	bgt.n	801f9d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f9cc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f9ce:	2b00      	cmp	r3, #0
 801f9d0:	f340 8287 	ble.w	801fee2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f9d4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f9d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f9da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f9de:	1e48      	subs	r0, r1, #1
 801f9e0:	f102 3cff 	add.w	ip, r2, #4294967295
 801f9e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f9e6:	2b00      	cmp	r3, #0
 801f9e8:	f340 80c4 	ble.w	801fb74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f9ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f9f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f9f4:	d406      	bmi.n	801fa04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f9f6:	4586      	cmp	lr, r0
 801f9f8:	da04      	bge.n	801fa04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f9fa:	2b00      	cmp	r3, #0
 801f9fc:	db02      	blt.n	801fa04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f9fe:	4563      	cmp	r3, ip
 801fa00:	f2c0 80b9 	blt.w	801fb76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801fa04:	f11e 0e01 	adds.w	lr, lr, #1
 801fa08:	f100 80aa 	bmi.w	801fb60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fa0c:	4571      	cmp	r1, lr
 801fa0e:	f2c0 80a7 	blt.w	801fb60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fa12:	3301      	adds	r3, #1
 801fa14:	f100 80a4 	bmi.w	801fb60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fa18:	429a      	cmp	r2, r3
 801fa1a:	f2c0 80a1 	blt.w	801fb60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fa1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fa20:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801fa24:	930e      	str	r3, [sp, #56]	@ 0x38
 801fa26:	46c8      	mov	r8, r9
 801fa28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fa2a:	2b00      	cmp	r3, #0
 801fa2c:	f340 80c3 	ble.w	801fbb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fa30:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fa32:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fa36:	1423      	asrs	r3, r4, #16
 801fa38:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fa3c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fa40:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fa44:	f100 814d 	bmi.w	801fce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa48:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fa4c:	455b      	cmp	r3, fp
 801fa4e:	f280 8148 	bge.w	801fce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa52:	2800      	cmp	r0, #0
 801fa54:	f2c0 8145 	blt.w	801fce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa58:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fa5c:	4558      	cmp	r0, fp
 801fa5e:	f280 8140 	bge.w	801fce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa62:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801fa64:	fb00 3305 	mla	r3, r0, r5, r3
 801fa68:	0858      	lsrs	r0, r3, #1
 801fa6a:	07dd      	lsls	r5, r3, #31
 801fa6c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fa70:	bf54      	ite	pl
 801fa72:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fa76:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fa7a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fa7e:	fa5f fc8c 	uxtb.w	ip, ip
 801fa82:	2a00      	cmp	r2, #0
 801fa84:	f000 80db 	beq.w	801fc3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801fa88:	1c58      	adds	r0, r3, #1
 801fa8a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fa8e:	07c0      	lsls	r0, r0, #31
 801fa90:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fa94:	bf54      	ite	pl
 801fa96:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fa9a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fa9e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801faa2:	fa5f f08e 	uxtb.w	r0, lr
 801faa6:	9010      	str	r0, [sp, #64]	@ 0x40
 801faa8:	b1c9      	cbz	r1, 801fade <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801faaa:	4453      	add	r3, sl
 801faac:	0858      	lsrs	r0, r3, #1
 801faae:	07dd      	lsls	r5, r3, #31
 801fab0:	5c38      	ldrb	r0, [r7, r0]
 801fab2:	bf54      	ite	pl
 801fab4:	f000 000f 	andpl.w	r0, r0, #15
 801fab8:	1100      	asrmi	r0, r0, #4
 801faba:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fabe:	3301      	adds	r3, #1
 801fac0:	b2c0      	uxtb	r0, r0
 801fac2:	900b      	str	r0, [sp, #44]	@ 0x2c
 801fac4:	0858      	lsrs	r0, r3, #1
 801fac6:	07dd      	lsls	r5, r3, #31
 801fac8:	f817 e000 	ldrb.w	lr, [r7, r0]
 801facc:	bf54      	ite	pl
 801face:	f00e 030f 	andpl.w	r3, lr, #15
 801fad2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801fad6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fada:	b2db      	uxtb	r3, r3
 801fadc:	9311      	str	r3, [sp, #68]	@ 0x44
 801fade:	b292      	uxth	r2, r2
 801fae0:	b289      	uxth	r1, r1
 801fae2:	fb02 f301 	mul.w	r3, r2, r1
 801fae6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801faea:	0112      	lsls	r2, r2, #4
 801faec:	b289      	uxth	r1, r1
 801faee:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801faf2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801faf4:	1ad2      	subs	r2, r2, r3
 801faf6:	1a40      	subs	r0, r0, r1
 801faf8:	b292      	uxth	r2, r2
 801fafa:	436a      	muls	r2, r5
 801fafc:	b280      	uxth	r0, r0
 801fafe:	fb0c 2c00 	mla	ip, ip, r0, r2
 801fb02:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801fb04:	fb01 c102 	mla	r1, r1, r2, ip
 801fb08:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801fb0a:	fb03 1302 	mla	r3, r3, r2, r1
 801fb0e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb12:	b1db      	cbz	r3, 801fb4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fb14:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fb16:	4353      	muls	r3, r2
 801fb18:	1c5a      	adds	r2, r3, #1
 801fb1a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fb1e:	4ac6      	ldr	r2, [pc, #792]	@ (801fe38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fb20:	121b      	asrs	r3, r3, #8
 801fb22:	6812      	ldr	r2, [r2, #0]
 801fb24:	2bff      	cmp	r3, #255	@ 0xff
 801fb26:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fb2a:	f040 8099 	bne.w	801fc60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801fb2e:	0953      	lsrs	r3, r2, #5
 801fb30:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fb34:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fb38:	f02c 0c07 	bic.w	ip, ip, #7
 801fb3c:	ea43 0c0c 	orr.w	ip, r3, ip
 801fb40:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb44:	ea4c 0202 	orr.w	r2, ip, r2
 801fb48:	f8a8 2000 	strh.w	r2, [r8]
 801fb4c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fb4e:	441c      	add	r4, r3
 801fb50:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fb52:	441e      	add	r6, r3
 801fb54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fb56:	3b01      	subs	r3, #1
 801fb58:	f108 0802 	add.w	r8, r8, #2
 801fb5c:	930e      	str	r3, [sp, #56]	@ 0x38
 801fb5e:	e763      	b.n	801fa28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fb60:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fb62:	441c      	add	r4, r3
 801fb64:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fb66:	441e      	add	r6, r3
 801fb68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fb6a:	3b01      	subs	r3, #1
 801fb6c:	9309      	str	r3, [sp, #36]	@ 0x24
 801fb6e:	f109 0902 	add.w	r9, r9, #2
 801fb72:	e737      	b.n	801f9e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fb74:	d024      	beq.n	801fbc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fb76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fb78:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801fb7a:	3b01      	subs	r3, #1
 801fb7c:	fb00 4003 	mla	r0, r0, r3, r4
 801fb80:	1400      	asrs	r0, r0, #16
 801fb82:	f53f af4c 	bmi.w	801fa1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fb86:	3901      	subs	r1, #1
 801fb88:	4288      	cmp	r0, r1
 801fb8a:	f6bf af48 	bge.w	801fa1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fb8e:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801fb90:	fb01 6303 	mla	r3, r1, r3, r6
 801fb94:	141b      	asrs	r3, r3, #16
 801fb96:	f53f af42 	bmi.w	801fa1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fb9a:	3a01      	subs	r2, #1
 801fb9c:	4293      	cmp	r3, r2
 801fb9e:	f6bf af3e 	bge.w	801fa1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fba2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801fba6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801fbaa:	930e      	str	r3, [sp, #56]	@ 0x38
 801fbac:	46c8      	mov	r8, r9
 801fbae:	f1bb 0f00 	cmp.w	fp, #0
 801fbb2:	f300 80b7 	bgt.w	801fd24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801fbb6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fbb8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fbbc:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fbc0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fbc2:	2b00      	cmp	r3, #0
 801fbc4:	f340 818d 	ble.w	801fee2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fbc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fbcc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fbd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fbd4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fbd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fbda:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fbde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fbe2:	eef0 6a62 	vmov.f32	s13, s5
 801fbe6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fbea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fbf2:	ee16 4a90 	vmov	r4, s13
 801fbf6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fbfa:	eef0 6a43 	vmov.f32	s13, s6
 801fbfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc02:	ee12 2a90 	vmov	r2, s5
 801fc06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc0e:	ee13 2a10 	vmov	r2, s6
 801fc12:	9323      	str	r3, [sp, #140]	@ 0x8c
 801fc14:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc16:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc1a:	9324      	str	r3, [sp, #144]	@ 0x90
 801fc1c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fc1e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801fc20:	3b01      	subs	r3, #1
 801fc22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc26:	930d      	str	r3, [sp, #52]	@ 0x34
 801fc28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc2a:	bf08      	it	eq
 801fc2c:	4613      	moveq	r3, r2
 801fc2e:	ee16 6a90 	vmov	r6, s13
 801fc32:	9309      	str	r3, [sp, #36]	@ 0x24
 801fc34:	eeb0 3a67 	vmov.f32	s6, s15
 801fc38:	eef0 2a47 	vmov.f32	s5, s14
 801fc3c:	e6c3      	b.n	801f9c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fc3e:	2900      	cmp	r1, #0
 801fc40:	f43f af4d 	beq.w	801fade <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fc44:	eb0a 0003 	add.w	r0, sl, r3
 801fc48:	0843      	lsrs	r3, r0, #1
 801fc4a:	07c0      	lsls	r0, r0, #31
 801fc4c:	5cfb      	ldrb	r3, [r7, r3]
 801fc4e:	bf54      	ite	pl
 801fc50:	f003 030f 	andpl.w	r3, r3, #15
 801fc54:	111b      	asrmi	r3, r3, #4
 801fc56:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fc5a:	b2db      	uxtb	r3, r3
 801fc5c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fc5e:	e73e      	b.n	801fade <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fc60:	f8b8 e000 	ldrh.w	lr, [r8]
 801fc64:	fa1f fb83 	uxth.w	fp, r3
 801fc68:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fc6c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fc70:	43db      	mvns	r3, r3
 801fc72:	b2db      	uxtb	r3, r3
 801fc74:	fb11 f10b 	smulbb	r1, r1, fp
 801fc78:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fc7c:	fb00 1003 	mla	r0, r0, r3, r1
 801fc80:	fa5f fc8c 	uxtb.w	ip, ip
 801fc84:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fc88:	b2d2      	uxtb	r2, r2
 801fc8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fc8e:	b280      	uxth	r0, r0
 801fc90:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fc94:	fb1c fc0b 	smulbb	ip, ip, fp
 801fc98:	fa5f fe8e 	uxtb.w	lr, lr
 801fc9c:	fb12 fb0b 	smulbb	fp, r2, fp
 801fca0:	fb01 cc03 	mla	ip, r1, r3, ip
 801fca4:	fb0e bb03 	mla	fp, lr, r3, fp
 801fca8:	1c43      	adds	r3, r0, #1
 801fcaa:	fa1f fc8c 	uxth.w	ip, ip
 801fcae:	fa1f fb8b 	uxth.w	fp, fp
 801fcb2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fcb6:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801fcba:	f10c 0101 	add.w	r1, ip, #1
 801fcbe:	f10b 0001 	add.w	r0, fp, #1
 801fcc2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801fcc6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fcca:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fcce:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fcd2:	4318      	orrs	r0, r3
 801fcd4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801fcd8:	ea40 000c 	orr.w	r0, r0, ip
 801fcdc:	f8a8 0000 	strh.w	r0, [r8]
 801fce0:	e734      	b.n	801fb4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fce2:	f113 0b01 	adds.w	fp, r3, #1
 801fce6:	f53f af31 	bmi.w	801fb4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fcea:	45dc      	cmp	ip, fp
 801fcec:	f6ff af2e 	blt.w	801fb4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fcf0:	f110 0b01 	adds.w	fp, r0, #1
 801fcf4:	f53f af2a 	bmi.w	801fb4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fcf8:	45de      	cmp	lr, fp
 801fcfa:	f6ff af27 	blt.w	801fb4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fcfe:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801fd00:	9302      	str	r3, [sp, #8]
 801fd02:	fa0f f38e 	sxth.w	r3, lr
 801fd06:	9301      	str	r3, [sp, #4]
 801fd08:	fa0f f38c 	sxth.w	r3, ip
 801fd0c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fd10:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801fd14:	9300      	str	r3, [sp, #0]
 801fd16:	463a      	mov	r2, r7
 801fd18:	4653      	mov	r3, sl
 801fd1a:	4641      	mov	r1, r8
 801fd1c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801fd1e:	f7ff fd4d 	bl	801f7bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801fd22:	e713      	b.n	801fb4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fd24:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801fd26:	1422      	asrs	r2, r4, #16
 801fd28:	1433      	asrs	r3, r6, #16
 801fd2a:	fb05 2303 	mla	r3, r5, r3, r2
 801fd2e:	085a      	lsrs	r2, r3, #1
 801fd30:	07dd      	lsls	r5, r3, #31
 801fd32:	5cba      	ldrb	r2, [r7, r2]
 801fd34:	bf54      	ite	pl
 801fd36:	f002 020f 	andpl.w	r2, r2, #15
 801fd3a:	1112      	asrmi	r2, r2, #4
 801fd3c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fd40:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801fd44:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fd48:	b2d2      	uxtb	r2, r2
 801fd4a:	2900      	cmp	r1, #0
 801fd4c:	d076      	beq.n	801fe3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801fd4e:	f103 0e01 	add.w	lr, r3, #1
 801fd52:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801fd56:	f01e 0f01 	tst.w	lr, #1
 801fd5a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fd5e:	bf0c      	ite	eq
 801fd60:	f00c 0c0f 	andeq.w	ip, ip, #15
 801fd64:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801fd68:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fd6c:	fa5f f58c 	uxtb.w	r5, ip
 801fd70:	9512      	str	r5, [sp, #72]	@ 0x48
 801fd72:	b300      	cbz	r0, 801fdb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fd74:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801fd76:	442b      	add	r3, r5
 801fd78:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fd7c:	07dd      	lsls	r5, r3, #31
 801fd7e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fd82:	bf54      	ite	pl
 801fd84:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fd88:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fd8c:	3301      	adds	r3, #1
 801fd8e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fd92:	fa5f f58c 	uxtb.w	r5, ip
 801fd96:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fd9a:	950c      	str	r5, [sp, #48]	@ 0x30
 801fd9c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fda0:	07dd      	lsls	r5, r3, #31
 801fda2:	bf54      	ite	pl
 801fda4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fda8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fdac:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fdb0:	fa5f f38c 	uxtb.w	r3, ip
 801fdb4:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fdb6:	b289      	uxth	r1, r1
 801fdb8:	b280      	uxth	r0, r0
 801fdba:	fb01 f300 	mul.w	r3, r1, r0
 801fdbe:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801fdc2:	0109      	lsls	r1, r1, #4
 801fdc4:	b280      	uxth	r0, r0
 801fdc6:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801fdca:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fdcc:	1ac9      	subs	r1, r1, r3
 801fdce:	ebac 0c00 	sub.w	ip, ip, r0
 801fdd2:	b289      	uxth	r1, r1
 801fdd4:	4369      	muls	r1, r5
 801fdd6:	fa1f fc8c 	uxth.w	ip, ip
 801fdda:	fb02 120c 	mla	r2, r2, ip, r1
 801fdde:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801fde0:	fb00 2001 	mla	r0, r0, r1, r2
 801fde4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801fde6:	fb03 0302 	mla	r3, r3, r2, r0
 801fdea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fdee:	b1d3      	cbz	r3, 801fe26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801fdf0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fdf2:	4353      	muls	r3, r2
 801fdf4:	1c5a      	adds	r2, r3, #1
 801fdf6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fdfa:	4a0f      	ldr	r2, [pc, #60]	@ (801fe38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fdfc:	121b      	asrs	r3, r3, #8
 801fdfe:	6812      	ldr	r2, [r2, #0]
 801fe00:	2bff      	cmp	r3, #255	@ 0xff
 801fe02:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fe06:	d12d      	bne.n	801fe64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fe08:	0953      	lsrs	r3, r2, #5
 801fe0a:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fe0e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fe12:	f02c 0c07 	bic.w	ip, ip, #7
 801fe16:	ea43 0c0c 	orr.w	ip, r3, ip
 801fe1a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe1e:	ea4c 0202 	orr.w	r2, ip, r2
 801fe22:	f8a8 2000 	strh.w	r2, [r8]
 801fe26:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fe28:	441c      	add	r4, r3
 801fe2a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe2c:	f108 0802 	add.w	r8, r8, #2
 801fe30:	441e      	add	r6, r3
 801fe32:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fe36:	e6ba      	b.n	801fbae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801fe38:	2001400c 	.word	0x2001400c
 801fe3c:	2800      	cmp	r0, #0
 801fe3e:	d0ba      	beq.n	801fdb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fe40:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801fe42:	442b      	add	r3, r5
 801fe44:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fe48:	07db      	lsls	r3, r3, #31
 801fe4a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fe4e:	bf54      	ite	pl
 801fe50:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fe54:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fe58:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fe5c:	fa5f f38c 	uxtb.w	r3, ip
 801fe60:	930c      	str	r3, [sp, #48]	@ 0x30
 801fe62:	e7a8      	b.n	801fdb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fe64:	f8b8 e000 	ldrh.w	lr, [r8]
 801fe68:	fa1f fa83 	uxth.w	sl, r3
 801fe6c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fe70:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fe74:	43db      	mvns	r3, r3
 801fe76:	b2db      	uxtb	r3, r3
 801fe78:	fb11 f10a 	smulbb	r1, r1, sl
 801fe7c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fe80:	fb00 1003 	mla	r0, r0, r3, r1
 801fe84:	b2d2      	uxtb	r2, r2
 801fe86:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fe8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fe8e:	fa5f fe8e 	uxtb.w	lr, lr
 801fe92:	fb12 f20a 	smulbb	r2, r2, sl
 801fe96:	fb0e 2203 	mla	r2, lr, r3, r2
 801fe9a:	fa5f fc8c 	uxtb.w	ip, ip
 801fe9e:	b280      	uxth	r0, r0
 801fea0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fea4:	b292      	uxth	r2, r2
 801fea6:	fb1c fc0a 	smulbb	ip, ip, sl
 801feaa:	fb01 cc03 	mla	ip, r1, r3, ip
 801feae:	1c43      	adds	r3, r0, #1
 801feb0:	1c51      	adds	r1, r2, #1
 801feb2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801feb6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801feba:	fa1f fc8c 	uxth.w	ip, ip
 801febe:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fec2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801fec6:	4308      	orrs	r0, r1
 801fec8:	f10c 0101 	add.w	r1, ip, #1
 801fecc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fed0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fed4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801fed8:	ea40 000c 	orr.w	r0, r0, ip
 801fedc:	f8a8 0000 	strh.w	r0, [r8]
 801fee0:	e7a1      	b.n	801fe26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801fee2:	b017      	add	sp, #92	@ 0x5c
 801fee4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fee8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801fee8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801feec:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801fef0:	2d00      	cmp	r5, #0
 801fef2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801fef6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801fefa:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801fefe:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801ff02:	fb05 0e03 	mla	lr, r5, r3, r0
 801ff06:	f2c0 80b0 	blt.w	802006a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ff0a:	45a9      	cmp	r9, r5
 801ff0c:	f340 80ad 	ble.w	802006a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ff10:	2800      	cmp	r0, #0
 801ff12:	f2c0 80a8 	blt.w	8020066 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801ff16:	4580      	cmp	r8, r0
 801ff18:	f340 80a5 	ble.w	8020066 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801ff1c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801ff20:	f01e 0f01 	tst.w	lr, #1
 801ff24:	5d16      	ldrb	r6, [r2, r4]
 801ff26:	bf0c      	ite	eq
 801ff28:	f006 060f 	andeq.w	r6, r6, #15
 801ff2c:	1136      	asrne	r6, r6, #4
 801ff2e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ff32:	b2f6      	uxtb	r6, r6
 801ff34:	1c44      	adds	r4, r0, #1
 801ff36:	f100 809b 	bmi.w	8020070 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801ff3a:	45a0      	cmp	r8, r4
 801ff3c:	f340 8098 	ble.w	8020070 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801ff40:	2f00      	cmp	r7, #0
 801ff42:	f000 8097 	beq.w	8020074 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801ff46:	f10e 0a01 	add.w	sl, lr, #1
 801ff4a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801ff4e:	f01a 0f01 	tst.w	sl, #1
 801ff52:	5d14      	ldrb	r4, [r2, r4]
 801ff54:	bf0c      	ite	eq
 801ff56:	f004 040f 	andeq.w	r4, r4, #15
 801ff5a:	1124      	asrne	r4, r4, #4
 801ff5c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ff60:	b2e4      	uxtb	r4, r4
 801ff62:	3501      	adds	r5, #1
 801ff64:	f100 808a 	bmi.w	802007c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801ff68:	45a9      	cmp	r9, r5
 801ff6a:	f340 8087 	ble.w	802007c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801ff6e:	f1bc 0f00 	cmp.w	ip, #0
 801ff72:	f000 8086 	beq.w	8020082 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801ff76:	2800      	cmp	r0, #0
 801ff78:	db7e      	blt.n	8020078 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801ff7a:	4580      	cmp	r8, r0
 801ff7c:	dd7c      	ble.n	8020078 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801ff7e:	eb03 090e 	add.w	r9, r3, lr
 801ff82:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801ff86:	f019 0f01 	tst.w	r9, #1
 801ff8a:	5d55      	ldrb	r5, [r2, r5]
 801ff8c:	bf0c      	ite	eq
 801ff8e:	f005 050f 	andeq.w	r5, r5, #15
 801ff92:	112d      	asrne	r5, r5, #4
 801ff94:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801ff98:	b2ed      	uxtb	r5, r5
 801ff9a:	3001      	adds	r0, #1
 801ff9c:	d474      	bmi.n	8020088 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ff9e:	4580      	cmp	r8, r0
 801ffa0:	dd72      	ble.n	8020088 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ffa2:	2f00      	cmp	r7, #0
 801ffa4:	d072      	beq.n	802008c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801ffa6:	3301      	adds	r3, #1
 801ffa8:	449e      	add	lr, r3
 801ffaa:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ffae:	f01e 0f01 	tst.w	lr, #1
 801ffb2:	5cd0      	ldrb	r0, [r2, r3]
 801ffb4:	bf0c      	ite	eq
 801ffb6:	f000 000f 	andeq.w	r0, r0, #15
 801ffba:	1100      	asrne	r0, r0, #4
 801ffbc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ffc0:	b2c3      	uxtb	r3, r0
 801ffc2:	b2ba      	uxth	r2, r7
 801ffc4:	fa1f fc8c 	uxth.w	ip, ip
 801ffc8:	fb02 f00c 	mul.w	r0, r2, ip
 801ffcc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801ffd0:	0112      	lsls	r2, r2, #4
 801ffd2:	fa1f fc8c 	uxth.w	ip, ip
 801ffd6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801ffda:	1a12      	subs	r2, r2, r0
 801ffdc:	eba7 070c 	sub.w	r7, r7, ip
 801ffe0:	b292      	uxth	r2, r2
 801ffe2:	b2bf      	uxth	r7, r7
 801ffe4:	4362      	muls	r2, r4
 801ffe6:	fb06 2207 	mla	r2, r6, r7, r2
 801ffea:	fb0c 2505 	mla	r5, ip, r5, r2
 801ffee:	fb00 5303 	mla	r3, r0, r3, r5
 801fff2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fff6:	b3a3      	cbz	r3, 8020062 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801fff8:	4a25      	ldr	r2, [pc, #148]	@ (8020090 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801fffa:	880e      	ldrh	r6, [r1, #0]
 801fffc:	6815      	ldr	r5, [r2, #0]
 801fffe:	1234      	asrs	r4, r6, #8
 8020000:	b29a      	uxth	r2, r3
 8020002:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8020006:	43db      	mvns	r3, r3
 8020008:	b2db      	uxtb	r3, r3
 802000a:	fb10 f002 	smulbb	r0, r0, r2
 802000e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020012:	fb04 0403 	mla	r4, r4, r3, r0
 8020016:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802001a:	10f0      	asrs	r0, r6, #3
 802001c:	b2ed      	uxtb	r5, r5
 802001e:	00f6      	lsls	r6, r6, #3
 8020020:	fb17 f702 	smulbb	r7, r7, r2
 8020024:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020028:	fb15 f202 	smulbb	r2, r5, r2
 802002c:	b2f6      	uxtb	r6, r6
 802002e:	b2a4      	uxth	r4, r4
 8020030:	fb00 7003 	mla	r0, r0, r3, r7
 8020034:	fb06 2303 	mla	r3, r6, r3, r2
 8020038:	b29a      	uxth	r2, r3
 802003a:	1c63      	adds	r3, r4, #1
 802003c:	b280      	uxth	r0, r0
 802003e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020042:	1c53      	adds	r3, r2, #1
 8020044:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020048:	1c42      	adds	r2, r0, #1
 802004a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802004e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020052:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020056:	0940      	lsrs	r0, r0, #5
 8020058:	4323      	orrs	r3, r4
 802005a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802005e:	4303      	orrs	r3, r0
 8020060:	800b      	strh	r3, [r1, #0]
 8020062:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020066:	2600      	movs	r6, #0
 8020068:	e764      	b.n	801ff34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802006a:	2400      	movs	r4, #0
 802006c:	4626      	mov	r6, r4
 802006e:	e778      	b.n	801ff62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020070:	2400      	movs	r4, #0
 8020072:	e776      	b.n	801ff62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020074:	463c      	mov	r4, r7
 8020076:	e774      	b.n	801ff62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020078:	2500      	movs	r5, #0
 802007a:	e78e      	b.n	801ff9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 802007c:	2300      	movs	r3, #0
 802007e:	461d      	mov	r5, r3
 8020080:	e79f      	b.n	801ffc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020082:	4663      	mov	r3, ip
 8020084:	4665      	mov	r5, ip
 8020086:	e79c      	b.n	801ffc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020088:	2300      	movs	r3, #0
 802008a:	e79a      	b.n	801ffc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802008c:	463b      	mov	r3, r7
 802008e:	e798      	b.n	801ffc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020090:	2001400c 	.word	0x2001400c

08020094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020098:	b093      	sub	sp, #76	@ 0x4c
 802009a:	461d      	mov	r5, r3
 802009c:	920c      	str	r2, [sp, #48]	@ 0x30
 802009e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80200a0:	9107      	str	r1, [sp, #28]
 80200a2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80200a6:	9011      	str	r0, [sp, #68]	@ 0x44
 80200a8:	6850      	ldr	r0, [r2, #4]
 80200aa:	6812      	ldr	r2, [r2, #0]
 80200ac:	fb00 1303 	mla	r3, r0, r3, r1
 80200b0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80200b4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80200b6:	689b      	ldr	r3, [r3, #8]
 80200b8:	3301      	adds	r3, #1
 80200ba:	f023 0301 	bic.w	r3, r3, #1
 80200be:	9306      	str	r3, [sp, #24]
 80200c0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80200c2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 80200c6:	681f      	ldr	r7, [r3, #0]
 80200c8:	9b07      	ldr	r3, [sp, #28]
 80200ca:	2b00      	cmp	r3, #0
 80200cc:	dc03      	bgt.n	80200d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80200ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80200d0:	2b00      	cmp	r3, #0
 80200d2:	f340 8267 	ble.w	80205a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80200d6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80200d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80200dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80200e0:	1e48      	subs	r0, r1, #1
 80200e2:	f102 3cff 	add.w	ip, r2, #4294967295
 80200e6:	2d00      	cmp	r5, #0
 80200e8:	f340 80b8 	ble.w	802025c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80200ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80200f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80200f4:	d406      	bmi.n	8020104 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80200f6:	4586      	cmp	lr, r0
 80200f8:	da04      	bge.n	8020104 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80200fa:	2b00      	cmp	r3, #0
 80200fc:	db02      	blt.n	8020104 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80200fe:	4563      	cmp	r3, ip
 8020100:	f2c0 80ad 	blt.w	802025e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8020104:	f11e 0e01 	adds.w	lr, lr, #1
 8020108:	f100 80a0 	bmi.w	802024c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802010c:	4571      	cmp	r1, lr
 802010e:	f2c0 809d 	blt.w	802024c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020112:	3301      	adds	r3, #1
 8020114:	f100 809a 	bmi.w	802024c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020118:	429a      	cmp	r2, r3
 802011a:	f2c0 8097 	blt.w	802024c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802011e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8020122:	9509      	str	r5, [sp, #36]	@ 0x24
 8020124:	46c8      	mov	r8, r9
 8020126:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020128:	2b00      	cmp	r3, #0
 802012a:	f340 80b6 	ble.w	802029a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802012e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8020132:	9308      	str	r3, [sp, #32]
 8020134:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020136:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802013a:	1423      	asrs	r3, r4, #16
 802013c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020140:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020144:	f100 813e 	bmi.w	80203c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020148:	f10c 3bff 	add.w	fp, ip, #4294967295
 802014c:	455b      	cmp	r3, fp
 802014e:	f280 8139 	bge.w	80203c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020152:	2800      	cmp	r0, #0
 8020154:	f2c0 8136 	blt.w	80203c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020158:	f10e 3bff 	add.w	fp, lr, #4294967295
 802015c:	4558      	cmp	r0, fp
 802015e:	f280 8131 	bge.w	80203c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020162:	9a06      	ldr	r2, [sp, #24]
 8020164:	fb00 3302 	mla	r3, r0, r2, r3
 8020168:	0858      	lsrs	r0, r3, #1
 802016a:	07da      	lsls	r2, r3, #31
 802016c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020170:	9a08      	ldr	r2, [sp, #32]
 8020172:	bf54      	ite	pl
 8020174:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020178:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802017c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020180:	fa5f fc8c 	uxtb.w	ip, ip
 8020184:	2a00      	cmp	r2, #0
 8020186:	f000 80cb 	beq.w	8020320 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802018a:	1c58      	adds	r0, r3, #1
 802018c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020190:	07c0      	lsls	r0, r0, #31
 8020192:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020196:	bf54      	ite	pl
 8020198:	f00e 0e0f 	andpl.w	lr, lr, #15
 802019c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80201a0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80201a4:	fa5f fe8e 	uxtb.w	lr, lr
 80201a8:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 80201ac:	b1b9      	cbz	r1, 80201de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80201ae:	4453      	add	r3, sl
 80201b0:	0858      	lsrs	r0, r3, #1
 80201b2:	07da      	lsls	r2, r3, #31
 80201b4:	5c38      	ldrb	r0, [r7, r0]
 80201b6:	bf54      	ite	pl
 80201b8:	f000 000f 	andpl.w	r0, r0, #15
 80201bc:	1100      	asrmi	r0, r0, #4
 80201be:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80201c2:	b2c0      	uxtb	r0, r0
 80201c4:	900a      	str	r0, [sp, #40]	@ 0x28
 80201c6:	1c58      	adds	r0, r3, #1
 80201c8:	0843      	lsrs	r3, r0, #1
 80201ca:	07c2      	lsls	r2, r0, #31
 80201cc:	5cfb      	ldrb	r3, [r7, r3]
 80201ce:	bf54      	ite	pl
 80201d0:	f003 030f 	andpl.w	r3, r3, #15
 80201d4:	111b      	asrmi	r3, r3, #4
 80201d6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80201da:	b2db      	uxtb	r3, r3
 80201dc:	930e      	str	r3, [sp, #56]	@ 0x38
 80201de:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80201e2:	b289      	uxth	r1, r1
 80201e4:	fb02 f301 	mul.w	r3, r2, r1
 80201e8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80201ec:	0112      	lsls	r2, r2, #4
 80201ee:	b289      	uxth	r1, r1
 80201f0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80201f4:	1a40      	subs	r0, r0, r1
 80201f6:	fa1f fe80 	uxth.w	lr, r0
 80201fa:	1ad2      	subs	r2, r2, r3
 80201fc:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80201fe:	b292      	uxth	r2, r2
 8020200:	4342      	muls	r2, r0
 8020202:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8020206:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020208:	fb01 c102 	mla	r1, r1, r2, ip
 802020c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802020e:	fb03 1302 	mla	r3, r3, r2, r1
 8020212:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020216:	2bff      	cmp	r3, #255	@ 0xff
 8020218:	f040 8093 	bne.w	8020342 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802021c:	4bbe      	ldr	r3, [pc, #760]	@ (8020518 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802021e:	681a      	ldr	r2, [r3, #0]
 8020220:	4bbe      	ldr	r3, [pc, #760]	@ (802051c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020222:	0951      	lsrs	r1, r2, #5
 8020224:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020228:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802022c:	430b      	orrs	r3, r1
 802022e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020232:	4313      	orrs	r3, r2
 8020234:	f8a8 3000 	strh.w	r3, [r8]
 8020238:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802023a:	441c      	add	r4, r3
 802023c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802023e:	441e      	add	r6, r3
 8020240:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020242:	3b01      	subs	r3, #1
 8020244:	f108 0802 	add.w	r8, r8, #2
 8020248:	9309      	str	r3, [sp, #36]	@ 0x24
 802024a:	e76c      	b.n	8020126 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802024c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802024e:	441c      	add	r4, r3
 8020250:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020252:	3d01      	subs	r5, #1
 8020254:	441e      	add	r6, r3
 8020256:	f109 0902 	add.w	r9, r9, #2
 802025a:	e744      	b.n	80200e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802025c:	d021      	beq.n	80202a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802025e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020260:	1e6b      	subs	r3, r5, #1
 8020262:	fb00 4003 	mla	r0, r0, r3, r4
 8020266:	1400      	asrs	r0, r0, #16
 8020268:	f53f af59 	bmi.w	802011e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802026c:	3901      	subs	r1, #1
 802026e:	4288      	cmp	r0, r1
 8020270:	f6bf af55 	bge.w	802011e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020274:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8020276:	fb01 6303 	mla	r3, r1, r3, r6
 802027a:	141b      	asrs	r3, r3, #16
 802027c:	f53f af4f 	bmi.w	802011e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020280:	3a01      	subs	r2, #1
 8020282:	4293      	cmp	r3, r2
 8020284:	f6bf af4b 	bge.w	802011e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020288:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802028c:	9308      	str	r3, [sp, #32]
 802028e:	46a8      	mov	r8, r5
 8020290:	46ce      	mov	lr, r9
 8020292:	f1b8 0f00 	cmp.w	r8, #0
 8020296:	f300 80b5 	bgt.w	8020404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802029a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802029e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80202a2:	9b07      	ldr	r3, [sp, #28]
 80202a4:	2b00      	cmp	r3, #0
 80202a6:	f340 817d 	ble.w	80205a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80202aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80202ae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80202b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80202b6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80202b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80202bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80202c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80202c4:	eef0 6a62 	vmov.f32	s13, s5
 80202c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80202cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80202d4:	ee16 4a90 	vmov	r4, s13
 80202d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80202dc:	eef0 6a43 	vmov.f32	s13, s6
 80202e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80202e4:	ee12 2a90 	vmov	r2, s5
 80202e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80202ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80202f0:	ee13 2a10 	vmov	r2, s6
 80202f4:	931f      	str	r3, [sp, #124]	@ 0x7c
 80202f6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80202f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80202fc:	9320      	str	r3, [sp, #128]	@ 0x80
 80202fe:	9b07      	ldr	r3, [sp, #28]
 8020300:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020302:	3b01      	subs	r3, #1
 8020304:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020308:	9307      	str	r3, [sp, #28]
 802030a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802030c:	ee16 6a90 	vmov	r6, s13
 8020310:	bf14      	ite	ne
 8020312:	461d      	movne	r5, r3
 8020314:	4615      	moveq	r5, r2
 8020316:	eeb0 3a67 	vmov.f32	s6, s15
 802031a:	eef0 2a47 	vmov.f32	s5, s14
 802031e:	e6d3      	b.n	80200c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020320:	2900      	cmp	r1, #0
 8020322:	f43f af5c 	beq.w	80201de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020326:	eb0a 0003 	add.w	r0, sl, r3
 802032a:	0843      	lsrs	r3, r0, #1
 802032c:	07c0      	lsls	r0, r0, #31
 802032e:	5cfb      	ldrb	r3, [r7, r3]
 8020330:	bf54      	ite	pl
 8020332:	f003 030f 	andpl.w	r3, r3, #15
 8020336:	111b      	asrmi	r3, r3, #4
 8020338:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802033c:	b2db      	uxtb	r3, r3
 802033e:	930a      	str	r3, [sp, #40]	@ 0x28
 8020340:	e74d      	b.n	80201de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020342:	2b00      	cmp	r3, #0
 8020344:	f43f af78 	beq.w	8020238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020348:	4a73      	ldr	r2, [pc, #460]	@ (8020518 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802034a:	f8b8 c000 	ldrh.w	ip, [r8]
 802034e:	6810      	ldr	r0, [r2, #0]
 8020350:	fa1f fe83 	uxth.w	lr, r3
 8020354:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020358:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802035c:	43db      	mvns	r3, r3
 802035e:	b2db      	uxtb	r3, r3
 8020360:	fb12 f20e 	smulbb	r2, r2, lr
 8020364:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020368:	fb01 2103 	mla	r1, r1, r3, r2
 802036c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020370:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020374:	b2c0      	uxtb	r0, r0
 8020376:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802037a:	fb1b fb0e 	smulbb	fp, fp, lr
 802037e:	b289      	uxth	r1, r1
 8020380:	fb10 fe0e 	smulbb	lr, r0, lr
 8020384:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020388:	fa5f fc8c 	uxtb.w	ip, ip
 802038c:	fb02 b203 	mla	r2, r2, r3, fp
 8020390:	1c48      	adds	r0, r1, #1
 8020392:	fb0c e303 	mla	r3, ip, r3, lr
 8020396:	b292      	uxth	r2, r2
 8020398:	b29b      	uxth	r3, r3
 802039a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802039e:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 80203a2:	f102 0b01 	add.w	fp, r2, #1
 80203a6:	1c59      	adds	r1, r3, #1
 80203a8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80203ac:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80203b0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80203b4:	0952      	lsrs	r2, r2, #5
 80203b6:	4301      	orrs	r1, r0
 80203b8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80203bc:	4311      	orrs	r1, r2
 80203be:	f8a8 1000 	strh.w	r1, [r8]
 80203c2:	e739      	b.n	8020238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80203c4:	f113 0b01 	adds.w	fp, r3, #1
 80203c8:	f53f af36 	bmi.w	8020238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80203cc:	45dc      	cmp	ip, fp
 80203ce:	f6ff af33 	blt.w	8020238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80203d2:	f110 0b01 	adds.w	fp, r0, #1
 80203d6:	f53f af2f 	bmi.w	8020238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80203da:	45de      	cmp	lr, fp
 80203dc:	f6ff af2c 	blt.w	8020238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80203e0:	9a08      	ldr	r2, [sp, #32]
 80203e2:	9302      	str	r3, [sp, #8]
 80203e4:	fa0f f38e 	sxth.w	r3, lr
 80203e8:	9301      	str	r3, [sp, #4]
 80203ea:	fa0f f38c 	sxth.w	r3, ip
 80203ee:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80203f2:	9105      	str	r1, [sp, #20]
 80203f4:	9300      	str	r3, [sp, #0]
 80203f6:	463a      	mov	r2, r7
 80203f8:	4653      	mov	r3, sl
 80203fa:	4641      	mov	r1, r8
 80203fc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80203fe:	f7ff fd73 	bl	801fee8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8020402:	e719      	b.n	8020238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020404:	9906      	ldr	r1, [sp, #24]
 8020406:	1422      	asrs	r2, r4, #16
 8020408:	1433      	asrs	r3, r6, #16
 802040a:	fb01 2303 	mla	r3, r1, r3, r2
 802040e:	085a      	lsrs	r2, r3, #1
 8020410:	07d9      	lsls	r1, r3, #31
 8020412:	5cba      	ldrb	r2, [r7, r2]
 8020414:	bf54      	ite	pl
 8020416:	f002 020f 	andpl.w	r2, r2, #15
 802041a:	1112      	asrmi	r2, r2, #4
 802041c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020420:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020424:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020428:	b2d2      	uxtb	r2, r2
 802042a:	2800      	cmp	r0, #0
 802042c:	d062      	beq.n	80204f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802042e:	f103 0a01 	add.w	sl, r3, #1
 8020432:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8020436:	f01a 0f01 	tst.w	sl, #1
 802043a:	5c79      	ldrb	r1, [r7, r1]
 802043c:	bf0c      	ite	eq
 802043e:	f001 010f 	andeq.w	r1, r1, #15
 8020442:	1109      	asrne	r1, r1, #4
 8020444:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020448:	b2c9      	uxtb	r1, r1
 802044a:	910f      	str	r1, [sp, #60]	@ 0x3c
 802044c:	f1bc 0f00 	cmp.w	ip, #0
 8020450:	d019      	beq.n	8020486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020452:	9908      	ldr	r1, [sp, #32]
 8020454:	440b      	add	r3, r1
 8020456:	0859      	lsrs	r1, r3, #1
 8020458:	f013 0f01 	tst.w	r3, #1
 802045c:	5c79      	ldrb	r1, [r7, r1]
 802045e:	bf0c      	ite	eq
 8020460:	f001 010f 	andeq.w	r1, r1, #15
 8020464:	1109      	asrne	r1, r1, #4
 8020466:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802046a:	b2c9      	uxtb	r1, r1
 802046c:	3301      	adds	r3, #1
 802046e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020470:	0859      	lsrs	r1, r3, #1
 8020472:	07db      	lsls	r3, r3, #31
 8020474:	5c79      	ldrb	r1, [r7, r1]
 8020476:	bf54      	ite	pl
 8020478:	f001 010f 	andpl.w	r1, r1, #15
 802047c:	1109      	asrmi	r1, r1, #4
 802047e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020482:	b2c9      	uxtb	r1, r1
 8020484:	9110      	str	r1, [sp, #64]	@ 0x40
 8020486:	b280      	uxth	r0, r0
 8020488:	fa1f fc8c 	uxth.w	ip, ip
 802048c:	fb00 f30c 	mul.w	r3, r0, ip
 8020490:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020494:	0100      	lsls	r0, r0, #4
 8020496:	fa1f fc8c 	uxth.w	ip, ip
 802049a:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 802049e:	eba1 010c 	sub.w	r1, r1, ip
 80204a2:	fa1f fa81 	uxth.w	sl, r1
 80204a6:	1ac0      	subs	r0, r0, r3
 80204a8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80204aa:	b280      	uxth	r0, r0
 80204ac:	4348      	muls	r0, r1
 80204ae:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80204b0:	fb02 020a 	mla	r2, r2, sl, r0
 80204b4:	fb0c 2c01 	mla	ip, ip, r1, r2
 80204b8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80204ba:	fb03 c302 	mla	r3, r3, r2, ip
 80204be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80204c2:	2bff      	cmp	r3, #255	@ 0xff
 80204c4:	d12c      	bne.n	8020520 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80204c6:	4b14      	ldr	r3, [pc, #80]	@ (8020518 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80204c8:	681a      	ldr	r2, [r3, #0]
 80204ca:	4b14      	ldr	r3, [pc, #80]	@ (802051c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80204cc:	0951      	lsrs	r1, r2, #5
 80204ce:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80204d2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80204d6:	430b      	orrs	r3, r1
 80204d8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80204dc:	4313      	orrs	r3, r2
 80204de:	f8ae 3000 	strh.w	r3, [lr]
 80204e2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80204e4:	441c      	add	r4, r3
 80204e6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80204e8:	f10e 0e02 	add.w	lr, lr, #2
 80204ec:	441e      	add	r6, r3
 80204ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80204f2:	e6ce      	b.n	8020292 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80204f4:	f1bc 0f00 	cmp.w	ip, #0
 80204f8:	d0c5      	beq.n	8020486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80204fa:	9908      	ldr	r1, [sp, #32]
 80204fc:	440b      	add	r3, r1
 80204fe:	0859      	lsrs	r1, r3, #1
 8020500:	07db      	lsls	r3, r3, #31
 8020502:	5c79      	ldrb	r1, [r7, r1]
 8020504:	bf54      	ite	pl
 8020506:	f001 010f 	andpl.w	r1, r1, #15
 802050a:	1109      	asrmi	r1, r1, #4
 802050c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020510:	b2c9      	uxtb	r1, r1
 8020512:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020514:	e7b7      	b.n	8020486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020516:	bf00      	nop
 8020518:	2001400c 	.word	0x2001400c
 802051c:	fffff800 	.word	0xfffff800
 8020520:	2b00      	cmp	r3, #0
 8020522:	d0de      	beq.n	80204e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020524:	4a21      	ldr	r2, [pc, #132]	@ (80205ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8020526:	f8be c000 	ldrh.w	ip, [lr]
 802052a:	6810      	ldr	r0, [r2, #0]
 802052c:	fa1f fa83 	uxth.w	sl, r3
 8020530:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020534:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020538:	43db      	mvns	r3, r3
 802053a:	b2db      	uxtb	r3, r3
 802053c:	fb12 f20a 	smulbb	r2, r2, sl
 8020540:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020544:	fb01 2103 	mla	r1, r1, r3, r2
 8020548:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802054c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020550:	b2c0      	uxtb	r0, r0
 8020552:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020556:	fa5f fc8c 	uxtb.w	ip, ip
 802055a:	fb10 f00a 	smulbb	r0, r0, sl
 802055e:	fb0c 0003 	mla	r0, ip, r3, r0
 8020562:	b289      	uxth	r1, r1
 8020564:	fb1b fb0a 	smulbb	fp, fp, sl
 8020568:	b280      	uxth	r0, r0
 802056a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802056e:	fb02 b203 	mla	r2, r2, r3, fp
 8020572:	1c4b      	adds	r3, r1, #1
 8020574:	f100 0b01 	add.w	fp, r0, #1
 8020578:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802057c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020580:	b292      	uxth	r2, r2
 8020582:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8020586:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802058a:	ea4b 0101 	orr.w	r1, fp, r1
 802058e:	f102 0b01 	add.w	fp, r2, #1
 8020592:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020596:	0952      	lsrs	r2, r2, #5
 8020598:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802059c:	4311      	orrs	r1, r2
 802059e:	f8ae 1000 	strh.w	r1, [lr]
 80205a2:	e79e      	b.n	80204e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80205a4:	b013      	add	sp, #76	@ 0x4c
 80205a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80205aa:	bf00      	nop
 80205ac:	2001400c 	.word	0x2001400c

080205b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80205b0:	b570      	push	{r4, r5, r6, lr}
 80205b2:	1208      	asrs	r0, r1, #8
 80205b4:	b29e      	uxth	r6, r3
 80205b6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80205ba:	1213      	asrs	r3, r2, #8
 80205bc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80205c0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80205c4:	fb13 f305 	smulbb	r3, r3, r5
 80205c8:	fb10 f006 	smulbb	r0, r0, r6
 80205cc:	4418      	add	r0, r3
 80205ce:	10cc      	asrs	r4, r1, #3
 80205d0:	10d3      	asrs	r3, r2, #3
 80205d2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80205d6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80205da:	fb13 f305 	smulbb	r3, r3, r5
 80205de:	fb14 f406 	smulbb	r4, r4, r6
 80205e2:	00c9      	lsls	r1, r1, #3
 80205e4:	00d2      	lsls	r2, r2, #3
 80205e6:	441c      	add	r4, r3
 80205e8:	b2d2      	uxtb	r2, r2
 80205ea:	b2cb      	uxtb	r3, r1
 80205ec:	fb12 f205 	smulbb	r2, r2, r5
 80205f0:	b280      	uxth	r0, r0
 80205f2:	fb13 f306 	smulbb	r3, r3, r6
 80205f6:	4413      	add	r3, r2
 80205f8:	1c42      	adds	r2, r0, #1
 80205fa:	b29b      	uxth	r3, r3
 80205fc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020600:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8020604:	1c58      	adds	r0, r3, #1
 8020606:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802060a:	b2a4      	uxth	r4, r4
 802060c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020610:	4310      	orrs	r0, r2
 8020612:	1c62      	adds	r2, r4, #1
 8020614:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020618:	0964      	lsrs	r4, r4, #5
 802061a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802061e:	4320      	orrs	r0, r4
 8020620:	bd70      	pop	{r4, r5, r6, pc}
	...

08020624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8020624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020628:	b08f      	sub	sp, #60	@ 0x3c
 802062a:	461c      	mov	r4, r3
 802062c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020630:	9004      	str	r0, [sp, #16]
 8020632:	460d      	mov	r5, r1
 8020634:	4616      	mov	r6, r2
 8020636:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020638:	2f00      	cmp	r7, #0
 802063a:	f000 80f6 	beq.w	802082a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802063e:	6820      	ldr	r0, [r4, #0]
 8020640:	6861      	ldr	r1, [r4, #4]
 8020642:	aa0a      	add	r2, sp, #40	@ 0x28
 8020644:	c203      	stmia	r2!, {r0, r1}
 8020646:	6818      	ldr	r0, [r3, #0]
 8020648:	6859      	ldr	r1, [r3, #4]
 802064a:	aa0c      	add	r2, sp, #48	@ 0x30
 802064c:	c203      	stmia	r2!, {r0, r1}
 802064e:	a80a      	add	r0, sp, #40	@ 0x28
 8020650:	f7ee fdda 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020654:	4621      	mov	r1, r4
 8020656:	a80c      	add	r0, sp, #48	@ 0x30
 8020658:	f7ee fdfe 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802065c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020660:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8020664:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8020668:	f002 0301 	and.w	r3, r2, #1
 802066c:	9306      	str	r3, [sp, #24]
 802066e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020672:	f003 0101 	and.w	r1, r3, #1
 8020676:	9105      	str	r1, [sp, #20]
 8020678:	9805      	ldr	r0, [sp, #20]
 802067a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802067e:	4403      	add	r3, r0
 8020680:	fb01 2303 	mla	r3, r1, r3, r2
 8020684:	f04f 0802 	mov.w	r8, #2
 8020688:	fb93 f3f8 	sdiv	r3, r3, r8
 802068c:	441d      	add	r5, r3
 802068e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020692:	441a      	add	r2, r3
 8020694:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020698:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802069c:	4419      	add	r1, r3
 802069e:	4b64      	ldr	r3, [pc, #400]	@ (8020830 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80206a0:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80206a4:	6818      	ldr	r0, [r3, #0]
 80206a6:	6803      	ldr	r3, [r0, #0]
 80206a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80206aa:	4798      	blx	r3
 80206ac:	4a61      	ldr	r2, [pc, #388]	@ (8020834 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80206ae:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80206b2:	8813      	ldrh	r3, [r2, #0]
 80206b4:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 80206b8:	2fff      	cmp	r7, #255	@ 0xff
 80206ba:	fb03 a404 	mla	r4, r3, r4, sl
 80206be:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80206c2:	f106 0604 	add.w	r6, r6, #4
 80206c6:	4611      	mov	r1, r2
 80206c8:	fb03 fb0b 	mul.w	fp, r3, fp
 80206cc:	d06b      	beq.n	80207a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80206ce:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 80206d2:	9303      	str	r3, [sp, #12]
 80206d4:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80206d8:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80206dc:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80206e0:	9b07      	ldr	r3, [sp, #28]
 80206e2:	42a3      	cmp	r3, r4
 80206e4:	f240 809c 	bls.w	8020820 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80206e8:	9b06      	ldr	r3, [sp, #24]
 80206ea:	2b00      	cmp	r3, #0
 80206ec:	d039      	beq.n	8020762 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80206ee:	782b      	ldrb	r3, [r5, #0]
 80206f0:	8822      	ldrh	r2, [r4, #0]
 80206f2:	9804      	ldr	r0, [sp, #16]
 80206f4:	f003 030f 	and.w	r3, r3, #15
 80206f8:	f105 0801 	add.w	r8, r5, #1
 80206fc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020700:	9b03      	ldr	r3, [sp, #12]
 8020702:	9300      	str	r3, [sp, #0]
 8020704:	463b      	mov	r3, r7
 8020706:	f7ff ff53 	bl	80205b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802070a:	f824 0b02 	strh.w	r0, [r4], #2
 802070e:	f109 3bff 	add.w	fp, r9, #4294967295
 8020712:	f1bb 0f01 	cmp.w	fp, #1
 8020716:	46a2      	mov	sl, r4
 8020718:	f104 0404 	add.w	r4, r4, #4
 802071c:	dd24      	ble.n	8020768 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802071e:	f898 3000 	ldrb.w	r3, [r8]
 8020722:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020726:	9804      	ldr	r0, [sp, #16]
 8020728:	091b      	lsrs	r3, r3, #4
 802072a:	f1ab 0b02 	sub.w	fp, fp, #2
 802072e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020732:	9b03      	ldr	r3, [sp, #12]
 8020734:	9300      	str	r3, [sp, #0]
 8020736:	463b      	mov	r3, r7
 8020738:	f7ff ff3a 	bl	80205b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802073c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020740:	f818 3b01 	ldrb.w	r3, [r8], #1
 8020744:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020748:	9804      	ldr	r0, [sp, #16]
 802074a:	f003 030f 	and.w	r3, r3, #15
 802074e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020752:	9b03      	ldr	r3, [sp, #12]
 8020754:	9300      	str	r3, [sp, #0]
 8020756:	463b      	mov	r3, r7
 8020758:	f7ff ff2a 	bl	80205b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802075c:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020760:	e7d7      	b.n	8020712 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8020762:	46a8      	mov	r8, r5
 8020764:	46cb      	mov	fp, r9
 8020766:	e7d4      	b.n	8020712 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8020768:	d10e      	bne.n	8020788 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802076a:	f898 3000 	ldrb.w	r3, [r8]
 802076e:	f8ba 2000 	ldrh.w	r2, [sl]
 8020772:	9804      	ldr	r0, [sp, #16]
 8020774:	091b      	lsrs	r3, r3, #4
 8020776:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802077a:	9b03      	ldr	r3, [sp, #12]
 802077c:	9300      	str	r3, [sp, #0]
 802077e:	463b      	mov	r3, r7
 8020780:	f7ff ff16 	bl	80205b0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020784:	f82a 0b02 	strh.w	r0, [sl], #2
 8020788:	9b08      	ldr	r3, [sp, #32]
 802078a:	9a05      	ldr	r2, [sp, #20]
 802078c:	881c      	ldrh	r4, [r3, #0]
 802078e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020792:	eba4 0409 	sub.w	r4, r4, r9
 8020796:	4413      	add	r3, r2
 8020798:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 802079c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802079e:	fb93 f3f2 	sdiv	r3, r3, r2
 80207a2:	441d      	add	r5, r3
 80207a4:	e79c      	b.n	80206e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80207a6:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80207aa:	45a3      	cmp	fp, r4
 80207ac:	d938      	bls.n	8020820 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80207ae:	9b06      	ldr	r3, [sp, #24]
 80207b0:	b1f3      	cbz	r3, 80207f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80207b2:	782b      	ldrb	r3, [r5, #0]
 80207b4:	f003 030f 	and.w	r3, r3, #15
 80207b8:	1c6a      	adds	r2, r5, #1
 80207ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80207be:	8023      	strh	r3, [r4, #0]
 80207c0:	f109 30ff 	add.w	r0, r9, #4294967295
 80207c4:	3402      	adds	r4, #2
 80207c6:	2801      	cmp	r0, #1
 80207c8:	4623      	mov	r3, r4
 80207ca:	f104 0404 	add.w	r4, r4, #4
 80207ce:	dd12      	ble.n	80207f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80207d0:	7813      	ldrb	r3, [r2, #0]
 80207d2:	091b      	lsrs	r3, r3, #4
 80207d4:	3802      	subs	r0, #2
 80207d6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80207da:	f824 3c04 	strh.w	r3, [r4, #-4]
 80207de:	f812 3b01 	ldrb.w	r3, [r2], #1
 80207e2:	f003 030f 	and.w	r3, r3, #15
 80207e6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80207ea:	f824 3c02 	strh.w	r3, [r4, #-2]
 80207ee:	e7ea      	b.n	80207c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80207f0:	462a      	mov	r2, r5
 80207f2:	4648      	mov	r0, r9
 80207f4:	e7e7      	b.n	80207c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80207f6:	d106      	bne.n	8020806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80207f8:	7812      	ldrb	r2, [r2, #0]
 80207fa:	0912      	lsrs	r2, r2, #4
 80207fc:	3302      	adds	r3, #2
 80207fe:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020802:	f823 2c02 	strh.w	r2, [r3, #-2]
 8020806:	880c      	ldrh	r4, [r1, #0]
 8020808:	9a05      	ldr	r2, [sp, #20]
 802080a:	eba4 0409 	sub.w	r4, r4, r9
 802080e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8020812:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020816:	4413      	add	r3, r2
 8020818:	fb93 f3f8 	sdiv	r3, r3, r8
 802081c:	441d      	add	r5, r3
 802081e:	e7c4      	b.n	80207aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8020820:	4b03      	ldr	r3, [pc, #12]	@ (8020830 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020822:	6818      	ldr	r0, [r3, #0]
 8020824:	6803      	ldr	r3, [r0, #0]
 8020826:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020828:	4798      	blx	r3
 802082a:	b00f      	add	sp, #60	@ 0x3c
 802082c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020830:	20013ffc 	.word	0x20013ffc
 8020834:	20013ff4 	.word	0x20013ff4

08020838 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8020838:	b5f0      	push	{r4, r5, r6, r7, lr}
 802083a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802083e:	2dff      	cmp	r5, #255	@ 0xff
 8020840:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8020844:	d10c      	bne.n	8020860 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8020846:	2bff      	cmp	r3, #255	@ 0xff
 8020848:	d10a      	bne.n	8020860 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802084a:	4b25      	ldr	r3, [pc, #148]	@ (80208e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 802084c:	0948      	lsrs	r0, r1, #5
 802084e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020852:	403b      	ands	r3, r7
 8020854:	4318      	orrs	r0, r3
 8020856:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802085a:	4308      	orrs	r0, r1
 802085c:	b280      	uxth	r0, r0
 802085e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020860:	fb15 f503 	smulbb	r5, r5, r3
 8020864:	b2ab      	uxth	r3, r5
 8020866:	1c5d      	adds	r5, r3, #1
 8020868:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 802086c:	1214      	asrs	r4, r2, #8
 802086e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020872:	fa1f fc85 	uxth.w	ip, r5
 8020876:	10d6      	asrs	r6, r2, #3
 8020878:	00d0      	lsls	r0, r2, #3
 802087a:	43ed      	mvns	r5, r5
 802087c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020880:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8020884:	b2eb      	uxtb	r3, r5
 8020886:	b2c0      	uxtb	r0, r0
 8020888:	fb12 f20c 	smulbb	r2, r2, ip
 802088c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020890:	fb04 2403 	mla	r4, r4, r3, r2
 8020894:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8020898:	b2c8      	uxtb	r0, r1
 802089a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802089e:	b2fd      	uxtb	r5, r7
 80208a0:	fb10 f00c 	smulbb	r0, r0, ip
 80208a4:	b2a4      	uxth	r4, r4
 80208a6:	fb02 0003 	mla	r0, r2, r3, r0
 80208aa:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80208ae:	fb15 f50c 	smulbb	r5, r5, ip
 80208b2:	fb06 5503 	mla	r5, r6, r3, r5
 80208b6:	b283      	uxth	r3, r0
 80208b8:	1c60      	adds	r0, r4, #1
 80208ba:	b2ad      	uxth	r5, r5
 80208bc:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80208c0:	1c58      	adds	r0, r3, #1
 80208c2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80208c6:	1c6b      	adds	r3, r5, #1
 80208c8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80208cc:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80208d0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80208d4:	096d      	lsrs	r5, r5, #5
 80208d6:	4320      	orrs	r0, r4
 80208d8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80208dc:	4328      	orrs	r0, r5
 80208de:	e7be      	b.n	802085e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80208e0:	00fff800 	.word	0x00fff800

080208e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80208e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80208e8:	461c      	mov	r4, r3
 80208ea:	b08d      	sub	sp, #52	@ 0x34
 80208ec:	460d      	mov	r5, r1
 80208ee:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80208f0:	6861      	ldr	r1, [r4, #4]
 80208f2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 80208f6:	4680      	mov	r8, r0
 80208f8:	6820      	ldr	r0, [r4, #0]
 80208fa:	4616      	mov	r6, r2
 80208fc:	aa08      	add	r2, sp, #32
 80208fe:	c203      	stmia	r2!, {r0, r1}
 8020900:	6818      	ldr	r0, [r3, #0]
 8020902:	6859      	ldr	r1, [r3, #4]
 8020904:	aa0a      	add	r2, sp, #40	@ 0x28
 8020906:	c203      	stmia	r2!, {r0, r1}
 8020908:	a808      	add	r0, sp, #32
 802090a:	f7ee fc7d 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802090e:	4621      	mov	r1, r4
 8020910:	a80a      	add	r0, sp, #40	@ 0x28
 8020912:	f7ee fca1 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020916:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 802091a:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 802091e:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8020922:	f002 0301 	and.w	r3, r2, #1
 8020926:	9303      	str	r3, [sp, #12]
 8020928:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802092c:	f003 0101 	and.w	r1, r3, #1
 8020930:	9102      	str	r1, [sp, #8]
 8020932:	9802      	ldr	r0, [sp, #8]
 8020934:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8020938:	4403      	add	r3, r0
 802093a:	fb01 2303 	mla	r3, r1, r3, r2
 802093e:	f04f 0a02 	mov.w	sl, #2
 8020942:	fb93 f3fa 	sdiv	r3, r3, sl
 8020946:	441d      	add	r5, r3
 8020948:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 802094c:	441a      	add	r2, r3
 802094e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8020952:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8020956:	4a3f      	ldr	r2, [pc, #252]	@ (8020a54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8020958:	9205      	str	r2, [sp, #20]
 802095a:	4419      	add	r1, r3
 802095c:	6810      	ldr	r0, [r2, #0]
 802095e:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8020962:	6803      	ldr	r3, [r0, #0]
 8020964:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020966:	4798      	blx	r3
 8020968:	4b3b      	ldr	r3, [pc, #236]	@ (8020a58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802096a:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 802096e:	8819      	ldrh	r1, [r3, #0]
 8020970:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8020974:	fb01 c404 	mla	r4, r1, r4, ip
 8020978:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802097c:	434f      	muls	r7, r1
 802097e:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8020982:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8020986:	3604      	adds	r6, #4
 8020988:	9204      	str	r2, [sp, #16]
 802098a:	9b04      	ldr	r3, [sp, #16]
 802098c:	429c      	cmp	r4, r3
 802098e:	d258      	bcs.n	8020a42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8020990:	9b03      	ldr	r3, [sp, #12]
 8020992:	2b00      	cmp	r3, #0
 8020994:	d034      	beq.n	8020a00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8020996:	782b      	ldrb	r3, [r5, #0]
 8020998:	f003 030f 	and.w	r3, r3, #15
 802099c:	1c6f      	adds	r7, r5, #1
 802099e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80209a2:	0e0b      	lsrs	r3, r1, #24
 80209a4:	d006      	beq.n	80209b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80209a6:	8822      	ldrh	r2, [r4, #0]
 80209a8:	9300      	str	r3, [sp, #0]
 80209aa:	4640      	mov	r0, r8
 80209ac:	464b      	mov	r3, r9
 80209ae:	f7ff ff43 	bl	8020838 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80209b2:	8020      	strh	r0, [r4, #0]
 80209b4:	3402      	adds	r4, #2
 80209b6:	f10b 3aff 	add.w	sl, fp, #4294967295
 80209ba:	f1ba 0f01 	cmp.w	sl, #1
 80209be:	dd22      	ble.n	8020a06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80209c0:	783b      	ldrb	r3, [r7, #0]
 80209c2:	091b      	lsrs	r3, r3, #4
 80209c4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80209c8:	0e0b      	lsrs	r3, r1, #24
 80209ca:	d006      	beq.n	80209da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80209cc:	8822      	ldrh	r2, [r4, #0]
 80209ce:	9300      	str	r3, [sp, #0]
 80209d0:	4640      	mov	r0, r8
 80209d2:	464b      	mov	r3, r9
 80209d4:	f7ff ff30 	bl	8020838 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80209d8:	8020      	strh	r0, [r4, #0]
 80209da:	f817 3b01 	ldrb.w	r3, [r7], #1
 80209de:	f003 030f 	and.w	r3, r3, #15
 80209e2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80209e6:	0e0b      	lsrs	r3, r1, #24
 80209e8:	d006      	beq.n	80209f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80209ea:	8862      	ldrh	r2, [r4, #2]
 80209ec:	9300      	str	r3, [sp, #0]
 80209ee:	4640      	mov	r0, r8
 80209f0:	464b      	mov	r3, r9
 80209f2:	f7ff ff21 	bl	8020838 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80209f6:	8060      	strh	r0, [r4, #2]
 80209f8:	3404      	adds	r4, #4
 80209fa:	f1aa 0a02 	sub.w	sl, sl, #2
 80209fe:	e7dc      	b.n	80209ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020a00:	462f      	mov	r7, r5
 8020a02:	46da      	mov	sl, fp
 8020a04:	e7d9      	b.n	80209ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020a06:	d10d      	bne.n	8020a24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8020a08:	783b      	ldrb	r3, [r7, #0]
 8020a0a:	091b      	lsrs	r3, r3, #4
 8020a0c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020a10:	0e0b      	lsrs	r3, r1, #24
 8020a12:	d006      	beq.n	8020a22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8020a14:	8822      	ldrh	r2, [r4, #0]
 8020a16:	9300      	str	r3, [sp, #0]
 8020a18:	4640      	mov	r0, r8
 8020a1a:	464b      	mov	r3, r9
 8020a1c:	f7ff ff0c 	bl	8020838 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020a20:	8020      	strh	r0, [r4, #0]
 8020a22:	3402      	adds	r4, #2
 8020a24:	9b06      	ldr	r3, [sp, #24]
 8020a26:	9a02      	ldr	r2, [sp, #8]
 8020a28:	881b      	ldrh	r3, [r3, #0]
 8020a2a:	eba3 030b 	sub.w	r3, r3, fp
 8020a2e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020a32:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020a36:	4413      	add	r3, r2
 8020a38:	9a07      	ldr	r2, [sp, #28]
 8020a3a:	fb93 f3f2 	sdiv	r3, r3, r2
 8020a3e:	441d      	add	r5, r3
 8020a40:	e7a3      	b.n	802098a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8020a42:	9b05      	ldr	r3, [sp, #20]
 8020a44:	6818      	ldr	r0, [r3, #0]
 8020a46:	6803      	ldr	r3, [r0, #0]
 8020a48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020a4a:	4798      	blx	r3
 8020a4c:	b00d      	add	sp, #52	@ 0x34
 8020a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a52:	bf00      	nop
 8020a54:	20013ffc 	.word	0x20013ffc
 8020a58:	20013ff4 	.word	0x20013ff4

08020a5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8020a5c:	b570      	push	{r4, r5, r6, lr}
 8020a5e:	1214      	asrs	r4, r2, #8
 8020a60:	788d      	ldrb	r5, [r1, #2]
 8020a62:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8020a66:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020a6a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020a6e:	fb15 f503 	smulbb	r5, r5, r3
 8020a72:	fb04 5506 	mla	r5, r4, r6, r5
 8020a76:	10d0      	asrs	r0, r2, #3
 8020a78:	784c      	ldrb	r4, [r1, #1]
 8020a7a:	7809      	ldrb	r1, [r1, #0]
 8020a7c:	00d2      	lsls	r2, r2, #3
 8020a7e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020a82:	b2d2      	uxtb	r2, r2
 8020a84:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8020a88:	fb14 f403 	smulbb	r4, r4, r3
 8020a8c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020a90:	fb11 f303 	smulbb	r3, r1, r3
 8020a94:	fb00 4406 	mla	r4, r0, r6, r4
 8020a98:	fb02 3306 	mla	r3, r2, r6, r3
 8020a9c:	b2ad      	uxth	r5, r5
 8020a9e:	b29b      	uxth	r3, r3
 8020aa0:	b2a4      	uxth	r4, r4
 8020aa2:	1c68      	adds	r0, r5, #1
 8020aa4:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8020aa8:	1c62      	adds	r2, r4, #1
 8020aaa:	1c58      	adds	r0, r3, #1
 8020aac:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020ab0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020ab4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020ab8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020abc:	0964      	lsrs	r4, r4, #5
 8020abe:	4328      	orrs	r0, r5
 8020ac0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020ac4:	4320      	orrs	r0, r4
 8020ac6:	bd70      	pop	{r4, r5, r6, pc}

08020ac8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020acc:	b08f      	sub	sp, #60	@ 0x3c
 8020ace:	461c      	mov	r4, r3
 8020ad0:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020ad4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020ad6:	4682      	mov	sl, r0
 8020ad8:	460e      	mov	r6, r1
 8020ada:	4615      	mov	r5, r2
 8020adc:	2f00      	cmp	r7, #0
 8020ade:	f000 8142 	beq.w	8020d66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8020ae2:	6820      	ldr	r0, [r4, #0]
 8020ae4:	6861      	ldr	r1, [r4, #4]
 8020ae6:	aa0a      	add	r2, sp, #40	@ 0x28
 8020ae8:	c203      	stmia	r2!, {r0, r1}
 8020aea:	6818      	ldr	r0, [r3, #0]
 8020aec:	6859      	ldr	r1, [r3, #4]
 8020aee:	aa0c      	add	r2, sp, #48	@ 0x30
 8020af0:	c203      	stmia	r2!, {r0, r1}
 8020af2:	a80a      	add	r0, sp, #40	@ 0x28
 8020af4:	f7ee fb88 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020af8:	4621      	mov	r1, r4
 8020afa:	a80c      	add	r0, sp, #48	@ 0x30
 8020afc:	f7ee fbac 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020b00:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020b04:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8020b08:	f002 0301 	and.w	r3, r2, #1
 8020b0c:	9306      	str	r3, [sp, #24]
 8020b0e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020b12:	f003 0101 	and.w	r1, r3, #1
 8020b16:	9105      	str	r1, [sp, #20]
 8020b18:	9805      	ldr	r0, [sp, #20]
 8020b1a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020b1e:	4403      	add	r3, r0
 8020b20:	fb01 2303 	mla	r3, r1, r3, r2
 8020b24:	f04f 0802 	mov.w	r8, #2
 8020b28:	fb93 f3f8 	sdiv	r3, r3, r8
 8020b2c:	441e      	add	r6, r3
 8020b2e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020b32:	441a      	add	r2, r3
 8020b34:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020b38:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020b3c:	4419      	add	r1, r3
 8020b3e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8020b42:	9303      	str	r3, [sp, #12]
 8020b44:	4b89      	ldr	r3, [pc, #548]	@ (8020d6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020b46:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020b4a:	6818      	ldr	r0, [r3, #0]
 8020b4c:	6803      	ldr	r3, [r0, #0]
 8020b4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020b50:	4798      	blx	r3
 8020b52:	4a87      	ldr	r2, [pc, #540]	@ (8020d70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8020b54:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020b58:	8813      	ldrh	r3, [r2, #0]
 8020b5a:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8020b5e:	2fff      	cmp	r7, #255	@ 0xff
 8020b60:	fb03 9404 	mla	r4, r3, r4, r9
 8020b64:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020b68:	f105 0504 	add.w	r5, r5, #4
 8020b6c:	4694      	mov	ip, r2
 8020b6e:	fb03 f30b 	mul.w	r3, r3, fp
 8020b72:	d071      	beq.n	8020c58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8020b74:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020b78:	43f9      	mvns	r1, r7
 8020b7a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020b7e:	b2c9      	uxtb	r1, r1
 8020b80:	9104      	str	r1, [sp, #16]
 8020b82:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020b86:	9b07      	ldr	r3, [sp, #28]
 8020b88:	42a3      	cmp	r3, r4
 8020b8a:	f240 80e7 	bls.w	8020d5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020b8e:	9b06      	ldr	r3, [sp, #24]
 8020b90:	2b00      	cmp	r3, #0
 8020b92:	d03d      	beq.n	8020c10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8020b94:	7831      	ldrb	r1, [r6, #0]
 8020b96:	9b04      	ldr	r3, [sp, #16]
 8020b98:	8822      	ldrh	r2, [r4, #0]
 8020b9a:	9300      	str	r3, [sp, #0]
 8020b9c:	f001 010f 	and.w	r1, r1, #15
 8020ba0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020ba4:	463b      	mov	r3, r7
 8020ba6:	4429      	add	r1, r5
 8020ba8:	4650      	mov	r0, sl
 8020baa:	f7ff ff57 	bl	8020a5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020bae:	9b03      	ldr	r3, [sp, #12]
 8020bb0:	f824 0b02 	strh.w	r0, [r4], #2
 8020bb4:	f106 0801 	add.w	r8, r6, #1
 8020bb8:	f103 3bff 	add.w	fp, r3, #4294967295
 8020bbc:	f1bb 0f01 	cmp.w	fp, #1
 8020bc0:	46a1      	mov	r9, r4
 8020bc2:	f104 0404 	add.w	r4, r4, #4
 8020bc6:	dd27      	ble.n	8020c18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8020bc8:	f898 1000 	ldrb.w	r1, [r8]
 8020bcc:	9b04      	ldr	r3, [sp, #16]
 8020bce:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020bd2:	9300      	str	r3, [sp, #0]
 8020bd4:	0909      	lsrs	r1, r1, #4
 8020bd6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020bda:	463b      	mov	r3, r7
 8020bdc:	4429      	add	r1, r5
 8020bde:	4650      	mov	r0, sl
 8020be0:	f7ff ff3c 	bl	8020a5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020be4:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020be8:	f818 1b01 	ldrb.w	r1, [r8], #1
 8020bec:	9b04      	ldr	r3, [sp, #16]
 8020bee:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020bf2:	9300      	str	r3, [sp, #0]
 8020bf4:	f001 010f 	and.w	r1, r1, #15
 8020bf8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020bfc:	463b      	mov	r3, r7
 8020bfe:	4429      	add	r1, r5
 8020c00:	4650      	mov	r0, sl
 8020c02:	f7ff ff2b 	bl	8020a5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020c06:	f1ab 0b02 	sub.w	fp, fp, #2
 8020c0a:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020c0e:	e7d5      	b.n	8020bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020c10:	46b0      	mov	r8, r6
 8020c12:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020c16:	e7d1      	b.n	8020bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020c18:	d10f      	bne.n	8020c3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8020c1a:	f898 1000 	ldrb.w	r1, [r8]
 8020c1e:	9b04      	ldr	r3, [sp, #16]
 8020c20:	f8b9 2000 	ldrh.w	r2, [r9]
 8020c24:	9300      	str	r3, [sp, #0]
 8020c26:	0909      	lsrs	r1, r1, #4
 8020c28:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020c2c:	463b      	mov	r3, r7
 8020c2e:	4429      	add	r1, r5
 8020c30:	4650      	mov	r0, sl
 8020c32:	f7ff ff13 	bl	8020a5c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020c36:	f829 0b02 	strh.w	r0, [r9], #2
 8020c3a:	9b08      	ldr	r3, [sp, #32]
 8020c3c:	9a05      	ldr	r2, [sp, #20]
 8020c3e:	881c      	ldrh	r4, [r3, #0]
 8020c40:	9b03      	ldr	r3, [sp, #12]
 8020c42:	1ae4      	subs	r4, r4, r3
 8020c44:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020c48:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020c4c:	4413      	add	r3, r2
 8020c4e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020c50:	fb93 f3f2 	sdiv	r3, r3, r2
 8020c54:	441e      	add	r6, r3
 8020c56:	e796      	b.n	8020b86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8020c58:	4f46      	ldr	r7, [pc, #280]	@ (8020d74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8020c5a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020c5e:	42a3      	cmp	r3, r4
 8020c60:	d97c      	bls.n	8020d5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020c62:	9a06      	ldr	r2, [sp, #24]
 8020c64:	2a00      	cmp	r2, #0
 8020c66:	d054      	beq.n	8020d12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8020c68:	7830      	ldrb	r0, [r6, #0]
 8020c6a:	f000 000f 	and.w	r0, r0, #15
 8020c6e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020c72:	eb05 0e00 	add.w	lr, r5, r0
 8020c76:	5c28      	ldrb	r0, [r5, r0]
 8020c78:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8020c7c:	f89e e001 	ldrb.w	lr, [lr, #1]
 8020c80:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020c84:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8020c88:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020c8c:	ea42 020e 	orr.w	r2, r2, lr
 8020c90:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8020c94:	f824 2b02 	strh.w	r2, [r4], #2
 8020c98:	9a03      	ldr	r2, [sp, #12]
 8020c9a:	1c71      	adds	r1, r6, #1
 8020c9c:	f102 3eff 	add.w	lr, r2, #4294967295
 8020ca0:	f1be 0f01 	cmp.w	lr, #1
 8020ca4:	4620      	mov	r0, r4
 8020ca6:	f104 0404 	add.w	r4, r4, #4
 8020caa:	dd36      	ble.n	8020d1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8020cac:	7808      	ldrb	r0, [r1, #0]
 8020cae:	0900      	lsrs	r0, r0, #4
 8020cb0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020cb4:	eb05 0a00 	add.w	sl, r5, r0
 8020cb8:	f1ae 0e02 	sub.w	lr, lr, #2
 8020cbc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020cc0:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020cc4:	00d2      	lsls	r2, r2, #3
 8020cc6:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020cca:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020cce:	ea49 0202 	orr.w	r2, r9, r2
 8020cd2:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020cd6:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020cda:	f824 2c04 	strh.w	r2, [r4, #-4]
 8020cde:	f811 0b01 	ldrb.w	r0, [r1], #1
 8020ce2:	f000 000f 	and.w	r0, r0, #15
 8020ce6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020cea:	eb05 0a00 	add.w	sl, r5, r0
 8020cee:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020cf2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020cf6:	00d2      	lsls	r2, r2, #3
 8020cf8:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020cfc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020d00:	ea49 0202 	orr.w	r2, r9, r2
 8020d04:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020d08:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020d0c:	f824 2c02 	strh.w	r2, [r4, #-2]
 8020d10:	e7c6      	b.n	8020ca0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020d12:	4631      	mov	r1, r6
 8020d14:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020d18:	e7c2      	b.n	8020ca0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020d1a:	d111      	bne.n	8020d40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8020d1c:	7809      	ldrb	r1, [r1, #0]
 8020d1e:	0909      	lsrs	r1, r1, #4
 8020d20:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020d24:	186c      	adds	r4, r5, r1
 8020d26:	5c69      	ldrb	r1, [r5, r1]
 8020d28:	78a2      	ldrb	r2, [r4, #2]
 8020d2a:	7864      	ldrb	r4, [r4, #1]
 8020d2c:	00e4      	lsls	r4, r4, #3
 8020d2e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020d32:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020d36:	4322      	orrs	r2, r4
 8020d38:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8020d3c:	f820 2b02 	strh.w	r2, [r0], #2
 8020d40:	9a03      	ldr	r2, [sp, #12]
 8020d42:	f8bc 4000 	ldrh.w	r4, [ip]
 8020d46:	9905      	ldr	r1, [sp, #20]
 8020d48:	1aa4      	subs	r4, r4, r2
 8020d4a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8020d4e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020d52:	440a      	add	r2, r1
 8020d54:	fb92 f2f8 	sdiv	r2, r2, r8
 8020d58:	4416      	add	r6, r2
 8020d5a:	e780      	b.n	8020c5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8020d5c:	4b03      	ldr	r3, [pc, #12]	@ (8020d6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020d5e:	6818      	ldr	r0, [r3, #0]
 8020d60:	6803      	ldr	r3, [r0, #0]
 8020d62:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020d64:	4798      	blx	r3
 8020d66:	b00f      	add	sp, #60	@ 0x3c
 8020d68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d6c:	20013ffc 	.word	0x20013ffc
 8020d70:	20013ff4 	.word	0x20013ff4
 8020d74:	fffff800 	.word	0xfffff800

08020d78 <CRC_Lock>:
 8020d78:	b530      	push	{r4, r5, lr}
 8020d7a:	4a2d      	ldr	r2, [pc, #180]	@ (8020e30 <CRC_Lock+0xb8>)
 8020d7c:	6813      	ldr	r3, [r2, #0]
 8020d7e:	f023 0301 	bic.w	r3, r3, #1
 8020d82:	6013      	str	r3, [r2, #0]
 8020d84:	4b2b      	ldr	r3, [pc, #172]	@ (8020e34 <CRC_Lock+0xbc>)
 8020d86:	681c      	ldr	r4, [r3, #0]
 8020d88:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8020d8c:	4014      	ands	r4, r2
 8020d8e:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8020d92:	42ac      	cmp	r4, r5
 8020d94:	d005      	beq.n	8020da2 <CRC_Lock+0x2a>
 8020d96:	681c      	ldr	r4, [r3, #0]
 8020d98:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8020d9c:	4014      	ands	r4, r2
 8020d9e:	42ac      	cmp	r4, r5
 8020da0:	d125      	bne.n	8020dee <CRC_Lock+0x76>
 8020da2:	4b25      	ldr	r3, [pc, #148]	@ (8020e38 <CRC_Lock+0xc0>)
 8020da4:	681b      	ldr	r3, [r3, #0]
 8020da6:	2b00      	cmp	r3, #0
 8020da8:	d139      	bne.n	8020e1e <CRC_Lock+0xa6>
 8020daa:	4b24      	ldr	r3, [pc, #144]	@ (8020e3c <CRC_Lock+0xc4>)
 8020dac:	681a      	ldr	r2, [r3, #0]
 8020dae:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020db2:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8020db6:	d00d      	beq.n	8020dd4 <CRC_Lock+0x5c>
 8020db8:	681a      	ldr	r2, [r3, #0]
 8020dba:	f240 4483 	movw	r4, #1155	@ 0x483
 8020dbe:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020dc2:	42a2      	cmp	r2, r4
 8020dc4:	d006      	beq.n	8020dd4 <CRC_Lock+0x5c>
 8020dc6:	681b      	ldr	r3, [r3, #0]
 8020dc8:	f240 4285 	movw	r2, #1157	@ 0x485
 8020dcc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020dd0:	4293      	cmp	r3, r2
 8020dd2:	d124      	bne.n	8020e1e <CRC_Lock+0xa6>
 8020dd4:	4b1a      	ldr	r3, [pc, #104]	@ (8020e40 <CRC_Lock+0xc8>)
 8020dd6:	2201      	movs	r2, #1
 8020dd8:	601a      	str	r2, [r3, #0]
 8020dda:	681a      	ldr	r2, [r3, #0]
 8020ddc:	2a00      	cmp	r2, #0
 8020dde:	d1fc      	bne.n	8020dda <CRC_Lock+0x62>
 8020de0:	4b18      	ldr	r3, [pc, #96]	@ (8020e44 <CRC_Lock+0xcc>)
 8020de2:	6018      	str	r0, [r3, #0]
 8020de4:	6818      	ldr	r0, [r3, #0]
 8020de6:	1a43      	subs	r3, r0, r1
 8020de8:	4258      	negs	r0, r3
 8020dea:	4158      	adcs	r0, r3
 8020dec:	e00e      	b.n	8020e0c <CRC_Lock+0x94>
 8020dee:	681b      	ldr	r3, [r3, #0]
 8020df0:	4013      	ands	r3, r2
 8020df2:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8020df6:	4293      	cmp	r3, r2
 8020df8:	d111      	bne.n	8020e1e <CRC_Lock+0xa6>
 8020dfa:	4b13      	ldr	r3, [pc, #76]	@ (8020e48 <CRC_Lock+0xd0>)
 8020dfc:	681b      	ldr	r3, [r3, #0]
 8020dfe:	f240 4286 	movw	r2, #1158	@ 0x486
 8020e02:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020e06:	4293      	cmp	r3, r2
 8020e08:	d001      	beq.n	8020e0e <CRC_Lock+0x96>
 8020e0a:	2000      	movs	r0, #0
 8020e0c:	bd30      	pop	{r4, r5, pc}
 8020e0e:	4b0f      	ldr	r3, [pc, #60]	@ (8020e4c <CRC_Lock+0xd4>)
 8020e10:	2201      	movs	r2, #1
 8020e12:	601a      	str	r2, [r3, #0]
 8020e14:	681a      	ldr	r2, [r3, #0]
 8020e16:	2a00      	cmp	r2, #0
 8020e18:	d1fc      	bne.n	8020e14 <CRC_Lock+0x9c>
 8020e1a:	4b0d      	ldr	r3, [pc, #52]	@ (8020e50 <CRC_Lock+0xd8>)
 8020e1c:	e7e1      	b.n	8020de2 <CRC_Lock+0x6a>
 8020e1e:	4b0d      	ldr	r3, [pc, #52]	@ (8020e54 <CRC_Lock+0xdc>)
 8020e20:	2201      	movs	r2, #1
 8020e22:	601a      	str	r2, [r3, #0]
 8020e24:	681a      	ldr	r2, [r3, #0]
 8020e26:	2a00      	cmp	r2, #0
 8020e28:	d1fc      	bne.n	8020e24 <CRC_Lock+0xac>
 8020e2a:	4b0b      	ldr	r3, [pc, #44]	@ (8020e58 <CRC_Lock+0xe0>)
 8020e2c:	e7d9      	b.n	8020de2 <CRC_Lock+0x6a>
 8020e2e:	bf00      	nop
 8020e30:	e0002000 	.word	0xe0002000
 8020e34:	e000ed00 	.word	0xe000ed00
 8020e38:	e0042000 	.word	0xe0042000
 8020e3c:	5c001000 	.word	0x5c001000
 8020e40:	58024c08 	.word	0x58024c08
 8020e44:	58024c00 	.word	0x58024c00
 8020e48:	46008ff0 	.word	0x46008ff0
 8020e4c:	46024c08 	.word	0x46024c08
 8020e50:	46024c00 	.word	0x46024c00
 8020e54:	40023008 	.word	0x40023008
 8020e58:	40023000 	.word	0x40023000

08020e5c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020e5c:	6101      	str	r1, [r0, #16]
 8020e5e:	4770      	bx	lr

08020e60 <_ZN8touchgfx8Gestures4tickEv>:
 8020e60:	7b83      	ldrb	r3, [r0, #14]
 8020e62:	b14b      	cbz	r3, 8020e78 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8020e64:	8903      	ldrh	r3, [r0, #8]
 8020e66:	3301      	adds	r3, #1
 8020e68:	b29b      	uxth	r3, r3
 8020e6a:	2b07      	cmp	r3, #7
 8020e6c:	8103      	strh	r3, [r0, #8]
 8020e6e:	bf81      	itttt	hi
 8020e70:	2300      	movhi	r3, #0
 8020e72:	8143      	strhhi	r3, [r0, #10]
 8020e74:	8183      	strhhi	r3, [r0, #12]
 8020e76:	7383      	strbhi	r3, [r0, #14]
 8020e78:	4770      	bx	lr
	...

08020e7c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020e7c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020e80:	4698      	mov	r8, r3
 8020e82:	8883      	ldrh	r3, [r0, #4]
 8020e84:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020e88:	eba8 0303 	sub.w	r3, r8, r3
 8020e8c:	b21b      	sxth	r3, r3
 8020e8e:	4604      	mov	r4, r0
 8020e90:	2b00      	cmp	r3, #0
 8020e92:	4617      	mov	r7, r2
 8020e94:	4a18      	ldr	r2, [pc, #96]	@ (8020ef8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8020e96:	9200      	str	r2, [sp, #0]
 8020e98:	bfb8      	it	lt
 8020e9a:	425b      	neglt	r3, r3
 8020e9c:	8aa2      	ldrh	r2, [r4, #20]
 8020e9e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8020ea2:	f8ad 800a 	strh.w	r8, [sp, #10]
 8020ea6:	b21b      	sxth	r3, r3
 8020ea8:	460e      	mov	r6, r1
 8020eaa:	4293      	cmp	r3, r2
 8020eac:	88c1      	ldrh	r1, [r0, #6]
 8020eae:	f8ad 1008 	strh.w	r1, [sp, #8]
 8020eb2:	f04f 0000 	mov.w	r0, #0
 8020eb6:	f88d 0004 	strb.w	r0, [sp, #4]
 8020eba:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020ebe:	dc07      	bgt.n	8020ed0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8020ec0:	1a69      	subs	r1, r5, r1
 8020ec2:	b209      	sxth	r1, r1
 8020ec4:	2900      	cmp	r1, #0
 8020ec6:	bfb8      	it	lt
 8020ec8:	4249      	neglt	r1, r1
 8020eca:	b209      	sxth	r1, r1
 8020ecc:	428a      	cmp	r2, r1
 8020ece:	da10      	bge.n	8020ef2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8020ed0:	6920      	ldr	r0, [r4, #16]
 8020ed2:	6803      	ldr	r3, [r0, #0]
 8020ed4:	4669      	mov	r1, sp
 8020ed6:	685b      	ldr	r3, [r3, #4]
 8020ed8:	4798      	blx	r3
 8020eda:	eba8 0606 	sub.w	r6, r8, r6
 8020ede:	2300      	movs	r3, #0
 8020ee0:	1bef      	subs	r7, r5, r7
 8020ee2:	2001      	movs	r0, #1
 8020ee4:	8123      	strh	r3, [r4, #8]
 8020ee6:	8166      	strh	r6, [r4, #10]
 8020ee8:	81a7      	strh	r7, [r4, #12]
 8020eea:	f8a4 8004 	strh.w	r8, [r4, #4]
 8020eee:	80e5      	strh	r5, [r4, #6]
 8020ef0:	73a0      	strb	r0, [r4, #14]
 8020ef2:	b004      	add	sp, #16
 8020ef4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020ef8:	080252f8 	.word	0x080252f8

08020efc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8020efc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020efe:	461e      	mov	r6, r3
 8020f00:	1e4b      	subs	r3, r1, #1
 8020f02:	2b01      	cmp	r3, #1
 8020f04:	b085      	sub	sp, #20
 8020f06:	4604      	mov	r4, r0
 8020f08:	460d      	mov	r5, r1
 8020f0a:	4617      	mov	r7, r2
 8020f0c:	d84b      	bhi.n	8020fa6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8020f0e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020f12:	1cd3      	adds	r3, r2, #3
 8020f14:	b29b      	uxth	r3, r3
 8020f16:	2b06      	cmp	r3, #6
 8020f18:	d916      	bls.n	8020f48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8020f1a:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8020fbc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020f1e:	f8cd c004 	str.w	ip, [sp, #4]
 8020f22:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020f26:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020f2a:	6900      	ldr	r0, [r0, #16]
 8020f2c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020f30:	f04f 0c00 	mov.w	ip, #0
 8020f34:	f88d c008 	strb.w	ip, [sp, #8]
 8020f38:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020f3c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020f40:	6803      	ldr	r3, [r0, #0]
 8020f42:	a901      	add	r1, sp, #4
 8020f44:	689b      	ldr	r3, [r3, #8]
 8020f46:	4798      	blx	r3
 8020f48:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020f4c:	1cd3      	adds	r3, r2, #3
 8020f4e:	b29b      	uxth	r3, r3
 8020f50:	2b06      	cmp	r3, #6
 8020f52:	d916      	bls.n	8020f82 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020f54:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8020fbc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020f58:	f8cd c004 	str.w	ip, [sp, #4]
 8020f5c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020f60:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020f64:	6920      	ldr	r0, [r4, #16]
 8020f66:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020f6a:	f04f 0c01 	mov.w	ip, #1
 8020f6e:	f88d c008 	strb.w	ip, [sp, #8]
 8020f72:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020f76:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020f7a:	6803      	ldr	r3, [r0, #0]
 8020f7c:	a901      	add	r1, sp, #4
 8020f7e:	689b      	ldr	r3, [r3, #8]
 8020f80:	4798      	blx	r3
 8020f82:	4b0d      	ldr	r3, [pc, #52]	@ (8020fb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8020f84:	9301      	str	r3, [sp, #4]
 8020f86:	6920      	ldr	r0, [r4, #16]
 8020f88:	f88d 5008 	strb.w	r5, [sp, #8]
 8020f8c:	2300      	movs	r3, #0
 8020f8e:	f8ad 700a 	strh.w	r7, [sp, #10]
 8020f92:	f8ad 600c 	strh.w	r6, [sp, #12]
 8020f96:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020f9a:	6803      	ldr	r3, [r0, #0]
 8020f9c:	a901      	add	r1, sp, #4
 8020f9e:	681b      	ldr	r3, [r3, #0]
 8020fa0:	4798      	blx	r3
 8020fa2:	b005      	add	sp, #20
 8020fa4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020fa6:	2900      	cmp	r1, #0
 8020fa8:	d1eb      	bne.n	8020f82 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020faa:	80a2      	strh	r2, [r4, #4]
 8020fac:	80c6      	strh	r6, [r0, #6]
 8020fae:	60a1      	str	r1, [r4, #8]
 8020fb0:	81a1      	strh	r1, [r4, #12]
 8020fb2:	73a1      	strb	r1, [r4, #14]
 8020fb4:	e7e5      	b.n	8020f82 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020fb6:	bf00      	nop
 8020fb8:	080252e4 	.word	0x080252e4
 8020fbc:	0802530c 	.word	0x0802530c

08020fc0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8020fc0:	10c9      	asrs	r1, r1, #3
 8020fc2:	2900      	cmp	r1, #0
 8020fc4:	bfb8      	it	lt
 8020fc6:	4249      	neglt	r1, r1
 8020fc8:	2801      	cmp	r0, #1
 8020fca:	d108      	bne.n	8020fde <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8020fcc:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8020fd0:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8020fd4:	4601      	mov	r1, r0
 8020fd6:	dd02      	ble.n	8020fde <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8020fd8:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8020fdc:	4770      	bx	lr
 8020fde:	29ff      	cmp	r1, #255	@ 0xff
 8020fe0:	bfa8      	it	ge
 8020fe2:	21ff      	movge	r1, #255	@ 0xff
 8020fe4:	4608      	mov	r0, r1
 8020fe6:	4770      	bx	lr

08020fe8 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8020fe8:	b410      	push	{r4}
 8020fea:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8020fee:	429c      	cmp	r4, r3
 8020ff0:	d803      	bhi.n	8020ffa <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8020ff2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020ff6:	f7ed b8ad 	b.w	800e154 <_ZN8touchgfx7Outline6lineToEii>
 8020ffa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020ffe:	4770      	bx	lr

08021000 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8021000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021004:	b08b      	sub	sp, #44	@ 0x2c
 8021006:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802100a:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 802100e:	9308      	str	r3, [sp, #32]
 8021010:	4606      	mov	r6, r0
 8021012:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8021016:	9309      	str	r3, [sp, #36]	@ 0x24
 8021018:	468a      	mov	sl, r1
 802101a:	f7ed fa08 	bl	800e42e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802101e:	68b5      	ldr	r5, [r6, #8]
 8021020:	4604      	mov	r4, r0
 8021022:	2d00      	cmp	r5, #0
 8021024:	d044      	beq.n	80210b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021026:	6873      	ldr	r3, [r6, #4]
 8021028:	42ab      	cmp	r3, r5
 802102a:	d33d      	bcc.n	80210a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802102c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8021030:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8021034:	eb02 0b03 	add.w	fp, r2, r3
 8021038:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802103c:	fb02 1203 	mla	r2, r2, r3, r1
 8021040:	9205      	str	r2, [sp, #20]
 8021042:	1e6a      	subs	r2, r5, #1
 8021044:	9204      	str	r2, [sp, #16]
 8021046:	f04f 0800 	mov.w	r8, #0
 802104a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802104e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021052:	454b      	cmp	r3, r9
 8021054:	463a      	mov	r2, r7
 8021056:	d008      	beq.n	802106a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8021058:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 802105c:	eb03 0b09 	add.w	fp, r3, r9
 8021060:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8021064:	fb03 1309 	mla	r3, r3, r9, r1
 8021068:	9305      	str	r3, [sp, #20]
 802106a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802106e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8021072:	4498      	add	r8, r3
 8021074:	9b04      	ldr	r3, [sp, #16]
 8021076:	3b01      	subs	r3, #1
 8021078:	9304      	str	r3, [sp, #16]
 802107a:	9b04      	ldr	r3, [sp, #16]
 802107c:	3301      	adds	r3, #1
 802107e:	d015      	beq.n	80210ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8021080:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8021084:	42bb      	cmp	r3, r7
 8021086:	d117      	bne.n	80210b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8021088:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802108c:	9b04      	ldr	r3, [sp, #16]
 802108e:	4548      	cmp	r0, r9
 8021090:	f103 33ff 	add.w	r3, r3, #4294967295
 8021094:	d17f      	bne.n	8021196 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8021096:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802109a:	4401      	add	r1, r0
 802109c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80210a0:	4480      	add	r8, r0
 80210a2:	e7e9      	b.n	8021078 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80210a4:	461f      	mov	r7, r3
 80210a6:	e044      	b.n	8021132 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80210a8:	2000      	movs	r0, #0
 80210aa:	e002      	b.n	80210b2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80210ac:	2900      	cmp	r1, #0
 80210ae:	d16f      	bne.n	8021190 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80210b0:	2001      	movs	r0, #1
 80210b2:	b00b      	add	sp, #44	@ 0x2c
 80210b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210b8:	2900      	cmp	r1, #0
 80210ba:	d030      	beq.n	802111e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80210bc:	2f00      	cmp	r7, #0
 80210be:	db29      	blt.n	8021114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80210c0:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 80210c4:	42bb      	cmp	r3, r7
 80210c6:	dd25      	ble.n	8021114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80210c8:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80210cc:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 80210d0:	f7ff ff76 	bl	8020fc0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 80210d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80210d6:	fb10 f003 	smulbb	r0, r0, r3
 80210da:	b280      	uxth	r0, r0
 80210dc:	1c41      	adds	r1, r0, #1
 80210de:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80210e2:	1209      	asrs	r1, r1, #8
 80210e4:	f011 0fff 	tst.w	r1, #255	@ 0xff
 80210e8:	d014      	beq.n	8021114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80210ea:	9808      	ldr	r0, [sp, #32]
 80210ec:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 80210ee:	b2c9      	uxtb	r1, r1
 80210f0:	b2ba      	uxth	r2, r7
 80210f2:	9102      	str	r1, [sp, #8]
 80210f4:	2101      	movs	r1, #1
 80210f6:	4413      	add	r3, r2
 80210f8:	9101      	str	r1, [sp, #4]
 80210fa:	4402      	add	r2, r0
 80210fc:	fa0f f18b 	sxth.w	r1, fp
 8021100:	f8da 0000 	ldr.w	r0, [sl]
 8021104:	9100      	str	r1, [sp, #0]
 8021106:	6941      	ldr	r1, [r0, #20]
 8021108:	b21b      	sxth	r3, r3
 802110a:	460d      	mov	r5, r1
 802110c:	b212      	sxth	r2, r2
 802110e:	9905      	ldr	r1, [sp, #20]
 8021110:	4650      	mov	r0, sl
 8021112:	47a8      	blx	r5
 8021114:	9b04      	ldr	r3, [sp, #16]
 8021116:	3301      	adds	r3, #1
 8021118:	f107 0201 	add.w	r2, r7, #1
 802111c:	d0c8      	beq.n	80210b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802111e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021122:	1abb      	subs	r3, r7, r2
 8021124:	2b00      	cmp	r3, #0
 8021126:	dd31      	ble.n	802118c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021128:	2a00      	cmp	r2, #0
 802112a:	dabb      	bge.n	80210a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802112c:	2f00      	cmp	r7, #0
 802112e:	dd2d      	ble.n	802118c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021130:	2200      	movs	r2, #0
 8021132:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8021136:	19d1      	adds	r1, r2, r7
 8021138:	4299      	cmp	r1, r3
 802113a:	db02      	blt.n	8021142 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802113c:	1a9f      	subs	r7, r3, r2
 802113e:	2f00      	cmp	r7, #0
 8021140:	dd24      	ble.n	802118c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021142:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8021146:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802114a:	f7ff ff39 	bl	8020fc0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802114e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021150:	fb10 f003 	smulbb	r0, r0, r3
 8021154:	b280      	uxth	r0, r0
 8021156:	1c41      	adds	r1, r0, #1
 8021158:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802115c:	1209      	asrs	r1, r1, #8
 802115e:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8021162:	d013      	beq.n	802118c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021164:	9808      	ldr	r0, [sp, #32]
 8021166:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8021168:	b292      	uxth	r2, r2
 802116a:	b2c9      	uxtb	r1, r1
 802116c:	4413      	add	r3, r2
 802116e:	9102      	str	r1, [sp, #8]
 8021170:	4402      	add	r2, r0
 8021172:	b23f      	sxth	r7, r7
 8021174:	f8da 0000 	ldr.w	r0, [sl]
 8021178:	9701      	str	r7, [sp, #4]
 802117a:	fa0f f18b 	sxth.w	r1, fp
 802117e:	9100      	str	r1, [sp, #0]
 8021180:	6947      	ldr	r7, [r0, #20]
 8021182:	9905      	ldr	r1, [sp, #20]
 8021184:	b21b      	sxth	r3, r3
 8021186:	b212      	sxth	r2, r2
 8021188:	4650      	mov	r0, sl
 802118a:	47b8      	blx	r7
 802118c:	464b      	mov	r3, r9
 802118e:	e75c      	b.n	802104a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8021190:	2f00      	cmp	r7, #0
 8021192:	da95      	bge.n	80210c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8021194:	e78c      	b.n	80210b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021196:	2900      	cmp	r1, #0
 8021198:	d0f8      	beq.n	802118c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802119a:	e78f      	b.n	80210bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0802119c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 802119c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80211a0:	461e      	mov	r6, r3
 80211a2:	4b36      	ldr	r3, [pc, #216]	@ (802127c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 80211a4:	e9c0 3100 	strd	r3, r1, [r0]
 80211a8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80211ac:	8103      	strh	r3, [r0, #8]
 80211ae:	2500      	movs	r5, #0
 80211b0:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80211b4:	7283      	strb	r3, [r0, #10]
 80211b6:	f100 0814 	add.w	r8, r0, #20
 80211ba:	4604      	mov	r4, r0
 80211bc:	8185      	strh	r5, [r0, #12]
 80211be:	81c5      	strh	r5, [r0, #14]
 80211c0:	8205      	strh	r5, [r0, #16]
 80211c2:	8245      	strh	r5, [r0, #18]
 80211c4:	4640      	mov	r0, r8
 80211c6:	4617      	mov	r7, r2
 80211c8:	f7ec fafc 	bl	800d7c4 <_ZN8touchgfx7OutlineC1Ev>
 80211cc:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 80211d0:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 80211d4:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 80211d8:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 80211dc:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 80211e0:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 80211e4:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 80211e8:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 80211ec:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 80211f0:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 80211f4:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 80211f8:	6830      	ldr	r0, [r6, #0]
 80211fa:	6871      	ldr	r1, [r6, #4]
 80211fc:	8872      	ldrh	r2, [r6, #2]
 80211fe:	8835      	ldrh	r5, [r6, #0]
 8021200:	466b      	mov	r3, sp
 8021202:	c303      	stmia	r3!, {r0, r1}
 8021204:	887b      	ldrh	r3, [r7, #2]
 8021206:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 802120a:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 802120e:	4413      	add	r3, r2
 8021210:	883a      	ldrh	r2, [r7, #0]
 8021212:	81e3      	strh	r3, [r4, #14]
 8021214:	442a      	add	r2, r5
 8021216:	81a2      	strh	r2, [r4, #12]
 8021218:	8220      	strh	r0, [r4, #16]
 802121a:	8261      	strh	r1, [r4, #18]
 802121c:	4668      	mov	r0, sp
 802121e:	4639      	mov	r1, r7
 8021220:	f7ee f81a 	bl	800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021224:	f104 000c 	add.w	r0, r4, #12
 8021228:	f7ed ffee 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802122c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021230:	f8bd 2000 	ldrh.w	r2, [sp]
 8021234:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8021238:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 802123c:	4640      	mov	r0, r8
 802123e:	f7ec faa5 	bl	800d78c <_ZN8touchgfx7Outline5resetEv>
 8021242:	f9bd 3000 	ldrsh.w	r3, [sp]
 8021246:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 802124a:	015b      	lsls	r3, r3, #5
 802124c:	64e3      	str	r3, [r4, #76]	@ 0x4c
 802124e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021252:	015b      	lsls	r3, r3, #5
 8021254:	6523      	str	r3, [r4, #80]	@ 0x50
 8021256:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802125a:	015b      	lsls	r3, r3, #5
 802125c:	6563      	str	r3, [r4, #84]	@ 0x54
 802125e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8021262:	015b      	lsls	r3, r3, #5
 8021264:	65a3      	str	r3, [r4, #88]	@ 0x58
 8021266:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 802126a:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 802126e:	4620      	mov	r0, r4
 8021270:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8021274:	b002      	add	sp, #8
 8021276:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802127a:	bf00      	nop
 802127c:	08025648 	.word	0x08025648

08021280 <_ZN8touchgfx6Canvas5closeEv>:
 8021280:	b538      	push	{r3, r4, r5, lr}
 8021282:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8021286:	4604      	mov	r4, r0
 8021288:	b193      	cbz	r3, 80212b0 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802128a:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 802128e:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8021292:	4213      	tst	r3, r2
 8021294:	d10c      	bne.n	80212b0 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8021296:	f100 0514 	add.w	r5, r0, #20
 802129a:	b123      	cbz	r3, 80212a6 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802129c:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 80212a0:	4628      	mov	r0, r5
 80212a2:	f7ff fea1 	bl	8020fe8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80212a6:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 80212aa:	4628      	mov	r0, r5
 80212ac:	f7ff fe9c 	bl	8020fe8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80212b0:	2300      	movs	r3, #0
 80212b2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80212b6:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 80212ba:	4298      	cmp	r0, r3
 80212bc:	bf34      	ite	cc
 80212be:	2000      	movcc	r0, #0
 80212c0:	2001      	movcs	r0, #1
 80212c2:	bd38      	pop	{r3, r4, r5, pc}

080212c4 <_ZN8touchgfx6Canvas6renderEh>:
 80212c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80212c8:	7a85      	ldrb	r5, [r0, #10]
 80212ca:	4369      	muls	r1, r5
 80212cc:	1c4d      	adds	r5, r1, #1
 80212ce:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80212d2:	122d      	asrs	r5, r5, #8
 80212d4:	4604      	mov	r4, r0
 80212d6:	f000 8099 	beq.w	802140c <_ZN8touchgfx6Canvas6renderEh+0x148>
 80212da:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 80212de:	2b00      	cmp	r3, #0
 80212e0:	f000 8094 	beq.w	802140c <_ZN8touchgfx6Canvas6renderEh+0x148>
 80212e4:	f7ff ffcc 	bl	8021280 <_ZN8touchgfx6Canvas5closeEv>
 80212e8:	4607      	mov	r7, r0
 80212ea:	2800      	cmp	r0, #0
 80212ec:	d045      	beq.n	802137a <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80212ee:	6860      	ldr	r0, [r4, #4]
 80212f0:	4e47      	ldr	r6, [pc, #284]	@ (8021410 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 80212f2:	6803      	ldr	r3, [r0, #0]
 80212f4:	6837      	ldr	r7, [r6, #0]
 80212f6:	689b      	ldr	r3, [r3, #8]
 80212f8:	4798      	blx	r3
 80212fa:	4601      	mov	r1, r0
 80212fc:	4638      	mov	r0, r7
 80212fe:	f7e9 ff4d 	bl	800b19c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8021302:	4607      	mov	r7, r0
 8021304:	f7e1 fb8c 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 8021308:	6803      	ldr	r3, [r0, #0]
 802130a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802130c:	4798      	blx	r3
 802130e:	4680      	mov	r8, r0
 8021310:	f7e1 fb86 	bl	8002a20 <_ZN8touchgfx3HAL3lcdEv>
 8021314:	6803      	ldr	r3, [r0, #0]
 8021316:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021318:	4798      	blx	r3
 802131a:	280b      	cmp	r0, #11
 802131c:	d85b      	bhi.n	80213d6 <_ZN8touchgfx6Canvas6renderEh+0x112>
 802131e:	e8df f000 	tbb	[pc, r0]
 8021322:	5c51      	.short	0x5c51
 8021324:	305a066c 	.word	0x305a066c
 8021328:	65656540 	.word	0x65656540
 802132c:	6565      	.short	0x6565
 802132e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021332:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8021336:	2208      	movs	r2, #8
 8021338:	fb91 f2f2 	sdiv	r2, r1, r2
 802133c:	fb08 2303 	mla	r3, r8, r3, r2
 8021340:	441f      	add	r7, r3
 8021342:	424b      	negs	r3, r1
 8021344:	f003 0307 	and.w	r3, r3, #7
 8021348:	f001 0107 	and.w	r1, r1, #7
 802134c:	bf58      	it	pl
 802134e:	4259      	negpl	r1, r3
 8021350:	b2c9      	uxtb	r1, r1
 8021352:	b2ed      	uxtb	r5, r5
 8021354:	463a      	mov	r2, r7
 8021356:	e9cd 1500 	strd	r1, r5, [sp]
 802135a:	fa0f f388 	sxth.w	r3, r8
 802135e:	6861      	ldr	r1, [r4, #4]
 8021360:	f104 0014 	add.w	r0, r4, #20
 8021364:	f7ff fe4c 	bl	8021000 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8021368:	4607      	mov	r7, r0
 802136a:	6860      	ldr	r0, [r4, #4]
 802136c:	6803      	ldr	r3, [r0, #0]
 802136e:	691b      	ldr	r3, [r3, #16]
 8021370:	4798      	blx	r3
 8021372:	6830      	ldr	r0, [r6, #0]
 8021374:	6803      	ldr	r3, [r0, #0]
 8021376:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021378:	4798      	blx	r3
 802137a:	4638      	mov	r0, r7
 802137c:	b002      	add	sp, #8
 802137e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021382:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021386:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802138a:	2204      	movs	r2, #4
 802138c:	fb91 f2f2 	sdiv	r2, r1, r2
 8021390:	fb08 2303 	mla	r3, r8, r3, r2
 8021394:	441f      	add	r7, r3
 8021396:	424b      	negs	r3, r1
 8021398:	f003 0303 	and.w	r3, r3, #3
 802139c:	f001 0103 	and.w	r1, r1, #3
 80213a0:	e7d4      	b.n	802134c <_ZN8touchgfx6Canvas6renderEh+0x88>
 80213a2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80213a6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80213aa:	2900      	cmp	r1, #0
 80213ac:	f04f 0202 	mov.w	r2, #2
 80213b0:	fb91 f2f2 	sdiv	r2, r1, r2
 80213b4:	f001 0101 	and.w	r1, r1, #1
 80213b8:	fb08 2303 	mla	r3, r8, r3, r2
 80213bc:	441f      	add	r7, r3
 80213be:	bfb8      	it	lt
 80213c0:	4249      	neglt	r1, r1
 80213c2:	e7c5      	b.n	8021350 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 80213c4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80213c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80213cc:	fb08 f303 	mul.w	r3, r8, r3
 80213d0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80213d4:	441f      	add	r7, r3
 80213d6:	2100      	movs	r1, #0
 80213d8:	e7bb      	b.n	8021352 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 80213da:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80213de:	fb08 f203 	mul.w	r2, r8, r3
 80213e2:	89a3      	ldrh	r3, [r4, #12]
 80213e4:	2103      	movs	r1, #3
 80213e6:	fb13 2301 	smlabb	r3, r3, r1, r2
 80213ea:	e7f3      	b.n	80213d4 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80213ec:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80213f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80213f4:	fb08 2303 	mla	r3, r8, r3, r2
 80213f8:	e7ec      	b.n	80213d4 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80213fa:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80213fe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021402:	fb08 f303 	mul.w	r3, r8, r3
 8021406:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802140a:	e7e3      	b.n	80213d4 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802140c:	2701      	movs	r7, #1
 802140e:	e7b4      	b.n	802137a <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8021410:	20013ffc 	.word	0x20013ffc

08021414 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8021414:	b510      	push	{r4, lr}
 8021416:	4b06      	ldr	r3, [pc, #24]	@ (8021430 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 8021418:	781b      	ldrb	r3, [r3, #0]
 802141a:	2b01      	cmp	r3, #1
 802141c:	d107      	bne.n	802142e <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 802141e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8021422:	680b      	ldr	r3, [r1, #0]
 8021424:	6814      	ldr	r4, [r2, #0]
 8021426:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802142a:	6013      	str	r3, [r2, #0]
 802142c:	600c      	str	r4, [r1, #0]
 802142e:	bd10      	pop	{r4, pc}
 8021430:	20013ff2 	.word	0x20013ff2

08021434 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8021434:	b513      	push	{r0, r1, r4, lr}
 8021436:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802143a:	4604      	mov	r4, r0
 802143c:	e9cd 2100 	strd	r2, r1, [sp]
 8021440:	b9a3      	cbnz	r3, 802146c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8021442:	466a      	mov	r2, sp
 8021444:	a901      	add	r1, sp, #4
 8021446:	4620      	mov	r0, r4
 8021448:	f7ff ffe4 	bl	8021414 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802144c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802144e:	9901      	ldr	r1, [sp, #4]
 8021450:	9a00      	ldr	r2, [sp, #0]
 8021452:	1ac9      	subs	r1, r1, r3
 8021454:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8021456:	9101      	str	r1, [sp, #4]
 8021458:	1ad2      	subs	r2, r2, r3
 802145a:	2a00      	cmp	r2, #0
 802145c:	9200      	str	r2, [sp, #0]
 802145e:	da0b      	bge.n	8021478 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8021460:	2301      	movs	r3, #1
 8021462:	2900      	cmp	r1, #0
 8021464:	da0e      	bge.n	8021484 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8021466:	f043 0304 	orr.w	r3, r3, #4
 802146a:	e013      	b.n	8021494 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802146c:	f7ff ff08 	bl	8021280 <_ZN8touchgfx6Canvas5closeEv>
 8021470:	2800      	cmp	r0, #0
 8021472:	d1e6      	bne.n	8021442 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8021474:	b002      	add	sp, #8
 8021476:	bd10      	pop	{r4, pc}
 8021478:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802147a:	429a      	cmp	r2, r3
 802147c:	bfac      	ite	ge
 802147e:	2302      	movge	r3, #2
 8021480:	2300      	movlt	r3, #0
 8021482:	e7ee      	b.n	8021462 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8021484:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8021486:	4281      	cmp	r1, r0
 8021488:	bfac      	ite	ge
 802148a:	2008      	movge	r0, #8
 802148c:	2000      	movlt	r0, #0
 802148e:	4318      	orrs	r0, r3
 8021490:	b2c3      	uxtb	r3, r0
 8021492:	b158      	cbz	r0, 80214ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8021494:	2200      	movs	r2, #0
 8021496:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 802149a:	9901      	ldr	r1, [sp, #4]
 802149c:	9a00      	ldr	r2, [sp, #0]
 802149e:	66e1      	str	r1, [r4, #108]	@ 0x6c
 80214a0:	6722      	str	r2, [r4, #112]	@ 0x70
 80214a2:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 80214a6:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 80214aa:	e7e3      	b.n	8021474 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80214ac:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80214b0:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80214b4:	4298      	cmp	r0, r3
 80214b6:	d803      	bhi.n	80214c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80214b8:	f104 0014 	add.w	r0, r4, #20
 80214bc:	f7ec fe64 	bl	800e188 <_ZN8touchgfx7Outline6moveToEii>
 80214c0:	2301      	movs	r3, #1
 80214c2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80214c6:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80214ca:	2300      	movs	r3, #0
 80214cc:	e7e5      	b.n	802149a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080214ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80214ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80214d0:	ab02      	add	r3, sp, #8
 80214d2:	4604      	mov	r4, r0
 80214d4:	f843 2d08 	str.w	r2, [r3, #-8]!
 80214d8:	9101      	str	r1, [sp, #4]
 80214da:	461a      	mov	r2, r3
 80214dc:	a901      	add	r1, sp, #4
 80214de:	f7ff ff99 	bl	8021414 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80214e2:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80214e4:	9901      	ldr	r1, [sp, #4]
 80214e6:	9a00      	ldr	r2, [sp, #0]
 80214e8:	1ac9      	subs	r1, r1, r3
 80214ea:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80214ec:	9101      	str	r1, [sp, #4]
 80214ee:	1ad2      	subs	r2, r2, r3
 80214f0:	2a00      	cmp	r2, #0
 80214f2:	9200      	str	r2, [sp, #0]
 80214f4:	db1c      	blt.n	8021530 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80214f6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80214f8:	429a      	cmp	r2, r3
 80214fa:	bfac      	ite	ge
 80214fc:	2002      	movge	r0, #2
 80214fe:	2000      	movlt	r0, #0
 8021500:	2900      	cmp	r1, #0
 8021502:	db17      	blt.n	8021534 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8021504:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8021506:	4299      	cmp	r1, r3
 8021508:	bfac      	ite	ge
 802150a:	2308      	movge	r3, #8
 802150c:	2300      	movlt	r3, #0
 802150e:	4303      	orrs	r3, r0
 8021510:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8021514:	b2dd      	uxtb	r5, r3
 8021516:	b978      	cbnz	r0, 8021538 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8021518:	f104 0014 	add.w	r0, r4, #20
 802151c:	f7ff fd64 	bl	8020fe8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021520:	9b01      	ldr	r3, [sp, #4]
 8021522:	6623      	str	r3, [r4, #96]	@ 0x60
 8021524:	9b00      	ldr	r3, [sp, #0]
 8021526:	6663      	str	r3, [r4, #100]	@ 0x64
 8021528:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 802152c:	b002      	add	sp, #8
 802152e:	bd70      	pop	{r4, r5, r6, pc}
 8021530:	2001      	movs	r0, #1
 8021532:	e7e5      	b.n	8021500 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8021534:	2304      	movs	r3, #4
 8021536:	e7ea      	b.n	802150e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8021538:	b113      	cbz	r3, 8021540 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802153a:	ea10 0305 	ands.w	r3, r0, r5
 802153e:	d11c      	bne.n	802157a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8021540:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8021544:	f104 0614 	add.w	r6, r4, #20
 8021548:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 802154c:	b98b      	cbnz	r3, 8021572 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802154e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021552:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8021556:	4298      	cmp	r0, r3
 8021558:	d802      	bhi.n	8021560 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802155a:	4630      	mov	r0, r6
 802155c:	f7ec fe14 	bl	800e188 <_ZN8touchgfx7Outline6moveToEii>
 8021560:	2301      	movs	r3, #1
 8021562:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8021566:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802156a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802156e:	4630      	mov	r0, r6
 8021570:	e7d4      	b.n	802151c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8021572:	4630      	mov	r0, r6
 8021574:	f7ff fd38 	bl	8020fe8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021578:	e7f7      	b.n	802156a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802157a:	461d      	mov	r5, r3
 802157c:	e7d0      	b.n	8021520 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08021580 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8021580:	b538      	push	{r3, r4, r5, lr}
 8021582:	ed2d 8b10 	vpush	{d8-d15}
 8021586:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 802158a:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 80216f4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 802158e:	4605      	mov	r5, r0
 8021590:	eeb0 ca40 	vmov.f32	s24, s0
 8021594:	eef0 ca60 	vmov.f32	s25, s1
 8021598:	eeb0 da41 	vmov.f32	s26, s2
 802159c:	eef0 da61 	vmov.f32	s27, s3
 80215a0:	eeb0 ea42 	vmov.f32	s28, s4
 80215a4:	eef0 ea62 	vmov.f32	s29, s5
 80215a8:	460c      	mov	r4, r1
 80215aa:	eef0 aa6b 	vmov.f32	s21, s23
 80215ae:	2c08      	cmp	r4, #8
 80215b0:	d86e      	bhi.n	8021690 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 80215b2:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 80215b6:	ee7d 7aee 	vsub.f32	s15, s27, s29
 80215ba:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 80215be:	ee3e 7aec 	vsub.f32	s14, s29, s25
 80215c2:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 80215c6:	ee3c fa0d 	vadd.f32	s30, s24, s26
 80215ca:	eee6 7a07 	vfma.f32	s15, s12, s14
 80215ce:	ee7c faad 	vadd.f32	s31, s25, s27
 80215d2:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 80215d6:	ee3d aaae 	vadd.f32	s20, s27, s29
 80215da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80215de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80215e2:	ee2f fa2b 	vmul.f32	s30, s30, s23
 80215e6:	ee6f faab 	vmul.f32	s31, s31, s23
 80215ea:	ee69 9aab 	vmul.f32	s19, s19, s23
 80215ee:	ee2a aa2b 	vmul.f32	s20, s20, s23
 80215f2:	bf48      	it	mi
 80215f4:	eef1 7a67 	vnegmi.f32	s15, s15
 80215f8:	ee7f 8a29 	vadd.f32	s17, s30, s19
 80215fc:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8021600:	eef4 7acb 	vcmpe.f32	s15, s22
 8021604:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021608:	ee68 8aab 	vmul.f32	s17, s17, s23
 802160c:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8021610:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 8021614:	dd3f      	ble.n	8021696 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 8021616:	ee27 7a07 	vmul.f32	s14, s14, s14
 802161a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802161e:	eea6 7aa6 	vfma.f32	s14, s13, s13
 8021622:	ee27 7a06 	vmul.f32	s14, s14, s12
 8021626:	eef4 7ac7 	vcmpe.f32	s15, s14
 802162a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802162e:	d847      	bhi.n	80216c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8021630:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 8021634:	ee3e 0aed 	vsub.f32	s0, s29, s27
 8021638:	f000 fa3b 	bl	8021ab2 <atan2f>
 802163c:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8021640:	eeb0 8a40 	vmov.f32	s16, s0
 8021644:	ee3d 0aec 	vsub.f32	s0, s27, s25
 8021648:	f000 fa33 	bl	8021ab2 <atan2f>
 802164c:	ee38 0a40 	vsub.f32	s0, s16, s0
 8021650:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80216f8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 8021654:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021658:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802165c:	bf48      	it	mi
 802165e:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021662:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802166a:	bfa4      	itt	ge
 802166c:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 80216fc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8021670:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8021674:	eddf 7a22 	vldr	s15, [pc, #136]	@ 8021700 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 8021678:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802167c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021680:	d51e      	bpl.n	80216c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8021682:	eef0 0a49 	vmov.f32	s1, s18
 8021686:	eeb0 0a68 	vmov.f32	s0, s17
 802168a:	4628      	mov	r0, r5
 802168c:	f7ea ff8c 	bl	800c5a8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021690:	ecbd 8b10 	vpop	{d8-d15}
 8021694:	bd38      	pop	{r3, r4, r5, pc}
 8021696:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 802169a:	eeb0 7a68 	vmov.f32	s14, s17
 802169e:	eea7 7aea 	vfms.f32	s14, s15, s21
 80216a2:	ee7c 7aae 	vadd.f32	s15, s25, s29
 80216a6:	eef0 6a49 	vmov.f32	s13, s18
 80216aa:	eee7 6aea 	vfms.f32	s13, s15, s21
 80216ae:	ee66 7aa6 	vmul.f32	s15, s13, s13
 80216b2:	eee7 7a07 	vfma.f32	s15, s14, s14
 80216b6:	eef4 7ac6 	vcmpe.f32	s15, s12
 80216ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80216be:	d9e0      	bls.n	8021682 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 80216c0:	3401      	adds	r4, #1
 80216c2:	eef0 0a6c 	vmov.f32	s1, s25
 80216c6:	eeb0 0a4c 	vmov.f32	s0, s24
 80216ca:	4621      	mov	r1, r4
 80216cc:	eef0 2a49 	vmov.f32	s5, s18
 80216d0:	eeb0 2a68 	vmov.f32	s4, s17
 80216d4:	eef0 1a6f 	vmov.f32	s3, s31
 80216d8:	eeb0 1a4f 	vmov.f32	s2, s30
 80216dc:	4628      	mov	r0, r5
 80216de:	f7ff ff4f 	bl	8021580 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 80216e2:	eef0 da4a 	vmov.f32	s27, s20
 80216e6:	eeb0 da69 	vmov.f32	s26, s19
 80216ea:	eef0 ca49 	vmov.f32	s25, s18
 80216ee:	eeb0 ca68 	vmov.f32	s24, s17
 80216f2:	e75c      	b.n	80215ae <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 80216f4:	2edbe6ff 	.word	0x2edbe6ff
 80216f8:	40490fdb 	.word	0x40490fdb
 80216fc:	40c90fdb 	.word	0x40c90fdb
 8021700:	3dcccccd 	.word	0x3dcccccd

08021704 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 8021704:	b530      	push	{r4, r5, lr}
 8021706:	ed2d 8b10 	vpush	{d8-d15}
 802170a:	4604      	mov	r4, r0
 802170c:	b085      	sub	sp, #20
 802170e:	eef0 8a40 	vmov.f32	s17, s0
 8021712:	eef0 9a60 	vmov.f32	s19, s1
 8021716:	eef0 fa41 	vmov.f32	s31, s2
 802171a:	eeb0 fa61 	vmov.f32	s30, s3
 802171e:	eef0 ba42 	vmov.f32	s23, s4
 8021722:	eeb0 ca62 	vmov.f32	s24, s5
 8021726:	eef0 aa43 	vmov.f32	s21, s6
 802172a:	eeb0 ba63 	vmov.f32	s22, s7
 802172e:	460d      	mov	r5, r1
 8021730:	2d08      	cmp	r5, #8
 8021732:	f200 8115 	bhi.w	8021960 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 8021736:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 802173a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802173e:	ee7f 6aab 	vadd.f32	s13, s31, s23
 8021742:	ee26 6a27 	vmul.f32	s12, s12, s15
 8021746:	ee38 daaf 	vadd.f32	s26, s17, s31
 802174a:	ed8d 6a01 	vstr	s12, [sp, #4]
 802174e:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8021752:	ee2d da27 	vmul.f32	s26, s26, s15
 8021756:	ee7c ca0b 	vadd.f32	s25, s24, s22
 802175a:	eeb0 ea4d 	vmov.f32	s28, s26
 802175e:	eea6 eaa7 	vfma.f32	s28, s13, s15
 8021762:	ee6c caa7 	vmul.f32	s25, s25, s15
 8021766:	ee66 6a27 	vmul.f32	s13, s12, s15
 802176a:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 802176e:	edcd 6a03 	vstr	s13, [sp, #12]
 8021772:	ee79 da8f 	vadd.f32	s27, s19, s30
 8021776:	eef0 6a6c 	vmov.f32	s13, s25
 802177a:	eee7 6a27 	vfma.f32	s13, s14, s15
 802177e:	ee6d daa7 	vmul.f32	s27, s27, s15
 8021782:	ee2e ea27 	vmul.f32	s28, s28, s15
 8021786:	eef0 ea6d 	vmov.f32	s29, s27
 802178a:	eee7 ea27 	vfma.f32	s29, s14, s15
 802178e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8021792:	ee6e eaa7 	vmul.f32	s29, s29, s15
 8021796:	ed8d 7a02 	vstr	s14, [sp, #8]
 802179a:	ed9d 7a03 	vldr	s14, [sp, #12]
 802179e:	ee3e 9a07 	vadd.f32	s18, s28, s14
 80217a2:	ed9d 7a02 	vldr	s14, [sp, #8]
 80217a6:	ee3e aa87 	vadd.f32	s20, s29, s14
 80217aa:	ee29 9a27 	vmul.f32	s18, s18, s15
 80217ae:	ee2a aa27 	vmul.f32	s20, s20, s15
 80217b2:	eef0 6a67 	vmov.f32	s13, s15
 80217b6:	2d00      	cmp	r5, #0
 80217b8:	f000 810d 	beq.w	80219d6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80217bc:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 80217c0:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 80217c4:	ee7b 7a69 	vsub.f32	s15, s22, s19
 80217c8:	ee3f 6aea 	vsub.f32	s12, s31, s21
 80217cc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80217d0:	ee3b 5aea 	vsub.f32	s10, s23, s21
 80217d4:	eea6 7a27 	vfma.f32	s14, s12, s15
 80217d8:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 80217dc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80217e0:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 80217e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80217e8:	eea5 6a27 	vfma.f32	s12, s10, s15
 80217ec:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8021a1c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 80217f0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80217f4:	bf48      	it	mi
 80217f6:	eeb1 7a47 	vnegmi.f32	s14, s14
 80217fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80217fe:	eeb4 7ae4 	vcmpe.f32	s14, s9
 8021802:	bf48      	it	mi
 8021804:	eeb1 6a46 	vnegmi.f32	s12, s12
 8021808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802180c:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8021810:	f340 80aa 	ble.w	8021968 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 8021814:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8021818:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802181c:	dd5c      	ble.n	80218d8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 802181e:	ee65 5aa5 	vmul.f32	s11, s11, s11
 8021822:	ee37 7a06 	vadd.f32	s14, s14, s12
 8021826:	eee7 5aa7 	vfma.f32	s11, s15, s15
 802182a:	ee27 7a07 	vmul.f32	s14, s14, s14
 802182e:	ee65 7a85 	vmul.f32	s15, s11, s10
 8021832:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8021836:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802183a:	f200 80cc 	bhi.w	80219d6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802183e:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021842:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8021846:	f000 f934 	bl	8021ab2 <atan2f>
 802184a:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802184e:	eeb0 8a40 	vmov.f32	s16, s0
 8021852:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8021856:	f000 f92c 	bl	8021ab2 <atan2f>
 802185a:	ee38 fa40 	vsub.f32	s30, s16, s0
 802185e:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8021862:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 8021866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802186a:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802186e:	bf48      	it	mi
 8021870:	eeb1 fa4f 	vnegmi.f32	s30, s30
 8021874:	f000 f91d 	bl	8021ab2 <atan2f>
 8021878:	ee30 0a48 	vsub.f32	s0, s0, s16
 802187c:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8021a20 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021880:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021884:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021888:	eeb4 fae7 	vcmpe.f32	s30, s15
 802188c:	bf48      	it	mi
 802188e:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021892:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8021a20 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802189a:	bfa8      	it	ge
 802189c:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8021a24 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80218a0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80218a4:	bfa8      	it	ge
 80218a6:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 80218aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218ae:	bfa8      	it	ge
 80218b0:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8021a24 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80218b4:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8021a28 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 80218b8:	bfa8      	it	ge
 80218ba:	ee37 0a40 	vsubge.f32	s0, s14, s0
 80218be:	ee3f 0a00 	vadd.f32	s0, s30, s0
 80218c2:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80218c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218ca:	f140 8084 	bpl.w	80219d6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80218ce:	eef0 0a4a 	vmov.f32	s1, s20
 80218d2:	eeb0 0a49 	vmov.f32	s0, s18
 80218d6:	e040      	b.n	802195a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 80218d8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80218dc:	ee27 7a07 	vmul.f32	s14, s14, s14
 80218e0:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80218e4:	ee67 7a85 	vmul.f32	s15, s15, s10
 80218e8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80218ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218f0:	d871      	bhi.n	80219d6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80218f2:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80218f6:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80218fa:	f000 f8da 	bl	8021ab2 <atan2f>
 80218fe:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8021902:	eeb0 8a40 	vmov.f32	s16, s0
 8021906:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802190a:	f000 f8d2 	bl	8021ab2 <atan2f>
 802190e:	ee38 0a40 	vsub.f32	s0, s16, s0
 8021912:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8021a20 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021916:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802191a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802191e:	bf48      	it	mi
 8021920:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021924:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021928:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802192c:	bfa4      	itt	ge
 802192e:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8021a24 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021932:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8021936:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8021a28 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802193a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802193e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021942:	d548      	bpl.n	80219d6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021944:	eef0 0a4f 	vmov.f32	s1, s30
 8021948:	eeb0 0a6f 	vmov.f32	s0, s31
 802194c:	4620      	mov	r0, r4
 802194e:	f7ea fe2b 	bl	800c5a8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021952:	eef0 0a4c 	vmov.f32	s1, s24
 8021956:	eeb0 0a6b 	vmov.f32	s0, s23
 802195a:	4620      	mov	r0, r4
 802195c:	f7ea fe24 	bl	800c5a8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021960:	b005      	add	sp, #20
 8021962:	ecbd 8b10 	vpop	{d8-d15}
 8021966:	bd30      	pop	{r4, r5, pc}
 8021968:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8021a1c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 802196c:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8021970:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021974:	dd19      	ble.n	80219aa <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 8021976:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802197a:	ee26 7a06 	vmul.f32	s14, s12, s12
 802197e:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8021982:	ee67 7a85 	vmul.f32	s15, s15, s10
 8021986:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802198a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802198e:	d822      	bhi.n	80219d6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021990:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8021994:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8021998:	f000 f88b 	bl	8021ab2 <atan2f>
 802199c:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80219a0:	eeb0 8a40 	vmov.f32	s16, s0
 80219a4:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80219a8:	e7af      	b.n	802190a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 80219aa:	ee78 7aaa 	vadd.f32	s15, s17, s21
 80219ae:	eeb0 7a49 	vmov.f32	s14, s18
 80219b2:	eea7 7ae6 	vfms.f32	s14, s15, s13
 80219b6:	ee79 7a8b 	vadd.f32	s15, s19, s22
 80219ba:	eeb0 6a4a 	vmov.f32	s12, s20
 80219be:	eea7 6ae6 	vfms.f32	s12, s15, s13
 80219c2:	ee66 7a06 	vmul.f32	s15, s12, s12
 80219c6:	eee7 7a07 	vfma.f32	s15, s14, s14
 80219ca:	eef4 7ac5 	vcmpe.f32	s15, s10
 80219ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80219d2:	f67f af7c 	bls.w	80218ce <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 80219d6:	3501      	adds	r5, #1
 80219d8:	eef0 0a69 	vmov.f32	s1, s19
 80219dc:	eeb0 0a68 	vmov.f32	s0, s17
 80219e0:	4629      	mov	r1, r5
 80219e2:	eef0 3a4a 	vmov.f32	s7, s20
 80219e6:	eeb0 3a49 	vmov.f32	s6, s18
 80219ea:	eef0 2a6e 	vmov.f32	s5, s29
 80219ee:	eeb0 2a4e 	vmov.f32	s4, s28
 80219f2:	eef0 1a6d 	vmov.f32	s3, s27
 80219f6:	eeb0 1a4d 	vmov.f32	s2, s26
 80219fa:	4620      	mov	r0, r4
 80219fc:	f7ff fe82 	bl	8021704 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8021a00:	eeb0 ca6c 	vmov.f32	s24, s25
 8021a04:	eddd ba01 	vldr	s23, [sp, #4]
 8021a08:	ed9d fa02 	vldr	s30, [sp, #8]
 8021a0c:	eddd fa03 	vldr	s31, [sp, #12]
 8021a10:	eef0 9a4a 	vmov.f32	s19, s20
 8021a14:	eef0 8a49 	vmov.f32	s17, s18
 8021a18:	e68a      	b.n	8021730 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8021a1a:	bf00      	nop
 8021a1c:	2edbe6ff 	.word	0x2edbe6ff
 8021a20:	40490fdb 	.word	0x40490fdb
 8021a24:	40c90fdb 	.word	0x40c90fdb
 8021a28:	3dcccccd 	.word	0x3dcccccd

08021a2c <_ZN8touchgfx6CanvasD1Ev>:
 8021a2c:	b510      	push	{r4, lr}
 8021a2e:	4b04      	ldr	r3, [pc, #16]	@ (8021a40 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8021a30:	4604      	mov	r4, r0
 8021a32:	f840 3b14 	str.w	r3, [r0], #20
 8021a36:	f7eb fea1 	bl	800d77c <_ZN8touchgfx7OutlineD1Ev>
 8021a3a:	4620      	mov	r0, r4
 8021a3c:	bd10      	pop	{r4, pc}
 8021a3e:	bf00      	nop
 8021a40:	08025648 	.word	0x08025648

08021a44 <_ZN8touchgfx6CanvasD0Ev>:
 8021a44:	b510      	push	{r4, lr}
 8021a46:	4604      	mov	r4, r0
 8021a48:	f7ff fff0 	bl	8021a2c <_ZN8touchgfx6CanvasD1Ev>
 8021a4c:	4620      	mov	r0, r4
 8021a4e:	2174      	movs	r1, #116	@ 0x74
 8021a50:	f000 f807 	bl	8021a62 <_ZdlPvj>
 8021a54:	4620      	mov	r0, r4
 8021a56:	bd10      	pop	{r4, pc}

08021a58 <__aeabi_atexit>:
 8021a58:	460b      	mov	r3, r1
 8021a5a:	4601      	mov	r1, r0
 8021a5c:	4618      	mov	r0, r3
 8021a5e:	f001 b81f 	b.w	8022aa0 <__cxa_atexit>

08021a62 <_ZdlPvj>:
 8021a62:	f000 b812 	b.w	8021a8a <_ZdlPv>

08021a66 <__cxa_guard_acquire>:
 8021a66:	6802      	ldr	r2, [r0, #0]
 8021a68:	07d2      	lsls	r2, r2, #31
 8021a6a:	4603      	mov	r3, r0
 8021a6c:	d405      	bmi.n	8021a7a <__cxa_guard_acquire+0x14>
 8021a6e:	7842      	ldrb	r2, [r0, #1]
 8021a70:	b102      	cbz	r2, 8021a74 <__cxa_guard_acquire+0xe>
 8021a72:	deff      	udf	#255	@ 0xff
 8021a74:	2001      	movs	r0, #1
 8021a76:	7058      	strb	r0, [r3, #1]
 8021a78:	4770      	bx	lr
 8021a7a:	2000      	movs	r0, #0
 8021a7c:	4770      	bx	lr

08021a7e <__cxa_guard_release>:
 8021a7e:	2301      	movs	r3, #1
 8021a80:	6003      	str	r3, [r0, #0]
 8021a82:	4770      	bx	lr

08021a84 <__cxa_pure_virtual>:
 8021a84:	b508      	push	{r3, lr}
 8021a86:	f000 f80f 	bl	8021aa8 <_ZSt9terminatev>

08021a8a <_ZdlPv>:
 8021a8a:	f000 bf53 	b.w	8022934 <free>

08021a8e <_ZN10__cxxabiv111__terminateEPFvvE>:
 8021a8e:	b508      	push	{r3, lr}
 8021a90:	4780      	blx	r0
 8021a92:	f000 ff1b 	bl	80228cc <abort>
	...

08021a98 <_ZSt13get_terminatev>:
 8021a98:	4b02      	ldr	r3, [pc, #8]	@ (8021aa4 <_ZSt13get_terminatev+0xc>)
 8021a9a:	6818      	ldr	r0, [r3, #0]
 8021a9c:	f3bf 8f5b 	dmb	ish
 8021aa0:	4770      	bx	lr
 8021aa2:	bf00      	nop
 8021aa4:	20000218 	.word	0x20000218

08021aa8 <_ZSt9terminatev>:
 8021aa8:	b508      	push	{r3, lr}
 8021aaa:	f7ff fff5 	bl	8021a98 <_ZSt13get_terminatev>
 8021aae:	f7ff ffee 	bl	8021a8e <_ZN10__cxxabiv111__terminateEPFvvE>

08021ab2 <atan2f>:
 8021ab2:	f000 b94d 	b.w	8021d50 <__ieee754_atan2f>
	...

08021ab8 <sqrtf>:
 8021ab8:	b508      	push	{r3, lr}
 8021aba:	ed2d 8b02 	vpush	{d8}
 8021abe:	eeb0 8a40 	vmov.f32	s16, s0
 8021ac2:	f000 f8a1 	bl	8021c08 <__ieee754_sqrtf>
 8021ac6:	eeb4 8a48 	vcmp.f32	s16, s16
 8021aca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021ace:	d60c      	bvs.n	8021aea <sqrtf+0x32>
 8021ad0:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8021af0 <sqrtf+0x38>
 8021ad4:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8021ad8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021adc:	d505      	bpl.n	8021aea <sqrtf+0x32>
 8021ade:	f001 fa3b 	bl	8022f58 <__errno>
 8021ae2:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8021ae6:	2321      	movs	r3, #33	@ 0x21
 8021ae8:	6003      	str	r3, [r0, #0]
 8021aea:	ecbd 8b02 	vpop	{d8}
 8021aee:	bd08      	pop	{r3, pc}
 8021af0:	00000000 	.word	0x00000000

08021af4 <cosf>:
 8021af4:	ee10 3a10 	vmov	r3, s0
 8021af8:	b507      	push	{r0, r1, r2, lr}
 8021afa:	4a1e      	ldr	r2, [pc, #120]	@ (8021b74 <cosf+0x80>)
 8021afc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021b00:	4293      	cmp	r3, r2
 8021b02:	d806      	bhi.n	8021b12 <cosf+0x1e>
 8021b04:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8021b78 <cosf+0x84>
 8021b08:	b003      	add	sp, #12
 8021b0a:	f85d eb04 	ldr.w	lr, [sp], #4
 8021b0e:	f000 b87f 	b.w	8021c10 <__kernel_cosf>
 8021b12:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021b16:	d304      	bcc.n	8021b22 <cosf+0x2e>
 8021b18:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021b1c:	b003      	add	sp, #12
 8021b1e:	f85d fb04 	ldr.w	pc, [sp], #4
 8021b22:	4668      	mov	r0, sp
 8021b24:	f000 f9b4 	bl	8021e90 <__ieee754_rem_pio2f>
 8021b28:	f000 0003 	and.w	r0, r0, #3
 8021b2c:	2801      	cmp	r0, #1
 8021b2e:	d009      	beq.n	8021b44 <cosf+0x50>
 8021b30:	2802      	cmp	r0, #2
 8021b32:	d010      	beq.n	8021b56 <cosf+0x62>
 8021b34:	b9b0      	cbnz	r0, 8021b64 <cosf+0x70>
 8021b36:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b3a:	ed9d 0a00 	vldr	s0, [sp]
 8021b3e:	f000 f867 	bl	8021c10 <__kernel_cosf>
 8021b42:	e7eb      	b.n	8021b1c <cosf+0x28>
 8021b44:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b48:	ed9d 0a00 	vldr	s0, [sp]
 8021b4c:	f000 f8b8 	bl	8021cc0 <__kernel_sinf>
 8021b50:	eeb1 0a40 	vneg.f32	s0, s0
 8021b54:	e7e2      	b.n	8021b1c <cosf+0x28>
 8021b56:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b5a:	ed9d 0a00 	vldr	s0, [sp]
 8021b5e:	f000 f857 	bl	8021c10 <__kernel_cosf>
 8021b62:	e7f5      	b.n	8021b50 <cosf+0x5c>
 8021b64:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b68:	ed9d 0a00 	vldr	s0, [sp]
 8021b6c:	2001      	movs	r0, #1
 8021b6e:	f000 f8a7 	bl	8021cc0 <__kernel_sinf>
 8021b72:	e7d3      	b.n	8021b1c <cosf+0x28>
 8021b74:	3f490fd8 	.word	0x3f490fd8
 8021b78:	00000000 	.word	0x00000000

08021b7c <sinf>:
 8021b7c:	ee10 3a10 	vmov	r3, s0
 8021b80:	b507      	push	{r0, r1, r2, lr}
 8021b82:	4a1f      	ldr	r2, [pc, #124]	@ (8021c00 <sinf+0x84>)
 8021b84:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021b88:	4293      	cmp	r3, r2
 8021b8a:	d807      	bhi.n	8021b9c <sinf+0x20>
 8021b8c:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8021c04 <sinf+0x88>
 8021b90:	2000      	movs	r0, #0
 8021b92:	b003      	add	sp, #12
 8021b94:	f85d eb04 	ldr.w	lr, [sp], #4
 8021b98:	f000 b892 	b.w	8021cc0 <__kernel_sinf>
 8021b9c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021ba0:	d304      	bcc.n	8021bac <sinf+0x30>
 8021ba2:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021ba6:	b003      	add	sp, #12
 8021ba8:	f85d fb04 	ldr.w	pc, [sp], #4
 8021bac:	4668      	mov	r0, sp
 8021bae:	f000 f96f 	bl	8021e90 <__ieee754_rem_pio2f>
 8021bb2:	f000 0003 	and.w	r0, r0, #3
 8021bb6:	2801      	cmp	r0, #1
 8021bb8:	d00a      	beq.n	8021bd0 <sinf+0x54>
 8021bba:	2802      	cmp	r0, #2
 8021bbc:	d00f      	beq.n	8021bde <sinf+0x62>
 8021bbe:	b9c0      	cbnz	r0, 8021bf2 <sinf+0x76>
 8021bc0:	eddd 0a01 	vldr	s1, [sp, #4]
 8021bc4:	ed9d 0a00 	vldr	s0, [sp]
 8021bc8:	2001      	movs	r0, #1
 8021bca:	f000 f879 	bl	8021cc0 <__kernel_sinf>
 8021bce:	e7ea      	b.n	8021ba6 <sinf+0x2a>
 8021bd0:	eddd 0a01 	vldr	s1, [sp, #4]
 8021bd4:	ed9d 0a00 	vldr	s0, [sp]
 8021bd8:	f000 f81a 	bl	8021c10 <__kernel_cosf>
 8021bdc:	e7e3      	b.n	8021ba6 <sinf+0x2a>
 8021bde:	eddd 0a01 	vldr	s1, [sp, #4]
 8021be2:	ed9d 0a00 	vldr	s0, [sp]
 8021be6:	2001      	movs	r0, #1
 8021be8:	f000 f86a 	bl	8021cc0 <__kernel_sinf>
 8021bec:	eeb1 0a40 	vneg.f32	s0, s0
 8021bf0:	e7d9      	b.n	8021ba6 <sinf+0x2a>
 8021bf2:	eddd 0a01 	vldr	s1, [sp, #4]
 8021bf6:	ed9d 0a00 	vldr	s0, [sp]
 8021bfa:	f000 f809 	bl	8021c10 <__kernel_cosf>
 8021bfe:	e7f5      	b.n	8021bec <sinf+0x70>
 8021c00:	3f490fd8 	.word	0x3f490fd8
 8021c04:	00000000 	.word	0x00000000

08021c08 <__ieee754_sqrtf>:
 8021c08:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8021c0c:	4770      	bx	lr
	...

08021c10 <__kernel_cosf>:
 8021c10:	ee10 3a10 	vmov	r3, s0
 8021c14:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021c18:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8021c1c:	eef0 6a40 	vmov.f32	s13, s0
 8021c20:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8021c24:	d204      	bcs.n	8021c30 <__kernel_cosf+0x20>
 8021c26:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8021c2a:	ee17 2a90 	vmov	r2, s15
 8021c2e:	b342      	cbz	r2, 8021c82 <__kernel_cosf+0x72>
 8021c30:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8021c34:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8021ca0 <__kernel_cosf+0x90>
 8021c38:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8021ca4 <__kernel_cosf+0x94>
 8021c3c:	4a1a      	ldr	r2, [pc, #104]	@ (8021ca8 <__kernel_cosf+0x98>)
 8021c3e:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021c42:	4293      	cmp	r3, r2
 8021c44:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8021cac <__kernel_cosf+0x9c>
 8021c48:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021c4c:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8021cb0 <__kernel_cosf+0xa0>
 8021c50:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021c54:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8021cb4 <__kernel_cosf+0xa4>
 8021c58:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021c5c:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8021cb8 <__kernel_cosf+0xa8>
 8021c60:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021c64:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8021c68:	ee26 6a07 	vmul.f32	s12, s12, s14
 8021c6c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021c70:	eee7 0a06 	vfma.f32	s1, s14, s12
 8021c74:	ee67 7a27 	vmul.f32	s15, s14, s15
 8021c78:	d804      	bhi.n	8021c84 <__kernel_cosf+0x74>
 8021c7a:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8021c7e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8021c82:	4770      	bx	lr
 8021c84:	4a0d      	ldr	r2, [pc, #52]	@ (8021cbc <__kernel_cosf+0xac>)
 8021c86:	4293      	cmp	r3, r2
 8021c88:	bf9a      	itte	ls
 8021c8a:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8021c8e:	ee07 3a10 	vmovls	s14, r3
 8021c92:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8021c96:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021c9a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021c9e:	e7ec      	b.n	8021c7a <__kernel_cosf+0x6a>
 8021ca0:	ad47d74e 	.word	0xad47d74e
 8021ca4:	310f74f6 	.word	0x310f74f6
 8021ca8:	3e999999 	.word	0x3e999999
 8021cac:	b493f27c 	.word	0xb493f27c
 8021cb0:	37d00d01 	.word	0x37d00d01
 8021cb4:	bab60b61 	.word	0xbab60b61
 8021cb8:	3d2aaaab 	.word	0x3d2aaaab
 8021cbc:	3f480000 	.word	0x3f480000

08021cc0 <__kernel_sinf>:
 8021cc0:	ee10 3a10 	vmov	r3, s0
 8021cc4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021cc8:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8021ccc:	d204      	bcs.n	8021cd8 <__kernel_sinf+0x18>
 8021cce:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8021cd2:	ee17 3a90 	vmov	r3, s15
 8021cd6:	b35b      	cbz	r3, 8021d30 <__kernel_sinf+0x70>
 8021cd8:	ee20 7a00 	vmul.f32	s14, s0, s0
 8021cdc:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8021d34 <__kernel_sinf+0x74>
 8021ce0:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8021d38 <__kernel_sinf+0x78>
 8021ce4:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021ce8:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8021d3c <__kernel_sinf+0x7c>
 8021cec:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021cf0:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8021d40 <__kernel_sinf+0x80>
 8021cf4:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021cf8:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8021d44 <__kernel_sinf+0x84>
 8021cfc:	ee60 6a07 	vmul.f32	s13, s0, s14
 8021d00:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021d04:	b930      	cbnz	r0, 8021d14 <__kernel_sinf+0x54>
 8021d06:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8021d48 <__kernel_sinf+0x88>
 8021d0a:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021d0e:	eea6 0a26 	vfma.f32	s0, s12, s13
 8021d12:	4770      	bx	lr
 8021d14:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8021d18:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8021d1c:	eee0 7a86 	vfma.f32	s15, s1, s12
 8021d20:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8021d24:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8021d4c <__kernel_sinf+0x8c>
 8021d28:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8021d2c:	ee30 0a60 	vsub.f32	s0, s0, s1
 8021d30:	4770      	bx	lr
 8021d32:	bf00      	nop
 8021d34:	2f2ec9d3 	.word	0x2f2ec9d3
 8021d38:	b2d72f34 	.word	0xb2d72f34
 8021d3c:	3638ef1b 	.word	0x3638ef1b
 8021d40:	b9500d01 	.word	0xb9500d01
 8021d44:	3c088889 	.word	0x3c088889
 8021d48:	be2aaaab 	.word	0xbe2aaaab
 8021d4c:	3e2aaaab 	.word	0x3e2aaaab

08021d50 <__ieee754_atan2f>:
 8021d50:	ee10 2a90 	vmov	r2, s1
 8021d54:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8021d58:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8021d5c:	b510      	push	{r4, lr}
 8021d5e:	eef0 7a40 	vmov.f32	s15, s0
 8021d62:	d806      	bhi.n	8021d72 <__ieee754_atan2f+0x22>
 8021d64:	ee10 0a10 	vmov	r0, s0
 8021d68:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8021d6c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021d70:	d904      	bls.n	8021d7c <__ieee754_atan2f+0x2c>
 8021d72:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8021d76:	eeb0 0a67 	vmov.f32	s0, s15
 8021d7a:	bd10      	pop	{r4, pc}
 8021d7c:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8021d80:	d103      	bne.n	8021d8a <__ieee754_atan2f+0x3a>
 8021d82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021d86:	f000 b9b3 	b.w	80220f0 <atanf>
 8021d8a:	1794      	asrs	r4, r2, #30
 8021d8c:	f004 0402 	and.w	r4, r4, #2
 8021d90:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8021d94:	b943      	cbnz	r3, 8021da8 <__ieee754_atan2f+0x58>
 8021d96:	2c02      	cmp	r4, #2
 8021d98:	d05e      	beq.n	8021e58 <__ieee754_atan2f+0x108>
 8021d9a:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8021e6c <__ieee754_atan2f+0x11c>
 8021d9e:	2c03      	cmp	r4, #3
 8021da0:	bf08      	it	eq
 8021da2:	eef0 7a47 	vmoveq.f32	s15, s14
 8021da6:	e7e6      	b.n	8021d76 <__ieee754_atan2f+0x26>
 8021da8:	b941      	cbnz	r1, 8021dbc <__ieee754_atan2f+0x6c>
 8021daa:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8021e70 <__ieee754_atan2f+0x120>
 8021dae:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8021e74 <__ieee754_atan2f+0x124>
 8021db2:	2800      	cmp	r0, #0
 8021db4:	bfa8      	it	ge
 8021db6:	eef0 7a47 	vmovge.f32	s15, s14
 8021dba:	e7dc      	b.n	8021d76 <__ieee754_atan2f+0x26>
 8021dbc:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8021dc0:	d110      	bne.n	8021de4 <__ieee754_atan2f+0x94>
 8021dc2:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021dc6:	f104 34ff 	add.w	r4, r4, #4294967295
 8021dca:	d107      	bne.n	8021ddc <__ieee754_atan2f+0x8c>
 8021dcc:	2c02      	cmp	r4, #2
 8021dce:	d846      	bhi.n	8021e5e <__ieee754_atan2f+0x10e>
 8021dd0:	4b29      	ldr	r3, [pc, #164]	@ (8021e78 <__ieee754_atan2f+0x128>)
 8021dd2:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8021dd6:	edd3 7a00 	vldr	s15, [r3]
 8021dda:	e7cc      	b.n	8021d76 <__ieee754_atan2f+0x26>
 8021ddc:	2c02      	cmp	r4, #2
 8021dde:	d841      	bhi.n	8021e64 <__ieee754_atan2f+0x114>
 8021de0:	4b26      	ldr	r3, [pc, #152]	@ (8021e7c <__ieee754_atan2f+0x12c>)
 8021de2:	e7f6      	b.n	8021dd2 <__ieee754_atan2f+0x82>
 8021de4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021de8:	d0df      	beq.n	8021daa <__ieee754_atan2f+0x5a>
 8021dea:	1a5b      	subs	r3, r3, r1
 8021dec:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8021df0:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8021df4:	da1a      	bge.n	8021e2c <__ieee754_atan2f+0xdc>
 8021df6:	2a00      	cmp	r2, #0
 8021df8:	da01      	bge.n	8021dfe <__ieee754_atan2f+0xae>
 8021dfa:	313c      	adds	r1, #60	@ 0x3c
 8021dfc:	db19      	blt.n	8021e32 <__ieee754_atan2f+0xe2>
 8021dfe:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8021e02:	f000 fa49 	bl	8022298 <fabsf>
 8021e06:	f000 f973 	bl	80220f0 <atanf>
 8021e0a:	eef0 7a40 	vmov.f32	s15, s0
 8021e0e:	2c01      	cmp	r4, #1
 8021e10:	d012      	beq.n	8021e38 <__ieee754_atan2f+0xe8>
 8021e12:	2c02      	cmp	r4, #2
 8021e14:	d017      	beq.n	8021e46 <__ieee754_atan2f+0xf6>
 8021e16:	2c00      	cmp	r4, #0
 8021e18:	d0ad      	beq.n	8021d76 <__ieee754_atan2f+0x26>
 8021e1a:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8021e80 <__ieee754_atan2f+0x130>
 8021e1e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021e22:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8021e84 <__ieee754_atan2f+0x134>
 8021e26:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021e2a:	e7a4      	b.n	8021d76 <__ieee754_atan2f+0x26>
 8021e2c:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8021e74 <__ieee754_atan2f+0x124>
 8021e30:	e7ed      	b.n	8021e0e <__ieee754_atan2f+0xbe>
 8021e32:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8021e88 <__ieee754_atan2f+0x138>
 8021e36:	e7ea      	b.n	8021e0e <__ieee754_atan2f+0xbe>
 8021e38:	ee17 3a90 	vmov	r3, s15
 8021e3c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8021e40:	ee07 3a90 	vmov	s15, r3
 8021e44:	e797      	b.n	8021d76 <__ieee754_atan2f+0x26>
 8021e46:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8021e80 <__ieee754_atan2f+0x130>
 8021e4a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021e4e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8021e84 <__ieee754_atan2f+0x134>
 8021e52:	ee77 7a67 	vsub.f32	s15, s14, s15
 8021e56:	e78e      	b.n	8021d76 <__ieee754_atan2f+0x26>
 8021e58:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8021e84 <__ieee754_atan2f+0x134>
 8021e5c:	e78b      	b.n	8021d76 <__ieee754_atan2f+0x26>
 8021e5e:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8021e8c <__ieee754_atan2f+0x13c>
 8021e62:	e788      	b.n	8021d76 <__ieee754_atan2f+0x26>
 8021e64:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8021e88 <__ieee754_atan2f+0x138>
 8021e68:	e785      	b.n	8021d76 <__ieee754_atan2f+0x26>
 8021e6a:	bf00      	nop
 8021e6c:	c0490fdb 	.word	0xc0490fdb
 8021e70:	bfc90fdb 	.word	0xbfc90fdb
 8021e74:	3fc90fdb 	.word	0x3fc90fdb
 8021e78:	08025660 	.word	0x08025660
 8021e7c:	08025654 	.word	0x08025654
 8021e80:	33bbbd2e 	.word	0x33bbbd2e
 8021e84:	40490fdb 	.word	0x40490fdb
 8021e88:	00000000 	.word	0x00000000
 8021e8c:	3f490fdb 	.word	0x3f490fdb

08021e90 <__ieee754_rem_pio2f>:
 8021e90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021e92:	ee10 6a10 	vmov	r6, s0
 8021e96:	4b88      	ldr	r3, [pc, #544]	@ (80220b8 <__ieee754_rem_pio2f+0x228>)
 8021e98:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8021e9c:	429d      	cmp	r5, r3
 8021e9e:	b087      	sub	sp, #28
 8021ea0:	4604      	mov	r4, r0
 8021ea2:	d805      	bhi.n	8021eb0 <__ieee754_rem_pio2f+0x20>
 8021ea4:	2300      	movs	r3, #0
 8021ea6:	ed80 0a00 	vstr	s0, [r0]
 8021eaa:	6043      	str	r3, [r0, #4]
 8021eac:	2000      	movs	r0, #0
 8021eae:	e022      	b.n	8021ef6 <__ieee754_rem_pio2f+0x66>
 8021eb0:	4b82      	ldr	r3, [pc, #520]	@ (80220bc <__ieee754_rem_pio2f+0x22c>)
 8021eb2:	429d      	cmp	r5, r3
 8021eb4:	d83a      	bhi.n	8021f2c <__ieee754_rem_pio2f+0x9c>
 8021eb6:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8021eba:	2e00      	cmp	r6, #0
 8021ebc:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 80220c0 <__ieee754_rem_pio2f+0x230>
 8021ec0:	4a80      	ldr	r2, [pc, #512]	@ (80220c4 <__ieee754_rem_pio2f+0x234>)
 8021ec2:	f023 030f 	bic.w	r3, r3, #15
 8021ec6:	dd18      	ble.n	8021efa <__ieee754_rem_pio2f+0x6a>
 8021ec8:	4293      	cmp	r3, r2
 8021eca:	ee70 7a47 	vsub.f32	s15, s0, s14
 8021ece:	bf09      	itett	eq
 8021ed0:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 80220c8 <__ieee754_rem_pio2f+0x238>
 8021ed4:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 80220cc <__ieee754_rem_pio2f+0x23c>
 8021ed8:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 80220d0 <__ieee754_rem_pio2f+0x240>
 8021edc:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8021ee0:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8021ee4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021ee8:	ed80 7a00 	vstr	s14, [r0]
 8021eec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8021ef0:	edc0 7a01 	vstr	s15, [r0, #4]
 8021ef4:	2001      	movs	r0, #1
 8021ef6:	b007      	add	sp, #28
 8021ef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021efa:	4293      	cmp	r3, r2
 8021efc:	ee70 7a07 	vadd.f32	s15, s0, s14
 8021f00:	bf09      	itett	eq
 8021f02:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 80220c8 <__ieee754_rem_pio2f+0x238>
 8021f06:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 80220cc <__ieee754_rem_pio2f+0x23c>
 8021f0a:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 80220d0 <__ieee754_rem_pio2f+0x240>
 8021f0e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8021f12:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8021f16:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021f1a:	ed80 7a00 	vstr	s14, [r0]
 8021f1e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8021f22:	edc0 7a01 	vstr	s15, [r0, #4]
 8021f26:	f04f 30ff 	mov.w	r0, #4294967295
 8021f2a:	e7e4      	b.n	8021ef6 <__ieee754_rem_pio2f+0x66>
 8021f2c:	4b69      	ldr	r3, [pc, #420]	@ (80220d4 <__ieee754_rem_pio2f+0x244>)
 8021f2e:	429d      	cmp	r5, r3
 8021f30:	d873      	bhi.n	802201a <__ieee754_rem_pio2f+0x18a>
 8021f32:	f000 f9b1 	bl	8022298 <fabsf>
 8021f36:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 80220d8 <__ieee754_rem_pio2f+0x248>
 8021f3a:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021f3e:	eee0 7a07 	vfma.f32	s15, s0, s14
 8021f42:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021f46:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8021f4a:	ee17 0a90 	vmov	r0, s15
 8021f4e:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80220c0 <__ieee754_rem_pio2f+0x230>
 8021f52:	eea7 0a67 	vfms.f32	s0, s14, s15
 8021f56:	281f      	cmp	r0, #31
 8021f58:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80220cc <__ieee754_rem_pio2f+0x23c>
 8021f5c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8021f60:	eeb1 6a47 	vneg.f32	s12, s14
 8021f64:	ee70 6a67 	vsub.f32	s13, s0, s15
 8021f68:	ee16 1a90 	vmov	r1, s13
 8021f6c:	dc09      	bgt.n	8021f82 <__ieee754_rem_pio2f+0xf2>
 8021f6e:	4a5b      	ldr	r2, [pc, #364]	@ (80220dc <__ieee754_rem_pio2f+0x24c>)
 8021f70:	1e47      	subs	r7, r0, #1
 8021f72:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8021f76:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8021f7a:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8021f7e:	4293      	cmp	r3, r2
 8021f80:	d107      	bne.n	8021f92 <__ieee754_rem_pio2f+0x102>
 8021f82:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8021f86:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8021f8a:	2a08      	cmp	r2, #8
 8021f8c:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8021f90:	dc14      	bgt.n	8021fbc <__ieee754_rem_pio2f+0x12c>
 8021f92:	6021      	str	r1, [r4, #0]
 8021f94:	ed94 7a00 	vldr	s14, [r4]
 8021f98:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021f9c:	2e00      	cmp	r6, #0
 8021f9e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8021fa2:	ed84 0a01 	vstr	s0, [r4, #4]
 8021fa6:	daa6      	bge.n	8021ef6 <__ieee754_rem_pio2f+0x66>
 8021fa8:	eeb1 7a47 	vneg.f32	s14, s14
 8021fac:	eeb1 0a40 	vneg.f32	s0, s0
 8021fb0:	ed84 7a00 	vstr	s14, [r4]
 8021fb4:	ed84 0a01 	vstr	s0, [r4, #4]
 8021fb8:	4240      	negs	r0, r0
 8021fba:	e79c      	b.n	8021ef6 <__ieee754_rem_pio2f+0x66>
 8021fbc:	eddf 5a42 	vldr	s11, [pc, #264]	@ 80220c8 <__ieee754_rem_pio2f+0x238>
 8021fc0:	eef0 6a40 	vmov.f32	s13, s0
 8021fc4:	eee6 6a25 	vfma.f32	s13, s12, s11
 8021fc8:	ee70 7a66 	vsub.f32	s15, s0, s13
 8021fcc:	eee6 7a25 	vfma.f32	s15, s12, s11
 8021fd0:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 80220d0 <__ieee754_rem_pio2f+0x240>
 8021fd4:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8021fd8:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8021fdc:	ee15 2a90 	vmov	r2, s11
 8021fe0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8021fe4:	1a5b      	subs	r3, r3, r1
 8021fe6:	2b19      	cmp	r3, #25
 8021fe8:	dc04      	bgt.n	8021ff4 <__ieee754_rem_pio2f+0x164>
 8021fea:	edc4 5a00 	vstr	s11, [r4]
 8021fee:	eeb0 0a66 	vmov.f32	s0, s13
 8021ff2:	e7cf      	b.n	8021f94 <__ieee754_rem_pio2f+0x104>
 8021ff4:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80220e0 <__ieee754_rem_pio2f+0x250>
 8021ff8:	eeb0 0a66 	vmov.f32	s0, s13
 8021ffc:	eea6 0a25 	vfma.f32	s0, s12, s11
 8022000:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8022004:	eddf 6a37 	vldr	s13, [pc, #220]	@ 80220e4 <__ieee754_rem_pio2f+0x254>
 8022008:	eee6 7a25 	vfma.f32	s15, s12, s11
 802200c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8022010:	ee30 7a67 	vsub.f32	s14, s0, s15
 8022014:	ed84 7a00 	vstr	s14, [r4]
 8022018:	e7bc      	b.n	8021f94 <__ieee754_rem_pio2f+0x104>
 802201a:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 802201e:	d306      	bcc.n	802202e <__ieee754_rem_pio2f+0x19e>
 8022020:	ee70 7a40 	vsub.f32	s15, s0, s0
 8022024:	edc0 7a01 	vstr	s15, [r0, #4]
 8022028:	edc0 7a00 	vstr	s15, [r0]
 802202c:	e73e      	b.n	8021eac <__ieee754_rem_pio2f+0x1c>
 802202e:	15ea      	asrs	r2, r5, #23
 8022030:	3a86      	subs	r2, #134	@ 0x86
 8022032:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8022036:	ee07 3a90 	vmov	s15, r3
 802203a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802203e:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 80220e8 <__ieee754_rem_pio2f+0x258>
 8022042:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8022046:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802204a:	ed8d 7a03 	vstr	s14, [sp, #12]
 802204e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8022052:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8022056:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802205a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802205e:	ed8d 7a04 	vstr	s14, [sp, #16]
 8022062:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8022066:	eef5 7a40 	vcmp.f32	s15, #0.0
 802206a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802206e:	edcd 7a05 	vstr	s15, [sp, #20]
 8022072:	d11e      	bne.n	80220b2 <__ieee754_rem_pio2f+0x222>
 8022074:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8022078:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802207c:	bf0c      	ite	eq
 802207e:	2301      	moveq	r3, #1
 8022080:	2302      	movne	r3, #2
 8022082:	491a      	ldr	r1, [pc, #104]	@ (80220ec <__ieee754_rem_pio2f+0x25c>)
 8022084:	9101      	str	r1, [sp, #4]
 8022086:	2102      	movs	r1, #2
 8022088:	9100      	str	r1, [sp, #0]
 802208a:	a803      	add	r0, sp, #12
 802208c:	4621      	mov	r1, r4
 802208e:	f000 f90b 	bl	80222a8 <__kernel_rem_pio2f>
 8022092:	2e00      	cmp	r6, #0
 8022094:	f6bf af2f 	bge.w	8021ef6 <__ieee754_rem_pio2f+0x66>
 8022098:	edd4 7a00 	vldr	s15, [r4]
 802209c:	eef1 7a67 	vneg.f32	s15, s15
 80220a0:	edc4 7a00 	vstr	s15, [r4]
 80220a4:	edd4 7a01 	vldr	s15, [r4, #4]
 80220a8:	eef1 7a67 	vneg.f32	s15, s15
 80220ac:	edc4 7a01 	vstr	s15, [r4, #4]
 80220b0:	e782      	b.n	8021fb8 <__ieee754_rem_pio2f+0x128>
 80220b2:	2303      	movs	r3, #3
 80220b4:	e7e5      	b.n	8022082 <__ieee754_rem_pio2f+0x1f2>
 80220b6:	bf00      	nop
 80220b8:	3f490fd8 	.word	0x3f490fd8
 80220bc:	4016cbe3 	.word	0x4016cbe3
 80220c0:	3fc90f80 	.word	0x3fc90f80
 80220c4:	3fc90fd0 	.word	0x3fc90fd0
 80220c8:	37354400 	.word	0x37354400
 80220cc:	37354443 	.word	0x37354443
 80220d0:	2e85a308 	.word	0x2e85a308
 80220d4:	43490f80 	.word	0x43490f80
 80220d8:	3f22f984 	.word	0x3f22f984
 80220dc:	0802566c 	.word	0x0802566c
 80220e0:	2e85a300 	.word	0x2e85a300
 80220e4:	248d3132 	.word	0x248d3132
 80220e8:	43800000 	.word	0x43800000
 80220ec:	080256ec 	.word	0x080256ec

080220f0 <atanf>:
 80220f0:	b538      	push	{r3, r4, r5, lr}
 80220f2:	ee10 5a10 	vmov	r5, s0
 80220f6:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 80220fa:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 80220fe:	eef0 7a40 	vmov.f32	s15, s0
 8022102:	d310      	bcc.n	8022126 <atanf+0x36>
 8022104:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8022108:	d904      	bls.n	8022114 <atanf+0x24>
 802210a:	ee70 7a00 	vadd.f32	s15, s0, s0
 802210e:	eeb0 0a67 	vmov.f32	s0, s15
 8022112:	bd38      	pop	{r3, r4, r5, pc}
 8022114:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 802224c <atanf+0x15c>
 8022118:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8022250 <atanf+0x160>
 802211c:	2d00      	cmp	r5, #0
 802211e:	bfc8      	it	gt
 8022120:	eef0 7a47 	vmovgt.f32	s15, s14
 8022124:	e7f3      	b.n	802210e <atanf+0x1e>
 8022126:	4b4b      	ldr	r3, [pc, #300]	@ (8022254 <atanf+0x164>)
 8022128:	429c      	cmp	r4, r3
 802212a:	d810      	bhi.n	802214e <atanf+0x5e>
 802212c:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8022130:	d20a      	bcs.n	8022148 <atanf+0x58>
 8022132:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8022258 <atanf+0x168>
 8022136:	ee30 7a07 	vadd.f32	s14, s0, s14
 802213a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802213e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8022142:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022146:	dce2      	bgt.n	802210e <atanf+0x1e>
 8022148:	f04f 33ff 	mov.w	r3, #4294967295
 802214c:	e013      	b.n	8022176 <atanf+0x86>
 802214e:	f000 f8a3 	bl	8022298 <fabsf>
 8022152:	4b42      	ldr	r3, [pc, #264]	@ (802225c <atanf+0x16c>)
 8022154:	429c      	cmp	r4, r3
 8022156:	d84f      	bhi.n	80221f8 <atanf+0x108>
 8022158:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 802215c:	429c      	cmp	r4, r3
 802215e:	d841      	bhi.n	80221e4 <atanf+0xf4>
 8022160:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8022164:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8022168:	eea0 7a27 	vfma.f32	s14, s0, s15
 802216c:	2300      	movs	r3, #0
 802216e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022172:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022176:	1c5a      	adds	r2, r3, #1
 8022178:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802217c:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8022260 <atanf+0x170>
 8022180:	eddf 5a38 	vldr	s11, [pc, #224]	@ 8022264 <atanf+0x174>
 8022184:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8022268 <atanf+0x178>
 8022188:	ee66 6a06 	vmul.f32	s13, s12, s12
 802218c:	eee6 5a87 	vfma.f32	s11, s13, s14
 8022190:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 802226c <atanf+0x17c>
 8022194:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8022198:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8022270 <atanf+0x180>
 802219c:	eee7 5a26 	vfma.f32	s11, s14, s13
 80221a0:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8022274 <atanf+0x184>
 80221a4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80221a8:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8022278 <atanf+0x188>
 80221ac:	eee7 5a26 	vfma.f32	s11, s14, s13
 80221b0:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 802227c <atanf+0x18c>
 80221b4:	eea6 5a87 	vfma.f32	s10, s13, s14
 80221b8:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8022280 <atanf+0x190>
 80221bc:	eea5 7a26 	vfma.f32	s14, s10, s13
 80221c0:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 8022284 <atanf+0x194>
 80221c4:	eea7 5a26 	vfma.f32	s10, s14, s13
 80221c8:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8022288 <atanf+0x198>
 80221cc:	eea5 7a26 	vfma.f32	s14, s10, s13
 80221d0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80221d4:	eea5 7a86 	vfma.f32	s14, s11, s12
 80221d8:	ee27 7a87 	vmul.f32	s14, s15, s14
 80221dc:	d121      	bne.n	8022222 <atanf+0x132>
 80221de:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80221e2:	e794      	b.n	802210e <atanf+0x1e>
 80221e4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80221e8:	ee30 7a67 	vsub.f32	s14, s0, s15
 80221ec:	ee30 0a27 	vadd.f32	s0, s0, s15
 80221f0:	2301      	movs	r3, #1
 80221f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80221f6:	e7be      	b.n	8022176 <atanf+0x86>
 80221f8:	4b24      	ldr	r3, [pc, #144]	@ (802228c <atanf+0x19c>)
 80221fa:	429c      	cmp	r4, r3
 80221fc:	d80b      	bhi.n	8022216 <atanf+0x126>
 80221fe:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8022202:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022206:	eea0 7a27 	vfma.f32	s14, s0, s15
 802220a:	2302      	movs	r3, #2
 802220c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8022210:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8022214:	e7af      	b.n	8022176 <atanf+0x86>
 8022216:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802221a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802221e:	2303      	movs	r3, #3
 8022220:	e7a9      	b.n	8022176 <atanf+0x86>
 8022222:	4a1b      	ldr	r2, [pc, #108]	@ (8022290 <atanf+0x1a0>)
 8022224:	491b      	ldr	r1, [pc, #108]	@ (8022294 <atanf+0x1a4>)
 8022226:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802222a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802222e:	edd3 6a00 	vldr	s13, [r3]
 8022232:	ee37 7a66 	vsub.f32	s14, s14, s13
 8022236:	2d00      	cmp	r5, #0
 8022238:	ee37 7a67 	vsub.f32	s14, s14, s15
 802223c:	edd2 7a00 	vldr	s15, [r2]
 8022240:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022244:	bfb8      	it	lt
 8022246:	eef1 7a67 	vneglt.f32	s15, s15
 802224a:	e760      	b.n	802210e <atanf+0x1e>
 802224c:	bfc90fdb 	.word	0xbfc90fdb
 8022250:	3fc90fdb 	.word	0x3fc90fdb
 8022254:	3edfffff 	.word	0x3edfffff
 8022258:	7149f2ca 	.word	0x7149f2ca
 802225c:	3f97ffff 	.word	0x3f97ffff
 8022260:	3c8569d7 	.word	0x3c8569d7
 8022264:	3d4bda59 	.word	0x3d4bda59
 8022268:	bd6ef16b 	.word	0xbd6ef16b
 802226c:	3d886b35 	.word	0x3d886b35
 8022270:	3dba2e6e 	.word	0x3dba2e6e
 8022274:	3e124925 	.word	0x3e124925
 8022278:	3eaaaaab 	.word	0x3eaaaaab
 802227c:	bd15a221 	.word	0xbd15a221
 8022280:	bd9d8795 	.word	0xbd9d8795
 8022284:	bde38e38 	.word	0xbde38e38
 8022288:	be4ccccd 	.word	0xbe4ccccd
 802228c:	401bffff 	.word	0x401bffff
 8022290:	08025a14 	.word	0x08025a14
 8022294:	08025a04 	.word	0x08025a04

08022298 <fabsf>:
 8022298:	ee10 3a10 	vmov	r3, s0
 802229c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80222a0:	ee00 3a10 	vmov	s0, r3
 80222a4:	4770      	bx	lr
	...

080222a8 <__kernel_rem_pio2f>:
 80222a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80222ac:	ed2d 8b04 	vpush	{d8-d9}
 80222b0:	b0d9      	sub	sp, #356	@ 0x164
 80222b2:	4690      	mov	r8, r2
 80222b4:	9001      	str	r0, [sp, #4]
 80222b6:	4ab6      	ldr	r2, [pc, #728]	@ (8022590 <__kernel_rem_pio2f+0x2e8>)
 80222b8:	9866      	ldr	r0, [sp, #408]	@ 0x198
 80222ba:	f118 0f04 	cmn.w	r8, #4
 80222be:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 80222c2:	460f      	mov	r7, r1
 80222c4:	f103 3bff 	add.w	fp, r3, #4294967295
 80222c8:	db26      	blt.n	8022318 <__kernel_rem_pio2f+0x70>
 80222ca:	f1b8 0203 	subs.w	r2, r8, #3
 80222ce:	bf48      	it	mi
 80222d0:	f108 0204 	addmi.w	r2, r8, #4
 80222d4:	10d2      	asrs	r2, r2, #3
 80222d6:	1c55      	adds	r5, r2, #1
 80222d8:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80222da:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 80225a0 <__kernel_rem_pio2f+0x2f8>
 80222de:	00e8      	lsls	r0, r5, #3
 80222e0:	eba2 060b 	sub.w	r6, r2, fp
 80222e4:	9002      	str	r0, [sp, #8]
 80222e6:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 80222ea:	eb0a 0c0b 	add.w	ip, sl, fp
 80222ee:	ac1c      	add	r4, sp, #112	@ 0x70
 80222f0:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 80222f4:	2000      	movs	r0, #0
 80222f6:	4560      	cmp	r0, ip
 80222f8:	dd10      	ble.n	802231c <__kernel_rem_pio2f+0x74>
 80222fa:	a91c      	add	r1, sp, #112	@ 0x70
 80222fc:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8022300:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8022304:	2600      	movs	r6, #0
 8022306:	4556      	cmp	r6, sl
 8022308:	dc24      	bgt.n	8022354 <__kernel_rem_pio2f+0xac>
 802230a:	f8dd e004 	ldr.w	lr, [sp, #4]
 802230e:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 80225a0 <__kernel_rem_pio2f+0x2f8>
 8022312:	4684      	mov	ip, r0
 8022314:	2400      	movs	r4, #0
 8022316:	e016      	b.n	8022346 <__kernel_rem_pio2f+0x9e>
 8022318:	2200      	movs	r2, #0
 802231a:	e7dc      	b.n	80222d6 <__kernel_rem_pio2f+0x2e>
 802231c:	42c6      	cmn	r6, r0
 802231e:	bf5d      	ittte	pl
 8022320:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8022324:	ee07 1a90 	vmovpl	s15, r1
 8022328:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802232c:	eef0 7a47 	vmovmi.f32	s15, s14
 8022330:	ece4 7a01 	vstmia	r4!, {s15}
 8022334:	3001      	adds	r0, #1
 8022336:	e7de      	b.n	80222f6 <__kernel_rem_pio2f+0x4e>
 8022338:	ecfe 6a01 	vldmia	lr!, {s13}
 802233c:	ed3c 7a01 	vldmdb	ip!, {s14}
 8022340:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022344:	3401      	adds	r4, #1
 8022346:	455c      	cmp	r4, fp
 8022348:	ddf6      	ble.n	8022338 <__kernel_rem_pio2f+0x90>
 802234a:	ece9 7a01 	vstmia	r9!, {s15}
 802234e:	3601      	adds	r6, #1
 8022350:	3004      	adds	r0, #4
 8022352:	e7d8      	b.n	8022306 <__kernel_rem_pio2f+0x5e>
 8022354:	a908      	add	r1, sp, #32
 8022356:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802235a:	9104      	str	r1, [sp, #16]
 802235c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802235e:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 802259c <__kernel_rem_pio2f+0x2f4>
 8022362:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8022598 <__kernel_rem_pio2f+0x2f0>
 8022366:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 802236a:	9203      	str	r2, [sp, #12]
 802236c:	4654      	mov	r4, sl
 802236e:	00a2      	lsls	r2, r4, #2
 8022370:	9205      	str	r2, [sp, #20]
 8022372:	aa58      	add	r2, sp, #352	@ 0x160
 8022374:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8022378:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 802237c:	a944      	add	r1, sp, #272	@ 0x110
 802237e:	aa08      	add	r2, sp, #32
 8022380:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8022384:	4694      	mov	ip, r2
 8022386:	4626      	mov	r6, r4
 8022388:	2e00      	cmp	r6, #0
 802238a:	dc4c      	bgt.n	8022426 <__kernel_rem_pio2f+0x17e>
 802238c:	4628      	mov	r0, r5
 802238e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8022392:	f000 f9f1 	bl	8022778 <scalbnf>
 8022396:	eeb0 8a40 	vmov.f32	s16, s0
 802239a:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 802239e:	ee28 0a00 	vmul.f32	s0, s16, s0
 80223a2:	f000 fa4f 	bl	8022844 <floorf>
 80223a6:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 80223aa:	eea0 8a67 	vfms.f32	s16, s0, s15
 80223ae:	2d00      	cmp	r5, #0
 80223b0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80223b4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80223b8:	ee17 9a90 	vmov	r9, s15
 80223bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80223c0:	ee38 8a67 	vsub.f32	s16, s16, s15
 80223c4:	dd41      	ble.n	802244a <__kernel_rem_pio2f+0x1a2>
 80223c6:	f104 3cff 	add.w	ip, r4, #4294967295
 80223ca:	a908      	add	r1, sp, #32
 80223cc:	f1c5 0e08 	rsb	lr, r5, #8
 80223d0:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 80223d4:	fa46 f00e 	asr.w	r0, r6, lr
 80223d8:	4481      	add	r9, r0
 80223da:	fa00 f00e 	lsl.w	r0, r0, lr
 80223de:	1a36      	subs	r6, r6, r0
 80223e0:	f1c5 0007 	rsb	r0, r5, #7
 80223e4:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 80223e8:	4106      	asrs	r6, r0
 80223ea:	2e00      	cmp	r6, #0
 80223ec:	dd3c      	ble.n	8022468 <__kernel_rem_pio2f+0x1c0>
 80223ee:	f04f 0e00 	mov.w	lr, #0
 80223f2:	f109 0901 	add.w	r9, r9, #1
 80223f6:	4670      	mov	r0, lr
 80223f8:	4574      	cmp	r4, lr
 80223fa:	dc68      	bgt.n	80224ce <__kernel_rem_pio2f+0x226>
 80223fc:	2d00      	cmp	r5, #0
 80223fe:	dd03      	ble.n	8022408 <__kernel_rem_pio2f+0x160>
 8022400:	2d01      	cmp	r5, #1
 8022402:	d074      	beq.n	80224ee <__kernel_rem_pio2f+0x246>
 8022404:	2d02      	cmp	r5, #2
 8022406:	d07d      	beq.n	8022504 <__kernel_rem_pio2f+0x25c>
 8022408:	2e02      	cmp	r6, #2
 802240a:	d12d      	bne.n	8022468 <__kernel_rem_pio2f+0x1c0>
 802240c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8022410:	ee30 8a48 	vsub.f32	s16, s0, s16
 8022414:	b340      	cbz	r0, 8022468 <__kernel_rem_pio2f+0x1c0>
 8022416:	4628      	mov	r0, r5
 8022418:	9306      	str	r3, [sp, #24]
 802241a:	f000 f9ad 	bl	8022778 <scalbnf>
 802241e:	9b06      	ldr	r3, [sp, #24]
 8022420:	ee38 8a40 	vsub.f32	s16, s16, s0
 8022424:	e020      	b.n	8022468 <__kernel_rem_pio2f+0x1c0>
 8022426:	ee60 7a28 	vmul.f32	s15, s0, s17
 802242a:	3e01      	subs	r6, #1
 802242c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022430:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022434:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8022438:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802243c:	ecac 0a01 	vstmia	ip!, {s0}
 8022440:	ed30 0a01 	vldmdb	r0!, {s0}
 8022444:	ee37 0a80 	vadd.f32	s0, s15, s0
 8022448:	e79e      	b.n	8022388 <__kernel_rem_pio2f+0xe0>
 802244a:	d105      	bne.n	8022458 <__kernel_rem_pio2f+0x1b0>
 802244c:	1e60      	subs	r0, r4, #1
 802244e:	a908      	add	r1, sp, #32
 8022450:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8022454:	11f6      	asrs	r6, r6, #7
 8022456:	e7c8      	b.n	80223ea <__kernel_rem_pio2f+0x142>
 8022458:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802245c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8022460:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022464:	da31      	bge.n	80224ca <__kernel_rem_pio2f+0x222>
 8022466:	2600      	movs	r6, #0
 8022468:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802246c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022470:	f040 8098 	bne.w	80225a4 <__kernel_rem_pio2f+0x2fc>
 8022474:	1e60      	subs	r0, r4, #1
 8022476:	2200      	movs	r2, #0
 8022478:	4550      	cmp	r0, sl
 802247a:	da4b      	bge.n	8022514 <__kernel_rem_pio2f+0x26c>
 802247c:	2a00      	cmp	r2, #0
 802247e:	d065      	beq.n	802254c <__kernel_rem_pio2f+0x2a4>
 8022480:	3c01      	subs	r4, #1
 8022482:	ab08      	add	r3, sp, #32
 8022484:	3d08      	subs	r5, #8
 8022486:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802248a:	2b00      	cmp	r3, #0
 802248c:	d0f8      	beq.n	8022480 <__kernel_rem_pio2f+0x1d8>
 802248e:	4628      	mov	r0, r5
 8022490:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8022494:	f000 f970 	bl	8022778 <scalbnf>
 8022498:	1c63      	adds	r3, r4, #1
 802249a:	aa44      	add	r2, sp, #272	@ 0x110
 802249c:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 802259c <__kernel_rem_pio2f+0x2f4>
 80224a0:	0099      	lsls	r1, r3, #2
 80224a2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80224a6:	4623      	mov	r3, r4
 80224a8:	2b00      	cmp	r3, #0
 80224aa:	f280 80a9 	bge.w	8022600 <__kernel_rem_pio2f+0x358>
 80224ae:	4623      	mov	r3, r4
 80224b0:	2b00      	cmp	r3, #0
 80224b2:	f2c0 80c7 	blt.w	8022644 <__kernel_rem_pio2f+0x39c>
 80224b6:	aa44      	add	r2, sp, #272	@ 0x110
 80224b8:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80224bc:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8022594 <__kernel_rem_pio2f+0x2ec>
 80224c0:	eddf 7a37 	vldr	s15, [pc, #220]	@ 80225a0 <__kernel_rem_pio2f+0x2f8>
 80224c4:	2000      	movs	r0, #0
 80224c6:	1ae2      	subs	r2, r4, r3
 80224c8:	e0b1      	b.n	802262e <__kernel_rem_pio2f+0x386>
 80224ca:	2602      	movs	r6, #2
 80224cc:	e78f      	b.n	80223ee <__kernel_rem_pio2f+0x146>
 80224ce:	f852 1b04 	ldr.w	r1, [r2], #4
 80224d2:	b948      	cbnz	r0, 80224e8 <__kernel_rem_pio2f+0x240>
 80224d4:	b121      	cbz	r1, 80224e0 <__kernel_rem_pio2f+0x238>
 80224d6:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 80224da:	f842 1c04 	str.w	r1, [r2, #-4]
 80224de:	2101      	movs	r1, #1
 80224e0:	f10e 0e01 	add.w	lr, lr, #1
 80224e4:	4608      	mov	r0, r1
 80224e6:	e787      	b.n	80223f8 <__kernel_rem_pio2f+0x150>
 80224e8:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 80224ec:	e7f5      	b.n	80224da <__kernel_rem_pio2f+0x232>
 80224ee:	f104 3cff 	add.w	ip, r4, #4294967295
 80224f2:	aa08      	add	r2, sp, #32
 80224f4:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80224f8:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80224fc:	a908      	add	r1, sp, #32
 80224fe:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8022502:	e781      	b.n	8022408 <__kernel_rem_pio2f+0x160>
 8022504:	f104 3cff 	add.w	ip, r4, #4294967295
 8022508:	aa08      	add	r2, sp, #32
 802250a:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802250e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8022512:	e7f3      	b.n	80224fc <__kernel_rem_pio2f+0x254>
 8022514:	a908      	add	r1, sp, #32
 8022516:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802251a:	3801      	subs	r0, #1
 802251c:	430a      	orrs	r2, r1
 802251e:	e7ab      	b.n	8022478 <__kernel_rem_pio2f+0x1d0>
 8022520:	3201      	adds	r2, #1
 8022522:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8022526:	2e00      	cmp	r6, #0
 8022528:	d0fa      	beq.n	8022520 <__kernel_rem_pio2f+0x278>
 802252a:	9905      	ldr	r1, [sp, #20]
 802252c:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8022530:	eb0d 0001 	add.w	r0, sp, r1
 8022534:	18e6      	adds	r6, r4, r3
 8022536:	a91c      	add	r1, sp, #112	@ 0x70
 8022538:	f104 0c01 	add.w	ip, r4, #1
 802253c:	384c      	subs	r0, #76	@ 0x4c
 802253e:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8022542:	4422      	add	r2, r4
 8022544:	4562      	cmp	r2, ip
 8022546:	da04      	bge.n	8022552 <__kernel_rem_pio2f+0x2aa>
 8022548:	4614      	mov	r4, r2
 802254a:	e710      	b.n	802236e <__kernel_rem_pio2f+0xc6>
 802254c:	9804      	ldr	r0, [sp, #16]
 802254e:	2201      	movs	r2, #1
 8022550:	e7e7      	b.n	8022522 <__kernel_rem_pio2f+0x27a>
 8022552:	9903      	ldr	r1, [sp, #12]
 8022554:	f8dd e004 	ldr.w	lr, [sp, #4]
 8022558:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 802255c:	9105      	str	r1, [sp, #20]
 802255e:	ee07 1a90 	vmov	s15, r1
 8022562:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022566:	2400      	movs	r4, #0
 8022568:	ece6 7a01 	vstmia	r6!, {s15}
 802256c:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 80225a0 <__kernel_rem_pio2f+0x2f8>
 8022570:	46b1      	mov	r9, r6
 8022572:	455c      	cmp	r4, fp
 8022574:	dd04      	ble.n	8022580 <__kernel_rem_pio2f+0x2d8>
 8022576:	ece0 7a01 	vstmia	r0!, {s15}
 802257a:	f10c 0c01 	add.w	ip, ip, #1
 802257e:	e7e1      	b.n	8022544 <__kernel_rem_pio2f+0x29c>
 8022580:	ecfe 6a01 	vldmia	lr!, {s13}
 8022584:	ed39 7a01 	vldmdb	r9!, {s14}
 8022588:	3401      	adds	r4, #1
 802258a:	eee6 7a87 	vfma.f32	s15, s13, s14
 802258e:	e7f0      	b.n	8022572 <__kernel_rem_pio2f+0x2ca>
 8022590:	08025a50 	.word	0x08025a50
 8022594:	08025a24 	.word	0x08025a24
 8022598:	43800000 	.word	0x43800000
 802259c:	3b800000 	.word	0x3b800000
 80225a0:	00000000 	.word	0x00000000
 80225a4:	9b02      	ldr	r3, [sp, #8]
 80225a6:	eeb0 0a48 	vmov.f32	s0, s16
 80225aa:	eba3 0008 	sub.w	r0, r3, r8
 80225ae:	f000 f8e3 	bl	8022778 <scalbnf>
 80225b2:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8022598 <__kernel_rem_pio2f+0x2f0>
 80225b6:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80225ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80225be:	db19      	blt.n	80225f4 <__kernel_rem_pio2f+0x34c>
 80225c0:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 802259c <__kernel_rem_pio2f+0x2f4>
 80225c4:	ee60 7a27 	vmul.f32	s15, s0, s15
 80225c8:	aa08      	add	r2, sp, #32
 80225ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80225ce:	3508      	adds	r5, #8
 80225d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80225d4:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80225d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80225dc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80225e0:	ee10 3a10 	vmov	r3, s0
 80225e4:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80225e8:	ee17 3a90 	vmov	r3, s15
 80225ec:	3401      	adds	r4, #1
 80225ee:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80225f2:	e74c      	b.n	802248e <__kernel_rem_pio2f+0x1e6>
 80225f4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80225f8:	aa08      	add	r2, sp, #32
 80225fa:	ee10 3a10 	vmov	r3, s0
 80225fe:	e7f6      	b.n	80225ee <__kernel_rem_pio2f+0x346>
 8022600:	a808      	add	r0, sp, #32
 8022602:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8022606:	9001      	str	r0, [sp, #4]
 8022608:	ee07 0a90 	vmov	s15, r0
 802260c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022610:	3b01      	subs	r3, #1
 8022612:	ee67 7a80 	vmul.f32	s15, s15, s0
 8022616:	ee20 0a07 	vmul.f32	s0, s0, s14
 802261a:	ed62 7a01 	vstmdb	r2!, {s15}
 802261e:	e743      	b.n	80224a8 <__kernel_rem_pio2f+0x200>
 8022620:	ecfc 6a01 	vldmia	ip!, {s13}
 8022624:	ecb5 7a01 	vldmia	r5!, {s14}
 8022628:	eee6 7a87 	vfma.f32	s15, s13, s14
 802262c:	3001      	adds	r0, #1
 802262e:	4550      	cmp	r0, sl
 8022630:	dc01      	bgt.n	8022636 <__kernel_rem_pio2f+0x38e>
 8022632:	4290      	cmp	r0, r2
 8022634:	ddf4      	ble.n	8022620 <__kernel_rem_pio2f+0x378>
 8022636:	a858      	add	r0, sp, #352	@ 0x160
 8022638:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802263c:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8022640:	3b01      	subs	r3, #1
 8022642:	e735      	b.n	80224b0 <__kernel_rem_pio2f+0x208>
 8022644:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8022646:	2b02      	cmp	r3, #2
 8022648:	dc09      	bgt.n	802265e <__kernel_rem_pio2f+0x3b6>
 802264a:	2b00      	cmp	r3, #0
 802264c:	dc27      	bgt.n	802269e <__kernel_rem_pio2f+0x3f6>
 802264e:	d040      	beq.n	80226d2 <__kernel_rem_pio2f+0x42a>
 8022650:	f009 0007 	and.w	r0, r9, #7
 8022654:	b059      	add	sp, #356	@ 0x164
 8022656:	ecbd 8b04 	vpop	{d8-d9}
 802265a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802265e:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8022660:	2b03      	cmp	r3, #3
 8022662:	d1f5      	bne.n	8022650 <__kernel_rem_pio2f+0x3a8>
 8022664:	aa30      	add	r2, sp, #192	@ 0xc0
 8022666:	1f0b      	subs	r3, r1, #4
 8022668:	4413      	add	r3, r2
 802266a:	461a      	mov	r2, r3
 802266c:	4620      	mov	r0, r4
 802266e:	2800      	cmp	r0, #0
 8022670:	dc50      	bgt.n	8022714 <__kernel_rem_pio2f+0x46c>
 8022672:	4622      	mov	r2, r4
 8022674:	2a01      	cmp	r2, #1
 8022676:	dc5d      	bgt.n	8022734 <__kernel_rem_pio2f+0x48c>
 8022678:	ab30      	add	r3, sp, #192	@ 0xc0
 802267a:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 80225a0 <__kernel_rem_pio2f+0x2f8>
 802267e:	440b      	add	r3, r1
 8022680:	2c01      	cmp	r4, #1
 8022682:	dc67      	bgt.n	8022754 <__kernel_rem_pio2f+0x4ac>
 8022684:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8022688:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 802268c:	2e00      	cmp	r6, #0
 802268e:	d167      	bne.n	8022760 <__kernel_rem_pio2f+0x4b8>
 8022690:	edc7 6a00 	vstr	s13, [r7]
 8022694:	ed87 7a01 	vstr	s14, [r7, #4]
 8022698:	edc7 7a02 	vstr	s15, [r7, #8]
 802269c:	e7d8      	b.n	8022650 <__kernel_rem_pio2f+0x3a8>
 802269e:	ab30      	add	r3, sp, #192	@ 0xc0
 80226a0:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 80225a0 <__kernel_rem_pio2f+0x2f8>
 80226a4:	440b      	add	r3, r1
 80226a6:	4622      	mov	r2, r4
 80226a8:	2a00      	cmp	r2, #0
 80226aa:	da24      	bge.n	80226f6 <__kernel_rem_pio2f+0x44e>
 80226ac:	b34e      	cbz	r6, 8022702 <__kernel_rem_pio2f+0x45a>
 80226ae:	eef1 7a47 	vneg.f32	s15, s14
 80226b2:	edc7 7a00 	vstr	s15, [r7]
 80226b6:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 80226ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80226be:	aa31      	add	r2, sp, #196	@ 0xc4
 80226c0:	2301      	movs	r3, #1
 80226c2:	429c      	cmp	r4, r3
 80226c4:	da20      	bge.n	8022708 <__kernel_rem_pio2f+0x460>
 80226c6:	b10e      	cbz	r6, 80226cc <__kernel_rem_pio2f+0x424>
 80226c8:	eef1 7a67 	vneg.f32	s15, s15
 80226cc:	edc7 7a01 	vstr	s15, [r7, #4]
 80226d0:	e7be      	b.n	8022650 <__kernel_rem_pio2f+0x3a8>
 80226d2:	ab30      	add	r3, sp, #192	@ 0xc0
 80226d4:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 80225a0 <__kernel_rem_pio2f+0x2f8>
 80226d8:	440b      	add	r3, r1
 80226da:	2c00      	cmp	r4, #0
 80226dc:	da05      	bge.n	80226ea <__kernel_rem_pio2f+0x442>
 80226de:	b10e      	cbz	r6, 80226e4 <__kernel_rem_pio2f+0x43c>
 80226e0:	eef1 7a67 	vneg.f32	s15, s15
 80226e4:	edc7 7a00 	vstr	s15, [r7]
 80226e8:	e7b2      	b.n	8022650 <__kernel_rem_pio2f+0x3a8>
 80226ea:	ed33 7a01 	vldmdb	r3!, {s14}
 80226ee:	3c01      	subs	r4, #1
 80226f0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80226f4:	e7f1      	b.n	80226da <__kernel_rem_pio2f+0x432>
 80226f6:	ed73 7a01 	vldmdb	r3!, {s15}
 80226fa:	3a01      	subs	r2, #1
 80226fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8022700:	e7d2      	b.n	80226a8 <__kernel_rem_pio2f+0x400>
 8022702:	eef0 7a47 	vmov.f32	s15, s14
 8022706:	e7d4      	b.n	80226b2 <__kernel_rem_pio2f+0x40a>
 8022708:	ecb2 7a01 	vldmia	r2!, {s14}
 802270c:	3301      	adds	r3, #1
 802270e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022712:	e7d6      	b.n	80226c2 <__kernel_rem_pio2f+0x41a>
 8022714:	ed72 7a01 	vldmdb	r2!, {s15}
 8022718:	edd2 6a01 	vldr	s13, [r2, #4]
 802271c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8022720:	3801      	subs	r0, #1
 8022722:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022726:	ed82 7a00 	vstr	s14, [r2]
 802272a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802272e:	edc2 7a01 	vstr	s15, [r2, #4]
 8022732:	e79c      	b.n	802266e <__kernel_rem_pio2f+0x3c6>
 8022734:	ed73 7a01 	vldmdb	r3!, {s15}
 8022738:	edd3 6a01 	vldr	s13, [r3, #4]
 802273c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8022740:	3a01      	subs	r2, #1
 8022742:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022746:	ed83 7a00 	vstr	s14, [r3]
 802274a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802274e:	edc3 7a01 	vstr	s15, [r3, #4]
 8022752:	e78f      	b.n	8022674 <__kernel_rem_pio2f+0x3cc>
 8022754:	ed33 7a01 	vldmdb	r3!, {s14}
 8022758:	3c01      	subs	r4, #1
 802275a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802275e:	e78f      	b.n	8022680 <__kernel_rem_pio2f+0x3d8>
 8022760:	eef1 6a66 	vneg.f32	s13, s13
 8022764:	eeb1 7a47 	vneg.f32	s14, s14
 8022768:	edc7 6a00 	vstr	s13, [r7]
 802276c:	ed87 7a01 	vstr	s14, [r7, #4]
 8022770:	eef1 7a67 	vneg.f32	s15, s15
 8022774:	e790      	b.n	8022698 <__kernel_rem_pio2f+0x3f0>
 8022776:	bf00      	nop

08022778 <scalbnf>:
 8022778:	ee10 3a10 	vmov	r3, s0
 802277c:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8022780:	d02b      	beq.n	80227da <scalbnf+0x62>
 8022782:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8022786:	d302      	bcc.n	802278e <scalbnf+0x16>
 8022788:	ee30 0a00 	vadd.f32	s0, s0, s0
 802278c:	4770      	bx	lr
 802278e:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8022792:	d123      	bne.n	80227dc <scalbnf+0x64>
 8022794:	4b24      	ldr	r3, [pc, #144]	@ (8022828 <scalbnf+0xb0>)
 8022796:	eddf 7a25 	vldr	s15, [pc, #148]	@ 802282c <scalbnf+0xb4>
 802279a:	4298      	cmp	r0, r3
 802279c:	ee20 0a27 	vmul.f32	s0, s0, s15
 80227a0:	db17      	blt.n	80227d2 <scalbnf+0x5a>
 80227a2:	ee10 3a10 	vmov	r3, s0
 80227a6:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80227aa:	3a19      	subs	r2, #25
 80227ac:	f24c 3150 	movw	r1, #50000	@ 0xc350
 80227b0:	4288      	cmp	r0, r1
 80227b2:	dd15      	ble.n	80227e0 <scalbnf+0x68>
 80227b4:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8022830 <scalbnf+0xb8>
 80227b8:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8022834 <scalbnf+0xbc>
 80227bc:	ee10 3a10 	vmov	r3, s0
 80227c0:	eeb0 7a67 	vmov.f32	s14, s15
 80227c4:	2b00      	cmp	r3, #0
 80227c6:	bfb8      	it	lt
 80227c8:	eef0 7a66 	vmovlt.f32	s15, s13
 80227cc:	ee27 0a87 	vmul.f32	s0, s15, s14
 80227d0:	4770      	bx	lr
 80227d2:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022838 <scalbnf+0xc0>
 80227d6:	ee27 0a80 	vmul.f32	s0, s15, s0
 80227da:	4770      	bx	lr
 80227dc:	0dd2      	lsrs	r2, r2, #23
 80227de:	e7e5      	b.n	80227ac <scalbnf+0x34>
 80227e0:	4410      	add	r0, r2
 80227e2:	28fe      	cmp	r0, #254	@ 0xfe
 80227e4:	dce6      	bgt.n	80227b4 <scalbnf+0x3c>
 80227e6:	2800      	cmp	r0, #0
 80227e8:	dd06      	ble.n	80227f8 <scalbnf+0x80>
 80227ea:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80227ee:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80227f2:	ee00 3a10 	vmov	s0, r3
 80227f6:	4770      	bx	lr
 80227f8:	f110 0f16 	cmn.w	r0, #22
 80227fc:	da09      	bge.n	8022812 <scalbnf+0x9a>
 80227fe:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8022838 <scalbnf+0xc0>
 8022802:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 802283c <scalbnf+0xc4>
 8022806:	ee10 3a10 	vmov	r3, s0
 802280a:	eeb0 7a67 	vmov.f32	s14, s15
 802280e:	2b00      	cmp	r3, #0
 8022810:	e7d9      	b.n	80227c6 <scalbnf+0x4e>
 8022812:	3019      	adds	r0, #25
 8022814:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8022818:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802281c:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8022840 <scalbnf+0xc8>
 8022820:	ee07 3a90 	vmov	s15, r3
 8022824:	e7d7      	b.n	80227d6 <scalbnf+0x5e>
 8022826:	bf00      	nop
 8022828:	ffff3cb0 	.word	0xffff3cb0
 802282c:	4c000000 	.word	0x4c000000
 8022830:	7149f2ca 	.word	0x7149f2ca
 8022834:	f149f2ca 	.word	0xf149f2ca
 8022838:	0da24260 	.word	0x0da24260
 802283c:	8da24260 	.word	0x8da24260
 8022840:	33000000 	.word	0x33000000

08022844 <floorf>:
 8022844:	ee10 3a10 	vmov	r3, s0
 8022848:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802284c:	3a7f      	subs	r2, #127	@ 0x7f
 802284e:	2a16      	cmp	r2, #22
 8022850:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8022854:	dc2b      	bgt.n	80228ae <floorf+0x6a>
 8022856:	2a00      	cmp	r2, #0
 8022858:	da12      	bge.n	8022880 <floorf+0x3c>
 802285a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80228c0 <floorf+0x7c>
 802285e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022862:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802286a:	dd06      	ble.n	802287a <floorf+0x36>
 802286c:	2b00      	cmp	r3, #0
 802286e:	da24      	bge.n	80228ba <floorf+0x76>
 8022870:	2900      	cmp	r1, #0
 8022872:	4b14      	ldr	r3, [pc, #80]	@ (80228c4 <floorf+0x80>)
 8022874:	bf08      	it	eq
 8022876:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802287a:	ee00 3a10 	vmov	s0, r3
 802287e:	4770      	bx	lr
 8022880:	4911      	ldr	r1, [pc, #68]	@ (80228c8 <floorf+0x84>)
 8022882:	4111      	asrs	r1, r2
 8022884:	420b      	tst	r3, r1
 8022886:	d0fa      	beq.n	802287e <floorf+0x3a>
 8022888:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 80228c0 <floorf+0x7c>
 802288c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022890:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022898:	ddef      	ble.n	802287a <floorf+0x36>
 802289a:	2b00      	cmp	r3, #0
 802289c:	bfbe      	ittt	lt
 802289e:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 80228a2:	fa40 f202 	asrlt.w	r2, r0, r2
 80228a6:	189b      	addlt	r3, r3, r2
 80228a8:	ea23 0301 	bic.w	r3, r3, r1
 80228ac:	e7e5      	b.n	802287a <floorf+0x36>
 80228ae:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 80228b2:	d3e4      	bcc.n	802287e <floorf+0x3a>
 80228b4:	ee30 0a00 	vadd.f32	s0, s0, s0
 80228b8:	4770      	bx	lr
 80228ba:	2300      	movs	r3, #0
 80228bc:	e7dd      	b.n	802287a <floorf+0x36>
 80228be:	bf00      	nop
 80228c0:	7149f2ca 	.word	0x7149f2ca
 80228c4:	bf800000 	.word	0xbf800000
 80228c8:	007fffff 	.word	0x007fffff

080228cc <abort>:
 80228cc:	b508      	push	{r3, lr}
 80228ce:	2006      	movs	r0, #6
 80228d0:	f000 fa72 	bl	8022db8 <raise>
 80228d4:	2001      	movs	r0, #1
 80228d6:	f7df fefd 	bl	80026d4 <_exit>
	...

080228dc <__assert_func>:
 80228dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80228de:	4614      	mov	r4, r2
 80228e0:	461a      	mov	r2, r3
 80228e2:	4b09      	ldr	r3, [pc, #36]	@ (8022908 <__assert_func+0x2c>)
 80228e4:	681b      	ldr	r3, [r3, #0]
 80228e6:	4605      	mov	r5, r0
 80228e8:	68d8      	ldr	r0, [r3, #12]
 80228ea:	b14c      	cbz	r4, 8022900 <__assert_func+0x24>
 80228ec:	4b07      	ldr	r3, [pc, #28]	@ (802290c <__assert_func+0x30>)
 80228ee:	9100      	str	r1, [sp, #0]
 80228f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80228f4:	4906      	ldr	r1, [pc, #24]	@ (8022910 <__assert_func+0x34>)
 80228f6:	462b      	mov	r3, r5
 80228f8:	f000 f984 	bl	8022c04 <fiprintf>
 80228fc:	f7ff ffe6 	bl	80228cc <abort>
 8022900:	4b04      	ldr	r3, [pc, #16]	@ (8022914 <__assert_func+0x38>)
 8022902:	461c      	mov	r4, r3
 8022904:	e7f3      	b.n	80228ee <__assert_func+0x12>
 8022906:	bf00      	nop
 8022908:	20000228 	.word	0x20000228
 802290c:	08024856 	.word	0x08024856
 8022910:	08024863 	.word	0x08024863
 8022914:	08024810 	.word	0x08024810

08022918 <atexit>:
 8022918:	2300      	movs	r3, #0
 802291a:	4601      	mov	r1, r0
 802291c:	461a      	mov	r2, r3
 802291e:	4618      	mov	r0, r3
 8022920:	f000 bb56 	b.w	8022fd0 <__register_exitproc>

08022924 <malloc>:
 8022924:	4b02      	ldr	r3, [pc, #8]	@ (8022930 <malloc+0xc>)
 8022926:	4601      	mov	r1, r0
 8022928:	6818      	ldr	r0, [r3, #0]
 802292a:	f000 b82d 	b.w	8022988 <_malloc_r>
 802292e:	bf00      	nop
 8022930:	20000228 	.word	0x20000228

08022934 <free>:
 8022934:	4b02      	ldr	r3, [pc, #8]	@ (8022940 <free+0xc>)
 8022936:	4601      	mov	r1, r0
 8022938:	6818      	ldr	r0, [r3, #0]
 802293a:	f000 bba5 	b.w	8023088 <_free_r>
 802293e:	bf00      	nop
 8022940:	20000228 	.word	0x20000228

08022944 <sbrk_aligned>:
 8022944:	b570      	push	{r4, r5, r6, lr}
 8022946:	4e0f      	ldr	r6, [pc, #60]	@ (8022984 <sbrk_aligned+0x40>)
 8022948:	460c      	mov	r4, r1
 802294a:	6831      	ldr	r1, [r6, #0]
 802294c:	4605      	mov	r5, r0
 802294e:	b911      	cbnz	r1, 8022956 <sbrk_aligned+0x12>
 8022950:	f000 fae0 	bl	8022f14 <_sbrk_r>
 8022954:	6030      	str	r0, [r6, #0]
 8022956:	4621      	mov	r1, r4
 8022958:	4628      	mov	r0, r5
 802295a:	f000 fadb 	bl	8022f14 <_sbrk_r>
 802295e:	1c43      	adds	r3, r0, #1
 8022960:	d103      	bne.n	802296a <sbrk_aligned+0x26>
 8022962:	f04f 34ff 	mov.w	r4, #4294967295
 8022966:	4620      	mov	r0, r4
 8022968:	bd70      	pop	{r4, r5, r6, pc}
 802296a:	1cc4      	adds	r4, r0, #3
 802296c:	f024 0403 	bic.w	r4, r4, #3
 8022970:	42a0      	cmp	r0, r4
 8022972:	d0f8      	beq.n	8022966 <sbrk_aligned+0x22>
 8022974:	1a21      	subs	r1, r4, r0
 8022976:	4628      	mov	r0, r5
 8022978:	f000 facc 	bl	8022f14 <_sbrk_r>
 802297c:	3001      	adds	r0, #1
 802297e:	d1f2      	bne.n	8022966 <sbrk_aligned+0x22>
 8022980:	e7ef      	b.n	8022962 <sbrk_aligned+0x1e>
 8022982:	bf00      	nop
 8022984:	20014a58 	.word	0x20014a58

08022988 <_malloc_r>:
 8022988:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802298c:	1ccd      	adds	r5, r1, #3
 802298e:	f025 0503 	bic.w	r5, r5, #3
 8022992:	3508      	adds	r5, #8
 8022994:	2d0c      	cmp	r5, #12
 8022996:	bf38      	it	cc
 8022998:	250c      	movcc	r5, #12
 802299a:	2d00      	cmp	r5, #0
 802299c:	4606      	mov	r6, r0
 802299e:	db01      	blt.n	80229a4 <_malloc_r+0x1c>
 80229a0:	42a9      	cmp	r1, r5
 80229a2:	d904      	bls.n	80229ae <_malloc_r+0x26>
 80229a4:	230c      	movs	r3, #12
 80229a6:	6033      	str	r3, [r6, #0]
 80229a8:	2000      	movs	r0, #0
 80229aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80229ae:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8022a84 <_malloc_r+0xfc>
 80229b2:	f000 f869 	bl	8022a88 <__malloc_lock>
 80229b6:	f8d8 3000 	ldr.w	r3, [r8]
 80229ba:	461c      	mov	r4, r3
 80229bc:	bb44      	cbnz	r4, 8022a10 <_malloc_r+0x88>
 80229be:	4629      	mov	r1, r5
 80229c0:	4630      	mov	r0, r6
 80229c2:	f7ff ffbf 	bl	8022944 <sbrk_aligned>
 80229c6:	1c43      	adds	r3, r0, #1
 80229c8:	4604      	mov	r4, r0
 80229ca:	d158      	bne.n	8022a7e <_malloc_r+0xf6>
 80229cc:	f8d8 4000 	ldr.w	r4, [r8]
 80229d0:	4627      	mov	r7, r4
 80229d2:	2f00      	cmp	r7, #0
 80229d4:	d143      	bne.n	8022a5e <_malloc_r+0xd6>
 80229d6:	2c00      	cmp	r4, #0
 80229d8:	d04b      	beq.n	8022a72 <_malloc_r+0xea>
 80229da:	6823      	ldr	r3, [r4, #0]
 80229dc:	4639      	mov	r1, r7
 80229de:	4630      	mov	r0, r6
 80229e0:	eb04 0903 	add.w	r9, r4, r3
 80229e4:	f000 fa96 	bl	8022f14 <_sbrk_r>
 80229e8:	4581      	cmp	r9, r0
 80229ea:	d142      	bne.n	8022a72 <_malloc_r+0xea>
 80229ec:	6821      	ldr	r1, [r4, #0]
 80229ee:	1a6d      	subs	r5, r5, r1
 80229f0:	4629      	mov	r1, r5
 80229f2:	4630      	mov	r0, r6
 80229f4:	f7ff ffa6 	bl	8022944 <sbrk_aligned>
 80229f8:	3001      	adds	r0, #1
 80229fa:	d03a      	beq.n	8022a72 <_malloc_r+0xea>
 80229fc:	6823      	ldr	r3, [r4, #0]
 80229fe:	442b      	add	r3, r5
 8022a00:	6023      	str	r3, [r4, #0]
 8022a02:	f8d8 3000 	ldr.w	r3, [r8]
 8022a06:	685a      	ldr	r2, [r3, #4]
 8022a08:	bb62      	cbnz	r2, 8022a64 <_malloc_r+0xdc>
 8022a0a:	f8c8 7000 	str.w	r7, [r8]
 8022a0e:	e00f      	b.n	8022a30 <_malloc_r+0xa8>
 8022a10:	6822      	ldr	r2, [r4, #0]
 8022a12:	1b52      	subs	r2, r2, r5
 8022a14:	d420      	bmi.n	8022a58 <_malloc_r+0xd0>
 8022a16:	2a0b      	cmp	r2, #11
 8022a18:	d917      	bls.n	8022a4a <_malloc_r+0xc2>
 8022a1a:	1961      	adds	r1, r4, r5
 8022a1c:	42a3      	cmp	r3, r4
 8022a1e:	6025      	str	r5, [r4, #0]
 8022a20:	bf18      	it	ne
 8022a22:	6059      	strne	r1, [r3, #4]
 8022a24:	6863      	ldr	r3, [r4, #4]
 8022a26:	bf08      	it	eq
 8022a28:	f8c8 1000 	streq.w	r1, [r8]
 8022a2c:	5162      	str	r2, [r4, r5]
 8022a2e:	604b      	str	r3, [r1, #4]
 8022a30:	4630      	mov	r0, r6
 8022a32:	f000 f82f 	bl	8022a94 <__malloc_unlock>
 8022a36:	f104 000b 	add.w	r0, r4, #11
 8022a3a:	1d23      	adds	r3, r4, #4
 8022a3c:	f020 0007 	bic.w	r0, r0, #7
 8022a40:	1ac2      	subs	r2, r0, r3
 8022a42:	bf1c      	itt	ne
 8022a44:	1a1b      	subne	r3, r3, r0
 8022a46:	50a3      	strne	r3, [r4, r2]
 8022a48:	e7af      	b.n	80229aa <_malloc_r+0x22>
 8022a4a:	6862      	ldr	r2, [r4, #4]
 8022a4c:	42a3      	cmp	r3, r4
 8022a4e:	bf0c      	ite	eq
 8022a50:	f8c8 2000 	streq.w	r2, [r8]
 8022a54:	605a      	strne	r2, [r3, #4]
 8022a56:	e7eb      	b.n	8022a30 <_malloc_r+0xa8>
 8022a58:	4623      	mov	r3, r4
 8022a5a:	6864      	ldr	r4, [r4, #4]
 8022a5c:	e7ae      	b.n	80229bc <_malloc_r+0x34>
 8022a5e:	463c      	mov	r4, r7
 8022a60:	687f      	ldr	r7, [r7, #4]
 8022a62:	e7b6      	b.n	80229d2 <_malloc_r+0x4a>
 8022a64:	461a      	mov	r2, r3
 8022a66:	685b      	ldr	r3, [r3, #4]
 8022a68:	42a3      	cmp	r3, r4
 8022a6a:	d1fb      	bne.n	8022a64 <_malloc_r+0xdc>
 8022a6c:	2300      	movs	r3, #0
 8022a6e:	6053      	str	r3, [r2, #4]
 8022a70:	e7de      	b.n	8022a30 <_malloc_r+0xa8>
 8022a72:	230c      	movs	r3, #12
 8022a74:	6033      	str	r3, [r6, #0]
 8022a76:	4630      	mov	r0, r6
 8022a78:	f000 f80c 	bl	8022a94 <__malloc_unlock>
 8022a7c:	e794      	b.n	80229a8 <_malloc_r+0x20>
 8022a7e:	6005      	str	r5, [r0, #0]
 8022a80:	e7d6      	b.n	8022a30 <_malloc_r+0xa8>
 8022a82:	bf00      	nop
 8022a84:	20014a5c 	.word	0x20014a5c

08022a88 <__malloc_lock>:
 8022a88:	4801      	ldr	r0, [pc, #4]	@ (8022a90 <__malloc_lock+0x8>)
 8022a8a:	f000 ba90 	b.w	8022fae <__retarget_lock_acquire_recursive>
 8022a8e:	bf00      	nop
 8022a90:	20014ba0 	.word	0x20014ba0

08022a94 <__malloc_unlock>:
 8022a94:	4801      	ldr	r0, [pc, #4]	@ (8022a9c <__malloc_unlock+0x8>)
 8022a96:	f000 ba8b 	b.w	8022fb0 <__retarget_lock_release_recursive>
 8022a9a:	bf00      	nop
 8022a9c:	20014ba0 	.word	0x20014ba0

08022aa0 <__cxa_atexit>:
 8022aa0:	b510      	push	{r4, lr}
 8022aa2:	4604      	mov	r4, r0
 8022aa4:	4804      	ldr	r0, [pc, #16]	@ (8022ab8 <__cxa_atexit+0x18>)
 8022aa6:	4613      	mov	r3, r2
 8022aa8:	b120      	cbz	r0, 8022ab4 <__cxa_atexit+0x14>
 8022aaa:	460a      	mov	r2, r1
 8022aac:	2002      	movs	r0, #2
 8022aae:	4621      	mov	r1, r4
 8022ab0:	f000 fa8e 	bl	8022fd0 <__register_exitproc>
 8022ab4:	bd10      	pop	{r4, pc}
 8022ab6:	bf00      	nop
 8022ab8:	08022fd1 	.word	0x08022fd1

08022abc <std>:
 8022abc:	2300      	movs	r3, #0
 8022abe:	b510      	push	{r4, lr}
 8022ac0:	4604      	mov	r4, r0
 8022ac2:	e9c0 3300 	strd	r3, r3, [r0]
 8022ac6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8022aca:	6083      	str	r3, [r0, #8]
 8022acc:	8181      	strh	r1, [r0, #12]
 8022ace:	6643      	str	r3, [r0, #100]	@ 0x64
 8022ad0:	81c2      	strh	r2, [r0, #14]
 8022ad2:	6183      	str	r3, [r0, #24]
 8022ad4:	4619      	mov	r1, r3
 8022ad6:	2208      	movs	r2, #8
 8022ad8:	305c      	adds	r0, #92	@ 0x5c
 8022ada:	f000 f93c 	bl	8022d56 <memset>
 8022ade:	4b0d      	ldr	r3, [pc, #52]	@ (8022b14 <std+0x58>)
 8022ae0:	6263      	str	r3, [r4, #36]	@ 0x24
 8022ae2:	4b0d      	ldr	r3, [pc, #52]	@ (8022b18 <std+0x5c>)
 8022ae4:	62a3      	str	r3, [r4, #40]	@ 0x28
 8022ae6:	4b0d      	ldr	r3, [pc, #52]	@ (8022b1c <std+0x60>)
 8022ae8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8022aea:	4b0d      	ldr	r3, [pc, #52]	@ (8022b20 <std+0x64>)
 8022aec:	6323      	str	r3, [r4, #48]	@ 0x30
 8022aee:	4b0d      	ldr	r3, [pc, #52]	@ (8022b24 <std+0x68>)
 8022af0:	6224      	str	r4, [r4, #32]
 8022af2:	429c      	cmp	r4, r3
 8022af4:	d006      	beq.n	8022b04 <std+0x48>
 8022af6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8022afa:	4294      	cmp	r4, r2
 8022afc:	d002      	beq.n	8022b04 <std+0x48>
 8022afe:	33d0      	adds	r3, #208	@ 0xd0
 8022b00:	429c      	cmp	r4, r3
 8022b02:	d105      	bne.n	8022b10 <std+0x54>
 8022b04:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8022b08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022b0c:	f000 ba4e 	b.w	8022fac <__retarget_lock_init_recursive>
 8022b10:	bd10      	pop	{r4, pc}
 8022b12:	bf00      	nop
 8022b14:	08022cd1 	.word	0x08022cd1
 8022b18:	08022cf3 	.word	0x08022cf3
 8022b1c:	08022d2b 	.word	0x08022d2b
 8022b20:	08022d4f 	.word	0x08022d4f
 8022b24:	20014a60 	.word	0x20014a60

08022b28 <stdio_exit_handler>:
 8022b28:	4a02      	ldr	r2, [pc, #8]	@ (8022b34 <stdio_exit_handler+0xc>)
 8022b2a:	4903      	ldr	r1, [pc, #12]	@ (8022b38 <stdio_exit_handler+0x10>)
 8022b2c:	4803      	ldr	r0, [pc, #12]	@ (8022b3c <stdio_exit_handler+0x14>)
 8022b2e:	f000 b87b 	b.w	8022c28 <_fwalk_sglue>
 8022b32:	bf00      	nop
 8022b34:	2000021c 	.word	0x2000021c
 8022b38:	08023a71 	.word	0x08023a71
 8022b3c:	2000022c 	.word	0x2000022c

08022b40 <cleanup_stdio>:
 8022b40:	6841      	ldr	r1, [r0, #4]
 8022b42:	4b0c      	ldr	r3, [pc, #48]	@ (8022b74 <cleanup_stdio+0x34>)
 8022b44:	4299      	cmp	r1, r3
 8022b46:	b510      	push	{r4, lr}
 8022b48:	4604      	mov	r4, r0
 8022b4a:	d001      	beq.n	8022b50 <cleanup_stdio+0x10>
 8022b4c:	f000 ff90 	bl	8023a70 <_fflush_r>
 8022b50:	68a1      	ldr	r1, [r4, #8]
 8022b52:	4b09      	ldr	r3, [pc, #36]	@ (8022b78 <cleanup_stdio+0x38>)
 8022b54:	4299      	cmp	r1, r3
 8022b56:	d002      	beq.n	8022b5e <cleanup_stdio+0x1e>
 8022b58:	4620      	mov	r0, r4
 8022b5a:	f000 ff89 	bl	8023a70 <_fflush_r>
 8022b5e:	68e1      	ldr	r1, [r4, #12]
 8022b60:	4b06      	ldr	r3, [pc, #24]	@ (8022b7c <cleanup_stdio+0x3c>)
 8022b62:	4299      	cmp	r1, r3
 8022b64:	d004      	beq.n	8022b70 <cleanup_stdio+0x30>
 8022b66:	4620      	mov	r0, r4
 8022b68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022b6c:	f000 bf80 	b.w	8023a70 <_fflush_r>
 8022b70:	bd10      	pop	{r4, pc}
 8022b72:	bf00      	nop
 8022b74:	20014a60 	.word	0x20014a60
 8022b78:	20014ac8 	.word	0x20014ac8
 8022b7c:	20014b30 	.word	0x20014b30

08022b80 <global_stdio_init.part.0>:
 8022b80:	b510      	push	{r4, lr}
 8022b82:	4b0b      	ldr	r3, [pc, #44]	@ (8022bb0 <global_stdio_init.part.0+0x30>)
 8022b84:	4c0b      	ldr	r4, [pc, #44]	@ (8022bb4 <global_stdio_init.part.0+0x34>)
 8022b86:	4a0c      	ldr	r2, [pc, #48]	@ (8022bb8 <global_stdio_init.part.0+0x38>)
 8022b88:	601a      	str	r2, [r3, #0]
 8022b8a:	4620      	mov	r0, r4
 8022b8c:	2200      	movs	r2, #0
 8022b8e:	2104      	movs	r1, #4
 8022b90:	f7ff ff94 	bl	8022abc <std>
 8022b94:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8022b98:	2201      	movs	r2, #1
 8022b9a:	2109      	movs	r1, #9
 8022b9c:	f7ff ff8e 	bl	8022abc <std>
 8022ba0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8022ba4:	2202      	movs	r2, #2
 8022ba6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022baa:	2112      	movs	r1, #18
 8022bac:	f7ff bf86 	b.w	8022abc <std>
 8022bb0:	20014b98 	.word	0x20014b98
 8022bb4:	20014a60 	.word	0x20014a60
 8022bb8:	08022b29 	.word	0x08022b29

08022bbc <__sfp_lock_acquire>:
 8022bbc:	4801      	ldr	r0, [pc, #4]	@ (8022bc4 <__sfp_lock_acquire+0x8>)
 8022bbe:	f000 b9f6 	b.w	8022fae <__retarget_lock_acquire_recursive>
 8022bc2:	bf00      	nop
 8022bc4:	20014ba2 	.word	0x20014ba2

08022bc8 <__sfp_lock_release>:
 8022bc8:	4801      	ldr	r0, [pc, #4]	@ (8022bd0 <__sfp_lock_release+0x8>)
 8022bca:	f000 b9f1 	b.w	8022fb0 <__retarget_lock_release_recursive>
 8022bce:	bf00      	nop
 8022bd0:	20014ba2 	.word	0x20014ba2

08022bd4 <__sinit>:
 8022bd4:	b510      	push	{r4, lr}
 8022bd6:	4604      	mov	r4, r0
 8022bd8:	f7ff fff0 	bl	8022bbc <__sfp_lock_acquire>
 8022bdc:	6a23      	ldr	r3, [r4, #32]
 8022bde:	b11b      	cbz	r3, 8022be8 <__sinit+0x14>
 8022be0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022be4:	f7ff bff0 	b.w	8022bc8 <__sfp_lock_release>
 8022be8:	4b04      	ldr	r3, [pc, #16]	@ (8022bfc <__sinit+0x28>)
 8022bea:	6223      	str	r3, [r4, #32]
 8022bec:	4b04      	ldr	r3, [pc, #16]	@ (8022c00 <__sinit+0x2c>)
 8022bee:	681b      	ldr	r3, [r3, #0]
 8022bf0:	2b00      	cmp	r3, #0
 8022bf2:	d1f5      	bne.n	8022be0 <__sinit+0xc>
 8022bf4:	f7ff ffc4 	bl	8022b80 <global_stdio_init.part.0>
 8022bf8:	e7f2      	b.n	8022be0 <__sinit+0xc>
 8022bfa:	bf00      	nop
 8022bfc:	08022b41 	.word	0x08022b41
 8022c00:	20014b98 	.word	0x20014b98

08022c04 <fiprintf>:
 8022c04:	b40e      	push	{r1, r2, r3}
 8022c06:	b503      	push	{r0, r1, lr}
 8022c08:	4601      	mov	r1, r0
 8022c0a:	ab03      	add	r3, sp, #12
 8022c0c:	4805      	ldr	r0, [pc, #20]	@ (8022c24 <fiprintf+0x20>)
 8022c0e:	f853 2b04 	ldr.w	r2, [r3], #4
 8022c12:	6800      	ldr	r0, [r0, #0]
 8022c14:	9301      	str	r3, [sp, #4]
 8022c16:	f000 fc03 	bl	8023420 <_vfiprintf_r>
 8022c1a:	b002      	add	sp, #8
 8022c1c:	f85d eb04 	ldr.w	lr, [sp], #4
 8022c20:	b003      	add	sp, #12
 8022c22:	4770      	bx	lr
 8022c24:	20000228 	.word	0x20000228

08022c28 <_fwalk_sglue>:
 8022c28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022c2c:	4607      	mov	r7, r0
 8022c2e:	4688      	mov	r8, r1
 8022c30:	4614      	mov	r4, r2
 8022c32:	2600      	movs	r6, #0
 8022c34:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8022c38:	f1b9 0901 	subs.w	r9, r9, #1
 8022c3c:	d505      	bpl.n	8022c4a <_fwalk_sglue+0x22>
 8022c3e:	6824      	ldr	r4, [r4, #0]
 8022c40:	2c00      	cmp	r4, #0
 8022c42:	d1f7      	bne.n	8022c34 <_fwalk_sglue+0xc>
 8022c44:	4630      	mov	r0, r6
 8022c46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022c4a:	89ab      	ldrh	r3, [r5, #12]
 8022c4c:	2b01      	cmp	r3, #1
 8022c4e:	d907      	bls.n	8022c60 <_fwalk_sglue+0x38>
 8022c50:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8022c54:	3301      	adds	r3, #1
 8022c56:	d003      	beq.n	8022c60 <_fwalk_sglue+0x38>
 8022c58:	4629      	mov	r1, r5
 8022c5a:	4638      	mov	r0, r7
 8022c5c:	47c0      	blx	r8
 8022c5e:	4306      	orrs	r6, r0
 8022c60:	3568      	adds	r5, #104	@ 0x68
 8022c62:	e7e9      	b.n	8022c38 <_fwalk_sglue+0x10>

08022c64 <sniprintf>:
 8022c64:	b40c      	push	{r2, r3}
 8022c66:	b530      	push	{r4, r5, lr}
 8022c68:	4b18      	ldr	r3, [pc, #96]	@ (8022ccc <sniprintf+0x68>)
 8022c6a:	1e0c      	subs	r4, r1, #0
 8022c6c:	681d      	ldr	r5, [r3, #0]
 8022c6e:	b09d      	sub	sp, #116	@ 0x74
 8022c70:	da08      	bge.n	8022c84 <sniprintf+0x20>
 8022c72:	238b      	movs	r3, #139	@ 0x8b
 8022c74:	602b      	str	r3, [r5, #0]
 8022c76:	f04f 30ff 	mov.w	r0, #4294967295
 8022c7a:	b01d      	add	sp, #116	@ 0x74
 8022c7c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8022c80:	b002      	add	sp, #8
 8022c82:	4770      	bx	lr
 8022c84:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8022c88:	f8ad 3014 	strh.w	r3, [sp, #20]
 8022c8c:	f04f 0300 	mov.w	r3, #0
 8022c90:	931b      	str	r3, [sp, #108]	@ 0x6c
 8022c92:	bf14      	ite	ne
 8022c94:	f104 33ff 	addne.w	r3, r4, #4294967295
 8022c98:	4623      	moveq	r3, r4
 8022c9a:	9304      	str	r3, [sp, #16]
 8022c9c:	9307      	str	r3, [sp, #28]
 8022c9e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8022ca2:	9002      	str	r0, [sp, #8]
 8022ca4:	9006      	str	r0, [sp, #24]
 8022ca6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8022caa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8022cac:	ab21      	add	r3, sp, #132	@ 0x84
 8022cae:	a902      	add	r1, sp, #8
 8022cb0:	4628      	mov	r0, r5
 8022cb2:	9301      	str	r3, [sp, #4]
 8022cb4:	f000 fa8e 	bl	80231d4 <_svfiprintf_r>
 8022cb8:	1c43      	adds	r3, r0, #1
 8022cba:	bfbc      	itt	lt
 8022cbc:	238b      	movlt	r3, #139	@ 0x8b
 8022cbe:	602b      	strlt	r3, [r5, #0]
 8022cc0:	2c00      	cmp	r4, #0
 8022cc2:	d0da      	beq.n	8022c7a <sniprintf+0x16>
 8022cc4:	9b02      	ldr	r3, [sp, #8]
 8022cc6:	2200      	movs	r2, #0
 8022cc8:	701a      	strb	r2, [r3, #0]
 8022cca:	e7d6      	b.n	8022c7a <sniprintf+0x16>
 8022ccc:	20000228 	.word	0x20000228

08022cd0 <__sread>:
 8022cd0:	b510      	push	{r4, lr}
 8022cd2:	460c      	mov	r4, r1
 8022cd4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022cd8:	f000 f8f6 	bl	8022ec8 <_read_r>
 8022cdc:	2800      	cmp	r0, #0
 8022cde:	bfab      	itete	ge
 8022ce0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8022ce2:	89a3      	ldrhlt	r3, [r4, #12]
 8022ce4:	181b      	addge	r3, r3, r0
 8022ce6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8022cea:	bfac      	ite	ge
 8022cec:	6563      	strge	r3, [r4, #84]	@ 0x54
 8022cee:	81a3      	strhlt	r3, [r4, #12]
 8022cf0:	bd10      	pop	{r4, pc}

08022cf2 <__swrite>:
 8022cf2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022cf6:	461f      	mov	r7, r3
 8022cf8:	898b      	ldrh	r3, [r1, #12]
 8022cfa:	05db      	lsls	r3, r3, #23
 8022cfc:	4605      	mov	r5, r0
 8022cfe:	460c      	mov	r4, r1
 8022d00:	4616      	mov	r6, r2
 8022d02:	d505      	bpl.n	8022d10 <__swrite+0x1e>
 8022d04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022d08:	2302      	movs	r3, #2
 8022d0a:	2200      	movs	r2, #0
 8022d0c:	f000 f8ca 	bl	8022ea4 <_lseek_r>
 8022d10:	89a3      	ldrh	r3, [r4, #12]
 8022d12:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022d16:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8022d1a:	81a3      	strh	r3, [r4, #12]
 8022d1c:	4632      	mov	r2, r6
 8022d1e:	463b      	mov	r3, r7
 8022d20:	4628      	mov	r0, r5
 8022d22:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8022d26:	f000 b905 	b.w	8022f34 <_write_r>

08022d2a <__sseek>:
 8022d2a:	b510      	push	{r4, lr}
 8022d2c:	460c      	mov	r4, r1
 8022d2e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022d32:	f000 f8b7 	bl	8022ea4 <_lseek_r>
 8022d36:	1c43      	adds	r3, r0, #1
 8022d38:	89a3      	ldrh	r3, [r4, #12]
 8022d3a:	bf15      	itete	ne
 8022d3c:	6560      	strne	r0, [r4, #84]	@ 0x54
 8022d3e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8022d42:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8022d46:	81a3      	strheq	r3, [r4, #12]
 8022d48:	bf18      	it	ne
 8022d4a:	81a3      	strhne	r3, [r4, #12]
 8022d4c:	bd10      	pop	{r4, pc}

08022d4e <__sclose>:
 8022d4e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022d52:	f000 b839 	b.w	8022dc8 <_close_r>

08022d56 <memset>:
 8022d56:	4402      	add	r2, r0
 8022d58:	4603      	mov	r3, r0
 8022d5a:	4293      	cmp	r3, r2
 8022d5c:	d100      	bne.n	8022d60 <memset+0xa>
 8022d5e:	4770      	bx	lr
 8022d60:	f803 1b01 	strb.w	r1, [r3], #1
 8022d64:	e7f9      	b.n	8022d5a <memset+0x4>

08022d66 <_raise_r>:
 8022d66:	291f      	cmp	r1, #31
 8022d68:	b538      	push	{r3, r4, r5, lr}
 8022d6a:	4605      	mov	r5, r0
 8022d6c:	460c      	mov	r4, r1
 8022d6e:	d904      	bls.n	8022d7a <_raise_r+0x14>
 8022d70:	2316      	movs	r3, #22
 8022d72:	6003      	str	r3, [r0, #0]
 8022d74:	f04f 30ff 	mov.w	r0, #4294967295
 8022d78:	bd38      	pop	{r3, r4, r5, pc}
 8022d7a:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8022d7c:	b112      	cbz	r2, 8022d84 <_raise_r+0x1e>
 8022d7e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8022d82:	b94b      	cbnz	r3, 8022d98 <_raise_r+0x32>
 8022d84:	4628      	mov	r0, r5
 8022d86:	f000 f8c3 	bl	8022f10 <_getpid_r>
 8022d8a:	4622      	mov	r2, r4
 8022d8c:	4601      	mov	r1, r0
 8022d8e:	4628      	mov	r0, r5
 8022d90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022d94:	f000 b8aa 	b.w	8022eec <_kill_r>
 8022d98:	2b01      	cmp	r3, #1
 8022d9a:	d00a      	beq.n	8022db2 <_raise_r+0x4c>
 8022d9c:	1c59      	adds	r1, r3, #1
 8022d9e:	d103      	bne.n	8022da8 <_raise_r+0x42>
 8022da0:	2316      	movs	r3, #22
 8022da2:	6003      	str	r3, [r0, #0]
 8022da4:	2001      	movs	r0, #1
 8022da6:	e7e7      	b.n	8022d78 <_raise_r+0x12>
 8022da8:	2100      	movs	r1, #0
 8022daa:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8022dae:	4620      	mov	r0, r4
 8022db0:	4798      	blx	r3
 8022db2:	2000      	movs	r0, #0
 8022db4:	e7e0      	b.n	8022d78 <_raise_r+0x12>
	...

08022db8 <raise>:
 8022db8:	4b02      	ldr	r3, [pc, #8]	@ (8022dc4 <raise+0xc>)
 8022dba:	4601      	mov	r1, r0
 8022dbc:	6818      	ldr	r0, [r3, #0]
 8022dbe:	f7ff bfd2 	b.w	8022d66 <_raise_r>
 8022dc2:	bf00      	nop
 8022dc4:	20000228 	.word	0x20000228

08022dc8 <_close_r>:
 8022dc8:	b538      	push	{r3, r4, r5, lr}
 8022dca:	4d06      	ldr	r5, [pc, #24]	@ (8022de4 <_close_r+0x1c>)
 8022dcc:	2300      	movs	r3, #0
 8022dce:	4604      	mov	r4, r0
 8022dd0:	4608      	mov	r0, r1
 8022dd2:	602b      	str	r3, [r5, #0]
 8022dd4:	f7df fca0 	bl	8002718 <_close>
 8022dd8:	1c43      	adds	r3, r0, #1
 8022dda:	d102      	bne.n	8022de2 <_close_r+0x1a>
 8022ddc:	682b      	ldr	r3, [r5, #0]
 8022dde:	b103      	cbz	r3, 8022de2 <_close_r+0x1a>
 8022de0:	6023      	str	r3, [r4, #0]
 8022de2:	bd38      	pop	{r3, r4, r5, pc}
 8022de4:	20014b9c 	.word	0x20014b9c

08022de8 <_reclaim_reent>:
 8022de8:	4b2d      	ldr	r3, [pc, #180]	@ (8022ea0 <_reclaim_reent+0xb8>)
 8022dea:	681b      	ldr	r3, [r3, #0]
 8022dec:	4283      	cmp	r3, r0
 8022dee:	b570      	push	{r4, r5, r6, lr}
 8022df0:	4604      	mov	r4, r0
 8022df2:	d053      	beq.n	8022e9c <_reclaim_reent+0xb4>
 8022df4:	69c3      	ldr	r3, [r0, #28]
 8022df6:	b31b      	cbz	r3, 8022e40 <_reclaim_reent+0x58>
 8022df8:	68db      	ldr	r3, [r3, #12]
 8022dfa:	b163      	cbz	r3, 8022e16 <_reclaim_reent+0x2e>
 8022dfc:	2500      	movs	r5, #0
 8022dfe:	69e3      	ldr	r3, [r4, #28]
 8022e00:	68db      	ldr	r3, [r3, #12]
 8022e02:	5959      	ldr	r1, [r3, r5]
 8022e04:	b9b1      	cbnz	r1, 8022e34 <_reclaim_reent+0x4c>
 8022e06:	3504      	adds	r5, #4
 8022e08:	2d80      	cmp	r5, #128	@ 0x80
 8022e0a:	d1f8      	bne.n	8022dfe <_reclaim_reent+0x16>
 8022e0c:	69e3      	ldr	r3, [r4, #28]
 8022e0e:	4620      	mov	r0, r4
 8022e10:	68d9      	ldr	r1, [r3, #12]
 8022e12:	f000 f939 	bl	8023088 <_free_r>
 8022e16:	69e3      	ldr	r3, [r4, #28]
 8022e18:	6819      	ldr	r1, [r3, #0]
 8022e1a:	b111      	cbz	r1, 8022e22 <_reclaim_reent+0x3a>
 8022e1c:	4620      	mov	r0, r4
 8022e1e:	f000 f933 	bl	8023088 <_free_r>
 8022e22:	69e3      	ldr	r3, [r4, #28]
 8022e24:	689d      	ldr	r5, [r3, #8]
 8022e26:	b15d      	cbz	r5, 8022e40 <_reclaim_reent+0x58>
 8022e28:	4629      	mov	r1, r5
 8022e2a:	4620      	mov	r0, r4
 8022e2c:	682d      	ldr	r5, [r5, #0]
 8022e2e:	f000 f92b 	bl	8023088 <_free_r>
 8022e32:	e7f8      	b.n	8022e26 <_reclaim_reent+0x3e>
 8022e34:	680e      	ldr	r6, [r1, #0]
 8022e36:	4620      	mov	r0, r4
 8022e38:	f000 f926 	bl	8023088 <_free_r>
 8022e3c:	4631      	mov	r1, r6
 8022e3e:	e7e1      	b.n	8022e04 <_reclaim_reent+0x1c>
 8022e40:	6961      	ldr	r1, [r4, #20]
 8022e42:	b111      	cbz	r1, 8022e4a <_reclaim_reent+0x62>
 8022e44:	4620      	mov	r0, r4
 8022e46:	f000 f91f 	bl	8023088 <_free_r>
 8022e4a:	69e1      	ldr	r1, [r4, #28]
 8022e4c:	b111      	cbz	r1, 8022e54 <_reclaim_reent+0x6c>
 8022e4e:	4620      	mov	r0, r4
 8022e50:	f000 f91a 	bl	8023088 <_free_r>
 8022e54:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8022e56:	b111      	cbz	r1, 8022e5e <_reclaim_reent+0x76>
 8022e58:	4620      	mov	r0, r4
 8022e5a:	f000 f915 	bl	8023088 <_free_r>
 8022e5e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8022e60:	b111      	cbz	r1, 8022e68 <_reclaim_reent+0x80>
 8022e62:	4620      	mov	r0, r4
 8022e64:	f000 f910 	bl	8023088 <_free_r>
 8022e68:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8022e6a:	b111      	cbz	r1, 8022e72 <_reclaim_reent+0x8a>
 8022e6c:	4620      	mov	r0, r4
 8022e6e:	f000 f90b 	bl	8023088 <_free_r>
 8022e72:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8022e74:	b111      	cbz	r1, 8022e7c <_reclaim_reent+0x94>
 8022e76:	4620      	mov	r0, r4
 8022e78:	f000 f906 	bl	8023088 <_free_r>
 8022e7c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8022e7e:	b111      	cbz	r1, 8022e86 <_reclaim_reent+0x9e>
 8022e80:	4620      	mov	r0, r4
 8022e82:	f000 f901 	bl	8023088 <_free_r>
 8022e86:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8022e88:	b111      	cbz	r1, 8022e90 <_reclaim_reent+0xa8>
 8022e8a:	4620      	mov	r0, r4
 8022e8c:	f000 f8fc 	bl	8023088 <_free_r>
 8022e90:	6a23      	ldr	r3, [r4, #32]
 8022e92:	b11b      	cbz	r3, 8022e9c <_reclaim_reent+0xb4>
 8022e94:	4620      	mov	r0, r4
 8022e96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8022e9a:	4718      	bx	r3
 8022e9c:	bd70      	pop	{r4, r5, r6, pc}
 8022e9e:	bf00      	nop
 8022ea0:	20000228 	.word	0x20000228

08022ea4 <_lseek_r>:
 8022ea4:	b538      	push	{r3, r4, r5, lr}
 8022ea6:	4d07      	ldr	r5, [pc, #28]	@ (8022ec4 <_lseek_r+0x20>)
 8022ea8:	4604      	mov	r4, r0
 8022eaa:	4608      	mov	r0, r1
 8022eac:	4611      	mov	r1, r2
 8022eae:	2200      	movs	r2, #0
 8022eb0:	602a      	str	r2, [r5, #0]
 8022eb2:	461a      	mov	r2, r3
 8022eb4:	f7df fc3a 	bl	800272c <_lseek>
 8022eb8:	1c43      	adds	r3, r0, #1
 8022eba:	d102      	bne.n	8022ec2 <_lseek_r+0x1e>
 8022ebc:	682b      	ldr	r3, [r5, #0]
 8022ebe:	b103      	cbz	r3, 8022ec2 <_lseek_r+0x1e>
 8022ec0:	6023      	str	r3, [r4, #0]
 8022ec2:	bd38      	pop	{r3, r4, r5, pc}
 8022ec4:	20014b9c 	.word	0x20014b9c

08022ec8 <_read_r>:
 8022ec8:	b538      	push	{r3, r4, r5, lr}
 8022eca:	4d07      	ldr	r5, [pc, #28]	@ (8022ee8 <_read_r+0x20>)
 8022ecc:	4604      	mov	r4, r0
 8022ece:	4608      	mov	r0, r1
 8022ed0:	4611      	mov	r1, r2
 8022ed2:	2200      	movs	r2, #0
 8022ed4:	602a      	str	r2, [r5, #0]
 8022ed6:	461a      	mov	r2, r3
 8022ed8:	f7df fc02 	bl	80026e0 <_read>
 8022edc:	1c43      	adds	r3, r0, #1
 8022ede:	d102      	bne.n	8022ee6 <_read_r+0x1e>
 8022ee0:	682b      	ldr	r3, [r5, #0]
 8022ee2:	b103      	cbz	r3, 8022ee6 <_read_r+0x1e>
 8022ee4:	6023      	str	r3, [r4, #0]
 8022ee6:	bd38      	pop	{r3, r4, r5, pc}
 8022ee8:	20014b9c 	.word	0x20014b9c

08022eec <_kill_r>:
 8022eec:	b538      	push	{r3, r4, r5, lr}
 8022eee:	4d07      	ldr	r5, [pc, #28]	@ (8022f0c <_kill_r+0x20>)
 8022ef0:	2300      	movs	r3, #0
 8022ef2:	4604      	mov	r4, r0
 8022ef4:	4608      	mov	r0, r1
 8022ef6:	4611      	mov	r1, r2
 8022ef8:	602b      	str	r3, [r5, #0]
 8022efa:	f7df fbe3 	bl	80026c4 <_kill>
 8022efe:	1c43      	adds	r3, r0, #1
 8022f00:	d102      	bne.n	8022f08 <_kill_r+0x1c>
 8022f02:	682b      	ldr	r3, [r5, #0]
 8022f04:	b103      	cbz	r3, 8022f08 <_kill_r+0x1c>
 8022f06:	6023      	str	r3, [r4, #0]
 8022f08:	bd38      	pop	{r3, r4, r5, pc}
 8022f0a:	bf00      	nop
 8022f0c:	20014b9c 	.word	0x20014b9c

08022f10 <_getpid_r>:
 8022f10:	f7df bbd6 	b.w	80026c0 <_getpid>

08022f14 <_sbrk_r>:
 8022f14:	b538      	push	{r3, r4, r5, lr}
 8022f16:	4d06      	ldr	r5, [pc, #24]	@ (8022f30 <_sbrk_r+0x1c>)
 8022f18:	2300      	movs	r3, #0
 8022f1a:	4604      	mov	r4, r0
 8022f1c:	4608      	mov	r0, r1
 8022f1e:	602b      	str	r3, [r5, #0]
 8022f20:	f7df fc06 	bl	8002730 <_sbrk>
 8022f24:	1c43      	adds	r3, r0, #1
 8022f26:	d102      	bne.n	8022f2e <_sbrk_r+0x1a>
 8022f28:	682b      	ldr	r3, [r5, #0]
 8022f2a:	b103      	cbz	r3, 8022f2e <_sbrk_r+0x1a>
 8022f2c:	6023      	str	r3, [r4, #0]
 8022f2e:	bd38      	pop	{r3, r4, r5, pc}
 8022f30:	20014b9c 	.word	0x20014b9c

08022f34 <_write_r>:
 8022f34:	b538      	push	{r3, r4, r5, lr}
 8022f36:	4d07      	ldr	r5, [pc, #28]	@ (8022f54 <_write_r+0x20>)
 8022f38:	4604      	mov	r4, r0
 8022f3a:	4608      	mov	r0, r1
 8022f3c:	4611      	mov	r1, r2
 8022f3e:	2200      	movs	r2, #0
 8022f40:	602a      	str	r2, [r5, #0]
 8022f42:	461a      	mov	r2, r3
 8022f44:	f7df fbda 	bl	80026fc <_write>
 8022f48:	1c43      	adds	r3, r0, #1
 8022f4a:	d102      	bne.n	8022f52 <_write_r+0x1e>
 8022f4c:	682b      	ldr	r3, [r5, #0]
 8022f4e:	b103      	cbz	r3, 8022f52 <_write_r+0x1e>
 8022f50:	6023      	str	r3, [r4, #0]
 8022f52:	bd38      	pop	{r3, r4, r5, pc}
 8022f54:	20014b9c 	.word	0x20014b9c

08022f58 <__errno>:
 8022f58:	4b01      	ldr	r3, [pc, #4]	@ (8022f60 <__errno+0x8>)
 8022f5a:	6818      	ldr	r0, [r3, #0]
 8022f5c:	4770      	bx	lr
 8022f5e:	bf00      	nop
 8022f60:	20000228 	.word	0x20000228

08022f64 <__libc_init_array>:
 8022f64:	b570      	push	{r4, r5, r6, lr}
 8022f66:	4d0d      	ldr	r5, [pc, #52]	@ (8022f9c <__libc_init_array+0x38>)
 8022f68:	4c0d      	ldr	r4, [pc, #52]	@ (8022fa0 <__libc_init_array+0x3c>)
 8022f6a:	1b64      	subs	r4, r4, r5
 8022f6c:	10a4      	asrs	r4, r4, #2
 8022f6e:	2600      	movs	r6, #0
 8022f70:	42a6      	cmp	r6, r4
 8022f72:	d109      	bne.n	8022f88 <__libc_init_array+0x24>
 8022f74:	4d0b      	ldr	r5, [pc, #44]	@ (8022fa4 <__libc_init_array+0x40>)
 8022f76:	4c0c      	ldr	r4, [pc, #48]	@ (8022fa8 <__libc_init_array+0x44>)
 8022f78:	f000 ff0a 	bl	8023d90 <_init>
 8022f7c:	1b64      	subs	r4, r4, r5
 8022f7e:	10a4      	asrs	r4, r4, #2
 8022f80:	2600      	movs	r6, #0
 8022f82:	42a6      	cmp	r6, r4
 8022f84:	d105      	bne.n	8022f92 <__libc_init_array+0x2e>
 8022f86:	bd70      	pop	{r4, r5, r6, pc}
 8022f88:	f855 3b04 	ldr.w	r3, [r5], #4
 8022f8c:	4798      	blx	r3
 8022f8e:	3601      	adds	r6, #1
 8022f90:	e7ee      	b.n	8022f70 <__libc_init_array+0xc>
 8022f92:	f855 3b04 	ldr.w	r3, [r5], #4
 8022f96:	4798      	blx	r3
 8022f98:	3601      	adds	r6, #1
 8022f9a:	e7f2      	b.n	8022f82 <__libc_init_array+0x1e>
 8022f9c:	08025c38 	.word	0x08025c38
 8022fa0:	08025c38 	.word	0x08025c38
 8022fa4:	08025c38 	.word	0x08025c38
 8022fa8:	08025c4c 	.word	0x08025c4c

08022fac <__retarget_lock_init_recursive>:
 8022fac:	4770      	bx	lr

08022fae <__retarget_lock_acquire_recursive>:
 8022fae:	4770      	bx	lr

08022fb0 <__retarget_lock_release_recursive>:
 8022fb0:	4770      	bx	lr

08022fb2 <memcpy>:
 8022fb2:	440a      	add	r2, r1
 8022fb4:	4291      	cmp	r1, r2
 8022fb6:	f100 33ff 	add.w	r3, r0, #4294967295
 8022fba:	d100      	bne.n	8022fbe <memcpy+0xc>
 8022fbc:	4770      	bx	lr
 8022fbe:	b510      	push	{r4, lr}
 8022fc0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8022fc4:	f803 4f01 	strb.w	r4, [r3, #1]!
 8022fc8:	4291      	cmp	r1, r2
 8022fca:	d1f9      	bne.n	8022fc0 <memcpy+0xe>
 8022fcc:	bd10      	pop	{r4, pc}
	...

08022fd0 <__register_exitproc>:
 8022fd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022fd4:	4d27      	ldr	r5, [pc, #156]	@ (8023074 <__register_exitproc+0xa4>)
 8022fd6:	4607      	mov	r7, r0
 8022fd8:	6828      	ldr	r0, [r5, #0]
 8022fda:	4691      	mov	r9, r2
 8022fdc:	460e      	mov	r6, r1
 8022fde:	4698      	mov	r8, r3
 8022fe0:	f7ff ffe5 	bl	8022fae <__retarget_lock_acquire_recursive>
 8022fe4:	4a24      	ldr	r2, [pc, #144]	@ (8023078 <__register_exitproc+0xa8>)
 8022fe6:	6814      	ldr	r4, [r2, #0]
 8022fe8:	b93c      	cbnz	r4, 8022ffa <__register_exitproc+0x2a>
 8022fea:	4b24      	ldr	r3, [pc, #144]	@ (802307c <__register_exitproc+0xac>)
 8022fec:	6013      	str	r3, [r2, #0]
 8022fee:	4a24      	ldr	r2, [pc, #144]	@ (8023080 <__register_exitproc+0xb0>)
 8022ff0:	b112      	cbz	r2, 8022ff8 <__register_exitproc+0x28>
 8022ff2:	6812      	ldr	r2, [r2, #0]
 8022ff4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8022ff8:	4c20      	ldr	r4, [pc, #128]	@ (802307c <__register_exitproc+0xac>)
 8022ffa:	6863      	ldr	r3, [r4, #4]
 8022ffc:	2b1f      	cmp	r3, #31
 8022ffe:	dd06      	ble.n	802300e <__register_exitproc+0x3e>
 8023000:	6828      	ldr	r0, [r5, #0]
 8023002:	f7ff ffd5 	bl	8022fb0 <__retarget_lock_release_recursive>
 8023006:	f04f 30ff 	mov.w	r0, #4294967295
 802300a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802300e:	b32f      	cbz	r7, 802305c <__register_exitproc+0x8c>
 8023010:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8023014:	b968      	cbnz	r0, 8023032 <__register_exitproc+0x62>
 8023016:	4b1b      	ldr	r3, [pc, #108]	@ (8023084 <__register_exitproc+0xb4>)
 8023018:	2b00      	cmp	r3, #0
 802301a:	d0f1      	beq.n	8023000 <__register_exitproc+0x30>
 802301c:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8023020:	f7ff fc80 	bl	8022924 <malloc>
 8023024:	2800      	cmp	r0, #0
 8023026:	d0eb      	beq.n	8023000 <__register_exitproc+0x30>
 8023028:	2300      	movs	r3, #0
 802302a:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802302e:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8023032:	6863      	ldr	r3, [r4, #4]
 8023034:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8023038:	2201      	movs	r2, #1
 802303a:	409a      	lsls	r2, r3
 802303c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8023040:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8023044:	4313      	orrs	r3, r2
 8023046:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802304a:	2f02      	cmp	r7, #2
 802304c:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8023050:	bf02      	ittt	eq
 8023052:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8023056:	4313      	orreq	r3, r2
 8023058:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802305c:	6863      	ldr	r3, [r4, #4]
 802305e:	6828      	ldr	r0, [r5, #0]
 8023060:	1c5a      	adds	r2, r3, #1
 8023062:	3302      	adds	r3, #2
 8023064:	6062      	str	r2, [r4, #4]
 8023066:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802306a:	f7ff ffa1 	bl	8022fb0 <__retarget_lock_release_recursive>
 802306e:	2000      	movs	r0, #0
 8023070:	e7cb      	b.n	802300a <__register_exitproc+0x3a>
 8023072:	bf00      	nop
 8023074:	20000278 	.word	0x20000278
 8023078:	20014c30 	.word	0x20014c30
 802307c:	20014ba4 	.word	0x20014ba4
 8023080:	08025a5c 	.word	0x08025a5c
 8023084:	08022925 	.word	0x08022925

08023088 <_free_r>:
 8023088:	b538      	push	{r3, r4, r5, lr}
 802308a:	4605      	mov	r5, r0
 802308c:	2900      	cmp	r1, #0
 802308e:	d041      	beq.n	8023114 <_free_r+0x8c>
 8023090:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023094:	1f0c      	subs	r4, r1, #4
 8023096:	2b00      	cmp	r3, #0
 8023098:	bfb8      	it	lt
 802309a:	18e4      	addlt	r4, r4, r3
 802309c:	f7ff fcf4 	bl	8022a88 <__malloc_lock>
 80230a0:	4a1d      	ldr	r2, [pc, #116]	@ (8023118 <_free_r+0x90>)
 80230a2:	6813      	ldr	r3, [r2, #0]
 80230a4:	b933      	cbnz	r3, 80230b4 <_free_r+0x2c>
 80230a6:	6063      	str	r3, [r4, #4]
 80230a8:	6014      	str	r4, [r2, #0]
 80230aa:	4628      	mov	r0, r5
 80230ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80230b0:	f7ff bcf0 	b.w	8022a94 <__malloc_unlock>
 80230b4:	42a3      	cmp	r3, r4
 80230b6:	d908      	bls.n	80230ca <_free_r+0x42>
 80230b8:	6820      	ldr	r0, [r4, #0]
 80230ba:	1821      	adds	r1, r4, r0
 80230bc:	428b      	cmp	r3, r1
 80230be:	bf01      	itttt	eq
 80230c0:	6819      	ldreq	r1, [r3, #0]
 80230c2:	685b      	ldreq	r3, [r3, #4]
 80230c4:	1809      	addeq	r1, r1, r0
 80230c6:	6021      	streq	r1, [r4, #0]
 80230c8:	e7ed      	b.n	80230a6 <_free_r+0x1e>
 80230ca:	461a      	mov	r2, r3
 80230cc:	685b      	ldr	r3, [r3, #4]
 80230ce:	b10b      	cbz	r3, 80230d4 <_free_r+0x4c>
 80230d0:	42a3      	cmp	r3, r4
 80230d2:	d9fa      	bls.n	80230ca <_free_r+0x42>
 80230d4:	6811      	ldr	r1, [r2, #0]
 80230d6:	1850      	adds	r0, r2, r1
 80230d8:	42a0      	cmp	r0, r4
 80230da:	d10b      	bne.n	80230f4 <_free_r+0x6c>
 80230dc:	6820      	ldr	r0, [r4, #0]
 80230de:	4401      	add	r1, r0
 80230e0:	1850      	adds	r0, r2, r1
 80230e2:	4283      	cmp	r3, r0
 80230e4:	6011      	str	r1, [r2, #0]
 80230e6:	d1e0      	bne.n	80230aa <_free_r+0x22>
 80230e8:	6818      	ldr	r0, [r3, #0]
 80230ea:	685b      	ldr	r3, [r3, #4]
 80230ec:	6053      	str	r3, [r2, #4]
 80230ee:	4408      	add	r0, r1
 80230f0:	6010      	str	r0, [r2, #0]
 80230f2:	e7da      	b.n	80230aa <_free_r+0x22>
 80230f4:	d902      	bls.n	80230fc <_free_r+0x74>
 80230f6:	230c      	movs	r3, #12
 80230f8:	602b      	str	r3, [r5, #0]
 80230fa:	e7d6      	b.n	80230aa <_free_r+0x22>
 80230fc:	6820      	ldr	r0, [r4, #0]
 80230fe:	1821      	adds	r1, r4, r0
 8023100:	428b      	cmp	r3, r1
 8023102:	bf04      	itt	eq
 8023104:	6819      	ldreq	r1, [r3, #0]
 8023106:	685b      	ldreq	r3, [r3, #4]
 8023108:	6063      	str	r3, [r4, #4]
 802310a:	bf04      	itt	eq
 802310c:	1809      	addeq	r1, r1, r0
 802310e:	6021      	streq	r1, [r4, #0]
 8023110:	6054      	str	r4, [r2, #4]
 8023112:	e7ca      	b.n	80230aa <_free_r+0x22>
 8023114:	bd38      	pop	{r3, r4, r5, pc}
 8023116:	bf00      	nop
 8023118:	20014a5c 	.word	0x20014a5c

0802311c <__ssputs_r>:
 802311c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023120:	688e      	ldr	r6, [r1, #8]
 8023122:	461f      	mov	r7, r3
 8023124:	42be      	cmp	r6, r7
 8023126:	680b      	ldr	r3, [r1, #0]
 8023128:	4682      	mov	sl, r0
 802312a:	460c      	mov	r4, r1
 802312c:	4690      	mov	r8, r2
 802312e:	d82d      	bhi.n	802318c <__ssputs_r+0x70>
 8023130:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8023134:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8023138:	d026      	beq.n	8023188 <__ssputs_r+0x6c>
 802313a:	6965      	ldr	r5, [r4, #20]
 802313c:	6909      	ldr	r1, [r1, #16]
 802313e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023142:	eba3 0901 	sub.w	r9, r3, r1
 8023146:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 802314a:	1c7b      	adds	r3, r7, #1
 802314c:	444b      	add	r3, r9
 802314e:	106d      	asrs	r5, r5, #1
 8023150:	429d      	cmp	r5, r3
 8023152:	bf38      	it	cc
 8023154:	461d      	movcc	r5, r3
 8023156:	0553      	lsls	r3, r2, #21
 8023158:	d527      	bpl.n	80231aa <__ssputs_r+0x8e>
 802315a:	4629      	mov	r1, r5
 802315c:	f7ff fc14 	bl	8022988 <_malloc_r>
 8023160:	4606      	mov	r6, r0
 8023162:	b360      	cbz	r0, 80231be <__ssputs_r+0xa2>
 8023164:	6921      	ldr	r1, [r4, #16]
 8023166:	464a      	mov	r2, r9
 8023168:	f7ff ff23 	bl	8022fb2 <memcpy>
 802316c:	89a3      	ldrh	r3, [r4, #12]
 802316e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8023172:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8023176:	81a3      	strh	r3, [r4, #12]
 8023178:	6126      	str	r6, [r4, #16]
 802317a:	6165      	str	r5, [r4, #20]
 802317c:	444e      	add	r6, r9
 802317e:	eba5 0509 	sub.w	r5, r5, r9
 8023182:	6026      	str	r6, [r4, #0]
 8023184:	60a5      	str	r5, [r4, #8]
 8023186:	463e      	mov	r6, r7
 8023188:	42be      	cmp	r6, r7
 802318a:	d900      	bls.n	802318e <__ssputs_r+0x72>
 802318c:	463e      	mov	r6, r7
 802318e:	6820      	ldr	r0, [r4, #0]
 8023190:	4632      	mov	r2, r6
 8023192:	4641      	mov	r1, r8
 8023194:	f000 fd28 	bl	8023be8 <memmove>
 8023198:	68a3      	ldr	r3, [r4, #8]
 802319a:	1b9b      	subs	r3, r3, r6
 802319c:	60a3      	str	r3, [r4, #8]
 802319e:	6823      	ldr	r3, [r4, #0]
 80231a0:	4433      	add	r3, r6
 80231a2:	6023      	str	r3, [r4, #0]
 80231a4:	2000      	movs	r0, #0
 80231a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80231aa:	462a      	mov	r2, r5
 80231ac:	f000 fd36 	bl	8023c1c <_realloc_r>
 80231b0:	4606      	mov	r6, r0
 80231b2:	2800      	cmp	r0, #0
 80231b4:	d1e0      	bne.n	8023178 <__ssputs_r+0x5c>
 80231b6:	6921      	ldr	r1, [r4, #16]
 80231b8:	4650      	mov	r0, sl
 80231ba:	f7ff ff65 	bl	8023088 <_free_r>
 80231be:	230c      	movs	r3, #12
 80231c0:	f8ca 3000 	str.w	r3, [sl]
 80231c4:	89a3      	ldrh	r3, [r4, #12]
 80231c6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80231ca:	81a3      	strh	r3, [r4, #12]
 80231cc:	f04f 30ff 	mov.w	r0, #4294967295
 80231d0:	e7e9      	b.n	80231a6 <__ssputs_r+0x8a>
	...

080231d4 <_svfiprintf_r>:
 80231d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80231d8:	4698      	mov	r8, r3
 80231da:	898b      	ldrh	r3, [r1, #12]
 80231dc:	061b      	lsls	r3, r3, #24
 80231de:	b09d      	sub	sp, #116	@ 0x74
 80231e0:	4607      	mov	r7, r0
 80231e2:	460d      	mov	r5, r1
 80231e4:	4614      	mov	r4, r2
 80231e6:	d510      	bpl.n	802320a <_svfiprintf_r+0x36>
 80231e8:	690b      	ldr	r3, [r1, #16]
 80231ea:	b973      	cbnz	r3, 802320a <_svfiprintf_r+0x36>
 80231ec:	2140      	movs	r1, #64	@ 0x40
 80231ee:	f7ff fbcb 	bl	8022988 <_malloc_r>
 80231f2:	6028      	str	r0, [r5, #0]
 80231f4:	6128      	str	r0, [r5, #16]
 80231f6:	b930      	cbnz	r0, 8023206 <_svfiprintf_r+0x32>
 80231f8:	230c      	movs	r3, #12
 80231fa:	603b      	str	r3, [r7, #0]
 80231fc:	f04f 30ff 	mov.w	r0, #4294967295
 8023200:	b01d      	add	sp, #116	@ 0x74
 8023202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023206:	2340      	movs	r3, #64	@ 0x40
 8023208:	616b      	str	r3, [r5, #20]
 802320a:	2300      	movs	r3, #0
 802320c:	9309      	str	r3, [sp, #36]	@ 0x24
 802320e:	2320      	movs	r3, #32
 8023210:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8023214:	f8cd 800c 	str.w	r8, [sp, #12]
 8023218:	2330      	movs	r3, #48	@ 0x30
 802321a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80233b8 <_svfiprintf_r+0x1e4>
 802321e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8023222:	f04f 0901 	mov.w	r9, #1
 8023226:	4623      	mov	r3, r4
 8023228:	469a      	mov	sl, r3
 802322a:	f813 2b01 	ldrb.w	r2, [r3], #1
 802322e:	b10a      	cbz	r2, 8023234 <_svfiprintf_r+0x60>
 8023230:	2a25      	cmp	r2, #37	@ 0x25
 8023232:	d1f9      	bne.n	8023228 <_svfiprintf_r+0x54>
 8023234:	ebba 0b04 	subs.w	fp, sl, r4
 8023238:	d00b      	beq.n	8023252 <_svfiprintf_r+0x7e>
 802323a:	465b      	mov	r3, fp
 802323c:	4622      	mov	r2, r4
 802323e:	4629      	mov	r1, r5
 8023240:	4638      	mov	r0, r7
 8023242:	f7ff ff6b 	bl	802311c <__ssputs_r>
 8023246:	3001      	adds	r0, #1
 8023248:	f000 80a7 	beq.w	802339a <_svfiprintf_r+0x1c6>
 802324c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802324e:	445a      	add	r2, fp
 8023250:	9209      	str	r2, [sp, #36]	@ 0x24
 8023252:	f89a 3000 	ldrb.w	r3, [sl]
 8023256:	2b00      	cmp	r3, #0
 8023258:	f000 809f 	beq.w	802339a <_svfiprintf_r+0x1c6>
 802325c:	2300      	movs	r3, #0
 802325e:	f04f 32ff 	mov.w	r2, #4294967295
 8023262:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023266:	f10a 0a01 	add.w	sl, sl, #1
 802326a:	9304      	str	r3, [sp, #16]
 802326c:	9307      	str	r3, [sp, #28]
 802326e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8023272:	931a      	str	r3, [sp, #104]	@ 0x68
 8023274:	4654      	mov	r4, sl
 8023276:	2205      	movs	r2, #5
 8023278:	f814 1b01 	ldrb.w	r1, [r4], #1
 802327c:	484e      	ldr	r0, [pc, #312]	@ (80233b8 <_svfiprintf_r+0x1e4>)
 802327e:	f7dc ffbf 	bl	8000200 <memchr>
 8023282:	9a04      	ldr	r2, [sp, #16]
 8023284:	b9d8      	cbnz	r0, 80232be <_svfiprintf_r+0xea>
 8023286:	06d0      	lsls	r0, r2, #27
 8023288:	bf44      	itt	mi
 802328a:	2320      	movmi	r3, #32
 802328c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023290:	0711      	lsls	r1, r2, #28
 8023292:	bf44      	itt	mi
 8023294:	232b      	movmi	r3, #43	@ 0x2b
 8023296:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802329a:	f89a 3000 	ldrb.w	r3, [sl]
 802329e:	2b2a      	cmp	r3, #42	@ 0x2a
 80232a0:	d015      	beq.n	80232ce <_svfiprintf_r+0xfa>
 80232a2:	9a07      	ldr	r2, [sp, #28]
 80232a4:	4654      	mov	r4, sl
 80232a6:	2000      	movs	r0, #0
 80232a8:	f04f 0c0a 	mov.w	ip, #10
 80232ac:	4621      	mov	r1, r4
 80232ae:	f811 3b01 	ldrb.w	r3, [r1], #1
 80232b2:	3b30      	subs	r3, #48	@ 0x30
 80232b4:	2b09      	cmp	r3, #9
 80232b6:	d94b      	bls.n	8023350 <_svfiprintf_r+0x17c>
 80232b8:	b1b0      	cbz	r0, 80232e8 <_svfiprintf_r+0x114>
 80232ba:	9207      	str	r2, [sp, #28]
 80232bc:	e014      	b.n	80232e8 <_svfiprintf_r+0x114>
 80232be:	eba0 0308 	sub.w	r3, r0, r8
 80232c2:	fa09 f303 	lsl.w	r3, r9, r3
 80232c6:	4313      	orrs	r3, r2
 80232c8:	9304      	str	r3, [sp, #16]
 80232ca:	46a2      	mov	sl, r4
 80232cc:	e7d2      	b.n	8023274 <_svfiprintf_r+0xa0>
 80232ce:	9b03      	ldr	r3, [sp, #12]
 80232d0:	1d19      	adds	r1, r3, #4
 80232d2:	681b      	ldr	r3, [r3, #0]
 80232d4:	9103      	str	r1, [sp, #12]
 80232d6:	2b00      	cmp	r3, #0
 80232d8:	bfbb      	ittet	lt
 80232da:	425b      	neglt	r3, r3
 80232dc:	f042 0202 	orrlt.w	r2, r2, #2
 80232e0:	9307      	strge	r3, [sp, #28]
 80232e2:	9307      	strlt	r3, [sp, #28]
 80232e4:	bfb8      	it	lt
 80232e6:	9204      	strlt	r2, [sp, #16]
 80232e8:	7823      	ldrb	r3, [r4, #0]
 80232ea:	2b2e      	cmp	r3, #46	@ 0x2e
 80232ec:	d10a      	bne.n	8023304 <_svfiprintf_r+0x130>
 80232ee:	7863      	ldrb	r3, [r4, #1]
 80232f0:	2b2a      	cmp	r3, #42	@ 0x2a
 80232f2:	d132      	bne.n	802335a <_svfiprintf_r+0x186>
 80232f4:	9b03      	ldr	r3, [sp, #12]
 80232f6:	1d1a      	adds	r2, r3, #4
 80232f8:	681b      	ldr	r3, [r3, #0]
 80232fa:	9203      	str	r2, [sp, #12]
 80232fc:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8023300:	3402      	adds	r4, #2
 8023302:	9305      	str	r3, [sp, #20]
 8023304:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80233c8 <_svfiprintf_r+0x1f4>
 8023308:	7821      	ldrb	r1, [r4, #0]
 802330a:	2203      	movs	r2, #3
 802330c:	4650      	mov	r0, sl
 802330e:	f7dc ff77 	bl	8000200 <memchr>
 8023312:	b138      	cbz	r0, 8023324 <_svfiprintf_r+0x150>
 8023314:	9b04      	ldr	r3, [sp, #16]
 8023316:	eba0 000a 	sub.w	r0, r0, sl
 802331a:	2240      	movs	r2, #64	@ 0x40
 802331c:	4082      	lsls	r2, r0
 802331e:	4313      	orrs	r3, r2
 8023320:	3401      	adds	r4, #1
 8023322:	9304      	str	r3, [sp, #16]
 8023324:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023328:	4824      	ldr	r0, [pc, #144]	@ (80233bc <_svfiprintf_r+0x1e8>)
 802332a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802332e:	2206      	movs	r2, #6
 8023330:	f7dc ff66 	bl	8000200 <memchr>
 8023334:	2800      	cmp	r0, #0
 8023336:	d036      	beq.n	80233a6 <_svfiprintf_r+0x1d2>
 8023338:	4b21      	ldr	r3, [pc, #132]	@ (80233c0 <_svfiprintf_r+0x1ec>)
 802333a:	bb1b      	cbnz	r3, 8023384 <_svfiprintf_r+0x1b0>
 802333c:	9b03      	ldr	r3, [sp, #12]
 802333e:	3307      	adds	r3, #7
 8023340:	f023 0307 	bic.w	r3, r3, #7
 8023344:	3308      	adds	r3, #8
 8023346:	9303      	str	r3, [sp, #12]
 8023348:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802334a:	4433      	add	r3, r6
 802334c:	9309      	str	r3, [sp, #36]	@ 0x24
 802334e:	e76a      	b.n	8023226 <_svfiprintf_r+0x52>
 8023350:	fb0c 3202 	mla	r2, ip, r2, r3
 8023354:	460c      	mov	r4, r1
 8023356:	2001      	movs	r0, #1
 8023358:	e7a8      	b.n	80232ac <_svfiprintf_r+0xd8>
 802335a:	2300      	movs	r3, #0
 802335c:	3401      	adds	r4, #1
 802335e:	9305      	str	r3, [sp, #20]
 8023360:	4619      	mov	r1, r3
 8023362:	f04f 0c0a 	mov.w	ip, #10
 8023366:	4620      	mov	r0, r4
 8023368:	f810 2b01 	ldrb.w	r2, [r0], #1
 802336c:	3a30      	subs	r2, #48	@ 0x30
 802336e:	2a09      	cmp	r2, #9
 8023370:	d903      	bls.n	802337a <_svfiprintf_r+0x1a6>
 8023372:	2b00      	cmp	r3, #0
 8023374:	d0c6      	beq.n	8023304 <_svfiprintf_r+0x130>
 8023376:	9105      	str	r1, [sp, #20]
 8023378:	e7c4      	b.n	8023304 <_svfiprintf_r+0x130>
 802337a:	fb0c 2101 	mla	r1, ip, r1, r2
 802337e:	4604      	mov	r4, r0
 8023380:	2301      	movs	r3, #1
 8023382:	e7f0      	b.n	8023366 <_svfiprintf_r+0x192>
 8023384:	ab03      	add	r3, sp, #12
 8023386:	9300      	str	r3, [sp, #0]
 8023388:	462a      	mov	r2, r5
 802338a:	4b0e      	ldr	r3, [pc, #56]	@ (80233c4 <_svfiprintf_r+0x1f0>)
 802338c:	a904      	add	r1, sp, #16
 802338e:	4638      	mov	r0, r7
 8023390:	f3af 8000 	nop.w
 8023394:	1c42      	adds	r2, r0, #1
 8023396:	4606      	mov	r6, r0
 8023398:	d1d6      	bne.n	8023348 <_svfiprintf_r+0x174>
 802339a:	89ab      	ldrh	r3, [r5, #12]
 802339c:	065b      	lsls	r3, r3, #25
 802339e:	f53f af2d 	bmi.w	80231fc <_svfiprintf_r+0x28>
 80233a2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80233a4:	e72c      	b.n	8023200 <_svfiprintf_r+0x2c>
 80233a6:	ab03      	add	r3, sp, #12
 80233a8:	9300      	str	r3, [sp, #0]
 80233aa:	462a      	mov	r2, r5
 80233ac:	4b05      	ldr	r3, [pc, #20]	@ (80233c4 <_svfiprintf_r+0x1f0>)
 80233ae:	a904      	add	r1, sp, #16
 80233b0:	4638      	mov	r0, r7
 80233b2:	f000 f9bb 	bl	802372c <_printf_i>
 80233b6:	e7ed      	b.n	8023394 <_svfiprintf_r+0x1c0>
 80233b8:	08024892 	.word	0x08024892
 80233bc:	0802489c 	.word	0x0802489c
 80233c0:	00000000 	.word	0x00000000
 80233c4:	0802311d 	.word	0x0802311d
 80233c8:	08024898 	.word	0x08024898

080233cc <__sfputc_r>:
 80233cc:	6893      	ldr	r3, [r2, #8]
 80233ce:	3b01      	subs	r3, #1
 80233d0:	2b00      	cmp	r3, #0
 80233d2:	b410      	push	{r4}
 80233d4:	6093      	str	r3, [r2, #8]
 80233d6:	da08      	bge.n	80233ea <__sfputc_r+0x1e>
 80233d8:	6994      	ldr	r4, [r2, #24]
 80233da:	42a3      	cmp	r3, r4
 80233dc:	db01      	blt.n	80233e2 <__sfputc_r+0x16>
 80233de:	290a      	cmp	r1, #10
 80233e0:	d103      	bne.n	80233ea <__sfputc_r+0x1e>
 80233e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80233e6:	f000 bb6b 	b.w	8023ac0 <__swbuf_r>
 80233ea:	6813      	ldr	r3, [r2, #0]
 80233ec:	1c58      	adds	r0, r3, #1
 80233ee:	6010      	str	r0, [r2, #0]
 80233f0:	7019      	strb	r1, [r3, #0]
 80233f2:	4608      	mov	r0, r1
 80233f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80233f8:	4770      	bx	lr

080233fa <__sfputs_r>:
 80233fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80233fc:	4606      	mov	r6, r0
 80233fe:	460f      	mov	r7, r1
 8023400:	4614      	mov	r4, r2
 8023402:	18d5      	adds	r5, r2, r3
 8023404:	42ac      	cmp	r4, r5
 8023406:	d101      	bne.n	802340c <__sfputs_r+0x12>
 8023408:	2000      	movs	r0, #0
 802340a:	e007      	b.n	802341c <__sfputs_r+0x22>
 802340c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023410:	463a      	mov	r2, r7
 8023412:	4630      	mov	r0, r6
 8023414:	f7ff ffda 	bl	80233cc <__sfputc_r>
 8023418:	1c43      	adds	r3, r0, #1
 802341a:	d1f3      	bne.n	8023404 <__sfputs_r+0xa>
 802341c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08023420 <_vfiprintf_r>:
 8023420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023424:	460d      	mov	r5, r1
 8023426:	b09d      	sub	sp, #116	@ 0x74
 8023428:	4614      	mov	r4, r2
 802342a:	4698      	mov	r8, r3
 802342c:	4606      	mov	r6, r0
 802342e:	b118      	cbz	r0, 8023438 <_vfiprintf_r+0x18>
 8023430:	6a03      	ldr	r3, [r0, #32]
 8023432:	b90b      	cbnz	r3, 8023438 <_vfiprintf_r+0x18>
 8023434:	f7ff fbce 	bl	8022bd4 <__sinit>
 8023438:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802343a:	07d9      	lsls	r1, r3, #31
 802343c:	d405      	bmi.n	802344a <_vfiprintf_r+0x2a>
 802343e:	89ab      	ldrh	r3, [r5, #12]
 8023440:	059a      	lsls	r2, r3, #22
 8023442:	d402      	bmi.n	802344a <_vfiprintf_r+0x2a>
 8023444:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023446:	f7ff fdb2 	bl	8022fae <__retarget_lock_acquire_recursive>
 802344a:	89ab      	ldrh	r3, [r5, #12]
 802344c:	071b      	lsls	r3, r3, #28
 802344e:	d501      	bpl.n	8023454 <_vfiprintf_r+0x34>
 8023450:	692b      	ldr	r3, [r5, #16]
 8023452:	b99b      	cbnz	r3, 802347c <_vfiprintf_r+0x5c>
 8023454:	4629      	mov	r1, r5
 8023456:	4630      	mov	r0, r6
 8023458:	f000 fb70 	bl	8023b3c <__swsetup_r>
 802345c:	b170      	cbz	r0, 802347c <_vfiprintf_r+0x5c>
 802345e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8023460:	07dc      	lsls	r4, r3, #31
 8023462:	d504      	bpl.n	802346e <_vfiprintf_r+0x4e>
 8023464:	f04f 30ff 	mov.w	r0, #4294967295
 8023468:	b01d      	add	sp, #116	@ 0x74
 802346a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802346e:	89ab      	ldrh	r3, [r5, #12]
 8023470:	0598      	lsls	r0, r3, #22
 8023472:	d4f7      	bmi.n	8023464 <_vfiprintf_r+0x44>
 8023474:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023476:	f7ff fd9b 	bl	8022fb0 <__retarget_lock_release_recursive>
 802347a:	e7f3      	b.n	8023464 <_vfiprintf_r+0x44>
 802347c:	2300      	movs	r3, #0
 802347e:	9309      	str	r3, [sp, #36]	@ 0x24
 8023480:	2320      	movs	r3, #32
 8023482:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8023486:	f8cd 800c 	str.w	r8, [sp, #12]
 802348a:	2330      	movs	r3, #48	@ 0x30
 802348c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802363c <_vfiprintf_r+0x21c>
 8023490:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8023494:	f04f 0901 	mov.w	r9, #1
 8023498:	4623      	mov	r3, r4
 802349a:	469a      	mov	sl, r3
 802349c:	f813 2b01 	ldrb.w	r2, [r3], #1
 80234a0:	b10a      	cbz	r2, 80234a6 <_vfiprintf_r+0x86>
 80234a2:	2a25      	cmp	r2, #37	@ 0x25
 80234a4:	d1f9      	bne.n	802349a <_vfiprintf_r+0x7a>
 80234a6:	ebba 0b04 	subs.w	fp, sl, r4
 80234aa:	d00b      	beq.n	80234c4 <_vfiprintf_r+0xa4>
 80234ac:	465b      	mov	r3, fp
 80234ae:	4622      	mov	r2, r4
 80234b0:	4629      	mov	r1, r5
 80234b2:	4630      	mov	r0, r6
 80234b4:	f7ff ffa1 	bl	80233fa <__sfputs_r>
 80234b8:	3001      	adds	r0, #1
 80234ba:	f000 80a7 	beq.w	802360c <_vfiprintf_r+0x1ec>
 80234be:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80234c0:	445a      	add	r2, fp
 80234c2:	9209      	str	r2, [sp, #36]	@ 0x24
 80234c4:	f89a 3000 	ldrb.w	r3, [sl]
 80234c8:	2b00      	cmp	r3, #0
 80234ca:	f000 809f 	beq.w	802360c <_vfiprintf_r+0x1ec>
 80234ce:	2300      	movs	r3, #0
 80234d0:	f04f 32ff 	mov.w	r2, #4294967295
 80234d4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80234d8:	f10a 0a01 	add.w	sl, sl, #1
 80234dc:	9304      	str	r3, [sp, #16]
 80234de:	9307      	str	r3, [sp, #28]
 80234e0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80234e4:	931a      	str	r3, [sp, #104]	@ 0x68
 80234e6:	4654      	mov	r4, sl
 80234e8:	2205      	movs	r2, #5
 80234ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 80234ee:	4853      	ldr	r0, [pc, #332]	@ (802363c <_vfiprintf_r+0x21c>)
 80234f0:	f7dc fe86 	bl	8000200 <memchr>
 80234f4:	9a04      	ldr	r2, [sp, #16]
 80234f6:	b9d8      	cbnz	r0, 8023530 <_vfiprintf_r+0x110>
 80234f8:	06d1      	lsls	r1, r2, #27
 80234fa:	bf44      	itt	mi
 80234fc:	2320      	movmi	r3, #32
 80234fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023502:	0713      	lsls	r3, r2, #28
 8023504:	bf44      	itt	mi
 8023506:	232b      	movmi	r3, #43	@ 0x2b
 8023508:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802350c:	f89a 3000 	ldrb.w	r3, [sl]
 8023510:	2b2a      	cmp	r3, #42	@ 0x2a
 8023512:	d015      	beq.n	8023540 <_vfiprintf_r+0x120>
 8023514:	9a07      	ldr	r2, [sp, #28]
 8023516:	4654      	mov	r4, sl
 8023518:	2000      	movs	r0, #0
 802351a:	f04f 0c0a 	mov.w	ip, #10
 802351e:	4621      	mov	r1, r4
 8023520:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023524:	3b30      	subs	r3, #48	@ 0x30
 8023526:	2b09      	cmp	r3, #9
 8023528:	d94b      	bls.n	80235c2 <_vfiprintf_r+0x1a2>
 802352a:	b1b0      	cbz	r0, 802355a <_vfiprintf_r+0x13a>
 802352c:	9207      	str	r2, [sp, #28]
 802352e:	e014      	b.n	802355a <_vfiprintf_r+0x13a>
 8023530:	eba0 0308 	sub.w	r3, r0, r8
 8023534:	fa09 f303 	lsl.w	r3, r9, r3
 8023538:	4313      	orrs	r3, r2
 802353a:	9304      	str	r3, [sp, #16]
 802353c:	46a2      	mov	sl, r4
 802353e:	e7d2      	b.n	80234e6 <_vfiprintf_r+0xc6>
 8023540:	9b03      	ldr	r3, [sp, #12]
 8023542:	1d19      	adds	r1, r3, #4
 8023544:	681b      	ldr	r3, [r3, #0]
 8023546:	9103      	str	r1, [sp, #12]
 8023548:	2b00      	cmp	r3, #0
 802354a:	bfbb      	ittet	lt
 802354c:	425b      	neglt	r3, r3
 802354e:	f042 0202 	orrlt.w	r2, r2, #2
 8023552:	9307      	strge	r3, [sp, #28]
 8023554:	9307      	strlt	r3, [sp, #28]
 8023556:	bfb8      	it	lt
 8023558:	9204      	strlt	r2, [sp, #16]
 802355a:	7823      	ldrb	r3, [r4, #0]
 802355c:	2b2e      	cmp	r3, #46	@ 0x2e
 802355e:	d10a      	bne.n	8023576 <_vfiprintf_r+0x156>
 8023560:	7863      	ldrb	r3, [r4, #1]
 8023562:	2b2a      	cmp	r3, #42	@ 0x2a
 8023564:	d132      	bne.n	80235cc <_vfiprintf_r+0x1ac>
 8023566:	9b03      	ldr	r3, [sp, #12]
 8023568:	1d1a      	adds	r2, r3, #4
 802356a:	681b      	ldr	r3, [r3, #0]
 802356c:	9203      	str	r2, [sp, #12]
 802356e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8023572:	3402      	adds	r4, #2
 8023574:	9305      	str	r3, [sp, #20]
 8023576:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802364c <_vfiprintf_r+0x22c>
 802357a:	7821      	ldrb	r1, [r4, #0]
 802357c:	2203      	movs	r2, #3
 802357e:	4650      	mov	r0, sl
 8023580:	f7dc fe3e 	bl	8000200 <memchr>
 8023584:	b138      	cbz	r0, 8023596 <_vfiprintf_r+0x176>
 8023586:	9b04      	ldr	r3, [sp, #16]
 8023588:	eba0 000a 	sub.w	r0, r0, sl
 802358c:	2240      	movs	r2, #64	@ 0x40
 802358e:	4082      	lsls	r2, r0
 8023590:	4313      	orrs	r3, r2
 8023592:	3401      	adds	r4, #1
 8023594:	9304      	str	r3, [sp, #16]
 8023596:	f814 1b01 	ldrb.w	r1, [r4], #1
 802359a:	4829      	ldr	r0, [pc, #164]	@ (8023640 <_vfiprintf_r+0x220>)
 802359c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80235a0:	2206      	movs	r2, #6
 80235a2:	f7dc fe2d 	bl	8000200 <memchr>
 80235a6:	2800      	cmp	r0, #0
 80235a8:	d03f      	beq.n	802362a <_vfiprintf_r+0x20a>
 80235aa:	4b26      	ldr	r3, [pc, #152]	@ (8023644 <_vfiprintf_r+0x224>)
 80235ac:	bb1b      	cbnz	r3, 80235f6 <_vfiprintf_r+0x1d6>
 80235ae:	9b03      	ldr	r3, [sp, #12]
 80235b0:	3307      	adds	r3, #7
 80235b2:	f023 0307 	bic.w	r3, r3, #7
 80235b6:	3308      	adds	r3, #8
 80235b8:	9303      	str	r3, [sp, #12]
 80235ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80235bc:	443b      	add	r3, r7
 80235be:	9309      	str	r3, [sp, #36]	@ 0x24
 80235c0:	e76a      	b.n	8023498 <_vfiprintf_r+0x78>
 80235c2:	fb0c 3202 	mla	r2, ip, r2, r3
 80235c6:	460c      	mov	r4, r1
 80235c8:	2001      	movs	r0, #1
 80235ca:	e7a8      	b.n	802351e <_vfiprintf_r+0xfe>
 80235cc:	2300      	movs	r3, #0
 80235ce:	3401      	adds	r4, #1
 80235d0:	9305      	str	r3, [sp, #20]
 80235d2:	4619      	mov	r1, r3
 80235d4:	f04f 0c0a 	mov.w	ip, #10
 80235d8:	4620      	mov	r0, r4
 80235da:	f810 2b01 	ldrb.w	r2, [r0], #1
 80235de:	3a30      	subs	r2, #48	@ 0x30
 80235e0:	2a09      	cmp	r2, #9
 80235e2:	d903      	bls.n	80235ec <_vfiprintf_r+0x1cc>
 80235e4:	2b00      	cmp	r3, #0
 80235e6:	d0c6      	beq.n	8023576 <_vfiprintf_r+0x156>
 80235e8:	9105      	str	r1, [sp, #20]
 80235ea:	e7c4      	b.n	8023576 <_vfiprintf_r+0x156>
 80235ec:	fb0c 2101 	mla	r1, ip, r1, r2
 80235f0:	4604      	mov	r4, r0
 80235f2:	2301      	movs	r3, #1
 80235f4:	e7f0      	b.n	80235d8 <_vfiprintf_r+0x1b8>
 80235f6:	ab03      	add	r3, sp, #12
 80235f8:	9300      	str	r3, [sp, #0]
 80235fa:	462a      	mov	r2, r5
 80235fc:	4b12      	ldr	r3, [pc, #72]	@ (8023648 <_vfiprintf_r+0x228>)
 80235fe:	a904      	add	r1, sp, #16
 8023600:	4630      	mov	r0, r6
 8023602:	f3af 8000 	nop.w
 8023606:	4607      	mov	r7, r0
 8023608:	1c78      	adds	r0, r7, #1
 802360a:	d1d6      	bne.n	80235ba <_vfiprintf_r+0x19a>
 802360c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802360e:	07d9      	lsls	r1, r3, #31
 8023610:	d405      	bmi.n	802361e <_vfiprintf_r+0x1fe>
 8023612:	89ab      	ldrh	r3, [r5, #12]
 8023614:	059a      	lsls	r2, r3, #22
 8023616:	d402      	bmi.n	802361e <_vfiprintf_r+0x1fe>
 8023618:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802361a:	f7ff fcc9 	bl	8022fb0 <__retarget_lock_release_recursive>
 802361e:	89ab      	ldrh	r3, [r5, #12]
 8023620:	065b      	lsls	r3, r3, #25
 8023622:	f53f af1f 	bmi.w	8023464 <_vfiprintf_r+0x44>
 8023626:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8023628:	e71e      	b.n	8023468 <_vfiprintf_r+0x48>
 802362a:	ab03      	add	r3, sp, #12
 802362c:	9300      	str	r3, [sp, #0]
 802362e:	462a      	mov	r2, r5
 8023630:	4b05      	ldr	r3, [pc, #20]	@ (8023648 <_vfiprintf_r+0x228>)
 8023632:	a904      	add	r1, sp, #16
 8023634:	4630      	mov	r0, r6
 8023636:	f000 f879 	bl	802372c <_printf_i>
 802363a:	e7e4      	b.n	8023606 <_vfiprintf_r+0x1e6>
 802363c:	08024892 	.word	0x08024892
 8023640:	0802489c 	.word	0x0802489c
 8023644:	00000000 	.word	0x00000000
 8023648:	080233fb 	.word	0x080233fb
 802364c:	08024898 	.word	0x08024898

08023650 <_printf_common>:
 8023650:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023654:	4616      	mov	r6, r2
 8023656:	4698      	mov	r8, r3
 8023658:	688a      	ldr	r2, [r1, #8]
 802365a:	690b      	ldr	r3, [r1, #16]
 802365c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8023660:	4293      	cmp	r3, r2
 8023662:	bfb8      	it	lt
 8023664:	4613      	movlt	r3, r2
 8023666:	6033      	str	r3, [r6, #0]
 8023668:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802366c:	4607      	mov	r7, r0
 802366e:	460c      	mov	r4, r1
 8023670:	b10a      	cbz	r2, 8023676 <_printf_common+0x26>
 8023672:	3301      	adds	r3, #1
 8023674:	6033      	str	r3, [r6, #0]
 8023676:	6823      	ldr	r3, [r4, #0]
 8023678:	0699      	lsls	r1, r3, #26
 802367a:	bf42      	ittt	mi
 802367c:	6833      	ldrmi	r3, [r6, #0]
 802367e:	3302      	addmi	r3, #2
 8023680:	6033      	strmi	r3, [r6, #0]
 8023682:	6825      	ldr	r5, [r4, #0]
 8023684:	f015 0506 	ands.w	r5, r5, #6
 8023688:	d106      	bne.n	8023698 <_printf_common+0x48>
 802368a:	f104 0a19 	add.w	sl, r4, #25
 802368e:	68e3      	ldr	r3, [r4, #12]
 8023690:	6832      	ldr	r2, [r6, #0]
 8023692:	1a9b      	subs	r3, r3, r2
 8023694:	42ab      	cmp	r3, r5
 8023696:	dc26      	bgt.n	80236e6 <_printf_common+0x96>
 8023698:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802369c:	6822      	ldr	r2, [r4, #0]
 802369e:	3b00      	subs	r3, #0
 80236a0:	bf18      	it	ne
 80236a2:	2301      	movne	r3, #1
 80236a4:	0692      	lsls	r2, r2, #26
 80236a6:	d42b      	bmi.n	8023700 <_printf_common+0xb0>
 80236a8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80236ac:	4641      	mov	r1, r8
 80236ae:	4638      	mov	r0, r7
 80236b0:	47c8      	blx	r9
 80236b2:	3001      	adds	r0, #1
 80236b4:	d01e      	beq.n	80236f4 <_printf_common+0xa4>
 80236b6:	6823      	ldr	r3, [r4, #0]
 80236b8:	6922      	ldr	r2, [r4, #16]
 80236ba:	f003 0306 	and.w	r3, r3, #6
 80236be:	2b04      	cmp	r3, #4
 80236c0:	bf02      	ittt	eq
 80236c2:	68e5      	ldreq	r5, [r4, #12]
 80236c4:	6833      	ldreq	r3, [r6, #0]
 80236c6:	1aed      	subeq	r5, r5, r3
 80236c8:	68a3      	ldr	r3, [r4, #8]
 80236ca:	bf0c      	ite	eq
 80236cc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80236d0:	2500      	movne	r5, #0
 80236d2:	4293      	cmp	r3, r2
 80236d4:	bfc4      	itt	gt
 80236d6:	1a9b      	subgt	r3, r3, r2
 80236d8:	18ed      	addgt	r5, r5, r3
 80236da:	2600      	movs	r6, #0
 80236dc:	341a      	adds	r4, #26
 80236de:	42b5      	cmp	r5, r6
 80236e0:	d11a      	bne.n	8023718 <_printf_common+0xc8>
 80236e2:	2000      	movs	r0, #0
 80236e4:	e008      	b.n	80236f8 <_printf_common+0xa8>
 80236e6:	2301      	movs	r3, #1
 80236e8:	4652      	mov	r2, sl
 80236ea:	4641      	mov	r1, r8
 80236ec:	4638      	mov	r0, r7
 80236ee:	47c8      	blx	r9
 80236f0:	3001      	adds	r0, #1
 80236f2:	d103      	bne.n	80236fc <_printf_common+0xac>
 80236f4:	f04f 30ff 	mov.w	r0, #4294967295
 80236f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80236fc:	3501      	adds	r5, #1
 80236fe:	e7c6      	b.n	802368e <_printf_common+0x3e>
 8023700:	18e1      	adds	r1, r4, r3
 8023702:	1c5a      	adds	r2, r3, #1
 8023704:	2030      	movs	r0, #48	@ 0x30
 8023706:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802370a:	4422      	add	r2, r4
 802370c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8023710:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8023714:	3302      	adds	r3, #2
 8023716:	e7c7      	b.n	80236a8 <_printf_common+0x58>
 8023718:	2301      	movs	r3, #1
 802371a:	4622      	mov	r2, r4
 802371c:	4641      	mov	r1, r8
 802371e:	4638      	mov	r0, r7
 8023720:	47c8      	blx	r9
 8023722:	3001      	adds	r0, #1
 8023724:	d0e6      	beq.n	80236f4 <_printf_common+0xa4>
 8023726:	3601      	adds	r6, #1
 8023728:	e7d9      	b.n	80236de <_printf_common+0x8e>
	...

0802372c <_printf_i>:
 802372c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023730:	7e0f      	ldrb	r7, [r1, #24]
 8023732:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8023734:	2f78      	cmp	r7, #120	@ 0x78
 8023736:	4691      	mov	r9, r2
 8023738:	4680      	mov	r8, r0
 802373a:	460c      	mov	r4, r1
 802373c:	469a      	mov	sl, r3
 802373e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8023742:	d807      	bhi.n	8023754 <_printf_i+0x28>
 8023744:	2f62      	cmp	r7, #98	@ 0x62
 8023746:	d80a      	bhi.n	802375e <_printf_i+0x32>
 8023748:	2f00      	cmp	r7, #0
 802374a:	f000 80d1 	beq.w	80238f0 <_printf_i+0x1c4>
 802374e:	2f58      	cmp	r7, #88	@ 0x58
 8023750:	f000 80b8 	beq.w	80238c4 <_printf_i+0x198>
 8023754:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023758:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802375c:	e03a      	b.n	80237d4 <_printf_i+0xa8>
 802375e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8023762:	2b15      	cmp	r3, #21
 8023764:	d8f6      	bhi.n	8023754 <_printf_i+0x28>
 8023766:	a101      	add	r1, pc, #4	@ (adr r1, 802376c <_printf_i+0x40>)
 8023768:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802376c:	080237c5 	.word	0x080237c5
 8023770:	080237d9 	.word	0x080237d9
 8023774:	08023755 	.word	0x08023755
 8023778:	08023755 	.word	0x08023755
 802377c:	08023755 	.word	0x08023755
 8023780:	08023755 	.word	0x08023755
 8023784:	080237d9 	.word	0x080237d9
 8023788:	08023755 	.word	0x08023755
 802378c:	08023755 	.word	0x08023755
 8023790:	08023755 	.word	0x08023755
 8023794:	08023755 	.word	0x08023755
 8023798:	080238d7 	.word	0x080238d7
 802379c:	08023803 	.word	0x08023803
 80237a0:	08023891 	.word	0x08023891
 80237a4:	08023755 	.word	0x08023755
 80237a8:	08023755 	.word	0x08023755
 80237ac:	080238f9 	.word	0x080238f9
 80237b0:	08023755 	.word	0x08023755
 80237b4:	08023803 	.word	0x08023803
 80237b8:	08023755 	.word	0x08023755
 80237bc:	08023755 	.word	0x08023755
 80237c0:	08023899 	.word	0x08023899
 80237c4:	6833      	ldr	r3, [r6, #0]
 80237c6:	1d1a      	adds	r2, r3, #4
 80237c8:	681b      	ldr	r3, [r3, #0]
 80237ca:	6032      	str	r2, [r6, #0]
 80237cc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80237d0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80237d4:	2301      	movs	r3, #1
 80237d6:	e09c      	b.n	8023912 <_printf_i+0x1e6>
 80237d8:	6833      	ldr	r3, [r6, #0]
 80237da:	6820      	ldr	r0, [r4, #0]
 80237dc:	1d19      	adds	r1, r3, #4
 80237de:	6031      	str	r1, [r6, #0]
 80237e0:	0606      	lsls	r6, r0, #24
 80237e2:	d501      	bpl.n	80237e8 <_printf_i+0xbc>
 80237e4:	681d      	ldr	r5, [r3, #0]
 80237e6:	e003      	b.n	80237f0 <_printf_i+0xc4>
 80237e8:	0645      	lsls	r5, r0, #25
 80237ea:	d5fb      	bpl.n	80237e4 <_printf_i+0xb8>
 80237ec:	f9b3 5000 	ldrsh.w	r5, [r3]
 80237f0:	2d00      	cmp	r5, #0
 80237f2:	da03      	bge.n	80237fc <_printf_i+0xd0>
 80237f4:	232d      	movs	r3, #45	@ 0x2d
 80237f6:	426d      	negs	r5, r5
 80237f8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80237fc:	4858      	ldr	r0, [pc, #352]	@ (8023960 <_printf_i+0x234>)
 80237fe:	230a      	movs	r3, #10
 8023800:	e011      	b.n	8023826 <_printf_i+0xfa>
 8023802:	6821      	ldr	r1, [r4, #0]
 8023804:	6833      	ldr	r3, [r6, #0]
 8023806:	0608      	lsls	r0, r1, #24
 8023808:	f853 5b04 	ldr.w	r5, [r3], #4
 802380c:	d402      	bmi.n	8023814 <_printf_i+0xe8>
 802380e:	0649      	lsls	r1, r1, #25
 8023810:	bf48      	it	mi
 8023812:	b2ad      	uxthmi	r5, r5
 8023814:	2f6f      	cmp	r7, #111	@ 0x6f
 8023816:	4852      	ldr	r0, [pc, #328]	@ (8023960 <_printf_i+0x234>)
 8023818:	6033      	str	r3, [r6, #0]
 802381a:	bf14      	ite	ne
 802381c:	230a      	movne	r3, #10
 802381e:	2308      	moveq	r3, #8
 8023820:	2100      	movs	r1, #0
 8023822:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8023826:	6866      	ldr	r6, [r4, #4]
 8023828:	60a6      	str	r6, [r4, #8]
 802382a:	2e00      	cmp	r6, #0
 802382c:	db05      	blt.n	802383a <_printf_i+0x10e>
 802382e:	6821      	ldr	r1, [r4, #0]
 8023830:	432e      	orrs	r6, r5
 8023832:	f021 0104 	bic.w	r1, r1, #4
 8023836:	6021      	str	r1, [r4, #0]
 8023838:	d04b      	beq.n	80238d2 <_printf_i+0x1a6>
 802383a:	4616      	mov	r6, r2
 802383c:	fbb5 f1f3 	udiv	r1, r5, r3
 8023840:	fb03 5711 	mls	r7, r3, r1, r5
 8023844:	5dc7      	ldrb	r7, [r0, r7]
 8023846:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802384a:	462f      	mov	r7, r5
 802384c:	42bb      	cmp	r3, r7
 802384e:	460d      	mov	r5, r1
 8023850:	d9f4      	bls.n	802383c <_printf_i+0x110>
 8023852:	2b08      	cmp	r3, #8
 8023854:	d10b      	bne.n	802386e <_printf_i+0x142>
 8023856:	6823      	ldr	r3, [r4, #0]
 8023858:	07df      	lsls	r7, r3, #31
 802385a:	d508      	bpl.n	802386e <_printf_i+0x142>
 802385c:	6923      	ldr	r3, [r4, #16]
 802385e:	6861      	ldr	r1, [r4, #4]
 8023860:	4299      	cmp	r1, r3
 8023862:	bfde      	ittt	le
 8023864:	2330      	movle	r3, #48	@ 0x30
 8023866:	f806 3c01 	strble.w	r3, [r6, #-1]
 802386a:	f106 36ff 	addle.w	r6, r6, #4294967295
 802386e:	1b92      	subs	r2, r2, r6
 8023870:	6122      	str	r2, [r4, #16]
 8023872:	f8cd a000 	str.w	sl, [sp]
 8023876:	464b      	mov	r3, r9
 8023878:	aa03      	add	r2, sp, #12
 802387a:	4621      	mov	r1, r4
 802387c:	4640      	mov	r0, r8
 802387e:	f7ff fee7 	bl	8023650 <_printf_common>
 8023882:	3001      	adds	r0, #1
 8023884:	d14a      	bne.n	802391c <_printf_i+0x1f0>
 8023886:	f04f 30ff 	mov.w	r0, #4294967295
 802388a:	b004      	add	sp, #16
 802388c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023890:	6823      	ldr	r3, [r4, #0]
 8023892:	f043 0320 	orr.w	r3, r3, #32
 8023896:	6023      	str	r3, [r4, #0]
 8023898:	4832      	ldr	r0, [pc, #200]	@ (8023964 <_printf_i+0x238>)
 802389a:	2778      	movs	r7, #120	@ 0x78
 802389c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80238a0:	6823      	ldr	r3, [r4, #0]
 80238a2:	6831      	ldr	r1, [r6, #0]
 80238a4:	061f      	lsls	r7, r3, #24
 80238a6:	f851 5b04 	ldr.w	r5, [r1], #4
 80238aa:	d402      	bmi.n	80238b2 <_printf_i+0x186>
 80238ac:	065f      	lsls	r7, r3, #25
 80238ae:	bf48      	it	mi
 80238b0:	b2ad      	uxthmi	r5, r5
 80238b2:	6031      	str	r1, [r6, #0]
 80238b4:	07d9      	lsls	r1, r3, #31
 80238b6:	bf44      	itt	mi
 80238b8:	f043 0320 	orrmi.w	r3, r3, #32
 80238bc:	6023      	strmi	r3, [r4, #0]
 80238be:	b11d      	cbz	r5, 80238c8 <_printf_i+0x19c>
 80238c0:	2310      	movs	r3, #16
 80238c2:	e7ad      	b.n	8023820 <_printf_i+0xf4>
 80238c4:	4826      	ldr	r0, [pc, #152]	@ (8023960 <_printf_i+0x234>)
 80238c6:	e7e9      	b.n	802389c <_printf_i+0x170>
 80238c8:	6823      	ldr	r3, [r4, #0]
 80238ca:	f023 0320 	bic.w	r3, r3, #32
 80238ce:	6023      	str	r3, [r4, #0]
 80238d0:	e7f6      	b.n	80238c0 <_printf_i+0x194>
 80238d2:	4616      	mov	r6, r2
 80238d4:	e7bd      	b.n	8023852 <_printf_i+0x126>
 80238d6:	6833      	ldr	r3, [r6, #0]
 80238d8:	6825      	ldr	r5, [r4, #0]
 80238da:	6961      	ldr	r1, [r4, #20]
 80238dc:	1d18      	adds	r0, r3, #4
 80238de:	6030      	str	r0, [r6, #0]
 80238e0:	062e      	lsls	r6, r5, #24
 80238e2:	681b      	ldr	r3, [r3, #0]
 80238e4:	d501      	bpl.n	80238ea <_printf_i+0x1be>
 80238e6:	6019      	str	r1, [r3, #0]
 80238e8:	e002      	b.n	80238f0 <_printf_i+0x1c4>
 80238ea:	0668      	lsls	r0, r5, #25
 80238ec:	d5fb      	bpl.n	80238e6 <_printf_i+0x1ba>
 80238ee:	8019      	strh	r1, [r3, #0]
 80238f0:	2300      	movs	r3, #0
 80238f2:	6123      	str	r3, [r4, #16]
 80238f4:	4616      	mov	r6, r2
 80238f6:	e7bc      	b.n	8023872 <_printf_i+0x146>
 80238f8:	6833      	ldr	r3, [r6, #0]
 80238fa:	1d1a      	adds	r2, r3, #4
 80238fc:	6032      	str	r2, [r6, #0]
 80238fe:	681e      	ldr	r6, [r3, #0]
 8023900:	6862      	ldr	r2, [r4, #4]
 8023902:	2100      	movs	r1, #0
 8023904:	4630      	mov	r0, r6
 8023906:	f7dc fc7b 	bl	8000200 <memchr>
 802390a:	b108      	cbz	r0, 8023910 <_printf_i+0x1e4>
 802390c:	1b80      	subs	r0, r0, r6
 802390e:	6060      	str	r0, [r4, #4]
 8023910:	6863      	ldr	r3, [r4, #4]
 8023912:	6123      	str	r3, [r4, #16]
 8023914:	2300      	movs	r3, #0
 8023916:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802391a:	e7aa      	b.n	8023872 <_printf_i+0x146>
 802391c:	6923      	ldr	r3, [r4, #16]
 802391e:	4632      	mov	r2, r6
 8023920:	4649      	mov	r1, r9
 8023922:	4640      	mov	r0, r8
 8023924:	47d0      	blx	sl
 8023926:	3001      	adds	r0, #1
 8023928:	d0ad      	beq.n	8023886 <_printf_i+0x15a>
 802392a:	6823      	ldr	r3, [r4, #0]
 802392c:	079b      	lsls	r3, r3, #30
 802392e:	d413      	bmi.n	8023958 <_printf_i+0x22c>
 8023930:	68e0      	ldr	r0, [r4, #12]
 8023932:	9b03      	ldr	r3, [sp, #12]
 8023934:	4298      	cmp	r0, r3
 8023936:	bfb8      	it	lt
 8023938:	4618      	movlt	r0, r3
 802393a:	e7a6      	b.n	802388a <_printf_i+0x15e>
 802393c:	2301      	movs	r3, #1
 802393e:	4632      	mov	r2, r6
 8023940:	4649      	mov	r1, r9
 8023942:	4640      	mov	r0, r8
 8023944:	47d0      	blx	sl
 8023946:	3001      	adds	r0, #1
 8023948:	d09d      	beq.n	8023886 <_printf_i+0x15a>
 802394a:	3501      	adds	r5, #1
 802394c:	68e3      	ldr	r3, [r4, #12]
 802394e:	9903      	ldr	r1, [sp, #12]
 8023950:	1a5b      	subs	r3, r3, r1
 8023952:	42ab      	cmp	r3, r5
 8023954:	dcf2      	bgt.n	802393c <_printf_i+0x210>
 8023956:	e7eb      	b.n	8023930 <_printf_i+0x204>
 8023958:	2500      	movs	r5, #0
 802395a:	f104 0619 	add.w	r6, r4, #25
 802395e:	e7f5      	b.n	802394c <_printf_i+0x220>
 8023960:	080248a3 	.word	0x080248a3
 8023964:	080248b4 	.word	0x080248b4

08023968 <__sflush_r>:
 8023968:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802396c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023970:	0716      	lsls	r6, r2, #28
 8023972:	4605      	mov	r5, r0
 8023974:	460c      	mov	r4, r1
 8023976:	d454      	bmi.n	8023a22 <__sflush_r+0xba>
 8023978:	684b      	ldr	r3, [r1, #4]
 802397a:	2b00      	cmp	r3, #0
 802397c:	dc02      	bgt.n	8023984 <__sflush_r+0x1c>
 802397e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8023980:	2b00      	cmp	r3, #0
 8023982:	dd48      	ble.n	8023a16 <__sflush_r+0xae>
 8023984:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8023986:	2e00      	cmp	r6, #0
 8023988:	d045      	beq.n	8023a16 <__sflush_r+0xae>
 802398a:	2300      	movs	r3, #0
 802398c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8023990:	682f      	ldr	r7, [r5, #0]
 8023992:	6a21      	ldr	r1, [r4, #32]
 8023994:	602b      	str	r3, [r5, #0]
 8023996:	d030      	beq.n	80239fa <__sflush_r+0x92>
 8023998:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802399a:	89a3      	ldrh	r3, [r4, #12]
 802399c:	0759      	lsls	r1, r3, #29
 802399e:	d505      	bpl.n	80239ac <__sflush_r+0x44>
 80239a0:	6863      	ldr	r3, [r4, #4]
 80239a2:	1ad2      	subs	r2, r2, r3
 80239a4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80239a6:	b10b      	cbz	r3, 80239ac <__sflush_r+0x44>
 80239a8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80239aa:	1ad2      	subs	r2, r2, r3
 80239ac:	2300      	movs	r3, #0
 80239ae:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80239b0:	6a21      	ldr	r1, [r4, #32]
 80239b2:	4628      	mov	r0, r5
 80239b4:	47b0      	blx	r6
 80239b6:	1c43      	adds	r3, r0, #1
 80239b8:	89a3      	ldrh	r3, [r4, #12]
 80239ba:	d106      	bne.n	80239ca <__sflush_r+0x62>
 80239bc:	6829      	ldr	r1, [r5, #0]
 80239be:	291d      	cmp	r1, #29
 80239c0:	d82b      	bhi.n	8023a1a <__sflush_r+0xb2>
 80239c2:	4a2a      	ldr	r2, [pc, #168]	@ (8023a6c <__sflush_r+0x104>)
 80239c4:	40ca      	lsrs	r2, r1
 80239c6:	07d6      	lsls	r6, r2, #31
 80239c8:	d527      	bpl.n	8023a1a <__sflush_r+0xb2>
 80239ca:	2200      	movs	r2, #0
 80239cc:	6062      	str	r2, [r4, #4]
 80239ce:	04d9      	lsls	r1, r3, #19
 80239d0:	6922      	ldr	r2, [r4, #16]
 80239d2:	6022      	str	r2, [r4, #0]
 80239d4:	d504      	bpl.n	80239e0 <__sflush_r+0x78>
 80239d6:	1c42      	adds	r2, r0, #1
 80239d8:	d101      	bne.n	80239de <__sflush_r+0x76>
 80239da:	682b      	ldr	r3, [r5, #0]
 80239dc:	b903      	cbnz	r3, 80239e0 <__sflush_r+0x78>
 80239de:	6560      	str	r0, [r4, #84]	@ 0x54
 80239e0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80239e2:	602f      	str	r7, [r5, #0]
 80239e4:	b1b9      	cbz	r1, 8023a16 <__sflush_r+0xae>
 80239e6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80239ea:	4299      	cmp	r1, r3
 80239ec:	d002      	beq.n	80239f4 <__sflush_r+0x8c>
 80239ee:	4628      	mov	r0, r5
 80239f0:	f7ff fb4a 	bl	8023088 <_free_r>
 80239f4:	2300      	movs	r3, #0
 80239f6:	6363      	str	r3, [r4, #52]	@ 0x34
 80239f8:	e00d      	b.n	8023a16 <__sflush_r+0xae>
 80239fa:	2301      	movs	r3, #1
 80239fc:	4628      	mov	r0, r5
 80239fe:	47b0      	blx	r6
 8023a00:	4602      	mov	r2, r0
 8023a02:	1c50      	adds	r0, r2, #1
 8023a04:	d1c9      	bne.n	802399a <__sflush_r+0x32>
 8023a06:	682b      	ldr	r3, [r5, #0]
 8023a08:	2b00      	cmp	r3, #0
 8023a0a:	d0c6      	beq.n	802399a <__sflush_r+0x32>
 8023a0c:	2b1d      	cmp	r3, #29
 8023a0e:	d001      	beq.n	8023a14 <__sflush_r+0xac>
 8023a10:	2b16      	cmp	r3, #22
 8023a12:	d11e      	bne.n	8023a52 <__sflush_r+0xea>
 8023a14:	602f      	str	r7, [r5, #0]
 8023a16:	2000      	movs	r0, #0
 8023a18:	e022      	b.n	8023a60 <__sflush_r+0xf8>
 8023a1a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023a1e:	b21b      	sxth	r3, r3
 8023a20:	e01b      	b.n	8023a5a <__sflush_r+0xf2>
 8023a22:	690f      	ldr	r7, [r1, #16]
 8023a24:	2f00      	cmp	r7, #0
 8023a26:	d0f6      	beq.n	8023a16 <__sflush_r+0xae>
 8023a28:	0793      	lsls	r3, r2, #30
 8023a2a:	680e      	ldr	r6, [r1, #0]
 8023a2c:	bf08      	it	eq
 8023a2e:	694b      	ldreq	r3, [r1, #20]
 8023a30:	600f      	str	r7, [r1, #0]
 8023a32:	bf18      	it	ne
 8023a34:	2300      	movne	r3, #0
 8023a36:	eba6 0807 	sub.w	r8, r6, r7
 8023a3a:	608b      	str	r3, [r1, #8]
 8023a3c:	f1b8 0f00 	cmp.w	r8, #0
 8023a40:	dde9      	ble.n	8023a16 <__sflush_r+0xae>
 8023a42:	6a21      	ldr	r1, [r4, #32]
 8023a44:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8023a46:	4643      	mov	r3, r8
 8023a48:	463a      	mov	r2, r7
 8023a4a:	4628      	mov	r0, r5
 8023a4c:	47b0      	blx	r6
 8023a4e:	2800      	cmp	r0, #0
 8023a50:	dc08      	bgt.n	8023a64 <__sflush_r+0xfc>
 8023a52:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023a56:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023a5a:	81a3      	strh	r3, [r4, #12]
 8023a5c:	f04f 30ff 	mov.w	r0, #4294967295
 8023a60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023a64:	4407      	add	r7, r0
 8023a66:	eba8 0800 	sub.w	r8, r8, r0
 8023a6a:	e7e7      	b.n	8023a3c <__sflush_r+0xd4>
 8023a6c:	20400001 	.word	0x20400001

08023a70 <_fflush_r>:
 8023a70:	b538      	push	{r3, r4, r5, lr}
 8023a72:	690b      	ldr	r3, [r1, #16]
 8023a74:	4605      	mov	r5, r0
 8023a76:	460c      	mov	r4, r1
 8023a78:	b913      	cbnz	r3, 8023a80 <_fflush_r+0x10>
 8023a7a:	2500      	movs	r5, #0
 8023a7c:	4628      	mov	r0, r5
 8023a7e:	bd38      	pop	{r3, r4, r5, pc}
 8023a80:	b118      	cbz	r0, 8023a8a <_fflush_r+0x1a>
 8023a82:	6a03      	ldr	r3, [r0, #32]
 8023a84:	b90b      	cbnz	r3, 8023a8a <_fflush_r+0x1a>
 8023a86:	f7ff f8a5 	bl	8022bd4 <__sinit>
 8023a8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023a8e:	2b00      	cmp	r3, #0
 8023a90:	d0f3      	beq.n	8023a7a <_fflush_r+0xa>
 8023a92:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8023a94:	07d0      	lsls	r0, r2, #31
 8023a96:	d404      	bmi.n	8023aa2 <_fflush_r+0x32>
 8023a98:	0599      	lsls	r1, r3, #22
 8023a9a:	d402      	bmi.n	8023aa2 <_fflush_r+0x32>
 8023a9c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023a9e:	f7ff fa86 	bl	8022fae <__retarget_lock_acquire_recursive>
 8023aa2:	4628      	mov	r0, r5
 8023aa4:	4621      	mov	r1, r4
 8023aa6:	f7ff ff5f 	bl	8023968 <__sflush_r>
 8023aaa:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8023aac:	07da      	lsls	r2, r3, #31
 8023aae:	4605      	mov	r5, r0
 8023ab0:	d4e4      	bmi.n	8023a7c <_fflush_r+0xc>
 8023ab2:	89a3      	ldrh	r3, [r4, #12]
 8023ab4:	059b      	lsls	r3, r3, #22
 8023ab6:	d4e1      	bmi.n	8023a7c <_fflush_r+0xc>
 8023ab8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023aba:	f7ff fa79 	bl	8022fb0 <__retarget_lock_release_recursive>
 8023abe:	e7dd      	b.n	8023a7c <_fflush_r+0xc>

08023ac0 <__swbuf_r>:
 8023ac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023ac2:	460e      	mov	r6, r1
 8023ac4:	4614      	mov	r4, r2
 8023ac6:	4605      	mov	r5, r0
 8023ac8:	b118      	cbz	r0, 8023ad2 <__swbuf_r+0x12>
 8023aca:	6a03      	ldr	r3, [r0, #32]
 8023acc:	b90b      	cbnz	r3, 8023ad2 <__swbuf_r+0x12>
 8023ace:	f7ff f881 	bl	8022bd4 <__sinit>
 8023ad2:	69a3      	ldr	r3, [r4, #24]
 8023ad4:	60a3      	str	r3, [r4, #8]
 8023ad6:	89a3      	ldrh	r3, [r4, #12]
 8023ad8:	071a      	lsls	r2, r3, #28
 8023ada:	d501      	bpl.n	8023ae0 <__swbuf_r+0x20>
 8023adc:	6923      	ldr	r3, [r4, #16]
 8023ade:	b943      	cbnz	r3, 8023af2 <__swbuf_r+0x32>
 8023ae0:	4621      	mov	r1, r4
 8023ae2:	4628      	mov	r0, r5
 8023ae4:	f000 f82a 	bl	8023b3c <__swsetup_r>
 8023ae8:	b118      	cbz	r0, 8023af2 <__swbuf_r+0x32>
 8023aea:	f04f 37ff 	mov.w	r7, #4294967295
 8023aee:	4638      	mov	r0, r7
 8023af0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023af2:	6823      	ldr	r3, [r4, #0]
 8023af4:	6922      	ldr	r2, [r4, #16]
 8023af6:	1a98      	subs	r0, r3, r2
 8023af8:	6963      	ldr	r3, [r4, #20]
 8023afa:	b2f6      	uxtb	r6, r6
 8023afc:	4283      	cmp	r3, r0
 8023afe:	4637      	mov	r7, r6
 8023b00:	dc05      	bgt.n	8023b0e <__swbuf_r+0x4e>
 8023b02:	4621      	mov	r1, r4
 8023b04:	4628      	mov	r0, r5
 8023b06:	f7ff ffb3 	bl	8023a70 <_fflush_r>
 8023b0a:	2800      	cmp	r0, #0
 8023b0c:	d1ed      	bne.n	8023aea <__swbuf_r+0x2a>
 8023b0e:	68a3      	ldr	r3, [r4, #8]
 8023b10:	3b01      	subs	r3, #1
 8023b12:	60a3      	str	r3, [r4, #8]
 8023b14:	6823      	ldr	r3, [r4, #0]
 8023b16:	1c5a      	adds	r2, r3, #1
 8023b18:	6022      	str	r2, [r4, #0]
 8023b1a:	701e      	strb	r6, [r3, #0]
 8023b1c:	6962      	ldr	r2, [r4, #20]
 8023b1e:	1c43      	adds	r3, r0, #1
 8023b20:	429a      	cmp	r2, r3
 8023b22:	d004      	beq.n	8023b2e <__swbuf_r+0x6e>
 8023b24:	89a3      	ldrh	r3, [r4, #12]
 8023b26:	07db      	lsls	r3, r3, #31
 8023b28:	d5e1      	bpl.n	8023aee <__swbuf_r+0x2e>
 8023b2a:	2e0a      	cmp	r6, #10
 8023b2c:	d1df      	bne.n	8023aee <__swbuf_r+0x2e>
 8023b2e:	4621      	mov	r1, r4
 8023b30:	4628      	mov	r0, r5
 8023b32:	f7ff ff9d 	bl	8023a70 <_fflush_r>
 8023b36:	2800      	cmp	r0, #0
 8023b38:	d0d9      	beq.n	8023aee <__swbuf_r+0x2e>
 8023b3a:	e7d6      	b.n	8023aea <__swbuf_r+0x2a>

08023b3c <__swsetup_r>:
 8023b3c:	b538      	push	{r3, r4, r5, lr}
 8023b3e:	4b29      	ldr	r3, [pc, #164]	@ (8023be4 <__swsetup_r+0xa8>)
 8023b40:	4605      	mov	r5, r0
 8023b42:	6818      	ldr	r0, [r3, #0]
 8023b44:	460c      	mov	r4, r1
 8023b46:	b118      	cbz	r0, 8023b50 <__swsetup_r+0x14>
 8023b48:	6a03      	ldr	r3, [r0, #32]
 8023b4a:	b90b      	cbnz	r3, 8023b50 <__swsetup_r+0x14>
 8023b4c:	f7ff f842 	bl	8022bd4 <__sinit>
 8023b50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023b54:	0719      	lsls	r1, r3, #28
 8023b56:	d422      	bmi.n	8023b9e <__swsetup_r+0x62>
 8023b58:	06da      	lsls	r2, r3, #27
 8023b5a:	d407      	bmi.n	8023b6c <__swsetup_r+0x30>
 8023b5c:	2209      	movs	r2, #9
 8023b5e:	602a      	str	r2, [r5, #0]
 8023b60:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023b64:	81a3      	strh	r3, [r4, #12]
 8023b66:	f04f 30ff 	mov.w	r0, #4294967295
 8023b6a:	e033      	b.n	8023bd4 <__swsetup_r+0x98>
 8023b6c:	0758      	lsls	r0, r3, #29
 8023b6e:	d512      	bpl.n	8023b96 <__swsetup_r+0x5a>
 8023b70:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8023b72:	b141      	cbz	r1, 8023b86 <__swsetup_r+0x4a>
 8023b74:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8023b78:	4299      	cmp	r1, r3
 8023b7a:	d002      	beq.n	8023b82 <__swsetup_r+0x46>
 8023b7c:	4628      	mov	r0, r5
 8023b7e:	f7ff fa83 	bl	8023088 <_free_r>
 8023b82:	2300      	movs	r3, #0
 8023b84:	6363      	str	r3, [r4, #52]	@ 0x34
 8023b86:	89a3      	ldrh	r3, [r4, #12]
 8023b88:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8023b8c:	81a3      	strh	r3, [r4, #12]
 8023b8e:	2300      	movs	r3, #0
 8023b90:	6063      	str	r3, [r4, #4]
 8023b92:	6923      	ldr	r3, [r4, #16]
 8023b94:	6023      	str	r3, [r4, #0]
 8023b96:	89a3      	ldrh	r3, [r4, #12]
 8023b98:	f043 0308 	orr.w	r3, r3, #8
 8023b9c:	81a3      	strh	r3, [r4, #12]
 8023b9e:	6923      	ldr	r3, [r4, #16]
 8023ba0:	b94b      	cbnz	r3, 8023bb6 <__swsetup_r+0x7a>
 8023ba2:	89a3      	ldrh	r3, [r4, #12]
 8023ba4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8023ba8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8023bac:	d003      	beq.n	8023bb6 <__swsetup_r+0x7a>
 8023bae:	4621      	mov	r1, r4
 8023bb0:	4628      	mov	r0, r5
 8023bb2:	f000 f887 	bl	8023cc4 <__smakebuf_r>
 8023bb6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023bba:	f013 0201 	ands.w	r2, r3, #1
 8023bbe:	d00a      	beq.n	8023bd6 <__swsetup_r+0x9a>
 8023bc0:	2200      	movs	r2, #0
 8023bc2:	60a2      	str	r2, [r4, #8]
 8023bc4:	6962      	ldr	r2, [r4, #20]
 8023bc6:	4252      	negs	r2, r2
 8023bc8:	61a2      	str	r2, [r4, #24]
 8023bca:	6922      	ldr	r2, [r4, #16]
 8023bcc:	b942      	cbnz	r2, 8023be0 <__swsetup_r+0xa4>
 8023bce:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8023bd2:	d1c5      	bne.n	8023b60 <__swsetup_r+0x24>
 8023bd4:	bd38      	pop	{r3, r4, r5, pc}
 8023bd6:	0799      	lsls	r1, r3, #30
 8023bd8:	bf58      	it	pl
 8023bda:	6962      	ldrpl	r2, [r4, #20]
 8023bdc:	60a2      	str	r2, [r4, #8]
 8023bde:	e7f4      	b.n	8023bca <__swsetup_r+0x8e>
 8023be0:	2000      	movs	r0, #0
 8023be2:	e7f7      	b.n	8023bd4 <__swsetup_r+0x98>
 8023be4:	20000228 	.word	0x20000228

08023be8 <memmove>:
 8023be8:	4288      	cmp	r0, r1
 8023bea:	b510      	push	{r4, lr}
 8023bec:	eb01 0402 	add.w	r4, r1, r2
 8023bf0:	d902      	bls.n	8023bf8 <memmove+0x10>
 8023bf2:	4284      	cmp	r4, r0
 8023bf4:	4623      	mov	r3, r4
 8023bf6:	d807      	bhi.n	8023c08 <memmove+0x20>
 8023bf8:	1e43      	subs	r3, r0, #1
 8023bfa:	42a1      	cmp	r1, r4
 8023bfc:	d008      	beq.n	8023c10 <memmove+0x28>
 8023bfe:	f811 2b01 	ldrb.w	r2, [r1], #1
 8023c02:	f803 2f01 	strb.w	r2, [r3, #1]!
 8023c06:	e7f8      	b.n	8023bfa <memmove+0x12>
 8023c08:	4402      	add	r2, r0
 8023c0a:	4601      	mov	r1, r0
 8023c0c:	428a      	cmp	r2, r1
 8023c0e:	d100      	bne.n	8023c12 <memmove+0x2a>
 8023c10:	bd10      	pop	{r4, pc}
 8023c12:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8023c16:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8023c1a:	e7f7      	b.n	8023c0c <memmove+0x24>

08023c1c <_realloc_r>:
 8023c1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023c20:	4607      	mov	r7, r0
 8023c22:	4614      	mov	r4, r2
 8023c24:	460d      	mov	r5, r1
 8023c26:	b921      	cbnz	r1, 8023c32 <_realloc_r+0x16>
 8023c28:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8023c2c:	4611      	mov	r1, r2
 8023c2e:	f7fe beab 	b.w	8022988 <_malloc_r>
 8023c32:	b92a      	cbnz	r2, 8023c40 <_realloc_r+0x24>
 8023c34:	f7ff fa28 	bl	8023088 <_free_r>
 8023c38:	4625      	mov	r5, r4
 8023c3a:	4628      	mov	r0, r5
 8023c3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023c40:	f000 f89e 	bl	8023d80 <_malloc_usable_size_r>
 8023c44:	4284      	cmp	r4, r0
 8023c46:	4606      	mov	r6, r0
 8023c48:	d802      	bhi.n	8023c50 <_realloc_r+0x34>
 8023c4a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8023c4e:	d8f4      	bhi.n	8023c3a <_realloc_r+0x1e>
 8023c50:	4621      	mov	r1, r4
 8023c52:	4638      	mov	r0, r7
 8023c54:	f7fe fe98 	bl	8022988 <_malloc_r>
 8023c58:	4680      	mov	r8, r0
 8023c5a:	b908      	cbnz	r0, 8023c60 <_realloc_r+0x44>
 8023c5c:	4645      	mov	r5, r8
 8023c5e:	e7ec      	b.n	8023c3a <_realloc_r+0x1e>
 8023c60:	42b4      	cmp	r4, r6
 8023c62:	4622      	mov	r2, r4
 8023c64:	4629      	mov	r1, r5
 8023c66:	bf28      	it	cs
 8023c68:	4632      	movcs	r2, r6
 8023c6a:	f7ff f9a2 	bl	8022fb2 <memcpy>
 8023c6e:	4629      	mov	r1, r5
 8023c70:	4638      	mov	r0, r7
 8023c72:	f7ff fa09 	bl	8023088 <_free_r>
 8023c76:	e7f1      	b.n	8023c5c <_realloc_r+0x40>

08023c78 <__swhatbuf_r>:
 8023c78:	b570      	push	{r4, r5, r6, lr}
 8023c7a:	460c      	mov	r4, r1
 8023c7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023c80:	2900      	cmp	r1, #0
 8023c82:	b096      	sub	sp, #88	@ 0x58
 8023c84:	4615      	mov	r5, r2
 8023c86:	461e      	mov	r6, r3
 8023c88:	da0d      	bge.n	8023ca6 <__swhatbuf_r+0x2e>
 8023c8a:	89a3      	ldrh	r3, [r4, #12]
 8023c8c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8023c90:	f04f 0100 	mov.w	r1, #0
 8023c94:	bf14      	ite	ne
 8023c96:	2340      	movne	r3, #64	@ 0x40
 8023c98:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8023c9c:	2000      	movs	r0, #0
 8023c9e:	6031      	str	r1, [r6, #0]
 8023ca0:	602b      	str	r3, [r5, #0]
 8023ca2:	b016      	add	sp, #88	@ 0x58
 8023ca4:	bd70      	pop	{r4, r5, r6, pc}
 8023ca6:	466a      	mov	r2, sp
 8023ca8:	f000 f848 	bl	8023d3c <_fstat_r>
 8023cac:	2800      	cmp	r0, #0
 8023cae:	dbec      	blt.n	8023c8a <__swhatbuf_r+0x12>
 8023cb0:	9901      	ldr	r1, [sp, #4]
 8023cb2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8023cb6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8023cba:	4259      	negs	r1, r3
 8023cbc:	4159      	adcs	r1, r3
 8023cbe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8023cc2:	e7eb      	b.n	8023c9c <__swhatbuf_r+0x24>

08023cc4 <__smakebuf_r>:
 8023cc4:	898b      	ldrh	r3, [r1, #12]
 8023cc6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023cc8:	079d      	lsls	r5, r3, #30
 8023cca:	4606      	mov	r6, r0
 8023ccc:	460c      	mov	r4, r1
 8023cce:	d507      	bpl.n	8023ce0 <__smakebuf_r+0x1c>
 8023cd0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8023cd4:	6023      	str	r3, [r4, #0]
 8023cd6:	6123      	str	r3, [r4, #16]
 8023cd8:	2301      	movs	r3, #1
 8023cda:	6163      	str	r3, [r4, #20]
 8023cdc:	b003      	add	sp, #12
 8023cde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023ce0:	ab01      	add	r3, sp, #4
 8023ce2:	466a      	mov	r2, sp
 8023ce4:	f7ff ffc8 	bl	8023c78 <__swhatbuf_r>
 8023ce8:	9f00      	ldr	r7, [sp, #0]
 8023cea:	4605      	mov	r5, r0
 8023cec:	4639      	mov	r1, r7
 8023cee:	4630      	mov	r0, r6
 8023cf0:	f7fe fe4a 	bl	8022988 <_malloc_r>
 8023cf4:	b948      	cbnz	r0, 8023d0a <__smakebuf_r+0x46>
 8023cf6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023cfa:	059a      	lsls	r2, r3, #22
 8023cfc:	d4ee      	bmi.n	8023cdc <__smakebuf_r+0x18>
 8023cfe:	f023 0303 	bic.w	r3, r3, #3
 8023d02:	f043 0302 	orr.w	r3, r3, #2
 8023d06:	81a3      	strh	r3, [r4, #12]
 8023d08:	e7e2      	b.n	8023cd0 <__smakebuf_r+0xc>
 8023d0a:	89a3      	ldrh	r3, [r4, #12]
 8023d0c:	6020      	str	r0, [r4, #0]
 8023d0e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8023d12:	81a3      	strh	r3, [r4, #12]
 8023d14:	9b01      	ldr	r3, [sp, #4]
 8023d16:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8023d1a:	b15b      	cbz	r3, 8023d34 <__smakebuf_r+0x70>
 8023d1c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023d20:	4630      	mov	r0, r6
 8023d22:	f000 f81d 	bl	8023d60 <_isatty_r>
 8023d26:	b128      	cbz	r0, 8023d34 <__smakebuf_r+0x70>
 8023d28:	89a3      	ldrh	r3, [r4, #12]
 8023d2a:	f023 0303 	bic.w	r3, r3, #3
 8023d2e:	f043 0301 	orr.w	r3, r3, #1
 8023d32:	81a3      	strh	r3, [r4, #12]
 8023d34:	89a3      	ldrh	r3, [r4, #12]
 8023d36:	431d      	orrs	r5, r3
 8023d38:	81a5      	strh	r5, [r4, #12]
 8023d3a:	e7cf      	b.n	8023cdc <__smakebuf_r+0x18>

08023d3c <_fstat_r>:
 8023d3c:	b538      	push	{r3, r4, r5, lr}
 8023d3e:	4d07      	ldr	r5, [pc, #28]	@ (8023d5c <_fstat_r+0x20>)
 8023d40:	2300      	movs	r3, #0
 8023d42:	4604      	mov	r4, r0
 8023d44:	4608      	mov	r0, r1
 8023d46:	4611      	mov	r1, r2
 8023d48:	602b      	str	r3, [r5, #0]
 8023d4a:	f7de fce8 	bl	800271e <_fstat>
 8023d4e:	1c43      	adds	r3, r0, #1
 8023d50:	d102      	bne.n	8023d58 <_fstat_r+0x1c>
 8023d52:	682b      	ldr	r3, [r5, #0]
 8023d54:	b103      	cbz	r3, 8023d58 <_fstat_r+0x1c>
 8023d56:	6023      	str	r3, [r4, #0]
 8023d58:	bd38      	pop	{r3, r4, r5, pc}
 8023d5a:	bf00      	nop
 8023d5c:	20014b9c 	.word	0x20014b9c

08023d60 <_isatty_r>:
 8023d60:	b538      	push	{r3, r4, r5, lr}
 8023d62:	4d06      	ldr	r5, [pc, #24]	@ (8023d7c <_isatty_r+0x1c>)
 8023d64:	2300      	movs	r3, #0
 8023d66:	4604      	mov	r4, r0
 8023d68:	4608      	mov	r0, r1
 8023d6a:	602b      	str	r3, [r5, #0]
 8023d6c:	f7de fcdc 	bl	8002728 <_isatty>
 8023d70:	1c43      	adds	r3, r0, #1
 8023d72:	d102      	bne.n	8023d7a <_isatty_r+0x1a>
 8023d74:	682b      	ldr	r3, [r5, #0]
 8023d76:	b103      	cbz	r3, 8023d7a <_isatty_r+0x1a>
 8023d78:	6023      	str	r3, [r4, #0]
 8023d7a:	bd38      	pop	{r3, r4, r5, pc}
 8023d7c:	20014b9c 	.word	0x20014b9c

08023d80 <_malloc_usable_size_r>:
 8023d80:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023d84:	1f18      	subs	r0, r3, #4
 8023d86:	2b00      	cmp	r3, #0
 8023d88:	bfbc      	itt	lt
 8023d8a:	580b      	ldrlt	r3, [r1, r0]
 8023d8c:	18c0      	addlt	r0, r0, r3
 8023d8e:	4770      	bx	lr

08023d90 <_init>:
 8023d90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023d92:	bf00      	nop
 8023d94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023d96:	bc08      	pop	{r3}
 8023d98:	469e      	mov	lr, r3
 8023d9a:	4770      	bx	lr

08023d9c <_fini>:
 8023d9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023d9e:	bf00      	nop
 8023da0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023da2:	bc08      	pop	{r3}
 8023da4:	469e      	mov	lr, r3
 8023da6:	4770      	bx	lr
