
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002469c  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001d14  0802484c  0802484c  0002584c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  08026560  08026560  00027560  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08026708  08026708  00027708  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08026720  08026720  00027720  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  0802672e  0802672e  0002772e  2**0
                  ALLOC
  7 .ARM          00000008  08026730  08026730  00027730  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08026738  08026738  00028480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08026738  08026738  00027738  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  0802674c  0802674c  0002774c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000274  20000000  08026754  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000280  080269c8  00028280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000380  08026ac8  00028380  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          00014900  20000480  08026bc8  00028480  2**2
                  ALLOC
 15 ._user_heap_stack 00001400  20014d80  08026bc8  00028d80  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  00028480  2**0
                  CONTENTS, READONLY
 17 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00029000  2**2
                  ALLOC
 18 .debug_line   00054e78  00000000  00000000  000284b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000073  00000000  00000000  0007d328  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   000aee53  00000000  00000000  0007d39b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000140d7  00000000  00000000  0012c1ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000032c8  00000000  00000000  001402c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011629e  00000000  00000000  00143590  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00003444  00000000  00000000  0025982e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001eb5f  00000000  00000000  0025cc72  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  000350cf  00000000  00000000  0027b7d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000c2  00000000  00000000  002b08a0  2**0
                  CONTENTS, READONLY
 28 .debug_frame  000094c0  00000000  00000000  002b0964  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000480 	.word	0x20000480
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08024834 	.word	0x08024834

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000484 	.word	0x20000484
 80001ec:	08024834 	.word	0x08024834

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	@ 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_d2iz>:
 8000618:	ea4f 0241 	mov.w	r2, r1, lsl #1
 800061c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000620:	d215      	bcs.n	800064e <__aeabi_d2iz+0x36>
 8000622:	d511      	bpl.n	8000648 <__aeabi_d2iz+0x30>
 8000624:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000628:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 800062c:	d912      	bls.n	8000654 <__aeabi_d2iz+0x3c>
 800062e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000632:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000636:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800063a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 800063e:	fa23 f002 	lsr.w	r0, r3, r2
 8000642:	bf18      	it	ne
 8000644:	4240      	negne	r0, r0
 8000646:	4770      	bx	lr
 8000648:	f04f 0000 	mov.w	r0, #0
 800064c:	4770      	bx	lr
 800064e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000652:	d105      	bne.n	8000660 <__aeabi_d2iz+0x48>
 8000654:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000658:	bf08      	it	eq
 800065a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 800065e:	4770      	bx	lr
 8000660:	f04f 0000 	mov.w	r0, #0
 8000664:	4770      	bx	lr
 8000666:	bf00      	nop

08000668 <__aeabi_ldivmod>:
 8000668:	b97b      	cbnz	r3, 800068a <__aeabi_ldivmod+0x22>
 800066a:	b972      	cbnz	r2, 800068a <__aeabi_ldivmod+0x22>
 800066c:	2900      	cmp	r1, #0
 800066e:	bfbe      	ittt	lt
 8000670:	2000      	movlt	r0, #0
 8000672:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8000676:	e006      	blt.n	8000686 <__aeabi_ldivmod+0x1e>
 8000678:	bf08      	it	eq
 800067a:	2800      	cmpeq	r0, #0
 800067c:	bf1c      	itt	ne
 800067e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 8000682:	f04f 30ff 	movne.w	r0, #4294967295
 8000686:	f000 b9d3 	b.w	8000a30 <__aeabi_idiv0>
 800068a:	f1ad 0c08 	sub.w	ip, sp, #8
 800068e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000692:	2900      	cmp	r1, #0
 8000694:	db09      	blt.n	80006aa <__aeabi_ldivmod+0x42>
 8000696:	2b00      	cmp	r3, #0
 8000698:	db1a      	blt.n	80006d0 <__aeabi_ldivmod+0x68>
 800069a:	f000 f84d 	bl	8000738 <__udivmoddi4>
 800069e:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006a2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006a6:	b004      	add	sp, #16
 80006a8:	4770      	bx	lr
 80006aa:	4240      	negs	r0, r0
 80006ac:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006b0:	2b00      	cmp	r3, #0
 80006b2:	db1b      	blt.n	80006ec <__aeabi_ldivmod+0x84>
 80006b4:	f000 f840 	bl	8000738 <__udivmoddi4>
 80006b8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006bc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006c0:	b004      	add	sp, #16
 80006c2:	4240      	negs	r0, r0
 80006c4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006c8:	4252      	negs	r2, r2
 80006ca:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80006ce:	4770      	bx	lr
 80006d0:	4252      	negs	r2, r2
 80006d2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80006d6:	f000 f82f 	bl	8000738 <__udivmoddi4>
 80006da:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006de:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006e2:	b004      	add	sp, #16
 80006e4:	4240      	negs	r0, r0
 80006e6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006ea:	4770      	bx	lr
 80006ec:	4252      	negs	r2, r2
 80006ee:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80006f2:	f000 f821 	bl	8000738 <__udivmoddi4>
 80006f6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006fa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006fe:	b004      	add	sp, #16
 8000700:	4252      	negs	r2, r2
 8000702:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000706:	4770      	bx	lr

08000708 <__aeabi_uldivmod>:
 8000708:	b953      	cbnz	r3, 8000720 <__aeabi_uldivmod+0x18>
 800070a:	b94a      	cbnz	r2, 8000720 <__aeabi_uldivmod+0x18>
 800070c:	2900      	cmp	r1, #0
 800070e:	bf08      	it	eq
 8000710:	2800      	cmpeq	r0, #0
 8000712:	bf1c      	itt	ne
 8000714:	f04f 31ff 	movne.w	r1, #4294967295
 8000718:	f04f 30ff 	movne.w	r0, #4294967295
 800071c:	f000 b988 	b.w	8000a30 <__aeabi_idiv0>
 8000720:	f1ad 0c08 	sub.w	ip, sp, #8
 8000724:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000728:	f000 f806 	bl	8000738 <__udivmoddi4>
 800072c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000730:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000734:	b004      	add	sp, #16
 8000736:	4770      	bx	lr

08000738 <__udivmoddi4>:
 8000738:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800073c:	9d08      	ldr	r5, [sp, #32]
 800073e:	468e      	mov	lr, r1
 8000740:	4604      	mov	r4, r0
 8000742:	4688      	mov	r8, r1
 8000744:	2b00      	cmp	r3, #0
 8000746:	d14a      	bne.n	80007de <__udivmoddi4+0xa6>
 8000748:	428a      	cmp	r2, r1
 800074a:	4617      	mov	r7, r2
 800074c:	d962      	bls.n	8000814 <__udivmoddi4+0xdc>
 800074e:	fab2 f682 	clz	r6, r2
 8000752:	b14e      	cbz	r6, 8000768 <__udivmoddi4+0x30>
 8000754:	f1c6 0320 	rsb	r3, r6, #32
 8000758:	fa01 f806 	lsl.w	r8, r1, r6
 800075c:	fa20 f303 	lsr.w	r3, r0, r3
 8000760:	40b7      	lsls	r7, r6
 8000762:	ea43 0808 	orr.w	r8, r3, r8
 8000766:	40b4      	lsls	r4, r6
 8000768:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800076c:	fa1f fc87 	uxth.w	ip, r7
 8000770:	fbb8 f1fe 	udiv	r1, r8, lr
 8000774:	0c23      	lsrs	r3, r4, #16
 8000776:	fb0e 8811 	mls	r8, lr, r1, r8
 800077a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800077e:	fb01 f20c 	mul.w	r2, r1, ip
 8000782:	429a      	cmp	r2, r3
 8000784:	d909      	bls.n	800079a <__udivmoddi4+0x62>
 8000786:	18fb      	adds	r3, r7, r3
 8000788:	f101 30ff 	add.w	r0, r1, #4294967295
 800078c:	f080 80ea 	bcs.w	8000964 <__udivmoddi4+0x22c>
 8000790:	429a      	cmp	r2, r3
 8000792:	f240 80e7 	bls.w	8000964 <__udivmoddi4+0x22c>
 8000796:	3902      	subs	r1, #2
 8000798:	443b      	add	r3, r7
 800079a:	1a9a      	subs	r2, r3, r2
 800079c:	b2a3      	uxth	r3, r4
 800079e:	fbb2 f0fe 	udiv	r0, r2, lr
 80007a2:	fb0e 2210 	mls	r2, lr, r0, r2
 80007a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80007aa:	fb00 fc0c 	mul.w	ip, r0, ip
 80007ae:	459c      	cmp	ip, r3
 80007b0:	d909      	bls.n	80007c6 <__udivmoddi4+0x8e>
 80007b2:	18fb      	adds	r3, r7, r3
 80007b4:	f100 32ff 	add.w	r2, r0, #4294967295
 80007b8:	f080 80d6 	bcs.w	8000968 <__udivmoddi4+0x230>
 80007bc:	459c      	cmp	ip, r3
 80007be:	f240 80d3 	bls.w	8000968 <__udivmoddi4+0x230>
 80007c2:	443b      	add	r3, r7
 80007c4:	3802      	subs	r0, #2
 80007c6:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80007ca:	eba3 030c 	sub.w	r3, r3, ip
 80007ce:	2100      	movs	r1, #0
 80007d0:	b11d      	cbz	r5, 80007da <__udivmoddi4+0xa2>
 80007d2:	40f3      	lsrs	r3, r6
 80007d4:	2200      	movs	r2, #0
 80007d6:	e9c5 3200 	strd	r3, r2, [r5]
 80007da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007de:	428b      	cmp	r3, r1
 80007e0:	d905      	bls.n	80007ee <__udivmoddi4+0xb6>
 80007e2:	b10d      	cbz	r5, 80007e8 <__udivmoddi4+0xb0>
 80007e4:	e9c5 0100 	strd	r0, r1, [r5]
 80007e8:	2100      	movs	r1, #0
 80007ea:	4608      	mov	r0, r1
 80007ec:	e7f5      	b.n	80007da <__udivmoddi4+0xa2>
 80007ee:	fab3 f183 	clz	r1, r3
 80007f2:	2900      	cmp	r1, #0
 80007f4:	d146      	bne.n	8000884 <__udivmoddi4+0x14c>
 80007f6:	4573      	cmp	r3, lr
 80007f8:	d302      	bcc.n	8000800 <__udivmoddi4+0xc8>
 80007fa:	4282      	cmp	r2, r0
 80007fc:	f200 8105 	bhi.w	8000a0a <__udivmoddi4+0x2d2>
 8000800:	1a84      	subs	r4, r0, r2
 8000802:	eb6e 0203 	sbc.w	r2, lr, r3
 8000806:	2001      	movs	r0, #1
 8000808:	4690      	mov	r8, r2
 800080a:	2d00      	cmp	r5, #0
 800080c:	d0e5      	beq.n	80007da <__udivmoddi4+0xa2>
 800080e:	e9c5 4800 	strd	r4, r8, [r5]
 8000812:	e7e2      	b.n	80007da <__udivmoddi4+0xa2>
 8000814:	2a00      	cmp	r2, #0
 8000816:	f000 8090 	beq.w	800093a <__udivmoddi4+0x202>
 800081a:	fab2 f682 	clz	r6, r2
 800081e:	2e00      	cmp	r6, #0
 8000820:	f040 80a4 	bne.w	800096c <__udivmoddi4+0x234>
 8000824:	1a8a      	subs	r2, r1, r2
 8000826:	0c03      	lsrs	r3, r0, #16
 8000828:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800082c:	b280      	uxth	r0, r0
 800082e:	b2bc      	uxth	r4, r7
 8000830:	2101      	movs	r1, #1
 8000832:	fbb2 fcfe 	udiv	ip, r2, lr
 8000836:	fb0e 221c 	mls	r2, lr, ip, r2
 800083a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800083e:	fb04 f20c 	mul.w	r2, r4, ip
 8000842:	429a      	cmp	r2, r3
 8000844:	d907      	bls.n	8000856 <__udivmoddi4+0x11e>
 8000846:	18fb      	adds	r3, r7, r3
 8000848:	f10c 38ff 	add.w	r8, ip, #4294967295
 800084c:	d202      	bcs.n	8000854 <__udivmoddi4+0x11c>
 800084e:	429a      	cmp	r2, r3
 8000850:	f200 80e0 	bhi.w	8000a14 <__udivmoddi4+0x2dc>
 8000854:	46c4      	mov	ip, r8
 8000856:	1a9b      	subs	r3, r3, r2
 8000858:	fbb3 f2fe 	udiv	r2, r3, lr
 800085c:	fb0e 3312 	mls	r3, lr, r2, r3
 8000860:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000864:	fb02 f404 	mul.w	r4, r2, r4
 8000868:	429c      	cmp	r4, r3
 800086a:	d907      	bls.n	800087c <__udivmoddi4+0x144>
 800086c:	18fb      	adds	r3, r7, r3
 800086e:	f102 30ff 	add.w	r0, r2, #4294967295
 8000872:	d202      	bcs.n	800087a <__udivmoddi4+0x142>
 8000874:	429c      	cmp	r4, r3
 8000876:	f200 80ca 	bhi.w	8000a0e <__udivmoddi4+0x2d6>
 800087a:	4602      	mov	r2, r0
 800087c:	1b1b      	subs	r3, r3, r4
 800087e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000882:	e7a5      	b.n	80007d0 <__udivmoddi4+0x98>
 8000884:	f1c1 0620 	rsb	r6, r1, #32
 8000888:	408b      	lsls	r3, r1
 800088a:	fa22 f706 	lsr.w	r7, r2, r6
 800088e:	431f      	orrs	r7, r3
 8000890:	fa0e f401 	lsl.w	r4, lr, r1
 8000894:	fa20 f306 	lsr.w	r3, r0, r6
 8000898:	fa2e fe06 	lsr.w	lr, lr, r6
 800089c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80008a0:	4323      	orrs	r3, r4
 80008a2:	fa00 f801 	lsl.w	r8, r0, r1
 80008a6:	fa1f fc87 	uxth.w	ip, r7
 80008aa:	fbbe f0f9 	udiv	r0, lr, r9
 80008ae:	0c1c      	lsrs	r4, r3, #16
 80008b0:	fb09 ee10 	mls	lr, r9, r0, lr
 80008b4:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80008b8:	fb00 fe0c 	mul.w	lr, r0, ip
 80008bc:	45a6      	cmp	lr, r4
 80008be:	fa02 f201 	lsl.w	r2, r2, r1
 80008c2:	d909      	bls.n	80008d8 <__udivmoddi4+0x1a0>
 80008c4:	193c      	adds	r4, r7, r4
 80008c6:	f100 3aff 	add.w	sl, r0, #4294967295
 80008ca:	f080 809c 	bcs.w	8000a06 <__udivmoddi4+0x2ce>
 80008ce:	45a6      	cmp	lr, r4
 80008d0:	f240 8099 	bls.w	8000a06 <__udivmoddi4+0x2ce>
 80008d4:	3802      	subs	r0, #2
 80008d6:	443c      	add	r4, r7
 80008d8:	eba4 040e 	sub.w	r4, r4, lr
 80008dc:	fa1f fe83 	uxth.w	lr, r3
 80008e0:	fbb4 f3f9 	udiv	r3, r4, r9
 80008e4:	fb09 4413 	mls	r4, r9, r3, r4
 80008e8:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 80008ec:	fb03 fc0c 	mul.w	ip, r3, ip
 80008f0:	45a4      	cmp	ip, r4
 80008f2:	d908      	bls.n	8000906 <__udivmoddi4+0x1ce>
 80008f4:	193c      	adds	r4, r7, r4
 80008f6:	f103 3eff 	add.w	lr, r3, #4294967295
 80008fa:	f080 8082 	bcs.w	8000a02 <__udivmoddi4+0x2ca>
 80008fe:	45a4      	cmp	ip, r4
 8000900:	d97f      	bls.n	8000a02 <__udivmoddi4+0x2ca>
 8000902:	3b02      	subs	r3, #2
 8000904:	443c      	add	r4, r7
 8000906:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 800090a:	eba4 040c 	sub.w	r4, r4, ip
 800090e:	fba0 ec02 	umull	lr, ip, r0, r2
 8000912:	4564      	cmp	r4, ip
 8000914:	4673      	mov	r3, lr
 8000916:	46e1      	mov	r9, ip
 8000918:	d362      	bcc.n	80009e0 <__udivmoddi4+0x2a8>
 800091a:	d05f      	beq.n	80009dc <__udivmoddi4+0x2a4>
 800091c:	b15d      	cbz	r5, 8000936 <__udivmoddi4+0x1fe>
 800091e:	ebb8 0203 	subs.w	r2, r8, r3
 8000922:	eb64 0409 	sbc.w	r4, r4, r9
 8000926:	fa04 f606 	lsl.w	r6, r4, r6
 800092a:	fa22 f301 	lsr.w	r3, r2, r1
 800092e:	431e      	orrs	r6, r3
 8000930:	40cc      	lsrs	r4, r1
 8000932:	e9c5 6400 	strd	r6, r4, [r5]
 8000936:	2100      	movs	r1, #0
 8000938:	e74f      	b.n	80007da <__udivmoddi4+0xa2>
 800093a:	fbb1 fcf2 	udiv	ip, r1, r2
 800093e:	0c01      	lsrs	r1, r0, #16
 8000940:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000944:	b280      	uxth	r0, r0
 8000946:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 800094a:	463b      	mov	r3, r7
 800094c:	4638      	mov	r0, r7
 800094e:	463c      	mov	r4, r7
 8000950:	46b8      	mov	r8, r7
 8000952:	46be      	mov	lr, r7
 8000954:	2620      	movs	r6, #32
 8000956:	fbb1 f1f7 	udiv	r1, r1, r7
 800095a:	eba2 0208 	sub.w	r2, r2, r8
 800095e:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000962:	e766      	b.n	8000832 <__udivmoddi4+0xfa>
 8000964:	4601      	mov	r1, r0
 8000966:	e718      	b.n	800079a <__udivmoddi4+0x62>
 8000968:	4610      	mov	r0, r2
 800096a:	e72c      	b.n	80007c6 <__udivmoddi4+0x8e>
 800096c:	f1c6 0220 	rsb	r2, r6, #32
 8000970:	fa2e f302 	lsr.w	r3, lr, r2
 8000974:	40b7      	lsls	r7, r6
 8000976:	40b1      	lsls	r1, r6
 8000978:	fa20 f202 	lsr.w	r2, r0, r2
 800097c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000980:	430a      	orrs	r2, r1
 8000982:	fbb3 f8fe 	udiv	r8, r3, lr
 8000986:	b2bc      	uxth	r4, r7
 8000988:	fb0e 3318 	mls	r3, lr, r8, r3
 800098c:	0c11      	lsrs	r1, r2, #16
 800098e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000992:	fb08 f904 	mul.w	r9, r8, r4
 8000996:	40b0      	lsls	r0, r6
 8000998:	4589      	cmp	r9, r1
 800099a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 800099e:	b280      	uxth	r0, r0
 80009a0:	d93e      	bls.n	8000a20 <__udivmoddi4+0x2e8>
 80009a2:	1879      	adds	r1, r7, r1
 80009a4:	f108 3cff 	add.w	ip, r8, #4294967295
 80009a8:	d201      	bcs.n	80009ae <__udivmoddi4+0x276>
 80009aa:	4589      	cmp	r9, r1
 80009ac:	d81f      	bhi.n	80009ee <__udivmoddi4+0x2b6>
 80009ae:	eba1 0109 	sub.w	r1, r1, r9
 80009b2:	fbb1 f9fe 	udiv	r9, r1, lr
 80009b6:	fb09 f804 	mul.w	r8, r9, r4
 80009ba:	fb0e 1119 	mls	r1, lr, r9, r1
 80009be:	b292      	uxth	r2, r2
 80009c0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80009c4:	4542      	cmp	r2, r8
 80009c6:	d229      	bcs.n	8000a1c <__udivmoddi4+0x2e4>
 80009c8:	18ba      	adds	r2, r7, r2
 80009ca:	f109 31ff 	add.w	r1, r9, #4294967295
 80009ce:	d2c4      	bcs.n	800095a <__udivmoddi4+0x222>
 80009d0:	4542      	cmp	r2, r8
 80009d2:	d2c2      	bcs.n	800095a <__udivmoddi4+0x222>
 80009d4:	f1a9 0102 	sub.w	r1, r9, #2
 80009d8:	443a      	add	r2, r7
 80009da:	e7be      	b.n	800095a <__udivmoddi4+0x222>
 80009dc:	45f0      	cmp	r8, lr
 80009de:	d29d      	bcs.n	800091c <__udivmoddi4+0x1e4>
 80009e0:	ebbe 0302 	subs.w	r3, lr, r2
 80009e4:	eb6c 0c07 	sbc.w	ip, ip, r7
 80009e8:	3801      	subs	r0, #1
 80009ea:	46e1      	mov	r9, ip
 80009ec:	e796      	b.n	800091c <__udivmoddi4+0x1e4>
 80009ee:	eba7 0909 	sub.w	r9, r7, r9
 80009f2:	4449      	add	r1, r9
 80009f4:	f1a8 0c02 	sub.w	ip, r8, #2
 80009f8:	fbb1 f9fe 	udiv	r9, r1, lr
 80009fc:	fb09 f804 	mul.w	r8, r9, r4
 8000a00:	e7db      	b.n	80009ba <__udivmoddi4+0x282>
 8000a02:	4673      	mov	r3, lr
 8000a04:	e77f      	b.n	8000906 <__udivmoddi4+0x1ce>
 8000a06:	4650      	mov	r0, sl
 8000a08:	e766      	b.n	80008d8 <__udivmoddi4+0x1a0>
 8000a0a:	4608      	mov	r0, r1
 8000a0c:	e6fd      	b.n	800080a <__udivmoddi4+0xd2>
 8000a0e:	443b      	add	r3, r7
 8000a10:	3a02      	subs	r2, #2
 8000a12:	e733      	b.n	800087c <__udivmoddi4+0x144>
 8000a14:	f1ac 0c02 	sub.w	ip, ip, #2
 8000a18:	443b      	add	r3, r7
 8000a1a:	e71c      	b.n	8000856 <__udivmoddi4+0x11e>
 8000a1c:	4649      	mov	r1, r9
 8000a1e:	e79c      	b.n	800095a <__udivmoddi4+0x222>
 8000a20:	eba1 0109 	sub.w	r1, r1, r9
 8000a24:	46c4      	mov	ip, r8
 8000a26:	fbb1 f9fe 	udiv	r9, r1, lr
 8000a2a:	fb09 f804 	mul.w	r8, r9, r4
 8000a2e:	e7c4      	b.n	80009ba <__udivmoddi4+0x282>

08000a30 <__aeabi_idiv0>:
 8000a30:	4770      	bx	lr
 8000a32:	bf00      	nop

08000a34 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000a34:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000a6c <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000a38:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000a3a:	e003      	b.n	8000a44 <LoopCopyDataInit>

08000a3c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000a3c:	4b0c      	ldr	r3, [pc, #48]	@ (8000a70 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000a3e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000a40:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000a42:	3104      	adds	r1, #4

08000a44 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000a44:	480b      	ldr	r0, [pc, #44]	@ (8000a74 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000a46:	4b0c      	ldr	r3, [pc, #48]	@ (8000a78 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000a48:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000a4a:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000a4c:	d3f6      	bcc.n	8000a3c <CopyDataInit>
  ldr  r2, =_sbss
 8000a4e:	4a0b      	ldr	r2, [pc, #44]	@ (8000a7c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000a50:	e002      	b.n	8000a58 <LoopFillZerobss>

08000a52 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000a52:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000a54:	f842 3b04 	str.w	r3, [r2], #4

08000a58 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000a58:	4b09      	ldr	r3, [pc, #36]	@ (8000a80 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000a5a:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000a5c:	d3f9      	bcc.n	8000a52 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000a5e:	f003 faf7 	bl	8004050 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000a62:	f022 ffd1 	bl	8023a08 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000a66:	f001 fac9 	bl	8001ffc <main>
  bx  lr    
 8000a6a:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000a6c:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000a70:	08026754 	.word	0x08026754
  ldr  r0, =_sdata
 8000a74:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000a78:	20000274 	.word	0x20000274
  ldr  r2, =_sbss
 8000a7c:	20000480 	.word	0x20000480
  ldr  r3, = _ebss
 8000a80:	20014d80 	.word	0x20014d80

08000a84 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000a84:	e7fe      	b.n	8000a84 <ADC_IRQHandler>

08000a86 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000a86:	4770      	bx	lr

08000a88 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000a88:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8000a8a:	f000 fdbb 	bl	8001604 <touchgfx_components_init>
    touchgfx_init();
}
 8000a8e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8000a92:	f000 bd3f 	b.w	8001514 <touchgfx_init>

08000a96 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8000a96:	f000 bdb7 	b.w	8001608 <touchgfx_taskEntry>

08000a9a <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000a9a:	4770      	bx	lr

08000a9c <_ZN20STM32TouchControllerD0Ev>:
 8000a9c:	b510      	push	{r4, lr}
 8000a9e:	2104      	movs	r1, #4
 8000aa0:	4604      	mov	r4, r0
 8000aa2:	f021 fcea 	bl	802247a <_ZdlPvj>
 8000aa6:	4620      	mov	r0, r4
 8000aa8:	bd10      	pop	{r4, pc}
	...

08000aac <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000aac:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000aae:	4b0c      	ldr	r3, [pc, #48]	@ (8000ae0 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000ab0:	4c0c      	ldr	r4, [pc, #48]	@ (8000ae4 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000ab2:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000ab4:	4b0c      	ldr	r3, [pc, #48]	@ (8000ae8 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000ab6:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8000ab8:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000aba:	6863      	ldr	r3, [r4, #4]
 8000abc:	4798      	blx	r3
 8000abe:	f640 0311 	movw	r3, #2065	@ 0x811
 8000ac2:	4298      	cmp	r0, r3
 8000ac4:	d10a      	bne.n	8000adc <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000ac6:	4d09      	ldr	r5, [pc, #36]	@ (8000aec <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000ac8:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000aca:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000acc:	2082      	movs	r0, #130	@ 0x82
 8000ace:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000ad0:	682b      	ldr	r3, [r5, #0]
 8000ad2:	2082      	movs	r0, #130	@ 0x82
 8000ad4:	68db      	ldr	r3, [r3, #12]
 8000ad6:	4798      	blx	r3
 8000ad8:	2000      	movs	r0, #0
    }

    return ret;
}
 8000ada:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000adc:	2001      	movs	r0, #1
 8000ade:	e7fc      	b.n	8000ada <_Z11BSP_TS_Inittt+0x2e>
 8000ae0:	200004a6 	.word	0x200004a6
 8000ae4:	2000009c 	.word	0x2000009c
 8000ae8:	200004a4 	.word	0x200004a4
 8000aec:	200004a8 	.word	0x200004a8

08000af0 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000af0:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8000af4:	20f0      	movs	r0, #240	@ 0xf0
 8000af6:	f7ff bfd9 	b.w	8000aac <_Z11BSP_TS_Inittt>
	...

08000afc <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000afc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000afe:	4d39      	ldr	r5, [pc, #228]	@ (8000be4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000b00:	682b      	ldr	r3, [r5, #0]
{
 8000b02:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000b04:	691b      	ldr	r3, [r3, #16]
 8000b06:	2082      	movs	r0, #130	@ 0x82
 8000b08:	4798      	blx	r3
 8000b0a:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000b0c:	2800      	cmp	r0, #0
 8000b0e:	d04e      	beq.n	8000bae <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000b10:	682b      	ldr	r3, [r5, #0]
 8000b12:	f10d 0206 	add.w	r2, sp, #6
 8000b16:	695b      	ldr	r3, [r3, #20]
 8000b18:	a901      	add	r1, sp, #4
 8000b1a:	2082      	movs	r0, #130	@ 0x82
 8000b1c:	4798      	blx	r3

        if (isRevD)
 8000b1e:	4b32      	ldr	r3, [pc, #200]	@ (8000be8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000b20:	781b      	ldrb	r3, [r3, #0]
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	d04b      	beq.n	8000bbe <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 8000b26:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000b2a:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000b2e:	429a      	cmp	r2, r3
 8000b30:	d93f      	bls.n	8000bb2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 8000b32:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 8000b36:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000b3a:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000b3c:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000b3e:	2b0a      	cmp	r3, #10
 8000b40:	d942      	bls.n	8000bc8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 8000b42:	220b      	movs	r2, #11
 8000b44:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000b48:	4a28      	ldr	r2, [pc, #160]	@ (8000bec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000b4a:	8812      	ldrh	r2, [r2, #0]
 8000b4c:	4293      	cmp	r3, r2
 8000b4e:	d901      	bls.n	8000b54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000b50:	3a01      	subs	r2, #1
 8000b52:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000b54:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000b58:	4825      	ldr	r0, [pc, #148]	@ (8000bf0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000b5a:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000b5e:	428a      	cmp	r2, r1
 8000b60:	d834      	bhi.n	8000bcc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 8000b62:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 8000b66:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000b68:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 8000b6a:	b292      	uxth	r2, r2
        xr = x / 15;
 8000b6c:	250f      	movs	r5, #15
 8000b6e:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 8000b72:	4d20      	ldr	r5, [pc, #128]	@ (8000bf4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 8000b74:	882d      	ldrh	r5, [r5, #0]
 8000b76:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 8000b78:	bf84      	itt	hi
 8000b7a:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8000b7e:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000b80:	428a      	cmp	r2, r1
 8000b82:	4615      	mov	r5, r2
 8000b84:	b28e      	uxth	r6, r1
 8000b86:	d92a      	bls.n	8000bde <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 8000b88:	1b92      	subs	r2, r2, r6
 8000b8a:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000b8c:	4e1a      	ldr	r6, [pc, #104]	@ (8000bf8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 8000b8e:	6837      	ldr	r7, [r6, #0]
 8000b90:	42bb      	cmp	r3, r7
 8000b92:	b2ba      	uxth	r2, r7
 8000b94:	bf8c      	ite	hi
 8000b96:	1a9a      	subhi	r2, r3, r2
 8000b98:	1ad2      	subls	r2, r2, r3
 8000b9a:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 8000b9c:	4411      	add	r1, r2
 8000b9e:	2905      	cmp	r1, #5
        {
            _x = x;
 8000ba0:	bfc4      	itt	gt
 8000ba2:	6005      	strgt	r5, [r0, #0]
            _y = y;
 8000ba4:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8000ba6:	6803      	ldr	r3, [r0, #0]
 8000ba8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000baa:	6833      	ldr	r3, [r6, #0]
 8000bac:	80a3      	strh	r3, [r4, #4]
    }
}
 8000bae:	b003      	add	sp, #12
 8000bb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 8000bb2:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 8000bb4:	bf9c      	itt	ls
 8000bb6:	22b4      	movls	r2, #180	@ 0xb4
 8000bb8:	f8ad 2006 	strhls.w	r2, [sp, #6]
 8000bbc:	e7bb      	b.n	8000b36 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 8000bbe:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000bc2:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 8000bc6:	e7b9      	b.n	8000b3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8000bc8:	2300      	movs	r3, #0
 8000bca:	e7c3      	b.n	8000b54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8000bcc:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8000bd0:	3208      	adds	r2, #8
 8000bd2:	b292      	uxth	r2, r2
        if (xr <= 0)
 8000bd4:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000bd6:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000bd8:	d8c8      	bhi.n	8000b6c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000bda:	2500      	movs	r5, #0
            xr = 0;
 8000bdc:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000bde:	1a89      	subs	r1, r1, r2
 8000be0:	b289      	uxth	r1, r1
 8000be2:	e7d3      	b.n	8000b8c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 8000be4:	200004a8 	.word	0x200004a8
 8000be8:	20002f08 	.word	0x20002f08
 8000bec:	200004a4 	.word	0x200004a4
 8000bf0:	200004a0 	.word	0x200004a0
 8000bf4:	200004a6 	.word	0x200004a6
 8000bf8:	2000049c 	.word	0x2000049c

08000bfc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000bfc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000bfe:	4668      	mov	r0, sp
{
 8000c00:	460d      	mov	r5, r1
 8000c02:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000c04:	f7ff ff7a 	bl	8000afc <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000c08:	f8bd 0000 	ldrh.w	r0, [sp]
 8000c0c:	b130      	cbz	r0, 8000c1c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000c0e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000c12:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000c14:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000c18:	6023      	str	r3, [r4, #0]
        return true;
 8000c1a:	2001      	movs	r0, #1
}
 8000c1c:	b003      	add	sp, #12
 8000c1e:	bd30      	pop	{r4, r5, pc}

08000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000c20:	2803      	cmp	r0, #3
 8000c22:	d821      	bhi.n	8000c68 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000c24:	e8df f000 	tbb	[pc, r0]
 8000c28:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000c2c:	4b0f      	ldr	r3, [pc, #60]	@ (8000c6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000c2e:	681a      	ldr	r2, [r3, #0]
 8000c30:	fab2 f282 	clz	r2, r2
 8000c34:	0952      	lsrs	r2, r2, #5
 8000c36:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000c38:	480d      	ldr	r0, [pc, #52]	@ (8000c70 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000c3a:	f003 bc9d 	b.w	8004578 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000c3e:	4b0b      	ldr	r3, [pc, #44]	@ (8000c6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000c40:	685a      	ldr	r2, [r3, #4]
 8000c42:	fab2 f282 	clz	r2, r2
 8000c46:	0952      	lsrs	r2, r2, #5
 8000c48:	2108      	movs	r1, #8
 8000c4a:	e7f5      	b.n	8000c38 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000c4c:	4b07      	ldr	r3, [pc, #28]	@ (8000c6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000c4e:	689a      	ldr	r2, [r3, #8]
 8000c50:	fab2 f282 	clz	r2, r2
 8000c54:	0952      	lsrs	r2, r2, #5
 8000c56:	2110      	movs	r1, #16
 8000c58:	e7ee      	b.n	8000c38 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000c5a:	4b04      	ldr	r3, [pc, #16]	@ (8000c6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000c5c:	68da      	ldr	r2, [r3, #12]
 8000c5e:	fab2 f282 	clz	r2, r2
 8000c62:	0952      	lsrs	r2, r2, #5
 8000c64:	2120      	movs	r1, #32
 8000c66:	e7e7      	b.n	8000c38 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000c68:	4770      	bx	lr
 8000c6a:	bf00      	nop
 8000c6c:	200004ac 	.word	0x200004ac
 8000c70:	40021000 	.word	0x40021000

08000c74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000c74:	2803      	cmp	r0, #3
 8000c76:	d821      	bhi.n	8000cbc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8000c78:	e8df f000 	tbb	[pc, r0]
 8000c7c:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000c80:	4b0f      	ldr	r3, [pc, #60]	@ (8000cc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000c82:	681a      	ldr	r2, [r3, #0]
 8000c84:	3a00      	subs	r2, #0
 8000c86:	bf18      	it	ne
 8000c88:	2201      	movne	r2, #1
 8000c8a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000c8c:	480d      	ldr	r0, [pc, #52]	@ (8000cc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000c8e:	f003 bc73 	b.w	8004578 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000c92:	4b0b      	ldr	r3, [pc, #44]	@ (8000cc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000c94:	685a      	ldr	r2, [r3, #4]
 8000c96:	3a00      	subs	r2, #0
 8000c98:	bf18      	it	ne
 8000c9a:	2201      	movne	r2, #1
 8000c9c:	2108      	movs	r1, #8
 8000c9e:	e7f5      	b.n	8000c8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000ca0:	4b07      	ldr	r3, [pc, #28]	@ (8000cc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000ca2:	689a      	ldr	r2, [r3, #8]
 8000ca4:	3a00      	subs	r2, #0
 8000ca6:	bf18      	it	ne
 8000ca8:	2201      	movne	r2, #1
 8000caa:	2110      	movs	r1, #16
 8000cac:	e7ee      	b.n	8000c8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000cae:	4b04      	ldr	r3, [pc, #16]	@ (8000cc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000cb0:	68da      	ldr	r2, [r3, #12]
 8000cb2:	3a00      	subs	r2, #0
 8000cb4:	bf18      	it	ne
 8000cb6:	2201      	movne	r2, #1
 8000cb8:	2120      	movs	r1, #32
 8000cba:	e7e7      	b.n	8000c8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000cbc:	4770      	bx	lr
 8000cbe:	bf00      	nop
 8000cc0:	200004ac 	.word	0x200004ac
 8000cc4:	40021000 	.word	0x40021000

08000cc8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000cc8:	2803      	cmp	r0, #3
 8000cca:	d80d      	bhi.n	8000ce8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000ccc:	e8df f000 	tbb	[pc, r0]
 8000cd0:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000cd4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000cd6:	4805      	ldr	r0, [pc, #20]	@ (8000cec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000cd8:	f003 bc53 	b.w	8004582 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000cdc:	2108      	movs	r1, #8
 8000cde:	e7fa      	b.n	8000cd6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000ce0:	2110      	movs	r1, #16
 8000ce2:	e7f8      	b.n	8000cd6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000ce4:	2120      	movs	r1, #32
 8000ce6:	e7f6      	b.n	8000cd6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000ce8:	4770      	bx	lr
 8000cea:	bf00      	nop
 8000cec:	40021000 	.word	0x40021000

08000cf0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000cf0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000cf2:	2803      	cmp	r0, #3
 8000cf4:	d811      	bhi.n	8000d1a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 8000cf6:	e8df f000 	tbb	[pc, r0]
 8000cfa:	0a02      	.short	0x0a02
 8000cfc:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000cfe:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000d00:	4807      	ldr	r0, [pc, #28]	@ (8000d20 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000d02:	f003 fc33 	bl	800456c <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000d06:	1e43      	subs	r3, r0, #1
 8000d08:	4258      	negs	r0, r3
 8000d0a:	4158      	adcs	r0, r3
 8000d0c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000d0e:	2108      	movs	r1, #8
 8000d10:	e7f6      	b.n	8000d00 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000d12:	2110      	movs	r1, #16
 8000d14:	e7f4      	b.n	8000d00 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000d16:	2120      	movs	r1, #32
 8000d18:	e7f2      	b.n	8000d00 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000d1a:	2000      	movs	r0, #0
 8000d1c:	e7f3      	b.n	8000d06 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000d1e:	bf00      	nop
 8000d20:	40021000 	.word	0x40021000

08000d24 <_ZN8touchgfx4GPIO4initEv>:
{
 8000d24:	b570      	push	{r4, r5, r6, lr}
 8000d26:	4d08      	ldr	r5, [pc, #32]	@ (8000d48 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000d28:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000d2a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000d2c:	b2e0      	uxtb	r0, r4
 8000d2e:	f7ff ffdf 	bl	8000cf0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000d32:	b118      	cbz	r0, 8000d3c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000d34:	682b      	ldr	r3, [r5, #0]
 8000d36:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000d38:	bf18      	it	ne
 8000d3a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000d3c:	3401      	adds	r4, #1
 8000d3e:	2c05      	cmp	r4, #5
 8000d40:	f105 0504 	add.w	r5, r5, #4
 8000d44:	d1f2      	bne.n	8000d2c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000d46:	bd70      	pop	{r4, r5, r6, pc}
 8000d48:	200004ac 	.word	0x200004ac

08000d4c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000d4c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000d4e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8000d52:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8000d56:	4770      	bx	lr

08000d58 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000d58:	4770      	bx	lr

08000d5a <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000d5a:	2000      	movs	r0, #0
 8000d5c:	4770      	bx	lr
	...

08000d60 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000d60:	4b03      	ldr	r3, [pc, #12]	@ (8000d70 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000d62:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000d64:	3900      	subs	r1, #0
 8000d66:	bf18      	it	ne
 8000d68:	2101      	movne	r1, #1
 8000d6a:	7019      	strb	r1, [r3, #0]
    }
 8000d6c:	4770      	bx	lr
 8000d6e:	bf00      	nop
 8000d70:	2001403d 	.word	0x2001403d

08000d74 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 8000d74:	4770      	bx	lr

08000d76 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000d76:	2000      	movs	r0, #0
 8000d78:	4770      	bx	lr

08000d7a <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000d7a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8000d7c:	b10b      	cbz	r3, 8000d82 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000d7e:	4608      	mov	r0, r1
 8000d80:	4718      	bx	r3
        }
    }
 8000d82:	4770      	bx	lr

08000d84 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000d84:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8000d88:	4770      	bx	lr

08000d8a <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000d8a:	6840      	ldr	r0, [r0, #4]
 8000d8c:	6803      	ldr	r3, [r0, #0]
 8000d8e:	699b      	ldr	r3, [r3, #24]
 8000d90:	4718      	bx	r3

08000d92 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 8000d92:	4770      	bx	lr

08000d94 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000d94:	4770      	bx	lr

08000d96 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000d96:	4770      	bx	lr

08000d98 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 8000d98:	4770      	bx	lr

08000d9a <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000d9a:	4770      	bx	lr

08000d9c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000d9c:	b510      	push	{r4, lr}
 8000d9e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8000da0:	f000 fd48 	bl	8001834 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000da4:	6823      	ldr	r3, [r4, #0]
 8000da6:	4903      	ldr	r1, [pc, #12]	@ (8000db4 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000da8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000dac:	4620      	mov	r0, r4
}
 8000dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8000db2:	4718      	bx	r3
 8000db4:	d0000000 	.word	0xd0000000

08000db8 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000db8:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000dba:	6803      	ldr	r3, [r0, #0]
{
 8000dbc:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000dbe:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8000dc2:	4798      	blx	r3
    enableInterrupts();
 8000dc4:	6823      	ldr	r3, [r4, #0]
 8000dc6:	4620      	mov	r0, r4
 8000dc8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8000dca:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000dcc:	f000 f8ec 	bl	8000fa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000dd0:	6823      	ldr	r3, [r4, #0]
 8000dd2:	4620      	mov	r0, r4
 8000dd4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000dd6:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000dd8:	2029      	movs	r0, #41	@ 0x29
 8000dda:	f001 fbd1 	bl	8002580 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000dde:	f000 f8e3 	bl	8000fa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000de2:	6823      	ldr	r3, [r4, #0]
 8000de4:	4620      	mov	r0, r4
 8000de6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000de8:	4798      	blx	r3
    for (;;)
 8000dea:	e7f8      	b.n	8000dde <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000dec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000dec:	b510      	push	{r4, lr}
 8000dee:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000df0:	f00a fe96 	bl	800bb20 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000df4:	6823      	ldr	r3, [r4, #0]
 8000df6:	4620      	mov	r0, r4
 8000df8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8000dfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000e00:	4718      	bx	r3

08000e02 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000e02:	f000 bcfb 	b.w	80017fc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000e06 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000e06:	f000 bcff 	b.w	8001808 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000e0a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000e0a:	f000 bd31 	b.w	8001870 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000e0e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000e0e:	f000 bcd1 	b.w	80017b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000e12 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000e12:	f000 bd41 	b.w	8001898 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000e16 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000e16:	f000 bd49 	b.w	80018ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000e1a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000e1a:	f000 bcd5 	b.w	80017c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000e1e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000e1e:	f00a b89f 	b.w	800af60 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000e22 <_ZN11TouchGFXHALD0Ev>:
 8000e22:	b510      	push	{r4, lr}
 8000e24:	2184      	movs	r1, #132	@ 0x84
 8000e26:	4604      	mov	r4, r0
 8000e28:	f021 fb27 	bl	802247a <_ZdlPvj>
 8000e2c:	4620      	mov	r0, r4
 8000e2e:	bd10      	pop	{r4, pc}

08000e30 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000e30:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000e32:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000e36:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000e3a:	4b0c      	ldr	r3, [pc, #48]	@ (8000e6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000e3c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000e3e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000e40:	d009      	beq.n	8000e56 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000e42:	b93a      	cbnz	r2, 8000e54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e44:	4a0a      	ldr	r2, [pc, #40]	@ (8000e70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000e46:	490b      	ldr	r1, [pc, #44]	@ (8000e74 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e48:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000e4a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000e4c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e4e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000e50:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000e52:	701a      	strb	r2, [r3, #0]
    }
 8000e54:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000e56:	2a00      	cmp	r2, #0
 8000e58:	d0fc      	beq.n	8000e54 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e5a:	4a05      	ldr	r2, [pc, #20]	@ (8000e70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000e5c:	4905      	ldr	r1, [pc, #20]	@ (8000e74 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e5e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000e60:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000e62:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e64:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000e66:	2200      	movs	r2, #0
 8000e68:	e7f3      	b.n	8000e52 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000e6a:	bf00      	nop
 8000e6c:	20014036 	.word	0x20014036
 8000e70:	20014032 	.word	0x20014032
 8000e74:	20014034 	.word	0x20014034

08000e78 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000e78:	b570      	push	{r4, r5, r6, lr}
 8000e7a:	460d      	mov	r5, r1
 8000e7c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000e7e:	b935      	cbnz	r5, 8000e8e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000e80:	4b09      	ldr	r3, [pc, #36]	@ (8000ea8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000e82:	4a0a      	ldr	r2, [pc, #40]	@ (8000eac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000e84:	480a      	ldr	r0, [pc, #40]	@ (8000eb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000e86:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8000e8a:	f022 fa79 	bl	8023380 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000e8e:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000e92:	4b08      	ldr	r3, [pc, #32]	@ (8000eb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000e94:	3a00      	subs	r2, #0
 8000e96:	bf18      	it	ne
 8000e98:	2201      	movne	r2, #1
 8000e9a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000e9c:	6803      	ldr	r3, [r0, #0]
    }
 8000e9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000ea2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ea6:	4718      	bx	r3
 8000ea8:	080248a4 	.word	0x080248a4
 8000eac:	080248dc 	.word	0x080248dc
 8000eb0:	0802492a 	.word	0x0802492a
 8000eb4:	2001403c 	.word	0x2001403c

08000eb8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000eb8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000eba:	4b09      	ldr	r3, [pc, #36]	@ (8000ee0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000ebc:	881b      	ldrh	r3, [r3, #0]
 8000ebe:	428b      	cmp	r3, r1
 8000ec0:	d803      	bhi.n	8000eca <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000ec2:	4b08      	ldr	r3, [pc, #32]	@ (8000ee4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000ec4:	881b      	ldrh	r3, [r3, #0]
 8000ec6:	4293      	cmp	r3, r2
 8000ec8:	d905      	bls.n	8000ed6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000eca:	4b07      	ldr	r3, [pc, #28]	@ (8000ee8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000ecc:	4a07      	ldr	r2, [pc, #28]	@ (8000eec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000ece:	4808      	ldr	r0, [pc, #32]	@ (8000ef0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000ed0:	21a3      	movs	r1, #163	@ 0xa3
 8000ed2:	f022 fa55 	bl	8023380 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000ed6:	4b07      	ldr	r3, [pc, #28]	@ (8000ef4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000ed8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000eda:	4b07      	ldr	r3, [pc, #28]	@ (8000ef8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000edc:	801a      	strh	r2, [r3, #0]
    }
 8000ede:	bd08      	pop	{r3, pc}
 8000ee0:	20014032 	.word	0x20014032
 8000ee4:	20014034 	.word	0x20014034
 8000ee8:	0802496f 	.word	0x0802496f
 8000eec:	080249d2 	.word	0x080249d2
 8000ef0:	0802492a 	.word	0x0802492a
 8000ef4:	20014038 	.word	0x20014038
 8000ef8:	2001403a 	.word	0x2001403a

08000efc <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000efc:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000efe:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000f02:	b118      	cbz	r0, 8000f0c <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000f04:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000f06:	6803      	ldr	r3, [r0, #0]
 8000f08:	681b      	ldr	r3, [r3, #0]
 8000f0a:	4718      	bx	r3
    }
 8000f0c:	4770      	bx	lr
	...

08000f10 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000f10:	2101      	movs	r1, #1
{
 8000f12:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000f14:	2200      	movs	r2, #0
 8000f16:	4608      	mov	r0, r1
 8000f18:	f006 fef4 	bl	8007d04 <osSemaphoreNew>
 8000f1c:	4b0a      	ldr	r3, [pc, #40]	@ (8000f48 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000f1e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000f20:	b928      	cbnz	r0, 8000f2e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000f22:	4b0a      	ldr	r3, [pc, #40]	@ (8000f4c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000f24:	4a0a      	ldr	r2, [pc, #40]	@ (8000f50 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000f26:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000f28:	480a      	ldr	r0, [pc, #40]	@ (8000f54 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000f2a:	f022 fa29 	bl	8023380 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000f2e:	2200      	movs	r2, #0
 8000f30:	2104      	movs	r1, #4
 8000f32:	2001      	movs	r0, #1
 8000f34:	f006 ff98 	bl	8007e68 <osMessageQueueNew>
 8000f38:	4b07      	ldr	r3, [pc, #28]	@ (8000f58 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000f3a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000f3c:	b918      	cbnz	r0, 8000f46 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000f3e:	4b07      	ldr	r3, [pc, #28]	@ (8000f5c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000f40:	4a03      	ldr	r2, [pc, #12]	@ (8000f50 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000f42:	212c      	movs	r1, #44	@ 0x2c
 8000f44:	e7f0      	b.n	8000f28 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000f46:	bd08      	pop	{r3, pc}
 8000f48:	200004c0 	.word	0x200004c0
 8000f4c:	08024a15 	.word	0x08024a15
 8000f50:	08024a5e 	.word	0x08024a5e
 8000f54:	08024a8d 	.word	0x08024a8d
 8000f58:	200004bc 	.word	0x200004bc
 8000f5c:	08024ae7 	.word	0x08024ae7

08000f60 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000f60:	4b02      	ldr	r3, [pc, #8]	@ (8000f6c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000f62:	f04f 31ff 	mov.w	r1, #4294967295
 8000f66:	6818      	ldr	r0, [r3, #0]
 8000f68:	f006 bf16 	b.w	8007d98 <osSemaphoreAcquire>
 8000f6c:	200004c0 	.word	0x200004c0

08000f70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000f70:	4b01      	ldr	r3, [pc, #4]	@ (8000f78 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000f72:	6818      	ldr	r0, [r3, #0]
 8000f74:	f006 bf3c 	b.w	8007df0 <osSemaphoreRelease>
 8000f78:	200004c0 	.word	0x200004c0

08000f7c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000f7c:	4b02      	ldr	r3, [pc, #8]	@ (8000f88 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000f7e:	2100      	movs	r1, #0
 8000f80:	6818      	ldr	r0, [r3, #0]
 8000f82:	f006 bf09 	b.w	8007d98 <osSemaphoreAcquire>
 8000f86:	bf00      	nop
 8000f88:	200004c0 	.word	0x200004c0

08000f8c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000f8c:	f7ff bff0 	b.w	8000f70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000f90 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000f90:	4803      	ldr	r0, [pc, #12]	@ (8000fa0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000f92:	4904      	ldr	r1, [pc, #16]	@ (8000fa4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000f94:	6800      	ldr	r0, [r0, #0]
 8000f96:	2300      	movs	r3, #0
 8000f98:	461a      	mov	r2, r3
 8000f9a:	f006 bfa0 	b.w	8007ede <osMessageQueuePut>
 8000f9e:	bf00      	nop
 8000fa0:	200004bc 	.word	0x200004bc
 8000fa4:	20000004 	.word	0x20000004

08000fa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000fa8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000faa:	4c08      	ldr	r4, [pc, #32]	@ (8000fcc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000fac:	2300      	movs	r3, #0
 8000fae:	461a      	mov	r2, r3
 8000fb0:	a901      	add	r1, sp, #4
 8000fb2:	6820      	ldr	r0, [r4, #0]
 8000fb4:	f006 ffc4 	bl	8007f40 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000fb8:	6820      	ldr	r0, [r4, #0]
 8000fba:	f04f 33ff 	mov.w	r3, #4294967295
 8000fbe:	2200      	movs	r2, #0
 8000fc0:	a901      	add	r1, sp, #4
 8000fc2:	f006 ffbd 	bl	8007f40 <osMessageQueueGet>
}
 8000fc6:	b002      	add	sp, #8
 8000fc8:	bd10      	pop	{r4, pc}
 8000fca:	bf00      	nop
 8000fcc:	200004bc 	.word	0x200004bc

08000fd0 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000fd0:	6803      	ldr	r3, [r0, #0]
 8000fd2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000fd4:	4718      	bx	r3

08000fd6 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000fd6:	2001      	movs	r0, #1
 8000fd8:	4770      	bx	lr

08000fda <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000fda:	6803      	ldr	r3, [r0, #0]
 8000fdc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000fde:	4718      	bx	r3

08000fe0 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000fe0:	e7fe      	b.n	8000fe0 <DMA2D_XferErrorCallback>

08000fe2 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000fe2:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000fe6:	4770      	bx	lr

08000fe8 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000fe8:	4b05      	ldr	r3, [pc, #20]	@ (8001000 <_ZN8STM32DMAD1Ev+0x18>)
 8000fea:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000fec:	4b05      	ldr	r3, [pc, #20]	@ (8001004 <_ZN8STM32DMAD1Ev+0x1c>)
 8000fee:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000ff2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000ff6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000ffa:	f3bf 8f6f 	isb	sy
}
 8000ffe:	4770      	bx	lr
 8001000:	080254a4 	.word	0x080254a4
 8001004:	e000e100 	.word	0xe000e100

08001008 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001008:	b510      	push	{r4, lr}
 800100a:	4604      	mov	r4, r0
}
 800100c:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001010:	f7ff ffea 	bl	8000fe8 <_ZN8STM32DMAD1Ev>
 8001014:	4620      	mov	r0, r4
 8001016:	f021 fa30 	bl	802247a <_ZdlPvj>
 800101a:	4620      	mov	r0, r4
 800101c:	bd10      	pop	{r4, pc}
	...

08001020 <_ZN8STM32DMA10initializeEv>:
{
 8001020:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001022:	2300      	movs	r3, #0
 8001024:	9301      	str	r3, [sp, #4]
 8001026:	4b0e      	ldr	r3, [pc, #56]	@ (8001060 <_ZN8STM32DMA10initializeEv+0x40>)
 8001028:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800102a:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800102e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001030:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001032:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8001036:	9201      	str	r2, [sp, #4]
 8001038:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800103a:	691a      	ldr	r2, [r3, #16]
 800103c:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8001040:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001042:	691a      	ldr	r2, [r3, #16]
 8001044:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8001048:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800104a:	4b06      	ldr	r3, [pc, #24]	@ (8001064 <_ZN8STM32DMA10initializeEv+0x44>)
 800104c:	4a06      	ldr	r2, [pc, #24]	@ (8001068 <_ZN8STM32DMA10initializeEv+0x48>)
 800104e:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8001050:	4a06      	ldr	r2, [pc, #24]	@ (800106c <_ZN8STM32DMA10initializeEv+0x4c>)
 8001052:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001054:	4b06      	ldr	r3, [pc, #24]	@ (8001070 <_ZN8STM32DMA10initializeEv+0x50>)
 8001056:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800105a:	609a      	str	r2, [r3, #8]
}
 800105c:	b002      	add	sp, #8
 800105e:	4770      	bx	lr
 8001060:	40023800 	.word	0x40023800
 8001064:	200030f0 	.word	0x200030f0
 8001068:	080012c1 	.word	0x080012c1
 800106c:	08000fe1 	.word	0x08000fe1
 8001070:	e000e100 	.word	0xe000e100

08001074 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8001074:	b508      	push	{r3, lr}
    switch (format)
 8001076:	280a      	cmp	r0, #10
 8001078:	d809      	bhi.n	800108e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 800107a:	e8df f000 	tbb	[pc, r0]
 800107e:	1006      	.short	0x1006
 8001080:	0808080e 	.word	0x0808080e
 8001084:	10101008 	.word	0x10101008
 8001088:	10          	.byte	0x10
 8001089:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800108a:	2002      	movs	r0, #2
}
 800108c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 800108e:	4b05      	ldr	r3, [pc, #20]	@ (80010a4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001090:	4a05      	ldr	r2, [pc, #20]	@ (80010a8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001092:	4806      	ldr	r0, [pc, #24]	@ (80010ac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001094:	2190      	movs	r1, #144	@ 0x90
 8001096:	f022 f973 	bl	8023380 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800109a:	2000      	movs	r0, #0
 800109c:	e7f6      	b.n	800108c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800109e:	2001      	movs	r0, #1
    return dma2dColorMode;
 80010a0:	e7f4      	b.n	800108c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80010a2:	bf00      	nop
 80010a4:	08024b29 	.word	0x08024b29
 80010a8:	08024b44 	.word	0x08024b44
 80010ac:	08024b8f 	.word	0x08024b8f

080010b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80010b0:	b538      	push	{r3, r4, r5, lr}
 80010b2:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80010b4:	7f88      	ldrb	r0, [r1, #30]
 80010b6:	f7ff ffdd 	bl	8001074 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80010ba:	8aa5      	ldrh	r5, [r4, #20]
 80010bc:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80010be:	4b16      	ldr	r3, [pc, #88]	@ (8001118 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80010c0:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80010c2:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80010c4:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 80010c8:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80010ca:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80010cc:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80010ce:	1b52      	subs	r2, r2, r5
 80010d0:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80010d2:	6825      	ldr	r5, [r4, #0]
 80010d4:	2d08      	cmp	r5, #8
 80010d6:	d10e      	bne.n	80010f6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80010d8:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80010da:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80010dc:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80010de:	7f20      	ldrb	r0, [r4, #28]
 80010e0:	4a0e      	ldr	r2, [pc, #56]	@ (800111c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 80010e2:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80010e6:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 80010e8:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80010ea:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 80010ec:	4a0c      	ldr	r2, [pc, #48]	@ (8001120 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80010ee:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80010f0:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 80010f2:	601a      	str	r2, [r3, #0]
    }
}
 80010f4:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 80010f6:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80010f8:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 80010fa:	611a      	str	r2, [r3, #16]
 80010fc:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 80010fe:	0a0a      	lsrs	r2, r1, #8
 8001100:	0948      	lsrs	r0, r1, #5
 8001102:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001106:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800110a:	4302      	orrs	r2, r0
 800110c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001110:	430a      	orrs	r2, r1
 8001112:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001114:	4a03      	ldr	r2, [pc, #12]	@ (8001124 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001116:	e7ec      	b.n	80010f2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001118:	4002b000 	.word	0x4002b000
 800111c:	00010009 	.word	0x00010009
 8001120:	00022301 	.word	0x00022301
 8001124:	00032301 	.word	0x00032301

08001128 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001128:	b508      	push	{r3, lr}
    switch (format)
 800112a:	280b      	cmp	r0, #11
 800112c:	d80b      	bhi.n	8001146 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 800112e:	e8df f000 	tbb	[pc, r0]
 8001132:	1206      	.short	0x1206
 8001134:	0a0a0a10 	.word	0x0a0a0a10
 8001138:	0808080a 	.word	0x0808080a
 800113c:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800113e:	2002      	movs	r0, #2
}
 8001140:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001142:	2005      	movs	r0, #5
        break;
 8001144:	e7fc      	b.n	8001140 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8001146:	4b05      	ldr	r3, [pc, #20]	@ (800115c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001148:	4a05      	ldr	r2, [pc, #20]	@ (8001160 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 800114a:	4806      	ldr	r0, [pc, #24]	@ (8001164 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 800114c:	216f      	movs	r1, #111	@ 0x6f
 800114e:	f022 f917 	bl	8023380 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001152:	2000      	movs	r0, #0
 8001154:	e7f4      	b.n	8001140 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8001156:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001158:	e7f2      	b.n	8001140 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 800115a:	bf00      	nop
 800115c:	08024b29 	.word	0x08024b29
 8001160:	08024be7 	.word	0x08024be7
 8001164:	08024b8f 	.word	0x08024b8f

08001168 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8001168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800116c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001170:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001172:	4640      	mov	r0, r8
 8001174:	f7ff ffd8 	bl	8001128 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001178:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800117a:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800117c:	4638      	mov	r0, r7
 800117e:	f7ff ffd3 	bl	8001128 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8001182:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001184:	4638      	mov	r0, r7
 8001186:	f7ff ff75 	bl	8001074 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800118a:	8aa1      	ldrh	r1, [r4, #20]
 800118c:	8b62      	ldrh	r2, [r4, #26]
 800118e:	4b44      	ldr	r3, [pc, #272]	@ (80012a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001190:	1a52      	subs	r2, r2, r1
 8001192:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001194:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001196:	8b22      	ldrh	r2, [r4, #24]
 8001198:	1a52      	subs	r2, r2, r1
 800119a:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800119c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800119e:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80011a0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80011a4:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80011a6:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80011a8:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80011aa:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80011ac:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 80011ae:	6820      	ldr	r0, [r4, #0]
 80011b0:	2880      	cmp	r0, #128	@ 0x80
 80011b2:	d028      	beq.n	8001206 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 80011b4:	7f22      	ldrb	r2, [r4, #28]
 80011b6:	d80f      	bhi.n	80011d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 80011b8:	2820      	cmp	r0, #32
 80011ba:	d067      	beq.n	800128c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 80011bc:	2840      	cmp	r0, #64	@ 0x40
 80011be:	d065      	beq.n	800128c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 80011c0:	2804      	cmp	r0, #4
 80011c2:	d01a      	beq.n	80011fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011c4:	4b36      	ldr	r3, [pc, #216]	@ (80012a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80011c6:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 80011ca:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 80011ce:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011d0:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 80011d2:	d061      	beq.n	8001298 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80011d4:	4a33      	ldr	r2, [pc, #204]	@ (80012a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 80011d6:	e044      	b.n	8001262 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 80011d8:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 80011dc:	d004      	beq.n	80011e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 80011de:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 80011e2:	d1ef      	bne.n	80011c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011e4:	4830      	ldr	r0, [pc, #192]	@ (80012a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 80011e6:	e000      	b.n	80011ea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011e8:	4830      	ldr	r0, [pc, #192]	@ (80012ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011ea:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 80011ee:	61da      	str	r2, [r3, #28]
 80011f0:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80011f2:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80011f4:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80011f6:	6159      	str	r1, [r3, #20]
 80011f8:	e032      	b.n	8001260 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80011fa:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 80011fe:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001202:	61da      	str	r2, [r3, #28]
 8001204:	e7f6      	b.n	80011f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001206:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001208:	1d02      	adds	r2, r0, #4
 800120a:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800120c:	7f22      	ldrb	r2, [r4, #28]
 800120e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001212:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001216:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001218:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800121a:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800121c:	7801      	ldrb	r1, [r0, #0]
 800121e:	b141      	cbz	r1, 8001232 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001220:	2901      	cmp	r1, #1
 8001222:	d021      	beq.n	8001268 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001224:	4b22      	ldr	r3, [pc, #136]	@ (80012b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001226:	4a23      	ldr	r2, [pc, #140]	@ (80012b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001228:	4823      	ldr	r0, [pc, #140]	@ (80012b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 800122a:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 800122e:	f022 f8a7 	bl	8023380 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001232:	69da      	ldr	r2, [r3, #28]
 8001234:	8841      	ldrh	r1, [r0, #2]
 8001236:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 800123a:	3901      	subs	r1, #1
 800123c:	f022 0210 	bic.w	r2, r2, #16
 8001240:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001244:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8001246:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001248:	4b15      	ldr	r3, [pc, #84]	@ (80012a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800124a:	69da      	ldr	r2, [r3, #28]
 800124c:	f042 0220 	orr.w	r2, r2, #32
 8001250:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001252:	69da      	ldr	r2, [r3, #28]
 8001254:	0692      	lsls	r2, r2, #26
 8001256:	d4fc      	bmi.n	8001252 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001258:	2210      	movs	r2, #16
 800125a:	609a      	str	r2, [r3, #8]
            if (blend)
 800125c:	2900      	cmp	r1, #0
 800125e:	d0b9      	beq.n	80011d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001260:	4a16      	ldr	r2, [pc, #88]	@ (80012bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001262:	601a      	str	r2, [r3, #0]
}
 8001264:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8001268:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800126c:	69da      	ldr	r2, [r3, #28]
 800126e:	8840      	ldrh	r0, [r0, #2]
 8001270:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8001274:	f100 30ff 	add.w	r0, r0, #4294967295
 8001278:	f022 0210 	bic.w	r2, r2, #16
 800127c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8001280:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8001284:	bf18      	it	ne
 8001286:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001288:	61da      	str	r2, [r3, #28]
                break;
 800128a:	e7dd      	b.n	8001248 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800128c:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001290:	4b03      	ldr	r3, [pc, #12]	@ (80012a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001292:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001296:	e7b4      	b.n	8001202 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001298:	f242 3201 	movw	r2, #8961	@ 0x2301
 800129c:	e7e1      	b.n	8001262 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800129e:	bf00      	nop
 80012a0:	4002b000 	.word	0x4002b000
 80012a4:	00012301 	.word	0x00012301
 80012a8:	00020009 	.word	0x00020009
 80012ac:	0002000a 	.word	0x0002000a
 80012b0:	08024c31 	.word	0x08024c31
 80012b4:	08024c4b 	.word	0x08024c4b
 80012b8:	08024b8f 	.word	0x08024b8f
 80012bc:	00022301 	.word	0x00022301

080012c0 <DMA2D_XferCpltCallback>:
        return instance;
 80012c0:	4b02      	ldr	r3, [pc, #8]	@ (80012cc <DMA2D_XferCpltCallback+0xc>)
 80012c2:	681b      	ldr	r3, [r3, #0]
 80012c4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80012c6:	6803      	ldr	r3, [r0, #0]
 80012c8:	695b      	ldr	r3, [r3, #20]
 80012ca:	4718      	bx	r3
 80012cc:	20014040 	.word	0x20014040

080012d0 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80012d0:	b570      	push	{r4, r5, r6, lr}
 80012d2:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80012d4:	4625      	mov	r5, r4
 80012d6:	4b0a      	ldr	r3, [pc, #40]	@ (8001300 <_ZN8STM32DMAC1Ev+0x30>)
 80012d8:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80012da:	2600      	movs	r6, #0
 80012dc:	6060      	str	r0, [r4, #4]
 80012de:	7226      	strb	r6, [r4, #8]
 80012e0:	7266      	strb	r6, [r4, #9]
 80012e2:	f845 3b20 	str.w	r3, [r5], #32
 80012e6:	2260      	movs	r2, #96	@ 0x60
 80012e8:	4629      	mov	r1, r5
 80012ea:	f00a fd6f 	bl	800bdcc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80012ee:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 80012f2:	60ee      	str	r6, [r5, #12]
 80012f4:	3524      	adds	r5, #36	@ 0x24
 80012f6:	429d      	cmp	r5, r3
 80012f8:	d1fb      	bne.n	80012f2 <_ZN8STM32DMAC1Ev+0x22>
}
 80012fa:	4620      	mov	r0, r4
 80012fc:	bd70      	pop	{r4, r5, r6, pc}
 80012fe:	bf00      	nop
 8001300:	080254a4 	.word	0x080254a4

08001304 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001304:	4b03      	ldr	r3, [pc, #12]	@ (8001314 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8001306:	681a      	ldr	r2, [r3, #0]
 8001308:	07d2      	lsls	r2, r2, #31
 800130a:	d4fc      	bmi.n	8001306 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800130c:	2223      	movs	r2, #35	@ 0x23
 800130e:	609a      	str	r2, [r3, #8]
}
 8001310:	4770      	bx	lr
 8001312:	bf00      	nop
 8001314:	4002b000 	.word	0x4002b000

08001318 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8001318:	4770      	bx	lr
	...

0800131c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 800131c:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800131e:	4c0f      	ldr	r4, [pc, #60]	@ (800135c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8001320:	6825      	ldr	r5, [r4, #0]
 8001322:	07ed      	lsls	r5, r5, #31
 8001324:	d4fc      	bmi.n	8001320 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001326:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001328:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800132a:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800132c:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001330:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8001332:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001334:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001336:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001338:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 800133a:	d00a      	beq.n	8001352 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800133c:	4908      	ldr	r1, [pc, #32]	@ (8001360 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800133e:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001340:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8001344:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001346:	4b07      	ldr	r3, [pc, #28]	@ (8001364 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8001348:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 800134a:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 800134c:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 800134e:	6023      	str	r3, [r4, #0]
    }
}
 8001350:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001352:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8001354:	9b03      	ldr	r3, [sp, #12]
 8001356:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001358:	4b03      	ldr	r3, [pc, #12]	@ (8001368 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 800135a:	e7f8      	b.n	800134e <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 800135c:	4002b000 	.word	0x4002b000
 8001360:	00010009 	.word	0x00010009
 8001364:	00020001 	.word	0x00020001
 8001368:	00030001 	.word	0x00030001

0800136c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800136c:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800136e:	4c0e      	ldr	r4, [pc, #56]	@ (80013a8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8001370:	6825      	ldr	r5, [r4, #0]
 8001372:	07ed      	lsls	r5, r5, #31
 8001374:	d4fc      	bmi.n	8001370 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001376:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001378:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800137a:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800137c:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001380:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8001382:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001384:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001386:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001388:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800138a:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 800138c:	d008      	beq.n	80013a0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800138e:	061b      	lsls	r3, r3, #24
 8001390:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8001394:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001396:	4b05      	ldr	r3, [pc, #20]	@ (80013ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001398:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800139a:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 800139c:	6023      	str	r3, [r4, #0]
    }
}
 800139e:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80013a0:	4b03      	ldr	r3, [pc, #12]	@ (80013b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 80013a2:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80013a4:	2301      	movs	r3, #1
 80013a6:	e7f9      	b.n	800139c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 80013a8:	4002b000 	.word	0x4002b000
 80013ac:	00020001 	.word	0x00020001
 80013b0:	ff020002 	.word	0xff020002

080013b4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 80013b4:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80013b6:	4c0b      	ldr	r4, [pc, #44]	@ (80013e4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 80013b8:	6825      	ldr	r5, [r4, #0]
 80013ba:	07ed      	lsls	r5, r5, #31
 80013bc:	d4fc      	bmi.n	80013b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80013be:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80013c0:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80013c2:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80013c4:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80013c6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80013ca:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80013cc:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80013d0:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80013d2:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80013d4:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80013d6:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80013d8:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80013da:	4b03      	ldr	r3, [pc, #12]	@ (80013e8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80013dc:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80013de:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80013e0:	6023      	str	r3, [r4, #0]
}
 80013e2:	bd30      	pop	{r4, r5, pc}
 80013e4:	4002b000 	.word	0x4002b000
 80013e8:	00020001 	.word	0x00020001

080013ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80013ec:	2001      	movs	r0, #1
 80013ee:	4770      	bx	lr

080013f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80013f0:	200c      	movs	r0, #12
 80013f2:	4770      	bx	lr

080013f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80013f4:	230c      	movs	r3, #12
 80013f6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80013fa:	3008      	adds	r0, #8
 80013fc:	4770      	bx	lr

080013fe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80013fe:	230c      	movs	r3, #12
 8001400:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001404:	3008      	adds	r0, #8
 8001406:	4770      	bx	lr

08001408 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001408:	2001      	movs	r0, #1
 800140a:	4770      	bx	lr

0800140c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800140c:	f44f 6072 	mov.w	r0, #3872	@ 0xf20
 8001410:	4770      	bx	lr

08001412 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001412:	f44f 6372 	mov.w	r3, #3872	@ 0xf20
 8001416:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800141a:	3008      	adds	r0, #8
 800141c:	4770      	bx	lr

0800141e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800141e:	f44f 6372 	mov.w	r3, #3872	@ 0xf20
 8001422:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001426:	3008      	adds	r0, #8
 8001428:	4770      	bx	lr

0800142a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800142a:	2001      	movs	r0, #1
 800142c:	4770      	bx	lr

0800142e <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800142e:	2010      	movs	r0, #16
 8001430:	4770      	bx	lr

08001432 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001432:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001436:	3008      	adds	r0, #8
 8001438:	4770      	bx	lr

0800143a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800143a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800143e:	3008      	adds	r0, #8
 8001440:	4770      	bx	lr

08001442 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8001442:	4608      	mov	r0, r1
 8001444:	f001 bdbc 	b.w	8002fc0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001448 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001448:	b510      	push	{r4, lr}
 800144a:	4b03      	ldr	r3, [pc, #12]	@ (8001458 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800144c:	6003      	str	r3, [r0, #0]
 800144e:	4604      	mov	r4, r0
 8001450:	f009 fada 	bl	800aa08 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001454:	4620      	mov	r0, r4
 8001456:	bd10      	pop	{r4, pc}
 8001458:	0802555c 	.word	0x0802555c

0800145c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800145c:	b510      	push	{r4, lr}
 800145e:	4604      	mov	r4, r0
 8001460:	f7ff fff2 	bl	8001448 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001464:	4620      	mov	r0, r4
 8001466:	2114      	movs	r1, #20
 8001468:	f021 f807 	bl	802247a <_ZdlPvj>
 800146c:	4620      	mov	r0, r4
 800146e:	bd10      	pop	{r4, pc}

08001470 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001470:	b510      	push	{r4, lr}
 8001472:	4b03      	ldr	r3, [pc, #12]	@ (8001480 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001474:	6003      	str	r3, [r0, #0]
 8001476:	4604      	mov	r4, r0
 8001478:	f009 fac6 	bl	800aa08 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800147c:	4620      	mov	r0, r4
 800147e:	bd10      	pop	{r4, pc}
 8001480:	08025528 	.word	0x08025528

08001484 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001484:	b510      	push	{r4, lr}
 8001486:	4604      	mov	r4, r0
 8001488:	f7ff fff2 	bl	8001470 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800148c:	4620      	mov	r0, r4
 800148e:	f640 7128 	movw	r1, #3880	@ 0xf28
 8001492:	f020 fff2 	bl	802247a <_ZdlPvj>
 8001496:	4620      	mov	r0, r4
 8001498:	bd10      	pop	{r4, pc}
	...

0800149c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800149c:	b510      	push	{r4, lr}
 800149e:	4b03      	ldr	r3, [pc, #12]	@ (80014ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80014a0:	6003      	str	r3, [r0, #0]
 80014a2:	4604      	mov	r4, r0
 80014a4:	f009 fab0 	bl	800aa08 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80014a8:	4620      	mov	r0, r4
 80014aa:	bd10      	pop	{r4, pc}
 80014ac:	080254f4 	.word	0x080254f4

080014b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80014b0:	b510      	push	{r4, lr}
 80014b2:	4604      	mov	r4, r0
 80014b4:	f7ff fff2 	bl	800149c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014b8:	4620      	mov	r0, r4
 80014ba:	2118      	movs	r1, #24
 80014bc:	f020 ffdd 	bl	802247a <_ZdlPvj>
 80014c0:	4620      	mov	r0, r4
 80014c2:	bd10      	pop	{r4, pc}

080014c4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80014c4:	b510      	push	{r4, lr}
 80014c6:	4b08      	ldr	r3, [pc, #32]	@ (80014e8 <_ZN12FrontendHeapD1Ev+0x24>)
 80014c8:	6003      	str	r3, [r0, #0]
 80014ca:	4604      	mov	r4, r0
 80014cc:	f600 7054 	addw	r0, r0, #3924	@ 0xf54
 80014d0:	f7ff ffba 	bl	8001448 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014d4:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 80014d8:	f7ff ffca 	bl	8001470 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014dc:	f104 0014 	add.w	r0, r4, #20
 80014e0:	f7ff ffdc 	bl	800149c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014e4:	4620      	mov	r0, r4
 80014e6:	bd10      	pop	{r4, pc}
 80014e8:	08025590 	.word	0x08025590

080014ec <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80014ec:	b508      	push	{r3, lr}
 80014ee:	4802      	ldr	r0, [pc, #8]	@ (80014f8 <__tcf_0+0xc>)
 80014f0:	f7ff ffe8 	bl	80014c4 <_ZN12FrontendHeapD1Ev>
 80014f4:	bd08      	pop	{r3, pc}
 80014f6:	bf00      	nop
 80014f8:	2000139c 	.word	0x2000139c

080014fc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80014fc:	b510      	push	{r4, lr}
 80014fe:	4604      	mov	r4, r0
 8001500:	f7ff ffe0 	bl	80014c4 <_ZN12FrontendHeapD1Ev>
 8001504:	4620      	mov	r0, r4
 8001506:	f241 01c8 	movw	r1, #4296	@ 0x10c8
 800150a:	f020 ffb6 	bl	802247a <_ZdlPvj>
 800150e:	4620      	mov	r0, r4
 8001510:	bd10      	pop	{r4, pc}
	...

08001514 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001514:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001518:	f001 fbd4 	bl	8002cc4 <_ZN14BitmapDatabase11getInstanceEv>
 800151c:	4605      	mov	r5, r0
 800151e:	f001 fbd5 	bl	8002ccc <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001522:	2400      	movs	r4, #0
 8001524:	4601      	mov	r1, r0
 8001526:	4623      	mov	r3, r4
 8001528:	4628      	mov	r0, r5
 800152a:	4622      	mov	r2, r4
 800152c:	9400      	str	r4, [sp, #0]
 800152e:	f011 ff11 	bl	8013354 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001532:	4b27      	ldr	r3, [pc, #156]	@ (80015d0 <touchgfx_init+0xbc>)
 8001534:	4a27      	ldr	r2, [pc, #156]	@ (80015d4 <touchgfx_init+0xc0>)
 8001536:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001538:	4620      	mov	r0, r4
 800153a:	f001 ff0f 	bl	800335c <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 800153e:	4d26      	ldr	r5, [pc, #152]	@ (80015d8 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001540:	4b26      	ldr	r3, [pc, #152]	@ (80015dc <touchgfx_init+0xc8>)
 8001542:	4a27      	ldr	r2, [pc, #156]	@ (80015e0 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8001544:	4827      	ldr	r0, [pc, #156]	@ (80015e4 <touchgfx_init+0xd0>)
 8001546:	609a      	str	r2, [r3, #8]
 8001548:	f011 fe6c 	bl	8013224 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800154c:	682b      	ldr	r3, [r5, #0]
 800154e:	f3bf 8f5b 	dmb	ish
 8001552:	07db      	lsls	r3, r3, #31
 8001554:	d435      	bmi.n	80015c2 <touchgfx_init+0xae>
 8001556:	4628      	mov	r0, r5
 8001558:	f020 ff91 	bl	802247e <__cxa_guard_acquire>
 800155c:	b388      	cbz	r0, 80015c2 <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800155e:	4c22      	ldr	r4, [pc, #136]	@ (80015e8 <touchgfx_init+0xd4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001560:	4b22      	ldr	r3, [pc, #136]	@ (80015ec <touchgfx_init+0xd8>)
 8001562:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001564:	f604 766c 	addw	r6, r4, #3948	@ 0xf6c
        : presenterStorage(pres),
 8001568:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800156c:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 8001570:	f604 7754 	addw	r7, r4, #3924	@ 0xf54
        : presenterStorage(pres),
 8001574:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001576:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 800157a:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 800157c:	6126      	str	r6, [r4, #16]
 800157e:	f009 fa45 	bl	800aa0c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001582:	4b1b      	ldr	r3, [pc, #108]	@ (80015f0 <touchgfx_init+0xdc>)
 8001584:	6163      	str	r3, [r4, #20]
 8001586:	4640      	mov	r0, r8
 8001588:	f009 fa40 	bl	800aa0c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800158c:	4b19      	ldr	r3, [pc, #100]	@ (80015f4 <touchgfx_init+0xe0>)
 800158e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001590:	4638      	mov	r0, r7
 8001592:	f009 fa3b 	bl	800aa0c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001596:	4b18      	ldr	r3, [pc, #96]	@ (80015f8 <touchgfx_init+0xe4>)
 8001598:	f8c4 3f54 	str.w	r3, [r4, #3924]	@ 0xf54
 800159c:	f604 7068 	addw	r0, r4, #3944	@ 0xf68
 80015a0:	f001 ff52 	bl	8003448 <_ZN5ModelC1Ev>
 80015a4:	4622      	mov	r2, r4
 80015a6:	f604 7168 	addw	r1, r4, #3944	@ 0xf68
 80015aa:	4630      	mov	r0, r6
 80015ac:	f001 ff42 	bl	8003434 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80015b0:	4630      	mov	r0, r6
 80015b2:	f001 fd05 	bl	8002fc0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 80015b6:	4811      	ldr	r0, [pc, #68]	@ (80015fc <touchgfx_init+0xe8>)
 80015b8:	f021 ff00 	bl	80233bc <atexit>
 80015bc:	4628      	mov	r0, r5
 80015be:	f020 ff6a 	bl	8022496 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80015c2:	480f      	ldr	r0, [pc, #60]	@ (8001600 <touchgfx_init+0xec>)
}
 80015c4:	b002      	add	sp, #8
 80015c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80015ca:	f7ff bbe7 	b.w	8000d9c <_ZN11TouchGFXHAL10initializeEv>
 80015ce:	bf00      	nop
 80015d0:	200140a4 	.word	0x200140a4
 80015d4:	20000548 	.word	0x20000548
 80015d8:	20001398 	.word	0x20001398
 80015dc:	20000568 	.word	0x20000568
 80015e0:	2000054c 	.word	0x2000054c
 80015e4:	20000008 	.word	0x20000008
 80015e8:	2000139c 	.word	0x2000139c
 80015ec:	08025590 	.word	0x08025590
 80015f0:	080254f4 	.word	0x080254f4
 80015f4:	08025528 	.word	0x08025528
 80015f8:	0802555c 	.word	0x0802555c
 80015fc:	080014ed 	.word	0x080014ed
 8001600:	200004c4 	.word	0x200004c4

08001604 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001604:	4770      	bx	lr
	...

08001608 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001608:	4801      	ldr	r0, [pc, #4]	@ (8001610 <touchgfx_taskEntry+0x8>)
 800160a:	f7ff bbd5 	b.w	8000db8 <_ZN11TouchGFXHAL9taskEntryEv>
 800160e:	bf00      	nop
 8001610:	200004c4 	.word	0x200004c4

08001614 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001614:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001616:	4e26      	ldr	r6, [pc, #152]	@ (80016b0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001618:	4c26      	ldr	r4, [pc, #152]	@ (80016b4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 800161a:	4d27      	ldr	r5, [pc, #156]	@ (80016b8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 800161c:	4b27      	ldr	r3, [pc, #156]	@ (80016bc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800161e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001620:	4630      	mov	r0, r6
 8001622:	f7ff fe55 	bl	80012d0 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001626:	4628      	mov	r0, r5
 8001628:	f016 ff9a 	bl	8018560 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 800162c:	4824      	ldr	r0, [pc, #144]	@ (80016c0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 800162e:	f00f fef7 	bl	8011420 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8001632:	4b24      	ldr	r3, [pc, #144]	@ (80016c4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8001634:	4824      	ldr	r0, [pc, #144]	@ (80016c8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 8001636:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001638:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800163a:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800163e:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001642:	4922      	ldr	r1, [pc, #136]	@ (80016cc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001644:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001646:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 800164a:	4921      	ldr	r1, [pc, #132]	@ (80016d0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 800164c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8001650:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 8001654:	491f      	ldr	r1, [pc, #124]	@ (80016d4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001656:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 800165a:	491f      	ldr	r1, [pc, #124]	@ (80016d8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800165c:	481f      	ldr	r0, [pc, #124]	@ (80016dc <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 800165e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001660:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 8001662:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001666:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800166a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800166e:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001672:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001676:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 800167a:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 800167e:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 8001682:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 8001684:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8001688:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 800168a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800168e:	8001      	strh	r1, [r0, #0]
 8001690:	4813      	ldr	r0, [pc, #76]	@ (80016e0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 8001692:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001694:	4813      	ldr	r0, [pc, #76]	@ (80016e4 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8001696:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800169a:	8001      	strh	r1, [r0, #0]
 800169c:	4812      	ldr	r0, [pc, #72]	@ (80016e8 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 800169e:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80016a0:	4912      	ldr	r1, [pc, #72]	@ (80016ec <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80016a2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80016a4:	2201      	movs	r2, #1
 80016a6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80016aa:	4a11      	ldr	r2, [pc, #68]	@ (80016f0 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80016ac:	601a      	str	r2, [r3, #0]
}
 80016ae:	bd70      	pop	{r4, r5, r6, pc}
 80016b0:	200005f4 	.word	0x200005f4
 80016b4:	20001394 	.word	0x20001394
 80016b8:	20000568 	.word	0x20000568
 80016bc:	08024894 	.word	0x08024894
 80016c0:	2000054c 	.word	0x2000054c
 80016c4:	200004c4 	.word	0x200004c4
 80016c8:	01010000 	.word	0x01010000
 80016cc:	01000001 	.word	0x01000001
 80016d0:	00500400 	.word	0x00500400
 80016d4:	0014001a 	.word	0x0014001a
 80016d8:	20014040 	.word	0x20014040
 80016dc:	20014032 	.word	0x20014032
 80016e0:	20014038 	.word	0x20014038
 80016e4:	20014034 	.word	0x20014034
 80016e8:	2001403a 	.word	0x2001403a
 80016ec:	20014036 	.word	0x20014036
 80016f0:	080253b8 	.word	0x080253b8

080016f4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 80016f4:	4801      	ldr	r0, [pc, #4]	@ (80016fc <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80016f6:	f7ff bc77 	b.w	8000fe8 <_ZN8STM32DMAD1Ev>
 80016fa:	bf00      	nop
 80016fc:	200005f4 	.word	0x200005f4

08001700 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001700:	2000      	movs	r0, #0
 8001702:	4770      	bx	lr

08001704 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001704:	8081      	strh	r1, [r0, #4]
    }
 8001706:	4770      	bx	lr

08001708 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001708:	80c1      	strh	r1, [r0, #6]
    }
 800170a:	4770      	bx	lr

0800170c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800170c:	8101      	strh	r1, [r0, #8]
    }
 800170e:	4770      	bx	lr

08001710 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001710:	8141      	strh	r1, [r0, #10]
    }
 8001712:	4770      	bx	lr

08001714 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001714:	4770      	bx	lr

08001716 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001716:	4770      	bx	lr

08001718 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001718:	4770      	bx	lr

0800171a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800171a:	4770      	bx	lr

0800171c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800171c:	4770      	bx	lr

0800171e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800171e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001720:	88c4      	ldrh	r4, [r0, #6]
 8001722:	6803      	ldr	r3, [r0, #0]
 8001724:	1b12      	subs	r2, r2, r4
 8001726:	8884      	ldrh	r4, [r0, #4]
 8001728:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800172a:	1b09      	subs	r1, r1, r4
 800172c:	b212      	sxth	r2, r2
    }
 800172e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001732:	b209      	sxth	r1, r1
 8001734:	4718      	bx	r3

08001736 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001736:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800173a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800173c:	f04f 33ff 	mov.w	r3, #4294967295
 8001740:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001742:	6813      	ldr	r3, [r2, #0]
 8001744:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001746:	6010      	str	r0, [r2, #0]
    }
 8001748:	4770      	bx	lr

0800174a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800174a:	2000      	movs	r0, #0
 800174c:	4770      	bx	lr

0800174e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800174e:	888b      	ldrh	r3, [r1, #4]
 8001750:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001752:	2001      	movs	r0, #1
 8001754:	4770      	bx	lr

08001756 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001756:	4770      	bx	lr

08001758 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001758:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 800175c:	4770      	bx	lr

0800175e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800175e:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8001762:	4770      	bx	lr

08001764 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001764:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001766:	2200      	movs	r2, #0
        return rect.width;
 8001768:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800176c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001770:	8002      	strh	r2, [r0, #0]
 8001772:	8042      	strh	r2, [r0, #2]
 8001774:	8084      	strh	r4, [r0, #4]
 8001776:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001778:	bd10      	pop	{r4, pc}

0800177a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800177a:	2200      	movs	r2, #0
 800177c:	8002      	strh	r2, [r0, #0]
 800177e:	8042      	strh	r2, [r0, #2]
 8001780:	8082      	strh	r2, [r0, #4]
 8001782:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001784:	4770      	bx	lr

08001786 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8001786:	7701      	strb	r1, [r0, #28]
    }
 8001788:	4770      	bx	lr

0800178a <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 800178a:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 800178e:	4770      	bx	lr

08001790 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 8001790:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8001794:	4770      	bx	lr

08001796 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8001796:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 800179a:	4770      	bx	lr

0800179c <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 800179c:	2001      	movs	r0, #1
 800179e:	4770      	bx	lr

080017a0 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80017a0:	3098      	adds	r0, #152	@ 0x98
 80017a2:	4770      	bx	lr

080017a4 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80017a4:	308c      	adds	r0, #140	@ 0x8c
 80017a6:	4770      	bx	lr

080017a8 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80017a8:	3084      	adds	r0, #132	@ 0x84
 80017aa:	4770      	bx	lr

080017ac <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80017ac:	4770      	bx	lr

080017ae <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80017ae:	4770      	bx	lr

080017b0 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80017b0:	4770      	bx	lr
	...

080017b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80017b4:	4b03      	ldr	r3, [pc, #12]	@ (80017c4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80017b6:	2290      	movs	r2, #144	@ 0x90
 80017b8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80017bc:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80017c0:	4770      	bx	lr
 80017c2:	bf00      	nop
 80017c4:	e000e100 	.word	0xe000e100

080017c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80017c8:	4a09      	ldr	r2, [pc, #36]	@ (80017f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80017ca:	490a      	ldr	r1, [pc, #40]	@ (80017f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80017cc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 80017ce:	480a      	ldr	r0, [pc, #40]	@ (80017f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80017d0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80017d4:	3b01      	subs	r3, #1
 80017d6:	b29b      	uxth	r3, r3
 80017d8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 80017da:	6911      	ldr	r1, [r2, #16]
 80017dc:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80017e0:	3901      	subs	r1, #1
 80017e2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80017e4:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80017e6:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 80017e8:	f043 0301 	orr.w	r3, r3, #1
 80017ec:	6353      	str	r3, [r2, #52]	@ 0x34
}
 80017ee:	4770      	bx	lr
 80017f0:	40016800 	.word	0x40016800
 80017f4:	20002466 	.word	0x20002466
 80017f8:	20002464 	.word	0x20002464

080017fc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80017fc:	4b01      	ldr	r3, [pc, #4]	@ (8001804 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80017fe:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001802:	4770      	bx	lr
 8001804:	40016800 	.word	0x40016800

08001808 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001808:	4b02      	ldr	r3, [pc, #8]	@ (8001814 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800180a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800180c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001810:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001812:	4770      	bx	lr
 8001814:	40016800 	.word	0x40016800

08001818 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001818:	b510      	push	{r4, lr}
 800181a:	212c      	movs	r1, #44	@ 0x2c
 800181c:	4604      	mov	r4, r0
 800181e:	f020 fe2c 	bl	802247a <_ZdlPvj>
 8001822:	4620      	mov	r0, r4
 8001824:	bd10      	pop	{r4, pc}

08001826 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001826:	b510      	push	{r4, lr}
 8001828:	21bc      	movs	r1, #188	@ 0xbc
 800182a:	4604      	mov	r4, r0
 800182c:	f020 fe25 	bl	802247a <_ZdlPvj>
 8001830:	4620      	mov	r0, r4
 8001832:	bd10      	pop	{r4, pc}

08001834 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001834:	b570      	push	{r4, r5, r6, lr}
 8001836:	4604      	mov	r4, r0
    HAL::initialize();
 8001838:	f009 fbe7 	bl	800b00a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800183c:	6823      	ldr	r3, [r4, #0]
 800183e:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001840:	f00e fb86 	bl	800ff50 <_ZN8touchgfx11Application11getInstanceEv>
 8001844:	4601      	mov	r1, r0
 8001846:	4620      	mov	r0, r4
 8001848:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800184a:	6823      	ldr	r3, [r4, #0]
 800184c:	4a05      	ldr	r2, [pc, #20]	@ (8001864 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800184e:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 8001852:	4620      	mov	r0, r4
 8001854:	46ac      	mov	ip, r5
 8001856:	2300      	movs	r3, #0
}
 8001858:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800185c:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001860:	4760      	bx	ip
 8001862:	bf00      	nop
 8001864:	d004b000 	.word	0xd004b000

08001868 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001868:	f009 bbb6 	b.w	800afd8 <_ZN8touchgfx3HAL10beginFrameEv>

0800186c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800186c:	f009 bbc0 	b.w	800aff0 <_ZN8touchgfx3HAL8endFrameEv>

08001870 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001870:	f009 bb7c 	b.w	800af6c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001874 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001874:	f009 bceb 	b.w	800b24e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001878 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001878:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800187c:	b112      	cbz	r2, 8001884 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800187e:	6803      	ldr	r3, [r0, #0]
 8001880:	695b      	ldr	r3, [r3, #20]
 8001882:	4718      	bx	r3
    }
 8001884:	4770      	bx	lr

08001886 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001886:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800188a:	b11a      	cbz	r2, 8001894 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800188c:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8001890:	b102      	cbz	r2, 8001894 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001892:	6018      	str	r0, [r3, #0]
        }
    }
 8001894:	4770      	bx	lr
	...

08001898 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001898:	4b03      	ldr	r3, [pc, #12]	@ (80018a8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800189a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800189e:	609a      	str	r2, [r3, #8]
 80018a0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80018a4:	609a      	str	r2, [r3, #8]
}
 80018a6:	4770      	bx	lr
 80018a8:	e000e100 	.word	0xe000e100

080018ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80018ac:	4b08      	ldr	r3, [pc, #32]	@ (80018d0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80018ae:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80018b2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80018b6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80018ba:	f3bf 8f6f 	isb	sy
 80018be:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80018c2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80018c6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80018ca:	f3bf 8f6f 	isb	sy
}
 80018ce:	4770      	bx	lr
 80018d0:	e000e100 	.word	0xe000e100

080018d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80018d4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80018d6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80018d8:	4e12      	ldr	r6, [pc, #72]	@ (8001924 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80018da:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80018dc:	4b12      	ldr	r3, [pc, #72]	@ (8001928 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80018de:	6003      	str	r3, [r0, #0]
 80018e0:	6833      	ldr	r3, [r6, #0]
 80018e2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 80018e6:	4605      	mov	r5, r0
 80018e8:	b10a      	cbz	r2, 80018ee <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80018ea:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80018ec:	b900      	cbnz	r0, 80018f0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80018ee:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80018f0:	6803      	ldr	r3, [r0, #0]
 80018f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80018f4:	4798      	blx	r3
        return auxiliaryLCD;
 80018f6:	6833      	ldr	r3, [r6, #0]
 80018f8:	fab0 f480 	clz	r4, r0
 80018fc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80018fe:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001900:	b130      	cbz	r0, 8001910 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001902:	6803      	ldr	r3, [r0, #0]
 8001904:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001906:	4798      	blx	r3
 8001908:	2800      	cmp	r0, #0
 800190a:	bf08      	it	eq
 800190c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001910:	b92c      	cbnz	r4, 800191e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001912:	4b06      	ldr	r3, [pc, #24]	@ (800192c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001914:	4a06      	ldr	r2, [pc, #24]	@ (8001930 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001916:	4807      	ldr	r0, [pc, #28]	@ (8001934 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001918:	212c      	movs	r1, #44	@ 0x2c
 800191a:	f021 fd31 	bl	8023380 <__assert_func>
    }
 800191e:	4628      	mov	r0, r5
 8001920:	bd70      	pop	{r4, r5, r6, pc}
 8001922:	bf00      	nop
 8001924:	20014040 	.word	0x20014040
 8001928:	080255a4 	.word	0x080255a4
 800192c:	08024c89 	.word	0x08024c89
 8001930:	08024ce7 	.word	0x08024ce7
 8001934:	08024d20 	.word	0x08024d20

08001938 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001938:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 800193a:	4e25      	ldr	r6, [pc, #148]	@ (80019d0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 800193c:	6835      	ldr	r5, [r6, #0]
 800193e:	f3bf 8f5b 	dmb	ish
 8001942:	f015 0501 	ands.w	r5, r5, #1
 8001946:	d140      	bne.n	80019ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001948:	4630      	mov	r0, r6
 800194a:	f020 fd98 	bl	802247e <__cxa_guard_acquire>
 800194e:	2800      	cmp	r0, #0
 8001950:	d03b      	beq.n	80019ca <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 8001952:	4c20      	ldr	r4, [pc, #128]	@ (80019d4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001954:	4b20      	ldr	r3, [pc, #128]	@ (80019d8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001956:	6125      	str	r5, [r4, #16]
 8001958:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800195c:	e9c4 3500 	strd	r3, r5, [r4]
 8001960:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001964:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001966:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001968:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 800196a:	f010 f83e 	bl	80119ea <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 800196e:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001972:	f00c fbb5 	bl	800e0e0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8001976:	4b19      	ldr	r3, [pc, #100]	@ (80019dc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 8001978:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800197a:	4620      	mov	r0, r4
 800197c:	4b18      	ldr	r3, [pc, #96]	@ (80019e0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 800197e:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001982:	f7ff ffa7 	bl	80018d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001986:	4b17      	ldr	r3, [pc, #92]	@ (80019e4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 8001988:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 800198c:	3324      	adds	r3, #36	@ 0x24
 800198e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8001992:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8001996:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 800199a:	2300      	movs	r3, #0
 800199c:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 80019a0:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80019a4:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80019a8:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80019ac:	480e      	ldr	r0, [pc, #56]	@ (80019e8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80019ae:	4b0f      	ldr	r3, [pc, #60]	@ (80019ec <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80019b0:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80019b4:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80019b8:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80019bc:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80019c0:	f021 fcfc 	bl	80233bc <atexit>
 80019c4:	4630      	mov	r0, r6
 80019c6:	f020 fd66 	bl	8022496 <__cxa_guard_release>
}
 80019ca:	4802      	ldr	r0, [pc, #8]	@ (80019d4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 80019cc:	bd70      	pop	{r4, r5, r6, pc}
 80019ce:	bf00      	nop
 80019d0:	20002468 	.word	0x20002468
 80019d4:	2000246c 	.word	0x2000246c
 80019d8:	08025aa8 	.word	0x08025aa8
 80019dc:	080255c4 	.word	0x080255c4
 80019e0:	0802563c 	.word	0x0802563c
 80019e4:	08025a5c 	.word	0x08025a5c
 80019e8:	080017b1 	.word	0x080017b1
 80019ec:	08025a3c 	.word	0x08025a3c

080019f0 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80019f0:	b538      	push	{r3, r4, r5, lr}
        return instance;
 80019f2:	4c18      	ldr	r4, [pc, #96]	@ (8001a54 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 80019f4:	6823      	ldr	r3, [r4, #0]
 80019f6:	b35b      	cbz	r3, 8001a50 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80019f8:	4b17      	ldr	r3, [pc, #92]	@ (8001a58 <HAL_LTDC_LineEventCallback+0x68>)
 80019fa:	4a18      	ldr	r2, [pc, #96]	@ (8001a5c <HAL_LTDC_LineEventCallback+0x6c>)
 80019fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019fe:	8811      	ldrh	r1, [r2, #0]
 8001a00:	428b      	cmp	r3, r1
 8001a02:	d116      	bne.n	8001a32 <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001a04:	4b16      	ldr	r3, [pc, #88]	@ (8001a60 <HAL_LTDC_LineEventCallback+0x70>)
 8001a06:	8819      	ldrh	r1, [r3, #0]
 8001a08:	f003 fba0 	bl	800514c <HAL_LTDC_ProgramLineEvent>
 8001a0c:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 8001a0e:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001a12:	2500      	movs	r5, #0
        vSyncCnt++;
 8001a14:	3201      	adds	r2, #1
 8001a16:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001a1a:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001a1e:	f7ff fab7 	bl	8000f90 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001a22:	6820      	ldr	r0, [r4, #0]
 8001a24:	f00a f87c 	bl	800bb20 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001a28:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001a2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001a2e:	f7ff b8f7 	b.w	8000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001a32:	f003 fb8b 	bl	800514c <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001a36:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001a38:	6823      	ldr	r3, [r4, #0]
 8001a3a:	4620      	mov	r0, r4
 8001a3c:	6a1b      	ldr	r3, [r3, #32]
 8001a3e:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001a40:	2301      	movs	r3, #1
 8001a42:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001a46:	2000      	movs	r0, #0
    }
 8001a48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001a4c:	f7ff b912 	b.w	8000c74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001a50:	bd38      	pop	{r3, r4, r5, pc}
 8001a52:	bf00      	nop
 8001a54:	20014040 	.word	0x20014040
 8001a58:	40016800 	.word	0x40016800
 8001a5c:	20002466 	.word	0x20002466
 8001a60:	20002464 	.word	0x20002464

08001a64 <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 8001a64:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceHS, &HS_Desc, DEVICE_HS) != USBD_OK)
 8001a66:	490c      	ldr	r1, [pc, #48]	@ (8001a98 <MX_USB_DEVICE_Init+0x34>)
 8001a68:	480c      	ldr	r0, [pc, #48]	@ (8001a9c <MX_USB_DEVICE_Init+0x38>)
 8001a6a:	2201      	movs	r2, #1
 8001a6c:	f008 fa5c 	bl	8009f28 <USBD_Init>
 8001a70:	b108      	cbz	r0, 8001a76 <MX_USB_DEVICE_Init+0x12>
  {
    Error_Handler();
 8001a72:	f000 fddf 	bl	8002634 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceHS, &USBD_HID) != USBD_OK)
 8001a76:	490a      	ldr	r1, [pc, #40]	@ (8001aa0 <MX_USB_DEVICE_Init+0x3c>)
 8001a78:	4808      	ldr	r0, [pc, #32]	@ (8001a9c <MX_USB_DEVICE_Init+0x38>)
 8001a7a:	f008 fa68 	bl	8009f4e <USBD_RegisterClass>
 8001a7e:	b108      	cbz	r0, 8001a84 <MX_USB_DEVICE_Init+0x20>
  {
    Error_Handler();
 8001a80:	f000 fdd8 	bl	8002634 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceHS) != USBD_OK)
 8001a84:	4805      	ldr	r0, [pc, #20]	@ (8001a9c <MX_USB_DEVICE_Init+0x38>)
 8001a86:	f008 fa7b 	bl	8009f80 <USBD_Start>
 8001a8a:	b118      	cbz	r0, 8001a94 <MX_USB_DEVICE_Init+0x30>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 8001a8c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 8001a90:	f000 bdd0 	b.w	8002634 <Error_Handler>
}
 8001a94:	bd08      	pop	{r3, pc}
 8001a96:	bf00      	nop
 8001a98:	20000040 	.word	0x20000040
 8001a9c:	20002528 	.word	0x20002528
 8001aa0:	2000015c 	.word	0x2000015c

08001aa4 <USBD_HS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_HS_DeviceDesc);
 8001aa4:	2312      	movs	r3, #18
  return USBD_HS_DeviceDesc;
}
 8001aa6:	4801      	ldr	r0, [pc, #4]	@ (8001aac <USBD_HS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_HS_DeviceDesc);
 8001aa8:	800b      	strh	r3, [r1, #0]
}
 8001aaa:	4770      	bx	lr
 8001aac:	2000002c 	.word	0x2000002c

08001ab0 <USBD_HS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 8001ab0:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
 8001ab2:	4801      	ldr	r0, [pc, #4]	@ (8001ab8 <USBD_HS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
 8001ab4:	800b      	strh	r3, [r1, #0]
}
 8001ab6:	4770      	bx	lr
 8001ab8:	20000028 	.word	0x20000028

08001abc <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 8001abc:	2300      	movs	r3, #0
 8001abe:	b570      	push	{r4, r5, r6, lr}
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
 8001ac0:	1c4d      	adds	r5, r1, #1
 8001ac2:	461e      	mov	r6, r3
      pbuf[2 * idx] = (value >> 28) + '0';
 8001ac4:	0f04      	lsrs	r4, r0, #28
    if (((value >> 28)) < 0xA)
 8001ac6:	f1b0 4f20 	cmp.w	r0, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + '0';
 8001aca:	bf34      	ite	cc
 8001acc:	3430      	addcc	r4, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8001ace:	3437      	addcs	r4, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
 8001ad0:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    pbuf[2 * idx + 1] = 0;
 8001ad4:	f805 6013 	strb.w	r6, [r5, r3, lsl #1]
  for (idx = 0; idx < len; idx++)
 8001ad8:	3301      	adds	r3, #1
 8001ada:	b2dc      	uxtb	r4, r3
 8001adc:	42a2      	cmp	r2, r4
    value = value << 4;
 8001ade:	ea4f 1000 	mov.w	r0, r0, lsl #4
  for (idx = 0; idx < len; idx++)
 8001ae2:	d8ef      	bhi.n	8001ac4 <IntToUnicode+0x8>
  }
}
 8001ae4:	bd70      	pop	{r4, r5, r6, pc}
	...

08001ae8 <USBD_HS_SerialStrDescriptor>:
  *length = USB_SIZ_STRING_SERIAL;
 8001ae8:	231a      	movs	r3, #26
{
 8001aea:	b510      	push	{r4, lr}
  *length = USB_SIZ_STRING_SERIAL;
 8001aec:	800b      	strh	r3, [r1, #0]
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8001aee:	4b0a      	ldr	r3, [pc, #40]	@ (8001b18 <USBD_HS_SerialStrDescriptor+0x30>)
 8001af0:	f8d3 0a10 	ldr.w	r0, [r3, #2576]	@ 0xa10
  deviceserial0 += deviceserial2;
 8001af4:	f8d3 2a18 	ldr.w	r2, [r3, #2584]	@ 0xa18
  if (deviceserial0 != 0)
 8001af8:	1880      	adds	r0, r0, r2
 8001afa:	d00a      	beq.n	8001b12 <USBD_HS_SerialStrDescriptor+0x2a>
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8001afc:	f8d3 4a14 	ldr.w	r4, [r3, #2580]	@ 0xa14
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8001b00:	4906      	ldr	r1, [pc, #24]	@ (8001b1c <USBD_HS_SerialStrDescriptor+0x34>)
 8001b02:	2208      	movs	r2, #8
 8001b04:	f7ff ffda 	bl	8001abc <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8001b08:	2204      	movs	r2, #4
 8001b0a:	3110      	adds	r1, #16
 8001b0c:	4620      	mov	r0, r4
 8001b0e:	f7ff ffd5 	bl	8001abc <IntToUnicode>
}
 8001b12:	4803      	ldr	r0, [pc, #12]	@ (8001b20 <USBD_HS_SerialStrDescriptor+0x38>)
 8001b14:	bd10      	pop	{r4, pc}
 8001b16:	bf00      	nop
 8001b18:	1fff7000 	.word	0x1fff7000
 8001b1c:	2000000e 	.word	0x2000000e
 8001b20:	2000000c 	.word	0x2000000c

08001b24 <USBD_HS_ManufacturerStrDescriptor>:
{
 8001b24:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001b26:	4c04      	ldr	r4, [pc, #16]	@ (8001b38 <USBD_HS_ManufacturerStrDescriptor+0x14>)
 8001b28:	4804      	ldr	r0, [pc, #16]	@ (8001b3c <USBD_HS_ManufacturerStrDescriptor+0x18>)
{
 8001b2a:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001b2c:	4621      	mov	r1, r4
 8001b2e:	f008 fdf6 	bl	800a71e <USBD_GetString>
}
 8001b32:	4620      	mov	r0, r4
 8001b34:	bd10      	pop	{r4, pc}
 8001b36:	bf00      	nop
 8001b38:	20002804 	.word	0x20002804
 8001b3c:	08024d82 	.word	0x08024d82

08001b40 <USBD_HS_ProductStrDescriptor>:
{
 8001b40:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001b42:	4c04      	ldr	r4, [pc, #16]	@ (8001b54 <USBD_HS_ProductStrDescriptor+0x14>)
 8001b44:	4804      	ldr	r0, [pc, #16]	@ (8001b58 <USBD_HS_ProductStrDescriptor+0x18>)
{
 8001b46:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001b48:	4621      	mov	r1, r4
 8001b4a:	f008 fde8 	bl	800a71e <USBD_GetString>
}
 8001b4e:	4620      	mov	r0, r4
 8001b50:	bd10      	pop	{r4, pc}
 8001b52:	bf00      	nop
 8001b54:	20002804 	.word	0x20002804
 8001b58:	08024d95 	.word	0x08024d95

08001b5c <USBD_HS_ConfigStrDescriptor>:
{
 8001b5c:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 8001b5e:	4c04      	ldr	r4, [pc, #16]	@ (8001b70 <USBD_HS_ConfigStrDescriptor+0x14>)
 8001b60:	4804      	ldr	r0, [pc, #16]	@ (8001b74 <USBD_HS_ConfigStrDescriptor+0x18>)
{
 8001b62:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 8001b64:	4621      	mov	r1, r4
 8001b66:	f008 fdda 	bl	800a71e <USBD_GetString>
}
 8001b6a:	4620      	mov	r0, r4
 8001b6c:	bd10      	pop	{r4, pc}
 8001b6e:	bf00      	nop
 8001b70:	20002804 	.word	0x20002804
 8001b74:	08024dab 	.word	0x08024dab

08001b78 <USBD_HS_InterfaceStrDescriptor>:
{
 8001b78:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 8001b7a:	4c04      	ldr	r4, [pc, #16]	@ (8001b8c <USBD_HS_InterfaceStrDescriptor+0x14>)
 8001b7c:	4804      	ldr	r0, [pc, #16]	@ (8001b90 <USBD_HS_InterfaceStrDescriptor+0x18>)
{
 8001b7e:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 8001b80:	4621      	mov	r1, r4
 8001b82:	f008 fdcc 	bl	800a71e <USBD_GetString>
}
 8001b86:	4620      	mov	r0, r4
 8001b88:	bd10      	pop	{r4, pc}
 8001b8a:	bf00      	nop
 8001b8c:	20002804 	.word	0x20002804
 8001b90:	08024db6 	.word	0x08024db6

08001b94 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 8001b94:	b530      	push	{r4, r5, lr}
 8001b96:	4604      	mov	r4, r0
 8001b98:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b9a:	2214      	movs	r2, #20
 8001b9c:	2100      	movs	r1, #0
 8001b9e:	a803      	add	r0, sp, #12
 8001ba0:	f021 fe2b 	bl	80237fa <memset>
  if(pcdHandle->Instance==USB_OTG_HS)
 8001ba4:	6822      	ldr	r2, [r4, #0]
 8001ba6:	4b1c      	ldr	r3, [pc, #112]	@ (8001c18 <HAL_PCD_MspInit+0x84>)
 8001ba8:	429a      	cmp	r2, r3
 8001baa:	d133      	bne.n	8001c14 <HAL_PCD_MspInit+0x80>
  {
  /* USER CODE BEGIN USB_OTG_HS_MspInit 0 */

  /* USER CODE END USB_OTG_HS_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001bac:	4c1b      	ldr	r4, [pc, #108]	@ (8001c1c <HAL_PCD_MspInit+0x88>)
    PB15     ------> USB_OTG_HS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bae:	481c      	ldr	r0, [pc, #112]	@ (8001c20 <HAL_PCD_MspInit+0x8c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001bb0:	2500      	movs	r5, #0
 8001bb2:	9501      	str	r5, [sp, #4]
 8001bb4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001bb6:	f043 0302 	orr.w	r3, r3, #2
 8001bba:	6323      	str	r3, [r4, #48]	@ 0x30
 8001bbc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001bbe:	f003 0302 	and.w	r3, r3, #2
 8001bc2:	9301      	str	r3, [sp, #4]
 8001bc4:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bc6:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001bc8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001bcc:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bce:	f002 fbe9 	bl	80043a4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bd2:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 8001bd6:	2302      	movs	r3, #2
 8001bd8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 8001bdc:	2103      	movs	r1, #3
 8001bde:	230c      	movs	r3, #12
 8001be0:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001be4:	480e      	ldr	r0, [pc, #56]	@ (8001c20 <HAL_PCD_MspInit+0x8c>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001be6:	9505      	str	r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001be8:	eb0d 0103 	add.w	r1, sp, r3
 8001bec:	f002 fbda 	bl	80043a4 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001bf0:	9502      	str	r5, [sp, #8]
 8001bf2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001bf4:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001bf8:	6323      	str	r3, [r4, #48]	@ 0x30
 8001bfa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001bfc:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8001c00:	9302      	str	r3, [sp, #8]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 8001c02:	204d      	movs	r0, #77	@ 0x4d
 8001c04:	462a      	mov	r2, r5
 8001c06:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001c08:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 8001c0a:	f002 fa81 	bl	8004110 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
 8001c0e:	204d      	movs	r0, #77	@ 0x4d
 8001c10:	f002 fab0 	bl	8004174 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_HS_MspInit 1 */

  /* USER CODE END USB_OTG_HS_MspInit 1 */
  }
}
 8001c14:	b009      	add	sp, #36	@ 0x24
 8001c16:	bd30      	pop	{r4, r5, pc}
 8001c18:	40040000 	.word	0x40040000
 8001c1c:	40023800 	.word	0x40023800
 8001c20:	40020400 	.word	0x40020400

08001c24 <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 8001c24:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
 8001c28:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001c2c:	f008 b9ba 	b.w	8009fa4 <USBD_LL_SetupStage>

08001c30 <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8001c30:	2324      	movs	r3, #36	@ 0x24
 8001c32:	fb03 0301 	mla	r3, r3, r1, r0
 8001c36:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001c3a:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 8001c3e:	f008 b9e1 	b.w	800a004 <USBD_LL_DataOutStage>

08001c42 <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 8001c42:	2324      	movs	r3, #36	@ 0x24
 8001c44:	fb03 0301 	mla	r3, r3, r1, r0
 8001c48:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001c4c:	6a1a      	ldr	r2, [r3, #32]
 8001c4e:	f008 ba13 	b.w	800a078 <USBD_LL_DataInStage>

08001c52 <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 8001c52:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001c56:	f008 baaf 	b.w	800a1b8 <USBD_LL_SOF>

08001c5a <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8001c5a:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001c5c:	79c1      	ldrb	r1, [r0, #7]
{
 8001c5e:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001c60:	b121      	cbz	r1, 8001c6c <HAL_PCD_ResetCallback+0x12>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 8001c62:	2902      	cmp	r1, #2
 8001c64:	d001      	beq.n	8001c6a <HAL_PCD_ResetCallback+0x10>
  {
    speed = USBD_SPEED_FULL;
  }
  else
  {
    Error_Handler();
 8001c66:	f000 fce5 	bl	8002634 <Error_Handler>
    speed = USBD_SPEED_FULL;
 8001c6a:	2101      	movs	r1, #1
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 8001c6c:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
 8001c70:	f008 fa86 	bl	800a180 <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8001c74:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
 8001c78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8001c7c:	f008 ba50 	b.w	800a120 <USBD_LL_Reset>

08001c80 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8001c80:	b510      	push	{r4, lr}
 8001c82:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 8001c84:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001c88:	f008 fa7d 	bl	800a186 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 8001c8c:	6822      	ldr	r2, [r4, #0]
 8001c8e:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 8001c92:	f043 0301 	orr.w	r3, r3, #1
 8001c96:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 8001c9a:	7ae3      	ldrb	r3, [r4, #11]
 8001c9c:	b123      	cbz	r3, 8001ca8 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 8001c9e:	4a03      	ldr	r2, [pc, #12]	@ (8001cac <HAL_PCD_SuspendCallback+0x2c>)
 8001ca0:	6913      	ldr	r3, [r2, #16]
 8001ca2:	f043 0306 	orr.w	r3, r3, #6
 8001ca6:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 8001ca8:	bd10      	pop	{r4, pc}
 8001caa:	bf00      	nop
 8001cac:	e000ed00 	.word	0xe000ed00

08001cb0 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 8001cb0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001cb4:	f008 ba75 	b.w	800a1a2 <USBD_LL_Resume>

08001cb8 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8001cb8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001cbc:	f008 ba9c 	b.w	800a1f8 <USBD_LL_IsoOUTIncomplete>

08001cc0 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 8001cc0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001cc4:	f008 ba85 	b.w	800a1d2 <USBD_LL_IsoINIncomplete>

08001cc8 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 8001cc8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001ccc:	f008 baa7 	b.w	800a21e <USBD_LL_DevConnected>

08001cd0 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8001cd0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001cd4:	f008 baa5 	b.w	800a222 <USBD_LL_DevDisconnected>

08001cd8 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8001cd8:	b508      	push	{r3, lr}
  /* Init USB Ip. */
  if (pdev->id == DEVICE_HS) {
 8001cda:	7802      	ldrb	r2, [r0, #0]
 8001cdc:	2a01      	cmp	r2, #1
{
 8001cde:	4603      	mov	r3, r0
  if (pdev->id == DEVICE_HS) {
 8001ce0:	d127      	bne.n	8001d32 <USBD_LL_Init+0x5a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_HS.pData = pdev;
 8001ce2:	4815      	ldr	r0, [pc, #84]	@ (8001d38 <USBD_LL_Init+0x60>)
 8001ce4:	f8c0 34e0 	str.w	r3, [r0, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_HS;
 8001ce8:	f8c3 02c8 	str.w	r0, [r3, #712]	@ 0x2c8

  hpcd_USB_OTG_HS.Instance = USB_OTG_HS;
 8001cec:	4b13      	ldr	r3, [pc, #76]	@ (8001d3c <USBD_LL_Init+0x64>)
 8001cee:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_HS.Init.dev_endpoints = 6;
 8001cf0:	2306      	movs	r3, #6
 8001cf2:	7103      	strb	r3, [r0, #4]
  hpcd_USB_OTG_HS.Init.speed = PCD_SPEED_FULL;
  hpcd_USB_OTG_HS.Init.dma_enable = DISABLE;
 8001cf4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001cf8:	80c3      	strh	r3, [r0, #6]
  hpcd_USB_OTG_HS.Init.phy_itface = USB_OTG_EMBEDDED_PHY;
 8001cfa:	2302      	movs	r3, #2
 8001cfc:	7243      	strb	r3, [r0, #9]
  hpcd_USB_OTG_HS.Init.Sof_enable = DISABLE;
 8001cfe:	2300      	movs	r3, #0
 8001d00:	8143      	strh	r3, [r0, #10]
  hpcd_USB_OTG_HS.Init.low_power_enable = DISABLE;
  hpcd_USB_OTG_HS.Init.lpm_enable = DISABLE;
 8001d02:	7303      	strb	r3, [r0, #12]
  hpcd_USB_OTG_HS.Init.vbus_sensing_enable = ENABLE;
 8001d04:	81c2      	strh	r2, [r0, #14]
  hpcd_USB_OTG_HS.Init.use_dedicated_ep1 = DISABLE;
  hpcd_USB_OTG_HS.Init.use_external_vbus = DISABLE;
 8001d06:	7403      	strb	r3, [r0, #16]
  if (HAL_PCD_Init(&hpcd_USB_OTG_HS) != HAL_OK)
 8001d08:	f003 fa3e 	bl	8005188 <HAL_PCD_Init>
 8001d0c:	b108      	cbz	r0, 8001d12 <USBD_LL_Init+0x3a>
  {
    Error_Handler( );
 8001d0e:	f000 fc91 	bl	8002634 <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_HS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_HS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_HS, 0x200);
 8001d12:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001d16:	4808      	ldr	r0, [pc, #32]	@ (8001d38 <USBD_LL_Init+0x60>)
 8001d18:	f003 ff5b 	bl	8005bd2 <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 0, 0x80);
 8001d1c:	2280      	movs	r2, #128	@ 0x80
 8001d1e:	2100      	movs	r1, #0
 8001d20:	4805      	ldr	r0, [pc, #20]	@ (8001d38 <USBD_LL_Init+0x60>)
 8001d22:	f003 ff37 	bl	8005b94 <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 1, 0x174);
 8001d26:	4804      	ldr	r0, [pc, #16]	@ (8001d38 <USBD_LL_Init+0x60>)
 8001d28:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8001d2c:	2101      	movs	r1, #1
 8001d2e:	f003 ff31 	bl	8005b94 <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
}
 8001d32:	2000      	movs	r0, #0
 8001d34:	bd08      	pop	{r3, pc}
 8001d36:	bf00      	nop
 8001d38:	20002a18 	.word	0x20002a18
 8001d3c:	40040000 	.word	0x40040000

08001d40 <USBD_LL_IsStallEP>:
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;

  if((ep_addr & 0x80) == 0x80)
 8001d40:	f011 0f80 	tst.w	r1, #128	@ 0x80
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 8001d44:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 8001d48:	f04f 0224 	mov.w	r2, #36	@ 0x24
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001d4c:	bf1b      	ittet	ne
 8001d4e:	f001 017f 	andne.w	r1, r1, #127	@ 0x7f
 8001d52:	fb02 3301 	mlane	r3, r2, r1, r3
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8001d56:	fb02 3301 	mlaeq	r3, r2, r1, r3
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001d5a:	7d98      	ldrbne	r0, [r3, #22]
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8001d5c:	bf08      	it	eq
 8001d5e:	f893 0256 	ldrbeq.w	r0, [r3, #598]	@ 0x256
  }
}
 8001d62:	4770      	bx	lr

08001d64 <USBD_static_malloc>:
  */
void *USBD_static_malloc(uint32_t size)
{
  static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
}
 8001d64:	4800      	ldr	r0, [pc, #0]	@ (8001d68 <USBD_static_malloc+0x4>)
 8001d66:	4770      	bx	lr
 8001d68:	20002a04 	.word	0x20002a04

08001d6c <USBD_static_free>:
  * @retval None
  */
void USBD_static_free(void *p)
{

}
 8001d6c:	4770      	bx	lr

08001d6e <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 8001d6e:	b118      	cbz	r0, 8001d78 <USBD_Get_USB_Status+0xa>
 8001d70:	2802      	cmp	r0, #2
 8001d72:	bf0c      	ite	eq
 8001d74:	2001      	moveq	r0, #1
 8001d76:	2003      	movne	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 8001d78:	4770      	bx	lr

08001d7a <USBD_LL_Start>:
{
 8001d7a:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 8001d7c:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001d80:	f003 fa71 	bl	8005266 <HAL_PCD_Start>
}
 8001d84:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001d88:	f7ff bff1 	b.w	8001d6e <USBD_Get_USB_Status>

08001d8c <USBD_LL_OpenEP>:
{
 8001d8c:	b510      	push	{r4, lr}
 8001d8e:	4614      	mov	r4, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8001d90:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
 8001d94:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8001d96:	4623      	mov	r3, r4
 8001d98:	f003 fa97 	bl	80052ca <HAL_PCD_EP_Open>
}
 8001d9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001da0:	f7ff bfe5 	b.w	8001d6e <USBD_Get_USB_Status>

08001da4 <USBD_LL_CloseEP>:
{
 8001da4:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 8001da6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001daa:	f003 fac7 	bl	800533c <HAL_PCD_EP_Close>
}
 8001dae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001db2:	f7ff bfdc 	b.w	8001d6e <USBD_Get_USB_Status>

08001db6 <USBD_LL_StallEP>:
{
 8001db6:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 8001db8:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001dbc:	f003 fb25 	bl	800540a <HAL_PCD_EP_SetStall>
}
 8001dc0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001dc4:	f7ff bfd3 	b.w	8001d6e <USBD_Get_USB_Status>

08001dc8 <USBD_LL_ClearStallEP>:
{
 8001dc8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 8001dca:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001dce:	f003 fb53 	bl	8005478 <HAL_PCD_EP_ClrStall>
}
 8001dd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001dd6:	f7ff bfca 	b.w	8001d6e <USBD_Get_USB_Status>

08001dda <USBD_LL_SetUSBAddress>:
{
 8001dda:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8001ddc:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001de0:	f003 fa60 	bl	80052a4 <HAL_PCD_SetAddress>
}
 8001de4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001de8:	f7ff bfc1 	b.w	8001d6e <USBD_Get_USB_Status>

08001dec <USBD_LL_Transmit>:
{
 8001dec:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8001dee:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001df2:	f003 faef 	bl	80053d4 <HAL_PCD_EP_Transmit>
}
 8001df6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001dfa:	f7ff bfb8 	b.w	8001d6e <USBD_Get_USB_Status>

08001dfe <USBD_LL_PrepareReceive>:
{
 8001dfe:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8001e00:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001e04:	f003 fac8 	bl	8005398 <HAL_PCD_EP_Receive>
}
 8001e08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001e0c:	f7ff bfaf 	b.w	8001d6e <USBD_Get_USB_Status>

08001e10 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001e10:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e12:	4b06      	ldr	r3, [pc, #24]	@ (8001e2c <SPI5_Write+0x1c>)
{
 8001e14:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	4805      	ldr	r0, [pc, #20]	@ (8001e30 <SPI5_Write+0x20>)
 8001e1c:	2201      	movs	r2, #1
 8001e1e:	f10d 0106 	add.w	r1, sp, #6
 8001e22:	f004 fc39 	bl	8006698 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001e26:	b003      	add	sp, #12
 8001e28:	f85d fb04 	ldr.w	pc, [sp], #4
 8001e2c:	2000005c 	.word	0x2000005c
 8001e30:	20002f9c 	.word	0x20002f9c

08001e34 <mouseProcessingTask>:
{
 8001e34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e38:	ed2d 8b02 	vpush	{d8}
        if(osMessageQueueGet(mouseEventQueueHandle, &event, NULL, osWaitForever) == osOK) {
 8001e3c:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 8001f4c <mouseProcessingTask+0x118>
                mousehid.button = 0;
 8001e40:	4c40      	ldr	r4, [pc, #256]	@ (8001f44 <mouseProcessingTask+0x110>)
                USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001e42:	4f41      	ldr	r7, [pc, #260]	@ (8001f48 <mouseProcessingTask+0x114>)
{
 8001e44:	b082      	sub	sp, #8
        if(osMessageQueueGet(mouseEventQueueHandle, &event, NULL, osWaitForever) == osOK) {
 8001e46:	f8d8 0000 	ldr.w	r0, [r8]
 8001e4a:	f04f 33ff 	mov.w	r3, #4294967295
 8001e4e:	2200      	movs	r2, #0
 8001e50:	a901      	add	r1, sp, #4
 8001e52:	f006 f875 	bl	8007f40 <osMessageQueueGet>
 8001e56:	2800      	cmp	r0, #0
 8001e58:	d1f5      	bne.n	8001e46 <mouseProcessingTask+0x12>
            if(event.eventType == 0) {
 8001e5a:	f89d 5006 	ldrb.w	r5, [sp, #6]
 8001e5e:	2d00      	cmp	r5, #0
 8001e60:	d155      	bne.n	8001f0e <mouseProcessingTask+0xda>
                accumulated_x += -event.deltaX * scale_x;
 8001e62:	f99d 3004 	ldrsb.w	r3, [sp, #4]
 8001e66:	f8df a0e8 	ldr.w	sl, [pc, #232]	@ 8001f50 <mouseProcessingTask+0x11c>
                accumulated_y += event.deltaY * scale_y;
 8001e6a:	f8df 90e8 	ldr.w	r9, [pc, #232]	@ 8001f54 <mouseProcessingTask+0x120>
                accumulated_x += -event.deltaX * scale_x;
 8001e6e:	edda 8a00 	vldr	s17, [sl]
                accumulated_y += event.deltaY * scale_y;
 8001e72:	ed99 8a00 	vldr	s16, [r9]
                accumulated_x += -event.deltaX * scale_x;
 8001e76:	425b      	negs	r3, r3
 8001e78:	ee07 3a90 	vmov	s15, r3
 8001e7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                accumulated_y += event.deltaY * scale_y;
 8001e80:	f99d 3005 	ldrsb.w	r3, [sp, #5]
                accumulated_x += -event.deltaX * scale_x;
 8001e84:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 8001e88:	eee7 8a87 	vfma.f32	s17, s15, s14
                accumulated_y += event.deltaY * scale_y;
 8001e8c:	ee07 3a90 	vmov	s15, r3
 8001e90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                int8_t send_x = (int8_t)round(accumulated_x);
 8001e94:	ee18 0a90 	vmov	r0, s17
                accumulated_y += event.deltaY * scale_y;
 8001e98:	eea7 8a87 	vfma.f32	s16, s15, s14
                int8_t send_x = (int8_t)round(accumulated_x);
 8001e9c:	f7fe fb64 	bl	8000568 <__aeabi_f2d>
 8001ea0:	ec41 0b10 	vmov	d0, r0, r1
 8001ea4:	f020 fbc0 	bl	8022628 <round>
 8001ea8:	ec51 0b10 	vmov	r0, r1, d0
 8001eac:	f7fe fbb4 	bl	8000618 <__aeabi_d2iz>
 8001eb0:	b246      	sxtb	r6, r0
                int8_t send_y = (int8_t)round(accumulated_y);
 8001eb2:	ee18 0a10 	vmov	r0, s16
 8001eb6:	f7fe fb57 	bl	8000568 <__aeabi_f2d>
 8001eba:	ec41 0b10 	vmov	d0, r0, r1
 8001ebe:	f020 fbb3 	bl	8022628 <round>
 8001ec2:	ec51 0b10 	vmov	r0, r1, d0
 8001ec6:	f7fe fba7 	bl	8000618 <__aeabi_d2iz>
                accumulated_x -= send_x;
 8001eca:	ee07 6a90 	vmov	s15, r6
 8001ece:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                int8_t send_y = (int8_t)round(accumulated_y);
 8001ed2:	b240      	sxtb	r0, r0
                accumulated_x -= send_x;
 8001ed4:	ee78 8ae7 	vsub.f32	s17, s17, s15
                accumulated_y -= send_y;
 8001ed8:	ee07 0a90 	vmov	s15, r0
 8001edc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                if(send_x != 0 || send_y != 0) {
 8001ee0:	ea56 0300 	orrs.w	r3, r6, r0
                accumulated_y -= send_y;
 8001ee4:	ee38 8a67 	vsub.f32	s16, s16, s15
                accumulated_x -= send_x;
 8001ee8:	edca 8a00 	vstr	s17, [sl]
                accumulated_y -= send_y;
 8001eec:	ed89 8a00 	vstr	s16, [r9]
                if(send_x != 0 || send_y != 0) {
 8001ef0:	d0a9      	beq.n	8001e46 <mouseProcessingTask+0x12>
                    mousehid.mouse_x = send_y;
 8001ef2:	7060      	strb	r0, [r4, #1]
                    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001ef4:	4913      	ldr	r1, [pc, #76]	@ (8001f44 <mouseProcessingTask+0x110>)
                    mousehid.button = 0;
 8001ef6:	7025      	strb	r5, [r4, #0]
                    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001ef8:	2204      	movs	r2, #4
 8001efa:	4638      	mov	r0, r7
                    mousehid.mouse_y = send_x;
 8001efc:	70a6      	strb	r6, [r4, #2]
                    mousehid.wheel = 0;
 8001efe:	70e5      	strb	r5, [r4, #3]
                    USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001f00:	f008 fd12 	bl	800a928 <USBD_HID_SendReport>
                    mousehid.button = 0;
 8001f04:	7025      	strb	r5, [r4, #0]
                    mousehid.mouse_x = 0;
 8001f06:	7065      	strb	r5, [r4, #1]
                    mousehid.mouse_y = 0;
 8001f08:	70a5      	strb	r5, [r4, #2]
                    mousehid.wheel = 0;
 8001f0a:	70e5      	strb	r5, [r4, #3]
 8001f0c:	e79b      	b.n	8001e46 <mouseProcessingTask+0x12>
            else if(event.eventType == 1) {
 8001f0e:	2d01      	cmp	r5, #1
 8001f10:	d10c      	bne.n	8001f2c <mouseProcessingTask+0xf8>
                mousehid.mouse_x = 0;
 8001f12:	7060      	strb	r0, [r4, #1]
                mousehid.mouse_y = 0;
 8001f14:	70a0      	strb	r0, [r4, #2]
                mousehid.wheel = 0;
 8001f16:	70e0      	strb	r0, [r4, #3]
                USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001f18:	490a      	ldr	r1, [pc, #40]	@ (8001f44 <mouseProcessingTask+0x110>)
                mousehid.button = 1;
 8001f1a:	7025      	strb	r5, [r4, #0]
                USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001f1c:	2204      	movs	r2, #4
 8001f1e:	4638      	mov	r0, r7
 8001f20:	f008 fd02 	bl	800a928 <USBD_HID_SendReport>
                osDelay(50);
 8001f24:	2032      	movs	r0, #50	@ 0x32
 8001f26:	f005 fee1 	bl	8007cec <osDelay>
 8001f2a:	e78c      	b.n	8001e46 <mouseProcessingTask+0x12>
            else if(event.eventType == 2) {
 8001f2c:	2d02      	cmp	r5, #2
 8001f2e:	d18a      	bne.n	8001e46 <mouseProcessingTask+0x12>
                mousehid.button = 0;
 8001f30:	7020      	strb	r0, [r4, #0]
                mousehid.mouse_x = 0;
 8001f32:	7060      	strb	r0, [r4, #1]
                mousehid.mouse_y = 0;
 8001f34:	70a0      	strb	r0, [r4, #2]
                mousehid.wheel = 0;
 8001f36:	70e0      	strb	r0, [r4, #3]
                USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t *)&mousehid, sizeof(mousehid));
 8001f38:	4902      	ldr	r1, [pc, #8]	@ (8001f44 <mouseProcessingTask+0x110>)
 8001f3a:	2204      	movs	r2, #4
 8001f3c:	4638      	mov	r0, r7
 8001f3e:	f008 fcf3 	bl	800a928 <USBD_HID_SendReport>
 8001f42:	e780      	b.n	8001e46 <mouseProcessingTask+0x12>
 8001f44:	20003138 	.word	0x20003138
 8001f48:	20002528 	.word	0x20002528
 8001f4c:	20002f10 	.word	0x20002f10
 8001f50:	20002f00 	.word	0x20002f00
 8001f54:	20002efc 	.word	0x20002efc

08001f58 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001f58:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001f5a:	2064      	movs	r0, #100	@ 0x64
 8001f5c:	f005 fec6 	bl	8007cec <osDelay>
  for(;;)
 8001f60:	e7fb      	b.n	8001f5a <StartDefaultTask+0x2>
	...

08001f64 <SystemClock_Config>:
{
 8001f64:	b530      	push	{r4, r5, lr}
 8001f66:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001f68:	2210      	movs	r2, #16
 8001f6a:	2100      	movs	r1, #0
 8001f6c:	a80a      	add	r0, sp, #40	@ 0x28
 8001f6e:	f021 fc44 	bl	80237fa <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001f72:	2214      	movs	r2, #20
 8001f74:	2100      	movs	r1, #0
 8001f76:	a803      	add	r0, sp, #12
 8001f78:	f021 fc3f 	bl	80237fa <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001f7c:	2400      	movs	r4, #0
 8001f7e:	4b1d      	ldr	r3, [pc, #116]	@ (8001ff4 <SystemClock_Config+0x90>)
 8001f80:	9401      	str	r4, [sp, #4]
 8001f82:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001f84:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8001f88:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f8c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001f90:	9301      	str	r3, [sp, #4]
 8001f92:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f94:	4b18      	ldr	r3, [pc, #96]	@ (8001ff8 <SystemClock_Config+0x94>)
 8001f96:	9402      	str	r4, [sp, #8]
 8001f98:	681a      	ldr	r2, [r3, #0]
 8001f9a:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001f9e:	601a      	str	r2, [r3, #0]
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001fa6:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001fa8:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001faa:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001fac:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001fb0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001fb4:	2502      	movs	r5, #2
 8001fb6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001fba:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 168;
 8001fbe:	2104      	movs	r1, #4
 8001fc0:	23a8      	movs	r3, #168	@ 0xa8
 8001fc2:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001fc6:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8001fc8:	2307      	movs	r3, #7
 8001fca:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001fcc:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001fce:	f003 fe05 	bl	8005bdc <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001fd2:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001fd4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001fd8:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001fdc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001fe0:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001fe4:	2105      	movs	r1, #5
 8001fe6:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001fe8:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001fea:	f003 ffd3 	bl	8005f94 <HAL_RCC_ClockConfig>
}
 8001fee:	b015      	add	sp, #84	@ 0x54
 8001ff0:	bd30      	pop	{r4, r5, pc}
 8001ff2:	bf00      	nop
 8001ff4:	40023800 	.word	0x40023800
 8001ff8:	40007000 	.word	0x40007000

08001ffc <main>:
{
 8001ffc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8002000:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8002002:	f002 f833 	bl	800406c <HAL_Init>
  SystemClock_Config();
 8002006:	f7ff ffad 	bl	8001f64 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800200a:	2214      	movs	r2, #20
 800200c:	2100      	movs	r1, #0
 800200e:	a80d      	add	r0, sp, #52	@ 0x34
 8002010:	f021 fbf3 	bl	80237fa <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002014:	2400      	movs	r4, #0
 8002016:	4bc7      	ldr	r3, [pc, #796]	@ (8002334 <main+0x338>)
 8002018:	9400      	str	r4, [sp, #0]
 800201a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800201c:	48c6      	ldr	r0, [pc, #792]	@ (8002338 <main+0x33c>)
  hi2c3.Instance = I2C3;
 800201e:	4dc7      	ldr	r5, [pc, #796]	@ (800233c <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002020:	f042 0210 	orr.w	r2, r2, #16
 8002024:	631a      	str	r2, [r3, #48]	@ 0x30
 8002026:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002028:	f002 0210 	and.w	r2, r2, #16
 800202c:	9200      	str	r2, [sp, #0]
 800202e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002030:	9401      	str	r4, [sp, #4]
 8002032:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002034:	f042 0220 	orr.w	r2, r2, #32
 8002038:	631a      	str	r2, [r3, #48]	@ 0x30
 800203a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800203c:	f002 0220 	and.w	r2, r2, #32
 8002040:	9201      	str	r2, [sp, #4]
 8002042:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002044:	9402      	str	r4, [sp, #8]
 8002046:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002048:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800204c:	631a      	str	r2, [r3, #48]	@ 0x30
 800204e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002050:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8002054:	9202      	str	r2, [sp, #8]
 8002056:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002058:	9403      	str	r4, [sp, #12]
 800205a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800205c:	f042 0204 	orr.w	r2, r2, #4
 8002060:	631a      	str	r2, [r3, #48]	@ 0x30
 8002062:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002064:	f002 0204 	and.w	r2, r2, #4
 8002068:	9203      	str	r2, [sp, #12]
 800206a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800206c:	9404      	str	r4, [sp, #16]
 800206e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002070:	f042 0201 	orr.w	r2, r2, #1
 8002074:	631a      	str	r2, [r3, #48]	@ 0x30
 8002076:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002078:	f002 0201 	and.w	r2, r2, #1
 800207c:	9204      	str	r2, [sp, #16]
 800207e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002080:	9405      	str	r4, [sp, #20]
 8002082:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002084:	f042 0202 	orr.w	r2, r2, #2
 8002088:	631a      	str	r2, [r3, #48]	@ 0x30
 800208a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800208c:	f002 0202 	and.w	r2, r2, #2
 8002090:	9205      	str	r2, [sp, #20]
 8002092:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8002094:	9406      	str	r4, [sp, #24]
 8002096:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002098:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800209c:	631a      	str	r2, [r3, #48]	@ 0x30
 800209e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020a0:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80020a4:	9206      	str	r2, [sp, #24]
 80020a6:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80020a8:	9407      	str	r4, [sp, #28]
 80020aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020ac:	f042 0208 	orr.w	r2, r2, #8
 80020b0:	631a      	str	r2, [r3, #48]	@ 0x30
 80020b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020b4:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80020b8:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80020ba:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80020bc:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80020be:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80020c0:	f002 fa5a 	bl	8004578 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 80020c4:	489e      	ldr	r0, [pc, #632]	@ (8002340 <main+0x344>)
 80020c6:	2201      	movs	r2, #1
 80020c8:	2102      	movs	r1, #2
 80020ca:	f002 fa55 	bl	8004578 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020ce:	4622      	mov	r2, r4
 80020d0:	489b      	ldr	r0, [pc, #620]	@ (8002340 <main+0x344>)
 80020d2:	2104      	movs	r1, #4
 80020d4:	f002 fa50 	bl	8004578 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80020d8:	4622      	mov	r2, r4
 80020da:	489a      	ldr	r0, [pc, #616]	@ (8002344 <main+0x348>)
 80020dc:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 80020e0:	f002 fa4a 	bl	8004578 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80020e4:	2601      	movs	r6, #1
 80020e6:	233c      	movs	r3, #60	@ 0x3c
 80020e8:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020ec:	4892      	ldr	r0, [pc, #584]	@ (8002338 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020ee:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020f0:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020f2:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 80020f4:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020f6:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020f8:	f002 f954 	bl	80043a4 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 80020fc:	4890      	ldr	r0, [pc, #576]	@ (8002340 <main+0x344>)
 80020fe:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002100:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002104:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8002108:	f002 f94c 	bl	80043a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800210c:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800210e:	488c      	ldr	r0, [pc, #560]	@ (8002340 <main+0x344>)
 8002110:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002112:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002116:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800211a:	f002 f943 	bl	80043a4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800211e:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8002120:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002124:	4887      	ldr	r0, [pc, #540]	@ (8002344 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002126:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800212a:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800212e:	f002 f939 	bl	80043a4 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8002132:	4885      	ldr	r0, [pc, #532]	@ (8002348 <main+0x34c>)
 8002134:	4b85      	ldr	r3, [pc, #532]	@ (800234c <main+0x350>)
 8002136:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8002138:	f002 f82a 	bl	8004190 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800213c:	f8df c234 	ldr.w	ip, [pc, #564]	@ 8002374 <main+0x378>
 8002140:	4b83      	ldr	r3, [pc, #524]	@ (8002350 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002142:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8002144:	e9c5 c300 	strd	ip, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8002148:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800214a:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800214e:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8002152:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002156:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800215a:	f002 fc1b 	bl	8004994 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800215e:	2110      	movs	r1, #16
 8002160:	4628      	mov	r0, r5
 8002162:	f002 fe5f 	bl	8004e24 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8002166:	4621      	mov	r1, r4
 8002168:	4628      	mov	r0, r5
 800216a:	f002 fe7a 	bl	8004e62 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800216e:	4d79      	ldr	r5, [pc, #484]	@ (8002354 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8002170:	f8df e204 	ldr.w	lr, [pc, #516]	@ 8002378 <main+0x37c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002174:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8002176:	f44f 7382 	mov.w	r3, #260	@ 0x104
 800217a:	e9c5 e300 	strd	lr, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800217e:	f44f 7800 	mov.w	r8, #512	@ 0x200
 8002182:	2318      	movs	r3, #24
 8002184:	e9c5 8306 	strd	r8, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8002188:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 800218a:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800218c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002190:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8002194:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCPolynomial = 10;
 8002198:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800219a:	f004 fa21 	bl	80065e0 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 800219e:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 80021a0:	4622      	mov	r2, r4
 80021a2:	4639      	mov	r1, r7
 80021a4:	4866      	ldr	r0, [pc, #408]	@ (8002340 <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 80021a6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 80021aa:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 80021ae:	f002 f9e3 	bl	8004578 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 80021b2:	4632      	mov	r2, r6
 80021b4:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80021b8:	a909      	add	r1, sp, #36	@ 0x24
 80021ba:	4628      	mov	r0, r5
 80021bc:	f004 fa6c 	bl	8006698 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 80021c0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80021c4:	4632      	mov	r2, r6
 80021c6:	a90d      	add	r1, sp, #52	@ 0x34
 80021c8:	4628      	mov	r0, r5
 80021ca:	f004 fc11 	bl	80069f0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 80021ce:	4632      	mov	r2, r6
 80021d0:	4639      	mov	r1, r7
 80021d2:	485b      	ldr	r0, [pc, #364]	@ (8002340 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80021d4:	4d60      	ldr	r5, [pc, #384]	@ (8002358 <main+0x35c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 80021d6:	f002 f9cf 	bl	8004578 <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 80021da:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 80021de:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 80021e0:	bf04      	itt	eq
 80021e2:	4b5e      	ldreq	r3, [pc, #376]	@ (800235c <main+0x360>)
 80021e4:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80021e6:	4b5e      	ldr	r3, [pc, #376]	@ (8002360 <main+0x364>)
 80021e8:	2701      	movs	r7, #1
 80021ea:	e9c5 3700 	strd	r3, r7, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80021ee:	f04f 0910 	mov.w	r9, #16
 80021f2:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80021f4:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80021f6:	e9c5 9304 	strd	r9, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80021fa:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80021fe:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8002202:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8002206:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800220a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 800220e:	2602      	movs	r6, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8002210:	f04f 0b04 	mov.w	fp, #4
  SdramTiming.WriteRecoveryTime = 3;
 8002214:	f04f 0803 	mov.w	r8, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8002218:	62ab      	str	r3, [r5, #40]	@ 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800221a:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 800221c:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800221e:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 8002220:	e9cd 630d 	strd	r6, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8002224:	e9cd b30f 	strd	fp, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002228:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800222c:	e9c5 4b02 	strd	r4, fp, [r5, #8]
  SdramTiming.RPDelay = 2;
 8002230:	e9cd 8611 	strd	r8, r6, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8002234:	9613      	str	r6, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002236:	f004 f8b7 	bl	80063a8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800223a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800223e:	a909      	add	r1, sp, #36	@ 0x24
 8002240:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8002242:	e9cd a70a 	strd	sl, r7, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8002246:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8002248:	9709      	str	r7, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 800224a:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800224c:	f004 f8cc 	bl	80063e8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8002250:	4638      	mov	r0, r7
 8002252:	f001 ff37 	bl	80040c4 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002256:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800225a:	a909      	add	r1, sp, #36	@ 0x24
 800225c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800225e:	e9cd 6a09 	strd	r6, sl, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8002262:	e9cd 740b 	strd	r7, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002266:	f004 f8bf 	bl	80063e8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800226a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800226e:	a909      	add	r1, sp, #36	@ 0x24
 8002270:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002272:	e9cd 8a09 	strd	r8, sl, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8002276:	e9cd b40b 	strd	fp, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800227a:	f004 f8b5 	bl	80063e8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800227e:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8002282:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8002284:	9b08      	ldr	r3, [sp, #32]
 8002286:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002288:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800228c:	a909      	add	r1, sp, #36	@ 0x24
 800228e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002290:	e9cd ba09 	strd	fp, sl, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8002294:	970b      	str	r7, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002296:	f004 f8a7 	bl	80063e8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800229a:	f240 516a 	movw	r1, #1386	@ 0x56a
 800229e:	4628      	mov	r0, r5
 80022a0:	f004 f8c0 	bl	8006424 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80022a4:	2234      	movs	r2, #52	@ 0x34
 80022a6:	4621      	mov	r1, r4
 80022a8:	eb0d 0002 	add.w	r0, sp, r2
 80022ac:	f021 faa5 	bl	80237fa <memset>
  hltdc.Instance = LTDC;
 80022b0:	4d2c      	ldr	r5, [pc, #176]	@ (8002364 <main+0x368>)
 80022b2:	4b2d      	ldr	r3, [pc, #180]	@ (8002368 <main+0x36c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80022b4:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80022b6:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 80022ba:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 80022bc:	e9c5 3705 	strd	r3, r7, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80022c0:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 80022c2:	e9c5 3807 	strd	r3, r8, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80022c6:	f240 120d 	movw	r2, #269	@ 0x10d
 80022ca:	f240 1343 	movw	r3, #323	@ 0x143
 80022ce:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 80022d2:	f240 1117 	movw	r1, #279	@ 0x117
 80022d6:	f240 1347 	movw	r3, #327	@ 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80022da:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80022dc:	e9c5 130b 	strd	r1, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80022e0:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 80022e4:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 80022e6:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80022ea:	f002 fe4d 	bl	8004f88 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80022ee:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 80022f0:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 80022f2:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80022f6:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 80022fa:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80022fc:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8002300:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY0 = 0;
 8002304:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002308:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.ImageWidth = 240;
 800230a:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800230e:	4628      	mov	r0, r5
 8002310:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8002312:	4d16      	ldr	r5, [pc, #88]	@ (800236c <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8002314:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8002316:	e9cd 3610 	strd	r3, r6, [sp, #64]	@ 0x40
  pLayerCfg.WindowX0 = 0;
 800231a:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 800231c:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8002320:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002324:	f002 fee4 	bl	80050f0 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8002328:	4b11      	ldr	r3, [pc, #68]	@ (8002370 <main+0x374>)
 800232a:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8002330:	682b      	ldr	r3, [r5, #0]
 8002332:	e023      	b.n	800237c <main+0x380>
 8002334:	40023800 	.word	0x40023800
 8002338:	40021000 	.word	0x40021000
 800233c:	2000309c 	.word	0x2000309c
 8002340:	40020800 	.word	0x40020800
 8002344:	40020c00 	.word	0x40020c00
 8002348:	20003130 	.word	0x20003130
 800234c:	40023000 	.word	0x40023000
 8002350:	000186a0 	.word	0x000186a0
 8002354:	20002f9c 	.word	0x20002f9c
 8002358:	20002f20 	.word	0x20002f20
 800235c:	20002f08 	.word	0x20002f08
 8002360:	a0000140 	.word	0xa0000140
 8002364:	20002ff4 	.word	0x20002ff4
 8002368:	40016800 	.word	0x40016800
 800236c:	20002f04 	.word	0x20002f04
 8002370:	20000064 	.word	0x20000064
 8002374:	40005c00 	.word	0x40005c00
 8002378:	40015000 	.word	0x40015000
  hdma2d.Instance = DMA2D;
 800237c:	4d27      	ldr	r5, [pc, #156]	@ (800241c <main+0x420>)
  LcdDrv->DisplayOff();
 800237e:	68db      	ldr	r3, [r3, #12]
 8002380:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8002382:	4b27      	ldr	r3, [pc, #156]	@ (8002420 <main+0x424>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002384:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8002386:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 800238a:	e9c5 6402 	strd	r6, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800238e:	e9c5 460a 	strd	r4, r6, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8002392:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002396:	f001 ff0b 	bl	80041b0 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800239a:	4639      	mov	r1, r7
 800239c:	4628      	mov	r0, r5
 800239e:	f001 ffbd 	bl	800431c <HAL_DMA2D_ConfigLayer>
  huart1.Init.BaudRate = 115200;
 80023a2:	4d20      	ldr	r5, [pc, #128]	@ (8002424 <main+0x428>)
  huart1.Instance = USART1;
 80023a4:	4820      	ldr	r0, [pc, #128]	@ (8002428 <main+0x42c>)
  huart1.Init.BaudRate = 115200;
 80023a6:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 80023aa:	e9c0 5300 	strd	r5, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80023ae:	230c      	movs	r3, #12
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80023b0:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80023b4:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.Parity = UART_PARITY_NONE;
 80023b8:	6104      	str	r4, [r0, #16]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80023ba:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80023bc:	f004 fdce 	bl	8006f5c <HAL_UART_Init>
  MX_TouchGFX_Init();
 80023c0:	f7fe fb62 	bl	8000a88 <MX_TouchGFX_Init>
  MX_USB_DEVICE_Init();
 80023c4:	f7ff fb4e 	bl	8001a64 <MX_USB_DEVICE_Init>
  MX_TouchGFX_PreOSInit();
 80023c8:	f7fe fb5d 	bl	8000a86 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80023cc:	f005 fc06 	bl	8007bdc <osKernelInitialize>
  myQueue01Handle = osMessageQueueNew (16, sizeof(uint16_t), &myQueue01_attributes);
 80023d0:	4a16      	ldr	r2, [pc, #88]	@ (800242c <main+0x430>)
 80023d2:	4631      	mov	r1, r6
 80023d4:	4648      	mov	r0, r9
 80023d6:	f005 fd47 	bl	8007e68 <osMessageQueueNew>
 80023da:	4b15      	ldr	r3, [pc, #84]	@ (8002430 <main+0x434>)
  mouseEventQueueHandle = osMessageQueueNew (32, sizeof(MouseEvent), &mouseEventQueue_attributes);
 80023dc:	4a15      	ldr	r2, [pc, #84]	@ (8002434 <main+0x438>)
  myQueue01Handle = osMessageQueueNew (16, sizeof(uint16_t), &myQueue01_attributes);
 80023de:	6018      	str	r0, [r3, #0]
  mouseEventQueueHandle = osMessageQueueNew (32, sizeof(MouseEvent), &mouseEventQueue_attributes);
 80023e0:	4641      	mov	r1, r8
 80023e2:	2020      	movs	r0, #32
 80023e4:	f005 fd40 	bl	8007e68 <osMessageQueueNew>
 80023e8:	4b13      	ldr	r3, [pc, #76]	@ (8002438 <main+0x43c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80023ea:	4a14      	ldr	r2, [pc, #80]	@ (800243c <main+0x440>)
  mouseEventQueueHandle = osMessageQueueNew (32, sizeof(MouseEvent), &mouseEventQueue_attributes);
 80023ec:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80023ee:	4621      	mov	r1, r4
 80023f0:	4813      	ldr	r0, [pc, #76]	@ (8002440 <main+0x444>)
 80023f2:	f005 fc1f 	bl	8007c34 <osThreadNew>
 80023f6:	4b13      	ldr	r3, [pc, #76]	@ (8002444 <main+0x448>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80023f8:	4a13      	ldr	r2, [pc, #76]	@ (8002448 <main+0x44c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80023fa:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80023fc:	4621      	mov	r1, r4
 80023fe:	4813      	ldr	r0, [pc, #76]	@ (800244c <main+0x450>)
 8002400:	f005 fc18 	bl	8007c34 <osThreadNew>
 8002404:	4b12      	ldr	r3, [pc, #72]	@ (8002450 <main+0x454>)
  mouseTaskHandle = osThreadNew(mouseProcessingTask, NULL, &mouseTask_attributes);
 8002406:	4a13      	ldr	r2, [pc, #76]	@ (8002454 <main+0x458>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002408:	6018      	str	r0, [r3, #0]
  mouseTaskHandle = osThreadNew(mouseProcessingTask, NULL, &mouseTask_attributes);
 800240a:	4621      	mov	r1, r4
 800240c:	4812      	ldr	r0, [pc, #72]	@ (8002458 <main+0x45c>)
 800240e:	f005 fc11 	bl	8007c34 <osThreadNew>
 8002412:	4b12      	ldr	r3, [pc, #72]	@ (800245c <main+0x460>)
 8002414:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8002416:	f005 fbf3 	bl	8007c00 <osKernelStart>
  while (1)
 800241a:	e7fe      	b.n	800241a <main+0x41e>
 800241c:	200030f0 	.word	0x200030f0
 8002420:	4002b000 	.word	0x4002b000
 8002424:	40011000 	.word	0x40011000
 8002428:	20002f54 	.word	0x20002f54
 800242c:	080256bc 	.word	0x080256bc
 8002430:	20002f14 	.word	0x20002f14
 8002434:	080256a4 	.word	0x080256a4
 8002438:	20002f10 	.word	0x20002f10
 800243c:	080256f8 	.word	0x080256f8
 8002440:	08001f59 	.word	0x08001f59
 8002444:	20002f1c 	.word	0x20002f1c
 8002448:	080256d4 	.word	0x080256d4
 800244c:	08000a97 	.word	0x08000a97
 8002450:	20002f18 	.word	0x20002f18
 8002454:	08025680 	.word	0x08025680
 8002458:	08001e35 	.word	0x08001e35
 800245c:	20002f0c 	.word	0x20002f0c

08002460 <enqueueMouseEvent>:
{
 8002460:	b507      	push	{r0, r1, r2, lr}
 8002462:	4603      	mov	r3, r0
    if(mouseEventQueueHandle == NULL) return false;
 8002464:	4809      	ldr	r0, [pc, #36]	@ (800248c <enqueueMouseEvent+0x2c>)
 8002466:	6800      	ldr	r0, [r0, #0]
 8002468:	b168      	cbz	r0, 8002486 <enqueueMouseEvent+0x26>
    event.deltaX = deltaX;
 800246a:	f88d 3004 	strb.w	r3, [sp, #4]
    return osMessageQueuePut(mouseEventQueueHandle, &event, 0, 0) == osOK;
 800246e:	2300      	movs	r3, #0
    event.deltaY = deltaY;
 8002470:	f88d 1005 	strb.w	r1, [sp, #5]
    event.eventType = eventType;
 8002474:	f88d 2006 	strb.w	r2, [sp, #6]
    return osMessageQueuePut(mouseEventQueueHandle, &event, 0, 0) == osOK;
 8002478:	a901      	add	r1, sp, #4
 800247a:	461a      	mov	r2, r3
 800247c:	f005 fd2f 	bl	8007ede <osMessageQueuePut>
 8002480:	fab0 f080 	clz	r0, r0
 8002484:	0940      	lsrs	r0, r0, #5
}
 8002486:	b003      	add	sp, #12
 8002488:	f85d fb04 	ldr.w	pc, [sp], #4
 800248c:	20002f10 	.word	0x20002f10

08002490 <IOE_Init>:
void IOE_Init(void)
 8002490:	4770      	bx	lr

08002492 <IOE_ITConfig>:
void IOE_ITConfig(void)
 8002492:	4770      	bx	lr

08002494 <IOE_Write>:
{
 8002494:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8002496:	4b09      	ldr	r3, [pc, #36]	@ (80024bc <IOE_Write+0x28>)
 8002498:	f88d 2017 	strb.w	r2, [sp, #23]
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	9302      	str	r3, [sp, #8]
 80024a0:	f10d 0217 	add.w	r2, sp, #23
 80024a4:	2301      	movs	r3, #1
 80024a6:	9200      	str	r2, [sp, #0]
 80024a8:	9301      	str	r3, [sp, #4]
 80024aa:	460a      	mov	r2, r1
 80024ac:	4601      	mov	r1, r0
 80024ae:	4804      	ldr	r0, [pc, #16]	@ (80024c0 <IOE_Write+0x2c>)
 80024b0:	f002 fb18 	bl	8004ae4 <HAL_I2C_Mem_Write>
}
 80024b4:	b007      	add	sp, #28
 80024b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80024ba:	bf00      	nop
 80024bc:	20000060 	.word	0x20000060
 80024c0:	2000309c 	.word	0x2000309c

080024c4 <IOE_Read>:
{
 80024c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80024c6:	2300      	movs	r3, #0
 80024c8:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80024cc:	4b08      	ldr	r3, [pc, #32]	@ (80024f0 <IOE_Read+0x2c>)
 80024ce:	681b      	ldr	r3, [r3, #0]
 80024d0:	9302      	str	r3, [sp, #8]
{
 80024d2:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80024d4:	2301      	movs	r3, #1
 80024d6:	f10d 0117 	add.w	r1, sp, #23
 80024da:	9100      	str	r1, [sp, #0]
 80024dc:	9301      	str	r3, [sp, #4]
 80024de:	4601      	mov	r1, r0
 80024e0:	4804      	ldr	r0, [pc, #16]	@ (80024f4 <IOE_Read+0x30>)
 80024e2:	f002 fb8f 	bl	8004c04 <HAL_I2C_Mem_Read>
}
 80024e6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80024ea:	b007      	add	sp, #28
 80024ec:	f85d fb04 	ldr.w	pc, [sp], #4
 80024f0:	20000060 	.word	0x20000060
 80024f4:	2000309c 	.word	0x2000309c

080024f8 <IOE_ReadMultiple>:
{
 80024f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80024fa:	4c08      	ldr	r4, [pc, #32]	@ (800251c <IOE_ReadMultiple+0x24>)
 80024fc:	6824      	ldr	r4, [r4, #0]
 80024fe:	9200      	str	r2, [sp, #0]
 8002500:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002504:	460a      	mov	r2, r1
 8002506:	2301      	movs	r3, #1
 8002508:	4601      	mov	r1, r0
 800250a:	4805      	ldr	r0, [pc, #20]	@ (8002520 <IOE_ReadMultiple+0x28>)
 800250c:	f002 fb7a 	bl	8004c04 <HAL_I2C_Mem_Read>
}
 8002510:	3800      	subs	r0, #0
 8002512:	bf18      	it	ne
 8002514:	2001      	movne	r0, #1
 8002516:	b004      	add	sp, #16
 8002518:	bd10      	pop	{r4, pc}
 800251a:	bf00      	nop
 800251c:	20000060 	.word	0x20000060
 8002520:	2000309c 	.word	0x2000309c

08002524 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8002524:	f001 bdce 	b.w	80040c4 <HAL_Delay>

08002528 <LCD_IO_Init>:
{
 8002528:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800252a:	4c06      	ldr	r4, [pc, #24]	@ (8002544 <LCD_IO_Init+0x1c>)
 800252c:	2200      	movs	r2, #0
 800252e:	4620      	mov	r0, r4
 8002530:	2104      	movs	r1, #4
 8002532:	f002 f821 	bl	8004578 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002536:	4620      	mov	r0, r4
 8002538:	2201      	movs	r2, #1
}
 800253a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800253e:	2104      	movs	r1, #4
 8002540:	f002 b81a 	b.w	8004578 <HAL_GPIO_WritePin>
 8002544:	40020800 	.word	0x40020800

08002548 <LCD_IO_WriteData>:
{
 8002548:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800254a:	4d0b      	ldr	r5, [pc, #44]	@ (8002578 <LCD_IO_WriteData+0x30>)
{
 800254c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800254e:	2201      	movs	r2, #1
 8002550:	480a      	ldr	r0, [pc, #40]	@ (800257c <LCD_IO_WriteData+0x34>)
 8002552:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002556:	f002 f80f 	bl	8004578 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800255a:	2200      	movs	r2, #0
 800255c:	2104      	movs	r1, #4
 800255e:	4628      	mov	r0, r5
 8002560:	f002 f80a 	bl	8004578 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002564:	4620      	mov	r0, r4
 8002566:	f7ff fc53 	bl	8001e10 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800256a:	4628      	mov	r0, r5
 800256c:	2201      	movs	r2, #1
}
 800256e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002572:	2104      	movs	r1, #4
 8002574:	f002 b800 	b.w	8004578 <HAL_GPIO_WritePin>
 8002578:	40020800 	.word	0x40020800
 800257c:	40020c00 	.word	0x40020c00

08002580 <LCD_IO_WriteReg>:
{
 8002580:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002582:	4d0b      	ldr	r5, [pc, #44]	@ (80025b0 <LCD_IO_WriteReg+0x30>)
{
 8002584:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002586:	2200      	movs	r2, #0
 8002588:	480a      	ldr	r0, [pc, #40]	@ (80025b4 <LCD_IO_WriteReg+0x34>)
 800258a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800258e:	f001 fff3 	bl	8004578 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002592:	2200      	movs	r2, #0
 8002594:	2104      	movs	r1, #4
 8002596:	4628      	mov	r0, r5
 8002598:	f001 ffee 	bl	8004578 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 800259c:	4620      	mov	r0, r4
 800259e:	f7ff fc37 	bl	8001e10 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80025a2:	4628      	mov	r0, r5
 80025a4:	2201      	movs	r2, #1
}
 80025a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80025aa:	2104      	movs	r1, #4
 80025ac:	f001 bfe4 	b.w	8004578 <HAL_GPIO_WritePin>
 80025b0:	40020800 	.word	0x40020800
 80025b4:	40020c00 	.word	0x40020c00

080025b8 <LCD_IO_ReadData>:
{
 80025b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80025ba:	4e14      	ldr	r6, [pc, #80]	@ (800260c <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80025bc:	4f14      	ldr	r7, [pc, #80]	@ (8002610 <LCD_IO_ReadData+0x58>)
{
 80025be:	4605      	mov	r5, r0
 80025c0:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80025c2:	4630      	mov	r0, r6
 80025c4:	2200      	movs	r2, #0
 80025c6:	2104      	movs	r1, #4
 80025c8:	f001 ffd6 	bl	8004578 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80025cc:	2200      	movs	r2, #0
 80025ce:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80025d2:	4638      	mov	r0, r7
 80025d4:	f001 ffd0 	bl	8004578 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80025d8:	4628      	mov	r0, r5
 80025da:	f7ff fc19 	bl	8001e10 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80025de:	4b0d      	ldr	r3, [pc, #52]	@ (8002614 <LCD_IO_ReadData+0x5c>)
 80025e0:	480d      	ldr	r0, [pc, #52]	@ (8002618 <LCD_IO_ReadData+0x60>)
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	4622      	mov	r2, r4
 80025e6:	a901      	add	r1, sp, #4
 80025e8:	f004 fa02 	bl	80069f0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80025ec:	4638      	mov	r0, r7
 80025ee:	2201      	movs	r2, #1
 80025f0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 80025f4:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80025f6:	f001 ffbf 	bl	8004578 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80025fa:	4630      	mov	r0, r6
 80025fc:	2201      	movs	r2, #1
 80025fe:	2104      	movs	r1, #4
 8002600:	f001 ffba 	bl	8004578 <HAL_GPIO_WritePin>
}
 8002604:	4620      	mov	r0, r4
 8002606:	b003      	add	sp, #12
 8002608:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800260a:	bf00      	nop
 800260c:	40020800 	.word	0x40020800
 8002610:	40020c00 	.word	0x40020c00
 8002614:	2000005c 	.word	0x2000005c
 8002618:	20002f9c 	.word	0x20002f9c

0800261c <LCD_Delay>:
  HAL_Delay(Delay);
 800261c:	f001 bd52 	b.w	80040c4 <HAL_Delay>

08002620 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8002620:	6802      	ldr	r2, [r0, #0]
 8002622:	4b03      	ldr	r3, [pc, #12]	@ (8002630 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002624:	429a      	cmp	r2, r3
 8002626:	d101      	bne.n	800262c <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8002628:	f001 bd3a 	b.w	80040a0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800262c:	4770      	bx	lr
 800262e:	bf00      	nop
 8002630:	40001000 	.word	0x40001000

08002634 <Error_Handler>:
void Error_Handler(void)
{  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

/* USER CODE END Error_Handler_Debug */
}
 8002634:	4770      	bx	lr
	...

08002638 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002638:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800263a:	4b0e      	ldr	r3, [pc, #56]	@ (8002674 <HAL_MspInit+0x3c>)
 800263c:	2200      	movs	r2, #0
 800263e:	9200      	str	r2, [sp, #0]
 8002640:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002642:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8002646:	6459      	str	r1, [r3, #68]	@ 0x44
 8002648:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800264a:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 800264e:	9100      	str	r1, [sp, #0]
 8002650:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002652:	9201      	str	r2, [sp, #4]
 8002654:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8002656:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 800265a:	6419      	str	r1, [r3, #64]	@ 0x40
 800265c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800265e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002662:	9301      	str	r3, [sp, #4]
 8002664:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002666:	210f      	movs	r1, #15
 8002668:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800266c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800266e:	f001 bd4f 	b.w	8004110 <HAL_NVIC_SetPriority>
 8002672:	bf00      	nop
 8002674:	40023800 	.word	0x40023800

08002678 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002678:	6802      	ldr	r2, [r0, #0]
 800267a:	4b09      	ldr	r3, [pc, #36]	@ (80026a0 <HAL_CRC_MspInit+0x28>)
 800267c:	429a      	cmp	r2, r3
{
 800267e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002680:	d10b      	bne.n	800269a <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002682:	2300      	movs	r3, #0
 8002684:	9301      	str	r3, [sp, #4]
 8002686:	4b07      	ldr	r3, [pc, #28]	@ (80026a4 <HAL_CRC_MspInit+0x2c>)
 8002688:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800268a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800268e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002690:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002692:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002696:	9301      	str	r3, [sp, #4]
 8002698:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 800269a:	b002      	add	sp, #8
 800269c:	4770      	bx	lr
 800269e:	bf00      	nop
 80026a0:	40023000 	.word	0x40023000
 80026a4:	40023800 	.word	0x40023800

080026a8 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80026a8:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80026aa:	4b0f      	ldr	r3, [pc, #60]	@ (80026e8 <HAL_DMA2D_MspInit+0x40>)
 80026ac:	6802      	ldr	r2, [r0, #0]
 80026ae:	429a      	cmp	r2, r3
 80026b0:	d116      	bne.n	80026e0 <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80026b2:	2200      	movs	r2, #0
 80026b4:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 80026b8:	9201      	str	r2, [sp, #4]
 80026ba:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80026bc:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 80026c0:	6319      	str	r1, [r3, #48]	@ 0x30
 80026c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026c4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80026c8:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80026ca:	2105      	movs	r1, #5
 80026cc:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80026ce:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80026d0:	f001 fd1e 	bl	8004110 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80026d4:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 80026d6:	b003      	add	sp, #12
 80026d8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80026dc:	f001 bd4a 	b.w	8004174 <HAL_NVIC_EnableIRQ>
}
 80026e0:	b003      	add	sp, #12
 80026e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80026e6:	bf00      	nop
 80026e8:	4002b000 	.word	0x4002b000

080026ec <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80026ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80026f0:	4604      	mov	r4, r0
 80026f2:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026f4:	2214      	movs	r2, #20
 80026f6:	2100      	movs	r1, #0
 80026f8:	a803      	add	r0, sp, #12
 80026fa:	f021 f87e 	bl	80237fa <memset>
  if(hi2c->Instance==I2C3)
 80026fe:	6822      	ldr	r2, [r4, #0]
 8002700:	4b24      	ldr	r3, [pc, #144]	@ (8002794 <HAL_I2C_MspInit+0xa8>)
 8002702:	429a      	cmp	r2, r3
 8002704:	d143      	bne.n	800278e <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002706:	4c24      	ldr	r4, [pc, #144]	@ (8002798 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002708:	4824      	ldr	r0, [pc, #144]	@ (800279c <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800270a:	2500      	movs	r5, #0
 800270c:	9500      	str	r5, [sp, #0]
 800270e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002710:	f043 0304 	orr.w	r3, r3, #4
 8002714:	6323      	str	r3, [r4, #48]	@ 0x30
 8002716:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002718:	f003 0304 	and.w	r3, r3, #4
 800271c:	9300      	str	r3, [sp, #0]
 800271e:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002720:	9501      	str	r5, [sp, #4]
 8002722:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002724:	f043 0301 	orr.w	r3, r3, #1
 8002728:	6323      	str	r3, [r4, #48]	@ 0x30
 800272a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800272c:	f003 0301 	and.w	r3, r3, #1
 8002730:	9301      	str	r3, [sp, #4]
 8002732:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002734:	f04f 0912 	mov.w	r9, #18
 8002738:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800273c:	f04f 0801 	mov.w	r8, #1
 8002740:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002742:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002744:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002746:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800274a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800274e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002750:	f001 fe28 	bl	80043a4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002754:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002758:	4811      	ldr	r0, [pc, #68]	@ (80027a0 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800275a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800275c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800275e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002762:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002766:	f001 fe1d 	bl	80043a4 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 800276a:	9502      	str	r5, [sp, #8]
 800276c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800276e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002772:	6423      	str	r3, [r4, #64]	@ 0x40
 8002774:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002776:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800277a:	9302      	str	r3, [sp, #8]
 800277c:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800277e:	6a23      	ldr	r3, [r4, #32]
 8002780:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002784:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002786:	6a23      	ldr	r3, [r4, #32]
 8002788:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800278c:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 800278e:	b009      	add	sp, #36	@ 0x24
 8002790:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002794:	40005c00 	.word	0x40005c00
 8002798:	40023800 	.word	0x40023800
 800279c:	40020800 	.word	0x40020800
 80027a0:	40020000 	.word	0x40020000

080027a4 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80027a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80027a6:	b099      	sub	sp, #100	@ 0x64
 80027a8:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027aa:	2214      	movs	r2, #20
 80027ac:	2100      	movs	r1, #0
 80027ae:	a807      	add	r0, sp, #28
 80027b0:	f021 f823 	bl	80237fa <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80027b4:	2230      	movs	r2, #48	@ 0x30
 80027b6:	eb0d 0002 	add.w	r0, sp, r2
 80027ba:	2100      	movs	r1, #0
 80027bc:	f021 f81d 	bl	80237fa <memset>
  if(hltdc->Instance==LTDC)
 80027c0:	6822      	ldr	r2, [r4, #0]
 80027c2:	4b5e      	ldr	r3, [pc, #376]	@ (800293c <HAL_LTDC_MspInit+0x198>)
 80027c4:	429a      	cmp	r2, r3
 80027c6:	f040 80b7 	bne.w	8002938 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80027ca:	2308      	movs	r3, #8
 80027cc:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80027ce:	23c0      	movs	r3, #192	@ 0xc0
 80027d0:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80027d2:	2304      	movs	r3, #4
 80027d4:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80027d6:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80027d8:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80027dc:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80027de:	f003 fcb7 	bl	8006150 <HAL_RCCEx_PeriphCLKConfig>
 80027e2:	b108      	cbz	r0, 80027e8 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 80027e4:	f7ff ff26 	bl	8002634 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80027e8:	4b55      	ldr	r3, [pc, #340]	@ (8002940 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027ea:	4856      	ldr	r0, [pc, #344]	@ (8002944 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80027ec:	2400      	movs	r4, #0
 80027ee:	9400      	str	r4, [sp, #0]
 80027f0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80027f2:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80027f6:	645a      	str	r2, [r3, #68]	@ 0x44
 80027f8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80027fa:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 80027fe:	9200      	str	r2, [sp, #0]
 8002800:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002802:	9401      	str	r4, [sp, #4]
 8002804:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002806:	f042 0220 	orr.w	r2, r2, #32
 800280a:	631a      	str	r2, [r3, #48]	@ 0x30
 800280c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800280e:	f002 0220 	and.w	r2, r2, #32
 8002812:	9201      	str	r2, [sp, #4]
 8002814:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002816:	9402      	str	r4, [sp, #8]
 8002818:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800281a:	f042 0201 	orr.w	r2, r2, #1
 800281e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002820:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002822:	f002 0201 	and.w	r2, r2, #1
 8002826:	9202      	str	r2, [sp, #8]
 8002828:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800282a:	9403      	str	r4, [sp, #12]
 800282c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800282e:	f042 0202 	orr.w	r2, r2, #2
 8002832:	631a      	str	r2, [r3, #48]	@ 0x30
 8002834:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002836:	f002 0202 	and.w	r2, r2, #2
 800283a:	9203      	str	r2, [sp, #12]
 800283c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800283e:	9404      	str	r4, [sp, #16]
 8002840:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002842:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002846:	631a      	str	r2, [r3, #48]	@ 0x30
 8002848:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800284a:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 800284e:	9204      	str	r2, [sp, #16]
 8002850:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002852:	9405      	str	r4, [sp, #20]
 8002854:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002856:	f042 0204 	orr.w	r2, r2, #4
 800285a:	631a      	str	r2, [r3, #48]	@ 0x30
 800285c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800285e:	f002 0204 	and.w	r2, r2, #4
 8002862:	9205      	str	r2, [sp, #20]
 8002864:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002866:	9406      	str	r4, [sp, #24]
 8002868:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800286a:	f042 0208 	orr.w	r2, r2, #8
 800286e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002870:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002872:	f003 0308 	and.w	r3, r3, #8
 8002876:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002878:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800287a:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800287c:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800287e:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002880:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002884:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002886:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800288a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800288e:	f001 fd89 	bl	80043a4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002892:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002896:	482c      	ldr	r0, [pc, #176]	@ (8002948 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002898:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800289a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800289c:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80028a0:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028a2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028a6:	f001 fd7d 	bl	80043a4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80028aa:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028ac:	4827      	ldr	r0, [pc, #156]	@ (800294c <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80028ae:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028b0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028b2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028b6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028ba:	f001 fd73 	bl	80043a4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80028be:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028c2:	4822      	ldr	r0, [pc, #136]	@ (800294c <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028c4:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028c6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028c8:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028cc:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028d0:	f001 fd68 	bl	80043a4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80028d4:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028d8:	481d      	ldr	r0, [pc, #116]	@ (8002950 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028da:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028dc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028de:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028e2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028e6:	f001 fd5d 	bl	80043a4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80028ea:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028ec:	4819      	ldr	r0, [pc, #100]	@ (8002954 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028ee:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028f0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028f2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80028f6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028fa:	f001 fd53 	bl	80043a4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80028fe:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002900:	4815      	ldr	r0, [pc, #84]	@ (8002958 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002902:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002904:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002906:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800290a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800290e:	f001 fd49 	bl	80043a4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002912:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002916:	480e      	ldr	r0, [pc, #56]	@ (8002950 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002918:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800291a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800291c:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002920:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002924:	f001 fd3e 	bl	80043a4 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002928:	2058      	movs	r0, #88	@ 0x58
 800292a:	4622      	mov	r2, r4
 800292c:	2105      	movs	r1, #5
 800292e:	f001 fbef 	bl	8004110 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002932:	2058      	movs	r0, #88	@ 0x58
 8002934:	f001 fc1e 	bl	8004174 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002938:	b019      	add	sp, #100	@ 0x64
 800293a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800293c:	40016800 	.word	0x40016800
 8002940:	40023800 	.word	0x40023800
 8002944:	40021400 	.word	0x40021400
 8002948:	40020000 	.word	0x40020000
 800294c:	40020400 	.word	0x40020400
 8002950:	40021800 	.word	0x40021800
 8002954:	40020800 	.word	0x40020800
 8002958:	40020c00 	.word	0x40020c00

0800295c <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 800295c:	b510      	push	{r4, lr}
 800295e:	4604      	mov	r4, r0
 8002960:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002962:	2214      	movs	r2, #20
 8002964:	2100      	movs	r1, #0
 8002966:	a803      	add	r0, sp, #12
 8002968:	f020 ff47 	bl	80237fa <memset>
  if(hspi->Instance==SPI5)
 800296c:	6822      	ldr	r2, [r4, #0]
 800296e:	4b14      	ldr	r3, [pc, #80]	@ (80029c0 <HAL_SPI_MspInit+0x64>)
 8002970:	429a      	cmp	r2, r3
 8002972:	d123      	bne.n	80029bc <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002974:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002978:	2100      	movs	r1, #0
 800297a:	9101      	str	r1, [sp, #4]
 800297c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800297e:	4811      	ldr	r0, [pc, #68]	@ (80029c4 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002980:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002984:	645a      	str	r2, [r3, #68]	@ 0x44
 8002986:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002988:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800298c:	9201      	str	r2, [sp, #4]
 800298e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002990:	9102      	str	r1, [sp, #8]
 8002992:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002994:	f042 0220 	orr.w	r2, r2, #32
 8002998:	631a      	str	r2, [r3, #48]	@ 0x30
 800299a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800299c:	f003 0320 	and.w	r3, r3, #32
 80029a0:	9302      	str	r3, [sp, #8]
 80029a2:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029a4:	f44f 7260 	mov.w	r2, #896	@ 0x380
 80029a8:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80029aa:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029ac:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80029b0:	2305      	movs	r3, #5
 80029b2:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80029b6:	a903      	add	r1, sp, #12
 80029b8:	f001 fcf4 	bl	80043a4 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 80029bc:	b008      	add	sp, #32
 80029be:	bd10      	pop	{r4, pc}
 80029c0:	40015000 	.word	0x40015000
 80029c4:	40021400 	.word	0x40021400

080029c8 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80029c8:	b510      	push	{r4, lr}
 80029ca:	4604      	mov	r4, r0
 80029cc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029ce:	2214      	movs	r2, #20
 80029d0:	2100      	movs	r1, #0
 80029d2:	a803      	add	r0, sp, #12
 80029d4:	f020 ff11 	bl	80237fa <memset>
  if(huart->Instance==USART1)
 80029d8:	6822      	ldr	r2, [r4, #0]
 80029da:	4b14      	ldr	r3, [pc, #80]	@ (8002a2c <HAL_UART_MspInit+0x64>)
 80029dc:	429a      	cmp	r2, r3
 80029de:	d123      	bne.n	8002a28 <HAL_UART_MspInit+0x60>
  {
    /* USER CODE BEGIN USART1_MspInit 0 */

    /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80029e0:	f503 3394 	add.w	r3, r3, #75776	@ 0x12800
 80029e4:	2100      	movs	r1, #0
 80029e6:	9101      	str	r1, [sp, #4]
 80029e8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029ea:	4811      	ldr	r0, [pc, #68]	@ (8002a30 <HAL_UART_MspInit+0x68>)
    __HAL_RCC_USART1_CLK_ENABLE();
 80029ec:	f042 0210 	orr.w	r2, r2, #16
 80029f0:	645a      	str	r2, [r3, #68]	@ 0x44
 80029f2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80029f4:	f002 0210 	and.w	r2, r2, #16
 80029f8:	9201      	str	r2, [sp, #4]
 80029fa:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029fc:	9102      	str	r1, [sp, #8]
 80029fe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002a00:	f042 0201 	orr.w	r2, r2, #1
 8002a04:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a06:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a08:	f003 0301 	and.w	r3, r3, #1
 8002a0c:	9302      	str	r3, [sp, #8]
 8002a0e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a10:	f44f 62c0 	mov.w	r2, #1536	@ 0x600
 8002a14:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002a16:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a18:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002a1c:	2307      	movs	r3, #7
 8002a1e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a22:	a903      	add	r1, sp, #12
 8002a24:	f001 fcbe 	bl	80043a4 <HAL_GPIO_Init>

    /* USER CODE END USART1_MspInit 1 */

  }

}
 8002a28:	b008      	add	sp, #32
 8002a2a:	bd10      	pop	{r4, pc}
 8002a2c:	40011000 	.word	0x40011000
 8002a30:	40020000 	.word	0x40020000

08002a34 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002a34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002a38:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002a3a:	2300      	movs	r3, #0
 8002a3c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002a3e:	4b2b      	ldr	r3, [pc, #172]	@ (8002aec <HAL_SDRAM_MspInit+0xb8>)
 8002a40:	681c      	ldr	r4, [r3, #0]
 8002a42:	2c00      	cmp	r4, #0
 8002a44:	d14f      	bne.n	8002ae6 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8002a46:	f04f 0801 	mov.w	r8, #1
 8002a4a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a4e:	4b28      	ldr	r3, [pc, #160]	@ (8002af0 <HAL_SDRAM_MspInit+0xbc>)
 8002a50:	9400      	str	r4, [sp, #0]
 8002a52:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a54:	4827      	ldr	r0, [pc, #156]	@ (8002af4 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a56:	ea42 0208 	orr.w	r2, r2, r8
 8002a5a:	639a      	str	r2, [r3, #56]	@ 0x38
 8002a5c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002a5e:	ea03 0308 	and.w	r3, r3, r8
 8002a62:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a64:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a66:	2603      	movs	r6, #3
 8002a68:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a6a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a6c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a6e:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8002a72:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a76:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a7a:	f001 fc93 	bl	80043a4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a7e:	481e      	ldr	r0, [pc, #120]	@ (8002af8 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a80:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a82:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a84:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a88:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a8c:	f001 fc8a 	bl	80043a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002a90:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002a94:	4819      	ldr	r0, [pc, #100]	@ (8002afc <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a96:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002a98:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a9a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a9e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002aa2:	f001 fc7f 	bl	80043a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002aa6:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002aaa:	4815      	ldr	r0, [pc, #84]	@ (8002b00 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002aac:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002aae:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ab0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002ab4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002ab8:	f001 fc74 	bl	80043a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002abc:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ac0:	4810      	ldr	r0, [pc, #64]	@ (8002b04 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ac2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ac4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ac6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002aca:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ace:	f001 fc69 	bl	80043a4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002ad2:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002ad4:	480c      	ldr	r0, [pc, #48]	@ (8002b08 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ad6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002ad8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ada:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002ade:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002ae2:	f001 fc5f 	bl	80043a4 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002ae6:	b006      	add	sp, #24
 8002ae8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002aec:	2000313c 	.word	0x2000313c
 8002af0:	40023800 	.word	0x40023800
 8002af4:	40021400 	.word	0x40021400
 8002af8:	40020800 	.word	0x40020800
 8002afc:	40021800 	.word	0x40021800
 8002b00:	40021000 	.word	0x40021000
 8002b04:	40020c00 	.word	0x40020c00
 8002b08:	40020400 	.word	0x40020400

08002b0c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002b0c:	b570      	push	{r4, r5, r6, lr}
 8002b0e:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002b10:	2300      	movs	r3, #0
 8002b12:	9302      	str	r3, [sp, #8]
 8002b14:	4b20      	ldr	r3, [pc, #128]	@ (8002b98 <HAL_InitTick+0x8c>)
 8002b16:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002b18:	f042 0210 	orr.w	r2, r2, #16
 8002b1c:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b20:	f003 0310 	and.w	r3, r3, #16
 8002b24:	9302      	str	r3, [sp, #8]
{
 8002b26:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002b28:	a901      	add	r1, sp, #4
 8002b2a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002b2c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002b2e:	f003 faf1 	bl	8006114 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002b32:	9b06      	ldr	r3, [sp, #24]
 8002b34:	bb4b      	cbnz	r3, 8002b8a <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002b36:	f003 facd 	bl	80060d4 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002b3a:	4e18      	ldr	r6, [pc, #96]	@ (8002b9c <HAL_InitTick+0x90>)
 8002b3c:	4b18      	ldr	r3, [pc, #96]	@ (8002ba0 <HAL_InitTick+0x94>)
 8002b3e:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002b40:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8002b44:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002b46:	4b17      	ldr	r3, [pc, #92]	@ (8002ba4 <HAL_InitTick+0x98>)
 8002b48:	fbb0 f3f3 	udiv	r3, r0, r3
 8002b4c:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002b4e:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002b50:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002b52:	2300      	movs	r3, #0
 8002b54:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002b56:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002b58:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002b5a:	f004 f913 	bl	8006d84 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002b5e:	4604      	mov	r4, r0
 8002b60:	b980      	cbnz	r0, 8002b84 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002b62:	4630      	mov	r0, r6
 8002b64:	f003 ffe8 	bl	8006b38 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002b68:	4604      	mov	r4, r0
 8002b6a:	b958      	cbnz	r0, 8002b84 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002b6c:	2036      	movs	r0, #54	@ 0x36
 8002b6e:	f001 fb01 	bl	8004174 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002b72:	2d0f      	cmp	r5, #15
 8002b74:	d80d      	bhi.n	8002b92 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002b76:	4622      	mov	r2, r4
 8002b78:	4629      	mov	r1, r5
 8002b7a:	2036      	movs	r0, #54	@ 0x36
 8002b7c:	f001 fac8 	bl	8004110 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002b80:	4b09      	ldr	r3, [pc, #36]	@ (8002ba8 <HAL_InitTick+0x9c>)
 8002b82:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002b84:	4620      	mov	r0, r4
 8002b86:	b008      	add	sp, #32
 8002b88:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002b8a:	f003 faa3 	bl	80060d4 <HAL_RCC_GetPCLK1Freq>
 8002b8e:	0040      	lsls	r0, r0, #1
 8002b90:	e7d3      	b.n	8002b3a <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002b92:	2401      	movs	r4, #1
 8002b94:	e7f6      	b.n	8002b84 <HAL_InitTick+0x78>
 8002b96:	bf00      	nop
 8002b98:	40023800 	.word	0x40023800
 8002b9c:	20003140 	.word	0x20003140
 8002ba0:	40001000 	.word	0x40001000
 8002ba4:	000f4240 	.word	0x000f4240
 8002ba8:	200000cc 	.word	0x200000cc

08002bac <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002bac:	4770      	bx	lr

08002bae <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002bae:	e7fe      	b.n	8002bae <HardFault_Handler>

08002bb0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002bb0:	e7fe      	b.n	8002bb0 <MemManage_Handler>

08002bb2 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002bb2:	e7fe      	b.n	8002bb2 <BusFault_Handler>

08002bb4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002bb4:	e7fe      	b.n	8002bb4 <UsageFault_Handler>

08002bb6 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8002bb6:	4770      	bx	lr

08002bb8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002bb8:	4801      	ldr	r0, [pc, #4]	@ (8002bc0 <TIM6_DAC_IRQHandler+0x8>)
 8002bba:	f003 bffb 	b.w	8006bb4 <HAL_TIM_IRQHandler>
 8002bbe:	bf00      	nop
 8002bc0:	20003140 	.word	0x20003140

08002bc4 <OTG_HS_IRQHandler>:
void OTG_HS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 8002bc4:	4801      	ldr	r0, [pc, #4]	@ (8002bcc <OTG_HS_IRQHandler+0x8>)
 8002bc6:	f002 bc9d 	b.w	8005504 <HAL_PCD_IRQHandler>
 8002bca:	bf00      	nop
 8002bcc:	20002a18 	.word	0x20002a18

08002bd0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002bd0:	4801      	ldr	r0, [pc, #4]	@ (8002bd8 <LTDC_IRQHandler+0x8>)
 8002bd2:	f002 ba30 	b.w	8005036 <HAL_LTDC_IRQHandler>
 8002bd6:	bf00      	nop
 8002bd8:	20002ff4 	.word	0x20002ff4

08002bdc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002bdc:	4801      	ldr	r0, [pc, #4]	@ (8002be4 <DMA2D_IRQHandler+0x8>)
 8002bde:	f001 bb13 	b.w	8004208 <HAL_DMA2D_IRQHandler>
 8002be2:	bf00      	nop
 8002be4:	200030f0 	.word	0x200030f0

08002be8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002be8:	2001      	movs	r0, #1
 8002bea:	4770      	bx	lr

08002bec <_kill>:

int _kill(int pid, int sig)
{
 8002bec:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002bee:	f020 ff05 	bl	80239fc <__errno>
 8002bf2:	2316      	movs	r3, #22
 8002bf4:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002bf6:	f04f 30ff 	mov.w	r0, #4294967295
 8002bfa:	bd08      	pop	{r3, pc}

08002bfc <_exit>:

void _exit (int status)
{
 8002bfc:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002bfe:	f020 fefd 	bl	80239fc <__errno>
 8002c02:	2316      	movs	r3, #22
 8002c04:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002c06:	e7fe      	b.n	8002c06 <_exit+0xa>

08002c08 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002c08:	b570      	push	{r4, r5, r6, lr}
 8002c0a:	460d      	mov	r5, r1
 8002c0c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c0e:	460e      	mov	r6, r1
 8002c10:	1b73      	subs	r3, r6, r5
 8002c12:	429c      	cmp	r4, r3
 8002c14:	dc01      	bgt.n	8002c1a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002c16:	4620      	mov	r0, r4
 8002c18:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002c1a:	f3af 8000 	nop.w
 8002c1e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c22:	e7f5      	b.n	8002c10 <_read+0x8>

08002c24 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002c24:	b570      	push	{r4, r5, r6, lr}
 8002c26:	460d      	mov	r5, r1
 8002c28:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c2a:	460e      	mov	r6, r1
 8002c2c:	1b73      	subs	r3, r6, r5
 8002c2e:	429c      	cmp	r4, r3
 8002c30:	dc01      	bgt.n	8002c36 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002c32:	4620      	mov	r0, r4
 8002c34:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002c36:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002c3a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c3e:	e7f5      	b.n	8002c2c <_write+0x8>

08002c40 <_close>:

int _close(int file)
{
	return -1;
}
 8002c40:	f04f 30ff 	mov.w	r0, #4294967295
 8002c44:	4770      	bx	lr

08002c46 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002c46:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002c4a:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002c4c:	2000      	movs	r0, #0
 8002c4e:	4770      	bx	lr

08002c50 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002c50:	2001      	movs	r0, #1
 8002c52:	4770      	bx	lr

08002c54 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002c54:	2000      	movs	r0, #0
 8002c56:	4770      	bx	lr

08002c58 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002c58:	4a0a      	ldr	r2, [pc, #40]	@ (8002c84 <_sbrk+0x2c>)
 8002c5a:	6811      	ldr	r1, [r2, #0]
{
 8002c5c:	b508      	push	{r3, lr}
 8002c5e:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002c60:	b909      	cbnz	r1, 8002c66 <_sbrk+0xe>
		heap_end = &end;
 8002c62:	4909      	ldr	r1, [pc, #36]	@ (8002c88 <_sbrk+0x30>)
 8002c64:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002c66:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002c68:	4669      	mov	r1, sp
 8002c6a:	4403      	add	r3, r0
 8002c6c:	428b      	cmp	r3, r1
 8002c6e:	d906      	bls.n	8002c7e <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002c70:	f020 fec4 	bl	80239fc <__errno>
 8002c74:	230c      	movs	r3, #12
 8002c76:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002c78:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002c7c:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002c7e:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002c80:	e7fc      	b.n	8002c7c <_sbrk+0x24>
 8002c82:	bf00      	nop
 8002c84:	20003188 	.word	0x20003188
 8002c88:	20014d80 	.word	0x20014d80

08002c8c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002c8c:	4770      	bx	lr

08002c8e <_ZN23ApplicationFontProviderD0Ev>:
 8002c8e:	b510      	push	{r4, lr}
 8002c90:	2104      	movs	r1, #4
 8002c92:	4604      	mov	r4, r0
 8002c94:	f01f fbf1 	bl	802247a <_ZdlPvj>
 8002c98:	4620      	mov	r0, r4
 8002c9a:	bd10      	pop	{r4, pc}

08002c9c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002c9c:	2901      	cmp	r1, #1
{
 8002c9e:	b508      	push	{r3, lr}
    switch (typography)
 8002ca0:	d006      	beq.n	8002cb0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002ca2:	2902      	cmp	r1, #2
 8002ca4:	d008      	beq.n	8002cb8 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002ca6:	b959      	cbnz	r1, 8002cc0 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002ca8:	f000 fb96 	bl	80033d8 <_ZN17TypedTextDatabase8getFontsEv>
 8002cac:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002cae:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002cb0:	f000 fb92 	bl	80033d8 <_ZN17TypedTextDatabase8getFontsEv>
 8002cb4:	6840      	ldr	r0, [r0, #4]
 8002cb6:	e7fa      	b.n	8002cae <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002cb8:	f000 fb8e 	bl	80033d8 <_ZN17TypedTextDatabase8getFontsEv>
 8002cbc:	6880      	ldr	r0, [r0, #8]
 8002cbe:	e7f6      	b.n	8002cae <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002cc0:	2000      	movs	r0, #0
 8002cc2:	e7f4      	b.n	8002cae <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002cc4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002cc4:	4800      	ldr	r0, [pc, #0]	@ (8002cc8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002cc6:	4770      	bx	lr
 8002cc8:	08025730 	.word	0x08025730

08002ccc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002ccc:	2001      	movs	r0, #1
 8002cce:	4770      	bx	lr

08002cd0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002cd0:	b513      	push	{r0, r1, r4, lr}
 8002cd2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002cd4:	b151      	cbz	r1, 8002cec <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002cd6:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002cd8:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002cda:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002cde:	aa01      	add	r2, sp, #4
 8002ce0:	689c      	ldr	r4, [r3, #8]
 8002ce2:	f10d 0303 	add.w	r3, sp, #3
 8002ce6:	47a0      	blx	r4
        return glyph;
    }
 8002ce8:	b002      	add	sp, #8
 8002cea:	bd10      	pop	{r4, pc}
            return 0;
 8002cec:	4608      	mov	r0, r1
 8002cee:	e7fb      	b.n	8002ce8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002cf0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002cf0:	89c0      	ldrh	r0, [r0, #14]
 8002cf2:	4770      	bx	lr

08002cf4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002cf4:	8a00      	ldrh	r0, [r0, #16]
 8002cf6:	4770      	bx	lr

08002cf8 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002cf8:	88c0      	ldrh	r0, [r0, #6]
 8002cfa:	4770      	bx	lr

08002cfc <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002cfc:	8880      	ldrh	r0, [r0, #4]
 8002cfe:	4770      	bx	lr

08002d00 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002d00:	7a80      	ldrb	r0, [r0, #10]
    }
 8002d02:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002d06:	4770      	bx	lr

08002d08 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002d08:	7a80      	ldrb	r0, [r0, #10]
    }
 8002d0a:	09c0      	lsrs	r0, r0, #7
 8002d0c:	4770      	bx	lr

08002d0e <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002d0e:	2000      	movs	r0, #0
 8002d10:	4770      	bx	lr
	...

08002d14 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002d14:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002d1c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002d18:	4770      	bx	lr
 8002d1a:	bf00      	nop
 8002d1c:	00000000 	.word	0x00000000

08002d20 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002d20:	4770      	bx	lr

08002d22 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002d22:	4770      	bx	lr

08002d24 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002d24:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002d28:	6808      	ldr	r0, [r1, #0]
 8002d2a:	6849      	ldr	r1, [r1, #4]
 8002d2c:	c303      	stmia	r3!, {r0, r1}
    }
 8002d2e:	4770      	bx	lr

08002d30 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002d30:	4770      	bx	lr

08002d32 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002d32:	4770      	bx	lr

08002d34 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002d34:	6041      	str	r1, [r0, #4]
    }
 8002d36:	4770      	bx	lr

08002d38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002d38:	4770      	bx	lr

08002d3a <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002d3a:	4770      	bx	lr

08002d3c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002d3c:	4b06      	ldr	r3, [pc, #24]	@ (8002d58 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002d3e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002d42:	2300      	movs	r3, #0
 8002d44:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002d48:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002d4c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002d50:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002d54:	4770      	bx	lr
 8002d56:	bf00      	nop
 8002d58:	08002dfd 	.word	0x08002dfd

08002d5c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002d5c:	2301      	movs	r3, #1
 8002d5e:	7203      	strb	r3, [r0, #8]
    }
 8002d60:	4770      	bx	lr

08002d62 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002d62:	4770      	bx	lr

08002d64 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002d64:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002d66:	68c2      	ldr	r2, [r0, #12]
 8002d68:	6841      	ldr	r1, [r0, #4]
 8002d6a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002d6c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002d6e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002d72:	07d2      	lsls	r2, r2, #31
 8002d74:	bf48      	it	mi
 8002d76:	590a      	ldrmi	r2, [r1, r4]
 8002d78:	689b      	ldr	r3, [r3, #8]
    }
 8002d7a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002d7e:	bf48      	it	mi
 8002d80:	58d3      	ldrmi	r3, [r2, r3]
 8002d82:	4718      	bx	r3

08002d84 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002d84:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002d86:	6840      	ldr	r0, [r0, #4]
 8002d88:	b130      	cbz	r0, 8002d98 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002d8a:	689a      	ldr	r2, [r3, #8]
 8002d8c:	b91a      	cbnz	r2, 8002d96 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002d8e:	68d8      	ldr	r0, [r3, #12]
 8002d90:	f000 0001 	and.w	r0, r0, #1
 8002d94:	4770      	bx	lr
 8002d96:	2001      	movs	r0, #1
    }
 8002d98:	4770      	bx	lr

08002d9a <_ZN8touchgfx12NoTransitionD0Ev>:
 8002d9a:	b510      	push	{r4, lr}
 8002d9c:	210c      	movs	r1, #12
 8002d9e:	4604      	mov	r4, r0
 8002da0:	f01f fb6b 	bl	802247a <_ZdlPvj>
 8002da4:	4620      	mov	r0, r4
 8002da6:	bd10      	pop	{r4, pc}

08002da8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002da8:	b510      	push	{r4, lr}
 8002daa:	2110      	movs	r1, #16
 8002dac:	4604      	mov	r4, r0
 8002dae:	f01f fb64 	bl	802247a <_ZdlPvj>
 8002db2:	4620      	mov	r0, r4
 8002db4:	bd10      	pop	{r4, pc}

08002db6 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002db6:	b510      	push	{r4, lr}
 8002db8:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002dbc:	4604      	mov	r4, r0
 8002dbe:	f01f fb5c 	bl	802247a <_ZdlPvj>
 8002dc2:	4620      	mov	r0, r4
 8002dc4:	bd10      	pop	{r4, pc}

08002dc6 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002dc6:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002dc8:	f00d f8c2 	bl	800ff50 <_ZN8touchgfx11Application11getInstanceEv>
 8002dcc:	6803      	ldr	r3, [r0, #0]
    }
 8002dce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002dd2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002dd4:	4718      	bx	r3

08002dd6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002dd6:	b510      	push	{r4, lr}
 8002dd8:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002dda:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002dde:	b158      	cbz	r0, 8002df8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002de0:	6803      	ldr	r3, [r0, #0]
 8002de2:	68db      	ldr	r3, [r3, #12]
 8002de4:	4798      	blx	r3
 8002de6:	b138      	cbz	r0, 8002df8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002de8:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002dec:	6803      	ldr	r3, [r0, #0]
 8002dee:	689b      	ldr	r3, [r3, #8]
 8002df0:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002df2:	2300      	movs	r3, #0
 8002df4:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8002df8:	bd10      	pop	{r4, pc}
	...

08002dfc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002dfc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002e00:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002e04:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002e06:	68b0      	ldr	r0, [r6, #8]
 8002e08:	6803      	ldr	r3, [r0, #0]
 8002e0a:	6a1b      	ldr	r3, [r3, #32]
 8002e0c:	4798      	blx	r3
 8002e0e:	f5b0 6f72 	cmp.w	r0, #3872	@ 0xf20
 8002e12:	d205      	bcs.n	8002e20 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002e14:	4b44      	ldr	r3, [pc, #272]	@ (8002f28 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002e16:	4a45      	ldr	r2, [pc, #276]	@ (8002f2c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002e18:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002e1a:	4845      	ldr	r0, [pc, #276]	@ (8002f30 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002e1c:	f020 fab0 	bl	8023380 <__assert_func>
 8002e20:	6870      	ldr	r0, [r6, #4]
 8002e22:	6803      	ldr	r3, [r0, #0]
 8002e24:	6a1b      	ldr	r3, [r3, #32]
 8002e26:	4798      	blx	r3
 8002e28:	280f      	cmp	r0, #15
 8002e2a:	d803      	bhi.n	8002e34 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002e2c:	4b41      	ldr	r3, [pc, #260]	@ (8002f34 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002e2e:	4a3f      	ldr	r2, [pc, #252]	@ (8002f2c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002e30:	21a4      	movs	r1, #164	@ 0xa4
 8002e32:	e7f2      	b.n	8002e1a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002e34:	68f0      	ldr	r0, [r6, #12]
 8002e36:	6803      	ldr	r3, [r0, #0]
 8002e38:	6a1b      	ldr	r3, [r3, #32]
 8002e3a:	4798      	blx	r3
 8002e3c:	280b      	cmp	r0, #11
 8002e3e:	d803      	bhi.n	8002e48 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002e40:	4b3d      	ldr	r3, [pc, #244]	@ (8002f38 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002e42:	4a3a      	ldr	r2, [pc, #232]	@ (8002f2c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002e44:	21a5      	movs	r1, #165	@ 0xa5
 8002e46:	e7e8      	b.n	8002e1a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002e48:	f00d f882 	bl	800ff50 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002e4c:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002f40 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002e50:	3004      	adds	r0, #4
 8002e52:	f00d f8a2 	bl	800ff9a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002e56:	f8d9 0000 	ldr.w	r0, [r9]
 8002e5a:	b110      	cbz	r0, 8002e62 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002e5c:	6803      	ldr	r3, [r0, #0]
 8002e5e:	68db      	ldr	r3, [r3, #12]
 8002e60:	4798      	blx	r3
    if (*currentTrans)
 8002e62:	f8d9 0000 	ldr.w	r0, [r9]
 8002e66:	b110      	cbz	r0, 8002e6e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002e68:	6803      	ldr	r3, [r0, #0]
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	4798      	blx	r3
    if (*currentScreen)
 8002e6e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002f44 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 8002e72:	f8d8 0000 	ldr.w	r0, [r8]
 8002e76:	b110      	cbz	r0, 8002e7e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002e78:	6803      	ldr	r3, [r0, #0]
 8002e7a:	695b      	ldr	r3, [r3, #20]
 8002e7c:	4798      	blx	r3
    if (*currentPresenter)
 8002e7e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002e82:	b110      	cbz	r0, 8002e8a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002e84:	6803      	ldr	r3, [r0, #0]
 8002e86:	685b      	ldr	r3, [r3, #4]
 8002e88:	4798      	blx	r3
    if (*currentScreen)
 8002e8a:	f8d8 0000 	ldr.w	r0, [r8]
 8002e8e:	b110      	cbz	r0, 8002e96 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002e90:	6803      	ldr	r3, [r0, #0]
 8002e92:	681b      	ldr	r3, [r3, #0]
 8002e94:	4798      	blx	r3
    if (*currentPresenter)
 8002e96:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002e9a:	b110      	cbz	r0, 8002ea2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002e9c:	6803      	ldr	r3, [r0, #0]
 8002e9e:	689b      	ldr	r3, [r3, #8]
 8002ea0:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002ea2:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002ea4:	6803      	ldr	r3, [r0, #0]
 8002ea6:	2100      	movs	r1, #0
 8002ea8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002eaa:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002eac:	f04f 0b00 	mov.w	fp, #0
 8002eb0:	4b22      	ldr	r3, [pc, #136]	@ (8002f3c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002eb2:	f8c0 b004 	str.w	fp, [r0, #4]
 8002eb6:	4604      	mov	r4, r0
 8002eb8:	f880 b008 	strb.w	fp, [r0, #8]
 8002ebc:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002ebe:	68b0      	ldr	r0, [r6, #8]
 8002ec0:	6803      	ldr	r3, [r0, #0]
 8002ec2:	4659      	mov	r1, fp
 8002ec4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ec6:	4798      	blx	r3
 8002ec8:	4605      	mov	r5, r0
 8002eca:	f000 fb1d 	bl	8003508 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002ece:	6870      	ldr	r0, [r6, #4]
 8002ed0:	6803      	ldr	r3, [r0, #0]
 8002ed2:	4659      	mov	r1, fp
 8002ed4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ed6:	4798      	blx	r3
 8002ed8:	4629      	mov	r1, r5
 8002eda:	4606      	mov	r6, r0
 8002edc:	f000 fac6 	bl	800346c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002ee0:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002ee2:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002ee6:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002eea:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002eee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002ef2:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002ef4:	f8c6 a008 	str.w	sl, [r6, #8]
 8002ef8:	4628      	mov	r0, r5
 8002efa:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002efc:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002efe:	4798      	blx	r3
    newPresenter->activate();
 8002f00:	6833      	ldr	r3, [r6, #0]
 8002f02:	4630      	mov	r0, r6
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002f08:	4621      	mov	r1, r4
 8002f0a:	4628      	mov	r0, r5
 8002f0c:	f00f fa5c 	bl	80123c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002f10:	6823      	ldr	r3, [r4, #0]
 8002f12:	4620      	mov	r0, r4
 8002f14:	691b      	ldr	r3, [r3, #16]
 8002f16:	4798      	blx	r3
    newTransition->invalidate();
 8002f18:	6823      	ldr	r3, [r4, #0]
 8002f1a:	695b      	ldr	r3, [r3, #20]
 8002f1c:	4620      	mov	r0, r4
}
 8002f1e:	b001      	add	sp, #4
 8002f20:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f24:	4718      	bx	r3
 8002f26:	bf00      	nop
 8002f28:	08024dfd 	.word	0x08024dfd
 8002f2c:	08024e8b 	.word	0x08024e8b
 8002f30:	08024f5d 	.word	0x08024f5d
 8002f34:	08024fa4 	.word	0x08024fa4
 8002f38:	08025047 	.word	0x08025047
 8002f3c:	080257b8 	.word	0x080257b8
 8002f40:	20014088 	.word	0x20014088
 8002f44:	20014084 	.word	0x20014084

08002f48 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002f48:	4b04      	ldr	r3, [pc, #16]	@ (8002f5c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002f50:	b10a      	cbz	r2, 8002f56 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002f52:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002f54:	b900      	cbnz	r0, 8002f58 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002f56:	6898      	ldr	r0, [r3, #8]
    }
 8002f58:	4770      	bx	lr
 8002f5a:	bf00      	nop
 8002f5c:	20014040 	.word	0x20014040

08002f60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002f60:	b570      	push	{r4, r5, r6, lr}
 8002f62:	4604      	mov	r4, r0
 8002f64:	460d      	mov	r5, r1
 8002f66:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8002f68:	f00d f8b4 	bl	80100d4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002f6c:	4a10      	ldr	r2, [pc, #64]	@ (8002fb0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002f6e:	6014      	str	r4, [r2, #0]
      model(m)
 8002f70:	4a10      	ldr	r2, [pc, #64]	@ (8002fb4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002f72:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
 8002f74:	4a10      	ldr	r2, [pc, #64]	@ (8002fb8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002f76:	2300      	movs	r3, #0
 8002f78:	e9c4 2351 	strd	r2, r3, [r4, #324]	@ 0x144
 8002f7c:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
          pendingScreenTransitionCallback(0)
 8002f80:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
        return instance;
 8002f84:	4b0d      	ldr	r3, [pc, #52]	@ (8002fbc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002f86:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f88:	6803      	ldr	r3, [r0, #0]
 8002f8a:	2101      	movs	r1, #1
 8002f8c:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002f8e:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f92:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002f94:	f7ff ffd8 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 8002f98:	f017 f98b 	bl	801a2b2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002f9c:	f7ff ffd4 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 8002fa0:	f017 fa02 	bl	801a3a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8002fa4:	f7ff ffd0 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 8002fa8:	f017 fa0a 	bl	801a3c0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8002fac:	4620      	mov	r0, r4
 8002fae:	bd70      	pop	{r4, r5, r6, pc}
 8002fb0:	20014094 	.word	0x20014094
 8002fb4:	08025764 	.word	0x08025764
 8002fb8:	0802574c 	.word	0x0802574c
 8002fbc:	20014040 	.word	0x20014040

08002fc0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002fc0:	4b06      	ldr	r3, [pc, #24]	@ (8002fdc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002fc2:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002fc6:	2300      	movs	r3, #0
 8002fc8:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002fcc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002fd0:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002fd4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002fd8:	4770      	bx	lr
 8002fda:	bf00      	nop
 8002fdc:	08002dfd 	.word	0x08002dfd

08002fe0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002fe0:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002fe2:	4770      	bx	lr

08002fe4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002fe4:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002fe6:	4770      	bx	lr

08002fe8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002fe8:	4770      	bx	lr

08002fea <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002fea:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 8002fec:	880b      	ldrh	r3, [r1, #0]
{
 8002fee:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002ff0:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 8002ff2:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002ff4:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8002ff6:	b29b      	uxth	r3, r3
    return pixels + offset;
 8002ff8:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 8002ffc:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 8003000:	4418      	add	r0, r3
 8003002:	bd10      	pop	{r4, pc}

08003004 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003004:	b510      	push	{r4, lr}
 8003006:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8003008:	b1ba      	cbz	r2, 800303a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800300a:	7b10      	ldrb	r0, [r2, #12]
 800300c:	b168      	cbz	r0, 800302a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800300e:	7b53      	ldrb	r3, [r2, #13]
 8003010:	7ad2      	ldrb	r2, [r2, #11]
 8003012:	021b      	lsls	r3, r3, #8
 8003014:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003018:	431a      	orrs	r2, r3
 800301a:	6a23      	ldr	r3, [r4, #32]
 800301c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8003020:	881a      	ldrh	r2, [r3, #0]
 8003022:	428a      	cmp	r2, r1
 8003024:	d102      	bne.n	800302c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003026:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 800302a:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800302c:	d805      	bhi.n	800303a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800302e:	3801      	subs	r0, #1
 8003030:	b280      	uxth	r0, r0
 8003032:	3304      	adds	r3, #4
 8003034:	2800      	cmp	r0, #0
 8003036:	d1f3      	bne.n	8003020 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003038:	e7f7      	b.n	800302a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800303a:	2000      	movs	r0, #0
 800303c:	e7f5      	b.n	800302a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800303e <_ZN8touchgfx13GeneratedFontD0Ev>:
 800303e:	b510      	push	{r4, lr}
 8003040:	212c      	movs	r1, #44	@ 0x2c
 8003042:	4604      	mov	r4, r0
 8003044:	f01f fa19 	bl	802247a <_ZdlPvj>
 8003048:	4620      	mov	r0, r4
 800304a:	bd10      	pop	{r4, pc}

0800304c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800304c:	b530      	push	{r4, r5, lr}
 800304e:	b08b      	sub	sp, #44	@ 0x2c
 8003050:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8003052:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8003056:	9508      	str	r5, [sp, #32]
 8003058:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 800305c:	9507      	str	r5, [sp, #28]
 800305e:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8003062:	9506      	str	r5, [sp, #24]
 8003064:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8003068:	9505      	str	r5, [sp, #20]
 800306a:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800306e:	9504      	str	r5, [sp, #16]
 8003070:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8003074:	9503      	str	r5, [sp, #12]
 8003076:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 800307a:	9502      	str	r5, [sp, #8]
 800307c:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8003080:	9501      	str	r5, [sp, #4]
 8003082:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8003086:	9500      	str	r5, [sp, #0]
 8003088:	f00e fd6c 	bl	8011b64 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800308c:	4b06      	ldr	r3, [pc, #24]	@ (80030a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800308e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8003090:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8003092:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8003094:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8003096:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8003098:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800309a:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 800309c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800309e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80030a0:	4620      	mov	r0, r4
 80030a2:	b00b      	add	sp, #44	@ 0x2c
 80030a4:	bd30      	pop	{r4, r5, pc}
 80030a6:	bf00      	nop
 80030a8:	080257dc 	.word	0x080257dc

080030ac <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80030ac:	4770      	bx	lr

080030ae <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80030ae:	4770      	bx	lr

080030b0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80030b0:	4770      	bx	lr

080030b2 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80030b2:	4770      	bx	lr

080030b4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80030b4:	4770      	bx	lr

080030b6 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 80030b6:	4770      	bx	lr

080030b8 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 80030b8:	4770      	bx	lr

080030ba <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 80030ba:	b510      	push	{r4, lr}
}
 80030bc:	216c      	movs	r1, #108	@ 0x6c
Screen1ViewBase::~Screen1ViewBase()
 80030be:	4604      	mov	r4, r0
}
 80030c0:	f01f f9db 	bl	802247a <_ZdlPvj>
 80030c4:	4620      	mov	r0, r4
 80030c6:	bd10      	pop	{r4, pc}

080030c8 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 80030c8:	b538      	push	{r3, r4, r5, lr}
 80030ca:	4604      	mov	r4, r0
        : presenter(0)
 80030cc:	f00e ffd0 	bl	8012070 <_ZN8touchgfx6ScreenC1Ev>
 80030d0:	2300      	movs	r3, #0
 80030d2:	e9c4 3311 	strd	r3, r3, [r4, #68]	@ 0x44
 80030d6:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
          nextSibling(0),
 80030da:	e9c4 3315 	strd	r3, r3, [r4, #84]	@ 0x54
          cachedAbsX(0),
 80030de:	e9c4 3317 	strd	r3, r3, [r4, #92]	@ 0x5c
 80030e2:	63e3      	str	r3, [r4, #60]	@ 0x3c
        : color(col)
 80030e4:	66a3      	str	r3, [r4, #104]	@ 0x68
 80030e6:	4a0f      	ldr	r2, [pc, #60]	@ (8003124 <_ZN15Screen1ViewBaseC1Ev+0x5c>)
 80030e8:	6022      	str	r2, [r4, #0]
          touchable(false),
 80030ea:	f44f 7380 	mov.w	r3, #256	@ 0x100
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80030ee:	4a0e      	ldr	r2, [pc, #56]	@ (8003128 <_ZN15Screen1ViewBaseC1Ev+0x60>)
 80030f0:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
    __background.setPosition(0, 0, 240, 320);
 80030f4:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 80030f8:	23ff      	movs	r3, #255	@ 0xff
 80030fa:	6422      	str	r2, [r4, #64]	@ 0x40
 80030fc:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
        setWidth(width);
 8003100:	4628      	mov	r0, r5
 8003102:	21f0      	movs	r1, #240	@ 0xf0
 8003104:	f7fe fb02 	bl	800170c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003108:	4628      	mov	r0, r5
 800310a:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800310e:	f7fe faff 	bl	8001710 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003112:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003116:	1d20      	adds	r0, r4, #4
 8003118:	66a3      	str	r3, [r4, #104]	@ 0x68
 800311a:	4629      	mov	r1, r5
 800311c:	f007 fc8a 	bl	800aa34 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003120:	4620      	mov	r0, r4
 8003122:	bd38      	pop	{r3, r4, r5, pc}
 8003124:	08025844 	.word	0x08025844
 8003128:	08025c9c 	.word	0x08025c9c

0800312c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800312c:	4770      	bx	lr
	...

08003130 <_Z23getFont_verdana_10_4bppv>:
{
 8003130:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003132:	4d16      	ldr	r5, [pc, #88]	@ (800318c <_Z23getFont_verdana_10_4bppv+0x5c>)
 8003134:	682c      	ldr	r4, [r5, #0]
 8003136:	f014 0401 	ands.w	r4, r4, #1
{
 800313a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800313c:	f3bf 8f5b 	dmb	ish
 8003140:	d120      	bne.n	8003184 <_Z23getFont_verdana_10_4bppv+0x54>
 8003142:	4628      	mov	r0, r5
 8003144:	f01f f99b 	bl	802247e <__cxa_guard_acquire>
 8003148:	b1e0      	cbz	r0, 8003184 <_Z23getFont_verdana_10_4bppv+0x54>
 800314a:	233f      	movs	r3, #63	@ 0x3f
 800314c:	9309      	str	r3, [sp, #36]	@ 0x24
 800314e:	4b10      	ldr	r3, [pc, #64]	@ (8003190 <_Z23getFont_verdana_10_4bppv+0x60>)
 8003150:	9308      	str	r3, [sp, #32]
 8003152:	4b10      	ldr	r3, [pc, #64]	@ (8003194 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003154:	4910      	ldr	r1, [pc, #64]	@ (8003198 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003156:	4811      	ldr	r0, [pc, #68]	@ (800319c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003158:	940a      	str	r4, [sp, #40]	@ 0x28
 800315a:	2201      	movs	r2, #1
 800315c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003160:	2304      	movs	r3, #4
 8003162:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003166:	230a      	movs	r3, #10
 8003168:	9300      	str	r3, [sp, #0]
 800316a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800316e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003172:	9405      	str	r4, [sp, #20]
 8003174:	f7ff ff6a 	bl	800304c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003178:	4809      	ldr	r0, [pc, #36]	@ (80031a0 <_Z23getFont_verdana_10_4bppv+0x70>)
 800317a:	f020 f91f 	bl	80233bc <atexit>
 800317e:	4628      	mov	r0, r5
 8003180:	f01f f989 	bl	8022496 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003184:	4805      	ldr	r0, [pc, #20]	@ (800319c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003186:	b00f      	add	sp, #60	@ 0x3c
 8003188:	bd30      	pop	{r4, r5, pc}
 800318a:	bf00      	nop
 800318c:	2000318c 	.word	0x2000318c
 8003190:	08026708 	.word	0x08026708
 8003194:	08026714 	.word	0x08026714
 8003198:	080266d8 	.word	0x080266d8
 800319c:	20003190 	.word	0x20003190
 80031a0:	0800312d 	.word	0x0800312d

080031a4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80031a4:	4770      	bx	lr
	...

080031a8 <_Z23getFont_verdana_20_4bppv>:
{
 80031a8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80031aa:	4d16      	ldr	r5, [pc, #88]	@ (8003204 <_Z23getFont_verdana_20_4bppv+0x5c>)
 80031ac:	682c      	ldr	r4, [r5, #0]
 80031ae:	f014 0401 	ands.w	r4, r4, #1
{
 80031b2:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80031b4:	f3bf 8f5b 	dmb	ish
 80031b8:	d120      	bne.n	80031fc <_Z23getFont_verdana_20_4bppv+0x54>
 80031ba:	4628      	mov	r0, r5
 80031bc:	f01f f95f 	bl	802247e <__cxa_guard_acquire>
 80031c0:	b1e0      	cbz	r0, 80031fc <_Z23getFont_verdana_20_4bppv+0x54>
 80031c2:	233f      	movs	r3, #63	@ 0x3f
 80031c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80031c6:	4b10      	ldr	r3, [pc, #64]	@ (8003208 <_Z23getFont_verdana_20_4bppv+0x60>)
 80031c8:	9308      	str	r3, [sp, #32]
 80031ca:	4b10      	ldr	r3, [pc, #64]	@ (800320c <_Z23getFont_verdana_20_4bppv+0x64>)
 80031cc:	4910      	ldr	r1, [pc, #64]	@ (8003210 <_Z23getFont_verdana_20_4bppv+0x68>)
 80031ce:	4811      	ldr	r0, [pc, #68]	@ (8003214 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80031d0:	940a      	str	r4, [sp, #40]	@ 0x28
 80031d2:	2201      	movs	r2, #1
 80031d4:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80031d8:	2304      	movs	r3, #4
 80031da:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80031de:	2314      	movs	r3, #20
 80031e0:	9300      	str	r3, [sp, #0]
 80031e2:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80031e6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80031ea:	9405      	str	r4, [sp, #20]
 80031ec:	f7ff ff2e 	bl	800304c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80031f0:	4809      	ldr	r0, [pc, #36]	@ (8003218 <_Z23getFont_verdana_20_4bppv+0x70>)
 80031f2:	f020 f8e3 	bl	80233bc <atexit>
 80031f6:	4628      	mov	r0, r5
 80031f8:	f01f f94d 	bl	8022496 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80031fc:	4805      	ldr	r0, [pc, #20]	@ (8003214 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80031fe:	b00f      	add	sp, #60	@ 0x3c
 8003200:	bd30      	pop	{r4, r5, pc}
 8003202:	bf00      	nop
 8003204:	200031bc 	.word	0x200031bc
 8003208:	0802670c 	.word	0x0802670c
 800320c:	08026718 	.word	0x08026718
 8003210:	080266e8 	.word	0x080266e8
 8003214:	200031c0 	.word	0x200031c0
 8003218:	080031a5 	.word	0x080031a5

0800321c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800321c:	4770      	bx	lr
	...

08003220 <_Z23getFont_verdana_40_4bppv>:
{
 8003220:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003222:	4d16      	ldr	r5, [pc, #88]	@ (800327c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003224:	682c      	ldr	r4, [r5, #0]
 8003226:	f014 0401 	ands.w	r4, r4, #1
{
 800322a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800322c:	f3bf 8f5b 	dmb	ish
 8003230:	d120      	bne.n	8003274 <_Z23getFont_verdana_40_4bppv+0x54>
 8003232:	4628      	mov	r0, r5
 8003234:	f01f f923 	bl	802247e <__cxa_guard_acquire>
 8003238:	b1e0      	cbz	r0, 8003274 <_Z23getFont_verdana_40_4bppv+0x54>
 800323a:	233f      	movs	r3, #63	@ 0x3f
 800323c:	9309      	str	r3, [sp, #36]	@ 0x24
 800323e:	4b10      	ldr	r3, [pc, #64]	@ (8003280 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003240:	9308      	str	r3, [sp, #32]
 8003242:	4b10      	ldr	r3, [pc, #64]	@ (8003284 <_Z23getFont_verdana_40_4bppv+0x64>)
 8003244:	4910      	ldr	r1, [pc, #64]	@ (8003288 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003246:	4811      	ldr	r0, [pc, #68]	@ (800328c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003248:	940a      	str	r4, [sp, #40]	@ 0x28
 800324a:	2201      	movs	r2, #1
 800324c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003250:	2304      	movs	r3, #4
 8003252:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003256:	2328      	movs	r3, #40	@ 0x28
 8003258:	9300      	str	r3, [sp, #0]
 800325a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800325e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003262:	9405      	str	r4, [sp, #20]
 8003264:	f7ff fef2 	bl	800304c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003268:	4809      	ldr	r0, [pc, #36]	@ (8003290 <_Z23getFont_verdana_40_4bppv+0x70>)
 800326a:	f020 f8a7 	bl	80233bc <atexit>
 800326e:	4628      	mov	r0, r5
 8003270:	f01f f911 	bl	8022496 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003274:	4805      	ldr	r0, [pc, #20]	@ (800328c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8003276:	b00f      	add	sp, #60	@ 0x3c
 8003278:	bd30      	pop	{r4, r5, pc}
 800327a:	bf00      	nop
 800327c:	200031ec 	.word	0x200031ec
 8003280:	08026710 	.word	0x08026710
 8003284:	0802671c 	.word	0x0802671c
 8003288:	080266f8 	.word	0x080266f8
 800328c:	200031f0 	.word	0x200031f0
 8003290:	0800321d 	.word	0x0800321d

08003294 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003294:	2000      	movs	r0, #0
 8003296:	4770      	bx	lr

08003298 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8003298:	2000      	movs	r0, #0
 800329a:	4770      	bx	lr

0800329c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800329c:	b40e      	push	{r1, r2, r3}
 800329e:	b503      	push	{r0, r1, lr}
 80032a0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80032a2:	2100      	movs	r1, #0
{
 80032a4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80032a8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80032aa:	f00d fed9 	bl	8011060 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80032ae:	b002      	add	sp, #8
 80032b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80032b4:	b003      	add	sp, #12
 80032b6:	4770      	bx	lr

080032b8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80032b8:	b40c      	push	{r2, r3}
 80032ba:	b507      	push	{r0, r1, r2, lr}
 80032bc:	ab04      	add	r3, sp, #16
 80032be:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80032c2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80032c4:	f00d fecc 	bl	8011060 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80032c8:	b003      	add	sp, #12
 80032ca:	f85d eb04 	ldr.w	lr, [sp], #4
 80032ce:	b002      	add	sp, #8
 80032d0:	4770      	bx	lr
	...

080032d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80032d4:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 80032d6:	b510      	push	{r4, lr}
 80032d8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80032da:	b373      	cbz	r3, 800333a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80032dc:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80032de:	b92b      	cbnz	r3, 80032ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80032e0:	4b18      	ldr	r3, [pc, #96]	@ (8003344 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80032e2:	4a19      	ldr	r2, [pc, #100]	@ (8003348 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80032e4:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80032e6:	4819      	ldr	r0, [pc, #100]	@ (800334c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80032e8:	f020 f84a 	bl	8023380 <__assert_func>
            return buffer[pos];
 80032ec:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80032ee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80032f2:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80032f4:	b30b      	cbz	r3, 800333a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80032f6:	f00f fd5a 	bl	8012dae <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80032fa:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80032fc:	2b01      	cmp	r3, #1
 80032fe:	d803      	bhi.n	8003308 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003300:	4b13      	ldr	r3, [pc, #76]	@ (8003350 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003302:	4a14      	ldr	r2, [pc, #80]	@ (8003354 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003304:	21cb      	movs	r1, #203	@ 0xcb
 8003306:	e7ee      	b.n	80032e6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003308:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800330a:	1c53      	adds	r3, r2, #1
 800330c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800330e:	2b09      	cmp	r3, #9
 8003310:	4619      	mov	r1, r3
 8003312:	bf88      	it	hi
 8003314:	f1a3 010a 	subhi.w	r1, r3, #10
 8003318:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800331c:	f640 103f 	movw	r0, #2367	@ 0x93f
 8003320:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8003322:	4281      	cmp	r1, r0
 8003324:	d109      	bne.n	800333a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003326:	2b0a      	cmp	r3, #10
 8003328:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800332c:	bf28      	it	cs
 800332e:	2300      	movcs	r3, #0
 8003330:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8003334:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8003336:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003338:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800333a:	4620      	mov	r0, r4
}
 800333c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003340:	f00f bc38 	b.w	8012bb4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003344:	080250ea 	.word	0x080250ea
 8003348:	080250f3 	.word	0x080250f3
 800334c:	0802519e 	.word	0x0802519e
 8003350:	080251e8 	.word	0x080251e8
 8003354:	080251f6 	.word	0x080251f6

08003358 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003358:	f00f bbf3 	b.w	8012b42 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800335c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800335c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800335e:	bb18      	cbnz	r0, 80033a8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003360:	4b12      	ldr	r3, [pc, #72]	@ (80033ac <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003362:	4813      	ldr	r0, [pc, #76]	@ (80033b0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003364:	681c      	ldr	r4, [r3, #0]
 8003366:	4913      	ldr	r1, [pc, #76]	@ (80033b4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003368:	b1b4      	cbz	r4, 8003398 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800336a:	6822      	ldr	r2, [r4, #0]
 800336c:	4422      	add	r2, r4
 800336e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003370:	6862      	ldr	r2, [r4, #4]
 8003372:	4422      	add	r2, r4
 8003374:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003376:	68a2      	ldr	r2, [r4, #8]
 8003378:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800337a:	4b0f      	ldr	r3, [pc, #60]	@ (80033b8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800337c:	2200      	movs	r2, #0
 800337e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003380:	f000 f82a 	bl	80033d8 <_ZN17TypedTextDatabase8getFontsEv>
 8003384:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003386:	f000 f825 	bl	80033d4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800338a:	4b0c      	ldr	r3, [pc, #48]	@ (80033bc <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800338c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800338e:	4b0c      	ldr	r3, [pc, #48]	@ (80033c0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003390:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003392:	4b0c      	ldr	r3, [pc, #48]	@ (80033c4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003394:	8018      	strh	r0, [r3, #0]
    }
}
 8003396:	e007      	b.n	80033a8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003398:	4b0b      	ldr	r3, [pc, #44]	@ (80033c8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800339a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800339c:	4b0b      	ldr	r3, [pc, #44]	@ (80033cc <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800339e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80033a0:	4b0b      	ldr	r3, [pc, #44]	@ (80033d0 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80033a2:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80033a4:	2c00      	cmp	r4, #0
 80033a6:	d1e8      	bne.n	800337a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80033a8:	bd38      	pop	{r3, r4, r5, pc}
 80033aa:	bf00      	nop
 80033ac:	20003228 	.word	0x20003228
 80033b0:	20003220 	.word	0x20003220
 80033b4:	2000321c 	.word	0x2000321c
 80033b8:	20003224 	.word	0x20003224
 80033bc:	20014098 	.word	0x20014098
 80033c0:	200140a0 	.word	0x200140a0
 80033c4:	2001409c 	.word	0x2001409c
 80033c8:	08026724 	.word	0x08026724
 80033cc:	08026720 	.word	0x08026720
 80033d0:	08026728 	.word	0x08026728

080033d4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 80033d4:	2000      	movs	r0, #0
 80033d6:	4770      	bx	lr

080033d8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80033d8:	4800      	ldr	r0, [pc, #0]	@ (80033dc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80033da:	4770      	bx	lr
 80033dc:	2000322c 	.word	0x2000322c

080033e0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80033e0:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80033e2:	f7ff fee1 	bl	80031a8 <_Z23getFont_verdana_20_4bppv>
};
 80033e6:	4c04      	ldr	r4, [pc, #16]	@ (80033f8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80033e8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80033ea:	f7ff ff19 	bl	8003220 <_Z23getFont_verdana_40_4bppv>
};
 80033ee:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80033f0:	f7ff fe9e 	bl	8003130 <_Z23getFont_verdana_10_4bppv>
};
 80033f4:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80033f6:	bd10      	pop	{r4, pc}
 80033f8:	2000322c 	.word	0x2000322c

080033fc <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 80033fc:	b510      	push	{r4, lr}
    pointArray = 0;
 80033fe:	2400      	movs	r4, #0
 8003400:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8003402:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8003404:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8003406:	601c      	str	r4, [r3, #0]
}
 8003408:	bd10      	pop	{r4, pc}

0800340a <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800340a:	4770      	bx	lr

0800340c <_ZN19FrontendApplicationD0Ev>:
 800340c:	b510      	push	{r4, lr}
 800340e:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003412:	4604      	mov	r4, r0
 8003414:	f01f f831 	bl	802247a <_ZdlPvj>
 8003418:	4620      	mov	r0, r4
 800341a:	bd10      	pop	{r4, pc}

0800341c <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800341c:	b510      	push	{r4, lr}
 800341e:	4604      	mov	r4, r0
    {
        model.tick();
 8003420:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003424:	f000 f813 	bl	800344e <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003428:	4620      	mov	r0, r4
    }
 800342a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800342e:	f00c be11 	b.w	8010054 <_ZN8touchgfx11Application15handleTickEventEv>
	...

08003434 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003434:	b510      	push	{r4, lr}
 8003436:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003438:	f7ff fd92 	bl	8002f60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800343c:	4b01      	ldr	r3, [pc, #4]	@ (8003444 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800343e:	6023      	str	r3, [r4, #0]
{

}
 8003440:	4620      	mov	r0, r4
 8003442:	bd10      	pop	{r4, pc}
 8003444:	08025878 	.word	0x08025878

08003448 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003448:	2200      	movs	r2, #0
 800344a:	6002      	str	r2, [r0, #0]
{

}
 800344c:	4770      	bx	lr

0800344e <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800344e:	4770      	bx	lr

08003450 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8003450:	4770      	bx	lr

08003452 <_ZThn4_N16Screen1PresenterD1Ev>:
 8003452:	3804      	subs	r0, #4
 8003454:	4770      	bx	lr

08003456 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8003456:	4770      	bx	lr

08003458 <_ZN16Screen1PresenterD0Ev>:
 8003458:	b510      	push	{r4, lr}
 800345a:	2110      	movs	r1, #16
 800345c:	4604      	mov	r4, r0
 800345e:	f01f f80c 	bl	802247a <_ZdlPvj>
 8003462:	4620      	mov	r0, r4
 8003464:	bd10      	pop	{r4, pc}

08003466 <_ZThn4_N16Screen1PresenterD0Ev>:
 8003466:	f1a0 0004 	sub.w	r0, r0, #4
 800346a:	e7f5      	b.n	8003458 <_ZN16Screen1PresenterD0Ev>

0800346c <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 800346c:	2200      	movs	r2, #0
 800346e:	6082      	str	r2, [r0, #8]
    : view(v)
 8003470:	4a02      	ldr	r2, [pc, #8]	@ (800347c <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8003472:	6002      	str	r2, [r0, #0]
 8003474:	3218      	adds	r2, #24
 8003476:	6042      	str	r2, [r0, #4]
 8003478:	60c1      	str	r1, [r0, #12]
}
 800347a:	4770      	bx	lr
 800347c:	080258cc 	.word	0x080258cc

08003480 <_ZN11Screen1View14tearDownScreenEv>:
{
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), 10);
}

void Screen1View::tearDownScreen()
{
 8003480:	b510      	push	{r4, lr}
    Screen1ViewBase::tearDownScreen();
    
    if(mouseTaskHandle != NULL) {
 8003482:	4c07      	ldr	r4, [pc, #28]	@ (80034a0 <_ZN11Screen1View14tearDownScreenEv+0x20>)
 8003484:	6820      	ldr	r0, [r4, #0]
 8003486:	b118      	cbz	r0, 8003490 <_ZN11Screen1View14tearDownScreenEv+0x10>
        osThreadTerminate(mouseTaskHandle);
 8003488:	f004 fc18 	bl	8007cbc <osThreadTerminate>
        mouseTaskHandle = NULL;
 800348c:	2300      	movs	r3, #0
 800348e:	6023      	str	r3, [r4, #0]
    }
    
    if(mouseEventQueueHandle != NULL) {
 8003490:	4c04      	ldr	r4, [pc, #16]	@ (80034a4 <_ZN11Screen1View14tearDownScreenEv+0x24>)
 8003492:	6820      	ldr	r0, [r4, #0]
 8003494:	b118      	cbz	r0, 800349e <_ZN11Screen1View14tearDownScreenEv+0x1e>
        osMessageQueueDelete(mouseEventQueueHandle);
 8003496:	f004 fd83 	bl	8007fa0 <osMessageQueueDelete>
        mouseEventQueueHandle = NULL;
 800349a:	2300      	movs	r3, #0
 800349c:	6023      	str	r3, [r4, #0]
    }
}
 800349e:	bd10      	pop	{r4, pc}
 80034a0:	20002f0c 	.word	0x20002f0c
 80034a4:	20002f10 	.word	0x20002f10

080034a8 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80034a8:	b510      	push	{r4, lr}
 80034aa:	4b03      	ldr	r3, [pc, #12]	@ (80034b8 <_ZN11Screen1ViewD1Ev+0x10>)
 80034ac:	6003      	str	r3, [r0, #0]
 80034ae:	4604      	mov	r4, r0
 80034b0:	f7ff fe01 	bl	80030b6 <_ZN15Screen1ViewBaseD1Ev>
 80034b4:	4620      	mov	r0, r4
 80034b6:	bd10      	pop	{r4, pc}
 80034b8:	080258f4 	.word	0x080258f4

080034bc <_ZN11Screen1ViewD0Ev>:
 80034bc:	b510      	push	{r4, lr}
 80034be:	4604      	mov	r4, r0
 80034c0:	f7ff fff2 	bl	80034a8 <_ZN11Screen1ViewD1Ev>
 80034c4:	4620      	mov	r0, r4
 80034c6:	f44f 6172 	mov.w	r1, #3872	@ 0xf20
 80034ca:	f01e ffd6 	bl	802247a <_ZdlPvj>
 80034ce:	4620      	mov	r0, r4
 80034d0:	bd10      	pop	{r4, pc}

080034d2 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80034d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80034d6:	461d      	mov	r5, r3
        setX(x);
 80034d8:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80034da:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 80034de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80034e0:	4604      	mov	r4, r0
 80034e2:	4616      	mov	r6, r2
        setX(x);
 80034e4:	4798      	blx	r3
        setY(y);
 80034e6:	6823      	ldr	r3, [r4, #0]
 80034e8:	4631      	mov	r1, r6
 80034ea:	4620      	mov	r0, r4
 80034ec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80034ee:	4798      	blx	r3
        setWidth(width);
 80034f0:	6823      	ldr	r3, [r4, #0]
 80034f2:	4629      	mov	r1, r5
 80034f4:	4620      	mov	r0, r4
 80034f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80034f8:	4798      	blx	r3
        setHeight(height);
 80034fa:	6823      	ldr	r3, [r4, #0]
 80034fc:	4639      	mov	r1, r7
 80034fe:	4620      	mov	r0, r4
 8003500:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8003502:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8003506:	4718      	bx	r3

08003508 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8003508:	b510      	push	{r4, lr}
 800350a:	4604      	mov	r4, r0
 800350c:	f7ff fddc 	bl	80030c8 <_ZN15Screen1ViewBaseC1Ev>
 8003510:	4620      	mov	r0, r4
 8003512:	4b16      	ldr	r3, [pc, #88]	@ (800356c <_ZN11Screen1ViewC1Ev+0x64>)
 8003514:	f840 3b6c 	str.w	r3, [r0], #108
 8003518:	f00a f8d4 	bl	800d6c4 <_ZN8touchgfx6CircleC1Ev>
 800351c:	f104 00b4 	add.w	r0, r4, #180	@ 0xb4
 8003520:	f7fe f9d8 	bl	80018d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003524:	4a12      	ldr	r2, [pc, #72]	@ (8003570 <_ZN11Screen1ViewC1Ev+0x68>)
 8003526:	f8c4 20b4 	str.w	r2, [r4, #180]	@ 0xb4
 800352a:	3224      	adds	r2, #36	@ 0x24
 800352c:	f8c4 20bc 	str.w	r2, [r4, #188]	@ 0xbc
 8003530:	2214      	movs	r2, #20
 8003532:	2300      	movs	r3, #0
 8003534:	f8c4 20d0 	str.w	r2, [r4, #208]	@ 0xd0
 8003538:	2200      	movs	r2, #0
 800353a:	e9c4 3341 	strd	r3, r3, [r4, #260]	@ 0x104
        smoothing_x[i] = 0;
 800353e:	e9c4 3336 	strd	r3, r3, [r4, #216]	@ 0xd8
        smoothing_y[i] = 0;
 8003542:	e9c4 3338 	strd	r3, r3, [r4, #224]	@ 0xe0
 8003546:	e9c4 333a 	strd	r3, r3, [r4, #232]	@ 0xe8
Screen1View::Screen1View()
 800354a:	e9c4 333c 	strd	r3, r3, [r4, #240]	@ 0xf0
 800354e:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8003552:	f884 30d4 	strb.w	r3, [r4, #212]	@ 0xd4
 8003556:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
 800355a:	f8c4 20f8 	str.w	r2, [r4, #248]	@ 0xf8
 800355e:	f8c4 20fc 	str.w	r2, [r4, #252]	@ 0xfc
 8003562:	f8a4 3100 	strh.w	r3, [r4, #256]	@ 0x100
}
 8003566:	4620      	mov	r0, r4
 8003568:	bd10      	pop	{r4, pc}
 800356a:	bf00      	nop
 800356c:	080258f4 	.word	0x080258f4
 8003570:	08025a5c 	.word	0x08025a5c

08003574 <_Z9uartPrintPKc>:
{
 8003574:	b510      	push	{r4, lr}
 8003576:	4604      	mov	r4, r0
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), 10);
 8003578:	f7fc fe3a 	bl	80001f0 <strlen>
 800357c:	4621      	mov	r1, r4
 800357e:	b282      	uxth	r2, r0
}
 8003580:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), 10);
 8003584:	4801      	ldr	r0, [pc, #4]	@ (800358c <_Z9uartPrintPKc+0x18>)
 8003586:	230a      	movs	r3, #10
 8003588:	f003 bd17 	b.w	8006fba <HAL_UART_Transmit>
 800358c:	20002f54 	.word	0x20002f54

08003590 <_ZN11Screen1View15handleTickEventEv>:
        startTime = HAL_GetTick();
    }
}

void Screen1View::handleTickEvent()
{
 8003590:	b570      	push	{r4, r5, r6, lr}

	//Xu ly hinh tron
    if (isScaling){
 8003592:	f890 30d4 	ldrb.w	r3, [r0, #212]	@ 0xd4
{
 8003596:	b08e      	sub	sp, #56	@ 0x38
 8003598:	4604      	mov	r4, r0
    if (isScaling){
 800359a:	b37b      	cbz	r3, 80035fc <_ZN11Screen1View15handleTickEventEv+0x6c>
    	int dentaTick = HAL_GetTick() - startTime;
 800359c:	4d18      	ldr	r5, [pc, #96]	@ (8003600 <_ZN11Screen1View15handleTickEventEv+0x70>)
 800359e:	f000 fd8b 	bl	80040b8 <HAL_GetTick>
 80035a2:	682b      	ldr	r3, [r5, #0]
 80035a4:	1ac3      	subs	r3, r0, r3

    	//Xu ly voi denta
    	if(dentaTick <= 1000){
 80035a6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80035aa:	dc11      	bgt.n	80035d0 <_ZN11Screen1View15handleTickEventEv+0x40>
    		int newRadius = currentRadius - currentRadius * dentaTick / 1000;
 80035ac:	f8d4 20d0 	ldr.w	r2, [r4, #208]	@ 0xd0
 80035b0:	4914      	ldr	r1, [pc, #80]	@ (8003604 <_ZN11Screen1View15handleTickEventEv+0x74>)
 80035b2:	4353      	muls	r3, r2
 80035b4:	fb93 f3f1 	sdiv	r3, r3, r1
 80035b8:	4413      	add	r3, r2
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * (int)Rasterizer::POLY_BASE_SIZE));
 80035ba:	015b      	lsls	r3, r3, #5
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80035bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 80035c0:	1d20      	adds	r0, r4, #4
 80035c2:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
            char msg1[50];
    		snprintf(msg1, sizeof(msg1), "lastTime = %lu\n", lastTime);
    		uartPrint(msg1);
    	}
    }
}
 80035c6:	b00e      	add	sp, #56	@ 0x38
 80035c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80035cc:	f00d be72 	b.w	80112b4 <_ZNK8touchgfx8Drawable10invalidateEv>
    		isScaling = false;
 80035d0:	2600      	movs	r6, #0
 80035d2:	f884 60d4 	strb.w	r6, [r4, #212]	@ 0xd4
    		int lastTime = HAL_GetTick() - startTime;
 80035d6:	f000 fd6f 	bl	80040b8 <HAL_GetTick>
 80035da:	682d      	ldr	r5, [r5, #0]
        visible = vis;
 80035dc:	f884 6091 	strb.w	r6, [r4, #145]	@ 0x91
 80035e0:	1b45      	subs	r5, r0, r5
    		myCircle.invalidate();
 80035e2:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 80035e6:	f00a fd5f 	bl	800e0a8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    		snprintf(msg1, sizeof(msg1), "lastTime = %lu\n", lastTime);
 80035ea:	4a07      	ldr	r2, [pc, #28]	@ (8003608 <_ZN11Screen1View15handleTickEventEv+0x78>)
 80035ec:	462b      	mov	r3, r5
 80035ee:	2132      	movs	r1, #50	@ 0x32
 80035f0:	a801      	add	r0, sp, #4
 80035f2:	f020 f889 	bl	8023708 <sniprintf>
    		uartPrint(msg1);
 80035f6:	a801      	add	r0, sp, #4
 80035f8:	f7ff ffbc 	bl	8003574 <_Z9uartPrintPKc>
}
 80035fc:	b00e      	add	sp, #56	@ 0x38
 80035fe:	bd70      	pop	{r4, r5, r6, pc}
 8003600:	20003238 	.word	0x20003238
 8003604:	fffffc18 	.word	0xfffffc18
 8003608:	080252c8 	.word	0x080252c8

0800360c <_ZN11Screen1View14applySmoothingERiS0_>:
    smoothing_x[smoothing_index] = deltaX;
 800360c:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
{
 8003610:	b570      	push	{r4, r5, r6, lr}
 8003612:	eb00 0483 	add.w	r4, r0, r3, lsl #2
    smoothing_x[smoothing_index] = deltaX;
 8003616:	680d      	ldr	r5, [r1, #0]
 8003618:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
    smoothing_y[smoothing_index] = deltaY;
 800361c:	6815      	ldr	r5, [r2, #0]
 800361e:	f8c4 50e4 	str.w	r5, [r4, #228]	@ 0xe4
    smoothing_index = (smoothing_index + 1) % SMOOTHING_BUFFER_SIZE;
 8003622:	3301      	adds	r3, #1
 8003624:	2503      	movs	r5, #3
 8003626:	fb93 f4f5 	sdiv	r4, r3, r5
 800362a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800362e:	1b1b      	subs	r3, r3, r4
 8003630:	f8c0 30f0 	str.w	r3, [r0, #240]	@ 0xf0
        sum_x += smoothing_x[i];
 8003634:	e9d0 3436 	ldrd	r3, r4, [r0, #216]	@ 0xd8
 8003638:	441c      	add	r4, r3
        sum_y += smoothing_y[i];
 800363a:	e9d0 3639 	ldrd	r3, r6, [r0, #228]	@ 0xe4
 800363e:	4433      	add	r3, r6
 8003640:	f8d0 60ec 	ldr.w	r6, [r0, #236]	@ 0xec
        sum_x += smoothing_x[i];
 8003644:	f8d0 00e0 	ldr.w	r0, [r0, #224]	@ 0xe0
        sum_y += smoothing_y[i];
 8003648:	4433      	add	r3, r6
        sum_x += smoothing_x[i];
 800364a:	4420      	add	r0, r4
    deltaY = sum_y / SMOOTHING_BUFFER_SIZE;
 800364c:	fb93 f3f5 	sdiv	r3, r3, r5
    deltaX = sum_x / SMOOTHING_BUFFER_SIZE;
 8003650:	fb90 f0f5 	sdiv	r0, r0, r5
 8003654:	6008      	str	r0, [r1, #0]
    deltaY = sum_y / SMOOTHING_BUFFER_SIZE;
 8003656:	6013      	str	r3, [r2, #0]
}
 8003658:	bd70      	pop	{r4, r5, r6, pc}

0800365a <_ZN11Screen1View15resetTouchStateEv>:
        smoothing_x[i] = 0;
 800365a:	2300      	movs	r3, #0
    velocity_x = 0.0f;
 800365c:	2200      	movs	r2, #0
        smoothing_x[i] = 0;
 800365e:	e9c0 3336 	strd	r3, r3, [r0, #216]	@ 0xd8
        smoothing_y[i] = 0;
 8003662:	e9c0 3338 	strd	r3, r3, [r0, #224]	@ 0xe0
 8003666:	e9c0 333a 	strd	r3, r3, [r0, #232]	@ 0xe8
    lastDragTime = 0;
 800366a:	e9c0 333c 	strd	r3, r3, [r0, #240]	@ 0xf0
    velocity_x = 0.0f;
 800366e:	f8c0 20f8 	str.w	r2, [r0, #248]	@ 0xf8
    velocity_y = 0.0f;
 8003672:	f8c0 20fc 	str.w	r2, [r0, #252]	@ 0xfc
	isPotentialClick = false;
 8003676:	f8a0 3100 	strh.w	r3, [r0, #256]	@ 0x100
    pressStartTime = 0;
 800367a:	f8c0 3104 	str.w	r3, [r0, #260]	@ 0x104
}
 800367e:	4770      	bx	lr

08003680 <_ZN11Screen1View14updateVelocityEiim>:
{
 8003680:	ee07 1a90 	vmov	s15, r1
 8003684:	ee06 2a10 	vmov	s12, r2
    if(timeDelta > 0) {
 8003688:	2b00      	cmp	r3, #0
 800368a:	d048      	beq.n	800371e <_ZN11Screen1View14updateVelocityEiim+0x9e>
        float current_vel_x = (float)deltaX / timeDelta * 1000.0f;
 800368c:	ee07 3a10 	vmov	s14, r3
 8003690:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003694:	eef8 6a47 	vcvt.f32.u32	s13, s14
        float current_vel_y = (float)deltaY / timeDelta * 1000.0f;
 8003698:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
        float current_vel_x = (float)deltaX / timeDelta * 1000.0f;
 800369c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
        float current_vel_y = (float)deltaY / timeDelta * 1000.0f;
 80036a0:	eec6 7a26 	vdiv.f32	s15, s12, s13
        if((velocity_x > 0 && current_vel_x > 0) || (velocity_x < 0 && current_vel_x < 0)) {
 80036a4:	ed90 6a3e 	vldr	s12, [r0, #248]	@ 0xf8
        float current_vel_x = (float)deltaX / timeDelta * 1000.0f;
 80036a8:	eddf 5a3b 	vldr	s11, [pc, #236]	@ 8003798 <_ZN11Screen1View14updateVelocityEiim+0x118>
        if((velocity_x > 0 && current_vel_x > 0) || (velocity_x < 0 && current_vel_x < 0)) {
 80036ac:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80036b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        float current_vel_x = (float)deltaX / timeDelta * 1000.0f;
 80036b4:	ee27 7a25 	vmul.f32	s14, s14, s11
        float current_vel_y = (float)deltaY / timeDelta * 1000.0f;
 80036b8:	ee67 7aa5 	vmul.f32	s15, s15, s11
        if((velocity_x > 0 && current_vel_x > 0) || (velocity_x < 0 && current_vel_x < 0)) {
 80036bc:	dd30      	ble.n	8003720 <_ZN11Screen1View14updateVelocityEiim+0xa0>
 80036be:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80036c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036c6:	dc31      	bgt.n	800372c <_ZN11Screen1View14updateVelocityEiim+0xac>
        if((velocity_y > 0 && current_vel_y > 0) || (velocity_y < 0 && current_vel_y < 0)) {
 80036c8:	edd0 6a3f 	vldr	s13, [r0, #252]	@ 0xfc
            velocity_x = velocity_x * DAMPING_FACTOR + current_vel_x * (1 - DAMPING_FACTOR);
 80036cc:	ed80 7a3e 	vstr	s14, [r0, #248]	@ 0xf8
        if((velocity_y > 0 && current_vel_y > 0) || (velocity_y < 0 && current_vel_y < 0)) {
 80036d0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80036d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036d8:	dd40      	ble.n	800375c <_ZN11Screen1View14updateVelocityEiim+0xdc>
 80036da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80036de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036e2:	dc41      	bgt.n	8003768 <_ZN11Screen1View14updateVelocityEiim+0xe8>
            velocity_y = velocity_y * DAMPING_FACTOR + current_vel_y * (1 - DAMPING_FACTOR);
 80036e4:	edc0 7a3f 	vstr	s15, [r0, #252]	@ 0xfc
  abs(double __x)
  { return __builtin_fabs(__x); }

  inline _GLIBCXX_CONSTEXPR float
  abs(float __x)
  { return __builtin_fabsf(__x); }
 80036e8:	edd0 7a3e 	vldr	s15, [r0, #248]	@ 0xf8
        if(abs(velocity_x) < MIN_VELOCITY_THRESHOLD) velocity_x = 0;
 80036ec:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 800379c <_ZN11Screen1View14updateVelocityEiim+0x11c>
 80036f0:	eef0 7ae7 	vabs.f32	s15, s15
 80036f4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80036f8:	edd0 7a3f 	vldr	s15, [r0, #252]	@ 0xfc
 80036fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003700:	eef0 7ae7 	vabs.f32	s15, s15
 8003704:	bf48      	it	mi
 8003706:	2300      	movmi	r3, #0
        if(abs(velocity_y) < MIN_VELOCITY_THRESHOLD) velocity_y = 0;
 8003708:	eef4 7ac7 	vcmpe.f32	s15, s14
        if(abs(velocity_x) < MIN_VELOCITY_THRESHOLD) velocity_x = 0;
 800370c:	bf48      	it	mi
 800370e:	f8c0 30f8 	strmi.w	r3, [r0, #248]	@ 0xf8
        if(abs(velocity_y) < MIN_VELOCITY_THRESHOLD) velocity_y = 0;
 8003712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003716:	bf44      	itt	mi
 8003718:	2300      	movmi	r3, #0
 800371a:	f8c0 30fc 	strmi.w	r3, [r0, #252]	@ 0xfc
}
 800371e:	4770      	bx	lr
        if((velocity_x > 0 && current_vel_x > 0) || (velocity_x < 0 && current_vel_x < 0)) {
 8003720:	d5d2      	bpl.n	80036c8 <_ZN11Screen1View14updateVelocityEiim+0x48>
 8003722:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8003726:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800372a:	d5cd      	bpl.n	80036c8 <_ZN11Screen1View14updateVelocityEiim+0x48>
            velocity_x = velocity_x * DAMPING_FACTOR + current_vel_x * (1 - DAMPING_FACTOR);
 800372c:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 80037a0 <_ZN11Screen1View14updateVelocityEiim+0x120>
 8003730:	eddf 5a1c 	vldr	s11, [pc, #112]	@ 80037a4 <_ZN11Screen1View14updateVelocityEiim+0x124>
 8003734:	ee67 6a26 	vmul.f32	s13, s14, s13
 8003738:	eeb0 7ac7 	vabs.f32	s14, s14
 800373c:	eee6 6a25 	vfma.f32	s13, s12, s11
 8003740:	eeb0 6ae6 	vabs.f32	s12, s13
            if(abs(velocity_x) > abs(current_vel_x)) {
 8003744:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8003748:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                velocity_x *= ACCELERATION_FACTOR;
 800374c:	bfca      	itet	gt
 800374e:	ed9f 7a16 	vldrgt	s14, [pc, #88]	@ 80037a8 <_ZN11Screen1View14updateVelocityEiim+0x128>
 8003752:	eeb0 7a66 	vmovle.f32	s14, s13
 8003756:	ee26 7a87 	vmulgt.f32	s14, s13, s14
 800375a:	e7b5      	b.n	80036c8 <_ZN11Screen1View14updateVelocityEiim+0x48>
        if((velocity_y > 0 && current_vel_y > 0) || (velocity_y < 0 && current_vel_y < 0)) {
 800375c:	d5c2      	bpl.n	80036e4 <_ZN11Screen1View14updateVelocityEiim+0x64>
 800375e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003766:	d5bd      	bpl.n	80036e4 <_ZN11Screen1View14updateVelocityEiim+0x64>
            velocity_y = velocity_y * DAMPING_FACTOR + current_vel_y * (1 - DAMPING_FACTOR);
 8003768:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 80037a0 <_ZN11Screen1View14updateVelocityEiim+0x120>
 800376c:	ed9f 6a0d 	vldr	s12, [pc, #52]	@ 80037a4 <_ZN11Screen1View14updateVelocityEiim+0x124>
 8003770:	ee27 7a87 	vmul.f32	s14, s15, s14
 8003774:	eef0 7ae7 	vabs.f32	s15, s15
 8003778:	eea6 7a86 	vfma.f32	s14, s13, s12
 800377c:	eef0 6ac7 	vabs.f32	s13, s14
            if(abs(velocity_y) > abs(current_vel_y)) {
 8003780:	eef4 6ae7 	vcmpe.f32	s13, s15
 8003784:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                velocity_y *= ACCELERATION_FACTOR;
 8003788:	bfca      	itet	gt
 800378a:	eddf 7a07 	vldrgt	s15, [pc, #28]	@ 80037a8 <_ZN11Screen1View14updateVelocityEiim+0x128>
 800378e:	eef0 7a47 	vmovle.f32	s15, s14
 8003792:	ee67 7a27 	vmulgt.f32	s15, s14, s15
 8003796:	e7a5      	b.n	80036e4 <_ZN11Screen1View14updateVelocityEiim+0x64>
 8003798:	447a0000 	.word	0x447a0000
 800379c:	3dcccccd 	.word	0x3dcccccd
 80037a0:	3e99999a 	.word	0x3e99999a
 80037a4:	3f333333 	.word	0x3f333333
 80037a8:	3f99999a 	.word	0x3f99999a

080037ac <_ZN11Screen1View11setupScreenEv>:
{
 80037ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80037ae:	4604      	mov	r4, r0
    Screen1ViewBase::setupScreen();
 80037b0:	f7ff fc82 	bl	80030b8 <_ZN15Screen1ViewBase11setupScreenEv>
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80037b4:	f504 7088 	add.w	r0, r4, #272	@ 0x110
 80037b8:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 80037bc:	f00b fb78 	bl	800eeb0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
 80037c0:	f04f 33ff 	mov.w	r3, #4294967295
 80037c4:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80037c8:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
    myCircle.setPosition(0, 0, currentRadius * 2, currentRadius * 2);
 80037cc:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 80037d0:	005b      	lsls	r3, r3, #1
 80037d2:	f104 056c 	add.w	r5, r4, #108	@ 0x6c
 80037d6:	b21b      	sxth	r3, r3
 80037d8:	2200      	movs	r2, #0
 80037da:	9300      	str	r3, [sp, #0]
 80037dc:	4611      	mov	r1, r2
 80037de:	4628      	mov	r0, r5
 80037e0:	f7ff fe77 	bl	80034d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037e4:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 80037e8:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 80037ea:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80037ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80037f2:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
    myCircle.setPainter(circlePainter);
 80037f6:	f104 02b4 	add.w	r2, r4, #180	@ 0xb4
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80037fa:	2300      	movs	r3, #0
        container.add(d);
 80037fc:	4629      	mov	r1, r5
 80037fe:	1d20      	adds	r0, r4, #4
 8003800:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
        canvasPainter = &painter;
 8003804:	f8c4 2094 	str.w	r2, [r4, #148]	@ 0x94
 8003808:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
}
 800380c:	b003      	add	sp, #12
 800380e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003812:	f007 b90f 	b.w	800aa34 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	...

08003818 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE>:
{
 8003818:	b5f0      	push	{r4, r5, r6, r7, lr}
 800381a:	460d      	mov	r5, r1
 800381c:	b093      	sub	sp, #76	@ 0x4c
 800381e:	4604      	mov	r4, r0
	Screen1ViewBase::handleDragEvent(evt);
 8003820:	f00e fb64 	bl	8011eec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaX() const
    {
        return dragNewX - dragOldX;
 8003824:	88ea      	ldrh	r2, [r5, #6]
 8003826:	896b      	ldrh	r3, [r5, #10]
 8003828:	1a9b      	subs	r3, r3, r2
	int deltaX = evt.getDeltaX();
 800382a:	b21b      	sxth	r3, r3
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 800382c:	892a      	ldrh	r2, [r5, #8]
 800382e:	9303      	str	r3, [sp, #12]
 8003830:	89ab      	ldrh	r3, [r5, #12]
 8003832:	1a9b      	subs	r3, r3, r2
	int deltaY = evt.getDeltaY();
 8003834:	b21b      	sxth	r3, r3
 8003836:	9304      	str	r3, [sp, #16]
	uint32_t currentTime = HAL_GetTick();
 8003838:	f000 fc3e 	bl	80040b8 <HAL_GetTick>
	uint32_t timeDelta = currentTime - lastDragTime;
 800383c:	f8d4 70f4 	ldr.w	r7, [r4, #244]	@ 0xf4
	lastDragTime = currentTime;
 8003840:	f8c4 00f4 	str.w	r0, [r4, #244]	@ 0xf4
	uint32_t currentTime = HAL_GetTick();
 8003844:	4606      	mov	r6, r0
	myCircle.setPosition(evt.getNewX() - currentRadius, evt.getNewY() - currentRadius, currentRadius * 2, currentRadius * 2);
 8003846:	f8b4 00d0 	ldrh.w	r0, [r4, #208]	@ 0xd0
 800384a:	89aa      	ldrh	r2, [r5, #12]
 800384c:	8969      	ldrh	r1, [r5, #10]
 800384e:	0043      	lsls	r3, r0, #1
 8003850:	b21b      	sxth	r3, r3
 8003852:	1a12      	subs	r2, r2, r0
 8003854:	1a09      	subs	r1, r1, r0
 8003856:	9300      	str	r3, [sp, #0]
 8003858:	b212      	sxth	r2, r2
 800385a:	b209      	sxth	r1, r1
 800385c:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 8003860:	f7ff fe37 	bl	80034d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003864:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 8003868:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 800386a:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800386e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003872:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 8003876:	2301      	movs	r3, #1
 8003878:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
        container.invalidate();
 800387c:	1d20      	adds	r0, r4, #4
 800387e:	f00d fd19 	bl	80112b4 <_ZNK8touchgfx8Drawable10invalidateEv>
	if(isPotentialClick && !isDragging) {
 8003882:	f894 3100 	ldrb.w	r3, [r4, #256]	@ 0x100
 8003886:	2b00      	cmp	r3, #0
 8003888:	d039      	beq.n	80038fe <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0xe6>
 800388a:	f894 3101 	ldrb.w	r3, [r4, #257]	@ 0x101
 800388e:	b17b      	cbz	r3, 80038b0 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x98>
	applySmoothing(deltaX, deltaY);
 8003890:	aa04      	add	r2, sp, #16
 8003892:	a903      	add	r1, sp, #12
 8003894:	4620      	mov	r0, r4
 8003896:	f7ff feb9 	bl	800360c <_ZN11Screen1View14applySmoothingERiS0_>
	updateVelocity(deltaX, deltaY, timeDelta);
 800389a:	e9dd 1203 	ldrd	r1, r2, [sp, #12]
 800389e:	1bf3      	subs	r3, r6, r7
 80038a0:	4620      	mov	r0, r4
 80038a2:	f7ff feed 	bl	8003680 <_ZN11Screen1View14updateVelocityEiim>
	if(abs(deltaX) <= 0 && abs(deltaY) <= 0){
 80038a6:	ea51 0302 	orrs.w	r3, r1, r2
 80038aa:	d12d      	bne.n	8003908 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0xf0>
}
 80038ac:	b013      	add	sp, #76	@ 0x4c
 80038ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
		uint32_t timeSincePress = currentTime - pressStartTime;
 80038b0:	f8d4 3104 	ldr.w	r3, [r4, #260]	@ 0x104
        return dragNewX;
 80038b4:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
		int totalMovement = abs(evt.getNewX() - press_start_x) + abs(evt.getNewY() - press_start_y);
 80038b8:	f8d4 c108 	ldr.w	ip, [r4, #264]	@ 0x108
        return dragNewY;
 80038bc:	f9b5 100c 	ldrsh.w	r1, [r5, #12]
 80038c0:	f8d4 010c 	ldr.w	r0, [r4, #268]	@ 0x10c
		uint32_t timeSincePress = currentTime - pressStartTime;
 80038c4:	1af3      	subs	r3, r6, r3
		if(timeSincePress >= DRAG_MIN_TIME && totalMovement >= DRAG_THRESHOLD) {
 80038c6:	2b63      	cmp	r3, #99	@ 0x63
 80038c8:	d9f0      	bls.n	80038ac <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x94>
		int totalMovement = abs(evt.getNewX() - press_start_x) + abs(evt.getNewY() - press_start_y);
 80038ca:	eba2 020c 	sub.w	r2, r2, ip
 80038ce:	2a00      	cmp	r2, #0
 80038d0:	eba1 0100 	sub.w	r1, r1, r0
 80038d4:	bfb8      	it	lt
 80038d6:	4252      	neglt	r2, r2
 80038d8:	2900      	cmp	r1, #0
 80038da:	bfb8      	it	lt
 80038dc:	4249      	neglt	r1, r1
 80038de:	440a      	add	r2, r1
		if(timeSincePress >= DRAG_MIN_TIME && totalMovement >= DRAG_THRESHOLD) {
 80038e0:	2a07      	cmp	r2, #7
 80038e2:	dde3      	ble.n	80038ac <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x94>
			isPotentialClick = false;
 80038e4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80038e8:	f8a4 1100 	strh.w	r1, [r4, #256]	@ 0x100
			snprintf(msg, sizeof(msg), "Drag started: time=%lums, move=%dpx\r\n", timeSincePress, totalMovement);
 80038ec:	a805      	add	r0, sp, #20
 80038ee:	9200      	str	r2, [sp, #0]
 80038f0:	2132      	movs	r1, #50	@ 0x32
 80038f2:	4a26      	ldr	r2, [pc, #152]	@ (800398c <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x174>)
 80038f4:	f01f ff08 	bl	8023708 <sniprintf>
			uartPrint(msg);
 80038f8:	a805      	add	r0, sp, #20
 80038fa:	f7ff fe3b 	bl	8003574 <_Z9uartPrintPKc>
	if(!isDragging) {
 80038fe:	f894 3101 	ldrb.w	r3, [r4, #257]	@ 0x101
 8003902:	2b00      	cmp	r3, #0
 8003904:	d0d2      	beq.n	80038ac <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x94>
 8003906:	e7c3      	b.n	8003890 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x78>
 8003908:	edd4 7a3e 	vldr	s15, [r4, #248]	@ 0xf8
	if(abs(velocity_x) > 50.0f || abs(velocity_y) > 50.0f) {
 800390c:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8003990 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x178>
 8003910:	eef0 7ae7 	vabs.f32	s15, s15
 8003914:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003918:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800391c:	dc33      	bgt.n	8003986 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x16e>
 800391e:	edd4 7a3f 	vldr	s15, [r4, #252]	@ 0xfc
 8003922:	eef0 7ae7 	vabs.f32	s15, s15
	float velocity_factor = 1.0f;
 8003926:	eef4 7ac7 	vcmpe.f32	s15, s14
 800392a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800392e:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 8003932:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8003936:	bfd8      	it	le
 8003938:	eeb0 7a67 	vmovle.f32	s14, s15
	deltaX = (int)(deltaX * velocity_factor);
 800393c:	ee07 1a90 	vmov	s15, r1
 8003940:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	snprintf(msg, sizeof(msg), "Drag: %d, %d\r\n", deltaX, deltaY);
 8003944:	2132      	movs	r1, #50	@ 0x32
	deltaX = (int)(deltaX * velocity_factor);
 8003946:	ee67 7a87 	vmul.f32	s15, s15, s14
	snprintf(msg, sizeof(msg), "Drag: %d, %d\r\n", deltaX, deltaY);
 800394a:	a805      	add	r0, sp, #20
	deltaX = (int)(deltaX * velocity_factor);
 800394c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003950:	ee17 4a90 	vmov	r4, s15
	deltaY = (int)(deltaY * velocity_factor);
 8003954:	ee07 2a90 	vmov	s15, r2
 8003958:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	snprintf(msg, sizeof(msg), "Drag: %d, %d\r\n", deltaX, deltaY);
 800395c:	4a0d      	ldr	r2, [pc, #52]	@ (8003994 <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x17c>)
	deltaY = (int)(deltaY * velocity_factor);
 800395e:	ee67 7a87 	vmul.f32	s15, s15, s14
	snprintf(msg, sizeof(msg), "Drag: %d, %d\r\n", deltaX, deltaY);
 8003962:	4623      	mov	r3, r4
	deltaY = (int)(deltaY * velocity_factor);
 8003964:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003968:	ee17 5a90 	vmov	r5, s15
	snprintf(msg, sizeof(msg), "Drag: %d, %d\r\n", deltaX, deltaY);
 800396c:	edcd 7a00 	vstr	s15, [sp]
 8003970:	f01f feca 	bl	8023708 <sniprintf>
	uartPrint(msg);
 8003974:	a805      	add	r0, sp, #20
 8003976:	f7ff fdfd 	bl	8003574 <_Z9uartPrintPKc>
	enqueueMouseEvent(deltaX, deltaY, 0);
 800397a:	2200      	movs	r2, #0
 800397c:	b269      	sxtb	r1, r5
 800397e:	b260      	sxtb	r0, r4
 8003980:	f7fe fd6e 	bl	8002460 <enqueueMouseEvent>
 8003984:	e792      	b.n	80038ac <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x94>
		velocity_factor = 1.5f;
 8003986:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800398a:	e7d7      	b.n	800393c <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE+0x124>
 800398c:	080252d8 	.word	0x080252d8
 8003990:	42480000 	.word	0x42480000
 8003994:	080252fe 	.word	0x080252fe

08003998 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 8003998:	b5f0      	push	{r4, r5, r6, r7, lr}
 800399a:	4604      	mov	r4, r0
 800399c:	460d      	mov	r5, r1
 800399e:	b091      	sub	sp, #68	@ 0x44
    Screen1ViewBase::handleClickEvent(event);
 80039a0:	f00e fa50 	bl	8011e44 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
    currentRadius = 20;
 80039a4:	2314      	movs	r3, #20
 80039a6:	f8c4 30d0 	str.w	r3, [r4, #208]	@ 0xd0
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80039aa:	792e      	ldrb	r6, [r5, #4]
    touch_x = event.getX();
 80039ac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80039b0:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
    touch_y = event.getY();
 80039b4:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 80039b8:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
    if (event.getType() == ClickEvent::PRESSED)
 80039bc:	2e00      	cmp	r6, #0
 80039be:	d143      	bne.n	8003a48 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xb0>
    	resetTouchState();
 80039c0:	4620      	mov	r0, r4
 80039c2:	f7ff fe4a 	bl	800365a <_ZN11Screen1View15resetTouchStateEv>
    	lastDragTime = HAL_GetTick();
 80039c6:	f000 fb77 	bl	80040b8 <HAL_GetTick>
    	isPotentialClick = true;
 80039ca:	2501      	movs	r5, #1
    	lastDragTime = HAL_GetTick();
 80039cc:	f8c4 00f4 	str.w	r0, [r4, #244]	@ 0xf4
    	isPotentialClick = true;
 80039d0:	f8a4 5100 	strh.w	r5, [r4, #256]	@ 0x100
    	pressStartTime = HAL_GetTick();
 80039d4:	f000 fb70 	bl	80040b8 <HAL_GetTick>
 80039d8:	f8c4 0104 	str.w	r0, [r4, #260]	@ 0x104
    	myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 80039dc:	f8b4 00d0 	ldrh.w	r0, [r4, #208]	@ 0xd0
    	press_start_x = touch_x;
 80039e0:	f8d4 10c8 	ldr.w	r1, [r4, #200]	@ 0xc8
    	press_start_y = touch_y;
 80039e4:	f8d4 20cc 	ldr.w	r2, [r4, #204]	@ 0xcc
    	press_start_x = touch_x;
 80039e8:	f8c4 1108 	str.w	r1, [r4, #264]	@ 0x108
    	myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 80039ec:	fa00 f305 	lsl.w	r3, r0, r5
    	press_start_y = touch_y;
 80039f0:	f8c4 210c 	str.w	r2, [r4, #268]	@ 0x10c
    	myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 80039f4:	b21b      	sxth	r3, r3
 80039f6:	1a12      	subs	r2, r2, r0
 80039f8:	1a09      	subs	r1, r1, r0
 80039fa:	b212      	sxth	r2, r2
 80039fc:	b209      	sxth	r1, r1
 80039fe:	9300      	str	r3, [sp, #0]
 8003a00:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 8003a04:	f7ff fd65 	bl	80034d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a08:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 8003a0c:	f884 5091 	strb.w	r5, [r4, #145]	@ 0x91
 8003a10:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 8003a12:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003a16:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003a1a:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
    	isScaling = true;
 8003a1e:	f884 50d4 	strb.w	r5, [r4, #212]	@ 0xd4
    	startTime = HAL_GetTick();
 8003a22:	f000 fb49 	bl	80040b8 <HAL_GetTick>
 8003a26:	4b38      	ldr	r3, [pc, #224]	@ (8003b08 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x170>)
    	snprintf(msg, sizeof(msg), "Touch started at: x=%d, y=%d\r\n", touch_x, touch_y);
 8003a28:	4a38      	ldr	r2, [pc, #224]	@ (8003b0c <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x174>)
    	startTime = HAL_GetTick();
 8003a2a:	6018      	str	r0, [r3, #0]
    	snprintf(msg, sizeof(msg), "Touch started at: x=%d, y=%d\r\n", touch_x, touch_y);
 8003a2c:	f8d4 30cc 	ldr.w	r3, [r4, #204]	@ 0xcc
 8003a30:	9300      	str	r3, [sp, #0]
 8003a32:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
 8003a36:	2132      	movs	r1, #50	@ 0x32
 8003a38:	a803      	add	r0, sp, #12
 8003a3a:	f01f fe65 	bl	8023708 <sniprintf>
    	uartPrint(msg);
 8003a3e:	a803      	add	r0, sp, #12
 8003a40:	f7ff fd98 	bl	8003574 <_Z9uartPrintPKc>
}
 8003a44:	b011      	add	sp, #68	@ 0x44
 8003a46:	bdf0      	pop	{r4, r5, r6, r7, pc}
    else if(event.getType() == ClickEvent::RELEASED)
 8003a48:	2e01      	cmp	r6, #1
 8003a4a:	d1fb      	bne.n	8003a44 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xac>
        uint32_t pressDuration = HAL_GetTick() - pressStartTime;
 8003a4c:	f000 fb34 	bl	80040b8 <HAL_GetTick>
        if(isPotentialClick && !isDragging && pressDuration <= CLICK_MAX_DURATION &&
 8003a50:	f894 e100 	ldrb.w	lr, [r4, #256]	@ 0x100
        uint32_t pressDuration = HAL_GetTick() - pressStartTime;
 8003a54:	f8d4 c104 	ldr.w	ip, [r4, #260]	@ 0x104
        int totalMovement = abs(touch_x - press_start_x) + abs(touch_y - press_start_y);
 8003a58:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
 8003a5c:	f8d4 7108 	ldr.w	r7, [r4, #264]	@ 0x108
 8003a60:	f8d4 10cc 	ldr.w	r1, [r4, #204]	@ 0xcc
 8003a64:	f8d4 210c 	ldr.w	r2, [r4, #268]	@ 0x10c
        if(isPotentialClick && !isDragging && pressDuration <= CLICK_MAX_DURATION &&
 8003a68:	f894 5101 	ldrb.w	r5, [r4, #257]	@ 0x101
 8003a6c:	f1be 0f00 	cmp.w	lr, #0
 8003a70:	d046      	beq.n	8003b00 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x168>
 8003a72:	2d00      	cmp	r5, #0
 8003a74:	d144      	bne.n	8003b00 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x168>
        uint32_t pressDuration = HAL_GetTick() - pressStartTime;
 8003a76:	eba0 000c 	sub.w	r0, r0, ip
        if(isPotentialClick && !isDragging && pressDuration <= CLICK_MAX_DURATION &&
 8003a7a:	f5b0 7ffa 	cmp.w	r0, #500	@ 0x1f4
 8003a7e:	d83f      	bhi.n	8003b00 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x168>
        int totalMovement = abs(touch_x - press_start_x) + abs(touch_y - press_start_y);
 8003a80:	1bdb      	subs	r3, r3, r7
 8003a82:	2b00      	cmp	r3, #0
 8003a84:	eba1 0102 	sub.w	r1, r1, r2
 8003a88:	bfb8      	it	lt
 8003a8a:	425b      	neglt	r3, r3
 8003a8c:	2900      	cmp	r1, #0
 8003a8e:	bfb8      	it	lt
 8003a90:	4249      	neglt	r1, r1
 8003a92:	440b      	add	r3, r1
        if(isPotentialClick && !isDragging && pressDuration <= CLICK_MAX_DURATION &&
 8003a94:	2b07      	cmp	r3, #7
 8003a96:	dc33      	bgt.n	8003b00 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x168>
            uartPrint(msg);
 8003a98:	a803      	add	r0, sp, #12
 8003a9a:	f7ff fd6b 	bl	8003574 <_Z9uartPrintPKc>
            enqueueMouseEvent(0, 0, 1);
 8003a9e:	4632      	mov	r2, r6
 8003aa0:	4629      	mov	r1, r5
 8003aa2:	4628      	mov	r0, r5
 8003aa4:	f7fe fcdc 	bl	8002460 <enqueueMouseEvent>
            enqueueMouseEvent(0, 0, 2);
 8003aa8:	2202      	movs	r2, #2
 8003aaa:	4629      	mov	r1, r5
 8003aac:	4628      	mov	r0, r5
 8003aae:	f7fe fcd7 	bl	8002460 <enqueueMouseEvent>
        resetTouchState();
 8003ab2:	4620      	mov	r0, r4
 8003ab4:	f7ff fdd1 	bl	800365a <_ZN11Screen1View15resetTouchStateEv>
        myCircle.setPosition(touch_x - currentRadius, touch_y - currentRadius, currentRadius * 2, currentRadius * 2);
 8003ab8:	f8b4 00d0 	ldrh.w	r0, [r4, #208]	@ 0xd0
 8003abc:	f8d4 20cc 	ldr.w	r2, [r4, #204]	@ 0xcc
 8003ac0:	f8d4 10c8 	ldr.w	r1, [r4, #200]	@ 0xc8
 8003ac4:	0043      	lsls	r3, r0, #1
 8003ac6:	b21b      	sxth	r3, r3
 8003ac8:	1a12      	subs	r2, r2, r0
 8003aca:	1a09      	subs	r1, r1, r0
 8003acc:	9300      	str	r3, [sp, #0]
 8003ace:	b212      	sxth	r2, r2
 8003ad0:	b209      	sxth	r1, r1
 8003ad2:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 8003ad6:	f7ff fcfc 	bl	80034d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ada:	f8d4 30d0 	ldr.w	r3, [r4, #208]	@ 0xd0
 8003ade:	015b      	lsls	r3, r3, #5
        this->circleCenterY = CWRUtil::toQ5(y);
 8003ae0:	e9c4 3326 	strd	r3, r3, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003ae4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003ae8:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 8003aec:	2301      	movs	r3, #1
 8003aee:	f884 3091 	strb.w	r3, [r4, #145]	@ 0x91
        isScaling = true;
 8003af2:	f884 30d4 	strb.w	r3, [r4, #212]	@ 0xd4
        startTime = HAL_GetTick();
 8003af6:	f000 fadf 	bl	80040b8 <HAL_GetTick>
 8003afa:	4b03      	ldr	r3, [pc, #12]	@ (8003b08 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x170>)
 8003afc:	6018      	str	r0, [r3, #0]
}
 8003afe:	e7a1      	b.n	8003a44 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0xac>
            uartPrint(msg);
 8003b00:	a803      	add	r0, sp, #12
 8003b02:	f7ff fd37 	bl	8003574 <_Z9uartPrintPKc>
 8003b06:	e7d4      	b.n	8003ab2 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x11a>
 8003b08:	20003238 	.word	0x20003238
 8003b0c:	0802530d 	.word	0x0802530d

08003b10 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8003b10:	20f0      	movs	r0, #240	@ 0xf0
 8003b12:	4770      	bx	lr

08003b14 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8003b14:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8003b18:	4770      	bx	lr

08003b1a <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8003b1a:	2029      	movs	r0, #41	@ 0x29
 8003b1c:	f7fe bd30 	b.w	8002580 <LCD_IO_WriteReg>

08003b20 <ili9341_DisplayOff>:
 8003b20:	2028      	movs	r0, #40	@ 0x28
 8003b22:	f7fe bd2d 	b.w	8002580 <LCD_IO_WriteReg>

08003b26 <ili9341_Init>:
{
 8003b26:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003b28:	f7fe fcfe 	bl	8002528 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8003b2c:	20ca      	movs	r0, #202	@ 0xca
 8003b2e:	f7fe fd27 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b32:	20c3      	movs	r0, #195	@ 0xc3
 8003b34:	f7fe fd08 	bl	8002548 <LCD_IO_WriteData>
 8003b38:	2008      	movs	r0, #8
 8003b3a:	f7fe fd05 	bl	8002548 <LCD_IO_WriteData>
 8003b3e:	2050      	movs	r0, #80	@ 0x50
 8003b40:	f7fe fd02 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b44:	20cf      	movs	r0, #207	@ 0xcf
 8003b46:	f7fe fd1b 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b4a:	2000      	movs	r0, #0
 8003b4c:	f7fe fcfc 	bl	8002548 <LCD_IO_WriteData>
 8003b50:	20c1      	movs	r0, #193	@ 0xc1
 8003b52:	f7fe fcf9 	bl	8002548 <LCD_IO_WriteData>
 8003b56:	2030      	movs	r0, #48	@ 0x30
 8003b58:	f7fe fcf6 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b5c:	20ed      	movs	r0, #237	@ 0xed
 8003b5e:	f7fe fd0f 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b62:	2064      	movs	r0, #100	@ 0x64
 8003b64:	f7fe fcf0 	bl	8002548 <LCD_IO_WriteData>
 8003b68:	2003      	movs	r0, #3
 8003b6a:	f7fe fced 	bl	8002548 <LCD_IO_WriteData>
 8003b6e:	2012      	movs	r0, #18
 8003b70:	f7fe fcea 	bl	8002548 <LCD_IO_WriteData>
 8003b74:	2081      	movs	r0, #129	@ 0x81
 8003b76:	f7fe fce7 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b7a:	20e8      	movs	r0, #232	@ 0xe8
 8003b7c:	f7fe fd00 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b80:	2085      	movs	r0, #133	@ 0x85
 8003b82:	f7fe fce1 	bl	8002548 <LCD_IO_WriteData>
 8003b86:	2000      	movs	r0, #0
 8003b88:	f7fe fcde 	bl	8002548 <LCD_IO_WriteData>
 8003b8c:	2078      	movs	r0, #120	@ 0x78
 8003b8e:	f7fe fcdb 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b92:	20cb      	movs	r0, #203	@ 0xcb
 8003b94:	f7fe fcf4 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003b98:	2039      	movs	r0, #57	@ 0x39
 8003b9a:	f7fe fcd5 	bl	8002548 <LCD_IO_WriteData>
 8003b9e:	202c      	movs	r0, #44	@ 0x2c
 8003ba0:	f7fe fcd2 	bl	8002548 <LCD_IO_WriteData>
 8003ba4:	2000      	movs	r0, #0
 8003ba6:	f7fe fccf 	bl	8002548 <LCD_IO_WriteData>
 8003baa:	2034      	movs	r0, #52	@ 0x34
 8003bac:	f7fe fccc 	bl	8002548 <LCD_IO_WriteData>
 8003bb0:	2002      	movs	r0, #2
 8003bb2:	f7fe fcc9 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bb6:	20f7      	movs	r0, #247	@ 0xf7
 8003bb8:	f7fe fce2 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bbc:	2020      	movs	r0, #32
 8003bbe:	f7fe fcc3 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bc2:	20ea      	movs	r0, #234	@ 0xea
 8003bc4:	f7fe fcdc 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bc8:	2000      	movs	r0, #0
 8003bca:	f7fe fcbd 	bl	8002548 <LCD_IO_WriteData>
 8003bce:	2000      	movs	r0, #0
 8003bd0:	f7fe fcba 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bd4:	20b1      	movs	r0, #177	@ 0xb1
 8003bd6:	f7fe fcd3 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bda:	2000      	movs	r0, #0
 8003bdc:	f7fe fcb4 	bl	8002548 <LCD_IO_WriteData>
 8003be0:	201b      	movs	r0, #27
 8003be2:	f7fe fcb1 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003be6:	20b6      	movs	r0, #182	@ 0xb6
 8003be8:	f7fe fcca 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bec:	200a      	movs	r0, #10
 8003bee:	f7fe fcab 	bl	8002548 <LCD_IO_WriteData>
 8003bf2:	20a2      	movs	r0, #162	@ 0xa2
 8003bf4:	f7fe fca8 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003bf8:	20c0      	movs	r0, #192	@ 0xc0
 8003bfa:	f7fe fcc1 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003bfe:	2010      	movs	r0, #16
 8003c00:	f7fe fca2 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c04:	20c1      	movs	r0, #193	@ 0xc1
 8003c06:	f7fe fcbb 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c0a:	2010      	movs	r0, #16
 8003c0c:	f7fe fc9c 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c10:	20c5      	movs	r0, #197	@ 0xc5
 8003c12:	f7fe fcb5 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c16:	2045      	movs	r0, #69	@ 0x45
 8003c18:	f7fe fc96 	bl	8002548 <LCD_IO_WriteData>
 8003c1c:	2015      	movs	r0, #21
 8003c1e:	f7fe fc93 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c22:	20c7      	movs	r0, #199	@ 0xc7
 8003c24:	f7fe fcac 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c28:	2090      	movs	r0, #144	@ 0x90
 8003c2a:	f7fe fc8d 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c2e:	2036      	movs	r0, #54	@ 0x36
 8003c30:	f7fe fca6 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c34:	20c8      	movs	r0, #200	@ 0xc8
 8003c36:	f7fe fc87 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c3a:	20f2      	movs	r0, #242	@ 0xf2
 8003c3c:	f7fe fca0 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c40:	2000      	movs	r0, #0
 8003c42:	f7fe fc81 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c46:	20b0      	movs	r0, #176	@ 0xb0
 8003c48:	f7fe fc9a 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c4c:	20c2      	movs	r0, #194	@ 0xc2
 8003c4e:	f7fe fc7b 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c52:	20b6      	movs	r0, #182	@ 0xb6
 8003c54:	f7fe fc94 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c58:	200a      	movs	r0, #10
 8003c5a:	f7fe fc75 	bl	8002548 <LCD_IO_WriteData>
 8003c5e:	20a7      	movs	r0, #167	@ 0xa7
 8003c60:	f7fe fc72 	bl	8002548 <LCD_IO_WriteData>
 8003c64:	2027      	movs	r0, #39	@ 0x27
 8003c66:	f7fe fc6f 	bl	8002548 <LCD_IO_WriteData>
 8003c6a:	2004      	movs	r0, #4
 8003c6c:	f7fe fc6c 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c70:	202a      	movs	r0, #42	@ 0x2a
 8003c72:	f7fe fc85 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c76:	2000      	movs	r0, #0
 8003c78:	f7fe fc66 	bl	8002548 <LCD_IO_WriteData>
 8003c7c:	2000      	movs	r0, #0
 8003c7e:	f7fe fc63 	bl	8002548 <LCD_IO_WriteData>
 8003c82:	2000      	movs	r0, #0
 8003c84:	f7fe fc60 	bl	8002548 <LCD_IO_WriteData>
 8003c88:	20ef      	movs	r0, #239	@ 0xef
 8003c8a:	f7fe fc5d 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003c8e:	202b      	movs	r0, #43	@ 0x2b
 8003c90:	f7fe fc76 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003c94:	2000      	movs	r0, #0
 8003c96:	f7fe fc57 	bl	8002548 <LCD_IO_WriteData>
 8003c9a:	2000      	movs	r0, #0
 8003c9c:	f7fe fc54 	bl	8002548 <LCD_IO_WriteData>
 8003ca0:	2001      	movs	r0, #1
 8003ca2:	f7fe fc51 	bl	8002548 <LCD_IO_WriteData>
 8003ca6:	203f      	movs	r0, #63	@ 0x3f
 8003ca8:	f7fe fc4e 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003cac:	20f6      	movs	r0, #246	@ 0xf6
 8003cae:	f7fe fc67 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003cb2:	2001      	movs	r0, #1
 8003cb4:	f7fe fc48 	bl	8002548 <LCD_IO_WriteData>
 8003cb8:	2000      	movs	r0, #0
 8003cba:	f7fe fc45 	bl	8002548 <LCD_IO_WriteData>
 8003cbe:	2006      	movs	r0, #6
 8003cc0:	f7fe fc42 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003cc4:	202c      	movs	r0, #44	@ 0x2c
 8003cc6:	f7fe fc5b 	bl	8002580 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003cca:	20c8      	movs	r0, #200	@ 0xc8
 8003ccc:	f7fe fca6 	bl	800261c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003cd0:	2026      	movs	r0, #38	@ 0x26
 8003cd2:	f7fe fc55 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003cd6:	2001      	movs	r0, #1
 8003cd8:	f7fe fc36 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003cdc:	20e0      	movs	r0, #224	@ 0xe0
 8003cde:	f7fe fc4f 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003ce2:	200f      	movs	r0, #15
 8003ce4:	f7fe fc30 	bl	8002548 <LCD_IO_WriteData>
 8003ce8:	2029      	movs	r0, #41	@ 0x29
 8003cea:	f7fe fc2d 	bl	8002548 <LCD_IO_WriteData>
 8003cee:	2024      	movs	r0, #36	@ 0x24
 8003cf0:	f7fe fc2a 	bl	8002548 <LCD_IO_WriteData>
 8003cf4:	200c      	movs	r0, #12
 8003cf6:	f7fe fc27 	bl	8002548 <LCD_IO_WriteData>
 8003cfa:	200e      	movs	r0, #14
 8003cfc:	f7fe fc24 	bl	8002548 <LCD_IO_WriteData>
 8003d00:	2009      	movs	r0, #9
 8003d02:	f7fe fc21 	bl	8002548 <LCD_IO_WriteData>
 8003d06:	204e      	movs	r0, #78	@ 0x4e
 8003d08:	f7fe fc1e 	bl	8002548 <LCD_IO_WriteData>
 8003d0c:	2078      	movs	r0, #120	@ 0x78
 8003d0e:	f7fe fc1b 	bl	8002548 <LCD_IO_WriteData>
 8003d12:	203c      	movs	r0, #60	@ 0x3c
 8003d14:	f7fe fc18 	bl	8002548 <LCD_IO_WriteData>
 8003d18:	2009      	movs	r0, #9
 8003d1a:	f7fe fc15 	bl	8002548 <LCD_IO_WriteData>
 8003d1e:	2013      	movs	r0, #19
 8003d20:	f7fe fc12 	bl	8002548 <LCD_IO_WriteData>
 8003d24:	2005      	movs	r0, #5
 8003d26:	f7fe fc0f 	bl	8002548 <LCD_IO_WriteData>
 8003d2a:	2017      	movs	r0, #23
 8003d2c:	f7fe fc0c 	bl	8002548 <LCD_IO_WriteData>
 8003d30:	2011      	movs	r0, #17
 8003d32:	f7fe fc09 	bl	8002548 <LCD_IO_WriteData>
 8003d36:	2000      	movs	r0, #0
 8003d38:	f7fe fc06 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003d3c:	20e1      	movs	r0, #225	@ 0xe1
 8003d3e:	f7fe fc1f 	bl	8002580 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003d42:	2000      	movs	r0, #0
 8003d44:	f7fe fc00 	bl	8002548 <LCD_IO_WriteData>
 8003d48:	2016      	movs	r0, #22
 8003d4a:	f7fe fbfd 	bl	8002548 <LCD_IO_WriteData>
 8003d4e:	201b      	movs	r0, #27
 8003d50:	f7fe fbfa 	bl	8002548 <LCD_IO_WriteData>
 8003d54:	2004      	movs	r0, #4
 8003d56:	f7fe fbf7 	bl	8002548 <LCD_IO_WriteData>
 8003d5a:	2011      	movs	r0, #17
 8003d5c:	f7fe fbf4 	bl	8002548 <LCD_IO_WriteData>
 8003d60:	2007      	movs	r0, #7
 8003d62:	f7fe fbf1 	bl	8002548 <LCD_IO_WriteData>
 8003d66:	2031      	movs	r0, #49	@ 0x31
 8003d68:	f7fe fbee 	bl	8002548 <LCD_IO_WriteData>
 8003d6c:	2033      	movs	r0, #51	@ 0x33
 8003d6e:	f7fe fbeb 	bl	8002548 <LCD_IO_WriteData>
 8003d72:	2042      	movs	r0, #66	@ 0x42
 8003d74:	f7fe fbe8 	bl	8002548 <LCD_IO_WriteData>
 8003d78:	2005      	movs	r0, #5
 8003d7a:	f7fe fbe5 	bl	8002548 <LCD_IO_WriteData>
 8003d7e:	200c      	movs	r0, #12
 8003d80:	f7fe fbe2 	bl	8002548 <LCD_IO_WriteData>
 8003d84:	200a      	movs	r0, #10
 8003d86:	f7fe fbdf 	bl	8002548 <LCD_IO_WriteData>
 8003d8a:	2028      	movs	r0, #40	@ 0x28
 8003d8c:	f7fe fbdc 	bl	8002548 <LCD_IO_WriteData>
 8003d90:	202f      	movs	r0, #47	@ 0x2f
 8003d92:	f7fe fbd9 	bl	8002548 <LCD_IO_WriteData>
 8003d96:	200f      	movs	r0, #15
 8003d98:	f7fe fbd6 	bl	8002548 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003d9c:	2011      	movs	r0, #17
 8003d9e:	f7fe fbef 	bl	8002580 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003da2:	20c8      	movs	r0, #200	@ 0xc8
 8003da4:	f7fe fc3a 	bl	800261c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003da8:	2029      	movs	r0, #41	@ 0x29
 8003daa:	f7fe fbe9 	bl	8002580 <LCD_IO_WriteReg>
}
 8003dae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8003db2:	202c      	movs	r0, #44	@ 0x2c
 8003db4:	f7fe bbe4 	b.w	8002580 <LCD_IO_WriteReg>

08003db8 <ili9341_ReadID>:
{
 8003db8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003dba:	f7fe fbb5 	bl	8002528 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8003dbe:	2103      	movs	r1, #3
 8003dc0:	20d3      	movs	r0, #211	@ 0xd3
 8003dc2:	f7fe fbf9 	bl	80025b8 <LCD_IO_ReadData>
}
 8003dc6:	b280      	uxth	r0, r0
 8003dc8:	bd08      	pop	{r3, pc}

08003dca <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8003dca:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8003dcc:	b2c4      	uxtb	r4, r0
 8003dce:	2202      	movs	r2, #2
 8003dd0:	2103      	movs	r1, #3
 8003dd2:	4620      	mov	r0, r4
 8003dd4:	f7fe fb5e 	bl	8002494 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8003dd8:	200a      	movs	r0, #10
 8003dda:	f7fe fba3 	bl	8002524 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8003dde:	4620      	mov	r0, r4
 8003de0:	2200      	movs	r2, #0
 8003de2:	2103      	movs	r1, #3
 8003de4:	f7fe fb56 	bl	8002494 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8003de8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8003dec:	2002      	movs	r0, #2
 8003dee:	f7fe bb99 	b.w	8002524 <IOE_Delay>

08003df2 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8003df2:	b538      	push	{r3, r4, r5, lr}
 8003df4:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003df6:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8003df8:	f7fe fb4a 	bl	8002490 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003dfc:	2100      	movs	r1, #0
 8003dfe:	4620      	mov	r0, r4
 8003e00:	f7fe fb60 	bl	80024c4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003e04:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003e06:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003e08:	4620      	mov	r0, r4
 8003e0a:	f7fe fb5b 	bl	80024c4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003e0e:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8003e12:	b280      	uxth	r0, r0
 8003e14:	bd38      	pop	{r3, r4, r5, pc}

08003e16 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8003e16:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8003e18:	b2c4      	uxtb	r4, r0
 8003e1a:	2140      	movs	r1, #64	@ 0x40
 8003e1c:	4620      	mov	r0, r4
 8003e1e:	f7fe fb51 	bl	80024c4 <IOE_Read>
  
  if(state > 0)
 8003e22:	0603      	lsls	r3, r0, #24
 8003e24:	d507      	bpl.n	8003e36 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8003e26:	214c      	movs	r1, #76	@ 0x4c
 8003e28:	4620      	mov	r0, r4
 8003e2a:	f7fe fb4b 	bl	80024c4 <IOE_Read>
 8003e2e:	3800      	subs	r0, #0
 8003e30:	bf18      	it	ne
 8003e32:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8003e34:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003e36:	2201      	movs	r2, #1
 8003e38:	214b      	movs	r1, #75	@ 0x4b
 8003e3a:	4620      	mov	r0, r4
 8003e3c:	f7fe fb2a 	bl	8002494 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003e40:	4620      	mov	r0, r4
 8003e42:	2200      	movs	r2, #0
 8003e44:	214b      	movs	r1, #75	@ 0x4b
 8003e46:	f7fe fb25 	bl	8002494 <IOE_Write>
  uint8_t ret = 0;
 8003e4a:	2000      	movs	r0, #0
 8003e4c:	e7f2      	b.n	8003e34 <stmpe811_TS_DetectTouch+0x1e>

08003e4e <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8003e4e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003e50:	2304      	movs	r3, #4
 8003e52:	b2c4      	uxtb	r4, r0
{
 8003e54:	460e      	mov	r6, r1
 8003e56:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003e58:	21d7      	movs	r1, #215	@ 0xd7
 8003e5a:	eb0d 0203 	add.w	r2, sp, r3
 8003e5e:	4620      	mov	r0, r4
 8003e60:	f7fe fb4a 	bl	80024f8 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8003e64:	9b01      	ldr	r3, [sp, #4]
 8003e66:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003e68:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003e6a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003e6e:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003e70:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003e72:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003e74:	2201      	movs	r2, #1
 8003e76:	214b      	movs	r1, #75	@ 0x4b
 8003e78:	f7fe fb0c 	bl	8002494 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003e7c:	2200      	movs	r2, #0
 8003e7e:	214b      	movs	r1, #75	@ 0x4b
 8003e80:	4620      	mov	r0, r4
 8003e82:	f7fe fb07 	bl	8002494 <IOE_Write>
}
 8003e86:	b002      	add	sp, #8
 8003e88:	bd70      	pop	{r4, r5, r6, pc}
	...

08003e8c <stmpe811_Init>:
{
 8003e8c:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8003e8e:	4a0a      	ldr	r2, [pc, #40]	@ (8003eb8 <stmpe811_Init+0x2c>)
 8003e90:	7813      	ldrb	r3, [r2, #0]
 8003e92:	4298      	cmp	r0, r3
{
 8003e94:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8003e96:	d00d      	beq.n	8003eb4 <stmpe811_Init+0x28>
 8003e98:	7851      	ldrb	r1, [r2, #1]
 8003e9a:	4288      	cmp	r0, r1
 8003e9c:	d00a      	beq.n	8003eb4 <stmpe811_Init+0x28>
 8003e9e:	b10b      	cbz	r3, 8003ea4 <stmpe811_Init+0x18>
 8003ea0:	b941      	cbnz	r1, 8003eb4 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8003ea2:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8003ea4:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8003ea6:	f7fe faf3 	bl	8002490 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8003eaa:	4620      	mov	r0, r4
}
 8003eac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8003eb0:	f7ff bf8b 	b.w	8003dca <stmpe811_Reset>
}
 8003eb4:	bd10      	pop	{r4, pc}
 8003eb6:	bf00      	nop
 8003eb8:	2000323c 	.word	0x2000323c

08003ebc <stmpe811_EnableGlobalIT>:
{
 8003ebc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003ebe:	b2c4      	uxtb	r4, r0
 8003ec0:	2109      	movs	r1, #9
 8003ec2:	4620      	mov	r0, r4
 8003ec4:	f7fe fafe 	bl	80024c4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8003ec8:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003ecc:	b2d2      	uxtb	r2, r2
 8003ece:	4620      	mov	r0, r4
 8003ed0:	2109      	movs	r1, #9
}
 8003ed2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003ed6:	f7fe badd 	b.w	8002494 <IOE_Write>

08003eda <stmpe811_DisableGlobalIT>:
{
 8003eda:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003edc:	b2c4      	uxtb	r4, r0
 8003ede:	2109      	movs	r1, #9
 8003ee0:	4620      	mov	r0, r4
 8003ee2:	f7fe faef 	bl	80024c4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003ee6:	2109      	movs	r1, #9
 8003ee8:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8003eec:	4620      	mov	r0, r4
}
 8003eee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003ef2:	f7fe bacf 	b.w	8002494 <IOE_Write>

08003ef6 <stmpe811_EnableITSource>:
{
 8003ef6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003ef8:	b2c4      	uxtb	r4, r0
{
 8003efa:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003efc:	4620      	mov	r0, r4
 8003efe:	210a      	movs	r1, #10
 8003f00:	f7fe fae0 	bl	80024c4 <IOE_Read>
  tmp |= Source; 
 8003f04:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003f08:	b2d2      	uxtb	r2, r2
 8003f0a:	4620      	mov	r0, r4
 8003f0c:	210a      	movs	r1, #10
}
 8003f0e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003f12:	f7fe babf 	b.w	8002494 <IOE_Write>

08003f16 <stmpe811_TS_EnableIT>:
{
 8003f16:	b510      	push	{r4, lr}
 8003f18:	4604      	mov	r4, r0
  IOE_ITConfig();
 8003f1a:	f7fe faba 	bl	8002492 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003f1e:	4620      	mov	r0, r4
 8003f20:	211f      	movs	r1, #31
 8003f22:	f7ff ffe8 	bl	8003ef6 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003f26:	4620      	mov	r0, r4
}
 8003f28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003f2c:	f7ff bfc6 	b.w	8003ebc <stmpe811_EnableGlobalIT>

08003f30 <stmpe811_DisableITSource>:
{
 8003f30:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003f32:	b2c4      	uxtb	r4, r0
{
 8003f34:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003f36:	4620      	mov	r0, r4
 8003f38:	210a      	movs	r1, #10
 8003f3a:	f7fe fac3 	bl	80024c4 <IOE_Read>
  tmp &= ~Source; 
 8003f3e:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003f42:	b2d2      	uxtb	r2, r2
 8003f44:	4620      	mov	r0, r4
 8003f46:	210a      	movs	r1, #10
}
 8003f48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003f4c:	f7fe baa2 	b.w	8002494 <IOE_Write>

08003f50 <stmpe811_TS_DisableIT>:
{
 8003f50:	b510      	push	{r4, lr}
 8003f52:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003f54:	f7ff ffc1 	bl	8003eda <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003f58:	4620      	mov	r0, r4
 8003f5a:	211f      	movs	r1, #31
}
 8003f5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003f60:	f7ff bfe6 	b.w	8003f30 <stmpe811_DisableITSource>

08003f64 <stmpe811_ReadGITStatus>:
{
 8003f64:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003f66:	b2c0      	uxtb	r0, r0
{
 8003f68:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003f6a:	210b      	movs	r1, #11
 8003f6c:	f7fe faaa 	bl	80024c4 <IOE_Read>
}
 8003f70:	4020      	ands	r0, r4
 8003f72:	bd10      	pop	{r4, pc}

08003f74 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003f74:	211f      	movs	r1, #31
 8003f76:	f7ff bff5 	b.w	8003f64 <stmpe811_ReadGITStatus>

08003f7a <stmpe811_ClearGlobalIT>:
{
 8003f7a:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003f7c:	b2c0      	uxtb	r0, r0
 8003f7e:	210b      	movs	r1, #11
 8003f80:	f7fe ba88 	b.w	8002494 <IOE_Write>

08003f84 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003f84:	211f      	movs	r1, #31
 8003f86:	f7ff bff8 	b.w	8003f7a <stmpe811_ClearGlobalIT>

08003f8a <stmpe811_IO_EnableAF>:
{
 8003f8a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003f8c:	b2c4      	uxtb	r4, r0
{
 8003f8e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003f90:	4620      	mov	r0, r4
 8003f92:	2117      	movs	r1, #23
 8003f94:	f7fe fa96 	bl	80024c4 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8003f98:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003f9c:	b2d2      	uxtb	r2, r2
 8003f9e:	4620      	mov	r0, r4
 8003fa0:	2117      	movs	r1, #23
}
 8003fa2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003fa6:	f7fe ba75 	b.w	8002494 <IOE_Write>

08003faa <stmpe811_TS_Start>:
{
 8003faa:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003fac:	b2c4      	uxtb	r4, r0
{
 8003fae:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003fb0:	2104      	movs	r1, #4
 8003fb2:	4620      	mov	r0, r4
 8003fb4:	f7fe fa86 	bl	80024c4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003fb8:	2104      	movs	r1, #4
 8003fba:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003fbe:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003fc0:	4620      	mov	r0, r4
 8003fc2:	f7fe fa67 	bl	8002494 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8003fc6:	4630      	mov	r0, r6
 8003fc8:	21f0      	movs	r1, #240	@ 0xf0
 8003fca:	f7ff ffde 	bl	8003f8a <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003fce:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8003fd2:	4620      	mov	r0, r4
 8003fd4:	2104      	movs	r1, #4
 8003fd6:	f7fe fa5d 	bl	8002494 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8003fda:	2249      	movs	r2, #73	@ 0x49
 8003fdc:	2120      	movs	r1, #32
 8003fde:	4620      	mov	r0, r4
 8003fe0:	f7fe fa58 	bl	8002494 <IOE_Write>
  IOE_Delay(2); 
 8003fe4:	2002      	movs	r0, #2
 8003fe6:	f7fe fa9d 	bl	8002524 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8003fea:	4620      	mov	r0, r4
 8003fec:	2201      	movs	r2, #1
 8003fee:	2121      	movs	r1, #33	@ 0x21
 8003ff0:	f7fe fa50 	bl	8002494 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8003ff4:	4620      	mov	r0, r4
 8003ff6:	229a      	movs	r2, #154	@ 0x9a
 8003ff8:	2141      	movs	r1, #65	@ 0x41
 8003ffa:	f7fe fa4b 	bl	8002494 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8003ffe:	4620      	mov	r0, r4
 8004000:	2201      	movs	r2, #1
 8004002:	214a      	movs	r1, #74	@ 0x4a
 8004004:	f7fe fa46 	bl	8002494 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004008:	4620      	mov	r0, r4
 800400a:	2201      	movs	r2, #1
 800400c:	214b      	movs	r1, #75	@ 0x4b
 800400e:	f7fe fa41 	bl	8002494 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004012:	4620      	mov	r0, r4
 8004014:	2200      	movs	r2, #0
 8004016:	214b      	movs	r1, #75	@ 0x4b
 8004018:	f7fe fa3c 	bl	8002494 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800401c:	4620      	mov	r0, r4
 800401e:	2201      	movs	r2, #1
 8004020:	2156      	movs	r1, #86	@ 0x56
 8004022:	f7fe fa37 	bl	8002494 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8004026:	4620      	mov	r0, r4
 8004028:	2201      	movs	r2, #1
 800402a:	2158      	movs	r1, #88	@ 0x58
 800402c:	f7fe fa32 	bl	8002494 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8004030:	4620      	mov	r0, r4
 8004032:	2201      	movs	r2, #1
 8004034:	2140      	movs	r1, #64	@ 0x40
 8004036:	f7fe fa2d 	bl	8002494 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800403a:	4620      	mov	r0, r4
 800403c:	22ff      	movs	r2, #255	@ 0xff
 800403e:	210b      	movs	r1, #11
 8004040:	f7fe fa28 	bl	8002494 <IOE_Write>
}
 8004044:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8004048:	2002      	movs	r0, #2
 800404a:	f7fe ba6b 	b.w	8002524 <IOE_Delay>
	...

08004050 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004050:	4b05      	ldr	r3, [pc, #20]	@ (8004068 <SystemInit+0x18>)
 8004052:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8004056:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 800405a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800405e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8004062:	609a      	str	r2, [r3, #8]
#endif
}
 8004064:	4770      	bx	lr
 8004066:	bf00      	nop
 8004068:	e000ed00 	.word	0xe000ed00

0800406c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800406c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800406e:	4b0b      	ldr	r3, [pc, #44]	@ (800409c <HAL_Init+0x30>)
 8004070:	681a      	ldr	r2, [r3, #0]
 8004072:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004076:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004078:	681a      	ldr	r2, [r3, #0]
 800407a:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800407e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004080:	681a      	ldr	r2, [r3, #0]
 8004082:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004086:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004088:	2003      	movs	r0, #3
 800408a:	f000 f82f 	bl	80040ec <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800408e:	2000      	movs	r0, #0
 8004090:	f7fe fd3c 	bl	8002b0c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004094:	f7fe fad0 	bl	8002638 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004098:	2000      	movs	r0, #0
 800409a:	bd08      	pop	{r3, pc}
 800409c:	40023c00 	.word	0x40023c00

080040a0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80040a0:	4a03      	ldr	r2, [pc, #12]	@ (80040b0 <HAL_IncTick+0x10>)
 80040a2:	4b04      	ldr	r3, [pc, #16]	@ (80040b4 <HAL_IncTick+0x14>)
 80040a4:	6811      	ldr	r1, [r2, #0]
 80040a6:	781b      	ldrb	r3, [r3, #0]
 80040a8:	440b      	add	r3, r1
 80040aa:	6013      	str	r3, [r2, #0]
}
 80040ac:	4770      	bx	lr
 80040ae:	bf00      	nop
 80040b0:	20003240 	.word	0x20003240
 80040b4:	200000c8 	.word	0x200000c8

080040b8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80040b8:	4b01      	ldr	r3, [pc, #4]	@ (80040c0 <HAL_GetTick+0x8>)
 80040ba:	6818      	ldr	r0, [r3, #0]
}
 80040bc:	4770      	bx	lr
 80040be:	bf00      	nop
 80040c0:	20003240 	.word	0x20003240

080040c4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80040c4:	b538      	push	{r3, r4, r5, lr}
 80040c6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80040c8:	f7ff fff6 	bl	80040b8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80040cc:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80040ce:	bf1c      	itt	ne
 80040d0:	4b05      	ldrne	r3, [pc, #20]	@ (80040e8 <HAL_Delay+0x24>)
 80040d2:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80040d4:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80040d6:	bf18      	it	ne
 80040d8:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80040da:	f7ff ffed 	bl	80040b8 <HAL_GetTick>
 80040de:	1b43      	subs	r3, r0, r5
 80040e0:	42a3      	cmp	r3, r4
 80040e2:	d3fa      	bcc.n	80040da <HAL_Delay+0x16>
  {
  }
}
 80040e4:	bd38      	pop	{r3, r4, r5, pc}
 80040e6:	bf00      	nop
 80040e8:	200000c8 	.word	0x200000c8

080040ec <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80040ec:	4907      	ldr	r1, [pc, #28]	@ (800410c <HAL_NVIC_SetPriorityGrouping+0x20>)
 80040ee:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80040f0:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80040f4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80040f6:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80040f8:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80040fc:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80040fe:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004100:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004104:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004108:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800410a:	4770      	bx	lr
 800410c:	e000ed00 	.word	0xe000ed00

08004110 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004110:	4b16      	ldr	r3, [pc, #88]	@ (800416c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004112:	b530      	push	{r4, r5, lr}
 8004114:	68dc      	ldr	r4, [r3, #12]
 8004116:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800411a:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800411e:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004120:	2b04      	cmp	r3, #4
 8004122:	bf28      	it	cs
 8004124:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004126:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004128:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800412c:	bf8c      	ite	hi
 800412e:	3c03      	subhi	r4, #3
 8004130:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004132:	fa05 f303 	lsl.w	r3, r5, r3
 8004136:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800413a:	40a5      	lsls	r5, r4
 800413c:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004140:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8004142:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004144:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004148:	bfac      	ite	ge
 800414a:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800414e:	4a08      	ldrlt	r2, [pc, #32]	@ (8004170 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004150:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004154:	bfb8      	it	lt
 8004156:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800415a:	b2db      	uxtb	r3, r3
 800415c:	bfaa      	itet	ge
 800415e:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004162:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004164:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004168:	bd30      	pop	{r4, r5, pc}
 800416a:	bf00      	nop
 800416c:	e000ed00 	.word	0xe000ed00
 8004170:	e000ed14 	.word	0xe000ed14

08004174 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004174:	2800      	cmp	r0, #0
 8004176:	db07      	blt.n	8004188 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004178:	4a04      	ldr	r2, [pc, #16]	@ (800418c <HAL_NVIC_EnableIRQ+0x18>)
 800417a:	0941      	lsrs	r1, r0, #5
 800417c:	2301      	movs	r3, #1
 800417e:	f000 001f 	and.w	r0, r0, #31
 8004182:	4083      	lsls	r3, r0
 8004184:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004188:	4770      	bx	lr
 800418a:	bf00      	nop
 800418c:	e000e100 	.word	0xe000e100

08004190 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004190:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004192:	4604      	mov	r4, r0
 8004194:	b150      	cbz	r0, 80041ac <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004196:	7943      	ldrb	r3, [r0, #5]
 8004198:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800419c:	b913      	cbnz	r3, 80041a4 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800419e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80041a0:	f7fe fa6a 	bl	8002678 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80041a4:	2301      	movs	r3, #1
 80041a6:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80041a8:	2000      	movs	r0, #0
}
 80041aa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80041ac:	2001      	movs	r0, #1
 80041ae:	e7fc      	b.n	80041aa <HAL_CRC_Init+0x1a>

080041b0 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80041b0:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80041b2:	4604      	mov	r4, r0
 80041b4:	b320      	cbz	r0, 8004200 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80041b6:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 80041ba:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80041be:	b91b      	cbnz	r3, 80041c8 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80041c0:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80041c4:	f7fe fa70 	bl	80026a8 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80041c8:	2302      	movs	r3, #2
 80041ca:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80041ce:	6823      	ldr	r3, [r4, #0]
 80041d0:	6861      	ldr	r1, [r4, #4]
 80041d2:	681a      	ldr	r2, [r3, #0]
 80041d4:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 80041d8:	430a      	orrs	r2, r1
 80041da:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80041dc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80041de:	68a1      	ldr	r1, [r4, #8]
 80041e0:	f022 0207 	bic.w	r2, r2, #7
 80041e4:	430a      	orrs	r2, r1
 80041e6:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80041e8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80041ea:	68e1      	ldr	r1, [r4, #12]
 80041ec:	f36f 020d 	bfc	r2, #0, #14
 80041f0:	430a      	orrs	r2, r1
 80041f2:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80041f4:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80041f6:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80041f8:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80041fa:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 80041fe:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004200:	2001      	movs	r0, #1
 8004202:	e7fc      	b.n	80041fe <HAL_DMA2D_Init+0x4e>

08004204 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004204:	4770      	bx	lr

08004206 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004206:	4770      	bx	lr

08004208 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004208:	6803      	ldr	r3, [r0, #0]
{
 800420a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800420c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800420e:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004210:	07f2      	lsls	r2, r6, #31
{
 8004212:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004214:	d514      	bpl.n	8004240 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004216:	05e9      	lsls	r1, r5, #23
 8004218:	d512      	bpl.n	8004240 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800421a:	681a      	ldr	r2, [r3, #0]
 800421c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004220:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004222:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004224:	f042 0201 	orr.w	r2, r2, #1
 8004228:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800422a:	2201      	movs	r2, #1
 800422c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800422e:	2304      	movs	r3, #4
 8004230:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004234:	2300      	movs	r3, #0
 8004236:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800423a:	6943      	ldr	r3, [r0, #20]
 800423c:	b103      	cbz	r3, 8004240 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 800423e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004240:	06b2      	lsls	r2, r6, #26
 8004242:	d516      	bpl.n	8004272 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004244:	04ab      	lsls	r3, r5, #18
 8004246:	d514      	bpl.n	8004272 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004248:	6823      	ldr	r3, [r4, #0]
 800424a:	681a      	ldr	r2, [r3, #0]
 800424c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004250:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004252:	2220      	movs	r2, #32
 8004254:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004256:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004258:	f043 0302 	orr.w	r3, r3, #2
 800425c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800425e:	2304      	movs	r3, #4
 8004260:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004264:	2300      	movs	r3, #0
 8004266:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800426a:	6963      	ldr	r3, [r4, #20]
 800426c:	b10b      	cbz	r3, 8004272 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800426e:	4620      	mov	r0, r4
 8004270:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004272:	0730      	lsls	r0, r6, #28
 8004274:	d516      	bpl.n	80042a4 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004276:	0529      	lsls	r1, r5, #20
 8004278:	d514      	bpl.n	80042a4 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800427a:	6823      	ldr	r3, [r4, #0]
 800427c:	681a      	ldr	r2, [r3, #0]
 800427e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004282:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004284:	2208      	movs	r2, #8
 8004286:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004288:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800428a:	f043 0304 	orr.w	r3, r3, #4
 800428e:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004290:	2304      	movs	r3, #4
 8004292:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004296:	2300      	movs	r3, #0
 8004298:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800429c:	6963      	ldr	r3, [r4, #20]
 800429e:	b10b      	cbz	r3, 80042a4 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 80042a0:	4620      	mov	r0, r4
 80042a2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80042a4:	0772      	lsls	r2, r6, #29
 80042a6:	d50b      	bpl.n	80042c0 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 80042a8:	056b      	lsls	r3, r5, #21
 80042aa:	d509      	bpl.n	80042c0 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80042ac:	6823      	ldr	r3, [r4, #0]
 80042ae:	681a      	ldr	r2, [r3, #0]
 80042b0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80042b4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80042b6:	2204      	movs	r2, #4
 80042b8:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80042ba:	4620      	mov	r0, r4
 80042bc:	f7ff ffa2 	bl	8004204 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80042c0:	07b0      	lsls	r0, r6, #30
 80042c2:	d514      	bpl.n	80042ee <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80042c4:	05a9      	lsls	r1, r5, #22
 80042c6:	d512      	bpl.n	80042ee <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80042c8:	6823      	ldr	r3, [r4, #0]
 80042ca:	681a      	ldr	r2, [r3, #0]
 80042cc:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80042d0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80042d2:	2202      	movs	r2, #2
 80042d4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80042d6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80042d8:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80042da:	2301      	movs	r3, #1
 80042dc:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80042e0:	2300      	movs	r3, #0
 80042e2:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 80042e6:	6923      	ldr	r3, [r4, #16]
 80042e8:	b10b      	cbz	r3, 80042ee <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80042ea:	4620      	mov	r0, r4
 80042ec:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80042ee:	06f2      	lsls	r2, r6, #27
 80042f0:	d513      	bpl.n	800431a <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80042f2:	04eb      	lsls	r3, r5, #19
 80042f4:	d511      	bpl.n	800431a <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80042f6:	6823      	ldr	r3, [r4, #0]
 80042f8:	681a      	ldr	r2, [r3, #0]
 80042fa:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80042fe:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004300:	2210      	movs	r2, #16
 8004302:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004304:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004306:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004308:	2301      	movs	r3, #1
 800430a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800430e:	2300      	movs	r3, #0
 8004310:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004314:	4620      	mov	r0, r4
 8004316:	f7ff ff76 	bl	8004206 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800431a:	bd70      	pop	{r4, r5, r6, pc}

0800431c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800431c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800431e:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8004322:	2a01      	cmp	r2, #1
{
 8004324:	4603      	mov	r3, r0
 8004326:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 800432a:	d02b      	beq.n	8004384 <HAL_DMA2D_ConfigLayer+0x68>
 800432c:	2201      	movs	r2, #1
 800432e:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004332:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004336:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 800433a:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 800433e:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8004340:	4f17      	ldr	r7, [pc, #92]	@ (80043a0 <HAL_DMA2D_ConfigLayer+0x84>)
 8004342:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004346:	3c09      	subs	r4, #9
 8004348:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800434a:	bf9c      	itt	ls
 800434c:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8004350:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004352:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004356:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004358:	bf88      	it	hi
 800435a:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800435e:	b991      	cbnz	r1, 8004386 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004360:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8004362:	4039      	ands	r1, r7
 8004364:	4301      	orrs	r1, r0
 8004366:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004368:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800436a:	6999      	ldr	r1, [r3, #24]
 800436c:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800436e:	d803      	bhi.n	8004378 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004370:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004372:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8004376:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004378:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800437a:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800437c:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8004380:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8004384:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004386:	69d1      	ldr	r1, [r2, #28]
 8004388:	4039      	ands	r1, r7
 800438a:	4301      	orrs	r1, r0
 800438c:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800438e:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004390:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004392:	6989      	ldr	r1, [r1, #24]
 8004394:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004396:	bf9c      	itt	ls
 8004398:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 800439c:	6215      	strls	r5, [r2, #32]
 800439e:	e7eb      	b.n	8004378 <HAL_DMA2D_ConfigLayer+0x5c>
 80043a0:	00fcfff0 	.word	0x00fcfff0

080043a4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80043a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80043a8:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8004568 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80043ac:	4a6c      	ldr	r2, [pc, #432]	@ (8004560 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 80043ae:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80043b0:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 80043b2:	2401      	movs	r4, #1
 80043b4:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80043b6:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 80043ba:	43ac      	bics	r4, r5
 80043bc:	f040 80b7 	bne.w	800452e <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80043c0:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80043c2:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80043c4:	f005 0403 	and.w	r4, r5, #3
 80043c8:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80043cc:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80043d0:	1e67      	subs	r7, r4, #1
 80043d2:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80043d4:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80043d8:	d834      	bhi.n	8004444 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80043da:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80043dc:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 80043e0:	68cf      	ldr	r7, [r1, #12]
 80043e2:	fa07 f708 	lsl.w	r7, r7, r8
 80043e6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80043ea:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80043ec:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80043ee:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80043f2:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80043f6:	409f      	lsls	r7, r3
 80043f8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80043fc:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80043fe:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004400:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004404:	688f      	ldr	r7, [r1, #8]
 8004406:	fa07 f708 	lsl.w	r7, r7, r8
 800440a:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800440e:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8004410:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004412:	d119      	bne.n	8004448 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004414:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004418:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800441c:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004420:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004424:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004428:	f04f 0e0f 	mov.w	lr, #15
 800442c:	fa0e fe0b 	lsl.w	lr, lr, fp
 8004430:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004434:	690f      	ldr	r7, [r1, #16]
 8004436:	fa07 f70b 	lsl.w	r7, r7, fp
 800443a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800443e:	f8ca 7020 	str.w	r7, [sl, #32]
 8004442:	e001      	b.n	8004448 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004444:	2c03      	cmp	r4, #3
 8004446:	d1da      	bne.n	80043fe <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004448:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800444a:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800444e:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004452:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004454:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8004458:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800445a:	d068      	beq.n	800452e <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800445c:	2400      	movs	r4, #0
 800445e:	9401      	str	r4, [sp, #4]
 8004460:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8004464:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8004468:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 800446c:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8004470:	f023 0703 	bic.w	r7, r3, #3
 8004474:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8004478:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 800447c:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8004480:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004482:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004486:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004488:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800448c:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004490:	240f      	movs	r4, #15
 8004492:	fa04 f40c 	lsl.w	r4, r4, ip
 8004496:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800449a:	4c32      	ldr	r4, [pc, #200]	@ (8004564 <HAL_GPIO_Init+0x1c0>)
 800449c:	42a0      	cmp	r0, r4
 800449e:	d04d      	beq.n	800453c <HAL_GPIO_Init+0x198>
 80044a0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044a4:	42a0      	cmp	r0, r4
 80044a6:	d04b      	beq.n	8004540 <HAL_GPIO_Init+0x19c>
 80044a8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044ac:	42a0      	cmp	r0, r4
 80044ae:	d049      	beq.n	8004544 <HAL_GPIO_Init+0x1a0>
 80044b0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044b4:	42a0      	cmp	r0, r4
 80044b6:	d047      	beq.n	8004548 <HAL_GPIO_Init+0x1a4>
 80044b8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044bc:	42a0      	cmp	r0, r4
 80044be:	d045      	beq.n	800454c <HAL_GPIO_Init+0x1a8>
 80044c0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044c4:	42a0      	cmp	r0, r4
 80044c6:	d043      	beq.n	8004550 <HAL_GPIO_Init+0x1ac>
 80044c8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044cc:	42a0      	cmp	r0, r4
 80044ce:	d041      	beq.n	8004554 <HAL_GPIO_Init+0x1b0>
 80044d0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044d4:	42a0      	cmp	r0, r4
 80044d6:	d03f      	beq.n	8004558 <HAL_GPIO_Init+0x1b4>
 80044d8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044dc:	42a0      	cmp	r0, r4
 80044de:	d03d      	beq.n	800455c <HAL_GPIO_Init+0x1b8>
 80044e0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80044e4:	42a0      	cmp	r0, r4
 80044e6:	bf14      	ite	ne
 80044e8:	240a      	movne	r4, #10
 80044ea:	2409      	moveq	r4, #9
 80044ec:	fa04 f40c 	lsl.w	r4, r4, ip
 80044f0:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 80044f4:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 80044f6:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80044f8:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80044fa:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 80044fe:	bf0c      	ite	eq
 8004500:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004502:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8004504:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8004506:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004508:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 800450c:	bf0c      	ite	eq
 800450e:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8004510:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8004512:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8004514:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004516:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800451a:	bf0c      	ite	eq
 800451c:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800451e:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8004520:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004522:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004524:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8004526:	bf54      	ite	pl
 8004528:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800452a:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 800452c:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800452e:	3301      	adds	r3, #1
 8004530:	2b10      	cmp	r3, #16
 8004532:	f47f af3d 	bne.w	80043b0 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004536:	b003      	add	sp, #12
 8004538:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800453c:	2400      	movs	r4, #0
 800453e:	e7d5      	b.n	80044ec <HAL_GPIO_Init+0x148>
 8004540:	2401      	movs	r4, #1
 8004542:	e7d3      	b.n	80044ec <HAL_GPIO_Init+0x148>
 8004544:	2402      	movs	r4, #2
 8004546:	e7d1      	b.n	80044ec <HAL_GPIO_Init+0x148>
 8004548:	2403      	movs	r4, #3
 800454a:	e7cf      	b.n	80044ec <HAL_GPIO_Init+0x148>
 800454c:	2404      	movs	r4, #4
 800454e:	e7cd      	b.n	80044ec <HAL_GPIO_Init+0x148>
 8004550:	2405      	movs	r4, #5
 8004552:	e7cb      	b.n	80044ec <HAL_GPIO_Init+0x148>
 8004554:	2406      	movs	r4, #6
 8004556:	e7c9      	b.n	80044ec <HAL_GPIO_Init+0x148>
 8004558:	2407      	movs	r4, #7
 800455a:	e7c7      	b.n	80044ec <HAL_GPIO_Init+0x148>
 800455c:	2408      	movs	r4, #8
 800455e:	e7c5      	b.n	80044ec <HAL_GPIO_Init+0x148>
 8004560:	40013c00 	.word	0x40013c00
 8004564:	40020000 	.word	0x40020000
 8004568:	40023800 	.word	0x40023800

0800456c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800456c:	6903      	ldr	r3, [r0, #16]
 800456e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004570:	bf14      	ite	ne
 8004572:	2001      	movne	r0, #1
 8004574:	2000      	moveq	r0, #0
 8004576:	4770      	bx	lr

08004578 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004578:	b10a      	cbz	r2, 800457e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800457a:	6181      	str	r1, [r0, #24]
  }
}
 800457c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800457e:	0409      	lsls	r1, r1, #16
 8004580:	e7fb      	b.n	800457a <HAL_GPIO_WritePin+0x2>

08004582 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004582:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004584:	ea01 0203 	and.w	r2, r1, r3
 8004588:	ea21 0103 	bic.w	r1, r1, r3
 800458c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004590:	6181      	str	r1, [r0, #24]
}
 8004592:	4770      	bx	lr

08004594 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004594:	6801      	ldr	r1, [r0, #0]
 8004596:	694b      	ldr	r3, [r1, #20]
 8004598:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 800459c:	f04f 0200 	mov.w	r2, #0
 80045a0:	d010      	beq.n	80045c4 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80045a2:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80045a6:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80045a8:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80045aa:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80045ac:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80045b0:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80045b4:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80045b6:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80045ba:	f043 0304 	orr.w	r3, r3, #4
 80045be:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 80045c0:	2001      	movs	r0, #1
 80045c2:	4770      	bx	lr
  }
  return HAL_OK;
 80045c4:	4618      	mov	r0, r3
}
 80045c6:	4770      	bx	lr

080045c8 <I2C_WaitOnFlagUntilTimeout>:
{
 80045c8:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80045cc:	4606      	mov	r6, r0
 80045ce:	460f      	mov	r7, r1
 80045d0:	4691      	mov	r9, r2
 80045d2:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80045d4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80045d8:	6833      	ldr	r3, [r6, #0]
 80045da:	f1ba 0f01 	cmp.w	sl, #1
 80045de:	bf0c      	ite	eq
 80045e0:	695c      	ldreq	r4, [r3, #20]
 80045e2:	699c      	ldrne	r4, [r3, #24]
 80045e4:	ea27 0404 	bic.w	r4, r7, r4
 80045e8:	b2a4      	uxth	r4, r4
 80045ea:	fab4 f484 	clz	r4, r4
 80045ee:	0964      	lsrs	r4, r4, #5
 80045f0:	45a1      	cmp	r9, r4
 80045f2:	d001      	beq.n	80045f8 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80045f4:	2000      	movs	r0, #0
 80045f6:	e025      	b.n	8004644 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 80045f8:	1c6a      	adds	r2, r5, #1
 80045fa:	d0ee      	beq.n	80045da <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80045fc:	f7ff fd5c 	bl	80040b8 <HAL_GetTick>
 8004600:	9b08      	ldr	r3, [sp, #32]
 8004602:	1ac0      	subs	r0, r0, r3
 8004604:	42a8      	cmp	r0, r5
 8004606:	d801      	bhi.n	800460c <I2C_WaitOnFlagUntilTimeout+0x44>
 8004608:	2d00      	cmp	r5, #0
 800460a:	d1e5      	bne.n	80045d8 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800460c:	6833      	ldr	r3, [r6, #0]
 800460e:	f1ba 0f01 	cmp.w	sl, #1
 8004612:	bf0c      	ite	eq
 8004614:	695b      	ldreq	r3, [r3, #20]
 8004616:	699b      	ldrne	r3, [r3, #24]
 8004618:	ea27 0303 	bic.w	r3, r7, r3
 800461c:	b29b      	uxth	r3, r3
 800461e:	fab3 f383 	clz	r3, r3
 8004622:	095b      	lsrs	r3, r3, #5
 8004624:	4599      	cmp	r9, r3
 8004626:	d1d7      	bne.n	80045d8 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004628:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800462a:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800462c:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800462e:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004632:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004636:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004638:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800463c:	f042 0220 	orr.w	r2, r2, #32
 8004640:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 8004642:	2001      	movs	r0, #1
}
 8004644:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004648 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004648:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800464c:	4604      	mov	r4, r0
 800464e:	460f      	mov	r7, r1
 8004650:	4616      	mov	r6, r2
 8004652:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004654:	6825      	ldr	r5, [r4, #0]
 8004656:	6968      	ldr	r0, [r5, #20]
 8004658:	ea27 0000 	bic.w	r0, r7, r0
 800465c:	b280      	uxth	r0, r0
 800465e:	b1c0      	cbz	r0, 8004692 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004660:	696b      	ldr	r3, [r5, #20]
 8004662:	055a      	lsls	r2, r3, #21
 8004664:	d517      	bpl.n	8004696 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004666:	682b      	ldr	r3, [r5, #0]
 8004668:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800466c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800466e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8004672:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004674:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004676:	2300      	movs	r3, #0
 8004678:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800467a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800467e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004682:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004684:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004688:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800468a:	2300      	movs	r3, #0
 800468c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8004690:	2001      	movs	r0, #1
}
 8004692:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004696:	1c73      	adds	r3, r6, #1
 8004698:	d0dd      	beq.n	8004656 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800469a:	f7ff fd0d 	bl	80040b8 <HAL_GetTick>
 800469e:	eba0 0008 	sub.w	r0, r0, r8
 80046a2:	42b0      	cmp	r0, r6
 80046a4:	d801      	bhi.n	80046aa <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 80046a6:	2e00      	cmp	r6, #0
 80046a8:	d1d4      	bne.n	8004654 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 80046aa:	6823      	ldr	r3, [r4, #0]
 80046ac:	695a      	ldr	r2, [r3, #20]
 80046ae:	ea27 0202 	bic.w	r2, r7, r2
 80046b2:	b292      	uxth	r2, r2
 80046b4:	2a00      	cmp	r2, #0
 80046b6:	d0cd      	beq.n	8004654 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 80046b8:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 80046ba:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 80046bc:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80046be:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80046c2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80046c6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80046c8:	4313      	orrs	r3, r2
 80046ca:	e7dd      	b.n	8004688 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080046cc <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80046cc:	b570      	push	{r4, r5, r6, lr}
 80046ce:	4604      	mov	r4, r0
 80046d0:	460d      	mov	r5, r1
 80046d2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80046d4:	6823      	ldr	r3, [r4, #0]
 80046d6:	695b      	ldr	r3, [r3, #20]
 80046d8:	061b      	lsls	r3, r3, #24
 80046da:	d501      	bpl.n	80046e0 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80046dc:	2000      	movs	r0, #0
 80046de:	e01e      	b.n	800471e <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80046e0:	4620      	mov	r0, r4
 80046e2:	f7ff ff57 	bl	8004594 <I2C_IsAcknowledgeFailed>
 80046e6:	b9c8      	cbnz	r0, 800471c <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80046e8:	1c6a      	adds	r2, r5, #1
 80046ea:	d0f3      	beq.n	80046d4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80046ec:	f7ff fce4 	bl	80040b8 <HAL_GetTick>
 80046f0:	1b80      	subs	r0, r0, r6
 80046f2:	42a8      	cmp	r0, r5
 80046f4:	d801      	bhi.n	80046fa <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80046f6:	2d00      	cmp	r5, #0
 80046f8:	d1ec      	bne.n	80046d4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 80046fa:	6823      	ldr	r3, [r4, #0]
 80046fc:	695b      	ldr	r3, [r3, #20]
 80046fe:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8004702:	d1e7      	bne.n	80046d4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004704:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004706:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004708:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800470c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004710:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004712:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004716:	f042 0220 	orr.w	r2, r2, #32
 800471a:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800471c:	2001      	movs	r0, #1
}
 800471e:	bd70      	pop	{r4, r5, r6, pc}

08004720 <I2C_RequestMemoryWrite>:
{
 8004720:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004724:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004726:	6802      	ldr	r2, [r0, #0]
{
 8004728:	b085      	sub	sp, #20
 800472a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 800472e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004730:	6813      	ldr	r3, [r2, #0]
 8004732:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004736:	6013      	str	r3, [r2, #0]
{
 8004738:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800473a:	463b      	mov	r3, r7
 800473c:	f8cd 8000 	str.w	r8, [sp]
 8004740:	2200      	movs	r2, #0
 8004742:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8004746:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004748:	f7ff ff3e 	bl	80045c8 <I2C_WaitOnFlagUntilTimeout>
 800474c:	6823      	ldr	r3, [r4, #0]
 800474e:	b138      	cbz	r0, 8004760 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	05db      	lsls	r3, r3, #23
 8004754:	d502      	bpl.n	800475c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004756:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800475a:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800475c:	2603      	movs	r6, #3
 800475e:	e020      	b.n	80047a2 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004760:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8004764:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004766:	491a      	ldr	r1, [pc, #104]	@ (80047d0 <I2C_RequestMemoryWrite+0xb0>)
 8004768:	4643      	mov	r3, r8
 800476a:	463a      	mov	r2, r7
 800476c:	4620      	mov	r0, r4
 800476e:	f7ff ff6b 	bl	8004648 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004772:	b9a8      	cbnz	r0, 80047a0 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004774:	6823      	ldr	r3, [r4, #0]
 8004776:	9003      	str	r0, [sp, #12]
 8004778:	695a      	ldr	r2, [r3, #20]
 800477a:	9203      	str	r2, [sp, #12]
 800477c:	699b      	ldr	r3, [r3, #24]
 800477e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004780:	4642      	mov	r2, r8
 8004782:	4639      	mov	r1, r7
 8004784:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004786:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004788:	f7ff ffa0 	bl	80046cc <I2C_WaitOnTXEFlagUntilTimeout>
 800478c:	4606      	mov	r6, r0
 800478e:	b160      	cbz	r0, 80047aa <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004790:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004792:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004794:	bf01      	itttt	eq
 8004796:	6822      	ldreq	r2, [r4, #0]
 8004798:	6813      	ldreq	r3, [r2, #0]
 800479a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800479e:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 80047a0:	2601      	movs	r6, #1
}
 80047a2:	4630      	mov	r0, r6
 80047a4:	b005      	add	sp, #20
 80047a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80047aa:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047ae:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80047b0:	d102      	bne.n	80047b8 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80047b2:	b2ed      	uxtb	r5, r5
 80047b4:	611d      	str	r5, [r3, #16]
 80047b6:	e7f4      	b.n	80047a2 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80047b8:	0a2a      	lsrs	r2, r5, #8
 80047ba:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80047bc:	4639      	mov	r1, r7
 80047be:	4642      	mov	r2, r8
 80047c0:	4620      	mov	r0, r4
 80047c2:	f7ff ff83 	bl	80046cc <I2C_WaitOnTXEFlagUntilTimeout>
 80047c6:	2800      	cmp	r0, #0
 80047c8:	d1e2      	bne.n	8004790 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80047ca:	6823      	ldr	r3, [r4, #0]
 80047cc:	e7f1      	b.n	80047b2 <I2C_RequestMemoryWrite+0x92>
 80047ce:	bf00      	nop
 80047d0:	00010002 	.word	0x00010002

080047d4 <I2C_RequestMemoryRead>:
{
 80047d4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80047d8:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80047da:	6803      	ldr	r3, [r0, #0]
{
 80047dc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80047de:	681a      	ldr	r2, [r3, #0]
 80047e0:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80047e4:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80047e6:	681a      	ldr	r2, [r3, #0]
{
 80047e8:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80047ec:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80047f0:	601a      	str	r2, [r3, #0]
{
 80047f2:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80047f4:	463b      	mov	r3, r7
 80047f6:	f8cd 8000 	str.w	r8, [sp]
 80047fa:	2200      	movs	r2, #0
 80047fc:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8004800:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004802:	f7ff fee1 	bl	80045c8 <I2C_WaitOnFlagUntilTimeout>
 8004806:	6823      	ldr	r3, [r4, #0]
 8004808:	b138      	cbz	r0, 800481a <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800480a:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800480c:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800480e:	bf44      	itt	mi
 8004810:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8004814:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8004816:	2003      	movs	r0, #3
 8004818:	e021      	b.n	800485e <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800481a:	fa5f f986 	uxtb.w	r9, r6
 800481e:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8004822:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004824:	492b      	ldr	r1, [pc, #172]	@ (80048d4 <I2C_RequestMemoryRead+0x100>)
 8004826:	4643      	mov	r3, r8
 8004828:	463a      	mov	r2, r7
 800482a:	4620      	mov	r0, r4
 800482c:	f7ff ff0c 	bl	8004648 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004830:	b9a0      	cbnz	r0, 800485c <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004832:	6823      	ldr	r3, [r4, #0]
 8004834:	9003      	str	r0, [sp, #12]
 8004836:	695a      	ldr	r2, [r3, #20]
 8004838:	9203      	str	r2, [sp, #12]
 800483a:	699b      	ldr	r3, [r3, #24]
 800483c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800483e:	4642      	mov	r2, r8
 8004840:	4639      	mov	r1, r7
 8004842:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004844:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004846:	f7ff ff41 	bl	80046cc <I2C_WaitOnTXEFlagUntilTimeout>
 800484a:	b158      	cbz	r0, 8004864 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800484c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800484e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004850:	bf01      	itttt	eq
 8004852:	6822      	ldreq	r2, [r4, #0]
 8004854:	6813      	ldreq	r3, [r2, #0]
 8004856:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800485a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800485c:	2001      	movs	r0, #1
}
 800485e:	b004      	add	sp, #16
 8004860:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004864:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004868:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800486a:	d11a      	bne.n	80048a2 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800486c:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800486e:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004870:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004872:	4639      	mov	r1, r7
 8004874:	4620      	mov	r0, r4
 8004876:	f7ff ff29 	bl	80046cc <I2C_WaitOnTXEFlagUntilTimeout>
 800487a:	4602      	mov	r2, r0
 800487c:	2800      	cmp	r0, #0
 800487e:	d1e5      	bne.n	800484c <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004880:	6821      	ldr	r1, [r4, #0]
 8004882:	680b      	ldr	r3, [r1, #0]
 8004884:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004888:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800488a:	4620      	mov	r0, r4
 800488c:	f8cd 8000 	str.w	r8, [sp]
 8004890:	463b      	mov	r3, r7
 8004892:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004896:	f7ff fe97 	bl	80045c8 <I2C_WaitOnFlagUntilTimeout>
 800489a:	6822      	ldr	r2, [r4, #0]
 800489c:	b160      	cbz	r0, 80048b8 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800489e:	6813      	ldr	r3, [r2, #0]
 80048a0:	e7b4      	b.n	800480c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80048a2:	0a2a      	lsrs	r2, r5, #8
 80048a4:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80048a6:	4639      	mov	r1, r7
 80048a8:	4642      	mov	r2, r8
 80048aa:	4620      	mov	r0, r4
 80048ac:	f7ff ff0e 	bl	80046cc <I2C_WaitOnTXEFlagUntilTimeout>
 80048b0:	2800      	cmp	r0, #0
 80048b2:	d1cb      	bne.n	800484c <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80048b4:	6823      	ldr	r3, [r4, #0]
 80048b6:	e7d9      	b.n	800486c <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80048b8:	f049 0301 	orr.w	r3, r9, #1
 80048bc:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80048be:	4905      	ldr	r1, [pc, #20]	@ (80048d4 <I2C_RequestMemoryRead+0x100>)
 80048c0:	4643      	mov	r3, r8
 80048c2:	463a      	mov	r2, r7
 80048c4:	4620      	mov	r0, r4
 80048c6:	f7ff febf 	bl	8004648 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80048ca:	3800      	subs	r0, #0
 80048cc:	bf18      	it	ne
 80048ce:	2001      	movne	r0, #1
 80048d0:	e7c5      	b.n	800485e <I2C_RequestMemoryRead+0x8a>
 80048d2:	bf00      	nop
 80048d4:	00010002 	.word	0x00010002

080048d8 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80048d8:	b570      	push	{r4, r5, r6, lr}
 80048da:	4604      	mov	r4, r0
 80048dc:	460d      	mov	r5, r1
 80048de:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80048e0:	6823      	ldr	r3, [r4, #0]
 80048e2:	695b      	ldr	r3, [r3, #20]
 80048e4:	075b      	lsls	r3, r3, #29
 80048e6:	d501      	bpl.n	80048ec <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80048e8:	2000      	movs	r0, #0
 80048ea:	e01e      	b.n	800492a <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80048ec:	4620      	mov	r0, r4
 80048ee:	f7ff fe51 	bl	8004594 <I2C_IsAcknowledgeFailed>
 80048f2:	b9c8      	cbnz	r0, 8004928 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80048f4:	1c6a      	adds	r2, r5, #1
 80048f6:	d0f3      	beq.n	80048e0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80048f8:	f7ff fbde 	bl	80040b8 <HAL_GetTick>
 80048fc:	1b80      	subs	r0, r0, r6
 80048fe:	42a8      	cmp	r0, r5
 8004900:	d801      	bhi.n	8004906 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004902:	2d00      	cmp	r5, #0
 8004904:	d1ec      	bne.n	80048e0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8004906:	6823      	ldr	r3, [r4, #0]
 8004908:	695b      	ldr	r3, [r3, #20]
 800490a:	f013 0304 	ands.w	r3, r3, #4
 800490e:	d1e7      	bne.n	80048e0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004910:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004912:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004914:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004918:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800491c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800491e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004922:	f042 0220 	orr.w	r2, r2, #32
 8004926:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004928:	2001      	movs	r0, #1
}
 800492a:	bd70      	pop	{r4, r5, r6, pc}

0800492c <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800492c:	b570      	push	{r4, r5, r6, lr}
 800492e:	4604      	mov	r4, r0
 8004930:	460d      	mov	r5, r1
 8004932:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004934:	6821      	ldr	r1, [r4, #0]
 8004936:	694b      	ldr	r3, [r1, #20]
 8004938:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800493c:	d001      	beq.n	8004942 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800493e:	2000      	movs	r0, #0
 8004940:	e011      	b.n	8004966 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004942:	694a      	ldr	r2, [r1, #20]
 8004944:	06d2      	lsls	r2, r2, #27
 8004946:	d50f      	bpl.n	8004968 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004948:	f06f 0210 	mvn.w	r2, #16
 800494c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800494e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004950:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004952:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004956:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800495a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800495c:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800495e:	2300      	movs	r3, #0
 8004960:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8004964:	2001      	movs	r0, #1
}
 8004966:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004968:	f7ff fba6 	bl	80040b8 <HAL_GetTick>
 800496c:	1b80      	subs	r0, r0, r6
 800496e:	42a8      	cmp	r0, r5
 8004970:	d801      	bhi.n	8004976 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8004972:	2d00      	cmp	r5, #0
 8004974:	d1de      	bne.n	8004934 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8004976:	6823      	ldr	r3, [r4, #0]
 8004978:	695b      	ldr	r3, [r3, #20]
 800497a:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800497e:	d1d9      	bne.n	8004934 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8004980:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004982:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004984:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004988:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800498c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800498e:	4313      	orrs	r3, r2
 8004990:	e7e4      	b.n	800495c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08004994 <HAL_I2C_Init>:
{
 8004994:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004996:	4604      	mov	r4, r0
 8004998:	b908      	cbnz	r0, 800499e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800499a:	2001      	movs	r0, #1
}
 800499c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800499e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80049a2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80049a6:	b91b      	cbnz	r3, 80049b0 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80049a8:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 80049ac:	f7fd fe9e 	bl	80026ec <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80049b0:	2324      	movs	r3, #36	@ 0x24
 80049b2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80049b6:	6823      	ldr	r3, [r4, #0]
 80049b8:	681a      	ldr	r2, [r3, #0]
 80049ba:	f022 0201 	bic.w	r2, r2, #1
 80049be:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80049c0:	681a      	ldr	r2, [r3, #0]
 80049c2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80049c6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80049c8:	681a      	ldr	r2, [r3, #0]
 80049ca:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80049ce:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80049d0:	f001 fb80 	bl	80060d4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80049d4:	4b3f      	ldr	r3, [pc, #252]	@ (8004ad4 <HAL_I2C_Init+0x140>)
 80049d6:	6865      	ldr	r5, [r4, #4]
 80049d8:	429d      	cmp	r5, r3
 80049da:	bf94      	ite	ls
 80049dc:	4b3e      	ldrls	r3, [pc, #248]	@ (8004ad8 <HAL_I2C_Init+0x144>)
 80049de:	4b3f      	ldrhi	r3, [pc, #252]	@ (8004adc <HAL_I2C_Init+0x148>)
 80049e0:	4298      	cmp	r0, r3
 80049e2:	bf8c      	ite	hi
 80049e4:	2300      	movhi	r3, #0
 80049e6:	2301      	movls	r3, #1
 80049e8:	2b00      	cmp	r3, #0
 80049ea:	d1d6      	bne.n	800499a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80049ec:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80049ee:	4e39      	ldr	r6, [pc, #228]	@ (8004ad4 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80049f0:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80049f2:	4b3b      	ldr	r3, [pc, #236]	@ (8004ae0 <HAL_I2C_Init+0x14c>)
 80049f4:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80049f8:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 80049fc:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80049fe:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004a00:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004a02:	bf88      	it	hi
 8004a04:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8004a08:	6a11      	ldr	r1, [r2, #32]
 8004a0a:	bf88      	it	hi
 8004a0c:	4373      	mulhi	r3, r6
 8004a0e:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8004a12:	bf84      	itt	hi
 8004a14:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8004a18:	fbb3 f3f6 	udivhi	r3, r3, r6
 8004a1c:	3301      	adds	r3, #1
 8004a1e:	430b      	orrs	r3, r1
 8004a20:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004a22:	69d1      	ldr	r1, [r2, #28]
 8004a24:	1e43      	subs	r3, r0, #1
 8004a26:	482b      	ldr	r0, [pc, #172]	@ (8004ad4 <HAL_I2C_Init+0x140>)
 8004a28:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8004a2c:	4285      	cmp	r5, r0
 8004a2e:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004a32:	d832      	bhi.n	8004a9a <HAL_I2C_Init+0x106>
 8004a34:	006d      	lsls	r5, r5, #1
 8004a36:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8004a3a:	fbb3 f3f5 	udiv	r3, r3, r5
 8004a3e:	3301      	adds	r3, #1
 8004a40:	4203      	tst	r3, r0
 8004a42:	d042      	beq.n	8004aca <HAL_I2C_Init+0x136>
 8004a44:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004a48:	4319      	orrs	r1, r3
 8004a4a:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004a4c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004a50:	6811      	ldr	r1, [r2, #0]
 8004a52:	4303      	orrs	r3, r0
 8004a54:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8004a58:	430b      	orrs	r3, r1
 8004a5a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004a5c:	6891      	ldr	r1, [r2, #8]
 8004a5e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004a62:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8004a66:	4303      	orrs	r3, r0
 8004a68:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004a6c:	430b      	orrs	r3, r1
 8004a6e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004a70:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004a74:	68d1      	ldr	r1, [r2, #12]
 8004a76:	4303      	orrs	r3, r0
 8004a78:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004a7c:	430b      	orrs	r3, r1
 8004a7e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004a80:	6813      	ldr	r3, [r2, #0]
 8004a82:	f043 0301 	orr.w	r3, r3, #1
 8004a86:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004a88:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004a8a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004a8c:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004a8e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004a92:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004a94:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8004a98:	e780      	b.n	800499c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004a9a:	68a0      	ldr	r0, [r4, #8]
 8004a9c:	b950      	cbnz	r0, 8004ab4 <HAL_I2C_Init+0x120>
 8004a9e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004aa2:	fbb3 f3f5 	udiv	r3, r3, r5
 8004aa6:	3301      	adds	r3, #1
 8004aa8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004aac:	b17b      	cbz	r3, 8004ace <HAL_I2C_Init+0x13a>
 8004aae:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004ab2:	e7c9      	b.n	8004a48 <HAL_I2C_Init+0xb4>
 8004ab4:	2019      	movs	r0, #25
 8004ab6:	4368      	muls	r0, r5
 8004ab8:	fbb3 f3f0 	udiv	r3, r3, r0
 8004abc:	3301      	adds	r3, #1
 8004abe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004ac2:	b123      	cbz	r3, 8004ace <HAL_I2C_Init+0x13a>
 8004ac4:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004ac8:	e7be      	b.n	8004a48 <HAL_I2C_Init+0xb4>
 8004aca:	2304      	movs	r3, #4
 8004acc:	e7bc      	b.n	8004a48 <HAL_I2C_Init+0xb4>
 8004ace:	2301      	movs	r3, #1
 8004ad0:	e7ba      	b.n	8004a48 <HAL_I2C_Init+0xb4>
 8004ad2:	bf00      	nop
 8004ad4:	000186a0 	.word	0x000186a0
 8004ad8:	001e847f 	.word	0x001e847f
 8004adc:	003d08ff 	.word	0x003d08ff
 8004ae0:	000f4240 	.word	0x000f4240

08004ae4 <HAL_I2C_Mem_Write>:
{
 8004ae4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004ae8:	4604      	mov	r4, r0
 8004aea:	4699      	mov	r9, r3
 8004aec:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8004aee:	460f      	mov	r7, r1
 8004af0:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004af2:	f7ff fae1 	bl	80040b8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004af6:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8004afa:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004afc:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004afe:	d003      	beq.n	8004b08 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8004b00:	2002      	movs	r0, #2
}
 8004b02:	b003      	add	sp, #12
 8004b04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004b08:	9000      	str	r0, [sp, #0]
 8004b0a:	493c      	ldr	r1, [pc, #240]	@ (8004bfc <HAL_I2C_Mem_Write+0x118>)
 8004b0c:	2319      	movs	r3, #25
 8004b0e:	2201      	movs	r2, #1
 8004b10:	4620      	mov	r0, r4
 8004b12:	f7ff fd59 	bl	80045c8 <I2C_WaitOnFlagUntilTimeout>
 8004b16:	2800      	cmp	r0, #0
 8004b18:	d1f2      	bne.n	8004b00 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004b1a:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8004b1e:	2b01      	cmp	r3, #1
 8004b20:	d0ee      	beq.n	8004b00 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004b22:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004b24:	2301      	movs	r3, #1
 8004b26:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004b2a:	6803      	ldr	r3, [r0, #0]
 8004b2c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004b2e:	bf5e      	ittt	pl
 8004b30:	6803      	ldrpl	r3, [r0, #0]
 8004b32:	f043 0301 	orrpl.w	r3, r3, #1
 8004b36:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004b38:	6803      	ldr	r3, [r0, #0]
 8004b3a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004b3e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004b40:	2321      	movs	r3, #33	@ 0x21
 8004b42:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004b46:	2340      	movs	r3, #64	@ 0x40
 8004b48:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004b4c:	2300      	movs	r3, #0
 8004b4e:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004b50:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004b52:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004b54:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8004b58:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004b5a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004b5c:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004b5e:	4b28      	ldr	r3, [pc, #160]	@ (8004c00 <HAL_I2C_Mem_Write+0x11c>)
 8004b60:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004b62:	4642      	mov	r2, r8
 8004b64:	e9cd 6500 	strd	r6, r5, [sp]
 8004b68:	464b      	mov	r3, r9
 8004b6a:	4639      	mov	r1, r7
 8004b6c:	4620      	mov	r0, r4
 8004b6e:	f7ff fdd7 	bl	8004720 <I2C_RequestMemoryWrite>
 8004b72:	2800      	cmp	r0, #0
 8004b74:	d02a      	beq.n	8004bcc <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004b76:	2001      	movs	r0, #1
 8004b78:	e7c3      	b.n	8004b02 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004b7a:	f7ff fda7 	bl	80046cc <I2C_WaitOnTXEFlagUntilTimeout>
 8004b7e:	b140      	cbz	r0, 8004b92 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004b80:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004b82:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b84:	bf01      	itttt	eq
 8004b86:	6822      	ldreq	r2, [r4, #0]
 8004b88:	6813      	ldreq	r3, [r2, #0]
 8004b8a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004b8e:	6013      	streq	r3, [r2, #0]
 8004b90:	e7f1      	b.n	8004b76 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004b92:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004b94:	6827      	ldr	r7, [r4, #0]
 8004b96:	461a      	mov	r2, r3
 8004b98:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004b9c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004b9e:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8004ba0:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8004ba2:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8004ba4:	3a01      	subs	r2, #1
 8004ba6:	b292      	uxth	r2, r2
 8004ba8:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004baa:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004bac:	1e48      	subs	r0, r1, #1
 8004bae:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004bb0:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004bb2:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004bb4:	d50a      	bpl.n	8004bcc <HAL_I2C_Mem_Write+0xe8>
 8004bb6:	b148      	cbz	r0, 8004bcc <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004bb8:	785a      	ldrb	r2, [r3, #1]
 8004bba:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004bbc:	3302      	adds	r3, #2
 8004bbe:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8004bc0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004bc2:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004bc4:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004bc6:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004bc8:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8004bca:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8004bcc:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004bce:	462a      	mov	r2, r5
 8004bd0:	4631      	mov	r1, r6
 8004bd2:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004bd4:	2b00      	cmp	r3, #0
 8004bd6:	d1d0      	bne.n	8004b7a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004bd8:	f7ff fe7e 	bl	80048d8 <I2C_WaitOnBTFFlagUntilTimeout>
 8004bdc:	2800      	cmp	r0, #0
 8004bde:	d1cf      	bne.n	8004b80 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004be0:	6822      	ldr	r2, [r4, #0]
 8004be2:	6813      	ldr	r3, [r2, #0]
 8004be4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004be8:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004bea:	2320      	movs	r3, #32
 8004bec:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8004bf0:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004bf4:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8004bf8:	e783      	b.n	8004b02 <HAL_I2C_Mem_Write+0x1e>
 8004bfa:	bf00      	nop
 8004bfc:	00100002 	.word	0x00100002
 8004c00:	ffff0000 	.word	0xffff0000

08004c04 <HAL_I2C_Mem_Read>:
{
 8004c04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004c08:	4604      	mov	r4, r0
 8004c0a:	b087      	sub	sp, #28
 8004c0c:	4699      	mov	r9, r3
 8004c0e:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8004c10:	460d      	mov	r5, r1
 8004c12:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004c14:	f7ff fa50 	bl	80040b8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c18:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8004c1c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004c1e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c20:	d004      	beq.n	8004c2c <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8004c22:	2502      	movs	r5, #2
}
 8004c24:	4628      	mov	r0, r5
 8004c26:	b007      	add	sp, #28
 8004c28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004c2c:	9000      	str	r0, [sp, #0]
 8004c2e:	497a      	ldr	r1, [pc, #488]	@ (8004e18 <HAL_I2C_Mem_Read+0x214>)
 8004c30:	2319      	movs	r3, #25
 8004c32:	2201      	movs	r2, #1
 8004c34:	4620      	mov	r0, r4
 8004c36:	f7ff fcc7 	bl	80045c8 <I2C_WaitOnFlagUntilTimeout>
 8004c3a:	2800      	cmp	r0, #0
 8004c3c:	d1f1      	bne.n	8004c22 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8004c3e:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8004c42:	2b01      	cmp	r3, #1
 8004c44:	d0ed      	beq.n	8004c22 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004c46:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004c48:	2301      	movs	r3, #1
 8004c4a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004c4e:	6803      	ldr	r3, [r0, #0]
 8004c50:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004c52:	bf5e      	ittt	pl
 8004c54:	6803      	ldrpl	r3, [r0, #0]
 8004c56:	f043 0301 	orrpl.w	r3, r3, #1
 8004c5a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004c5c:	6803      	ldr	r3, [r0, #0]
 8004c5e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004c62:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004c64:	2322      	movs	r3, #34	@ 0x22
 8004c66:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004c6a:	2340      	movs	r3, #64	@ 0x40
 8004c6c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004c70:	2300      	movs	r3, #0
 8004c72:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004c74:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004c76:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004c78:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8004c7c:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004c7e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004c80:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004c82:	4b66      	ldr	r3, [pc, #408]	@ (8004e1c <HAL_I2C_Mem_Read+0x218>)
 8004c84:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004c86:	4629      	mov	r1, r5
 8004c88:	e9cd 7600 	strd	r7, r6, [sp]
 8004c8c:	464b      	mov	r3, r9
 8004c8e:	4642      	mov	r2, r8
 8004c90:	4620      	mov	r0, r4
 8004c92:	f7ff fd9f 	bl	80047d4 <I2C_RequestMemoryRead>
 8004c96:	4605      	mov	r5, r0
 8004c98:	b108      	cbz	r0, 8004c9e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004c9a:	2501      	movs	r5, #1
 8004c9c:	e7c2      	b.n	8004c24 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8004c9e:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ca0:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8004ca2:	b9b2      	cbnz	r2, 8004cd2 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ca4:	9002      	str	r0, [sp, #8]
 8004ca6:	695a      	ldr	r2, [r3, #20]
 8004ca8:	9202      	str	r2, [sp, #8]
 8004caa:	699a      	ldr	r2, [r3, #24]
 8004cac:	9202      	str	r2, [sp, #8]
 8004cae:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cb0:	681a      	ldr	r2, [r3, #0]
 8004cb2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004cb6:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004cb8:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 8004e20 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8004cbc:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d12c      	bne.n	8004d1c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8004cc2:	2220      	movs	r2, #32
 8004cc4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8004cc8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004ccc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8004cd0:	e7a8      	b.n	8004c24 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004cd2:	2a01      	cmp	r2, #1
 8004cd4:	d10a      	bne.n	8004cec <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004cd6:	681a      	ldr	r2, [r3, #0]
 8004cd8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004cdc:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004cde:	9003      	str	r0, [sp, #12]
 8004ce0:	695a      	ldr	r2, [r3, #20]
 8004ce2:	9203      	str	r2, [sp, #12]
 8004ce4:	699a      	ldr	r2, [r3, #24]
 8004ce6:	9203      	str	r2, [sp, #12]
 8004ce8:	9a03      	ldr	r2, [sp, #12]
 8004cea:	e7e1      	b.n	8004cb0 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8004cec:	2a02      	cmp	r2, #2
 8004cee:	d10e      	bne.n	8004d0e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004cf0:	681a      	ldr	r2, [r3, #0]
 8004cf2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004cf6:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004cf8:	681a      	ldr	r2, [r3, #0]
 8004cfa:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004cfe:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004d00:	9004      	str	r0, [sp, #16]
 8004d02:	695a      	ldr	r2, [r3, #20]
 8004d04:	9204      	str	r2, [sp, #16]
 8004d06:	699b      	ldr	r3, [r3, #24]
 8004d08:	9304      	str	r3, [sp, #16]
 8004d0a:	9b04      	ldr	r3, [sp, #16]
 8004d0c:	e7d4      	b.n	8004cb8 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004d0e:	9005      	str	r0, [sp, #20]
 8004d10:	695a      	ldr	r2, [r3, #20]
 8004d12:	9205      	str	r2, [sp, #20]
 8004d14:	699b      	ldr	r3, [r3, #24]
 8004d16:	9305      	str	r3, [sp, #20]
 8004d18:	9b05      	ldr	r3, [sp, #20]
 8004d1a:	e7cd      	b.n	8004cb8 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8004d1c:	2b03      	cmp	r3, #3
 8004d1e:	d856      	bhi.n	8004dce <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8004d20:	2b01      	cmp	r3, #1
 8004d22:	d115      	bne.n	8004d50 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004d24:	4632      	mov	r2, r6
 8004d26:	4639      	mov	r1, r7
 8004d28:	4620      	mov	r0, r4
 8004d2a:	f7ff fdff 	bl	800492c <I2C_WaitOnRXNEFlagUntilTimeout>
 8004d2e:	2800      	cmp	r0, #0
 8004d30:	d1b3      	bne.n	8004c9a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004d32:	6823      	ldr	r3, [r4, #0]
 8004d34:	691a      	ldr	r2, [r3, #16]
 8004d36:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004d38:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004d3a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004d3c:	3301      	adds	r3, #1
 8004d3e:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8004d40:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004d42:	3b01      	subs	r3, #1
 8004d44:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004d46:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004d48:	3b01      	subs	r3, #1
 8004d4a:	b29b      	uxth	r3, r3
 8004d4c:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8004d4e:	e7b5      	b.n	8004cbc <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8004d50:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d52:	9600      	str	r6, [sp, #0]
 8004d54:	463b      	mov	r3, r7
 8004d56:	f04f 0200 	mov.w	r2, #0
 8004d5a:	4641      	mov	r1, r8
 8004d5c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8004d5e:	d119      	bne.n	8004d94 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d60:	f7ff fc32 	bl	80045c8 <I2C_WaitOnFlagUntilTimeout>
 8004d64:	2800      	cmp	r0, #0
 8004d66:	d198      	bne.n	8004c9a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004d68:	6823      	ldr	r3, [r4, #0]
 8004d6a:	681a      	ldr	r2, [r3, #0]
 8004d6c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004d70:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004d72:	691a      	ldr	r2, [r3, #16]
 8004d74:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004d76:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004d78:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8004d7a:	1c53      	adds	r3, r2, #1
 8004d7c:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8004d7e:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004d80:	3b01      	subs	r3, #1
 8004d82:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004d84:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004d86:	3b01      	subs	r3, #1
 8004d88:	b29b      	uxth	r3, r3
 8004d8a:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004d8c:	6823      	ldr	r3, [r4, #0]
 8004d8e:	691b      	ldr	r3, [r3, #16]
 8004d90:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8004d92:	e7d2      	b.n	8004d3a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d94:	f7ff fc18 	bl	80045c8 <I2C_WaitOnFlagUntilTimeout>
 8004d98:	4602      	mov	r2, r0
 8004d9a:	2800      	cmp	r0, #0
 8004d9c:	f47f af7d 	bne.w	8004c9a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004da0:	6823      	ldr	r3, [r4, #0]
 8004da2:	6819      	ldr	r1, [r3, #0]
 8004da4:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8004da8:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004daa:	6919      	ldr	r1, [r3, #16]
 8004dac:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004dae:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8004db0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004db2:	3301      	adds	r3, #1
 8004db4:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8004db6:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004db8:	3b01      	subs	r3, #1
 8004dba:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004dbc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004dbe:	3b01      	subs	r3, #1
 8004dc0:	b29b      	uxth	r3, r3
 8004dc2:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004dc4:	4641      	mov	r1, r8
 8004dc6:	9600      	str	r6, [sp, #0]
 8004dc8:	463b      	mov	r3, r7
 8004dca:	4620      	mov	r0, r4
 8004dcc:	e7c8      	b.n	8004d60 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004dce:	4632      	mov	r2, r6
 8004dd0:	4639      	mov	r1, r7
 8004dd2:	4620      	mov	r0, r4
 8004dd4:	f7ff fdaa 	bl	800492c <I2C_WaitOnRXNEFlagUntilTimeout>
 8004dd8:	2800      	cmp	r0, #0
 8004dda:	f47f af5e 	bne.w	8004c9a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004dde:	6823      	ldr	r3, [r4, #0]
 8004de0:	691a      	ldr	r2, [r3, #16]
 8004de2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004de4:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8004de6:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8004de8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8004dea:	3a01      	subs	r2, #1
 8004dec:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8004dee:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8004df0:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004df2:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8004df4:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8004df6:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004df8:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 8004dfa:	3b01      	subs	r3, #1
 8004dfc:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004dfe:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8004e00:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004e02:	f57f af5b 	bpl.w	8004cbc <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 8004e06:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004e08:	bf02      	ittt	eq
 8004e0a:	6813      	ldreq	r3, [r2, #0]
 8004e0c:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8004e10:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004e12:	6913      	ldr	r3, [r2, #16]
 8004e14:	704b      	strb	r3, [r1, #1]
 8004e16:	e790      	b.n	8004d3a <HAL_I2C_Mem_Read+0x136>
 8004e18:	00100002 	.word	0x00100002
 8004e1c:	ffff0000 	.word	0xffff0000
 8004e20:	00010004 	.word	0x00010004

08004e24 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004e24:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e26:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8004e2a:	2b20      	cmp	r3, #32
 8004e2c:	b2dc      	uxtb	r4, r3
 8004e2e:	d116      	bne.n	8004e5e <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004e30:	2324      	movs	r3, #36	@ 0x24
 8004e32:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004e36:	6803      	ldr	r3, [r0, #0]
 8004e38:	681a      	ldr	r2, [r3, #0]
 8004e3a:	f022 0201 	bic.w	r2, r2, #1
 8004e3e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8004e40:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004e42:	f022 0210 	bic.w	r2, r2, #16
 8004e46:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004e48:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004e4a:	4311      	orrs	r1, r2
 8004e4c:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004e4e:	681a      	ldr	r2, [r3, #0]
 8004e50:	f042 0201 	orr.w	r2, r2, #1
 8004e54:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004e56:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8004e5a:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004e5c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8004e5e:	2002      	movs	r0, #2
 8004e60:	e7fc      	b.n	8004e5c <HAL_I2CEx_ConfigAnalogFilter+0x38>

08004e62 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004e62:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e64:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8004e68:	2b20      	cmp	r3, #32
 8004e6a:	b2dc      	uxtb	r4, r3
 8004e6c:	d116      	bne.n	8004e9c <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004e6e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004e70:	2324      	movs	r3, #36	@ 0x24
 8004e72:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8004e76:	6813      	ldr	r3, [r2, #0]
 8004e78:	f023 0301 	bic.w	r3, r3, #1
 8004e7c:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8004e7e:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004e80:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8004e84:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8004e86:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004e88:	b29b      	uxth	r3, r3
 8004e8a:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004e8c:	6813      	ldr	r3, [r2, #0]
 8004e8e:	f043 0301 	orr.w	r3, r3, #1
 8004e92:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004e94:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8004e98:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004e9a:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004e9c:	2002      	movs	r0, #2
 8004e9e:	e7fc      	b.n	8004e9a <HAL_I2CEx_ConfigDigitalFilter+0x38>

08004ea0 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004ea0:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004ea2:	01d2      	lsls	r2, r2, #7
 8004ea4:	3284      	adds	r2, #132	@ 0x84
 8004ea6:	1883      	adds	r3, r0, r2
{
 8004ea8:	b5f0      	push	{r4, r5, r6, r7, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004eaa:	68c7      	ldr	r7, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004eac:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004eae:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004eb0:	680e      	ldr	r6, [r1, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004eb2:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8004eb6:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004eb8:	68c5      	ldr	r5, [r0, #12]
 8004eba:	f106 0c01 	add.w	ip, r6, #1
 8004ebe:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004ec2:	f3c7 470b 	ubfx	r7, r7, #16, #12
 8004ec6:	4427      	add	r7, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004ec8:	4465      	add	r5, ip
 8004eca:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004ece:	605d      	str	r5, [r3, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004ed0:	68c7      	ldr	r7, [r0, #12]
 8004ed2:	68cd      	ldr	r5, [r1, #12]
 8004ed4:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8004ed8:	442f      	add	r7, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8004eda:	689d      	ldr	r5, [r3, #8]
 8004edc:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8004ee0:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004ee2:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8004ee6:	688d      	ldr	r5, [r1, #8]
 8004ee8:	f3cc 0c0a 	ubfx	ip, ip, #0, #11
 8004eec:	3501      	adds	r5, #1
 8004eee:	4465      	add	r5, ip
 8004ef0:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8004ef4:	609d      	str	r5, [r3, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004ef6:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004ef8:	f8d1 c010 	ldr.w	ip, [r1, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004efc:	698f      	ldr	r7, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004efe:	f025 0507 	bic.w	r5, r5, #7
 8004f02:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004f04:	f8c3 c010 	str.w	ip, [r3, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8004f08:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8004f0c:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8004f10:	f891 7031 	ldrb.w	r7, [r1, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8004f14:	ea45 2507 	orr.w	r5, r5, r7, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8004f18:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
 8004f1c:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8004f20:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8004f22:	695d      	ldr	r5, [r3, #20]
 8004f24:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8004f28:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004f2a:	694d      	ldr	r5, [r1, #20]
 8004f2c:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8004f2e:	69dd      	ldr	r5, [r3, #28]
 8004f30:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8004f34:	f025 0507 	bic.w	r5, r5, #7
 8004f38:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004f3a:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8004f3e:	433d      	orrs	r5, r7
 8004f40:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 8004f42:	f1bc 0f07 	cmp.w	ip, #7
 8004f46:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
 8004f48:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004f4a:	bf9c      	itt	ls
 8004f4c:	4d0d      	ldrls	r5, [pc, #52]	@ (8004f84 <LTDC_SetConfig+0xe4>)
 8004f4e:	f815 700c 	ldrbls.w	r7, [r5, ip]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004f52:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8004f54:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8004f58:	62dd      	str	r5, [r3, #44]	@ 0x2c
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
 8004f5a:	bf88      	it	hi
 8004f5c:	2701      	movhi	r7, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004f5e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004f60:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004f62:	1ba4      	subs	r4, r4, r6
 8004f64:	437c      	muls	r4, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004f66:	437d      	muls	r5, r7
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004f68:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004f6a:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8004f6e:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004f70:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8004f72:	f36f 040a 	bfc	r4, #0, #11
 8004f76:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004f78:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004f7a:	5883      	ldr	r3, [r0, r2]
 8004f7c:	f043 0301 	orr.w	r3, r3, #1
 8004f80:	5083      	str	r3, [r0, r2]
}
 8004f82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f84:	08025938 	.word	0x08025938

08004f88 <HAL_LTDC_Init>:
{
 8004f88:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8004f8a:	4604      	mov	r4, r0
 8004f8c:	2800      	cmp	r0, #0
 8004f8e:	d04e      	beq.n	800502e <HAL_LTDC_Init+0xa6>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004f90:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8004f94:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004f98:	b91b      	cbnz	r3, 8004fa2 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8004f9a:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8004f9e:	f7fd fc01 	bl	80027a4 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004fa2:	2302      	movs	r3, #2
 8004fa4:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004fa8:	6823      	ldr	r3, [r4, #0]
 8004faa:	699a      	ldr	r2, [r3, #24]
 8004fac:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8004fb0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004fb2:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8004fb6:	4302      	orrs	r2, r0
 8004fb8:	68e0      	ldr	r0, [r4, #12]
 8004fba:	6999      	ldr	r1, [r3, #24]
 8004fbc:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004fbe:	6920      	ldr	r0, [r4, #16]
 8004fc0:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004fc2:	430a      	orrs	r2, r1
 8004fc4:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
 8004fc6:	e9d4 1205 	ldrd	r1, r2, [r4, #20]
 8004fca:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004fce:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
 8004fd0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8004fd4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004fd8:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
 8004fda:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	@ 0x24
 8004fde:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004fe2:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
 8004fe4:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 8004fe8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004fec:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004fee:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8004ff0:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8004ff4:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004ff8:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8004ffc:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004ffe:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005000:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8005004:	432a      	orrs	r2, r5
 8005006:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800500a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800500e:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005010:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005012:	f042 0206 	orr.w	r2, r2, #6
 8005016:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005018:	699a      	ldr	r2, [r3, #24]
 800501a:	f042 0201 	orr.w	r2, r2, #1
 800501e:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005020:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005022:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005024:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005028:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 800502c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800502e:	2001      	movs	r0, #1
 8005030:	e7fc      	b.n	800502c <HAL_LTDC_Init+0xa4>

08005032 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8005032:	4770      	bx	lr

08005034 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8005034:	4770      	bx	lr

08005036 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005036:	6803      	ldr	r3, [r0, #0]
{
 8005038:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800503a:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800503c:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800503e:	0772      	lsls	r2, r6, #29
{
 8005040:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005042:	d514      	bpl.n	800506e <HAL_LTDC_IRQHandler+0x38>
 8005044:	0769      	lsls	r1, r5, #29
 8005046:	d512      	bpl.n	800506e <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005048:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800504a:	f022 0204 	bic.w	r2, r2, #4
 800504e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005050:	2204      	movs	r2, #4
 8005052:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005054:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8005058:	f043 0301 	orr.w	r3, r3, #1
 800505c:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005060:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005062:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005066:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800506a:	f7ff ffe2 	bl	8005032 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800506e:	07b2      	lsls	r2, r6, #30
 8005070:	d516      	bpl.n	80050a0 <HAL_LTDC_IRQHandler+0x6a>
 8005072:	07ab      	lsls	r3, r5, #30
 8005074:	d514      	bpl.n	80050a0 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005076:	6823      	ldr	r3, [r4, #0]
 8005078:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800507a:	f022 0202 	bic.w	r2, r2, #2
 800507e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005080:	2202      	movs	r2, #2
 8005082:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005084:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8005088:	4313      	orrs	r3, r2
 800508a:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800508e:	2304      	movs	r3, #4
 8005090:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005094:	2300      	movs	r3, #0
 8005096:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800509a:	4620      	mov	r0, r4
 800509c:	f7ff ffc9 	bl	8005032 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80050a0:	07f0      	lsls	r0, r6, #31
 80050a2:	d510      	bpl.n	80050c6 <HAL_LTDC_IRQHandler+0x90>
 80050a4:	07e9      	lsls	r1, r5, #31
 80050a6:	d50e      	bpl.n	80050c6 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80050a8:	6823      	ldr	r3, [r4, #0]
 80050aa:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80050ac:	f022 0201 	bic.w	r2, r2, #1
 80050b0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80050b2:	2201      	movs	r2, #1
 80050b4:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 80050b6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80050b8:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80050bc:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80050c0:	4620      	mov	r0, r4
 80050c2:	f7fc fc95 	bl	80019f0 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80050c6:	0732      	lsls	r2, r6, #28
 80050c8:	d511      	bpl.n	80050ee <HAL_LTDC_IRQHandler+0xb8>
 80050ca:	072b      	lsls	r3, r5, #28
 80050cc:	d50f      	bpl.n	80050ee <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80050ce:	6823      	ldr	r3, [r4, #0]
 80050d0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80050d2:	f022 0208 	bic.w	r2, r2, #8
 80050d6:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80050d8:	2208      	movs	r2, #8
 80050da:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80050dc:	2301      	movs	r3, #1
 80050de:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80050e2:	2300      	movs	r3, #0
 80050e4:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80050e8:	4620      	mov	r0, r4
 80050ea:	f7ff ffa3 	bl	8005034 <HAL_LTDC_ReloadEventCallback>
}
 80050ee:	bd70      	pop	{r4, r5, r6, pc}

080050f0 <HAL_LTDC_ConfigLayer>:
{
 80050f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80050f4:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 80050f8:	2b01      	cmp	r3, #1
{
 80050fa:	4606      	mov	r6, r0
 80050fc:	460f      	mov	r7, r1
 80050fe:	4694      	mov	ip, r2
 8005100:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005104:	d01f      	beq.n	8005146 <HAL_LTDC_ConfigLayer+0x56>
 8005106:	f04f 0801 	mov.w	r8, #1
 800510a:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800510e:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005112:	2434      	movs	r4, #52	@ 0x34
 8005114:	460d      	mov	r5, r1
 8005116:	fb04 6402 	mla	r4, r4, r2, r6
 800511a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800511c:	3438      	adds	r4, #56	@ 0x38
 800511e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005120:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005122:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005124:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005126:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005128:	682b      	ldr	r3, [r5, #0]
 800512a:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800512c:	4630      	mov	r0, r6
 800512e:	4662      	mov	r2, ip
 8005130:	4639      	mov	r1, r7
 8005132:	f7ff feb5 	bl	8004ea0 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005136:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005138:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800513a:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800513e:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005142:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8005146:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800514c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800514c:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8005150:	2a01      	cmp	r2, #1
{
 8005152:	4603      	mov	r3, r0
 8005154:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005158:	d012      	beq.n	8005180 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800515a:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800515c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005160:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8005162:	f020 0001 	bic.w	r0, r0, #1
 8005166:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005168:	4806      	ldr	r0, [pc, #24]	@ (8005184 <HAL_LTDC_ProgramLineEvent+0x38>)
 800516a:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800516c:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800516e:	f041 0101 	orr.w	r1, r1, #1
 8005172:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8005174:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005176:	2201      	movs	r2, #1
 8005178:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800517c:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8005180:	4770      	bx	lr
 8005182:	bf00      	nop
 8005184:	40016800 	.word	0x40016800

08005188 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 8005188:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 800518a:	4604      	mov	r4, r0
 800518c:	b310      	cbz	r0, 80051d4 <HAL_PCD_Init+0x4c>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 800518e:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
  USBx = hpcd->Instance;
 8005192:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8005194:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005198:	b91b      	cbnz	r3, 80051a2 <HAL_PCD_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 800519a:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 800519e:	f7fc fcf9 	bl	8001b94 <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 80051a2:	2303      	movs	r3, #3

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
 80051a4:	f1b5 4fa0 	cmp.w	r5, #1342177280	@ 0x50000000
  hpcd->State = HAL_PCD_STATE_BUSY;
 80051a8:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  {
    hpcd->Init.dma_enable = 0U;
 80051ac:	bf04      	itt	eq
 80051ae:	2300      	moveq	r3, #0
 80051b0:	71a3      	strbeq	r3, [r4, #6]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 80051b2:	6820      	ldr	r0, [r4, #0]
 80051b4:	f002 f8ca 	bl	800734c <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 80051b8:	7c23      	ldrb	r3, [r4, #16]
 80051ba:	f88d 3000 	strb.w	r3, [sp]
 80051be:	1d25      	adds	r5, r4, #4
 80051c0:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 80051c4:	6820      	ldr	r0, [r4, #0]
 80051c6:	f002 f806 	bl	80071d6 <USB_CoreInit>
 80051ca:	4601      	mov	r1, r0
 80051cc:	b130      	cbz	r0, 80051dc <HAL_PCD_Init+0x54>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 80051ce:	2302      	movs	r3, #2
 80051d0:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
 80051d4:	2501      	movs	r5, #1
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
 80051d6:	4628      	mov	r0, r5
 80051d8:	b003      	add	sp, #12
 80051da:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 80051dc:	6820      	ldr	r0, [r4, #0]
 80051de:	f002 f8bb 	bl	8007358 <USB_SetCurrentMode>
 80051e2:	2800      	cmp	r0, #0
 80051e4:	d1f3      	bne.n	80051ce <HAL_PCD_Init+0x46>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80051e6:	7926      	ldrb	r6, [r4, #4]
 80051e8:	f104 0314 	add.w	r3, r4, #20
    hpcd->IN_ep[i].is_in = 1U;
 80051ec:	2701      	movs	r7, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 80051ee:	4602      	mov	r2, r0
 80051f0:	b2c1      	uxtb	r1, r0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80051f2:	428e      	cmp	r6, r1
 80051f4:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 80051f8:	d81b      	bhi.n	8005232 <HAL_PCD_Init+0xaa>
 80051fa:	2100      	movs	r1, #0
 80051fc:	f504 7315 	add.w	r3, r4, #596	@ 0x254
    hpcd->OUT_ep[i].is_in = 0U;
 8005200:	460a      	mov	r2, r1
 8005202:	b2c8      	uxtb	r0, r1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005204:	4286      	cmp	r6, r0
 8005206:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 800520a:	d820      	bhi.n	800524e <HAL_PCD_Init+0xc6>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 800520c:	7c23      	ldrb	r3, [r4, #16]
 800520e:	f88d 3000 	strb.w	r3, [sp]
 8005212:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8005216:	6820      	ldr	r0, [r4, #0]
 8005218:	f002 f91a 	bl	8007450 <USB_DevInit>
 800521c:	4605      	mov	r5, r0
 800521e:	2800      	cmp	r0, #0
 8005220:	d1d5      	bne.n	80051ce <HAL_PCD_Init+0x46>
  hpcd->State = HAL_PCD_STATE_READY;
 8005222:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
 8005224:	7460      	strb	r0, [r4, #17]
  (void)USB_DevDisconnect(hpcd->Instance);
 8005226:	6820      	ldr	r0, [r4, #0]
  hpcd->State = HAL_PCD_STATE_READY;
 8005228:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  (void)USB_DevDisconnect(hpcd->Instance);
 800522c:	f002 fc54 	bl	8007ad8 <USB_DevDisconnect>
  return HAL_OK;
 8005230:	e7d1      	b.n	80051d6 <HAL_PCD_Init+0x4e>
    hpcd->IN_ep[i].tx_fifo_num = i;
 8005232:	f823 0c0a 	strh.w	r0, [r3, #-10]
    hpcd->IN_ep[i].xfer_buff = 0U;
 8005236:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->IN_ep[i].is_in = 1U;
 800523a:	f803 7c23 	strb.w	r7, [r3, #-35]
    hpcd->IN_ep[i].num = i;
 800523e:	f803 1c24 	strb.w	r1, [r3, #-36]
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8005242:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->IN_ep[i].xfer_len = 0U;
 8005246:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800524a:	3001      	adds	r0, #1
 800524c:	e7d0      	b.n	80051f0 <HAL_PCD_Init+0x68>
    hpcd->OUT_ep[i].xfer_buff = 0U;
 800524e:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->OUT_ep[i].is_in = 0U;
 8005252:	f803 2c23 	strb.w	r2, [r3, #-35]
    hpcd->OUT_ep[i].num = i;
 8005256:	f803 0c24 	strb.w	r0, [r3, #-36]
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 800525a:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->OUT_ep[i].xfer_len = 0U;
 800525e:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005262:	3101      	adds	r1, #1
 8005264:	e7cd      	b.n	8005202 <HAL_PCD_Init+0x7a>

08005266 <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 8005266:	b510      	push	{r4, lr}
 8005268:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800526a:	6800      	ldr	r0, [r0, #0]

  __HAL_LOCK(hpcd);
 800526c:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8005270:	2b01      	cmp	r3, #1
 8005272:	d015      	beq.n	80052a0 <HAL_PCD_Start+0x3a>
 8005274:	2301      	movs	r3, #1
 8005276:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 800527a:	68c3      	ldr	r3, [r0, #12]
 800527c:	065b      	lsls	r3, r3, #25
 800527e:	d506      	bpl.n	800528e <HAL_PCD_Start+0x28>
 8005280:	7b63      	ldrb	r3, [r4, #13]
 8005282:	2b01      	cmp	r3, #1
      (hpcd->Init.battery_charging_enable == 1U))
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8005284:	bf02      	ittt	eq
 8005286:	6b83      	ldreq	r3, [r0, #56]	@ 0x38
 8005288:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
 800528c:	6383      	streq	r3, [r0, #56]	@ 0x38
  }

  __HAL_PCD_ENABLE(hpcd);
 800528e:	f002 f857 	bl	8007340 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 8005292:	6820      	ldr	r0, [r4, #0]
 8005294:	f002 fc12 	bl	8007abc <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8005298:	2000      	movs	r0, #0
 800529a:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 800529e:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 80052a0:	2002      	movs	r0, #2
 80052a2:	e7fc      	b.n	800529e <HAL_PCD_Start+0x38>

080052a4 <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
 80052a4:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 80052a6:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
 80052aa:	2a01      	cmp	r2, #1
{
 80052ac:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 80052ae:	d00a      	beq.n	80052c6 <HAL_PCD_SetAddress+0x22>
 80052b0:	2201      	movs	r2, #1
 80052b2:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
  hpcd->USB_Address = address;
 80052b6:	7441      	strb	r1, [r0, #17]
  (void)USB_SetDevAddress(hpcd->Instance, address);
 80052b8:	6800      	ldr	r0, [r0, #0]
 80052ba:	f002 fbef 	bl	8007a9c <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 80052be:	2000      	movs	r0, #0
 80052c0:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 80052c4:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 80052c6:	2002      	movs	r0, #2
 80052c8:	e7fc      	b.n	80052c4 <HAL_PCD_SetAddress+0x20>

080052ca <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
 80052ca:	b570      	push	{r4, r5, r6, lr}
 80052cc:	f001 060f 	and.w	r6, r1, #15
 80052d0:	eb06 04c6 	add.w	r4, r6, r6, lsl #3
  HAL_StatusTypeDef ret = HAL_OK;
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 80052d4:	f011 0f80 	tst.w	r1, #128	@ 0x80
{
 80052d8:	4605      	mov	r5, r0
 80052da:	ea4f 0484 	mov.w	r4, r4, lsl #2
 80052de:	f04f 0024 	mov.w	r0, #36	@ 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 80052e2:	d020      	beq.n	8005326 <HAL_PCD_EP_Open+0x5c>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 80052e4:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80052e8:	f104 0114 	add.w	r1, r4, #20
    ep->is_in = 1U;
 80052ec:	2401      	movs	r4, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80052ee:	4429      	add	r1, r5
    ep->is_in = 1U;
 80052f0:	7544      	strb	r4, [r0, #21]
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->num = ep_addr & EP_ADDR_MSK;
  ep->maxpacket = (uint32_t)ep_mps & 0x7FFU;
 80052f2:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80052f6:	608a      	str	r2, [r1, #8]
  ep->type = ep_type;

  if (ep->is_in != 0U)
 80052f8:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 80052fa:	700e      	strb	r6, [r1, #0]
  ep->type = ep_type;
 80052fc:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
 80052fe:	b102      	cbz	r2, 8005302 <HAL_PCD_EP_Open+0x38>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
 8005300:	834e      	strh	r6, [r1, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
 8005302:	2b02      	cmp	r3, #2
  {
    ep->data_pid_start = 0U;
 8005304:	bf04      	itt	eq
 8005306:	2300      	moveq	r3, #0
 8005308:	714b      	strbeq	r3, [r1, #5]
  }

  __HAL_LOCK(hpcd);
 800530a:	f895 3494 	ldrb.w	r3, [r5, #1172]	@ 0x494
 800530e:	2b01      	cmp	r3, #1
 8005310:	d012      	beq.n	8005338 <HAL_PCD_EP_Open+0x6e>
 8005312:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8005314:	6828      	ldr	r0, [r5, #0]
  __HAL_LOCK(hpcd);
 8005316:	f885 3494 	strb.w	r3, [r5, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 800531a:	f002 f95e 	bl	80075da <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 800531e:	2000      	movs	r0, #0
 8005320:	f885 0494 	strb.w	r0, [r5, #1172]	@ 0x494

  return ret;
}
 8005324:	bd70      	pop	{r4, r5, r6, pc}
    ep->is_in = 0U;
 8005326:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800532a:	f504 7115 	add.w	r1, r4, #596	@ 0x254
    ep->is_in = 0U;
 800532e:	2400      	movs	r4, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005330:	4429      	add	r1, r5
    ep->is_in = 0U;
 8005332:	f880 4255 	strb.w	r4, [r0, #597]	@ 0x255
 8005336:	e7dc      	b.n	80052f2 <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
 8005338:	2002      	movs	r0, #2
 800533a:	e7f3      	b.n	8005324 <HAL_PCD_EP_Open+0x5a>

0800533c <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 800533c:	b510      	push	{r4, lr}
 800533e:	4604      	mov	r4, r0
 8005340:	f001 000f 	and.w	r0, r1, #15
 8005344:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8005348:	f011 0f80 	tst.w	r1, #128	@ 0x80
 800534c:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8005350:	f04f 0224 	mov.w	r2, #36	@ 0x24
 8005354:	d015      	beq.n	8005382 <HAL_PCD_EP_Close+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8005356:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800535a:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 800535e:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005360:	4421      	add	r1, r4
    ep->is_in = 1U;
 8005362:	7553      	strb	r3, [r2, #21]
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }
  ep->num = ep_addr & EP_ADDR_MSK;
 8005364:	7008      	strb	r0, [r1, #0]

  __HAL_LOCK(hpcd);
 8005366:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 800536a:	2b01      	cmp	r3, #1
 800536c:	d012      	beq.n	8005394 <HAL_PCD_EP_Close+0x58>
 800536e:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8005370:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8005372:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8005376:	f002 f96f 	bl	8007658 <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 800537a:	2000      	movs	r0, #0
 800537c:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494
  return HAL_OK;
}
 8005380:	bd10      	pop	{r4, pc}
    ep->is_in = 0U;
 8005382:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005386:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 800538a:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800538c:	4421      	add	r1, r4
    ep->is_in = 0U;
 800538e:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8005392:	e7e7      	b.n	8005364 <HAL_PCD_EP_Close+0x28>
  __HAL_LOCK(hpcd);
 8005394:	2002      	movs	r0, #2
 8005396:	e7f3      	b.n	8005380 <HAL_PCD_EP_Close+0x44>

08005398 <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8005398:	b570      	push	{r4, r5, r6, lr}
 800539a:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800539e:	2424      	movs	r4, #36	@ 0x24
 80053a0:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 80053a4:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 80053a8:	e9c4 2398 	strd	r2, r3, [r4, #608]	@ 0x260
  ep->xfer_count = 0U;
 80053ac:	2300      	movs	r3, #0
 80053ae:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
  ep->is_in = 0U;
 80053b2:	f884 3255 	strb.w	r3, [r4, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
 80053b6:	f884 5254 	strb.w	r5, [r4, #596]	@ 0x254
{
 80053ba:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 80053bc:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80053be:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 80053c0:	2a01      	cmp	r2, #1
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80053c2:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->dma_addr = (uint32_t)pBuf;
 80053c6:	bf08      	it	eq
 80053c8:	f8c4 6270 	streq.w	r6, [r4, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80053cc:	f002 f9f0 	bl	80077b0 <USB_EPStartXfer>

  return HAL_OK;
}
 80053d0:	2000      	movs	r0, #0
 80053d2:	bd70      	pop	{r4, r5, r6, pc}

080053d4 <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 80053d4:	b570      	push	{r4, r5, r6, lr}
 80053d6:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80053da:	2424      	movs	r4, #36	@ 0x24
 80053dc:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 80053e0:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 80053e4:	e9c4 2308 	strd	r2, r3, [r4, #32]
  ep->xfer_count = 0U;
 80053e8:	2300      	movs	r3, #0
 80053ea:	62a3      	str	r3, [r4, #40]	@ 0x28
  ep->is_in = 1U;
 80053ec:	2301      	movs	r3, #1
 80053ee:	7563      	strb	r3, [r4, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
 80053f0:	7525      	strb	r5, [r4, #20]
{
 80053f2:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 80053f4:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80053f6:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 80053f8:	429a      	cmp	r2, r3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80053fa:	f101 0114 	add.w	r1, r1, #20
    ep->dma_addr = (uint32_t)pBuf;
 80053fe:	bf08      	it	eq
 8005400:	6326      	streq	r6, [r4, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8005402:	f002 f9d5 	bl	80077b0 <USB_EPStartXfer>

  return HAL_OK;
}
 8005406:	2000      	movs	r0, #0
 8005408:	bd70      	pop	{r4, r5, r6, pc}

0800540a <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 800540a:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 800540c:	7903      	ldrb	r3, [r0, #4]
 800540e:	f001 050f 	and.w	r5, r1, #15
 8005412:	42ab      	cmp	r3, r5
{
 8005414:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8005416:	d32b      	bcc.n	8005470 <HAL_PCD_EP_SetStall+0x66>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8005418:	f011 0f80 	tst.w	r1, #128	@ 0x80
 800541c:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8005420:	d01d      	beq.n	800545e <HAL_PCD_EP_SetStall+0x54>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005422:	fb00 4105 	mla	r1, r0, r5, r4
    ep->is_in = 1U;
 8005426:	fb00 4005 	mla	r0, r0, r5, r4
 800542a:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800542c:	3114      	adds	r1, #20
    ep->is_in = 1U;
 800542e:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr];
    ep->is_in = 0U;
  }

  ep->is_stall = 1U;
 8005430:	2301      	movs	r3, #1
 8005432:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8005434:	700d      	strb	r5, [r1, #0]

  __HAL_LOCK(hpcd);
 8005436:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
 800543a:	429a      	cmp	r2, r3
 800543c:	d01a      	beq.n	8005474 <HAL_PCD_EP_SetStall+0x6a>

  (void)USB_EPSetStall(hpcd->Instance, ep);
 800543e:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8005440:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
 8005444:	f002 fad6 	bl	80079f4 <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8005448:	b92d      	cbnz	r5, 8005456 <HAL_PCD_EP_SetStall+0x4c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 800544a:	79a1      	ldrb	r1, [r4, #6]
 800544c:	6820      	ldr	r0, [r4, #0]
 800544e:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005452:	f002 fb8f 	bl	8007b74 <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
 8005456:	2000      	movs	r0, #0
 8005458:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 800545c:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr];
 800545e:	fb00 4301 	mla	r3, r0, r1, r4
    ep->is_in = 0U;
 8005462:	461a      	mov	r2, r3
    ep = &hpcd->OUT_ep[ep_addr];
 8005464:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8005468:	2300      	movs	r3, #0
 800546a:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 800546e:	e7df      	b.n	8005430 <HAL_PCD_EP_SetStall+0x26>
    return HAL_ERROR;
 8005470:	2001      	movs	r0, #1
 8005472:	e7f3      	b.n	800545c <HAL_PCD_EP_SetStall+0x52>
  __HAL_LOCK(hpcd);
 8005474:	2002      	movs	r0, #2
 8005476:	e7f1      	b.n	800545c <HAL_PCD_EP_SetStall+0x52>

08005478 <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8005478:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 800547a:	7903      	ldrb	r3, [r0, #4]
 800547c:	f001 020f 	and.w	r2, r1, #15
 8005480:	4293      	cmp	r3, r2
{
 8005482:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8005484:	d329      	bcc.n	80054da <HAL_PCD_EP_ClrStall+0x62>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8005486:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
 800548a:	f011 0f80 	tst.w	r1, #128	@ 0x80
 800548e:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8005492:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8005496:	d017      	beq.n	80054c8 <HAL_PCD_EP_ClrStall+0x50>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8005498:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800549c:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 80054a0:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80054a2:	4421      	add	r1, r4
    ep->is_in = 1U;
 80054a4:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->is_stall = 0U;
 80054a6:	2500      	movs	r5, #0
 80054a8:	708d      	strb	r5, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 80054aa:	700a      	strb	r2, [r1, #0]

  __HAL_LOCK(hpcd);
 80054ac:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 80054b0:	2b01      	cmp	r3, #1
 80054b2:	d014      	beq.n	80054de <HAL_PCD_EP_ClrStall+0x66>
 80054b4:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
 80054b6:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 80054b8:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
 80054bc:	f002 fac5 	bl	8007a4a <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 80054c0:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494

  return HAL_OK;
 80054c4:	4628      	mov	r0, r5
}
 80054c6:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 0U;
 80054c8:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80054cc:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 80054d0:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80054d2:	4421      	add	r1, r4
    ep->is_in = 0U;
 80054d4:	f880 3255 	strb.w	r3, [r0, #597]	@ 0x255
 80054d8:	e7e5      	b.n	80054a6 <HAL_PCD_EP_ClrStall+0x2e>
    return HAL_ERROR;
 80054da:	2001      	movs	r0, #1
 80054dc:	e7f3      	b.n	80054c6 <HAL_PCD_EP_ClrStall+0x4e>
  __HAL_LOCK(hpcd);
 80054de:	2002      	movs	r0, #2
 80054e0:	e7f1      	b.n	80054c6 <HAL_PCD_EP_ClrStall+0x4e>

080054e2 <HAL_PCD_EP_Abort>:
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
 80054e2:	f001 030f 	and.w	r3, r1, #15
 80054e6:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 80054ea:	060a      	lsls	r2, r1, #24
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80054ec:	ea4f 0383 	mov.w	r3, r3, lsl #2
 80054f0:	bf4c      	ite	mi
 80054f2:	f103 0114 	addmi.w	r1, r3, #20
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80054f6:	f503 7115 	addpl.w	r1, r3, #596	@ 0x254
 80054fa:	4401      	add	r1, r0
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 80054fc:	6800      	ldr	r0, [r0, #0]
 80054fe:	f002 b901 	b.w	8007704 <USB_EPStopXfer>
	...

08005504 <HAL_PCD_IRQHandler>:
{
 8005504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005508:	6806      	ldr	r6, [r0, #0]
{
 800550a:	b089      	sub	sp, #36	@ 0x24
 800550c:	4604      	mov	r4, r0
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 800550e:	4630      	mov	r0, r6
 8005510:	f002 fb1e 	bl	8007b50 <USB_GetMode>
 8005514:	9003      	str	r0, [sp, #12]
 8005516:	2800      	cmp	r0, #0
 8005518:	f040 8156 	bne.w	80057c8 <HAL_PCD_IRQHandler+0x2c4>
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 800551c:	6820      	ldr	r0, [r4, #0]
 800551e:	f002 fae9 	bl	8007af4 <USB_ReadInterrupts>
 8005522:	2800      	cmp	r0, #0
 8005524:	f000 8150 	beq.w	80057c8 <HAL_PCD_IRQHandler+0x2c4>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8005528:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 800552c:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 800552e:	f3c3 230d 	ubfx	r3, r3, #8, #14
 8005532:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8005536:	f002 fadd 	bl	8007af4 <USB_ReadInterrupts>
 800553a:	0787      	lsls	r7, r0, #30
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 800553c:	bf48      	it	mi
 800553e:	6822      	ldrmi	r2, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8005540:	6820      	ldr	r0, [r4, #0]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8005542:	bf42      	ittt	mi
 8005544:	6953      	ldrmi	r3, [r2, #20]
 8005546:	f003 0302 	andmi.w	r3, r3, #2
 800554a:	6153      	strmi	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 800554c:	f002 fad2 	bl	8007af4 <USB_ReadInterrupts>
 8005550:	06c0      	lsls	r0, r0, #27
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8005552:	f506 6500 	add.w	r5, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8005556:	d52d      	bpl.n	80055b4 <HAL_PCD_IRQHandler+0xb0>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8005558:	6822      	ldr	r2, [r4, #0]
 800555a:	6993      	ldr	r3, [r2, #24]
 800555c:	f023 0310 	bic.w	r3, r3, #16
 8005560:	6193      	str	r3, [r2, #24]
      RegVal = USBx->GRXSTSP;
 8005562:	f8d6 8020 	ldr.w	r8, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8005566:	f408 13f0 	and.w	r3, r8, #1966080	@ 0x1e0000
 800556a:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 800556e:	f008 070f 	and.w	r7, r8, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8005572:	f040 812c 	bne.w	80057ce <HAL_PCD_IRQHandler+0x2ca>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 8005576:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 800557a:	ea18 0f03 	tst.w	r8, r3
 800557e:	d014      	beq.n	80055aa <HAL_PCD_IRQHandler+0xa6>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8005580:	2324      	movs	r3, #36	@ 0x24
 8005582:	fb03 4707 	mla	r7, r3, r7, r4
 8005586:	f3c8 190a 	ubfx	r9, r8, #4, #11
 800558a:	f8d7 1260 	ldr.w	r1, [r7, #608]	@ 0x260
 800558e:	464a      	mov	r2, r9
 8005590:	4630      	mov	r0, r6
 8005592:	f002 fa0f 	bl	80079b4 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8005596:	f8d7 3260 	ldr.w	r3, [r7, #608]	@ 0x260
 800559a:	444b      	add	r3, r9
 800559c:	f8c7 3260 	str.w	r3, [r7, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 80055a0:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 80055a4:	444b      	add	r3, r9
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 80055a6:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 80055aa:	6822      	ldr	r2, [r4, #0]
 80055ac:	6993      	ldr	r3, [r2, #24]
 80055ae:	f043 0310 	orr.w	r3, r3, #16
 80055b2:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 80055b4:	6820      	ldr	r0, [r4, #0]
 80055b6:	f002 fa9d 	bl	8007af4 <USB_ReadInterrupts>
 80055ba:	0301      	lsls	r1, r0, #12
 80055bc:	f100 811a 	bmi.w	80057f4 <HAL_PCD_IRQHandler+0x2f0>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 80055c0:	6820      	ldr	r0, [r4, #0]
 80055c2:	f002 fa97 	bl	8007af4 <USB_ReadInterrupts>
 80055c6:	0342      	lsls	r2, r0, #13
 80055c8:	d50d      	bpl.n	80055e6 <HAL_PCD_IRQHandler+0xe2>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 80055ca:	6820      	ldr	r0, [r4, #0]
 80055cc:	f002 fa9e 	bl	8007b0c <USB_ReadDevAllInEpInterrupt>
 80055d0:	4627      	mov	r7, r4
 80055d2:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 80055d4:	f506 6b10 	add.w	fp, r6, #2304	@ 0x900
      epnum = 0U;
 80055d8:	f04f 0a00 	mov.w	sl, #0
      while (ep_intr != 0U)
 80055dc:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80055de:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 80055e0:	2b00      	cmp	r3, #0
 80055e2:	f040 81d1 	bne.w	8005988 <HAL_PCD_IRQHandler+0x484>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 80055e6:	6820      	ldr	r0, [r4, #0]
 80055e8:	f002 fa84 	bl	8007af4 <USB_ReadInterrupts>
 80055ec:	2800      	cmp	r0, #0
 80055ee:	da13      	bge.n	8005618 <HAL_PCD_IRQHandler+0x114>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 80055f0:	686b      	ldr	r3, [r5, #4]
 80055f2:	f023 0301 	bic.w	r3, r3, #1
 80055f6:	606b      	str	r3, [r5, #4]
      if (hpcd->LPM_State == LPM_L1)
 80055f8:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
 80055fc:	2b01      	cmp	r3, #1
 80055fe:	f040 8269 	bne.w	8005ad4 <HAL_PCD_IRQHandler+0x5d0>
        hpcd->LPM_State = LPM_L0;
 8005602:	2100      	movs	r1, #0
 8005604:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8005608:	4620      	mov	r0, r4
 800560a:	f000 fae6 	bl	8005bda <HAL_PCDEx_LPM_Callback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 800560e:	6822      	ldr	r2, [r4, #0]
 8005610:	6953      	ldr	r3, [r2, #20]
 8005612:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8005616:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8005618:	6820      	ldr	r0, [r4, #0]
 800561a:	f002 fa6b 	bl	8007af4 <USB_ReadInterrupts>
 800561e:	0507      	lsls	r7, r0, #20
 8005620:	d50a      	bpl.n	8005638 <HAL_PCD_IRQHandler+0x134>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 8005622:	68ab      	ldr	r3, [r5, #8]
 8005624:	07d8      	lsls	r0, r3, #31
 8005626:	d502      	bpl.n	800562e <HAL_PCD_IRQHandler+0x12a>
        HAL_PCD_SuspendCallback(hpcd);
 8005628:	4620      	mov	r0, r4
 800562a:	f7fc fb29 	bl	8001c80 <HAL_PCD_SuspendCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 800562e:	6822      	ldr	r2, [r4, #0]
 8005630:	6953      	ldr	r3, [r2, #20]
 8005632:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005636:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 8005638:	6820      	ldr	r0, [r4, #0]
 800563a:	f002 fa5b 	bl	8007af4 <USB_ReadInterrupts>
 800563e:	04c1      	lsls	r1, r0, #19
 8005640:	d533      	bpl.n	80056aa <HAL_PCD_IRQHandler+0x1a6>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8005642:	686b      	ldr	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8005644:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8005646:	f023 0301 	bic.w	r3, r3, #1
 800564a:	606b      	str	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 800564c:	2110      	movs	r1, #16
 800564e:	f001 feb3 	bl	80073b8 <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005652:	7920      	ldrb	r0, [r4, #4]
 8005654:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8005658:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800565c:	9a03      	ldr	r2, [sp, #12]
 800565e:	4290      	cmp	r0, r2
 8005660:	f200 823c 	bhi.w	8005adc <HAL_PCD_IRQHandler+0x5d8>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 8005664:	69eb      	ldr	r3, [r5, #28]
 8005666:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 800566a:	61eb      	str	r3, [r5, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 800566c:	7be3      	ldrb	r3, [r4, #15]
 800566e:	2b00      	cmp	r3, #0
 8005670:	f000 8250 	beq.w	8005b14 <HAL_PCD_IRQHandler+0x610>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 8005674:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 8005678:	f043 030b 	orr.w	r3, r3, #11
 800567c:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 8005680:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8005682:	f043 030b 	orr.w	r3, r3, #11
 8005686:	646b      	str	r3, [r5, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8005688:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 800568c:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 800568e:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8005692:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8005696:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 800569a:	79a1      	ldrb	r1, [r4, #6]
 800569c:	f002 fa6a 	bl	8007b74 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 80056a0:	6822      	ldr	r2, [r4, #0]
 80056a2:	6953      	ldr	r3, [r2, #20]
 80056a4:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80056a8:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 80056aa:	6820      	ldr	r0, [r4, #0]
 80056ac:	f002 fa22 	bl	8007af4 <USB_ReadInterrupts>
 80056b0:	0482      	lsls	r2, r0, #18
 80056b2:	d516      	bpl.n	80056e2 <HAL_PCD_IRQHandler+0x1de>
      (void)USB_ActivateSetup(hpcd->Instance);
 80056b4:	6820      	ldr	r0, [r4, #0]
 80056b6:	f002 fa4f 	bl	8007b58 <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 80056ba:	6820      	ldr	r0, [r4, #0]
 80056bc:	f001 ff82 	bl	80075c4 <USB_GetDevSpeed>
 80056c0:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 80056c2:	6827      	ldr	r7, [r4, #0]
 80056c4:	f000 fd00 	bl	80060c8 <HAL_RCC_GetHCLKFreq>
 80056c8:	79e2      	ldrb	r2, [r4, #7]
 80056ca:	4601      	mov	r1, r0
 80056cc:	4638      	mov	r0, r7
 80056ce:	f001 fdc7 	bl	8007260 <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 80056d2:	4620      	mov	r0, r4
 80056d4:	f7fc fac1 	bl	8001c5a <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 80056d8:	6822      	ldr	r2, [r4, #0]
 80056da:	6953      	ldr	r3, [r2, #20]
 80056dc:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80056e0:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 80056e2:	6820      	ldr	r0, [r4, #0]
 80056e4:	f002 fa06 	bl	8007af4 <USB_ReadInterrupts>
 80056e8:	0703      	lsls	r3, r0, #28
 80056ea:	d507      	bpl.n	80056fc <HAL_PCD_IRQHandler+0x1f8>
      HAL_PCD_SOFCallback(hpcd);
 80056ec:	4620      	mov	r0, r4
 80056ee:	f7fc fab0 	bl	8001c52 <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 80056f2:	6822      	ldr	r2, [r4, #0]
 80056f4:	6953      	ldr	r3, [r2, #20]
 80056f6:	f003 0308 	and.w	r3, r3, #8
 80056fa:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 80056fc:	6820      	ldr	r0, [r4, #0]
 80056fe:	f002 f9f9 	bl	8007af4 <USB_ReadInterrupts>
 8005702:	0607      	lsls	r7, r0, #24
 8005704:	f100 8211 	bmi.w	8005b2a <HAL_PCD_IRQHandler+0x626>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8005708:	6820      	ldr	r0, [r4, #0]
 800570a:	f002 f9f3 	bl	8007af4 <USB_ReadInterrupts>
 800570e:	02c0      	lsls	r0, r0, #11
 8005710:	d50c      	bpl.n	800572c <HAL_PCD_IRQHandler+0x228>
 8005712:	46a0      	mov	r8, r4
 8005714:	f506 6912 	add.w	r9, r6, #2336	@ 0x920
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005718:	2701      	movs	r7, #1
 800571a:	7923      	ldrb	r3, [r4, #4]
 800571c:	42bb      	cmp	r3, r7
 800571e:	f200 821d 	bhi.w	8005b5c <HAL_PCD_IRQHandler+0x658>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 8005722:	6822      	ldr	r2, [r4, #0]
 8005724:	6953      	ldr	r3, [r2, #20]
 8005726:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800572a:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 800572c:	6820      	ldr	r0, [r4, #0]
 800572e:	f002 f9e1 	bl	8007af4 <USB_ReadInterrupts>
 8005732:	0281      	lsls	r1, r0, #10
 8005734:	d52b      	bpl.n	800578e <HAL_PCD_IRQHandler+0x28a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005736:	f894 e004 	ldrb.w	lr, [r4, #4]
 800573a:	4623      	mov	r3, r4
 800573c:	f506 6132 	add.w	r1, r6, #2848	@ 0xb20
 8005740:	f04f 0c01 	mov.w	ip, #1
 8005744:	45e6      	cmp	lr, ip
 8005746:	d91d      	bls.n	8005784 <HAL_PCD_IRQHandler+0x280>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8005748:	f893 727c 	ldrb.w	r7, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 800574c:	6808      	ldr	r0, [r1, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 800574e:	2f01      	cmp	r7, #1
 8005750:	f040 821a 	bne.w	8005b88 <HAL_PCD_IRQHandler+0x684>
 8005754:	2800      	cmp	r0, #0
 8005756:	f280 8217 	bge.w	8005b88 <HAL_PCD_IRQHandler+0x684>
            (((RegVal & (0x1U << 16)) >> 16U) == (hpcd->FrameNumber & 0x1U)))
 800575a:	f8d4 24d4 	ldr.w	r2, [r4, #1236]	@ 0x4d4
 800575e:	ea82 4010 	eor.w	r0, r2, r0, lsr #16
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 8005762:	07c2      	lsls	r2, r0, #31
 8005764:	f100 8210 	bmi.w	8005b88 <HAL_PCD_IRQHandler+0x684>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 8005768:	f883 727b 	strb.w	r7, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 800576c:	69b0      	ldr	r0, [r6, #24]
 800576e:	f040 0080 	orr.w	r0, r0, #128	@ 0x80
 8005772:	61b0      	str	r0, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 8005774:	6970      	ldr	r0, [r6, #20]
 8005776:	0600      	lsls	r0, r0, #24
 8005778:	f100 8206 	bmi.w	8005b88 <HAL_PCD_IRQHandler+0x684>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 800577c:	686b      	ldr	r3, [r5, #4]
 800577e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005782:	606b      	str	r3, [r5, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 8005784:	6822      	ldr	r2, [r4, #0]
 8005786:	6953      	ldr	r3, [r2, #20]
 8005788:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800578c:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 800578e:	6820      	ldr	r0, [r4, #0]
 8005790:	f002 f9b0 	bl	8007af4 <USB_ReadInterrupts>
 8005794:	0041      	lsls	r1, r0, #1
 8005796:	d507      	bpl.n	80057a8 <HAL_PCD_IRQHandler+0x2a4>
      HAL_PCD_ConnectCallback(hpcd);
 8005798:	4620      	mov	r0, r4
 800579a:	f7fc fa95 	bl	8001cc8 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 800579e:	6822      	ldr	r2, [r4, #0]
 80057a0:	6953      	ldr	r3, [r2, #20]
 80057a2:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 80057a6:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 80057a8:	6820      	ldr	r0, [r4, #0]
 80057aa:	f002 f9a3 	bl	8007af4 <USB_ReadInterrupts>
 80057ae:	0742      	lsls	r2, r0, #29
 80057b0:	d50a      	bpl.n	80057c8 <HAL_PCD_IRQHandler+0x2c4>
      RegVal = hpcd->Instance->GOTGINT;
 80057b2:	6823      	ldr	r3, [r4, #0]
 80057b4:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 80057b6:	076b      	lsls	r3, r5, #29
 80057b8:	d502      	bpl.n	80057c0 <HAL_PCD_IRQHandler+0x2bc>
        HAL_PCD_DisconnectCallback(hpcd);
 80057ba:	4620      	mov	r0, r4
 80057bc:	f7fc fa88 	bl	8001cd0 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
 80057c0:	6822      	ldr	r2, [r4, #0]
 80057c2:	6853      	ldr	r3, [r2, #4]
 80057c4:	432b      	orrs	r3, r5
 80057c6:	6053      	str	r3, [r2, #4]
}
 80057c8:	b009      	add	sp, #36	@ 0x24
 80057ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 80057ce:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 80057d2:	f47f aeea 	bne.w	80055aa <HAL_PCD_IRQHandler+0xa6>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 80057d6:	2208      	movs	r2, #8
 80057d8:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
 80057dc:	4630      	mov	r0, r6
 80057de:	f002 f8e9 	bl	80079b4 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 80057e2:	2324      	movs	r3, #36	@ 0x24
 80057e4:	fb03 4707 	mla	r7, r3, r7, r4
 80057e8:	f3c8 180a 	ubfx	r8, r8, #4, #11
 80057ec:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 80057f0:	4443      	add	r3, r8
 80057f2:	e6d8      	b.n	80055a6 <HAL_PCD_IRQHandler+0xa2>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 80057f4:	6820      	ldr	r0, [r4, #0]
 80057f6:	f002 f981 	bl	8007afc <USB_ReadDevAllOutEpInterrupt>
 80057fa:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
 80057fe:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 8005800:	46a2      	mov	sl, r4
      epnum = 0U;
 8005802:	2700      	movs	r7, #0
      while (ep_intr != 0U)
 8005804:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005806:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8005808:	2b00      	cmp	r3, #0
 800580a:	f43f aed9 	beq.w	80055c0 <HAL_PCD_IRQHandler+0xbc>
        if ((ep_intr & 0x1U) != 0U)
 800580e:	9b04      	ldr	r3, [sp, #16]
 8005810:	07db      	lsls	r3, r3, #31
 8005812:	d578      	bpl.n	8005906 <HAL_PCD_IRQHandler+0x402>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005814:	fa5f fb87 	uxtb.w	fp, r7
 8005818:	4659      	mov	r1, fp
 800581a:	f002 f97f 	bl	8007b1c <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 800581e:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005822:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8005824:	d01f      	beq.n	8005866 <HAL_PCD_IRQHandler+0x362>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005826:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 8005828:	2301      	movs	r3, #1
 800582a:	f8c8 3008 	str.w	r3, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if (hpcd->Init.dma_enable == 1U)
 800582e:	f894 c006 	ldrb.w	ip, [r4, #6]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8005832:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005834:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
 8005838:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if (hpcd->Init.dma_enable == 1U)
 800583c:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005840:	689a      	ldr	r2, [r3, #8]
  if (hpcd->Init.dma_enable == 1U)
 8005842:	f040 808b 	bne.w	800595c <HAL_PCD_IRQHandler+0x458>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 8005846:	f012 0f08 	tst.w	r2, #8
 800584a:	d007      	beq.n	800585c <HAL_PCD_IRQHandler+0x358>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 800584c:	48af      	ldr	r0, [pc, #700]	@ (8005b0c <HAL_PCD_IRQHandler+0x608>)
 800584e:	4281      	cmp	r1, r0
 8005850:	d909      	bls.n	8005866 <HAL_PCD_IRQHandler+0x362>
 8005852:	0412      	lsls	r2, r2, #16
 8005854:	d507      	bpl.n	8005866 <HAL_PCD_IRQHandler+0x362>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005856:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800585a:	e003      	b.n	8005864 <HAL_PCD_IRQHandler+0x360>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 800585c:	f012 0f20 	tst.w	r2, #32
 8005860:	d05a      	beq.n	8005918 <HAL_PCD_IRQHandler+0x414>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8005862:	2220      	movs	r2, #32
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005864:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 8005866:	f019 0f08 	tst.w	r9, #8
 800586a:	d021      	beq.n	80058b0 <HAL_PCD_IRQHandler+0x3ac>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 800586c:	2308      	movs	r3, #8
 800586e:	f8c8 3008 	str.w	r3, [r8, #8]
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005872:	6823      	ldr	r3, [r4, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005874:	49a5      	ldr	r1, [pc, #660]	@ (8005b0c <HAL_PCD_IRQHandler+0x608>)
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8005876:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005878:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800587c:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005880:	428a      	cmp	r2, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005882:	6898      	ldr	r0, [r3, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005884:	d904      	bls.n	8005890 <HAL_PCD_IRQHandler+0x38c>
 8005886:	0401      	lsls	r1, r0, #16
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005888:	bf44      	itt	mi
 800588a:	f44f 4000 	movmi.w	r0, #32768	@ 0x8000
 800588e:	6098      	strmi	r0, [r3, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 8005890:	4620      	mov	r0, r4
 8005892:	9205      	str	r2, [sp, #20]
 8005894:	f7fc f9c6 	bl	8001c24 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 8005898:	9a05      	ldr	r2, [sp, #20]
 800589a:	499c      	ldr	r1, [pc, #624]	@ (8005b0c <HAL_PCD_IRQHandler+0x608>)
 800589c:	428a      	cmp	r2, r1
 800589e:	d907      	bls.n	80058b0 <HAL_PCD_IRQHandler+0x3ac>
 80058a0:	79a1      	ldrb	r1, [r4, #6]
 80058a2:	2901      	cmp	r1, #1
 80058a4:	d104      	bne.n	80058b0 <HAL_PCD_IRQHandler+0x3ac>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80058a6:	6820      	ldr	r0, [r4, #0]
 80058a8:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80058ac:	f002 f962 	bl	8007b74 <USB_EP0_OutStart>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 80058b0:	f019 0f10 	tst.w	r9, #16
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 80058b4:	bf1c      	itt	ne
 80058b6:	2310      	movne	r3, #16
 80058b8:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 80058bc:	f019 0f02 	tst.w	r9, #2
 80058c0:	d014      	beq.n	80058ec <HAL_PCD_IRQHandler+0x3e8>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 80058c2:	6973      	ldr	r3, [r6, #20]
 80058c4:	061a      	lsls	r2, r3, #24
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 80058c6:	bf42      	ittt	mi
 80058c8:	686b      	ldrmi	r3, [r5, #4]
 80058ca:	f443 6380 	orrmi.w	r3, r3, #1024	@ 0x400
 80058ce:	606b      	strmi	r3, [r5, #4]
            if (ep->is_iso_incomplete == 1U)
 80058d0:	f89a 3257 	ldrb.w	r3, [sl, #599]	@ 0x257
 80058d4:	2b01      	cmp	r3, #1
 80058d6:	d106      	bne.n	80058e6 <HAL_PCD_IRQHandler+0x3e2>
              ep->is_iso_incomplete = 0U;
 80058d8:	2300      	movs	r3, #0
 80058da:	f88a 3257 	strb.w	r3, [sl, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 80058de:	4659      	mov	r1, fp
 80058e0:	4620      	mov	r0, r4
 80058e2:	f7fc f9e9 	bl	8001cb8 <HAL_PCD_ISOOUTIncompleteCallback>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 80058e6:	2302      	movs	r3, #2
 80058e8:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 80058ec:	f019 0f20 	tst.w	r9, #32
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80058f0:	bf1c      	itt	ne
 80058f2:	2320      	movne	r3, #32
 80058f4:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 80058f8:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 80058fc:	bf1c      	itt	ne
 80058fe:	f44f 5300 	movne.w	r3, #8192	@ 0x2000
 8005902:	f8c8 3008 	strne.w	r3, [r8, #8]
        ep_intr >>= 1U;
 8005906:	9b04      	ldr	r3, [sp, #16]
 8005908:	085b      	lsrs	r3, r3, #1
        epnum++;
 800590a:	3701      	adds	r7, #1
        ep_intr >>= 1U;
 800590c:	9304      	str	r3, [sp, #16]
 800590e:	f108 0820 	add.w	r8, r8, #32
 8005912:	f10a 0a24 	add.w	sl, sl, #36	@ 0x24
 8005916:	e775      	b.n	8005804 <HAL_PCD_IRQHandler+0x300>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005918:	f8df c1f0 	ldr.w	ip, [pc, #496]	@ 8005b0c <HAL_PCD_IRQHandler+0x608>
 800591c:	4561      	cmp	r1, ip
 800591e:	d901      	bls.n	8005924 <HAL_PCD_IRQHandler+0x420>
 8005920:	0412      	lsls	r2, r2, #16
 8005922:	d498      	bmi.n	8005856 <HAL_PCD_IRQHandler+0x352>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 8005924:	691a      	ldr	r2, [r3, #16]
 8005926:	f8da 3274 	ldr.w	r3, [sl, #628]	@ 0x274
 800592a:	f3c2 0212 	ubfx	r2, r2, #0, #19
 800592e:	1a9b      	subs	r3, r3, r2
 8005930:	f8ca 3268 	str.w	r3, [sl, #616]	@ 0x268
        if (epnum == 0U)
 8005934:	b96f      	cbnz	r7, 8005952 <HAL_PCD_IRQHandler+0x44e>
          if (ep->xfer_len == 0U)
 8005936:	f8d4 2264 	ldr.w	r2, [r4, #612]	@ 0x264
 800593a:	b92a      	cbnz	r2, 8005948 <HAL_PCD_IRQHandler+0x444>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 800593c:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005940:	2101      	movs	r1, #1
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8005942:	f002 f917 	bl	8007b74 <USB_EP0_OutStart>
 8005946:	e004      	b.n	8005952 <HAL_PCD_IRQHandler+0x44e>
            ep->xfer_buff += ep->xfer_count;
 8005948:	f8d4 2260 	ldr.w	r2, [r4, #608]	@ 0x260
 800594c:	441a      	add	r2, r3
 800594e:	f8c4 2260 	str.w	r2, [r4, #608]	@ 0x260
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8005952:	4659      	mov	r1, fp
 8005954:	4620      	mov	r0, r4
 8005956:	f7fc f96b 	bl	8001c30 <HAL_PCD_DataOutStageCallback>
 800595a:	e784      	b.n	8005866 <HAL_PCD_IRQHandler+0x362>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 800595c:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 8005b10 <HAL_PCD_IRQHandler+0x60c>
 8005960:	4561      	cmp	r1, ip
 8005962:	d107      	bne.n	8005974 <HAL_PCD_IRQHandler+0x470>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 8005964:	0411      	lsls	r1, r2, #16
 8005966:	f53f af76 	bmi.w	8005856 <HAL_PCD_IRQHandler+0x352>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 800596a:	0690      	lsls	r0, r2, #26
 800596c:	d5f1      	bpl.n	8005952 <HAL_PCD_IRQHandler+0x44e>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 800596e:	2220      	movs	r2, #32
 8005970:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8005972:	e7ee      	b.n	8005952 <HAL_PCD_IRQHandler+0x44e>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 8005974:	2f00      	cmp	r7, #0
 8005976:	d1ec      	bne.n	8005952 <HAL_PCD_IRQHandler+0x44e>
 8005978:	f8d4 3264 	ldr.w	r3, [r4, #612]	@ 0x264
 800597c:	2b00      	cmp	r3, #0
 800597e:	d1e8      	bne.n	8005952 <HAL_PCD_IRQHandler+0x44e>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8005980:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005984:	4639      	mov	r1, r7
 8005986:	e7dc      	b.n	8005942 <HAL_PCD_IRQHandler+0x43e>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 8005988:	9b04      	ldr	r3, [sp, #16]
 800598a:	07db      	lsls	r3, r3, #31
 800598c:	f140 8099 	bpl.w	8005ac2 <HAL_PCD_IRQHandler+0x5be>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005990:	fa5f f38a 	uxtb.w	r3, sl
 8005994:	4619      	mov	r1, r3
 8005996:	9305      	str	r3, [sp, #20]
 8005998:	f002 f8c9 	bl	8007b2e <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 800599c:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80059a0:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 80059a2:	d01f      	beq.n	80059e4 <HAL_PCD_IRQHandler+0x4e0>
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80059a4:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 80059a6:	2101      	movs	r1, #1
 80059a8:	f00a 020f 	and.w	r2, sl, #15
 80059ac:	fa01 f202 	lsl.w	r2, r1, r2
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80059b0:	ea23 0302 	bic.w	r3, r3, r2
 80059b4:	636b      	str	r3, [r5, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 80059b6:	f8cb 1008 	str.w	r1, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
 80059ba:	79a1      	ldrb	r1, [r4, #6]
 80059bc:	2901      	cmp	r1, #1
 80059be:	d10d      	bne.n	80059dc <HAL_PCD_IRQHandler+0x4d8>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 80059c0:	e9d7 2307 	ldrd	r2, r3, [r7, #28]
 80059c4:	4413      	add	r3, r2
 80059c6:	623b      	str	r3, [r7, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 80059c8:	f1ba 0f00 	cmp.w	sl, #0
 80059cc:	d106      	bne.n	80059dc <HAL_PCD_IRQHandler+0x4d8>
 80059ce:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80059d0:	b923      	cbnz	r3, 80059dc <HAL_PCD_IRQHandler+0x4d8>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80059d2:	6820      	ldr	r0, [r4, #0]
 80059d4:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80059d8:	f002 f8cc 	bl	8007b74 <USB_EP0_OutStart>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 80059dc:	9905      	ldr	r1, [sp, #20]
 80059de:	4620      	mov	r0, r4
 80059e0:	f7fc f92f 	bl	8001c42 <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 80059e4:	f018 0f08 	tst.w	r8, #8
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 80059e8:	bf1c      	itt	ne
 80059ea:	2308      	movne	r3, #8
 80059ec:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 80059f0:	f018 0f10 	tst.w	r8, #16
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 80059f4:	bf1c      	itt	ne
 80059f6:	2310      	movne	r3, #16
 80059f8:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 80059fc:	f018 0f40 	tst.w	r8, #64	@ 0x40
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 8005a00:	bf1c      	itt	ne
 8005a02:	2340      	movne	r3, #64	@ 0x40
 8005a04:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 8005a08:	f018 0f02 	tst.w	r8, #2
 8005a0c:	d00f      	beq.n	8005a2e <HAL_PCD_IRQHandler+0x52a>
            (void)USB_FlushTxFifo(USBx, epnum);
 8005a0e:	4651      	mov	r1, sl
 8005a10:	4630      	mov	r0, r6
 8005a12:	f001 fcd1 	bl	80073b8 <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
 8005a16:	7dfb      	ldrb	r3, [r7, #23]
 8005a18:	2b01      	cmp	r3, #1
 8005a1a:	d105      	bne.n	8005a28 <HAL_PCD_IRQHandler+0x524>
              ep->is_iso_incomplete = 0U;
 8005a1c:	2300      	movs	r3, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 8005a1e:	9905      	ldr	r1, [sp, #20]
              ep->is_iso_incomplete = 0U;
 8005a20:	75fb      	strb	r3, [r7, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 8005a22:	4620      	mov	r0, r4
 8005a24:	f7fc f94c 	bl	8001cc0 <HAL_PCD_ISOINIncompleteCallback>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 8005a28:	2302      	movs	r3, #2
 8005a2a:	f8cb 3008 	str.w	r3, [fp, #8]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005a2e:	6823      	ldr	r3, [r4, #0]
 8005a30:	9306      	str	r3, [sp, #24]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 8005a32:	f018 0f80 	tst.w	r8, #128	@ 0x80
 8005a36:	d044      	beq.n	8005ac2 <HAL_PCD_IRQHandler+0x5be>
  if (ep->xfer_count > ep->xfer_len)
 8005a38:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 8005a3c:	429a      	cmp	r2, r3
 8005a3e:	d840      	bhi.n	8005ac2 <HAL_PCD_IRQHandler+0x5be>
  len = ep->xfer_len - ep->xfer_count;
 8005a40:	eba3 0802 	sub.w	r8, r3, r2
  if (len > ep->maxpacket)
 8005a44:	69fb      	ldr	r3, [r7, #28]
 8005a46:	4598      	cmp	r8, r3
 8005a48:	bf28      	it	cs
 8005a4a:	4698      	movcs	r8, r3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005a4c:	9b06      	ldr	r3, [sp, #24]
 8005a4e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
  len32b = (len + 3U) / 4U;
 8005a52:	f108 0803 	add.w	r8, r8, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005a56:	eb03 134a 	add.w	r3, r3, sl, lsl #5
  len32b = (len + 3U) / 4U;
 8005a5a:	ea4f 0898 	mov.w	r8, r8, lsr #2
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005a5e:	9307      	str	r3, [sp, #28]
 8005a60:	9b07      	ldr	r3, [sp, #28]
 8005a62:	6999      	ldr	r1, [r3, #24]
 8005a64:	b289      	uxth	r1, r1
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 8005a66:	4541      	cmp	r1, r8
 8005a68:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 8005a6c:	d327      	bcc.n	8005abe <HAL_PCD_IRQHandler+0x5ba>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005a6e:	4293      	cmp	r3, r2
 8005a70:	d80b      	bhi.n	8005a8a <HAL_PCD_IRQHandler+0x586>
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005a72:	9b06      	ldr	r3, [sp, #24]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8005a74:	f00a 000f 	and.w	r0, sl, #15
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005a78:	f8d3 2834 	ldr.w	r2, [r3, #2100]	@ 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8005a7c:	2101      	movs	r1, #1
 8005a7e:	4081      	lsls	r1, r0
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8005a80:	ea22 0201 	bic.w	r2, r2, r1
 8005a84:	f8c3 2834 	str.w	r2, [r3, #2100]	@ 0x834
 8005a88:	e01b      	b.n	8005ac2 <HAL_PCD_IRQHandler+0x5be>
    len = ep->xfer_len - ep->xfer_count;
 8005a8a:	eba3 0902 	sub.w	r9, r3, r2
    if (len > ep->maxpacket)
 8005a8e:	69fb      	ldr	r3, [r7, #28]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8005a90:	9a05      	ldr	r2, [sp, #20]
 8005a92:	9806      	ldr	r0, [sp, #24]
    if (len > ep->maxpacket)
 8005a94:	4599      	cmp	r9, r3
 8005a96:	bf28      	it	cs
 8005a98:	4699      	movcs	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8005a9a:	79a3      	ldrb	r3, [r4, #6]
 8005a9c:	9300      	str	r3, [sp, #0]
 8005a9e:	6a39      	ldr	r1, [r7, #32]
 8005aa0:	fa1f f389 	uxth.w	r3, r9
 8005aa4:	f001 fe70 	bl	8007788 <USB_WritePacket>
    ep->xfer_buff  += len;
 8005aa8:	6a3b      	ldr	r3, [r7, #32]
 8005aaa:	444b      	add	r3, r9
 8005aac:	623b      	str	r3, [r7, #32]
    ep->xfer_count += len;
 8005aae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    len32b = (len + 3U) / 4U;
 8005ab0:	f109 0803 	add.w	r8, r9, #3
    ep->xfer_count += len;
 8005ab4:	444b      	add	r3, r9
    len32b = (len + 3U) / 4U;
 8005ab6:	ea4f 0898 	mov.w	r8, r8, lsr #2
    ep->xfer_count += len;
 8005aba:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005abc:	e7d0      	b.n	8005a60 <HAL_PCD_IRQHandler+0x55c>
  if (ep->xfer_len <= ep->xfer_count)
 8005abe:	4293      	cmp	r3, r2
 8005ac0:	d9d7      	bls.n	8005a72 <HAL_PCD_IRQHandler+0x56e>
        ep_intr >>= 1U;
 8005ac2:	9b04      	ldr	r3, [sp, #16]
 8005ac4:	085b      	lsrs	r3, r3, #1
        epnum++;
 8005ac6:	f10a 0a01 	add.w	sl, sl, #1
        ep_intr >>= 1U;
 8005aca:	9304      	str	r3, [sp, #16]
 8005acc:	3724      	adds	r7, #36	@ 0x24
 8005ace:	f10b 0b20 	add.w	fp, fp, #32
 8005ad2:	e583      	b.n	80055dc <HAL_PCD_IRQHandler+0xd8>
        HAL_PCD_ResumeCallback(hpcd);
 8005ad4:	4620      	mov	r0, r4
 8005ad6:	f7fc f8eb 	bl	8001cb0 <HAL_PCD_ResumeCallback>
 8005ada:	e598      	b.n	800560e <HAL_PCD_IRQHandler+0x10a>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8005adc:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8005ade:	681a      	ldr	r2, [r3, #0]
 8005ae0:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8005ae4:	601a      	str	r2, [r3, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 8005ae6:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8005aea:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8005aee:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8005af2:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8005af6:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8005afa:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8005afe:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005b02:	9a03      	ldr	r2, [sp, #12]
 8005b04:	3201      	adds	r2, #1
 8005b06:	9203      	str	r2, [sp, #12]
 8005b08:	3320      	adds	r3, #32
 8005b0a:	e5a7      	b.n	800565c <HAL_PCD_IRQHandler+0x158>
 8005b0c:	4f54300a 	.word	0x4f54300a
 8005b10:	4f54310a 	.word	0x4f54310a
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 8005b14:	696b      	ldr	r3, [r5, #20]
 8005b16:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8005b1a:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 8005b1e:	616b      	str	r3, [r5, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 8005b20:	692b      	ldr	r3, [r5, #16]
 8005b22:	f043 030b 	orr.w	r3, r3, #11
 8005b26:	612b      	str	r3, [r5, #16]
 8005b28:	e5ae      	b.n	8005688 <HAL_PCD_IRQHandler+0x184>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 8005b2a:	69b3      	ldr	r3, [r6, #24]
 8005b2c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005b30:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005b32:	2701      	movs	r7, #1
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 8005b34:	f204 2857 	addw	r8, r4, #599	@ 0x257
 8005b38:	f04f 0924 	mov.w	r9, #36	@ 0x24
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005b3c:	7923      	ldrb	r3, [r4, #4]
 8005b3e:	42bb      	cmp	r3, r7
 8005b40:	f67f ade2 	bls.w	8005708 <HAL_PCD_IRQHandler+0x204>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 8005b44:	fb09 f307 	mul.w	r3, r9, r7
 8005b48:	f818 3003 	ldrb.w	r3, [r8, r3]
 8005b4c:	2b01      	cmp	r3, #1
 8005b4e:	d103      	bne.n	8005b58 <HAL_PCD_IRQHandler+0x654>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
 8005b50:	b2f9      	uxtb	r1, r7
 8005b52:	4620      	mov	r0, r4
 8005b54:	f7ff fcc5 	bl	80054e2 <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005b58:	3701      	adds	r7, #1
 8005b5a:	e7ef      	b.n	8005b3c <HAL_PCD_IRQHandler+0x638>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8005b5c:	f898 303c 	ldrb.w	r3, [r8, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 8005b60:	f8d9 2000 	ldr.w	r2, [r9]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8005b64:	2b01      	cmp	r3, #1
 8005b66:	d109      	bne.n	8005b7c <HAL_PCD_IRQHandler+0x678>
 8005b68:	2a00      	cmp	r2, #0
 8005b6a:	da07      	bge.n	8005b7c <HAL_PCD_IRQHandler+0x678>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8005b6c:	f067 017f 	orn	r1, r7, #127	@ 0x7f
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 8005b70:	f888 303b 	strb.w	r3, [r8, #59]	@ 0x3b
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8005b74:	b2c9      	uxtb	r1, r1
 8005b76:	4620      	mov	r0, r4
 8005b78:	f7ff fcb3 	bl	80054e2 <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005b7c:	3701      	adds	r7, #1
 8005b7e:	f108 0824 	add.w	r8, r8, #36	@ 0x24
 8005b82:	f109 0920 	add.w	r9, r9, #32
 8005b86:	e5c8      	b.n	800571a <HAL_PCD_IRQHandler+0x216>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005b88:	f10c 0c01 	add.w	ip, ip, #1
 8005b8c:	3324      	adds	r3, #36	@ 0x24
 8005b8e:	3120      	adds	r1, #32
 8005b90:	e5d8      	b.n	8005744 <HAL_PCD_IRQHandler+0x240>
 8005b92:	bf00      	nop

08005b94 <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8005b94:	6800      	ldr	r0, [r0, #0]
{
 8005b96:	b570      	push	{r4, r5, r6, lr}
  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8005b98:	6a43      	ldr	r3, [r0, #36]	@ 0x24

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8005b9a:	0412      	lsls	r2, r2, #16
  if (fifo == 0U)
 8005b9c:	b919      	cbnz	r1, 8005ba6 <HAL_PCDEx_SetTxFiFo+0x12>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8005b9e:	4313      	orrs	r3, r2
 8005ba0:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
 8005ba2:	2000      	movs	r0, #0
 8005ba4:	bd70      	pop	{r4, r5, r6, pc}
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8005ba6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
    for (i = 0U; i < (fifo - 1U); i++)
 8005ba8:	1e4e      	subs	r6, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8005baa:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8005bae:	2400      	movs	r4, #0
 8005bb0:	42b4      	cmp	r4, r6
 8005bb2:	d305      	bcc.n	8005bc0 <HAL_PCDEx_SetTxFiFo+0x2c>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 8005bb4:	313f      	adds	r1, #63	@ 0x3f
 8005bb6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8005bba:	4313      	orrs	r3, r2
 8005bbc:	6043      	str	r3, [r0, #4]
 8005bbe:	e7f0      	b.n	8005ba2 <HAL_PCDEx_SetTxFiFo+0xe>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8005bc0:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8005bc4:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8005bc8:	3401      	adds	r4, #1
 8005bca:	686d      	ldr	r5, [r5, #4]
 8005bcc:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8005bd0:	e7ee      	b.n	8005bb0 <HAL_PCDEx_SetTxFiFo+0x1c>

08005bd2 <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 8005bd2:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8005bd4:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
 8005bd6:	6259      	str	r1, [r3, #36]	@ 0x24
}
 8005bd8:	4770      	bx	lr

08005bda <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 8005bda:	4770      	bx	lr

08005bdc <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(const RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005bdc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005be0:	4604      	mov	r4, r0
 8005be2:	b340      	cbz	r0, 8005c36 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005be4:	6803      	ldr	r3, [r0, #0]
 8005be6:	07de      	lsls	r6, r3, #31
 8005be8:	d410      	bmi.n	8005c0c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005bea:	6823      	ldr	r3, [r4, #0]
 8005bec:	079d      	lsls	r5, r3, #30
 8005bee:	d45b      	bmi.n	8005ca8 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005bf0:	6823      	ldr	r3, [r4, #0]
 8005bf2:	0719      	lsls	r1, r3, #28
 8005bf4:	f100 809d 	bmi.w	8005d32 <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005bf8:	6823      	ldr	r3, [r4, #0]
 8005bfa:	075a      	lsls	r2, r3, #29
 8005bfc:	f100 80bd 	bmi.w	8005d7a <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005c00:	69a3      	ldr	r3, [r4, #24]
 8005c02:	2b00      	cmp	r3, #0
 8005c04:	f040 8124 	bne.w	8005e50 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005c08:	2000      	movs	r0, #0
 8005c0a:	e02c      	b.n	8005c66 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8005c0c:	4b8d      	ldr	r3, [pc, #564]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
 8005c0e:	689a      	ldr	r2, [r3, #8]
 8005c10:	f002 020c 	and.w	r2, r2, #12
 8005c14:	2a04      	cmp	r2, #4
 8005c16:	d007      	beq.n	8005c28 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005c18:	689a      	ldr	r2, [r3, #8]
 8005c1a:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8005c1e:	2a08      	cmp	r2, #8
 8005c20:	d10b      	bne.n	8005c3a <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005c22:	685b      	ldr	r3, [r3, #4]
 8005c24:	0259      	lsls	r1, r3, #9
 8005c26:	d508      	bpl.n	8005c3a <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005c28:	4b86      	ldr	r3, [pc, #536]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
 8005c2a:	681b      	ldr	r3, [r3, #0]
 8005c2c:	039a      	lsls	r2, r3, #14
 8005c2e:	d5dc      	bpl.n	8005bea <HAL_RCC_OscConfig+0xe>
 8005c30:	6863      	ldr	r3, [r4, #4]
 8005c32:	2b00      	cmp	r3, #0
 8005c34:	d1d9      	bne.n	8005bea <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 8005c36:	2001      	movs	r0, #1
 8005c38:	e015      	b.n	8005c66 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005c3a:	6863      	ldr	r3, [r4, #4]
 8005c3c:	4d81      	ldr	r5, [pc, #516]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
 8005c3e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005c42:	d113      	bne.n	8005c6c <HAL_RCC_OscConfig+0x90>
 8005c44:	682b      	ldr	r3, [r5, #0]
 8005c46:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005c4a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005c4c:	f7fe fa34 	bl	80040b8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005c50:	4e7c      	ldr	r6, [pc, #496]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005c52:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005c54:	6833      	ldr	r3, [r6, #0]
 8005c56:	039b      	lsls	r3, r3, #14
 8005c58:	d4c7      	bmi.n	8005bea <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005c5a:	f7fe fa2d 	bl	80040b8 <HAL_GetTick>
 8005c5e:	1b40      	subs	r0, r0, r5
 8005c60:	2864      	cmp	r0, #100	@ 0x64
 8005c62:	d9f7      	bls.n	8005c54 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8005c64:	2003      	movs	r0, #3
}
 8005c66:	b002      	add	sp, #8
 8005c68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005c6c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005c70:	d104      	bne.n	8005c7c <HAL_RCC_OscConfig+0xa0>
 8005c72:	682b      	ldr	r3, [r5, #0]
 8005c74:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005c78:	602b      	str	r3, [r5, #0]
 8005c7a:	e7e3      	b.n	8005c44 <HAL_RCC_OscConfig+0x68>
 8005c7c:	682a      	ldr	r2, [r5, #0]
 8005c7e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8005c82:	602a      	str	r2, [r5, #0]
 8005c84:	682a      	ldr	r2, [r5, #0]
 8005c86:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8005c8a:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d1dd      	bne.n	8005c4c <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8005c90:	f7fe fa12 	bl	80040b8 <HAL_GetTick>
 8005c94:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005c96:	682b      	ldr	r3, [r5, #0]
 8005c98:	039f      	lsls	r7, r3, #14
 8005c9a:	d5a6      	bpl.n	8005bea <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005c9c:	f7fe fa0c 	bl	80040b8 <HAL_GetTick>
 8005ca0:	1b80      	subs	r0, r0, r6
 8005ca2:	2864      	cmp	r0, #100	@ 0x64
 8005ca4:	d9f7      	bls.n	8005c96 <HAL_RCC_OscConfig+0xba>
 8005ca6:	e7dd      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8005ca8:	4b66      	ldr	r3, [pc, #408]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
 8005caa:	689a      	ldr	r2, [r3, #8]
 8005cac:	f012 0f0c 	tst.w	r2, #12
 8005cb0:	d007      	beq.n	8005cc2 <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005cb2:	689a      	ldr	r2, [r3, #8]
 8005cb4:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8005cb8:	2a08      	cmp	r2, #8
 8005cba:	d111      	bne.n	8005ce0 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005cbc:	685b      	ldr	r3, [r3, #4]
 8005cbe:	025d      	lsls	r5, r3, #9
 8005cc0:	d40e      	bmi.n	8005ce0 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005cc2:	4a60      	ldr	r2, [pc, #384]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
 8005cc4:	6813      	ldr	r3, [r2, #0]
 8005cc6:	0799      	lsls	r1, r3, #30
 8005cc8:	d502      	bpl.n	8005cd0 <HAL_RCC_OscConfig+0xf4>
 8005cca:	68e3      	ldr	r3, [r4, #12]
 8005ccc:	2b01      	cmp	r3, #1
 8005cce:	d1b2      	bne.n	8005c36 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005cd0:	6813      	ldr	r3, [r2, #0]
 8005cd2:	6921      	ldr	r1, [r4, #16]
 8005cd4:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005cd8:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005cdc:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005cde:	e787      	b.n	8005bf0 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005ce0:	68e2      	ldr	r2, [r4, #12]
 8005ce2:	4b59      	ldr	r3, [pc, #356]	@ (8005e48 <HAL_RCC_OscConfig+0x26c>)
 8005ce4:	b1b2      	cbz	r2, 8005d14 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 8005ce6:	2201      	movs	r2, #1
 8005ce8:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005cea:	f7fe f9e5 	bl	80040b8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005cee:	4d55      	ldr	r5, [pc, #340]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005cf0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005cf2:	682b      	ldr	r3, [r5, #0]
 8005cf4:	079b      	lsls	r3, r3, #30
 8005cf6:	d507      	bpl.n	8005d08 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005cf8:	682b      	ldr	r3, [r5, #0]
 8005cfa:	6922      	ldr	r2, [r4, #16]
 8005cfc:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005d00:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005d04:	602b      	str	r3, [r5, #0]
 8005d06:	e773      	b.n	8005bf0 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005d08:	f7fe f9d6 	bl	80040b8 <HAL_GetTick>
 8005d0c:	1b80      	subs	r0, r0, r6
 8005d0e:	2802      	cmp	r0, #2
 8005d10:	d9ef      	bls.n	8005cf2 <HAL_RCC_OscConfig+0x116>
 8005d12:	e7a7      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8005d14:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005d16:	f7fe f9cf 	bl	80040b8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005d1a:	4e4a      	ldr	r6, [pc, #296]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005d1c:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005d1e:	6833      	ldr	r3, [r6, #0]
 8005d20:	079f      	lsls	r7, r3, #30
 8005d22:	f57f af65 	bpl.w	8005bf0 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005d26:	f7fe f9c7 	bl	80040b8 <HAL_GetTick>
 8005d2a:	1b40      	subs	r0, r0, r5
 8005d2c:	2802      	cmp	r0, #2
 8005d2e:	d9f6      	bls.n	8005d1e <HAL_RCC_OscConfig+0x142>
 8005d30:	e798      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005d32:	6962      	ldr	r2, [r4, #20]
 8005d34:	4b44      	ldr	r3, [pc, #272]	@ (8005e48 <HAL_RCC_OscConfig+0x26c>)
 8005d36:	b182      	cbz	r2, 8005d5a <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8005d38:	2201      	movs	r2, #1
 8005d3a:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005d3e:	f7fe f9bb 	bl	80040b8 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005d42:	4e40      	ldr	r6, [pc, #256]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005d44:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005d46:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005d48:	079b      	lsls	r3, r3, #30
 8005d4a:	f53f af55 	bmi.w	8005bf8 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005d4e:	f7fe f9b3 	bl	80040b8 <HAL_GetTick>
 8005d52:	1b40      	subs	r0, r0, r5
 8005d54:	2802      	cmp	r0, #2
 8005d56:	d9f6      	bls.n	8005d46 <HAL_RCC_OscConfig+0x16a>
 8005d58:	e784      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8005d5a:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005d5e:	f7fe f9ab 	bl	80040b8 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005d62:	4e38      	ldr	r6, [pc, #224]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005d64:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005d66:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005d68:	079f      	lsls	r7, r3, #30
 8005d6a:	f57f af45 	bpl.w	8005bf8 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005d6e:	f7fe f9a3 	bl	80040b8 <HAL_GetTick>
 8005d72:	1b40      	subs	r0, r0, r5
 8005d74:	2802      	cmp	r0, #2
 8005d76:	d9f6      	bls.n	8005d66 <HAL_RCC_OscConfig+0x18a>
 8005d78:	e774      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005d7a:	4b32      	ldr	r3, [pc, #200]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
 8005d7c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005d7e:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 8005d82:	d128      	bne.n	8005dd6 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005d84:	9201      	str	r2, [sp, #4]
 8005d86:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005d88:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005d8c:	641a      	str	r2, [r3, #64]	@ 0x40
 8005d8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d90:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d94:	9301      	str	r3, [sp, #4]
 8005d96:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8005d98:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d9a:	4d2c      	ldr	r5, [pc, #176]	@ (8005e4c <HAL_RCC_OscConfig+0x270>)
 8005d9c:	682b      	ldr	r3, [r5, #0]
 8005d9e:	05d8      	lsls	r0, r3, #23
 8005da0:	d51b      	bpl.n	8005dda <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005da2:	68a3      	ldr	r3, [r4, #8]
 8005da4:	4d27      	ldr	r5, [pc, #156]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
 8005da6:	2b01      	cmp	r3, #1
 8005da8:	d127      	bne.n	8005dfa <HAL_RCC_OscConfig+0x21e>
 8005daa:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005dac:	f043 0301 	orr.w	r3, r3, #1
 8005db0:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 8005db2:	f7fe f981 	bl	80040b8 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005db6:	4e23      	ldr	r6, [pc, #140]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8005db8:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005dba:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005dbe:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8005dc0:	079a      	lsls	r2, r3, #30
 8005dc2:	d539      	bpl.n	8005e38 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 8005dc4:	2f00      	cmp	r7, #0
 8005dc6:	f43f af1b 	beq.w	8005c00 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005dca:	4a1e      	ldr	r2, [pc, #120]	@ (8005e44 <HAL_RCC_OscConfig+0x268>)
 8005dcc:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8005dce:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005dd2:	6413      	str	r3, [r2, #64]	@ 0x40
 8005dd4:	e714      	b.n	8005c00 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8005dd6:	2700      	movs	r7, #0
 8005dd8:	e7df      	b.n	8005d9a <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005dda:	682b      	ldr	r3, [r5, #0]
 8005ddc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005de0:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005de2:	f7fe f969 	bl	80040b8 <HAL_GetTick>
 8005de6:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005de8:	682b      	ldr	r3, [r5, #0]
 8005dea:	05d9      	lsls	r1, r3, #23
 8005dec:	d4d9      	bmi.n	8005da2 <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005dee:	f7fe f963 	bl	80040b8 <HAL_GetTick>
 8005df2:	1b80      	subs	r0, r0, r6
 8005df4:	2802      	cmp	r0, #2
 8005df6:	d9f7      	bls.n	8005de8 <HAL_RCC_OscConfig+0x20c>
 8005df8:	e734      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005dfa:	2b05      	cmp	r3, #5
 8005dfc:	d104      	bne.n	8005e08 <HAL_RCC_OscConfig+0x22c>
 8005dfe:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005e00:	f043 0304 	orr.w	r3, r3, #4
 8005e04:	672b      	str	r3, [r5, #112]	@ 0x70
 8005e06:	e7d0      	b.n	8005daa <HAL_RCC_OscConfig+0x1ce>
 8005e08:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8005e0a:	f022 0201 	bic.w	r2, r2, #1
 8005e0e:	672a      	str	r2, [r5, #112]	@ 0x70
 8005e10:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8005e12:	f022 0204 	bic.w	r2, r2, #4
 8005e16:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005e18:	2b00      	cmp	r3, #0
 8005e1a:	d1ca      	bne.n	8005db2 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8005e1c:	f7fe f94c 	bl	80040b8 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005e20:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 8005e24:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005e26:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005e28:	079b      	lsls	r3, r3, #30
 8005e2a:	d5cb      	bpl.n	8005dc4 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005e2c:	f7fe f944 	bl	80040b8 <HAL_GetTick>
 8005e30:	1b80      	subs	r0, r0, r6
 8005e32:	4540      	cmp	r0, r8
 8005e34:	d9f7      	bls.n	8005e26 <HAL_RCC_OscConfig+0x24a>
 8005e36:	e715      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005e38:	f7fe f93e 	bl	80040b8 <HAL_GetTick>
 8005e3c:	1b40      	subs	r0, r0, r5
 8005e3e:	4540      	cmp	r0, r8
 8005e40:	d9bd      	bls.n	8005dbe <HAL_RCC_OscConfig+0x1e2>
 8005e42:	e70f      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
 8005e44:	40023800 	.word	0x40023800
 8005e48:	42470000 	.word	0x42470000
 8005e4c:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005e50:	4d37      	ldr	r5, [pc, #220]	@ (8005f30 <HAL_RCC_OscConfig+0x354>)
 8005e52:	68aa      	ldr	r2, [r5, #8]
 8005e54:	f002 020c 	and.w	r2, r2, #12
 8005e58:	2a08      	cmp	r2, #8
 8005e5a:	d03e      	beq.n	8005eda <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005e5c:	2b02      	cmp	r3, #2
 8005e5e:	4b35      	ldr	r3, [pc, #212]	@ (8005f34 <HAL_RCC_OscConfig+0x358>)
 8005e60:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8005e64:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005e66:	d12b      	bne.n	8005ec0 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8005e68:	f7fe f926 	bl	80040b8 <HAL_GetTick>
 8005e6c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005e6e:	682b      	ldr	r3, [r5, #0]
 8005e70:	0199      	lsls	r1, r3, #6
 8005e72:	d41f      	bmi.n	8005eb4 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005e74:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8005e78:	4313      	orrs	r3, r2
 8005e7a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005e7c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005e80:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005e82:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8005e86:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005e88:	0852      	lsrs	r2, r2, #1
 8005e8a:	3a01      	subs	r2, #1
 8005e8c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005e90:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8005e92:	4b28      	ldr	r3, [pc, #160]	@ (8005f34 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005e94:	4d26      	ldr	r5, [pc, #152]	@ (8005f30 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8005e96:	2201      	movs	r2, #1
 8005e98:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8005e9a:	f7fe f90d 	bl	80040b8 <HAL_GetTick>
 8005e9e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005ea0:	682b      	ldr	r3, [r5, #0]
 8005ea2:	019a      	lsls	r2, r3, #6
 8005ea4:	f53f aeb0 	bmi.w	8005c08 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005ea8:	f7fe f906 	bl	80040b8 <HAL_GetTick>
 8005eac:	1b00      	subs	r0, r0, r4
 8005eae:	2802      	cmp	r0, #2
 8005eb0:	d9f6      	bls.n	8005ea0 <HAL_RCC_OscConfig+0x2c4>
 8005eb2:	e6d7      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005eb4:	f7fe f900 	bl	80040b8 <HAL_GetTick>
 8005eb8:	1b80      	subs	r0, r0, r6
 8005eba:	2802      	cmp	r0, #2
 8005ebc:	d9d7      	bls.n	8005e6e <HAL_RCC_OscConfig+0x292>
 8005ebe:	e6d1      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8005ec0:	f7fe f8fa 	bl	80040b8 <HAL_GetTick>
 8005ec4:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005ec6:	682b      	ldr	r3, [r5, #0]
 8005ec8:	019b      	lsls	r3, r3, #6
 8005eca:	f57f ae9d 	bpl.w	8005c08 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005ece:	f7fe f8f3 	bl	80040b8 <HAL_GetTick>
 8005ed2:	1b00      	subs	r0, r0, r4
 8005ed4:	2802      	cmp	r0, #2
 8005ed6:	d9f6      	bls.n	8005ec6 <HAL_RCC_OscConfig+0x2ea>
 8005ed8:	e6c4      	b.n	8005c64 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005eda:	2b01      	cmp	r3, #1
 8005edc:	f43f aeab 	beq.w	8005c36 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8005ee0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005ee2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005ee4:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005ee8:	4291      	cmp	r1, r2
 8005eea:	f47f aea4 	bne.w	8005c36 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005eee:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005ef0:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005ef4:	428a      	cmp	r2, r1
 8005ef6:	f47f ae9e 	bne.w	8005c36 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005efa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005efc:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8005f00:	401a      	ands	r2, r3
 8005f02:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8005f06:	f47f ae96 	bne.w	8005c36 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005f0a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005f0c:	0852      	lsrs	r2, r2, #1
 8005f0e:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8005f12:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005f14:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8005f18:	f47f ae8d 	bne.w	8005c36 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8005f1c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005f1e:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005f22:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8005f26:	bf14      	ite	ne
 8005f28:	2001      	movne	r0, #1
 8005f2a:	2000      	moveq	r0, #0
 8005f2c:	e69b      	b.n	8005c66 <HAL_RCC_OscConfig+0x8a>
 8005f2e:	bf00      	nop
 8005f30:	40023800 	.word	0x40023800
 8005f34:	42470000 	.word	0x42470000

08005f38 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005f38:	4913      	ldr	r1, [pc, #76]	@ (8005f88 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005f3a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005f3c:	688b      	ldr	r3, [r1, #8]
 8005f3e:	f003 030c 	and.w	r3, r3, #12
 8005f42:	2b04      	cmp	r3, #4
 8005f44:	d01c      	beq.n	8005f80 <HAL_RCC_GetSysClockFreq+0x48>
 8005f46:	2b08      	cmp	r3, #8
 8005f48:	d11c      	bne.n	8005f84 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005f4a:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005f4c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005f4e:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005f50:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005f54:	bf14      	ite	ne
 8005f56:	480d      	ldrne	r0, [pc, #52]	@ (8005f8c <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005f58:	480d      	ldreq	r0, [pc, #52]	@ (8005f90 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005f5a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005f5e:	bf18      	it	ne
 8005f60:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005f62:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005f66:	fba1 0100 	umull	r0, r1, r1, r0
 8005f6a:	f7fa fbcd 	bl	8000708 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8005f6e:	4b06      	ldr	r3, [pc, #24]	@ (8005f88 <HAL_RCC_GetSysClockFreq+0x50>)
 8005f70:	685b      	ldr	r3, [r3, #4]
 8005f72:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005f76:	3301      	adds	r3, #1
 8005f78:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8005f7a:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005f7e:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005f80:	4802      	ldr	r0, [pc, #8]	@ (8005f8c <HAL_RCC_GetSysClockFreq+0x54>)
 8005f82:	e7fc      	b.n	8005f7e <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005f84:	4802      	ldr	r0, [pc, #8]	@ (8005f90 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005f86:	e7fa      	b.n	8005f7e <HAL_RCC_GetSysClockFreq+0x46>
 8005f88:	40023800 	.word	0x40023800
 8005f8c:	007a1200 	.word	0x007a1200
 8005f90:	00f42400 	.word	0x00f42400

08005f94 <HAL_RCC_ClockConfig>:
{
 8005f94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005f98:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8005f9a:	4604      	mov	r4, r0
 8005f9c:	b910      	cbnz	r0, 8005fa4 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005f9e:	2001      	movs	r0, #1
}
 8005fa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005fa4:	4b43      	ldr	r3, [pc, #268]	@ (80060b4 <HAL_RCC_ClockConfig+0x120>)
 8005fa6:	681a      	ldr	r2, [r3, #0]
 8005fa8:	f002 020f 	and.w	r2, r2, #15
 8005fac:	428a      	cmp	r2, r1
 8005fae:	d328      	bcc.n	8006002 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005fb0:	6821      	ldr	r1, [r4, #0]
 8005fb2:	078f      	lsls	r7, r1, #30
 8005fb4:	d42d      	bmi.n	8006012 <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005fb6:	07c8      	lsls	r0, r1, #31
 8005fb8:	d440      	bmi.n	800603c <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8005fba:	4b3e      	ldr	r3, [pc, #248]	@ (80060b4 <HAL_RCC_ClockConfig+0x120>)
 8005fbc:	681a      	ldr	r2, [r3, #0]
 8005fbe:	f002 020f 	and.w	r2, r2, #15
 8005fc2:	42aa      	cmp	r2, r5
 8005fc4:	d865      	bhi.n	8006092 <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005fc6:	6822      	ldr	r2, [r4, #0]
 8005fc8:	0751      	lsls	r1, r2, #29
 8005fca:	d46b      	bmi.n	80060a4 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005fcc:	0713      	lsls	r3, r2, #28
 8005fce:	d507      	bpl.n	8005fe0 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005fd0:	4a39      	ldr	r2, [pc, #228]	@ (80060b8 <HAL_RCC_ClockConfig+0x124>)
 8005fd2:	6921      	ldr	r1, [r4, #16]
 8005fd4:	6893      	ldr	r3, [r2, #8]
 8005fd6:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8005fda:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005fde:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005fe0:	f7ff ffaa 	bl	8005f38 <HAL_RCC_GetSysClockFreq>
 8005fe4:	4b34      	ldr	r3, [pc, #208]	@ (80060b8 <HAL_RCC_ClockConfig+0x124>)
 8005fe6:	4a35      	ldr	r2, [pc, #212]	@ (80060bc <HAL_RCC_ClockConfig+0x128>)
 8005fe8:	689b      	ldr	r3, [r3, #8]
 8005fea:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005fee:	5cd3      	ldrb	r3, [r2, r3]
 8005ff0:	40d8      	lsrs	r0, r3
 8005ff2:	4b33      	ldr	r3, [pc, #204]	@ (80060c0 <HAL_RCC_ClockConfig+0x12c>)
 8005ff4:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8005ff6:	4b33      	ldr	r3, [pc, #204]	@ (80060c4 <HAL_RCC_ClockConfig+0x130>)
 8005ff8:	6818      	ldr	r0, [r3, #0]
 8005ffa:	f7fc fd87 	bl	8002b0c <HAL_InitTick>
  return HAL_OK;
 8005ffe:	2000      	movs	r0, #0
 8006000:	e7ce      	b.n	8005fa0 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006002:	b2ca      	uxtb	r2, r1
 8006004:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006006:	681b      	ldr	r3, [r3, #0]
 8006008:	f003 030f 	and.w	r3, r3, #15
 800600c:	428b      	cmp	r3, r1
 800600e:	d1c6      	bne.n	8005f9e <HAL_RCC_ClockConfig+0xa>
 8006010:	e7ce      	b.n	8005fb0 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006012:	4b29      	ldr	r3, [pc, #164]	@ (80060b8 <HAL_RCC_ClockConfig+0x124>)
 8006014:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006018:	bf1e      	ittt	ne
 800601a:	689a      	ldrne	r2, [r3, #8]
 800601c:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8006020:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006022:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006024:	bf42      	ittt	mi
 8006026:	689a      	ldrmi	r2, [r3, #8]
 8006028:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 800602c:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800602e:	689a      	ldr	r2, [r3, #8]
 8006030:	68a0      	ldr	r0, [r4, #8]
 8006032:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8006036:	4302      	orrs	r2, r0
 8006038:	609a      	str	r2, [r3, #8]
 800603a:	e7bc      	b.n	8005fb6 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800603c:	6862      	ldr	r2, [r4, #4]
 800603e:	4b1e      	ldr	r3, [pc, #120]	@ (80060b8 <HAL_RCC_ClockConfig+0x124>)
 8006040:	2a01      	cmp	r2, #1
 8006042:	d11c      	bne.n	800607e <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006044:	681b      	ldr	r3, [r3, #0]
 8006046:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800604a:	d0a8      	beq.n	8005f9e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800604c:	4e1a      	ldr	r6, [pc, #104]	@ (80060b8 <HAL_RCC_ClockConfig+0x124>)
 800604e:	68b3      	ldr	r3, [r6, #8]
 8006050:	f023 0303 	bic.w	r3, r3, #3
 8006054:	4313      	orrs	r3, r2
 8006056:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006058:	f7fe f82e 	bl	80040b8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800605c:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8006060:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006062:	68b3      	ldr	r3, [r6, #8]
 8006064:	6862      	ldr	r2, [r4, #4]
 8006066:	f003 030c 	and.w	r3, r3, #12
 800606a:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800606e:	d0a4      	beq.n	8005fba <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006070:	f7fe f822 	bl	80040b8 <HAL_GetTick>
 8006074:	1bc0      	subs	r0, r0, r7
 8006076:	4540      	cmp	r0, r8
 8006078:	d9f3      	bls.n	8006062 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800607a:	2003      	movs	r0, #3
 800607c:	e790      	b.n	8005fa0 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800607e:	1e91      	subs	r1, r2, #2
 8006080:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006082:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006084:	d802      	bhi.n	800608c <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006086:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 800608a:	e7de      	b.n	800604a <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800608c:	f013 0f02 	tst.w	r3, #2
 8006090:	e7db      	b.n	800604a <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006092:	b2ea      	uxtb	r2, r5
 8006094:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006096:	681b      	ldr	r3, [r3, #0]
 8006098:	f003 030f 	and.w	r3, r3, #15
 800609c:	42ab      	cmp	r3, r5
 800609e:	f47f af7e 	bne.w	8005f9e <HAL_RCC_ClockConfig+0xa>
 80060a2:	e790      	b.n	8005fc6 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80060a4:	4904      	ldr	r1, [pc, #16]	@ (80060b8 <HAL_RCC_ClockConfig+0x124>)
 80060a6:	68e0      	ldr	r0, [r4, #12]
 80060a8:	688b      	ldr	r3, [r1, #8]
 80060aa:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 80060ae:	4303      	orrs	r3, r0
 80060b0:	608b      	str	r3, [r1, #8]
 80060b2:	e78b      	b.n	8005fcc <HAL_RCC_ClockConfig+0x38>
 80060b4:	40023c00 	.word	0x40023c00
 80060b8:	40023800 	.word	0x40023800
 80060bc:	08025928 	.word	0x08025928
 80060c0:	200000c4 	.word	0x200000c4
 80060c4:	200000cc 	.word	0x200000cc

080060c8 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 80060c8:	4b01      	ldr	r3, [pc, #4]	@ (80060d0 <HAL_RCC_GetHCLKFreq+0x8>)
 80060ca:	6818      	ldr	r0, [r3, #0]
 80060cc:	4770      	bx	lr
 80060ce:	bf00      	nop
 80060d0:	200000c4 	.word	0x200000c4

080060d4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80060d4:	4b04      	ldr	r3, [pc, #16]	@ (80060e8 <HAL_RCC_GetPCLK1Freq+0x14>)
 80060d6:	4a05      	ldr	r2, [pc, #20]	@ (80060ec <HAL_RCC_GetPCLK1Freq+0x18>)
 80060d8:	689b      	ldr	r3, [r3, #8]
 80060da:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80060de:	5cd3      	ldrb	r3, [r2, r3]
 80060e0:	4a03      	ldr	r2, [pc, #12]	@ (80060f0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80060e2:	6810      	ldr	r0, [r2, #0]
}
 80060e4:	40d8      	lsrs	r0, r3
 80060e6:	4770      	bx	lr
 80060e8:	40023800 	.word	0x40023800
 80060ec:	08025920 	.word	0x08025920
 80060f0:	200000c4 	.word	0x200000c4

080060f4 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 80060f4:	4b04      	ldr	r3, [pc, #16]	@ (8006108 <HAL_RCC_GetPCLK2Freq+0x14>)
 80060f6:	4a05      	ldr	r2, [pc, #20]	@ (800610c <HAL_RCC_GetPCLK2Freq+0x18>)
 80060f8:	689b      	ldr	r3, [r3, #8]
 80060fa:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80060fe:	5cd3      	ldrb	r3, [r2, r3]
 8006100:	4a03      	ldr	r2, [pc, #12]	@ (8006110 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8006102:	6810      	ldr	r0, [r2, #0]
}
 8006104:	40d8      	lsrs	r0, r3
 8006106:	4770      	bx	lr
 8006108:	40023800 	.word	0x40023800
 800610c:	08025920 	.word	0x08025920
 8006110:	200000c4 	.word	0x200000c4

08006114 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006114:	230f      	movs	r3, #15
 8006116:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006118:	4b0b      	ldr	r3, [pc, #44]	@ (8006148 <HAL_RCC_GetClockConfig+0x34>)
 800611a:	689a      	ldr	r2, [r3, #8]
 800611c:	f002 0203 	and.w	r2, r2, #3
 8006120:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006122:	689a      	ldr	r2, [r3, #8]
 8006124:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8006128:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800612a:	689a      	ldr	r2, [r3, #8]
 800612c:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8006130:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006132:	689b      	ldr	r3, [r3, #8]
 8006134:	08db      	lsrs	r3, r3, #3
 8006136:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 800613a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800613c:	4b03      	ldr	r3, [pc, #12]	@ (800614c <HAL_RCC_GetClockConfig+0x38>)
 800613e:	681b      	ldr	r3, [r3, #0]
 8006140:	f003 030f 	and.w	r3, r3, #15
 8006144:	600b      	str	r3, [r1, #0]
}
 8006146:	4770      	bx	lr
 8006148:	40023800 	.word	0x40023800
 800614c:	40023c00 	.word	0x40023c00

08006150 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8006150:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006152:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8006156:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006158:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800615a:	f040 8088 	bne.w	800626e <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800615e:	6823      	ldr	r3, [r4, #0]
 8006160:	f013 0f0c 	tst.w	r3, #12
 8006164:	d045      	beq.n	80061f2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006166:	4b8c      	ldr	r3, [pc, #560]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006168:	4d8c      	ldr	r5, [pc, #560]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 800616a:	2200      	movs	r2, #0
 800616c:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800616e:	f7fd ffa3 	bl	80040b8 <HAL_GetTick>
 8006172:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006174:	682b      	ldr	r3, [r5, #0]
 8006176:	0099      	lsls	r1, r3, #2
 8006178:	f100 80cb 	bmi.w	8006312 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800617c:	6821      	ldr	r1, [r4, #0]
 800617e:	074a      	lsls	r2, r1, #29
 8006180:	d515      	bpl.n	80061ae <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006182:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006186:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800618a:	061b      	lsls	r3, r3, #24
 800618c:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8006190:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006194:	4313      	orrs	r3, r2
 8006196:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800619a:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 800619e:	6a22      	ldr	r2, [r4, #32]
 80061a0:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 80061a4:	3a01      	subs	r2, #1
 80061a6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80061aa:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80061ae:	070b      	lsls	r3, r1, #28
 80061b0:	d514      	bpl.n	80061dc <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80061b2:	4a7a      	ldr	r2, [pc, #488]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80061b4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80061b6:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80061ba:	6920      	ldr	r0, [r4, #16]
 80061bc:	071b      	lsls	r3, r3, #28
 80061be:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 80061c2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80061c6:	430b      	orrs	r3, r1
 80061c8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80061cc:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 80061d0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80061d2:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 80061d6:	430b      	orrs	r3, r1
 80061d8:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80061dc:	4b6e      	ldr	r3, [pc, #440]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80061de:	4e6f      	ldr	r6, [pc, #444]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 80061e0:	2201      	movs	r2, #1
 80061e2:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 80061e4:	f7fd ff68 	bl	80040b8 <HAL_GetTick>
 80061e8:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80061ea:	6833      	ldr	r3, [r6, #0]
 80061ec:	009f      	lsls	r7, r3, #2
 80061ee:	f140 8097 	bpl.w	8006320 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80061f2:	6823      	ldr	r3, [r4, #0]
 80061f4:	0698      	lsls	r0, r3, #26
 80061f6:	d534      	bpl.n	8006262 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80061f8:	2300      	movs	r3, #0
 80061fa:	9301      	str	r3, [sp, #4]
 80061fc:	4b67      	ldr	r3, [pc, #412]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80061fe:	4d68      	ldr	r5, [pc, #416]	@ (80063a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006200:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006202:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006206:	641a      	str	r2, [r3, #64]	@ 0x40
 8006208:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800620a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800620e:	9301      	str	r3, [sp, #4]
 8006210:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006212:	682b      	ldr	r3, [r5, #0]
 8006214:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006218:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800621a:	f7fd ff4d 	bl	80040b8 <HAL_GetTick>
 800621e:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 8006220:	682b      	ldr	r3, [r5, #0]
 8006222:	05d8      	lsls	r0, r3, #23
 8006224:	f140 8083 	bpl.w	800632e <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006228:	4d5c      	ldr	r5, [pc, #368]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800622a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800622c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800622e:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8006232:	f040 8083 	bne.w	800633c <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006236:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8006238:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 800623c:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8006240:	4a56      	ldr	r2, [pc, #344]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8006242:	f040 809e 	bne.w	8006382 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8006246:	6891      	ldr	r1, [r2, #8]
 8006248:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 800624c:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006250:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8006254:	4301      	orrs	r1, r0
 8006256:	6091      	str	r1, [r2, #8]
 8006258:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 800625a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800625e:	430b      	orrs	r3, r1
 8006260:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006262:	6823      	ldr	r3, [r4, #0]
 8006264:	06db      	lsls	r3, r3, #27
 8006266:	f100 8090 	bmi.w	800638a <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 800626a:	2000      	movs	r0, #0
 800626c:	e04f      	b.n	800630e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800626e:	4b4a      	ldr	r3, [pc, #296]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006270:	4e4a      	ldr	r6, [pc, #296]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006272:	2200      	movs	r2, #0
 8006274:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8006276:	f7fd ff1f 	bl	80040b8 <HAL_GetTick>
 800627a:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800627c:	6833      	ldr	r3, [r6, #0]
 800627e:	011f      	lsls	r7, r3, #4
 8006280:	d43f      	bmi.n	8006302 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006282:	6821      	ldr	r1, [r4, #0]
 8006284:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8006286:	bf41      	itttt	mi
 8006288:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800628c:	071b      	lslmi	r3, r3, #28
 800628e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006292:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006296:	078a      	lsls	r2, r1, #30
 8006298:	d515      	bpl.n	80062c6 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800629a:	4a40      	ldr	r2, [pc, #256]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800629c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800629e:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 80062a2:	6865      	ldr	r5, [r4, #4]
 80062a4:	061b      	lsls	r3, r3, #24
 80062a6:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 80062aa:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80062ae:	4303      	orrs	r3, r0
 80062b0:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80062b4:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 80062b8:	69e3      	ldr	r3, [r4, #28]
 80062ba:	f020 001f 	bic.w	r0, r0, #31
 80062be:	3b01      	subs	r3, #1
 80062c0:	4303      	orrs	r3, r0
 80062c2:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80062c6:	064b      	lsls	r3, r1, #25
 80062c8:	d50a      	bpl.n	80062e0 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 80062ca:	68e3      	ldr	r3, [r4, #12]
 80062cc:	6862      	ldr	r2, [r4, #4]
 80062ce:	061b      	lsls	r3, r3, #24
 80062d0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80062d4:	68a2      	ldr	r2, [r4, #8]
 80062d6:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80062da:	4a30      	ldr	r2, [pc, #192]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 80062dc:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80062e0:	4b2d      	ldr	r3, [pc, #180]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80062e2:	4e2e      	ldr	r6, [pc, #184]	@ (800639c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 80062e4:	2201      	movs	r2, #1
 80062e6:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 80062e8:	f7fd fee6 	bl	80040b8 <HAL_GetTick>
 80062ec:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80062ee:	6833      	ldr	r3, [r6, #0]
 80062f0:	011f      	lsls	r7, r3, #4
 80062f2:	f53f af34 	bmi.w	800615e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80062f6:	f7fd fedf 	bl	80040b8 <HAL_GetTick>
 80062fa:	1b40      	subs	r0, r0, r5
 80062fc:	2802      	cmp	r0, #2
 80062fe:	d9f6      	bls.n	80062ee <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8006300:	e004      	b.n	800630c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8006302:	f7fd fed9 	bl	80040b8 <HAL_GetTick>
 8006306:	1b40      	subs	r0, r0, r5
 8006308:	2802      	cmp	r0, #2
 800630a:	d9b7      	bls.n	800627c <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800630c:	2003      	movs	r0, #3
}
 800630e:	b003      	add	sp, #12
 8006310:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8006312:	f7fd fed1 	bl	80040b8 <HAL_GetTick>
 8006316:	1b80      	subs	r0, r0, r6
 8006318:	2802      	cmp	r0, #2
 800631a:	f67f af2b 	bls.w	8006174 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800631e:	e7f5      	b.n	800630c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8006320:	f7fd feca 	bl	80040b8 <HAL_GetTick>
 8006324:	1b40      	subs	r0, r0, r5
 8006326:	2802      	cmp	r0, #2
 8006328:	f67f af5f 	bls.w	80061ea <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800632c:	e7ee      	b.n	800630c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800632e:	f7fd fec3 	bl	80040b8 <HAL_GetTick>
 8006332:	1b80      	subs	r0, r0, r6
 8006334:	2802      	cmp	r0, #2
 8006336:	f67f af73 	bls.w	8006220 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800633a:	e7e7      	b.n	800630c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800633c:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8006340:	4293      	cmp	r3, r2
 8006342:	f43f af78 	beq.w	8006236 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006346:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006348:	4a13      	ldr	r2, [pc, #76]	@ (8006398 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800634a:	2101      	movs	r1, #1
 800634c:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006350:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006354:	2100      	movs	r1, #0
 8006356:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 800635a:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800635c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800635e:	07d9      	lsls	r1, r3, #31
 8006360:	f57f af69 	bpl.w	8006236 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8006364:	f7fd fea8 	bl	80040b8 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006368:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 800636c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800636e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006370:	079a      	lsls	r2, r3, #30
 8006372:	f53f af60 	bmi.w	8006236 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006376:	f7fd fe9f 	bl	80040b8 <HAL_GetTick>
 800637a:	1b80      	subs	r0, r0, r6
 800637c:	42b8      	cmp	r0, r7
 800637e:	d9f6      	bls.n	800636e <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8006380:	e7c4      	b.n	800630c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006382:	6891      	ldr	r1, [r2, #8]
 8006384:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006388:	e765      	b.n	8006256 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800638a:	4b06      	ldr	r3, [pc, #24]	@ (80063a4 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800638c:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8006390:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8006394:	e769      	b.n	800626a <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8006396:	bf00      	nop
 8006398:	42470000 	.word	0x42470000
 800639c:	40023800 	.word	0x40023800
 80063a0:	40007000 	.word	0x40007000
 80063a4:	42471000 	.word	0x42471000

080063a8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80063a8:	b538      	push	{r3, r4, r5, lr}
 80063aa:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80063ac:	4604      	mov	r4, r0
 80063ae:	b1c8      	cbz	r0, 80063e4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 80063b0:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80063b4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80063b8:	b91b      	cbnz	r3, 80063c2 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80063ba:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80063be:	f7fc fb39 	bl	8002a34 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80063c2:	2302      	movs	r3, #2
 80063c4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80063c8:	1d21      	adds	r1, r4, #4
 80063ca:	6820      	ldr	r0, [r4, #0]
 80063cc:	f000 fe43 	bl	8007056 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 80063d0:	6862      	ldr	r2, [r4, #4]
 80063d2:	6820      	ldr	r0, [r4, #0]
 80063d4:	4629      	mov	r1, r5
 80063d6:	f000 fe74 	bl	80070c2 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80063da:	2301      	movs	r3, #1
 80063dc:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 80063e0:	2000      	movs	r0, #0
}
 80063e2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80063e4:	2001      	movs	r0, #1
 80063e6:	e7fc      	b.n	80063e2 <HAL_SDRAM_Init+0x3a>

080063e8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80063e8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80063ea:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 80063ee:	2b02      	cmp	r3, #2
{
 80063f0:	4605      	mov	r5, r0
 80063f2:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80063f4:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80063f6:	d012      	beq.n	800641e <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80063f8:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 80063fc:	2c01      	cmp	r4, #1
 80063fe:	d10f      	bne.n	8006420 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006400:	2302      	movs	r3, #2
 8006402:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006406:	6828      	ldr	r0, [r5, #0]
 8006408:	f000 fe91 	bl	800712e <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800640c:	6833      	ldr	r3, [r6, #0]
 800640e:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006410:	bf06      	itte	eq
 8006412:	2305      	moveq	r3, #5
 8006414:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006418:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800641c:	2000      	movs	r0, #0
}
 800641e:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8006420:	2001      	movs	r0, #1
 8006422:	e7fc      	b.n	800641e <HAL_SDRAM_SendCommand+0x36>

08006424 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006424:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006426:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800642a:	2b02      	cmp	r3, #2
{
 800642c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800642e:	b2d8      	uxtb	r0, r3
 8006430:	d00d      	beq.n	800644e <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006432:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8006436:	2b01      	cmp	r3, #1
 8006438:	b2dd      	uxtb	r5, r3
 800643a:	d109      	bne.n	8006450 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800643c:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800643e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006440:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006444:	f000 fe97 	bl	8007176 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006448:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800644c:	2000      	movs	r0, #0
}
 800644e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006450:	2001      	movs	r0, #1
 8006452:	e7fc      	b.n	800644e <HAL_SDRAM_ProgramRefreshRate+0x2a>

08006454 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006454:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006458:	461f      	mov	r7, r3
 800645a:	4689      	mov	r9, r1
 800645c:	4690      	mov	r8, r2
 800645e:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006460:	f7fd fe2a 	bl	80040b8 <HAL_GetTick>
 8006464:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8006466:	443d      	add	r5, r7
 8006468:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800646a:	f7fd fe25 	bl	80040b8 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800646e:	4b26      	ldr	r3, [pc, #152]	@ (8006508 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8006470:	681e      	ldr	r6, [r3, #0]
 8006472:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8006476:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8006478:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800647a:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800647c:	6822      	ldr	r2, [r4, #0]
 800647e:	6893      	ldr	r3, [r2, #8]
 8006480:	ea39 0303 	bics.w	r3, r9, r3
 8006484:	bf0c      	ite	eq
 8006486:	2301      	moveq	r3, #1
 8006488:	2300      	movne	r3, #0
 800648a:	4543      	cmp	r3, r8
 800648c:	d101      	bne.n	8006492 <SPI_WaitFlagStateUntilTimeout+0x3e>
        count--;
      }
    }
  }

  return HAL_OK;
 800648e:	2000      	movs	r0, #0
 8006490:	e02e      	b.n	80064f0 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 8006492:	1c7b      	adds	r3, r7, #1
 8006494:	d0f3      	beq.n	800647e <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006496:	f7fd fe0f 	bl	80040b8 <HAL_GetTick>
 800649a:	eba0 000a 	sub.w	r0, r0, sl
 800649e:	42a8      	cmp	r0, r5
 80064a0:	d329      	bcc.n	80064f6 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80064a2:	6823      	ldr	r3, [r4, #0]
 80064a4:	685a      	ldr	r2, [r3, #4]
 80064a6:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80064aa:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80064ac:	6862      	ldr	r2, [r4, #4]
 80064ae:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80064b2:	d10a      	bne.n	80064ca <SPI_WaitFlagStateUntilTimeout+0x76>
 80064b4:	68a2      	ldr	r2, [r4, #8]
 80064b6:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 80064ba:	d002      	beq.n	80064c2 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80064bc:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80064c0:	d103      	bne.n	80064ca <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 80064c2:	681a      	ldr	r2, [r3, #0]
 80064c4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80064c8:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80064ca:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80064cc:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 80064d0:	d107      	bne.n	80064e2 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 80064d2:	681a      	ldr	r2, [r3, #0]
 80064d4:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80064d8:	601a      	str	r2, [r3, #0]
 80064da:	681a      	ldr	r2, [r3, #0]
 80064dc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80064e0:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80064e2:	2301      	movs	r3, #1
 80064e4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80064e8:	2300      	movs	r3, #0
 80064ea:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 80064ee:	2003      	movs	r0, #3
}
 80064f0:	b002      	add	sp, #8
 80064f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 80064f6:	9b01      	ldr	r3, [sp, #4]
 80064f8:	b11b      	cbz	r3, 8006502 <SPI_WaitFlagStateUntilTimeout+0xae>
        count--;
 80064fa:	9b01      	ldr	r3, [sp, #4]
 80064fc:	3b01      	subs	r3, #1
 80064fe:	9301      	str	r3, [sp, #4]
 8006500:	e7bc      	b.n	800647c <SPI_WaitFlagStateUntilTimeout+0x28>
        tmp_timeout = 0U;
 8006502:	461d      	mov	r5, r3
 8006504:	e7ba      	b.n	800647c <SPI_WaitFlagStateUntilTimeout+0x28>
 8006506:	bf00      	nop
 8006508:	200000c4 	.word	0x200000c4

0800650c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800650c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800650e:	b085      	sub	sp, #20
  __IO uint32_t count;

  /* Wait until TXE flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006510:	460b      	mov	r3, r1
 8006512:	9200      	str	r2, [sp, #0]
{
 8006514:	460e      	mov	r6, r1
 8006516:	4617      	mov	r7, r2
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006518:	2102      	movs	r1, #2
 800651a:	2201      	movs	r2, #1
{
 800651c:	4604      	mov	r4, r0
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800651e:	f7ff ff99 	bl	8006454 <SPI_WaitFlagStateUntilTimeout>
 8006522:	4605      	mov	r5, r0
 8006524:	b128      	cbz	r0, 8006532 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006526:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006528:	f043 0320 	orr.w	r3, r3, #32
 800652c:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 800652e:	2503      	movs	r5, #3
 8006530:	e015      	b.n	800655e <SPI_EndRxTxTransaction+0x52>
  count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006532:	4b12      	ldr	r3, [pc, #72]	@ (800657c <SPI_EndRxTxTransaction+0x70>)
 8006534:	6818      	ldr	r0, [r3, #0]
 8006536:	4b12      	ldr	r3, [pc, #72]	@ (8006580 <SPI_EndRxTxTransaction+0x74>)
 8006538:	fbb0 f0f3 	udiv	r0, r0, r3
 800653c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8006540:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006542:	6863      	ldr	r3, [r4, #4]
  count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006544:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006546:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800654a:	d10b      	bne.n	8006564 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800654c:	9700      	str	r7, [sp, #0]
 800654e:	4633      	mov	r3, r6
 8006550:	462a      	mov	r2, r5
 8006552:	2180      	movs	r1, #128	@ 0x80
 8006554:	4620      	mov	r0, r4
 8006556:	f7ff ff7d 	bl	8006454 <SPI_WaitFlagStateUntilTimeout>
 800655a:	2800      	cmp	r0, #0
 800655c:	d1e3      	bne.n	8006526 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800655e:	4628      	mov	r0, r5
 8006560:	b005      	add	sp, #20
 8006562:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8006564:	9b03      	ldr	r3, [sp, #12]
 8006566:	2b00      	cmp	r3, #0
 8006568:	d0f9      	beq.n	800655e <SPI_EndRxTxTransaction+0x52>
      count--;
 800656a:	9b03      	ldr	r3, [sp, #12]
 800656c:	3b01      	subs	r3, #1
 800656e:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006570:	6823      	ldr	r3, [r4, #0]
 8006572:	689b      	ldr	r3, [r3, #8]
 8006574:	061b      	lsls	r3, r3, #24
 8006576:	d4f5      	bmi.n	8006564 <SPI_EndRxTxTransaction+0x58>
 8006578:	e7f1      	b.n	800655e <SPI_EndRxTxTransaction+0x52>
 800657a:	bf00      	nop
 800657c:	200000c4 	.word	0x200000c4
 8006580:	016e3600 	.word	0x016e3600

08006584 <SPI_EndRxTransaction>:
{
 8006584:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006586:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006588:	6841      	ldr	r1, [r0, #4]
 800658a:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 800658e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006590:	d008      	beq.n	80065a4 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006592:	9200      	str	r2, [sp, #0]
 8006594:	2101      	movs	r1, #1
 8006596:	2200      	movs	r2, #0
 8006598:	f7ff ff5c 	bl	8006454 <SPI_WaitFlagStateUntilTimeout>
 800659c:	b9d0      	cbnz	r0, 80065d4 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 800659e:	2000      	movs	r0, #0
}
 80065a0:	b003      	add	sp, #12
 80065a2:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80065a4:	6881      	ldr	r1, [r0, #8]
 80065a6:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 80065aa:	d002      	beq.n	80065b2 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80065ac:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 80065b0:	d107      	bne.n	80065c2 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 80065b2:	6825      	ldr	r5, [r4, #0]
 80065b4:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80065b6:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 80065ba:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 80065be:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80065c0:	d004      	beq.n	80065cc <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80065c2:	9200      	str	r2, [sp, #0]
 80065c4:	2180      	movs	r1, #128	@ 0x80
 80065c6:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80065c8:	4620      	mov	r0, r4
 80065ca:	e7e5      	b.n	8006598 <SPI_EndRxTransaction+0x14>
 80065cc:	9200      	str	r2, [sp, #0]
 80065ce:	2101      	movs	r1, #1
 80065d0:	2200      	movs	r2, #0
 80065d2:	e7f9      	b.n	80065c8 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80065d4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80065d6:	f043 0320 	orr.w	r3, r3, #32
 80065da:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 80065dc:	2003      	movs	r0, #3
 80065de:	e7df      	b.n	80065a0 <SPI_EndRxTransaction+0x1c>

080065e0 <HAL_SPI_Init>:
{
 80065e0:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80065e2:	4604      	mov	r4, r0
 80065e4:	2800      	cmp	r0, #0
 80065e6:	d055      	beq.n	8006694 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80065e8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80065ea:	2b00      	cmp	r3, #0
 80065ec:	d14e      	bne.n	800668c <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80065ee:	6842      	ldr	r2, [r0, #4]
 80065f0:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80065f4:	d000      	beq.n	80065f8 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80065f6:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80065f8:	2300      	movs	r3, #0
 80065fa:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80065fc:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006600:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006604:	b923      	cbnz	r3, 8006610 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8006606:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 800660a:	4620      	mov	r0, r4
 800660c:	f7fc f9a6 	bl	800295c <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006610:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006612:	68a0      	ldr	r0, [r4, #8]
 8006614:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8006616:	2302      	movs	r3, #2
 8006618:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 800661c:	680b      	ldr	r3, [r1, #0]
 800661e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006622:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006624:	6863      	ldr	r3, [r4, #4]
 8006626:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 800662a:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800662e:	4303      	orrs	r3, r0
 8006630:	68e0      	ldr	r0, [r4, #12]
 8006632:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 8006636:	4303      	orrs	r3, r0
 8006638:	6920      	ldr	r0, [r4, #16]
 800663a:	f000 0002 	and.w	r0, r0, #2
 800663e:	4303      	orrs	r3, r0
 8006640:	6960      	ldr	r0, [r4, #20]
 8006642:	f000 0001 	and.w	r0, r0, #1
 8006646:	4303      	orrs	r3, r0
 8006648:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 800664c:	4303      	orrs	r3, r0
 800664e:	69e0      	ldr	r0, [r4, #28]
 8006650:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8006654:	4303      	orrs	r3, r0
 8006656:	6a20      	ldr	r0, [r4, #32]
 8006658:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 800665c:	4303      	orrs	r3, r0
 800665e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006660:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8006664:	4303      	orrs	r3, r0
 8006666:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8006668:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800666a:	0c12      	lsrs	r2, r2, #16
 800666c:	f003 0310 	and.w	r3, r3, #16
 8006670:	f002 0204 	and.w	r2, r2, #4
 8006674:	431a      	orrs	r2, r3
 8006676:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006678:	69cb      	ldr	r3, [r1, #28]
 800667a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800667e:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006680:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8006682:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006684:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8006686:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 800668a:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800668c:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800668e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006692:	e7b1      	b.n	80065f8 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8006694:	2001      	movs	r0, #1
 8006696:	e7f8      	b.n	800668a <HAL_SPI_Init+0xaa>

08006698 <HAL_SPI_Transmit>:
{
 8006698:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800669c:	4604      	mov	r4, r0
 800669e:	461f      	mov	r7, r3
 80066a0:	460d      	mov	r5, r1
 80066a2:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 80066a4:	f7fd fd08 	bl	80040b8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80066a8:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80066ac:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80066ae:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80066b0:	b2d8      	uxtb	r0, r3
 80066b2:	f040 809f 	bne.w	80067f4 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 80066b6:	2d00      	cmp	r5, #0
 80066b8:	d074      	beq.n	80067a4 <HAL_SPI_Transmit+0x10c>
 80066ba:	f1b8 0f00 	cmp.w	r8, #0
 80066be:	d071      	beq.n	80067a4 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 80066c0:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80066c4:	2b01      	cmp	r3, #1
 80066c6:	f000 8095 	beq.w	80067f4 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80066ca:	2303      	movs	r3, #3
 80066cc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80066d0:	2300      	movs	r3, #0
 80066d2:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 80066d4:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 80066d8:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80066dc:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 80066de:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 80066e0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80066e2:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 80066e4:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 80066e6:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80066ea:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 80066ee:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 80066f0:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80066f4:	d107      	bne.n	8006706 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 80066f6:	6833      	ldr	r3, [r6, #0]
 80066f8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80066fc:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 80066fe:	6833      	ldr	r3, [r6, #0]
 8006700:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8006704:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006706:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006708:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800670a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 800670c:	bf5e      	ittt	pl
 800670e:	6833      	ldrpl	r3, [r6, #0]
 8006710:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8006714:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006716:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800671a:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800671c:	d145      	bne.n	80067aa <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800671e:	b113      	cbz	r3, 8006726 <HAL_SPI_Transmit+0x8e>
 8006720:	f1b8 0f01 	cmp.w	r8, #1
 8006724:	d107      	bne.n	8006736 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006726:	f835 3b02 	ldrh.w	r3, [r5], #2
 800672a:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800672c:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800672e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006730:	3b01      	subs	r3, #1
 8006732:	b29b      	uxth	r3, r3
 8006734:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8006736:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006738:	b29b      	uxth	r3, r3
 800673a:	b9d3      	cbnz	r3, 8006772 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800673c:	464a      	mov	r2, r9
 800673e:	4639      	mov	r1, r7
 8006740:	4620      	mov	r0, r4
 8006742:	f7ff fee3 	bl	800650c <SPI_EndRxTxTransaction>
 8006746:	2800      	cmp	r0, #0
 8006748:	d151      	bne.n	80067ee <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800674a:	68a3      	ldr	r3, [r4, #8]
 800674c:	b933      	cbnz	r3, 800675c <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800674e:	9301      	str	r3, [sp, #4]
 8006750:	6823      	ldr	r3, [r4, #0]
 8006752:	68da      	ldr	r2, [r3, #12]
 8006754:	9201      	str	r2, [sp, #4]
 8006756:	689b      	ldr	r3, [r3, #8]
 8006758:	9301      	str	r3, [sp, #4]
 800675a:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800675c:	2301      	movs	r3, #1
 800675e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006762:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8006764:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006766:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8006768:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800676c:	bf18      	it	ne
 800676e:	2001      	movne	r0, #1
 8006770:	e018      	b.n	80067a4 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006772:	6822      	ldr	r2, [r4, #0]
 8006774:	6893      	ldr	r3, [r2, #8]
 8006776:	0798      	lsls	r0, r3, #30
 8006778:	d505      	bpl.n	8006786 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800677a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800677c:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006780:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006782:	6323      	str	r3, [r4, #48]	@ 0x30
 8006784:	e7d3      	b.n	800672e <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006786:	f7fd fc97 	bl	80040b8 <HAL_GetTick>
 800678a:	eba0 0009 	sub.w	r0, r0, r9
 800678e:	42b8      	cmp	r0, r7
 8006790:	d3d1      	bcc.n	8006736 <HAL_SPI_Transmit+0x9e>
 8006792:	1c79      	adds	r1, r7, #1
 8006794:	d0cf      	beq.n	8006736 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 8006796:	2301      	movs	r3, #1
 8006798:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800679c:	2300      	movs	r3, #0
 800679e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 80067a2:	2003      	movs	r0, #3
}
 80067a4:	b003      	add	sp, #12
 80067a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80067aa:	b113      	cbz	r3, 80067b2 <HAL_SPI_Transmit+0x11a>
 80067ac:	f1b8 0f01 	cmp.w	r8, #1
 80067b0:	d108      	bne.n	80067c4 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80067b2:	782b      	ldrb	r3, [r5, #0]
 80067b4:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80067b6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80067b8:	3301      	adds	r3, #1
 80067ba:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80067bc:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80067be:	3b01      	subs	r3, #1
 80067c0:	b29b      	uxth	r3, r3
 80067c2:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 80067c4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80067c6:	b29b      	uxth	r3, r3
 80067c8:	2b00      	cmp	r3, #0
 80067ca:	d0b7      	beq.n	800673c <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80067cc:	6823      	ldr	r3, [r4, #0]
 80067ce:	689a      	ldr	r2, [r3, #8]
 80067d0:	0792      	lsls	r2, r2, #30
 80067d2:	d503      	bpl.n	80067dc <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80067d4:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80067d6:	7812      	ldrb	r2, [r2, #0]
 80067d8:	731a      	strb	r2, [r3, #12]
 80067da:	e7ec      	b.n	80067b6 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80067dc:	f7fd fc6c 	bl	80040b8 <HAL_GetTick>
 80067e0:	eba0 0009 	sub.w	r0, r0, r9
 80067e4:	42b8      	cmp	r0, r7
 80067e6:	d3ed      	bcc.n	80067c4 <HAL_SPI_Transmit+0x12c>
 80067e8:	1c7b      	adds	r3, r7, #1
 80067ea:	d0eb      	beq.n	80067c4 <HAL_SPI_Transmit+0x12c>
 80067ec:	e7d3      	b.n	8006796 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80067ee:	2320      	movs	r3, #32
 80067f0:	6563      	str	r3, [r4, #84]	@ 0x54
 80067f2:	e7aa      	b.n	800674a <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 80067f4:	2002      	movs	r0, #2
 80067f6:	e7d5      	b.n	80067a4 <HAL_SPI_Transmit+0x10c>

080067f8 <HAL_SPI_TransmitReceive>:
{
 80067f8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80067fc:	4604      	mov	r4, r0
 80067fe:	460d      	mov	r5, r1
 8006800:	4691      	mov	r9, r2
 8006802:	461e      	mov	r6, r3
 8006804:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 8006808:	f7fd fc56 	bl	80040b8 <HAL_GetTick>
  tmp_state           = hspi->State;
 800680c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8006810:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006812:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006814:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8006816:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006818:	d00a      	beq.n	8006830 <HAL_SPI_TransmitReceive+0x38>
 800681a:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800681e:	f040 80e5 	bne.w	80069ec <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) &&
 8006822:	68a3      	ldr	r3, [r4, #8]
 8006824:	2b00      	cmp	r3, #0
 8006826:	f040 80e1 	bne.w	80069ec <HAL_SPI_TransmitReceive+0x1f4>
 800682a:	2904      	cmp	r1, #4
 800682c:	f040 80de 	bne.w	80069ec <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006830:	2d00      	cmp	r5, #0
 8006832:	d04b      	beq.n	80068cc <HAL_SPI_TransmitReceive+0xd4>
 8006834:	f1b9 0f00 	cmp.w	r9, #0
 8006838:	d048      	beq.n	80068cc <HAL_SPI_TransmitReceive+0xd4>
 800683a:	2e00      	cmp	r6, #0
 800683c:	d046      	beq.n	80068cc <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 800683e:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006842:	2b01      	cmp	r3, #1
 8006844:	f000 80d2 	beq.w	80069ec <HAL_SPI_TransmitReceive+0x1f4>
 8006848:	2301      	movs	r3, #1
 800684a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800684e:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006852:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006856:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006858:	bf1c      	itt	ne
 800685a:	2305      	movne	r3, #5
 800685c:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006860:	2300      	movs	r3, #0
 8006862:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8006864:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006868:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800686a:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 800686c:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800686e:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8006870:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006872:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006874:	bf58      	it	pl
 8006876:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8006878:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 800687a:	bf58      	it	pl
 800687c:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8006880:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8006882:	bf58      	it	pl
 8006884:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006886:	68e1      	ldr	r1, [r4, #12]
 8006888:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 800688c:	d155      	bne.n	800693a <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800688e:	b10a      	cbz	r2, 8006894 <HAL_SPI_TransmitReceive+0x9c>
 8006890:	2e01      	cmp	r6, #1
 8006892:	d107      	bne.n	80068a4 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006894:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006898:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800689a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800689c:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800689e:	3b01      	subs	r3, #1
 80068a0:	b29b      	uxth	r3, r3
 80068a2:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 80068a4:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80068a6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80068a8:	b29b      	uxth	r3, r3
 80068aa:	b98b      	cbnz	r3, 80068d0 <HAL_SPI_TransmitReceive+0xd8>
 80068ac:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80068ae:	b29b      	uxth	r3, r3
 80068b0:	b973      	cbnz	r3, 80068d0 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80068b2:	463a      	mov	r2, r7
 80068b4:	4641      	mov	r1, r8
 80068b6:	4620      	mov	r0, r4
 80068b8:	f7ff fe28 	bl	800650c <SPI_EndRxTxTransaction>
 80068bc:	2800      	cmp	r0, #0
 80068be:	f000 8081 	beq.w	80069c4 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80068c2:	2320      	movs	r3, #32
 80068c4:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80068c6:	2300      	movs	r3, #0
 80068c8:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 80068cc:	2001      	movs	r0, #1
 80068ce:	e031      	b.n	8006934 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80068d0:	6821      	ldr	r1, [r4, #0]
 80068d2:	688b      	ldr	r3, [r1, #8]
 80068d4:	079a      	lsls	r2, r3, #30
 80068d6:	d50d      	bpl.n	80068f4 <HAL_SPI_TransmitReceive+0xfc>
 80068d8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80068da:	b29b      	uxth	r3, r3
 80068dc:	b153      	cbz	r3, 80068f4 <HAL_SPI_TransmitReceive+0xfc>
 80068de:	b145      	cbz	r5, 80068f2 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80068e0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80068e2:	f833 2b02 	ldrh.w	r2, [r3], #2
 80068e6:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80068e8:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80068ea:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80068ec:	3b01      	subs	r3, #1
 80068ee:	b29b      	uxth	r3, r3
 80068f0:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 80068f2:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80068f4:	688a      	ldr	r2, [r1, #8]
 80068f6:	f012 0201 	ands.w	r2, r2, #1
 80068fa:	d00c      	beq.n	8006916 <HAL_SPI_TransmitReceive+0x11e>
 80068fc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80068fe:	b29b      	uxth	r3, r3
 8006900:	b14b      	cbz	r3, 8006916 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006902:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006904:	68c9      	ldr	r1, [r1, #12]
 8006906:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800690a:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800690c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800690e:	3b01      	subs	r3, #1
 8006910:	b29b      	uxth	r3, r3
 8006912:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8006914:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006916:	f7fd fbcf 	bl	80040b8 <HAL_GetTick>
 800691a:	1bc0      	subs	r0, r0, r7
 800691c:	4540      	cmp	r0, r8
 800691e:	d3c2      	bcc.n	80068a6 <HAL_SPI_TransmitReceive+0xae>
 8006920:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006924:	d0bf      	beq.n	80068a6 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 8006926:	2301      	movs	r3, #1
 8006928:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800692c:	2300      	movs	r3, #0
 800692e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006932:	2003      	movs	r0, #3
}
 8006934:	b003      	add	sp, #12
 8006936:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800693a:	b10a      	cbz	r2, 8006940 <HAL_SPI_TransmitReceive+0x148>
 800693c:	2e01      	cmp	r6, #1
 800693e:	d108      	bne.n	8006952 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006940:	782a      	ldrb	r2, [r5, #0]
 8006942:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006944:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006946:	3301      	adds	r3, #1
 8006948:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800694a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800694c:	3b01      	subs	r3, #1
 800694e:	b29b      	uxth	r3, r3
 8006950:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006952:	2501      	movs	r5, #1
 8006954:	e02d      	b.n	80069b2 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006956:	6822      	ldr	r2, [r4, #0]
 8006958:	6893      	ldr	r3, [r2, #8]
 800695a:	079b      	lsls	r3, r3, #30
 800695c:	d50e      	bpl.n	800697c <HAL_SPI_TransmitReceive+0x184>
 800695e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006960:	b29b      	uxth	r3, r3
 8006962:	b15b      	cbz	r3, 800697c <HAL_SPI_TransmitReceive+0x184>
 8006964:	b14d      	cbz	r5, 800697a <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 8006966:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006968:	781b      	ldrb	r3, [r3, #0]
 800696a:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800696c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800696e:	3301      	adds	r3, #1
 8006970:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006972:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006974:	3b01      	subs	r3, #1
 8006976:	b29b      	uxth	r3, r3
 8006978:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800697a:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800697c:	6822      	ldr	r2, [r4, #0]
 800697e:	6891      	ldr	r1, [r2, #8]
 8006980:	f011 0101 	ands.w	r1, r1, #1
 8006984:	d00d      	beq.n	80069a2 <HAL_SPI_TransmitReceive+0x1aa>
 8006986:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006988:	b29b      	uxth	r3, r3
 800698a:	b153      	cbz	r3, 80069a2 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800698c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800698e:	68d2      	ldr	r2, [r2, #12]
 8006990:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006992:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006994:	3301      	adds	r3, #1
 8006996:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006998:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800699a:	3b01      	subs	r3, #1
 800699c:	b29b      	uxth	r3, r3
 800699e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 80069a0:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80069a2:	f7fd fb89 	bl	80040b8 <HAL_GetTick>
 80069a6:	1bc0      	subs	r0, r0, r7
 80069a8:	4540      	cmp	r0, r8
 80069aa:	d302      	bcc.n	80069b2 <HAL_SPI_TransmitReceive+0x1ba>
 80069ac:	f1b8 3fff 	cmp.w	r8, #4294967295
 80069b0:	d1b9      	bne.n	8006926 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80069b2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80069b4:	b29b      	uxth	r3, r3
 80069b6:	2b00      	cmp	r3, #0
 80069b8:	d1cd      	bne.n	8006956 <HAL_SPI_TransmitReceive+0x15e>
 80069ba:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80069bc:	b29b      	uxth	r3, r3
 80069be:	2b00      	cmp	r3, #0
 80069c0:	d1c9      	bne.n	8006956 <HAL_SPI_TransmitReceive+0x15e>
 80069c2:	e776      	b.n	80068b2 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80069c4:	68a3      	ldr	r3, [r4, #8]
 80069c6:	b933      	cbnz	r3, 80069d6 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80069c8:	9301      	str	r3, [sp, #4]
 80069ca:	6823      	ldr	r3, [r4, #0]
 80069cc:	68da      	ldr	r2, [r3, #12]
 80069ce:	9201      	str	r2, [sp, #4]
 80069d0:	689b      	ldr	r3, [r3, #8]
 80069d2:	9301      	str	r3, [sp, #4]
 80069d4:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 80069d6:	2301      	movs	r3, #1
 80069d8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80069dc:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80069de:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80069e0:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 80069e2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80069e6:	bf18      	it	ne
 80069e8:	2001      	movne	r0, #1
 80069ea:	e7a3      	b.n	8006934 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 80069ec:	2002      	movs	r0, #2
 80069ee:	e7a1      	b.n	8006934 <HAL_SPI_TransmitReceive+0x13c>

080069f0 <HAL_SPI_Receive>:
{
 80069f0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80069f4:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 80069f6:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 80069fa:	2b01      	cmp	r3, #1
{
 80069fc:	4604      	mov	r4, r0
 80069fe:	4689      	mov	r9, r1
 8006a00:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 8006a02:	b2dd      	uxtb	r5, r3
 8006a04:	d004      	beq.n	8006a10 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 8006a06:	2502      	movs	r5, #2
}
 8006a08:	4628      	mov	r0, r5
 8006a0a:	b003      	add	sp, #12
 8006a0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((pData == NULL) || (Size == 0U))
 8006a10:	2900      	cmp	r1, #0
 8006a12:	d0f9      	beq.n	8006a08 <HAL_SPI_Receive+0x18>
 8006a14:	2a00      	cmp	r2, #0
 8006a16:	d0f7      	beq.n	8006a08 <HAL_SPI_Receive+0x18>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006a18:	6843      	ldr	r3, [r0, #4]
 8006a1a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006a1e:	d10b      	bne.n	8006a38 <HAL_SPI_Receive+0x48>
 8006a20:	6883      	ldr	r3, [r0, #8]
 8006a22:	b94b      	cbnz	r3, 8006a38 <HAL_SPI_Receive+0x48>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006a24:	2304      	movs	r3, #4
 8006a26:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006a2a:	4613      	mov	r3, r2
 8006a2c:	9600      	str	r6, [sp, #0]
 8006a2e:	460a      	mov	r2, r1
 8006a30:	f7ff fee2 	bl	80067f8 <HAL_SPI_TransmitReceive>
 8006a34:	4605      	mov	r5, r0
 8006a36:	e7e7      	b.n	8006a08 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 8006a38:	f7fd fb3e 	bl	80040b8 <HAL_GetTick>
  __HAL_LOCK(hspi);
 8006a3c:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8006a40:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006a42:	4680      	mov	r8, r0
  __HAL_LOCK(hspi);
 8006a44:	d0df      	beq.n	8006a06 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a46:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006a48:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 8006a4c:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006a4e:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 8006a50:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a54:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006a58:	f04f 0304 	mov.w	r3, #4
 8006a5c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8006a60:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006a64:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8006a66:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006a68:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8006a6a:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006a6c:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006a6e:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8006a70:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a72:	d107      	bne.n	8006a84 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 8006a74:	681a      	ldr	r2, [r3, #0]
 8006a76:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006a7a:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006a7c:	681a      	ldr	r2, [r3, #0]
 8006a7e:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006a82:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006a84:	681a      	ldr	r2, [r3, #0]
 8006a86:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006a88:	bf5e      	ittt	pl
 8006a8a:	681a      	ldrpl	r2, [r3, #0]
 8006a8c:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8006a90:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006a92:	68e3      	ldr	r3, [r4, #12]
 8006a94:	b1f3      	cbz	r3, 8006ad4 <HAL_SPI_Receive+0xe4>
    while (hspi->RxXferCount > 0U)
 8006a96:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006a98:	b29b      	uxth	r3, r3
 8006a9a:	b1fb      	cbz	r3, 8006adc <HAL_SPI_Receive+0xec>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006a9c:	6823      	ldr	r3, [r4, #0]
 8006a9e:	689a      	ldr	r2, [r3, #8]
 8006aa0:	07d2      	lsls	r2, r2, #31
 8006aa2:	d53c      	bpl.n	8006b1e <HAL_SPI_Receive+0x12e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006aa4:	68da      	ldr	r2, [r3, #12]
 8006aa6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006aa8:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006aac:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006aae:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006ab0:	3b01      	subs	r3, #1
 8006ab2:	b29b      	uxth	r3, r3
 8006ab4:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8006ab6:	e7ee      	b.n	8006a96 <HAL_SPI_Receive+0xa6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006ab8:	6823      	ldr	r3, [r4, #0]
 8006aba:	689a      	ldr	r2, [r3, #8]
 8006abc:	07d0      	lsls	r0, r2, #31
 8006abe:	d51e      	bpl.n	8006afe <HAL_SPI_Receive+0x10e>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006ac0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8006ac2:	7b1b      	ldrb	r3, [r3, #12]
 8006ac4:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006ac6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006ac8:	3301      	adds	r3, #1
 8006aca:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006acc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006ace:	3b01      	subs	r3, #1
 8006ad0:	b29b      	uxth	r3, r3
 8006ad2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8006ad4:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006ad6:	b29b      	uxth	r3, r3
 8006ad8:	2b00      	cmp	r3, #0
 8006ada:	d1ed      	bne.n	8006ab8 <HAL_SPI_Receive+0xc8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006adc:	4642      	mov	r2, r8
 8006ade:	4631      	mov	r1, r6
 8006ae0:	4620      	mov	r0, r4
 8006ae2:	f7ff fd4f 	bl	8006584 <SPI_EndRxTransaction>
 8006ae6:	bb18      	cbnz	r0, 8006b30 <HAL_SPI_Receive+0x140>
  hspi->State = HAL_SPI_STATE_READY;
 8006ae8:	2301      	movs	r3, #1
 8006aea:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006aee:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8006af0:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006af2:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 8006af4:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006af8:	bf18      	it	ne
 8006afa:	2501      	movne	r5, #1
 8006afc:	e784      	b.n	8006a08 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006afe:	f7fd fadb 	bl	80040b8 <HAL_GetTick>
 8006b02:	eba0 0008 	sub.w	r0, r0, r8
 8006b06:	42b0      	cmp	r0, r6
 8006b08:	d3e4      	bcc.n	8006ad4 <HAL_SPI_Receive+0xe4>
 8006b0a:	1c71      	adds	r1, r6, #1
 8006b0c:	d0e2      	beq.n	8006ad4 <HAL_SPI_Receive+0xe4>
          hspi->State = HAL_SPI_STATE_READY;
 8006b0e:	2301      	movs	r3, #1
 8006b10:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006b14:	2300      	movs	r3, #0
 8006b16:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006b1a:	2503      	movs	r5, #3
 8006b1c:	e774      	b.n	8006a08 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006b1e:	f7fd facb 	bl	80040b8 <HAL_GetTick>
 8006b22:	eba0 0008 	sub.w	r0, r0, r8
 8006b26:	42b0      	cmp	r0, r6
 8006b28:	d3b5      	bcc.n	8006a96 <HAL_SPI_Receive+0xa6>
 8006b2a:	1c73      	adds	r3, r6, #1
 8006b2c:	d0b3      	beq.n	8006a96 <HAL_SPI_Receive+0xa6>
 8006b2e:	e7ee      	b.n	8006b0e <HAL_SPI_Receive+0x11e>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006b30:	2320      	movs	r3, #32
 8006b32:	6563      	str	r3, [r4, #84]	@ 0x54
 8006b34:	e7d8      	b.n	8006ae8 <HAL_SPI_Receive+0xf8>

08006b36 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006b36:	4770      	bx	lr

08006b38 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006b38:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006b3c:	2b01      	cmp	r3, #1
 8006b3e:	d130      	bne.n	8006ba2 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006b40:	2302      	movs	r3, #2
 8006b42:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006b46:	6803      	ldr	r3, [r0, #0]
 8006b48:	68da      	ldr	r2, [r3, #12]
 8006b4a:	f042 0201 	orr.w	r2, r2, #1
 8006b4e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006b50:	4a15      	ldr	r2, [pc, #84]	@ (8006ba8 <HAL_TIM_Base_Start_IT+0x70>)
 8006b52:	4293      	cmp	r3, r2
 8006b54:	d01a      	beq.n	8006b8c <HAL_TIM_Base_Start_IT+0x54>
 8006b56:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006b5a:	d017      	beq.n	8006b8c <HAL_TIM_Base_Start_IT+0x54>
 8006b5c:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006b60:	4293      	cmp	r3, r2
 8006b62:	d013      	beq.n	8006b8c <HAL_TIM_Base_Start_IT+0x54>
 8006b64:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006b68:	4293      	cmp	r3, r2
 8006b6a:	d00f      	beq.n	8006b8c <HAL_TIM_Base_Start_IT+0x54>
 8006b6c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006b70:	4293      	cmp	r3, r2
 8006b72:	d00b      	beq.n	8006b8c <HAL_TIM_Base_Start_IT+0x54>
 8006b74:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006b78:	4293      	cmp	r3, r2
 8006b7a:	d007      	beq.n	8006b8c <HAL_TIM_Base_Start_IT+0x54>
 8006b7c:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8006b80:	4293      	cmp	r3, r2
 8006b82:	d003      	beq.n	8006b8c <HAL_TIM_Base_Start_IT+0x54>
 8006b84:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8006b88:	4293      	cmp	r3, r2
 8006b8a:	d104      	bne.n	8006b96 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006b8c:	689a      	ldr	r2, [r3, #8]
 8006b8e:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006b92:	2a06      	cmp	r2, #6
 8006b94:	d003      	beq.n	8006b9e <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 8006b96:	681a      	ldr	r2, [r3, #0]
 8006b98:	f042 0201 	orr.w	r2, r2, #1
 8006b9c:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006b9e:	2000      	movs	r0, #0
 8006ba0:	4770      	bx	lr
    return HAL_ERROR;
 8006ba2:	2001      	movs	r0, #1
}
 8006ba4:	4770      	bx	lr
 8006ba6:	bf00      	nop
 8006ba8:	40010000 	.word	0x40010000

08006bac <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8006bac:	4770      	bx	lr

08006bae <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8006bae:	4770      	bx	lr

08006bb0 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006bb0:	4770      	bx	lr

08006bb2 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006bb2:	4770      	bx	lr

08006bb4 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8006bb4:	6803      	ldr	r3, [r0, #0]
{
 8006bb6:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8006bb8:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8006bba:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006bbc:	07b1      	lsls	r1, r6, #30
{
 8006bbe:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006bc0:	d50d      	bpl.n	8006bde <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8006bc2:	07aa      	lsls	r2, r5, #30
 8006bc4:	d50b      	bpl.n	8006bde <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8006bc6:	f06f 0202 	mvn.w	r2, #2
 8006bca:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006bcc:	2201      	movs	r2, #1
 8006bce:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006bd0:	699b      	ldr	r3, [r3, #24]
 8006bd2:	079b      	lsls	r3, r3, #30
 8006bd4:	d069      	beq.n	8006caa <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 8006bd6:	f7ff ffea 	bl	8006bae <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006bda:	2300      	movs	r3, #0
 8006bdc:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8006bde:	0771      	lsls	r1, r6, #29
 8006be0:	d510      	bpl.n	8006c04 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8006be2:	076a      	lsls	r2, r5, #29
 8006be4:	d50e      	bpl.n	8006c04 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8006be6:	6823      	ldr	r3, [r4, #0]
 8006be8:	f06f 0204 	mvn.w	r2, #4
 8006bec:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006bee:	2202      	movs	r2, #2
 8006bf0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006bf2:	699b      	ldr	r3, [r3, #24]
 8006bf4:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8006bf8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006bfa:	d05c      	beq.n	8006cb6 <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8006bfc:	f7ff ffd7 	bl	8006bae <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006c00:	2300      	movs	r3, #0
 8006c02:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8006c04:	0733      	lsls	r3, r6, #28
 8006c06:	d50f      	bpl.n	8006c28 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8006c08:	0728      	lsls	r0, r5, #28
 8006c0a:	d50d      	bpl.n	8006c28 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006c0c:	6823      	ldr	r3, [r4, #0]
 8006c0e:	f06f 0208 	mvn.w	r2, #8
 8006c12:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006c14:	2204      	movs	r2, #4
 8006c16:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006c18:	69db      	ldr	r3, [r3, #28]
 8006c1a:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8006c1c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006c1e:	d050      	beq.n	8006cc2 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006c20:	f7ff ffc5 	bl	8006bae <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006c24:	2300      	movs	r3, #0
 8006c26:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8006c28:	06f2      	lsls	r2, r6, #27
 8006c2a:	d510      	bpl.n	8006c4e <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8006c2c:	06eb      	lsls	r3, r5, #27
 8006c2e:	d50e      	bpl.n	8006c4e <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8006c30:	6823      	ldr	r3, [r4, #0]
 8006c32:	f06f 0210 	mvn.w	r2, #16
 8006c36:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006c38:	2208      	movs	r2, #8
 8006c3a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006c3c:	69db      	ldr	r3, [r3, #28]
 8006c3e:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8006c42:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006c44:	d043      	beq.n	8006cce <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006c46:	f7ff ffb2 	bl	8006bae <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006c4a:	2300      	movs	r3, #0
 8006c4c:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8006c4e:	07f0      	lsls	r0, r6, #31
 8006c50:	d508      	bpl.n	8006c64 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8006c52:	07e9      	lsls	r1, r5, #31
 8006c54:	d506      	bpl.n	8006c64 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8006c56:	6823      	ldr	r3, [r4, #0]
 8006c58:	f06f 0201 	mvn.w	r2, #1
 8006c5c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006c5e:	4620      	mov	r0, r4
 8006c60:	f7fb fcde 	bl	8002620 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8006c64:	0632      	lsls	r2, r6, #24
 8006c66:	d508      	bpl.n	8006c7a <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006c68:	062b      	lsls	r3, r5, #24
 8006c6a:	d506      	bpl.n	8006c7a <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8006c6c:	6823      	ldr	r3, [r4, #0]
 8006c6e:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8006c72:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006c74:	4620      	mov	r0, r4
 8006c76:	f000 f8b2 	bl	8006dde <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8006c7a:	0670      	lsls	r0, r6, #25
 8006c7c:	d508      	bpl.n	8006c90 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8006c7e:	0669      	lsls	r1, r5, #25
 8006c80:	d506      	bpl.n	8006c90 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006c82:	6823      	ldr	r3, [r4, #0]
 8006c84:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006c88:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8006c8a:	4620      	mov	r0, r4
 8006c8c:	f7ff ff91 	bl	8006bb2 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006c90:	06b2      	lsls	r2, r6, #26
 8006c92:	d522      	bpl.n	8006cda <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006c94:	06ab      	lsls	r3, r5, #26
 8006c96:	d520      	bpl.n	8006cda <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006c98:	6823      	ldr	r3, [r4, #0]
 8006c9a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006c9e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006ca0:	611a      	str	r2, [r3, #16]
}
 8006ca2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006ca6:	f000 b899 	b.w	8006ddc <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006caa:	f7ff ff7f 	bl	8006bac <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006cae:	4620      	mov	r0, r4
 8006cb0:	f7ff ff7e 	bl	8006bb0 <HAL_TIM_PWM_PulseFinishedCallback>
 8006cb4:	e791      	b.n	8006bda <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006cb6:	f7ff ff79 	bl	8006bac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006cba:	4620      	mov	r0, r4
 8006cbc:	f7ff ff78 	bl	8006bb0 <HAL_TIM_PWM_PulseFinishedCallback>
 8006cc0:	e79e      	b.n	8006c00 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006cc2:	f7ff ff73 	bl	8006bac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006cc6:	4620      	mov	r0, r4
 8006cc8:	f7ff ff72 	bl	8006bb0 <HAL_TIM_PWM_PulseFinishedCallback>
 8006ccc:	e7aa      	b.n	8006c24 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006cce:	f7ff ff6d 	bl	8006bac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006cd2:	4620      	mov	r0, r4
 8006cd4:	f7ff ff6c 	bl	8006bb0 <HAL_TIM_PWM_PulseFinishedCallback>
 8006cd8:	e7b7      	b.n	8006c4a <HAL_TIM_IRQHandler+0x96>
}
 8006cda:	bd70      	pop	{r4, r5, r6, pc}

08006cdc <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006cdc:	4a27      	ldr	r2, [pc, #156]	@ (8006d7c <TIM_Base_SetConfig+0xa0>)
  tmpcr1 = TIMx->CR1;
 8006cde:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006ce0:	4290      	cmp	r0, r2
 8006ce2:	d012      	beq.n	8006d0a <TIM_Base_SetConfig+0x2e>
 8006ce4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006ce8:	d00f      	beq.n	8006d0a <TIM_Base_SetConfig+0x2e>
 8006cea:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8006cee:	4290      	cmp	r0, r2
 8006cf0:	d00b      	beq.n	8006d0a <TIM_Base_SetConfig+0x2e>
 8006cf2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006cf6:	4290      	cmp	r0, r2
 8006cf8:	d007      	beq.n	8006d0a <TIM_Base_SetConfig+0x2e>
 8006cfa:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006cfe:	4290      	cmp	r0, r2
 8006d00:	d003      	beq.n	8006d0a <TIM_Base_SetConfig+0x2e>
 8006d02:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006d06:	4290      	cmp	r0, r2
 8006d08:	d108      	bne.n	8006d1c <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006d0a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006d0c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 8006d10:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006d12:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006d14:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006d18:	4313      	orrs	r3, r2
 8006d1a:	e016      	b.n	8006d4a <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006d1c:	4a18      	ldr	r2, [pc, #96]	@ (8006d80 <TIM_Base_SetConfig+0xa4>)
 8006d1e:	4290      	cmp	r0, r2
 8006d20:	d0f7      	beq.n	8006d12 <TIM_Base_SetConfig+0x36>
 8006d22:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d26:	4290      	cmp	r0, r2
 8006d28:	d0f3      	beq.n	8006d12 <TIM_Base_SetConfig+0x36>
 8006d2a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d2e:	4290      	cmp	r0, r2
 8006d30:	d0ef      	beq.n	8006d12 <TIM_Base_SetConfig+0x36>
 8006d32:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8006d36:	4290      	cmp	r0, r2
 8006d38:	d0eb      	beq.n	8006d12 <TIM_Base_SetConfig+0x36>
 8006d3a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d3e:	4290      	cmp	r0, r2
 8006d40:	d0e7      	beq.n	8006d12 <TIM_Base_SetConfig+0x36>
 8006d42:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d46:	4290      	cmp	r0, r2
 8006d48:	d0e3      	beq.n	8006d12 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006d4a:	694a      	ldr	r2, [r1, #20]
 8006d4c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006d50:	4313      	orrs	r3, r2

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006d52:	688a      	ldr	r2, [r1, #8]
 8006d54:	62c2      	str	r2, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006d56:	680a      	ldr	r2, [r1, #0]
 8006d58:	6282      	str	r2, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006d5a:	4a08      	ldr	r2, [pc, #32]	@ (8006d7c <TIM_Base_SetConfig+0xa0>)
 8006d5c:	4290      	cmp	r0, r2
 8006d5e:	d003      	beq.n	8006d68 <TIM_Base_SetConfig+0x8c>
 8006d60:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006d64:	4290      	cmp	r0, r2
 8006d66:	d101      	bne.n	8006d6c <TIM_Base_SetConfig+0x90>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006d68:	690a      	ldr	r2, [r1, #16]
 8006d6a:	6302      	str	r2, [r0, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
 8006d6c:	6802      	ldr	r2, [r0, #0]
 8006d6e:	f042 0204 	orr.w	r2, r2, #4
 8006d72:	6002      	str	r2, [r0, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006d74:	2201      	movs	r2, #1
 8006d76:	6142      	str	r2, [r0, #20]

  TIMx->CR1 = tmpcr1;
 8006d78:	6003      	str	r3, [r0, #0]
}
 8006d7a:	4770      	bx	lr
 8006d7c:	40010000 	.word	0x40010000
 8006d80:	40014000 	.word	0x40014000

08006d84 <HAL_TIM_Base_Init>:
{
 8006d84:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006d86:	4604      	mov	r4, r0
 8006d88:	b330      	cbz	r0, 8006dd8 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006d8a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006d8e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006d92:	b91b      	cbnz	r3, 8006d9c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006d94:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006d98:	f7ff fecd 	bl	8006b36 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006d9c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006d9e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006da0:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006da4:	1d21      	adds	r1, r4, #4
 8006da6:	f7ff ff99 	bl	8006cdc <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006daa:	2301      	movs	r3, #1
 8006dac:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8006db0:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006db2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 8006db6:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 8006dba:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006dbe:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006dc2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006dc6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006dca:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8006dce:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006dd2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 8006dd6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006dd8:	2001      	movs	r0, #1
 8006dda:	e7fc      	b.n	8006dd6 <HAL_TIM_Base_Init+0x52>

08006ddc <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006ddc:	4770      	bx	lr

08006dde <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006dde:	4770      	bx	lr

08006de0 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006de0:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006de2:	f102 030c 	add.w	r3, r2, #12
 8006de6:	e853 3f00 	ldrex	r3, [r3]
 8006dea:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006dee:	320c      	adds	r2, #12
 8006df0:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8006df4:	6802      	ldr	r2, [r0, #0]
 8006df6:	2900      	cmp	r1, #0
 8006df8:	d1f2      	bne.n	8006de0 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006dfa:	f102 0314 	add.w	r3, r2, #20
 8006dfe:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006e02:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006e06:	f102 0c14 	add.w	ip, r2, #20
 8006e0a:	e84c 3100 	strex	r1, r3, [ip]
 8006e0e:	2900      	cmp	r1, #0
 8006e10:	d1f3      	bne.n	8006dfa <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8006e12:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8006e14:	2b01      	cmp	r3, #1
 8006e16:	d10b      	bne.n	8006e30 <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006e18:	f102 030c 	add.w	r3, r2, #12
 8006e1c:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8006e20:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006e24:	f102 0c0c 	add.w	ip, r2, #12
 8006e28:	e84c 3100 	strex	r1, r3, [ip]
 8006e2c:	2900      	cmp	r1, #0
 8006e2e:	d1f3      	bne.n	8006e18 <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8006e30:	2320      	movs	r3, #32
 8006e32:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006e36:	2300      	movs	r3, #0
 8006e38:	6303      	str	r3, [r0, #48]	@ 0x30
}
 8006e3a:	4770      	bx	lr

08006e3c <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006e3c:	6802      	ldr	r2, [r0, #0]
 8006e3e:	68c1      	ldr	r1, [r0, #12]
{
 8006e40:	b538      	push	{r3, r4, r5, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006e42:	6913      	ldr	r3, [r2, #16]
 8006e44:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8006e48:	430b      	orrs	r3, r1
 8006e4a:	6113      	str	r3, [r2, #16]
{
 8006e4c:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006e4e:	6883      	ldr	r3, [r0, #8]
 8006e50:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 8006e52:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006e54:	4303      	orrs	r3, r0
 8006e56:	6968      	ldr	r0, [r5, #20]
 8006e58:	4303      	orrs	r3, r0
 8006e5a:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 8006e5c:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
 8006e60:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006e64:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 8006e66:	430b      	orrs	r3, r1
 8006e68:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006e6a:	6953      	ldr	r3, [r2, #20]
 8006e6c:	69a9      	ldr	r1, [r5, #24]
 8006e6e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006e72:	430b      	orrs	r3, r1
 8006e74:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8006e76:	4b1f      	ldr	r3, [pc, #124]	@ (8006ef4 <UART_SetConfig+0xb8>)
 8006e78:	429a      	cmp	r2, r3
 8006e7a:	d003      	beq.n	8006e84 <UART_SetConfig+0x48>
 8006e7c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006e80:	429a      	cmp	r2, r3
 8006e82:	d124      	bne.n	8006ece <UART_SetConfig+0x92>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8006e84:	f7ff f936 	bl	80060f4 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006e88:	69ea      	ldr	r2, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006e8a:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006e8c:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006e90:	e9d5 4300 	ldrd	r4, r3, [r5]
 8006e94:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006e98:	d11c      	bne.n	8006ed4 <UART_SetConfig+0x98>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006e9a:	18da      	adds	r2, r3, r3
 8006e9c:	f04f 0500 	mov.w	r5, #0
 8006ea0:	eb45 0305 	adc.w	r3, r5, r5
 8006ea4:	f7f9 fc30 	bl	8000708 <__aeabi_uldivmod>
 8006ea8:	2264      	movs	r2, #100	@ 0x64
 8006eaa:	fbb0 f1f2 	udiv	r1, r0, r2
 8006eae:	fb02 0311 	mls	r3, r2, r1, r0
 8006eb2:	00db      	lsls	r3, r3, #3
 8006eb4:	3332      	adds	r3, #50	@ 0x32
 8006eb6:	fbb3 f3f2 	udiv	r3, r3, r2
 8006eba:	f003 0207 	and.w	r2, r3, #7
 8006ebe:	005b      	lsls	r3, r3, #1
 8006ec0:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8006ec4:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8006ec8:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006eca:	60a3      	str	r3, [r4, #8]
  }
}
 8006ecc:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8006ece:	f7ff f901 	bl	80060d4 <HAL_RCC_GetPCLK1Freq>
 8006ed2:	e7d9      	b.n	8006e88 <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006ed4:	009a      	lsls	r2, r3, #2
 8006ed6:	0f9b      	lsrs	r3, r3, #30
 8006ed8:	f7f9 fc16 	bl	8000708 <__aeabi_uldivmod>
 8006edc:	2264      	movs	r2, #100	@ 0x64
 8006ede:	fbb0 f1f2 	udiv	r1, r0, r2
 8006ee2:	fb02 0311 	mls	r3, r2, r1, r0
 8006ee6:	011b      	lsls	r3, r3, #4
 8006ee8:	3332      	adds	r3, #50	@ 0x32
 8006eea:	fbb3 f3f2 	udiv	r3, r3, r2
 8006eee:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8006ef2:	e7ea      	b.n	8006eca <UART_SetConfig+0x8e>
 8006ef4:	40011000 	.word	0x40011000

08006ef8 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
 8006ef8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006efa:	4605      	mov	r5, r0
 8006efc:	460c      	mov	r4, r1
 8006efe:	4617      	mov	r7, r2
 8006f00:	461e      	mov	r6, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006f02:	682a      	ldr	r2, [r5, #0]
 8006f04:	6813      	ldr	r3, [r2, #0]
 8006f06:	ea34 0303 	bics.w	r3, r4, r3
 8006f0a:	d101      	bne.n	8006f10 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 8006f0c:	2000      	movs	r0, #0
 8006f0e:	e021      	b.n	8006f54 <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>
    if (Timeout != HAL_MAX_DELAY)
 8006f10:	1c70      	adds	r0, r6, #1
 8006f12:	d0f7      	beq.n	8006f04 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006f14:	f7fd f8d0 	bl	80040b8 <HAL_GetTick>
 8006f18:	1bc0      	subs	r0, r0, r7
 8006f1a:	4286      	cmp	r6, r0
 8006f1c:	d31c      	bcc.n	8006f58 <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
 8006f1e:	b1de      	cbz	r6, 8006f58 <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8006f20:	682b      	ldr	r3, [r5, #0]
 8006f22:	68da      	ldr	r2, [r3, #12]
 8006f24:	0751      	lsls	r1, r2, #29
 8006f26:	d5ec      	bpl.n	8006f02 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 8006f28:	2c80      	cmp	r4, #128	@ 0x80
 8006f2a:	d0ea      	beq.n	8006f02 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 8006f2c:	2c40      	cmp	r4, #64	@ 0x40
 8006f2e:	d0e8      	beq.n	8006f02 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8006f30:	681a      	ldr	r2, [r3, #0]
 8006f32:	0712      	lsls	r2, r2, #28
 8006f34:	d5e5      	bpl.n	8006f02 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
          __HAL_UART_CLEAR_OREFLAG(huart);
 8006f36:	2400      	movs	r4, #0
 8006f38:	9401      	str	r4, [sp, #4]
 8006f3a:	681a      	ldr	r2, [r3, #0]
 8006f3c:	9201      	str	r2, [sp, #4]
 8006f3e:	685b      	ldr	r3, [r3, #4]
 8006f40:	9301      	str	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8006f42:	4628      	mov	r0, r5
          __HAL_UART_CLEAR_OREFLAG(huart);
 8006f44:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8006f46:	f7ff ff4b 	bl	8006de0 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8006f4a:	2308      	movs	r3, #8
 8006f4c:	646b      	str	r3, [r5, #68]	@ 0x44
          __HAL_UNLOCK(huart);
 8006f4e:	f885 4040 	strb.w	r4, [r5, #64]	@ 0x40
          return HAL_ERROR;
 8006f52:	2001      	movs	r0, #1
}
 8006f54:	b003      	add	sp, #12
 8006f56:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
 8006f58:	2003      	movs	r0, #3
 8006f5a:	e7fb      	b.n	8006f54 <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>

08006f5c <HAL_UART_Init>:
{
 8006f5c:	b510      	push	{r4, lr}
  if (huart == NULL)
 8006f5e:	4604      	mov	r4, r0
 8006f60:	b348      	cbz	r0, 8006fb6 <HAL_UART_Init+0x5a>
  if (huart->gState == HAL_UART_STATE_RESET)
 8006f62:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8006f66:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006f6a:	b91b      	cbnz	r3, 8006f74 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8006f6c:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_UART_MspInit(huart);
 8006f70:	f7fb fd2a 	bl	80029c8 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8006f74:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8006f76:	2324      	movs	r3, #36	@ 0x24
 8006f78:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UART_DISABLE(huart);
 8006f7c:	68d3      	ldr	r3, [r2, #12]
 8006f7e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006f82:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8006f84:	4620      	mov	r0, r4
 8006f86:	f7ff ff59 	bl	8006e3c <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006f8a:	6823      	ldr	r3, [r4, #0]
 8006f8c:	691a      	ldr	r2, [r3, #16]
 8006f8e:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8006f92:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006f94:	695a      	ldr	r2, [r3, #20]
 8006f96:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8006f9a:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8006f9c:	68da      	ldr	r2, [r3, #12]
 8006f9e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006fa2:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006fa4:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8006fa6:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006fa8:	6460      	str	r0, [r4, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 8006faa:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8006fae:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8006fb2:	6360      	str	r0, [r4, #52]	@ 0x34
}
 8006fb4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006fb6:	2001      	movs	r0, #1
 8006fb8:	e7fc      	b.n	8006fb4 <HAL_UART_Init+0x58>

08006fba <HAL_UART_Transmit>:
{
 8006fba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006fbe:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8006fc0:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8006fc4:	2b20      	cmp	r3, #32
{
 8006fc6:	4604      	mov	r4, r0
 8006fc8:	460e      	mov	r6, r1
 8006fca:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8006fcc:	d13f      	bne.n	800704e <HAL_UART_Transmit+0x94>
    if ((pData == NULL) || (Size == 0U))
 8006fce:	2900      	cmp	r1, #0
 8006fd0:	d03f      	beq.n	8007052 <HAL_UART_Transmit+0x98>
 8006fd2:	2a00      	cmp	r2, #0
 8006fd4:	d03d      	beq.n	8007052 <HAL_UART_Transmit+0x98>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006fd6:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006fd8:	2500      	movs	r5, #0
 8006fda:	6445      	str	r5, [r0, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006fdc:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
    tickstart = HAL_GetTick();
 8006fe0:	f7fd f86a 	bl	80040b8 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006fe4:	68a3      	ldr	r3, [r4, #8]
    huart->TxXferSize = Size;
 8006fe6:	84a7      	strh	r7, [r4, #36]	@ 0x24
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006fe8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    tickstart = HAL_GetTick();
 8006fec:	4681      	mov	r9, r0
    huart->TxXferCount = Size;
 8006fee:	84e7      	strh	r7, [r4, #38]	@ 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8006ff0:	d103      	bne.n	8006ffa <HAL_UART_Transmit+0x40>
 8006ff2:	6923      	ldr	r3, [r4, #16]
 8006ff4:	b90b      	cbnz	r3, 8006ffa <HAL_UART_Transmit+0x40>
      pdata16bits = (const uint16_t *) pData;
 8006ff6:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8006ff8:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 8006ffa:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 8006ffc:	b29b      	uxth	r3, r3
 8006ffe:	b953      	cbnz	r3, 8007016 <HAL_UART_Transmit+0x5c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8007000:	4643      	mov	r3, r8
 8007002:	464a      	mov	r2, r9
 8007004:	2140      	movs	r1, #64	@ 0x40
 8007006:	4620      	mov	r0, r4
 8007008:	f7ff ff76 	bl	8006ef8 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800700c:	2320      	movs	r3, #32
 800700e:	b950      	cbnz	r0, 8007026 <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 8007010:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    return HAL_OK;
 8007014:	e00a      	b.n	800702c <HAL_UART_Transmit+0x72>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007016:	4643      	mov	r3, r8
 8007018:	464a      	mov	r2, r9
 800701a:	2180      	movs	r1, #128	@ 0x80
 800701c:	4620      	mov	r0, r4
 800701e:	f7ff ff6b 	bl	8006ef8 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8007022:	b128      	cbz	r0, 8007030 <HAL_UART_Transmit+0x76>
        huart->gState = HAL_UART_STATE_READY;
 8007024:	2320      	movs	r3, #32
 8007026:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        return HAL_TIMEOUT;
 800702a:	2003      	movs	r0, #3
}
 800702c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007030:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 8007032:	b94e      	cbnz	r6, 8007048 <HAL_UART_Transmit+0x8e>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007034:	f835 3b02 	ldrh.w	r3, [r5], #2
 8007038:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 800703c:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 800703e:	8ce1      	ldrh	r1, [r4, #38]	@ 0x26
 8007040:	3901      	subs	r1, #1
 8007042:	b289      	uxth	r1, r1
 8007044:	84e1      	strh	r1, [r4, #38]	@ 0x26
 8007046:	e7d8      	b.n	8006ffa <HAL_UART_Transmit+0x40>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8007048:	f816 3b01 	ldrb.w	r3, [r6], #1
 800704c:	e7f6      	b.n	800703c <HAL_UART_Transmit+0x82>
    return HAL_BUSY;
 800704e:	2002      	movs	r0, #2
 8007050:	e7ec      	b.n	800702c <HAL_UART_Transmit+0x72>
      return  HAL_ERROR;
 8007052:	2001      	movs	r0, #1
 8007054:	e7ea      	b.n	800702c <HAL_UART_Transmit+0x72>

08007056 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
 8007056:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800705a:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 800705e:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8007062:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8007066:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 800706a:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800706e:	6809      	ldr	r1, [r1, #0]
 8007070:	ea43 0308 	orr.w	r3, r3, r8
 8007074:	b981      	cbnz	r1, 8007098 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007076:	ea43 030e 	orr.w	r3, r3, lr
 800707a:	4313      	orrs	r3, r2
 800707c:	ea43 030c 	orr.w	r3, r3, ip
 8007080:	433b      	orrs	r3, r7
 8007082:	6801      	ldr	r1, [r0, #0]
 8007084:	4333      	orrs	r3, r6
 8007086:	432b      	orrs	r3, r5
 8007088:	4323      	orrs	r3, r4
 800708a:	f36f 010e 	bfc	r1, #0, #15
 800708e:	430b      	orrs	r3, r1
 8007090:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8007092:	2000      	movs	r0, #0
 8007094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007098:	6801      	ldr	r1, [r0, #0]
 800709a:	ea43 030e 	orr.w	r3, r3, lr
 800709e:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 80070a2:	430b      	orrs	r3, r1
 80070a4:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 80070a6:	ea42 030c 	orr.w	r3, r2, ip
 80070aa:	6841      	ldr	r1, [r0, #4]
 80070ac:	433b      	orrs	r3, r7
 80070ae:	4333      	orrs	r3, r6
 80070b0:	432b      	orrs	r3, r5
 80070b2:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 80070b6:	4323      	orrs	r3, r4
 80070b8:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 80070bc:	4313      	orrs	r3, r2
 80070be:	6043      	str	r3, [r0, #4]
 80070c0:	e7e7      	b.n	8007092 <FMC_SDRAM_Init+0x3c>

080070c2 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80070c2:	68cb      	ldr	r3, [r1, #12]
 80070c4:	f103 3cff 	add.w	ip, r3, #4294967295
 80070c8:	694b      	ldr	r3, [r1, #20]
{
 80070ca:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80070cc:	684c      	ldr	r4, [r1, #4]
 80070ce:	688f      	ldr	r7, [r1, #8]
 80070d0:	690e      	ldr	r6, [r1, #16]
 80070d2:	698d      	ldr	r5, [r1, #24]
 80070d4:	6809      	ldr	r1, [r1, #0]
 80070d6:	3b01      	subs	r3, #1
 80070d8:	051b      	lsls	r3, r3, #20
 80070da:	3c01      	subs	r4, #1
 80070dc:	3f01      	subs	r7, #1
 80070de:	3e01      	subs	r6, #1
 80070e0:	3d01      	subs	r5, #1
 80070e2:	0124      	lsls	r4, r4, #4
 80070e4:	023f      	lsls	r7, r7, #8
 80070e6:	0436      	lsls	r6, r6, #16
 80070e8:	062d      	lsls	r5, r5, #24
 80070ea:	3901      	subs	r1, #1
 80070ec:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 80070f0:	b95a      	cbnz	r2, 800710a <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80070f2:	430b      	orrs	r3, r1
 80070f4:	4323      	orrs	r3, r4
 80070f6:	6882      	ldr	r2, [r0, #8]
 80070f8:	433b      	orrs	r3, r7
 80070fa:	4333      	orrs	r3, r6
 80070fc:	432b      	orrs	r3, r5
 80070fe:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007102:	4313      	orrs	r3, r2
 8007104:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8007106:	2000      	movs	r0, #0
 8007108:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800710a:	6882      	ldr	r2, [r0, #8]
 800710c:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8007110:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8007114:	4313      	orrs	r3, r2
 8007116:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007118:	ea44 0307 	orr.w	r3, r4, r7
 800711c:	68c2      	ldr	r2, [r0, #12]
 800711e:	430b      	orrs	r3, r1
 8007120:	4333      	orrs	r3, r6
 8007122:	432b      	orrs	r3, r5
 8007124:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007128:	4313      	orrs	r3, r2
 800712a:	60c3      	str	r3, [r0, #12]
 800712c:	e7eb      	b.n	8007106 <FMC_SDRAM_Timing_Init+0x44>

0800712e <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800712e:	b570      	push	{r4, r5, r6, lr}
 8007130:	4604      	mov	r4, r0
 8007132:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007134:	6902      	ldr	r2, [r0, #16]
 8007136:	e9d1 3000 	ldrd	r3, r0, [r1]
 800713a:	4303      	orrs	r3, r0
 800713c:	68c8      	ldr	r0, [r1, #12]
 800713e:	f36f 0215 	bfc	r2, #0, #22
 8007142:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8007146:	4313      	orrs	r3, r2
 8007148:	688a      	ldr	r2, [r1, #8]
 800714a:	3a01      	subs	r2, #1
 800714c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007150:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8007152:	f7fc ffb1 	bl	80040b8 <HAL_GetTick>
 8007156:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007158:	69a0      	ldr	r0, [r4, #24]
 800715a:	f010 0020 	ands.w	r0, r0, #32
 800715e:	d003      	beq.n	8007168 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8007160:	1c6b      	adds	r3, r5, #1
 8007162:	d0f9      	beq.n	8007158 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007164:	b90d      	cbnz	r5, 800716a <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 8007166:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 8007168:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800716a:	f7fc ffa5 	bl	80040b8 <HAL_GetTick>
 800716e:	1b80      	subs	r0, r0, r6
 8007170:	42a8      	cmp	r0, r5
 8007172:	d9f1      	bls.n	8007158 <FMC_SDRAM_SendCommand+0x2a>
 8007174:	e7f7      	b.n	8007166 <FMC_SDRAM_SendCommand+0x38>

08007176 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8007176:	6943      	ldr	r3, [r0, #20]
 8007178:	f36f 034d 	bfc	r3, #1, #13
 800717c:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8007180:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8007182:	2000      	movs	r0, #0
 8007184:	4770      	bx	lr

08007186 <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 8007186:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8007188:	2300      	movs	r3, #0
{
 800718a:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 800718c:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 800718e:	9b01      	ldr	r3, [sp, #4]
 8007190:	3301      	adds	r3, #1
 8007192:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8007194:	9b01      	ldr	r3, [sp, #4]
 8007196:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800719a:	d81a      	bhi.n	80071d2 <USB_CoreReset+0x4c>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 800719c:	6913      	ldr	r3, [r2, #16]
 800719e:	2b00      	cmp	r3, #0
 80071a0:	daf5      	bge.n	800718e <USB_CoreReset+0x8>

  count = 10U;
 80071a2:	230a      	movs	r3, #10

  /* few cycles before setting core reset */
  while (count > 0U)
  {
    count--;
 80071a4:	9301      	str	r3, [sp, #4]
  while (count > 0U)
 80071a6:	9b01      	ldr	r3, [sp, #4]
 80071a8:	b983      	cbnz	r3, 80071cc <USB_CoreReset+0x46>
  }

  /* Core Soft Reset */
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 80071aa:	6913      	ldr	r3, [r2, #16]
 80071ac:	f043 0301 	orr.w	r3, r3, #1
 80071b0:	6113      	str	r3, [r2, #16]

  do
  {
    count++;
 80071b2:	9b01      	ldr	r3, [sp, #4]
 80071b4:	3301      	adds	r3, #1
 80071b6:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 80071b8:	9b01      	ldr	r3, [sp, #4]
 80071ba:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80071be:	d808      	bhi.n	80071d2 <USB_CoreReset+0x4c>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 80071c0:	6910      	ldr	r0, [r2, #16]
 80071c2:	f010 0001 	ands.w	r0, r0, #1
 80071c6:	d1f4      	bne.n	80071b2 <USB_CoreReset+0x2c>

  return HAL_OK;
}
 80071c8:	b002      	add	sp, #8
 80071ca:	4770      	bx	lr
    count--;
 80071cc:	9b01      	ldr	r3, [sp, #4]
 80071ce:	3b01      	subs	r3, #1
 80071d0:	e7e8      	b.n	80071a4 <USB_CoreReset+0x1e>
      return HAL_TIMEOUT;
 80071d2:	2003      	movs	r0, #3
 80071d4:	e7f8      	b.n	80071c8 <USB_CoreReset+0x42>

080071d6 <USB_CoreInit>:
{
 80071d6:	b084      	sub	sp, #16
 80071d8:	b538      	push	{r3, r4, r5, lr}
 80071da:	ad05      	add	r5, sp, #20
 80071dc:	e885 000e 	stmia.w	r5, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80071e0:	f89d 3019 	ldrb.w	r3, [sp, #25]
 80071e4:	2b01      	cmp	r3, #1
{
 80071e6:	4604      	mov	r4, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80071e8:	d127      	bne.n	800723a <USB_CoreInit+0x64>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 80071ea:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80071ec:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80071f0:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 80071f2:	68c3      	ldr	r3, [r0, #12]
 80071f4:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 80071f8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80071fc:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 80071fe:	68c3      	ldr	r3, [r0, #12]
 8007200:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007204:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 8007206:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800720a:	2b01      	cmp	r3, #1
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 800720c:	bf02      	ittt	eq
 800720e:	68c3      	ldreq	r3, [r0, #12]
 8007210:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
 8007214:	60c3      	streq	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 8007216:	f7ff ffb6 	bl	8007186 <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 800721a:	f89d 3016 	ldrb.w	r3, [sp, #22]
 800721e:	2b01      	cmp	r3, #1
 8007220:	d107      	bne.n	8007232 <USB_CoreInit+0x5c>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 8007222:	68a3      	ldr	r3, [r4, #8]
 8007224:	f043 0306 	orr.w	r3, r3, #6
 8007228:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 800722a:	68a3      	ldr	r3, [r4, #8]
 800722c:	f043 0320 	orr.w	r3, r3, #32
 8007230:	60a3      	str	r3, [r4, #8]
}
 8007232:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007236:	b004      	add	sp, #16
 8007238:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 800723a:	68c3      	ldr	r3, [r0, #12]
 800723c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007240:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 8007242:	f7ff ffa0 	bl	8007186 <USB_CoreReset>
    if (cfg.battery_charging_enable == 0U)
 8007246:	f89d 301d 	ldrb.w	r3, [sp, #29]
 800724a:	b923      	cbnz	r3, 8007256 <USB_CoreInit+0x80>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 800724c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800724e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 8007252:	63a3      	str	r3, [r4, #56]	@ 0x38
 8007254:	e7e1      	b.n	800721a <USB_CoreInit+0x44>
 8007256:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007258:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800725c:	e7f9      	b.n	8007252 <USB_CoreInit+0x7c>
	...

08007260 <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 8007260:	2a02      	cmp	r2, #2
 8007262:	d14a      	bne.n	80072fa <USB_SetTurnaroundTime+0x9a>
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 8007264:	4b27      	ldr	r3, [pc, #156]	@ (8007304 <USB_SetTurnaroundTime+0xa4>)
 8007266:	4a28      	ldr	r2, [pc, #160]	@ (8007308 <USB_SetTurnaroundTime+0xa8>)
 8007268:	440b      	add	r3, r1
 800726a:	4293      	cmp	r3, r2
 800726c:	d939      	bls.n	80072e2 <USB_SetTurnaroundTime+0x82>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 800726e:	4b27      	ldr	r3, [pc, #156]	@ (800730c <USB_SetTurnaroundTime+0xac>)
 8007270:	4a27      	ldr	r2, [pc, #156]	@ (8007310 <USB_SetTurnaroundTime+0xb0>)
 8007272:	440b      	add	r3, r1
 8007274:	4293      	cmp	r3, r2
 8007276:	d936      	bls.n	80072e6 <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 8007278:	4a26      	ldr	r2, [pc, #152]	@ (8007314 <USB_SetTurnaroundTime+0xb4>)
 800727a:	f5a1 0374 	sub.w	r3, r1, #15990784	@ 0xf40000
 800727e:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
 8007282:	4293      	cmp	r3, r2
 8007284:	d931      	bls.n	80072ea <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 8007286:	4a24      	ldr	r2, [pc, #144]	@ (8007318 <USB_SetTurnaroundTime+0xb8>)
 8007288:	f1a1 7383 	sub.w	r3, r1, #17170432	@ 0x1060000
 800728c:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
 8007290:	4293      	cmp	r3, r2
 8007292:	d32c      	bcc.n	80072ee <USB_SetTurnaroundTime+0x8e>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 8007294:	4b21      	ldr	r3, [pc, #132]	@ (800731c <USB_SetTurnaroundTime+0xbc>)
 8007296:	4a22      	ldr	r2, [pc, #136]	@ (8007320 <USB_SetTurnaroundTime+0xc0>)
 8007298:	440b      	add	r3, r1
 800729a:	4293      	cmp	r3, r2
 800729c:	d929      	bls.n	80072f2 <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 800729e:	4b21      	ldr	r3, [pc, #132]	@ (8007324 <USB_SetTurnaroundTime+0xc4>)
 80072a0:	4a21      	ldr	r2, [pc, #132]	@ (8007328 <USB_SetTurnaroundTime+0xc8>)
 80072a2:	440b      	add	r3, r1
 80072a4:	4293      	cmp	r3, r2
 80072a6:	d326      	bcc.n	80072f6 <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 80072a8:	4b20      	ldr	r3, [pc, #128]	@ (800732c <USB_SetTurnaroundTime+0xcc>)
 80072aa:	4a21      	ldr	r2, [pc, #132]	@ (8007330 <USB_SetTurnaroundTime+0xd0>)
 80072ac:	440b      	add	r3, r1
 80072ae:	4293      	cmp	r3, r2
 80072b0:	d323      	bcc.n	80072fa <USB_SetTurnaroundTime+0x9a>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 80072b2:	4a20      	ldr	r2, [pc, #128]	@ (8007334 <USB_SetTurnaroundTime+0xd4>)
 80072b4:	f1a1 73b7 	sub.w	r3, r1, #23986176	@ 0x16e0000
 80072b8:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
 80072bc:	4293      	cmp	r3, r2
 80072be:	d31e      	bcc.n	80072fe <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 80072c0:	4b1d      	ldr	r3, [pc, #116]	@ (8007338 <USB_SetTurnaroundTime+0xd8>)
      UsbTrd = 0x7U;
 80072c2:	4a1e      	ldr	r2, [pc, #120]	@ (800733c <USB_SetTurnaroundTime+0xdc>)
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 80072c4:	440b      	add	r3, r1
      UsbTrd = 0x7U;
 80072c6:	4293      	cmp	r3, r2
 80072c8:	bf2c      	ite	cs
 80072ca:	2306      	movcs	r3, #6
 80072cc:	2307      	movcc	r3, #7
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 80072ce:	68c2      	ldr	r2, [r0, #12]
 80072d0:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
 80072d4:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 80072d6:	68c2      	ldr	r2, [r0, #12]
 80072d8:	ea42 2383 	orr.w	r3, r2, r3, lsl #10
 80072dc:	60c3      	str	r3, [r0, #12]
}
 80072de:	2000      	movs	r0, #0
 80072e0:	4770      	bx	lr
      UsbTrd = 0xFU;
 80072e2:	230f      	movs	r3, #15
 80072e4:	e7f3      	b.n	80072ce <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xEU;
 80072e6:	230e      	movs	r3, #14
 80072e8:	e7f1      	b.n	80072ce <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xDU;
 80072ea:	230d      	movs	r3, #13
 80072ec:	e7ef      	b.n	80072ce <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xCU;
 80072ee:	230c      	movs	r3, #12
 80072f0:	e7ed      	b.n	80072ce <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xBU;
 80072f2:	230b      	movs	r3, #11
 80072f4:	e7eb      	b.n	80072ce <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xAU;
 80072f6:	230a      	movs	r3, #10
 80072f8:	e7e9      	b.n	80072ce <USB_SetTurnaroundTime+0x6e>
    UsbTrd = USBD_HS_TRDT_VALUE;
 80072fa:	2309      	movs	r3, #9
 80072fc:	e7e7      	b.n	80072ce <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0x8U;
 80072fe:	2308      	movs	r3, #8
 8007300:	e7e5      	b.n	80072ce <USB_SetTurnaroundTime+0x6e>
 8007302:	bf00      	nop
 8007304:	ff275340 	.word	0xff275340
 8007308:	000c34ff 	.word	0x000c34ff
 800730c:	ff1b1e40 	.word	0xff1b1e40
 8007310:	000f423f 	.word	0x000f423f
 8007314:	00124f7f 	.word	0x00124f7f
 8007318:	0013d620 	.word	0x0013d620
 800731c:	fee5b660 	.word	0xfee5b660
 8007320:	0016e35f 	.word	0x0016e35f
 8007324:	feced300 	.word	0xfeced300
 8007328:	001b7740 	.word	0x001b7740
 800732c:	feb35bc0 	.word	0xfeb35bc0
 8007330:	002191c0 	.word	0x002191c0
 8007334:	00387520 	.word	0x00387520
 8007338:	fe5954e0 	.word	0xfe5954e0
 800733c:	00419ce0 	.word	0x00419ce0

08007340 <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 8007340:	6883      	ldr	r3, [r0, #8]
 8007342:	f043 0301 	orr.w	r3, r3, #1
 8007346:	6083      	str	r3, [r0, #8]
}
 8007348:	2000      	movs	r0, #0
 800734a:	4770      	bx	lr

0800734c <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 800734c:	6883      	ldr	r3, [r0, #8]
 800734e:	f023 0301 	bic.w	r3, r3, #1
 8007352:	6083      	str	r3, [r0, #8]
}
 8007354:	2000      	movs	r0, #0
 8007356:	4770      	bx	lr

08007358 <USB_SetCurrentMode>:
{
 8007358:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 800735a:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 800735c:	2901      	cmp	r1, #1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 800735e:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
{
 8007362:	4605      	mov	r5, r0
 8007364:	460c      	mov	r4, r1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8007366:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8007368:	d114      	bne.n	8007394 <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 800736a:	68c3      	ldr	r3, [r0, #12]
 800736c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8007370:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 8007372:	2400      	movs	r4, #0
      HAL_Delay(10U);
 8007374:	200a      	movs	r0, #10
 8007376:	f7fc fea5 	bl	80040c4 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 800737a:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 800737c:	07d9      	lsls	r1, r3, #31
      ms += 10U;
 800737e:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8007382:	d402      	bmi.n	800738a <USB_SetCurrentMode+0x32>
 8007384:	2cc8      	cmp	r4, #200	@ 0xc8
 8007386:	d1f5      	bne.n	8007374 <USB_SetCurrentMode+0x1c>
      ms += 10U;
 8007388:	24c8      	movs	r4, #200	@ 0xc8
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 800738a:	f1a4 03c8 	sub.w	r3, r4, #200	@ 0xc8
 800738e:	4258      	negs	r0, r3
 8007390:	4158      	adcs	r0, r3
}
 8007392:	bd38      	pop	{r3, r4, r5, pc}
  else if (mode == USB_DEVICE_MODE)
 8007394:	b971      	cbnz	r1, 80073b4 <USB_SetCurrentMode+0x5c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8007396:	68c3      	ldr	r3, [r0, #12]
 8007398:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800739c:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
 800739e:	200a      	movs	r0, #10
 80073a0:	f7fc fe90 	bl	80040c4 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 80073a4:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 80073a6:	07da      	lsls	r2, r3, #31
      ms += 10U;
 80073a8:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 80073ac:	d5ed      	bpl.n	800738a <USB_SetCurrentMode+0x32>
 80073ae:	2cc8      	cmp	r4, #200	@ 0xc8
 80073b0:	d1f5      	bne.n	800739e <USB_SetCurrentMode+0x46>
 80073b2:	e7e9      	b.n	8007388 <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 80073b4:	2001      	movs	r0, #1
 80073b6:	e7ec      	b.n	8007392 <USB_SetCurrentMode+0x3a>

080073b8 <USB_FlushTxFifo>:
{
 80073b8:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 80073ba:	2300      	movs	r3, #0
{
 80073bc:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 80073be:	9301      	str	r3, [sp, #4]
    count++;
 80073c0:	9b01      	ldr	r3, [sp, #4]
 80073c2:	3301      	adds	r3, #1
 80073c4:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 80073c6:	9b01      	ldr	r3, [sp, #4]
 80073c8:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80073cc:	d815      	bhi.n	80073fa <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 80073ce:	6913      	ldr	r3, [r2, #16]
 80073d0:	2b00      	cmp	r3, #0
 80073d2:	daf5      	bge.n	80073c0 <USB_FlushTxFifo+0x8>
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 80073d4:	0189      	lsls	r1, r1, #6
  count = 0U;
 80073d6:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 80073d8:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
 80073dc:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 80073de:	6111      	str	r1, [r2, #16]
    count++;
 80073e0:	9b01      	ldr	r3, [sp, #4]
 80073e2:	3301      	adds	r3, #1
 80073e4:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 80073e6:	9b01      	ldr	r3, [sp, #4]
 80073e8:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80073ec:	d805      	bhi.n	80073fa <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 80073ee:	6910      	ldr	r0, [r2, #16]
 80073f0:	f010 0020 	ands.w	r0, r0, #32
 80073f4:	d1f4      	bne.n	80073e0 <USB_FlushTxFifo+0x28>
}
 80073f6:	b002      	add	sp, #8
 80073f8:	4770      	bx	lr
      return HAL_TIMEOUT;
 80073fa:	2003      	movs	r0, #3
 80073fc:	e7fb      	b.n	80073f6 <USB_FlushTxFifo+0x3e>

080073fe <USB_FlushRxFifo>:
{
 80073fe:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8007400:	2300      	movs	r3, #0
{
 8007402:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8007404:	9301      	str	r3, [sp, #4]
    count++;
 8007406:	9b01      	ldr	r3, [sp, #4]
 8007408:	3301      	adds	r3, #1
 800740a:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 800740c:	9b01      	ldr	r3, [sp, #4]
 800740e:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007412:	d813      	bhi.n	800743c <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8007414:	6913      	ldr	r3, [r2, #16]
 8007416:	2b00      	cmp	r3, #0
 8007418:	daf5      	bge.n	8007406 <USB_FlushRxFifo+0x8>
  count = 0U;
 800741a:	2300      	movs	r3, #0
 800741c:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 800741e:	2310      	movs	r3, #16
 8007420:	6113      	str	r3, [r2, #16]
    count++;
 8007422:	9b01      	ldr	r3, [sp, #4]
 8007424:	3301      	adds	r3, #1
 8007426:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8007428:	9b01      	ldr	r3, [sp, #4]
 800742a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800742e:	d805      	bhi.n	800743c <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 8007430:	6910      	ldr	r0, [r2, #16]
 8007432:	f010 0010 	ands.w	r0, r0, #16
 8007436:	d1f4      	bne.n	8007422 <USB_FlushRxFifo+0x24>
}
 8007438:	b002      	add	sp, #8
 800743a:	4770      	bx	lr
      return HAL_TIMEOUT;
 800743c:	2003      	movs	r0, #3
 800743e:	e7fb      	b.n	8007438 <USB_FlushRxFifo+0x3a>

08007440 <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 8007440:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007444:	4319      	orrs	r1, r3
 8007446:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 800744a:	2000      	movs	r0, #0
 800744c:	4770      	bx	lr
	...

08007450 <USB_DevInit>:
{
 8007450:	b084      	sub	sp, #16
 8007452:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007456:	4604      	mov	r4, r0
 8007458:	a809      	add	r0, sp, #36	@ 0x24
 800745a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
 800745e:	2300      	movs	r3, #0
 8007460:	f89d 6024 	ldrb.w	r6, [sp, #36]	@ 0x24
 8007464:	f89d 502e 	ldrb.w	r5, [sp, #46]	@ 0x2e
    USBx->DIEPTXF[i] = 0U;
 8007468:	4619      	mov	r1, r3
 800746a:	f103 0240 	add.w	r2, r3, #64	@ 0x40
 800746e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
 8007472:	3301      	adds	r3, #1
 8007474:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
 8007476:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 8007478:	d1f7      	bne.n	800746a <USB_DevInit+0x1a>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800747a:	f504 6700 	add.w	r7, r4, #2048	@ 0x800
  if (cfg.vbus_sensing_enable == 0U)
 800747e:	2d00      	cmp	r5, #0
 8007480:	d16c      	bne.n	800755c <USB_DevInit+0x10c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007482:	687b      	ldr	r3, [r7, #4]
 8007484:	f043 0302 	orr.w	r3, r3, #2
 8007488:	607b      	str	r3, [r7, #4]
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 800748a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800748c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8007490:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 8007492:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007494:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8007498:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 800749a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800749c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 80074a0:	63a3      	str	r3, [r4, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
 80074a2:	2300      	movs	r3, #0
 80074a4:	f8c4 3e00 	str.w	r3, [r4, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80074a8:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 80074ac:	2b01      	cmp	r3, #1
 80074ae:	d15f      	bne.n	8007570 <USB_DevInit+0x120>
    if (cfg.speed == USBD_HS_SPEED)
 80074b0:	f89d 1027 	ldrb.w	r1, [sp, #39]	@ 0x27
 80074b4:	2900      	cmp	r1, #0
 80074b6:	d159      	bne.n	800756c <USB_DevInit+0x11c>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 80074b8:	4620      	mov	r0, r4
 80074ba:	f7ff ffc1 	bl	8007440 <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 80074be:	2110      	movs	r1, #16
 80074c0:	4620      	mov	r0, r4
 80074c2:	f7ff ff79 	bl	80073b8 <USB_FlushTxFifo>
 80074c6:	4601      	mov	r1, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 80074c8:	4620      	mov	r0, r4
 80074ca:	f7ff ff98 	bl	80073fe <USB_FlushRxFifo>
 80074ce:	4308      	orrs	r0, r1
 80074d0:	b2c0      	uxtb	r0, r0
  USBx_DEVICE->DIEPMSK = 0U;
 80074d2:	2300      	movs	r3, #0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 80074d4:	3800      	subs	r0, #0
  USBx_DEVICE->DIEPMSK = 0U;
 80074d6:	613b      	str	r3, [r7, #16]
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 80074d8:	bf18      	it	ne
 80074da:	2001      	movne	r0, #1
  USBx_DEVICE->DOEPMSK = 0U;
 80074dc:	617b      	str	r3, [r7, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 80074de:	f504 6210 	add.w	r2, r4, #2304	@ 0x900
 80074e2:	61fb      	str	r3, [r7, #28]
      USBx_INEP(i)->DIEPCTL = 0U;
 80074e4:	4619      	mov	r1, r3
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 80074e6:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 80074ea:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 80074ee:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80074f2:	429e      	cmp	r6, r3
 80074f4:	d83e      	bhi.n	8007574 <USB_DevInit+0x124>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80074f6:	2200      	movs	r2, #0
 80074f8:	f504 6330 	add.w	r3, r4, #2816	@ 0xb00
      USBx_OUTEP(i)->DOEPCTL = 0U;
 80074fc:	4611      	mov	r1, r2
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 80074fe:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8007502:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8007506:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800750a:	4296      	cmp	r6, r2
 800750c:	d845      	bhi.n	800759a <USB_DevInit+0x14a>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 800750e:	693b      	ldr	r3, [r7, #16]
 8007510:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007514:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
 8007516:	2300      	movs	r3, #0
 8007518:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 800751a:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 800751e:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 8007520:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
 8007524:	b91b      	cbnz	r3, 800752e <USB_DevInit+0xde>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8007526:	69a3      	ldr	r3, [r4, #24]
 8007528:	f043 0310 	orr.w	r3, r3, #16
 800752c:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 800752e:	69a2      	ldr	r2, [r4, #24]
 8007530:	4b23      	ldr	r3, [pc, #140]	@ (80075c0 <USB_DevInit+0x170>)
 8007532:	4313      	orrs	r3, r2
 8007534:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 8007536:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 800753a:	b11b      	cbz	r3, 8007544 <USB_DevInit+0xf4>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 800753c:	69a3      	ldr	r3, [r4, #24]
 800753e:	f043 0308 	orr.w	r3, r3, #8
 8007542:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 8007544:	2d01      	cmp	r5, #1
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 8007546:	bf01      	itttt	eq
 8007548:	69a3      	ldreq	r3, [r4, #24]
 800754a:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
 800754e:	f043 0304 	orreq.w	r3, r3, #4
 8007552:	61a3      	streq	r3, [r4, #24]
}
 8007554:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007558:	b004      	add	sp, #16
 800755a:	4770      	bx	lr
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 800755c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800755e:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8007562:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8007564:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007566:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800756a:	e799      	b.n	80074a0 <USB_DevInit+0x50>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 800756c:	4619      	mov	r1, r3
 800756e:	e7a3      	b.n	80074b8 <USB_DevInit+0x68>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8007570:	2103      	movs	r1, #3
 8007572:	e7a1      	b.n	80074b8 <USB_DevInit+0x68>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007574:	f8d2 9000 	ldr.w	r9, [r2]
 8007578:	f1b9 0f00 	cmp.w	r9, #0
 800757c:	da0b      	bge.n	8007596 <USB_DevInit+0x146>
      if (i == 0U)
 800757e:	b93b      	cbnz	r3, 8007590 <USB_DevInit+0x140>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8007580:	f8c2 e000 	str.w	lr, [r2]
    USBx_INEP(i)->DIEPTSIZ = 0U;
 8007584:	6111      	str	r1, [r2, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8007586:	3301      	adds	r3, #1
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8007588:	f8c2 8008 	str.w	r8, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800758c:	3220      	adds	r2, #32
 800758e:	e7b0      	b.n	80074f2 <USB_DevInit+0xa2>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8007590:	f8c2 c000 	str.w	ip, [r2]
 8007594:	e7f6      	b.n	8007584 <USB_DevInit+0x134>
      USBx_INEP(i)->DIEPCTL = 0U;
 8007596:	6011      	str	r1, [r2, #0]
 8007598:	e7f4      	b.n	8007584 <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 800759a:	f8d3 9000 	ldr.w	r9, [r3]
 800759e:	f1b9 0f00 	cmp.w	r9, #0
 80075a2:	da0b      	bge.n	80075bc <USB_DevInit+0x16c>
      if (i == 0U)
 80075a4:	b93a      	cbnz	r2, 80075b6 <USB_DevInit+0x166>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 80075a6:	f8c3 e000 	str.w	lr, [r3]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 80075aa:	6119      	str	r1, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80075ac:	3201      	adds	r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 80075ae:	f8c3 8008 	str.w	r8, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80075b2:	3320      	adds	r3, #32
 80075b4:	e7a9      	b.n	800750a <USB_DevInit+0xba>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 80075b6:	f8c3 c000 	str.w	ip, [r3]
 80075ba:	e7f6      	b.n	80075aa <USB_DevInit+0x15a>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 80075bc:	6019      	str	r1, [r3, #0]
 80075be:	e7f4      	b.n	80075aa <USB_DevInit+0x15a>
 80075c0:	803c3800 	.word	0x803c3800

080075c4 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 80075c4:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 80075c8:	f013 0006 	ands.w	r0, r3, #6
 80075cc:	d004      	beq.n	80075d8 <USB_GetDevSpeed+0x14>
    speed = 0xFU;
 80075ce:	f013 0f02 	tst.w	r3, #2
 80075d2:	bf14      	ite	ne
 80075d4:	2002      	movne	r0, #2
 80075d6:	200f      	moveq	r0, #15
}
 80075d8:	4770      	bx	lr

080075da <USB_ActivateEndpoint>:
{
 80075da:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
 80075dc:	780c      	ldrb	r4, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 80075de:	2201      	movs	r2, #1
 80075e0:	f004 050f 	and.w	r5, r4, #15
 80075e4:	40aa      	lsls	r2, r5
  if (ep->is_in == 1U)
 80075e6:	784d      	ldrb	r5, [r1, #1]
 80075e8:	2d01      	cmp	r5, #1
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 80075ea:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 80075ee:	eb00 1044 	add.w	r0, r0, r4, lsl #5
  if (ep->is_in == 1U)
 80075f2:	d119      	bne.n	8007628 <USB_ActivateEndpoint+0x4e>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 80075f4:	69dd      	ldr	r5, [r3, #28]
 80075f6:	432a      	orrs	r2, r5
 80075f8:	61da      	str	r2, [r3, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 80075fa:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80075fe:	041a      	lsls	r2, r3, #16
 8007600:	d410      	bmi.n	8007624 <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8007602:	688a      	ldr	r2, [r1, #8]
 8007604:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
 8007608:	f3c2 030a 	ubfx	r3, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 800760c:	790a      	ldrb	r2, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 800760e:	432b      	orrs	r3, r5
 8007610:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8007614:	ea43 5384 	orr.w	r3, r3, r4, lsl #22
 8007618:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800761c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007620:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8007624:	2000      	movs	r0, #0
 8007626:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 8007628:	69dc      	ldr	r4, [r3, #28]
 800762a:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 800762e:	61da      	str	r2, [r3, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 8007630:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8007634:	041b      	lsls	r3, r3, #16
 8007636:	d4f5      	bmi.n	8007624 <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8007638:	688b      	ldr	r3, [r1, #8]
 800763a:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 800763e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007642:	4313      	orrs	r3, r2
                                    ((uint32_t)ep->type << 18) |
 8007644:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8007646:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 800764a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800764e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8007652:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8007656:	e7e5      	b.n	8007624 <USB_ActivateEndpoint+0x4a>

08007658 <USB_DeactivateEndpoint>:
{
 8007658:	b510      	push	{r4, lr}
  uint32_t epnum = (uint32_t)ep->num;
 800765a:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 800765c:	7849      	ldrb	r1, [r1, #1]
 800765e:	2901      	cmp	r1, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007660:	eb00 1342 	add.w	r3, r0, r2, lsl #5
 8007664:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
 8007668:	f002 020f 	and.w	r2, r2, #15
  if (ep->is_in == 1U)
 800766c:	d122      	bne.n	80076b4 <USB_DeactivateEndpoint+0x5c>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800766e:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8007672:	2900      	cmp	r1, #0
 8007674:	da0b      	bge.n	800768e <USB_DeactivateEndpoint+0x36>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 8007676:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 800767a:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 800767e:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 8007682:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8007686:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 800768a:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 800768e:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8007690:	2101      	movs	r1, #1
 8007692:	fa01 f202 	lsl.w	r2, r1, r2
 8007696:	ea24 0402 	bic.w	r4, r4, r2
 800769a:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 800769c:	69c1      	ldr	r1, [r0, #28]
 800769e:	ea21 0202 	bic.w	r2, r1, r2
 80076a2:	61c2      	str	r2, [r0, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 80076a4:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 80076a8:	4a14      	ldr	r2, [pc, #80]	@ (80076fc <USB_DeactivateEndpoint+0xa4>)
 80076aa:	400a      	ands	r2, r1
 80076ac:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
 80076b0:	2000      	movs	r0, #0
 80076b2:	bd10      	pop	{r4, pc}
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 80076b4:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 80076b8:	2900      	cmp	r1, #0
 80076ba:	da0b      	bge.n	80076d4 <USB_DeactivateEndpoint+0x7c>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 80076bc:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 80076c0:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 80076c4:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 80076c8:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 80076cc:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 80076d0:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 80076d4:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 80076d6:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80076da:	fa01 f202 	lsl.w	r2, r1, r2
 80076de:	ea24 0402 	bic.w	r4, r4, r2
 80076e2:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 80076e4:	69c1      	ldr	r1, [r0, #28]
 80076e6:	ea21 0202 	bic.w	r2, r1, r2
 80076ea:	61c2      	str	r2, [r0, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 80076ec:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 80076f0:	4a03      	ldr	r2, [pc, #12]	@ (8007700 <USB_DeactivateEndpoint+0xa8>)
 80076f2:	400a      	ands	r2, r1
 80076f4:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
 80076f8:	e7da      	b.n	80076b0 <USB_DeactivateEndpoint+0x58>
 80076fa:	bf00      	nop
 80076fc:	ec337800 	.word	0xec337800
 8007700:	eff37800 	.word	0xeff37800

08007704 <USB_EPStopXfer>:
{
 8007704:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8007706:	2300      	movs	r3, #0
  if (ep->is_in == 1U)
 8007708:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
 800770a:	9301      	str	r3, [sp, #4]
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800770c:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 800770e:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007710:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
 8007714:	d11e      	bne.n	8007754 <USB_EPStopXfer+0x50>
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8007716:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 800771a:	18c1      	adds	r1, r0, r3
 800771c:	58c2      	ldr	r2, [r0, r3]
 800771e:	2a00      	cmp	r2, #0
 8007720:	db02      	blt.n	8007728 <USB_EPStopXfer+0x24>
  HAL_StatusTypeDef ret = HAL_OK;
 8007722:	2000      	movs	r0, #0
}
 8007724:	b002      	add	sp, #8
 8007726:	4770      	bx	lr
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 8007728:	58c2      	ldr	r2, [r0, r3]
 800772a:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 800772e:	50c2      	str	r2, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 8007730:	58c2      	ldr	r2, [r0, r3]
 8007732:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8007736:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8007738:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 800773c:	9b01      	ldr	r3, [sp, #4]
 800773e:	3301      	adds	r3, #1
 8007740:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8007742:	9b01      	ldr	r3, [sp, #4]
 8007744:	4293      	cmp	r3, r2
 8007746:	d901      	bls.n	800774c <USB_EPStopXfer+0x48>
          ret = HAL_ERROR;
 8007748:	2001      	movs	r0, #1
 800774a:	e7eb      	b.n	8007724 <USB_EPStopXfer+0x20>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 800774c:	680b      	ldr	r3, [r1, #0]
 800774e:	2b00      	cmp	r3, #0
 8007750:	dbf4      	blt.n	800773c <USB_EPStopXfer+0x38>
 8007752:	e7e6      	b.n	8007722 <USB_EPStopXfer+0x1e>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007754:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 8007758:	18c1      	adds	r1, r0, r3
 800775a:	58c2      	ldr	r2, [r0, r3]
 800775c:	2a00      	cmp	r2, #0
 800775e:	dae0      	bge.n	8007722 <USB_EPStopXfer+0x1e>
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 8007760:	58c2      	ldr	r2, [r0, r3]
 8007762:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8007766:	50c2      	str	r2, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 8007768:	58c2      	ldr	r2, [r0, r3]
 800776a:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800776e:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8007770:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8007774:	9b01      	ldr	r3, [sp, #4]
 8007776:	3301      	adds	r3, #1
 8007778:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 800777a:	9b01      	ldr	r3, [sp, #4]
 800777c:	4293      	cmp	r3, r2
 800777e:	d8e3      	bhi.n	8007748 <USB_EPStopXfer+0x44>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 8007780:	680b      	ldr	r3, [r1, #0]
 8007782:	2b00      	cmp	r3, #0
 8007784:	dbf6      	blt.n	8007774 <USB_EPStopXfer+0x70>
 8007786:	e7cc      	b.n	8007722 <USB_EPStopXfer+0x1e>

08007788 <USB_WritePacket>:
{
 8007788:	b510      	push	{r4, lr}
 800778a:	f89d 4008 	ldrb.w	r4, [sp, #8]
  if (dma == 0U)
 800778e:	b944      	cbnz	r4, 80077a2 <USB_WritePacket+0x1a>
    count32b = ((uint32_t)len + 3U) / 4U;
 8007790:	3303      	adds	r3, #3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8007792:	3201      	adds	r2, #1
    count32b = ((uint32_t)len + 3U) / 4U;
 8007794:	089b      	lsrs	r3, r3, #2
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8007796:	eb00 3002 	add.w	r0, r0, r2, lsl #12
 800779a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    for (i = 0U; i < count32b; i++)
 800779e:	4299      	cmp	r1, r3
 80077a0:	d101      	bne.n	80077a6 <USB_WritePacket+0x1e>
}
 80077a2:	2000      	movs	r0, #0
 80077a4:	bd10      	pop	{r4, pc}
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 80077a6:	f851 2b04 	ldr.w	r2, [r1], #4
 80077aa:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 80077ac:	e7f7      	b.n	800779e <USB_WritePacket+0x16>
	...

080077b0 <USB_EPStartXfer>:
{
 80077b0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if (ep->is_in == 1U)
 80077b4:	784b      	ldrb	r3, [r1, #1]
    if (ep->xfer_len == 0U)
 80077b6:	690c      	ldr	r4, [r1, #16]
        if (ep->type == EP_TYPE_ISOC)
 80077b8:	790f      	ldrb	r7, [r1, #4]
 80077ba:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 80079ac <USB_EPStartXfer+0x1fc>
 80077be:	f8df 81f0 	ldr.w	r8, [pc, #496]	@ 80079b0 <USB_EPStartXfer+0x200>
{
 80077c2:	4616      	mov	r6, r2
  uint32_t epnum = (uint32_t)ep->num;
 80077c4:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 80077c6:	2b01      	cmp	r3, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 80077c8:	eb00 1542 	add.w	r5, r0, r2, lsl #5
  if (ep->is_in == 1U)
 80077cc:	f040 8097 	bne.w	80078fe <USB_EPStartXfer+0x14e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 80077d0:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
 80077d4:	f8dc 3010 	ldr.w	r3, [ip, #16]
    if (ep->xfer_len == 0U)
 80077d8:	bb74      	cbnz	r4, 8007838 <USB_EPStartXfer+0x88>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 80077da:	ea03 030e 	and.w	r3, r3, lr
 80077de:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 80077e2:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80077e6:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80077ea:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 80077ee:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80077f2:	ea03 0308 	and.w	r3, r3, r8
    if (dma == 1U)
 80077f6:	2e01      	cmp	r6, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 80077f8:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 80077fc:	d157      	bne.n	80078ae <USB_EPStartXfer+0xfe>
      if ((uint32_t)ep->dma_addr != 0U)
 80077fe:	69cb      	ldr	r3, [r1, #28]
 8007800:	b10b      	cbz	r3, 8007806 <USB_EPStartXfer+0x56>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8007802:	f8cc 3014 	str.w	r3, [ip, #20]
      if (ep->type == EP_TYPE_ISOC)
 8007806:	2f01      	cmp	r7, #1
 8007808:	d10c      	bne.n	8007824 <USB_EPStartXfer+0x74>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800780a:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 800780e:	f413 7f80 	tst.w	r3, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8007812:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8007816:	bf0c      	ite	eq
 8007818:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800781c:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8007820:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007824:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8007828:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 800782c:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
}
 8007830:	2000      	movs	r0, #0
 8007832:	b002      	add	sp, #8
 8007834:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8007838:	ea03 0308 	and.w	r3, r3, r8
 800783c:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8007840:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007844:	ea03 030e 	and.w	r3, r3, lr
 8007848:	f8cc 3010 	str.w	r3, [ip, #16]
        if (ep->xfer_len > ep->maxpacket)
 800784c:	688b      	ldr	r3, [r1, #8]
      if (epnum == 0U)
 800784e:	b97a      	cbnz	r2, 8007870 <USB_EPStartXfer+0xc0>
        if (ep->xfer_len > ep->maxpacket)
 8007850:	42a3      	cmp	r3, r4
          ep->xfer_len = ep->maxpacket;
 8007852:	bf38      	it	cc
 8007854:	610b      	strcc	r3, [r1, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8007856:	f8dc 3010 	ldr.w	r3, [ip, #16]
 800785a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & ((uint32_t)pktcnt << 29));
 800785e:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8007862:	690b      	ldr	r3, [r1, #16]
 8007864:	f8dc 4010 	ldr.w	r4, [ip, #16]
 8007868:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800786c:	4323      	orrs	r3, r4
 800786e:	e7c2      	b.n	80077f6 <USB_EPStartXfer+0x46>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007870:	441c      	add	r4, r3
 8007872:	3c01      	subs	r4, #1
 8007874:	fbb4 f4f3 	udiv	r4, r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19));
 8007878:	4b4b      	ldr	r3, [pc, #300]	@ (80079a8 <USB_EPStartXfer+0x1f8>)
 800787a:	f8dc e010 	ldr.w	lr, [ip, #16]
 800787e:	fa1f f884 	uxth.w	r8, r4
 8007882:	ea03 44c4 	and.w	r4, r3, r4, lsl #19
 8007886:	ea44 040e 	orr.w	r4, r4, lr
        if (ep->type == EP_TYPE_ISOC)
 800788a:	2f01      	cmp	r7, #1
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19));
 800788c:	f8cc 4010 	str.w	r4, [ip, #16]
        if (ep->type == EP_TYPE_ISOC)
 8007890:	d1e7      	bne.n	8007862 <USB_EPStartXfer+0xb2>
          USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 8007892:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007896:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 800789a:	f8cc 3010 	str.w	r3, [ip, #16]
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & ((uint32_t)pktcnt << 29));
 800789e:	f8dc 4010 	ldr.w	r4, [ip, #16]
 80078a2:	ea4f 7348 	mov.w	r3, r8, lsl #29
 80078a6:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 80078aa:	4323      	orrs	r3, r4
 80078ac:	e7d7      	b.n	800785e <USB_EPStartXfer+0xae>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 80078ae:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
 80078b2:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 80078b4:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80078b8:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
 80078bc:	690b      	ldr	r3, [r1, #16]
      if (ep->type != EP_TYPE_ISOC)
 80078be:	d00b      	beq.n	80078d8 <USB_EPStartXfer+0x128>
        if (ep->xfer_len > 0U)
 80078c0:	2b00      	cmp	r3, #0
 80078c2:	d0b5      	beq.n	8007830 <USB_EPStartXfer+0x80>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 80078c4:	f8d0 1834 	ldr.w	r1, [r0, #2100]	@ 0x834
 80078c8:	f002 020f 	and.w	r2, r2, #15
 80078cc:	2301      	movs	r3, #1
 80078ce:	4093      	lsls	r3, r2
 80078d0:	430b      	orrs	r3, r1
 80078d2:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
 80078d6:	e7ab      	b.n	8007830 <USB_EPStartXfer+0x80>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 80078d8:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
 80078dc:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 80078e0:	f8d5 4900 	ldr.w	r4, [r5, #2304]	@ 0x900
 80078e4:	bf0c      	ite	eq
 80078e6:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 80078ea:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
 80078ee:	f8c5 4900 	str.w	r4, [r5, #2304]	@ 0x900
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 80078f2:	9600      	str	r6, [sp, #0]
 80078f4:	68c9      	ldr	r1, [r1, #12]
 80078f6:	b29b      	uxth	r3, r3
 80078f8:	f7ff ff46 	bl	8007788 <USB_WritePacket>
 80078fc:	e798      	b.n	8007830 <USB_EPStartXfer+0x80>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 80078fe:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 8007902:	ea03 0308 	and.w	r3, r3, r8
 8007906:	f8c5 3b10 	str.w	r3, [r5, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 800790a:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 800790e:	ea03 030e 	and.w	r3, r3, lr
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8007912:	f505 6c30 	add.w	ip, r5, #2816	@ 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8007916:	f8cc 3010 	str.w	r3, [ip, #16]
        ep->xfer_len = ep->maxpacket;
 800791a:	688b      	ldr	r3, [r1, #8]
    if (epnum == 0U)
 800791c:	bb5a      	cbnz	r2, 8007976 <USB_EPStartXfer+0x1c6>
      if (ep->xfer_len > 0U)
 800791e:	b104      	cbz	r4, 8007922 <USB_EPStartXfer+0x172>
        ep->xfer_len = ep->maxpacket;
 8007920:	610b      	str	r3, [r1, #16]
      ep->xfer_size = ep->maxpacket;
 8007922:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 8007924:	f8dc 2010 	ldr.w	r2, [ip, #16]
 8007928:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800792c:	4313      	orrs	r3, r2
 800792e:	f8cc 3010 	str.w	r3, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8007932:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8007936:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
    if (dma == 1U)
 800793a:	2e01      	cmp	r6, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 800793c:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 8007940:	d103      	bne.n	800794a <USB_EPStartXfer+0x19a>
      if ((uint32_t)ep->xfer_buff != 0U)
 8007942:	68cb      	ldr	r3, [r1, #12]
 8007944:	b10b      	cbz	r3, 800794a <USB_EPStartXfer+0x19a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 8007946:	f8cc 3014 	str.w	r3, [ip, #20]
    if (ep->type == EP_TYPE_ISOC)
 800794a:	2f01      	cmp	r7, #1
 800794c:	d10c      	bne.n	8007968 <USB_EPStartXfer+0x1b8>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800794e:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8007952:	f413 7f80 	tst.w	r3, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 8007956:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 800795a:	bf0c      	ite	eq
 800795c:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 8007960:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8007964:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 8007968:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 800796c:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007970:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
 8007974:	e75c      	b.n	8007830 <USB_EPStartXfer+0x80>
      if (ep->xfer_len == 0U)
 8007976:	2c00      	cmp	r4, #0
 8007978:	d0d4      	beq.n	8007924 <USB_EPStartXfer+0x174>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 800797a:	441c      	add	r4, r3
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800797c:	4a0a      	ldr	r2, [pc, #40]	@ (80079a8 <USB_EPStartXfer+0x1f8>)
 800797e:	f8dc e010 	ldr.w	lr, [ip, #16]
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007982:	3c01      	subs	r4, #1
 8007984:	fbb4 f4f3 	udiv	r4, r4, r3
 8007988:	b2a4      	uxth	r4, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800798a:	ea02 42c4 	and.w	r2, r2, r4, lsl #19
        ep->xfer_size = ep->maxpacket * pktcnt;
 800798e:	4363      	muls	r3, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007990:	ea42 020e 	orr.w	r2, r2, lr
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007994:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007996:	f8cc 2010 	str.w	r2, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 800799a:	f8dc 2010 	ldr.w	r2, [ip, #16]
 800799e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80079a2:	4313      	orrs	r3, r2
 80079a4:	e7c9      	b.n	800793a <USB_EPStartXfer+0x18a>
 80079a6:	bf00      	nop
 80079a8:	1ff80000 	.word	0x1ff80000
 80079ac:	e007ffff 	.word	0xe007ffff
 80079b0:	fff80000 	.word	0xfff80000

080079b4 <USB_ReadPacket>:
{
 80079b4:	4603      	mov	r3, r0
 80079b6:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
 80079b8:	2000      	movs	r0, #0
  uint32_t count32b = (uint32_t)len >> 2U;
 80079ba:	0894      	lsrs	r4, r2, #2
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 80079bc:	f503 5580 	add.w	r5, r3, #4096	@ 0x1000
  uint16_t remaining_bytes = len % 4U;
 80079c0:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 80079c4:	42a0      	cmp	r0, r4
 80079c6:	d310      	bcc.n	80079ea <USB_ReadPacket+0x36>
 80079c8:	eb01 0084 	add.w	r0, r1, r4, lsl #2
  if (remaining_bytes != 0U)
 80079cc:	b162      	cbz	r2, 80079e8 <USB_ReadPacket+0x34>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 80079ce:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80079d2:	681c      	ldr	r4, [r3, #0]
    i = 0U;
 80079d4:	2300      	movs	r3, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 80079d6:	00d9      	lsls	r1, r3, #3
 80079d8:	fa24 f101 	lsr.w	r1, r4, r1
 80079dc:	54c1      	strb	r1, [r0, r3]
      i++;
 80079de:	3301      	adds	r3, #1
    } while (remaining_bytes != 0U);
 80079e0:	b299      	uxth	r1, r3
 80079e2:	428a      	cmp	r2, r1
 80079e4:	d1f7      	bne.n	80079d6 <USB_ReadPacket+0x22>
 80079e6:	4410      	add	r0, r2
}
 80079e8:	bd70      	pop	{r4, r5, r6, pc}
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 80079ea:	682e      	ldr	r6, [r5, #0]
 80079ec:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
  for (i = 0U; i < count32b; i++)
 80079f0:	3001      	adds	r0, #1
 80079f2:	e7e7      	b.n	80079c4 <USB_ReadPacket+0x10>

080079f4 <USB_EPSetStall>:
  if (ep->is_in == 1U)
 80079f4:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 80079f6:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 80079f8:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 80079fa:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 80079fe:	d112      	bne.n	8007a26 <USB_EPSetStall+0x32>
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8007a00:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 8007a04:	2a00      	cmp	r2, #0
 8007a06:	db06      	blt.n	8007a16 <USB_EPSetStall+0x22>
 8007a08:	b12b      	cbz	r3, 8007a16 <USB_EPSetStall+0x22>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 8007a0a:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007a0e:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8007a12:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 8007a16:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007a1a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8007a1e:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8007a22:	2000      	movs	r0, #0
 8007a24:	4770      	bx	lr
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 8007a26:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007a2a:	2a00      	cmp	r2, #0
 8007a2c:	db06      	blt.n	8007a3c <USB_EPSetStall+0x48>
 8007a2e:	b12b      	cbz	r3, 8007a3c <USB_EPSetStall+0x48>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 8007a30:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8007a34:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8007a38:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 8007a3c:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8007a40:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8007a44:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8007a48:	e7eb      	b.n	8007a22 <USB_EPSetStall+0x2e>

08007a4a <USB_EPClearStall>:
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007a4a:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8007a4c:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007a4e:	eb00 1043 	add.w	r0, r0, r3, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007a52:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
 8007a54:	2a01      	cmp	r2, #1
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007a56:	f1a3 0302 	sub.w	r3, r3, #2
 8007a5a:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
 8007a5c:	d10f      	bne.n	8007a7e <USB_EPClearStall+0x34>
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007a5e:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007a62:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007a64:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8007a68:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007a6c:	d805      	bhi.n	8007a7a <USB_EPClearStall+0x30>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007a6e:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007a72:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007a76:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8007a7a:	2000      	movs	r0, #0
 8007a7c:	4770      	bx	lr
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007a7e:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007a82:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007a86:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007a88:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007a8c:	bf9e      	ittt	ls
 8007a8e:	f8d0 3b00 	ldrls.w	r3, [r0, #2816]	@ 0xb00
 8007a92:	f043 5380 	orrls.w	r3, r3, #268435456	@ 0x10000000
 8007a96:	f8c0 3b00 	strls.w	r3, [r0, #2816]	@ 0xb00
 8007a9a:	e7ee      	b.n	8007a7a <USB_EPClearStall+0x30>

08007a9c <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 8007a9c:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007aa0:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8007aa4:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 8007aa8:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007aac:	0109      	lsls	r1, r1, #4
 8007aae:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
 8007ab2:	4319      	orrs	r1, r3
 8007ab4:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8007ab8:	2000      	movs	r0, #0
 8007aba:	4770      	bx	lr

08007abc <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007abc:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007ac0:	f023 0303 	bic.w	r3, r3, #3
 8007ac4:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 8007ac8:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007acc:	f023 0302 	bic.w	r3, r3, #2
 8007ad0:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007ad4:	2000      	movs	r0, #0
 8007ad6:	4770      	bx	lr

08007ad8 <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007ad8:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007adc:	f023 0303 	bic.w	r3, r3, #3
 8007ae0:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007ae4:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007ae8:	f043 0302 	orr.w	r3, r3, #2
 8007aec:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007af0:	2000      	movs	r0, #0
 8007af2:	4770      	bx	lr

08007af4 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 8007af4:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 8007af6:	6980      	ldr	r0, [r0, #24]
}
 8007af8:	4010      	ands	r0, r2
 8007afa:	4770      	bx	lr

08007afc <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8007afc:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8007b00:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007b04:	69c0      	ldr	r0, [r0, #28]
 8007b06:	4018      	ands	r0, r3
}
 8007b08:	0c00      	lsrs	r0, r0, #16
 8007b0a:	4770      	bx	lr

08007b0c <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8007b0c:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8007b10:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8007b14:	69c0      	ldr	r0, [r0, #28]
 8007b16:	4018      	ands	r0, r3
}
 8007b18:	b280      	uxth	r0, r0
 8007b1a:	4770      	bx	lr

08007b1c <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 8007b1c:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
 8007b20:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 8007b24:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 8007b28:	6940      	ldr	r0, [r0, #20]
}
 8007b2a:	4010      	ands	r0, r2
 8007b2c:	4770      	bx	lr

08007b2e <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
 8007b2e:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 8007b32:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8007b36:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8007b3a:	f001 010f 	and.w	r1, r1, #15
 8007b3e:	40cb      	lsrs	r3, r1
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8007b40:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8007b44:	01db      	lsls	r3, r3, #7
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8007b46:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8007b48:	b2db      	uxtb	r3, r3
 8007b4a:	4313      	orrs	r3, r2
}
 8007b4c:	4018      	ands	r0, r3
 8007b4e:	4770      	bx	lr

08007b50 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 8007b50:	6940      	ldr	r0, [r0, #20]
}
 8007b52:	f000 0001 	and.w	r0, r0, #1
 8007b56:	4770      	bx	lr

08007b58 <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 8007b58:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007b5c:	f36f 030a 	bfc	r3, #0, #11
 8007b60:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 8007b64:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007b68:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007b6c:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007b70:	2000      	movs	r0, #0
 8007b72:	4770      	bx	lr

08007b74 <USB_EP0_OutStart>:
{
 8007b74:	b530      	push	{r4, r5, lr}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8007b76:	6c05      	ldr	r5, [r0, #64]	@ 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8007b78:	4c10      	ldr	r4, [pc, #64]	@ (8007bbc <USB_EP0_OutStart+0x48>)
 8007b7a:	42a5      	cmp	r5, r4
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007b7c:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8007b80:	d903      	bls.n	8007b8a <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007b82:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
 8007b86:	2c00      	cmp	r4, #0
 8007b88:	db16      	blt.n	8007bb8 <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 8007b8a:	2400      	movs	r4, #0
 8007b8c:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8007b8e:	691c      	ldr	r4, [r3, #16]
 8007b90:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 8007b94:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 8007b96:	691c      	ldr	r4, [r3, #16]
 8007b98:	f044 0418 	orr.w	r4, r4, #24
 8007b9c:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007b9e:	691c      	ldr	r4, [r3, #16]
  if (dma == 1U)
 8007ba0:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007ba2:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
 8007ba6:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 8007ba8:	bf01      	itttt	eq
 8007baa:	615a      	streq	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 8007bac:	f8d0 3b00 	ldreq.w	r3, [r0, #2816]	@ 0xb00
 8007bb0:	f043 2380 	orreq.w	r3, r3, #2147516416	@ 0x80008000
 8007bb4:	f8c0 3b00 	streq.w	r3, [r0, #2816]	@ 0xb00
}
 8007bb8:	2000      	movs	r0, #0
 8007bba:	bd30      	pop	{r4, r5, pc}
 8007bbc:	4f54300a 	.word	0x4f54300a

08007bc0 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007bc0:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007bc2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007bc6:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8007bc8:	f001 fedc 	bl	8009984 <xTaskGetSchedulerState>
 8007bcc:	2801      	cmp	r0, #1
 8007bce:	d003      	beq.n	8007bd8 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007bd0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007bd4:	f000 bc0e 	b.w	80083f4 <xPortSysTickHandler>
}
 8007bd8:	bd08      	pop	{r3, pc}
	...

08007bdc <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007bdc:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007be0:	b92b      	cbnz	r3, 8007bee <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007be2:	4b06      	ldr	r3, [pc, #24]	@ (8007bfc <osKernelInitialize+0x20>)
 8007be4:	6818      	ldr	r0, [r3, #0]
 8007be6:	b928      	cbnz	r0, 8007bf4 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007be8:	2201      	movs	r2, #1
 8007bea:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007bec:	4770      	bx	lr
    stat = osErrorISR;
 8007bee:	f06f 0005 	mvn.w	r0, #5
 8007bf2:	4770      	bx	lr
    } else {
      stat = osError;
 8007bf4:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007bf8:	4770      	bx	lr
 8007bfa:	bf00      	nop
 8007bfc:	2000399c 	.word	0x2000399c

08007c00 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007c00:	b510      	push	{r4, lr}
 8007c02:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007c06:	b95c      	cbnz	r4, 8007c20 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8007c08:	4b08      	ldr	r3, [pc, #32]	@ (8007c2c <osKernelStart+0x2c>)
 8007c0a:	681a      	ldr	r2, [r3, #0]
 8007c0c:	2a01      	cmp	r2, #1
 8007c0e:	d10a      	bne.n	8007c26 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007c10:	4a07      	ldr	r2, [pc, #28]	@ (8007c30 <osKernelStart+0x30>)
 8007c12:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8007c14:	2202      	movs	r2, #2
 8007c16:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8007c18:	f001 fc22 	bl	8009460 <vTaskStartScheduler>
      stat = osOK;
 8007c1c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8007c1e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007c20:	f06f 0005 	mvn.w	r0, #5
 8007c24:	e7fb      	b.n	8007c1e <osKernelStart+0x1e>
      stat = osError;
 8007c26:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007c2a:	e7f8      	b.n	8007c1e <osKernelStart+0x1e>
 8007c2c:	2000399c 	.word	0x2000399c
 8007c30:	e000ed00 	.word	0xe000ed00

08007c34 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007c34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c36:	b087      	sub	sp, #28
 8007c38:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007c3a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007c3c:	460b      	mov	r3, r1
  hTask = NULL;
 8007c3e:	9205      	str	r2, [sp, #20]
 8007c40:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007c44:	b9fa      	cbnz	r2, 8007c86 <osThreadNew+0x52>
 8007c46:	b1f0      	cbz	r0, 8007c86 <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007c48:	b354      	cbz	r4, 8007ca0 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007c4a:	69a5      	ldr	r5, [r4, #24]
 8007c4c:	b125      	cbz	r5, 8007c58 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007c4e:	1e69      	subs	r1, r5, #1
 8007c50:	2937      	cmp	r1, #55	@ 0x37
 8007c52:	d902      	bls.n	8007c5a <osThreadNew+0x26>
        return (NULL);
 8007c54:	2000      	movs	r0, #0
 8007c56:	e017      	b.n	8007c88 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 8007c58:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007c5a:	6862      	ldr	r2, [r4, #4]
 8007c5c:	07d2      	lsls	r2, r2, #31
 8007c5e:	d4f9      	bmi.n	8007c54 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 8007c60:	6966      	ldr	r6, [r4, #20]
 8007c62:	b19e      	cbz	r6, 8007c8c <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007c64:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007c66:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 8007c6a:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007c6c:	b187      	cbz	r7, 8007c90 <osThreadNew+0x5c>
 8007c6e:	f1bc 0fab 	cmp.w	ip, #171	@ 0xab
 8007c72:	d908      	bls.n	8007c86 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007c74:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007c76:	b134      	cbz	r4, 8007c86 <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007c78:	b12e      	cbz	r6, 8007c86 <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007c7a:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007c7e:	9500      	str	r5, [sp, #0]
 8007c80:	f001 faee 	bl	8009260 <xTaskCreateStatic>
 8007c84:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007c86:	9805      	ldr	r0, [sp, #20]
}
 8007c88:	b007      	add	sp, #28
 8007c8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007c8c:	2280      	movs	r2, #128	@ 0x80
 8007c8e:	e7ea      	b.n	8007c66 <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007c90:	f1bc 0f00 	cmp.w	ip, #0
 8007c94:	d1f7      	bne.n	8007c86 <osThreadNew+0x52>
 8007c96:	6924      	ldr	r4, [r4, #16]
 8007c98:	2c00      	cmp	r4, #0
 8007c9a:	d1f4      	bne.n	8007c86 <osThreadNew+0x52>
 8007c9c:	460c      	mov	r4, r1
 8007c9e:	e001      	b.n	8007ca4 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8007ca0:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 8007ca2:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007ca4:	a905      	add	r1, sp, #20
 8007ca6:	e9cd 5100 	strd	r5, r1, [sp]
 8007caa:	b292      	uxth	r2, r2
 8007cac:	4621      	mov	r1, r4
 8007cae:	f001 fb0f 	bl	80092d0 <xTaskCreate>
 8007cb2:	2801      	cmp	r0, #1
            hTask = NULL;
 8007cb4:	bf1c      	itt	ne
 8007cb6:	2300      	movne	r3, #0
 8007cb8:	9305      	strne	r3, [sp, #20]
 8007cba:	e7e4      	b.n	8007c86 <osThreadNew+0x52>

08007cbc <osThreadTerminate>:
  vTaskDelete (NULL);
#endif
  for (;;);
}

osStatus_t osThreadTerminate (osThreadId_t thread_id) {
 8007cbc:	b538      	push	{r3, r4, r5, lr}
 8007cbe:	4605      	mov	r5, r0
 8007cc0:	f3ef 8405 	mrs	r4, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;
#ifndef USE_FreeRTOS_HEAP_1
  eTaskState tstate;

  if (IS_IRQ()) {
 8007cc4:	b94c      	cbnz	r4, 8007cda <osThreadTerminate+0x1e>
    stat = osErrorISR;
  }
  else if (hTask == NULL) {
 8007cc6:	b158      	cbz	r0, 8007ce0 <osThreadTerminate+0x24>
    stat = osErrorParameter;
  }
  else {
    tstate = eTaskGetState (hTask);
 8007cc8:	f001 fb88 	bl	80093dc <eTaskGetState>

    if (tstate != eDeleted) {
 8007ccc:	2804      	cmp	r0, #4
 8007cce:	d00a      	beq.n	8007ce6 <osThreadTerminate+0x2a>
      stat = osOK;
      vTaskDelete (hTask);
 8007cd0:	4628      	mov	r0, r5
 8007cd2:	f001 fb2b 	bl	800932c <vTaskDelete>
      stat = osOK;
 8007cd6:	4620      	mov	r0, r4
#else
  stat = osError;
#endif

  return (stat);
}
 8007cd8:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
 8007cda:	f06f 0005 	mvn.w	r0, #5
 8007cde:	e7fb      	b.n	8007cd8 <osThreadTerminate+0x1c>
    stat = osErrorParameter;
 8007ce0:	f06f 0003 	mvn.w	r0, #3
 8007ce4:	e7f8      	b.n	8007cd8 <osThreadTerminate+0x1c>
      stat = osErrorResource;
 8007ce6:	f06f 0002 	mvn.w	r0, #2
  return (stat);
 8007cea:	e7f5      	b.n	8007cd8 <osThreadTerminate+0x1c>

08007cec <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8007cec:	b508      	push	{r3, lr}
 8007cee:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007cf2:	b922      	cbnz	r2, 8007cfe <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8007cf4:	b108      	cbz	r0, 8007cfa <osDelay+0xe>
      vTaskDelay(ticks);
 8007cf6:	f001 fd1b 	bl	8009730 <vTaskDelay>
    stat = osOK;
 8007cfa:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007cfc:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8007cfe:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8007d02:	e7fb      	b.n	8007cfc <osDelay+0x10>

08007d04 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007d04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007d06:	4604      	mov	r4, r0
 8007d08:	460e      	mov	r6, r1
 8007d0a:	4615      	mov	r5, r2
 8007d0c:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007d10:	b942      	cbnz	r2, 8007d24 <osSemaphoreNew+0x20>
 8007d12:	b138      	cbz	r0, 8007d24 <osSemaphoreNew+0x20>
 8007d14:	4288      	cmp	r0, r1
 8007d16:	d305      	bcc.n	8007d24 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8007d18:	b155      	cbz	r5, 8007d30 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007d1a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8007d1e:	b12b      	cbz	r3, 8007d2c <osSemaphoreNew+0x28>
 8007d20:	2f4f      	cmp	r7, #79	@ 0x4f
 8007d22:	d822      	bhi.n	8007d6a <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8007d24:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007d26:	4620      	mov	r0, r4
 8007d28:	b003      	add	sp, #12
 8007d2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007d2c:	2f00      	cmp	r7, #0
 8007d2e:	d1f9      	bne.n	8007d24 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8007d30:	2c01      	cmp	r4, #1
 8007d32:	d00c      	beq.n	8007d4e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007d34:	4620      	mov	r0, r4
 8007d36:	4631      	mov	r1, r6
 8007d38:	f000 fd94 	bl	8008864 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007d3c:	4604      	mov	r4, r0
 8007d3e:	2800      	cmp	r0, #0
 8007d40:	d0f0      	beq.n	8007d24 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 8007d42:	b985      	cbnz	r5, 8007d66 <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8007d44:	4629      	mov	r1, r5
 8007d46:	4620      	mov	r0, r4
 8007d48:	f001 f8b2 	bl	8008eb0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007d4c:	e7eb      	b.n	8007d26 <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8007d4e:	2203      	movs	r2, #3
 8007d50:	2100      	movs	r1, #0
 8007d52:	2001      	movs	r0, #1
 8007d54:	f000 fd3d 	bl	80087d2 <xQueueGenericCreate>
 8007d58:	e00e      	b.n	8007d78 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007d5a:	461a      	mov	r2, r3
 8007d5c:	f000 fd60 	bl	8008820 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007d60:	4604      	mov	r4, r0
 8007d62:	2800      	cmp	r0, #0
 8007d64:	d0de      	beq.n	8007d24 <osSemaphoreNew+0x20>
          name = attr->name;
 8007d66:	682d      	ldr	r5, [r5, #0]
 8007d68:	e7ec      	b.n	8007d44 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 8007d6a:	2801      	cmp	r0, #1
 8007d6c:	d1f5      	bne.n	8007d5a <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007d6e:	2103      	movs	r1, #3
 8007d70:	9100      	str	r1, [sp, #0]
 8007d72:	4611      	mov	r1, r2
 8007d74:	f000 fcdf 	bl	8008736 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8007d78:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007d7a:	2800      	cmp	r0, #0
 8007d7c:	d0d2      	beq.n	8007d24 <osSemaphoreNew+0x20>
 8007d7e:	2e00      	cmp	r6, #0
 8007d80:	d0df      	beq.n	8007d42 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007d82:	2300      	movs	r3, #0
 8007d84:	461a      	mov	r2, r3
 8007d86:	4619      	mov	r1, r3
 8007d88:	f000 fd8a 	bl	80088a0 <xQueueGenericSend>
 8007d8c:	2801      	cmp	r0, #1
 8007d8e:	d0d8      	beq.n	8007d42 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8007d90:	4620      	mov	r0, r4
 8007d92:	f001 f8b7 	bl	8008f04 <vQueueDelete>
      if (hSemaphore != NULL) {
 8007d96:	e7c5      	b.n	8007d24 <osSemaphoreNew+0x20>

08007d98 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007d98:	b513      	push	{r0, r1, r4, lr}
 8007d9a:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007d9c:	b328      	cbz	r0, 8007dea <osSemaphoreAcquire+0x52>
 8007d9e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007da2:	b1cb      	cbz	r3, 8007dd8 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8007da4:	bb09      	cbnz	r1, 8007dea <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007da6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007da8:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007daa:	f001 f834 	bl	8008e16 <xQueueReceiveFromISR>
 8007dae:	2801      	cmp	r0, #1
 8007db0:	d003      	beq.n	8007dba <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8007db2:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007db6:	b002      	add	sp, #8
 8007db8:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8007dba:	9b01      	ldr	r3, [sp, #4]
 8007dbc:	b90b      	cbnz	r3, 8007dc2 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8007dbe:	2000      	movs	r0, #0
 8007dc0:	e7f9      	b.n	8007db6 <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 8007dc2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007dc6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007dca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007dce:	f3bf 8f4f 	dsb	sy
 8007dd2:	f3bf 8f6f 	isb	sy
 8007dd6:	e7f2      	b.n	8007dbe <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007dd8:	f000 ff60 	bl	8008c9c <xQueueSemaphoreTake>
 8007ddc:	2801      	cmp	r0, #1
 8007dde:	d0ee      	beq.n	8007dbe <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8007de0:	2c00      	cmp	r4, #0
 8007de2:	d0e6      	beq.n	8007db2 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 8007de4:	f06f 0001 	mvn.w	r0, #1
 8007de8:	e7e5      	b.n	8007db6 <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 8007dea:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007dee:	e7e2      	b.n	8007db6 <osSemaphoreAcquire+0x1e>

08007df0 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007df0:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007df2:	b318      	cbz	r0, 8007e3c <osSemaphoreRelease+0x4c>
 8007df4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007df8:	b1cb      	cbz	r3, 8007e2e <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 8007dfa:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007dfc:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007dfe:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007e00:	f000 fe5d 	bl	8008abe <xQueueGiveFromISR>
 8007e04:	2801      	cmp	r0, #1
 8007e06:	d004      	beq.n	8007e12 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8007e08:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8007e0c:	b003      	add	sp, #12
 8007e0e:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8007e12:	9b01      	ldr	r3, [sp, #4]
 8007e14:	b14b      	cbz	r3, 8007e2a <osSemaphoreRelease+0x3a>
 8007e16:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e1a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007e22:	f3bf 8f4f 	dsb	sy
 8007e26:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8007e2a:	2000      	movs	r0, #0
 8007e2c:	e7ee      	b.n	8007e0c <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007e2e:	461a      	mov	r2, r3
 8007e30:	4619      	mov	r1, r3
 8007e32:	f000 fd35 	bl	80088a0 <xQueueGenericSend>
 8007e36:	2801      	cmp	r0, #1
 8007e38:	d0f7      	beq.n	8007e2a <osSemaphoreRelease+0x3a>
 8007e3a:	e7e5      	b.n	8007e08 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8007e3c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007e40:	e7e4      	b.n	8007e0c <osSemaphoreRelease+0x1c>

08007e42 <osSemaphoreDelete>:
  }

  return (count);
}

osStatus_t osSemaphoreDelete (osSemaphoreId_t semaphore_id) {
 8007e42:	b538      	push	{r3, r4, r5, lr}
 8007e44:	4605      	mov	r5, r0
 8007e46:	f3ef 8405 	mrs	r4, IPSR
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  osStatus_t stat;

#ifndef USE_FreeRTOS_HEAP_1
  if (IS_IRQ()) {
 8007e4a:	b93c      	cbnz	r4, 8007e5c <osSemaphoreDelete+0x1a>
    stat = osErrorISR;
  }
  else if (hSemaphore == NULL) {
 8007e4c:	b148      	cbz	r0, 8007e62 <osSemaphoreDelete+0x20>
    stat = osErrorParameter;
  }
  else {
    #if (configQUEUE_REGISTRY_SIZE > 0)
    vQueueUnregisterQueue (hSemaphore);
 8007e4e:	f001 f841 	bl	8008ed4 <vQueueUnregisterQueue>
    #endif

    stat = osOK;
    vSemaphoreDelete (hSemaphore);
 8007e52:	4628      	mov	r0, r5
 8007e54:	f001 f856 	bl	8008f04 <vQueueDelete>
    stat = osOK;
 8007e58:	4620      	mov	r0, r4
#else
  stat = osError;
#endif

  return (stat);
}
 8007e5a:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
 8007e5c:	f06f 0005 	mvn.w	r0, #5
 8007e60:	e7fb      	b.n	8007e5a <osSemaphoreDelete+0x18>
    stat = osErrorParameter;
 8007e62:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007e66:	e7f8      	b.n	8007e5a <osSemaphoreDelete+0x18>

08007e68 <osMessageQueueNew>:

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007e68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007e6a:	4605      	mov	r5, r0
 8007e6c:	460e      	mov	r6, r1
 8007e6e:	4614      	mov	r4, r2
 8007e70:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007e74:	b11f      	cbz	r7, 8007e7e <osMessageQueueNew+0x16>
  hQueue = NULL;
 8007e76:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007e78:	4628      	mov	r0, r5
 8007e7a:	b003      	add	sp, #12
 8007e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007e7e:	2800      	cmp	r0, #0
 8007e80:	d0f9      	beq.n	8007e76 <osMessageQueueNew+0xe>
 8007e82:	2900      	cmp	r1, #0
 8007e84:	d0f7      	beq.n	8007e76 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8007e86:	b1da      	cbz	r2, 8007ec0 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007e88:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8007e8c:	b183      	cbz	r3, 8007eb0 <osMessageQueueNew+0x48>
 8007e8e:	2a4f      	cmp	r2, #79	@ 0x4f
 8007e90:	d9f1      	bls.n	8007e76 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007e92:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007e94:	2a00      	cmp	r2, #0
 8007e96:	d0ee      	beq.n	8007e76 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007e98:	6966      	ldr	r6, [r4, #20]
 8007e9a:	434d      	muls	r5, r1
 8007e9c:	42ae      	cmp	r6, r5
 8007e9e:	d3ea      	bcc.n	8007e76 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007ea0:	9700      	str	r7, [sp, #0]
 8007ea2:	f000 fc48 	bl	8008736 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007ea6:	4605      	mov	r5, r0
 8007ea8:	2800      	cmp	r0, #0
 8007eaa:	d0e4      	beq.n	8007e76 <osMessageQueueNew+0xe>
        name = attr->name;
 8007eac:	6824      	ldr	r4, [r4, #0]
 8007eae:	e011      	b.n	8007ed4 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007eb0:	2a00      	cmp	r2, #0
 8007eb2:	d1e0      	bne.n	8007e76 <osMessageQueueNew+0xe>
 8007eb4:	6923      	ldr	r3, [r4, #16]
 8007eb6:	2b00      	cmp	r3, #0
 8007eb8:	d1dd      	bne.n	8007e76 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007eba:	6963      	ldr	r3, [r4, #20]
 8007ebc:	2b00      	cmp	r3, #0
 8007ebe:	d1da      	bne.n	8007e76 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8007ec0:	4628      	mov	r0, r5
 8007ec2:	2200      	movs	r2, #0
 8007ec4:	4631      	mov	r1, r6
 8007ec6:	f000 fc84 	bl	80087d2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007eca:	4605      	mov	r5, r0
 8007ecc:	2800      	cmp	r0, #0
 8007ece:	d0d2      	beq.n	8007e76 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8007ed0:	2c00      	cmp	r4, #0
 8007ed2:	d1eb      	bne.n	8007eac <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8007ed4:	4621      	mov	r1, r4
 8007ed6:	4628      	mov	r0, r5
 8007ed8:	f000 ffea 	bl	8008eb0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007edc:	e7cc      	b.n	8007e78 <osMessageQueueNew+0x10>

08007ede <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007ede:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007ee0:	461c      	mov	r4, r3
 8007ee2:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007ee6:	b1de      	cbz	r6, 8007f20 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007ee8:	b338      	cbz	r0, 8007f3a <osMessageQueuePut+0x5c>
 8007eea:	b331      	cbz	r1, 8007f3a <osMessageQueuePut+0x5c>
 8007eec:	bb2b      	cbnz	r3, 8007f3a <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007eee:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007ef0:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007ef2:	f000 fd87 	bl	8008a04 <xQueueGenericSendFromISR>
 8007ef6:	2801      	cmp	r0, #1
 8007ef8:	d003      	beq.n	8007f02 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8007efa:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007efe:	b002      	add	sp, #8
 8007f00:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8007f02:	9b01      	ldr	r3, [sp, #4]
 8007f04:	b90b      	cbnz	r3, 8007f0a <osMessageQueuePut+0x2c>
  stat = osOK;
 8007f06:	2000      	movs	r0, #0
 8007f08:	e7f9      	b.n	8007efe <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8007f0a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007f0e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007f12:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007f16:	f3bf 8f4f 	dsb	sy
 8007f1a:	f3bf 8f6f 	isb	sy
 8007f1e:	e7f2      	b.n	8007f06 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007f20:	b158      	cbz	r0, 8007f3a <osMessageQueuePut+0x5c>
 8007f22:	b151      	cbz	r1, 8007f3a <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007f24:	4633      	mov	r3, r6
 8007f26:	4622      	mov	r2, r4
 8007f28:	f000 fcba 	bl	80088a0 <xQueueGenericSend>
 8007f2c:	2801      	cmp	r0, #1
 8007f2e:	d0ea      	beq.n	8007f06 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 8007f30:	2c00      	cmp	r4, #0
 8007f32:	d0e2      	beq.n	8007efa <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8007f34:	f06f 0001 	mvn.w	r0, #1
 8007f38:	e7e1      	b.n	8007efe <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8007f3a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007f3e:	e7de      	b.n	8007efe <osMessageQueuePut+0x20>

08007f40 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007f40:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007f42:	461c      	mov	r4, r3
 8007f44:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007f48:	b1db      	cbz	r3, 8007f82 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007f4a:	b330      	cbz	r0, 8007f9a <osMessageQueueGet+0x5a>
 8007f4c:	b329      	cbz	r1, 8007f9a <osMessageQueueGet+0x5a>
 8007f4e:	bb24      	cbnz	r4, 8007f9a <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007f50:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007f52:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007f54:	f000 ff5f 	bl	8008e16 <xQueueReceiveFromISR>
 8007f58:	2801      	cmp	r0, #1
 8007f5a:	d003      	beq.n	8007f64 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 8007f5c:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8007f60:	b003      	add	sp, #12
 8007f62:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8007f64:	9b01      	ldr	r3, [sp, #4]
 8007f66:	b90b      	cbnz	r3, 8007f6c <osMessageQueueGet+0x2c>
  stat = osOK;
 8007f68:	2000      	movs	r0, #0
 8007f6a:	e7f9      	b.n	8007f60 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 8007f6c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007f70:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007f74:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007f78:	f3bf 8f4f 	dsb	sy
 8007f7c:	f3bf 8f6f 	isb	sy
 8007f80:	e7f2      	b.n	8007f68 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007f82:	b150      	cbz	r0, 8007f9a <osMessageQueueGet+0x5a>
 8007f84:	b149      	cbz	r1, 8007f9a <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007f86:	4622      	mov	r2, r4
 8007f88:	f000 fdea 	bl	8008b60 <xQueueReceive>
 8007f8c:	2801      	cmp	r0, #1
 8007f8e:	d0eb      	beq.n	8007f68 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8007f90:	2c00      	cmp	r4, #0
 8007f92:	d0e3      	beq.n	8007f5c <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 8007f94:	f06f 0001 	mvn.w	r0, #1
 8007f98:	e7e2      	b.n	8007f60 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 8007f9a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007f9e:	e7df      	b.n	8007f60 <osMessageQueueGet+0x20>

08007fa0 <osMessageQueueDelete>:
  }

  return (stat);
}

osStatus_t osMessageQueueDelete (osMessageQueueId_t mq_id) {
 8007fa0:	f7ff bf4f 	b.w	8007e42 <osSemaphoreDelete>

08007fa4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007fa4:	4b03      	ldr	r3, [pc, #12]	@ (8007fb4 <vApplicationGetIdleTaskMemory+0x10>)
 8007fa6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007fa8:	4b03      	ldr	r3, [pc, #12]	@ (8007fb8 <vApplicationGetIdleTaskMemory+0x14>)
 8007faa:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007fac:	2380      	movs	r3, #128	@ 0x80
 8007fae:	6013      	str	r3, [r2, #0]
}
 8007fb0:	4770      	bx	lr
 8007fb2:	bf00      	nop
 8007fb4:	200038f0 	.word	0x200038f0
 8007fb8:	200036f0 	.word	0x200036f0

08007fbc <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007fbc:	4b03      	ldr	r3, [pc, #12]	@ (8007fcc <vApplicationGetTimerTaskMemory+0x10>)
 8007fbe:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007fc0:	4b03      	ldr	r3, [pc, #12]	@ (8007fd0 <vApplicationGetTimerTaskMemory+0x14>)
 8007fc2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007fc4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8007fc8:	6013      	str	r3, [r2, #0]
}
 8007fca:	4770      	bx	lr
 8007fcc:	20003644 	.word	0x20003644
 8007fd0:	20003244 	.word	0x20003244

08007fd4 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007fd4:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007fd6:	4b10      	ldr	r3, [pc, #64]	@ (8008018 <prvInsertBlockIntoFreeList+0x44>)
 8007fd8:	461a      	mov	r2, r3
 8007fda:	681b      	ldr	r3, [r3, #0]
 8007fdc:	4283      	cmp	r3, r0
 8007fde:	d3fb      	bcc.n	8007fd8 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007fe0:	6854      	ldr	r4, [r2, #4]
 8007fe2:	1911      	adds	r1, r2, r4
 8007fe4:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007fe6:	bf01      	itttt	eq
 8007fe8:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 8007fea:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007fec:	1909      	addeq	r1, r1, r4
 8007fee:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007ff0:	6844      	ldr	r4, [r0, #4]
 8007ff2:	1901      	adds	r1, r0, r4
 8007ff4:	428b      	cmp	r3, r1
 8007ff6:	d10c      	bne.n	8008012 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007ff8:	4908      	ldr	r1, [pc, #32]	@ (800801c <prvInsertBlockIntoFreeList+0x48>)
 8007ffa:	6809      	ldr	r1, [r1, #0]
 8007ffc:	428b      	cmp	r3, r1
 8007ffe:	d003      	beq.n	8008008 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008000:	6859      	ldr	r1, [r3, #4]
 8008002:	4421      	add	r1, r4
 8008004:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008006:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8008008:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800800a:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800800c:	bf18      	it	ne
 800800e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008010:	bd10      	pop	{r4, pc}
 8008012:	4619      	mov	r1, r3
 8008014:	e7f8      	b.n	8008008 <prvInsertBlockIntoFreeList+0x34>
 8008016:	bf00      	nop
 8008018:	200039b8 	.word	0x200039b8
 800801c:	200039b4 	.word	0x200039b4

08008020 <pvPortMalloc>:
{
 8008020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008024:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008026:	f001 fa6b 	bl	8009500 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800802a:	4942      	ldr	r1, [pc, #264]	@ (8008134 <pvPortMalloc+0x114>)
 800802c:	4d42      	ldr	r5, [pc, #264]	@ (8008138 <pvPortMalloc+0x118>)
 800802e:	680b      	ldr	r3, [r1, #0]
 8008030:	bb0b      	cbnz	r3, 8008076 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008032:	4a42      	ldr	r2, [pc, #264]	@ (800813c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008034:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008036:	bf1f      	itttt	ne
 8008038:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800803a:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800803e:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 8008042:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008044:	bf0c      	ite	eq
 8008046:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800804a:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800804c:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800804e:	4e3c      	ldr	r6, [pc, #240]	@ (8008140 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8008050:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008052:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008056:	2000      	movs	r0, #0
 8008058:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800805a:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800805c:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008060:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008062:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8008066:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008068:	4b36      	ldr	r3, [pc, #216]	@ (8008144 <pvPortMalloc+0x124>)
 800806a:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800806c:	4b36      	ldr	r3, [pc, #216]	@ (8008148 <pvPortMalloc+0x128>)
 800806e:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008070:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8008074:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008076:	682e      	ldr	r6, [r5, #0]
 8008078:	4226      	tst	r6, r4
 800807a:	d155      	bne.n	8008128 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800807c:	2c00      	cmp	r4, #0
 800807e:	d046      	beq.n	800810e <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8008080:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008084:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008086:	bf1c      	itt	ne
 8008088:	f023 0307 	bicne.w	r3, r3, #7
 800808c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800808e:	2b00      	cmp	r3, #0
 8008090:	d04a      	beq.n	8008128 <pvPortMalloc+0x108>
 8008092:	4f2d      	ldr	r7, [pc, #180]	@ (8008148 <pvPortMalloc+0x128>)
 8008094:	683c      	ldr	r4, [r7, #0]
 8008096:	429c      	cmp	r4, r3
 8008098:	d346      	bcc.n	8008128 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800809a:	4a29      	ldr	r2, [pc, #164]	@ (8008140 <pvPortMalloc+0x120>)
 800809c:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800809e:	6868      	ldr	r0, [r5, #4]
 80080a0:	4298      	cmp	r0, r3
 80080a2:	d204      	bcs.n	80080ae <pvPortMalloc+0x8e>
 80080a4:	f8d5 c000 	ldr.w	ip, [r5]
 80080a8:	f1bc 0f00 	cmp.w	ip, #0
 80080ac:	d115      	bne.n	80080da <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80080ae:	6809      	ldr	r1, [r1, #0]
 80080b0:	42a9      	cmp	r1, r5
 80080b2:	d039      	beq.n	8008128 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80080b4:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80080b6:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80080ba:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80080bc:	1ac2      	subs	r2, r0, r3
 80080be:	2a10      	cmp	r2, #16
 80080c0:	d912      	bls.n	80080e8 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80080c2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80080c4:	0741      	lsls	r1, r0, #29
 80080c6:	d00b      	beq.n	80080e0 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80080c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80080cc:	f383 8811 	msr	BASEPRI, r3
 80080d0:	f3bf 8f6f 	isb	sy
 80080d4:	f3bf 8f4f 	dsb	sy
 80080d8:	e7fe      	b.n	80080d8 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 80080da:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 80080dc:	4665      	mov	r5, ip
 80080de:	e7de      	b.n	800809e <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80080e0:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80080e2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80080e4:	f7ff ff76 	bl	8007fd4 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80080e8:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80080ea:	4916      	ldr	r1, [pc, #88]	@ (8008144 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80080ec:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80080ee:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 80080f0:	4a16      	ldr	r2, [pc, #88]	@ (800814c <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80080f2:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80080f4:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 80080f6:	2300      	movs	r3, #0
 80080f8:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80080fa:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80080fc:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80080fe:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 8008100:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008104:	bf38      	it	cc
 8008106:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8008108:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800810a:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800810e:	f001 fa9b 	bl	8009648 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008112:	0763      	lsls	r3, r4, #29
 8008114:	d00a      	beq.n	800812c <pvPortMalloc+0x10c>
 8008116:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800811a:	f383 8811 	msr	BASEPRI, r3
 800811e:	f3bf 8f6f 	isb	sy
 8008122:	f3bf 8f4f 	dsb	sy
 8008126:	e7fe      	b.n	8008126 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8008128:	2400      	movs	r4, #0
 800812a:	e7f0      	b.n	800810e <pvPortMalloc+0xee>
}
 800812c:	4620      	mov	r0, r4
 800812e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008132:	bf00      	nop
 8008134:	200039b4 	.word	0x200039b4
 8008138:	200039a0 	.word	0x200039a0
 800813c:	200039c0 	.word	0x200039c0
 8008140:	200039b8 	.word	0x200039b8
 8008144:	200039ac 	.word	0x200039ac
 8008148:	200039b0 	.word	0x200039b0
 800814c:	200039a8 	.word	0x200039a8

08008150 <vPortFree>:
{
 8008150:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008152:	4604      	mov	r4, r0
 8008154:	b390      	cbz	r0, 80081bc <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008156:	4a1a      	ldr	r2, [pc, #104]	@ (80081c0 <vPortFree+0x70>)
 8008158:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800815c:	6812      	ldr	r2, [r2, #0]
 800815e:	4213      	tst	r3, r2
 8008160:	d108      	bne.n	8008174 <vPortFree+0x24>
 8008162:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008166:	f383 8811 	msr	BASEPRI, r3
 800816a:	f3bf 8f6f 	isb	sy
 800816e:	f3bf 8f4f 	dsb	sy
 8008172:	e7fe      	b.n	8008172 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008174:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008178:	b141      	cbz	r1, 800818c <vPortFree+0x3c>
 800817a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800817e:	f383 8811 	msr	BASEPRI, r3
 8008182:	f3bf 8f6f 	isb	sy
 8008186:	f3bf 8f4f 	dsb	sy
 800818a:	e7fe      	b.n	800818a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800818c:	ea23 0302 	bic.w	r3, r3, r2
 8008190:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008194:	f001 f9b4 	bl	8009500 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008198:	4a0a      	ldr	r2, [pc, #40]	@ (80081c4 <vPortFree+0x74>)
 800819a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800819e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80081a0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80081a4:	440b      	add	r3, r1
 80081a6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80081a8:	f7ff ff14 	bl	8007fd4 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80081ac:	4a06      	ldr	r2, [pc, #24]	@ (80081c8 <vPortFree+0x78>)
 80081ae:	6813      	ldr	r3, [r2, #0]
}
 80081b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80081b4:	3301      	adds	r3, #1
 80081b6:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80081b8:	f001 ba46 	b.w	8009648 <xTaskResumeAll>
}
 80081bc:	bd10      	pop	{r4, pc}
 80081be:	bf00      	nop
 80081c0:	200039a0 	.word	0x200039a0
 80081c4:	200039b0 	.word	0x200039b0
 80081c8:	200039a4 	.word	0x200039a4

080081cc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80081cc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80081d0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80081d4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80081d8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80081da:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80081dc:	2300      	movs	r3, #0
 80081de:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80081e0:	4770      	bx	lr

080081e2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80081e2:	2300      	movs	r3, #0
 80081e4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80081e6:	4770      	bx	lr

080081e8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80081e8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80081ea:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80081ec:	689a      	ldr	r2, [r3, #8]
 80081ee:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80081f0:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80081f2:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80081f4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80081f6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80081f8:	3301      	adds	r3, #1
 80081fa:	6003      	str	r3, [r0, #0]
}
 80081fc:	4770      	bx	lr

080081fe <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80081fe:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008200:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008202:	1c63      	adds	r3, r4, #1
 8008204:	d10a      	bne.n	800821c <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008206:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008208:	685a      	ldr	r2, [r3, #4]
 800820a:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800820c:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800820e:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008210:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008212:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008214:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008216:	3301      	adds	r3, #1
 8008218:	6003      	str	r3, [r0, #0]
}
 800821a:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800821c:	f100 0208 	add.w	r2, r0, #8
 8008220:	4613      	mov	r3, r2
 8008222:	6852      	ldr	r2, [r2, #4]
 8008224:	6815      	ldr	r5, [r2, #0]
 8008226:	42a5      	cmp	r5, r4
 8008228:	d9fa      	bls.n	8008220 <vListInsert+0x22>
 800822a:	e7ed      	b.n	8008208 <vListInsert+0xa>

0800822c <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800822c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008230:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008232:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008234:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008236:	6859      	ldr	r1, [r3, #4]
 8008238:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800823a:	bf08      	it	eq
 800823c:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800823e:	2200      	movs	r2, #0
 8008240:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008242:	681a      	ldr	r2, [r3, #0]
 8008244:	3a01      	subs	r2, #1
 8008246:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008248:	6818      	ldr	r0, [r3, #0]
}
 800824a:	4770      	bx	lr

0800824c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800824c:	4808      	ldr	r0, [pc, #32]	@ (8008270 <prvPortStartFirstTask+0x24>)
 800824e:	6800      	ldr	r0, [r0, #0]
 8008250:	6800      	ldr	r0, [r0, #0]
 8008252:	f380 8808 	msr	MSP, r0
 8008256:	f04f 0000 	mov.w	r0, #0
 800825a:	f380 8814 	msr	CONTROL, r0
 800825e:	b662      	cpsie	i
 8008260:	b661      	cpsie	f
 8008262:	f3bf 8f4f 	dsb	sy
 8008266:	f3bf 8f6f 	isb	sy
 800826a:	df00      	svc	0
 800826c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800826e:	0000      	.short	0x0000
 8008270:	e000ed08 	.word	0xe000ed08

08008274 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008274:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8008284 <vPortEnableVFP+0x10>
 8008278:	6801      	ldr	r1, [r0, #0]
 800827a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800827e:	6001      	str	r1, [r0, #0]
 8008280:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008282:	0000      	.short	0x0000
 8008284:	e000ed88 	.word	0xe000ed88

08008288 <prvTaskExitError>:
{
 8008288:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800828a:	2300      	movs	r3, #0
 800828c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800828e:	4b0d      	ldr	r3, [pc, #52]	@ (80082c4 <prvTaskExitError+0x3c>)
 8008290:	681b      	ldr	r3, [r3, #0]
 8008292:	3301      	adds	r3, #1
 8008294:	d008      	beq.n	80082a8 <prvTaskExitError+0x20>
 8008296:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800829a:	f383 8811 	msr	BASEPRI, r3
 800829e:	f3bf 8f6f 	isb	sy
 80082a2:	f3bf 8f4f 	dsb	sy
 80082a6:	e7fe      	b.n	80082a6 <prvTaskExitError+0x1e>
 80082a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082ac:	f383 8811 	msr	BASEPRI, r3
 80082b0:	f3bf 8f6f 	isb	sy
 80082b4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80082b8:	9b01      	ldr	r3, [sp, #4]
 80082ba:	2b00      	cmp	r3, #0
 80082bc:	d0fc      	beq.n	80082b8 <prvTaskExitError+0x30>
}
 80082be:	b002      	add	sp, #8
 80082c0:	4770      	bx	lr
 80082c2:	bf00      	nop
 80082c4:	200000d0 	.word	0x200000d0

080082c8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80082c8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80082cc:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80082d0:	4b07      	ldr	r3, [pc, #28]	@ (80082f0 <pxPortInitialiseStack+0x28>)
 80082d2:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80082d6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80082da:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80082de:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80082e2:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80082e6:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80082ea:	3844      	subs	r0, #68	@ 0x44
 80082ec:	4770      	bx	lr
 80082ee:	bf00      	nop
 80082f0:	08008289 	.word	0x08008289
	...

08008300 <SVC_Handler>:
	__asm volatile (
 8008300:	4b07      	ldr	r3, [pc, #28]	@ (8008320 <pxCurrentTCBConst2>)
 8008302:	6819      	ldr	r1, [r3, #0]
 8008304:	6808      	ldr	r0, [r1, #0]
 8008306:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800830a:	f380 8809 	msr	PSP, r0
 800830e:	f3bf 8f6f 	isb	sy
 8008312:	f04f 0000 	mov.w	r0, #0
 8008316:	f380 8811 	msr	BASEPRI, r0
 800831a:	4770      	bx	lr
 800831c:	f3af 8000 	nop.w

08008320 <pxCurrentTCBConst2>:
 8008320:	20013f00 	.word	0x20013f00

08008324 <vPortEnterCritical>:
 8008324:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008328:	f383 8811 	msr	BASEPRI, r3
 800832c:	f3bf 8f6f 	isb	sy
 8008330:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008334:	4a0a      	ldr	r2, [pc, #40]	@ (8008360 <vPortEnterCritical+0x3c>)
 8008336:	6813      	ldr	r3, [r2, #0]
 8008338:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800833a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800833c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800833e:	d10e      	bne.n	800835e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008340:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008344:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8008348:	b2db      	uxtb	r3, r3
 800834a:	b143      	cbz	r3, 800835e <vPortEnterCritical+0x3a>
 800834c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008350:	f383 8811 	msr	BASEPRI, r3
 8008354:	f3bf 8f6f 	isb	sy
 8008358:	f3bf 8f4f 	dsb	sy
 800835c:	e7fe      	b.n	800835c <vPortEnterCritical+0x38>
}
 800835e:	4770      	bx	lr
 8008360:	200000d0 	.word	0x200000d0

08008364 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008364:	4a08      	ldr	r2, [pc, #32]	@ (8008388 <vPortExitCritical+0x24>)
 8008366:	6813      	ldr	r3, [r2, #0]
 8008368:	b943      	cbnz	r3, 800837c <vPortExitCritical+0x18>
 800836a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800836e:	f383 8811 	msr	BASEPRI, r3
 8008372:	f3bf 8f6f 	isb	sy
 8008376:	f3bf 8f4f 	dsb	sy
 800837a:	e7fe      	b.n	800837a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800837c:	3b01      	subs	r3, #1
 800837e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008380:	b90b      	cbnz	r3, 8008386 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008382:	f383 8811 	msr	BASEPRI, r3
}
 8008386:	4770      	bx	lr
 8008388:	200000d0 	.word	0x200000d0
 800838c:	00000000 	.word	0x00000000

08008390 <PendSV_Handler>:
	__asm volatile
 8008390:	f3ef 8009 	mrs	r0, PSP
 8008394:	f3bf 8f6f 	isb	sy
 8008398:	4b15      	ldr	r3, [pc, #84]	@ (80083f0 <pxCurrentTCBConst>)
 800839a:	681a      	ldr	r2, [r3, #0]
 800839c:	f01e 0f10 	tst.w	lr, #16
 80083a0:	bf08      	it	eq
 80083a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80083a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80083aa:	6010      	str	r0, [r2, #0]
 80083ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 80083b0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80083b4:	f380 8811 	msr	BASEPRI, r0
 80083b8:	f3bf 8f4f 	dsb	sy
 80083bc:	f3bf 8f6f 	isb	sy
 80083c0:	f001 f9da 	bl	8009778 <vTaskSwitchContext>
 80083c4:	f04f 0000 	mov.w	r0, #0
 80083c8:	f380 8811 	msr	BASEPRI, r0
 80083cc:	bc09      	pop	{r0, r3}
 80083ce:	6819      	ldr	r1, [r3, #0]
 80083d0:	6808      	ldr	r0, [r1, #0]
 80083d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80083d6:	f01e 0f10 	tst.w	lr, #16
 80083da:	bf08      	it	eq
 80083dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80083e0:	f380 8809 	msr	PSP, r0
 80083e4:	f3bf 8f6f 	isb	sy
 80083e8:	4770      	bx	lr
 80083ea:	bf00      	nop
 80083ec:	f3af 8000 	nop.w

080083f0 <pxCurrentTCBConst>:
 80083f0:	20013f00 	.word	0x20013f00

080083f4 <xPortSysTickHandler>:
{
 80083f4:	b508      	push	{r3, lr}
	__asm volatile
 80083f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083fa:	f383 8811 	msr	BASEPRI, r3
 80083fe:	f3bf 8f6f 	isb	sy
 8008402:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008406:	f001 f889 	bl	800951c <xTaskIncrementTick>
 800840a:	b128      	cbz	r0, 8008418 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800840c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008410:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008414:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8008418:	2300      	movs	r3, #0
 800841a:	f383 8811 	msr	BASEPRI, r3
}
 800841e:	bd08      	pop	{r3, pc}

08008420 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008420:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008424:	2300      	movs	r3, #0
 8008426:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008428:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800842a:	4b05      	ldr	r3, [pc, #20]	@ (8008440 <vPortSetupTimerInterrupt+0x20>)
 800842c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8008430:	681b      	ldr	r3, [r3, #0]
 8008432:	fbb3 f3f1 	udiv	r3, r3, r1
 8008436:	3b01      	subs	r3, #1
 8008438:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800843a:	2307      	movs	r3, #7
 800843c:	6113      	str	r3, [r2, #16]
}
 800843e:	4770      	bx	lr
 8008440:	200000c4 	.word	0x200000c4

08008444 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008444:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8008448:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800844a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800844e:	4a38      	ldr	r2, [pc, #224]	@ (8008530 <xPortStartScheduler+0xec>)
 8008450:	4291      	cmp	r1, r2
 8008452:	d108      	bne.n	8008466 <xPortStartScheduler+0x22>
	__asm volatile
 8008454:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008458:	f383 8811 	msr	BASEPRI, r3
 800845c:	f3bf 8f6f 	isb	sy
 8008460:	f3bf 8f4f 	dsb	sy
 8008464:	e7fe      	b.n	8008464 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008466:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800846a:	4b32      	ldr	r3, [pc, #200]	@ (8008534 <xPortStartScheduler+0xf0>)
 800846c:	429a      	cmp	r2, r3
 800846e:	d108      	bne.n	8008482 <xPortStartScheduler+0x3e>
 8008470:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008474:	f383 8811 	msr	BASEPRI, r3
 8008478:	f3bf 8f6f 	isb	sy
 800847c:	f3bf 8f4f 	dsb	sy
 8008480:	e7fe      	b.n	8008480 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008482:	4b2d      	ldr	r3, [pc, #180]	@ (8008538 <xPortStartScheduler+0xf4>)
 8008484:	781a      	ldrb	r2, [r3, #0]
 8008486:	b2d2      	uxtb	r2, r2
 8008488:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800848a:	22ff      	movs	r2, #255	@ 0xff
 800848c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800848e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008490:	4a2a      	ldr	r2, [pc, #168]	@ (800853c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008492:	b2db      	uxtb	r3, r3
 8008494:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008498:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800849c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 80084a0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80084a2:	4a27      	ldr	r2, [pc, #156]	@ (8008540 <xPortStartScheduler+0xfc>)
 80084a4:	2307      	movs	r3, #7
 80084a6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80084a8:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 80084ac:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80084ae:	0609      	lsls	r1, r1, #24
 80084b0:	d40a      	bmi.n	80084c8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80084b2:	2b03      	cmp	r3, #3
 80084b4:	d011      	beq.n	80084da <xPortStartScheduler+0x96>
 80084b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084ba:	f383 8811 	msr	BASEPRI, r3
 80084be:	f3bf 8f6f 	isb	sy
 80084c2:	f3bf 8f4f 	dsb	sy
 80084c6:	e7fe      	b.n	80084c6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 80084c8:	3b01      	subs	r3, #1
 80084ca:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80084cc:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80084d0:	005b      	lsls	r3, r3, #1
 80084d2:	b2db      	uxtb	r3, r3
 80084d4:	f88d 3003 	strb.w	r3, [sp, #3]
 80084d8:	e7e6      	b.n	80084a8 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80084da:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80084de:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80084e0:	9b01      	ldr	r3, [sp, #4]
 80084e2:	4a15      	ldr	r2, [pc, #84]	@ (8008538 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80084e4:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80084e8:	b2db      	uxtb	r3, r3
 80084ea:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80084ec:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80084f0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80084f4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80084f8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80084fc:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8008500:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8008504:	f7ff ff8c 	bl	8008420 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008508:	4b0e      	ldr	r3, [pc, #56]	@ (8008544 <xPortStartScheduler+0x100>)
 800850a:	2500      	movs	r5, #0
 800850c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800850e:	f7ff feb1 	bl	8008274 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008512:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8008516:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800851a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800851e:	f7ff fe95 	bl	800824c <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008522:	f001 f929 	bl	8009778 <vTaskSwitchContext>
	prvTaskExitError();
 8008526:	f7ff feaf 	bl	8008288 <prvTaskExitError>
}
 800852a:	4628      	mov	r0, r5
 800852c:	b003      	add	sp, #12
 800852e:	bd30      	pop	{r4, r5, pc}
 8008530:	410fc271 	.word	0x410fc271
 8008534:	410fc270 	.word	0x410fc270
 8008538:	e000e400 	.word	0xe000e400
 800853c:	200139c4 	.word	0x200139c4
 8008540:	200139c0 	.word	0x200139c0
 8008544:	200000d0 	.word	0x200000d0

08008548 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008548:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800854c:	2b0f      	cmp	r3, #15
 800854e:	d90e      	bls.n	800856e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008550:	4a11      	ldr	r2, [pc, #68]	@ (8008598 <vPortValidateInterruptPriority+0x50>)
 8008552:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008554:	4a11      	ldr	r2, [pc, #68]	@ (800859c <vPortValidateInterruptPriority+0x54>)
 8008556:	7812      	ldrb	r2, [r2, #0]
 8008558:	429a      	cmp	r2, r3
 800855a:	d908      	bls.n	800856e <vPortValidateInterruptPriority+0x26>
 800855c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008560:	f383 8811 	msr	BASEPRI, r3
 8008564:	f3bf 8f6f 	isb	sy
 8008568:	f3bf 8f4f 	dsb	sy
 800856c:	e7fe      	b.n	800856c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800856e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008572:	4a0b      	ldr	r2, [pc, #44]	@ (80085a0 <vPortValidateInterruptPriority+0x58>)
 8008574:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8008578:	6812      	ldr	r2, [r2, #0]
 800857a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800857e:	4293      	cmp	r3, r2
 8008580:	d908      	bls.n	8008594 <vPortValidateInterruptPriority+0x4c>
 8008582:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008586:	f383 8811 	msr	BASEPRI, r3
 800858a:	f3bf 8f6f 	isb	sy
 800858e:	f3bf 8f4f 	dsb	sy
 8008592:	e7fe      	b.n	8008592 <vPortValidateInterruptPriority+0x4a>
	}
 8008594:	4770      	bx	lr
 8008596:	bf00      	nop
 8008598:	e000e3f0 	.word	0xe000e3f0
 800859c:	200139c4 	.word	0x200139c4
 80085a0:	200139c0 	.word	0x200139c0

080085a4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80085a4:	b510      	push	{r4, lr}
 80085a6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80085a8:	f7ff febc 	bl	8008324 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80085ac:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80085ae:	f7ff fed9 	bl	8008364 <vPortExitCritical>

	return xReturn;
}
 80085b2:	fab4 f084 	clz	r0, r4
 80085b6:	0940      	lsrs	r0, r0, #5
 80085b8:	bd10      	pop	{r4, pc}

080085ba <prvCopyDataToQueue>:
{
 80085ba:	b570      	push	{r4, r5, r6, lr}
 80085bc:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80085be:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80085c0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 80085c2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80085c4:	b942      	cbnz	r2, 80085d8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80085c6:	6806      	ldr	r6, [r0, #0]
 80085c8:	b99e      	cbnz	r6, 80085f2 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80085ca:	6880      	ldr	r0, [r0, #8]
 80085cc:	f001 fa28 	bl	8009a20 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80085d0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80085d2:	3501      	adds	r5, #1
 80085d4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 80085d6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80085d8:	b96e      	cbnz	r6, 80085f6 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80085da:	6840      	ldr	r0, [r0, #4]
 80085dc:	f01b fa3b 	bl	8023a56 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80085e0:	6863      	ldr	r3, [r4, #4]
 80085e2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80085e4:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80085e6:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80085e8:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80085ea:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80085ec:	bf24      	itt	cs
 80085ee:	6823      	ldrcs	r3, [r4, #0]
 80085f0:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 80085f2:	2000      	movs	r0, #0
 80085f4:	e7ed      	b.n	80085d2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80085f6:	68c0      	ldr	r0, [r0, #12]
 80085f8:	f01b fa2d 	bl	8023a56 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80085fc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80085fe:	68e3      	ldr	r3, [r4, #12]
 8008600:	4251      	negs	r1, r2
 8008602:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008604:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008606:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008608:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800860a:	bf3e      	ittt	cc
 800860c:	68a3      	ldrcc	r3, [r4, #8]
 800860e:	185b      	addcc	r3, r3, r1
 8008610:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008612:	2e02      	cmp	r6, #2
 8008614:	d1ed      	bne.n	80085f2 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008616:	b10d      	cbz	r5, 800861c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8008618:	3d01      	subs	r5, #1
 800861a:	e7ea      	b.n	80085f2 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800861c:	4628      	mov	r0, r5
 800861e:	e7d8      	b.n	80085d2 <prvCopyDataToQueue+0x18>

08008620 <prvCopyDataFromQueue>:
{
 8008620:	4603      	mov	r3, r0
 8008622:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008624:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8008626:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008628:	b16a      	cbz	r2, 8008646 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800862a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800862c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800862e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008630:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008632:	bf28      	it	cs
 8008634:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008636:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008638:	bf28      	it	cs
 800863a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800863c:	68d9      	ldr	r1, [r3, #12]
}
 800863e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008642:	f01b ba08 	b.w	8023a56 <memcpy>
}
 8008646:	f85d 4b04 	ldr.w	r4, [sp], #4
 800864a:	4770      	bx	lr

0800864c <prvUnlockQueue>:
{
 800864c:	b570      	push	{r4, r5, r6, lr}
 800864e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008650:	f7ff fe68 	bl	8008324 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008654:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008658:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800865c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800865e:	2d00      	cmp	r5, #0
 8008660:	dd01      	ble.n	8008666 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008662:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008664:	b9b3      	cbnz	r3, 8008694 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8008666:	23ff      	movs	r3, #255	@ 0xff
 8008668:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800866c:	f7ff fe7a 	bl	8008364 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008670:	f7ff fe58 	bl	8008324 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008674:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008678:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800867c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800867e:	2d00      	cmp	r5, #0
 8008680:	dd01      	ble.n	8008686 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008682:	6923      	ldr	r3, [r4, #16]
 8008684:	b97b      	cbnz	r3, 80086a6 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8008686:	23ff      	movs	r3, #255	@ 0xff
 8008688:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800868c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008690:	f7ff be68 	b.w	8008364 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008694:	4630      	mov	r0, r6
 8008696:	f001 f8e7 	bl	8009868 <xTaskRemoveFromEventList>
 800869a:	b108      	cbz	r0, 80086a0 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 800869c:	f001 f96c 	bl	8009978 <vTaskMissedYield>
			--cTxLock;
 80086a0:	3d01      	subs	r5, #1
 80086a2:	b26d      	sxtb	r5, r5
 80086a4:	e7db      	b.n	800865e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80086a6:	4630      	mov	r0, r6
 80086a8:	f001 f8de 	bl	8009868 <xTaskRemoveFromEventList>
 80086ac:	b108      	cbz	r0, 80086b2 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 80086ae:	f001 f963 	bl	8009978 <vTaskMissedYield>
				--cRxLock;
 80086b2:	3d01      	subs	r5, #1
 80086b4:	b26d      	sxtb	r5, r5
 80086b6:	e7e2      	b.n	800867e <prvUnlockQueue+0x32>

080086b8 <xQueueGenericReset>:
{
 80086b8:	b538      	push	{r3, r4, r5, lr}
 80086ba:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80086bc:	4604      	mov	r4, r0
 80086be:	b940      	cbnz	r0, 80086d2 <xQueueGenericReset+0x1a>
 80086c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086c4:	f383 8811 	msr	BASEPRI, r3
 80086c8:	f3bf 8f6f 	isb	sy
 80086cc:	f3bf 8f4f 	dsb	sy
 80086d0:	e7fe      	b.n	80086d0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80086d2:	f7ff fe27 	bl	8008324 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086d6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 80086da:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80086dc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086de:	434b      	muls	r3, r1
 80086e0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086e2:	1a5b      	subs	r3, r3, r1
 80086e4:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086e6:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 80086e8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80086ea:	2000      	movs	r0, #0
 80086ec:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80086ee:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 80086f0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80086f4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 80086f8:	b9a5      	cbnz	r5, 8008724 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80086fa:	6923      	ldr	r3, [r4, #16]
 80086fc:	b173      	cbz	r3, 800871c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80086fe:	f104 0010 	add.w	r0, r4, #16
 8008702:	f001 f8b1 	bl	8009868 <xTaskRemoveFromEventList>
 8008706:	b148      	cbz	r0, 800871c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008708:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800870c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008710:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008714:	f3bf 8f4f 	dsb	sy
 8008718:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800871c:	f7ff fe22 	bl	8008364 <vPortExitCritical>
}
 8008720:	2001      	movs	r0, #1
 8008722:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008724:	f104 0010 	add.w	r0, r4, #16
 8008728:	f7ff fd50 	bl	80081cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800872c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008730:	f7ff fd4c 	bl	80081cc <vListInitialise>
 8008734:	e7f2      	b.n	800871c <xQueueGenericReset+0x64>

08008736 <xQueueGenericCreateStatic>:
	{
 8008736:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008738:	460d      	mov	r5, r1
 800873a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800873c:	b940      	cbnz	r0, 8008750 <xQueueGenericCreateStatic+0x1a>
 800873e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008742:	f383 8811 	msr	BASEPRI, r3
 8008746:	f3bf 8f6f 	isb	sy
 800874a:	f3bf 8f4f 	dsb	sy
 800874e:	e7fe      	b.n	800874e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8008750:	b943      	cbnz	r3, 8008764 <xQueueGenericCreateStatic+0x2e>
 8008752:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008756:	f383 8811 	msr	BASEPRI, r3
 800875a:	f3bf 8f6f 	isb	sy
 800875e:	f3bf 8f4f 	dsb	sy
 8008762:	e7fe      	b.n	8008762 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008764:	b14a      	cbz	r2, 800877a <xQueueGenericCreateStatic+0x44>
 8008766:	b991      	cbnz	r1, 800878e <xQueueGenericCreateStatic+0x58>
 8008768:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800876c:	f383 8811 	msr	BASEPRI, r3
 8008770:	f3bf 8f6f 	isb	sy
 8008774:	f3bf 8f4f 	dsb	sy
 8008778:	e7fe      	b.n	8008778 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800877a:	b141      	cbz	r1, 800878e <xQueueGenericCreateStatic+0x58>
 800877c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008780:	f383 8811 	msr	BASEPRI, r3
 8008784:	f3bf 8f6f 	isb	sy
 8008788:	f3bf 8f4f 	dsb	sy
 800878c:	e7fe      	b.n	800878c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800878e:	2350      	movs	r3, #80	@ 0x50
 8008790:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008792:	9b01      	ldr	r3, [sp, #4]
 8008794:	2b50      	cmp	r3, #80	@ 0x50
 8008796:	d008      	beq.n	80087aa <xQueueGenericCreateStatic+0x74>
 8008798:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800879c:	f383 8811 	msr	BASEPRI, r3
 80087a0:	f3bf 8f6f 	isb	sy
 80087a4:	f3bf 8f4f 	dsb	sy
 80087a8:	e7fe      	b.n	80087a8 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80087aa:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80087ac:	2d00      	cmp	r5, #0
 80087ae:	bf08      	it	eq
 80087b0:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 80087b2:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80087b6:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 80087ba:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80087bc:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80087be:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80087c0:	f7ff ff7a 	bl	80086b8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80087c4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80087c8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 80087cc:	4620      	mov	r0, r4
 80087ce:	b003      	add	sp, #12
 80087d0:	bd30      	pop	{r4, r5, pc}

080087d2 <xQueueGenericCreate>:
	{
 80087d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80087d4:	460d      	mov	r5, r1
 80087d6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80087d8:	4606      	mov	r6, r0
 80087da:	b940      	cbnz	r0, 80087ee <xQueueGenericCreate+0x1c>
 80087dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087e0:	f383 8811 	msr	BASEPRI, r3
 80087e4:	f3bf 8f6f 	isb	sy
 80087e8:	f3bf 8f4f 	dsb	sy
 80087ec:	e7fe      	b.n	80087ec <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80087ee:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80087f0:	3050      	adds	r0, #80	@ 0x50
 80087f2:	f7ff fc15 	bl	8008020 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80087f6:	4604      	mov	r4, r0
 80087f8:	b170      	cbz	r0, 8008818 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80087fa:	2300      	movs	r3, #0
 80087fc:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008800:	b165      	cbz	r5, 800881c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008802:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8008806:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800880a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800880c:	2101      	movs	r1, #1
 800880e:	4620      	mov	r0, r4
 8008810:	f7ff ff52 	bl	80086b8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008814:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8008818:	4620      	mov	r0, r4
 800881a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800881c:	4603      	mov	r3, r0
 800881e:	e7f2      	b.n	8008806 <xQueueGenericCreate+0x34>

08008820 <xQueueCreateCountingSemaphoreStatic>:
	{
 8008820:	b513      	push	{r0, r1, r4, lr}
 8008822:	4613      	mov	r3, r2
 8008824:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008826:	b940      	cbnz	r0, 800883a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008828:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800882c:	f383 8811 	msr	BASEPRI, r3
 8008830:	f3bf 8f6f 	isb	sy
 8008834:	f3bf 8f4f 	dsb	sy
 8008838:	e7fe      	b.n	8008838 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800883a:	4288      	cmp	r0, r1
 800883c:	d208      	bcs.n	8008850 <xQueueCreateCountingSemaphoreStatic+0x30>
 800883e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008842:	f383 8811 	msr	BASEPRI, r3
 8008846:	f3bf 8f6f 	isb	sy
 800884a:	f3bf 8f4f 	dsb	sy
 800884e:	e7fe      	b.n	800884e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008850:	2202      	movs	r2, #2
 8008852:	9200      	str	r2, [sp, #0]
 8008854:	2200      	movs	r2, #0
 8008856:	4611      	mov	r1, r2
 8008858:	f7ff ff6d 	bl	8008736 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800885c:	b100      	cbz	r0, 8008860 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800885e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8008860:	b002      	add	sp, #8
 8008862:	bd10      	pop	{r4, pc}

08008864 <xQueueCreateCountingSemaphore>:
	{
 8008864:	b510      	push	{r4, lr}
 8008866:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008868:	b940      	cbnz	r0, 800887c <xQueueCreateCountingSemaphore+0x18>
 800886a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800886e:	f383 8811 	msr	BASEPRI, r3
 8008872:	f3bf 8f6f 	isb	sy
 8008876:	f3bf 8f4f 	dsb	sy
 800887a:	e7fe      	b.n	800887a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800887c:	4288      	cmp	r0, r1
 800887e:	d208      	bcs.n	8008892 <xQueueCreateCountingSemaphore+0x2e>
 8008880:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008884:	f383 8811 	msr	BASEPRI, r3
 8008888:	f3bf 8f6f 	isb	sy
 800888c:	f3bf 8f4f 	dsb	sy
 8008890:	e7fe      	b.n	8008890 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008892:	2202      	movs	r2, #2
 8008894:	2100      	movs	r1, #0
 8008896:	f7ff ff9c 	bl	80087d2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800889a:	b100      	cbz	r0, 800889e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800889c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800889e:	bd10      	pop	{r4, pc}

080088a0 <xQueueGenericSend>:
{
 80088a0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80088a4:	460f      	mov	r7, r1
 80088a6:	9201      	str	r2, [sp, #4]
 80088a8:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80088aa:	4604      	mov	r4, r0
 80088ac:	b940      	cbnz	r0, 80088c0 <xQueueGenericSend+0x20>
 80088ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088b2:	f383 8811 	msr	BASEPRI, r3
 80088b6:	f3bf 8f6f 	isb	sy
 80088ba:	f3bf 8f4f 	dsb	sy
 80088be:	e7fe      	b.n	80088be <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80088c0:	b951      	cbnz	r1, 80088d8 <xQueueGenericSend+0x38>
 80088c2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80088c4:	b143      	cbz	r3, 80088d8 <xQueueGenericSend+0x38>
 80088c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088ca:	f383 8811 	msr	BASEPRI, r3
 80088ce:	f3bf 8f6f 	isb	sy
 80088d2:	f3bf 8f4f 	dsb	sy
 80088d6:	e7fe      	b.n	80088d6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80088d8:	2e02      	cmp	r6, #2
 80088da:	d10b      	bne.n	80088f4 <xQueueGenericSend+0x54>
 80088dc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80088de:	2b01      	cmp	r3, #1
 80088e0:	d008      	beq.n	80088f4 <xQueueGenericSend+0x54>
 80088e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088e6:	f383 8811 	msr	BASEPRI, r3
 80088ea:	f3bf 8f6f 	isb	sy
 80088ee:	f3bf 8f4f 	dsb	sy
 80088f2:	e7fe      	b.n	80088f2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80088f4:	f001 f846 	bl	8009984 <xTaskGetSchedulerState>
 80088f8:	4605      	mov	r5, r0
 80088fa:	b320      	cbz	r0, 8008946 <xQueueGenericSend+0xa6>
 80088fc:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80088fe:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008902:	f7ff fd0f 	bl	8008324 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008906:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008908:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800890a:	429a      	cmp	r2, r3
 800890c:	d227      	bcs.n	800895e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800890e:	4632      	mov	r2, r6
 8008910:	4639      	mov	r1, r7
 8008912:	4620      	mov	r0, r4
 8008914:	f7ff fe51 	bl	80085ba <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008918:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800891a:	b11b      	cbz	r3, 8008924 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800891c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008920:	f000 ffa2 	bl	8009868 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008924:	b148      	cbz	r0, 800893a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8008926:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800892a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800892e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008932:	f3bf 8f4f 	dsb	sy
 8008936:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800893a:	f7ff fd13 	bl	8008364 <vPortExitCritical>
				return pdPASS;
 800893e:	2001      	movs	r0, #1
}
 8008940:	b004      	add	sp, #16
 8008942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008946:	9b01      	ldr	r3, [sp, #4]
 8008948:	2b00      	cmp	r3, #0
 800894a:	d0d8      	beq.n	80088fe <xQueueGenericSend+0x5e>
 800894c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008950:	f383 8811 	msr	BASEPRI, r3
 8008954:	f3bf 8f6f 	isb	sy
 8008958:	f3bf 8f4f 	dsb	sy
 800895c:	e7fe      	b.n	800895c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800895e:	2e02      	cmp	r6, #2
 8008960:	d0d5      	beq.n	800890e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008962:	9b01      	ldr	r3, [sp, #4]
 8008964:	b91b      	cbnz	r3, 800896e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8008966:	f7ff fcfd 	bl	8008364 <vPortExitCritical>
					return errQUEUE_FULL;
 800896a:	2000      	movs	r0, #0
 800896c:	e7e8      	b.n	8008940 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800896e:	b915      	cbnz	r5, 8008976 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008970:	a802      	add	r0, sp, #8
 8008972:	f000 ffb9 	bl	80098e8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008976:	f7ff fcf5 	bl	8008364 <vPortExitCritical>
		vTaskSuspendAll();
 800897a:	f000 fdc1 	bl	8009500 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800897e:	f7ff fcd1 	bl	8008324 <vPortEnterCritical>
 8008982:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008986:	2bff      	cmp	r3, #255	@ 0xff
 8008988:	bf08      	it	eq
 800898a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800898e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008992:	2bff      	cmp	r3, #255	@ 0xff
 8008994:	bf08      	it	eq
 8008996:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800899a:	f7ff fce3 	bl	8008364 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800899e:	a901      	add	r1, sp, #4
 80089a0:	a802      	add	r0, sp, #8
 80089a2:	f000 ffad 	bl	8009900 <xTaskCheckForTimeOut>
 80089a6:	bb38      	cbnz	r0, 80089f8 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80089a8:	f7ff fcbc 	bl	8008324 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80089ac:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80089ae:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80089b0:	429a      	cmp	r2, r3
 80089b2:	d10e      	bne.n	80089d2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80089b4:	f7ff fcd6 	bl	8008364 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80089b8:	9901      	ldr	r1, [sp, #4]
 80089ba:	f104 0010 	add.w	r0, r4, #16
 80089be:	f000 ff1b 	bl	80097f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80089c2:	4620      	mov	r0, r4
 80089c4:	f7ff fe42 	bl	800864c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80089c8:	f000 fe3e 	bl	8009648 <xTaskResumeAll>
 80089cc:	b148      	cbz	r0, 80089e2 <xQueueGenericSend+0x142>
 80089ce:	2501      	movs	r5, #1
 80089d0:	e797      	b.n	8008902 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 80089d2:	f7ff fcc7 	bl	8008364 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80089d6:	4620      	mov	r0, r4
 80089d8:	f7ff fe38 	bl	800864c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80089dc:	f000 fe34 	bl	8009648 <xTaskResumeAll>
 80089e0:	e7f5      	b.n	80089ce <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 80089e2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80089e6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80089ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80089ee:	f3bf 8f4f 	dsb	sy
 80089f2:	f3bf 8f6f 	isb	sy
 80089f6:	e7ea      	b.n	80089ce <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 80089f8:	4620      	mov	r0, r4
 80089fa:	f7ff fe27 	bl	800864c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80089fe:	f000 fe23 	bl	8009648 <xTaskResumeAll>
			return errQUEUE_FULL;
 8008a02:	e7b2      	b.n	800896a <xQueueGenericSend+0xca>

08008a04 <xQueueGenericSendFromISR>:
{
 8008a04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008a08:	4689      	mov	r9, r1
 8008a0a:	4617      	mov	r7, r2
 8008a0c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8008a0e:	4604      	mov	r4, r0
 8008a10:	b940      	cbnz	r0, 8008a24 <xQueueGenericSendFromISR+0x20>
 8008a12:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a16:	f383 8811 	msr	BASEPRI, r3
 8008a1a:	f3bf 8f6f 	isb	sy
 8008a1e:	f3bf 8f4f 	dsb	sy
 8008a22:	e7fe      	b.n	8008a22 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008a24:	b951      	cbnz	r1, 8008a3c <xQueueGenericSendFromISR+0x38>
 8008a26:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008a28:	b143      	cbz	r3, 8008a3c <xQueueGenericSendFromISR+0x38>
 8008a2a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a2e:	f383 8811 	msr	BASEPRI, r3
 8008a32:	f3bf 8f6f 	isb	sy
 8008a36:	f3bf 8f4f 	dsb	sy
 8008a3a:	e7fe      	b.n	8008a3a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008a3c:	2e02      	cmp	r6, #2
 8008a3e:	d10b      	bne.n	8008a58 <xQueueGenericSendFromISR+0x54>
 8008a40:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008a42:	2b01      	cmp	r3, #1
 8008a44:	d008      	beq.n	8008a58 <xQueueGenericSendFromISR+0x54>
 8008a46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a4a:	f383 8811 	msr	BASEPRI, r3
 8008a4e:	f3bf 8f6f 	isb	sy
 8008a52:	f3bf 8f4f 	dsb	sy
 8008a56:	e7fe      	b.n	8008a56 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008a58:	f7ff fd76 	bl	8008548 <vPortValidateInterruptPriority>
	__asm volatile
 8008a5c:	f3ef 8811 	mrs	r8, BASEPRI
 8008a60:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a64:	f383 8811 	msr	BASEPRI, r3
 8008a68:	f3bf 8f6f 	isb	sy
 8008a6c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008a70:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008a72:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008a74:	429a      	cmp	r2, r3
 8008a76:	d301      	bcc.n	8008a7c <xQueueGenericSendFromISR+0x78>
 8008a78:	2e02      	cmp	r6, #2
 8008a7a:	d11e      	bne.n	8008aba <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008a7c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008a80:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8008a82:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008a84:	4632      	mov	r2, r6
 8008a86:	4649      	mov	r1, r9
 8008a88:	4620      	mov	r0, r4
 8008a8a:	f7ff fd96 	bl	80085ba <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008a8e:	1c6b      	adds	r3, r5, #1
 8008a90:	d10e      	bne.n	8008ab0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008a92:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008a94:	b13b      	cbz	r3, 8008aa6 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008a96:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008a9a:	f000 fee5 	bl	8009868 <xTaskRemoveFromEventList>
 8008a9e:	b110      	cbz	r0, 8008aa6 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 8008aa0:	b10f      	cbz	r7, 8008aa6 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008aa2:	2301      	movs	r3, #1
 8008aa4:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8008aa6:	2001      	movs	r0, #1
	__asm volatile
 8008aa8:	f388 8811 	msr	BASEPRI, r8
}
 8008aac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008ab0:	3501      	adds	r5, #1
 8008ab2:	b26d      	sxtb	r5, r5
 8008ab4:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8008ab8:	e7f5      	b.n	8008aa6 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 8008aba:	2000      	movs	r0, #0
 8008abc:	e7f4      	b.n	8008aa8 <xQueueGenericSendFromISR+0xa4>

08008abe <xQueueGiveFromISR>:
{
 8008abe:	b570      	push	{r4, r5, r6, lr}
 8008ac0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008ac2:	4604      	mov	r4, r0
 8008ac4:	b940      	cbnz	r0, 8008ad8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008ac6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008aca:	f383 8811 	msr	BASEPRI, r3
 8008ace:	f3bf 8f6f 	isb	sy
 8008ad2:	f3bf 8f4f 	dsb	sy
 8008ad6:	e7fe      	b.n	8008ad6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008ad8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008ada:	b143      	cbz	r3, 8008aee <xQueueGiveFromISR+0x30>
 8008adc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ae0:	f383 8811 	msr	BASEPRI, r3
 8008ae4:	f3bf 8f6f 	isb	sy
 8008ae8:	f3bf 8f4f 	dsb	sy
 8008aec:	e7fe      	b.n	8008aec <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008aee:	6803      	ldr	r3, [r0, #0]
 8008af0:	b953      	cbnz	r3, 8008b08 <xQueueGiveFromISR+0x4a>
 8008af2:	6883      	ldr	r3, [r0, #8]
 8008af4:	b143      	cbz	r3, 8008b08 <xQueueGiveFromISR+0x4a>
 8008af6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008afa:	f383 8811 	msr	BASEPRI, r3
 8008afe:	f3bf 8f6f 	isb	sy
 8008b02:	f3bf 8f4f 	dsb	sy
 8008b06:	e7fe      	b.n	8008b06 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008b08:	f7ff fd1e 	bl	8008548 <vPortValidateInterruptPriority>
	__asm volatile
 8008b0c:	f3ef 8611 	mrs	r6, BASEPRI
 8008b10:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b14:	f383 8811 	msr	BASEPRI, r3
 8008b18:	f3bf 8f6f 	isb	sy
 8008b1c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008b20:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008b22:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008b24:	4293      	cmp	r3, r2
 8008b26:	d919      	bls.n	8008b5c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008b28:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008b2c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008b2e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008b30:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008b32:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008b34:	d10d      	bne.n	8008b52 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008b36:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008b38:	b13b      	cbz	r3, 8008b4a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008b3a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008b3e:	f000 fe93 	bl	8009868 <xTaskRemoveFromEventList>
 8008b42:	b110      	cbz	r0, 8008b4a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008b44:	b10d      	cbz	r5, 8008b4a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008b46:	2301      	movs	r3, #1
 8008b48:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8008b4a:	2001      	movs	r0, #1
	__asm volatile
 8008b4c:	f386 8811 	msr	BASEPRI, r6
}
 8008b50:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008b52:	3301      	adds	r3, #1
 8008b54:	b25b      	sxtb	r3, r3
 8008b56:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8008b5a:	e7f6      	b.n	8008b4a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 8008b5c:	2000      	movs	r0, #0
 8008b5e:	e7f5      	b.n	8008b4c <xQueueGiveFromISR+0x8e>

08008b60 <xQueueReceive>:
{
 8008b60:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008b64:	460e      	mov	r6, r1
 8008b66:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008b68:	4604      	mov	r4, r0
 8008b6a:	b940      	cbnz	r0, 8008b7e <xQueueReceive+0x1e>
	__asm volatile
 8008b6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b70:	f383 8811 	msr	BASEPRI, r3
 8008b74:	f3bf 8f6f 	isb	sy
 8008b78:	f3bf 8f4f 	dsb	sy
 8008b7c:	e7fe      	b.n	8008b7c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008b7e:	b951      	cbnz	r1, 8008b96 <xQueueReceive+0x36>
 8008b80:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008b82:	b143      	cbz	r3, 8008b96 <xQueueReceive+0x36>
 8008b84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b88:	f383 8811 	msr	BASEPRI, r3
 8008b8c:	f3bf 8f6f 	isb	sy
 8008b90:	f3bf 8f4f 	dsb	sy
 8008b94:	e7fe      	b.n	8008b94 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008b96:	f000 fef5 	bl	8009984 <xTaskGetSchedulerState>
 8008b9a:	4605      	mov	r5, r0
 8008b9c:	b318      	cbz	r0, 8008be6 <xQueueReceive+0x86>
 8008b9e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8008ba0:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008ba4:	f7ff fbbe 	bl	8008324 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ba8:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008baa:	b347      	cbz	r7, 8008bfe <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008bac:	4631      	mov	r1, r6
 8008bae:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008bb0:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008bb2:	f7ff fd35 	bl	8008620 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008bb6:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008bb8:	6923      	ldr	r3, [r4, #16]
 8008bba:	b173      	cbz	r3, 8008bda <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008bbc:	f104 0010 	add.w	r0, r4, #16
 8008bc0:	f000 fe52 	bl	8009868 <xTaskRemoveFromEventList>
 8008bc4:	b148      	cbz	r0, 8008bda <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 8008bc6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008bca:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bce:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008bd2:	f3bf 8f4f 	dsb	sy
 8008bd6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008bda:	f7ff fbc3 	bl	8008364 <vPortExitCritical>
				return pdPASS;
 8008bde:	2001      	movs	r0, #1
}
 8008be0:	b004      	add	sp, #16
 8008be2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008be6:	9b01      	ldr	r3, [sp, #4]
 8008be8:	2b00      	cmp	r3, #0
 8008bea:	d0d9      	beq.n	8008ba0 <xQueueReceive+0x40>
 8008bec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bf0:	f383 8811 	msr	BASEPRI, r3
 8008bf4:	f3bf 8f6f 	isb	sy
 8008bf8:	f3bf 8f4f 	dsb	sy
 8008bfc:	e7fe      	b.n	8008bfc <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008bfe:	9b01      	ldr	r3, [sp, #4]
 8008c00:	b91b      	cbnz	r3, 8008c0a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8008c02:	f7ff fbaf 	bl	8008364 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008c06:	2000      	movs	r0, #0
 8008c08:	e7ea      	b.n	8008be0 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 8008c0a:	b915      	cbnz	r5, 8008c12 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008c0c:	a802      	add	r0, sp, #8
 8008c0e:	f000 fe6b 	bl	80098e8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008c12:	f7ff fba7 	bl	8008364 <vPortExitCritical>
		vTaskSuspendAll();
 8008c16:	f000 fc73 	bl	8009500 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008c1a:	f7ff fb83 	bl	8008324 <vPortEnterCritical>
 8008c1e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008c22:	2bff      	cmp	r3, #255	@ 0xff
 8008c24:	bf08      	it	eq
 8008c26:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8008c2a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008c2e:	2bff      	cmp	r3, #255	@ 0xff
 8008c30:	bf08      	it	eq
 8008c32:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8008c36:	f7ff fb95 	bl	8008364 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008c3a:	a901      	add	r1, sp, #4
 8008c3c:	a802      	add	r0, sp, #8
 8008c3e:	f000 fe5f 	bl	8009900 <xTaskCheckForTimeOut>
 8008c42:	bb00      	cbnz	r0, 8008c86 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008c44:	4620      	mov	r0, r4
 8008c46:	f7ff fcad 	bl	80085a4 <prvIsQueueEmpty>
 8008c4a:	b1b0      	cbz	r0, 8008c7a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008c4c:	9901      	ldr	r1, [sp, #4]
 8008c4e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008c52:	f000 fdd1 	bl	80097f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008c56:	4620      	mov	r0, r4
 8008c58:	f7ff fcf8 	bl	800864c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008c5c:	f000 fcf4 	bl	8009648 <xTaskResumeAll>
 8008c60:	b948      	cbnz	r0, 8008c76 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8008c62:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008c66:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008c6e:	f3bf 8f4f 	dsb	sy
 8008c72:	f3bf 8f6f 	isb	sy
 8008c76:	2501      	movs	r5, #1
 8008c78:	e794      	b.n	8008ba4 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 8008c7a:	4620      	mov	r0, r4
 8008c7c:	f7ff fce6 	bl	800864c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008c80:	f000 fce2 	bl	8009648 <xTaskResumeAll>
 8008c84:	e7f7      	b.n	8008c76 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 8008c86:	4620      	mov	r0, r4
 8008c88:	f7ff fce0 	bl	800864c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008c8c:	f000 fcdc 	bl	8009648 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008c90:	4620      	mov	r0, r4
 8008c92:	f7ff fc87 	bl	80085a4 <prvIsQueueEmpty>
 8008c96:	2800      	cmp	r0, #0
 8008c98:	d0ed      	beq.n	8008c76 <xQueueReceive+0x116>
 8008c9a:	e7b4      	b.n	8008c06 <xQueueReceive+0xa6>

08008c9c <xQueueSemaphoreTake>:
{
 8008c9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c9e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008ca0:	4604      	mov	r4, r0
{
 8008ca2:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008ca4:	b940      	cbnz	r0, 8008cb8 <xQueueSemaphoreTake+0x1c>
 8008ca6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008caa:	f383 8811 	msr	BASEPRI, r3
 8008cae:	f3bf 8f6f 	isb	sy
 8008cb2:	f3bf 8f4f 	dsb	sy
 8008cb6:	e7fe      	b.n	8008cb6 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008cb8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8008cba:	b145      	cbz	r5, 8008cce <xQueueSemaphoreTake+0x32>
 8008cbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cc0:	f383 8811 	msr	BASEPRI, r3
 8008cc4:	f3bf 8f6f 	isb	sy
 8008cc8:	f3bf 8f4f 	dsb	sy
 8008ccc:	e7fe      	b.n	8008ccc <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008cce:	f000 fe59 	bl	8009984 <xTaskGetSchedulerState>
 8008cd2:	4606      	mov	r6, r0
 8008cd4:	b320      	cbz	r0, 8008d20 <xQueueSemaphoreTake+0x84>
 8008cd6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008cd8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 8008cda:	f7ff fb23 	bl	8008324 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008cde:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008ce0:	b353      	cbz	r3, 8008d38 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008ce2:	3b01      	subs	r3, #1
 8008ce4:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008ce6:	6823      	ldr	r3, [r4, #0]
 8008ce8:	b913      	cbnz	r3, 8008cf0 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008cea:	f000 ff29 	bl	8009b40 <pvTaskIncrementMutexHeldCount>
 8008cee:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008cf0:	6923      	ldr	r3, [r4, #16]
 8008cf2:	b173      	cbz	r3, 8008d12 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008cf4:	f104 0010 	add.w	r0, r4, #16
 8008cf8:	f000 fdb6 	bl	8009868 <xTaskRemoveFromEventList>
 8008cfc:	b148      	cbz	r0, 8008d12 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 8008cfe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d02:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d06:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d0a:	f3bf 8f4f 	dsb	sy
 8008d0e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008d12:	f7ff fb27 	bl	8008364 <vPortExitCritical>
				return pdPASS;
 8008d16:	2001      	movs	r0, #1
}
 8008d18:	b005      	add	sp, #20
 8008d1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d1c:	4635      	mov	r5, r6
 8008d1e:	e7db      	b.n	8008cd8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008d20:	9b01      	ldr	r3, [sp, #4]
 8008d22:	2b00      	cmp	r3, #0
 8008d24:	d0fa      	beq.n	8008d1c <xQueueSemaphoreTake+0x80>
 8008d26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d2a:	f383 8811 	msr	BASEPRI, r3
 8008d2e:	f3bf 8f6f 	isb	sy
 8008d32:	f3bf 8f4f 	dsb	sy
 8008d36:	e7fe      	b.n	8008d36 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008d38:	9b01      	ldr	r3, [sp, #4]
 8008d3a:	b953      	cbnz	r3, 8008d52 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008d3c:	2d00      	cmp	r5, #0
 8008d3e:	d066      	beq.n	8008e0e <xQueueSemaphoreTake+0x172>
 8008d40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d44:	f383 8811 	msr	BASEPRI, r3
 8008d48:	f3bf 8f6f 	isb	sy
 8008d4c:	f3bf 8f4f 	dsb	sy
 8008d50:	e7fe      	b.n	8008d50 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8008d52:	b916      	cbnz	r6, 8008d5a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008d54:	a802      	add	r0, sp, #8
 8008d56:	f000 fdc7 	bl	80098e8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008d5a:	f7ff fb03 	bl	8008364 <vPortExitCritical>
		vTaskSuspendAll();
 8008d5e:	f000 fbcf 	bl	8009500 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008d62:	f7ff fadf 	bl	8008324 <vPortEnterCritical>
 8008d66:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008d6a:	2bff      	cmp	r3, #255	@ 0xff
 8008d6c:	bf08      	it	eq
 8008d6e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8008d72:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008d76:	2bff      	cmp	r3, #255	@ 0xff
 8008d78:	bf08      	it	eq
 8008d7a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 8008d7e:	f7ff faf1 	bl	8008364 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008d82:	a901      	add	r1, sp, #4
 8008d84:	a802      	add	r0, sp, #8
 8008d86:	f000 fdbb 	bl	8009900 <xTaskCheckForTimeOut>
 8008d8a:	bb50      	cbnz	r0, 8008de2 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008d8c:	4620      	mov	r0, r4
 8008d8e:	f7ff fc09 	bl	80085a4 <prvIsQueueEmpty>
 8008d92:	b300      	cbz	r0, 8008dd6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008d94:	6823      	ldr	r3, [r4, #0]
 8008d96:	b93b      	cbnz	r3, 8008da8 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 8008d98:	f7ff fac4 	bl	8008324 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008d9c:	68a0      	ldr	r0, [r4, #8]
 8008d9e:	f000 fe01 	bl	80099a4 <xTaskPriorityInherit>
 8008da2:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008da4:	f7ff fade 	bl	8008364 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008da8:	9901      	ldr	r1, [sp, #4]
 8008daa:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008dae:	f000 fd23 	bl	80097f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008db2:	4620      	mov	r0, r4
 8008db4:	f7ff fc4a 	bl	800864c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008db8:	f000 fc46 	bl	8009648 <xTaskResumeAll>
 8008dbc:	b948      	cbnz	r0, 8008dd2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 8008dbe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008dc2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008dc6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008dca:	f3bf 8f4f 	dsb	sy
 8008dce:	f3bf 8f6f 	isb	sy
 8008dd2:	2601      	movs	r6, #1
 8008dd4:	e781      	b.n	8008cda <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 8008dd6:	4620      	mov	r0, r4
 8008dd8:	f7ff fc38 	bl	800864c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008ddc:	f000 fc34 	bl	8009648 <xTaskResumeAll>
 8008de0:	e7f7      	b.n	8008dd2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8008de2:	4620      	mov	r0, r4
 8008de4:	f7ff fc32 	bl	800864c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008de8:	f000 fc2e 	bl	8009648 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008dec:	4620      	mov	r0, r4
 8008dee:	f7ff fbd9 	bl	80085a4 <prvIsQueueEmpty>
 8008df2:	2800      	cmp	r0, #0
 8008df4:	d0ed      	beq.n	8008dd2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8008df6:	b165      	cbz	r5, 8008e12 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8008df8:	f7ff fa94 	bl	8008324 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8008dfc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8008dfe:	b119      	cbz	r1, 8008e08 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008e00:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008e02:	6819      	ldr	r1, [r3, #0]
 8008e04:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008e08:	68a0      	ldr	r0, [r4, #8]
 8008e0a:	f000 fe4b 	bl	8009aa4 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 8008e0e:	f7ff faa9 	bl	8008364 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008e12:	2000      	movs	r0, #0
 8008e14:	e780      	b.n	8008d18 <xQueueSemaphoreTake+0x7c>

08008e16 <xQueueReceiveFromISR>:
{
 8008e16:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008e1a:	4689      	mov	r9, r1
 8008e1c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008e1e:	4604      	mov	r4, r0
 8008e20:	b940      	cbnz	r0, 8008e34 <xQueueReceiveFromISR+0x1e>
 8008e22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e26:	f383 8811 	msr	BASEPRI, r3
 8008e2a:	f3bf 8f6f 	isb	sy
 8008e2e:	f3bf 8f4f 	dsb	sy
 8008e32:	e7fe      	b.n	8008e32 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008e34:	b951      	cbnz	r1, 8008e4c <xQueueReceiveFromISR+0x36>
 8008e36:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008e38:	b143      	cbz	r3, 8008e4c <xQueueReceiveFromISR+0x36>
 8008e3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e3e:	f383 8811 	msr	BASEPRI, r3
 8008e42:	f3bf 8f6f 	isb	sy
 8008e46:	f3bf 8f4f 	dsb	sy
 8008e4a:	e7fe      	b.n	8008e4a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008e4c:	f7ff fb7c 	bl	8008548 <vPortValidateInterruptPriority>
	__asm volatile
 8008e50:	f3ef 8711 	mrs	r7, BASEPRI
 8008e54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e58:	f383 8811 	msr	BASEPRI, r3
 8008e5c:	f3bf 8f6f 	isb	sy
 8008e60:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008e64:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008e66:	b30d      	cbz	r5, 8008eac <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008e68:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008e6c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8008e6e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008e70:	4620      	mov	r0, r4
 8008e72:	f7ff fbd5 	bl	8008620 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008e76:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8008e78:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008e7a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 8008e7c:	d111      	bne.n	8008ea2 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008e7e:	6923      	ldr	r3, [r4, #16]
 8008e80:	b153      	cbz	r3, 8008e98 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008e82:	f104 0010 	add.w	r0, r4, #16
 8008e86:	f000 fcef 	bl	8009868 <xTaskRemoveFromEventList>
 8008e8a:	b128      	cbz	r0, 8008e98 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 8008e8c:	f1b8 0f00 	cmp.w	r8, #0
 8008e90:	d002      	beq.n	8008e98 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008e92:	2301      	movs	r3, #1
 8008e94:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8008e98:	2001      	movs	r0, #1
	__asm volatile
 8008e9a:	f387 8811 	msr	BASEPRI, r7
}
 8008e9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008ea2:	3601      	adds	r6, #1
 8008ea4:	b276      	sxtb	r6, r6
 8008ea6:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 8008eaa:	e7f5      	b.n	8008e98 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 8008eac:	4628      	mov	r0, r5
 8008eae:	e7f4      	b.n	8008e9a <xQueueReceiveFromISR+0x84>

08008eb0 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008eb0:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008eb2:	4a07      	ldr	r2, [pc, #28]	@ (8008ed0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008eb4:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008eb6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8008eba:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8008ebe:	b91d      	cbnz	r5, 8008ec8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008ec0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008ec4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008ec6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008ec8:	3301      	adds	r3, #1
 8008eca:	2b08      	cmp	r3, #8
 8008ecc:	d1f3      	bne.n	8008eb6 <vQueueAddToRegistry+0x6>
 8008ece:	e7fa      	b.n	8008ec6 <vQueueAddToRegistry+0x16>
 8008ed0:	200139c8 	.word	0x200139c8

08008ed4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008ed4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008ed6:	4a09      	ldr	r2, [pc, #36]	@ (8008efc <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008ed8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008eda:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8008ede:	4281      	cmp	r1, r0
 8008ee0:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8008ee4:	d106      	bne.n	8008ef4 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008ee6:	4a06      	ldr	r2, [pc, #24]	@ (8008f00 <vQueueUnregisterQueue+0x2c>)
 8008ee8:	2100      	movs	r1, #0
 8008eea:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008eee:	4422      	add	r2, r4
 8008ef0:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008ef2:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008ef4:	3301      	adds	r3, #1
 8008ef6:	2b08      	cmp	r3, #8
 8008ef8:	d1ef      	bne.n	8008eda <vQueueUnregisterQueue+0x6>
 8008efa:	e7fa      	b.n	8008ef2 <vQueueUnregisterQueue+0x1e>
 8008efc:	200139cc 	.word	0x200139cc
 8008f00:	200139c8 	.word	0x200139c8

08008f04 <vQueueDelete>:
{
 8008f04:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008f06:	b940      	cbnz	r0, 8008f1a <vQueueDelete+0x16>
	__asm volatile
 8008f08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f0c:	f383 8811 	msr	BASEPRI, r3
 8008f10:	f3bf 8f6f 	isb	sy
 8008f14:	f3bf 8f4f 	dsb	sy
 8008f18:	e7fe      	b.n	8008f18 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8008f1a:	f7ff ffdb 	bl	8008ed4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008f1e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008f22:	b91b      	cbnz	r3, 8008f2c <vQueueDelete+0x28>
}
 8008f24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008f28:	f7ff b912 	b.w	8008150 <vPortFree>
}
 8008f2c:	bd10      	pop	{r4, pc}

08008f2e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008f2e:	b570      	push	{r4, r5, r6, lr}
 8008f30:	4604      	mov	r4, r0
 8008f32:	460d      	mov	r5, r1
 8008f34:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008f36:	f7ff f9f5 	bl	8008324 <vPortEnterCritical>
 8008f3a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008f3e:	2bff      	cmp	r3, #255	@ 0xff
 8008f40:	bf04      	itt	eq
 8008f42:	2300      	moveq	r3, #0
 8008f44:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8008f48:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8008f4c:	2bff      	cmp	r3, #255	@ 0xff
 8008f4e:	bf04      	itt	eq
 8008f50:	2300      	moveq	r3, #0
 8008f52:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8008f56:	f7ff fa05 	bl	8008364 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8008f5a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8008f5c:	b92b      	cbnz	r3, 8008f6a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008f5e:	4632      	mov	r2, r6
 8008f60:	4629      	mov	r1, r5
 8008f62:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008f66:	f000 fc61 	bl	800982c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8008f6a:	4620      	mov	r0, r4
	}
 8008f6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008f70:	f7ff bb6c 	b.w	800864c <prvUnlockQueue>

08008f74 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008f74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008f78:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8008f7a:	f7ff f9d3 	bl	8008324 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008f7e:	4b30      	ldr	r3, [pc, #192]	@ (8009040 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008f80:	4e30      	ldr	r6, [pc, #192]	@ (8009044 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008f82:	681a      	ldr	r2, [r3, #0]
 8008f84:	4f30      	ldr	r7, [pc, #192]	@ (8009048 <prvAddNewTaskToReadyList+0xd4>)
 8008f86:	3201      	adds	r2, #1
 8008f88:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8008f8a:	6835      	ldr	r5, [r6, #0]
 8008f8c:	2d00      	cmp	r5, #0
 8008f8e:	d14b      	bne.n	8009028 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008f90:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008f92:	681b      	ldr	r3, [r3, #0]
 8008f94:	2b01      	cmp	r3, #1
 8008f96:	d11f      	bne.n	8008fd8 <prvAddNewTaskToReadyList+0x64>
 8008f98:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008f9a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008f9c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008f9e:	f7ff f915 	bl	80081cc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008fa2:	2d38      	cmp	r5, #56	@ 0x38
 8008fa4:	f108 0814 	add.w	r8, r8, #20
 8008fa8:	d1f7      	bne.n	8008f9a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8008faa:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8009070 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8008fae:	4d27      	ldr	r5, [pc, #156]	@ (800904c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008fb0:	4640      	mov	r0, r8
 8008fb2:	f7ff f90b 	bl	80081cc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008fb6:	4628      	mov	r0, r5
 8008fb8:	f7ff f908 	bl	80081cc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8008fbc:	4824      	ldr	r0, [pc, #144]	@ (8009050 <prvAddNewTaskToReadyList+0xdc>)
 8008fbe:	f7ff f905 	bl	80081cc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008fc2:	4824      	ldr	r0, [pc, #144]	@ (8009054 <prvAddNewTaskToReadyList+0xe0>)
 8008fc4:	f7ff f902 	bl	80081cc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008fc8:	4823      	ldr	r0, [pc, #140]	@ (8009058 <prvAddNewTaskToReadyList+0xe4>)
 8008fca:	f7ff f8ff 	bl	80081cc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008fce:	4b23      	ldr	r3, [pc, #140]	@ (800905c <prvAddNewTaskToReadyList+0xe8>)
 8008fd0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008fd4:	4b22      	ldr	r3, [pc, #136]	@ (8009060 <prvAddNewTaskToReadyList+0xec>)
 8008fd6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008fd8:	4a22      	ldr	r2, [pc, #136]	@ (8009064 <prvAddNewTaskToReadyList+0xf0>)
 8008fda:	6813      	ldr	r3, [r2, #0]
 8008fdc:	3301      	adds	r3, #1
 8008fde:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008fe0:	4a21      	ldr	r2, [pc, #132]	@ (8009068 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008fe2:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008fe4:	6811      	ldr	r1, [r2, #0]
 8008fe6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008fe8:	2014      	movs	r0, #20
 8008fea:	428b      	cmp	r3, r1
 8008fec:	fb00 7003 	mla	r0, r0, r3, r7
 8008ff0:	f104 0104 	add.w	r1, r4, #4
 8008ff4:	bf88      	it	hi
 8008ff6:	6013      	strhi	r3, [r2, #0]
 8008ff8:	f7ff f8f6 	bl	80081e8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008ffc:	f7ff f9b2 	bl	8008364 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009000:	4b1a      	ldr	r3, [pc, #104]	@ (800906c <prvAddNewTaskToReadyList+0xf8>)
 8009002:	681b      	ldr	r3, [r3, #0]
 8009004:	b173      	cbz	r3, 8009024 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009006:	6833      	ldr	r3, [r6, #0]
 8009008:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800900a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800900c:	429a      	cmp	r2, r3
 800900e:	d209      	bcs.n	8009024 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009010:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009014:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009018:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800901c:	f3bf 8f4f 	dsb	sy
 8009020:	f3bf 8f6f 	isb	sy
}
 8009024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009028:	4b10      	ldr	r3, [pc, #64]	@ (800906c <prvAddNewTaskToReadyList+0xf8>)
 800902a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800902c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800902e:	2a00      	cmp	r2, #0
 8009030:	d1d2      	bne.n	8008fd8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009032:	6832      	ldr	r2, [r6, #0]
 8009034:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009036:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009038:	bf98      	it	ls
 800903a:	6034      	strls	r4, [r6, #0]
 800903c:	e7cc      	b.n	8008fd8 <prvAddNewTaskToReadyList+0x64>
 800903e:	bf00      	nop
 8009040:	20013a2c 	.word	0x20013a2c
 8009044:	20013f00 	.word	0x20013f00
 8009048:	20013aa0 	.word	0x20013aa0
 800904c:	20013a78 	.word	0x20013a78
 8009050:	20013a5c 	.word	0x20013a5c
 8009054:	20013a48 	.word	0x20013a48
 8009058:	20013a30 	.word	0x20013a30
 800905c:	20013a74 	.word	0x20013a74
 8009060:	20013a70 	.word	0x20013a70
 8009064:	20013a10 	.word	0x20013a10
 8009068:	20013a24 	.word	0x20013a24
 800906c:	20013a20 	.word	0x20013a20
 8009070:	20013a8c 	.word	0x20013a8c

08009074 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009074:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009076:	4b15      	ldr	r3, [pc, #84]	@ (80090cc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009078:	4d15      	ldr	r5, [pc, #84]	@ (80090d0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800907a:	681c      	ldr	r4, [r3, #0]
{
 800907c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800907e:	6828      	ldr	r0, [r5, #0]
 8009080:	3004      	adds	r0, #4
{
 8009082:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009084:	f7ff f8d2 	bl	800822c <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009088:	1c73      	adds	r3, r6, #1
 800908a:	d107      	bne.n	800909c <prvAddCurrentTaskToDelayedList+0x28>
 800908c:	b137      	cbz	r7, 800909c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800908e:	6829      	ldr	r1, [r5, #0]
 8009090:	4810      	ldr	r0, [pc, #64]	@ (80090d4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009092:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009096:	3104      	adds	r1, #4
 8009098:	f7ff b8a6 	b.w	80081e8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800909c:	682b      	ldr	r3, [r5, #0]
 800909e:	19a4      	adds	r4, r4, r6
 80090a0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80090a2:	d307      	bcc.n	80090b4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80090a4:	4b0c      	ldr	r3, [pc, #48]	@ (80090d8 <prvAddCurrentTaskToDelayedList+0x64>)
 80090a6:	6818      	ldr	r0, [r3, #0]
 80090a8:	6829      	ldr	r1, [r5, #0]
}
 80090aa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80090ae:	3104      	adds	r1, #4
 80090b0:	f7ff b8a5 	b.w	80081fe <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80090b4:	4b09      	ldr	r3, [pc, #36]	@ (80090dc <prvAddCurrentTaskToDelayedList+0x68>)
 80090b6:	6818      	ldr	r0, [r3, #0]
 80090b8:	6829      	ldr	r1, [r5, #0]
 80090ba:	3104      	adds	r1, #4
 80090bc:	f7ff f89f 	bl	80081fe <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80090c0:	4b07      	ldr	r3, [pc, #28]	@ (80090e0 <prvAddCurrentTaskToDelayedList+0x6c>)
 80090c2:	681a      	ldr	r2, [r3, #0]
 80090c4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80090c6:	bf88      	it	hi
 80090c8:	601c      	strhi	r4, [r3, #0]
}
 80090ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80090cc:	20013a28 	.word	0x20013a28
 80090d0:	20013f00 	.word	0x20013f00
 80090d4:	20013a30 	.word	0x20013a30
 80090d8:	20013a70 	.word	0x20013a70
 80090dc:	20013a74 	.word	0x20013a74
 80090e0:	20013a0c 	.word	0x20013a0c

080090e4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80090e4:	4a06      	ldr	r2, [pc, #24]	@ (8009100 <prvResetNextTaskUnblockTime+0x1c>)
 80090e6:	6813      	ldr	r3, [r2, #0]
 80090e8:	6819      	ldr	r1, [r3, #0]
 80090ea:	4b06      	ldr	r3, [pc, #24]	@ (8009104 <prvResetNextTaskUnblockTime+0x20>)
 80090ec:	b919      	cbnz	r1, 80090f6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80090ee:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80090f2:	601a      	str	r2, [r3, #0]
}
 80090f4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80090f6:	6812      	ldr	r2, [r2, #0]
 80090f8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80090fa:	68d2      	ldr	r2, [r2, #12]
 80090fc:	6852      	ldr	r2, [r2, #4]
 80090fe:	e7f8      	b.n	80090f2 <prvResetNextTaskUnblockTime+0xe>
 8009100:	20013a74 	.word	0x20013a74
 8009104:	20013a0c 	.word	0x20013a0c

08009108 <prvDeleteTCB>:
	{
 8009108:	b510      	push	{r4, lr}
 800910a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800910c:	3058      	adds	r0, #88	@ 0x58
 800910e:	f01a fbbd 	bl	802388c <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009112:	f894 30a9 	ldrb.w	r3, [r4, #169]	@ 0xa9
 8009116:	b93b      	cbnz	r3, 8009128 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009118:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800911a:	f7ff f819 	bl	8008150 <vPortFree>
				vPortFree( pxTCB );
 800911e:	4620      	mov	r0, r4
	}
 8009120:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009124:	f7ff b814 	b.w	8008150 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009128:	2b01      	cmp	r3, #1
 800912a:	d0f8      	beq.n	800911e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800912c:	2b02      	cmp	r3, #2
 800912e:	d008      	beq.n	8009142 <prvDeleteTCB+0x3a>
 8009130:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009134:	f383 8811 	msr	BASEPRI, r3
 8009138:	f3bf 8f6f 	isb	sy
 800913c:	f3bf 8f4f 	dsb	sy
 8009140:	e7fe      	b.n	8009140 <prvDeleteTCB+0x38>
	}
 8009142:	bd10      	pop	{r4, pc}

08009144 <prvIdleTask>:
{
 8009144:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009146:	4c13      	ldr	r4, [pc, #76]	@ (8009194 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009148:	4f13      	ldr	r7, [pc, #76]	@ (8009198 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800914a:	4d14      	ldr	r5, [pc, #80]	@ (800919c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800914c:	6823      	ldr	r3, [r4, #0]
 800914e:	b973      	cbnz	r3, 800916e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009150:	4b13      	ldr	r3, [pc, #76]	@ (80091a0 <prvIdleTask+0x5c>)
 8009152:	681b      	ldr	r3, [r3, #0]
 8009154:	2b01      	cmp	r3, #1
 8009156:	d9f8      	bls.n	800914a <prvIdleTask+0x6>
				taskYIELD();
 8009158:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800915c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009160:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009164:	f3bf 8f4f 	dsb	sy
 8009168:	f3bf 8f6f 	isb	sy
 800916c:	e7ed      	b.n	800914a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800916e:	f7ff f8d9 	bl	8008324 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009172:	68fb      	ldr	r3, [r7, #12]
 8009174:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009176:	1d30      	adds	r0, r6, #4
 8009178:	f7ff f858 	bl	800822c <uxListRemove>
				--uxCurrentNumberOfTasks;
 800917c:	682b      	ldr	r3, [r5, #0]
 800917e:	3b01      	subs	r3, #1
 8009180:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009182:	6823      	ldr	r3, [r4, #0]
 8009184:	3b01      	subs	r3, #1
 8009186:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009188:	f7ff f8ec 	bl	8008364 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800918c:	4630      	mov	r0, r6
 800918e:	f7ff ffbb 	bl	8009108 <prvDeleteTCB>
 8009192:	e7db      	b.n	800914c <prvIdleTask+0x8>
 8009194:	20013a44 	.word	0x20013a44
 8009198:	20013a48 	.word	0x20013a48
 800919c:	20013a2c 	.word	0x20013a2c
 80091a0:	20013aa0 	.word	0x20013aa0

080091a4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80091a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80091a8:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80091ac:	0096      	lsls	r6, r2, #2
 80091ae:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80091b0:	4607      	mov	r7, r0
 80091b2:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80091b4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80091b6:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80091b8:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80091ba:	f01a fb1e 	bl	80237fa <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80091be:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80091c0:	3e04      	subs	r6, #4
 80091c2:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80091c4:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80091c8:	2d00      	cmp	r5, #0
 80091ca:	d043      	beq.n	8009254 <prvInitialiseNewTask.constprop.0+0xb0>
 80091cc:	1e6b      	subs	r3, r5, #1
 80091ce:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 80091d2:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80091d4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80091d8:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 80091dc:	b109      	cbz	r1, 80091e2 <prvInitialiseNewTask.constprop.0+0x3e>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80091de:	42ab      	cmp	r3, r5
 80091e0:	d1f8      	bne.n	80091d4 <prvInitialiseNewTask.constprop.0+0x30>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80091e2:	2300      	movs	r3, #0
 80091e4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80091e8:	9d08      	ldr	r5, [sp, #32]
 80091ea:	2d37      	cmp	r5, #55	@ 0x37
 80091ec:	bf28      	it	cs
 80091ee:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80091f0:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80091f4:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80091f6:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80091f8:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80091fa:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80091fe:	f7fe fff0 	bl	80081e2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009202:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009206:	f104 0018 	add.w	r0, r4, #24
 800920a:	f7fe ffea 	bl	80081e2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800920e:	f8c4 a0a4 	str.w	sl, [r4, #164]	@ 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009212:	224c      	movs	r2, #76	@ 0x4c
 8009214:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009216:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009218:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800921a:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800921c:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009220:	f884 a0a8 	strb.w	sl, [r4, #168]	@ 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009224:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8009228:	f01a fae7 	bl	80237fa <memset>
 800922c:	4b0b      	ldr	r3, [pc, #44]	@ (800925c <prvInitialiseNewTask.constprop.0+0xb8>)
 800922e:	65e3      	str	r3, [r4, #92]	@ 0x5c
 8009230:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8009234:	33d0      	adds	r3, #208	@ 0xd0
 8009236:	6622      	str	r2, [r4, #96]	@ 0x60
 8009238:	6663      	str	r3, [r4, #100]	@ 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800923a:	4642      	mov	r2, r8
 800923c:	4639      	mov	r1, r7
 800923e:	4630      	mov	r0, r6
 8009240:	f7ff f842 	bl	80082c8 <pxPortInitialiseStack>
 8009244:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009246:	f1b9 0f00 	cmp.w	r9, #0
 800924a:	d001      	beq.n	8009250 <prvInitialiseNewTask.constprop.0+0xac>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800924c:	f8c9 4000 	str.w	r4, [r9]
}
 8009250:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009254:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009258:	e7c6      	b.n	80091e8 <prvInitialiseNewTask.constprop.0+0x44>
 800925a:	bf00      	nop
 800925c:	20014aa4 	.word	0x20014aa4

08009260 <xTaskCreateStatic>:
	{
 8009260:	b570      	push	{r4, r5, r6, lr}
 8009262:	b086      	sub	sp, #24
 8009264:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009268:	b945      	cbnz	r5, 800927c <xTaskCreateStatic+0x1c>
 800926a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800926e:	f383 8811 	msr	BASEPRI, r3
 8009272:	f3bf 8f6f 	isb	sy
 8009276:	f3bf 8f4f 	dsb	sy
 800927a:	e7fe      	b.n	800927a <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800927c:	b944      	cbnz	r4, 8009290 <xTaskCreateStatic+0x30>
 800927e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009282:	f383 8811 	msr	BASEPRI, r3
 8009286:	f3bf 8f6f 	isb	sy
 800928a:	f3bf 8f4f 	dsb	sy
 800928e:	e7fe      	b.n	800928e <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009290:	26ac      	movs	r6, #172	@ 0xac
 8009292:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009294:	9e05      	ldr	r6, [sp, #20]
 8009296:	2eac      	cmp	r6, #172	@ 0xac
 8009298:	d008      	beq.n	80092ac <xTaskCreateStatic+0x4c>
 800929a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800929e:	f383 8811 	msr	BASEPRI, r3
 80092a2:	f3bf 8f6f 	isb	sy
 80092a6:	f3bf 8f4f 	dsb	sy
 80092aa:	e7fe      	b.n	80092aa <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80092ac:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80092ae:	2502      	movs	r5, #2
 80092b0:	f884 50a9 	strb.w	r5, [r4, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80092b4:	ad04      	add	r5, sp, #16
 80092b6:	9501      	str	r5, [sp, #4]
 80092b8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80092ba:	9402      	str	r4, [sp, #8]
 80092bc:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80092be:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80092c0:	f7ff ff70 	bl	80091a4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80092c4:	4620      	mov	r0, r4
 80092c6:	f7ff fe55 	bl	8008f74 <prvAddNewTaskToReadyList>
	}
 80092ca:	9804      	ldr	r0, [sp, #16]
 80092cc:	b006      	add	sp, #24
 80092ce:	bd70      	pop	{r4, r5, r6, pc}

080092d0 <xTaskCreate>:
	{
 80092d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80092d4:	4607      	mov	r7, r0
 80092d6:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80092d8:	0090      	lsls	r0, r2, #2
	{
 80092da:	4688      	mov	r8, r1
 80092dc:	4616      	mov	r6, r2
 80092de:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80092e0:	f7fe fe9e 	bl	8008020 <pvPortMalloc>
			if( pxStack != NULL )
 80092e4:	4605      	mov	r5, r0
 80092e6:	b920      	cbnz	r0, 80092f2 <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80092e8:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80092ec:	b005      	add	sp, #20
 80092ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80092f2:	20ac      	movs	r0, #172	@ 0xac
 80092f4:	f7fe fe94 	bl	8008020 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80092f8:	4604      	mov	r4, r0
 80092fa:	b198      	cbz	r0, 8009324 <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80092fc:	2300      	movs	r3, #0
 80092fe:	f880 30a9 	strb.w	r3, [r0, #169]	@ 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009302:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 8009304:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009306:	9301      	str	r3, [sp, #4]
 8009308:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800930a:	9002      	str	r0, [sp, #8]
 800930c:	9300      	str	r3, [sp, #0]
 800930e:	4632      	mov	r2, r6
 8009310:	464b      	mov	r3, r9
 8009312:	4641      	mov	r1, r8
 8009314:	4638      	mov	r0, r7
 8009316:	f7ff ff45 	bl	80091a4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800931a:	4620      	mov	r0, r4
 800931c:	f7ff fe2a 	bl	8008f74 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009320:	2001      	movs	r0, #1
 8009322:	e7e3      	b.n	80092ec <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8009324:	4628      	mov	r0, r5
 8009326:	f7fe ff13 	bl	8008150 <vPortFree>
		if( pxNewTCB != NULL )
 800932a:	e7dd      	b.n	80092e8 <xTaskCreate+0x18>

0800932c <vTaskDelete>:
	{
 800932c:	b570      	push	{r4, r5, r6, lr}
 800932e:	4604      	mov	r4, r0
 8009330:	4d23      	ldr	r5, [pc, #140]	@ (80093c0 <vTaskDelete+0x94>)
		taskENTER_CRITICAL();
 8009332:	f7fe fff7 	bl	8008324 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
 8009336:	b904      	cbnz	r4, 800933a <vTaskDelete+0xe>
 8009338:	682c      	ldr	r4, [r5, #0]
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800933a:	1d26      	adds	r6, r4, #4
 800933c:	4630      	mov	r0, r6
 800933e:	f7fe ff75 	bl	800822c <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009342:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8009344:	b11b      	cbz	r3, 800934e <vTaskDelete+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009346:	f104 0018 	add.w	r0, r4, #24
 800934a:	f7fe ff6f 	bl	800822c <uxListRemove>
			uxTaskNumber++;
 800934e:	4a1d      	ldr	r2, [pc, #116]	@ (80093c4 <vTaskDelete+0x98>)
 8009350:	6813      	ldr	r3, [r2, #0]
 8009352:	3301      	adds	r3, #1
 8009354:	6013      	str	r3, [r2, #0]
			if( pxTCB == pxCurrentTCB )
 8009356:	682b      	ldr	r3, [r5, #0]
 8009358:	42a3      	cmp	r3, r4
 800935a:	d11b      	bne.n	8009394 <vTaskDelete+0x68>
				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
 800935c:	481a      	ldr	r0, [pc, #104]	@ (80093c8 <vTaskDelete+0x9c>)
 800935e:	4631      	mov	r1, r6
 8009360:	f7fe ff42 	bl	80081e8 <vListInsertEnd>
				++uxDeletedTasksWaitingCleanUp;
 8009364:	4a19      	ldr	r2, [pc, #100]	@ (80093cc <vTaskDelete+0xa0>)
 8009366:	6813      	ldr	r3, [r2, #0]
 8009368:	3301      	adds	r3, #1
 800936a:	6013      	str	r3, [r2, #0]
		taskEXIT_CRITICAL();
 800936c:	f7fe fffa 	bl	8008364 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
 8009370:	4b17      	ldr	r3, [pc, #92]	@ (80093d0 <vTaskDelete+0xa4>)
 8009372:	681b      	ldr	r3, [r3, #0]
 8009374:	b313      	cbz	r3, 80093bc <vTaskDelete+0x90>
			if( pxTCB == pxCurrentTCB )
 8009376:	682b      	ldr	r3, [r5, #0]
 8009378:	42a3      	cmp	r3, r4
 800937a:	d11f      	bne.n	80093bc <vTaskDelete+0x90>
				configASSERT( uxSchedulerSuspended == 0 );
 800937c:	4b15      	ldr	r3, [pc, #84]	@ (80093d4 <vTaskDelete+0xa8>)
 800937e:	681b      	ldr	r3, [r3, #0]
 8009380:	b193      	cbz	r3, 80093a8 <vTaskDelete+0x7c>
 8009382:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009386:	f383 8811 	msr	BASEPRI, r3
 800938a:	f3bf 8f6f 	isb	sy
 800938e:	f3bf 8f4f 	dsb	sy
 8009392:	e7fe      	b.n	8009392 <vTaskDelete+0x66>
				--uxCurrentNumberOfTasks;
 8009394:	4a10      	ldr	r2, [pc, #64]	@ (80093d8 <vTaskDelete+0xac>)
 8009396:	6813      	ldr	r3, [r2, #0]
				prvDeleteTCB( pxTCB );
 8009398:	4620      	mov	r0, r4
				--uxCurrentNumberOfTasks;
 800939a:	3b01      	subs	r3, #1
 800939c:	6013      	str	r3, [r2, #0]
				prvDeleteTCB( pxTCB );
 800939e:	f7ff feb3 	bl	8009108 <prvDeleteTCB>
				prvResetNextTaskUnblockTime();
 80093a2:	f7ff fe9f 	bl	80090e4 <prvResetNextTaskUnblockTime>
 80093a6:	e7e1      	b.n	800936c <vTaskDelete+0x40>
				portYIELD_WITHIN_API();
 80093a8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80093ac:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80093b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80093b4:	f3bf 8f4f 	dsb	sy
 80093b8:	f3bf 8f6f 	isb	sy
	}
 80093bc:	bd70      	pop	{r4, r5, r6, pc}
 80093be:	bf00      	nop
 80093c0:	20013f00 	.word	0x20013f00
 80093c4:	20013a10 	.word	0x20013a10
 80093c8:	20013a48 	.word	0x20013a48
 80093cc:	20013a44 	.word	0x20013a44
 80093d0:	20013a20 	.word	0x20013a20
 80093d4:	20013a08 	.word	0x20013a08
 80093d8:	20013a2c 	.word	0x20013a2c

080093dc <eTaskGetState>:
	{
 80093dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( pxTCB );
 80093de:	4604      	mov	r4, r0
 80093e0:	b940      	cbnz	r0, 80093f4 <eTaskGetState+0x18>
 80093e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093e6:	f383 8811 	msr	BASEPRI, r3
 80093ea:	f3bf 8f6f 	isb	sy
 80093ee:	f3bf 8f4f 	dsb	sy
 80093f2:	e7fe      	b.n	80093f2 <eTaskGetState+0x16>
		if( pxTCB == pxCurrentTCB )
 80093f4:	4b15      	ldr	r3, [pc, #84]	@ (800944c <eTaskGetState+0x70>)
 80093f6:	681b      	ldr	r3, [r3, #0]
 80093f8:	4283      	cmp	r3, r0
 80093fa:	d020      	beq.n	800943e <eTaskGetState+0x62>
			taskENTER_CRITICAL();
 80093fc:	f7fe ff92 	bl	8008324 <vPortEnterCritical>
				pxDelayedList = pxDelayedTaskList;
 8009400:	4b13      	ldr	r3, [pc, #76]	@ (8009450 <eTaskGetState+0x74>)
				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
 8009402:	6965      	ldr	r5, [r4, #20]
				pxDelayedList = pxDelayedTaskList;
 8009404:	681f      	ldr	r7, [r3, #0]
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 8009406:	4b13      	ldr	r3, [pc, #76]	@ (8009454 <eTaskGetState+0x78>)
 8009408:	681e      	ldr	r6, [r3, #0]
			taskEXIT_CRITICAL();
 800940a:	f7fe ffab 	bl	8008364 <vPortExitCritical>
			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
 800940e:	42bd      	cmp	r5, r7
 8009410:	d017      	beq.n	8009442 <eTaskGetState+0x66>
 8009412:	42b5      	cmp	r5, r6
 8009414:	d015      	beq.n	8009442 <eTaskGetState+0x66>
				else if( pxStateList == &xSuspendedTaskList )
 8009416:	4b10      	ldr	r3, [pc, #64]	@ (8009458 <eTaskGetState+0x7c>)
 8009418:	429d      	cmp	r5, r3
 800941a:	d108      	bne.n	800942e <eTaskGetState+0x52>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
 800941c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800941e:	b983      	cbnz	r3, 8009442 <eTaskGetState+0x66>
							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 8009420:	f894 30a8 	ldrb.w	r3, [r4, #168]	@ 0xa8
								eReturn = eSuspended;
 8009424:	2b01      	cmp	r3, #1
 8009426:	bf0c      	ite	eq
 8009428:	2002      	moveq	r0, #2
 800942a:	2003      	movne	r0, #3
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 800942c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
 800942e:	4b0b      	ldr	r3, [pc, #44]	@ (800945c <eTaskGetState+0x80>)
 8009430:	429d      	cmp	r5, r3
 8009432:	d008      	beq.n	8009446 <eTaskGetState+0x6a>
				eReturn = eReady;
 8009434:	2d00      	cmp	r5, #0
 8009436:	bf0c      	ite	eq
 8009438:	2004      	moveq	r0, #4
 800943a:	2001      	movne	r0, #1
 800943c:	e7f6      	b.n	800942c <eTaskGetState+0x50>
			eReturn = eRunning;
 800943e:	2000      	movs	r0, #0
 8009440:	e7f4      	b.n	800942c <eTaskGetState+0x50>
				eReturn = eBlocked;
 8009442:	2002      	movs	r0, #2
 8009444:	e7f2      	b.n	800942c <eTaskGetState+0x50>
					eReturn = eDeleted;
 8009446:	2004      	movs	r0, #4
 8009448:	e7f0      	b.n	800942c <eTaskGetState+0x50>
 800944a:	bf00      	nop
 800944c:	20013f00 	.word	0x20013f00
 8009450:	20013a74 	.word	0x20013a74
 8009454:	20013a70 	.word	0x20013a70
 8009458:	20013a30 	.word	0x20013a30
 800945c:	20013a48 	.word	0x20013a48

08009460 <vTaskStartScheduler>:
{
 8009460:	b510      	push	{r4, lr}
 8009462:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009464:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009466:	aa07      	add	r2, sp, #28
 8009468:	a906      	add	r1, sp, #24
 800946a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800946c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009470:	f7fe fd98 	bl	8007fa4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009474:	9b05      	ldr	r3, [sp, #20]
 8009476:	9302      	str	r3, [sp, #8]
 8009478:	9b06      	ldr	r3, [sp, #24]
 800947a:	9a07      	ldr	r2, [sp, #28]
 800947c:	4919      	ldr	r1, [pc, #100]	@ (80094e4 <vTaskStartScheduler+0x84>)
 800947e:	481a      	ldr	r0, [pc, #104]	@ (80094e8 <vTaskStartScheduler+0x88>)
 8009480:	e9cd 4300 	strd	r4, r3, [sp]
 8009484:	4623      	mov	r3, r4
 8009486:	f7ff feeb 	bl	8009260 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800948a:	b340      	cbz	r0, 80094de <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800948c:	f000 fbb6 	bl	8009bfc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009490:	2801      	cmp	r0, #1
 8009492:	d119      	bne.n	80094c8 <vTaskStartScheduler+0x68>
 8009494:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009498:	f383 8811 	msr	BASEPRI, r3
 800949c:	f3bf 8f6f 	isb	sy
 80094a0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80094a4:	4b11      	ldr	r3, [pc, #68]	@ (80094ec <vTaskStartScheduler+0x8c>)
 80094a6:	4a12      	ldr	r2, [pc, #72]	@ (80094f0 <vTaskStartScheduler+0x90>)
 80094a8:	681b      	ldr	r3, [r3, #0]
 80094aa:	3358      	adds	r3, #88	@ 0x58
 80094ac:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 80094ae:	4b11      	ldr	r3, [pc, #68]	@ (80094f4 <vTaskStartScheduler+0x94>)
 80094b0:	f04f 32ff 	mov.w	r2, #4294967295
 80094b4:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80094b6:	4b10      	ldr	r3, [pc, #64]	@ (80094f8 <vTaskStartScheduler+0x98>)
 80094b8:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80094ba:	4b10      	ldr	r3, [pc, #64]	@ (80094fc <vTaskStartScheduler+0x9c>)
 80094bc:	601c      	str	r4, [r3, #0]
}
 80094be:	b008      	add	sp, #32
 80094c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 80094c4:	f7fe bfbe 	b.w	8008444 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80094c8:	3001      	adds	r0, #1
 80094ca:	d108      	bne.n	80094de <vTaskStartScheduler+0x7e>
 80094cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094d0:	f383 8811 	msr	BASEPRI, r3
 80094d4:	f3bf 8f6f 	isb	sy
 80094d8:	f3bf 8f4f 	dsb	sy
 80094dc:	e7fe      	b.n	80094dc <vTaskStartScheduler+0x7c>
}
 80094de:	b008      	add	sp, #32
 80094e0:	bd10      	pop	{r4, pc}
 80094e2:	bf00      	nop
 80094e4:	0802532c 	.word	0x0802532c
 80094e8:	08009145 	.word	0x08009145
 80094ec:	20013f00 	.word	0x20013f00
 80094f0:	20000220 	.word	0x20000220
 80094f4:	20013a0c 	.word	0x20013a0c
 80094f8:	20013a20 	.word	0x20013a20
 80094fc:	20013a28 	.word	0x20013a28

08009500 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009500:	4a02      	ldr	r2, [pc, #8]	@ (800950c <vTaskSuspendAll+0xc>)
 8009502:	6813      	ldr	r3, [r2, #0]
 8009504:	3301      	adds	r3, #1
 8009506:	6013      	str	r3, [r2, #0]
}
 8009508:	4770      	bx	lr
 800950a:	bf00      	nop
 800950c:	20013a08 	.word	0x20013a08

08009510 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009510:	4b01      	ldr	r3, [pc, #4]	@ (8009518 <xTaskGetTickCount+0x8>)
 8009512:	6818      	ldr	r0, [r3, #0]
}
 8009514:	4770      	bx	lr
 8009516:	bf00      	nop
 8009518:	20013a28 	.word	0x20013a28

0800951c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800951c:	4b3f      	ldr	r3, [pc, #252]	@ (800961c <xTaskIncrementTick+0x100>)
 800951e:	681b      	ldr	r3, [r3, #0]
{
 8009520:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009524:	2b00      	cmp	r3, #0
 8009526:	d172      	bne.n	800960e <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009528:	4b3d      	ldr	r3, [pc, #244]	@ (8009620 <xTaskIncrementTick+0x104>)
 800952a:	681c      	ldr	r4, [r3, #0]
 800952c:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800952e:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009530:	b9bc      	cbnz	r4, 8009562 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009532:	4b3c      	ldr	r3, [pc, #240]	@ (8009624 <xTaskIncrementTick+0x108>)
 8009534:	681a      	ldr	r2, [r3, #0]
 8009536:	6812      	ldr	r2, [r2, #0]
 8009538:	b142      	cbz	r2, 800954c <xTaskIncrementTick+0x30>
 800953a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800953e:	f383 8811 	msr	BASEPRI, r3
 8009542:	f3bf 8f6f 	isb	sy
 8009546:	f3bf 8f4f 	dsb	sy
 800954a:	e7fe      	b.n	800954a <xTaskIncrementTick+0x2e>
 800954c:	4a36      	ldr	r2, [pc, #216]	@ (8009628 <xTaskIncrementTick+0x10c>)
 800954e:	6819      	ldr	r1, [r3, #0]
 8009550:	6810      	ldr	r0, [r2, #0]
 8009552:	6018      	str	r0, [r3, #0]
 8009554:	6011      	str	r1, [r2, #0]
 8009556:	4a35      	ldr	r2, [pc, #212]	@ (800962c <xTaskIncrementTick+0x110>)
 8009558:	6813      	ldr	r3, [r2, #0]
 800955a:	3301      	adds	r3, #1
 800955c:	6013      	str	r3, [r2, #0]
 800955e:	f7ff fdc1 	bl	80090e4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009562:	4d33      	ldr	r5, [pc, #204]	@ (8009630 <xTaskIncrementTick+0x114>)
 8009564:	4e33      	ldr	r6, [pc, #204]	@ (8009634 <xTaskIncrementTick+0x118>)
 8009566:	682b      	ldr	r3, [r5, #0]
 8009568:	4f33      	ldr	r7, [pc, #204]	@ (8009638 <xTaskIncrementTick+0x11c>)
 800956a:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 800956c:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009570:	d212      	bcs.n	8009598 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009572:	683a      	ldr	r2, [r7, #0]
 8009574:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009576:	2114      	movs	r1, #20
 8009578:	434a      	muls	r2, r1
 800957a:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 800957c:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 800957e:	4a2f      	ldr	r2, [pc, #188]	@ (800963c <xTaskIncrementTick+0x120>)
 8009580:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8009582:	bf28      	it	cs
 8009584:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8009588:	2a00      	cmp	r2, #0
 800958a:	bf18      	it	ne
 800958c:	f04f 0b01 	movne.w	fp, #1
}
 8009590:	4658      	mov	r0, fp
 8009592:	b003      	add	sp, #12
 8009594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009598:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8009624 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800959c:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8009644 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80095a0:	f8d9 2000 	ldr.w	r2, [r9]
 80095a4:	6812      	ldr	r2, [r2, #0]
 80095a6:	b91a      	cbnz	r2, 80095b0 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80095a8:	f04f 32ff 	mov.w	r2, #4294967295
 80095ac:	602a      	str	r2, [r5, #0]
					break;
 80095ae:	e7e0      	b.n	8009572 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80095b0:	f8d9 2000 	ldr.w	r2, [r9]
 80095b4:	68d2      	ldr	r2, [r2, #12]
 80095b6:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80095ba:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 80095be:	428c      	cmp	r4, r1
 80095c0:	d201      	bcs.n	80095c6 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 80095c2:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80095c4:	e7d5      	b.n	8009572 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80095c6:	f108 0304 	add.w	r3, r8, #4
 80095ca:	4618      	mov	r0, r3
 80095cc:	9301      	str	r3, [sp, #4]
 80095ce:	f7fe fe2d 	bl	800822c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80095d2:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 80095d6:	b119      	cbz	r1, 80095e0 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80095d8:	f108 0018 	add.w	r0, r8, #24
 80095dc:	f7fe fe26 	bl	800822c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80095e0:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 80095e4:	f8da 1000 	ldr.w	r1, [sl]
 80095e8:	2314      	movs	r3, #20
 80095ea:	4288      	cmp	r0, r1
 80095ec:	bf88      	it	hi
 80095ee:	f8ca 0000 	strhi.w	r0, [sl]
 80095f2:	9901      	ldr	r1, [sp, #4]
 80095f4:	fb03 6000 	mla	r0, r3, r0, r6
 80095f8:	f7fe fdf6 	bl	80081e8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80095fc:	6838      	ldr	r0, [r7, #0]
 80095fe:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8009602:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8009604:	4291      	cmp	r1, r2
 8009606:	bf28      	it	cs
 8009608:	f04f 0b01 	movcs.w	fp, #1
 800960c:	e7c8      	b.n	80095a0 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800960e:	4a0c      	ldr	r2, [pc, #48]	@ (8009640 <xTaskIncrementTick+0x124>)
 8009610:	6813      	ldr	r3, [r2, #0]
 8009612:	3301      	adds	r3, #1
 8009614:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009616:	f04f 0b00 	mov.w	fp, #0
 800961a:	e7b9      	b.n	8009590 <xTaskIncrementTick+0x74>
 800961c:	20013a08 	.word	0x20013a08
 8009620:	20013a28 	.word	0x20013a28
 8009624:	20013a74 	.word	0x20013a74
 8009628:	20013a70 	.word	0x20013a70
 800962c:	20013a14 	.word	0x20013a14
 8009630:	20013a0c 	.word	0x20013a0c
 8009634:	20013aa0 	.word	0x20013aa0
 8009638:	20013f00 	.word	0x20013f00
 800963c:	20013a18 	.word	0x20013a18
 8009640:	20013a1c 	.word	0x20013a1c
 8009644:	20013a24 	.word	0x20013a24

08009648 <xTaskResumeAll>:
{
 8009648:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800964c:	4c30      	ldr	r4, [pc, #192]	@ (8009710 <xTaskResumeAll+0xc8>)
 800964e:	6823      	ldr	r3, [r4, #0]
 8009650:	b943      	cbnz	r3, 8009664 <xTaskResumeAll+0x1c>
 8009652:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009656:	f383 8811 	msr	BASEPRI, r3
 800965a:	f3bf 8f6f 	isb	sy
 800965e:	f3bf 8f4f 	dsb	sy
 8009662:	e7fe      	b.n	8009662 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8009664:	f7fe fe5e 	bl	8008324 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009668:	6823      	ldr	r3, [r4, #0]
 800966a:	3b01      	subs	r3, #1
 800966c:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800966e:	6824      	ldr	r4, [r4, #0]
 8009670:	b12c      	cbz	r4, 800967e <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8009672:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009674:	f7fe fe76 	bl	8008364 <vPortExitCritical>
}
 8009678:	4620      	mov	r0, r4
 800967a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800967e:	4b25      	ldr	r3, [pc, #148]	@ (8009714 <xTaskResumeAll+0xcc>)
 8009680:	681b      	ldr	r3, [r3, #0]
 8009682:	2b00      	cmp	r3, #0
 8009684:	d0f5      	beq.n	8009672 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009686:	4d24      	ldr	r5, [pc, #144]	@ (8009718 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009688:	4e24      	ldr	r6, [pc, #144]	@ (800971c <xTaskResumeAll+0xd4>)
 800968a:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800972c <xTaskResumeAll+0xe4>
 800968e:	e01d      	b.n	80096cc <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009690:	68eb      	ldr	r3, [r5, #12]
 8009692:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009694:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009696:	f104 0018 	add.w	r0, r4, #24
 800969a:	f7fe fdc7 	bl	800822c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800969e:	4638      	mov	r0, r7
 80096a0:	f7fe fdc4 	bl	800822c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80096a4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80096a6:	6832      	ldr	r2, [r6, #0]
 80096a8:	2014      	movs	r0, #20
 80096aa:	4293      	cmp	r3, r2
 80096ac:	fb00 8003 	mla	r0, r0, r3, r8
 80096b0:	4639      	mov	r1, r7
 80096b2:	bf88      	it	hi
 80096b4:	6033      	strhi	r3, [r6, #0]
 80096b6:	f7fe fd97 	bl	80081e8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80096ba:	4b19      	ldr	r3, [pc, #100]	@ (8009720 <xTaskResumeAll+0xd8>)
 80096bc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80096be:	681b      	ldr	r3, [r3, #0]
 80096c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80096c2:	429a      	cmp	r2, r3
 80096c4:	d302      	bcc.n	80096cc <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 80096c6:	4b17      	ldr	r3, [pc, #92]	@ (8009724 <xTaskResumeAll+0xdc>)
 80096c8:	2201      	movs	r2, #1
 80096ca:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80096cc:	682b      	ldr	r3, [r5, #0]
 80096ce:	2b00      	cmp	r3, #0
 80096d0:	d1de      	bne.n	8009690 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 80096d2:	b10c      	cbz	r4, 80096d8 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 80096d4:	f7ff fd06 	bl	80090e4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 80096d8:	4d13      	ldr	r5, [pc, #76]	@ (8009728 <xTaskResumeAll+0xe0>)
 80096da:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 80096dc:	b144      	cbz	r4, 80096f0 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 80096de:	4e11      	ldr	r6, [pc, #68]	@ (8009724 <xTaskResumeAll+0xdc>)
 80096e0:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 80096e2:	f7ff ff1b 	bl	800951c <xTaskIncrementTick>
 80096e6:	b100      	cbz	r0, 80096ea <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 80096e8:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80096ea:	3c01      	subs	r4, #1
 80096ec:	d1f9      	bne.n	80096e2 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 80096ee:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 80096f0:	4b0c      	ldr	r3, [pc, #48]	@ (8009724 <xTaskResumeAll+0xdc>)
 80096f2:	681b      	ldr	r3, [r3, #0]
 80096f4:	2b00      	cmp	r3, #0
 80096f6:	d0bc      	beq.n	8009672 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 80096f8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80096fc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009700:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009704:	f3bf 8f4f 	dsb	sy
 8009708:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800970c:	2401      	movs	r4, #1
 800970e:	e7b1      	b.n	8009674 <xTaskResumeAll+0x2c>
 8009710:	20013a08 	.word	0x20013a08
 8009714:	20013a2c 	.word	0x20013a2c
 8009718:	20013a5c 	.word	0x20013a5c
 800971c:	20013a24 	.word	0x20013a24
 8009720:	20013f00 	.word	0x20013f00
 8009724:	20013a18 	.word	0x20013a18
 8009728:	20013a1c 	.word	0x20013a1c
 800972c:	20013aa0 	.word	0x20013aa0

08009730 <vTaskDelay>:
	{
 8009730:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009732:	b950      	cbnz	r0, 800974a <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009734:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009738:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800973c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009740:	f3bf 8f4f 	dsb	sy
 8009744:	f3bf 8f6f 	isb	sy
	}
 8009748:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800974a:	4b0a      	ldr	r3, [pc, #40]	@ (8009774 <vTaskDelay+0x44>)
 800974c:	6819      	ldr	r1, [r3, #0]
 800974e:	b141      	cbz	r1, 8009762 <vTaskDelay+0x32>
 8009750:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009754:	f383 8811 	msr	BASEPRI, r3
 8009758:	f3bf 8f6f 	isb	sy
 800975c:	f3bf 8f4f 	dsb	sy
 8009760:	e7fe      	b.n	8009760 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009762:	f7ff fecd 	bl	8009500 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009766:	f7ff fc85 	bl	8009074 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800976a:	f7ff ff6d 	bl	8009648 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800976e:	2800      	cmp	r0, #0
 8009770:	d0e0      	beq.n	8009734 <vTaskDelay+0x4>
 8009772:	e7e9      	b.n	8009748 <vTaskDelay+0x18>
 8009774:	20013a08 	.word	0x20013a08

08009778 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009778:	4b19      	ldr	r3, [pc, #100]	@ (80097e0 <vTaskSwitchContext+0x68>)
 800977a:	681a      	ldr	r2, [r3, #0]
 800977c:	4b19      	ldr	r3, [pc, #100]	@ (80097e4 <vTaskSwitchContext+0x6c>)
{
 800977e:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009780:	b112      	cbz	r2, 8009788 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009782:	2201      	movs	r2, #1
 8009784:	601a      	str	r2, [r3, #0]
}
 8009786:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009788:	4d17      	ldr	r5, [pc, #92]	@ (80097e8 <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 800978a:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800978c:	682a      	ldr	r2, [r5, #0]
 800978e:	4917      	ldr	r1, [pc, #92]	@ (80097ec <vTaskSwitchContext+0x74>)
 8009790:	2614      	movs	r6, #20
 8009792:	fb06 f302 	mul.w	r3, r6, r2
 8009796:	18c8      	adds	r0, r1, r3
 8009798:	58cc      	ldr	r4, [r1, r3]
 800979a:	b1ac      	cbz	r4, 80097c8 <vTaskSwitchContext+0x50>
 800979c:	6844      	ldr	r4, [r0, #4]
 800979e:	3308      	adds	r3, #8
 80097a0:	6864      	ldr	r4, [r4, #4]
 80097a2:	6044      	str	r4, [r0, #4]
 80097a4:	440b      	add	r3, r1
 80097a6:	429c      	cmp	r4, r3
 80097a8:	bf04      	itt	eq
 80097aa:	6863      	ldreq	r3, [r4, #4]
 80097ac:	6043      	streq	r3, [r0, #4]
 80097ae:	2314      	movs	r3, #20
 80097b0:	fb03 1102 	mla	r1, r3, r2, r1
 80097b4:	684b      	ldr	r3, [r1, #4]
 80097b6:	68d9      	ldr	r1, [r3, #12]
 80097b8:	4b0d      	ldr	r3, [pc, #52]	@ (80097f0 <vTaskSwitchContext+0x78>)
 80097ba:	6019      	str	r1, [r3, #0]
 80097bc:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80097be:	681b      	ldr	r3, [r3, #0]
 80097c0:	4a0c      	ldr	r2, [pc, #48]	@ (80097f4 <vTaskSwitchContext+0x7c>)
 80097c2:	3358      	adds	r3, #88	@ 0x58
 80097c4:	6013      	str	r3, [r2, #0]
}
 80097c6:	e7de      	b.n	8009786 <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097c8:	b942      	cbnz	r2, 80097dc <vTaskSwitchContext+0x64>
 80097ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097ce:	f383 8811 	msr	BASEPRI, r3
 80097d2:	f3bf 8f6f 	isb	sy
 80097d6:	f3bf 8f4f 	dsb	sy
 80097da:	e7fe      	b.n	80097da <vTaskSwitchContext+0x62>
 80097dc:	3a01      	subs	r2, #1
 80097de:	e7d8      	b.n	8009792 <vTaskSwitchContext+0x1a>
 80097e0:	20013a08 	.word	0x20013a08
 80097e4:	20013a18 	.word	0x20013a18
 80097e8:	20013a24 	.word	0x20013a24
 80097ec:	20013aa0 	.word	0x20013aa0
 80097f0:	20013f00 	.word	0x20013f00
 80097f4:	20000220 	.word	0x20000220

080097f8 <vTaskPlaceOnEventList>:
{
 80097f8:	b510      	push	{r4, lr}
 80097fa:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80097fc:	b940      	cbnz	r0, 8009810 <vTaskPlaceOnEventList+0x18>
 80097fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009802:	f383 8811 	msr	BASEPRI, r3
 8009806:	f3bf 8f6f 	isb	sy
 800980a:	f3bf 8f4f 	dsb	sy
 800980e:	e7fe      	b.n	800980e <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009810:	4b05      	ldr	r3, [pc, #20]	@ (8009828 <vTaskPlaceOnEventList+0x30>)
 8009812:	6819      	ldr	r1, [r3, #0]
 8009814:	3118      	adds	r1, #24
 8009816:	f7fe fcf2 	bl	80081fe <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800981a:	4620      	mov	r0, r4
 800981c:	2101      	movs	r1, #1
}
 800981e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009822:	f7ff bc27 	b.w	8009074 <prvAddCurrentTaskToDelayedList>
 8009826:	bf00      	nop
 8009828:	20013f00 	.word	0x20013f00

0800982c <vTaskPlaceOnEventListRestricted>:
	{
 800982c:	b538      	push	{r3, r4, r5, lr}
 800982e:	460d      	mov	r5, r1
 8009830:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009832:	b940      	cbnz	r0, 8009846 <vTaskPlaceOnEventListRestricted+0x1a>
 8009834:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009838:	f383 8811 	msr	BASEPRI, r3
 800983c:	f3bf 8f6f 	isb	sy
 8009840:	f3bf 8f4f 	dsb	sy
 8009844:	e7fe      	b.n	8009844 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009846:	4b07      	ldr	r3, [pc, #28]	@ (8009864 <vTaskPlaceOnEventListRestricted+0x38>)
 8009848:	6819      	ldr	r1, [r3, #0]
 800984a:	3118      	adds	r1, #24
 800984c:	f7fe fccc 	bl	80081e8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009850:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009852:	4621      	mov	r1, r4
 8009854:	bf0c      	ite	eq
 8009856:	4628      	moveq	r0, r5
 8009858:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800985c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009860:	f7ff bc08 	b.w	8009074 <prvAddCurrentTaskToDelayedList>
 8009864:	20013f00 	.word	0x20013f00

08009868 <xTaskRemoveFromEventList>:
{
 8009868:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800986a:	68c3      	ldr	r3, [r0, #12]
 800986c:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800986e:	b944      	cbnz	r4, 8009882 <xTaskRemoveFromEventList+0x1a>
 8009870:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009874:	f383 8811 	msr	BASEPRI, r3
 8009878:	f3bf 8f6f 	isb	sy
 800987c:	f3bf 8f4f 	dsb	sy
 8009880:	e7fe      	b.n	8009880 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009882:	f104 0518 	add.w	r5, r4, #24
 8009886:	4628      	mov	r0, r5
 8009888:	f7fe fcd0 	bl	800822c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800988c:	4b10      	ldr	r3, [pc, #64]	@ (80098d0 <xTaskRemoveFromEventList+0x68>)
 800988e:	681b      	ldr	r3, [r3, #0]
 8009890:	b9db      	cbnz	r3, 80098ca <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009892:	1d25      	adds	r5, r4, #4
 8009894:	4628      	mov	r0, r5
 8009896:	f7fe fcc9 	bl	800822c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800989a:	4a0e      	ldr	r2, [pc, #56]	@ (80098d4 <xTaskRemoveFromEventList+0x6c>)
 800989c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800989e:	6811      	ldr	r1, [r2, #0]
 80098a0:	428b      	cmp	r3, r1
 80098a2:	bf88      	it	hi
 80098a4:	6013      	strhi	r3, [r2, #0]
 80098a6:	4a0c      	ldr	r2, [pc, #48]	@ (80098d8 <xTaskRemoveFromEventList+0x70>)
 80098a8:	2014      	movs	r0, #20
 80098aa:	4629      	mov	r1, r5
 80098ac:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80098b0:	f7fe fc9a 	bl	80081e8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80098b4:	4b09      	ldr	r3, [pc, #36]	@ (80098dc <xTaskRemoveFromEventList+0x74>)
 80098b6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80098b8:	681b      	ldr	r3, [r3, #0]
 80098ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80098bc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80098be:	bf83      	ittte	hi
 80098c0:	4b07      	ldrhi	r3, [pc, #28]	@ (80098e0 <xTaskRemoveFromEventList+0x78>)
 80098c2:	2001      	movhi	r0, #1
 80098c4:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 80098c6:	2000      	movls	r0, #0
}
 80098c8:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80098ca:	4806      	ldr	r0, [pc, #24]	@ (80098e4 <xTaskRemoveFromEventList+0x7c>)
 80098cc:	4629      	mov	r1, r5
 80098ce:	e7ef      	b.n	80098b0 <xTaskRemoveFromEventList+0x48>
 80098d0:	20013a08 	.word	0x20013a08
 80098d4:	20013a24 	.word	0x20013a24
 80098d8:	20013aa0 	.word	0x20013aa0
 80098dc:	20013f00 	.word	0x20013f00
 80098e0:	20013a18 	.word	0x20013a18
 80098e4:	20013a5c 	.word	0x20013a5c

080098e8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80098e8:	4b03      	ldr	r3, [pc, #12]	@ (80098f8 <vTaskInternalSetTimeOutState+0x10>)
 80098ea:	681b      	ldr	r3, [r3, #0]
 80098ec:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80098ee:	4b03      	ldr	r3, [pc, #12]	@ (80098fc <vTaskInternalSetTimeOutState+0x14>)
 80098f0:	681b      	ldr	r3, [r3, #0]
 80098f2:	6043      	str	r3, [r0, #4]
}
 80098f4:	4770      	bx	lr
 80098f6:	bf00      	nop
 80098f8:	20013a14 	.word	0x20013a14
 80098fc:	20013a28 	.word	0x20013a28

08009900 <xTaskCheckForTimeOut>:
{
 8009900:	b570      	push	{r4, r5, r6, lr}
 8009902:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009904:	4605      	mov	r5, r0
 8009906:	b940      	cbnz	r0, 800991a <xTaskCheckForTimeOut+0x1a>
 8009908:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800990c:	f383 8811 	msr	BASEPRI, r3
 8009910:	f3bf 8f6f 	isb	sy
 8009914:	f3bf 8f4f 	dsb	sy
 8009918:	e7fe      	b.n	8009918 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800991a:	b941      	cbnz	r1, 800992e <xTaskCheckForTimeOut+0x2e>
 800991c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009920:	f383 8811 	msr	BASEPRI, r3
 8009924:	f3bf 8f6f 	isb	sy
 8009928:	f3bf 8f4f 	dsb	sy
 800992c:	e7fe      	b.n	800992c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800992e:	f7fe fcf9 	bl	8008324 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009932:	4b0f      	ldr	r3, [pc, #60]	@ (8009970 <xTaskCheckForTimeOut+0x70>)
 8009934:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009936:	6823      	ldr	r3, [r4, #0]
 8009938:	1c5a      	adds	r2, r3, #1
 800993a:	d010      	beq.n	800995e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800993c:	480d      	ldr	r0, [pc, #52]	@ (8009974 <xTaskCheckForTimeOut+0x74>)
 800993e:	682e      	ldr	r6, [r5, #0]
 8009940:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009942:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009944:	4286      	cmp	r6, r0
 8009946:	d001      	beq.n	800994c <xTaskCheckForTimeOut+0x4c>
 8009948:	428a      	cmp	r2, r1
 800994a:	d90f      	bls.n	800996c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800994c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800994e:	4283      	cmp	r3, r0
 8009950:	d90a      	bls.n	8009968 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009952:	1a5b      	subs	r3, r3, r1
 8009954:	4413      	add	r3, r2
 8009956:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009958:	4628      	mov	r0, r5
 800995a:	f7ff ffc5 	bl	80098e8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800995e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009960:	f7fe fd00 	bl	8008364 <vPortExitCritical>
}
 8009964:	4620      	mov	r0, r4
 8009966:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009968:	2300      	movs	r3, #0
 800996a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800996c:	2401      	movs	r4, #1
 800996e:	e7f7      	b.n	8009960 <xTaskCheckForTimeOut+0x60>
 8009970:	20013a28 	.word	0x20013a28
 8009974:	20013a14 	.word	0x20013a14

08009978 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009978:	4b01      	ldr	r3, [pc, #4]	@ (8009980 <vTaskMissedYield+0x8>)
 800997a:	2201      	movs	r2, #1
 800997c:	601a      	str	r2, [r3, #0]
}
 800997e:	4770      	bx	lr
 8009980:	20013a18 	.word	0x20013a18

08009984 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009984:	4b05      	ldr	r3, [pc, #20]	@ (800999c <xTaskGetSchedulerState+0x18>)
 8009986:	681b      	ldr	r3, [r3, #0]
 8009988:	b133      	cbz	r3, 8009998 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800998a:	4b05      	ldr	r3, [pc, #20]	@ (80099a0 <xTaskGetSchedulerState+0x1c>)
 800998c:	6818      	ldr	r0, [r3, #0]
 800998e:	fab0 f080 	clz	r0, r0
 8009992:	0940      	lsrs	r0, r0, #5
 8009994:	0040      	lsls	r0, r0, #1
 8009996:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009998:	2001      	movs	r0, #1
	}
 800999a:	4770      	bx	lr
 800999c:	20013a20 	.word	0x20013a20
 80099a0:	20013a08 	.word	0x20013a08

080099a4 <xTaskPriorityInherit>:
	{
 80099a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 80099a6:	4604      	mov	r4, r0
 80099a8:	b338      	cbz	r0, 80099fa <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80099aa:	4d1a      	ldr	r5, [pc, #104]	@ (8009a14 <xTaskPriorityInherit+0x70>)
 80099ac:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80099ae:	682a      	ldr	r2, [r5, #0]
 80099b0:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80099b2:	4293      	cmp	r3, r2
 80099b4:	d226      	bcs.n	8009a04 <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80099b6:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80099b8:	4e17      	ldr	r6, [pc, #92]	@ (8009a18 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80099ba:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80099bc:	bfa1      	itttt	ge
 80099be:	682a      	ldrge	r2, [r5, #0]
 80099c0:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 80099c2:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 80099c6:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80099c8:	2214      	movs	r2, #20
 80099ca:	fb02 6303 	mla	r3, r2, r3, r6
 80099ce:	6942      	ldr	r2, [r0, #20]
 80099d0:	429a      	cmp	r2, r3
 80099d2:	d113      	bne.n	80099fc <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099d4:	1d07      	adds	r7, r0, #4
 80099d6:	4638      	mov	r0, r7
 80099d8:	f7fe fc28 	bl	800822c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099dc:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80099de:	4a0f      	ldr	r2, [pc, #60]	@ (8009a1c <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80099e2:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099e4:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80099e6:	2014      	movs	r0, #20
 80099e8:	428b      	cmp	r3, r1
 80099ea:	fb00 6003 	mla	r0, r0, r3, r6
 80099ee:	4639      	mov	r1, r7
 80099f0:	bf88      	it	hi
 80099f2:	6013      	strhi	r3, [r2, #0]
 80099f4:	f7fe fbf8 	bl	80081e8 <vListInsertEnd>
				xReturn = pdTRUE;
 80099f8:	2001      	movs	r0, #1
	}
 80099fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80099fc:	682b      	ldr	r3, [r5, #0]
 80099fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009a00:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8009a02:	e7f9      	b.n	80099f8 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009a04:	682b      	ldr	r3, [r5, #0]
 8009a06:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8009a08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009a0a:	4298      	cmp	r0, r3
 8009a0c:	bf2c      	ite	cs
 8009a0e:	2000      	movcs	r0, #0
 8009a10:	2001      	movcc	r0, #1
 8009a12:	e7f2      	b.n	80099fa <xTaskPriorityInherit+0x56>
 8009a14:	20013f00 	.word	0x20013f00
 8009a18:	20013aa0 	.word	0x20013aa0
 8009a1c:	20013a24 	.word	0x20013a24

08009a20 <xTaskPriorityDisinherit>:
	{
 8009a20:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009a22:	b908      	cbnz	r0, 8009a28 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8009a24:	2000      	movs	r0, #0
	}
 8009a26:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009a28:	4b1b      	ldr	r3, [pc, #108]	@ (8009a98 <xTaskPriorityDisinherit+0x78>)
 8009a2a:	681c      	ldr	r4, [r3, #0]
 8009a2c:	4284      	cmp	r4, r0
 8009a2e:	d008      	beq.n	8009a42 <xTaskPriorityDisinherit+0x22>
 8009a30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a34:	f383 8811 	msr	BASEPRI, r3
 8009a38:	f3bf 8f6f 	isb	sy
 8009a3c:	f3bf 8f4f 	dsb	sy
 8009a40:	e7fe      	b.n	8009a40 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8009a42:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8009a44:	b943      	cbnz	r3, 8009a58 <xTaskPriorityDisinherit+0x38>
 8009a46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a4a:	f383 8811 	msr	BASEPRI, r3
 8009a4e:	f3bf 8f6f 	isb	sy
 8009a52:	f3bf 8f4f 	dsb	sy
 8009a56:	e7fe      	b.n	8009a56 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009a58:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8009a5a:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009a5c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009a5e:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009a60:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009a62:	d0df      	beq.n	8009a24 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009a64:	2b00      	cmp	r3, #0
 8009a66:	d1dd      	bne.n	8009a24 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a68:	1d25      	adds	r5, r4, #4
 8009a6a:	4628      	mov	r0, r5
 8009a6c:	f7fe fbde 	bl	800822c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009a70:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009a72:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009a74:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009a78:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009a7a:	4a08      	ldr	r2, [pc, #32]	@ (8009a9c <xTaskPriorityDisinherit+0x7c>)
 8009a7c:	6811      	ldr	r1, [r2, #0]
 8009a7e:	428b      	cmp	r3, r1
 8009a80:	bf88      	it	hi
 8009a82:	6013      	strhi	r3, [r2, #0]
 8009a84:	4a06      	ldr	r2, [pc, #24]	@ (8009aa0 <xTaskPriorityDisinherit+0x80>)
 8009a86:	2014      	movs	r0, #20
 8009a88:	fb00 2003 	mla	r0, r0, r3, r2
 8009a8c:	4629      	mov	r1, r5
 8009a8e:	f7fe fbab 	bl	80081e8 <vListInsertEnd>
					xReturn = pdTRUE;
 8009a92:	2001      	movs	r0, #1
		return xReturn;
 8009a94:	e7c7      	b.n	8009a26 <xTaskPriorityDisinherit+0x6>
 8009a96:	bf00      	nop
 8009a98:	20013f00 	.word	0x20013f00
 8009a9c:	20013a24 	.word	0x20013a24
 8009aa0:	20013aa0 	.word	0x20013aa0

08009aa4 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009aa4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009aa6:	4604      	mov	r4, r0
 8009aa8:	2800      	cmp	r0, #0
 8009aaa:	d041      	beq.n	8009b30 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8009aac:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8009aae:	b942      	cbnz	r2, 8009ac2 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009ab0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ab4:	f383 8811 	msr	BASEPRI, r3
 8009ab8:	f3bf 8f6f 	isb	sy
 8009abc:	f3bf 8f4f 	dsb	sy
 8009ac0:	e7fe      	b.n	8009ac0 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009ac2:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8009ac4:	4299      	cmp	r1, r3
 8009ac6:	bf38      	it	cc
 8009ac8:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009aca:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009acc:	428b      	cmp	r3, r1
 8009ace:	d02f      	beq.n	8009b30 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009ad0:	2a01      	cmp	r2, #1
 8009ad2:	d12d      	bne.n	8009b30 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8009ad4:	4a17      	ldr	r2, [pc, #92]	@ (8009b34 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8009ad6:	6812      	ldr	r2, [r2, #0]
 8009ad8:	4282      	cmp	r2, r0
 8009ada:	d108      	bne.n	8009aee <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009adc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ae0:	f383 8811 	msr	BASEPRI, r3
 8009ae4:	f3bf 8f6f 	isb	sy
 8009ae8:	f3bf 8f4f 	dsb	sy
 8009aec:	e7fe      	b.n	8009aec <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009aee:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009af0:	4d11      	ldr	r5, [pc, #68]	@ (8009b38 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8009af2:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009af4:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009af6:	f04f 0214 	mov.w	r2, #20
 8009afa:	fb02 5303 	mla	r3, r2, r3, r5
 8009afe:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b00:	bfa4      	itt	ge
 8009b02:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 8009b06:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009b08:	429a      	cmp	r2, r3
 8009b0a:	d111      	bne.n	8009b30 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009b0c:	1d06      	adds	r6, r0, #4
 8009b0e:	4630      	mov	r0, r6
 8009b10:	f7fe fb8c 	bl	800822c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009b14:	4a09      	ldr	r2, [pc, #36]	@ (8009b3c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009b16:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009b18:	6811      	ldr	r1, [r2, #0]
 8009b1a:	2014      	movs	r0, #20
 8009b1c:	428b      	cmp	r3, r1
 8009b1e:	fb00 5003 	mla	r0, r0, r3, r5
 8009b22:	4631      	mov	r1, r6
	}
 8009b24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8009b28:	bf88      	it	hi
 8009b2a:	6013      	strhi	r3, [r2, #0]
 8009b2c:	f7fe bb5c 	b.w	80081e8 <vListInsertEnd>
	}
 8009b30:	bd70      	pop	{r4, r5, r6, pc}
 8009b32:	bf00      	nop
 8009b34:	20013f00 	.word	0x20013f00
 8009b38:	20013aa0 	.word	0x20013aa0
 8009b3c:	20013a24 	.word	0x20013a24

08009b40 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009b40:	4b04      	ldr	r3, [pc, #16]	@ (8009b54 <pvTaskIncrementMutexHeldCount+0x14>)
 8009b42:	681a      	ldr	r2, [r3, #0]
 8009b44:	b11a      	cbz	r2, 8009b4e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009b46:	6819      	ldr	r1, [r3, #0]
 8009b48:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8009b4a:	3201      	adds	r2, #1
 8009b4c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8009b4e:	6818      	ldr	r0, [r3, #0]
	}
 8009b50:	4770      	bx	lr
 8009b52:	bf00      	nop
 8009b54:	20013f00 	.word	0x20013f00

08009b58 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009b58:	4291      	cmp	r1, r2
{
 8009b5a:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009b5c:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009b5e:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009b60:	d80a      	bhi.n	8009b78 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b62:	1ad2      	subs	r2, r2, r3
 8009b64:	6983      	ldr	r3, [r0, #24]
 8009b66:	429a      	cmp	r2, r3
 8009b68:	d20d      	bcs.n	8009b86 <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009b6a:	4b08      	ldr	r3, [pc, #32]	@ (8009b8c <prvInsertTimerInActiveList+0x34>)
 8009b6c:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009b6e:	6818      	ldr	r0, [r3, #0]
 8009b70:	f7fe fb45 	bl	80081fe <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009b74:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8009b76:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009b78:	429a      	cmp	r2, r3
 8009b7a:	d201      	bcs.n	8009b80 <prvInsertTimerInActiveList+0x28>
 8009b7c:	4299      	cmp	r1, r3
 8009b7e:	d202      	bcs.n	8009b86 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009b80:	4b03      	ldr	r3, [pc, #12]	@ (8009b90 <prvInsertTimerInActiveList+0x38>)
 8009b82:	1d01      	adds	r1, r0, #4
 8009b84:	e7f3      	b.n	8009b6e <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009b86:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009b88:	e7f5      	b.n	8009b76 <prvInsertTimerInActiveList+0x1e>
 8009b8a:	bf00      	nop
 8009b8c:	20014000 	.word	0x20014000
 8009b90:	20014004 	.word	0x20014004

08009b94 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009b94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009b96:	4c11      	ldr	r4, [pc, #68]	@ (8009bdc <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009b98:	f7fe fbc4 	bl	8008324 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009b9c:	6825      	ldr	r5, [r4, #0]
 8009b9e:	b9bd      	cbnz	r5, 8009bd0 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009ba0:	4f0f      	ldr	r7, [pc, #60]	@ (8009be0 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009ba2:	4e10      	ldr	r6, [pc, #64]	@ (8009be4 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009ba4:	4638      	mov	r0, r7
 8009ba6:	f7fe fb11 	bl	80081cc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009baa:	4630      	mov	r0, r6
 8009bac:	f7fe fb0e 	bl	80081cc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009bb0:	4b0d      	ldr	r3, [pc, #52]	@ (8009be8 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009bb2:	4a0e      	ldr	r2, [pc, #56]	@ (8009bec <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009bb4:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009bb6:	4b0e      	ldr	r3, [pc, #56]	@ (8009bf0 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009bb8:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009bba:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009bbc:	200a      	movs	r0, #10
 8009bbe:	4b0d      	ldr	r3, [pc, #52]	@ (8009bf4 <prvCheckForValidListAndQueue+0x60>)
 8009bc0:	9500      	str	r5, [sp, #0]
 8009bc2:	f7fe fdb8 	bl	8008736 <xQueueGenericCreateStatic>
 8009bc6:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009bc8:	b110      	cbz	r0, 8009bd0 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009bca:	490b      	ldr	r1, [pc, #44]	@ (8009bf8 <prvCheckForValidListAndQueue+0x64>)
 8009bcc:	f7ff f970 	bl	8008eb0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009bd0:	b003      	add	sp, #12
 8009bd2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009bd6:	f7fe bbc5 	b.w	8008364 <vPortExitCritical>
 8009bda:	bf00      	nop
 8009bdc:	20013ffc 	.word	0x20013ffc
 8009be0:	2001401c 	.word	0x2001401c
 8009be4:	20014008 	.word	0x20014008
 8009be8:	20014004 	.word	0x20014004
 8009bec:	20013f54 	.word	0x20013f54
 8009bf0:	20014000 	.word	0x20014000
 8009bf4:	20013f04 	.word	0x20013f04
 8009bf8:	08025331 	.word	0x08025331

08009bfc <xTimerCreateTimerTask>:
{
 8009bfc:	b510      	push	{r4, lr}
 8009bfe:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009c00:	f7ff ffc8 	bl	8009b94 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009c04:	4b12      	ldr	r3, [pc, #72]	@ (8009c50 <xTimerCreateTimerTask+0x54>)
 8009c06:	681b      	ldr	r3, [r3, #0]
 8009c08:	b1b3      	cbz	r3, 8009c38 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009c0a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009c0c:	aa07      	add	r2, sp, #28
 8009c0e:	a906      	add	r1, sp, #24
 8009c10:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009c12:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009c16:	f7fe f9d1 	bl	8007fbc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009c1a:	9b05      	ldr	r3, [sp, #20]
 8009c1c:	9302      	str	r3, [sp, #8]
 8009c1e:	9b06      	ldr	r3, [sp, #24]
 8009c20:	9301      	str	r3, [sp, #4]
 8009c22:	2302      	movs	r3, #2
 8009c24:	9300      	str	r3, [sp, #0]
 8009c26:	9a07      	ldr	r2, [sp, #28]
 8009c28:	490a      	ldr	r1, [pc, #40]	@ (8009c54 <xTimerCreateTimerTask+0x58>)
 8009c2a:	480b      	ldr	r0, [pc, #44]	@ (8009c58 <xTimerCreateTimerTask+0x5c>)
 8009c2c:	4623      	mov	r3, r4
 8009c2e:	f7ff fb17 	bl	8009260 <xTaskCreateStatic>
 8009c32:	4b0a      	ldr	r3, [pc, #40]	@ (8009c5c <xTimerCreateTimerTask+0x60>)
 8009c34:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009c36:	b940      	cbnz	r0, 8009c4a <xTimerCreateTimerTask+0x4e>
 8009c38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c3c:	f383 8811 	msr	BASEPRI, r3
 8009c40:	f3bf 8f6f 	isb	sy
 8009c44:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009c48:	e7fe      	b.n	8009c48 <xTimerCreateTimerTask+0x4c>
}
 8009c4a:	2001      	movs	r0, #1
 8009c4c:	b008      	add	sp, #32
 8009c4e:	bd10      	pop	{r4, pc}
 8009c50:	20013ffc 	.word	0x20013ffc
 8009c54:	08025336 	.word	0x08025336
 8009c58:	08009d5d 	.word	0x08009d5d
 8009c5c:	20013ff8 	.word	0x20013ff8

08009c60 <xTimerGenericCommand>:
{
 8009c60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009c62:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009c64:	4604      	mov	r4, r0
{
 8009c66:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009c68:	b940      	cbnz	r0, 8009c7c <xTimerGenericCommand+0x1c>
 8009c6a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c6e:	f383 8811 	msr	BASEPRI, r3
 8009c72:	f3bf 8f6f 	isb	sy
 8009c76:	f3bf 8f4f 	dsb	sy
 8009c7a:	e7fe      	b.n	8009c7a <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009c7c:	4d0d      	ldr	r5, [pc, #52]	@ (8009cb4 <xTimerGenericCommand+0x54>)
 8009c7e:	6828      	ldr	r0, [r5, #0]
 8009c80:	b180      	cbz	r0, 8009ca4 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009c82:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009c84:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009c88:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009c8a:	dc0d      	bgt.n	8009ca8 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009c8c:	f7ff fe7a 	bl	8009984 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009c90:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009c92:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009c94:	bf08      	it	eq
 8009c96:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009c98:	6828      	ldr	r0, [r5, #0]
 8009c9a:	bf18      	it	ne
 8009c9c:	461a      	movne	r2, r3
 8009c9e:	4669      	mov	r1, sp
 8009ca0:	f7fe fdfe 	bl	80088a0 <xQueueGenericSend>
}
 8009ca4:	b004      	add	sp, #16
 8009ca6:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009ca8:	2300      	movs	r3, #0
 8009caa:	4669      	mov	r1, sp
 8009cac:	f7fe feaa 	bl	8008a04 <xQueueGenericSendFromISR>
 8009cb0:	e7f8      	b.n	8009ca4 <xTimerGenericCommand+0x44>
 8009cb2:	bf00      	nop
 8009cb4:	20013ffc 	.word	0x20013ffc

08009cb8 <prvSampleTimeNow>:
{
 8009cb8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009cbc:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8009d58 <prvSampleTimeNow+0xa0>
{
 8009cc0:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009cc2:	f7ff fc25 	bl	8009510 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009cc6:	f8d8 3000 	ldr.w	r3, [r8]
 8009cca:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009ccc:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009cce:	d909      	bls.n	8009ce4 <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009cd0:	4f1f      	ldr	r7, [pc, #124]	@ (8009d50 <prvSampleTimeNow+0x98>)
 8009cd2:	683b      	ldr	r3, [r7, #0]
 8009cd4:	681a      	ldr	r2, [r3, #0]
 8009cd6:	b96a      	cbnz	r2, 8009cf4 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8009cd8:	4a1e      	ldr	r2, [pc, #120]	@ (8009d54 <prvSampleTimeNow+0x9c>)
 8009cda:	6811      	ldr	r1, [r2, #0]
 8009cdc:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8009cde:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009ce0:	2301      	movs	r3, #1
 8009ce2:	e000      	b.n	8009ce6 <prvSampleTimeNow+0x2e>
 8009ce4:	2300      	movs	r3, #0
}
 8009ce6:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8009ce8:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8009cea:	f8c8 5000 	str.w	r5, [r8]
}
 8009cee:	b002      	add	sp, #8
 8009cf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009cf4:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009cf6:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009cf8:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009cfc:	f104 0a04 	add.w	sl, r4, #4
 8009d00:	4650      	mov	r0, sl
 8009d02:	f7fe fa93 	bl	800822c <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009d06:	6a23      	ldr	r3, [r4, #32]
 8009d08:	4620      	mov	r0, r4
 8009d0a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009d0c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009d10:	075b      	lsls	r3, r3, #29
 8009d12:	d5de      	bpl.n	8009cd2 <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009d14:	69a3      	ldr	r3, [r4, #24]
 8009d16:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8009d18:	4599      	cmp	r9, r3
 8009d1a:	d206      	bcs.n	8009d2a <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009d1c:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009d1e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009d20:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009d22:	4651      	mov	r1, sl
 8009d24:	f7fe fa6b 	bl	80081fe <vListInsert>
 8009d28:	e7d3      	b.n	8009cd2 <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009d2a:	2300      	movs	r3, #0
 8009d2c:	9300      	str	r3, [sp, #0]
 8009d2e:	464a      	mov	r2, r9
 8009d30:	4619      	mov	r1, r3
 8009d32:	4620      	mov	r0, r4
 8009d34:	f7ff ff94 	bl	8009c60 <xTimerGenericCommand>
				configASSERT( xResult );
 8009d38:	2800      	cmp	r0, #0
 8009d3a:	d1ca      	bne.n	8009cd2 <prvSampleTimeNow+0x1a>
 8009d3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d40:	f383 8811 	msr	BASEPRI, r3
 8009d44:	f3bf 8f6f 	isb	sy
 8009d48:	f3bf 8f4f 	dsb	sy
 8009d4c:	e7fe      	b.n	8009d4c <prvSampleTimeNow+0x94>
 8009d4e:	bf00      	nop
 8009d50:	20014004 	.word	0x20014004
 8009d54:	20014000 	.word	0x20014000
 8009d58:	20013ff4 	.word	0x20013ff4

08009d5c <prvTimerTask>:
{
 8009d5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009d60:	4d6e      	ldr	r5, [pc, #440]	@ (8009f1c <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009d62:	4e6f      	ldr	r6, [pc, #444]	@ (8009f20 <prvTimerTask+0x1c4>)
{
 8009d64:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009d66:	682b      	ldr	r3, [r5, #0]
 8009d68:	f8d3 8000 	ldr.w	r8, [r3]
 8009d6c:	f1b8 0f00 	cmp.w	r8, #0
 8009d70:	d035      	beq.n	8009dde <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009d72:	68db      	ldr	r3, [r3, #12]
 8009d74:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009d78:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009d7a:	f7ff fbc1 	bl	8009500 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009d7e:	a804      	add	r0, sp, #16
 8009d80:	f7ff ff9a 	bl	8009cb8 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009d84:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009d86:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009d88:	2b00      	cmp	r3, #0
 8009d8a:	d169      	bne.n	8009e60 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009d8c:	2c00      	cmp	r4, #0
 8009d8e:	d14c      	bne.n	8009e2a <prvTimerTask+0xce>
 8009d90:	4540      	cmp	r0, r8
 8009d92:	d350      	bcc.n	8009e36 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009d94:	f7ff fc58 	bl	8009648 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d98:	682b      	ldr	r3, [r5, #0]
 8009d9a:	68db      	ldr	r3, [r3, #12]
 8009d9c:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009d9e:	1d38      	adds	r0, r7, #4
 8009da0:	f7fe fa44 	bl	800822c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009da4:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009da8:	0758      	lsls	r0, r3, #29
 8009daa:	d51a      	bpl.n	8009de2 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009dac:	69b9      	ldr	r1, [r7, #24]
 8009dae:	4643      	mov	r3, r8
 8009db0:	464a      	mov	r2, r9
 8009db2:	4441      	add	r1, r8
 8009db4:	4638      	mov	r0, r7
 8009db6:	f7ff fecf 	bl	8009b58 <prvInsertTimerInActiveList>
 8009dba:	b1b0      	cbz	r0, 8009dea <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009dbc:	9400      	str	r4, [sp, #0]
 8009dbe:	4623      	mov	r3, r4
 8009dc0:	4642      	mov	r2, r8
 8009dc2:	4621      	mov	r1, r4
 8009dc4:	4638      	mov	r0, r7
 8009dc6:	f7ff ff4b 	bl	8009c60 <xTimerGenericCommand>
			configASSERT( xResult );
 8009dca:	b970      	cbnz	r0, 8009dea <prvTimerTask+0x8e>
 8009dcc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009dd0:	f383 8811 	msr	BASEPRI, r3
 8009dd4:	f3bf 8f6f 	isb	sy
 8009dd8:	f3bf 8f4f 	dsb	sy
 8009ddc:	e7fe      	b.n	8009ddc <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009dde:	2401      	movs	r4, #1
 8009de0:	e7cb      	b.n	8009d7a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009de2:	f023 0301 	bic.w	r3, r3, #1
 8009de6:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009dea:	6a3b      	ldr	r3, [r7, #32]
 8009dec:	4638      	mov	r0, r7
 8009dee:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009df0:	6830      	ldr	r0, [r6, #0]
 8009df2:	2200      	movs	r2, #0
 8009df4:	a904      	add	r1, sp, #16
 8009df6:	f7fe feb3 	bl	8008b60 <xQueueReceive>
 8009dfa:	2800      	cmp	r0, #0
 8009dfc:	d0b3      	beq.n	8009d66 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009dfe:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009e00:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009e02:	2b00      	cmp	r3, #0
 8009e04:	db2f      	blt.n	8009e66 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009e06:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009e08:	6963      	ldr	r3, [r4, #20]
 8009e0a:	2b00      	cmp	r3, #0
 8009e0c:	d132      	bne.n	8009e74 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009e0e:	a803      	add	r0, sp, #12
 8009e10:	f7ff ff52 	bl	8009cb8 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009e14:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009e16:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009e18:	2b09      	cmp	r3, #9
 8009e1a:	d8e9      	bhi.n	8009df0 <prvTimerTask+0x94>
 8009e1c:	e8df f003 	tbb	[pc, r3]
 8009e20:	572e2e2e 	.word	0x572e2e2e
 8009e24:	2e2e765e 	.word	0x2e2e765e
 8009e28:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009e2a:	4b3e      	ldr	r3, [pc, #248]	@ (8009f24 <prvTimerTask+0x1c8>)
 8009e2c:	681b      	ldr	r3, [r3, #0]
 8009e2e:	681c      	ldr	r4, [r3, #0]
 8009e30:	fab4 f484 	clz	r4, r4
 8009e34:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009e36:	6830      	ldr	r0, [r6, #0]
 8009e38:	4622      	mov	r2, r4
 8009e3a:	eba8 0109 	sub.w	r1, r8, r9
 8009e3e:	f7ff f876 	bl	8008f2e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009e42:	f7ff fc01 	bl	8009648 <xTaskResumeAll>
 8009e46:	2800      	cmp	r0, #0
 8009e48:	d1d2      	bne.n	8009df0 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009e4a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009e4e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009e52:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009e56:	f3bf 8f4f 	dsb	sy
 8009e5a:	f3bf 8f6f 	isb	sy
 8009e5e:	e7c7      	b.n	8009df0 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009e60:	f7ff fbf2 	bl	8009648 <xTaskResumeAll>
}
 8009e64:	e7c4      	b.n	8009df0 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009e66:	9b05      	ldr	r3, [sp, #20]
 8009e68:	9907      	ldr	r1, [sp, #28]
 8009e6a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009e6c:	9b04      	ldr	r3, [sp, #16]
 8009e6e:	2b00      	cmp	r3, #0
 8009e70:	dbbe      	blt.n	8009df0 <prvTimerTask+0x94>
 8009e72:	e7c8      	b.n	8009e06 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009e74:	1d20      	adds	r0, r4, #4
 8009e76:	f7fe f9d9 	bl	800822c <uxListRemove>
 8009e7a:	e7c8      	b.n	8009e0e <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009e7c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009e80:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009e82:	f043 0301 	orr.w	r3, r3, #1
 8009e86:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009e8a:	9b05      	ldr	r3, [sp, #20]
 8009e8c:	4620      	mov	r0, r4
 8009e8e:	4419      	add	r1, r3
 8009e90:	f7ff fe62 	bl	8009b58 <prvInsertTimerInActiveList>
 8009e94:	2800      	cmp	r0, #0
 8009e96:	d0ab      	beq.n	8009df0 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009e98:	6a23      	ldr	r3, [r4, #32]
 8009e9a:	4620      	mov	r0, r4
 8009e9c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009e9e:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009ea2:	0759      	lsls	r1, r3, #29
 8009ea4:	d5a4      	bpl.n	8009df0 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009ea6:	69a2      	ldr	r2, [r4, #24]
 8009ea8:	9905      	ldr	r1, [sp, #20]
 8009eaa:	2300      	movs	r3, #0
 8009eac:	440a      	add	r2, r1
 8009eae:	9300      	str	r3, [sp, #0]
 8009eb0:	4619      	mov	r1, r3
 8009eb2:	4620      	mov	r0, r4
 8009eb4:	f7ff fed4 	bl	8009c60 <xTimerGenericCommand>
							configASSERT( xResult );
 8009eb8:	2800      	cmp	r0, #0
 8009eba:	d199      	bne.n	8009df0 <prvTimerTask+0x94>
 8009ebc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ec0:	f383 8811 	msr	BASEPRI, r3
 8009ec4:	f3bf 8f6f 	isb	sy
 8009ec8:	f3bf 8f4f 	dsb	sy
 8009ecc:	e7fe      	b.n	8009ecc <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009ece:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009ed2:	f023 0301 	bic.w	r3, r3, #1
 8009ed6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8009eda:	e789      	b.n	8009df0 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009edc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009ee0:	f043 0301 	orr.w	r3, r3, #1
 8009ee4:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009ee8:	9905      	ldr	r1, [sp, #20]
 8009eea:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009eec:	b941      	cbnz	r1, 8009f00 <prvTimerTask+0x1a4>
 8009eee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ef2:	f383 8811 	msr	BASEPRI, r3
 8009ef6:	f3bf 8f6f 	isb	sy
 8009efa:	f3bf 8f4f 	dsb	sy
 8009efe:	e7fe      	b.n	8009efe <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8009f00:	4603      	mov	r3, r0
 8009f02:	4401      	add	r1, r0
 8009f04:	4620      	mov	r0, r4
 8009f06:	f7ff fe27 	bl	8009b58 <prvInsertTimerInActiveList>
					break;
 8009f0a:	e771      	b.n	8009df0 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009f0c:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8009f10:	079a      	lsls	r2, r3, #30
 8009f12:	d4de      	bmi.n	8009ed2 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009f14:	4620      	mov	r0, r4
 8009f16:	f7fe f91b 	bl	8008150 <vPortFree>
 8009f1a:	e769      	b.n	8009df0 <prvTimerTask+0x94>
 8009f1c:	20014004 	.word	0x20014004
 8009f20:	20013ffc 	.word	0x20013ffc
 8009f24:	20014000 	.word	0x20014000

08009f28 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 8009f28:	b178      	cbz	r0, 8009f4a <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 8009f2a:	2300      	movs	r3, #0
 8009f2c:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
 8009f30:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 8009f34:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8009f38:	b109      	cbz	r1, 8009f3e <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
 8009f3a:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8009f3e:	2301      	movs	r3, #1
 8009f40:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  pdev->id = id;
 8009f44:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 8009f46:	f7f7 bec7 	b.w	8001cd8 <USBD_LL_Init>

  return ret;
}
 8009f4a:	2003      	movs	r0, #3
 8009f4c:	4770      	bx	lr

08009f4e <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 8009f4e:	b513      	push	{r0, r1, r4, lr}
  uint16_t len = 0U;
 8009f50:	2300      	movs	r3, #0
{
 8009f52:	4604      	mov	r4, r0
  uint16_t len = 0U;
 8009f54:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 8009f58:	b181      	cbz	r1, 8009f7c <USBD_RegisterClass+0x2e>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009f5a:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
  pdev->pClass[0] = pclass;
 8009f5c:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009f60:	b123      	cbz	r3, 8009f6c <USBD_RegisterClass+0x1e>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 8009f62:	f10d 0006 	add.w	r0, sp, #6
 8009f66:	4798      	blx	r3
 8009f68:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
 8009f6c:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 8009f70:	3301      	adds	r3, #1
 8009f72:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
 8009f76:	2000      	movs	r0, #0
}
 8009f78:	b002      	add	sp, #8
 8009f7a:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8009f7c:	2003      	movs	r0, #3
 8009f7e:	e7fb      	b.n	8009f78 <USBD_RegisterClass+0x2a>

08009f80 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 8009f80:	f7f7 befb 	b.w	8001d7a <USBD_LL_Start>

08009f84 <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 8009f84:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009f88:	b10b      	cbz	r3, 8009f8e <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 8009f8a:	681b      	ldr	r3, [r3, #0]
 8009f8c:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 8009f8e:	4618      	mov	r0, r3
 8009f90:	4770      	bx	lr

08009f92 <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8009f92:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 8009f94:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009f98:	685b      	ldr	r3, [r3, #4]
 8009f9a:	4798      	blx	r3
  {
    ret = USBD_FAIL;
 8009f9c:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 8009f9e:	bf18      	it	ne
 8009fa0:	2003      	movne	r0, #3
 8009fa2:	bd08      	pop	{r3, pc}

08009fa4 <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 8009fa4:	b538      	push	{r3, r4, r5, lr}
 8009fa6:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 8009fa8:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 8009fac:	4628      	mov	r0, r5
 8009fae:	f000 fba0 	bl	800a6f2 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 8009fb2:	2301      	movs	r3, #1

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
 8009fb4:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
 8009fb8:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
  pdev->ep0_data_len = pdev->request.wLength;
 8009fbc:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0
 8009fc0:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
  switch (pdev->request.bmRequest & 0x1FU)
 8009fc4:	f001 031f 	and.w	r3, r1, #31
 8009fc8:	2b01      	cmp	r3, #1
 8009fca:	d008      	beq.n	8009fde <USBD_LL_SetupStage+0x3a>
 8009fcc:	2b02      	cmp	r3, #2
 8009fce:	d00c      	beq.n	8009fea <USBD_LL_SetupStage+0x46>
 8009fd0:	b98b      	cbnz	r3, 8009ff6 <USBD_LL_SetupStage+0x52>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 8009fd2:	4629      	mov	r1, r5
 8009fd4:	4620      	mov	r0, r4
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
      break;
  }

  return ret;
}
 8009fd6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
 8009fda:	f000 b953 	b.w	800a284 <USBD_StdDevReq>
      ret = USBD_StdItfReq(pdev, &pdev->request);
 8009fde:	4629      	mov	r1, r5
 8009fe0:	4620      	mov	r0, r4
}
 8009fe2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 8009fe6:	f000 bab1 	b.w	800a54c <USBD_StdItfReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 8009fea:	4629      	mov	r1, r5
 8009fec:	4620      	mov	r0, r4
}
 8009fee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
 8009ff2:	f000 bada 	b.w	800a5aa <USBD_StdEPReq>
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 8009ff6:	4620      	mov	r0, r4
 8009ff8:	f001 0180 	and.w	r1, r1, #128	@ 0x80
}
 8009ffc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800a000:	f7f7 bed9 	b.w	8001db6 <USBD_LL_StallEP>

0800a004 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 800a004:	b570      	push	{r4, r5, r6, lr}
 800a006:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  UNUSED(pdata);

  if (epnum == 0U)
 800a008:	bb39      	cbnz	r1, 800a05a <USBD_LL_DataOutStage+0x56>
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 800a00a:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 800a00e:	2b03      	cmp	r3, #3
 800a010:	d112      	bne.n	800a038 <USBD_LL_DataOutStage+0x34>
    {
      if (pep->rem_length > pep->maxpacket)
 800a012:	f8d0 3158 	ldr.w	r3, [r0, #344]	@ 0x158
 800a016:	f8b0 2160 	ldrh.w	r2, [r0, #352]	@ 0x160
 800a01a:	4293      	cmp	r3, r2
 800a01c:	d90e      	bls.n	800a03c <USBD_LL_DataOutStage+0x38>
      {
        pep->rem_length -= pep->maxpacket;
        pep->pbuffer += pep->maxpacket;
 800a01e:	f8d0 1164 	ldr.w	r1, [r0, #356]	@ 0x164
        pep->rem_length -= pep->maxpacket;
 800a022:	1a9b      	subs	r3, r3, r2
        pep->pbuffer += pep->maxpacket;
 800a024:	4411      	add	r1, r2

        (void)USBD_CtlContinueRx(pdev, pep->pbuffer, MAX(pep->rem_length, pep->maxpacket));
 800a026:	429a      	cmp	r2, r3
        pep->rem_length -= pep->maxpacket;
 800a028:	f8c0 3158 	str.w	r3, [r0, #344]	@ 0x158
        pep->pbuffer += pep->maxpacket;
 800a02c:	f8c0 1164 	str.w	r1, [r0, #356]	@ 0x164
        (void)USBD_CtlContinueRx(pdev, pep->pbuffer, MAX(pep->rem_length, pep->maxpacket));
 800a030:	bf38      	it	cc
 800a032:	461a      	movcc	r2, r3
 800a034:	f000 fca7 	bl	800a986 <USBD_CtlContinueRx>
      }
    }
  }

  return USBD_OK;
}
 800a038:	2000      	movs	r0, #0
 800a03a:	bd70      	pop	{r4, r5, r6, pc}
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a03c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a040:	2b03      	cmp	r3, #3
 800a042:	d106      	bne.n	800a052 <USBD_LL_DataOutStage+0x4e>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 800a044:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a048:	691b      	ldr	r3, [r3, #16]
 800a04a:	b113      	cbz	r3, 800a052 <USBD_LL_DataOutStage+0x4e>
              pdev->classId = idx;
 800a04c:	f8c0 12d4 	str.w	r1, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 800a050:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 800a052:	4620      	mov	r0, r4
 800a054:	f000 fc9f 	bl	800a996 <USBD_CtlSendStatus>
 800a058:	e7ee      	b.n	800a038 <USBD_LL_DataOutStage+0x34>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a05a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a05e:	2b03      	cmp	r3, #3
 800a060:	d1ea      	bne.n	800a038 <USBD_LL_DataOutStage+0x34>
        if (pdev->pClass[idx]->DataOut != NULL)
 800a062:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a066:	699b      	ldr	r3, [r3, #24]
 800a068:	2b00      	cmp	r3, #0
 800a06a:	d0e5      	beq.n	800a038 <USBD_LL_DataOutStage+0x34>
          pdev->classId = idx;
 800a06c:	2200      	movs	r2, #0
}
 800a06e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800a072:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 800a076:	4718      	bx	r3

0800a078 <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 800a078:	b570      	push	{r4, r5, r6, lr}
 800a07a:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;
  uint8_t idx;

  UNUSED(pdata);

  if (epnum == 0U)
 800a07c:	460d      	mov	r5, r1
 800a07e:	2900      	cmp	r1, #0
 800a080:	d13f      	bne.n	800a102 <USBD_LL_DataInStage+0x8a>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800a082:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 800a086:	2b02      	cmp	r3, #2
 800a088:	d110      	bne.n	800a0ac <USBD_LL_DataInStage+0x34>
    {
      if (pep->rem_length > pep->maxpacket)
 800a08a:	6982      	ldr	r2, [r0, #24]
 800a08c:	8c03      	ldrh	r3, [r0, #32]
 800a08e:	429a      	cmp	r2, r3
 800a090:	d914      	bls.n	800a0bc <USBD_LL_DataInStage+0x44>
      {
        pep->rem_length -= pep->maxpacket;
        pep->pbuffer += pep->maxpacket;
 800a092:	6a41      	ldr	r1, [r0, #36]	@ 0x24
        pep->rem_length -= pep->maxpacket;
 800a094:	1ad2      	subs	r2, r2, r3
        pep->pbuffer += pep->maxpacket;
 800a096:	4419      	add	r1, r3
        pep->rem_length -= pep->maxpacket;
 800a098:	6182      	str	r2, [r0, #24]
        pep->pbuffer += pep->maxpacket;
 800a09a:	6241      	str	r1, [r0, #36]	@ 0x24

        (void)USBD_CtlContinueSendData(pdev, pep->pbuffer, pep->rem_length);
 800a09c:	f000 fc6b 	bl	800a976 <USBD_CtlContinueSendData>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
          pdev->ep0_data_len = 0U;

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a0a0:	462b      	mov	r3, r5
 800a0a2:	462a      	mov	r2, r5
 800a0a4:	4629      	mov	r1, r5
 800a0a6:	4620      	mov	r0, r4
 800a0a8:	f7f7 fea9 	bl	8001dfe <USBD_LL_PrepareReceive>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
 800a0ac:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800a0b0:	b113      	cbz	r3, 800a0b8 <USBD_LL_DataInStage+0x40>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
 800a0b2:	2300      	movs	r3, #0
 800a0b4:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
 800a0b8:	2000      	movs	r0, #0
 800a0ba:	bd70      	pop	{r4, r5, r6, pc}
        if ((pep->maxpacket == pep->rem_length) &&
 800a0bc:	d10c      	bne.n	800a0d8 <USBD_LL_DataInStage+0x60>
            (pep->total_length >= pep->maxpacket) &&
 800a0be:	6943      	ldr	r3, [r0, #20]
        if ((pep->maxpacket == pep->rem_length) &&
 800a0c0:	429a      	cmp	r2, r3
 800a0c2:	d809      	bhi.n	800a0d8 <USBD_LL_DataInStage+0x60>
            (pep->total_length >= pep->maxpacket) &&
 800a0c4:	f8d0 2298 	ldr.w	r2, [r0, #664]	@ 0x298
 800a0c8:	4293      	cmp	r3, r2
 800a0ca:	d205      	bcs.n	800a0d8 <USBD_LL_DataInStage+0x60>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 800a0cc:	460a      	mov	r2, r1
 800a0ce:	f000 fc52 	bl	800a976 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800a0d2:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 800a0d6:	e7e3      	b.n	800a0a0 <USBD_LL_DataInStage+0x28>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a0d8:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800a0dc:	2b03      	cmp	r3, #3
 800a0de:	d108      	bne.n	800a0f2 <USBD_LL_DataInStage+0x7a>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 800a0e0:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800a0e4:	68db      	ldr	r3, [r3, #12]
 800a0e6:	b123      	cbz	r3, 800a0f2 <USBD_LL_DataInStage+0x7a>
              pdev->classId = 0U;
 800a0e8:	2200      	movs	r2, #0
 800a0ea:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 800a0ee:	4620      	mov	r0, r4
 800a0f0:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 800a0f2:	2180      	movs	r1, #128	@ 0x80
 800a0f4:	4620      	mov	r0, r4
 800a0f6:	f7f7 fe5e 	bl	8001db6 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 800a0fa:	4620      	mov	r0, r4
 800a0fc:	f000 fc56 	bl	800a9ac <USBD_CtlReceiveStatus>
 800a100:	e7d4      	b.n	800a0ac <USBD_LL_DataInStage+0x34>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a102:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a106:	2b03      	cmp	r3, #3
 800a108:	d1d6      	bne.n	800a0b8 <USBD_LL_DataInStage+0x40>
        if (pdev->pClass[idx]->DataIn != NULL)
 800a10a:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a10e:	695b      	ldr	r3, [r3, #20]
 800a110:	2b00      	cmp	r3, #0
 800a112:	d0d1      	beq.n	800a0b8 <USBD_LL_DataInStage+0x40>
          pdev->classId = idx;
 800a114:	2200      	movs	r2, #0
}
 800a116:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800a11a:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 800a11e:	4718      	bx	r3

0800a120 <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800a120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a122:	2301      	movs	r3, #1
 800a124:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 800a128:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
 800a12c:	2100      	movs	r1, #0
{
 800a12e:	4604      	mov	r4, r0
  pdev->ep0_state = USBD_EP0_IDLE;
 800a130:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_config = 0U;
 800a134:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 800a136:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
 800a13a:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
 800a13e:	b9bb      	cbnz	r3, 800a170 <USBD_LL_Reset+0x50>
  USBD_StatusTypeDef ret = USBD_OK;
 800a140:	2600      	movs	r6, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a142:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800a144:	2540      	movs	r5, #64	@ 0x40
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a146:	4611      	mov	r1, r2
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800a148:	2701      	movs	r7, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a14a:	2340      	movs	r3, #64	@ 0x40
 800a14c:	4620      	mov	r0, r4
 800a14e:	f7f7 fe1d 	bl	8001d8c <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800a152:	f884 7163 	strb.w	r7, [r4, #355]	@ 0x163
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800a156:	f8a4 5160 	strh.w	r5, [r4, #352]	@ 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800a15a:	462b      	mov	r3, r5
 800a15c:	2200      	movs	r2, #0
 800a15e:	2180      	movs	r1, #128	@ 0x80
 800a160:	4620      	mov	r0, r4
 800a162:	f7f7 fe13 	bl	8001d8c <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 800a166:	f884 7023 	strb.w	r7, [r4, #35]	@ 0x23

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 800a16a:	8425      	strh	r5, [r4, #32]

  return ret;
}
 800a16c:	4630      	mov	r0, r6
 800a16e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pdev->pClass[0]->DeInit != NULL)
 800a170:	685b      	ldr	r3, [r3, #4]
 800a172:	2b00      	cmp	r3, #0
 800a174:	d0e4      	beq.n	800a140 <USBD_LL_Reset+0x20>
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 800a176:	4798      	blx	r3
 800a178:	2800      	cmp	r0, #0
 800a17a:	d0e1      	beq.n	800a140 <USBD_LL_Reset+0x20>
        ret = USBD_FAIL;
 800a17c:	2603      	movs	r6, #3
 800a17e:	e7e0      	b.n	800a142 <USBD_LL_Reset+0x22>

0800a180 <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 800a180:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 800a182:	2000      	movs	r0, #0
 800a184:	4770      	bx	lr

0800a186 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
 800a186:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a18a:	2b04      	cmp	r3, #4
  {
    pdev->dev_old_state = pdev->dev_state;
 800a18c:	bf1e      	ittt	ne
 800a18e:	f890 329c 	ldrbne.w	r3, [r0, #668]	@ 0x29c
 800a192:	b2db      	uxtbne	r3, r3
 800a194:	f880 329d 	strbne.w	r3, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
 800a198:	2304      	movs	r3, #4
 800a19a:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  return USBD_OK;
}
 800a19e:	2000      	movs	r0, #0
 800a1a0:	4770      	bx	lr

0800a1a2 <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800a1a2:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a1a6:	2b04      	cmp	r3, #4
  {
    pdev->dev_state = pdev->dev_old_state;
 800a1a8:	bf02      	ittt	eq
 800a1aa:	f890 329d 	ldrbeq.w	r3, [r0, #669]	@ 0x29d
 800a1ae:	b2db      	uxtbeq	r3, r3
 800a1b0:	f880 329c 	strbeq.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
 800a1b4:	2000      	movs	r0, #0
 800a1b6:	4770      	bx	lr

0800a1b8 <USBD_LL_SOF>:
  *         Handle SOF event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 800a1b8:	b508      	push	{r3, lr}
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a1ba:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800a1be:	2a03      	cmp	r2, #3
 800a1c0:	d105      	bne.n	800a1ce <USBD_LL_SOF+0x16>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 800a1c2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a1c6:	b113      	cbz	r3, 800a1ce <USBD_LL_SOF+0x16>
    {
      if (pdev->pClass[0]->SOF != NULL)
 800a1c8:	69db      	ldr	r3, [r3, #28]
 800a1ca:	b103      	cbz	r3, 800a1ce <USBD_LL_SOF+0x16>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 800a1cc:	4798      	blx	r3
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
 800a1ce:	2000      	movs	r0, #0
 800a1d0:	bd08      	pop	{r3, pc}

0800a1d2 <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800a1d2:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800a1d6:	32ae      	adds	r2, #174	@ 0xae
{
 800a1d8:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800a1da:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800a1de:	b14a      	cbz	r2, 800a1f4 <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a1e0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a1e4:	2b03      	cmp	r3, #3
 800a1e6:	d101      	bne.n	800a1ec <USBD_LL_IsoINIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 800a1e8:	6a13      	ldr	r3, [r2, #32]
 800a1ea:	b90b      	cbnz	r3, 800a1f0 <USBD_LL_IsoINIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800a1ec:	2000      	movs	r0, #0
}
 800a1ee:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 800a1f0:	4798      	blx	r3
 800a1f2:	e7fb      	b.n	800a1ec <USBD_LL_IsoINIncomplete+0x1a>
    return USBD_FAIL;
 800a1f4:	2003      	movs	r0, #3
 800a1f6:	e7fa      	b.n	800a1ee <USBD_LL_IsoINIncomplete+0x1c>

0800a1f8 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800a1f8:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800a1fc:	32ae      	adds	r2, #174	@ 0xae
{
 800a1fe:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800a200:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800a204:	b14a      	cbz	r2, 800a21a <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a206:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a20a:	2b03      	cmp	r3, #3
 800a20c:	d101      	bne.n	800a212 <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 800a20e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 800a210:	b90b      	cbnz	r3, 800a216 <USBD_LL_IsoOUTIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800a212:	2000      	movs	r0, #0
}
 800a214:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 800a216:	4798      	blx	r3
 800a218:	e7fb      	b.n	800a212 <USBD_LL_IsoOUTIncomplete+0x1a>
    return USBD_FAIL;
 800a21a:	2003      	movs	r0, #3
 800a21c:	e7fa      	b.n	800a214 <USBD_LL_IsoOUTIncomplete+0x1c>

0800a21e <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
 800a21e:	2000      	movs	r0, #0
 800a220:	4770      	bx	lr

0800a222 <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a222:	2201      	movs	r2, #1
{
 800a224:	b508      	push	{r3, lr}
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a226:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800a22a:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 800a22e:	b90a      	cbnz	r2, 800a234 <USBD_LL_DevDisconnected+0x12>
  USBD_StatusTypeDef   ret = USBD_OK;
 800a230:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800a232:	bd08      	pop	{r3, pc}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 800a234:	6852      	ldr	r2, [r2, #4]
 800a236:	7901      	ldrb	r1, [r0, #4]
 800a238:	4790      	blx	r2
 800a23a:	2800      	cmp	r0, #0
 800a23c:	d0f8      	beq.n	800a230 <USBD_LL_DevDisconnected+0xe>
      ret = USBD_FAIL;
 800a23e:	2003      	movs	r0, #3
 800a240:	e7f7      	b.n	800a232 <USBD_LL_DevDisconnected+0x10>

0800a242 <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
 800a242:	2000      	movs	r0, #0
 800a244:	4770      	bx	lr

0800a246 <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
 800a246:	2000      	movs	r0, #0
 800a248:	4770      	bx	lr

0800a24a <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 800a24a:	b510      	push	{r4, lr}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 800a24c:	8842      	ldrh	r2, [r0, #2]
 800a24e:	7803      	ldrb	r3, [r0, #0]
 800a250:	429a      	cmp	r2, r3
 800a252:	d801      	bhi.n	800a258 <USBD_GetEpDesc+0xe>
  USBD_EpDescTypeDef *pEpDesc = NULL;
 800a254:	2000      	movs	r0, #0
      }
    }
  }

  return (void *)pEpDesc;
}
 800a256:	bd10      	pop	{r4, pc}
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
 800a258:	7804      	ldrb	r4, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 800a25a:	4420      	add	r0, r4
  *ptr += pnext->bLength;
 800a25c:	4423      	add	r3, r4
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800a25e:	7844      	ldrb	r4, [r0, #1]
 800a260:	2c05      	cmp	r4, #5
  *ptr += pnext->bLength;
 800a262:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800a264:	d1f4      	bne.n	800a250 <USBD_GetEpDesc+0x6>
        if (pEpDesc->bEndpointAddress == EpAddr)
 800a266:	7884      	ldrb	r4, [r0, #2]
 800a268:	428c      	cmp	r4, r1
 800a26a:	d1f1      	bne.n	800a250 <USBD_GetEpDesc+0x6>
 800a26c:	e7f3      	b.n	800a256 <USBD_GetEpDesc+0xc>

0800a26e <USBD_CtlError.constprop.0>:
  *         Handle USB low level Error
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800a26e:	b510      	push	{r4, lr}
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a270:	2180      	movs	r1, #128	@ 0x80
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800a272:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a274:	f7f7 fd9f 	bl	8001db6 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800a278:	4620      	mov	r0, r4
 800a27a:	2100      	movs	r1, #0
}
 800a27c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800a280:	f7f7 bd99 	b.w	8001db6 <USBD_LL_StallEP>

0800a284 <USBD_StdDevReq>:
{
 800a284:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a286:	780b      	ldrb	r3, [r1, #0]
 800a288:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a28c:	2b20      	cmp	r3, #32
{
 800a28e:	4604      	mov	r4, r0
 800a290:	460d      	mov	r5, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a292:	d009      	beq.n	800a2a8 <USBD_StdDevReq+0x24>
 800a294:	2b40      	cmp	r3, #64	@ 0x40
 800a296:	d007      	beq.n	800a2a8 <USBD_StdDevReq+0x24>
 800a298:	b193      	cbz	r3, 800a2c0 <USBD_StdDevReq+0x3c>
      USBD_CtlError(pdev, req);
 800a29a:	4620      	mov	r0, r4
 800a29c:	f7ff ffe7 	bl	800a26e <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800a2a0:	2500      	movs	r5, #0
}
 800a2a2:	4628      	mov	r0, r5
 800a2a4:	b002      	add	sp, #8
 800a2a6:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800a2a8:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800a2ac:	33ae      	adds	r3, #174	@ 0xae
 800a2ae:	4629      	mov	r1, r5
 800a2b0:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 800a2b4:	689b      	ldr	r3, [r3, #8]
 800a2b6:	4620      	mov	r0, r4
}
 800a2b8:	b002      	add	sp, #8
 800a2ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800a2be:	4718      	bx	r3
      switch (req->bRequest)
 800a2c0:	784b      	ldrb	r3, [r1, #1]
 800a2c2:	2b09      	cmp	r3, #9
 800a2c4:	d8e9      	bhi.n	800a29a <USBD_StdDevReq+0x16>
 800a2c6:	a201      	add	r2, pc, #4	@ (adr r2, 800a2cc <USBD_StdDevReq+0x48>)
 800a2c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a2cc:	0800a4ed 	.word	0x0800a4ed
 800a2d0:	0800a531 	.word	0x0800a531
 800a2d4:	0800a29b 	.word	0x0800a29b
 800a2d8:	0800a515 	.word	0x0800a515
 800a2dc:	0800a29b 	.word	0x0800a29b
 800a2e0:	0800a3e7 	.word	0x0800a3e7
 800a2e4:	0800a2f5 	.word	0x0800a2f5
 800a2e8:	0800a29b 	.word	0x0800a29b
 800a2ec:	0800a4c1 	.word	0x0800a4c1
 800a2f0:	0800a429 	.word	0x0800a429
  uint16_t len = 0U;
 800a2f4:	2300      	movs	r3, #0
 800a2f6:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 800a2fa:	884b      	ldrh	r3, [r1, #2]
 800a2fc:	0a1a      	lsrs	r2, r3, #8
 800a2fe:	3a01      	subs	r2, #1
 800a300:	2a06      	cmp	r2, #6
 800a302:	d8ca      	bhi.n	800a29a <USBD_StdDevReq+0x16>
 800a304:	a101      	add	r1, pc, #4	@ (adr r1, 800a30c <USBD_StdDevReq+0x88>)
 800a306:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800a30a:	bf00      	nop
 800a30c:	0800a329 	.word	0x0800a329
 800a310:	0800a35b 	.word	0x0800a35b
 800a314:	0800a375 	.word	0x0800a375
 800a318:	0800a29b 	.word	0x0800a29b
 800a31c:	0800a29b 	.word	0x0800a29b
 800a320:	0800a3b9 	.word	0x0800a3b9
 800a324:	0800a3cf 	.word	0x0800a3cf
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 800a328:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a32c:	681b      	ldr	r3, [r3, #0]
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800a32e:	7c20      	ldrb	r0, [r4, #16]
 800a330:	f10d 0106 	add.w	r1, sp, #6
 800a334:	4798      	blx	r3
  if (req->wLength != 0U)
 800a336:	88ea      	ldrh	r2, [r5, #6]
 800a338:	2a00      	cmp	r2, #0
 800a33a:	f000 80a4 	beq.w	800a486 <USBD_StdDevReq+0x202>
    if (len != 0U)
 800a33e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a342:	2b00      	cmp	r3, #0
 800a344:	d0a9      	beq.n	800a29a <USBD_StdDevReq+0x16>
      len = MIN(len, req->wLength);
 800a346:	429a      	cmp	r2, r3
 800a348:	bf28      	it	cs
 800a34a:	461a      	movcs	r2, r3
 800a34c:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800a350:	4601      	mov	r1, r0
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800a352:	4620      	mov	r0, r4
 800a354:	f000 fb01 	bl	800a95a <USBD_CtlSendData>
      break;
 800a358:	e7a2      	b.n	800a2a0 <USBD_StdDevReq+0x1c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a35a:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800a35c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a360:	b932      	cbnz	r2, 800a370 <USBD_StdDevReq+0xec>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800a362:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800a364:	f10d 0006 	add.w	r0, sp, #6
 800a368:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800a36a:	2302      	movs	r3, #2
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800a36c:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 800a36e:	e7e2      	b.n	800a336 <USBD_StdDevReq+0xb2>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800a370:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a372:	e7f7      	b.n	800a364 <USBD_StdDevReq+0xe0>
      switch ((uint8_t)(req->wValue))
 800a374:	b2db      	uxtb	r3, r3
 800a376:	2b05      	cmp	r3, #5
 800a378:	d88f      	bhi.n	800a29a <USBD_StdDevReq+0x16>
 800a37a:	e8df f003 	tbb	[pc, r3]
 800a37e:	0903      	.short	0x0903
 800a380:	1915110d 	.word	0x1915110d
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 800a384:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a388:	685b      	ldr	r3, [r3, #4]
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800a38a:	2b00      	cmp	r3, #0
 800a38c:	d1cf      	bne.n	800a32e <USBD_StdDevReq+0xaa>
 800a38e:	e784      	b.n	800a29a <USBD_StdDevReq+0x16>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 800a390:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a394:	689b      	ldr	r3, [r3, #8]
 800a396:	e7f8      	b.n	800a38a <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 800a398:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a39c:	68db      	ldr	r3, [r3, #12]
 800a39e:	e7f4      	b.n	800a38a <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800a3a0:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a3a4:	691b      	ldr	r3, [r3, #16]
 800a3a6:	e7f0      	b.n	800a38a <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 800a3a8:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a3ac:	695b      	ldr	r3, [r3, #20]
 800a3ae:	e7ec      	b.n	800a38a <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800a3b0:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800a3b4:	699b      	ldr	r3, [r3, #24]
 800a3b6:	e7e8      	b.n	800a38a <USBD_StdDevReq+0x106>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a3b8:	7c03      	ldrb	r3, [r0, #16]
 800a3ba:	2b00      	cmp	r3, #0
 800a3bc:	f47f af6d 	bne.w	800a29a <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 800a3c0:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a3c4:	f10d 0006 	add.w	r0, sp, #6
 800a3c8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a3ca:	4798      	blx	r3
  if (err != 0U)
 800a3cc:	e7b3      	b.n	800a336 <USBD_StdDevReq+0xb2>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a3ce:	7c03      	ldrb	r3, [r0, #16]
 800a3d0:	2b00      	cmp	r3, #0
 800a3d2:	f47f af62 	bne.w	800a29a <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 800a3d6:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a3da:	f10d 0006 	add.w	r0, sp, #6
 800a3de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a3e0:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800a3e2:	2307      	movs	r3, #7
 800a3e4:	e7c2      	b.n	800a36c <USBD_StdDevReq+0xe8>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 800a3e6:	888b      	ldrh	r3, [r1, #4]
 800a3e8:	2b00      	cmp	r3, #0
 800a3ea:	f47f af56 	bne.w	800a29a <USBD_StdDevReq+0x16>
 800a3ee:	88cb      	ldrh	r3, [r1, #6]
 800a3f0:	2b00      	cmp	r3, #0
 800a3f2:	f47f af52 	bne.w	800a29a <USBD_StdDevReq+0x16>
 800a3f6:	884d      	ldrh	r5, [r1, #2]
 800a3f8:	2d7f      	cmp	r5, #127	@ 0x7f
 800a3fa:	f63f af4e 	bhi.w	800a29a <USBD_StdDevReq+0x16>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a3fe:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a402:	2b03      	cmp	r3, #3
 800a404:	f43f af49 	beq.w	800a29a <USBD_StdDevReq+0x16>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 800a408:	b2ed      	uxtb	r5, r5
      pdev->dev_address = dev_addr;
 800a40a:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 800a40e:	4629      	mov	r1, r5
 800a410:	f7f7 fce3 	bl	8001dda <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 800a414:	4620      	mov	r0, r4
 800a416:	f000 fabe 	bl	800a996 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 800a41a:	b11d      	cbz	r5, 800a424 <USBD_StdDevReq+0x1a0>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800a41c:	2302      	movs	r3, #2
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800a41e:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800a422:	e73d      	b.n	800a2a0 <USBD_StdDevReq+0x1c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 800a424:	2301      	movs	r3, #1
 800a426:	e7fa      	b.n	800a41e <USBD_StdDevReq+0x19a>
  cfgidx = (uint8_t)(req->wValue);
 800a428:	7889      	ldrb	r1, [r1, #2]
 800a42a:	4d47      	ldr	r5, [pc, #284]	@ (800a548 <USBD_StdDevReq+0x2c4>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800a42c:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
 800a42e:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800a430:	d903      	bls.n	800a43a <USBD_StdDevReq+0x1b6>
    USBD_CtlError(pdev, req);
 800a432:	f7ff ff1c 	bl	800a26e <USBD_CtlError.constprop.0>
    return USBD_FAIL;
 800a436:	2503      	movs	r5, #3
 800a438:	e733      	b.n	800a2a2 <USBD_StdDevReq+0x1e>
  switch (pdev->dev_state)
 800a43a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a43e:	2b02      	cmp	r3, #2
 800a440:	b2de      	uxtb	r6, r3
 800a442:	d008      	beq.n	800a456 <USBD_StdDevReq+0x1d2>
 800a444:	2e03      	cmp	r6, #3
 800a446:	d017      	beq.n	800a478 <USBD_StdDevReq+0x1f4>
      USBD_CtlError(pdev, req);
 800a448:	f7ff ff11 	bl	800a26e <USBD_CtlError.constprop.0>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 800a44c:	7829      	ldrb	r1, [r5, #0]
 800a44e:	4620      	mov	r0, r4
 800a450:	f7ff fd9f 	bl	8009f92 <USBD_ClrClassConfig>
      break;
 800a454:	e7ef      	b.n	800a436 <USBD_StdDevReq+0x1b2>
      if (cfgidx != 0U)
 800a456:	b1b1      	cbz	r1, 800a486 <USBD_StdDevReq+0x202>
        pdev->dev_config = cfgidx;
 800a458:	2101      	movs	r1, #1
 800a45a:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800a45c:	f7ff fd92 	bl	8009f84 <USBD_SetClassConfig>
        if (ret != USBD_OK)
 800a460:	4605      	mov	r5, r0
          USBD_CtlError(pdev, req);
 800a462:	4620      	mov	r0, r4
        if (ret != USBD_OK)
 800a464:	b125      	cbz	r5, 800a470 <USBD_StdDevReq+0x1ec>
          USBD_CtlError(pdev, req);
 800a466:	f7ff ff02 	bl	800a26e <USBD_CtlError.constprop.0>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800a46a:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 800a46e:	e718      	b.n	800a2a2 <USBD_StdDevReq+0x1e>
          (void)USBD_CtlSendStatus(pdev);
 800a470:	f000 fa91 	bl	800a996 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800a474:	2303      	movs	r3, #3
 800a476:	e7d2      	b.n	800a41e <USBD_StdDevReq+0x19a>
      if (cfgidx == 0U)
 800a478:	b949      	cbnz	r1, 800a48e <USBD_StdDevReq+0x20a>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800a47a:	2302      	movs	r3, #2
 800a47c:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        pdev->dev_config = cfgidx;
 800a480:	6041      	str	r1, [r0, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 800a482:	f7ff fd86 	bl	8009f92 <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 800a486:	4620      	mov	r0, r4
 800a488:	f000 fa85 	bl	800a996 <USBD_CtlSendStatus>
 800a48c:	e708      	b.n	800a2a0 <USBD_StdDevReq+0x1c>
      else if (cfgidx != pdev->dev_config)
 800a48e:	6841      	ldr	r1, [r0, #4]
 800a490:	2901      	cmp	r1, #1
 800a492:	d0f8      	beq.n	800a486 <USBD_StdDevReq+0x202>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800a494:	b2c9      	uxtb	r1, r1
 800a496:	f7ff fd7c 	bl	8009f92 <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 800a49a:	7829      	ldrb	r1, [r5, #0]
 800a49c:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800a49e:	4620      	mov	r0, r4
 800a4a0:	f7ff fd70 	bl	8009f84 <USBD_SetClassConfig>
        if (ret != USBD_OK)
 800a4a4:	4605      	mov	r5, r0
 800a4a6:	2800      	cmp	r0, #0
 800a4a8:	d0ed      	beq.n	800a486 <USBD_StdDevReq+0x202>
          USBD_CtlError(pdev, req);
 800a4aa:	4620      	mov	r0, r4
 800a4ac:	f7ff fedf 	bl	800a26e <USBD_CtlError.constprop.0>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800a4b0:	7921      	ldrb	r1, [r4, #4]
 800a4b2:	4620      	mov	r0, r4
 800a4b4:	f7ff fd6d 	bl	8009f92 <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800a4b8:	2302      	movs	r3, #2
 800a4ba:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800a4be:	e6f0      	b.n	800a2a2 <USBD_StdDevReq+0x1e>
  if (req->wLength != 1U)
 800a4c0:	88ca      	ldrh	r2, [r1, #6]
 800a4c2:	2a01      	cmp	r2, #1
 800a4c4:	f47f aee9 	bne.w	800a29a <USBD_StdDevReq+0x16>
    switch (pdev->dev_state)
 800a4c8:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
 800a4cc:	2902      	cmp	r1, #2
 800a4ce:	b2cb      	uxtb	r3, r1
 800a4d0:	d807      	bhi.n	800a4e2 <USBD_StdDevReq+0x25e>
 800a4d2:	2b00      	cmp	r3, #0
 800a4d4:	f43f aee1 	beq.w	800a29a <USBD_StdDevReq+0x16>
        pdev->dev_default_config = 0U;
 800a4d8:	4601      	mov	r1, r0
 800a4da:	2300      	movs	r3, #0
 800a4dc:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 800a4e0:	e737      	b.n	800a352 <USBD_StdDevReq+0xce>
    switch (pdev->dev_state)
 800a4e2:	2b03      	cmp	r3, #3
 800a4e4:	f47f aed9 	bne.w	800a29a <USBD_StdDevReq+0x16>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 800a4e8:	1d01      	adds	r1, r0, #4
 800a4ea:	e732      	b.n	800a352 <USBD_StdDevReq+0xce>
  switch (pdev->dev_state)
 800a4ec:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a4f0:	3b01      	subs	r3, #1
 800a4f2:	2b02      	cmp	r3, #2
 800a4f4:	f63f aed1 	bhi.w	800a29a <USBD_StdDevReq+0x16>
      if (req->wLength != 0x2U)
 800a4f8:	88ca      	ldrh	r2, [r1, #6]
 800a4fa:	2a02      	cmp	r2, #2
 800a4fc:	f47f aecd 	bne.w	800a29a <USBD_StdDevReq+0x16>
      if (pdev->dev_remote_wakeup != 0U)
 800a500:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 800a504:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 800a506:	2b00      	cmp	r3, #0
 800a508:	bf0c      	ite	eq
 800a50a:	2301      	moveq	r3, #1
 800a50c:	2303      	movne	r3, #3
 800a50e:	f841 3f0c 	str.w	r3, [r1, #12]!
 800a512:	e71e      	b.n	800a352 <USBD_StdDevReq+0xce>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800a514:	884b      	ldrh	r3, [r1, #2]
 800a516:	2b01      	cmp	r3, #1
 800a518:	d102      	bne.n	800a520 <USBD_StdDevReq+0x29c>
        pdev->dev_remote_wakeup = 0U;
 800a51a:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 800a51e:	e7b2      	b.n	800a486 <USBD_StdDevReq+0x202>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 800a520:	2b02      	cmp	r3, #2
 800a522:	f47f aeba 	bne.w	800a29a <USBD_StdDevReq+0x16>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
 800a526:	888b      	ldrh	r3, [r1, #4]
 800a528:	0a1b      	lsrs	r3, r3, #8
 800a52a:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 800a52e:	e7aa      	b.n	800a486 <USBD_StdDevReq+0x202>
  switch (pdev->dev_state)
 800a530:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a534:	3b01      	subs	r3, #1
 800a536:	2b02      	cmp	r3, #2
 800a538:	f63f aeaf 	bhi.w	800a29a <USBD_StdDevReq+0x16>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800a53c:	884b      	ldrh	r3, [r1, #2]
 800a53e:	2b01      	cmp	r3, #1
 800a540:	f47f aeae 	bne.w	800a2a0 <USBD_StdDevReq+0x1c>
        pdev->dev_remote_wakeup = 0U;
 800a544:	2300      	movs	r3, #0
 800a546:	e7e8      	b.n	800a51a <USBD_StdDevReq+0x296>
 800a548:	20014030 	.word	0x20014030

0800a54c <USBD_StdItfReq>:
{
 800a54c:	b570      	push	{r4, r5, r6, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a54e:	780b      	ldrb	r3, [r1, #0]
 800a550:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 800a554:	065b      	lsls	r3, r3, #25
{
 800a556:	4604      	mov	r4, r0
 800a558:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a55a:	d501      	bpl.n	800a560 <USBD_StdItfReq+0x14>
 800a55c:	2a40      	cmp	r2, #64	@ 0x40
 800a55e:	d11f      	bne.n	800a5a0 <USBD_StdItfReq+0x54>
      switch (pdev->dev_state)
 800a560:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800a564:	3b01      	subs	r3, #1
 800a566:	2b02      	cmp	r3, #2
 800a568:	d81a      	bhi.n	800a5a0 <USBD_StdItfReq+0x54>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800a56a:	7931      	ldrb	r1, [r6, #4]
 800a56c:	2901      	cmp	r1, #1
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800a56e:	4620      	mov	r0, r4
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800a570:	d817      	bhi.n	800a5a2 <USBD_StdItfReq+0x56>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800a572:	f7ff fe66 	bl	800a242 <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800a576:	b988      	cbnz	r0, 800a59c <USBD_StdItfReq+0x50>
              if (pdev->pClass[idx]->Setup != NULL)
 800a578:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800a57c:	689b      	ldr	r3, [r3, #8]
 800a57e:	b16b      	cbz	r3, 800a59c <USBD_StdItfReq+0x50>
                pdev->classId = idx;
 800a580:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800a584:	4631      	mov	r1, r6
 800a586:	4620      	mov	r0, r4
 800a588:	4798      	blx	r3
 800a58a:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
 800a58c:	88f3      	ldrh	r3, [r6, #6]
 800a58e:	b91b      	cbnz	r3, 800a598 <USBD_StdItfReq+0x4c>
 800a590:	b915      	cbnz	r5, 800a598 <USBD_StdItfReq+0x4c>
              (void)USBD_CtlSendStatus(pdev);
 800a592:	4620      	mov	r0, r4
 800a594:	f000 f9ff 	bl	800a996 <USBD_CtlSendStatus>
}
 800a598:	4628      	mov	r0, r5
 800a59a:	bd70      	pop	{r4, r5, r6, pc}
                ret = USBD_FAIL;
 800a59c:	2503      	movs	r5, #3
 800a59e:	e7f5      	b.n	800a58c <USBD_StdItfReq+0x40>
          USBD_CtlError(pdev, req);
 800a5a0:	4620      	mov	r0, r4
            USBD_CtlError(pdev, req);
 800a5a2:	f7ff fe64 	bl	800a26e <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800a5a6:	2500      	movs	r5, #0
 800a5a8:	e7f6      	b.n	800a598 <USBD_StdItfReq+0x4c>

0800a5aa <USBD_StdEPReq>:
{
 800a5aa:	b570      	push	{r4, r5, r6, lr}
 800a5ac:	780b      	ldrb	r3, [r1, #0]
  ep_addr = LOBYTE(req->wIndex);
 800a5ae:	888a      	ldrh	r2, [r1, #4]
 800a5b0:	790d      	ldrb	r5, [r1, #4]
 800a5b2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a5b6:	2b20      	cmp	r3, #32
{
 800a5b8:	4604      	mov	r4, r0
 800a5ba:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a5bc:	d059      	beq.n	800a672 <USBD_StdEPReq+0xc8>
 800a5be:	2b40      	cmp	r3, #64	@ 0x40
 800a5c0:	d057      	beq.n	800a672 <USBD_StdEPReq+0xc8>
 800a5c2:	b11b      	cbz	r3, 800a5cc <USBD_StdEPReq+0x22>
              USBD_CtlError(pdev, req);
 800a5c4:	4620      	mov	r0, r4
 800a5c6:	f7ff fe52 	bl	800a26e <USBD_CtlError.constprop.0>
              break;
 800a5ca:	e03e      	b.n	800a64a <USBD_StdEPReq+0xa0>
      switch (req->bRequest)
 800a5cc:	784b      	ldrb	r3, [r1, #1]
 800a5ce:	2b01      	cmp	r3, #1
 800a5d0:	d03d      	beq.n	800a64e <USBD_StdEPReq+0xa4>
 800a5d2:	2b03      	cmp	r3, #3
 800a5d4:	d026      	beq.n	800a624 <USBD_StdEPReq+0x7a>
 800a5d6:	2b00      	cmp	r3, #0
 800a5d8:	d1f4      	bne.n	800a5c4 <USBD_StdEPReq+0x1a>
          switch (pdev->dev_state)
 800a5da:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a5de:	2b02      	cmp	r3, #2
 800a5e0:	b2d9      	uxtb	r1, r3
 800a5e2:	d062      	beq.n	800a6aa <USBD_StdEPReq+0x100>
 800a5e4:	2903      	cmp	r1, #3
 800a5e6:	d1ed      	bne.n	800a5c4 <USBD_StdEPReq+0x1a>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800a5e8:	f005 030f 	and.w	r3, r5, #15
              if ((ep_addr & 0x80U) == 0x80U)
 800a5ec:	f012 0f80 	tst.w	r2, #128	@ 0x80
 800a5f0:	f04f 0214 	mov.w	r2, #20
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800a5f4:	fb02 0303 	mla	r3, r2, r3, r0
              if ((ep_addr & 0x80U) == 0x80U)
 800a5f8:	d067      	beq.n	800a6ca <USBD_StdEPReq+0x120>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800a5fa:	f893 3023 	ldrb.w	r3, [r3, #35]	@ 0x23
 800a5fe:	2b00      	cmp	r3, #0
 800a600:	d0e0      	beq.n	800a5c4 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a602:	f005 067f 	and.w	r6, r5, #127	@ 0x7f
 800a606:	3601      	adds	r6, #1
 800a608:	eb06 0686 	add.w	r6, r6, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800a60c:	2d80      	cmp	r5, #128	@ 0x80
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a60e:	eb00 0686 	add.w	r6, r0, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800a612:	d066      	beq.n	800a6e2 <USBD_StdEPReq+0x138>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 800a614:	4629      	mov	r1, r5
 800a616:	4620      	mov	r0, r4
 800a618:	f7f7 fb92 	bl	8001d40 <USBD_LL_IsStallEP>
 800a61c:	2800      	cmp	r0, #0
 800a61e:	d066      	beq.n	800a6ee <USBD_StdEPReq+0x144>
                pep->status = 0x0001U;
 800a620:	2301      	movs	r3, #1
 800a622:	e05f      	b.n	800a6e4 <USBD_StdEPReq+0x13a>
          switch (pdev->dev_state)
 800a624:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a628:	2b02      	cmp	r3, #2
 800a62a:	b2da      	uxtb	r2, r3
 800a62c:	d033      	beq.n	800a696 <USBD_StdEPReq+0xec>
 800a62e:	2a03      	cmp	r2, #3
 800a630:	d1c8      	bne.n	800a5c4 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800a632:	884b      	ldrh	r3, [r1, #2]
 800a634:	b933      	cbnz	r3, 800a644 <USBD_StdEPReq+0x9a>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 800a636:	0669      	lsls	r1, r5, #25
 800a638:	d004      	beq.n	800a644 <USBD_StdEPReq+0x9a>
 800a63a:	88f3      	ldrh	r3, [r6, #6]
 800a63c:	b913      	cbnz	r3, 800a644 <USBD_StdEPReq+0x9a>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 800a63e:	4629      	mov	r1, r5
 800a640:	f7f7 fbb9 	bl	8001db6 <USBD_LL_StallEP>
              (void)USBD_CtlSendStatus(pdev);
 800a644:	4620      	mov	r0, r4
 800a646:	f000 f9a6 	bl	800a996 <USBD_CtlSendStatus>
}
 800a64a:	2000      	movs	r0, #0
 800a64c:	bd70      	pop	{r4, r5, r6, pc}
          switch (pdev->dev_state)
 800a64e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a652:	2b02      	cmp	r3, #2
 800a654:	b2da      	uxtb	r2, r3
 800a656:	d01e      	beq.n	800a696 <USBD_StdEPReq+0xec>
 800a658:	2a03      	cmp	r2, #3
 800a65a:	d1b3      	bne.n	800a5c4 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800a65c:	884b      	ldrh	r3, [r1, #2]
 800a65e:	2b00      	cmp	r3, #0
 800a660:	d1f3      	bne.n	800a64a <USBD_StdEPReq+0xa0>
                if ((ep_addr & 0x7FU) != 0x00U)
 800a662:	066b      	lsls	r3, r5, #25
 800a664:	d002      	beq.n	800a66c <USBD_StdEPReq+0xc2>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 800a666:	4629      	mov	r1, r5
 800a668:	f7f7 fbae 	bl	8001dc8 <USBD_LL_ClearStallEP>
                (void)USBD_CtlSendStatus(pdev);
 800a66c:	4620      	mov	r0, r4
 800a66e:	f000 f992 	bl	800a996 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
 800a672:	4629      	mov	r1, r5
 800a674:	4620      	mov	r0, r4
 800a676:	f7ff fde6 	bl	800a246 <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800a67a:	2800      	cmp	r0, #0
 800a67c:	d1e5      	bne.n	800a64a <USBD_StdEPReq+0xa0>
                  if (pdev->pClass[idx]->Setup != NULL)
 800a67e:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
                  pdev->classId = idx;
 800a682:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
 800a686:	689b      	ldr	r3, [r3, #8]
 800a688:	2b00      	cmp	r3, #0
 800a68a:	d0de      	beq.n	800a64a <USBD_StdEPReq+0xa0>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800a68c:	4631      	mov	r1, r6
 800a68e:	4620      	mov	r0, r4
}
 800a690:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800a694:	4718      	bx	r3
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800a696:	066a      	lsls	r2, r5, #25
 800a698:	d094      	beq.n	800a5c4 <USBD_StdEPReq+0x1a>
                (void)USBD_LL_StallEP(pdev, ep_addr);
 800a69a:	4629      	mov	r1, r5
 800a69c:	f7f7 fb8b 	bl	8001db6 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 800a6a0:	2180      	movs	r1, #128	@ 0x80
 800a6a2:	4620      	mov	r0, r4
 800a6a4:	f7f7 fb87 	bl	8001db6 <USBD_LL_StallEP>
 800a6a8:	e7cf      	b.n	800a64a <USBD_StdEPReq+0xa0>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800a6aa:	0669      	lsls	r1, r5, #25
 800a6ac:	d18a      	bne.n	800a5c4 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a6ae:	0613      	lsls	r3, r2, #24
 800a6b0:	bf4c      	ite	mi
 800a6b2:	f100 0114 	addmi.w	r1, r0, #20
 800a6b6:	f500 71aa 	addpl.w	r1, r0, #340	@ 0x154
              pep->status = 0x0000U;
 800a6ba:	2300      	movs	r3, #0
 800a6bc:	f801 3f0e 	strb.w	r3, [r1, #14]!
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800a6c0:	2202      	movs	r2, #2
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800a6c2:	4620      	mov	r0, r4
 800a6c4:	f000 f949 	bl	800a95a <USBD_CtlSendData>
              break;
 800a6c8:	e7bf      	b.n	800a64a <USBD_StdEPReq+0xa0>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800a6ca:	f893 3163 	ldrb.w	r3, [r3, #355]	@ 0x163
 800a6ce:	2b00      	cmp	r3, #0
 800a6d0:	f43f af78 	beq.w	800a5c4 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800a6d4:	2614      	movs	r6, #20
 800a6d6:	fb06 0605 	mla	r6, r6, r5, r0
 800a6da:	f506 76aa 	add.w	r6, r6, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800a6de:	2d00      	cmp	r5, #0
 800a6e0:	d198      	bne.n	800a614 <USBD_StdEPReq+0x6a>
                pep->status = 0x0000U;
 800a6e2:	2300      	movs	r3, #0
                pep->status = 0x0001U;
 800a6e4:	73b3      	strb	r3, [r6, #14]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800a6e6:	2202      	movs	r2, #2
 800a6e8:	f106 010e 	add.w	r1, r6, #14
 800a6ec:	e7e9      	b.n	800a6c2 <USBD_StdEPReq+0x118>
                pep->status = 0x0000U;
 800a6ee:	73b0      	strb	r0, [r6, #14]
 800a6f0:	e7f9      	b.n	800a6e6 <USBD_StdEPReq+0x13c>

0800a6f2 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 800a6f2:	780b      	ldrb	r3, [r1, #0]
 800a6f4:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 800a6f6:	784b      	ldrb	r3, [r1, #1]
 800a6f8:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
 800a6fa:	884b      	ldrh	r3, [r1, #2]
 800a6fc:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
 800a6fe:	888b      	ldrh	r3, [r1, #4]
 800a700:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
 800a702:	88cb      	ldrh	r3, [r1, #6]
 800a704:	80c3      	strh	r3, [r0, #6]
}
 800a706:	4770      	bx	lr

0800a708 <USBD_CtlError>:
{
 800a708:	b510      	push	{r4, lr}
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a70a:	2180      	movs	r1, #128	@ 0x80
{
 800a70c:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800a70e:	f7f7 fb52 	bl	8001db6 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800a712:	4620      	mov	r0, r4
 800a714:	2100      	movs	r1, #0
}
 800a716:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800a71a:	f7f7 bb4c 	b.w	8001db6 <USBD_LL_StallEP>

0800a71e <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 800a71e:	b570      	push	{r4, r5, r6, lr}
 800a720:	460d      	mov	r5, r1
 800a722:	4616      	mov	r6, r2
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
 800a724:	4604      	mov	r4, r0
 800a726:	b170      	cbz	r0, 800a746 <USBD_GetString+0x28>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 800a728:	f7f5 fd62 	bl	80001f0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
 800a72c:	b2c3      	uxtb	r3, r0
 800a72e:	3301      	adds	r3, #1
 800a730:	005b      	lsls	r3, r3, #1
 800a732:	8033      	strh	r3, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 800a734:	702b      	strb	r3, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 800a736:	2303      	movs	r3, #3
 800a738:	706b      	strb	r3, [r5, #1]
  while (*pdesc != (uint8_t)'\0')
 800a73a:	3c01      	subs	r4, #1
  idx++;
 800a73c:	2302      	movs	r3, #2
    unicode[idx] = 0U;
 800a73e:	2100      	movs	r1, #0
  while (*pdesc != (uint8_t)'\0')
 800a740:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800a744:	b902      	cbnz	r2, 800a748 <USBD_GetString+0x2a>
}
 800a746:	bd70      	pop	{r4, r5, r6, pc}
    unicode[idx] = *pdesc;
 800a748:	54ea      	strb	r2, [r5, r3]
    idx++;
 800a74a:	1c5a      	adds	r2, r3, #1
    unicode[idx] = 0U;
 800a74c:	b2d2      	uxtb	r2, r2
    idx++;
 800a74e:	3302      	adds	r3, #2
    unicode[idx] = 0U;
 800a750:	54a9      	strb	r1, [r5, r2]
    idx++;
 800a752:	b2db      	uxtb	r3, r3
 800a754:	e7f4      	b.n	800a740 <USBD_GetString+0x22>

0800a756 <USBD_HID_DataIn>:
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
 800a756:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800a75a:	33b0      	adds	r3, #176	@ 0xb0
 800a75c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800a760:	2000      	movs	r0, #0
 800a762:	7318      	strb	r0, [r3, #12]

  return (uint8_t)USBD_OK;
}
 800a764:	4770      	bx	lr
	...

0800a768 <USBD_HID_GetDeviceQualifierDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
 800a768:	230a      	movs	r3, #10
 800a76a:	8003      	strh	r3, [r0, #0]

  return USBD_HID_DeviceQualifierDesc;
}
 800a76c:	4800      	ldr	r0, [pc, #0]	@ (800a770 <USBD_HID_GetDeviceQualifierDesc+0x8>)
 800a76e:	4770      	bx	lr
 800a770:	20000120 	.word	0x20000120

0800a774 <USBD_HID_GetFSCfgDesc>:
{
 800a774:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800a776:	2181      	movs	r1, #129	@ 0x81
{
 800a778:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800a77a:	4805      	ldr	r0, [pc, #20]	@ (800a790 <USBD_HID_GetFSCfgDesc+0x1c>)
 800a77c:	f7ff fd65 	bl	800a24a <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 800a780:	b108      	cbz	r0, 800a786 <USBD_HID_GetFSCfgDesc+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
 800a782:	230a      	movs	r3, #10
 800a784:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800a786:	2322      	movs	r3, #34	@ 0x22
}
 800a788:	4801      	ldr	r0, [pc, #4]	@ (800a790 <USBD_HID_GetFSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800a78a:	8023      	strh	r3, [r4, #0]
}
 800a78c:	bd10      	pop	{r4, pc}
 800a78e:	bf00      	nop
 800a790:	20000138 	.word	0x20000138

0800a794 <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
 800a794:	f7ff bfee 	b.w	800a774 <USBD_HID_GetFSCfgDesc>

0800a798 <USBD_HID_GetHSCfgDesc>:
{
 800a798:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800a79a:	2181      	movs	r1, #129	@ 0x81
{
 800a79c:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800a79e:	4805      	ldr	r0, [pc, #20]	@ (800a7b4 <USBD_HID_GetHSCfgDesc+0x1c>)
 800a7a0:	f7ff fd53 	bl	800a24a <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 800a7a4:	b108      	cbz	r0, 800a7aa <USBD_HID_GetHSCfgDesc+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
 800a7a6:	2307      	movs	r3, #7
 800a7a8:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800a7aa:	2322      	movs	r3, #34	@ 0x22
}
 800a7ac:	4801      	ldr	r0, [pc, #4]	@ (800a7b4 <USBD_HID_GetHSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800a7ae:	8023      	strh	r3, [r4, #0]
}
 800a7b0:	bd10      	pop	{r4, pc}
 800a7b2:	bf00      	nop
 800a7b4:	20000138 	.word	0x20000138

0800a7b8 <USBD_HID_Setup>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a7b8:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
 800a7bc:	b513      	push	{r0, r1, r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a7be:	33b0      	adds	r3, #176	@ 0xb0
  uint16_t status_info = 0U;
 800a7c0:	2200      	movs	r2, #0
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a7c2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  uint16_t status_info = 0U;
 800a7c6:	f8ad 2006 	strh.w	r2, [sp, #6]
  if (hhid == NULL)
 800a7ca:	2b00      	cmp	r3, #0
 800a7cc:	d04a      	beq.n	800a864 <USBD_HID_Setup+0xac>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800a7ce:	780a      	ldrb	r2, [r1, #0]
 800a7d0:	f012 0260 	ands.w	r2, r2, #96	@ 0x60
 800a7d4:	d01d      	beq.n	800a812 <USBD_HID_Setup+0x5a>
 800a7d6:	2a20      	cmp	r2, #32
 800a7d8:	d142      	bne.n	800a860 <USBD_HID_Setup+0xa8>
      switch (req->bRequest)
 800a7da:	784a      	ldrb	r2, [r1, #1]
 800a7dc:	3a02      	subs	r2, #2
 800a7de:	2a09      	cmp	r2, #9
 800a7e0:	d83e      	bhi.n	800a860 <USBD_HID_Setup+0xa8>
 800a7e2:	e8df f002 	tbb	[pc, r2]
 800a7e6:	0a13      	.short	0x0a13
 800a7e8:	3d3d3d3d 	.word	0x3d3d3d3d
 800a7ec:	050f3d3d 	.word	0x050f3d3d
          hhid->Protocol = (uint8_t)(req->wValue);
 800a7f0:	788a      	ldrb	r2, [r1, #2]
 800a7f2:	601a      	str	r2, [r3, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800a7f4:	2000      	movs	r0, #0
}
 800a7f6:	b002      	add	sp, #8
 800a7f8:	bd10      	pop	{r4, pc}
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
 800a7fa:	2201      	movs	r2, #1
 800a7fc:	4619      	mov	r1, r3
          (void)USBD_CtlSendData(pdev, pbuf, len);
 800a7fe:	f000 f8ac 	bl	800a95a <USBD_CtlSendData>
          break;
 800a802:	e7f7      	b.n	800a7f4 <USBD_HID_Setup+0x3c>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 800a804:	884a      	ldrh	r2, [r1, #2]
 800a806:	0a12      	lsrs	r2, r2, #8
 800a808:	605a      	str	r2, [r3, #4]
          break;
 800a80a:	e7f3      	b.n	800a7f4 <USBD_HID_Setup+0x3c>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
 800a80c:	2201      	movs	r2, #1
 800a80e:	1d19      	adds	r1, r3, #4
 800a810:	e7f5      	b.n	800a7fe <USBD_HID_Setup+0x46>
      switch (req->bRequest)
 800a812:	784a      	ldrb	r2, [r1, #1]
 800a814:	2a0b      	cmp	r2, #11
 800a816:	d823      	bhi.n	800a860 <USBD_HID_Setup+0xa8>
 800a818:	a401      	add	r4, pc, #4	@ (adr r4, 800a820 <USBD_HID_Setup+0x68>)
 800a81a:	f854 f022 	ldr.w	pc, [r4, r2, lsl #2]
 800a81e:	bf00      	nop
 800a820:	0800a851 	.word	0x0800a851
 800a824:	0800a7f5 	.word	0x0800a7f5
 800a828:	0800a861 	.word	0x0800a861
 800a82c:	0800a861 	.word	0x0800a861
 800a830:	0800a861 	.word	0x0800a861
 800a834:	0800a861 	.word	0x0800a861
 800a838:	0800a869 	.word	0x0800a869
 800a83c:	0800a861 	.word	0x0800a861
 800a840:	0800a861 	.word	0x0800a861
 800a844:	0800a861 	.word	0x0800a861
 800a848:	0800a88d 	.word	0x0800a88d
 800a84c:	0800a89d 	.word	0x0800a89d
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a850:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a854:	2b03      	cmp	r3, #3
 800a856:	d103      	bne.n	800a860 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 800a858:	2202      	movs	r2, #2
 800a85a:	f10d 0106 	add.w	r1, sp, #6
 800a85e:	e7ce      	b.n	800a7fe <USBD_HID_Setup+0x46>
            USBD_CtlError(pdev, req);
 800a860:	f7ff ff52 	bl	800a708 <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
 800a864:	2003      	movs	r0, #3
 800a866:	e7c6      	b.n	800a7f6 <USBD_HID_Setup+0x3e>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
 800a868:	884b      	ldrh	r3, [r1, #2]
 800a86a:	0a1b      	lsrs	r3, r3, #8
 800a86c:	2b22      	cmp	r3, #34	@ 0x22
 800a86e:	d105      	bne.n	800a87c <USBD_HID_Setup+0xc4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 800a870:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
 800a872:	490e      	ldr	r1, [pc, #56]	@ (800a8ac <USBD_HID_Setup+0xf4>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 800a874:	2a4a      	cmp	r2, #74	@ 0x4a
 800a876:	bf28      	it	cs
 800a878:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
 800a87a:	e7c0      	b.n	800a7fe <USBD_HID_Setup+0x46>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
 800a87c:	2b21      	cmp	r3, #33	@ 0x21
 800a87e:	d1ef      	bne.n	800a860 <USBD_HID_Setup+0xa8>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 800a880:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_Desc;
 800a882:	490b      	ldr	r1, [pc, #44]	@ (800a8b0 <USBD_HID_Setup+0xf8>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 800a884:	2a09      	cmp	r2, #9
 800a886:	bf28      	it	cs
 800a888:	2209      	movcs	r2, #9
 800a88a:	e7b8      	b.n	800a7fe <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a88c:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800a890:	2a03      	cmp	r2, #3
 800a892:	d1e5      	bne.n	800a860 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
 800a894:	2201      	movs	r2, #1
 800a896:	f103 0108 	add.w	r1, r3, #8
 800a89a:	e7b0      	b.n	800a7fe <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a89c:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800a8a0:	2a03      	cmp	r2, #3
 800a8a2:	d1dd      	bne.n	800a860 <USBD_HID_Setup+0xa8>
            hhid->AltSetting = (uint8_t)(req->wValue);
 800a8a4:	788a      	ldrb	r2, [r1, #2]
 800a8a6:	609a      	str	r2, [r3, #8]
 800a8a8:	e7a4      	b.n	800a7f4 <USBD_HID_Setup+0x3c>
 800a8aa:	bf00      	nop
 800a8ac:	200000d4 	.word	0x200000d4
 800a8b0:	2000012c 	.word	0x2000012c

0800a8b4 <USBD_HID_DeInit>:
{
 800a8b4:	b538      	push	{r3, r4, r5, lr}
 800a8b6:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
 800a8b8:	2181      	movs	r1, #129	@ 0x81
 800a8ba:	f7f7 fa73 	bl	8001da4 <USBD_LL_CloseEP>
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a8be:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800a8c2:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a8c4:	33b0      	adds	r3, #176	@ 0xb0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800a8c6:	f884 5037 	strb.w	r5, [r4, #55]	@ 0x37
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a8ca:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
  pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = 0U;
 800a8ce:	6325      	str	r5, [r4, #48]	@ 0x30
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800a8d0:	b130      	cbz	r0, 800a8e0 <USBD_HID_DeInit+0x2c>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 800a8d2:	f7f7 fa4b 	bl	8001d6c <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800a8d6:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800a8da:	33b0      	adds	r3, #176	@ 0xb0
 800a8dc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
 800a8e0:	2000      	movs	r0, #0
 800a8e2:	bd38      	pop	{r3, r4, r5, pc}

0800a8e4 <USBD_HID_Init>:
{
 800a8e4:	b538      	push	{r3, r4, r5, lr}
 800a8e6:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
 800a8e8:	2010      	movs	r0, #16
 800a8ea:	f7f7 fa3b 	bl	8001d64 <USBD_static_malloc>
  if (hhid == NULL)
 800a8ee:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800a8f2:	33b0      	adds	r3, #176	@ 0xb0
  if (hhid == NULL)
 800a8f4:	4605      	mov	r5, r0
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800a8f6:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
  if (hhid == NULL)
 800a8fa:	b908      	cbnz	r0, 800a900 <USBD_HID_Init+0x1c>
    return (uint8_t)USBD_EMEM;
 800a8fc:	2002      	movs	r0, #2
}
 800a8fe:	bd38      	pop	{r3, r4, r5, pc}
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 800a900:	7c23      	ldrb	r3, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 800a902:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
 800a906:	2b00      	cmp	r3, #0
 800a908:	bf14      	ite	ne
 800a90a:	230a      	movne	r3, #10
 800a90c:	2307      	moveq	r3, #7
 800a90e:	6323      	str	r3, [r4, #48]	@ 0x30
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
 800a910:	2203      	movs	r2, #3
 800a912:	2304      	movs	r3, #4
 800a914:	2181      	movs	r1, #129	@ 0x81
 800a916:	4620      	mov	r0, r4
 800a918:	f7f7 fa38 	bl	8001d8c <USBD_LL_OpenEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800a91c:	2301      	movs	r3, #1
  hhid->state = USBD_HID_IDLE;
 800a91e:	2000      	movs	r0, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800a920:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
  hhid->state = USBD_HID_IDLE;
 800a924:	7328      	strb	r0, [r5, #12]
  return (uint8_t)USBD_OK;
 800a926:	e7ea      	b.n	800a8fe <USBD_HID_Init+0x1a>

0800a928 <USBD_HID_SendReport>:
{
 800a928:	4613      	mov	r3, r2
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a92a:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800a92e:	32b0      	adds	r2, #176	@ 0xb0
{
 800a930:	b510      	push	{r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800a932:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  if (hhid == NULL)
 800a936:	b172      	cbz	r2, 800a956 <USBD_HID_SendReport+0x2e>
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a938:	f890 429c 	ldrb.w	r4, [r0, #668]	@ 0x29c
 800a93c:	2c03      	cmp	r4, #3
 800a93e:	d101      	bne.n	800a944 <USBD_HID_SendReport+0x1c>
    if (hhid->state == USBD_HID_IDLE)
 800a940:	7b14      	ldrb	r4, [r2, #12]
 800a942:	b10c      	cbz	r4, 800a948 <USBD_HID_SendReport+0x20>
  return (uint8_t)USBD_OK;
 800a944:	2000      	movs	r0, #0
}
 800a946:	bd10      	pop	{r4, pc}
      hhid->state = USBD_HID_BUSY;
 800a948:	2401      	movs	r4, #1
 800a94a:	7314      	strb	r4, [r2, #12]
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
 800a94c:	460a      	mov	r2, r1
 800a94e:	2181      	movs	r1, #129	@ 0x81
 800a950:	f7f7 fa4c 	bl	8001dec <USBD_LL_Transmit>
 800a954:	e7f6      	b.n	800a944 <USBD_HID_SendReport+0x1c>
    return (uint8_t)USBD_FAIL;
 800a956:	2003      	movs	r0, #3
 800a958:	e7f5      	b.n	800a946 <USBD_HID_SendReport+0x1e>

0800a95a <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 800a95a:	b510      	push	{r4, lr}
 800a95c:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800a95e:	2202      	movs	r2, #2
 800a960:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  pdev->ep_in[0].total_length = len;
 800a964:	6143      	str	r3, [r0, #20]
#else
  pdev->ep_in[0].rem_length = len;
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800a966:	460a      	mov	r2, r1
  pdev->ep_in[0].pbuffer = pbuf;
 800a968:	6241      	str	r1, [r0, #36]	@ 0x24
  pdev->ep_in[0].rem_length = len;
 800a96a:	6183      	str	r3, [r0, #24]
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800a96c:	2100      	movs	r1, #0
 800a96e:	f7f7 fa3d 	bl	8001dec <USBD_LL_Transmit>

  return USBD_OK;
}
 800a972:	2000      	movs	r0, #0
 800a974:	bd10      	pop	{r4, pc}

0800a976 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800a976:	b508      	push	{r3, lr}
 800a978:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800a97a:	460a      	mov	r2, r1
 800a97c:	2100      	movs	r1, #0
 800a97e:	f7f7 fa35 	bl	8001dec <USBD_LL_Transmit>

  return USBD_OK;
}
 800a982:	2000      	movs	r0, #0
 800a984:	bd08      	pop	{r3, pc}

0800a986 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 800a986:	b508      	push	{r3, lr}
 800a988:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800a98a:	460a      	mov	r2, r1
 800a98c:	2100      	movs	r1, #0
 800a98e:	f7f7 fa36 	bl	8001dfe <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800a992:	2000      	movs	r0, #0
 800a994:	bd08      	pop	{r3, pc}

0800a996 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 800a996:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800a998:	2204      	movs	r2, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800a99a:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800a99c:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800a9a0:	4619      	mov	r1, r3
 800a9a2:	461a      	mov	r2, r3
 800a9a4:	f7f7 fa22 	bl	8001dec <USBD_LL_Transmit>

  return USBD_OK;
}
 800a9a8:	2000      	movs	r0, #0
 800a9aa:	bd08      	pop	{r3, pc}

0800a9ac <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800a9ac:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800a9ae:	2205      	movs	r2, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a9b0:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800a9b2:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800a9b6:	4619      	mov	r1, r3
 800a9b8:	461a      	mov	r2, r3
 800a9ba:	f7f7 fa20 	bl	8001dfe <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800a9be:	2000      	movs	r0, #0
 800a9c0:	bd08      	pop	{r3, pc}

0800a9c2 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a9c2:	8880      	ldrh	r0, [r0, #4]
 800a9c4:	4770      	bx	lr

0800a9c6 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a9c6:	b570      	push	{r4, r5, r6, lr}
 800a9c8:	6803      	ldr	r3, [r0, #0]
 800a9ca:	4605      	mov	r5, r0
 800a9cc:	460c      	mov	r4, r1
 800a9ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9d0:	2100      	movs	r1, #0
 800a9d2:	4798      	blx	r3
 800a9d4:	682b      	ldr	r3, [r5, #0]
 800a9d6:	4606      	mov	r6, r0
 800a9d8:	6a1b      	ldr	r3, [r3, #32]
 800a9da:	4628      	mov	r0, r5
 800a9dc:	4798      	blx	r3
 800a9de:	1ba4      	subs	r4, r4, r6
 800a9e0:	b2a4      	uxth	r4, r4
 800a9e2:	fbb4 f0f0 	udiv	r0, r4, r0
 800a9e6:	bd70      	pop	{r4, r5, r6, pc}

0800a9e8 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a9e8:	2300      	movs	r3, #0
 800a9ea:	8083      	strh	r3, [r0, #4]
 800a9ec:	4770      	bx	lr

0800a9ee <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a9ee:	b510      	push	{r4, lr}
 800a9f0:	6803      	ldr	r3, [r0, #0]
 800a9f2:	8881      	ldrh	r1, [r0, #4]
 800a9f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9f6:	4604      	mov	r4, r0
 800a9f8:	4798      	blx	r3
 800a9fa:	88a3      	ldrh	r3, [r4, #4]
 800a9fc:	3301      	adds	r3, #1
 800a9fe:	80a3      	strh	r3, [r4, #4]
 800aa00:	bd10      	pop	{r4, pc}

0800aa02 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800aa02:	6803      	ldr	r3, [r0, #0]
 800aa04:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aa06:	4718      	bx	r3

0800aa08 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800aa08:	4770      	bx	lr
	...

0800aa0c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800aa0c:	4a02      	ldr	r2, [pc, #8]	@ (800aa18 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800aa0e:	6002      	str	r2, [r0, #0]
 800aa10:	2200      	movs	r2, #0
 800aa12:	8082      	strh	r2, [r0, #4]
 800aa14:	4770      	bx	lr
 800aa16:	bf00      	nop
 800aa18:	08025948 	.word	0x08025948

0800aa1c <_ZN8touchgfx9Container13getFirstChildEv>:
 800aa1c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800aa1e:	4770      	bx	lr

0800aa20 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800aa20:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa22:	2000      	movs	r0, #0
 800aa24:	b12b      	cbz	r3, 800aa32 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa26:	b920      	cbnz	r0, 800aa32 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa28:	1a5a      	subs	r2, r3, r1
 800aa2a:	4250      	negs	r0, r2
 800aa2c:	4150      	adcs	r0, r2
 800aa2e:	699b      	ldr	r3, [r3, #24]
 800aa30:	e7f8      	b.n	800aa24 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800aa32:	4770      	bx	lr

0800aa34 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800aa34:	2300      	movs	r3, #0
 800aa36:	6148      	str	r0, [r1, #20]
 800aa38:	618b      	str	r3, [r1, #24]
 800aa3a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa3c:	b913      	cbnz	r3, 800aa44 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800aa3e:	6281      	str	r1, [r0, #40]	@ 0x28
 800aa40:	4770      	bx	lr
 800aa42:	4613      	mov	r3, r2
 800aa44:	699a      	ldr	r2, [r3, #24]
 800aa46:	2a00      	cmp	r2, #0
 800aa48:	d1fb      	bne.n	800aa42 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800aa4a:	6199      	str	r1, [r3, #24]
 800aa4c:	4770      	bx	lr

0800aa4e <_ZN8touchgfx9Container9removeAllEv>:
 800aa4e:	2200      	movs	r2, #0
 800aa50:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aa52:	b123      	cbz	r3, 800aa5e <_ZN8touchgfx9Container9removeAllEv+0x10>
 800aa54:	6999      	ldr	r1, [r3, #24]
 800aa56:	6281      	str	r1, [r0, #40]	@ 0x28
 800aa58:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800aa5c:	e7f8      	b.n	800aa50 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800aa5e:	4770      	bx	lr

0800aa60 <_ZN8touchgfx9Container6unlinkEv>:
 800aa60:	2300      	movs	r3, #0
 800aa62:	6283      	str	r3, [r0, #40]	@ 0x28
 800aa64:	4770      	bx	lr

0800aa66 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800aa66:	2200      	movs	r2, #0
 800aa68:	8002      	strh	r2, [r0, #0]
 800aa6a:	8042      	strh	r2, [r0, #2]
 800aa6c:	8082      	strh	r2, [r0, #4]
 800aa6e:	80c2      	strh	r2, [r0, #6]
 800aa70:	4770      	bx	lr

0800aa72 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800aa72:	b570      	push	{r4, r5, r6, lr}
 800aa74:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa76:	460d      	mov	r5, r1
 800aa78:	4616      	mov	r6, r2
 800aa7a:	b13c      	cbz	r4, 800aa8c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800aa7c:	6823      	ldr	r3, [r4, #0]
 800aa7e:	4620      	mov	r0, r4
 800aa80:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800aa82:	4632      	mov	r2, r6
 800aa84:	4629      	mov	r1, r5
 800aa86:	4798      	blx	r3
 800aa88:	69a4      	ldr	r4, [r4, #24]
 800aa8a:	e7f6      	b.n	800aa7a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800aa8c:	bd70      	pop	{r4, r5, r6, pc}

0800aa8e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800aa8e:	b538      	push	{r3, r4, r5, lr}
 800aa90:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aa92:	460d      	mov	r5, r1
 800aa94:	b134      	cbz	r4, 800aaa4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800aa96:	682b      	ldr	r3, [r5, #0]
 800aa98:	4621      	mov	r1, r4
 800aa9a:	689b      	ldr	r3, [r3, #8]
 800aa9c:	4628      	mov	r0, r5
 800aa9e:	4798      	blx	r3
 800aaa0:	69a4      	ldr	r4, [r4, #24]
 800aaa2:	e7f7      	b.n	800aa94 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800aaa4:	bd38      	pop	{r3, r4, r5, pc}

0800aaa6 <_ZN8touchgfx9ContainerD1Ev>:
 800aaa6:	4770      	bx	lr

0800aaa8 <_ZN8touchgfx9ContainerD0Ev>:
 800aaa8:	b510      	push	{r4, lr}
 800aaaa:	212c      	movs	r1, #44	@ 0x2c
 800aaac:	4604      	mov	r4, r0
 800aaae:	f017 fce4 	bl	802247a <_ZdlPvj>
 800aab2:	4620      	mov	r0, r4
 800aab4:	bd10      	pop	{r4, pc}

0800aab6 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800aab6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aab8:	b19b      	cbz	r3, 800aae2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aaba:	428b      	cmp	r3, r1
 800aabc:	d109      	bne.n	800aad2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800aabe:	699a      	ldr	r2, [r3, #24]
 800aac0:	2100      	movs	r1, #0
 800aac2:	6159      	str	r1, [r3, #20]
 800aac4:	6282      	str	r2, [r0, #40]	@ 0x28
 800aac6:	b902      	cbnz	r2, 800aaca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800aac8:	4770      	bx	lr
 800aaca:	6199      	str	r1, [r3, #24]
 800aacc:	4770      	bx	lr
 800aace:	4613      	mov	r3, r2
 800aad0:	b13a      	cbz	r2, 800aae2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aad2:	699a      	ldr	r2, [r3, #24]
 800aad4:	428a      	cmp	r2, r1
 800aad6:	d1fa      	bne.n	800aace <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800aad8:	698a      	ldr	r2, [r1, #24]
 800aada:	619a      	str	r2, [r3, #24]
 800aadc:	2300      	movs	r3, #0
 800aade:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800aae2:	4770      	bx	lr

0800aae4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800aae4:	b410      	push	{r4}
 800aae6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800aae8:	4604      	mov	r4, r0
 800aaea:	b92b      	cbnz	r3, 800aaf8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aaec:	6803      	ldr	r3, [r0, #0]
 800aaee:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aaf2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800aaf4:	4611      	mov	r1, r2
 800aaf6:	4718      	bx	r3
 800aaf8:	b941      	cbnz	r1, 800ab0c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aafa:	6193      	str	r3, [r2, #24]
 800aafc:	6282      	str	r2, [r0, #40]	@ 0x28
 800aafe:	6154      	str	r4, [r2, #20]
 800ab00:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ab04:	4770      	bx	lr
 800ab06:	4603      	mov	r3, r0
 800ab08:	2800      	cmp	r0, #0
 800ab0a:	d0f9      	beq.n	800ab00 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800ab0c:	4299      	cmp	r1, r3
 800ab0e:	6998      	ldr	r0, [r3, #24]
 800ab10:	d1f9      	bne.n	800ab06 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800ab12:	6190      	str	r0, [r2, #24]
 800ab14:	618a      	str	r2, [r1, #24]
 800ab16:	e7f2      	b.n	800aafe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ab18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ab18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab1c:	461f      	mov	r7, r3
 800ab1e:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800ab22:	460d      	mov	r5, r1
 800ab24:	4616      	mov	r6, r2
 800ab26:	b103      	cbz	r3, 800ab2a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ab28:	6038      	str	r0, [r7, #0]
 800ab2a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ab2c:	b314      	cbz	r4, 800ab74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ab2e:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ab32:	b1eb      	cbz	r3, 800ab70 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab34:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ab38:	428d      	cmp	r5, r1
 800ab3a:	db19      	blt.n	800ab70 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab3c:	8923      	ldrh	r3, [r4, #8]
 800ab3e:	b289      	uxth	r1, r1
 800ab40:	440b      	add	r3, r1
 800ab42:	b21b      	sxth	r3, r3
 800ab44:	429d      	cmp	r5, r3
 800ab46:	da13      	bge.n	800ab70 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab48:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ab4c:	4296      	cmp	r6, r2
 800ab4e:	db0f      	blt.n	800ab70 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab50:	8963      	ldrh	r3, [r4, #10]
 800ab52:	b292      	uxth	r2, r2
 800ab54:	4413      	add	r3, r2
 800ab56:	b21b      	sxth	r3, r3
 800ab58:	429e      	cmp	r6, r3
 800ab5a:	da09      	bge.n	800ab70 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab5c:	6823      	ldr	r3, [r4, #0]
 800ab5e:	1ab2      	subs	r2, r6, r2
 800ab60:	1a69      	subs	r1, r5, r1
 800ab62:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800ab66:	b212      	sxth	r2, r2
 800ab68:	463b      	mov	r3, r7
 800ab6a:	b209      	sxth	r1, r1
 800ab6c:	4620      	mov	r0, r4
 800ab6e:	47c0      	blx	r8
 800ab70:	69a4      	ldr	r4, [r4, #24]
 800ab72:	e7db      	b.n	800ab2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ab74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab78 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ab78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab7c:	4c6e      	ldr	r4, [pc, #440]	@ (800ad38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ab7e:	b0a1      	sub	sp, #132	@ 0x84
 800ab80:	6824      	ldr	r4, [r4, #0]
 800ab82:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800ab84:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800ab88:	9303      	str	r3, [sp, #12]
 800ab8a:	2400      	movs	r4, #0
 800ab8c:	802c      	strh	r4, [r5, #0]
 800ab8e:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800ab90:	802c      	strh	r4, [r5, #0]
 800ab92:	601c      	str	r4, [r3, #0]
 800ab94:	4606      	mov	r6, r0
 800ab96:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ab9a:	f7ff ffbd 	bl	800ab18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ab9e:	f1b9 0f03 	cmp.w	r9, #3
 800aba2:	f340 80c2 	ble.w	800ad2a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800aba6:	4631      	mov	r1, r6
 800aba8:	a80c      	add	r0, sp, #48	@ 0x30
 800abaa:	f006 fc1f 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abae:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800abb2:	9306      	str	r3, [sp, #24]
 800abb4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800abb8:	9307      	str	r3, [sp, #28]
 800abba:	9b03      	ldr	r3, [sp, #12]
 800abbc:	f8d3 a000 	ldr.w	sl, [r3]
 800abc0:	f1ba 0f00 	cmp.w	sl, #0
 800abc4:	f000 80b4 	beq.w	800ad30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800abc8:	4651      	mov	r1, sl
 800abca:	a810      	add	r0, sp, #64	@ 0x40
 800abcc:	f006 fc0e 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abd0:	9b01      	ldr	r3, [sp, #4]
 800abd2:	9a06      	ldr	r2, [sp, #24]
 800abd4:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800abd8:	189d      	adds	r5, r3, r2
 800abda:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800abde:	9a07      	ldr	r2, [sp, #28]
 800abe0:	2002      	movs	r0, #2
 800abe2:	fb91 f1f0 	sdiv	r1, r1, r0
 800abe6:	4419      	add	r1, r3
 800abe8:	1a6d      	subs	r5, r5, r1
 800abea:	9b02      	ldr	r3, [sp, #8]
 800abec:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800abf0:	4413      	add	r3, r2
 800abf2:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800abf6:	fb92 f2f0 	sdiv	r2, r2, r0
 800abfa:	440a      	add	r2, r1
 800abfc:	1a9b      	subs	r3, r3, r2
 800abfe:	435b      	muls	r3, r3
 800ac00:	fb05 3505 	mla	r5, r5, r5, r3
 800ac04:	4f4d      	ldr	r7, [pc, #308]	@ (800ad3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ac06:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac08:	ac10      	add	r4, sp, #64	@ 0x40
 800ac0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac0c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac0e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac10:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac12:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac14:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ac18:	f1b9 0f0c 	cmp.w	r9, #12
 800ac1c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ac20:	f04f 0303 	mov.w	r3, #3
 800ac24:	bfc8      	it	gt
 800ac26:	4698      	movgt	r8, r3
 800ac28:	f8cd 9000 	str.w	r9, [sp]
 800ac2c:	f04f 0400 	mov.w	r4, #0
 800ac30:	bfdc      	itt	le
 800ac32:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ac36:	fb92 f8f3 	sdivle	r8, r2, r3
 800ac3a:	1c63      	adds	r3, r4, #1
 800ac3c:	aa10      	add	r2, sp, #64	@ 0x40
 800ac3e:	f004 0401 	and.w	r4, r4, #1
 800ac42:	9308      	str	r3, [sp, #32]
 800ac44:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ac48:	9b00      	ldr	r3, [sp, #0]
 800ac4a:	fb93 f3f8 	sdiv	r3, r3, r8
 800ac4e:	b29b      	uxth	r3, r3
 800ac50:	3404      	adds	r4, #4
 800ac52:	f04f 0b00 	mov.w	fp, #0
 800ac56:	9304      	str	r3, [sp, #16]
 800ac58:	9a04      	ldr	r2, [sp, #16]
 800ac5a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ac5e:	fb13 f302 	smulbb	r3, r3, r2
 800ac62:	9a01      	ldr	r2, [sp, #4]
 800ac64:	b29b      	uxth	r3, r3
 800ac66:	1899      	adds	r1, r3, r2
 800ac68:	9305      	str	r3, [sp, #20]
 800ac6a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ac6e:	b209      	sxth	r1, r1
 800ac70:	4299      	cmp	r1, r3
 800ac72:	db4d      	blt.n	800ad10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac74:	8932      	ldrh	r2, [r6, #8]
 800ac76:	4413      	add	r3, r2
 800ac78:	b21b      	sxth	r3, r3
 800ac7a:	4299      	cmp	r1, r3
 800ac7c:	da48      	bge.n	800ad10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac7e:	9b04      	ldr	r3, [sp, #16]
 800ac80:	6827      	ldr	r7, [r4, #0]
 800ac82:	fb17 f703 	smulbb	r7, r7, r3
 800ac86:	9b02      	ldr	r3, [sp, #8]
 800ac88:	b2bf      	uxth	r7, r7
 800ac8a:	18fa      	adds	r2, r7, r3
 800ac8c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ac90:	b212      	sxth	r2, r2
 800ac92:	429a      	cmp	r2, r3
 800ac94:	db3c      	blt.n	800ad10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac96:	8970      	ldrh	r0, [r6, #10]
 800ac98:	4403      	add	r3, r0
 800ac9a:	b21b      	sxth	r3, r3
 800ac9c:	429a      	cmp	r2, r3
 800ac9e:	da37      	bge.n	800ad10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aca0:	2300      	movs	r3, #0
 800aca2:	930b      	str	r3, [sp, #44]	@ 0x2c
 800aca4:	4630      	mov	r0, r6
 800aca6:	ab0b      	add	r3, sp, #44	@ 0x2c
 800aca8:	f7ff ff36 	bl	800ab18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800acac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800acae:	b37a      	cbz	r2, 800ad10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acb0:	4552      	cmp	r2, sl
 800acb2:	d02d      	beq.n	800ad10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acb4:	4611      	mov	r1, r2
 800acb6:	a80e      	add	r0, sp, #56	@ 0x38
 800acb8:	9209      	str	r2, [sp, #36]	@ 0x24
 800acba:	f006 fb97 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800acbe:	9a06      	ldr	r2, [sp, #24]
 800acc0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800acc4:	9b01      	ldr	r3, [sp, #4]
 800acc6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800acca:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800acce:	4413      	add	r3, r2
 800acd0:	f04f 0e02 	mov.w	lr, #2
 800acd4:	fb91 f1fe 	sdiv	r1, r1, lr
 800acd8:	4401      	add	r1, r0
 800acda:	1a58      	subs	r0, r3, r1
 800acdc:	9a07      	ldr	r2, [sp, #28]
 800acde:	9b02      	ldr	r3, [sp, #8]
 800ace0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800ace4:	fb9c fcfe 	sdiv	ip, ip, lr
 800ace8:	4413      	add	r3, r2
 800acea:	448c      	add	ip, r1
 800acec:	eba3 030c 	sub.w	r3, r3, ip
 800acf0:	435b      	muls	r3, r3
 800acf2:	fb00 3300 	mla	r3, r0, r0, r3
 800acf6:	42ab      	cmp	r3, r5
 800acf8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800acfa:	d208      	bcs.n	800ad0e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800acfc:	9803      	ldr	r0, [sp, #12]
 800acfe:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800ad00:	6001      	str	r1, [r0, #0]
 800ad02:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800ad04:	9805      	ldr	r0, [sp, #20]
 800ad06:	8008      	strh	r0, [r1, #0]
 800ad08:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ad0a:	461d      	mov	r5, r3
 800ad0c:	800f      	strh	r7, [r1, #0]
 800ad0e:	4692      	mov	sl, r2
 800ad10:	f10b 0b01 	add.w	fp, fp, #1
 800ad14:	f1bb 0f04 	cmp.w	fp, #4
 800ad18:	f104 0408 	add.w	r4, r4, #8
 800ad1c:	d19c      	bne.n	800ac58 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ad1e:	9b00      	ldr	r3, [sp, #0]
 800ad20:	9c08      	ldr	r4, [sp, #32]
 800ad22:	444b      	add	r3, r9
 800ad24:	4544      	cmp	r4, r8
 800ad26:	9300      	str	r3, [sp, #0]
 800ad28:	d187      	bne.n	800ac3a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ad2a:	b021      	add	sp, #132	@ 0x84
 800ad2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad30:	f04f 35ff 	mov.w	r5, #4294967295
 800ad34:	e766      	b.n	800ac04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ad36:	bf00      	nop
 800ad38:	20014040 	.word	0x20014040
 800ad3c:	0802484c 	.word	0x0802484c

0800ad40 <_ZN8touchgfx4RectaNERKS0_>:
 800ad40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad44:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ad48:	888c      	ldrh	r4, [r1, #4]
 800ad4a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ad4e:	443c      	add	r4, r7
 800ad50:	b2a4      	uxth	r4, r4
 800ad52:	fa0f f884 	sxth.w	r8, r4
 800ad56:	45c1      	cmp	r9, r8
 800ad58:	da2f      	bge.n	800adba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad5a:	8882      	ldrh	r2, [r0, #4]
 800ad5c:	444a      	add	r2, r9
 800ad5e:	b292      	uxth	r2, r2
 800ad60:	fa0f fe82 	sxth.w	lr, r2
 800ad64:	4577      	cmp	r7, lr
 800ad66:	da28      	bge.n	800adba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad68:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ad6c:	88cb      	ldrh	r3, [r1, #6]
 800ad6e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ad72:	442b      	add	r3, r5
 800ad74:	b21b      	sxth	r3, r3
 800ad76:	429e      	cmp	r6, r3
 800ad78:	da1f      	bge.n	800adba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad7a:	88c3      	ldrh	r3, [r0, #6]
 800ad7c:	4433      	add	r3, r6
 800ad7e:	b29b      	uxth	r3, r3
 800ad80:	fa0f fc83 	sxth.w	ip, r3
 800ad84:	4565      	cmp	r5, ip
 800ad86:	da18      	bge.n	800adba <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad88:	454f      	cmp	r7, r9
 800ad8a:	bfb8      	it	lt
 800ad8c:	464f      	movlt	r7, r9
 800ad8e:	42b5      	cmp	r5, r6
 800ad90:	bfb8      	it	lt
 800ad92:	4635      	movlt	r5, r6
 800ad94:	45f0      	cmp	r8, lr
 800ad96:	bfd8      	it	le
 800ad98:	4622      	movle	r2, r4
 800ad9a:	1bd2      	subs	r2, r2, r7
 800ad9c:	8082      	strh	r2, [r0, #4]
 800ad9e:	884a      	ldrh	r2, [r1, #2]
 800ada0:	88c9      	ldrh	r1, [r1, #6]
 800ada2:	8007      	strh	r7, [r0, #0]
 800ada4:	440a      	add	r2, r1
 800ada6:	b292      	uxth	r2, r2
 800ada8:	b211      	sxth	r1, r2
 800adaa:	458c      	cmp	ip, r1
 800adac:	bfa8      	it	ge
 800adae:	4613      	movge	r3, r2
 800adb0:	1b5b      	subs	r3, r3, r5
 800adb2:	80c3      	strh	r3, [r0, #6]
 800adb4:	8045      	strh	r5, [r0, #2]
 800adb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800adba:	2300      	movs	r3, #0
 800adbc:	8003      	strh	r3, [r0, #0]
 800adbe:	8043      	strh	r3, [r0, #2]
 800adc0:	8083      	strh	r3, [r0, #4]
 800adc2:	80c3      	strh	r3, [r0, #6]
 800adc4:	e7f7      	b.n	800adb6 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800adc6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800adca:	2b00      	cmp	r3, #0
 800adcc:	dd06      	ble.n	800addc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800adce:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800add2:	2800      	cmp	r0, #0
 800add4:	bfcc      	ite	gt
 800add6:	2000      	movgt	r0, #0
 800add8:	2001      	movle	r0, #1
 800adda:	4770      	bx	lr
 800addc:	2001      	movs	r0, #1
 800adde:	4770      	bx	lr

0800ade0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ade0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ade4:	2300      	movs	r3, #0
 800ade6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800ade8:	8003      	strh	r3, [r0, #0]
 800adea:	4604      	mov	r4, r0
 800adec:	8043      	strh	r3, [r0, #2]
 800adee:	8083      	strh	r3, [r0, #4]
 800adf0:	80c3      	strh	r3, [r0, #6]
 800adf2:	2d00      	cmp	r5, #0
 800adf4:	d040      	beq.n	800ae78 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800adf6:	1d28      	adds	r0, r5, #4
 800adf8:	f7ff ffe5 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800adfc:	b988      	cbnz	r0, 800ae22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800adfe:	4620      	mov	r0, r4
 800ae00:	f7ff ffe1 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae04:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ae08:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ae0c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ae10:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ae14:	b138      	cbz	r0, 800ae26 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ae16:	8022      	strh	r2, [r4, #0]
 800ae18:	8063      	strh	r3, [r4, #2]
 800ae1a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ae1e:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ae22:	69ad      	ldr	r5, [r5, #24]
 800ae24:	e7e5      	b.n	800adf2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ae26:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ae2a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ae2e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ae32:	4290      	cmp	r0, r2
 800ae34:	4607      	mov	r7, r0
 800ae36:	bfa8      	it	ge
 800ae38:	4617      	movge	r7, r2
 800ae3a:	4472      	add	r2, lr
 800ae3c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ae40:	8027      	strh	r7, [r4, #0]
 800ae42:	4299      	cmp	r1, r3
 800ae44:	460e      	mov	r6, r1
 800ae46:	4440      	add	r0, r8
 800ae48:	bfa8      	it	ge
 800ae4a:	461e      	movge	r6, r3
 800ae4c:	4471      	add	r1, lr
 800ae4e:	4463      	add	r3, ip
 800ae50:	b200      	sxth	r0, r0
 800ae52:	b212      	sxth	r2, r2
 800ae54:	b209      	sxth	r1, r1
 800ae56:	b21b      	sxth	r3, r3
 800ae58:	4290      	cmp	r0, r2
 800ae5a:	bfac      	ite	ge
 800ae5c:	ebc7 0200 	rsbge	r2, r7, r0
 800ae60:	ebc7 0202 	rsblt	r2, r7, r2
 800ae64:	4299      	cmp	r1, r3
 800ae66:	bfac      	ite	ge
 800ae68:	ebc6 0301 	rsbge	r3, r6, r1
 800ae6c:	ebc6 0303 	rsblt	r3, r6, r3
 800ae70:	8066      	strh	r6, [r4, #2]
 800ae72:	80a2      	strh	r2, [r4, #4]
 800ae74:	80e3      	strh	r3, [r4, #6]
 800ae76:	e7d4      	b.n	800ae22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ae78:	4620      	mov	r0, r4
 800ae7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae7e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ae7e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ae82:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800ae86:	b383      	cbz	r3, 800aeea <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae88:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ae8a:	b374      	cbz	r4, 800aeea <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae8c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ae90:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ae94:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ae98:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ae9c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800aea0:	b303      	cbz	r3, 800aee4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aea2:	4668      	mov	r0, sp
 800aea4:	1d21      	adds	r1, r4, #4
 800aea6:	f8ad 5000 	strh.w	r5, [sp]
 800aeaa:	f8ad 6002 	strh.w	r6, [sp, #2]
 800aeae:	f8ad 7004 	strh.w	r7, [sp, #4]
 800aeb2:	f8ad 8006 	strh.w	r8, [sp, #6]
 800aeb6:	f7ff ff43 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 800aeba:	4668      	mov	r0, sp
 800aebc:	f7ff ff83 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aec0:	b980      	cbnz	r0, 800aee4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aec2:	f8bd 3000 	ldrh.w	r3, [sp]
 800aec6:	88a2      	ldrh	r2, [r4, #4]
 800aec8:	1a9b      	subs	r3, r3, r2
 800aeca:	f8ad 3000 	strh.w	r3, [sp]
 800aece:	88e2      	ldrh	r2, [r4, #6]
 800aed0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aed4:	1a9b      	subs	r3, r3, r2
 800aed6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800aeda:	6823      	ldr	r3, [r4, #0]
 800aedc:	4669      	mov	r1, sp
 800aede:	689b      	ldr	r3, [r3, #8]
 800aee0:	4620      	mov	r0, r4
 800aee2:	4798      	blx	r3
 800aee4:	69a4      	ldr	r4, [r4, #24]
 800aee6:	2c00      	cmp	r4, #0
 800aee8:	d1d8      	bne.n	800ae9c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800aeea:	b002      	add	sp, #8
 800aeec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aef0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800aef0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aef2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800aef6:	460d      	mov	r5, r1
 800aef8:	4616      	mov	r6, r2
 800aefa:	b323      	cbz	r3, 800af46 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aefc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800aefe:	b314      	cbz	r4, 800af46 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800af00:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800af04:	b1eb      	cbz	r3, 800af42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800af06:	6828      	ldr	r0, [r5, #0]
 800af08:	6869      	ldr	r1, [r5, #4]
 800af0a:	466b      	mov	r3, sp
 800af0c:	c303      	stmia	r3!, {r0, r1}
 800af0e:	4668      	mov	r0, sp
 800af10:	1d21      	adds	r1, r4, #4
 800af12:	f7ff ff15 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 800af16:	4668      	mov	r0, sp
 800af18:	f7ff ff55 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af1c:	b988      	cbnz	r0, 800af42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800af1e:	f8bd 3000 	ldrh.w	r3, [sp]
 800af22:	88a2      	ldrh	r2, [r4, #4]
 800af24:	1a9b      	subs	r3, r3, r2
 800af26:	f8ad 3000 	strh.w	r3, [sp]
 800af2a:	88e2      	ldrh	r2, [r4, #6]
 800af2c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800af30:	1a9b      	subs	r3, r3, r2
 800af32:	f8ad 3002 	strh.w	r3, [sp, #2]
 800af36:	6823      	ldr	r3, [r4, #0]
 800af38:	4632      	mov	r2, r6
 800af3a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800af3c:	4669      	mov	r1, sp
 800af3e:	4620      	mov	r0, r4
 800af40:	4798      	blx	r3
 800af42:	69a4      	ldr	r4, [r4, #24]
 800af44:	e7db      	b.n	800aefe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800af46:	b002      	add	sp, #8
 800af48:	bd70      	pop	{r4, r5, r6, pc}

0800af4a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800af4a:	b513      	push	{r0, r1, r4, lr}
 800af4c:	6803      	ldr	r3, [r0, #0]
 800af4e:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800af52:	2300      	movs	r3, #0
 800af54:	e9cd 3300 	strd	r3, r3, [sp]
 800af58:	466b      	mov	r3, sp
 800af5a:	47a0      	blx	r4
 800af5c:	b002      	add	sp, #8
 800af5e:	bd10      	pop	{r4, pc}

0800af60 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800af60:	2301      	movs	r3, #1
 800af62:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800af66:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800af6a:	4770      	bx	lr

0800af6c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800af6c:	2301      	movs	r3, #1
 800af6e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800af72:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800af76:	4770      	bx	lr

0800af78 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800af78:	6843      	ldr	r3, [r0, #4]
 800af7a:	2201      	movs	r2, #1
 800af7c:	725a      	strb	r2, [r3, #9]
 800af7e:	6840      	ldr	r0, [r0, #4]
 800af80:	6803      	ldr	r3, [r0, #0]
 800af82:	691b      	ldr	r3, [r3, #16]
 800af84:	4718      	bx	r3

0800af86 <_ZN8touchgfx3HAL8flushDMAEv>:
 800af86:	6840      	ldr	r0, [r0, #4]
 800af88:	6803      	ldr	r3, [r0, #0]
 800af8a:	689b      	ldr	r3, [r3, #8]
 800af8c:	4718      	bx	r3

0800af8e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800af8e:	b530      	push	{r4, r5, lr}
 800af90:	b08b      	sub	sp, #44	@ 0x2c
 800af92:	6804      	ldr	r4, [r0, #0]
 800af94:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800af98:	9509      	str	r5, [sp, #36]	@ 0x24
 800af9a:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800af9e:	9508      	str	r5, [sp, #32]
 800afa0:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800afa4:	9507      	str	r5, [sp, #28]
 800afa6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800afaa:	9506      	str	r5, [sp, #24]
 800afac:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800afb0:	9505      	str	r5, [sp, #20]
 800afb2:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800afb6:	9504      	str	r5, [sp, #16]
 800afb8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800afbc:	9503      	str	r5, [sp, #12]
 800afbe:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800afc2:	9502      	str	r5, [sp, #8]
 800afc4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800afc8:	e9cd 3500 	strd	r3, r5, [sp]
 800afcc:	4613      	mov	r3, r2
 800afce:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800afd0:	2200      	movs	r2, #0
 800afd2:	47a0      	blx	r4
 800afd4:	b00b      	add	sp, #44	@ 0x2c
 800afd6:	bd30      	pop	{r4, r5, pc}

0800afd8 <_ZN8touchgfx3HAL10beginFrameEv>:
 800afd8:	4b04      	ldr	r3, [pc, #16]	@ (800afec <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800afda:	781b      	ldrb	r3, [r3, #0]
 800afdc:	b123      	cbz	r3, 800afe8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800afde:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800afe2:	f080 0001 	eor.w	r0, r0, #1
 800afe6:	4770      	bx	lr
 800afe8:	2001      	movs	r0, #1
 800afea:	4770      	bx	lr
 800afec:	2001403c 	.word	0x2001403c

0800aff0 <_ZN8touchgfx3HAL8endFrameEv>:
 800aff0:	b510      	push	{r4, lr}
 800aff2:	4604      	mov	r4, r0
 800aff4:	6840      	ldr	r0, [r0, #4]
 800aff6:	6803      	ldr	r3, [r0, #0]
 800aff8:	689b      	ldr	r3, [r3, #8]
 800affa:	4798      	blx	r3
 800affc:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800b000:	b113      	cbz	r3, 800b008 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b002:	2301      	movs	r3, #1
 800b004:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b008:	bd10      	pop	{r4, pc}

0800b00a <_ZN8touchgfx3HAL10initializeEv>:
 800b00a:	b510      	push	{r4, lr}
 800b00c:	4604      	mov	r4, r0
 800b00e:	f7f5 ff7f 	bl	8000f10 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b012:	f7f5 fe87 	bl	8000d24 <_ZN8touchgfx4GPIO4initEv>
 800b016:	6860      	ldr	r0, [r4, #4]
 800b018:	6803      	ldr	r3, [r0, #0]
 800b01a:	68db      	ldr	r3, [r3, #12]
 800b01c:	4798      	blx	r3
 800b01e:	68e0      	ldr	r0, [r4, #12]
 800b020:	6803      	ldr	r3, [r0, #0]
 800b022:	689b      	ldr	r3, [r3, #8]
 800b024:	4798      	blx	r3
 800b026:	6823      	ldr	r3, [r4, #0]
 800b028:	4620      	mov	r0, r4
 800b02a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b02c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b030:	4718      	bx	r3
	...

0800b034 <_ZN8touchgfx3HAL4tickEv>:
 800b034:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b036:	6803      	ldr	r3, [r0, #0]
 800b038:	4d62      	ldr	r5, [pc, #392]	@ (800b1c4 <_ZN8touchgfx3HAL4tickEv+0x190>)
 800b03a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800b03e:	4604      	mov	r4, r0
 800b040:	4798      	blx	r3
 800b042:	2800      	cmp	r0, #0
 800b044:	f000 809e 	beq.w	800b184 <_ZN8touchgfx3HAL4tickEv+0x150>
 800b048:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800b04c:	2b02      	cmp	r3, #2
 800b04e:	d002      	beq.n	800b056 <_ZN8touchgfx3HAL4tickEv+0x22>
 800b050:	2001      	movs	r0, #1
 800b052:	f7f5 fde5 	bl	8000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b056:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800b05a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b05e:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800b062:	2600      	movs	r6, #0
 800b064:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800b068:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800b06c:	b133      	cbz	r3, 800b07c <_ZN8touchgfx3HAL4tickEv+0x48>
 800b06e:	6823      	ldr	r3, [r4, #0]
 800b070:	4620      	mov	r0, r4
 800b072:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800b076:	4798      	blx	r3
 800b078:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800b07c:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800b080:	6862      	ldr	r2, [r4, #4]
 800b082:	f083 0301 	eor.w	r3, r3, #1
 800b086:	7253      	strb	r3, [r2, #9]
 800b088:	2601      	movs	r6, #1
 800b08a:	702e      	strb	r6, [r5, #0]
 800b08c:	f004 ff60 	bl	800ff50 <_ZN8touchgfx11Application11getInstanceEv>
 800b090:	6803      	ldr	r3, [r0, #0]
 800b092:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b094:	4798      	blx	r3
 800b096:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b09a:	b90b      	cbnz	r3, 800b0a0 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800b09c:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800b0a0:	f004 ff56 	bl	800ff50 <_ZN8touchgfx11Application11getInstanceEv>
 800b0a4:	6803      	ldr	r3, [r0, #0]
 800b0a6:	695b      	ldr	r3, [r3, #20]
 800b0a8:	4798      	blx	r3
 800b0aa:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b0ac:	6803      	ldr	r3, [r0, #0]
 800b0ae:	691b      	ldr	r3, [r3, #16]
 800b0b0:	4798      	blx	r3
 800b0b2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800b0b6:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800b0ba:	3b01      	subs	r3, #1
 800b0bc:	b2db      	uxtb	r3, r3
 800b0be:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b0c2:	b10a      	cbz	r2, 800b0c8 <_ZN8touchgfx3HAL4tickEv+0x94>
 800b0c4:	2b00      	cmp	r3, #0
 800b0c6:	d1eb      	bne.n	800b0a0 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800b0c8:	4a3f      	ldr	r2, [pc, #252]	@ (800b1c8 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800b0ca:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800b0ce:	7813      	ldrb	r3, [r2, #0]
 800b0d0:	3301      	adds	r3, #1
 800b0d2:	b25b      	sxtb	r3, r3
 800b0d4:	4299      	cmp	r1, r3
 800b0d6:	7013      	strb	r3, [r2, #0]
 800b0d8:	dc10      	bgt.n	800b0fc <_ZN8touchgfx3HAL4tickEv+0xc8>
 800b0da:	68e0      	ldr	r0, [r4, #12]
 800b0dc:	2300      	movs	r3, #0
 800b0de:	7013      	strb	r3, [r2, #0]
 800b0e0:	6803      	ldr	r3, [r0, #0]
 800b0e2:	aa03      	add	r2, sp, #12
 800b0e4:	68db      	ldr	r3, [r3, #12]
 800b0e6:	a902      	add	r1, sp, #8
 800b0e8:	4798      	blx	r3
 800b0ea:	6823      	ldr	r3, [r4, #0]
 800b0ec:	2800      	cmp	r0, #0
 800b0ee:	d059      	beq.n	800b1a4 <_ZN8touchgfx3HAL4tickEv+0x170>
 800b0f0:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800b0f4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b0f8:	4620      	mov	r0, r4
 800b0fa:	4798      	blx	r3
 800b0fc:	6960      	ldr	r0, [r4, #20]
 800b0fe:	2300      	movs	r3, #0
 800b100:	f88d 3007 	strb.w	r3, [sp, #7]
 800b104:	b158      	cbz	r0, 800b11e <_ZN8touchgfx3HAL4tickEv+0xea>
 800b106:	6803      	ldr	r3, [r0, #0]
 800b108:	f10d 0107 	add.w	r1, sp, #7
 800b10c:	68db      	ldr	r3, [r3, #12]
 800b10e:	4798      	blx	r3
 800b110:	b128      	cbz	r0, 800b11e <_ZN8touchgfx3HAL4tickEv+0xea>
 800b112:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800b114:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b118:	6803      	ldr	r3, [r0, #0]
 800b11a:	68db      	ldr	r3, [r3, #12]
 800b11c:	4798      	blx	r3
 800b11e:	f104 001c 	add.w	r0, r4, #28
 800b122:	f016 fba9 	bl	8021878 <_ZN8touchgfx8Gestures4tickEv>
 800b126:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800b12a:	b30b      	cbz	r3, 800b170 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800b12c:	6920      	ldr	r0, [r4, #16]
 800b12e:	6803      	ldr	r3, [r0, #0]
 800b130:	691b      	ldr	r3, [r3, #16]
 800b132:	4798      	blx	r3
 800b134:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b136:	4606      	mov	r6, r0
 800b138:	b903      	cbnz	r3, 800b13c <_ZN8touchgfx3HAL4tickEv+0x108>
 800b13a:	6760      	str	r0, [r4, #116]	@ 0x74
 800b13c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b13e:	4a23      	ldr	r2, [pc, #140]	@ (800b1cc <_ZN8touchgfx3HAL4tickEv+0x198>)
 800b140:	1af3      	subs	r3, r6, r3
 800b142:	4293      	cmp	r3, r2
 800b144:	d914      	bls.n	800b170 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800b146:	6920      	ldr	r0, [r4, #16]
 800b148:	6803      	ldr	r3, [r0, #0]
 800b14a:	699b      	ldr	r3, [r3, #24]
 800b14c:	4798      	blx	r3
 800b14e:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800b150:	2264      	movs	r2, #100	@ 0x64
 800b152:	1af3      	subs	r3, r6, r3
 800b154:	fbb3 f3f2 	udiv	r3, r3, r2
 800b158:	fbb0 f0f3 	udiv	r0, r0, r3
 800b15c:	2800      	cmp	r0, #0
 800b15e:	dc26      	bgt.n	800b1ae <_ZN8touchgfx3HAL4tickEv+0x17a>
 800b160:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800b164:	6920      	ldr	r0, [r4, #16]
 800b166:	6803      	ldr	r3, [r0, #0]
 800b168:	2100      	movs	r1, #0
 800b16a:	69db      	ldr	r3, [r3, #28]
 800b16c:	4798      	blx	r3
 800b16e:	6766      	str	r6, [r4, #116]	@ 0x74
 800b170:	6823      	ldr	r3, [r4, #0]
 800b172:	4620      	mov	r0, r4
 800b174:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800b178:	4798      	blx	r3
 800b17a:	f004 fee9 	bl	800ff50 <_ZN8touchgfx11Application11getInstanceEv>
 800b17e:	6803      	ldr	r3, [r0, #0]
 800b180:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b182:	4798      	blx	r3
 800b184:	6823      	ldr	r3, [r4, #0]
 800b186:	4620      	mov	r0, r4
 800b188:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800b18c:	4798      	blx	r3
 800b18e:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800b192:	2b02      	cmp	r3, #2
 800b194:	d002      	beq.n	800b19c <_ZN8touchgfx3HAL4tickEv+0x168>
 800b196:	2001      	movs	r0, #1
 800b198:	f7f5 fd6c 	bl	8000c74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b19c:	2300      	movs	r3, #0
 800b19e:	702b      	strb	r3, [r5, #0]
 800b1a0:	b004      	add	sp, #16
 800b1a2:	bd70      	pop	{r4, r5, r6, pc}
 800b1a4:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800b1a8:	4620      	mov	r0, r4
 800b1aa:	4798      	blx	r3
 800b1ac:	e7a6      	b.n	800b0fc <_ZN8touchgfx3HAL4tickEv+0xc8>
 800b1ae:	2863      	cmp	r0, #99	@ 0x63
 800b1b0:	bfcb      	itete	gt
 800b1b2:	2300      	movgt	r3, #0
 800b1b4:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800b1b8:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800b1bc:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800b1c0:	e7d0      	b.n	800b164 <_ZN8touchgfx3HAL4tickEv+0x130>
 800b1c2:	bf00      	nop
 800b1c4:	20014044 	.word	0x20014044
 800b1c8:	20014045 	.word	0x20014045
 800b1cc:	05f5e100 	.word	0x05f5e100

0800b1d0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b1d0:	b510      	push	{r4, lr}
 800b1d2:	4604      	mov	r4, r0
 800b1d4:	f7f5 fecc 	bl	8000f70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800b1d8:	6863      	ldr	r3, [r4, #4]
 800b1da:	2200      	movs	r2, #0
 800b1dc:	729a      	strb	r2, [r3, #10]
 800b1de:	bd10      	pop	{r4, pc}

0800b1e0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b1e0:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800b1e2:	301c      	adds	r0, #28
 800b1e4:	f016 bb46 	b.w	8021874 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b1e8 <_ZN8touchgfx3HAL5touchEll>:
 800b1e8:	b530      	push	{r4, r5, lr}
 800b1ea:	b087      	sub	sp, #28
 800b1ec:	4604      	mov	r4, r0
 800b1ee:	a804      	add	r0, sp, #16
 800b1f0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b1f4:	f004 fc94 	bl	800fb20 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b1f8:	9b04      	ldr	r3, [sp, #16]
 800b1fa:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b1fe:	a906      	add	r1, sp, #24
 800b200:	9b05      	ldr	r3, [sp, #20]
 800b202:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b206:	a803      	add	r0, sp, #12
 800b208:	f004 fcdc 	bl	800fbc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b20c:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800b210:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b214:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b218:	f104 001c 	add.w	r0, r4, #28
 800b21c:	b189      	cbz	r1, 800b242 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b21e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800b222:	9300      	str	r3, [sp, #0]
 800b224:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800b228:	4613      	mov	r3, r2
 800b22a:	462a      	mov	r2, r5
 800b22c:	f016 fb32 	bl	8021894 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b230:	b128      	cbz	r0, 800b23e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b232:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b236:	6623      	str	r3, [r4, #96]	@ 0x60
 800b238:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b23c:	6663      	str	r3, [r4, #100]	@ 0x64
 800b23e:	b007      	add	sp, #28
 800b240:	bd30      	pop	{r4, r5, pc}
 800b242:	f016 fb67 	bl	8021914 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b246:	2301      	movs	r3, #1
 800b248:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b24c:	e7f1      	b.n	800b232 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b24e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b24e:	b510      	push	{r4, lr}
 800b250:	2b00      	cmp	r3, #0
 800b252:	d046      	beq.n	800b2e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b254:	ea81 0002 	eor.w	r0, r1, r2
 800b258:	07c4      	lsls	r4, r0, #31
 800b25a:	d508      	bpl.n	800b26e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b25c:	440b      	add	r3, r1
 800b25e:	3a01      	subs	r2, #1
 800b260:	428b      	cmp	r3, r1
 800b262:	d93e      	bls.n	800b2e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b264:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b268:	f801 0b01 	strb.w	r0, [r1], #1
 800b26c:	e7f8      	b.n	800b260 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b26e:	07d0      	lsls	r0, r2, #31
 800b270:	bf42      	ittt	mi
 800b272:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b276:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b27a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b27e:	2b01      	cmp	r3, #1
 800b280:	d911      	bls.n	800b2a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b282:	ea81 0402 	eor.w	r4, r1, r2
 800b286:	07a4      	lsls	r4, r4, #30
 800b288:	4610      	mov	r0, r2
 800b28a:	d022      	beq.n	800b2d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b28c:	f023 0401 	bic.w	r4, r3, #1
 800b290:	440c      	add	r4, r1
 800b292:	428c      	cmp	r4, r1
 800b294:	4602      	mov	r2, r0
 800b296:	d904      	bls.n	800b2a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b298:	8812      	ldrh	r2, [r2, #0]
 800b29a:	f821 2b02 	strh.w	r2, [r1], #2
 800b29e:	3002      	adds	r0, #2
 800b2a0:	e7f7      	b.n	800b292 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b2a2:	f003 0301 	and.w	r3, r3, #1
 800b2a6:	f023 0003 	bic.w	r0, r3, #3
 800b2aa:	4408      	add	r0, r1
 800b2ac:	4288      	cmp	r0, r1
 800b2ae:	4614      	mov	r4, r2
 800b2b0:	d904      	bls.n	800b2bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b2b2:	6824      	ldr	r4, [r4, #0]
 800b2b4:	f841 4b04 	str.w	r4, [r1], #4
 800b2b8:	3204      	adds	r2, #4
 800b2ba:	e7f7      	b.n	800b2ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b2bc:	f003 0303 	and.w	r3, r3, #3
 800b2c0:	440b      	add	r3, r1
 800b2c2:	3a01      	subs	r2, #1
 800b2c4:	428b      	cmp	r3, r1
 800b2c6:	d90c      	bls.n	800b2e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b2c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b2cc:	f801 0b01 	strb.w	r0, [r1], #1
 800b2d0:	e7f8      	b.n	800b2c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b2d2:	0790      	lsls	r0, r2, #30
 800b2d4:	d0e7      	beq.n	800b2a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2d6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b2da:	f821 0b02 	strh.w	r0, [r1], #2
 800b2de:	3b02      	subs	r3, #2
 800b2e0:	e7e1      	b.n	800b2a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2e2:	2001      	movs	r0, #1
 800b2e4:	bd10      	pop	{r4, pc}

0800b2e6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b2e6:	b510      	push	{r4, lr}
 800b2e8:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800b2ec:	4604      	mov	r4, r0
 800b2ee:	b153      	cbz	r3, 800b306 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b2f0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800b2f4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800b2f8:	2101      	movs	r1, #1
 800b2fa:	301c      	adds	r0, #28
 800b2fc:	f016 fb0a 	bl	8021914 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b300:	2300      	movs	r3, #0
 800b302:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800b306:	bd10      	pop	{r4, pc}

0800b308 <_ZN8touchgfx8Drawable5setXYEss>:
 800b308:	b570      	push	{r4, r5, r6, lr}
 800b30a:	6803      	ldr	r3, [r0, #0]
 800b30c:	4604      	mov	r4, r0
 800b30e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b310:	4615      	mov	r5, r2
 800b312:	4798      	blx	r3
 800b314:	6823      	ldr	r3, [r4, #0]
 800b316:	4629      	mov	r1, r5
 800b318:	4620      	mov	r0, r4
 800b31a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b31c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b320:	4718      	bx	r3
	...

0800b324 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b324:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b328:	b085      	sub	sp, #20
 800b32a:	ad04      	add	r5, sp, #16
 800b32c:	4604      	mov	r4, r0
 800b32e:	2000      	movs	r0, #0
 800b330:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b334:	69a0      	ldr	r0, [r4, #24]
 800b336:	6806      	ldr	r6, [r0, #0]
 800b338:	9501      	str	r5, [sp, #4]
 800b33a:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800b33e:	9500      	str	r5, [sp, #0]
 800b340:	6835      	ldr	r5, [r6, #0]
 800b342:	4699      	mov	r9, r3
 800b344:	460f      	mov	r7, r1
 800b346:	4690      	mov	r8, r2
 800b348:	47a8      	blx	r5
 800b34a:	4d10      	ldr	r5, [pc, #64]	@ (800b38c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b34c:	4606      	mov	r6, r0
 800b34e:	f8a5 9000 	strh.w	r9, [r5]
 800b352:	f7f7 fdf9 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 800b356:	6803      	ldr	r3, [r0, #0]
 800b358:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b35a:	4798      	blx	r3
 800b35c:	b128      	cbz	r0, 800b36a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b35e:	2801      	cmp	r0, #1
 800b360:	d00b      	beq.n	800b37a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b362:	4630      	mov	r0, r6
 800b364:	b005      	add	sp, #20
 800b366:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b36a:	882b      	ldrh	r3, [r5, #0]
 800b36c:	fb08 7203 	mla	r2, r8, r3, r7
 800b370:	9b03      	ldr	r3, [sp, #12]
 800b372:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b376:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800b378:	e7f3      	b.n	800b362 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b37a:	882a      	ldrh	r2, [r5, #0]
 800b37c:	9b03      	ldr	r3, [sp, #12]
 800b37e:	fb08 7202 	mla	r2, r8, r2, r7
 800b382:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b386:	1a9a      	subs	r2, r3, r2
 800b388:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800b38a:	e7ea      	b.n	800b362 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b38c:	20014038 	.word	0x20014038

0800b390 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800b390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b392:	4b15      	ldr	r3, [pc, #84]	@ (800b3e8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800b394:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800b398:	881b      	ldrh	r3, [r3, #0]
 800b39a:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800b39c:	fb93 f4f4 	sdiv	r4, r3, r4
 800b3a0:	460f      	mov	r7, r1
 800b3a2:	4606      	mov	r6, r0
 800b3a4:	f7f7 fdd0 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 800b3a8:	6803      	ldr	r3, [r0, #0]
 800b3aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b3ac:	4798      	blx	r3
 800b3ae:	2801      	cmp	r0, #1
 800b3b0:	d00b      	beq.n	800b3ca <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800b3b2:	d303      	bcc.n	800b3bc <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800b3b4:	2802      	cmp	r0, #2
 800b3b6:	d010      	beq.n	800b3da <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800b3b8:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800b3ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b3bc:	4b0b      	ldr	r3, [pc, #44]	@ (800b3ec <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b3be:	8819      	ldrh	r1, [r3, #0]
 800b3c0:	437c      	muls	r4, r7
 800b3c2:	434c      	muls	r4, r1
 800b3c4:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800b3c8:	e7f6      	b.n	800b3b8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b3ca:	4b08      	ldr	r3, [pc, #32]	@ (800b3ec <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b3cc:	8819      	ldrh	r1, [r3, #0]
 800b3ce:	437c      	muls	r4, r7
 800b3d0:	434c      	muls	r4, r1
 800b3d2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800b3d6:	1b2d      	subs	r5, r5, r4
 800b3d8:	e7ee      	b.n	800b3b8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b3da:	4b04      	ldr	r3, [pc, #16]	@ (800b3ec <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800b3dc:	8819      	ldrh	r1, [r3, #0]
 800b3de:	437c      	muls	r4, r7
 800b3e0:	434c      	muls	r4, r1
 800b3e2:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800b3e6:	e7e7      	b.n	800b3b8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800b3e8:	2001403a 	.word	0x2001403a
 800b3ec:	20014038 	.word	0x20014038

0800b3f0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b3f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b3f2:	b08b      	sub	sp, #44	@ 0x2c
 800b3f4:	4617      	mov	r7, r2
 800b3f6:	4604      	mov	r4, r0
 800b3f8:	460e      	mov	r6, r1
 800b3fa:	461d      	mov	r5, r3
 800b3fc:	f7f7 fda4 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 800b400:	6803      	ldr	r3, [r0, #0]
 800b402:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b404:	4798      	blx	r3
 800b406:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b40a:	9007      	str	r0, [sp, #28]
 800b40c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b410:	4b0d      	ldr	r3, [pc, #52]	@ (800b448 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b412:	6822      	ldr	r2, [r4, #0]
 800b414:	881b      	ldrh	r3, [r3, #0]
 800b416:	9306      	str	r3, [sp, #24]
 800b418:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b41c:	9305      	str	r3, [sp, #20]
 800b41e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800b422:	9304      	str	r3, [sp, #16]
 800b424:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b428:	9303      	str	r3, [sp, #12]
 800b42a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b42e:	9302      	str	r3, [sp, #8]
 800b430:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b434:	e9cd 5300 	strd	r5, r3, [sp]
 800b438:	4631      	mov	r1, r6
 800b43a:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800b43c:	463b      	mov	r3, r7
 800b43e:	2200      	movs	r2, #0
 800b440:	4620      	mov	r0, r4
 800b442:	47a8      	blx	r5
 800b444:	b00b      	add	sp, #44	@ 0x2c
 800b446:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b448:	20014038 	.word	0x20014038

0800b44c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b44c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b450:	4698      	mov	r8, r3
 800b452:	6803      	ldr	r3, [r0, #0]
 800b454:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800b456:	4b15      	ldr	r3, [pc, #84]	@ (800b4ac <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b458:	b08b      	sub	sp, #44	@ 0x2c
 800b45a:	4617      	mov	r7, r2
 800b45c:	f8b3 9000 	ldrh.w	r9, [r3]
 800b460:	460e      	mov	r6, r1
 800b462:	4604      	mov	r4, r0
 800b464:	f7f7 fd70 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 800b468:	6803      	ldr	r3, [r0, #0]
 800b46a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b46c:	4798      	blx	r3
 800b46e:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b472:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b476:	2302      	movs	r3, #2
 800b478:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b47c:	2301      	movs	r3, #1
 800b47e:	9305      	str	r3, [sp, #20]
 800b480:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800b484:	9304      	str	r3, [sp, #16]
 800b486:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b48a:	9303      	str	r3, [sp, #12]
 800b48c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b490:	9302      	str	r3, [sp, #8]
 800b492:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b496:	2200      	movs	r2, #0
 800b498:	e9cd 8300 	strd	r8, r3, [sp]
 800b49c:	4631      	mov	r1, r6
 800b49e:	463b      	mov	r3, r7
 800b4a0:	4620      	mov	r0, r4
 800b4a2:	47a8      	blx	r5
 800b4a4:	b00b      	add	sp, #44	@ 0x2c
 800b4a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b4aa:	bf00      	nop
 800b4ac:	20014038 	.word	0x20014038

0800b4b0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b4b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b4b4:	4698      	mov	r8, r3
 800b4b6:	6803      	ldr	r3, [r0, #0]
 800b4b8:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800b4ba:	4b11      	ldr	r3, [pc, #68]	@ (800b500 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b4bc:	b087      	sub	sp, #28
 800b4be:	f8b3 9000 	ldrh.w	r9, [r3]
 800b4c2:	460e      	mov	r6, r1
 800b4c4:	4617      	mov	r7, r2
 800b4c6:	4604      	mov	r4, r0
 800b4c8:	f7f7 fd3e 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 800b4cc:	6803      	ldr	r3, [r0, #0]
 800b4ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b4d0:	4798      	blx	r3
 800b4d2:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800b4d6:	f8cd 900c 	str.w	r9, [sp, #12]
 800b4da:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b4de:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800b4e2:	9302      	str	r3, [sp, #8]
 800b4e4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800b4e8:	9301      	str	r3, [sp, #4]
 800b4ea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800b4ee:	9300      	str	r3, [sp, #0]
 800b4f0:	463a      	mov	r2, r7
 800b4f2:	4643      	mov	r3, r8
 800b4f4:	4631      	mov	r1, r6
 800b4f6:	4620      	mov	r0, r4
 800b4f8:	47a8      	blx	r5
 800b4fa:	b007      	add	sp, #28
 800b4fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b500:	20014038 	.word	0x20014038

0800b504 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b508:	4604      	mov	r4, r0
 800b50a:	b08f      	sub	sp, #60	@ 0x3c
 800b50c:	4610      	mov	r0, r2
 800b50e:	460d      	mov	r5, r1
 800b510:	4691      	mov	r9, r2
 800b512:	461e      	mov	r6, r3
 800b514:	f007 fe9e 	bl	8013254 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b518:	2800      	cmp	r0, #0
 800b51a:	f000 809d 	beq.w	800b658 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b51e:	6823      	ldr	r3, [r4, #0]
 800b520:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800b6bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b524:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b526:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800b6c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b52a:	4f61      	ldr	r7, [pc, #388]	@ (800b6b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b52c:	4620      	mov	r0, r4
 800b52e:	4798      	blx	r3
 800b530:	6823      	ldr	r3, [r4, #0]
 800b532:	4620      	mov	r0, r4
 800b534:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b536:	4798      	blx	r3
 800b538:	f8bb 3000 	ldrh.w	r3, [fp]
 800b53c:	9301      	str	r3, [sp, #4]
 800b53e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800b542:	f8ba 3000 	ldrh.w	r3, [sl]
 800b546:	9302      	str	r3, [sp, #8]
 800b548:	883b      	ldrh	r3, [r7, #0]
 800b54a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b54e:	9303      	str	r3, [sp, #12]
 800b550:	4b58      	ldr	r3, [pc, #352]	@ (800b6b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b552:	9305      	str	r3, [sp, #20]
 800b554:	881a      	ldrh	r2, [r3, #0]
 800b556:	9204      	str	r2, [sp, #16]
 800b558:	4640      	mov	r0, r8
 800b55a:	f007 ff0f 	bl	801337c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b55e:	8038      	strh	r0, [r7, #0]
 800b560:	4640      	mov	r0, r8
 800b562:	f007 ff3f 	bl	80133e4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b566:	9b05      	ldr	r3, [sp, #20]
 800b568:	b280      	uxth	r0, r0
 800b56a:	8018      	strh	r0, [r3, #0]
 800b56c:	4b52      	ldr	r3, [pc, #328]	@ (800b6b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b56e:	781b      	ldrb	r3, [r3, #0]
 800b570:	2b00      	cmp	r3, #0
 800b572:	d174      	bne.n	800b65e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b574:	883b      	ldrh	r3, [r7, #0]
 800b576:	f8ab 3000 	strh.w	r3, [fp]
 800b57a:	f8aa 0000 	strh.w	r0, [sl]
 800b57e:	4648      	mov	r0, r9
 800b580:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800b584:	f007 fe66 	bl	8013254 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b588:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800b58c:	2200      	movs	r2, #0
 800b58e:	4611      	mov	r1, r2
 800b590:	4628      	mov	r0, r5
 800b592:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b596:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b59a:	f7ff feb5 	bl	800b308 <_ZN8touchgfx8Drawable5setXYEss>
 800b59e:	2301      	movs	r3, #1
 800b5a0:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800b5a4:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800b5a8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b5ac:	2b00      	cmp	r3, #0
 800b5ae:	dd5c      	ble.n	800b66a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b5b0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b5b4:	2b00      	cmp	r3, #0
 800b5b6:	dd58      	ble.n	800b66a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b5b8:	462a      	mov	r2, r5
 800b5ba:	ab0a      	add	r3, sp, #40	@ 0x28
 800b5bc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b5c0:	6851      	ldr	r1, [r2, #4]
 800b5c2:	c303      	stmia	r3!, {r0, r1}
 800b5c4:	4631      	mov	r1, r6
 800b5c6:	a80a      	add	r0, sp, #40	@ 0x28
 800b5c8:	f7ff fbba 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 800b5cc:	4b38      	ldr	r3, [pc, #224]	@ (800b6b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b5ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b5d2:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800b5d6:	2100      	movs	r1, #0
 800b5d8:	aa0a      	add	r2, sp, #40	@ 0x28
 800b5da:	4b36      	ldr	r3, [pc, #216]	@ (800b6b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b5dc:	910c      	str	r1, [sp, #48]	@ 0x30
 800b5de:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b5e2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b5e6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800b5ea:	ab08      	add	r3, sp, #32
 800b5ec:	e883 0003 	stmia.w	r3, {r0, r1}
 800b5f0:	4618      	mov	r0, r3
 800b5f2:	a90c      	add	r1, sp, #48	@ 0x30
 800b5f4:	f7ff fba4 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 800b5f8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800b5fa:	2b00      	cmp	r3, #0
 800b5fc:	d13c      	bne.n	800b678 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b5fe:	2000      	movs	r0, #0
 800b600:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800b604:	2600      	movs	r6, #0
 800b606:	682a      	ldr	r2, [r5, #0]
 800b608:	696b      	ldr	r3, [r5, #20]
 800b60a:	616e      	str	r6, [r5, #20]
 800b60c:	9305      	str	r3, [sp, #20]
 800b60e:	6892      	ldr	r2, [r2, #8]
 800b610:	a908      	add	r1, sp, #32
 800b612:	4628      	mov	r0, r5
 800b614:	4790      	blx	r2
 800b616:	9b05      	ldr	r3, [sp, #20]
 800b618:	616b      	str	r3, [r5, #20]
 800b61a:	4652      	mov	r2, sl
 800b61c:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800b620:	4649      	mov	r1, r9
 800b622:	4628      	mov	r0, r5
 800b624:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800b628:	f7ff fe6e 	bl	800b308 <_ZN8touchgfx8Drawable5setXYEss>
 800b62c:	4b23      	ldr	r3, [pc, #140]	@ (800b6bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b62e:	9a01      	ldr	r2, [sp, #4]
 800b630:	801a      	strh	r2, [r3, #0]
 800b632:	4b23      	ldr	r3, [pc, #140]	@ (800b6c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b634:	9a02      	ldr	r2, [sp, #8]
 800b636:	801a      	strh	r2, [r3, #0]
 800b638:	4b1d      	ldr	r3, [pc, #116]	@ (800b6b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b63a:	9a03      	ldr	r2, [sp, #12]
 800b63c:	801a      	strh	r2, [r3, #0]
 800b63e:	4b1d      	ldr	r3, [pc, #116]	@ (800b6b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b640:	9a04      	ldr	r2, [sp, #16]
 800b642:	801a      	strh	r2, [r3, #0]
 800b644:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800b648:	6823      	ldr	r3, [r4, #0]
 800b64a:	4620      	mov	r0, r4
 800b64c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b64e:	4798      	blx	r3
 800b650:	6823      	ldr	r3, [r4, #0]
 800b652:	4620      	mov	r0, r4
 800b654:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b656:	4798      	blx	r3
 800b658:	b00f      	add	sp, #60	@ 0x3c
 800b65a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b65e:	883b      	ldrh	r3, [r7, #0]
 800b660:	f8ab 0000 	strh.w	r0, [fp]
 800b664:	f8aa 3000 	strh.w	r3, [sl]
 800b668:	e789      	b.n	800b57e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b66a:	462a      	mov	r2, r5
 800b66c:	ab0a      	add	r3, sp, #40	@ 0x28
 800b66e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b672:	6851      	ldr	r1, [r2, #4]
 800b674:	c303      	stmia	r3!, {r0, r1}
 800b676:	e7a9      	b.n	800b5cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b678:	a807      	add	r0, sp, #28
 800b67a:	f007 fff5 	bl	8013668 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b67e:	4606      	mov	r6, r0
 800b680:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800b682:	6803      	ldr	r3, [r0, #0]
 800b684:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b686:	4798      	blx	r3
 800b688:	4286      	cmp	r6, r0
 800b68a:	d1b8      	bne.n	800b5fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b68c:	f7f7 fc5c 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 800b690:	6803      	ldr	r3, [r0, #0]
 800b692:	4606      	mov	r6, r0
 800b694:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b696:	9305      	str	r3, [sp, #20]
 800b698:	a807      	add	r0, sp, #28
 800b69a:	f007 ffe5 	bl	8013668 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b69e:	9b05      	ldr	r3, [sp, #20]
 800b6a0:	4601      	mov	r1, r0
 800b6a2:	4630      	mov	r0, r6
 800b6a4:	4798      	blx	r3
 800b6a6:	f080 0001 	eor.w	r0, r0, #1
 800b6aa:	b2c0      	uxtb	r0, r0
 800b6ac:	e7a8      	b.n	800b600 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b6ae:	bf00      	nop
 800b6b0:	20014032 	.word	0x20014032
 800b6b4:	20014034 	.word	0x20014034
 800b6b8:	20014036 	.word	0x20014036
 800b6bc:	20014038 	.word	0x20014038
 800b6c0:	2001403a 	.word	0x2001403a

0800b6c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b6c4:	b510      	push	{r4, lr}
 800b6c6:	4b07      	ldr	r3, [pc, #28]	@ (800b6e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b6c8:	781b      	ldrb	r3, [r3, #0]
 800b6ca:	4604      	mov	r4, r0
 800b6cc:	b13b      	cbz	r3, 800b6de <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b6ce:	6803      	ldr	r3, [r0, #0]
 800b6d0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b6d2:	4798      	blx	r3
 800b6d4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b6d6:	4283      	cmp	r3, r0
 800b6d8:	d101      	bne.n	800b6de <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b6da:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800b6dc:	bd10      	pop	{r4, pc}
 800b6de:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800b6e0:	e7fc      	b.n	800b6dc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b6e2:	bf00      	nop
 800b6e4:	2001403c 	.word	0x2001403c

0800b6e8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b6e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b6ec:	b08a      	sub	sp, #40	@ 0x28
 800b6ee:	461d      	mov	r5, r3
 800b6f0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800b6f4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b6f8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b6fc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b700:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b704:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b708:	2400      	movs	r4, #0
 800b70a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b70e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800b712:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b716:	4690      	mov	r8, r2
 800b718:	4607      	mov	r7, r0
 800b71a:	9404      	str	r4, [sp, #16]
 800b71c:	f88d 4020 	strb.w	r4, [sp, #32]
 800b720:	f7ff ffd0 	bl	800b6c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b724:	fb06 8505 	mla	r5, r6, r5, r8
 800b728:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b72c:	6878      	ldr	r0, [r7, #4]
 800b72e:	9505      	str	r5, [sp, #20]
 800b730:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b734:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b738:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800b73c:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b740:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b744:	6803      	ldr	r3, [r0, #0]
 800b746:	a901      	add	r1, sp, #4
 800b748:	685b      	ldr	r3, [r3, #4]
 800b74a:	4798      	blx	r3
 800b74c:	b00a      	add	sp, #40	@ 0x28
 800b74e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b752 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b752:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b756:	b08b      	sub	sp, #44	@ 0x2c
 800b758:	2400      	movs	r4, #0
 800b75a:	461d      	mov	r5, r3
 800b75c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800b760:	4688      	mov	r8, r1
 800b762:	4691      	mov	r9, r2
 800b764:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800b768:	9404      	str	r4, [sp, #16]
 800b76a:	4607      	mov	r7, r0
 800b76c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b770:	f7ff ffa8 	bl	800b6c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b774:	fb06 9505 	mla	r5, r6, r5, r9
 800b778:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b77c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b780:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b784:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b788:	6878      	ldr	r0, [r7, #4]
 800b78a:	9505      	str	r5, [sp, #20]
 800b78c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b790:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b794:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b798:	f8cd 8010 	str.w	r8, [sp, #16]
 800b79c:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b7a0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b7a4:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800b7a8:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800b7ac:	6803      	ldr	r3, [r0, #0]
 800b7ae:	a901      	add	r1, sp, #4
 800b7b0:	685b      	ldr	r3, [r3, #4]
 800b7b2:	4798      	blx	r3
 800b7b4:	b00b      	add	sp, #44	@ 0x2c
 800b7b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b7bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b7bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7c0:	b08a      	sub	sp, #40	@ 0x28
 800b7c2:	4698      	mov	r8, r3
 800b7c4:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800b7c8:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800b7cc:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800b7d0:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800b7d4:	2300      	movs	r3, #0
 800b7d6:	2d0b      	cmp	r5, #11
 800b7d8:	4606      	mov	r6, r0
 800b7da:	9304      	str	r3, [sp, #16]
 800b7dc:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800b7e0:	d138      	bne.n	800b854 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b7e2:	2380      	movs	r3, #128	@ 0x80
 800b7e4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b7e8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b7ec:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b7f0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b7f4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b7f8:	f88d 0020 	strb.w	r0, [sp, #32]
 800b7fc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800b800:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b804:	4630      	mov	r0, r6
 800b806:	9203      	str	r2, [sp, #12]
 800b808:	f7ff ff5c 	bl	800b6c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b80c:	2c0b      	cmp	r4, #11
 800b80e:	bf98      	it	ls
 800b810:	4b1b      	ldrls	r3, [pc, #108]	@ (800b880 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b812:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800b816:	bf98      	it	ls
 800b818:	5d19      	ldrbls	r1, [r3, r4]
 800b81a:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b81e:	bf88      	it	hi
 800b820:	2100      	movhi	r1, #0
 800b822:	fb02 8307 	mla	r3, r2, r7, r8
 800b826:	10c9      	asrs	r1, r1, #3
 800b828:	fb01 0003 	mla	r0, r1, r3, r0
 800b82c:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800b830:	9005      	str	r0, [sp, #20]
 800b832:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b836:	6870      	ldr	r0, [r6, #4]
 800b838:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800b83c:	2300      	movs	r3, #0
 800b83e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800b842:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b846:	6803      	ldr	r3, [r0, #0]
 800b848:	a901      	add	r1, sp, #4
 800b84a:	685b      	ldr	r3, [r3, #4]
 800b84c:	4798      	blx	r3
 800b84e:	b00a      	add	sp, #40	@ 0x28
 800b850:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b854:	2d02      	cmp	r5, #2
 800b856:	d109      	bne.n	800b86c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b858:	28ff      	cmp	r0, #255	@ 0xff
 800b85a:	d105      	bne.n	800b868 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b85c:	f1bc 0f00 	cmp.w	ip, #0
 800b860:	bf14      	ite	ne
 800b862:	2340      	movne	r3, #64	@ 0x40
 800b864:	2320      	moveq	r3, #32
 800b866:	e7bd      	b.n	800b7e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b868:	2340      	movs	r3, #64	@ 0x40
 800b86a:	e7bb      	b.n	800b7e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b86c:	28ff      	cmp	r0, #255	@ 0xff
 800b86e:	d105      	bne.n	800b87c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b870:	f1bc 0f00 	cmp.w	ip, #0
 800b874:	bf14      	ite	ne
 800b876:	2304      	movne	r3, #4
 800b878:	2301      	moveq	r3, #1
 800b87a:	e7b3      	b.n	800b7e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b87c:	2304      	movs	r3, #4
 800b87e:	e7b1      	b.n	800b7e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b880:	08025a04 	.word	0x08025a04

0800b884 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b888:	b08b      	sub	sp, #44	@ 0x2c
 800b88a:	461d      	mov	r5, r3
 800b88c:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800b890:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b894:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800b898:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800b89c:	bf14      	ite	ne
 800b89e:	2308      	movne	r3, #8
 800b8a0:	2302      	moveq	r3, #2
 800b8a2:	2400      	movs	r4, #0
 800b8a4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b8a8:	4688      	mov	r8, r1
 800b8aa:	4693      	mov	fp, r2
 800b8ac:	9404      	str	r4, [sp, #16]
 800b8ae:	4607      	mov	r7, r0
 800b8b0:	f7ff ff08 	bl	800b6c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b8b4:	2e0b      	cmp	r6, #11
 800b8b6:	bf98      	it	ls
 800b8b8:	4b15      	ldrls	r3, [pc, #84]	@ (800b910 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b8ba:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800b8be:	bf98      	it	ls
 800b8c0:	5d9c      	ldrbls	r4, [r3, r6]
 800b8c2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800b8c6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b8ca:	fb05 b50a 	mla	r5, r5, sl, fp
 800b8ce:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b8d2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b8d6:	10e4      	asrs	r4, r4, #3
 800b8d8:	fb04 0405 	mla	r4, r4, r5, r0
 800b8dc:	2300      	movs	r3, #0
 800b8de:	6878      	ldr	r0, [r7, #4]
 800b8e0:	9405      	str	r4, [sp, #20]
 800b8e2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b8e6:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b8ea:	f8cd 8010 	str.w	r8, [sp, #16]
 800b8ee:	f88d 9020 	strb.w	r9, [sp, #32]
 800b8f2:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800b8f6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800b8fa:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800b8fe:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800b902:	6803      	ldr	r3, [r0, #0]
 800b904:	a901      	add	r1, sp, #4
 800b906:	685b      	ldr	r3, [r3, #4]
 800b908:	4798      	blx	r3
 800b90a:	b00b      	add	sp, #44	@ 0x2c
 800b90c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b910:	08025a04 	.word	0x08025a04

0800b914 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b918:	461e      	mov	r6, r3
 800b91a:	4b0a      	ldr	r3, [pc, #40]	@ (800b944 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b91c:	460f      	mov	r7, r1
 800b91e:	881d      	ldrh	r5, [r3, #0]
 800b920:	4690      	mov	r8, r2
 800b922:	f7f7 fb11 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 800b926:	6803      	ldr	r3, [r0, #0]
 800b928:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b92a:	4798      	blx	r3
 800b92c:	280b      	cmp	r0, #11
 800b92e:	bf9a      	itte	ls
 800b930:	4b05      	ldrls	r3, [pc, #20]	@ (800b948 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b932:	5c1c      	ldrbls	r4, [r3, r0]
 800b934:	2400      	movhi	r4, #0
 800b936:	fb08 7005 	mla	r0, r8, r5, r7
 800b93a:	10e4      	asrs	r4, r4, #3
 800b93c:	fb04 6000 	mla	r0, r4, r0, r6
 800b940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b944:	20014038 	.word	0x20014038
 800b948:	08025a04 	.word	0x08025a04

0800b94c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b94c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b94e:	b08b      	sub	sp, #44	@ 0x2c
 800b950:	461f      	mov	r7, r3
 800b952:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800b956:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b95a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800b95e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b962:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800b966:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b96a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800b96e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b972:	2500      	movs	r5, #0
 800b974:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800b978:	f88d 3020 	strb.w	r3, [sp, #32]
 800b97c:	4604      	mov	r4, r0
 800b97e:	4616      	mov	r6, r2
 800b980:	9504      	str	r5, [sp, #16]
 800b982:	f7ff fe9f 	bl	800b6c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b986:	463a      	mov	r2, r7
 800b988:	4631      	mov	r1, r6
 800b98a:	4603      	mov	r3, r0
 800b98c:	4620      	mov	r0, r4
 800b98e:	f7ff ffc1 	bl	800b914 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b992:	4b0e      	ldr	r3, [pc, #56]	@ (800b9cc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b994:	9005      	str	r0, [sp, #20]
 800b996:	881b      	ldrh	r3, [r3, #0]
 800b998:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b99c:	f7f7 fad4 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 800b9a0:	6803      	ldr	r3, [r0, #0]
 800b9a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b9a4:	4798      	blx	r3
 800b9a6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800b9a8:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800b9ac:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800b9b0:	9304      	str	r3, [sp, #16]
 800b9b2:	6860      	ldr	r0, [r4, #4]
 800b9b4:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800b9b8:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800b9bc:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800b9c0:	6803      	ldr	r3, [r0, #0]
 800b9c2:	a901      	add	r1, sp, #4
 800b9c4:	685b      	ldr	r3, [r3, #4]
 800b9c6:	4798      	blx	r3
 800b9c8:	b00b      	add	sp, #44	@ 0x2c
 800b9ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9cc:	20014038 	.word	0x20014038

0800b9d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b9d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b9d2:	b08d      	sub	sp, #52	@ 0x34
 800b9d4:	466b      	mov	r3, sp
 800b9d6:	e883 0006 	stmia.w	r3, {r1, r2}
 800b9da:	2300      	movs	r3, #0
 800b9dc:	9306      	str	r3, [sp, #24]
 800b9de:	6803      	ldr	r3, [r0, #0]
 800b9e0:	f8bd 6000 	ldrh.w	r6, [sp]
 800b9e4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b9e6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b9ea:	2501      	movs	r5, #1
 800b9ec:	9503      	str	r5, [sp, #12]
 800b9ee:	4604      	mov	r4, r0
 800b9f0:	4798      	blx	r3
 800b9f2:	463a      	mov	r2, r7
 800b9f4:	4631      	mov	r1, r6
 800b9f6:	4603      	mov	r3, r0
 800b9f8:	4620      	mov	r0, r4
 800b9fa:	f7ff ff8b 	bl	800b914 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b9fe:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800ba00:	9307      	str	r3, [sp, #28]
 800ba02:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ba06:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ba0a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ba0e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800ba12:	4b0f      	ldr	r3, [pc, #60]	@ (800ba50 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800ba14:	9004      	str	r0, [sp, #16]
 800ba16:	881b      	ldrh	r3, [r3, #0]
 800ba18:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800ba1c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800ba20:	f7f7 fa92 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 800ba24:	6803      	ldr	r3, [r0, #0]
 800ba26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ba28:	4798      	blx	r3
 800ba2a:	23ff      	movs	r3, #255	@ 0xff
 800ba2c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800ba30:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800ba34:	6860      	ldr	r0, [r4, #4]
 800ba36:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800ba3a:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800ba3e:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800ba42:	6803      	ldr	r3, [r0, #0]
 800ba44:	a903      	add	r1, sp, #12
 800ba46:	685b      	ldr	r3, [r3, #4]
 800ba48:	4798      	blx	r3
 800ba4a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800ba4c:	b00d      	add	sp, #52	@ 0x34
 800ba4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba50:	20014038 	.word	0x20014038

0800ba54 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800ba54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba58:	b08c      	sub	sp, #48	@ 0x30
 800ba5a:	461e      	mov	r6, r3
 800ba5c:	466d      	mov	r5, sp
 800ba5e:	2300      	movs	r3, #0
 800ba60:	e885 0006 	stmia.w	r5, {r1, r2}
 800ba64:	9306      	str	r3, [sp, #24]
 800ba66:	6803      	ldr	r3, [r0, #0]
 800ba68:	f8bd 7000 	ldrh.w	r7, [sp]
 800ba6c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ba6e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800ba72:	2501      	movs	r5, #1
 800ba74:	9503      	str	r5, [sp, #12]
 800ba76:	4604      	mov	r4, r0
 800ba78:	4798      	blx	r3
 800ba7a:	4642      	mov	r2, r8
 800ba7c:	4639      	mov	r1, r7
 800ba7e:	4603      	mov	r3, r0
 800ba80:	4620      	mov	r0, r4
 800ba82:	f7ff ff47 	bl	800b914 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba86:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ba8a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ba8e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ba92:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800ba96:	4b11      	ldr	r3, [pc, #68]	@ (800badc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800ba98:	9004      	str	r0, [sp, #16]
 800ba9a:	881b      	ldrh	r3, [r3, #0]
 800ba9c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800baa0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800baa2:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800baa6:	9607      	str	r6, [sp, #28]
 800baa8:	f7f7 fa4e 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 800baac:	6803      	ldr	r3, [r0, #0]
 800baae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bab0:	4798      	blx	r3
 800bab2:	23ff      	movs	r3, #255	@ 0xff
 800bab4:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800bab8:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800babc:	6860      	ldr	r0, [r4, #4]
 800babe:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800bac2:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800bac6:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800baca:	6803      	ldr	r3, [r0, #0]
 800bacc:	a903      	add	r1, sp, #12
 800bace:	685b      	ldr	r3, [r3, #4]
 800bad0:	4798      	blx	r3
 800bad2:	4630      	mov	r0, r6
 800bad4:	b00c      	add	sp, #48	@ 0x30
 800bad6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bada:	bf00      	nop
 800badc:	20014038 	.word	0x20014038

0800bae0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800bae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bae2:	b085      	sub	sp, #20
 800bae4:	ac02      	add	r4, sp, #8
 800bae6:	e884 0006 	stmia.w	r4, {r1, r2}
 800baea:	4605      	mov	r5, r0
 800baec:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800baf0:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800baf4:	f7ff fde6 	bl	800b6c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800baf8:	463a      	mov	r2, r7
 800bafa:	4603      	mov	r3, r0
 800bafc:	4631      	mov	r1, r6
 800bafe:	4628      	mov	r0, r5
 800bb00:	f7ff ff08 	bl	800b914 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bb04:	4a05      	ldr	r2, [pc, #20]	@ (800bb1c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800bb06:	682b      	ldr	r3, [r5, #0]
 800bb08:	8812      	ldrh	r2, [r2, #0]
 800bb0a:	9200      	str	r2, [sp, #0]
 800bb0c:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800bb0e:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bb12:	4603      	mov	r3, r0
 800bb14:	4628      	mov	r0, r5
 800bb16:	47b0      	blx	r6
 800bb18:	b005      	add	sp, #20
 800bb1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb1c:	20014038 	.word	0x20014038

0800bb20 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bb20:	b570      	push	{r4, r5, r6, lr}
 800bb22:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800bb26:	4604      	mov	r4, r0
 800bb28:	b19b      	cbz	r3, 800bb52 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bb2a:	2002      	movs	r0, #2
 800bb2c:	f7f5 f8cc 	bl	8000cc8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bb30:	2300      	movs	r3, #0
 800bb32:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800bb36:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800bb3a:	6823      	ldr	r3, [r4, #0]
 800bb3c:	4620      	mov	r0, r4
 800bb3e:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800bb42:	f7ff fdbf 	bl	800b6c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb46:	462b      	mov	r3, r5
 800bb48:	4601      	mov	r1, r0
 800bb4a:	4620      	mov	r0, r4
 800bb4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb50:	4718      	bx	r3
 800bb52:	bd70      	pop	{r4, r5, r6, pc}

0800bb54 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bb54:	b538      	push	{r3, r4, r5, lr}
 800bb56:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800bb5a:	428b      	cmp	r3, r1
 800bb5c:	4604      	mov	r4, r0
 800bb5e:	460d      	mov	r5, r1
 800bb60:	d006      	beq.n	800bb70 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bb62:	6803      	ldr	r3, [r0, #0]
 800bb64:	b929      	cbnz	r1, 800bb72 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bb66:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800bb6a:	4798      	blx	r3
 800bb6c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800bb70:	bd38      	pop	{r3, r4, r5, pc}
 800bb72:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800bb76:	e7f8      	b.n	800bb6a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bb78 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bb78:	b510      	push	{r4, lr}
 800bb7a:	4b0c      	ldr	r3, [pc, #48]	@ (800bbac <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800bb7c:	781b      	ldrb	r3, [r3, #0]
 800bb7e:	4604      	mov	r4, r0
 800bb80:	b953      	cbnz	r3, 800bb98 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bb82:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800bb86:	b93b      	cbnz	r3, 800bb98 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bb88:	6840      	ldr	r0, [r0, #4]
 800bb8a:	f000 f92b 	bl	800bde4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bb8e:	b118      	cbz	r0, 800bb98 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800bb90:	6862      	ldr	r2, [r4, #4]
 800bb92:	7a53      	ldrb	r3, [r2, #9]
 800bb94:	2b00      	cmp	r3, #0
 800bb96:	d0fc      	beq.n	800bb92 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800bb98:	f7f5 f9e2 	bl	8000f60 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bb9c:	4620      	mov	r0, r4
 800bb9e:	2100      	movs	r1, #0
 800bba0:	f7ff ffd8 	bl	800bb54 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bba4:	4620      	mov	r0, r4
 800bba6:	f7ff fd8d 	bl	800b6c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bbaa:	bd10      	pop	{r4, pc}
 800bbac:	2001403c 	.word	0x2001403c

0800bbb0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bbb0:	b570      	push	{r4, r5, r6, lr}
 800bbb2:	4604      	mov	r4, r0
 800bbb4:	6803      	ldr	r3, [r0, #0]
 800bbb6:	b919      	cbnz	r1, 800bbc0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bbb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bbba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbbe:	4718      	bx	r3
 800bbc0:	2200      	movs	r2, #0
 800bbc2:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800bbc6:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800bbca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bbcc:	4798      	blx	r3
 800bbce:	6863      	ldr	r3, [r4, #4]
 800bbd0:	2101      	movs	r1, #1
 800bbd2:	4605      	mov	r5, r0
 800bbd4:	7299      	strb	r1, [r3, #10]
 800bbd6:	4620      	mov	r0, r4
 800bbd8:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800bbdc:	f7ff ffba 	bl	800bb54 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bbe0:	4628      	mov	r0, r5
 800bbe2:	bd70      	pop	{r4, r5, r6, pc}

0800bbe4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bbe4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bbe8:	1a13      	subs	r3, r2, r0
 800bbea:	4258      	negs	r0, r3
 800bbec:	4158      	adcs	r0, r3
 800bbee:	4770      	bx	lr

0800bbf0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bbf0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bbf4:	1a9b      	subs	r3, r3, r2
 800bbf6:	2b00      	cmp	r3, #0
 800bbf8:	bfdc      	itt	le
 800bbfa:	6882      	ldrle	r2, [r0, #8]
 800bbfc:	189b      	addle	r3, r3, r2
 800bbfe:	2b01      	cmp	r3, #1
 800bc00:	bfcc      	ite	gt
 800bc02:	2000      	movgt	r0, #0
 800bc04:	2001      	movle	r0, #1
 800bc06:	4770      	bx	lr

0800bc08 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bc08:	6902      	ldr	r2, [r0, #16]
 800bc0a:	6843      	ldr	r3, [r0, #4]
 800bc0c:	2024      	movs	r0, #36	@ 0x24
 800bc0e:	fb00 3002 	mla	r0, r0, r2, r3
 800bc12:	4770      	bx	lr

0800bc14 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bc14:	6803      	ldr	r3, [r0, #0]
 800bc16:	691b      	ldr	r3, [r3, #16]
 800bc18:	4718      	bx	r3

0800bc1a <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bc1a:	b570      	push	{r4, r5, r6, lr}
 800bc1c:	2301      	movs	r3, #1
 800bc1e:	7203      	strb	r3, [r0, #8]
 800bc20:	4604      	mov	r4, r0
 800bc22:	6840      	ldr	r0, [r0, #4]
 800bc24:	6803      	ldr	r3, [r0, #0]
 800bc26:	699b      	ldr	r3, [r3, #24]
 800bc28:	4798      	blx	r3
 800bc2a:	6803      	ldr	r3, [r0, #0]
 800bc2c:	2b40      	cmp	r3, #64	@ 0x40
 800bc2e:	4605      	mov	r5, r0
 800bc30:	d00c      	beq.n	800bc4c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc32:	d810      	bhi.n	800bc56 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bc34:	2b04      	cmp	r3, #4
 800bc36:	d01d      	beq.n	800bc74 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bc38:	d804      	bhi.n	800bc44 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bc3a:	2b01      	cmp	r3, #1
 800bc3c:	d006      	beq.n	800bc4c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc3e:	2b02      	cmp	r3, #2
 800bc40:	d02c      	beq.n	800bc9c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bc42:	bd70      	pop	{r4, r5, r6, pc}
 800bc44:	2b08      	cmp	r3, #8
 800bc46:	d01d      	beq.n	800bc84 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bc48:	2b20      	cmp	r3, #32
 800bc4a:	d1fa      	bne.n	800bc42 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bc4c:	6823      	ldr	r3, [r4, #0]
 800bc4e:	4620      	mov	r0, r4
 800bc50:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bc52:	4798      	blx	r3
 800bc54:	e013      	b.n	800bc7e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bc56:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800bc5a:	d0f7      	beq.n	800bc4c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc5c:	d804      	bhi.n	800bc68 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bc5e:	2b80      	cmp	r3, #128	@ 0x80
 800bc60:	d0f4      	beq.n	800bc4c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc62:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800bc66:	e7f0      	b.n	800bc4a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bc68:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800bc6c:	d0ee      	beq.n	800bc4c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc6e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bc72:	e7e5      	b.n	800bc40 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bc74:	6823      	ldr	r3, [r4, #0]
 800bc76:	7f01      	ldrb	r1, [r0, #28]
 800bc78:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bc7a:	4620      	mov	r0, r4
 800bc7c:	4798      	blx	r3
 800bc7e:	6823      	ldr	r3, [r4, #0]
 800bc80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bc82:	e006      	b.n	800bc92 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bc84:	6823      	ldr	r3, [r4, #0]
 800bc86:	7f01      	ldrb	r1, [r0, #28]
 800bc88:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bc8a:	4620      	mov	r0, r4
 800bc8c:	4798      	blx	r3
 800bc8e:	6823      	ldr	r3, [r4, #0]
 800bc90:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bc92:	4629      	mov	r1, r5
 800bc94:	4620      	mov	r0, r4
 800bc96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc9a:	4718      	bx	r3
 800bc9c:	6823      	ldr	r3, [r4, #0]
 800bc9e:	4620      	mov	r0, r4
 800bca0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800bca2:	4798      	blx	r3
 800bca4:	e7f3      	b.n	800bc8e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bca6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bca6:	4770      	bx	lr

0800bca8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bca8:	4770      	bx	lr

0800bcaa <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bcaa:	4770      	bx	lr

0800bcac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bcac:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bcb0:	1ad2      	subs	r2, r2, r3
 800bcb2:	2a00      	cmp	r2, #0
 800bcb4:	b510      	push	{r4, lr}
 800bcb6:	bfdc      	itt	le
 800bcb8:	6884      	ldrle	r4, [r0, #8]
 800bcba:	1912      	addle	r2, r2, r4
 800bcbc:	2a01      	cmp	r2, #1
 800bcbe:	dd16      	ble.n	800bcee <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bcc0:	6842      	ldr	r2, [r0, #4]
 800bcc2:	2424      	movs	r4, #36	@ 0x24
 800bcc4:	fb04 2303 	mla	r3, r4, r3, r2
 800bcc8:	f101 0220 	add.w	r2, r1, #32
 800bccc:	f851 4b04 	ldr.w	r4, [r1], #4
 800bcd0:	f843 4b04 	str.w	r4, [r3], #4
 800bcd4:	4291      	cmp	r1, r2
 800bcd6:	d1f9      	bne.n	800bccc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bcd8:	780a      	ldrb	r2, [r1, #0]
 800bcda:	701a      	strb	r2, [r3, #0]
 800bcdc:	68c3      	ldr	r3, [r0, #12]
 800bcde:	6882      	ldr	r2, [r0, #8]
 800bce0:	f3bf 8f5b 	dmb	ish
 800bce4:	3301      	adds	r3, #1
 800bce6:	429a      	cmp	r2, r3
 800bce8:	bfd8      	it	le
 800bcea:	1a9b      	suble	r3, r3, r2
 800bcec:	60c3      	str	r3, [r0, #12]
 800bcee:	bd10      	pop	{r4, pc}

0800bcf0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bcf0:	6903      	ldr	r3, [r0, #16]
 800bcf2:	6882      	ldr	r2, [r0, #8]
 800bcf4:	f3bf 8f5b 	dmb	ish
 800bcf8:	3301      	adds	r3, #1
 800bcfa:	429a      	cmp	r2, r3
 800bcfc:	bfd8      	it	le
 800bcfe:	1a9b      	suble	r3, r3, r2
 800bd00:	6103      	str	r3, [r0, #16]
 800bd02:	4770      	bx	lr

0800bd04 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bd04:	b570      	push	{r4, r5, r6, lr}
 800bd06:	4604      	mov	r4, r0
 800bd08:	460e      	mov	r6, r1
 800bd0a:	6860      	ldr	r0, [r4, #4]
 800bd0c:	6803      	ldr	r3, [r0, #0]
 800bd0e:	685b      	ldr	r3, [r3, #4]
 800bd10:	4798      	blx	r3
 800bd12:	2800      	cmp	r0, #0
 800bd14:	d1f9      	bne.n	800bd0a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bd16:	4d0d      	ldr	r5, [pc, #52]	@ (800bd4c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bd18:	6828      	ldr	r0, [r5, #0]
 800bd1a:	6803      	ldr	r3, [r0, #0]
 800bd1c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800bd20:	4798      	blx	r3
 800bd22:	f7f5 f92b 	bl	8000f7c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bd26:	6828      	ldr	r0, [r5, #0]
 800bd28:	2101      	movs	r1, #1
 800bd2a:	f7ff ff13 	bl	800bb54 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bd2e:	6860      	ldr	r0, [r4, #4]
 800bd30:	6803      	ldr	r3, [r0, #0]
 800bd32:	4631      	mov	r1, r6
 800bd34:	689b      	ldr	r3, [r3, #8]
 800bd36:	4798      	blx	r3
 800bd38:	6823      	ldr	r3, [r4, #0]
 800bd3a:	4620      	mov	r0, r4
 800bd3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bd3e:	4798      	blx	r3
 800bd40:	6828      	ldr	r0, [r5, #0]
 800bd42:	6803      	ldr	r3, [r0, #0]
 800bd44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd48:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800bd4a:	4718      	bx	r3
 800bd4c:	20014040 	.word	0x20014040

0800bd50 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bd50:	b508      	push	{r3, lr}
 800bd52:	f7f5 f905 	bl	8000f60 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bd56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bd5a:	f7f5 b909 	b.w	8000f70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bd5e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bd5e:	b510      	push	{r4, lr}
 800bd60:	2114      	movs	r1, #20
 800bd62:	4604      	mov	r4, r0
 800bd64:	f016 fb89 	bl	802247a <_ZdlPvj>
 800bd68:	4620      	mov	r0, r4
 800bd6a:	bd10      	pop	{r4, pc}

0800bd6c <_ZN8touchgfx13DMA_Interface5startEv>:
 800bd6c:	b510      	push	{r4, lr}
 800bd6e:	4604      	mov	r4, r0
 800bd70:	6840      	ldr	r0, [r0, #4]
 800bd72:	6803      	ldr	r3, [r0, #0]
 800bd74:	681b      	ldr	r3, [r3, #0]
 800bd76:	4798      	blx	r3
 800bd78:	b948      	cbnz	r0, 800bd8e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd7a:	7a63      	ldrb	r3, [r4, #9]
 800bd7c:	b13b      	cbz	r3, 800bd8e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd7e:	7a23      	ldrb	r3, [r4, #8]
 800bd80:	b92b      	cbnz	r3, 800bd8e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bd82:	6823      	ldr	r3, [r4, #0]
 800bd84:	4620      	mov	r0, r4
 800bd86:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bd88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd8c:	4718      	bx	r3
 800bd8e:	bd10      	pop	{r4, pc}

0800bd90 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bd90:	b570      	push	{r4, r5, r6, lr}
 800bd92:	4604      	mov	r4, r0
 800bd94:	6840      	ldr	r0, [r0, #4]
 800bd96:	6803      	ldr	r3, [r0, #0]
 800bd98:	681b      	ldr	r3, [r3, #0]
 800bd9a:	4798      	blx	r3
 800bd9c:	4605      	mov	r5, r0
 800bd9e:	b930      	cbnz	r0, 800bdae <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bda0:	7a23      	ldrb	r3, [r4, #8]
 800bda2:	b123      	cbz	r3, 800bdae <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bda4:	6860      	ldr	r0, [r4, #4]
 800bda6:	6803      	ldr	r3, [r0, #0]
 800bda8:	695b      	ldr	r3, [r3, #20]
 800bdaa:	4798      	blx	r3
 800bdac:	7225      	strb	r5, [r4, #8]
 800bdae:	6860      	ldr	r0, [r4, #4]
 800bdb0:	6803      	ldr	r3, [r0, #0]
 800bdb2:	681b      	ldr	r3, [r3, #0]
 800bdb4:	4798      	blx	r3
 800bdb6:	b928      	cbnz	r0, 800bdc4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bdb8:	6823      	ldr	r3, [r4, #0]
 800bdba:	4620      	mov	r0, r4
 800bdbc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bdbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdc2:	4718      	bx	r3
 800bdc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdc8:	f7f5 b8e0 	b.w	8000f8c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bdcc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bdcc:	b510      	push	{r4, lr}
 800bdce:	4c04      	ldr	r4, [pc, #16]	@ (800bde0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bdd0:	6082      	str	r2, [r0, #8]
 800bdd2:	2200      	movs	r2, #0
 800bdd4:	e9c0 4100 	strd	r4, r1, [r0]
 800bdd8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bddc:	bd10      	pop	{r4, pc}
 800bdde:	bf00      	nop
 800bde0:	08025a18 	.word	0x08025a18

0800bde4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bde4:	6840      	ldr	r0, [r0, #4]
 800bde6:	6803      	ldr	r3, [r0, #0]
 800bde8:	681b      	ldr	r3, [r3, #0]
 800bdea:	4718      	bx	r3
 800bdec:	0000      	movs	r0, r0
	...

0800bdf0 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800bdf0:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800bdf4:	4f20      	ldr	r7, [pc, #128]	@ (800be78 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800bdf6:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800bdfa:	fb80 0101 	smull	r0, r1, r0, r1
 800bdfe:	fba0 bc07 	umull	fp, ip, r0, r7
 800be02:	fb07 cc01 	mla	ip, r7, r1, ip
 800be06:	fb0b f70c 	mul.w	r7, fp, ip
 800be0a:	fbab 010b 	umull	r0, r1, fp, fp
 800be0e:	461c      	mov	r4, r3
 800be10:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800be14:	fb00 f30c 	mul.w	r3, r0, ip
 800be18:	fb0b 3301 	mla	r3, fp, r1, r3
 800be1c:	fba0 010b 	umull	r0, r1, r0, fp
 800be20:	4616      	mov	r6, r2
 800be22:	4419      	add	r1, r3
 800be24:	a312      	add	r3, pc, #72	@ (adr r3, 800be70 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800be26:	e9d3 2300 	ldrd	r2, r3, [r3]
 800be2a:	f7f4 fc1d 	bl	8000668 <__aeabi_ldivmod>
 800be2e:	2ef7      	cmp	r6, #247	@ 0xf7
 800be30:	b290      	uxth	r0, r2
 800be32:	bf9e      	ittt	ls
 800be34:	f002 0207 	andls.w	r2, r2, #7
 800be38:	18b6      	addls	r6, r6, r2
 800be3a:	b2f6      	uxtbls	r6, r6
 800be3c:	2cfb      	cmp	r4, #251	@ 0xfb
 800be3e:	bf9e      	ittt	ls
 800be40:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800be44:	18e4      	addls	r4, r4, r3
 800be46:	b2e4      	uxtbls	r4, r4
 800be48:	2df7      	cmp	r5, #247	@ 0xf7
 800be4a:	bf9c      	itt	ls
 800be4c:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800be50:	182d      	addls	r5, r5, r0
 800be52:	480a      	ldr	r0, [pc, #40]	@ (800be7c <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800be54:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800be58:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800be5c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800be60:	bf98      	it	ls
 800be62:	b2ed      	uxtbls	r5, r5
 800be64:	4304      	orrs	r4, r0
 800be66:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800be6a:	b280      	uxth	r0, r0
 800be6c:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800be70:	797a8d77 	.word	0x797a8d77
 800be74:	00000000 	.word	0x00000000
 800be78:	00ec4ba7 	.word	0x00ec4ba7
 800be7c:	fffff800 	.word	0xfffff800

0800be80 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800be80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be84:	ed2d 8b02 	vpush	{d8}
 800be88:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800be8c:	b087      	sub	sp, #28
 800be8e:	7c41      	ldrb	r1, [r0, #17]
 800be90:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800be94:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800be98:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800be9c:	4605      	mov	r5, r0
 800be9e:	2900      	cmp	r1, #0
 800bea0:	f000 809a 	beq.w	800bfd8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800bea4:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800bea8:	ed90 7a08 	vldr	s14, [r0, #32]
 800beac:	68c0      	ldr	r0, [r0, #12]
 800beae:	454a      	cmp	r2, r9
 800beb0:	db25      	blt.n	800befe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800beb2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800beb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800beba:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800bebe:	bfc8      	it	gt
 800bec0:	2200      	movgt	r2, #0
 800bec2:	5882      	ldr	r2, [r0, r2]
 800bec4:	2100      	movs	r1, #0
 800bec6:	7c2d      	ldrb	r5, [r5, #16]
 800bec8:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800becc:	0950      	lsrs	r0, r2, #5
 800bece:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800bed2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800bed6:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800beda:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800bede:	2d00      	cmp	r5, #0
 800bee0:	d044      	beq.n	800bf6c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800bee2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800bee6:	d141      	bne.n	800bf6c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800bee8:	bb61      	cbnz	r1, 800bf44 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800beea:	ea4e 0000 	orr.w	r0, lr, r0
 800beee:	ea4c 0500 	orr.w	r5, ip, r0
 800bef2:	42bc      	cmp	r4, r7
 800bef4:	f080 8217 	bcs.w	800c326 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800bef8:	f824 5b02 	strh.w	r5, [r4], #2
 800befc:	e7f9      	b.n	800bef2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800befe:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800bf02:	454f      	cmp	r7, r9
 800bf04:	dc08      	bgt.n	800bf18 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800bf06:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800bf0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf0e:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800bf12:	bfd8      	it	le
 800bf14:	2200      	movle	r2, #0
 800bf16:	e7d4      	b.n	800bec2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800bf18:	eba9 0202 	sub.w	r2, r9, r2
 800bf1c:	ee07 2a90 	vmov	s15, r2
 800bf20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bf24:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800bf28:	ee67 7a87 	vmul.f32	s15, s15, s14
 800bf2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bf34:	ee17 2a90 	vmov	r2, s15
 800bf38:	bfd8      	it	le
 800bf3a:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800bf3e:	0092      	lsls	r2, r2, #2
 800bf40:	5882      	ldr	r2, [r0, r2]
 800bf42:	e7c0      	b.n	800bec6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800bf44:	b2d5      	uxtb	r5, r2
 800bf46:	fa5f f888 	uxtb.w	r8, r8
 800bf4a:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800bf4e:	461e      	mov	r6, r3
 800bf50:	42bc      	cmp	r4, r7
 800bf52:	f080 81e8 	bcs.w	800c326 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800bf56:	4630      	mov	r0, r6
 800bf58:	9500      	str	r5, [sp, #0]
 800bf5a:	4643      	mov	r3, r8
 800bf5c:	4652      	mov	r2, sl
 800bf5e:	4649      	mov	r1, r9
 800bf60:	f7ff ff46 	bl	800bdf0 <_ZN8touchgfxL10applyNoiseEiihhh>
 800bf64:	3601      	adds	r6, #1
 800bf66:	f824 0b02 	strh.w	r0, [r4], #2
 800bf6a:	e7f1      	b.n	800bf50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800bf6c:	0e12      	lsrs	r2, r2, #24
 800bf6e:	fb02 f20a 	mul.w	r2, r2, sl
 800bf72:	1c53      	adds	r3, r2, #1
 800bf74:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800bf78:	1212      	asrs	r2, r2, #8
 800bf7a:	fb02 f50c 	mul.w	r5, r2, ip
 800bf7e:	fb02 f10e 	mul.w	r1, r2, lr
 800bf82:	4350      	muls	r0, r2
 800bf84:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800c338 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800bf88:	43d2      	mvns	r2, r2
 800bf8a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800bf8e:	26ff      	movs	r6, #255	@ 0xff
 800bf90:	42bc      	cmp	r4, r7
 800bf92:	f080 81c8 	bcs.w	800c326 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800bf96:	f8b4 e000 	ldrh.w	lr, [r4]
 800bf9a:	ea0e 030c 	and.w	r3, lr, ip
 800bf9e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800bfa2:	fb02 1303 	mla	r3, r2, r3, r1
 800bfa6:	fb02 0808 	mla	r8, r2, r8, r0
 800bfaa:	fb93 f3f6 	sdiv	r3, r3, r6
 800bfae:	fb98 f8f6 	sdiv	r8, r8, r6
 800bfb2:	ea03 030c 	and.w	r3, r3, ip
 800bfb6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800bfba:	f00e 0e1f 	and.w	lr, lr, #31
 800bfbe:	ea43 0308 	orr.w	r3, r3, r8
 800bfc2:	fb02 5e0e 	mla	lr, r2, lr, r5
 800bfc6:	fb9e fef6 	sdiv	lr, lr, r6
 800bfca:	f00e 0e1f 	and.w	lr, lr, #31
 800bfce:	ea43 030e 	orr.w	r3, r3, lr
 800bfd2:	f824 3b02 	strh.w	r3, [r4], #2
 800bfd6:	e7db      	b.n	800bf90 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800bfd8:	7c82      	ldrb	r2, [r0, #18]
 800bfda:	2a00      	cmp	r2, #0
 800bfdc:	d04f      	beq.n	800c07e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800bfde:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800bfe2:	ee07 2a90 	vmov	s15, r2
 800bfe6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bfea:	ee07 3a10 	vmov	s14, r3
 800bfee:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800bff2:	461f      	mov	r7, r3
 800bff4:	eef4 6ae7 	vcmpe.f32	s13, s15
 800bff8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bffc:	f200 8095 	bhi.w	800c12a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800c000:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800c004:	ee37 7a87 	vadd.f32	s14, s15, s14
 800c008:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800c00c:	ee37 7a66 	vsub.f32	s14, s14, s13
 800c010:	ee06 6a90 	vmov	s13, r6
 800c014:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800c018:	68ea      	ldr	r2, [r5, #12]
 800c01a:	f895 c010 	ldrb.w	ip, [r5, #16]
 800c01e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800c022:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c026:	bf4a      	itet	mi
 800c028:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800c02c:	9602      	strpl	r6, [sp, #8]
 800c02e:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800c032:	ed95 7a08 	vldr	s14, [r5, #32]
 800c036:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c03a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c03e:	bfc8      	it	gt
 800c040:	2100      	movgt	r1, #0
 800c042:	5852      	ldr	r2, [r2, r1]
 800c044:	9902      	ldr	r1, [sp, #8]
 800c046:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800c04a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800c04e:	0950      	lsrs	r0, r2, #5
 800c050:	9103      	str	r1, [sp, #12]
 800c052:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800c056:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800c05a:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800c05e:	f1bc 0f00 	cmp.w	ip, #0
 800c062:	d024      	beq.n	800c0ae <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800c064:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c068:	d121      	bne.n	800c0ae <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800c06a:	ea4b 0b00 	orr.w	fp, fp, r0
 800c06e:	ea41 010b 	orr.w	r1, r1, fp
 800c072:	9a03      	ldr	r2, [sp, #12]
 800c074:	4294      	cmp	r4, r2
 800c076:	d255      	bcs.n	800c124 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800c078:	f824 1b02 	strh.w	r1, [r4], #2
 800c07c:	e7f9      	b.n	800c072 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800c07e:	ee07 9a10 	vmov	s14, r9
 800c082:	edd0 7a06 	vldr	s15, [r0, #24]
 800c086:	edd0 6a05 	vldr	s13, [r0, #20]
 800c08a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c08e:	ee37 7a67 	vsub.f32	s14, s14, s15
 800c092:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800c096:	ed90 7a08 	vldr	s14, [r0, #32]
 800c09a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c09e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c0a2:	bf44      	itt	mi
 800c0a4:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800c0a8:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800c0ac:	e79d      	b.n	800bfea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800c0ae:	0e12      	lsrs	r2, r2, #24
 800c0b0:	fb02 f20a 	mul.w	r2, r2, sl
 800c0b4:	f102 0c01 	add.w	ip, r2, #1
 800c0b8:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800c0bc:	1212      	asrs	r2, r2, #8
 800c0be:	4350      	muls	r0, r2
 800c0c0:	4351      	muls	r1, r2
 800c0c2:	fb02 fb0b 	mul.w	fp, r2, fp
 800c0c6:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800c338 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c0ca:	9004      	str	r0, [sp, #16]
 800c0cc:	43d2      	mvns	r2, r2
 800c0ce:	9105      	str	r1, [sp, #20]
 800c0d0:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800c0d4:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800c0d8:	9903      	ldr	r1, [sp, #12]
 800c0da:	428c      	cmp	r4, r1
 800c0dc:	d222      	bcs.n	800c124 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800c0de:	8820      	ldrh	r0, [r4, #0]
 800c0e0:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800c0e4:	460f      	mov	r7, r1
 800c0e6:	9904      	ldr	r1, [sp, #16]
 800c0e8:	ea00 0c08 	and.w	ip, r0, r8
 800c0ec:	fb02 bc0c 	mla	ip, r2, ip, fp
 800c0f0:	fb02 1107 	mla	r1, r2, r7, r1
 800c0f4:	fb9c fcfe 	sdiv	ip, ip, lr
 800c0f8:	fb91 f1fe 	sdiv	r1, r1, lr
 800c0fc:	ea0c 0c08 	and.w	ip, ip, r8
 800c100:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800c104:	ea4c 0101 	orr.w	r1, ip, r1
 800c108:	f000 0c1f 	and.w	ip, r0, #31
 800c10c:	9805      	ldr	r0, [sp, #20]
 800c10e:	fb02 0c0c 	mla	ip, r2, ip, r0
 800c112:	fb9c fcfe 	sdiv	ip, ip, lr
 800c116:	f00c 0c1f 	and.w	ip, ip, #31
 800c11a:	ea41 010c 	orr.w	r1, r1, ip
 800c11e:	f824 1b02 	strh.w	r1, [r4], #2
 800c122:	e7d9      	b.n	800c0d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800c124:	9a02      	ldr	r2, [sp, #8]
 800c126:	441a      	add	r2, r3
 800c128:	4617      	mov	r7, r2
 800c12a:	441e      	add	r6, r3
 800c12c:	b236      	sxth	r6, r6
 800c12e:	42be      	cmp	r6, r7
 800c130:	f340 80f9 	ble.w	800c326 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c134:	ed95 7a07 	vldr	s14, [r5, #28]
 800c138:	ee06 7a90 	vmov	s13, r7
 800c13c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800c140:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800c144:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800c148:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c14c:	f340 80b5 	ble.w	800c2ba <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800c150:	ee06 6a10 	vmov	s12, r6
 800c154:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800c158:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800c330 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800c15c:	7c2b      	ldrb	r3, [r5, #16]
 800c15e:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800c162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c166:	bfd8      	it	le
 800c168:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800c16c:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800c334 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800c170:	bfd8      	it	le
 800c172:	ee17 8a10 	vmovle	r8, s14
 800c176:	ed95 7a08 	vldr	s14, [r5, #32]
 800c17a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c17e:	bfc8      	it	gt
 800c180:	46b0      	movgt	r8, r6
 800c182:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800c186:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c18a:	eba8 0707 	sub.w	r7, r8, r7
 800c18e:	bfd8      	it	le
 800c190:	eeb0 8a46 	vmovle.f32	s16, s12
 800c194:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800c198:	eea7 8a27 	vfma.f32	s16, s14, s15
 800c19c:	b1db      	cbz	r3, 800c1d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800c19e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c1a2:	d118      	bne.n	800c1d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800c1a4:	42bc      	cmp	r4, r7
 800c1a6:	d262      	bcs.n	800c26e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800c1a8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c1ac:	68eb      	ldr	r3, [r5, #12]
 800c1ae:	ee17 0a90 	vmov	r0, s15
 800c1b2:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800c1b6:	b2d3      	uxtb	r3, r2
 800c1b8:	9300      	str	r3, [sp, #0]
 800c1ba:	4649      	mov	r1, r9
 800c1bc:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800c1c0:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800c1c4:	f7ff fe14 	bl	800bdf0 <_ZN8touchgfxL10applyNoiseEiihhh>
 800c1c8:	f824 0b02 	strh.w	r0, [r4], #2
 800c1cc:	edd5 7a08 	vldr	s15, [r5, #32]
 800c1d0:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c1d4:	e7e6      	b.n	800c1a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800c1d6:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800c338 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c1da:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800c1de:	42bc      	cmp	r4, r7
 800c1e0:	d245      	bcs.n	800c26e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800c1e2:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c1e6:	68eb      	ldr	r3, [r5, #12]
 800c1e8:	f8b4 e000 	ldrh.w	lr, [r4]
 800c1ec:	ee17 2a90 	vmov	r2, s15
 800c1f0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800c1f4:	0e13      	lsrs	r3, r2, #24
 800c1f6:	fb03 f30a 	mul.w	r3, r3, sl
 800c1fa:	1c58      	adds	r0, r3, #1
 800c1fc:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800c200:	1200      	asrs	r0, r0, #8
 800c202:	ea6f 0c00 	mvn.w	ip, r0
 800c206:	fa5f fc8c 	uxtb.w	ip, ip
 800c20a:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800c20e:	ea0e 030b 	and.w	r3, lr, fp
 800c212:	fb0c f303 	mul.w	r3, ip, r3
 800c216:	b289      	uxth	r1, r1
 800c218:	fb00 3101 	mla	r1, r0, r1, r3
 800c21c:	fb91 f1f9 	sdiv	r1, r1, r9
 800c220:	ea01 030b 	and.w	r3, r1, fp
 800c224:	9302      	str	r3, [sp, #8]
 800c226:	0953      	lsrs	r3, r2, #5
 800c228:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c22c:	4619      	mov	r1, r3
 800c22e:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800c232:	fb0c f303 	mul.w	r3, ip, r3
 800c236:	fb00 3301 	mla	r3, r0, r1, r3
 800c23a:	f00e 0e1f 	and.w	lr, lr, #31
 800c23e:	9902      	ldr	r1, [sp, #8]
 800c240:	fb93 f3f9 	sdiv	r3, r3, r9
 800c244:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800c248:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c24c:	fb0c fc0e 	mul.w	ip, ip, lr
 800c250:	4319      	orrs	r1, r3
 800c252:	fb00 c002 	mla	r0, r0, r2, ip
 800c256:	fb90 f0f9 	sdiv	r0, r0, r9
 800c25a:	f000 001f 	and.w	r0, r0, #31
 800c25e:	4301      	orrs	r1, r0
 800c260:	f824 1b02 	strh.w	r1, [r4], #2
 800c264:	edd5 7a08 	vldr	s15, [r5, #32]
 800c268:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c26c:	e7b7      	b.n	800c1de <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800c26e:	4546      	cmp	r6, r8
 800c270:	dd59      	ble.n	800c326 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c272:	edd5 7a08 	vldr	s15, [r5, #32]
 800c276:	68ea      	ldr	r2, [r5, #12]
 800c278:	7c29      	ldrb	r1, [r5, #16]
 800c27a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c27e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c282:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800c286:	bfd8      	it	le
 800c288:	2300      	movle	r3, #0
 800c28a:	eba6 0608 	sub.w	r6, r6, r8
 800c28e:	58d2      	ldr	r2, [r2, r3]
 800c290:	0a10      	lsrs	r0, r2, #8
 800c292:	0953      	lsrs	r3, r2, #5
 800c294:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800c298:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800c29c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c2a0:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800c2a4:	b159      	cbz	r1, 800c2be <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800c2a6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c2aa:	d108      	bne.n	800c2be <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800c2ac:	4318      	orrs	r0, r3
 800c2ae:	4338      	orrs	r0, r7
 800c2b0:	42b4      	cmp	r4, r6
 800c2b2:	d238      	bcs.n	800c326 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c2b4:	f824 0b02 	strh.w	r0, [r4], #2
 800c2b8:	e7fa      	b.n	800c2b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800c2ba:	46b8      	mov	r8, r7
 800c2bc:	e7d9      	b.n	800c272 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800c2be:	0e12      	lsrs	r2, r2, #24
 800c2c0:	fb02 f10a 	mul.w	r1, r2, sl
 800c2c4:	1c4a      	adds	r2, r1, #1
 800c2c6:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800c2ca:	1212      	asrs	r2, r2, #8
 800c2cc:	fb02 f507 	mul.w	r5, r2, r7
 800c2d0:	4350      	muls	r0, r2
 800c2d2:	4353      	muls	r3, r2
 800c2d4:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800c338 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c2d8:	43d2      	mvns	r2, r2
 800c2da:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800c2de:	27ff      	movs	r7, #255	@ 0xff
 800c2e0:	42b4      	cmp	r4, r6
 800c2e2:	d220      	bcs.n	800c326 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c2e4:	f8b4 e000 	ldrh.w	lr, [r4]
 800c2e8:	ea0e 010c 	and.w	r1, lr, ip
 800c2ec:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800c2f0:	fb02 0101 	mla	r1, r2, r1, r0
 800c2f4:	fb02 3808 	mla	r8, r2, r8, r3
 800c2f8:	fb91 f1f7 	sdiv	r1, r1, r7
 800c2fc:	fb98 f8f7 	sdiv	r8, r8, r7
 800c300:	ea01 010c 	and.w	r1, r1, ip
 800c304:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800c308:	f00e 0e1f 	and.w	lr, lr, #31
 800c30c:	ea41 0108 	orr.w	r1, r1, r8
 800c310:	fb02 5e0e 	mla	lr, r2, lr, r5
 800c314:	fb9e fef7 	sdiv	lr, lr, r7
 800c318:	f00e 0e1f 	and.w	lr, lr, #31
 800c31c:	ea41 010e 	orr.w	r1, r1, lr
 800c320:	f824 1b02 	strh.w	r1, [r4], #2
 800c324:	e7dc      	b.n	800c2e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800c326:	b007      	add	sp, #28
 800c328:	ecbd 8b02 	vpop	{d8}
 800c32c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c330:	00000000 	.word	0x00000000
 800c334:	447ffffe 	.word	0x447ffffe
 800c338:	fffff800 	.word	0xfffff800

0800c33c <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800c33c:	4770      	bx	lr

0800c33e <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800c33e:	4770      	bx	lr

0800c340 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800c340:	b510      	push	{r4, lr}
 800c342:	2124      	movs	r1, #36	@ 0x24
 800c344:	4604      	mov	r4, r0
 800c346:	f016 f898 	bl	802247a <_ZdlPvj>
 800c34a:	4620      	mov	r0, r4
 800c34c:	bd10      	pop	{r4, pc}
	...

0800c350 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c350:	4b06      	ldr	r3, [pc, #24]	@ (800c36c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800c352:	60c1      	str	r1, [r0, #12]
 800c354:	094a      	lsrs	r2, r1, #5
 800c356:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800c35a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800c35e:	4313      	orrs	r3, r2
 800c360:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800c364:	4319      	orrs	r1, r3
 800c366:	8201      	strh	r1, [r0, #16]
 800c368:	4770      	bx	lr
 800c36a:	bf00      	nop
 800c36c:	fffff800 	.word	0xfffff800

0800c370 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c370:	f1a0 0008 	sub.w	r0, r0, #8
 800c374:	e7ec      	b.n	800c350 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800c376:	bf00      	nop

0800c378 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800c378:	b508      	push	{r3, lr}
 800c37a:	4b05      	ldr	r3, [pc, #20]	@ (800c390 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800c37c:	6818      	ldr	r0, [r3, #0]
 800c37e:	6803      	ldr	r3, [r0, #0]
 800c380:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800c384:	4798      	blx	r3
 800c386:	1e43      	subs	r3, r0, #1
 800c388:	4258      	negs	r0, r3
 800c38a:	4158      	adcs	r0, r3
 800c38c:	bd08      	pop	{r3, pc}
 800c38e:	bf00      	nop
 800c390:	20014040 	.word	0x20014040

0800c394 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800c394:	4770      	bx	lr

0800c396 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800c396:	3808      	subs	r0, #8
 800c398:	4770      	bx	lr

0800c39a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800c39a:	b430      	push	{r4, r5}
 800c39c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800c3a0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800c3a4:	8a02      	ldrh	r2, [r0, #16]
 800c3a6:	9202      	str	r2, [sp, #8]
 800c3a8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800c3ac:	68c2      	ldr	r2, [r0, #12]
 800c3ae:	4629      	mov	r1, r5
 800c3b0:	4620      	mov	r0, r4
 800c3b2:	bc30      	pop	{r4, r5}
 800c3b4:	f7f4 bfb2 	b.w	800131c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800c3b8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800c3b8:	f7f4 bfa4 	b.w	8001304 <_ZN8touchgfx5paint8tearDownEv>

0800c3bc <_ZN8touchgfx13PainterRGB565D0Ev>:
 800c3bc:	b510      	push	{r4, lr}
 800c3be:	2114      	movs	r1, #20
 800c3c0:	4604      	mov	r4, r0
 800c3c2:	f016 f85a 	bl	802247a <_ZdlPvj>
 800c3c6:	4620      	mov	r0, r4
 800c3c8:	bd10      	pop	{r4, pc}

0800c3ca <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800c3ca:	f1a0 0008 	sub.w	r0, r0, #8
 800c3ce:	e7f5      	b.n	800c3bc <_ZN8touchgfx13PainterRGB565D0Ev>

0800c3d0 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800c3d0:	2300      	movs	r3, #0
 800c3d2:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800c3d4:	8503      	strh	r3, [r0, #40]	@ 0x28
 800c3d6:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800c3d8:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800c3da:	6980      	ldr	r0, [r0, #24]
 800c3dc:	b110      	cbz	r0, 800c3e4 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800c3de:	6803      	ldr	r3, [r0, #0]
 800c3e0:	691b      	ldr	r3, [r3, #16]
 800c3e2:	4718      	bx	r3
 800c3e4:	4770      	bx	lr

0800c3e6 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800c3e6:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800c3ea:	4770      	bx	lr

0800c3ec <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800c3ec:	b538      	push	{r3, r4, r5, lr}
 800c3ee:	0e0b      	lsrs	r3, r1, #24
 800c3f0:	7783      	strb	r3, [r0, #30]
 800c3f2:	6803      	ldr	r3, [r0, #0]
 800c3f4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c3f6:	4604      	mov	r4, r0
 800c3f8:	460d      	mov	r5, r1
 800c3fa:	4798      	blx	r3
 800c3fc:	6803      	ldr	r3, [r0, #0]
 800c3fe:	4629      	mov	r1, r5
 800c400:	689b      	ldr	r3, [r3, #8]
 800c402:	4798      	blx	r3
 800c404:	6823      	ldr	r3, [r4, #0]
 800c406:	4620      	mov	r0, r4
 800c408:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c40a:	4798      	blx	r3
 800c40c:	61a0      	str	r0, [r4, #24]
 800c40e:	bd38      	pop	{r3, r4, r5, pc}

0800c410 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800c410:	7741      	strb	r1, [r0, #29]
 800c412:	4770      	bx	lr

0800c414 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800c414:	b530      	push	{r4, r5, lr}
 800c416:	460d      	mov	r5, r1
 800c418:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800c41c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c41e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c420:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c422:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c424:	682b      	ldr	r3, [r5, #0]
 800c426:	6023      	str	r3, [r4, #0]
 800c428:	bd30      	pop	{r4, r5, pc}

0800c42a <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800c42a:	b538      	push	{r3, r4, r5, lr}
 800c42c:	4604      	mov	r4, r0
 800c42e:	1d03      	adds	r3, r0, #4
 800c430:	6808      	ldr	r0, [r1, #0]
 800c432:	6849      	ldr	r1, [r1, #4]
 800c434:	c303      	stmia	r3!, {r0, r1}
 800c436:	6813      	ldr	r3, [r2, #0]
 800c438:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800c43c:	6853      	ldr	r3, [r2, #4]
 800c43e:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800c442:	2500      	movs	r5, #0
 800c444:	61a5      	str	r5, [r4, #24]
 800c446:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800c44a:	f005 fac1 	bl	80119d0 <_ZN8touchgfx9Matrix3x35resetEv>
 800c44e:	23ff      	movs	r3, #255	@ 0xff
 800c450:	7763      	strb	r3, [r4, #29]
 800c452:	77a3      	strb	r3, [r4, #30]
 800c454:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800c458:	6323      	str	r3, [r4, #48]	@ 0x30
 800c45a:	2301      	movs	r3, #1
 800c45c:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800c460:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800c464:	bd38      	pop	{r3, r4, r5, pc}
	...

0800c468 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800c468:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c46c:	ed2d 8b0a 	vpush	{d8-d12}
 800c470:	ee70 7a41 	vsub.f32	s15, s0, s2
 800c474:	b087      	sub	sp, #28
 800c476:	eef5 7a40 	vcmp.f32	s15, #0.0
 800c47a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c47e:	4605      	mov	r5, r0
 800c480:	eef0 9a40 	vmov.f32	s19, s0
 800c484:	eeb0 aa60 	vmov.f32	s20, s1
 800c488:	eeb0 9a41 	vmov.f32	s18, s2
 800c48c:	eef0 8a61 	vmov.f32	s17, s3
 800c490:	eeb0 ca42 	vmov.f32	s24, s4
 800c494:	eef0 ca62 	vmov.f32	s25, s5
 800c498:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800c49c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800c49e:	6802      	ldr	r2, [r0, #0]
 800c4a0:	d112      	bne.n	800c4c8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800c4a2:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800c4a6:	eef5 7a40 	vcmp.f32	s15, #0.0
 800c4aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c4ae:	d10b      	bne.n	800c4c8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800c4b0:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800c4b4:	3901      	subs	r1, #1
 800c4b6:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800c4b8:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800c4bc:	b007      	add	sp, #28
 800c4be:	ecbd 8b0a 	vpop	{d8-d12}
 800c4c2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c4c6:	4710      	bx	r2
 800c4c8:	23ff      	movs	r3, #255	@ 0xff
 800c4ca:	77ab      	strb	r3, [r5, #30]
 800c4cc:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800c4ce:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800c794 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800c4d2:	4628      	mov	r0, r5
 800c4d4:	4798      	blx	r3
 800c4d6:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800c4da:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800c4de:	80c3      	strh	r3, [r0, #6]
 800c4e0:	eef0 0a4a 	vmov.f32	s1, s20
 800c4e4:	eeb0 0a69 	vmov.f32	s0, s19
 800c4e8:	4604      	mov	r4, r0
 800c4ea:	4640      	mov	r0, r8
 800c4ec:	f005 fb1f 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c4f0:	4640      	mov	r0, r8
 800c4f2:	eeb0 ba40 	vmov.f32	s22, s0
 800c4f6:	eef0 ba60 	vmov.f32	s23, s1
 800c4fa:	ed8d 0a00 	vstr	s0, [sp]
 800c4fe:	edcd 0a01 	vstr	s1, [sp, #4]
 800c502:	eeb0 0a49 	vmov.f32	s0, s18
 800c506:	eef0 0a68 	vmov.f32	s1, s17
 800c50a:	f005 fb10 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c50e:	eeb4 ba40 	vcmp.f32	s22, s0
 800c512:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c516:	eef4 ba60 	vcmp.f32	s23, s1
 800c51a:	bf0c      	ite	eq
 800c51c:	2301      	moveq	r3, #1
 800c51e:	2300      	movne	r3, #0
 800c520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c524:	eeb4 ba40 	vcmp.f32	s22, s0
 800c528:	7463      	strb	r3, [r4, #17]
 800c52a:	bf0c      	ite	eq
 800c52c:	2301      	moveq	r3, #1
 800c52e:	2300      	movne	r3, #0
 800c530:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c534:	eeb0 8a40 	vmov.f32	s16, s0
 800c538:	eef0 aa60 	vmov.f32	s21, s1
 800c53c:	ed8d 0a02 	vstr	s0, [sp, #8]
 800c540:	edcd 0a03 	vstr	s1, [sp, #12]
 800c544:	74a3      	strb	r3, [r4, #18]
 800c546:	d030      	beq.n	800c5aa <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c548:	eef4 ba60 	vcmp.f32	s23, s1
 800c54c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c550:	d02b      	beq.n	800c5aa <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c552:	ee39 9a69 	vsub.f32	s18, s18, s19
 800c556:	ee78 8aca 	vsub.f32	s17, s17, s20
 800c55a:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800c55e:	4640      	mov	r0, r8
 800c560:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800c564:	eef0 0a4a 	vmov.f32	s1, s20
 800c568:	eeb0 0a69 	vmov.f32	s0, s19
 800c56c:	eea7 0acc 	vfms.f32	s0, s15, s24
 800c570:	eeec 0a87 	vfma.f32	s1, s25, s14
 800c574:	f005 fadb 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c578:	f899 3000 	ldrb.w	r3, [r9]
 800c57c:	edcd 0a05 	vstr	s1, [sp, #20]
 800c580:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800c584:	2b01      	cmp	r3, #1
 800c586:	ed8d 0a04 	vstr	s0, [sp, #16]
 800c58a:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800c58e:	bf02      	ittt	eq
 800c590:	eef1 7a60 	vnegeq.f32	s15, s1
 800c594:	eef0 0a40 	vmoveq.f32	s1, s0
 800c598:	eeb0 0a67 	vmoveq.f32	s0, s15
 800c59c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800c5a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c5a4:	d134      	bne.n	800c610 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800c5a6:	2301      	movs	r3, #1
 800c5a8:	74a3      	strb	r3, [r4, #18]
 800c5aa:	f899 2000 	ldrb.w	r2, [r9]
 800c5ae:	7c63      	ldrb	r3, [r4, #17]
 800c5b0:	2a01      	cmp	r2, #1
 800c5b2:	f040 80a3 	bne.w	800c6fc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800c5b6:	2b00      	cmp	r3, #0
 800c5b8:	d072      	beq.n	800c6a0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800c5ba:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800c5be:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800c78c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c5c2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c5c6:	eef4 baea 	vcmpe.f32	s23, s21
 800c5ca:	edc4 7a08 	vstr	s15, [r4, #32]
 800c5ce:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800c5d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c5d6:	ee17 3a90 	vmov	r3, s15
 800c5da:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800c5de:	b21a      	sxth	r2, r3
 800c5e0:	ee17 3a90 	vmov	r3, s15
 800c5e4:	b21b      	sxth	r3, r3
 800c5e6:	bf47      	ittee	mi
 800c5e8:	8123      	strhmi	r3, [r4, #8]
 800c5ea:	8162      	strhmi	r2, [r4, #10]
 800c5ec:	8122      	strhpl	r2, [r4, #8]
 800c5ee:	8163      	strhpl	r3, [r4, #10]
 800c5f0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c5f4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c5f8:	1a9b      	subs	r3, r3, r2
 800c5fa:	ee07 3a90 	vmov	s15, r3
 800c5fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c602:	2300      	movs	r3, #0
 800c604:	7463      	strb	r3, [r4, #17]
 800c606:	edc4 7a07 	vstr	s15, [r4, #28]
 800c60a:	2301      	movs	r3, #1
 800c60c:	74a3      	strb	r3, [r4, #18]
 800c60e:	e03f      	b.n	800c690 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c610:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800c614:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800c618:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c61c:	ed84 7a05 	vstr	s14, [r4, #20]
 800c620:	d102      	bne.n	800c628 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800c622:	2301      	movs	r3, #1
 800c624:	7463      	strb	r3, [r4, #17]
 800c626:	e7c0      	b.n	800c5aa <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800c628:	2b01      	cmp	r3, #1
 800c62a:	bf03      	ittte	eq
 800c62c:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800c630:	ee07 2a90 	vmoveq	s15, r2
 800c634:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800c638:	eef0 7a6b 	vmovne.f32	s15, s23
 800c63c:	bf0a      	itet	eq
 800c63e:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800c642:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800c646:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800c64a:	2b01      	cmp	r3, #1
 800c64c:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800c650:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800c654:	edc4 7a06 	vstr	s15, [r4, #24]
 800c658:	bf02      	ittt	eq
 800c65a:	eef1 7a48 	vnegeq.f32	s15, s16
 800c65e:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800c662:	eef0 aa67 	vmoveq.f32	s21, s15
 800c666:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800c66a:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800c790 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800c66e:	ee38 8a67 	vsub.f32	s16, s16, s15
 800c672:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800c676:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800c67a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c67e:	ed84 8a07 	vstr	s16, [r4, #28]
 800c682:	edc4 7a08 	vstr	s15, [r4, #32]
 800c686:	d503      	bpl.n	800c690 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c688:	eeb1 8a48 	vneg.f32	s16, s16
 800c68c:	ed84 8a07 	vstr	s16, [r4, #28]
 800c690:	60e7      	str	r7, [r4, #12]
 800c692:	7426      	strb	r6, [r4, #16]
 800c694:	61ac      	str	r4, [r5, #24]
 800c696:	b007      	add	sp, #28
 800c698:	ecbd 8b0a 	vpop	{d8-d12}
 800c69c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c6a0:	7ca3      	ldrb	r3, [r4, #18]
 800c6a2:	2b00      	cmp	r3, #0
 800c6a4:	d0f4      	beq.n	800c690 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c6a6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c6aa:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800c78c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c6ae:	ee00 3a10 	vmov	s0, r3
 800c6b2:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800c6b6:	ee30 8a48 	vsub.f32	s16, s0, s16
 800c6ba:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800c6be:	ee38 7a40 	vsub.f32	s14, s16, s0
 800c6c2:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800c6c6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c6ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c6ce:	edc4 7a08 	vstr	s15, [r4, #32]
 800c6d2:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c6d6:	ee17 3a90 	vmov	r3, s15
 800c6da:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800c6de:	b21a      	sxth	r2, r3
 800c6e0:	ee17 3a90 	vmov	r3, s15
 800c6e4:	b21b      	sxth	r3, r3
 800c6e6:	bfcc      	ite	gt
 800c6e8:	8123      	strhgt	r3, [r4, #8]
 800c6ea:	8163      	strhle	r3, [r4, #10]
 800c6ec:	f04f 0301 	mov.w	r3, #1
 800c6f0:	7463      	strb	r3, [r4, #17]
 800c6f2:	bfcc      	ite	gt
 800c6f4:	8162      	strhgt	r2, [r4, #10]
 800c6f6:	8122      	strhle	r2, [r4, #8]
 800c6f8:	2300      	movs	r3, #0
 800c6fa:	e787      	b.n	800c60c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800c6fc:	b1db      	cbz	r3, 800c736 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800c6fe:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800c702:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800c78c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c706:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c70a:	eef4 baea 	vcmpe.f32	s23, s21
 800c70e:	edc4 7a08 	vstr	s15, [r4, #32]
 800c712:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800c716:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c71a:	ee17 3a90 	vmov	r3, s15
 800c71e:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800c722:	b21a      	sxth	r2, r3
 800c724:	ee17 3a90 	vmov	r3, s15
 800c728:	b21b      	sxth	r3, r3
 800c72a:	bf47      	ittee	mi
 800c72c:	8123      	strhmi	r3, [r4, #8]
 800c72e:	8162      	strhmi	r2, [r4, #10]
 800c730:	8122      	strhpl	r2, [r4, #8]
 800c732:	8163      	strhpl	r3, [r4, #10]
 800c734:	e7ac      	b.n	800c690 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c736:	7ca3      	ldrb	r3, [r4, #18]
 800c738:	2b00      	cmp	r3, #0
 800c73a:	d0a9      	beq.n	800c690 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c73c:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800c740:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800c78c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800c744:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c748:	eeb4 bac8 	vcmpe.f32	s22, s16
 800c74c:	edc4 7a08 	vstr	s15, [r4, #32]
 800c750:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800c754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c758:	ee17 3a90 	vmov	r3, s15
 800c75c:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800c760:	b21a      	sxth	r2, r3
 800c762:	ee17 3a90 	vmov	r3, s15
 800c766:	b21b      	sxth	r3, r3
 800c768:	bf47      	ittee	mi
 800c76a:	8123      	strhmi	r3, [r4, #8]
 800c76c:	8162      	strhmi	r2, [r4, #10]
 800c76e:	8122      	strhpl	r2, [r4, #8]
 800c770:	8163      	strhpl	r3, [r4, #10]
 800c772:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c776:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c77a:	1a9b      	subs	r3, r3, r2
 800c77c:	ee07 3a90 	vmov	s15, r3
 800c780:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c784:	edc4 7a07 	vstr	s15, [r4, #28]
 800c788:	e782      	b.n	800c690 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800c78a:	bf00      	nop
 800c78c:	447ffffe 	.word	0x447ffffe
 800c790:	44800000 	.word	0x44800000
 800c794:	20014036 	.word	0x20014036

0800c798 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800c798:	b510      	push	{r4, lr}
 800c79a:	2100      	movs	r1, #0
 800c79c:	ed2d 8b02 	vpush	{d8}
 800c7a0:	eef0 8a62 	vmov.f32	s17, s5
 800c7a4:	4604      	mov	r4, r0
 800c7a6:	eeb0 8a42 	vmov.f32	s16, s4
 800c7aa:	f015 fbf5 	bl	8021f98 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800c7ae:	eef0 7a68 	vmov.f32	s15, s17
 800c7b2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7b6:	6823      	ldr	r3, [r4, #0]
 800c7b8:	ee17 2a90 	vmov	r2, s15
 800c7bc:	eef0 7a48 	vmov.f32	s15, s16
 800c7c0:	ecbd 8b02 	vpop	{d8}
 800c7c4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7c8:	4620      	mov	r0, r4
 800c7ca:	689b      	ldr	r3, [r3, #8]
 800c7cc:	ee17 1a90 	vmov	r1, s15
 800c7d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c7d4:	4718      	bx	r3

0800c7d6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800c7d6:	b510      	push	{r4, lr}
 800c7d8:	2100      	movs	r1, #0
 800c7da:	ed2d 8b02 	vpush	{d8}
 800c7de:	eef0 8a63 	vmov.f32	s17, s7
 800c7e2:	4604      	mov	r4, r0
 800c7e4:	eeb0 8a43 	vmov.f32	s16, s6
 800c7e8:	f015 fc98 	bl	802211c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800c7ec:	eef0 7a68 	vmov.f32	s15, s17
 800c7f0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c7f4:	6823      	ldr	r3, [r4, #0]
 800c7f6:	ee17 2a90 	vmov	r2, s15
 800c7fa:	eef0 7a48 	vmov.f32	s15, s16
 800c7fe:	ecbd 8b02 	vpop	{d8}
 800c802:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c806:	4620      	mov	r0, r4
 800c808:	689b      	ldr	r3, [r3, #8]
 800c80a:	ee17 1a90 	vmov	r1, s15
 800c80e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c812:	4718      	bx	r3

0800c814 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800c814:	b513      	push	{r0, r1, r4, lr}
 800c816:	4604      	mov	r4, r0
 800c818:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800c81a:	f005 f988 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c81e:	eef0 7a60 	vmov.f32	s15, s1
 800c822:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c826:	4620      	mov	r0, r4
 800c828:	ee17 2a90 	vmov	r2, s15
 800c82c:	eef0 7a40 	vmov.f32	s15, s0
 800c830:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c834:	ee17 1a90 	vmov	r1, s15
 800c838:	b002      	add	sp, #8
 800c83a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c83e:	f015 bb05 	b.w	8021e4c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800c842:	b513      	push	{r0, r1, r4, lr}
 800c844:	4604      	mov	r4, r0
 800c846:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800c848:	f005 f971 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c84c:	eef0 7a60 	vmov.f32	s15, s1
 800c850:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c854:	4620      	mov	r0, r4
 800c856:	ee17 2a90 	vmov	r2, s15
 800c85a:	eef0 7a40 	vmov.f32	s15, s0
 800c85e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c862:	ee17 1a90 	vmov	r1, s15
 800c866:	b002      	add	sp, #8
 800c868:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c86c:	f015 bb3b 	b.w	8021ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800c870 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800c870:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c872:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800c876:	2400      	movs	r4, #0
 800c878:	9f07      	ldr	r7, [sp, #28]
 800c87a:	4463      	add	r3, ip
 800c87c:	4626      	mov	r6, r4
 800c87e:	f04f 0e01 	mov.w	lr, #1
 800c882:	4563      	cmp	r3, ip
 800c884:	d02d      	beq.n	800c8e2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800c886:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800c88a:	2d06      	cmp	r5, #6
 800c88c:	d8f9      	bhi.n	800c882 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c88e:	fa0e f505 	lsl.w	r5, lr, r5
 800c892:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800c896:	d10d      	bne.n	800c8b4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800c898:	f015 0f10 	tst.w	r5, #16
 800c89c:	d117      	bne.n	800c8ce <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800c89e:	072d      	lsls	r5, r5, #28
 800c8a0:	d5ef      	bpl.n	800c882 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c8a2:	3801      	subs	r0, #1
 800c8a4:	b91e      	cbnz	r6, 800c8ae <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800c8a6:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800c8aa:	682d      	ldr	r5, [r5, #0]
 800c8ac:	600d      	str	r5, [r1, #0]
 800c8ae:	b96c      	cbnz	r4, 800c8cc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c8b0:	2601      	movs	r6, #1
 800c8b2:	e7e6      	b.n	800c882 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c8b4:	b926      	cbnz	r6, 800c8c0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800c8b6:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800c8ba:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800c8be:	600b      	str	r3, [r1, #0]
 800c8c0:	b924      	cbnz	r4, 800c8cc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c8c2:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800c8c6:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800c8ca:	6013      	str	r3, [r2, #0]
 800c8cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c8ce:	3801      	subs	r0, #1
 800c8d0:	b91c      	cbnz	r4, 800c8da <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800c8d2:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800c8d6:	6824      	ldr	r4, [r4, #0]
 800c8d8:	6014      	str	r4, [r2, #0]
 800c8da:	2e00      	cmp	r6, #0
 800c8dc:	d1f6      	bne.n	800c8cc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c8de:	2401      	movs	r4, #1
 800c8e0:	e7cf      	b.n	800c882 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800c8e2:	b90e      	cbnz	r6, 800c8e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800c8e4:	2300      	movs	r3, #0
 800c8e6:	600b      	str	r3, [r1, #0]
 800c8e8:	2c00      	cmp	r4, #0
 800c8ea:	d1ef      	bne.n	800c8cc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800c8ec:	2300      	movs	r3, #0
 800c8ee:	e7ec      	b.n	800c8ca <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800c8f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800c8f0:	b538      	push	{r3, r4, r5, lr}
 800c8f2:	4604      	mov	r4, r0
 800c8f4:	ed2d 8b0a 	vpush	{d8-d12}
 800c8f8:	460d      	mov	r5, r1
 800c8fa:	eef0 ba40 	vmov.f32	s23, s0
 800c8fe:	eeb0 ca60 	vmov.f32	s24, s1
 800c902:	eef0 aa41 	vmov.f32	s21, s2
 800c906:	eeb0 ba61 	vmov.f32	s22, s3
 800c90a:	eeb0 9a42 	vmov.f32	s18, s4
 800c90e:	eef0 9a62 	vmov.f32	s19, s5
 800c912:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800c916:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800c91a:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800c91e:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800c922:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800c926:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800c92a:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800c92e:	ee20 0a00 	vmul.f32	s0, s0, s0
 800c932:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800c936:	f015 fdcb 	bl	80224d0 <sqrtf>
 800c93a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800c93e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c942:	d12e      	bne.n	800c9a2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800c944:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800c948:	ee39 7acb 	vsub.f32	s14, s19, s22
 800c94c:	eeb0 8a6a 	vmov.f32	s16, s21
 800c950:	eef0 8a4b 	vmov.f32	s17, s22
 800c954:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800c958:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800c95c:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800c960:	eee7 8aca 	vfms.f32	s17, s15, s20
 800c964:	2d02      	cmp	r5, #2
 800c966:	dc2f      	bgt.n	800c9c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800c968:	3501      	adds	r5, #1
 800c96a:	eef0 1a4b 	vmov.f32	s3, s22
 800c96e:	eeb0 1a6a 	vmov.f32	s2, s21
 800c972:	4629      	mov	r1, r5
 800c974:	eef0 2a68 	vmov.f32	s5, s17
 800c978:	eeb0 2a48 	vmov.f32	s4, s16
 800c97c:	eef0 0a4c 	vmov.f32	s1, s24
 800c980:	eeb0 0a6b 	vmov.f32	s0, s23
 800c984:	4620      	mov	r0, r4
 800c986:	f7ff ffb3 	bl	800c8f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800c98a:	eef0 0a68 	vmov.f32	s1, s17
 800c98e:	eeb0 0a48 	vmov.f32	s0, s16
 800c992:	4620      	mov	r0, r4
 800c994:	f7ff ff55 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c998:	eeb0 ba68 	vmov.f32	s22, s17
 800c99c:	eef0 aa48 	vmov.f32	s21, s16
 800c9a0:	e7b9      	b.n	800c916 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800c9a2:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800c9a6:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800c9aa:	ee78 8acc 	vsub.f32	s17, s17, s24
 800c9ae:	ee28 7a27 	vmul.f32	s14, s16, s15
 800c9b2:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800c9b6:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800c9ba:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800c9be:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800c9c2:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800c9c6:	e7cd      	b.n	800c964 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800c9c8:	eef0 0a68 	vmov.f32	s1, s17
 800c9cc:	eeb0 0a48 	vmov.f32	s0, s16
 800c9d0:	4620      	mov	r0, r4
 800c9d2:	f7ff ff36 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c9d6:	ecbd 8b0a 	vpop	{d8-d12}
 800c9da:	bd38      	pop	{r3, r4, r5, pc}

0800c9dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800c9dc:	b510      	push	{r4, lr}
 800c9de:	ed2d 8b0a 	vpush	{d8-d12}
 800c9e2:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800c9e6:	2b02      	cmp	r3, #2
 800c9e8:	4604      	mov	r4, r0
 800c9ea:	eeb0 ca40 	vmov.f32	s24, s0
 800c9ee:	eeb0 9a60 	vmov.f32	s18, s1
 800c9f2:	eef0 9a41 	vmov.f32	s19, s2
 800c9f6:	eef0 8a61 	vmov.f32	s17, s3
 800c9fa:	eeb0 ba42 	vmov.f32	s22, s4
 800c9fe:	eef0 ba62 	vmov.f32	s23, s5
 800ca02:	eeb0 aa43 	vmov.f32	s20, s6
 800ca06:	eef0 aa63 	vmov.f32	s21, s7
 800ca0a:	eeb0 8a44 	vmov.f32	s16, s8
 800ca0e:	eef0 ca64 	vmov.f32	s25, s9
 800ca12:	d12c      	bne.n	800ca6e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800ca14:	eef0 0a62 	vmov.f32	s1, s5
 800ca18:	eeb0 0a42 	vmov.f32	s0, s4
 800ca1c:	f7ff ff11 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ca20:	ee79 9acb 	vsub.f32	s19, s19, s22
 800ca24:	ee7a caec 	vsub.f32	s25, s21, s25
 800ca28:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800ca2c:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800ca30:	ee69 9aac 	vmul.f32	s19, s19, s25
 800ca34:	ee28 8a88 	vmul.f32	s16, s17, s16
 800ca38:	eef4 9ac8 	vcmpe.f32	s19, s16
 800ca3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca40:	db0f      	blt.n	800ca62 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800ca42:	2101      	movs	r1, #1
 800ca44:	eef0 2a6a 	vmov.f32	s5, s21
 800ca48:	eeb0 2a4a 	vmov.f32	s4, s20
 800ca4c:	eef0 1a6b 	vmov.f32	s3, s23
 800ca50:	eeb0 1a4b 	vmov.f32	s2, s22
 800ca54:	eef0 0a49 	vmov.f32	s1, s18
 800ca58:	eeb0 0a4c 	vmov.f32	s0, s24
 800ca5c:	4620      	mov	r0, r4
 800ca5e:	f7ff ff47 	bl	800c8f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800ca62:	eef0 0a6a 	vmov.f32	s1, s21
 800ca66:	eeb0 0a4a 	vmov.f32	s0, s20
 800ca6a:	4620      	mov	r0, r4
 800ca6c:	e035      	b.n	800cada <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800ca6e:	2b01      	cmp	r3, #1
 800ca70:	d138      	bne.n	800cae4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ca72:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800ca76:	ee33 6a48 	vsub.f32	s12, s6, s16
 800ca7a:	ee71 7a42 	vsub.f32	s15, s2, s4
 800ca7e:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800ca82:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800ca86:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800ca8a:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800ca8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca92:	d027      	beq.n	800cae4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ca94:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800ca98:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800ca9c:	eea4 8a83 	vfma.f32	s16, s9, s6
 800caa0:	eee1 8a22 	vfma.f32	s17, s2, s5
 800caa4:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800caa8:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800caac:	eee6 7a28 	vfma.f32	s15, s12, s17
 800cab0:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800cab4:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800cab8:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800cabc:	ee3c ca40 	vsub.f32	s24, s24, s0
 800cac0:	ee39 9a60 	vsub.f32	s18, s18, s1
 800cac4:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800cac8:	ee29 9a09 	vmul.f32	s18, s18, s18
 800cacc:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800cad0:	eef4 7ac9 	vcmpe.f32	s15, s18
 800cad4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cad8:	db04      	blt.n	800cae4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800cada:	f7ff feb2 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cade:	ecbd 8b0a 	vpop	{d8-d12}
 800cae2:	bd10      	pop	{r4, pc}
 800cae4:	eef0 0a6b 	vmov.f32	s1, s23
 800cae8:	eeb0 0a4b 	vmov.f32	s0, s22
 800caec:	4620      	mov	r0, r4
 800caee:	f7ff fea8 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800caf2:	e7b6      	b.n	800ca62 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800caf4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800caf4:	b510      	push	{r4, lr}
 800caf6:	ed2d 8b0c 	vpush	{d8-d13}
 800cafa:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800cafe:	4604      	mov	r4, r0
 800cb00:	eeb0 9a40 	vmov.f32	s18, s0
 800cb04:	eef0 9a60 	vmov.f32	s19, s1
 800cb08:	eef0 aa41 	vmov.f32	s21, s2
 800cb0c:	eeb0 ba61 	vmov.f32	s22, s3
 800cb10:	b933      	cbnz	r3, 800cb20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800cb12:	f7ff fe96 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb16:	eef0 0a4b 	vmov.f32	s1, s22
 800cb1a:	eeb0 0a6a 	vmov.f32	s0, s21
 800cb1e:	e015      	b.n	800cb4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800cb20:	ee71 8a40 	vsub.f32	s17, s2, s0
 800cb24:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800cb28:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800cb2c:	2b02      	cmp	r3, #2
 800cb2e:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800cb32:	ee28 8a27 	vmul.f32	s16, s16, s15
 800cb36:	d10f      	bne.n	800cb58 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800cb38:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800cb3c:	ee30 0a08 	vadd.f32	s0, s0, s16
 800cb40:	f7ff fe7f 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb44:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800cb48:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800cb4c:	4620      	mov	r0, r4
 800cb4e:	f7ff fe78 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb52:	ecbd 8b0c 	vpop	{d8-d13}
 800cb56:	bd10      	pop	{r4, pc}
 800cb58:	f7ff fe73 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb5c:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800cc94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800cb60:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800cc98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800cb64:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800cc9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800cb68:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800cca0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800cb6c:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800cca4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800cb70:	eef0 0a69 	vmov.f32	s1, s19
 800cb74:	eeb0 0a49 	vmov.f32	s0, s18
 800cb78:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cb7c:	4620      	mov	r0, r4
 800cb7e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cb82:	eeb1 aa68 	vneg.f32	s20, s17
 800cb86:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800cb8a:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800cb8e:	f7ff fe58 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cb92:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800cca8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800cb96:	eef0 0a69 	vmov.f32	s1, s19
 800cb9a:	eeb0 0a49 	vmov.f32	s0, s18
 800cb9e:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cba2:	4620      	mov	r0, r4
 800cba4:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cba8:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800cbac:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800cbb0:	f7ff fe47 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cbb4:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800ccac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800cbb8:	eef0 0a69 	vmov.f32	s1, s19
 800cbbc:	eeb0 0a49 	vmov.f32	s0, s18
 800cbc0:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cbc4:	4620      	mov	r0, r4
 800cbc6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cbca:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800cbce:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800cbd2:	f7ff fe36 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cbd6:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800ccb0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800cbda:	eef0 0a69 	vmov.f32	s1, s19
 800cbde:	eeb0 0a49 	vmov.f32	s0, s18
 800cbe2:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cbe6:	4620      	mov	r0, r4
 800cbe8:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cbec:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800cbf0:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800cbf4:	f7ff fe25 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cbf8:	ee79 0a88 	vadd.f32	s1, s19, s16
 800cbfc:	ee39 0a28 	vadd.f32	s0, s18, s17
 800cc00:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800cc04:	ee30 0a08 	vadd.f32	s0, s0, s16
 800cc08:	4620      	mov	r0, r4
 800cc0a:	f7ff fe1a 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc0e:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800ccb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800cc12:	eef0 0a69 	vmov.f32	s1, s19
 800cc16:	eeb0 0a49 	vmov.f32	s0, s18
 800cc1a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc1e:	4620      	mov	r0, r4
 800cc20:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc24:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800cc28:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800cc2c:	f7ff fe09 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc30:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800ccb8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800cc34:	eef0 0a69 	vmov.f32	s1, s19
 800cc38:	eeb0 0a49 	vmov.f32	s0, s18
 800cc3c:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc40:	4620      	mov	r0, r4
 800cc42:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc46:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800cc4a:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800cc4e:	f7ff fdf8 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc52:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800ccbc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800cc56:	eef0 0a69 	vmov.f32	s1, s19
 800cc5a:	eeb0 0a49 	vmov.f32	s0, s18
 800cc5e:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc62:	4620      	mov	r0, r4
 800cc64:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc68:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800cc6c:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800cc70:	f7ff fde7 	bl	800c842 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800cc74:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800ccc0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800cc78:	eef0 0a69 	vmov.f32	s1, s19
 800cc7c:	eeb0 0a49 	vmov.f32	s0, s18
 800cc80:	eee8 0a27 	vfma.f32	s1, s16, s15
 800cc84:	4620      	mov	r0, r4
 800cc86:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800cc8a:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800cc8e:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800cc92:	e73e      	b.n	800cb12 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800cc94:	3d23d70a 	.word	0x3d23d70a
 800cc98:	3e8f5c29 	.word	0x3e8f5c29
 800cc9c:	3f19999a 	.word	0x3f19999a
 800cca0:	3f4ccccd 	.word	0x3f4ccccd
 800cca4:	3f75c28f 	.word	0x3f75c28f
 800cca8:	3e4ccccd 	.word	0x3e4ccccd
 800ccac:	3ecccccd 	.word	0x3ecccccd
 800ccb0:	3f3851ec 	.word	0x3f3851ec
 800ccb4:	3fa3d70a 	.word	0x3fa3d70a
 800ccb8:	3fcccccd 	.word	0x3fcccccd
 800ccbc:	3fe66666 	.word	0x3fe66666
 800ccc0:	3ffae148 	.word	0x3ffae148

0800ccc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800ccc4:	b570      	push	{r4, r5, r6, lr}
 800ccc6:	ed2d 8b06 	vpush	{d8-d10}
 800ccca:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800ccce:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800ccd2:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800ccd6:	ee30 9a49 	vsub.f32	s18, s0, s18
 800ccda:	eef0 aa40 	vmov.f32	s21, s0
 800ccde:	ee28 0a08 	vmul.f32	s0, s16, s16
 800cce2:	4604      	mov	r4, r0
 800cce4:	eea9 0a09 	vfma.f32	s0, s18, s18
 800cce8:	eeb0 aa60 	vmov.f32	s20, s1
 800ccec:	f015 fbf0 	bl	80224d0 <sqrtf>
 800ccf0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800ccf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ccf8:	dd36      	ble.n	800cd68 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800ccfa:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800ccfe:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800cd02:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800cd06:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800cd0a:	2600      	movs	r6, #0
 800cd0c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800cd10:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800cd14:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800cd18:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800cd1c:	ee70 9a28 	vadd.f32	s19, s0, s17
 800cd20:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800cd24:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800cd28:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800cd2c:	b1fd      	cbz	r5, 800cd6e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800cd2e:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800cd32:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800cd36:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800cd3a:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800cd3e:	eef0 0a49 	vmov.f32	s1, s18
 800cd42:	eeb0 0a69 	vmov.f32	s0, s19
 800cd46:	4620      	mov	r0, r4
 800cd48:	f7ff fd64 	bl	800c814 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800cd4c:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800cd50:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800cd54:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800cd58:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800cd5c:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800cd60:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800cd64:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800cd68:	ecbd 8b06 	vpop	{d8-d10}
 800cd6c:	bd70      	pop	{r4, r5, r6, pc}
 800cd6e:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800cd72:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800cd76:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800cd7a:	b16b      	cbz	r3, 800cd98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800cd7c:	eef0 1a49 	vmov.f32	s3, s18
 800cd80:	eeb0 1a69 	vmov.f32	s2, s19
 800cd84:	eef0 0a62 	vmov.f32	s1, s5
 800cd88:	eeb0 0a42 	vmov.f32	s0, s4
 800cd8c:	4620      	mov	r0, r4
 800cd8e:	f7ff feb1 	bl	800caf4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800cd92:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800cd96:	e7db      	b.n	800cd50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800cd98:	eef0 4a48 	vmov.f32	s9, s16
 800cd9c:	eeb0 4a68 	vmov.f32	s8, s17
 800cda0:	eef0 3a49 	vmov.f32	s7, s18
 800cda4:	eeb0 3a69 	vmov.f32	s6, s19
 800cda8:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800cdac:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800cdb0:	4620      	mov	r0, r4
 800cdb2:	f7ff fe13 	bl	800c9dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800cdb6:	e7cb      	b.n	800cd50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800cdb8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800cdb8:	ee07 2a90 	vmov	s15, r2
 800cdbc:	ee07 1a10 	vmov	s14, r1
 800cdc0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800cdc4:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800cdc8:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800cdd8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800cdcc:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800cdd0:	ee20 0a27 	vmul.f32	s0, s0, s15
 800cdd4:	f7ff bf76 	b.w	800ccc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800cdd8:	3d000000 	.word	0x3d000000

0800cddc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800cddc:	b538      	push	{r3, r4, r5, lr}
 800cdde:	ed2d 8b02 	vpush	{d8}
 800cde2:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800cde6:	4604      	mov	r4, r0
 800cde8:	b31d      	cbz	r5, 800ce32 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800cdea:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800cdee:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800cdf2:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800cdf6:	ee78 8a67 	vsub.f32	s17, s16, s15
 800cdfa:	ee38 8a27 	vadd.f32	s16, s16, s15
 800cdfe:	eef0 0a68 	vmov.f32	s1, s17
 800ce02:	f7ff fd07 	bl	800c814 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800ce06:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800ce0a:	eef0 1a48 	vmov.f32	s3, s16
 800ce0e:	eeb0 0a41 	vmov.f32	s0, s2
 800ce12:	eef0 0a68 	vmov.f32	s1, s17
 800ce16:	4620      	mov	r0, r4
 800ce18:	f7ff fe6c 	bl	800caf4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800ce1c:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800ce20:	eef0 1a68 	vmov.f32	s3, s17
 800ce24:	eef0 0a48 	vmov.f32	s1, s16
 800ce28:	eeb0 0a41 	vmov.f32	s0, s2
 800ce2c:	4620      	mov	r0, r4
 800ce2e:	f7ff fe61 	bl	800caf4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800ce32:	ecbd 8b02 	vpop	{d8}
 800ce36:	4628      	mov	r0, r5
 800ce38:	bd38      	pop	{r3, r4, r5, pc}

0800ce3a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800ce3a:	b510      	push	{r4, lr}
 800ce3c:	ed2d 8b02 	vpush	{d8}
 800ce40:	4604      	mov	r4, r0
 800ce42:	eeb0 8a40 	vmov.f32	s16, s0
 800ce46:	eef0 8a60 	vmov.f32	s17, s1
 800ce4a:	f7ff ffc7 	bl	800cddc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800ce4e:	b9d0      	cbnz	r0, 800ce86 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800ce50:	4620      	mov	r0, r4
 800ce52:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800ce56:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800ce5a:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800ce5e:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800ce62:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800ce66:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800ce6a:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800ce6e:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800ce72:	eef0 0a68 	vmov.f32	s1, s17
 800ce76:	eeb0 0a48 	vmov.f32	s0, s16
 800ce7a:	f7ff fdaf 	bl	800c9dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800ce7e:	2001      	movs	r0, #1
 800ce80:	ecbd 8b02 	vpop	{d8}
 800ce84:	bd10      	pop	{r4, pc}
 800ce86:	2000      	movs	r0, #0
 800ce88:	e7fa      	b.n	800ce80 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800ce8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800ce8a:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800ce8e:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800ce92:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800ce96:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800ce9a:	f7ff be2b 	b.w	800caf4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800cea0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800cea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cea4:	b089      	sub	sp, #36	@ 0x24
 800cea6:	461c      	mov	r4, r3
 800cea8:	f10d 0820 	add.w	r8, sp, #32
 800ceac:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800ceb0:	9304      	str	r3, [sp, #16]
 800ceb2:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800ceb4:	9105      	str	r1, [sp, #20]
 800ceb6:	2300      	movs	r3, #0
 800ceb8:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800cebc:	9306      	str	r3, [sp, #24]
 800cebe:	f848 3d04 	str.w	r3, [r8, #-4]!
 800cec2:	9b04      	ldr	r3, [sp, #16]
 800cec4:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800cec8:	4682      	mov	sl, r0
 800ceca:	4615      	mov	r5, r2
 800cecc:	9b05      	ldr	r3, [sp, #20]
 800cece:	429d      	cmp	r5, r3
 800ced0:	d96d      	bls.n	800cfae <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800ced2:	3d01      	subs	r5, #1
 800ced4:	f819 3005 	ldrb.w	r3, [r9, r5]
 800ced8:	2b06      	cmp	r3, #6
 800ceda:	d8f7      	bhi.n	800cecc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800cedc:	a201      	add	r2, pc, #4	@ (adr r2, 800cee4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800cede:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cee2:	bf00      	nop
 800cee4:	0800cf03 	.word	0x0800cf03
 800cee8:	0800cecd 	.word	0x0800cecd
 800ceec:	0800cf01 	.word	0x0800cf01
 800cef0:	0800cf25 	.word	0x0800cf25
 800cef4:	0800cf25 	.word	0x0800cf25
 800cef8:	0800cf29 	.word	0x0800cf29
 800cefc:	0800cf69 	.word	0x0800cf69
 800cf00:	3c02      	subs	r4, #2
 800cf02:	4650      	mov	r0, sl
 800cf04:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800cf08:	9400      	str	r4, [sp, #0]
 800cf0a:	462b      	mov	r3, r5
 800cf0c:	4642      	mov	r2, r8
 800cf0e:	a906      	add	r1, sp, #24
 800cf10:	f7ff fcae 	bl	800c870 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800cf14:	eddd 0a07 	vldr	s1, [sp, #28]
 800cf18:	ed9d 0a06 	vldr	s0, [sp, #24]
 800cf1c:	4630      	mov	r0, r6
 800cf1e:	f7ff fed1 	bl	800ccc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800cf22:	e7d3      	b.n	800cecc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800cf24:	3c01      	subs	r4, #1
 800cf26:	e7ec      	b.n	800cf02 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800cf28:	f1a4 0b04 	sub.w	fp, r4, #4
 800cf2c:	3c02      	subs	r4, #2
 800cf2e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800cf32:	4650      	mov	r0, sl
 800cf34:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800cf38:	f8cd b000 	str.w	fp, [sp]
 800cf3c:	462b      	mov	r3, r5
 800cf3e:	4642      	mov	r2, r8
 800cf40:	a906      	add	r1, sp, #24
 800cf42:	f7ff fc95 	bl	800c870 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800cf46:	eddd 2a07 	vldr	s5, [sp, #28]
 800cf4a:	ed9d 2a06 	vldr	s4, [sp, #24]
 800cf4e:	ed54 1a01 	vldr	s3, [r4, #-4]
 800cf52:	ed14 1a02 	vldr	s2, [r4, #-8]
 800cf56:	edd4 0a01 	vldr	s1, [r4, #4]
 800cf5a:	ed94 0a00 	vldr	s0, [r4]
 800cf5e:	4630      	mov	r0, r6
 800cf60:	f7ff fc1a 	bl	800c798 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800cf64:	465c      	mov	r4, fp
 800cf66:	e7b1      	b.n	800cecc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800cf68:	f1a4 0b06 	sub.w	fp, r4, #6
 800cf6c:	3c02      	subs	r4, #2
 800cf6e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800cf72:	4650      	mov	r0, sl
 800cf74:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800cf78:	f8cd b000 	str.w	fp, [sp]
 800cf7c:	462b      	mov	r3, r5
 800cf7e:	4642      	mov	r2, r8
 800cf80:	a906      	add	r1, sp, #24
 800cf82:	f7ff fc75 	bl	800c870 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800cf86:	eddd 3a07 	vldr	s7, [sp, #28]
 800cf8a:	ed9d 3a06 	vldr	s6, [sp, #24]
 800cf8e:	ed54 2a03 	vldr	s5, [r4, #-12]
 800cf92:	ed14 2a04 	vldr	s4, [r4, #-16]
 800cf96:	ed54 1a01 	vldr	s3, [r4, #-4]
 800cf9a:	ed14 1a02 	vldr	s2, [r4, #-8]
 800cf9e:	edd4 0a01 	vldr	s1, [r4, #4]
 800cfa2:	ed94 0a00 	vldr	s0, [r4]
 800cfa6:	4630      	mov	r0, r6
 800cfa8:	f7ff fc15 	bl	800c7d6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800cfac:	e7da      	b.n	800cf64 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800cfae:	9b04      	ldr	r3, [sp, #16]
 800cfb0:	b113      	cbz	r3, 800cfb8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800cfb2:	4630      	mov	r0, r6
 800cfb4:	f7ff ff69 	bl	800ce8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800cfb8:	b009      	add	sp, #36	@ 0x24
 800cfba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfbe:	bf00      	nop

0800cfc0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800cfc0:	eef0 7a60 	vmov.f32	s15, s1
 800cfc4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800cfc8:	6803      	ldr	r3, [r0, #0]
 800cfca:	ee17 2a90 	vmov	r2, s15
 800cfce:	eef0 7a40 	vmov.f32	s15, s0
 800cfd2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800cfd6:	689b      	ldr	r3, [r3, #8]
 800cfd8:	ee17 1a90 	vmov	r1, s15
 800cfdc:	4718      	bx	r3
	...

0800cfe0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800cfe0:	b510      	push	{r4, lr}
 800cfe2:	4b04      	ldr	r3, [pc, #16]	@ (800cff4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800cfe4:	4604      	mov	r4, r0
 800cfe6:	f840 3b14 	str.w	r3, [r0], #20
 800cfea:	f001 f8d3 	bl	800e194 <_ZN8touchgfx7OutlineD1Ev>
 800cfee:	4620      	mov	r0, r4
 800cff0:	bd10      	pop	{r4, pc}
 800cff2:	bf00      	nop
 800cff4:	08026148 	.word	0x08026148

0800cff8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800cff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cffc:	ed2d 8b04 	vpush	{d8-d9}
 800d000:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800d004:	b0b5      	sub	sp, #212	@ 0xd4
 800d006:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d00a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d00e:	4605      	mov	r5, r0
 800d010:	468b      	mov	fp, r1
 800d012:	9206      	str	r2, [sp, #24]
 800d014:	461e      	mov	r6, r3
 800d016:	f04f 0400 	mov.w	r4, #0
 800d01a:	f240 814e 	bls.w	800d2ba <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800d01e:	23ff      	movs	r3, #255	@ 0xff
 800d020:	9300      	str	r3, [sp, #0]
 800d022:	1d02      	adds	r2, r0, #4
 800d024:	6981      	ldr	r1, [r0, #24]
 800d026:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800d028:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800d2c0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800d02c:	a808      	add	r0, sp, #32
 800d02e:	f014 fdc1 	bl	8021bb4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d032:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800d036:	4ba3      	ldr	r3, [pc, #652]	@ (800d2c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800d038:	edd5 6a08 	vldr	s13, [r5, #32]
 800d03c:	9308      	str	r3, [sp, #32]
 800d03e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d046:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800d04a:	bf48      	it	mi
 800d04c:	eef1 7a67 	vnegmi.f32	s15, s15
 800d050:	ee67 7a87 	vmul.f32	s15, s15, s14
 800d054:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800d058:	2201      	movs	r2, #1
 800d05a:	9325      	str	r3, [sp, #148]	@ 0x94
 800d05c:	2300      	movs	r3, #0
 800d05e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800d062:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800d066:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800d06a:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800d06e:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800d072:	7f6a      	ldrb	r2, [r5, #29]
 800d074:	7fab      	ldrb	r3, [r5, #30]
 800d076:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800d07a:	435a      	muls	r2, r3
 800d07c:	ee27 7a26 	vmul.f32	s14, s14, s13
 800d080:	1c53      	adds	r3, r2, #1
 800d082:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800d086:	ee67 7a27 	vmul.f32	s15, s14, s15
 800d08a:	f04f 0800 	mov.w	r8, #0
 800d08e:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800d092:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800d096:	942a      	str	r4, [sp, #168]	@ 0xa8
 800d098:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800d09c:	942b      	str	r4, [sp, #172]	@ 0xac
 800d09e:	942c      	str	r4, [sp, #176]	@ 0xb0
 800d0a0:	942d      	str	r4, [sp, #180]	@ 0xb4
 800d0a2:	942e      	str	r4, [sp, #184]	@ 0xb8
 800d0a4:	942f      	str	r4, [sp, #188]	@ 0xbc
 800d0a6:	9430      	str	r4, [sp, #192]	@ 0xc0
 800d0a8:	9431      	str	r4, [sp, #196]	@ 0xc4
 800d0aa:	9432      	str	r4, [sp, #200]	@ 0xc8
 800d0ac:	9433      	str	r4, [sp, #204]	@ 0xcc
 800d0ae:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800d0b2:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800d0b6:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800d0ba:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800d0be:	eef0 9a49 	vmov.f32	s19, s18
 800d0c2:	eeb0 8a49 	vmov.f32	s16, s18
 800d0c6:	eef0 8a49 	vmov.f32	s17, s18
 800d0ca:	4644      	mov	r4, r8
 800d0cc:	46c1      	mov	r9, r8
 800d0ce:	af08      	add	r7, sp, #32
 800d0d0:	f04f 0a01 	mov.w	sl, #1
 800d0d4:	9b06      	ldr	r3, [sp, #24]
 800d0d6:	454b      	cmp	r3, r9
 800d0d8:	f000 80cc 	beq.w	800d274 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800d0dc:	f109 0301 	add.w	r3, r9, #1
 800d0e0:	9305      	str	r3, [sp, #20]
 800d0e2:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800d0e6:	2b06      	cmp	r3, #6
 800d0e8:	d839      	bhi.n	800d15e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d0ea:	e8df f003 	tbb	[pc, r3]
 800d0ee:	3b04      	.short	0x3b04
 800d0f0:	817c6f60 	.word	0x817c6f60
 800d0f4:	a0          	.byte	0xa0
 800d0f5:	00          	.byte	0x00
 800d0f6:	45c1      	cmp	r9, r8
 800d0f8:	d92b      	bls.n	800d152 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800d0fa:	eef0 0a49 	vmov.f32	s1, s18
 800d0fe:	eeb0 0a69 	vmov.f32	s0, s19
 800d102:	4638      	mov	r0, r7
 800d104:	f7ff fdde 	bl	800ccc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d108:	4638      	mov	r0, r7
 800d10a:	f7ff fe67 	bl	800cddc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d10e:	4681      	mov	r9, r0
 800d110:	b9f8      	cbnz	r0, 800d152 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800d112:	eef0 0a49 	vmov.f32	s1, s18
 800d116:	eeb0 0a69 	vmov.f32	s0, s19
 800d11a:	4638      	mov	r0, r7
 800d11c:	f7ff fe8d 	bl	800ce3a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800d120:	4628      	mov	r0, r5
 800d122:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800d126:	e9cd b600 	strd	fp, r6, [sp]
 800d12a:	4623      	mov	r3, r4
 800d12c:	9a05      	ldr	r2, [sp, #20]
 800d12e:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800d132:	4641      	mov	r1, r8
 800d134:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800d138:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800d13c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800d140:	f7ff feae 	bl	800cea0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d144:	eef0 0a49 	vmov.f32	s1, s18
 800d148:	eeb0 0a69 	vmov.f32	s0, s19
 800d14c:	4638      	mov	r0, r7
 800d14e:	f7ff fe74 	bl	800ce3a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800d152:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800d156:	eeb0 8a49 	vmov.f32	s16, s18
 800d15a:	eef0 8a69 	vmov.f32	s17, s19
 800d15e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800d162:	e7b7      	b.n	800d0d4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800d164:	45c1      	cmp	r9, r8
 800d166:	d90d      	bls.n	800d184 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800d168:	4638      	mov	r0, r7
 800d16a:	f7ff fe37 	bl	800cddc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d16e:	b948      	cbnz	r0, 800d184 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800d170:	e9cd a702 	strd	sl, r7, [sp, #8]
 800d174:	e9cd b600 	strd	fp, r6, [sp]
 800d178:	4623      	mov	r3, r4
 800d17a:	464a      	mov	r2, r9
 800d17c:	4641      	mov	r1, r8
 800d17e:	4628      	mov	r0, r5
 800d180:	f7ff fe8e 	bl	800cea0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d184:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d188:	edd3 8a00 	vldr	s17, [r3]
 800d18c:	ed93 8a01 	vldr	s16, [r3, #4]
 800d190:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800d194:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800d198:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800d19c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800d1a0:	3402      	adds	r4, #2
 800d1a2:	46c8      	mov	r8, r9
 800d1a4:	eeb0 9a48 	vmov.f32	s18, s16
 800d1a8:	eef0 9a68 	vmov.f32	s19, s17
 800d1ac:	e7d7      	b.n	800d15e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d1ae:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d1b2:	edd3 8a00 	vldr	s17, [r3]
 800d1b6:	ed93 8a01 	vldr	s16, [r3, #4]
 800d1ba:	eeb0 0a68 	vmov.f32	s0, s17
 800d1be:	eef0 0a48 	vmov.f32	s1, s16
 800d1c2:	4638      	mov	r0, r7
 800d1c4:	f7ff fd7e 	bl	800ccc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d1c8:	3402      	adds	r4, #2
 800d1ca:	e7c8      	b.n	800d15e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d1cc:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d1d0:	edd3 8a00 	vldr	s17, [r3]
 800d1d4:	eef0 0a48 	vmov.f32	s1, s16
 800d1d8:	eeb0 0a68 	vmov.f32	s0, s17
 800d1dc:	4638      	mov	r0, r7
 800d1de:	f7ff fd71 	bl	800ccc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d1e2:	3401      	adds	r4, #1
 800d1e4:	e7bb      	b.n	800d15e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d1e6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800d1ea:	ed93 8a00 	vldr	s16, [r3]
 800d1ee:	e7f1      	b.n	800d1d4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800d1f0:	00a3      	lsls	r3, r4, #2
 800d1f2:	f103 0208 	add.w	r2, r3, #8
 800d1f6:	f103 090c 	add.w	r9, r3, #12
 800d1fa:	4432      	add	r2, r6
 800d1fc:	4433      	add	r3, r6
 800d1fe:	44b1      	add	r9, r6
 800d200:	ed92 2a00 	vldr	s4, [r2]
 800d204:	edd9 2a00 	vldr	s5, [r9]
 800d208:	edd3 1a01 	vldr	s3, [r3, #4]
 800d20c:	ed93 1a00 	vldr	s2, [r3]
 800d210:	9207      	str	r2, [sp, #28]
 800d212:	eef0 0a48 	vmov.f32	s1, s16
 800d216:	eeb0 0a68 	vmov.f32	s0, s17
 800d21a:	4638      	mov	r0, r7
 800d21c:	f7ff fabc 	bl	800c798 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800d220:	9a07      	ldr	r2, [sp, #28]
 800d222:	ed99 8a00 	vldr	s16, [r9]
 800d226:	edd2 8a00 	vldr	s17, [r2]
 800d22a:	3404      	adds	r4, #4
 800d22c:	e797      	b.n	800d15e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d22e:	00a3      	lsls	r3, r4, #2
 800d230:	f103 0210 	add.w	r2, r3, #16
 800d234:	f103 0914 	add.w	r9, r3, #20
 800d238:	4432      	add	r2, r6
 800d23a:	4433      	add	r3, r6
 800d23c:	44b1      	add	r9, r6
 800d23e:	ed92 3a00 	vldr	s6, [r2]
 800d242:	edd9 3a00 	vldr	s7, [r9]
 800d246:	edd3 2a03 	vldr	s5, [r3, #12]
 800d24a:	ed93 2a02 	vldr	s4, [r3, #8]
 800d24e:	edd3 1a01 	vldr	s3, [r3, #4]
 800d252:	ed93 1a00 	vldr	s2, [r3]
 800d256:	9207      	str	r2, [sp, #28]
 800d258:	eef0 0a48 	vmov.f32	s1, s16
 800d25c:	eeb0 0a68 	vmov.f32	s0, s17
 800d260:	4638      	mov	r0, r7
 800d262:	f7ff fab8 	bl	800c7d6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800d266:	9a07      	ldr	r2, [sp, #28]
 800d268:	ed99 8a00 	vldr	s16, [r9]
 800d26c:	edd2 8a00 	vldr	s17, [r2]
 800d270:	3406      	adds	r4, #6
 800d272:	e774      	b.n	800d15e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800d274:	9b06      	ldr	r3, [sp, #24]
 800d276:	4543      	cmp	r3, r8
 800d278:	af08      	add	r7, sp, #32
 800d27a:	d90f      	bls.n	800d29c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800d27c:	4638      	mov	r0, r7
 800d27e:	f7ff fdad 	bl	800cddc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d282:	b958      	cbnz	r0, 800d29c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800d284:	2301      	movs	r3, #1
 800d286:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800d28a:	9703      	str	r7, [sp, #12]
 800d28c:	f8cd b000 	str.w	fp, [sp]
 800d290:	4623      	mov	r3, r4
 800d292:	9a06      	ldr	r2, [sp, #24]
 800d294:	4641      	mov	r1, r8
 800d296:	4628      	mov	r0, r5
 800d298:	f7ff fe02 	bl	800cea0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800d29c:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800d2a0:	4638      	mov	r0, r7
 800d2a2:	f014 fd1b 	bl	8021cdc <_ZN8touchgfx6Canvas6renderEh>
 800d2a6:	4604      	mov	r4, r0
 800d2a8:	4638      	mov	r0, r7
 800d2aa:	f7ff fe99 	bl	800cfe0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800d2ae:	4620      	mov	r0, r4
 800d2b0:	b035      	add	sp, #212	@ 0xd4
 800d2b2:	ecbd 8b04 	vpop	{d8-d9}
 800d2b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2ba:	2401      	movs	r4, #1
 800d2bc:	e7f7      	b.n	800d2ae <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800d2be:	bf00      	nop
 800d2c0:	00000000 	.word	0x00000000
 800d2c4:	08025a94 	.word	0x08025a94

0800d2c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800d2c8:	b510      	push	{r4, lr}
 800d2ca:	4604      	mov	r4, r0
 800d2cc:	f7ff fe88 	bl	800cfe0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800d2d0:	4620      	mov	r0, r4
 800d2d2:	21b0      	movs	r1, #176	@ 0xb0
 800d2d4:	f015 f8d1 	bl	802247a <_ZdlPvj>
 800d2d8:	4620      	mov	r0, r4
 800d2da:	bd10      	pop	{r4, pc}

0800d2dc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800d2dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d2e0:	ed2d 8b06 	vpush	{d8-d10}
 800d2e4:	b0aa      	sub	sp, #168	@ 0xa8
 800d2e6:	4698      	mov	r8, r3
 800d2e8:	23ff      	movs	r3, #255	@ 0xff
 800d2ea:	4607      	mov	r7, r0
 800d2ec:	9300      	str	r3, [sp, #0]
 800d2ee:	4689      	mov	r9, r1
 800d2f0:	4692      	mov	sl, r2
 800d2f2:	6981      	ldr	r1, [r0, #24]
 800d2f4:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800d2f6:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800d500 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800d2fa:	1d02      	adds	r2, r0, #4
 800d2fc:	a80d      	add	r0, sp, #52	@ 0x34
 800d2fe:	f014 fc59 	bl	8021bb4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d302:	7f3b      	ldrb	r3, [r7, #28]
 800d304:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800d500 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800d308:	1e5a      	subs	r2, r3, #1
 800d30a:	4253      	negs	r3, r2
 800d30c:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800d310:	4153      	adcs	r3, r2
 800d312:	eeb0 0a60 	vmov.f32	s0, s1
 800d316:	4628      	mov	r0, r5
 800d318:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800d31c:	f004 fc07 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d320:	44ca      	add	sl, r9
 800d322:	eeb0 9a40 	vmov.f32	s18, s0
 800d326:	eef0 9a60 	vmov.f32	s19, s1
 800d32a:	eef0 8a48 	vmov.f32	s17, s16
 800d32e:	2400      	movs	r4, #0
 800d330:	45ca      	cmp	sl, r9
 800d332:	f000 80cd 	beq.w	800d4d0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800d336:	f819 3b01 	ldrb.w	r3, [r9], #1
 800d33a:	2b06      	cmp	r3, #6
 800d33c:	d8f8      	bhi.n	800d330 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d33e:	e8df f003 	tbb	[pc, r3]
 800d342:	0804      	.short	0x0804
 800d344:	58533f2a 	.word	0x58533f2a
 800d348:	8a          	.byte	0x8a
 800d349:	00          	.byte	0x00
 800d34a:	a80d      	add	r0, sp, #52	@ 0x34
 800d34c:	f014 fca4 	bl	8021c98 <_ZN8touchgfx6Canvas5closeEv>
 800d350:	e7ee      	b.n	800d330 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d352:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d356:	edd3 8a00 	vldr	s17, [r3]
 800d35a:	ed93 8a01 	vldr	s16, [r3, #4]
 800d35e:	eeb0 0a68 	vmov.f32	s0, s17
 800d362:	eef0 0a48 	vmov.f32	s1, s16
 800d366:	4628      	mov	r0, r5
 800d368:	f004 fbe1 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d36c:	eef0 7a60 	vmov.f32	s15, s1
 800d370:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d374:	a80d      	add	r0, sp, #52	@ 0x34
 800d376:	ee17 2a90 	vmov	r2, s15
 800d37a:	eef0 7a40 	vmov.f32	s15, s0
 800d37e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d382:	eeb0 9a40 	vmov.f32	s18, s0
 800d386:	ee17 1a90 	vmov	r1, s15
 800d38a:	eef0 9a60 	vmov.f32	s19, s1
 800d38e:	f014 fd5d 	bl	8021e4c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d392:	3402      	adds	r4, #2
 800d394:	e7cc      	b.n	800d330 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d396:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d39a:	edd3 8a00 	vldr	s17, [r3]
 800d39e:	ed93 8a01 	vldr	s16, [r3, #4]
 800d3a2:	eeb0 0a68 	vmov.f32	s0, s17
 800d3a6:	eef0 0a48 	vmov.f32	s1, s16
 800d3aa:	4628      	mov	r0, r5
 800d3ac:	f004 fbbf 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d3b0:	a80d      	add	r0, sp, #52	@ 0x34
 800d3b2:	eeb0 9a40 	vmov.f32	s18, s0
 800d3b6:	eef0 9a60 	vmov.f32	s19, s1
 800d3ba:	f7ff fe01 	bl	800cfc0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800d3be:	e7e8      	b.n	800d392 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800d3c0:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d3c4:	edd3 8a00 	vldr	s17, [r3]
 800d3c8:	eef0 0a48 	vmov.f32	s1, s16
 800d3cc:	eeb0 0a68 	vmov.f32	s0, s17
 800d3d0:	4628      	mov	r0, r5
 800d3d2:	f004 fbac 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d3d6:	a80d      	add	r0, sp, #52	@ 0x34
 800d3d8:	eeb0 9a40 	vmov.f32	s18, s0
 800d3dc:	eef0 9a60 	vmov.f32	s19, s1
 800d3e0:	3401      	adds	r4, #1
 800d3e2:	f7ff fded 	bl	800cfc0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800d3e6:	e7a3      	b.n	800d330 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d3e8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800d3ec:	ed93 8a00 	vldr	s16, [r3]
 800d3f0:	e7ea      	b.n	800d3c8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800d3f2:	1ca3      	adds	r3, r4, #2
 800d3f4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800d3f8:	ed53 0a01 	vldr	s1, [r3, #-4]
 800d3fc:	ed13 0a02 	vldr	s0, [r3, #-8]
 800d400:	edd3 8a00 	vldr	s17, [r3]
 800d404:	ed93 8a01 	vldr	s16, [r3, #4]
 800d408:	4628      	mov	r0, r5
 800d40a:	f004 fb90 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d40e:	4628      	mov	r0, r5
 800d410:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800d414:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800d418:	eeb0 0a68 	vmov.f32	s0, s17
 800d41c:	eef0 0a48 	vmov.f32	s1, s16
 800d420:	f004 fb85 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d424:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800d428:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800d42c:	eef0 2a60 	vmov.f32	s5, s1
 800d430:	eeb0 2a40 	vmov.f32	s4, s0
 800d434:	eeb0 aa40 	vmov.f32	s20, s0
 800d438:	eef0 aa60 	vmov.f32	s21, s1
 800d43c:	eeb0 0a49 	vmov.f32	s0, s18
 800d440:	eef0 0a69 	vmov.f32	s1, s19
 800d444:	a80d      	add	r0, sp, #52	@ 0x34
 800d446:	f7ff f9a7 	bl	800c798 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800d44a:	3404      	adds	r4, #4
 800d44c:	eef0 9a6a 	vmov.f32	s19, s21
 800d450:	eeb0 9a4a 	vmov.f32	s18, s20
 800d454:	e76c      	b.n	800d330 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800d456:	1d26      	adds	r6, r4, #4
 800d458:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800d45c:	ed56 0a03 	vldr	s1, [r6, #-12]
 800d460:	ed16 0a04 	vldr	s0, [r6, #-16]
 800d464:	edd6 8a00 	vldr	s17, [r6]
 800d468:	ed96 8a01 	vldr	s16, [r6, #4]
 800d46c:	4628      	mov	r0, r5
 800d46e:	f004 fb5e 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d472:	4628      	mov	r0, r5
 800d474:	ed8d 0a07 	vstr	s0, [sp, #28]
 800d478:	edcd 0a08 	vstr	s1, [sp, #32]
 800d47c:	ed16 0a02 	vldr	s0, [r6, #-8]
 800d480:	ed56 0a01 	vldr	s1, [r6, #-4]
 800d484:	f004 fb53 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d488:	4628      	mov	r0, r5
 800d48a:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800d48e:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800d492:	eeb0 0a68 	vmov.f32	s0, s17
 800d496:	eef0 0a48 	vmov.f32	s1, s16
 800d49a:	f004 fb48 	bl	8011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d49e:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800d4a2:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800d4a6:	eddd 1a08 	vldr	s3, [sp, #32]
 800d4aa:	ed9d 1a07 	vldr	s2, [sp, #28]
 800d4ae:	eef0 3a60 	vmov.f32	s7, s1
 800d4b2:	eeb0 3a40 	vmov.f32	s6, s0
 800d4b6:	eeb0 aa40 	vmov.f32	s20, s0
 800d4ba:	eef0 aa60 	vmov.f32	s21, s1
 800d4be:	eeb0 0a49 	vmov.f32	s0, s18
 800d4c2:	eef0 0a69 	vmov.f32	s1, s19
 800d4c6:	a80d      	add	r0, sp, #52	@ 0x34
 800d4c8:	f7ff f985 	bl	800c7d6 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800d4cc:	3406      	adds	r4, #6
 800d4ce:	e7bd      	b.n	800d44c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800d4d0:	7f7b      	ldrb	r3, [r7, #29]
 800d4d2:	7fb9      	ldrb	r1, [r7, #30]
 800d4d4:	4359      	muls	r1, r3
 800d4d6:	1c4b      	adds	r3, r1, #1
 800d4d8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800d4dc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800d4e0:	a80d      	add	r0, sp, #52	@ 0x34
 800d4e2:	f014 fbfb 	bl	8021cdc <_ZN8touchgfx6Canvas6renderEh>
 800d4e6:	4b07      	ldr	r3, [pc, #28]	@ (800d504 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800d4e8:	930d      	str	r3, [sp, #52]	@ 0x34
 800d4ea:	4604      	mov	r4, r0
 800d4ec:	a812      	add	r0, sp, #72	@ 0x48
 800d4ee:	f000 fe51 	bl	800e194 <_ZN8touchgfx7OutlineD1Ev>
 800d4f2:	4620      	mov	r0, r4
 800d4f4:	b02a      	add	sp, #168	@ 0xa8
 800d4f6:	ecbd 8b06 	vpop	{d8-d10}
 800d4fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d4fe:	bf00      	nop
 800d500:	00000000 	.word	0x00000000
 800d504:	08026148 	.word	0x08026148

0800d508 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800d508:	b410      	push	{r4}
 800d50a:	7f04      	ldrb	r4, [r0, #28]
 800d50c:	b11c      	cbz	r4, 800d516 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800d50e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d512:	f7ff bee3 	b.w	800d2dc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800d516:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d51a:	f7ff bd6d 	b.w	800cff8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800d520 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800d520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d524:	4691      	mov	r9, r2
 800d526:	4602      	mov	r2, r0
 800d528:	4605      	mov	r5, r0
 800d52a:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800d52e:	b085      	sub	sp, #20
 800d530:	4688      	mov	r8, r1
 800d532:	6851      	ldr	r1, [r2, #4]
 800d534:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800d538:	469a      	mov	sl, r3
 800d53a:	ab02      	add	r3, sp, #8
 800d53c:	c303      	stmia	r3!, {r0, r1}
 800d53e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d542:	2b00      	cmp	r3, #0
 800d544:	af02      	add	r7, sp, #8
 800d546:	dd08      	ble.n	800d55a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d548:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800d54c:	2c00      	cmp	r4, #0
 800d54e:	dd04      	ble.n	800d55a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d550:	4a2e      	ldr	r2, [pc, #184]	@ (800d60c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800d552:	7812      	ldrb	r2, [r2, #0]
 800d554:	b122      	cbz	r2, 800d560 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800d556:	2a01      	cmp	r2, #1
 800d558:	d02d      	beq.n	800d5b6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800d55a:	b005      	add	sp, #20
 800d55c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d560:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d564:	441c      	add	r4, r3
 800d566:	b2a4      	uxth	r4, r4
 800d568:	b226      	sxth	r6, r4
 800d56a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800d56e:	42b3      	cmp	r3, r6
 800d570:	daf3      	bge.n	800d55a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d572:	e9cd b700 	strd	fp, r7, [sp]
 800d576:	4653      	mov	r3, sl
 800d578:	464a      	mov	r2, r9
 800d57a:	4641      	mov	r1, r8
 800d57c:	4628      	mov	r0, r5
 800d57e:	f7ff ffc3 	bl	800d508 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800d582:	b940      	cbnz	r0, 800d596 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800d584:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d588:	2b01      	cmp	r3, #1
 800d58a:	d004      	beq.n	800d596 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800d58c:	3301      	adds	r3, #1
 800d58e:	105b      	asrs	r3, r3, #1
 800d590:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d594:	e7ed      	b.n	800d572 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800d596:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d59a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d59e:	4413      	add	r3, r2
 800d5a0:	b29b      	uxth	r3, r3
 800d5a2:	441a      	add	r2, r3
 800d5a4:	b212      	sxth	r2, r2
 800d5a6:	4296      	cmp	r6, r2
 800d5a8:	f8ad 300a 	strh.w	r3, [sp, #10]
 800d5ac:	dadd      	bge.n	800d56a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800d5ae:	1ae3      	subs	r3, r4, r3
 800d5b0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d5b4:	e7d9      	b.n	800d56a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800d5b6:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800d5ba:	441c      	add	r4, r3
 800d5bc:	b2a4      	uxth	r4, r4
 800d5be:	b226      	sxth	r6, r4
 800d5c0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800d5c4:	42b3      	cmp	r3, r6
 800d5c6:	dac8      	bge.n	800d55a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800d5c8:	e9cd b700 	strd	fp, r7, [sp]
 800d5cc:	4653      	mov	r3, sl
 800d5ce:	464a      	mov	r2, r9
 800d5d0:	4641      	mov	r1, r8
 800d5d2:	4628      	mov	r0, r5
 800d5d4:	f7ff ff98 	bl	800d508 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800d5d8:	b940      	cbnz	r0, 800d5ec <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800d5da:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d5de:	2b01      	cmp	r3, #1
 800d5e0:	d004      	beq.n	800d5ec <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800d5e2:	3301      	adds	r3, #1
 800d5e4:	105b      	asrs	r3, r3, #1
 800d5e6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d5ea:	e7ed      	b.n	800d5c8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800d5ec:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d5f0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d5f4:	4413      	add	r3, r2
 800d5f6:	b29b      	uxth	r3, r3
 800d5f8:	441a      	add	r2, r3
 800d5fa:	b212      	sxth	r2, r2
 800d5fc:	4296      	cmp	r6, r2
 800d5fe:	f8ad 3008 	strh.w	r3, [sp, #8]
 800d602:	dadd      	bge.n	800d5c0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800d604:	1ae3      	subs	r3, r4, r3
 800d606:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d60a:	e7d9      	b.n	800d5c0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800d60c:	20014036 	.word	0x20014036

0800d610 <_ZN8touchgfx6CircleD1Ev>:
 800d610:	4770      	bx	lr

0800d612 <_ZN8touchgfx6CircleD0Ev>:
 800d612:	b510      	push	{r4, lr}
 800d614:	2148      	movs	r1, #72	@ 0x48
 800d616:	4604      	mov	r4, r0
 800d618:	f014 ff2f 	bl	802247a <_ZdlPvj>
 800d61c:	4620      	mov	r0, r4
 800d61e:	bd10      	pop	{r4, pc}

0800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800d620:	b507      	push	{r0, r1, r2, lr}
 800d622:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800d626:	ab01      	add	r3, sp, #4
 800d628:	6809      	ldr	r1, [r1, #0]
 800d62a:	6800      	ldr	r0, [r0, #0]
 800d62c:	f004 fb98 	bl	8011d60 <_ZN8touchgfx6muldivElllRl>
 800d630:	b003      	add	sp, #12
 800d632:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800d638 <_ZN8touchgfx7CWRUtil4sineEi>:
 800d638:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 800d63c:	fb90 f2f3 	sdiv	r2, r0, r3
 800d640:	fb02 0013 	mls	r0, r2, r3, r0
 800d644:	2800      	cmp	r0, #0
 800d646:	bfb8      	it	lt
 800d648:	18c0      	addlt	r0, r0, r3
 800d64a:	285a      	cmp	r0, #90	@ 0x5a
 800d64c:	4b09      	ldr	r3, [pc, #36]	@ (800d674 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800d64e:	dc02      	bgt.n	800d656 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800d650:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800d654:	4770      	bx	lr
 800d656:	28b4      	cmp	r0, #180	@ 0xb4
 800d658:	dc02      	bgt.n	800d660 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800d65a:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 800d65e:	e7f7      	b.n	800d650 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800d660:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 800d664:	bfd4      	ite	le
 800d666:	38b4      	suble	r0, #180	@ 0xb4
 800d668:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 800d66c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800d670:	4240      	negs	r0, r0
 800d672:	4770      	bx	lr
 800d674:	08025aec 	.word	0x08025aec

0800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800d678:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 800d67c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d67e:	fb90 f2f3 	sdiv	r2, r0, r3
 800d682:	fb02 0013 	mls	r0, r2, r3, r0
 800d686:	2800      	cmp	r0, #0
 800d688:	bfb8      	it	lt
 800d68a:	18c0      	addlt	r0, r0, r3
 800d68c:	1144      	asrs	r4, r0, #5
 800d68e:	f000 061f 	and.w	r6, r0, #31
 800d692:	4620      	mov	r0, r4
 800d694:	f7ff ffd0 	bl	800d638 <_ZN8touchgfx7CWRUtil4sineEi>
 800d698:	4605      	mov	r5, r0
 800d69a:	b90e      	cbnz	r6, 800d6a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800d69c:	b002      	add	sp, #8
 800d69e:	bd70      	pop	{r4, r5, r6, pc}
 800d6a0:	1c60      	adds	r0, r4, #1
 800d6a2:	f7ff ffc9 	bl	800d638 <_ZN8touchgfx7CWRUtil4sineEi>
 800d6a6:	ab01      	add	r3, sp, #4
 800d6a8:	2220      	movs	r2, #32
 800d6aa:	4631      	mov	r1, r6
 800d6ac:	1b40      	subs	r0, r0, r5
 800d6ae:	f004 fb57 	bl	8011d60 <_ZN8touchgfx6muldivElllRl>
 800d6b2:	4428      	add	r0, r5
 800d6b4:	e7f2      	b.n	800d69c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800d6b6:	b508      	push	{r3, lr}
 800d6b8:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 800d6bc:	f7ff ffdc 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d6c0:	bd08      	pop	{r3, pc}
	...

0800d6c4 <_ZN8touchgfx6CircleC1Ev>:
 800d6c4:	b510      	push	{r4, lr}
 800d6c6:	4604      	mov	r4, r0
 800d6c8:	f000 fd0a 	bl	800e0e0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800d6cc:	4b08      	ldr	r3, [pc, #32]	@ (800d6f0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800d6ce:	6023      	str	r3, [r4, #0]
 800d6d0:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 800d6d4:	2300      	movs	r3, #0
 800d6d6:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 800d6da:	f24b 4205 	movw	r2, #46085	@ 0xb405
 800d6de:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 800d6e2:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 800d6e6:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 800d6ea:	60a3      	str	r3, [r4, #8]
 800d6ec:	4620      	mov	r0, r4
 800d6ee:	bd10      	pop	{r4, pc}
 800d6f0:	08025bac 	.word	0x08025bac

0800d6f4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800d6f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6f8:	428a      	cmp	r2, r1
 800d6fa:	4680      	mov	r8, r0
 800d6fc:	4610      	mov	r0, r2
 800d6fe:	4699      	mov	r9, r3
 800d700:	bfa6      	itte	ge
 800d702:	460a      	movge	r2, r1
 800d704:	4603      	movge	r3, r0
 800d706:	460b      	movlt	r3, r1
 800d708:	1a99      	subs	r1, r3, r2
 800d70a:	b085      	sub	sp, #20
 800d70c:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 800d710:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 800d714:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 800d716:	bfa4      	itt	ge
 800d718:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 800d71c:	2200      	movge	r2, #0
 800d71e:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 800d722:	9300      	str	r3, [sp, #0]
 800d724:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 800d728:	f102 0b01 	add.w	fp, r2, #1
 800d72c:	2c00      	cmp	r4, #0
 800d72e:	f040 80af 	bne.w	800d890 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 800d732:	4610      	mov	r0, r2
 800d734:	9201      	str	r2, [sp, #4]
 800d736:	f7ff ff9f 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d73a:	a903      	add	r1, sp, #12
 800d73c:	9003      	str	r0, [sp, #12]
 800d73e:	4650      	mov	r0, sl
 800d740:	f7ff ff6e 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d744:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800d748:	9a01      	ldr	r2, [sp, #4]
 800d74a:	4408      	add	r0, r1
 800d74c:	f8d9 1000 	ldr.w	r1, [r9]
 800d750:	4281      	cmp	r1, r0
 800d752:	bfc8      	it	gt
 800d754:	f8c9 0000 	strgt.w	r0, [r9]
 800d758:	6839      	ldr	r1, [r7, #0]
 800d75a:	4288      	cmp	r0, r1
 800d75c:	bfc8      	it	gt
 800d75e:	6038      	strgt	r0, [r7, #0]
 800d760:	4610      	mov	r0, r2
 800d762:	f7ff ffa8 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d766:	a903      	add	r1, sp, #12
 800d768:	9003      	str	r0, [sp, #12]
 800d76a:	4650      	mov	r0, sl
 800d76c:	f7ff ff58 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d770:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d774:	1a10      	subs	r0, r2, r0
 800d776:	6832      	ldr	r2, [r6, #0]
 800d778:	4282      	cmp	r2, r0
 800d77a:	bfc8      	it	gt
 800d77c:	6030      	strgt	r0, [r6, #0]
 800d77e:	682a      	ldr	r2, [r5, #0]
 800d780:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800d784:	4290      	cmp	r0, r2
 800d786:	fb9b f2f1 	sdiv	r2, fp, r1
 800d78a:	fb01 b212 	mls	r2, r1, r2, fp
 800d78e:	eba1 0202 	sub.w	r2, r1, r2
 800d792:	bfc8      	it	gt
 800d794:	6028      	strgt	r0, [r5, #0]
 800d796:	fb92 f0f1 	sdiv	r0, r2, r1
 800d79a:	fb01 2210 	mls	r2, r1, r0, r2
 800d79e:	4493      	add	fp, r2
 800d7a0:	9b00      	ldr	r3, [sp, #0]
 800d7a2:	455b      	cmp	r3, fp
 800d7a4:	db2a      	blt.n	800d7fc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 800d7a6:	4658      	mov	r0, fp
 800d7a8:	f7ff ff66 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d7ac:	a903      	add	r1, sp, #12
 800d7ae:	9003      	str	r0, [sp, #12]
 800d7b0:	4650      	mov	r0, sl
 800d7b2:	f7ff ff35 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d7b6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d7ba:	4410      	add	r0, r2
 800d7bc:	f8d9 2000 	ldr.w	r2, [r9]
 800d7c0:	4282      	cmp	r2, r0
 800d7c2:	bfc8      	it	gt
 800d7c4:	f8c9 0000 	strgt.w	r0, [r9]
 800d7c8:	683a      	ldr	r2, [r7, #0]
 800d7ca:	4290      	cmp	r0, r2
 800d7cc:	bfc8      	it	gt
 800d7ce:	6038      	strgt	r0, [r7, #0]
 800d7d0:	4658      	mov	r0, fp
 800d7d2:	f7ff ff70 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d7d6:	a903      	add	r1, sp, #12
 800d7d8:	9003      	str	r0, [sp, #12]
 800d7da:	4650      	mov	r0, sl
 800d7dc:	f7ff ff20 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d7e0:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d7e4:	1a10      	subs	r0, r2, r0
 800d7e6:	6832      	ldr	r2, [r6, #0]
 800d7e8:	4282      	cmp	r2, r0
 800d7ea:	bfc8      	it	gt
 800d7ec:	6030      	strgt	r0, [r6, #0]
 800d7ee:	682a      	ldr	r2, [r5, #0]
 800d7f0:	4290      	cmp	r0, r2
 800d7f2:	bfc8      	it	gt
 800d7f4:	6028      	strgt	r0, [r5, #0]
 800d7f6:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800d7fa:	e7d1      	b.n	800d7a0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 800d7fc:	9b00      	ldr	r3, [sp, #0]
 800d7fe:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800d802:	455b      	cmp	r3, fp
 800d804:	dd27      	ble.n	800d856 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 800d806:	4618      	mov	r0, r3
 800d808:	f7ff ff36 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d80c:	a903      	add	r1, sp, #12
 800d80e:	9003      	str	r0, [sp, #12]
 800d810:	4650      	mov	r0, sl
 800d812:	f7ff ff05 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d816:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d81a:	4410      	add	r0, r2
 800d81c:	f8d9 2000 	ldr.w	r2, [r9]
 800d820:	4282      	cmp	r2, r0
 800d822:	bfc8      	it	gt
 800d824:	f8c9 0000 	strgt.w	r0, [r9]
 800d828:	683a      	ldr	r2, [r7, #0]
 800d82a:	4290      	cmp	r0, r2
 800d82c:	bfc8      	it	gt
 800d82e:	6038      	strgt	r0, [r7, #0]
 800d830:	9800      	ldr	r0, [sp, #0]
 800d832:	f7ff ff40 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d836:	a903      	add	r1, sp, #12
 800d838:	9003      	str	r0, [sp, #12]
 800d83a:	4650      	mov	r0, sl
 800d83c:	f7ff fef0 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d840:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d844:	1a10      	subs	r0, r2, r0
 800d846:	6832      	ldr	r2, [r6, #0]
 800d848:	4282      	cmp	r2, r0
 800d84a:	bfc8      	it	gt
 800d84c:	6030      	strgt	r0, [r6, #0]
 800d84e:	682a      	ldr	r2, [r5, #0]
 800d850:	4290      	cmp	r0, r2
 800d852:	bfc8      	it	gt
 800d854:	6028      	strgt	r0, [r5, #0]
 800d856:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d85a:	f8d9 1000 	ldr.w	r1, [r9]
 800d85e:	4291      	cmp	r1, r2
 800d860:	bfc8      	it	gt
 800d862:	f8c9 2000 	strgt.w	r2, [r9]
 800d866:	683a      	ldr	r2, [r7, #0]
 800d868:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 800d86c:	429a      	cmp	r2, r3
 800d86e:	bfb8      	it	lt
 800d870:	603b      	strlt	r3, [r7, #0]
 800d872:	6832      	ldr	r2, [r6, #0]
 800d874:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800d878:	429a      	cmp	r2, r3
 800d87a:	bfc8      	it	gt
 800d87c:	6033      	strgt	r3, [r6, #0]
 800d87e:	682a      	ldr	r2, [r5, #0]
 800d880:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800d884:	429a      	cmp	r2, r3
 800d886:	da00      	bge.n	800d88a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800d888:	602b      	str	r3, [r5, #0]
 800d88a:	b005      	add	sp, #20
 800d88c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d890:	2002      	movs	r0, #2
 800d892:	3401      	adds	r4, #1
 800d894:	fb94 f4f0 	sdiv	r4, r4, r0
 800d898:	4610      	mov	r0, r2
 800d89a:	9201      	str	r2, [sp, #4]
 800d89c:	f7ff feec 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d8a0:	a903      	add	r1, sp, #12
 800d8a2:	9003      	str	r0, [sp, #12]
 800d8a4:	4650      	mov	r0, sl
 800d8a6:	f7ff febb 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d8aa:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800d8ae:	9a01      	ldr	r2, [sp, #4]
 800d8b0:	4408      	add	r0, r1
 800d8b2:	f8d9 1000 	ldr.w	r1, [r9]
 800d8b6:	1b03      	subs	r3, r0, r4
 800d8b8:	4299      	cmp	r1, r3
 800d8ba:	bfc8      	it	gt
 800d8bc:	f8c9 3000 	strgt.w	r3, [r9]
 800d8c0:	6839      	ldr	r1, [r7, #0]
 800d8c2:	428b      	cmp	r3, r1
 800d8c4:	bfc8      	it	gt
 800d8c6:	603b      	strgt	r3, [r7, #0]
 800d8c8:	f8d9 1000 	ldr.w	r1, [r9]
 800d8cc:	4420      	add	r0, r4
 800d8ce:	4281      	cmp	r1, r0
 800d8d0:	bfc8      	it	gt
 800d8d2:	f8c9 0000 	strgt.w	r0, [r9]
 800d8d6:	6839      	ldr	r1, [r7, #0]
 800d8d8:	4288      	cmp	r0, r1
 800d8da:	bfc8      	it	gt
 800d8dc:	6038      	strgt	r0, [r7, #0]
 800d8de:	4610      	mov	r0, r2
 800d8e0:	f7ff fee9 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d8e4:	a903      	add	r1, sp, #12
 800d8e6:	9003      	str	r0, [sp, #12]
 800d8e8:	4650      	mov	r0, sl
 800d8ea:	f7ff fe99 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d8ee:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d8f2:	1a10      	subs	r0, r2, r0
 800d8f4:	6832      	ldr	r2, [r6, #0]
 800d8f6:	1b01      	subs	r1, r0, r4
 800d8f8:	428a      	cmp	r2, r1
 800d8fa:	bfc8      	it	gt
 800d8fc:	6031      	strgt	r1, [r6, #0]
 800d8fe:	682a      	ldr	r2, [r5, #0]
 800d900:	4291      	cmp	r1, r2
 800d902:	bfc8      	it	gt
 800d904:	6029      	strgt	r1, [r5, #0]
 800d906:	6832      	ldr	r2, [r6, #0]
 800d908:	4420      	add	r0, r4
 800d90a:	4282      	cmp	r2, r0
 800d90c:	bfc8      	it	gt
 800d90e:	6030      	strgt	r0, [r6, #0]
 800d910:	682a      	ldr	r2, [r5, #0]
 800d912:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800d916:	4290      	cmp	r0, r2
 800d918:	fb9b f2f1 	sdiv	r2, fp, r1
 800d91c:	fb01 b212 	mls	r2, r1, r2, fp
 800d920:	eba1 0202 	sub.w	r2, r1, r2
 800d924:	bfc8      	it	gt
 800d926:	6028      	strgt	r0, [r5, #0]
 800d928:	fb92 f0f1 	sdiv	r0, r2, r1
 800d92c:	fb01 2210 	mls	r2, r1, r0, r2
 800d930:	4493      	add	fp, r2
 800d932:	9b00      	ldr	r3, [sp, #0]
 800d934:	455b      	cmp	r3, fp
 800d936:	db40      	blt.n	800d9ba <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 800d938:	4658      	mov	r0, fp
 800d93a:	f7ff fe9d 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d93e:	a903      	add	r1, sp, #12
 800d940:	9003      	str	r0, [sp, #12]
 800d942:	4650      	mov	r0, sl
 800d944:	f7ff fe6c 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d948:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d94c:	4410      	add	r0, r2
 800d94e:	f8d9 2000 	ldr.w	r2, [r9]
 800d952:	1b01      	subs	r1, r0, r4
 800d954:	428a      	cmp	r2, r1
 800d956:	bfc8      	it	gt
 800d958:	f8c9 1000 	strgt.w	r1, [r9]
 800d95c:	683a      	ldr	r2, [r7, #0]
 800d95e:	4291      	cmp	r1, r2
 800d960:	bfc8      	it	gt
 800d962:	6039      	strgt	r1, [r7, #0]
 800d964:	f8d9 2000 	ldr.w	r2, [r9]
 800d968:	4420      	add	r0, r4
 800d96a:	4282      	cmp	r2, r0
 800d96c:	bfc8      	it	gt
 800d96e:	f8c9 0000 	strgt.w	r0, [r9]
 800d972:	683a      	ldr	r2, [r7, #0]
 800d974:	4290      	cmp	r0, r2
 800d976:	bfc8      	it	gt
 800d978:	6038      	strgt	r0, [r7, #0]
 800d97a:	4658      	mov	r0, fp
 800d97c:	f7ff fe9b 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d980:	a903      	add	r1, sp, #12
 800d982:	9003      	str	r0, [sp, #12]
 800d984:	4650      	mov	r0, sl
 800d986:	f7ff fe4b 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d98a:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800d98e:	1a10      	subs	r0, r2, r0
 800d990:	6832      	ldr	r2, [r6, #0]
 800d992:	1b01      	subs	r1, r0, r4
 800d994:	428a      	cmp	r2, r1
 800d996:	bfc8      	it	gt
 800d998:	6031      	strgt	r1, [r6, #0]
 800d99a:	682a      	ldr	r2, [r5, #0]
 800d99c:	4291      	cmp	r1, r2
 800d99e:	bfc8      	it	gt
 800d9a0:	6029      	strgt	r1, [r5, #0]
 800d9a2:	6832      	ldr	r2, [r6, #0]
 800d9a4:	4420      	add	r0, r4
 800d9a6:	4282      	cmp	r2, r0
 800d9a8:	bfc8      	it	gt
 800d9aa:	6030      	strgt	r0, [r6, #0]
 800d9ac:	682a      	ldr	r2, [r5, #0]
 800d9ae:	4290      	cmp	r0, r2
 800d9b0:	bfc8      	it	gt
 800d9b2:	6028      	strgt	r0, [r5, #0]
 800d9b4:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800d9b8:	e7bb      	b.n	800d932 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 800d9ba:	9b00      	ldr	r3, [sp, #0]
 800d9bc:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800d9c0:	455b      	cmp	r3, fp
 800d9c2:	f77f af62 	ble.w	800d88a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800d9c6:	4618      	mov	r0, r3
 800d9c8:	f7ff fe56 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d9cc:	a903      	add	r1, sp, #12
 800d9ce:	9003      	str	r0, [sp, #12]
 800d9d0:	4650      	mov	r0, sl
 800d9d2:	f7ff fe25 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d9d6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800d9da:	4410      	add	r0, r2
 800d9dc:	f8d9 2000 	ldr.w	r2, [r9]
 800d9e0:	1b01      	subs	r1, r0, r4
 800d9e2:	428a      	cmp	r2, r1
 800d9e4:	bfc8      	it	gt
 800d9e6:	f8c9 1000 	strgt.w	r1, [r9]
 800d9ea:	683a      	ldr	r2, [r7, #0]
 800d9ec:	4291      	cmp	r1, r2
 800d9ee:	bfc8      	it	gt
 800d9f0:	6039      	strgt	r1, [r7, #0]
 800d9f2:	f8d9 2000 	ldr.w	r2, [r9]
 800d9f6:	4420      	add	r0, r4
 800d9f8:	4282      	cmp	r2, r0
 800d9fa:	bfc8      	it	gt
 800d9fc:	f8c9 0000 	strgt.w	r0, [r9]
 800da00:	683b      	ldr	r3, [r7, #0]
 800da02:	4298      	cmp	r0, r3
 800da04:	bfc8      	it	gt
 800da06:	6038      	strgt	r0, [r7, #0]
 800da08:	9800      	ldr	r0, [sp, #0]
 800da0a:	f7ff fe54 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800da0e:	a903      	add	r1, sp, #12
 800da10:	9003      	str	r0, [sp, #12]
 800da12:	4650      	mov	r0, sl
 800da14:	f7ff fe04 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800da18:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800da1c:	6832      	ldr	r2, [r6, #0]
 800da1e:	1a18      	subs	r0, r3, r0
 800da20:	1b03      	subs	r3, r0, r4
 800da22:	429a      	cmp	r2, r3
 800da24:	bfc8      	it	gt
 800da26:	6033      	strgt	r3, [r6, #0]
 800da28:	682a      	ldr	r2, [r5, #0]
 800da2a:	4293      	cmp	r3, r2
 800da2c:	bfc8      	it	gt
 800da2e:	602b      	strgt	r3, [r5, #0]
 800da30:	6833      	ldr	r3, [r6, #0]
 800da32:	4404      	add	r4, r0
 800da34:	42a3      	cmp	r3, r4
 800da36:	bfc8      	it	gt
 800da38:	6034      	strgt	r4, [r6, #0]
 800da3a:	682b      	ldr	r3, [r5, #0]
 800da3c:	429c      	cmp	r4, r3
 800da3e:	bfc8      	it	gt
 800da40:	602c      	strgt	r4, [r5, #0]
 800da42:	e722      	b.n	800d88a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0800da44 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800da44:	b530      	push	{r4, r5, lr}
 800da46:	4604      	mov	r4, r0
 800da48:	4608      	mov	r0, r1
 800da4a:	4611      	mov	r1, r2
 800da4c:	461a      	mov	r2, r3
 800da4e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800da52:	b089      	sub	sp, #36	@ 0x24
 800da54:	015b      	lsls	r3, r3, #5
 800da56:	9304      	str	r3, [sp, #16]
 800da58:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800da5c:	2500      	movs	r5, #0
 800da5e:	015b      	lsls	r3, r3, #5
 800da60:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800da64:	ab07      	add	r3, sp, #28
 800da66:	9302      	str	r3, [sp, #8]
 800da68:	ab06      	add	r3, sp, #24
 800da6a:	9301      	str	r3, [sp, #4]
 800da6c:	ab05      	add	r3, sp, #20
 800da6e:	9300      	str	r3, [sp, #0]
 800da70:	ab04      	add	r3, sp, #16
 800da72:	9505      	str	r5, [sp, #20]
 800da74:	f7ff fe3e 	bl	800d6f4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800da78:	2520      	movs	r5, #32
 800da7a:	9a04      	ldr	r2, [sp, #16]
 800da7c:	9805      	ldr	r0, [sp, #20]
 800da7e:	fb92 f2f5 	sdiv	r2, r2, r5
 800da82:	fb90 f0f5 	sdiv	r0, r0, r5
 800da86:	b292      	uxth	r2, r2
 800da88:	3002      	adds	r0, #2
 800da8a:	1a80      	subs	r0, r0, r2
 800da8c:	9b06      	ldr	r3, [sp, #24]
 800da8e:	9907      	ldr	r1, [sp, #28]
 800da90:	fb93 f3f5 	sdiv	r3, r3, r5
 800da94:	fb91 f1f5 	sdiv	r1, r1, r5
 800da98:	b29b      	uxth	r3, r3
 800da9a:	3102      	adds	r1, #2
 800da9c:	1ac9      	subs	r1, r1, r3
 800da9e:	3a01      	subs	r2, #1
 800daa0:	3b01      	subs	r3, #1
 800daa2:	80a0      	strh	r0, [r4, #4]
 800daa4:	4620      	mov	r0, r4
 800daa6:	8022      	strh	r2, [r4, #0]
 800daa8:	8063      	strh	r3, [r4, #2]
 800daaa:	80e1      	strh	r1, [r4, #6]
 800daac:	b009      	add	sp, #36	@ 0x24
 800daae:	bd30      	pop	{r4, r5, pc}

0800dab0 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800dab0:	b510      	push	{r4, lr}
 800dab2:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 800dab6:	4604      	mov	r4, r0
 800dab8:	f7ff ffc4 	bl	800da44 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800dabc:	4620      	mov	r0, r4
 800dabe:	bd10      	pop	{r4, pc}

0800dac0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800dac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dac4:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 800dac8:	42b5      	cmp	r5, r6
 800daca:	bfa2      	ittt	ge
 800dacc:	462b      	movge	r3, r5
 800dace:	4635      	movge	r5, r6
 800dad0:	461e      	movge	r6, r3
 800dad2:	1b73      	subs	r3, r6, r5
 800dad4:	468a      	mov	sl, r1
 800dad6:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 800dad8:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 800dadc:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 800dae0:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 800dae2:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800dae6:	b0af      	sub	sp, #188	@ 0xbc
 800dae8:	f04f 0320 	mov.w	r3, #32
 800daec:	4604      	mov	r4, r0
 800daee:	bfa4      	itt	ge
 800daf0:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 800daf4:	2500      	movge	r5, #0
 800daf6:	fb99 f9f3 	sdiv	r9, r9, r3
 800dafa:	fb9b fbf3 	sdiv	fp, fp, r3
 800dafe:	2900      	cmp	r1, #0
 800db00:	f000 80ff 	beq.w	800dd02 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 800db04:	f9ba 0000 	ldrsh.w	r0, [sl]
 800db08:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 800db0c:	eba9 0700 	sub.w	r7, r9, r0
 800db10:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 800db14:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 800db18:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 800db1c:	ebab 0803 	sub.w	r8, fp, r3
 800db20:	4407      	add	r7, r0
 800db22:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 800db26:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 800db2a:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 800db2e:	b23f      	sxth	r7, r7
 800db30:	4498      	add	r8, r3
 800db32:	eba9 0707 	sub.w	r7, r9, r7
 800db36:	fa0f f888 	sxth.w	r8, r8
 800db3a:	ebab 0808 	sub.w	r8, fp, r8
 800db3e:	2f00      	cmp	r7, #0
 800db40:	bfb8      	it	lt
 800db42:	427f      	neglt	r7, r7
 800db44:	f1b8 0f00 	cmp.w	r8, #0
 800db48:	bfb8      	it	lt
 800db4a:	f1c8 0800 	rsblt	r8, r8, #0
 800db4e:	45bc      	cmp	ip, r7
 800db50:	bfcc      	ite	gt
 800db52:	f10c 0701 	addgt.w	r7, ip, #1
 800db56:	3701      	addle	r7, #1
 800db58:	4540      	cmp	r0, r8
 800db5a:	bfc8      	it	gt
 800db5c:	f100 0801 	addgt.w	r8, r0, #1
 800db60:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 800db64:	f100 0001 	add.w	r0, r0, #1
 800db68:	ea4f 0060 	mov.w	r0, r0, asr #1
 800db6c:	f04f 0302 	mov.w	r3, #2
 800db70:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 800db74:	fb91 f1f3 	sdiv	r1, r1, r3
 800db78:	eba2 0201 	sub.w	r2, r2, r1
 800db7c:	bfd8      	it	le
 800db7e:	f108 0801 	addle.w	r8, r8, #1
 800db82:	9303      	str	r3, [sp, #12]
 800db84:	920f      	str	r2, [sp, #60]	@ 0x3c
 800db86:	f7ff fd57 	bl	800d638 <_ZN8touchgfx7CWRUtil4sineEi>
 800db8a:	a92e      	add	r1, sp, #184	@ 0xb8
 800db8c:	fb08 f808 	mul.w	r8, r8, r8
 800db90:	f841 0d74 	str.w	r0, [r1, #-116]!
 800db94:	a80f      	add	r0, sp, #60	@ 0x3c
 800db96:	f7ff fd43 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800db9a:	fb07 8707 	mla	r7, r7, r7, r8
 800db9e:	f04f 0c20 	mov.w	ip, #32
 800dba2:	fb90 f0fc 	sdiv	r0, r0, ip
 800dba6:	4340      	muls	r0, r0
 800dba8:	4287      	cmp	r7, r0
 800dbaa:	9b03      	ldr	r3, [sp, #12]
 800dbac:	da04      	bge.n	800dbb8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 800dbae:	2401      	movs	r4, #1
 800dbb0:	4620      	mov	r0, r4
 800dbb2:	b02f      	add	sp, #188	@ 0xbc
 800dbb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dbb8:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800dbba:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800dbbc:	fb91 f2f3 	sdiv	r2, r1, r3
 800dbc0:	4402      	add	r2, r0
 800dbc2:	fb92 f2fc 	sdiv	r2, r2, ip
 800dbc6:	f9ba 1000 	ldrsh.w	r1, [sl]
 800dbca:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 800dbce:	440b      	add	r3, r1
 800dbd0:	b21b      	sxth	r3, r3
 800dbd2:	454b      	cmp	r3, r9
 800dbd4:	bfa8      	it	ge
 800dbd6:	464b      	movge	r3, r9
 800dbd8:	428b      	cmp	r3, r1
 800dbda:	bfac      	ite	ge
 800dbdc:	eba9 0903 	subge.w	r9, r9, r3
 800dbe0:	eba9 0901 	sublt.w	r9, r9, r1
 800dbe4:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 800dbe8:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 800dbec:	440b      	add	r3, r1
 800dbee:	b21b      	sxth	r3, r3
 800dbf0:	455b      	cmp	r3, fp
 800dbf2:	bfa8      	it	ge
 800dbf4:	465b      	movge	r3, fp
 800dbf6:	428b      	cmp	r3, r1
 800dbf8:	bfac      	ite	ge
 800dbfa:	ebab 0b03 	subge.w	fp, fp, r3
 800dbfe:	ebab 0b01 	sublt.w	fp, fp, r1
 800dc02:	3201      	adds	r2, #1
 800dc04:	fb0b fb0b 	mul.w	fp, fp, fp
 800dc08:	fb09 b909 	mla	r9, r9, r9, fp
 800dc0c:	4352      	muls	r2, r2
 800dc0e:	4591      	cmp	r9, r2
 800dc10:	dccd      	bgt.n	800dbae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 800dc12:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 800dc16:	4621      	mov	r1, r4
 800dc18:	4648      	mov	r0, r9
 800dc1a:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 800dc1c:	f003 fbe6 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc20:	6823      	ldr	r3, [r4, #0]
 800dc22:	4620      	mov	r0, r4
 800dc24:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800dc26:	4798      	blx	r3
 800dc28:	4653      	mov	r3, sl
 800dc2a:	9000      	str	r0, [sp, #0]
 800dc2c:	464a      	mov	r2, r9
 800dc2e:	4639      	mov	r1, r7
 800dc30:	a811      	add	r0, sp, #68	@ 0x44
 800dc32:	f013 ffbf 	bl	8021bb4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800dc36:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 800dc38:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800dc3a:	920b      	str	r2, [sp, #44]	@ 0x2c
 800dc3c:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800dc40:	930c      	str	r3, [sp, #48]	@ 0x30
 800dc42:	dd07      	ble.n	800dc54 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 800dc44:	2102      	movs	r1, #2
 800dc46:	fb93 f3f1 	sdiv	r3, r3, r1
 800dc4a:	4413      	add	r3, r2
 800dc4c:	930c      	str	r3, [sp, #48]	@ 0x30
 800dc4e:	fb93 f3f1 	sdiv	r3, r3, r1
 800dc52:	930b      	str	r3, [sp, #44]	@ 0x2c
 800dc54:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800dc58:	4628      	mov	r0, r5
 800dc5a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800dc5e:	930d      	str	r3, [sp, #52]	@ 0x34
 800dc60:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 800dc64:	f7ff fd08 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dc68:	4649      	mov	r1, r9
 800dc6a:	900f      	str	r0, [sp, #60]	@ 0x3c
 800dc6c:	a80d      	add	r0, sp, #52	@ 0x34
 800dc6e:	f7ff fcd7 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dc72:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800dc74:	f04f 0a02 	mov.w	sl, #2
 800dc78:	fb90 f0fa 	sdiv	r0, r0, sl
 800dc7c:	eb00 0b03 	add.w	fp, r0, r3
 800dc80:	4628      	mov	r0, r5
 800dc82:	f7ff fd18 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800dc86:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 800dc8a:	017f      	lsls	r7, r7, #5
 800dc8c:	f848 0d80 	str.w	r0, [r8, #-128]!
 800dc90:	a80d      	add	r0, sp, #52	@ 0x34
 800dc92:	4641      	mov	r1, r8
 800dc94:	f7ff fcc4 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dc98:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800dc9a:	fb90 f0fa 	sdiv	r0, r0, sl
 800dc9e:	4659      	mov	r1, fp
 800dca0:	1a12      	subs	r2, r2, r0
 800dca2:	a811      	add	r0, sp, #68	@ 0x44
 800dca4:	f014 f8d2 	bl	8021e4c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800dca8:	f105 0a20 	add.w	sl, r5, #32
 800dcac:	bb67      	cbnz	r7, 800dd08 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 800dcae:	46ab      	mov	fp, r5
 800dcb0:	45b2      	cmp	sl, r6
 800dcb2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800dcb4:	dc33      	bgt.n	800dd1e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 800dcb6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800dcb8:	4650      	mov	r0, sl
 800dcba:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 800dcbe:	920d      	str	r2, [sp, #52]	@ 0x34
 800dcc0:	f7ff fcda 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dcc4:	4641      	mov	r1, r8
 800dcc6:	900e      	str	r0, [sp, #56]	@ 0x38
 800dcc8:	a80d      	add	r0, sp, #52	@ 0x34
 800dcca:	f7ff fca9 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dcce:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800dcd0:	2302      	movs	r3, #2
 800dcd2:	fb90 f0f3 	sdiv	r0, r0, r3
 800dcd6:	eb00 0b02 	add.w	fp, r0, r2
 800dcda:	4650      	mov	r0, sl
 800dcdc:	f7ff fceb 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800dce0:	4649      	mov	r1, r9
 800dce2:	900f      	str	r0, [sp, #60]	@ 0x3c
 800dce4:	a80d      	add	r0, sp, #52	@ 0x34
 800dce6:	f7ff fc9b 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dcea:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800dcec:	2302      	movs	r3, #2
 800dcee:	4659      	mov	r1, fp
 800dcf0:	fb90 f0f3 	sdiv	r0, r0, r3
 800dcf4:	1a12      	subs	r2, r2, r0
 800dcf6:	a811      	add	r0, sp, #68	@ 0x44
 800dcf8:	46d3      	mov	fp, sl
 800dcfa:	f014 f8f4 	bl	8021ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800dcfe:	44ba      	add	sl, r7
 800dd00:	e7d6      	b.n	800dcb0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 800dd02:	fb92 f2f3 	sdiv	r2, r2, r3
 800dd06:	e75e      	b.n	800dbc6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 800dd08:	fb9a f2f7 	sdiv	r2, sl, r7
 800dd0c:	fb07 a212 	mls	r2, r7, r2, sl
 800dd10:	1aba      	subs	r2, r7, r2
 800dd12:	fb92 f1f7 	sdiv	r1, r2, r7
 800dd16:	fb07 2211 	mls	r2, r7, r1, r2
 800dd1a:	4492      	add	sl, r2
 800dd1c:	e7c7      	b.n	800dcae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 800dd1e:	455e      	cmp	r6, fp
 800dd20:	dd23      	ble.n	800dd6a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 800dd22:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800dd24:	4630      	mov	r0, r6
 800dd26:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800dd2a:	920d      	str	r2, [sp, #52]	@ 0x34
 800dd2c:	f7ff fca4 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dd30:	4641      	mov	r1, r8
 800dd32:	900e      	str	r0, [sp, #56]	@ 0x38
 800dd34:	a80d      	add	r0, sp, #52	@ 0x34
 800dd36:	f7ff fc73 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dd3a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800dd3c:	f04f 0a02 	mov.w	sl, #2
 800dd40:	fb90 f0fa 	sdiv	r0, r0, sl
 800dd44:	4403      	add	r3, r0
 800dd46:	4630      	mov	r0, r6
 800dd48:	9303      	str	r3, [sp, #12]
 800dd4a:	f7ff fcb4 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800dd4e:	4649      	mov	r1, r9
 800dd50:	900f      	str	r0, [sp, #60]	@ 0x3c
 800dd52:	a80d      	add	r0, sp, #52	@ 0x34
 800dd54:	f7ff fc64 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dd58:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800dd5a:	9b03      	ldr	r3, [sp, #12]
 800dd5c:	fb90 f0fa 	sdiv	r0, r0, sl
 800dd60:	4619      	mov	r1, r3
 800dd62:	1a12      	subs	r2, r2, r0
 800dd64:	a811      	add	r0, sp, #68	@ 0x44
 800dd66:	f014 f8be 	bl	8021ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800dd6a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800dd6c:	b99b      	cbnz	r3, 800dd96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 800dd6e:	1b75      	subs	r5, r6, r5
 800dd70:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 800dd74:	da04      	bge.n	800dd80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800dd76:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 800dd7a:	a811      	add	r0, sp, #68	@ 0x44
 800dd7c:	f014 f8b3 	bl	8021ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800dd80:	21ff      	movs	r1, #255	@ 0xff
 800dd82:	a811      	add	r0, sp, #68	@ 0x44
 800dd84:	f013 ffaa 	bl	8021cdc <_ZN8touchgfx6Canvas6renderEh>
 800dd88:	4604      	mov	r4, r0
 800dd8a:	4b8a      	ldr	r3, [pc, #552]	@ (800dfb4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 800dd8c:	9311      	str	r3, [sp, #68]	@ 0x44
 800dd8e:	a816      	add	r0, sp, #88	@ 0x58
 800dd90:	f000 fa00 	bl	800e194 <_ZN8touchgfx7OutlineD1Ev>
 800dd94:	e70c      	b.n	800dbb0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 800dd96:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 800dd9a:	429a      	cmp	r2, r3
 800dd9c:	f0c0 8107 	bcc.w	800dfae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 800dda0:	1b73      	subs	r3, r6, r5
 800dda2:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 800dda6:	9303      	str	r3, [sp, #12]
 800dda8:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800ddac:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 800ddb0:	da43      	bge.n	800de3a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800ddb2:	4630      	mov	r0, r6
 800ddb4:	f7ff fc60 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800ddb8:	4649      	mov	r1, r9
 800ddba:	900f      	str	r0, [sp, #60]	@ 0x3c
 800ddbc:	a80b      	add	r0, sp, #44	@ 0x2c
 800ddbe:	f7ff fc2f 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ddc2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ddc4:	18c3      	adds	r3, r0, r3
 800ddc6:	4630      	mov	r0, r6
 800ddc8:	9305      	str	r3, [sp, #20]
 800ddca:	f7ff fc74 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800ddce:	4649      	mov	r1, r9
 800ddd0:	900f      	str	r0, [sp, #60]	@ 0x3c
 800ddd2:	a80b      	add	r0, sp, #44	@ 0x2c
 800ddd4:	f7ff fc24 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ddd8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800ddda:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 800ddde:	1a1b      	subs	r3, r3, r0
 800dde0:	9304      	str	r3, [sp, #16]
 800dde2:	9206      	str	r2, [sp, #24]
 800dde4:	eb06 030a 	add.w	r3, r6, sl
 800dde8:	9a06      	ldr	r2, [sp, #24]
 800ddea:	4293      	cmp	r3, r2
 800ddec:	da25      	bge.n	800de3a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800ddee:	4618      	mov	r0, r3
 800ddf0:	9308      	str	r3, [sp, #32]
 800ddf2:	f7ff fc41 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800ddf6:	4649      	mov	r1, r9
 800ddf8:	900f      	str	r0, [sp, #60]	@ 0x3c
 800ddfa:	a80c      	add	r0, sp, #48	@ 0x30
 800ddfc:	f7ff fc10 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800de00:	9b05      	ldr	r3, [sp, #20]
 800de02:	2202      	movs	r2, #2
 800de04:	fb90 f0f2 	sdiv	r0, r0, r2
 800de08:	18c3      	adds	r3, r0, r3
 800de0a:	9307      	str	r3, [sp, #28]
 800de0c:	9b08      	ldr	r3, [sp, #32]
 800de0e:	9209      	str	r2, [sp, #36]	@ 0x24
 800de10:	4618      	mov	r0, r3
 800de12:	f7ff fc50 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800de16:	a92e      	add	r1, sp, #184	@ 0xb8
 800de18:	f841 0d80 	str.w	r0, [r1, #-128]!
 800de1c:	a80c      	add	r0, sp, #48	@ 0x30
 800de1e:	f7ff fbff 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800de22:	9b04      	ldr	r3, [sp, #16]
 800de24:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800de26:	9907      	ldr	r1, [sp, #28]
 800de28:	fb90 f2f2 	sdiv	r2, r0, r2
 800de2c:	a811      	add	r0, sp, #68	@ 0x44
 800de2e:	1a9a      	subs	r2, r3, r2
 800de30:	f014 f859 	bl	8021ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800de34:	9b08      	ldr	r3, [sp, #32]
 800de36:	4453      	add	r3, sl
 800de38:	e7d6      	b.n	800dde8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 800de3a:	455e      	cmp	r6, fp
 800de3c:	dd25      	ble.n	800de8a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 800de3e:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800de42:	4630      	mov	r0, r6
 800de44:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800de48:	930d      	str	r3, [sp, #52]	@ 0x34
 800de4a:	f7ff fc15 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800de4e:	4641      	mov	r1, r8
 800de50:	900e      	str	r0, [sp, #56]	@ 0x38
 800de52:	a80d      	add	r0, sp, #52	@ 0x34
 800de54:	f7ff fbe4 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800de58:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800de5a:	2202      	movs	r2, #2
 800de5c:	fb90 f0f2 	sdiv	r0, r0, r2
 800de60:	eb00 0903 	add.w	r9, r0, r3
 800de64:	4630      	mov	r0, r6
 800de66:	9204      	str	r2, [sp, #16]
 800de68:	f7ff fc25 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800de6c:	a92e      	add	r1, sp, #184	@ 0xb8
 800de6e:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800de72:	a80d      	add	r0, sp, #52	@ 0x34
 800de74:	f7ff fbd4 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800de78:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800de7a:	9a04      	ldr	r2, [sp, #16]
 800de7c:	fb90 f2f2 	sdiv	r2, r0, r2
 800de80:	4649      	mov	r1, r9
 800de82:	1a9a      	subs	r2, r3, r2
 800de84:	a811      	add	r0, sp, #68	@ 0x44
 800de86:	f014 f82e 	bl	8021ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800de8a:	46d9      	mov	r9, fp
 800de8c:	2602      	movs	r6, #2
 800de8e:	45a9      	cmp	r9, r5
 800de90:	db25      	blt.n	800dede <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 800de92:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800de96:	4648      	mov	r0, r9
 800de98:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800de9c:	930d      	str	r3, [sp, #52]	@ 0x34
 800de9e:	f7ff fbeb 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dea2:	4641      	mov	r1, r8
 800dea4:	900e      	str	r0, [sp, #56]	@ 0x38
 800dea6:	a80d      	add	r0, sp, #52	@ 0x34
 800dea8:	f7ff fbba 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800deac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800deae:	fb90 f0f6 	sdiv	r0, r0, r6
 800deb2:	eb00 0b03 	add.w	fp, r0, r3
 800deb6:	4648      	mov	r0, r9
 800deb8:	f7ff fbfd 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800debc:	a90f      	add	r1, sp, #60	@ 0x3c
 800debe:	900f      	str	r0, [sp, #60]	@ 0x3c
 800dec0:	a80d      	add	r0, sp, #52	@ 0x34
 800dec2:	f7ff fbad 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dec6:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800dec8:	fb90 f0f6 	sdiv	r0, r0, r6
 800decc:	4659      	mov	r1, fp
 800dece:	1a12      	subs	r2, r2, r0
 800ded0:	a811      	add	r0, sp, #68	@ 0x44
 800ded2:	46cb      	mov	fp, r9
 800ded4:	f014 f807 	bl	8021ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800ded8:	eba9 0907 	sub.w	r9, r9, r7
 800dedc:	e7d7      	b.n	800de8e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 800dede:	455d      	cmp	r5, fp
 800dee0:	da22      	bge.n	800df28 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 800dee2:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800dee6:	4628      	mov	r0, r5
 800dee8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800deec:	930d      	str	r3, [sp, #52]	@ 0x34
 800deee:	f7ff fbc3 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800def2:	4641      	mov	r1, r8
 800def4:	900e      	str	r0, [sp, #56]	@ 0x38
 800def6:	a80d      	add	r0, sp, #52	@ 0x34
 800def8:	f7ff fb92 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800defc:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800defe:	2602      	movs	r6, #2
 800df00:	fb90 f0f6 	sdiv	r0, r0, r6
 800df04:	4407      	add	r7, r0
 800df06:	4628      	mov	r0, r5
 800df08:	f7ff fbd5 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800df0c:	a92e      	add	r1, sp, #184	@ 0xb8
 800df0e:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800df12:	a80d      	add	r0, sp, #52	@ 0x34
 800df14:	f7ff fb84 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df18:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800df1a:	fb90 f0f6 	sdiv	r0, r0, r6
 800df1e:	4639      	mov	r1, r7
 800df20:	1a12      	subs	r2, r2, r0
 800df22:	a811      	add	r0, sp, #68	@ 0x44
 800df24:	f013 ffdf 	bl	8021ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800df28:	9b03      	ldr	r3, [sp, #12]
 800df2a:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800df2e:	f6bf af27 	bge.w	800dd80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800df32:	4628      	mov	r0, r5
 800df34:	f7ff fba0 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800df38:	ae2e      	add	r6, sp, #184	@ 0xb8
 800df3a:	f04f 0b02 	mov.w	fp, #2
 800df3e:	f846 0d7c 	str.w	r0, [r6, #-124]!
 800df42:	a80b      	add	r0, sp, #44	@ 0x2c
 800df44:	4631      	mov	r1, r6
 800df46:	f7ff fb6b 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df4a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800df4c:	eb00 0903 	add.w	r9, r0, r3
 800df50:	4628      	mov	r0, r5
 800df52:	f7ff fbb0 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800df56:	4631      	mov	r1, r6
 800df58:	900f      	str	r0, [sp, #60]	@ 0x3c
 800df5a:	a80b      	add	r0, sp, #44	@ 0x2c
 800df5c:	f7ff fb60 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df60:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800df62:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 800df66:	eba3 0800 	sub.w	r8, r3, r0
 800df6a:	4454      	add	r4, sl
 800df6c:	42a5      	cmp	r5, r4
 800df6e:	f77f af07 	ble.w	800dd80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800df72:	4620      	mov	r0, r4
 800df74:	f7ff fb80 	bl	800d678 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800df78:	4631      	mov	r1, r6
 800df7a:	900f      	str	r0, [sp, #60]	@ 0x3c
 800df7c:	a80c      	add	r0, sp, #48	@ 0x30
 800df7e:	f7ff fb4f 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df82:	fb90 f0fb 	sdiv	r0, r0, fp
 800df86:	eb00 0709 	add.w	r7, r0, r9
 800df8a:	4620      	mov	r0, r4
 800df8c:	f7ff fb93 	bl	800d6b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800df90:	a90e      	add	r1, sp, #56	@ 0x38
 800df92:	900e      	str	r0, [sp, #56]	@ 0x38
 800df94:	a80c      	add	r0, sp, #48	@ 0x30
 800df96:	f7ff fb43 	bl	800d620 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df9a:	4639      	mov	r1, r7
 800df9c:	fb90 f2fb 	sdiv	r2, r0, fp
 800dfa0:	a811      	add	r0, sp, #68	@ 0x44
 800dfa2:	eba8 0202 	sub.w	r2, r8, r2
 800dfa6:	f013 ff9e 	bl	8021ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800dfaa:	4454      	add	r4, sl
 800dfac:	e7de      	b.n	800df6c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 800dfae:	2400      	movs	r4, #0
 800dfb0:	e6eb      	b.n	800dd8a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 800dfb2:	bf00      	nop
 800dfb4:	08026148 	.word	0x08026148

0800dfb8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800dfb8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dfba:	6803      	ldr	r3, [r0, #0]
 800dfbc:	460d      	mov	r5, r1
 800dfbe:	4604      	mov	r4, r0
 800dfc0:	4601      	mov	r1, r0
 800dfc2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800dfc4:	a802      	add	r0, sp, #8
 800dfc6:	4798      	blx	r3
 800dfc8:	6828      	ldr	r0, [r5, #0]
 800dfca:	6869      	ldr	r1, [r5, #4]
 800dfcc:	466b      	mov	r3, sp
 800dfce:	c303      	stmia	r3!, {r0, r1}
 800dfd0:	4668      	mov	r0, sp
 800dfd2:	4619      	mov	r1, r3
 800dfd4:	f7fc feb4 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 800dfd8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800dfda:	b188      	cbz	r0, 800e000 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfdc:	6803      	ldr	r3, [r0, #0]
 800dfde:	1d21      	adds	r1, r4, #4
 800dfe0:	68db      	ldr	r3, [r3, #12]
 800dfe2:	4798      	blx	r3
 800dfe4:	b160      	cbz	r0, 800e000 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfe6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800dfea:	2b00      	cmp	r3, #0
 800dfec:	dd08      	ble.n	800e000 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfee:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800dff2:	2d00      	cmp	r5, #0
 800dff4:	dd04      	ble.n	800e000 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dff6:	4a2b      	ldr	r2, [pc, #172]	@ (800e0a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800dff8:	7812      	ldrb	r2, [r2, #0]
 800dffa:	b11a      	cbz	r2, 800e004 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800dffc:	2a01      	cmp	r2, #1
 800dffe:	d029      	beq.n	800e054 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800e000:	b004      	add	sp, #16
 800e002:	bd70      	pop	{r4, r5, r6, pc}
 800e004:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e008:	441d      	add	r5, r3
 800e00a:	b2ad      	uxth	r5, r5
 800e00c:	b22e      	sxth	r6, r5
 800e00e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800e012:	42b3      	cmp	r3, r6
 800e014:	daf4      	bge.n	800e000 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800e016:	6823      	ldr	r3, [r4, #0]
 800e018:	4669      	mov	r1, sp
 800e01a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e01c:	4620      	mov	r0, r4
 800e01e:	4798      	blx	r3
 800e020:	b940      	cbnz	r0, 800e034 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800e022:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800e026:	2b01      	cmp	r3, #1
 800e028:	d004      	beq.n	800e034 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800e02a:	3301      	adds	r3, #1
 800e02c:	105b      	asrs	r3, r3, #1
 800e02e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e032:	e7f0      	b.n	800e016 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800e034:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e038:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e03c:	4413      	add	r3, r2
 800e03e:	b29b      	uxth	r3, r3
 800e040:	441a      	add	r2, r3
 800e042:	b212      	sxth	r2, r2
 800e044:	4296      	cmp	r6, r2
 800e046:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e04a:	dae0      	bge.n	800e00e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800e04c:	1aeb      	subs	r3, r5, r3
 800e04e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e052:	e7dc      	b.n	800e00e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800e054:	f8bd 5000 	ldrh.w	r5, [sp]
 800e058:	441d      	add	r5, r3
 800e05a:	b2ad      	uxth	r5, r5
 800e05c:	b22e      	sxth	r6, r5
 800e05e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800e062:	42b3      	cmp	r3, r6
 800e064:	dacc      	bge.n	800e000 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800e066:	6823      	ldr	r3, [r4, #0]
 800e068:	4669      	mov	r1, sp
 800e06a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e06c:	4620      	mov	r0, r4
 800e06e:	4798      	blx	r3
 800e070:	b940      	cbnz	r0, 800e084 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800e072:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800e076:	2b01      	cmp	r3, #1
 800e078:	d004      	beq.n	800e084 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800e07a:	3301      	adds	r3, #1
 800e07c:	105b      	asrs	r3, r3, #1
 800e07e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800e082:	e7f0      	b.n	800e066 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800e084:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800e088:	f8bd 3000 	ldrh.w	r3, [sp]
 800e08c:	4413      	add	r3, r2
 800e08e:	b29b      	uxth	r3, r3
 800e090:	441a      	add	r2, r3
 800e092:	b212      	sxth	r2, r2
 800e094:	4296      	cmp	r6, r2
 800e096:	f8ad 3000 	strh.w	r3, [sp]
 800e09a:	dae0      	bge.n	800e05e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800e09c:	1aeb      	subs	r3, r5, r3
 800e09e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800e0a2:	e7dc      	b.n	800e05e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800e0a4:	20014036 	.word	0x20014036

0800e0a8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800e0a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e0aa:	6803      	ldr	r3, [r0, #0]
 800e0ac:	4604      	mov	r4, r0
 800e0ae:	4601      	mov	r1, r0
 800e0b0:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800e0b2:	4668      	mov	r0, sp
 800e0b4:	4798      	blx	r3
 800e0b6:	2100      	movs	r1, #0
 800e0b8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800e0bc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e0c0:	9102      	str	r1, [sp, #8]
 800e0c2:	4668      	mov	r0, sp
 800e0c4:	a902      	add	r1, sp, #8
 800e0c6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800e0ca:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e0ce:	f7fc fe37 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 800e0d2:	6823      	ldr	r3, [r4, #0]
 800e0d4:	4669      	mov	r1, sp
 800e0d6:	691b      	ldr	r3, [r3, #16]
 800e0d8:	4620      	mov	r0, r4
 800e0da:	4798      	blx	r3
 800e0dc:	b004      	add	sp, #16
 800e0de:	bd10      	pop	{r4, pc}

0800e0e0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800e0e0:	2101      	movs	r1, #1
 800e0e2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800e0e6:	490b      	ldr	r1, [pc, #44]	@ (800e114 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800e0e8:	6001      	str	r1, [r0, #0]
 800e0ea:	2200      	movs	r2, #0
 800e0ec:	21ff      	movs	r1, #255	@ 0xff
 800e0ee:	8082      	strh	r2, [r0, #4]
 800e0f0:	80c2      	strh	r2, [r0, #6]
 800e0f2:	8102      	strh	r2, [r0, #8]
 800e0f4:	8142      	strh	r2, [r0, #10]
 800e0f6:	8182      	strh	r2, [r0, #12]
 800e0f8:	81c2      	strh	r2, [r0, #14]
 800e0fa:	8202      	strh	r2, [r0, #16]
 800e0fc:	8242      	strh	r2, [r0, #18]
 800e0fe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e102:	61c2      	str	r2, [r0, #28]
 800e104:	8402      	strh	r2, [r0, #32]
 800e106:	8442      	strh	r2, [r0, #34]	@ 0x22
 800e108:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800e10c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800e110:	6282      	str	r2, [r0, #40]	@ 0x28
 800e112:	4770      	bx	lr
 800e114:	08025c24 	.word	0x08025c24

0800e118 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e118:	2300      	movs	r3, #0
 800e11a:	8083      	strh	r3, [r0, #4]
 800e11c:	80c3      	strh	r3, [r0, #6]
 800e11e:	8003      	strh	r3, [r0, #0]
 800e120:	8043      	strh	r3, [r0, #2]
 800e122:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800e126:	2bff      	cmp	r3, #255	@ 0xff
 800e128:	bf01      	itttt	eq
 800e12a:	890b      	ldrheq	r3, [r1, #8]
 800e12c:	8083      	strheq	r3, [r0, #4]
 800e12e:	894b      	ldrheq	r3, [r1, #10]
 800e130:	80c3      	strheq	r3, [r0, #6]
 800e132:	4770      	bx	lr

0800e134 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e134:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e136:	4604      	mov	r4, r0
 800e138:	6808      	ldr	r0, [r1, #0]
 800e13a:	6849      	ldr	r1, [r1, #4]
 800e13c:	466b      	mov	r3, sp
 800e13e:	c303      	stmia	r3!, {r0, r1}
 800e140:	6823      	ldr	r3, [r4, #0]
 800e142:	4669      	mov	r1, sp
 800e144:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e146:	4620      	mov	r0, r4
 800e148:	4798      	blx	r3
 800e14a:	4b08      	ldr	r3, [pc, #32]	@ (800e16c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e14c:	681b      	ldr	r3, [r3, #0]
 800e14e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e152:	b10a      	cbz	r2, 800e158 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e154:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800e156:	b900      	cbnz	r0, 800e15a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e158:	6898      	ldr	r0, [r3, #8]
 800e15a:	6803      	ldr	r3, [r0, #0]
 800e15c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800e15e:	6a1d      	ldr	r5, [r3, #32]
 800e160:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800e164:	4669      	mov	r1, sp
 800e166:	47a8      	blx	r5
 800e168:	b003      	add	sp, #12
 800e16a:	bd30      	pop	{r4, r5, pc}
 800e16c:	20014040 	.word	0x20014040

0800e170 <_ZN8touchgfx3BoxD1Ev>:
 800e170:	4770      	bx	lr

0800e172 <_ZN8touchgfx3BoxD0Ev>:
 800e172:	b510      	push	{r4, lr}
 800e174:	212c      	movs	r1, #44	@ 0x2c
 800e176:	4604      	mov	r4, r0
 800e178:	f014 f97f 	bl	802247a <_ZdlPvj>
 800e17c:	4620      	mov	r0, r4
 800e17e:	bd10      	pop	{r4, pc}

0800e180 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e180:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800e184:	b12a      	cbz	r2, 800e192 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e186:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e18a:	b112      	cbz	r2, 800e192 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e18c:	6803      	ldr	r3, [r0, #0]
 800e18e:	695b      	ldr	r3, [r3, #20]
 800e190:	4718      	bx	r3
 800e192:	4770      	bx	lr

0800e194 <_ZN8touchgfx7OutlineD1Ev>:
 800e194:	4770      	bx	lr

0800e196 <_ZN8touchgfx7OutlineD0Ev>:
 800e196:	b510      	push	{r4, lr}
 800e198:	2130      	movs	r1, #48	@ 0x30
 800e19a:	4604      	mov	r4, r0
 800e19c:	f014 f96d 	bl	802247a <_ZdlPvj>
 800e1a0:	4620      	mov	r0, r4
 800e1a2:	bd10      	pop	{r4, pc}

0800e1a4 <_ZN8touchgfx7Outline5resetEv>:
 800e1a4:	b510      	push	{r4, lr}
 800e1a6:	4604      	mov	r4, r0
 800e1a8:	f000 fe8c 	bl	800eec4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800e1ac:	60e0      	str	r0, [r4, #12]
 800e1ae:	f000 fe8f 	bl	800eed0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800e1b2:	68e3      	ldr	r3, [r4, #12]
 800e1b4:	6123      	str	r3, [r4, #16]
 800e1b6:	08c0      	lsrs	r0, r0, #3
 800e1b8:	2200      	movs	r2, #0
 800e1ba:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800e1be:	3801      	subs	r0, #1
 800e1c0:	6060      	str	r0, [r4, #4]
 800e1c2:	60a2      	str	r2, [r4, #8]
 800e1c4:	8019      	strh	r1, [r3, #0]
 800e1c6:	8059      	strh	r1, [r3, #2]
 800e1c8:	809a      	strh	r2, [r3, #4]
 800e1ca:	80da      	strh	r2, [r3, #6]
 800e1cc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e1ce:	f023 0301 	bic.w	r3, r3, #1
 800e1d2:	f043 0302 	orr.w	r3, r3, #2
 800e1d6:	6263      	str	r3, [r4, #36]	@ 0x24
 800e1d8:	bd10      	pop	{r4, pc}
	...

0800e1dc <_ZN8touchgfx7OutlineC1Ev>:
 800e1dc:	b510      	push	{r4, lr}
 800e1de:	4b0a      	ldr	r3, [pc, #40]	@ (800e208 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800e1e0:	6003      	str	r3, [r0, #0]
 800e1e2:	2300      	movs	r3, #0
 800e1e4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800e1e8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e1ec:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e1f0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800e1f4:	6243      	str	r3, [r0, #36]	@ 0x24
 800e1f6:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800e1fa:	4604      	mov	r4, r0
 800e1fc:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800e200:	f7ff ffd0 	bl	800e1a4 <_ZN8touchgfx7Outline5resetEv>
 800e204:	4620      	mov	r0, r4
 800e206:	bd10      	pop	{r4, pc}
 800e208:	08025d04 	.word	0x08025d04

0800e20c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800e20c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e210:	b093      	sub	sp, #76	@ 0x4c
 800e212:	1156      	asrs	r6, r2, #5
 800e214:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800e216:	9305      	str	r3, [sp, #20]
 800e218:	f004 051f 	and.w	r5, r4, #31
 800e21c:	1153      	asrs	r3, r2, #5
 800e21e:	9504      	str	r5, [sp, #16]
 800e220:	1165      	asrs	r5, r4, #5
 800e222:	9303      	str	r3, [sp, #12]
 800e224:	42ae      	cmp	r6, r5
 800e226:	ea4f 1364 	mov.w	r3, r4, asr #5
 800e22a:	9306      	str	r3, [sp, #24]
 800e22c:	f002 031f 	and.w	r3, r2, #31
 800e230:	f040 80f8 	bne.w	800e424 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800e234:	9c04      	ldr	r4, [sp, #16]
 800e236:	9a05      	ldr	r2, [sp, #20]
 800e238:	42a3      	cmp	r3, r4
 800e23a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800e23e:	6902      	ldr	r2, [r0, #16]
 800e240:	d125      	bne.n	800e28e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800e242:	f9b2 3000 	ldrsh.w	r3, [r2]
 800e246:	459e      	cmp	lr, r3
 800e248:	d103      	bne.n	800e252 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800e24a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e24e:	429e      	cmp	r6, r3
 800e250:	d035      	beq.n	800e2be <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e252:	88d1      	ldrh	r1, [r2, #6]
 800e254:	8893      	ldrh	r3, [r2, #4]
 800e256:	430b      	orrs	r3, r1
 800e258:	d010      	beq.n	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e25a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e25e:	2b00      	cmp	r3, #0
 800e260:	db0c      	blt.n	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e262:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800e264:	428b      	cmp	r3, r1
 800e266:	da09      	bge.n	800e27c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e268:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e26c:	428b      	cmp	r3, r1
 800e26e:	bf38      	it	cc
 800e270:	3208      	addcc	r2, #8
 800e272:	f103 0301 	add.w	r3, r3, #1
 800e276:	bf38      	it	cc
 800e278:	6102      	strcc	r2, [r0, #16]
 800e27a:	6083      	str	r3, [r0, #8]
 800e27c:	6903      	ldr	r3, [r0, #16]
 800e27e:	9a03      	ldr	r2, [sp, #12]
 800e280:	f8a3 e000 	strh.w	lr, [r3]
 800e284:	805a      	strh	r2, [r3, #2]
 800e286:	2200      	movs	r2, #0
 800e288:	809a      	strh	r2, [r3, #4]
 800e28a:	80da      	strh	r2, [r3, #6]
 800e28c:	e017      	b.n	800e2be <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e28e:	9c05      	ldr	r4, [sp, #20]
 800e290:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800e294:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800e298:	f004 041f 	and.w	r4, r4, #31
 800e29c:	114e      	asrs	r6, r1, #5
 800e29e:	9402      	str	r4, [sp, #8]
 800e2a0:	9c04      	ldr	r4, [sp, #16]
 800e2a2:	4576      	cmp	r6, lr
 800e2a4:	f001 0c1f 	and.w	ip, r1, #31
 800e2a8:	eba4 0403 	sub.w	r4, r4, r3
 800e2ac:	d10a      	bne.n	800e2c4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800e2ae:	9b02      	ldr	r3, [sp, #8]
 800e2b0:	449c      	add	ip, r3
 800e2b2:	44a0      	add	r8, r4
 800e2b4:	fb04 a40c 	mla	r4, r4, ip, sl
 800e2b8:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e2bc:	80d4      	strh	r4, [r2, #6]
 800e2be:	b013      	add	sp, #76	@ 0x4c
 800e2c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2c4:	9d05      	ldr	r5, [sp, #20]
 800e2c6:	1a69      	subs	r1, r5, r1
 800e2c8:	bf5b      	ittet	pl
 800e2ca:	f1cc 0520 	rsbpl	r5, ip, #32
 800e2ce:	436c      	mulpl	r4, r5
 800e2d0:	2500      	movmi	r5, #0
 800e2d2:	2520      	movpl	r5, #32
 800e2d4:	bf44      	itt	mi
 800e2d6:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e2da:	4249      	negmi	r1, r1
 800e2dc:	9501      	str	r5, [sp, #4]
 800e2de:	9f01      	ldr	r7, [sp, #4]
 800e2e0:	fb94 f5f1 	sdiv	r5, r4, r1
 800e2e4:	fb01 4415 	mls	r4, r1, r5, r4
 800e2e8:	bf54      	ite	pl
 800e2ea:	f04f 0901 	movpl.w	r9, #1
 800e2ee:	f04f 39ff 	movmi.w	r9, #4294967295
 800e2f2:	2c00      	cmp	r4, #0
 800e2f4:	bfb8      	it	lt
 800e2f6:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e2fa:	44bc      	add	ip, r7
 800e2fc:	44a8      	add	r8, r5
 800e2fe:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e302:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e306:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e30a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e30e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e312:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800e316:	bfb8      	it	lt
 800e318:	1864      	addlt	r4, r4, r1
 800e31a:	ea58 0202 	orrs.w	r2, r8, r2
 800e31e:	444e      	add	r6, r9
 800e320:	d011      	beq.n	800e346 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e322:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e326:	f1b8 0f00 	cmp.w	r8, #0
 800e32a:	db0c      	blt.n	800e346 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e32c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800e32e:	4590      	cmp	r8, r2
 800e330:	da09      	bge.n	800e346 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e332:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800e336:	4590      	cmp	r8, r2
 800e338:	bf3c      	itt	cc
 800e33a:	f10c 0208 	addcc.w	r2, ip, #8
 800e33e:	6102      	strcc	r2, [r0, #16]
 800e340:	f108 0201 	add.w	r2, r8, #1
 800e344:	6082      	str	r2, [r0, #8]
 800e346:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e34a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e34e:	f8ac 6000 	strh.w	r6, [ip]
 800e352:	2700      	movs	r7, #0
 800e354:	45b6      	cmp	lr, r6
 800e356:	f8ac 2002 	strh.w	r2, [ip, #2]
 800e35a:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e35e:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e362:	442b      	add	r3, r5
 800e364:	d04d      	beq.n	800e402 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800e366:	9f04      	ldr	r7, [sp, #16]
 800e368:	1aff      	subs	r7, r7, r3
 800e36a:	443d      	add	r5, r7
 800e36c:	016d      	lsls	r5, r5, #5
 800e36e:	fb95 f8f1 	sdiv	r8, r5, r1
 800e372:	fb01 5518 	mls	r5, r1, r8, r5
 800e376:	2d00      	cmp	r5, #0
 800e378:	bfb8      	it	lt
 800e37a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e37e:	f108 0701 	add.w	r7, r8, #1
 800e382:	bfb8      	it	lt
 800e384:	186d      	addlt	r5, r5, r1
 800e386:	1a64      	subs	r4, r4, r1
 800e388:	9703      	str	r7, [sp, #12]
 800e38a:	f04f 0a00 	mov.w	sl, #0
 800e38e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e392:	1964      	adds	r4, r4, r5
 800e394:	bf58      	it	pl
 800e396:	9f03      	ldrpl	r7, [sp, #12]
 800e398:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e39c:	bf48      	it	mi
 800e39e:	4647      	movmi	r7, r8
 800e3a0:	44bb      	add	fp, r7
 800e3a2:	f8ac b004 	strh.w	fp, [ip, #4]
 800e3a6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e3aa:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e3ae:	f8ac b006 	strh.w	fp, [ip, #6]
 800e3b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e3b6:	443b      	add	r3, r7
 800e3b8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e3bc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e3c0:	bf58      	it	pl
 800e3c2:	1a64      	subpl	r4, r4, r1
 800e3c4:	ea5b 0707 	orrs.w	r7, fp, r7
 800e3c8:	444e      	add	r6, r9
 800e3ca:	d011      	beq.n	800e3f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e3cc:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e3d0:	f1bb 0f00 	cmp.w	fp, #0
 800e3d4:	db0c      	blt.n	800e3f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e3d6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e3d8:	45bb      	cmp	fp, r7
 800e3da:	da09      	bge.n	800e3f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800e3dc:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e3e0:	45bb      	cmp	fp, r7
 800e3e2:	bf3c      	itt	cc
 800e3e4:	f10c 0708 	addcc.w	r7, ip, #8
 800e3e8:	6107      	strcc	r7, [r0, #16]
 800e3ea:	f10b 0701 	add.w	r7, fp, #1
 800e3ee:	6087      	str	r7, [r0, #8]
 800e3f0:	6907      	ldr	r7, [r0, #16]
 800e3f2:	45b6      	cmp	lr, r6
 800e3f4:	803e      	strh	r6, [r7, #0]
 800e3f6:	807a      	strh	r2, [r7, #2]
 800e3f8:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e3fc:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e400:	d1c5      	bne.n	800e38e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800e402:	9a04      	ldr	r2, [sp, #16]
 800e404:	1ad3      	subs	r3, r2, r3
 800e406:	6902      	ldr	r2, [r0, #16]
 800e408:	8891      	ldrh	r1, [r2, #4]
 800e40a:	88d6      	ldrh	r6, [r2, #6]
 800e40c:	4419      	add	r1, r3
 800e40e:	8091      	strh	r1, [r2, #4]
 800e410:	9902      	ldr	r1, [sp, #8]
 800e412:	f101 0c20 	add.w	ip, r1, #32
 800e416:	9901      	ldr	r1, [sp, #4]
 800e418:	ebac 0c01 	sub.w	ip, ip, r1
 800e41c:	fb03 630c 	mla	r3, r3, ip, r6
 800e420:	80d3      	strh	r3, [r2, #6]
 800e422:	e74c      	b.n	800e2be <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e424:	9d05      	ldr	r5, [sp, #20]
 800e426:	1aa2      	subs	r2, r4, r2
 800e428:	eba5 0501 	sub.w	r5, r5, r1
 800e42c:	9508      	str	r5, [sp, #32]
 800e42e:	9202      	str	r2, [sp, #8]
 800e430:	f140 8128 	bpl.w	800e684 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800e434:	9a03      	ldr	r2, [sp, #12]
 800e436:	2a00      	cmp	r2, #0
 800e438:	f6ff af41 	blt.w	800e2be <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e43c:	9a02      	ldr	r2, [sp, #8]
 800e43e:	4252      	negs	r2, r2
 800e440:	9202      	str	r2, [sp, #8]
 800e442:	9a06      	ldr	r2, [sp, #24]
 800e444:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800e448:	f04f 34ff 	mov.w	r4, #4294967295
 800e44c:	9206      	str	r2, [sp, #24]
 800e44e:	462a      	mov	r2, r5
 800e450:	940b      	str	r4, [sp, #44]	@ 0x2c
 800e452:	435a      	muls	r2, r3
 800e454:	2400      	movs	r4, #0
 800e456:	9d02      	ldr	r5, [sp, #8]
 800e458:	9401      	str	r4, [sp, #4]
 800e45a:	9c02      	ldr	r4, [sp, #8]
 800e45c:	fb92 f4f4 	sdiv	r4, r2, r4
 800e460:	fb05 2214 	mls	r2, r5, r4, r2
 800e464:	2a00      	cmp	r2, #0
 800e466:	9207      	str	r2, [sp, #28]
 800e468:	bfbc      	itt	lt
 800e46a:	1952      	addlt	r2, r2, r5
 800e46c:	9207      	strlt	r2, [sp, #28]
 800e46e:	9a01      	ldr	r2, [sp, #4]
 800e470:	6905      	ldr	r5, [r0, #16]
 800e472:	bfb8      	it	lt
 800e474:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e478:	eb04 0901 	add.w	r9, r4, r1
 800e47c:	429a      	cmp	r2, r3
 800e47e:	ea4f 1669 	mov.w	r6, r9, asr #5
 800e482:	f040 8112 	bne.w	800e6aa <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800e486:	f9b5 3000 	ldrsh.w	r3, [r5]
 800e48a:	429e      	cmp	r6, r3
 800e48c:	d104      	bne.n	800e498 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800e48e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e492:	9a03      	ldr	r2, [sp, #12]
 800e494:	429a      	cmp	r2, r3
 800e496:	d01b      	beq.n	800e4d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e498:	88ea      	ldrh	r2, [r5, #6]
 800e49a:	88ab      	ldrh	r3, [r5, #4]
 800e49c:	4313      	orrs	r3, r2
 800e49e:	d010      	beq.n	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e4a0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e4a4:	2a00      	cmp	r2, #0
 800e4a6:	db0c      	blt.n	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e4a8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e4aa:	429a      	cmp	r2, r3
 800e4ac:	da09      	bge.n	800e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800e4ae:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800e4b2:	429a      	cmp	r2, r3
 800e4b4:	bf38      	it	cc
 800e4b6:	3508      	addcc	r5, #8
 800e4b8:	f102 0201 	add.w	r2, r2, #1
 800e4bc:	bf38      	it	cc
 800e4be:	6105      	strcc	r5, [r0, #16]
 800e4c0:	6082      	str	r2, [r0, #8]
 800e4c2:	6903      	ldr	r3, [r0, #16]
 800e4c4:	9a03      	ldr	r2, [sp, #12]
 800e4c6:	805a      	strh	r2, [r3, #2]
 800e4c8:	2200      	movs	r2, #0
 800e4ca:	801e      	strh	r6, [r3, #0]
 800e4cc:	809a      	strh	r2, [r3, #4]
 800e4ce:	80da      	strh	r2, [r3, #6]
 800e4d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e4d2:	9a03      	ldr	r2, [sp, #12]
 800e4d4:	6901      	ldr	r1, [r0, #16]
 800e4d6:	441a      	add	r2, r3
 800e4d8:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e4dc:	42b3      	cmp	r3, r6
 800e4de:	d103      	bne.n	800e4e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800e4e0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e4e4:	429a      	cmp	r2, r3
 800e4e6:	d01a      	beq.n	800e51e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800e4e8:	88cc      	ldrh	r4, [r1, #6]
 800e4ea:	888b      	ldrh	r3, [r1, #4]
 800e4ec:	4323      	orrs	r3, r4
 800e4ee:	d010      	beq.n	800e512 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e4f0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e4f4:	2c00      	cmp	r4, #0
 800e4f6:	db0c      	blt.n	800e512 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e4f8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e4fa:	429c      	cmp	r4, r3
 800e4fc:	da09      	bge.n	800e512 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800e4fe:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e502:	429c      	cmp	r4, r3
 800e504:	bf38      	it	cc
 800e506:	3108      	addcc	r1, #8
 800e508:	f104 0401 	add.w	r4, r4, #1
 800e50c:	bf38      	it	cc
 800e50e:	6101      	strcc	r1, [r0, #16]
 800e510:	6084      	str	r4, [r0, #8]
 800e512:	6903      	ldr	r3, [r0, #16]
 800e514:	2100      	movs	r1, #0
 800e516:	801e      	strh	r6, [r3, #0]
 800e518:	805a      	strh	r2, [r3, #2]
 800e51a:	8099      	strh	r1, [r3, #4]
 800e51c:	80d9      	strh	r1, [r3, #6]
 800e51e:	9b06      	ldr	r3, [sp, #24]
 800e520:	4293      	cmp	r3, r2
 800e522:	f000 8082 	beq.w	800e62a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800e526:	9b08      	ldr	r3, [sp, #32]
 800e528:	9c02      	ldr	r4, [sp, #8]
 800e52a:	9902      	ldr	r1, [sp, #8]
 800e52c:	015b      	lsls	r3, r3, #5
 800e52e:	fb93 f1f1 	sdiv	r1, r3, r1
 800e532:	fb04 3311 	mls	r3, r4, r1, r3
 800e536:	2b00      	cmp	r3, #0
 800e538:	9103      	str	r1, [sp, #12]
 800e53a:	9308      	str	r3, [sp, #32]
 800e53c:	da04      	bge.n	800e548 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800e53e:	1e4b      	subs	r3, r1, #1
 800e540:	9303      	str	r3, [sp, #12]
 800e542:	9b08      	ldr	r3, [sp, #32]
 800e544:	4423      	add	r3, r4
 800e546:	9308      	str	r3, [sp, #32]
 800e548:	9b07      	ldr	r3, [sp, #28]
 800e54a:	9902      	ldr	r1, [sp, #8]
 800e54c:	1a5b      	subs	r3, r3, r1
 800e54e:	9307      	str	r3, [sp, #28]
 800e550:	9b01      	ldr	r3, [sp, #4]
 800e552:	f1c3 0320 	rsb	r3, r3, #32
 800e556:	930e      	str	r3, [sp, #56]	@ 0x38
 800e558:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800e55a:	9b01      	ldr	r3, [sp, #4]
 800e55c:	1a5b      	subs	r3, r3, r1
 800e55e:	464f      	mov	r7, r9
 800e560:	930a      	str	r3, [sp, #40]	@ 0x28
 800e562:	2600      	movs	r6, #0
 800e564:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800e568:	185b      	adds	r3, r3, r1
 800e56a:	bf58      	it	pl
 800e56c:	9902      	ldrpl	r1, [sp, #8]
 800e56e:	9307      	str	r3, [sp, #28]
 800e570:	bf5d      	ittte	pl
 800e572:	1a5b      	subpl	r3, r3, r1
 800e574:	9307      	strpl	r3, [sp, #28]
 800e576:	9b03      	ldrpl	r3, [sp, #12]
 800e578:	9903      	ldrmi	r1, [sp, #12]
 800e57a:	bf58      	it	pl
 800e57c:	1c59      	addpl	r1, r3, #1
 800e57e:	4489      	add	r9, r1
 800e580:	2a00      	cmp	r2, #0
 800e582:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800e586:	db2e      	blt.n	800e5e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e588:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e58a:	4293      	cmp	r3, r2
 800e58c:	dd2b      	ble.n	800e5e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e58e:	9c01      	ldr	r4, [sp, #4]
 800e590:	6905      	ldr	r5, [r0, #16]
 800e592:	46a0      	mov	r8, r4
 800e594:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800e596:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800e59a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800e59e:	45a0      	cmp	r8, r4
 800e5a0:	f040 814f 	bne.w	800e842 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800e5a4:	f9b5 1000 	ldrsh.w	r1, [r5]
 800e5a8:	4551      	cmp	r1, sl
 800e5aa:	d103      	bne.n	800e5b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800e5ac:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e5b0:	4291      	cmp	r1, r2
 800e5b2:	d018      	beq.n	800e5e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e5b4:	ea5c 010e 	orrs.w	r1, ip, lr
 800e5b8:	d00f      	beq.n	800e5da <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e5ba:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e5be:	2900      	cmp	r1, #0
 800e5c0:	db0b      	blt.n	800e5da <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e5c2:	428b      	cmp	r3, r1
 800e5c4:	dd09      	ble.n	800e5da <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800e5c6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800e5ca:	4299      	cmp	r1, r3
 800e5cc:	bf38      	it	cc
 800e5ce:	3508      	addcc	r5, #8
 800e5d0:	f101 0101 	add.w	r1, r1, #1
 800e5d4:	bf38      	it	cc
 800e5d6:	6105      	strcc	r5, [r0, #16]
 800e5d8:	6081      	str	r1, [r0, #8]
 800e5da:	6903      	ldr	r3, [r0, #16]
 800e5dc:	f8a3 a000 	strh.w	sl, [r3]
 800e5e0:	805a      	strh	r2, [r3, #2]
 800e5e2:	809e      	strh	r6, [r3, #4]
 800e5e4:	80de      	strh	r6, [r3, #6]
 800e5e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800e5e8:	6901      	ldr	r1, [r0, #16]
 800e5ea:	441a      	add	r2, r3
 800e5ec:	88cc      	ldrh	r4, [r1, #6]
 800e5ee:	888b      	ldrh	r3, [r1, #4]
 800e5f0:	4323      	orrs	r3, r4
 800e5f2:	d010      	beq.n	800e616 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e5f4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e5f8:	2c00      	cmp	r4, #0
 800e5fa:	db0c      	blt.n	800e616 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e5fc:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800e5fe:	429c      	cmp	r4, r3
 800e600:	da09      	bge.n	800e616 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800e602:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e606:	429c      	cmp	r4, r3
 800e608:	bf38      	it	cc
 800e60a:	3108      	addcc	r1, #8
 800e60c:	f104 0401 	add.w	r4, r4, #1
 800e610:	bf38      	it	cc
 800e612:	6101      	strcc	r1, [r0, #16]
 800e614:	6084      	str	r4, [r0, #8]
 800e616:	6903      	ldr	r3, [r0, #16]
 800e618:	f8a3 a000 	strh.w	sl, [r3]
 800e61c:	805a      	strh	r2, [r3, #2]
 800e61e:	809e      	strh	r6, [r3, #4]
 800e620:	80de      	strh	r6, [r3, #6]
 800e622:	9b06      	ldr	r3, [sp, #24]
 800e624:	4293      	cmp	r3, r2
 800e626:	464f      	mov	r7, r9
 800e628:	d19c      	bne.n	800e564 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800e62a:	9b01      	ldr	r3, [sp, #4]
 800e62c:	6907      	ldr	r7, [r0, #16]
 800e62e:	f1c3 0620 	rsb	r6, r3, #32
 800e632:	9b05      	ldr	r3, [sp, #20]
 800e634:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800e638:	9b04      	ldr	r3, [sp, #16]
 800e63a:	429e      	cmp	r6, r3
 800e63c:	f040 81cc 	bne.w	800e9d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800e640:	f9b7 3000 	ldrsh.w	r3, [r7]
 800e644:	459e      	cmp	lr, r3
 800e646:	d104      	bne.n	800e652 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800e648:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e64c:	429a      	cmp	r2, r3
 800e64e:	f43f ae36 	beq.w	800e2be <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e652:	88f9      	ldrh	r1, [r7, #6]
 800e654:	88bb      	ldrh	r3, [r7, #4]
 800e656:	430b      	orrs	r3, r1
 800e658:	d010      	beq.n	800e67c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e65a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e65e:	2b00      	cmp	r3, #0
 800e660:	db0c      	blt.n	800e67c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e662:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800e664:	428b      	cmp	r3, r1
 800e666:	da09      	bge.n	800e67c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800e668:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e66c:	428b      	cmp	r3, r1
 800e66e:	bf38      	it	cc
 800e670:	3708      	addcc	r7, #8
 800e672:	f103 0301 	add.w	r3, r3, #1
 800e676:	bf38      	it	cc
 800e678:	6107      	strcc	r7, [r0, #16]
 800e67a:	6083      	str	r3, [r0, #8]
 800e67c:	6903      	ldr	r3, [r0, #16]
 800e67e:	f8a3 e000 	strh.w	lr, [r3]
 800e682:	e5ff      	b.n	800e284 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800e684:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800e686:	9c03      	ldr	r4, [sp, #12]
 800e688:	42a2      	cmp	r2, r4
 800e68a:	f6ff ae18 	blt.w	800e2be <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e68e:	9c06      	ldr	r4, [sp, #24]
 800e690:	42a2      	cmp	r2, r4
 800e692:	bfb8      	it	lt
 800e694:	3201      	addlt	r2, #1
 800e696:	9c08      	ldr	r4, [sp, #32]
 800e698:	bfb8      	it	lt
 800e69a:	9206      	strlt	r2, [sp, #24]
 800e69c:	f1c3 0220 	rsb	r2, r3, #32
 800e6a0:	4362      	muls	r2, r4
 800e6a2:	2401      	movs	r4, #1
 800e6a4:	940b      	str	r4, [sp, #44]	@ 0x2c
 800e6a6:	2420      	movs	r4, #32
 800e6a8:	e6d5      	b.n	800e456 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800e6aa:	f009 021f 	and.w	r2, r9, #31
 800e6ae:	ea4f 1861 	mov.w	r8, r1, asr #5
 800e6b2:	920c      	str	r2, [sp, #48]	@ 0x30
 800e6b4:	9a01      	ldr	r2, [sp, #4]
 800e6b6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800e6ba:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800e6be:	45b0      	cmp	r8, r6
 800e6c0:	f001 011f 	and.w	r1, r1, #31
 800e6c4:	eba2 0203 	sub.w	r2, r2, r3
 800e6c8:	d108      	bne.n	800e6dc <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800e6ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e6cc:	4419      	add	r1, r3
 800e6ce:	4496      	add	lr, r2
 800e6d0:	fb02 a101 	mla	r1, r2, r1, sl
 800e6d4:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e6d8:	80e9      	strh	r1, [r5, #6]
 800e6da:	e6f9      	b.n	800e4d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e6dc:	2c00      	cmp	r4, #0
 800e6de:	f2c0 80a9 	blt.w	800e834 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800e6e2:	2701      	movs	r7, #1
 800e6e4:	f1c1 0c20 	rsb	ip, r1, #32
 800e6e8:	970a      	str	r7, [sp, #40]	@ 0x28
 800e6ea:	fb02 f20c 	mul.w	r2, r2, ip
 800e6ee:	2720      	movs	r7, #32
 800e6f0:	9709      	str	r7, [sp, #36]	@ 0x24
 800e6f2:	fb92 fcf4 	sdiv	ip, r2, r4
 800e6f6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800e6f8:	fb04 221c 	mls	r2, r4, ip, r2
 800e6fc:	2a00      	cmp	r2, #0
 800e6fe:	bfb8      	it	lt
 800e700:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800e704:	4439      	add	r1, r7
 800e706:	fb0c a101 	mla	r1, ip, r1, sl
 800e70a:	80e9      	strh	r1, [r5, #6]
 800e70c:	44e6      	add	lr, ip
 800e70e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e710:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e714:	eb08 0501 	add.w	r5, r8, r1
 800e718:	6901      	ldr	r1, [r0, #16]
 800e71a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800e71e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800e722:	bfb8      	it	lt
 800e724:	1912      	addlt	r2, r2, r4
 800e726:	ea58 070e 	orrs.w	r7, r8, lr
 800e72a:	d010      	beq.n	800e74e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e72c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800e730:	f1be 0f00 	cmp.w	lr, #0
 800e734:	db0b      	blt.n	800e74e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e736:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e738:	45be      	cmp	lr, r7
 800e73a:	da08      	bge.n	800e74e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800e73c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e740:	45be      	cmp	lr, r7
 800e742:	bf3c      	itt	cc
 800e744:	3108      	addcc	r1, #8
 800e746:	6101      	strcc	r1, [r0, #16]
 800e748:	f10e 0101 	add.w	r1, lr, #1
 800e74c:	6081      	str	r1, [r0, #8]
 800e74e:	6901      	ldr	r1, [r0, #16]
 800e750:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800e754:	800d      	strh	r5, [r1, #0]
 800e756:	f04f 0e00 	mov.w	lr, #0
 800e75a:	42ae      	cmp	r6, r5
 800e75c:	f8a1 8002 	strh.w	r8, [r1, #2]
 800e760:	f8a1 e004 	strh.w	lr, [r1, #4]
 800e764:	f8a1 e006 	strh.w	lr, [r1, #6]
 800e768:	4463      	add	r3, ip
 800e76a:	d054      	beq.n	800e816 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800e76c:	9901      	ldr	r1, [sp, #4]
 800e76e:	1ac9      	subs	r1, r1, r3
 800e770:	4461      	add	r1, ip
 800e772:	0149      	lsls	r1, r1, #5
 800e774:	fb91 fef4 	sdiv	lr, r1, r4
 800e778:	fb04 111e 	mls	r1, r4, lr, r1
 800e77c:	2900      	cmp	r1, #0
 800e77e:	bfb8      	it	lt
 800e780:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800e784:	f10e 0701 	add.w	r7, lr, #1
 800e788:	bfb8      	it	lt
 800e78a:	1909      	addlt	r1, r1, r4
 800e78c:	1b12      	subs	r2, r2, r4
 800e78e:	970d      	str	r7, [sp, #52]	@ 0x34
 800e790:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800e794:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800e796:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800e79a:	1852      	adds	r2, r2, r1
 800e79c:	bf54      	ite	pl
 800e79e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800e7a2:	46f4      	movmi	ip, lr
 800e7a4:	44e3      	add	fp, ip
 800e7a6:	f8aa b004 	strh.w	fp, [sl, #4]
 800e7aa:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800e7ae:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800e7b2:	f8aa b006 	strh.w	fp, [sl, #6]
 800e7b6:	4463      	add	r3, ip
 800e7b8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e7bc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e7c0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800e7c4:	bf58      	it	pl
 800e7c6:	1b12      	subpl	r2, r2, r4
 800e7c8:	443d      	add	r5, r7
 800e7ca:	ea5b 070a 	orrs.w	r7, fp, sl
 800e7ce:	d014      	beq.n	800e7fa <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e7d0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800e7d4:	f1ba 0f00 	cmp.w	sl, #0
 800e7d8:	db0f      	blt.n	800e7fa <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e7da:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e7dc:	45ba      	cmp	sl, r7
 800e7de:	da0c      	bge.n	800e7fa <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800e7e0:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800e7e4:	45ba      	cmp	sl, r7
 800e7e6:	bf38      	it	cc
 800e7e8:	f10c 0c08 	addcc.w	ip, ip, #8
 800e7ec:	f10a 0a01 	add.w	sl, sl, #1
 800e7f0:	bf38      	it	cc
 800e7f2:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800e7f6:	f8c0 a008 	str.w	sl, [r0, #8]
 800e7fa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e7fe:	f04f 0700 	mov.w	r7, #0
 800e802:	42ae      	cmp	r6, r5
 800e804:	f8ac 5000 	strh.w	r5, [ip]
 800e808:	f8ac 8002 	strh.w	r8, [ip, #2]
 800e80c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e810:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e814:	d1bc      	bne.n	800e790 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800e816:	6904      	ldr	r4, [r0, #16]
 800e818:	9a01      	ldr	r2, [sp, #4]
 800e81a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e81c:	1ad3      	subs	r3, r2, r3
 800e81e:	88a2      	ldrh	r2, [r4, #4]
 800e820:	441a      	add	r2, r3
 800e822:	80a2      	strh	r2, [r4, #4]
 800e824:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e826:	3120      	adds	r1, #32
 800e828:	1a89      	subs	r1, r1, r2
 800e82a:	88e2      	ldrh	r2, [r4, #6]
 800e82c:	fb03 2301 	mla	r3, r3, r1, r2
 800e830:	80e3      	strh	r3, [r4, #6]
 800e832:	e64d      	b.n	800e4d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800e834:	f04f 37ff 	mov.w	r7, #4294967295
 800e838:	970a      	str	r7, [sp, #40]	@ 0x28
 800e83a:	434a      	muls	r2, r1
 800e83c:	4264      	negs	r4, r4
 800e83e:	2700      	movs	r7, #0
 800e840:	e756      	b.n	800e6f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800e842:	ea4f 1867 	mov.w	r8, r7, asr #5
 800e846:	f009 031f 	and.w	r3, r9, #31
 800e84a:	45d0      	cmp	r8, sl
 800e84c:	f007 071f 	and.w	r7, r7, #31
 800e850:	930f      	str	r3, [sp, #60]	@ 0x3c
 800e852:	fa1f fc8c 	uxth.w	ip, ip
 800e856:	fa1f fe8e 	uxth.w	lr, lr
 800e85a:	d10a      	bne.n	800e872 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800e85c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e85e:	449c      	add	ip, r3
 800e860:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e862:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e866:	441f      	add	r7, r3
 800e868:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e86a:	fb03 e707 	mla	r7, r3, r7, lr
 800e86e:	80ef      	strh	r7, [r5, #6]
 800e870:	e6b9      	b.n	800e5e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e872:	2900      	cmp	r1, #0
 800e874:	f2c0 80a8 	blt.w	800e9c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800e878:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800e87a:	f1c7 0320 	rsb	r3, r7, #32
 800e87e:	4363      	muls	r3, r4
 800e880:	2401      	movs	r4, #1
 800e882:	940d      	str	r4, [sp, #52]	@ 0x34
 800e884:	2420      	movs	r4, #32
 800e886:	940c      	str	r4, [sp, #48]	@ 0x30
 800e888:	fb93 f4f1 	sdiv	r4, r3, r1
 800e88c:	fb01 3b14 	mls	fp, r1, r4, r3
 800e890:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e892:	f1bb 0f00 	cmp.w	fp, #0
 800e896:	bfb8      	it	lt
 800e898:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e89c:	441f      	add	r7, r3
 800e89e:	fb04 e707 	mla	r7, r4, r7, lr
 800e8a2:	44a4      	add	ip, r4
 800e8a4:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e8a8:	80ef      	strh	r7, [r5, #6]
 800e8aa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e8ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e8b0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800e8b4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e8b8:	bfb8      	it	lt
 800e8ba:	448b      	addlt	fp, r1
 800e8bc:	eb08 0503 	add.w	r5, r8, r3
 800e8c0:	ea5e 0307 	orrs.w	r3, lr, r7
 800e8c4:	d011      	beq.n	800e8ea <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e8c6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800e8ca:	f1be 0f00 	cmp.w	lr, #0
 800e8ce:	db0c      	blt.n	800e8ea <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e8d0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e8d2:	45be      	cmp	lr, r7
 800e8d4:	da09      	bge.n	800e8ea <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800e8d6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e8da:	45be      	cmp	lr, r7
 800e8dc:	bf3c      	itt	cc
 800e8de:	f10c 0708 	addcc.w	r7, ip, #8
 800e8e2:	6107      	strcc	r7, [r0, #16]
 800e8e4:	f10e 0701 	add.w	r7, lr, #1
 800e8e8:	6087      	str	r7, [r0, #8]
 800e8ea:	6907      	ldr	r7, [r0, #16]
 800e8ec:	b213      	sxth	r3, r2
 800e8ee:	9310      	str	r3, [sp, #64]	@ 0x40
 800e8f0:	807b      	strh	r3, [r7, #2]
 800e8f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e8f4:	803d      	strh	r5, [r7, #0]
 800e8f6:	4555      	cmp	r5, sl
 800e8f8:	80be      	strh	r6, [r7, #4]
 800e8fa:	80fe      	strh	r6, [r7, #6]
 800e8fc:	eb04 0c03 	add.w	ip, r4, r3
 800e900:	d051      	beq.n	800e9a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800e902:	9b01      	ldr	r3, [sp, #4]
 800e904:	eba3 070c 	sub.w	r7, r3, ip
 800e908:	443c      	add	r4, r7
 800e90a:	0164      	lsls	r4, r4, #5
 800e90c:	fb94 f8f1 	sdiv	r8, r4, r1
 800e910:	fb01 4418 	mls	r4, r1, r8, r4
 800e914:	2c00      	cmp	r4, #0
 800e916:	bfb8      	it	lt
 800e918:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e91c:	ebab 0301 	sub.w	r3, fp, r1
 800e920:	f108 0701 	add.w	r7, r8, #1
 800e924:	bfb8      	it	lt
 800e926:	1864      	addlt	r4, r4, r1
 800e928:	9309      	str	r3, [sp, #36]	@ 0x24
 800e92a:	9711      	str	r7, [sp, #68]	@ 0x44
 800e92c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e92e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e932:	191b      	adds	r3, r3, r4
 800e934:	bf58      	it	pl
 800e936:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800e938:	f8be b004 	ldrh.w	fp, [lr, #4]
 800e93c:	9309      	str	r3, [sp, #36]	@ 0x24
 800e93e:	bf48      	it	mi
 800e940:	4647      	movmi	r7, r8
 800e942:	44bb      	add	fp, r7
 800e944:	f8ae b004 	strh.w	fp, [lr, #4]
 800e948:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e94c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e950:	f8ae b006 	strh.w	fp, [lr, #6]
 800e954:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e958:	44bc      	add	ip, r7
 800e95a:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800e95c:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e960:	443d      	add	r5, r7
 800e962:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800e966:	bf5c      	itt	pl
 800e968:	1a5b      	subpl	r3, r3, r1
 800e96a:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800e96c:	ea5b 0307 	orrs.w	r3, fp, r7
 800e970:	d011      	beq.n	800e996 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e972:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800e976:	f1bb 0f00 	cmp.w	fp, #0
 800e97a:	db0c      	blt.n	800e996 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e97c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e97e:	45bb      	cmp	fp, r7
 800e980:	da09      	bge.n	800e996 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800e982:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e986:	45bb      	cmp	fp, r7
 800e988:	bf3c      	itt	cc
 800e98a:	f10e 0708 	addcc.w	r7, lr, #8
 800e98e:	6107      	strcc	r7, [r0, #16]
 800e990:	f10b 0701 	add.w	r7, fp, #1
 800e994:	6087      	str	r7, [r0, #8]
 800e996:	6907      	ldr	r7, [r0, #16]
 800e998:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e99a:	803d      	strh	r5, [r7, #0]
 800e99c:	4555      	cmp	r5, sl
 800e99e:	807b      	strh	r3, [r7, #2]
 800e9a0:	80be      	strh	r6, [r7, #4]
 800e9a2:	80fe      	strh	r6, [r7, #6]
 800e9a4:	d1c2      	bne.n	800e92c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800e9a6:	9b01      	ldr	r3, [sp, #4]
 800e9a8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800e9aa:	eba3 0c0c 	sub.w	ip, r3, ip
 800e9ae:	6903      	ldr	r3, [r0, #16]
 800e9b0:	8899      	ldrh	r1, [r3, #4]
 800e9b2:	4461      	add	r1, ip
 800e9b4:	8099      	strh	r1, [r3, #4]
 800e9b6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e9b8:	3720      	adds	r7, #32
 800e9ba:	1a7f      	subs	r7, r7, r1
 800e9bc:	88d9      	ldrh	r1, [r3, #6]
 800e9be:	fb0c 1c07 	mla	ip, ip, r7, r1
 800e9c2:	f8a3 c006 	strh.w	ip, [r3, #6]
 800e9c6:	e60e      	b.n	800e5e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800e9c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e9ca:	f04f 34ff 	mov.w	r4, #4294967295
 800e9ce:	940d      	str	r4, [sp, #52]	@ 0x34
 800e9d0:	437b      	muls	r3, r7
 800e9d2:	4249      	negs	r1, r1
 800e9d4:	2400      	movs	r4, #0
 800e9d6:	e756      	b.n	800e886 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800e9d8:	9905      	ldr	r1, [sp, #20]
 800e9da:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800e9de:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800e9e2:	f001 011f 	and.w	r1, r1, #31
 800e9e6:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800e9ea:	9102      	str	r1, [sp, #8]
 800e9ec:	9904      	ldr	r1, [sp, #16]
 800e9ee:	45f3      	cmp	fp, lr
 800e9f0:	f009 0c1f 	and.w	ip, r9, #31
 800e9f4:	eba1 0406 	sub.w	r4, r1, r6
 800e9f8:	d108      	bne.n	800ea0c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800e9fa:	9b02      	ldr	r3, [sp, #8]
 800e9fc:	449c      	add	ip, r3
 800e9fe:	44a0      	add	r8, r4
 800ea00:	fb04 a40c 	mla	r4, r4, ip, sl
 800ea04:	f8a7 8004 	strh.w	r8, [r7, #4]
 800ea08:	80fc      	strh	r4, [r7, #6]
 800ea0a:	e458      	b.n	800e2be <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ea0c:	9905      	ldr	r1, [sp, #20]
 800ea0e:	ebb1 0109 	subs.w	r1, r1, r9
 800ea12:	bf5b      	ittet	pl
 800ea14:	f1cc 0520 	rsbpl	r5, ip, #32
 800ea18:	436c      	mulpl	r4, r5
 800ea1a:	2500      	movmi	r5, #0
 800ea1c:	2520      	movpl	r5, #32
 800ea1e:	bf44      	itt	mi
 800ea20:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ea24:	4249      	negmi	r1, r1
 800ea26:	9501      	str	r5, [sp, #4]
 800ea28:	9b01      	ldr	r3, [sp, #4]
 800ea2a:	fb94 f5f1 	sdiv	r5, r4, r1
 800ea2e:	fb01 4415 	mls	r4, r1, r5, r4
 800ea32:	bf54      	ite	pl
 800ea34:	f04f 0901 	movpl.w	r9, #1
 800ea38:	f04f 39ff 	movmi.w	r9, #4294967295
 800ea3c:	2c00      	cmp	r4, #0
 800ea3e:	bfb8      	it	lt
 800ea40:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ea44:	449c      	add	ip, r3
 800ea46:	44a8      	add	r8, r5
 800ea48:	fb05 ac0c 	mla	ip, r5, ip, sl
 800ea4c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800ea50:	f8a7 c006 	strh.w	ip, [r7, #6]
 800ea54:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ea58:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ea5c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ea60:	bfb8      	it	lt
 800ea62:	1864      	addlt	r4, r4, r1
 800ea64:	ea58 0707 	orrs.w	r7, r8, r7
 800ea68:	eb0b 0309 	add.w	r3, fp, r9
 800ea6c:	d011      	beq.n	800ea92 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ea6e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800ea72:	f1b8 0f00 	cmp.w	r8, #0
 800ea76:	db0c      	blt.n	800ea92 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ea78:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ea7a:	45b8      	cmp	r8, r7
 800ea7c:	da09      	bge.n	800ea92 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800ea7e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800ea82:	45b8      	cmp	r8, r7
 800ea84:	bf3c      	itt	cc
 800ea86:	f10c 0708 	addcc.w	r7, ip, #8
 800ea8a:	6107      	strcc	r7, [r0, #16]
 800ea8c:	f108 0701 	add.w	r7, r8, #1
 800ea90:	6087      	str	r7, [r0, #8]
 800ea92:	6907      	ldr	r7, [r0, #16]
 800ea94:	f04f 0c00 	mov.w	ip, #0
 800ea98:	b212      	sxth	r2, r2
 800ea9a:	459e      	cmp	lr, r3
 800ea9c:	803b      	strh	r3, [r7, #0]
 800ea9e:	807a      	strh	r2, [r7, #2]
 800eaa0:	f8a7 c004 	strh.w	ip, [r7, #4]
 800eaa4:	f8a7 c006 	strh.w	ip, [r7, #6]
 800eaa8:	442e      	add	r6, r5
 800eaaa:	d04d      	beq.n	800eb48 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800eaac:	9f04      	ldr	r7, [sp, #16]
 800eaae:	1bbf      	subs	r7, r7, r6
 800eab0:	443d      	add	r5, r7
 800eab2:	016d      	lsls	r5, r5, #5
 800eab4:	fb95 f8f1 	sdiv	r8, r5, r1
 800eab8:	fb01 5518 	mls	r5, r1, r8, r5
 800eabc:	4565      	cmp	r5, ip
 800eabe:	bfb8      	it	lt
 800eac0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800eac4:	f108 0701 	add.w	r7, r8, #1
 800eac8:	bfb8      	it	lt
 800eaca:	186d      	addlt	r5, r5, r1
 800eacc:	1a64      	subs	r4, r4, r1
 800eace:	9703      	str	r7, [sp, #12]
 800ead0:	f04f 0a00 	mov.w	sl, #0
 800ead4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ead8:	1964      	adds	r4, r4, r5
 800eada:	bf58      	it	pl
 800eadc:	9f03      	ldrpl	r7, [sp, #12]
 800eade:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800eae2:	bf48      	it	mi
 800eae4:	4647      	movmi	r7, r8
 800eae6:	44bb      	add	fp, r7
 800eae8:	f8ac b004 	strh.w	fp, [ip, #4]
 800eaec:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800eaf0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800eaf4:	f8ac b006 	strh.w	fp, [ip, #6]
 800eaf8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eafc:	443e      	add	r6, r7
 800eafe:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800eb02:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800eb06:	bf58      	it	pl
 800eb08:	1a64      	subpl	r4, r4, r1
 800eb0a:	ea5b 0707 	orrs.w	r7, fp, r7
 800eb0e:	444b      	add	r3, r9
 800eb10:	d011      	beq.n	800eb36 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800eb12:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800eb16:	f1bb 0f00 	cmp.w	fp, #0
 800eb1a:	db0c      	blt.n	800eb36 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800eb1c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800eb1e:	45bb      	cmp	fp, r7
 800eb20:	da09      	bge.n	800eb36 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800eb22:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800eb26:	45bb      	cmp	fp, r7
 800eb28:	bf3c      	itt	cc
 800eb2a:	f10c 0708 	addcc.w	r7, ip, #8
 800eb2e:	6107      	strcc	r7, [r0, #16]
 800eb30:	f10b 0701 	add.w	r7, fp, #1
 800eb34:	6087      	str	r7, [r0, #8]
 800eb36:	6907      	ldr	r7, [r0, #16]
 800eb38:	459e      	cmp	lr, r3
 800eb3a:	803b      	strh	r3, [r7, #0]
 800eb3c:	807a      	strh	r2, [r7, #2]
 800eb3e:	f8a7 a004 	strh.w	sl, [r7, #4]
 800eb42:	f8a7 a006 	strh.w	sl, [r7, #6]
 800eb46:	d1c5      	bne.n	800ead4 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800eb48:	9b04      	ldr	r3, [sp, #16]
 800eb4a:	1b9e      	subs	r6, r3, r6
 800eb4c:	6903      	ldr	r3, [r0, #16]
 800eb4e:	889a      	ldrh	r2, [r3, #4]
 800eb50:	4432      	add	r2, r6
 800eb52:	809a      	strh	r2, [r3, #4]
 800eb54:	9a02      	ldr	r2, [sp, #8]
 800eb56:	f102 0c20 	add.w	ip, r2, #32
 800eb5a:	9a01      	ldr	r2, [sp, #4]
 800eb5c:	ebac 0c02 	sub.w	ip, ip, r2
 800eb60:	88da      	ldrh	r2, [r3, #6]
 800eb62:	fb06 260c 	mla	r6, r6, ip, r2
 800eb66:	80de      	strh	r6, [r3, #6]
 800eb68:	f7ff bba9 	b.w	800e2be <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800eb6c <_ZN8touchgfx7Outline6lineToEii>:
 800eb6c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eb6e:	079b      	lsls	r3, r3, #30
 800eb70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800eb72:	460e      	mov	r6, r1
 800eb74:	4615      	mov	r5, r2
 800eb76:	d511      	bpl.n	800eb9c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800eb78:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800eb7c:	ea86 0701 	eor.w	r7, r6, r1
 800eb80:	ea85 0302 	eor.w	r3, r5, r2
 800eb84:	433b      	orrs	r3, r7
 800eb86:	d009      	beq.n	800eb9c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800eb88:	4633      	mov	r3, r6
 800eb8a:	9500      	str	r5, [sp, #0]
 800eb8c:	f7ff fb3e 	bl	800e20c <_ZN8touchgfx7Outline10renderLineEiiii>
 800eb90:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eb92:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800eb96:	f043 0301 	orr.w	r3, r3, #1
 800eb9a:	6243      	str	r3, [r0, #36]	@ 0x24
 800eb9c:	b003      	add	sp, #12
 800eb9e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800eba0 <_ZN8touchgfx7Outline6moveToEii>:
 800eba0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eba2:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800eba4:	4615      	mov	r5, r2
 800eba6:	079a      	lsls	r2, r3, #30
 800eba8:	4604      	mov	r4, r0
 800ebaa:	460e      	mov	r6, r1
 800ebac:	d401      	bmi.n	800ebb2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800ebae:	f7ff faf9 	bl	800e1a4 <_ZN8touchgfx7Outline5resetEv>
 800ebb2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ebb4:	07db      	lsls	r3, r3, #31
 800ebb6:	d504      	bpl.n	800ebc2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800ebb8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800ebbc:	4620      	mov	r0, r4
 800ebbe:	f7ff ffd5 	bl	800eb6c <_ZN8touchgfx7Outline6lineToEii>
 800ebc2:	6923      	ldr	r3, [r4, #16]
 800ebc4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ebc8:	1170      	asrs	r0, r6, #5
 800ebca:	4290      	cmp	r0, r2
 800ebcc:	ea4f 1165 	mov.w	r1, r5, asr #5
 800ebd0:	d103      	bne.n	800ebda <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800ebd2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ebd6:	4291      	cmp	r1, r2
 800ebd8:	d01a      	beq.n	800ec10 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800ebda:	88df      	ldrh	r7, [r3, #6]
 800ebdc:	889a      	ldrh	r2, [r3, #4]
 800ebde:	433a      	orrs	r2, r7
 800ebe0:	d010      	beq.n	800ec04 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800ebe2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ebe6:	2a00      	cmp	r2, #0
 800ebe8:	db0c      	blt.n	800ec04 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800ebea:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800ebec:	42ba      	cmp	r2, r7
 800ebee:	da09      	bge.n	800ec04 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800ebf0:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800ebf4:	42ba      	cmp	r2, r7
 800ebf6:	bf38      	it	cc
 800ebf8:	3308      	addcc	r3, #8
 800ebfa:	f102 0201 	add.w	r2, r2, #1
 800ebfe:	bf38      	it	cc
 800ec00:	6123      	strcc	r3, [r4, #16]
 800ec02:	60a2      	str	r2, [r4, #8]
 800ec04:	6923      	ldr	r3, [r4, #16]
 800ec06:	2200      	movs	r2, #0
 800ec08:	8018      	strh	r0, [r3, #0]
 800ec0a:	8059      	strh	r1, [r3, #2]
 800ec0c:	809a      	strh	r2, [r3, #4]
 800ec0e:	80da      	strh	r2, [r3, #6]
 800ec10:	6166      	str	r6, [r4, #20]
 800ec12:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800ec16:	6225      	str	r5, [r4, #32]
 800ec18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ec1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800ec1a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ec1e:	b0d0      	sub	sp, #320	@ 0x140
 800ec20:	466c      	mov	r4, sp
 800ec22:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800ec26:	4627      	mov	r7, r4
 800ec28:	1a0d      	subs	r5, r1, r0
 800ec2a:	2d48      	cmp	r5, #72	@ 0x48
 800ec2c:	f100 0308 	add.w	r3, r0, #8
 800ec30:	f340 80d5 	ble.w	800edde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800ec34:	112d      	asrs	r5, r5, #4
 800ec36:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800ec3a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ec3e:	6816      	ldr	r6, [r2, #0]
 800ec40:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800ec44:	6006      	str	r6, [r0, #0]
 800ec46:	6856      	ldr	r6, [r2, #4]
 800ec48:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800ec4c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800ec50:	6046      	str	r6, [r0, #4]
 800ec52:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800ec56:	f8a2 8002 	strh.w	r8, [r2, #2]
 800ec5a:	f8a2 e004 	strh.w	lr, [r2, #4]
 800ec5e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ec62:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800ec66:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800ec6a:	4565      	cmp	r5, ip
 800ec6c:	f1a1 0208 	sub.w	r2, r1, #8
 800ec70:	db06      	blt.n	800ec80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800ec72:	d119      	bne.n	800eca8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800ec74:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800ec78:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800ec7c:	42ae      	cmp	r6, r5
 800ec7e:	dd13      	ble.n	800eca8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800ec80:	460e      	mov	r6, r1
 800ec82:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800ec86:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800ec8a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800ec8e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800ec92:	601d      	str	r5, [r3, #0]
 800ec94:	6875      	ldr	r5, [r6, #4]
 800ec96:	605d      	str	r5, [r3, #4]
 800ec98:	f821 9c08 	strh.w	r9, [r1, #-8]
 800ec9c:	f821 cc06 	strh.w	ip, [r1, #-6]
 800eca0:	f821 8c04 	strh.w	r8, [r1, #-4]
 800eca4:	f821 ec02 	strh.w	lr, [r1, #-2]
 800eca8:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ecac:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800ecb0:	42ae      	cmp	r6, r5
 800ecb2:	db06      	blt.n	800ecc2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800ecb4:	d116      	bne.n	800ece4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800ecb6:	f9b0 c000 	ldrsh.w	ip, [r0]
 800ecba:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800ecbe:	45ac      	cmp	ip, r5
 800ecc0:	da10      	bge.n	800ece4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800ecc2:	681d      	ldr	r5, [r3, #0]
 800ecc4:	f9b0 8000 	ldrsh.w	r8, [r0]
 800ecc8:	6005      	str	r5, [r0, #0]
 800ecca:	685d      	ldr	r5, [r3, #4]
 800eccc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800ecd0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800ecd4:	f8a0 8008 	strh.w	r8, [r0, #8]
 800ecd8:	6045      	str	r5, [r0, #4]
 800ecda:	8146      	strh	r6, [r0, #10]
 800ecdc:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800ece0:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800ece4:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800ece8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800ecec:	4565      	cmp	r5, ip
 800ecee:	db06      	blt.n	800ecfe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800ecf0:	d119      	bne.n	800ed26 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ecf2:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800ecf6:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ecfa:	42ae      	cmp	r6, r5
 800ecfc:	da13      	bge.n	800ed26 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ecfe:	460e      	mov	r6, r1
 800ed00:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ed04:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800ed08:	6005      	str	r5, [r0, #0]
 800ed0a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800ed0e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800ed12:	6875      	ldr	r5, [r6, #4]
 800ed14:	6045      	str	r5, [r0, #4]
 800ed16:	f821 9c08 	strh.w	r9, [r1, #-8]
 800ed1a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800ed1e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800ed22:	f821 ec02 	strh.w	lr, [r1, #-2]
 800ed26:	3308      	adds	r3, #8
 800ed28:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800ed2c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800ed30:	45e6      	cmp	lr, ip
 800ed32:	dbf8      	blt.n	800ed26 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ed34:	d105      	bne.n	800ed42 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ed36:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ed3a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ed3e:	42ae      	cmp	r6, r5
 800ed40:	dbf1      	blt.n	800ed26 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ed42:	4615      	mov	r5, r2
 800ed44:	3a08      	subs	r2, #8
 800ed46:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800ed4a:	45b4      	cmp	ip, r6
 800ed4c:	dbf9      	blt.n	800ed42 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ed4e:	d105      	bne.n	800ed5c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800ed50:	f9b0 8000 	ldrsh.w	r8, [r0]
 800ed54:	f9b2 6000 	ldrsh.w	r6, [r2]
 800ed58:	45b0      	cmp	r8, r6
 800ed5a:	dbf2      	blt.n	800ed42 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800ed5c:	4293      	cmp	r3, r2
 800ed5e:	f1a5 0608 	sub.w	r6, r5, #8
 800ed62:	d816      	bhi.n	800ed92 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800ed64:	f8d6 c000 	ldr.w	ip, [r6]
 800ed68:	f9b3 a000 	ldrsh.w	sl, [r3]
 800ed6c:	f8c3 c000 	str.w	ip, [r3]
 800ed70:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800ed74:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800ed78:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800ed7c:	f8c3 c004 	str.w	ip, [r3, #4]
 800ed80:	f825 ac08 	strh.w	sl, [r5, #-8]
 800ed84:	f825 ec06 	strh.w	lr, [r5, #-6]
 800ed88:	f825 9c04 	strh.w	r9, [r5, #-4]
 800ed8c:	f825 8c02 	strh.w	r8, [r5, #-2]
 800ed90:	e7c9      	b.n	800ed26 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800ed92:	f8d6 e000 	ldr.w	lr, [r6]
 800ed96:	f9b0 a000 	ldrsh.w	sl, [r0]
 800ed9a:	f8c0 e000 	str.w	lr, [r0]
 800ed9e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800eda2:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800eda6:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800edaa:	f8c0 e004 	str.w	lr, [r0, #4]
 800edae:	f825 ac08 	strh.w	sl, [r5, #-8]
 800edb2:	f825 cc06 	strh.w	ip, [r5, #-6]
 800edb6:	f825 9c04 	strh.w	r9, [r5, #-4]
 800edba:	f825 8c02 	strh.w	r8, [r5, #-2]
 800edbe:	1acd      	subs	r5, r1, r3
 800edc0:	1a16      	subs	r6, r2, r0
 800edc2:	10ed      	asrs	r5, r5, #3
 800edc4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800edc8:	bfb5      	itete	lt
 800edca:	e9c4 0200 	strdlt	r0, r2, [r4]
 800edce:	e9c4 3100 	strdge	r3, r1, [r4]
 800edd2:	460a      	movlt	r2, r1
 800edd4:	4603      	movge	r3, r0
 800edd6:	3408      	adds	r4, #8
 800edd8:	4618      	mov	r0, r3
 800edda:	4611      	mov	r1, r2
 800eddc:	e724      	b.n	800ec28 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800edde:	4299      	cmp	r1, r3
 800ede0:	d928      	bls.n	800ee34 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800ede2:	f1a3 0210 	sub.w	r2, r3, #16
 800ede6:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800edea:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800edee:	45ac      	cmp	ip, r5
 800edf0:	db06      	blt.n	800ee00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800edf2:	d11d      	bne.n	800ee30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800edf4:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800edf8:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800edfc:	42ae      	cmp	r6, r5
 800edfe:	da17      	bge.n	800ee30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800ee00:	4615      	mov	r5, r2
 800ee02:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800ee06:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800ee0a:	6116      	str	r6, [r2, #16]
 800ee0c:	686e      	ldr	r6, [r5, #4]
 800ee0e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800ee12:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800ee16:	f8a2 9008 	strh.w	r9, [r2, #8]
 800ee1a:	42a8      	cmp	r0, r5
 800ee1c:	6156      	str	r6, [r2, #20]
 800ee1e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800ee22:	f8a2 800c 	strh.w	r8, [r2, #12]
 800ee26:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800ee2a:	f1a2 0208 	sub.w	r2, r2, #8
 800ee2e:	d1da      	bne.n	800ede6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800ee30:	3308      	adds	r3, #8
 800ee32:	e7d4      	b.n	800edde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800ee34:	42bc      	cmp	r4, r7
 800ee36:	d903      	bls.n	800ee40 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800ee38:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800ee3c:	3c08      	subs	r4, #8
 800ee3e:	e6f3      	b.n	800ec28 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800ee40:	b050      	add	sp, #320	@ 0x140
 800ee42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800ee46 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800ee46:	b510      	push	{r4, lr}
 800ee48:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ee4a:	07da      	lsls	r2, r3, #31
 800ee4c:	4604      	mov	r4, r0
 800ee4e:	d507      	bpl.n	800ee60 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800ee50:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800ee54:	f7ff fe8a 	bl	800eb6c <_ZN8touchgfx7Outline6lineToEii>
 800ee58:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ee5a:	f023 0301 	bic.w	r3, r3, #1
 800ee5e:	6243      	str	r3, [r0, #36]	@ 0x24
 800ee60:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ee62:	079b      	lsls	r3, r3, #30
 800ee64:	d521      	bpl.n	800eeaa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800ee66:	6923      	ldr	r3, [r4, #16]
 800ee68:	88d9      	ldrh	r1, [r3, #6]
 800ee6a:	889a      	ldrh	r2, [r3, #4]
 800ee6c:	430a      	orrs	r2, r1
 800ee6e:	d010      	beq.n	800ee92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ee70:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800ee74:	2a00      	cmp	r2, #0
 800ee76:	db0c      	blt.n	800ee92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ee78:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800ee7a:	428a      	cmp	r2, r1
 800ee7c:	da09      	bge.n	800ee92 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800ee7e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800ee82:	4291      	cmp	r1, r2
 800ee84:	bf88      	it	hi
 800ee86:	3308      	addhi	r3, #8
 800ee88:	f102 0201 	add.w	r2, r2, #1
 800ee8c:	bf88      	it	hi
 800ee8e:	6123      	strhi	r3, [r4, #16]
 800ee90:	60a2      	str	r2, [r4, #8]
 800ee92:	68a1      	ldr	r1, [r4, #8]
 800ee94:	b129      	cbz	r1, 800eea2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800ee96:	6863      	ldr	r3, [r4, #4]
 800ee98:	4299      	cmp	r1, r3
 800ee9a:	d802      	bhi.n	800eea2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800ee9c:	68e0      	ldr	r0, [r4, #12]
 800ee9e:	f7ff febc 	bl	800ec1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800eea2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800eea4:	f023 0302 	bic.w	r3, r3, #2
 800eea8:	6263      	str	r3, [r4, #36]	@ 0x24
 800eeaa:	68e0      	ldr	r0, [r4, #12]
 800eeac:	bd10      	pop	{r4, pc}
	...

0800eeb0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800eeb0:	4b02      	ldr	r3, [pc, #8]	@ (800eebc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800eeb2:	6018      	str	r0, [r3, #0]
 800eeb4:	4b02      	ldr	r3, [pc, #8]	@ (800eec0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800eeb6:	6019      	str	r1, [r3, #0]
 800eeb8:	4770      	bx	lr
 800eeba:	bf00      	nop
 800eebc:	20014048 	.word	0x20014048
 800eec0:	2001404c 	.word	0x2001404c

0800eec4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800eec4:	4b01      	ldr	r3, [pc, #4]	@ (800eecc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800eec6:	6818      	ldr	r0, [r3, #0]
 800eec8:	4770      	bx	lr
 800eeca:	bf00      	nop
 800eecc:	20014048 	.word	0x20014048

0800eed0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800eed0:	4b01      	ldr	r3, [pc, #4]	@ (800eed8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800eed2:	6818      	ldr	r0, [r3, #0]
 800eed4:	4770      	bx	lr
 800eed6:	bf00      	nop
 800eed8:	2001404c 	.word	0x2001404c

0800eedc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800eedc:	b510      	push	{r4, lr}
 800eede:	6803      	ldr	r3, [r0, #0]
 800eee0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eee2:	460c      	mov	r4, r1
 800eee4:	4798      	blx	r3
 800eee6:	1b03      	subs	r3, r0, r4
 800eee8:	4258      	negs	r0, r3
 800eeea:	4158      	adcs	r0, r3
 800eeec:	bd10      	pop	{r4, pc}
	...

0800eef0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800eef0:	4b01      	ldr	r3, [pc, #4]	@ (800eef8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800eef2:	6019      	str	r1, [r3, #0]
 800eef4:	4770      	bx	lr
 800eef6:	bf00      	nop
 800eef8:	20014050 	.word	0x20014050

0800eefc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800eefc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef00:	4696      	mov	lr, r2
 800ef02:	4605      	mov	r5, r0
 800ef04:	4614      	mov	r4, r2
 800ef06:	460e      	mov	r6, r1
 800ef08:	461f      	mov	r7, r3
 800ef0a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef0e:	b097      	sub	sp, #92	@ 0x5c
 800ef10:	f10d 0c1c 	add.w	ip, sp, #28
 800ef14:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef18:	f8de 3000 	ldr.w	r3, [lr]
 800ef1c:	f8cc 3000 	str.w	r3, [ip]
 800ef20:	f104 0e14 	add.w	lr, r4, #20
 800ef24:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef28:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ef2c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef30:	f8de 3000 	ldr.w	r3, [lr]
 800ef34:	f8cc 3000 	str.w	r3, [ip]
 800ef38:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ef3c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef40:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ef44:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef48:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800ef4c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800ef50:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800ef54:	f8de 3000 	ldr.w	r3, [lr]
 800ef58:	f8cc 3000 	str.w	r3, [ip]
 800ef5c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ef5e:	682b      	ldr	r3, [r5, #0]
 800ef60:	9201      	str	r2, [sp, #4]
 800ef62:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ef66:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ef68:	9200      	str	r2, [sp, #0]
 800ef6a:	f8cd 8008 	str.w	r8, [sp, #8]
 800ef6e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800ef72:	aa07      	add	r2, sp, #28
 800ef74:	463b      	mov	r3, r7
 800ef76:	4631      	mov	r1, r6
 800ef78:	4628      	mov	r0, r5
 800ef7a:	47d8      	blx	fp
 800ef7c:	46a6      	mov	lr, r4
 800ef7e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef82:	f10d 0c1c 	add.w	ip, sp, #28
 800ef86:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ef8a:	f8de 3000 	ldr.w	r3, [lr]
 800ef8e:	f8cc 3000 	str.w	r3, [ip]
 800ef92:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ef96:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ef9a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ef9e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800efa2:	343c      	adds	r4, #60	@ 0x3c
 800efa4:	f8de 3000 	ldr.w	r3, [lr]
 800efa8:	f8cc 3000 	str.w	r3, [ip]
 800efac:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800efae:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800efb2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800efb6:	6823      	ldr	r3, [r4, #0]
 800efb8:	f8cc 3000 	str.w	r3, [ip]
 800efbc:	682b      	ldr	r3, [r5, #0]
 800efbe:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800efc2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800efc4:	9201      	str	r2, [sp, #4]
 800efc6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800efc8:	9200      	str	r2, [sp, #0]
 800efca:	f8cd 8008 	str.w	r8, [sp, #8]
 800efce:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800efd0:	aa07      	add	r2, sp, #28
 800efd2:	463b      	mov	r3, r7
 800efd4:	4631      	mov	r1, r6
 800efd6:	4628      	mov	r0, r5
 800efd8:	47a0      	blx	r4
 800efda:	b017      	add	sp, #92	@ 0x5c
 800efdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800efe0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800efe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efe4:	b08d      	sub	sp, #52	@ 0x34
 800efe6:	4688      	mov	r8, r1
 800efe8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800efea:	f8d3 c000 	ldr.w	ip, [r3]
 800efee:	680f      	ldr	r7, [r1, #0]
 800eff0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800eff4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800eff8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800effc:	edd3 6a07 	vldr	s13, [r3, #28]
 800f000:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800f002:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800f006:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f00a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f00e:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800f012:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800f016:	eba7 070c 	sub.w	r7, r7, ip
 800f01a:	42bc      	cmp	r4, r7
 800f01c:	bfa8      	it	ge
 800f01e:	463c      	movge	r4, r7
 800f020:	ee07 4a90 	vmov	s15, r4
 800f024:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f028:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800f02c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f030:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f034:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f038:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800f03c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f040:	eb09 0e0c 	add.w	lr, r9, ip
 800f044:	4571      	cmp	r1, lr
 800f046:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f04a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f04e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f052:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f056:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f05a:	f340 808d 	ble.w	800f178 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f05e:	eba1 060e 	sub.w	r6, r1, lr
 800f062:	fb96 f5f4 	sdiv	r5, r6, r4
 800f066:	ee07 5a10 	vmov	s14, r5
 800f06a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f06e:	2d00      	cmp	r5, #0
 800f070:	fb04 6615 	mls	r6, r4, r5, r6
 800f074:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f078:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f07c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f080:	dd13      	ble.n	800f0aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f082:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f086:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f08a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f08e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f092:	bf18      	it	ne
 800f094:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f098:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f09c:	bf08      	it	eq
 800f09e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f0a2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f0a6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f0aa:	fb05 f204 	mul.w	r2, r5, r4
 800f0ae:	1abf      	subs	r7, r7, r2
 800f0b0:	4494      	add	ip, r2
 800f0b2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f0b6:	4411      	add	r1, r2
 800f0b8:	eb09 020c 	add.w	r2, r9, ip
 800f0bc:	443a      	add	r2, r7
 800f0be:	b209      	sxth	r1, r1
 800f0c0:	428a      	cmp	r2, r1
 800f0c2:	bfc4      	itt	gt
 800f0c4:	eba1 0209 	subgt.w	r2, r1, r9
 800f0c8:	eba2 070c 	subgt.w	r7, r2, ip
 800f0cc:	2f00      	cmp	r7, #0
 800f0ce:	dd50      	ble.n	800f172 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f0d0:	fb97 f1f4 	sdiv	r1, r7, r4
 800f0d4:	fb04 7211 	mls	r2, r4, r1, r7
 800f0d8:	b90a      	cbnz	r2, 800f0de <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f0da:	3901      	subs	r1, #1
 800f0dc:	4622      	mov	r2, r4
 800f0de:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f0e2:	6840      	ldr	r0, [r0, #4]
 800f0e4:	900b      	str	r0, [sp, #44]	@ 0x2c
 800f0e6:	f8d0 a000 	ldr.w	sl, [r0]
 800f0ea:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800f0ec:	9008      	str	r0, [sp, #32]
 800f0ee:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800f0f2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800f0f4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800f0f8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f0fc:	695b      	ldr	r3, [r3, #20]
 800f0fe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800f100:	445b      	add	r3, fp
 800f102:	eef0 6a42 	vmov.f32	s13, s4
 800f106:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f10a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f10e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f112:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f116:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f11a:	9307      	str	r3, [sp, #28]
 800f11c:	ee17 7a90 	vmov	r7, s15
 800f120:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f124:	eeb0 7a61 	vmov.f32	s14, s3
 800f128:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f12c:	ee16 3a90 	vmov	r3, s13
 800f130:	fb97 f7f4 	sdiv	r7, r7, r4
 800f134:	ee17 ca90 	vmov	ip, s15
 800f138:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f13c:	fb9c fcf4 	sdiv	ip, ip, r4
 800f140:	fb0c 3306 	mla	r3, ip, r6, r3
 800f144:	9302      	str	r3, [sp, #8]
 800f146:	ee17 3a10 	vmov	r3, s14
 800f14a:	44b6      	add	lr, r6
 800f14c:	fb04 e505 	mla	r5, r4, r5, lr
 800f150:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f154:	fb07 3706 	mla	r7, r7, r6, r3
 800f158:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f15c:	e9cd 4700 	strd	r4, r7, [sp]
 800f160:	2900      	cmp	r1, #0
 800f162:	bfcc      	ite	gt
 800f164:	46a1      	movgt	r9, r4
 800f166:	4691      	movle	r9, r2
 800f168:	eba9 0306 	sub.w	r3, r9, r6
 800f16c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f170:	47a0      	blx	r4
 800f172:	b00d      	add	sp, #52	@ 0x34
 800f174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f178:	2500      	movs	r5, #0
 800f17a:	462e      	mov	r6, r5
 800f17c:	e799      	b.n	800f0b2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f184:	b0db      	sub	sp, #364	@ 0x16c
 800f186:	461d      	mov	r5, r3
 800f188:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800f18c:	930a      	str	r3, [sp, #40]	@ 0x28
 800f18e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800f192:	930b      	str	r3, [sp, #44]	@ 0x2c
 800f194:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800f198:	9310      	str	r3, [sp, #64]	@ 0x40
 800f19a:	6803      	ldr	r3, [r0, #0]
 800f19c:	910f      	str	r1, [sp, #60]	@ 0x3c
 800f19e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800f1a0:	9009      	str	r0, [sp, #36]	@ 0x24
 800f1a2:	4614      	mov	r4, r2
 800f1a4:	4629      	mov	r1, r5
 800f1a6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800f1aa:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800f1ae:	47b8      	blx	r7
 800f1b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f1b2:	6058      	str	r0, [r3, #4]
 800f1b4:	2800      	cmp	r0, #0
 800f1b6:	f000 83a1 	beq.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1ba:	682b      	ldr	r3, [r5, #0]
 800f1bc:	9314      	str	r3, [sp, #80]	@ 0x50
 800f1be:	686b      	ldr	r3, [r5, #4]
 800f1c0:	9315      	str	r3, [sp, #84]	@ 0x54
 800f1c2:	4bc4      	ldr	r3, [pc, #784]	@ (800f4d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f1c4:	ed94 7a02 	vldr	s14, [r4, #8]
 800f1c8:	7819      	ldrb	r1, [r3, #0]
 800f1ca:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f1ce:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800f1d2:	2900      	cmp	r1, #0
 800f1d4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1d8:	bf16      	itet	ne
 800f1da:	4619      	movne	r1, r3
 800f1dc:	4611      	moveq	r1, r2
 800f1de:	4613      	movne	r3, r2
 800f1e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1e4:	9116      	str	r1, [sp, #88]	@ 0x58
 800f1e6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800f1ea:	f240 8387 	bls.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1ee:	ed94 7a07 	vldr	s14, [r4, #28]
 800f1f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1fa:	f240 837f 	bls.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1fe:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800f202:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f20a:	f240 8377 	bls.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f20e:	6822      	ldr	r2, [r4, #0]
 800f210:	4bb1      	ldr	r3, [pc, #708]	@ (800f4d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f212:	429a      	cmp	r2, r3
 800f214:	f2c0 8372 	blt.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f218:	49b0      	ldr	r1, [pc, #704]	@ (800f4dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f21a:	6963      	ldr	r3, [r4, #20]
 800f21c:	428a      	cmp	r2, r1
 800f21e:	f300 836d 	bgt.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f222:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f226:	48ae      	ldr	r0, [pc, #696]	@ (800f4e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f228:	33ff      	adds	r3, #255	@ 0xff
 800f22a:	4283      	cmp	r3, r0
 800f22c:	f200 8366 	bhi.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f230:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800f232:	4dac      	ldr	r5, [pc, #688]	@ (800f4e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f234:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f238:	33ff      	adds	r3, #255	@ 0xff
 800f23a:	42ab      	cmp	r3, r5
 800f23c:	f200 835e 	bhi.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f240:	6862      	ldr	r2, [r4, #4]
 800f242:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800f246:	33ff      	adds	r3, #255	@ 0xff
 800f248:	4283      	cmp	r3, r0
 800f24a:	f200 8357 	bhi.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f24e:	69a1      	ldr	r1, [r4, #24]
 800f250:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800f254:	33ff      	adds	r3, #255	@ 0xff
 800f256:	4283      	cmp	r3, r0
 800f258:	f200 8350 	bhi.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f25c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f25e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800f262:	30ff      	adds	r0, #255	@ 0xff
 800f264:	42a8      	cmp	r0, r5
 800f266:	f200 8349 	bhi.w	800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f26a:	428a      	cmp	r2, r1
 800f26c:	f280 8110 	bge.w	800f490 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f270:	429a      	cmp	r2, r3
 800f272:	f300 8119 	bgt.w	800f4a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f276:	4299      	cmp	r1, r3
 800f278:	f280 811d 	bge.w	800f4b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f27c:	2502      	movs	r5, #2
 800f27e:	2701      	movs	r7, #1
 800f280:	46a9      	mov	r9, r5
 800f282:	46b8      	mov	r8, r7
 800f284:	f04f 0a00 	mov.w	sl, #0
 800f288:	4621      	mov	r1, r4
 800f28a:	a849      	add	r0, sp, #292	@ 0x124
 800f28c:	f003 fdae 	bl	8012dec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f290:	4622      	mov	r2, r4
 800f292:	4653      	mov	r3, sl
 800f294:	a949      	add	r1, sp, #292	@ 0x124
 800f296:	f8cd 9000 	str.w	r9, [sp]
 800f29a:	a819      	add	r0, sp, #100	@ 0x64
 800f29c:	f003 fed6 	bl	801304c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f2a0:	4622      	mov	r2, r4
 800f2a2:	4653      	mov	r3, sl
 800f2a4:	a949      	add	r1, sp, #292	@ 0x124
 800f2a6:	f8cd 8000 	str.w	r8, [sp]
 800f2aa:	a829      	add	r0, sp, #164	@ 0xa4
 800f2ac:	f003 fece 	bl	801304c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f2b0:	4643      	mov	r3, r8
 800f2b2:	4622      	mov	r2, r4
 800f2b4:	a949      	add	r1, sp, #292	@ 0x124
 800f2b6:	f8cd 9000 	str.w	r9, [sp]
 800f2ba:	a839      	add	r0, sp, #228	@ 0xe4
 800f2bc:	f003 fec6 	bl	801304c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f2c0:	42af      	cmp	r7, r5
 800f2c2:	bfb5      	itete	lt
 800f2c4:	2300      	movlt	r3, #0
 800f2c6:	2301      	movge	r3, #1
 800f2c8:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800f2ca:	930e      	strge	r3, [sp, #56]	@ 0x38
 800f2cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f2ce:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f2d2:	af12      	add	r7, sp, #72	@ 0x48
 800f2d4:	bfb9      	ittee	lt
 800f2d6:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800f2d8:	ac19      	addlt	r4, sp, #100	@ 0x64
 800f2da:	ad19      	addge	r5, sp, #100	@ 0x64
 800f2dc:	ac29      	addge	r4, sp, #164	@ 0xa4
 800f2de:	e887 0003 	stmia.w	r7, {r0, r1}
 800f2e2:	b928      	cbnz	r0, 800f2f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f2e4:	4b80      	ldr	r3, [pc, #512]	@ (800f4e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f2e6:	6818      	ldr	r0, [r3, #0]
 800f2e8:	6803      	ldr	r3, [r0, #0]
 800f2ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f2ec:	4798      	blx	r3
 800f2ee:	6038      	str	r0, [r7, #0]
 800f2f0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f2f2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f2f6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f2fa:	930c      	str	r3, [sp, #48]	@ 0x30
 800f2fc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f2fe:	6963      	ldr	r3, [r4, #20]
 800f300:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800f302:	440b      	add	r3, r1
 800f304:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f308:	4408      	add	r0, r1
 800f30a:	b200      	sxth	r0, r0
 800f30c:	4283      	cmp	r3, r0
 800f30e:	900d      	str	r0, [sp, #52]	@ 0x34
 800f310:	f280 80dd 	bge.w	800f4ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f314:	428b      	cmp	r3, r1
 800f316:	da08      	bge.n	800f32a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f318:	2a00      	cmp	r2, #0
 800f31a:	dd06      	ble.n	800f32a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f31c:	1acb      	subs	r3, r1, r3
 800f31e:	429a      	cmp	r2, r3
 800f320:	f2c0 80e4 	blt.w	800f4ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f324:	2b00      	cmp	r3, #0
 800f326:	f300 80e2 	bgt.w	800f4ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f32a:	6967      	ldr	r7, [r4, #20]
 800f32c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f32e:	443b      	add	r3, r7
 800f330:	461f      	mov	r7, r3
 800f332:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f334:	1bdf      	subs	r7, r3, r7
 800f336:	4297      	cmp	r7, r2
 800f338:	bfa8      	it	ge
 800f33a:	4617      	movge	r7, r2
 800f33c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f340:	2f00      	cmp	r7, #0
 800f342:	f340 8166 	ble.w	800f612 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f346:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f348:	6829      	ldr	r1, [r5, #0]
 800f34a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f34e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f352:	6820      	ldr	r0, [r4, #0]
 800f354:	4411      	add	r1, r2
 800f356:	4299      	cmp	r1, r3
 800f358:	dd1a      	ble.n	800f390 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f35a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f35e:	440b      	add	r3, r1
 800f360:	4402      	add	r2, r0
 800f362:	b21b      	sxth	r3, r3
 800f364:	429a      	cmp	r2, r3
 800f366:	dc13      	bgt.n	800f390 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f368:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f36a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f36c:	681b      	ldr	r3, [r3, #0]
 800f36e:	9206      	str	r2, [sp, #24]
 800f370:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f372:	9205      	str	r2, [sp, #20]
 800f374:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f376:	9500      	str	r5, [sp, #0]
 800f378:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f37c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f37e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f380:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f384:	a912      	add	r1, sp, #72	@ 0x48
 800f386:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f38a:	aa49      	add	r2, sp, #292	@ 0x124
 800f38c:	4623      	mov	r3, r4
 800f38e:	47c8      	blx	r9
 800f390:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f394:	441a      	add	r2, r3
 800f396:	6963      	ldr	r3, [r4, #20]
 800f398:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f39c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f3a0:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f3a4:	68a1      	ldr	r1, [r4, #8]
 800f3a6:	ed94 6a08 	vldr	s12, [r4, #32]
 800f3aa:	6022      	str	r2, [r4, #0]
 800f3ac:	3301      	adds	r3, #1
 800f3ae:	6163      	str	r3, [r4, #20]
 800f3b0:	69a3      	ldr	r3, [r4, #24]
 800f3b2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f3b6:	3b01      	subs	r3, #1
 800f3b8:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f3bc:	61a3      	str	r3, [r4, #24]
 800f3be:	6923      	ldr	r3, [r4, #16]
 800f3c0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f3c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f3c8:	edd4 6a07 	vldr	s13, [r4, #28]
 800f3cc:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f3d0:	440b      	add	r3, r1
 800f3d2:	68e1      	ldr	r1, [r4, #12]
 800f3d4:	6123      	str	r3, [r4, #16]
 800f3d6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f3da:	428b      	cmp	r3, r1
 800f3dc:	edc4 6a07 	vstr	s13, [r4, #28]
 800f3e0:	db15      	blt.n	800f40e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f3e2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f3e6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f3ea:	3201      	adds	r2, #1
 800f3ec:	edc4 6a07 	vstr	s13, [r4, #28]
 800f3f0:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f3f4:	6022      	str	r2, [r4, #0]
 800f3f6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f3fa:	1a5b      	subs	r3, r3, r1
 800f3fc:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f400:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f404:	6123      	str	r3, [r4, #16]
 800f406:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f40a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f40e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f412:	441a      	add	r2, r3
 800f414:	696b      	ldr	r3, [r5, #20]
 800f416:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f41a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f41e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f422:	68a9      	ldr	r1, [r5, #8]
 800f424:	ed95 6a08 	vldr	s12, [r5, #32]
 800f428:	602a      	str	r2, [r5, #0]
 800f42a:	3301      	adds	r3, #1
 800f42c:	616b      	str	r3, [r5, #20]
 800f42e:	69ab      	ldr	r3, [r5, #24]
 800f430:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f434:	3b01      	subs	r3, #1
 800f436:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f43a:	61ab      	str	r3, [r5, #24]
 800f43c:	692b      	ldr	r3, [r5, #16]
 800f43e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f442:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f446:	edd5 6a07 	vldr	s13, [r5, #28]
 800f44a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f44e:	440b      	add	r3, r1
 800f450:	68e9      	ldr	r1, [r5, #12]
 800f452:	612b      	str	r3, [r5, #16]
 800f454:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f458:	428b      	cmp	r3, r1
 800f45a:	edc5 6a07 	vstr	s13, [r5, #28]
 800f45e:	db15      	blt.n	800f48c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f460:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f464:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f468:	3201      	adds	r2, #1
 800f46a:	edc5 6a07 	vstr	s13, [r5, #28]
 800f46e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f472:	602a      	str	r2, [r5, #0]
 800f474:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f478:	1a5b      	subs	r3, r3, r1
 800f47a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f47e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f482:	612b      	str	r3, [r5, #16]
 800f484:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f488:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f48c:	3f01      	subs	r7, #1
 800f48e:	e757      	b.n	800f340 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f490:	4299      	cmp	r1, r3
 800f492:	dc13      	bgt.n	800f4bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f494:	429a      	cmp	r2, r3
 800f496:	da14      	bge.n	800f4c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f498:	2502      	movs	r5, #2
 800f49a:	2703      	movs	r7, #3
 800f49c:	46a9      	mov	r9, r5
 800f49e:	f04f 0800 	mov.w	r8, #0
 800f4a2:	f04f 0a01 	mov.w	sl, #1
 800f4a6:	e6ef      	b.n	800f288 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f4a8:	2501      	movs	r5, #1
 800f4aa:	2700      	movs	r7, #0
 800f4ac:	46a9      	mov	r9, r5
 800f4ae:	46b8      	mov	r8, r7
 800f4b0:	f04f 0a02 	mov.w	sl, #2
 800f4b4:	e6e8      	b.n	800f288 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f4b6:	2501      	movs	r5, #1
 800f4b8:	2702      	movs	r7, #2
 800f4ba:	e6e1      	b.n	800f280 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f4bc:	2500      	movs	r5, #0
 800f4be:	2701      	movs	r7, #1
 800f4c0:	e7f4      	b.n	800f4ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f4c2:	2702      	movs	r7, #2
 800f4c4:	2503      	movs	r5, #3
 800f4c6:	f04f 0900 	mov.w	r9, #0
 800f4ca:	46b8      	mov	r8, r7
 800f4cc:	e7e9      	b.n	800f4a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f4ce:	4613      	mov	r3, r2
 800f4d0:	e728      	b.n	800f324 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f4d2:	bf00      	nop
 800f4d4:	20014036 	.word	0x20014036
 800f4d8:	fffd8f01 	.word	0xfffd8f01
 800f4dc:	00027100 	.word	0x00027100
 800f4e0:	0004e1ff 	.word	0x0004e1ff
 800f4e4:	0004e1fe 	.word	0x0004e1fe
 800f4e8:	20014040 	.word	0x20014040
 800f4ec:	4613      	mov	r3, r2
 800f4ee:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800f4f0:	9111      	str	r1, [sp, #68]	@ 0x44
 800f4f2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800f4f6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800f4fa:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800f4fc:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800f500:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800f504:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800f508:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800f50c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800f510:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800f514:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800f518:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800f51c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800f520:	469e      	mov	lr, r3
 800f522:	469c      	mov	ip, r3
 800f524:	f04f 0900 	mov.w	r9, #0
 800f528:	f1bc 0f00 	cmp.w	ip, #0
 800f52c:	d147      	bne.n	800f5be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f52e:	eb03 0c07 	add.w	ip, r3, r7
 800f532:	1ad7      	subs	r7, r2, r3
 800f534:	f1b9 0f00 	cmp.w	r9, #0
 800f538:	d009      	beq.n	800f54e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f53a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800f53e:	9029      	str	r0, [sp, #164]	@ 0xa4
 800f540:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800f544:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800f548:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800f54c:	912d      	str	r1, [sp, #180]	@ 0xb4
 800f54e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f550:	9111      	str	r1, [sp, #68]	@ 0x44
 800f552:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f556:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f55a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f55e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f562:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f566:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f56a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f56e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f572:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f576:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f57a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f57e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f582:	f04f 0800 	mov.w	r8, #0
 800f586:	f1be 0f00 	cmp.w	lr, #0
 800f58a:	d031      	beq.n	800f5f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f58c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f58e:	4431      	add	r1, r6
 800f590:	4549      	cmp	r1, r9
 800f592:	4450      	add	r0, sl
 800f594:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f598:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f59c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f5a0:	db08      	blt.n	800f5b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f5a2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f5a6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f5aa:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f5ae:	3001      	adds	r0, #1
 800f5b0:	eba1 0109 	sub.w	r1, r1, r9
 800f5b4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f5b8:	f04f 0801 	mov.w	r8, #1
 800f5bc:	e7e3      	b.n	800f586 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f5be:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f5c0:	4431      	add	r1, r6
 800f5c2:	4541      	cmp	r1, r8
 800f5c4:	4450      	add	r0, sl
 800f5c6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f5ca:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f5ce:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f5d2:	db08      	blt.n	800f5e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f5d4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f5d8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f5dc:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f5e0:	3001      	adds	r0, #1
 800f5e2:	eba1 0108 	sub.w	r1, r1, r8
 800f5e6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f5ea:	f04f 0901 	mov.w	r9, #1
 800f5ee:	e79b      	b.n	800f528 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f5f0:	449c      	add	ip, r3
 800f5f2:	1aff      	subs	r7, r7, r3
 800f5f4:	f1b8 0f00 	cmp.w	r8, #0
 800f5f8:	d009      	beq.n	800f60e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f5fa:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f5fe:	9019      	str	r0, [sp, #100]	@ 0x64
 800f600:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f604:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f608:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f60c:	911d      	str	r1, [sp, #116]	@ 0x74
 800f60e:	1ad2      	subs	r2, r2, r3
 800f610:	e68b      	b.n	800f32a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f612:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f614:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800f616:	2b00      	cmp	r3, #0
 800f618:	f000 80d1 	beq.w	800f7be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f61c:	ad19      	add	r5, sp, #100	@ 0x64
 800f61e:	ac39      	add	r4, sp, #228	@ 0xe4
 800f620:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f622:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f626:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f62a:	930c      	str	r3, [sp, #48]	@ 0x30
 800f62c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f62e:	6963      	ldr	r3, [r4, #20]
 800f630:	440b      	add	r3, r1
 800f632:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f636:	4408      	add	r0, r1
 800f638:	b200      	sxth	r0, r0
 800f63a:	4283      	cmp	r3, r0
 800f63c:	900d      	str	r0, [sp, #52]	@ 0x34
 800f63e:	f280 80c1 	bge.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f642:	428b      	cmp	r3, r1
 800f644:	da08      	bge.n	800f658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f646:	2a00      	cmp	r2, #0
 800f648:	dd06      	ble.n	800f658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f64a:	1acb      	subs	r3, r1, r3
 800f64c:	429a      	cmp	r2, r3
 800f64e:	f2c0 80bb 	blt.w	800f7c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f652:	2b00      	cmp	r3, #0
 800f654:	f300 80b9 	bgt.w	800f7ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f658:	6967      	ldr	r7, [r4, #20]
 800f65a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f65c:	443b      	add	r3, r7
 800f65e:	461f      	mov	r7, r3
 800f660:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f662:	1bdf      	subs	r7, r3, r7
 800f664:	4297      	cmp	r7, r2
 800f666:	bfa8      	it	ge
 800f668:	4617      	movge	r7, r2
 800f66a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f66e:	2f00      	cmp	r7, #0
 800f670:	f340 813c 	ble.w	800f8ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f674:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f676:	6829      	ldr	r1, [r5, #0]
 800f678:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f67c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f680:	6820      	ldr	r0, [r4, #0]
 800f682:	4411      	add	r1, r2
 800f684:	4299      	cmp	r1, r3
 800f686:	dd1a      	ble.n	800f6be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f688:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f68c:	440b      	add	r3, r1
 800f68e:	4402      	add	r2, r0
 800f690:	b21b      	sxth	r3, r3
 800f692:	429a      	cmp	r2, r3
 800f694:	dc13      	bgt.n	800f6be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f696:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f698:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f69a:	681b      	ldr	r3, [r3, #0]
 800f69c:	9206      	str	r2, [sp, #24]
 800f69e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f6a0:	9205      	str	r2, [sp, #20]
 800f6a2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f6a4:	9500      	str	r5, [sp, #0]
 800f6a6:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f6aa:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f6ac:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f6ae:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f6b2:	a912      	add	r1, sp, #72	@ 0x48
 800f6b4:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f6b8:	aa49      	add	r2, sp, #292	@ 0x124
 800f6ba:	4623      	mov	r3, r4
 800f6bc:	47c8      	blx	r9
 800f6be:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f6c2:	441a      	add	r2, r3
 800f6c4:	6963      	ldr	r3, [r4, #20]
 800f6c6:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f6ca:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f6ce:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f6d2:	68a1      	ldr	r1, [r4, #8]
 800f6d4:	ed94 6a08 	vldr	s12, [r4, #32]
 800f6d8:	6022      	str	r2, [r4, #0]
 800f6da:	3301      	adds	r3, #1
 800f6dc:	6163      	str	r3, [r4, #20]
 800f6de:	69a3      	ldr	r3, [r4, #24]
 800f6e0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f6e4:	3b01      	subs	r3, #1
 800f6e6:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f6ea:	61a3      	str	r3, [r4, #24]
 800f6ec:	6923      	ldr	r3, [r4, #16]
 800f6ee:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f6f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f6f6:	edd4 6a07 	vldr	s13, [r4, #28]
 800f6fa:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f6fe:	440b      	add	r3, r1
 800f700:	68e1      	ldr	r1, [r4, #12]
 800f702:	6123      	str	r3, [r4, #16]
 800f704:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f708:	428b      	cmp	r3, r1
 800f70a:	edc4 6a07 	vstr	s13, [r4, #28]
 800f70e:	db15      	blt.n	800f73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f710:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f714:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f718:	3201      	adds	r2, #1
 800f71a:	edc4 6a07 	vstr	s13, [r4, #28]
 800f71e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f722:	6022      	str	r2, [r4, #0]
 800f724:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f728:	1a5b      	subs	r3, r3, r1
 800f72a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f72e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f732:	6123      	str	r3, [r4, #16]
 800f734:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f738:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f73c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f740:	441a      	add	r2, r3
 800f742:	696b      	ldr	r3, [r5, #20]
 800f744:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f748:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f74c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f750:	68a9      	ldr	r1, [r5, #8]
 800f752:	ed95 6a08 	vldr	s12, [r5, #32]
 800f756:	602a      	str	r2, [r5, #0]
 800f758:	3301      	adds	r3, #1
 800f75a:	616b      	str	r3, [r5, #20]
 800f75c:	69ab      	ldr	r3, [r5, #24]
 800f75e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f762:	3b01      	subs	r3, #1
 800f764:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f768:	61ab      	str	r3, [r5, #24]
 800f76a:	692b      	ldr	r3, [r5, #16]
 800f76c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f770:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f774:	edd5 6a07 	vldr	s13, [r5, #28]
 800f778:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f77c:	440b      	add	r3, r1
 800f77e:	68e9      	ldr	r1, [r5, #12]
 800f780:	612b      	str	r3, [r5, #16]
 800f782:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f786:	428b      	cmp	r3, r1
 800f788:	edc5 6a07 	vstr	s13, [r5, #28]
 800f78c:	db15      	blt.n	800f7ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f78e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f792:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f796:	3201      	adds	r2, #1
 800f798:	edc5 6a07 	vstr	s13, [r5, #28]
 800f79c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f7a0:	602a      	str	r2, [r5, #0]
 800f7a2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f7a6:	1a5b      	subs	r3, r3, r1
 800f7a8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f7ac:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f7b0:	612b      	str	r3, [r5, #16]
 800f7b2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f7b6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f7ba:	3f01      	subs	r7, #1
 800f7bc:	e757      	b.n	800f66e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f7be:	ad39      	add	r5, sp, #228	@ 0xe4
 800f7c0:	ac19      	add	r4, sp, #100	@ 0x64
 800f7c2:	e72d      	b.n	800f620 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f7c4:	4613      	mov	r3, r2
 800f7c6:	e744      	b.n	800f652 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f7c8:	4613      	mov	r3, r2
 800f7ca:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800f7ce:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800f7d0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800f7d4:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800f7d8:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800f7dc:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800f7e0:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800f7e4:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800f7e8:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800f7ec:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800f7ee:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800f7f2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800f7f6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800f7fa:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800f7fe:	960e      	str	r6, [sp, #56]	@ 0x38
 800f800:	469e      	mov	lr, r3
 800f802:	461f      	mov	r7, r3
 800f804:	f04f 0900 	mov.w	r9, #0
 800f808:	2f00      	cmp	r7, #0
 800f80a:	d146      	bne.n	800f89a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f80c:	449c      	add	ip, r3
 800f80e:	1ad7      	subs	r7, r2, r3
 800f810:	f1b9 0f00 	cmp.w	r9, #0
 800f814:	d009      	beq.n	800f82a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f816:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800f81a:	9039      	str	r0, [sp, #228]	@ 0xe4
 800f81c:	913d      	str	r1, [sp, #244]	@ 0xf4
 800f81e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800f822:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800f826:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800f82a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f82c:	910e      	str	r1, [sp, #56]	@ 0x38
 800f82e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f832:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f836:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f83a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f83e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f842:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f846:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f84a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f84e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f852:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f856:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f85a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f85e:	f04f 0800 	mov.w	r8, #0
 800f862:	f1be 0f00 	cmp.w	lr, #0
 800f866:	d030      	beq.n	800f8ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f868:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f86a:	4431      	add	r1, r6
 800f86c:	4549      	cmp	r1, r9
 800f86e:	4450      	add	r0, sl
 800f870:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f874:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f878:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f87c:	db08      	blt.n	800f890 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f87e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f882:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f886:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f88a:	3001      	adds	r0, #1
 800f88c:	eba1 0109 	sub.w	r1, r1, r9
 800f890:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f894:	f04f 0801 	mov.w	r8, #1
 800f898:	e7e3      	b.n	800f862 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f89a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f89c:	4431      	add	r1, r6
 800f89e:	4541      	cmp	r1, r8
 800f8a0:	4450      	add	r0, sl
 800f8a2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f8a6:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f8aa:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f8ae:	db08      	blt.n	800f8c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f8b0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f8b4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f8b8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f8bc:	3001      	adds	r0, #1
 800f8be:	eba1 0108 	sub.w	r1, r1, r8
 800f8c2:	3f01      	subs	r7, #1
 800f8c4:	f04f 0901 	mov.w	r9, #1
 800f8c8:	e79e      	b.n	800f808 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f8ca:	449c      	add	ip, r3
 800f8cc:	1aff      	subs	r7, r7, r3
 800f8ce:	f1b8 0f00 	cmp.w	r8, #0
 800f8d2:	d009      	beq.n	800f8e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f8d4:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f8d8:	9019      	str	r0, [sp, #100]	@ 0x64
 800f8da:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f8de:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f8e2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f8e6:	911d      	str	r1, [sp, #116]	@ 0x74
 800f8e8:	1ad2      	subs	r2, r2, r3
 800f8ea:	e6b5      	b.n	800f658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f8ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f8ee:	681b      	ldr	r3, [r3, #0]
 800f8f0:	b923      	cbnz	r3, 800f8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f8f2:	4b04      	ldr	r3, [pc, #16]	@ (800f904 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f8f4:	6818      	ldr	r0, [r3, #0]
 800f8f6:	6803      	ldr	r3, [r0, #0]
 800f8f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f8fa:	4798      	blx	r3
 800f8fc:	b05b      	add	sp, #364	@ 0x16c
 800f8fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f902:	bf00      	nop
 800f904:	20014040 	.word	0x20014040

0800f908 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f908:	2b03      	cmp	r3, #3
 800f90a:	d818      	bhi.n	800f93e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f90c:	e8df f003 	tbb	[pc, r3]
 800f910:	130d0602 	.word	0x130d0602
 800f914:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f918:	1850      	adds	r0, r2, r1
 800f91a:	4770      	bx	lr
 800f91c:	8803      	ldrh	r3, [r0, #0]
 800f91e:	8880      	ldrh	r0, [r0, #4]
 800f920:	4418      	add	r0, r3
 800f922:	b200      	sxth	r0, r0
 800f924:	1a80      	subs	r0, r0, r2
 800f926:	3801      	subs	r0, #1
 800f928:	4770      	bx	lr
 800f92a:	8803      	ldrh	r3, [r0, #0]
 800f92c:	8880      	ldrh	r0, [r0, #4]
 800f92e:	4418      	add	r0, r3
 800f930:	b200      	sxth	r0, r0
 800f932:	1a40      	subs	r0, r0, r1
 800f934:	e7f7      	b.n	800f926 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f936:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f93a:	4410      	add	r0, r2
 800f93c:	4770      	bx	lr
 800f93e:	2000      	movs	r0, #0
 800f940:	4770      	bx	lr

0800f942 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f942:	2b03      	cmp	r3, #3
 800f944:	d817      	bhi.n	800f976 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f946:	e8df f003 	tbb	[pc, r3]
 800f94a:	0602      	.short	0x0602
 800f94c:	1009      	.short	0x1009
 800f94e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f952:	1850      	adds	r0, r2, r1
 800f954:	4770      	bx	lr
 800f956:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f95a:	e7fa      	b.n	800f952 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f95c:	8843      	ldrh	r3, [r0, #2]
 800f95e:	88c0      	ldrh	r0, [r0, #6]
 800f960:	4418      	add	r0, r3
 800f962:	b200      	sxth	r0, r0
 800f964:	1a80      	subs	r0, r0, r2
 800f966:	3801      	subs	r0, #1
 800f968:	4770      	bx	lr
 800f96a:	8843      	ldrh	r3, [r0, #2]
 800f96c:	88c0      	ldrh	r0, [r0, #6]
 800f96e:	4418      	add	r0, r3
 800f970:	b200      	sxth	r0, r0
 800f972:	1a40      	subs	r0, r0, r1
 800f974:	e7f7      	b.n	800f966 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f976:	2000      	movs	r0, #0
 800f978:	4770      	bx	lr
	...

0800f97c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f97c:	4b01      	ldr	r3, [pc, #4]	@ (800f984 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f97e:	2200      	movs	r2, #0
 800f980:	601a      	str	r2, [r3, #0]
 800f982:	4770      	bx	lr
 800f984:	20014050 	.word	0x20014050

0800f988 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f988:	4603      	mov	r3, r0
 800f98a:	b1c8      	cbz	r0, 800f9c0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f98c:	0c02      	lsrs	r2, r0, #16
 800f98e:	0412      	lsls	r2, r2, #16
 800f990:	b9a2      	cbnz	r2, 800f9bc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f992:	0403      	lsls	r3, r0, #16
 800f994:	2010      	movs	r0, #16
 800f996:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800f99a:	bf04      	itt	eq
 800f99c:	021b      	lsleq	r3, r3, #8
 800f99e:	3008      	addeq	r0, #8
 800f9a0:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800f9a4:	bf04      	itt	eq
 800f9a6:	011b      	lsleq	r3, r3, #4
 800f9a8:	3004      	addeq	r0, #4
 800f9aa:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800f9ae:	bf04      	itt	eq
 800f9b0:	009b      	lsleq	r3, r3, #2
 800f9b2:	3002      	addeq	r0, #2
 800f9b4:	2b00      	cmp	r3, #0
 800f9b6:	db04      	blt.n	800f9c2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f9b8:	3001      	adds	r0, #1
 800f9ba:	4770      	bx	lr
 800f9bc:	2000      	movs	r0, #0
 800f9be:	e7ea      	b.n	800f996 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f9c0:	2020      	movs	r0, #32
 800f9c2:	4770      	bx	lr

0800f9c4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f9c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9c8:	b087      	sub	sp, #28
 800f9ca:	460d      	mov	r5, r1
 800f9cc:	4616      	mov	r6, r2
 800f9ce:	4698      	mov	r8, r3
 800f9d0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800f9d4:	4601      	mov	r1, r0
 800f9d6:	b120      	cbz	r0, 800f9e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f9d8:	b11a      	cbz	r2, 800f9e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f9da:	2d1f      	cmp	r5, #31
 800f9dc:	d801      	bhi.n	800f9e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f9de:	2b1f      	cmp	r3, #31
 800f9e0:	d904      	bls.n	800f9ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800f9e2:	2000      	movs	r0, #0
 800f9e4:	6038      	str	r0, [r7, #0]
 800f9e6:	b007      	add	sp, #28
 800f9e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9ec:	b97d      	cbnz	r5, 800fa0e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800f9ee:	b143      	cbz	r3, 800fa02 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800f9f0:	4602      	mov	r2, r0
 800f9f2:	e9cd 4700 	strd	r4, r7, [sp]
 800f9f6:	462b      	mov	r3, r5
 800f9f8:	4641      	mov	r1, r8
 800f9fa:	4630      	mov	r0, r6
 800f9fc:	f7ff ffe2 	bl	800f9c4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fa00:	e7f1      	b.n	800f9e6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fa02:	f04f 33ff 	mov.w	r3, #4294967295
 800fa06:	603b      	str	r3, [r7, #0]
 800fa08:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800fa0c:	e7eb      	b.n	800f9e6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fa0e:	fa32 fa05 	lsrs.w	sl, r2, r5
 800fa12:	d106      	bne.n	800fa22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800fa14:	4346      	muls	r6, r0
 800fa16:	fbb6 f0f4 	udiv	r0, r6, r4
 800fa1a:	fb04 6610 	mls	r6, r4, r0, r6
 800fa1e:	603e      	str	r6, [r7, #0]
 800fa20:	e7e1      	b.n	800f9e6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fa22:	2201      	movs	r2, #1
 800fa24:	40aa      	lsls	r2, r5
 800fa26:	3a01      	subs	r2, #1
 800fa28:	4016      	ands	r6, r2
 800fa2a:	fa00 fb05 	lsl.w	fp, r0, r5
 800fa2e:	4630      	mov	r0, r6
 800fa30:	fbbb f9f4 	udiv	r9, fp, r4
 800fa34:	fb0a f309 	mul.w	r3, sl, r9
 800fa38:	9303      	str	r3, [sp, #12]
 800fa3a:	f7ff ffa5 	bl	800f988 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fa3e:	462b      	mov	r3, r5
 800fa40:	460a      	mov	r2, r1
 800fa42:	e9cd 4700 	strd	r4, r7, [sp]
 800fa46:	4601      	mov	r1, r0
 800fa48:	4630      	mov	r0, r6
 800fa4a:	f7ff ffbb 	bl	800f9c4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fa4e:	fb04 b919 	mls	r9, r4, r9, fp
 800fa52:	4606      	mov	r6, r0
 800fa54:	4648      	mov	r0, r9
 800fa56:	eb05 0108 	add.w	r1, r5, r8
 800fa5a:	f7ff ff95 	bl	800f988 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fa5e:	ab05      	add	r3, sp, #20
 800fa60:	e9cd 4300 	strd	r4, r3, [sp]
 800fa64:	464a      	mov	r2, r9
 800fa66:	4603      	mov	r3, r0
 800fa68:	4650      	mov	r0, sl
 800fa6a:	f7ff ffab 	bl	800f9c4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fa6e:	6839      	ldr	r1, [r7, #0]
 800fa70:	9a05      	ldr	r2, [sp, #20]
 800fa72:	9b03      	ldr	r3, [sp, #12]
 800fa74:	4411      	add	r1, r2
 800fa76:	fbb1 f2f4 	udiv	r2, r1, r4
 800fa7a:	18d3      	adds	r3, r2, r3
 800fa7c:	441e      	add	r6, r3
 800fa7e:	fb04 1412 	mls	r4, r4, r2, r1
 800fa82:	4430      	add	r0, r6
 800fa84:	603c      	str	r4, [r7, #0]
 800fa86:	e7ae      	b.n	800f9e6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800fa88 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800fa88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa8c:	b085      	sub	sp, #20
 800fa8e:	f1b0 0900 	subs.w	r9, r0, #0
 800fa92:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800fa94:	461d      	mov	r5, r3
 800fa96:	bfbf      	itttt	lt
 800fa98:	6823      	ldrlt	r3, [r4, #0]
 800fa9a:	425b      	neglt	r3, r3
 800fa9c:	f1c9 0900 	rsblt	r9, r9, #0
 800faa0:	6023      	strlt	r3, [r4, #0]
 800faa2:	bfb4      	ite	lt
 800faa4:	f04f 36ff 	movlt.w	r6, #4294967295
 800faa8:	2601      	movge	r6, #1
 800faaa:	2a00      	cmp	r2, #0
 800faac:	4617      	mov	r7, r2
 800faae:	da04      	bge.n	800faba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800fab0:	6823      	ldr	r3, [r4, #0]
 800fab2:	425b      	negs	r3, r3
 800fab4:	4257      	negs	r7, r2
 800fab6:	4276      	negs	r6, r6
 800fab8:	6023      	str	r3, [r4, #0]
 800faba:	2d00      	cmp	r5, #0
 800fabc:	4638      	mov	r0, r7
 800fabe:	bfba      	itte	lt
 800fac0:	426d      	neglt	r5, r5
 800fac2:	f04f 38ff 	movlt.w	r8, #4294967295
 800fac6:	f04f 0801 	movge.w	r8, #1
 800faca:	f7ff ff5d 	bl	800f988 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800face:	ab03      	add	r3, sp, #12
 800fad0:	e9cd 5300 	strd	r5, r3, [sp]
 800fad4:	463a      	mov	r2, r7
 800fad6:	4603      	mov	r3, r0
 800fad8:	4648      	mov	r0, r9
 800fada:	f7ff ff73 	bl	800f9c4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fade:	6823      	ldr	r3, [r4, #0]
 800fae0:	9a03      	ldr	r2, [sp, #12]
 800fae2:	4546      	cmp	r6, r8
 800fae4:	441a      	add	r2, r3
 800fae6:	fb92 f3f5 	sdiv	r3, r2, r5
 800faea:	4418      	add	r0, r3
 800faec:	bf18      	it	ne
 800faee:	4240      	negne	r0, r0
 800faf0:	fb05 2313 	mls	r3, r5, r3, r2
 800faf4:	1c72      	adds	r2, r6, #1
 800faf6:	6023      	str	r3, [r4, #0]
 800faf8:	d105      	bne.n	800fb06 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800fafa:	2b00      	cmp	r3, #0
 800fafc:	f1c3 0200 	rsb	r2, r3, #0
 800fb00:	db0b      	blt.n	800fb1a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800fb02:	6022      	str	r2, [r4, #0]
 800fb04:	e006      	b.n	800fb14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fb06:	2e01      	cmp	r6, #1
 800fb08:	d104      	bne.n	800fb14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fb0a:	2b00      	cmp	r3, #0
 800fb0c:	da02      	bge.n	800fb14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fb0e:	442b      	add	r3, r5
 800fb10:	3801      	subs	r0, #1
 800fb12:	6023      	str	r3, [r4, #0]
 800fb14:	b005      	add	sp, #20
 800fb16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fb1a:	3801      	subs	r0, #1
 800fb1c:	1b52      	subs	r2, r2, r5
 800fb1e:	e7f0      	b.n	800fb02 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800fb20 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800fb20:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800fb24:	4c1c      	ldr	r4, [pc, #112]	@ (800fb98 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800fb26:	6807      	ldr	r7, [r0, #0]
 800fb28:	69a3      	ldr	r3, [r4, #24]
 800fb2a:	4605      	mov	r5, r0
 800fb2c:	b92b      	cbnz	r3, 800fb3a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800fb2e:	6840      	ldr	r0, [r0, #4]
 800fb30:	e9c5 7000 	strd	r7, r0, [r5]
 800fb34:	b004      	add	sp, #16
 800fb36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fb3a:	68a2      	ldr	r2, [r4, #8]
 800fb3c:	6820      	ldr	r0, [r4, #0]
 800fb3e:	ae04      	add	r6, sp, #16
 800fb40:	f04f 0802 	mov.w	r8, #2
 800fb44:	fb93 f1f8 	sdiv	r1, r3, r8
 800fb48:	440a      	add	r2, r1
 800fb4a:	f846 2d04 	str.w	r2, [r6, #-4]!
 800fb4e:	69e1      	ldr	r1, [r4, #28]
 800fb50:	9600      	str	r6, [sp, #0]
 800fb52:	463a      	mov	r2, r7
 800fb54:	f7ff ff98 	bl	800fa88 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fb58:	69a3      	ldr	r3, [r4, #24]
 800fb5a:	686a      	ldr	r2, [r5, #4]
 800fb5c:	6a21      	ldr	r1, [r4, #32]
 800fb5e:	9600      	str	r6, [sp, #0]
 800fb60:	4607      	mov	r7, r0
 800fb62:	6860      	ldr	r0, [r4, #4]
 800fb64:	f7ff ff90 	bl	800fa88 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fb68:	6962      	ldr	r2, [r4, #20]
 800fb6a:	69a3      	ldr	r3, [r4, #24]
 800fb6c:	fb93 f8f8 	sdiv	r8, r3, r8
 800fb70:	4442      	add	r2, r8
 800fb72:	9203      	str	r2, [sp, #12]
 800fb74:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800fb76:	682a      	ldr	r2, [r5, #0]
 800fb78:	9600      	str	r6, [sp, #0]
 800fb7a:	4407      	add	r7, r0
 800fb7c:	68e0      	ldr	r0, [r4, #12]
 800fb7e:	f7ff ff83 	bl	800fa88 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fb82:	9600      	str	r6, [sp, #0]
 800fb84:	4680      	mov	r8, r0
 800fb86:	69a3      	ldr	r3, [r4, #24]
 800fb88:	686a      	ldr	r2, [r5, #4]
 800fb8a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800fb8c:	6920      	ldr	r0, [r4, #16]
 800fb8e:	f7ff ff7b 	bl	800fa88 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fb92:	4440      	add	r0, r8
 800fb94:	e7cc      	b.n	800fb30 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800fb96:	bf00      	nop
 800fb98:	20014054 	.word	0x20014054

0800fb9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800fb9c:	4b07      	ldr	r3, [pc, #28]	@ (800fbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800fb9e:	781b      	ldrb	r3, [r3, #0]
 800fba0:	2b01      	cmp	r3, #1
 800fba2:	d109      	bne.n	800fbb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800fba4:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fba8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fbac:	8003      	strh	r3, [r0, #0]
 800fbae:	4b04      	ldr	r3, [pc, #16]	@ (800fbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800fbb0:	881b      	ldrh	r3, [r3, #0]
 800fbb2:	3b01      	subs	r3, #1
 800fbb4:	1a9b      	subs	r3, r3, r2
 800fbb6:	800b      	strh	r3, [r1, #0]
 800fbb8:	4770      	bx	lr
 800fbba:	bf00      	nop
 800fbbc:	20014036 	.word	0x20014036
 800fbc0:	20014032 	.word	0x20014032

0800fbc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800fbc4:	b510      	push	{r4, lr}
 800fbc6:	4b07      	ldr	r3, [pc, #28]	@ (800fbe4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800fbc8:	781b      	ldrb	r3, [r3, #0]
 800fbca:	2b01      	cmp	r3, #1
 800fbcc:	d108      	bne.n	800fbe0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800fbce:	4b06      	ldr	r3, [pc, #24]	@ (800fbe8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800fbd0:	880c      	ldrh	r4, [r1, #0]
 800fbd2:	881b      	ldrh	r3, [r3, #0]
 800fbd4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fbd8:	3b01      	subs	r3, #1
 800fbda:	1b1b      	subs	r3, r3, r4
 800fbdc:	8003      	strh	r3, [r0, #0]
 800fbde:	800a      	strh	r2, [r1, #0]
 800fbe0:	bd10      	pop	{r4, pc}
 800fbe2:	bf00      	nop
 800fbe4:	20014036 	.word	0x20014036
 800fbe8:	20014032 	.word	0x20014032

0800fbec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800fbec:	b510      	push	{r4, lr}
 800fbee:	4b0a      	ldr	r3, [pc, #40]	@ (800fc18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800fbf0:	781b      	ldrb	r3, [r3, #0]
 800fbf2:	2b01      	cmp	r3, #1
 800fbf4:	d10e      	bne.n	800fc14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800fbf6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fbfa:	8843      	ldrh	r3, [r0, #2]
 800fbfc:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fc00:	8044      	strh	r4, [r0, #2]
 800fc02:	18ca      	adds	r2, r1, r3
 800fc04:	4b05      	ldr	r3, [pc, #20]	@ (800fc1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800fc06:	881b      	ldrh	r3, [r3, #0]
 800fc08:	1a9b      	subs	r3, r3, r2
 800fc0a:	8003      	strh	r3, [r0, #0]
 800fc0c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fc10:	80c3      	strh	r3, [r0, #6]
 800fc12:	8081      	strh	r1, [r0, #4]
 800fc14:	bd10      	pop	{r4, pc}
 800fc16:	bf00      	nop
 800fc18:	20014036 	.word	0x20014036
 800fc1c:	20014032 	.word	0x20014032

0800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800fc20:	4b08      	ldr	r3, [pc, #32]	@ (800fc44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800fc22:	781b      	ldrb	r3, [r3, #0]
 800fc24:	2b01      	cmp	r3, #1
 800fc26:	d10c      	bne.n	800fc42 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800fc28:	8803      	ldrh	r3, [r0, #0]
 800fc2a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800fc2e:	8842      	ldrh	r2, [r0, #2]
 800fc30:	8002      	strh	r2, [r0, #0]
 800fc32:	185a      	adds	r2, r3, r1
 800fc34:	4b04      	ldr	r3, [pc, #16]	@ (800fc48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800fc36:	881b      	ldrh	r3, [r3, #0]
 800fc38:	1a9b      	subs	r3, r3, r2
 800fc3a:	8043      	strh	r3, [r0, #2]
 800fc3c:	88c3      	ldrh	r3, [r0, #6]
 800fc3e:	8083      	strh	r3, [r0, #4]
 800fc40:	80c1      	strh	r1, [r0, #6]
 800fc42:	4770      	bx	lr
 800fc44:	20014036 	.word	0x20014036
 800fc48:	20014032 	.word	0x20014032

0800fc4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800fc4c:	b510      	push	{r4, lr}
 800fc4e:	4b07      	ldr	r3, [pc, #28]	@ (800fc6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800fc50:	781b      	ldrb	r3, [r3, #0]
 800fc52:	2b01      	cmp	r3, #1
 800fc54:	d108      	bne.n	800fc68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800fc56:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fc5a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fc5e:	8003      	strh	r3, [r0, #0]
 800fc60:	8893      	ldrh	r3, [r2, #4]
 800fc62:	3b01      	subs	r3, #1
 800fc64:	1b1b      	subs	r3, r3, r4
 800fc66:	800b      	strh	r3, [r1, #0]
 800fc68:	bd10      	pop	{r4, pc}
 800fc6a:	bf00      	nop
 800fc6c:	20014036 	.word	0x20014036

0800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800fc70:	b510      	push	{r4, lr}
 800fc72:	4b0a      	ldr	r3, [pc, #40]	@ (800fc9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800fc74:	781b      	ldrb	r3, [r3, #0]
 800fc76:	2b01      	cmp	r3, #1
 800fc78:	460a      	mov	r2, r1
 800fc7a:	d10d      	bne.n	800fc98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800fc7c:	8881      	ldrh	r1, [r0, #4]
 800fc7e:	8803      	ldrh	r3, [r0, #0]
 800fc80:	440b      	add	r3, r1
 800fc82:	4601      	mov	r1, r0
 800fc84:	3b01      	subs	r3, #1
 800fc86:	f821 3b02 	strh.w	r3, [r1], #2
 800fc8a:	f7ff ffdf 	bl	800fc4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800fc8e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fc92:	88c2      	ldrh	r2, [r0, #6]
 800fc94:	8082      	strh	r2, [r0, #4]
 800fc96:	80c3      	strh	r3, [r0, #6]
 800fc98:	bd10      	pop	{r4, pc}
 800fc9a:	bf00      	nop
 800fc9c:	20014036 	.word	0x20014036

0800fca0 <_ZN8touchgfx11Application13requestRedrawEv>:
 800fca0:	4b06      	ldr	r3, [pc, #24]	@ (800fcbc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800fca2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fca6:	4b06      	ldr	r3, [pc, #24]	@ (800fcc0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800fca8:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800fcac:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fcb0:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800fcb4:	2100      	movs	r1, #0
 800fcb6:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800fcba:	4770      	bx	lr
 800fcbc:	20014032 	.word	0x20014032
 800fcc0:	20014034 	.word	0x20014034

0800fcc4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800fcc4:	4b03      	ldr	r3, [pc, #12]	@ (800fcd4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800fcc6:	6818      	ldr	r0, [r3, #0]
 800fcc8:	b110      	cbz	r0, 800fcd0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800fcca:	6803      	ldr	r3, [r0, #0]
 800fccc:	699b      	ldr	r3, [r3, #24]
 800fcce:	4718      	bx	r3
 800fcd0:	4770      	bx	lr
 800fcd2:	bf00      	nop
 800fcd4:	20014084 	.word	0x20014084

0800fcd8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800fcd8:	4770      	bx	lr
	...

0800fcdc <_ZN8touchgfx11Application4drawEv>:
 800fcdc:	b507      	push	{r0, r1, r2, lr}
 800fcde:	4b09      	ldr	r3, [pc, #36]	@ (800fd04 <_ZN8touchgfx11Application4drawEv+0x28>)
 800fce0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fce4:	4b08      	ldr	r3, [pc, #32]	@ (800fd08 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800fce6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fcea:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fcee:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fcf2:	6803      	ldr	r3, [r0, #0]
 800fcf4:	2100      	movs	r1, #0
 800fcf6:	9100      	str	r1, [sp, #0]
 800fcf8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800fcfa:	4669      	mov	r1, sp
 800fcfc:	4798      	blx	r3
 800fcfe:	b003      	add	sp, #12
 800fd00:	f85d fb04 	ldr.w	pc, [sp], #4
 800fd04:	20014032 	.word	0x20014032
 800fd08:	20014034 	.word	0x20014034

0800fd0c <_ZN8touchgfx11Application10invalidateEv>:
 800fd0c:	4b09      	ldr	r3, [pc, #36]	@ (800fd34 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800fd0e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fd12:	4b09      	ldr	r3, [pc, #36]	@ (800fd38 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800fd14:	b082      	sub	sp, #8
 800fd16:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fd1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fd1e:	2100      	movs	r1, #0
 800fd20:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fd24:	9100      	str	r1, [sp, #0]
 800fd26:	6803      	ldr	r3, [r0, #0]
 800fd28:	aa02      	add	r2, sp, #8
 800fd2a:	e912 0006 	ldmdb	r2, {r1, r2}
 800fd2e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fd30:	b002      	add	sp, #8
 800fd32:	4718      	bx	r3
 800fd34:	20014032 	.word	0x20014032
 800fd38:	20014034 	.word	0x20014034

0800fd3c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800fd3c:	4b03      	ldr	r3, [pc, #12]	@ (800fd4c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800fd3e:	6818      	ldr	r0, [r3, #0]
 800fd40:	b110      	cbz	r0, 800fd48 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800fd42:	6803      	ldr	r3, [r0, #0]
 800fd44:	69db      	ldr	r3, [r3, #28]
 800fd46:	4718      	bx	r3
 800fd48:	4770      	bx	lr
 800fd4a:	bf00      	nop
 800fd4c:	20014084 	.word	0x20014084

0800fd50 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800fd50:	4b03      	ldr	r3, [pc, #12]	@ (800fd60 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800fd52:	6818      	ldr	r0, [r3, #0]
 800fd54:	b110      	cbz	r0, 800fd5c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800fd56:	6803      	ldr	r3, [r0, #0]
 800fd58:	6a1b      	ldr	r3, [r3, #32]
 800fd5a:	4718      	bx	r3
 800fd5c:	4770      	bx	lr
 800fd5e:	bf00      	nop
 800fd60:	20014084 	.word	0x20014084

0800fd64 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800fd64:	2300      	movs	r3, #0
 800fd66:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800fd6a:	4770      	bx	lr

0800fd6c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800fd6c:	4b03      	ldr	r3, [pc, #12]	@ (800fd7c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800fd6e:	6818      	ldr	r0, [r3, #0]
 800fd70:	b110      	cbz	r0, 800fd78 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800fd72:	6803      	ldr	r3, [r0, #0]
 800fd74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fd76:	4718      	bx	r3
 800fd78:	4770      	bx	lr
 800fd7a:	bf00      	nop
 800fd7c:	20014084 	.word	0x20014084

0800fd80 <_ZN8touchgfx11ApplicationD1Ev>:
 800fd80:	4770      	bx	lr

0800fd82 <_ZN8touchgfx11ApplicationD0Ev>:
 800fd82:	b510      	push	{r4, lr}
 800fd84:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800fd88:	4604      	mov	r4, r0
 800fd8a:	f012 fb76 	bl	802247a <_ZdlPvj>
 800fd8e:	4620      	mov	r0, r4
 800fd90:	bd10      	pop	{r4, pc}

0800fd92 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800fd92:	b510      	push	{r4, lr}
 800fd94:	f9b1 4000 	ldrsh.w	r4, [r1]
 800fd98:	888a      	ldrh	r2, [r1, #4]
 800fd9a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fd9e:	4422      	add	r2, r4
 800fda0:	b212      	sxth	r2, r2
 800fda2:	4293      	cmp	r3, r2
 800fda4:	da15      	bge.n	800fdd2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fda6:	8882      	ldrh	r2, [r0, #4]
 800fda8:	4413      	add	r3, r2
 800fdaa:	b21b      	sxth	r3, r3
 800fdac:	429c      	cmp	r4, r3
 800fdae:	da10      	bge.n	800fdd2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fdb0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800fdb4:	88c9      	ldrh	r1, [r1, #6]
 800fdb6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800fdba:	4419      	add	r1, r3
 800fdbc:	b209      	sxth	r1, r1
 800fdbe:	428a      	cmp	r2, r1
 800fdc0:	da07      	bge.n	800fdd2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fdc2:	88c0      	ldrh	r0, [r0, #6]
 800fdc4:	4410      	add	r0, r2
 800fdc6:	b200      	sxth	r0, r0
 800fdc8:	4283      	cmp	r3, r0
 800fdca:	bfac      	ite	ge
 800fdcc:	2000      	movge	r0, #0
 800fdce:	2001      	movlt	r0, #1
 800fdd0:	bd10      	pop	{r4, pc}
 800fdd2:	2000      	movs	r0, #0
 800fdd4:	e7fc      	b.n	800fdd0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800fdd6 <_ZN8touchgfx4Rect10restrictToEss>:
 800fdd6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fdda:	2b00      	cmp	r3, #0
 800fddc:	b510      	push	{r4, lr}
 800fdde:	da04      	bge.n	800fdea <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800fde0:	8884      	ldrh	r4, [r0, #4]
 800fde2:	4423      	add	r3, r4
 800fde4:	8083      	strh	r3, [r0, #4]
 800fde6:	2300      	movs	r3, #0
 800fde8:	8003      	strh	r3, [r0, #0]
 800fdea:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fdee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fdf2:	1b09      	subs	r1, r1, r4
 800fdf4:	428b      	cmp	r3, r1
 800fdf6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800fdfa:	bfc8      	it	gt
 800fdfc:	8081      	strhgt	r1, [r0, #4]
 800fdfe:	2b00      	cmp	r3, #0
 800fe00:	da04      	bge.n	800fe0c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800fe02:	88c1      	ldrh	r1, [r0, #6]
 800fe04:	440b      	add	r3, r1
 800fe06:	80c3      	strh	r3, [r0, #6]
 800fe08:	2300      	movs	r3, #0
 800fe0a:	8043      	strh	r3, [r0, #2]
 800fe0c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800fe10:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800fe14:	1a52      	subs	r2, r2, r1
 800fe16:	4293      	cmp	r3, r2
 800fe18:	bfc8      	it	gt
 800fe1a:	80c2      	strhgt	r2, [r0, #6]
 800fe1c:	bd10      	pop	{r4, pc}
	...

0800fe20 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800fe20:	b510      	push	{r4, lr}
 800fe22:	4b10      	ldr	r3, [pc, #64]	@ (800fe64 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800fe24:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fe28:	4b0f      	ldr	r3, [pc, #60]	@ (800fe68 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800fe2a:	460c      	mov	r4, r1
 800fe2c:	4620      	mov	r0, r4
 800fe2e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fe32:	f7ff ffd0 	bl	800fdd6 <_ZN8touchgfx4Rect10restrictToEss>
 800fe36:	4b0d      	ldr	r3, [pc, #52]	@ (800fe6c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800fe38:	6818      	ldr	r0, [r3, #0]
 800fe3a:	b190      	cbz	r0, 800fe62 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800fe3c:	6803      	ldr	r3, [r0, #0]
 800fe3e:	4621      	mov	r1, r4
 800fe40:	689b      	ldr	r3, [r3, #8]
 800fe42:	4798      	blx	r3
 800fe44:	4b0a      	ldr	r3, [pc, #40]	@ (800fe70 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800fe46:	6818      	ldr	r0, [r3, #0]
 800fe48:	b118      	cbz	r0, 800fe52 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800fe4a:	6803      	ldr	r3, [r0, #0]
 800fe4c:	4621      	mov	r1, r4
 800fe4e:	689b      	ldr	r3, [r3, #8]
 800fe50:	4798      	blx	r3
 800fe52:	4b08      	ldr	r3, [pc, #32]	@ (800fe74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800fe54:	6818      	ldr	r0, [r3, #0]
 800fe56:	6803      	ldr	r3, [r0, #0]
 800fe58:	4621      	mov	r1, r4
 800fe5a:	69db      	ldr	r3, [r3, #28]
 800fe5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe60:	4718      	bx	r3
 800fe62:	bd10      	pop	{r4, pc}
 800fe64:	20014034 	.word	0x20014034
 800fe68:	20014032 	.word	0x20014032
 800fe6c:	20014084 	.word	0x20014084
 800fe70:	20014080 	.word	0x20014080
 800fe74:	20014040 	.word	0x20014040

0800fe78 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800fe78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fe7a:	4606      	mov	r6, r0
 800fe7c:	4608      	mov	r0, r1
 800fe7e:	460f      	mov	r7, r1
 800fe80:	f7fa ffa1 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe84:	b9e8      	cbnz	r0, 800fec2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe86:	f9b7 5000 	ldrsh.w	r5, [r7]
 800fe8a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800fe8e:	42a5      	cmp	r5, r4
 800fe90:	db17      	blt.n	800fec2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe92:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800fe96:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800fe9a:	429a      	cmp	r2, r3
 800fe9c:	db11      	blt.n	800fec2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe9e:	88b9      	ldrh	r1, [r7, #4]
 800fea0:	440d      	add	r5, r1
 800fea2:	88b1      	ldrh	r1, [r6, #4]
 800fea4:	440c      	add	r4, r1
 800fea6:	b22d      	sxth	r5, r5
 800fea8:	b224      	sxth	r4, r4
 800feaa:	42a5      	cmp	r5, r4
 800feac:	dc09      	bgt.n	800fec2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800feae:	88f8      	ldrh	r0, [r7, #6]
 800feb0:	4410      	add	r0, r2
 800feb2:	88f2      	ldrh	r2, [r6, #6]
 800feb4:	4413      	add	r3, r2
 800feb6:	b200      	sxth	r0, r0
 800feb8:	b21b      	sxth	r3, r3
 800feba:	4298      	cmp	r0, r3
 800febc:	bfcc      	ite	gt
 800febe:	2000      	movgt	r0, #0
 800fec0:	2001      	movle	r0, #1
 800fec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800fec4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800fec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fec6:	4604      	mov	r4, r0
 800fec8:	4608      	mov	r0, r1
 800feca:	460d      	mov	r5, r1
 800fecc:	f7fa ff7b 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fed0:	b978      	cbnz	r0, 800fef2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800fed2:	4620      	mov	r0, r4
 800fed4:	f7fa ff77 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fed8:	f9b5 6000 	ldrsh.w	r6, [r5]
 800fedc:	b150      	cbz	r0, 800fef4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800fede:	8026      	strh	r6, [r4, #0]
 800fee0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800fee4:	8063      	strh	r3, [r4, #2]
 800fee6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800feea:	80a3      	strh	r3, [r4, #4]
 800feec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fef0:	80e3      	strh	r3, [r4, #6]
 800fef2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fef4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fef8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800fefc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800ff00:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800ff04:	88ed      	ldrh	r5, [r5, #6]
 800ff06:	42b1      	cmp	r1, r6
 800ff08:	460f      	mov	r7, r1
 800ff0a:	bfa8      	it	ge
 800ff0c:	4637      	movge	r7, r6
 800ff0e:	4293      	cmp	r3, r2
 800ff10:	4618      	mov	r0, r3
 800ff12:	4466      	add	r6, ip
 800ff14:	bfa8      	it	ge
 800ff16:	4610      	movge	r0, r2
 800ff18:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ff1c:	8027      	strh	r7, [r4, #0]
 800ff1e:	442a      	add	r2, r5
 800ff20:	88e5      	ldrh	r5, [r4, #6]
 800ff22:	8060      	strh	r0, [r4, #2]
 800ff24:	4461      	add	r1, ip
 800ff26:	442b      	add	r3, r5
 800ff28:	b236      	sxth	r6, r6
 800ff2a:	b209      	sxth	r1, r1
 800ff2c:	b212      	sxth	r2, r2
 800ff2e:	b21b      	sxth	r3, r3
 800ff30:	428e      	cmp	r6, r1
 800ff32:	bfac      	ite	ge
 800ff34:	ebc7 0106 	rsbge	r1, r7, r6
 800ff38:	ebc7 0101 	rsblt	r1, r7, r1
 800ff3c:	429a      	cmp	r2, r3
 800ff3e:	bfac      	ite	ge
 800ff40:	ebc0 0202 	rsbge	r2, r0, r2
 800ff44:	ebc0 0203 	rsblt	r2, r0, r3
 800ff48:	80a1      	strh	r1, [r4, #4]
 800ff4a:	80e2      	strh	r2, [r4, #6]
 800ff4c:	e7d1      	b.n	800fef2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800ff50 <_ZN8touchgfx11Application11getInstanceEv>:
 800ff50:	4b01      	ldr	r3, [pc, #4]	@ (800ff58 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800ff52:	6818      	ldr	r0, [r3, #0]
 800ff54:	4770      	bx	lr
 800ff56:	bf00      	nop
 800ff58:	20014094 	.word	0x20014094

0800ff5c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800ff5c:	b510      	push	{r4, lr}
 800ff5e:	2300      	movs	r3, #0
 800ff60:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800ff64:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800ff68:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800ff6c:	4604      	mov	r4, r0
 800ff6e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800ff72:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800ff76:	429a      	cmp	r2, r3
 800ff78:	d90e      	bls.n	800ff98 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800ff7a:	18e2      	adds	r2, r4, r3
 800ff7c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800ff80:	b122      	cbz	r2, 800ff8c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800ff82:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800ff86:	6803      	ldr	r3, [r0, #0]
 800ff88:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ff8a:	4798      	blx	r3
 800ff8c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800ff90:	3301      	adds	r3, #1
 800ff92:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800ff96:	e7ea      	b.n	800ff6e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800ff98:	bd10      	pop	{r4, pc}

0800ff9a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800ff9a:	2300      	movs	r3, #0
 800ff9c:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800ffa0:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800ffa4:	30a4      	adds	r0, #164	@ 0xa4
 800ffa6:	f802 3b01 	strb.w	r3, [r2], #1
 800ffaa:	4282      	cmp	r2, r0
 800ffac:	d1fb      	bne.n	800ffa6 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800ffae:	4770      	bx	lr

0800ffb0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800ffb0:	b570      	push	{r4, r5, r6, lr}
 800ffb2:	4c0b      	ldr	r4, [pc, #44]	@ (800ffe0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800ffb4:	4605      	mov	r5, r0
 800ffb6:	6820      	ldr	r0, [r4, #0]
 800ffb8:	460e      	mov	r6, r1
 800ffba:	b110      	cbz	r0, 800ffc2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800ffbc:	6803      	ldr	r3, [r0, #0]
 800ffbe:	695b      	ldr	r3, [r3, #20]
 800ffc0:	4798      	blx	r3
 800ffc2:	1d28      	adds	r0, r5, #4
 800ffc4:	f7ff ffe9 	bl	800ff9a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800ffc8:	6026      	str	r6, [r4, #0]
 800ffca:	6833      	ldr	r3, [r6, #0]
 800ffcc:	4630      	mov	r0, r6
 800ffce:	68db      	ldr	r3, [r3, #12]
 800ffd0:	4798      	blx	r3
 800ffd2:	682b      	ldr	r3, [r5, #0]
 800ffd4:	4628      	mov	r0, r5
 800ffd6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ffd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ffdc:	4718      	bx	r3
 800ffde:	bf00      	nop
 800ffe0:	20014084 	.word	0x20014084

0800ffe4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800ffe4:	2300      	movs	r3, #0
 800ffe6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800ffea:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800ffee:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fff0:	461a      	mov	r2, r3
 800fff2:	461c      	mov	r4, r3
 800fff4:	461d      	mov	r5, r3
 800fff6:	459c      	cmp	ip, r3
 800fff8:	dd1a      	ble.n	8010030 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800fffa:	18c6      	adds	r6, r0, r3
 800fffc:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8010000:	b16e      	cbz	r6, 801001e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8010002:	429a      	cmp	r2, r3
 8010004:	d008      	beq.n	8010018 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8010006:	fa1f fe82 	uxth.w	lr, r2
 801000a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801000e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8010012:	1887      	adds	r7, r0, r2
 8010014:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8010018:	3201      	adds	r2, #1
 801001a:	3301      	adds	r3, #1
 801001c:	e7eb      	b.n	800fff6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801001e:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8010022:	4299      	cmp	r1, r3
 8010024:	bfa8      	it	ge
 8010026:	3501      	addge	r5, #1
 8010028:	429e      	cmp	r6, r3
 801002a:	bfc8      	it	gt
 801002c:	3401      	addgt	r4, #1
 801002e:	e7f4      	b.n	801001a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8010030:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8010034:	1b49      	subs	r1, r1, r5
 8010036:	1b1b      	subs	r3, r3, r4
 8010038:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 801003c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8010040:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010044:	4293      	cmp	r3, r2
 8010046:	dd03      	ble.n	8010050 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8010048:	3b01      	subs	r3, #1
 801004a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801004e:	e7f7      	b.n	8010040 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8010050:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010054 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010054:	b570      	push	{r4, r5, r6, lr}
 8010056:	4d16      	ldr	r5, [pc, #88]	@ (80100b0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8010058:	4604      	mov	r4, r0
 801005a:	6828      	ldr	r0, [r5, #0]
 801005c:	b140      	cbz	r0, 8010070 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801005e:	7a03      	ldrb	r3, [r0, #8]
 8010060:	b933      	cbnz	r3, 8010070 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010062:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8010066:	6803      	ldr	r3, [r0, #0]
 8010068:	689b      	ldr	r3, [r3, #8]
 801006a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801006e:	4718      	bx	r3
 8010070:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8010074:	4e0f      	ldr	r6, [pc, #60]	@ (80100b4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8010076:	b973      	cbnz	r3, 8010096 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010078:	b168      	cbz	r0, 8010096 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801007a:	7a03      	ldrb	r3, [r0, #8]
 801007c:	b15b      	cbz	r3, 8010096 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801007e:	6830      	ldr	r0, [r6, #0]
 8010080:	b110      	cbz	r0, 8010088 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010082:	6803      	ldr	r3, [r0, #0]
 8010084:	691b      	ldr	r3, [r3, #16]
 8010086:	4798      	blx	r3
 8010088:	6828      	ldr	r0, [r5, #0]
 801008a:	6803      	ldr	r3, [r0, #0]
 801008c:	68db      	ldr	r3, [r3, #12]
 801008e:	4798      	blx	r3
 8010090:	2301      	movs	r3, #1
 8010092:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8010096:	3404      	adds	r4, #4
 8010098:	4620      	mov	r0, r4
 801009a:	f7ff ff5f 	bl	800ff5c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801009e:	4620      	mov	r0, r4
 80100a0:	f7ff ffa0 	bl	800ffe4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80100a4:	6830      	ldr	r0, [r6, #0]
 80100a6:	b110      	cbz	r0, 80100ae <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80100a8:	6803      	ldr	r3, [r0, #0]
 80100aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80100ac:	e7dd      	b.n	801006a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80100ae:	bd70      	pop	{r4, r5, r6, pc}
 80100b0:	20014088 	.word	0x20014088
 80100b4:	20014084 	.word	0x20014084

080100b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80100b8:	4603      	mov	r3, r0
 80100ba:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 80100be:	2200      	movs	r2, #0
 80100c0:	801a      	strh	r2, [r3, #0]
 80100c2:	805a      	strh	r2, [r3, #2]
 80100c4:	809a      	strh	r2, [r3, #4]
 80100c6:	80da      	strh	r2, [r3, #6]
 80100c8:	3308      	adds	r3, #8
 80100ca:	428b      	cmp	r3, r1
 80100cc:	d1f8      	bne.n	80100c0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80100ce:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 80100d2:	4770      	bx	lr

080100d4 <_ZN8touchgfx11ApplicationC1Ev>:
 80100d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80100d6:	4606      	mov	r6, r0
 80100d8:	4b1c      	ldr	r3, [pc, #112]	@ (801014c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80100da:	f846 3b04 	str.w	r3, [r6], #4
 80100de:	4604      	mov	r4, r0
 80100e0:	2500      	movs	r5, #0
 80100e2:	22a8      	movs	r2, #168	@ 0xa8
 80100e4:	2100      	movs	r1, #0
 80100e6:	4630      	mov	r0, r6
 80100e8:	f013 fb87 	bl	80237fa <memset>
 80100ec:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 80100f0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80100f4:	f7ff ffe0 	bl	80100b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80100f8:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80100fc:	f7ff ffdc 	bl	80100b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010100:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8010104:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8010108:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 801010c:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8010110:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8010114:	490e      	ldr	r1, [pc, #56]	@ (8010150 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010116:	480f      	ldr	r0, [pc, #60]	@ (8010154 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010118:	4f0f      	ldr	r7, [pc, #60]	@ (8010158 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801011a:	f011 fb39 	bl	8021790 <CRC_Lock>
 801011e:	4b0f      	ldr	r3, [pc, #60]	@ (801015c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8010120:	b158      	cbz	r0, 801013a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8010122:	801d      	strh	r5, [r3, #0]
 8010124:	4a0e      	ldr	r2, [pc, #56]	@ (8010160 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8010126:	2300      	movs	r3, #0
 8010128:	6013      	str	r3, [r2, #0]
 801012a:	4a0e      	ldr	r2, [pc, #56]	@ (8010164 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 801012c:	603b      	str	r3, [r7, #0]
 801012e:	4630      	mov	r0, r6
 8010130:	6013      	str	r3, [r2, #0]
 8010132:	f7ff ff32 	bl	800ff9a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010136:	4620      	mov	r0, r4
 8010138:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801013a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801013e:	2002      	movs	r0, #2
 8010140:	801a      	strh	r2, [r3, #0]
 8010142:	6038      	str	r0, [r7, #0]
 8010144:	f001 ffcc 	bl	80120e0 <_ZN8touchgfx6Screen4drawEv>
 8010148:	e7ec      	b.n	8010124 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801014a:	bf00      	nop
 801014c:	08025d14 	.word	0x08025d14
 8010150:	b5e8b5cd 	.word	0xb5e8b5cd
 8010154:	f407a5c2 	.word	0xf407a5c2
 8010158:	20014084 	.word	0x20014084
 801015c:	20000194 	.word	0x20000194
 8010160:	20014094 	.word	0x20014094
 8010164:	20014088 	.word	0x20014088

08010168 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010168:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 801016c:	3b01      	subs	r3, #1
 801016e:	b29b      	uxth	r3, r3
 8010170:	428b      	cmp	r3, r1
 8010172:	b510      	push	{r4, lr}
 8010174:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8010178:	d908      	bls.n	801018c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801017a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801017e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010182:	681a      	ldr	r2, [r3, #0]
 8010184:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010188:	685a      	ldr	r2, [r3, #4]
 801018a:	6062      	str	r2, [r4, #4]
 801018c:	bd10      	pop	{r4, pc}
	...

08010190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010194:	4b92      	ldr	r3, [pc, #584]	@ (80103e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 8010196:	b08f      	sub	sp, #60	@ 0x3c
 8010198:	ac0a      	add	r4, sp, #40	@ 0x28
 801019a:	e884 0006 	stmia.w	r4, {r1, r2}
 801019e:	f9b3 2000 	ldrsh.w	r2, [r3]
 80101a2:	4b90      	ldr	r3, [pc, #576]	@ (80103e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 80101a4:	4683      	mov	fp, r0
 80101a6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80101aa:	4620      	mov	r0, r4
 80101ac:	f7ff fe13 	bl	800fdd6 <_ZN8touchgfx4Rect10restrictToEss>
 80101b0:	4620      	mov	r0, r4
 80101b2:	f7fa fe08 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80101b6:	2800      	cmp	r0, #0
 80101b8:	d170      	bne.n	801029c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80101ba:	4b8b      	ldr	r3, [pc, #556]	@ (80103e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 80101bc:	681b      	ldr	r3, [r3, #0]
 80101be:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 80101c2:	2b02      	cmp	r3, #2
 80101c4:	d06a      	beq.n	801029c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80101c6:	9403      	str	r4, [sp, #12]
 80101c8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80101cc:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80101d0:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80101d4:	35a4      	adds	r5, #164	@ 0xa4
 80101d6:	9301      	str	r3, [sp, #4]
 80101d8:	b15c      	cbz	r4, 80101f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 80101da:	4629      	mov	r1, r5
 80101dc:	9803      	ldr	r0, [sp, #12]
 80101de:	f7ff fe4b 	bl	800fe78 <_ZNK8touchgfx4Rect8includesERKS0_>
 80101e2:	3c01      	subs	r4, #1
 80101e4:	b118      	cbz	r0, 80101ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80101e6:	b2a1      	uxth	r1, r4
 80101e8:	9801      	ldr	r0, [sp, #4]
 80101ea:	f7ff ffbd 	bl	8010168 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80101ee:	3d08      	subs	r5, #8
 80101f0:	e7f2      	b.n	80101d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 80101f2:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 80101f6:	f8cd a010 	str.w	sl, [sp, #16]
 80101fa:	f10a 33ff 	add.w	r3, sl, #4294967295
 80101fe:	9302      	str	r3, [sp, #8]
 8010200:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8010204:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8010208:	9306      	str	r3, [sp, #24]
 801020a:	445c      	add	r4, fp
 801020c:	2500      	movs	r5, #0
 801020e:	4626      	mov	r6, r4
 8010210:	f8cd a014 	str.w	sl, [sp, #20]
 8010214:	462f      	mov	r7, r5
 8010216:	9b05      	ldr	r3, [sp, #20]
 8010218:	2b00      	cmp	r3, #0
 801021a:	d073      	beq.n	8010304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 801021c:	9903      	ldr	r1, [sp, #12]
 801021e:	4630      	mov	r0, r6
 8010220:	f7ff fdb7 	bl	800fd92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010224:	b350      	cbz	r0, 801027c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 8010226:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 801022a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801022e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8010232:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8010236:	45e6      	cmp	lr, ip
 8010238:	db33      	blt.n	80102a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 801023a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801023e:	88b3      	ldrh	r3, [r6, #4]
 8010240:	4472      	add	r2, lr
 8010242:	4463      	add	r3, ip
 8010244:	b212      	sxth	r2, r2
 8010246:	b21b      	sxth	r3, r3
 8010248:	429a      	cmp	r2, r3
 801024a:	dc2a      	bgt.n	80102a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 801024c:	88f3      	ldrh	r3, [r6, #6]
 801024e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010252:	fa1f f289 	uxth.w	r2, r9
 8010256:	4413      	add	r3, r2
 8010258:	b29b      	uxth	r3, r3
 801025a:	45c8      	cmp	r8, r9
 801025c:	fa1f fc88 	uxth.w	ip, r8
 8010260:	fa0f fe83 	sxth.w	lr, r3
 8010264:	db0f      	blt.n	8010286 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 8010266:	eba3 030c 	sub.w	r3, r3, ip
 801026a:	1ac9      	subs	r1, r1, r3
 801026c:	b209      	sxth	r1, r1
 801026e:	2900      	cmp	r1, #0
 8010270:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010274:	dd12      	ble.n	801029c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8010276:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 801027a:	4605      	mov	r5, r0
 801027c:	9b05      	ldr	r3, [sp, #20]
 801027e:	3b01      	subs	r3, #1
 8010280:	9305      	str	r3, [sp, #20]
 8010282:	3e08      	subs	r6, #8
 8010284:	e7c7      	b.n	8010216 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 8010286:	4461      	add	r1, ip
 8010288:	b209      	sxth	r1, r1
 801028a:	4571      	cmp	r1, lr
 801028c:	dc38      	bgt.n	8010300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801028e:	eba2 020c 	sub.w	r2, r2, ip
 8010292:	b212      	sxth	r2, r2
 8010294:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010298:	2a00      	cmp	r2, #0
 801029a:	dcee      	bgt.n	801027a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801029c:	b00f      	add	sp, #60	@ 0x3c
 801029e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102a2:	45c8      	cmp	r8, r9
 80102a4:	db2c      	blt.n	8010300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80102a6:	88f3      	ldrh	r3, [r6, #6]
 80102a8:	4499      	add	r9, r3
 80102aa:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 80102ae:	4498      	add	r8, r3
 80102b0:	fa0f f989 	sxth.w	r9, r9
 80102b4:	fa0f f888 	sxth.w	r8, r8
 80102b8:	45c1      	cmp	r9, r8
 80102ba:	db21      	blt.n	8010300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80102bc:	88b3      	ldrh	r3, [r6, #4]
 80102be:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80102c2:	fa1f f28c 	uxth.w	r2, ip
 80102c6:	4413      	add	r3, r2
 80102c8:	b29b      	uxth	r3, r3
 80102ca:	45e6      	cmp	lr, ip
 80102cc:	fa1f f88e 	uxth.w	r8, lr
 80102d0:	fa0f f983 	sxth.w	r9, r3
 80102d4:	db0a      	blt.n	80102ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 80102d6:	eba3 0308 	sub.w	r3, r3, r8
 80102da:	1ac9      	subs	r1, r1, r3
 80102dc:	b209      	sxth	r1, r1
 80102de:	2900      	cmp	r1, #0
 80102e0:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80102e4:	ddda      	ble.n	801029c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80102e6:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80102ea:	e7c6      	b.n	801027a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80102ec:	4441      	add	r1, r8
 80102ee:	b209      	sxth	r1, r1
 80102f0:	4549      	cmp	r1, r9
 80102f2:	dc05      	bgt.n	8010300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80102f4:	eba2 0208 	sub.w	r2, r2, r8
 80102f8:	b212      	sxth	r2, r2
 80102fa:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80102fe:	e7cb      	b.n	8010298 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 8010300:	4607      	mov	r7, r0
 8010302:	e7bb      	b.n	801027c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 8010304:	2d00      	cmp	r5, #0
 8010306:	d181      	bne.n	801020c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 8010308:	2f00      	cmp	r7, #0
 801030a:	f000 81df 	beq.w	80106cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801030e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8010312:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8010316:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 801031a:	b2b3      	uxth	r3, r6
 801031c:	9305      	str	r3, [sp, #20]
 801031e:	9a05      	ldr	r2, [sp, #20]
 8010320:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8010324:	4413      	add	r3, r2
 8010326:	b2ba      	uxth	r2, r7
 8010328:	4492      	add	sl, r2
 801032a:	b29b      	uxth	r3, r3
 801032c:	fa1f fa8a 	uxth.w	sl, sl
 8010330:	fa0f f883 	sxth.w	r8, r3
 8010334:	fa0f f98a 	sxth.w	r9, sl
 8010338:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801033c:	9b04      	ldr	r3, [sp, #16]
 801033e:	2b00      	cmp	r3, #0
 8010340:	d054      	beq.n	80103ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 8010342:	9903      	ldr	r1, [sp, #12]
 8010344:	4620      	mov	r0, r4
 8010346:	f7ff fd24 	bl	800fd92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801034a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801034e:	b1c0      	cbz	r0, 8010382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010350:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010354:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010358:	4576      	cmp	r6, lr
 801035a:	dc22      	bgt.n	80103a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801035c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010360:	44f4      	add	ip, lr
 8010362:	fa0f fc8c 	sxth.w	ip, ip
 8010366:	45e0      	cmp	r8, ip
 8010368:	db1b      	blt.n	80103a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801036a:	428f      	cmp	r7, r1
 801036c:	fa1f fc81 	uxth.w	ip, r1
 8010370:	88e1      	ldrh	r1, [r4, #6]
 8010372:	dc0d      	bgt.n	8010390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 8010374:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010378:	eba1 010c 	sub.w	r1, r1, ip
 801037c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8010380:	80e1      	strh	r1, [r4, #6]
 8010382:	4628      	mov	r0, r5
 8010384:	9904      	ldr	r1, [sp, #16]
 8010386:	3901      	subs	r1, #1
 8010388:	9104      	str	r1, [sp, #16]
 801038a:	3c08      	subs	r4, #8
 801038c:	4605      	mov	r5, r0
 801038e:	e7d3      	b.n	8010338 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 8010390:	4461      	add	r1, ip
 8010392:	b209      	sxth	r1, r1
 8010394:	4549      	cmp	r1, r9
 8010396:	dcf5      	bgt.n	8010384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010398:	eba2 0c0c 	sub.w	ip, r2, ip
 801039c:	f8a4 c006 	strh.w	ip, [r4, #6]
 80103a0:	e7ef      	b.n	8010382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 80103a2:	428f      	cmp	r7, r1
 80103a4:	dcee      	bgt.n	8010384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80103a6:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80103aa:	4461      	add	r1, ip
 80103ac:	b209      	sxth	r1, r1
 80103ae:	4589      	cmp	r9, r1
 80103b0:	dbe8      	blt.n	8010384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80103b2:	4576      	cmp	r6, lr
 80103b4:	fa1f fc8e 	uxth.w	ip, lr
 80103b8:	88a1      	ldrh	r1, [r4, #4]
 80103ba:	dc07      	bgt.n	80103cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 80103bc:	eba3 0c0c 	sub.w	ip, r3, ip
 80103c0:	eba1 010c 	sub.w	r1, r1, ip
 80103c4:	f8a4 8000 	strh.w	r8, [r4]
 80103c8:	80a1      	strh	r1, [r4, #4]
 80103ca:	e7da      	b.n	8010382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 80103cc:	4461      	add	r1, ip
 80103ce:	b209      	sxth	r1, r1
 80103d0:	4588      	cmp	r8, r1
 80103d2:	dbd7      	blt.n	8010384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80103d4:	9905      	ldr	r1, [sp, #20]
 80103d6:	eba1 0c0c 	sub.w	ip, r1, ip
 80103da:	f8a4 c004 	strh.w	ip, [r4, #4]
 80103de:	e7d0      	b.n	8010382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 80103e0:	20014034 	.word	0x20014034
 80103e4:	20014032 	.word	0x20014032
 80103e8:	20014040 	.word	0x20014040
 80103ec:	2d00      	cmp	r5, #0
 80103ee:	f000 816d 	beq.w	80106cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80103f2:	9b06      	ldr	r3, [sp, #24]
 80103f4:	445b      	add	r3, fp
 80103f6:	461c      	mov	r4, r3
 80103f8:	9b02      	ldr	r3, [sp, #8]
 80103fa:	3301      	adds	r3, #1
 80103fc:	f000 8166 	beq.w	80106cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8010400:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8010404:	4629      	mov	r1, r5
 8010406:	9803      	ldr	r0, [sp, #12]
 8010408:	f7ff fd36 	bl	800fe78 <_ZNK8touchgfx4Rect8includesERKS0_>
 801040c:	b120      	cbz	r0, 8010418 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 801040e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8010412:	9801      	ldr	r0, [sp, #4]
 8010414:	f7ff fea8 	bl	8010168 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010418:	9903      	ldr	r1, [sp, #12]
 801041a:	4628      	mov	r0, r5
 801041c:	f7ff fcb9 	bl	800fd92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010420:	2800      	cmp	r0, #0
 8010422:	f000 809c 	beq.w	801055e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 8010426:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 801042a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801042e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010432:	9309      	str	r3, [sp, #36]	@ 0x24
 8010434:	fa1f f189 	uxth.w	r1, r9
 8010438:	eb01 0c03 	add.w	ip, r1, r3
 801043c:	fa1f fa8c 	uxth.w	sl, ip
 8010440:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8010444:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8010448:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 801044c:	b283      	uxth	r3, r0
 801044e:	eb03 050c 	add.w	r5, r3, ip
 8010452:	b2ad      	uxth	r5, r5
 8010454:	9505      	str	r5, [sp, #20]
 8010456:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801045a:	9504      	str	r5, [sp, #16]
 801045c:	4548      	cmp	r0, r9
 801045e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8010462:	f340 8099 	ble.w	8010598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8010466:	1a5b      	subs	r3, r3, r1
 8010468:	b29b      	uxth	r3, r3
 801046a:	4596      	cmp	lr, r2
 801046c:	fa0f f08a 	sxth.w	r0, sl
 8010470:	b21e      	sxth	r6, r3
 8010472:	dd2e      	ble.n	80104d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 8010474:	9f02      	ldr	r7, [sp, #8]
 8010476:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801047a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801047e:	9f04      	ldr	r7, [sp, #16]
 8010480:	1a3f      	subs	r7, r7, r0
 8010482:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8010486:	fa1f fe8e 	uxth.w	lr, lr
 801048a:	b292      	uxth	r2, r2
 801048c:	ebae 0102 	sub.w	r1, lr, r2
 8010490:	44a6      	add	lr, r4
 8010492:	4402      	add	r2, r0
 8010494:	b289      	uxth	r1, r1
 8010496:	fa0f fe8e 	sxth.w	lr, lr
 801049a:	b212      	sxth	r2, r2
 801049c:	b20d      	sxth	r5, r1
 801049e:	ebae 0202 	sub.w	r2, lr, r2
 80104a2:	436f      	muls	r7, r5
 80104a4:	4372      	muls	r2, r6
 80104a6:	4297      	cmp	r7, r2
 80104a8:	db09      	blt.n	80104be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 80104aa:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 80104ae:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 80104b2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80104b6:	449c      	add	ip, r3
 80104b8:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80104bc:	e684      	b.n	80101c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80104be:	4421      	add	r1, r4
 80104c0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 80104c4:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 80104c8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80104cc:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80104d0:	e67a      	b.n	80101c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80104d2:	9f04      	ldr	r7, [sp, #16]
 80104d4:	42b8      	cmp	r0, r7
 80104d6:	da27      	bge.n	8010528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 80104d8:	9902      	ldr	r1, [sp, #8]
 80104da:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 80104de:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80104e2:	eb05 010e 	add.w	r1, r5, lr
 80104e6:	fa1f f881 	uxth.w	r8, r1
 80104ea:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 80104ee:	4411      	add	r1, r2
 80104f0:	eba1 0108 	sub.w	r1, r1, r8
 80104f4:	b289      	uxth	r1, r1
 80104f6:	fa0f f988 	sxth.w	r9, r8
 80104fa:	eba2 020e 	sub.w	r2, r2, lr
 80104fe:	fa0f f881 	sxth.w	r8, r1
 8010502:	1a3f      	subs	r7, r7, r0
 8010504:	4372      	muls	r2, r6
 8010506:	fb08 f707 	mul.w	r7, r8, r7
 801050a:	42ba      	cmp	r2, r7
 801050c:	dc06      	bgt.n	801051c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 801050e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8010512:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8010516:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 801051a:	e7ca      	b.n	80104b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 801051c:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8010520:	4429      	add	r1, r5
 8010522:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010526:	e64f      	b.n	80101c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8010528:	9805      	ldr	r0, [sp, #20]
 801052a:	ebaa 0000 	sub.w	r0, sl, r0
 801052e:	b280      	uxth	r0, r0
 8010530:	2d06      	cmp	r5, #6
 8010532:	fa0f fe80 	sxth.w	lr, r0
 8010536:	d817      	bhi.n	8010568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 8010538:	9b04      	ldr	r3, [sp, #16]
 801053a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801053e:	1c6b      	adds	r3, r5, #1
 8010540:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8010544:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8010548:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801054c:	9b01      	ldr	r3, [sp, #4]
 801054e:	9801      	ldr	r0, [sp, #4]
 8010550:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010554:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010558:	805a      	strh	r2, [r3, #2]
 801055a:	809e      	strh	r6, [r3, #4]
 801055c:	80d9      	strh	r1, [r3, #6]
 801055e:	9b02      	ldr	r3, [sp, #8]
 8010560:	3b01      	subs	r3, #1
 8010562:	9302      	str	r3, [sp, #8]
 8010564:	3c08      	subs	r4, #8
 8010566:	e747      	b.n	80103f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 8010568:	9a02      	ldr	r2, [sp, #8]
 801056a:	45b6      	cmp	lr, r6
 801056c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010570:	db0d      	blt.n	801058e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 8010572:	449c      	add	ip, r3
 8010574:	fa1f fc8c 	uxth.w	ip, ip
 8010578:	445a      	add	r2, fp
 801057a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801057e:	448c      	add	ip, r1
 8010580:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010584:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8010588:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 801058c:	e61c      	b.n	80101c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801058e:	445a      	add	r2, fp
 8010590:	4484      	add	ip, r0
 8010592:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8010596:	e78f      	b.n	80104b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8010598:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 801059c:	fa1f f18e 	uxth.w	r1, lr
 80105a0:	eb01 0806 	add.w	r8, r1, r6
 80105a4:	b293      	uxth	r3, r2
 80105a6:	fa1f f888 	uxth.w	r8, r8
 80105aa:	9306      	str	r3, [sp, #24]
 80105ac:	fa0f f388 	sxth.w	r3, r8
 80105b0:	9307      	str	r3, [sp, #28]
 80105b2:	9f06      	ldr	r7, [sp, #24]
 80105b4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80105b8:	443b      	add	r3, r7
 80105ba:	b29b      	uxth	r3, r3
 80105bc:	4596      	cmp	lr, r2
 80105be:	9308      	str	r3, [sp, #32]
 80105c0:	da24      	bge.n	801060c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80105c2:	9905      	ldr	r1, [sp, #20]
 80105c4:	eba3 0308 	sub.w	r3, r3, r8
 80105c8:	ebaa 0401 	sub.w	r4, sl, r1
 80105cc:	b2a4      	uxth	r4, r4
 80105ce:	b29b      	uxth	r3, r3
 80105d0:	b225      	sxth	r5, r4
 80105d2:	b219      	sxth	r1, r3
 80105d4:	eba2 020e 	sub.w	r2, r2, lr
 80105d8:	eba9 0000 	sub.w	r0, r9, r0
 80105dc:	436a      	muls	r2, r5
 80105de:	4348      	muls	r0, r1
 80105e0:	4282      	cmp	r2, r0
 80105e2:	9a02      	ldr	r2, [sp, #8]
 80105e4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80105e8:	445a      	add	r2, fp
 80105ea:	dc06      	bgt.n	80105fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80105ec:	9b07      	ldr	r3, [sp, #28]
 80105ee:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 80105f2:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 80105f6:	44a4      	add	ip, r4
 80105f8:	e75e      	b.n	80104b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 80105fa:	9904      	ldr	r1, [sp, #16]
 80105fc:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8010600:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8010604:	4433      	add	r3, r6
 8010606:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801060a:	e5dd      	b.n	80101c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801060c:	9f06      	ldr	r7, [sp, #24]
 801060e:	9b04      	ldr	r3, [sp, #16]
 8010610:	1bc9      	subs	r1, r1, r7
 8010612:	fa0f f78a 	sxth.w	r7, sl
 8010616:	b289      	uxth	r1, r1
 8010618:	429f      	cmp	r7, r3
 801061a:	fa0f fe81 	sxth.w	lr, r1
 801061e:	dd23      	ble.n	8010668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 8010620:	9a05      	ldr	r2, [sp, #20]
 8010622:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010626:	9d07      	ldr	r5, [sp, #28]
 8010628:	ebaa 0202 	sub.w	r2, sl, r2
 801062c:	b292      	uxth	r2, r2
 801062e:	eba5 0a03 	sub.w	sl, r5, r3
 8010632:	b214      	sxth	r4, r2
 8010634:	eba9 0000 	sub.w	r0, r9, r0
 8010638:	9b02      	ldr	r3, [sp, #8]
 801063a:	fb0e f000 	mul.w	r0, lr, r0
 801063e:	fb04 fa0a 	mul.w	sl, r4, sl
 8010642:	00db      	lsls	r3, r3, #3
 8010644:	4550      	cmp	r0, sl
 8010646:	445b      	add	r3, fp
 8010648:	db03      	blt.n	8010652 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 801064a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 801064e:	4494      	add	ip, r2
 8010650:	e732      	b.n	80104b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8010652:	9a04      	ldr	r2, [sp, #16]
 8010654:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8010658:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801065c:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8010660:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010664:	4431      	add	r1, r6
 8010666:	e75c      	b.n	8010522 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 8010668:	9b08      	ldr	r3, [sp, #32]
 801066a:	eba3 0308 	sub.w	r3, r3, r8
 801066e:	b29b      	uxth	r3, r3
 8010670:	2d06      	cmp	r5, #6
 8010672:	b218      	sxth	r0, r3
 8010674:	d813      	bhi.n	801069e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 8010676:	9b07      	ldr	r3, [sp, #28]
 8010678:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 801067c:	1c6b      	adds	r3, r5, #1
 801067e:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8010682:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010686:	9b01      	ldr	r3, [sp, #4]
 8010688:	9901      	ldr	r1, [sp, #4]
 801068a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801068e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010692:	805a      	strh	r2, [r3, #2]
 8010694:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010696:	809a      	strh	r2, [r3, #4]
 8010698:	f8a3 e006 	strh.w	lr, [r3, #6]
 801069c:	e75f      	b.n	801055e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 801069e:	9c02      	ldr	r4, [sp, #8]
 80106a0:	4570      	cmp	r0, lr
 80106a2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80106a6:	db0d      	blt.n	80106c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 80106a8:	4431      	add	r1, r6
 80106aa:	9b06      	ldr	r3, [sp, #24]
 80106ac:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80106b0:	b289      	uxth	r1, r1
 80106b2:	445c      	add	r4, fp
 80106b4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80106b8:	4419      	add	r1, r3
 80106ba:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 80106be:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 80106c2:	e581      	b.n	80101c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80106c4:	445c      	add	r4, fp
 80106c6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 80106ca:	e79b      	b.n	8010604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 80106cc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80106d0:	1e65      	subs	r5, r4, #1
 80106d2:	b2ad      	uxth	r5, r5
 80106d4:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80106d8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80106dc:	42b5      	cmp	r5, r6
 80106de:	d044      	beq.n	801076a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 80106e0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80106e4:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 80106e8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80106ec:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 80106f0:	4282      	cmp	r2, r0
 80106f2:	d11f      	bne.n	8010734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 80106f4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 80106f8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80106fc:	459c      	cmp	ip, r3
 80106fe:	d119      	bne.n	8010734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 8010700:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8010704:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8010708:	19d8      	adds	r0, r3, r7
 801070a:	b200      	sxth	r0, r0
 801070c:	4288      	cmp	r0, r1
 801070e:	d109      	bne.n	8010724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010710:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8010714:	4413      	add	r3, r2
 8010716:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801071a:	4629      	mov	r1, r5
 801071c:	9801      	ldr	r0, [sp, #4]
 801071e:	f7ff fd23 	bl	8010168 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010722:	e003      	b.n	801072c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8010724:	4411      	add	r1, r2
 8010726:	b209      	sxth	r1, r1
 8010728:	42b9      	cmp	r1, r7
 801072a:	d0f3      	beq.n	8010714 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801072c:	3d01      	subs	r5, #1
 801072e:	b2ad      	uxth	r5, r5
 8010730:	3c08      	subs	r4, #8
 8010732:	e7d3      	b.n	80106dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 8010734:	42b9      	cmp	r1, r7
 8010736:	d1f9      	bne.n	801072c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8010738:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 801073c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010740:	4299      	cmp	r1, r3
 8010742:	d1f3      	bne.n	801072c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8010744:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8010748:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801074c:	181f      	adds	r7, r3, r0
 801074e:	b23f      	sxth	r7, r7
 8010750:	42ba      	cmp	r2, r7
 8010752:	d105      	bne.n	8010760 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 8010754:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8010758:	440b      	add	r3, r1
 801075a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801075e:	e7dc      	b.n	801071a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 8010760:	440a      	add	r2, r1
 8010762:	b212      	sxth	r2, r2
 8010764:	4290      	cmp	r0, r2
 8010766:	d1e1      	bne.n	801072c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8010768:	e7f6      	b.n	8010758 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 801076a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 801076e:	2e07      	cmp	r6, #7
 8010770:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010774:	d812      	bhi.n	801079c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 8010776:	1c75      	adds	r5, r6, #1
 8010778:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 801077c:	9d01      	ldr	r5, [sp, #4]
 801077e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010782:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8010786:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801078a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801078e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010792:	442c      	add	r4, r5
 8010794:	8061      	strh	r1, [r4, #2]
 8010796:	80a2      	strh	r2, [r4, #4]
 8010798:	80e3      	strh	r3, [r4, #6]
 801079a:	e57f      	b.n	801029c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801079c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80107a0:	3e01      	subs	r6, #1
 80107a2:	445c      	add	r4, fp
 80107a4:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 80107a8:	f04f 37ff 	mov.w	r7, #4294967295
 80107ac:	2500      	movs	r5, #0
 80107ae:	9305      	str	r3, [sp, #20]
 80107b0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80107b4:	9302      	str	r3, [sp, #8]
 80107b6:	1e72      	subs	r2, r6, #1
 80107b8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80107bc:	9304      	str	r3, [sp, #16]
 80107be:	4691      	mov	r9, r2
 80107c0:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 80107c4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80107c8:	bf14      	ite	ne
 80107ca:	9905      	ldrne	r1, [sp, #20]
 80107cc:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80107d0:	6818      	ldr	r0, [r3, #0]
 80107d2:	9207      	str	r2, [sp, #28]
 80107d4:	bf18      	it	ne
 80107d6:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80107da:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80107de:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80107e2:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80107e6:	9306      	str	r3, [sp, #24]
 80107e8:	fb18 f801 	smulbb	r8, r8, r1
 80107ec:	6859      	ldr	r1, [r3, #4]
 80107ee:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80107f2:	4671      	mov	r1, lr
 80107f4:	a80c      	add	r0, sp, #48	@ 0x30
 80107f6:	f7ff fb65 	bl	800fec4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80107fa:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 80107fe:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8010802:	9b04      	ldr	r3, [sp, #16]
 8010804:	9a02      	ldr	r2, [sp, #8]
 8010806:	fb10 f001 	smulbb	r0, r0, r1
 801080a:	fb02 8803 	mla	r8, r2, r3, r8
 801080e:	eba0 0108 	sub.w	r1, r0, r8
 8010812:	f04f 0c08 	mov.w	ip, #8
 8010816:	fb90 f0fc 	sdiv	r0, r0, ip
 801081a:	4288      	cmp	r0, r1
 801081c:	dc20      	bgt.n	8010860 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 801081e:	4551      	cmp	r1, sl
 8010820:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8010824:	da03      	bge.n	801082e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 8010826:	b1d9      	cbz	r1, 8010860 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 8010828:	468a      	mov	sl, r1
 801082a:	464f      	mov	r7, r9
 801082c:	4635      	mov	r5, r6
 801082e:	f109 39ff 	add.w	r9, r9, #4294967295
 8010832:	f119 0f02 	cmn.w	r9, #2
 8010836:	d1c5      	bne.n	80107c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 8010838:	4616      	mov	r6, r2
 801083a:	3201      	adds	r2, #1
 801083c:	f1a4 0408 	sub.w	r4, r4, #8
 8010840:	d1b6      	bne.n	80107b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 8010842:	9b01      	ldr	r3, [sp, #4]
 8010844:	b2ac      	uxth	r4, r5
 8010846:	00ed      	lsls	r5, r5, #3
 8010848:	1958      	adds	r0, r3, r5
 801084a:	1c7b      	adds	r3, r7, #1
 801084c:	d10b      	bne.n	8010866 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 801084e:	4601      	mov	r1, r0
 8010850:	9803      	ldr	r0, [sp, #12]
 8010852:	f7ff fb37 	bl	800fec4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010856:	4621      	mov	r1, r4
 8010858:	9801      	ldr	r0, [sp, #4]
 801085a:	f7ff fc85 	bl	8010168 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801085e:	e4b3      	b.n	80101c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8010860:	464f      	mov	r7, r9
 8010862:	4635      	mov	r5, r6
 8010864:	e7ed      	b.n	8010842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 8010866:	9b01      	ldr	r3, [sp, #4]
 8010868:	00ff      	lsls	r7, r7, #3
 801086a:	19d9      	adds	r1, r3, r7
 801086c:	f7ff fb2a 	bl	800fec4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010870:	9b03      	ldr	r3, [sp, #12]
 8010872:	cb03      	ldmia	r3!, {r0, r1}
 8010874:	445f      	add	r7, fp
 8010876:	445d      	add	r5, fp
 8010878:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 801087c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8010880:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010884:	9b03      	ldr	r3, [sp, #12]
 8010886:	6869      	ldr	r1, [r5, #4]
 8010888:	c303      	stmia	r3!, {r0, r1}
 801088a:	e7e4      	b.n	8010856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

0801088c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801088c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010890:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8010894:	b0a1      	sub	sp, #132	@ 0x84
 8010896:	4604      	mov	r4, r0
 8010898:	4630      	mov	r0, r6
 801089a:	f7fa fa94 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801089e:	4605      	mov	r5, r0
 80108a0:	b948      	cbnz	r0, 80108b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80108a2:	6823      	ldr	r3, [r4, #0]
 80108a4:	e896 0006 	ldmia.w	r6, {r1, r2}
 80108a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80108aa:	4620      	mov	r0, r4
 80108ac:	4798      	blx	r3
 80108ae:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 80108b2:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 80108b6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80108ba:	2b00      	cmp	r3, #0
 80108bc:	d149      	bne.n	8010952 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 80108be:	4bb1      	ldr	r3, [pc, #708]	@ (8010b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 80108c0:	681b      	ldr	r3, [r3, #0]
 80108c2:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 80108c6:	1ebb      	subs	r3, r7, #2
 80108c8:	425f      	negs	r7, r3
 80108ca:	415f      	adcs	r7, r3
 80108cc:	4bae      	ldr	r3, [pc, #696]	@ (8010b88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 80108ce:	681b      	ldr	r3, [r3, #0]
 80108d0:	2b00      	cmp	r3, #0
 80108d2:	d040      	beq.n	8010956 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 80108d4:	4dad      	ldr	r5, [pc, #692]	@ (8010b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 80108d6:	4628      	mov	r0, r5
 80108d8:	f7fa fa75 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80108dc:	4606      	mov	r6, r0
 80108de:	2800      	cmp	r0, #0
 80108e0:	d139      	bne.n	8010956 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 80108e2:	4628      	mov	r0, r5
 80108e4:	f7ff f982 	bl	800fbec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80108e8:	6823      	ldr	r3, [r4, #0]
 80108ea:	6829      	ldr	r1, [r5, #0]
 80108ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80108ee:	686a      	ldr	r2, [r5, #4]
 80108f0:	4620      	mov	r0, r4
 80108f2:	4798      	blx	r3
 80108f4:	802e      	strh	r6, [r5, #0]
 80108f6:	806e      	strh	r6, [r5, #2]
 80108f8:	80ae      	strh	r6, [r5, #4]
 80108fa:	80ee      	strh	r6, [r5, #6]
 80108fc:	af0f      	add	r7, sp, #60	@ 0x3c
 80108fe:	4ea4      	ldr	r6, [pc, #656]	@ (8010b90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 8010900:	4638      	mov	r0, r7
 8010902:	f7ff fbd9 	bl	80100b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010906:	8835      	ldrh	r5, [r6, #0]
 8010908:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 801090c:	462b      	mov	r3, r5
 801090e:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8010912:	4563      	cmp	r3, ip
 8010914:	d224      	bcs.n	8010960 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8010916:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 801091a:	2907      	cmp	r1, #7
 801091c:	d816      	bhi.n	801094c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801091e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010922:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8010926:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801092a:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 801092e:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 8010932:	1c4a      	adds	r2, r1, #1
 8010934:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 8010938:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 801093c:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 8010940:	f8a2 a002 	strh.w	sl, [r2, #2]
 8010944:	f8a2 8004 	strh.w	r8, [r2, #4]
 8010948:	f8a2 e006 	strh.w	lr, [r2, #6]
 801094c:	3301      	adds	r3, #1
 801094e:	b29b      	uxth	r3, r3
 8010950:	e7df      	b.n	8010912 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8010952:	2701      	movs	r7, #1
 8010954:	e7ba      	b.n	80108cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 8010956:	2f00      	cmp	r7, #0
 8010958:	d1d0      	bne.n	80108fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 801095a:	b021      	add	sp, #132	@ 0x84
 801095c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010960:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8010964:	42ab      	cmp	r3, r5
 8010966:	d90c      	bls.n	8010982 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 8010968:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801096c:	6822      	ldr	r2, [r4, #0]
 801096e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8010972:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8010974:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8010978:	4620      	mov	r0, r4
 801097a:	3501      	adds	r5, #1
 801097c:	47b8      	blx	r7
 801097e:	b2ad      	uxth	r5, r5
 8010980:	e7ee      	b.n	8010960 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8010982:	4d80      	ldr	r5, [pc, #512]	@ (8010b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8010984:	6828      	ldr	r0, [r5, #0]
 8010986:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801098a:	2b01      	cmp	r3, #1
 801098c:	f040 813b 	bne.w	8010c06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 8010990:	4a80      	ldr	r2, [pc, #512]	@ (8010b94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 8010992:	8833      	ldrh	r3, [r6, #0]
 8010994:	7812      	ldrb	r2, [r2, #0]
 8010996:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 801099a:	2a01      	cmp	r2, #1
 801099c:	d014      	beq.n	80109c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 801099e:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 80109a2:	32ae      	adds	r2, #174	@ 0xae
 80109a4:	f04f 0900 	mov.w	r9, #0
 80109a8:	4283      	cmp	r3, r0
 80109aa:	f102 0208 	add.w	r2, r2, #8
 80109ae:	f280 8082 	bge.w	8010ab6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 80109b2:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 80109b6:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 80109ba:	4439      	add	r1, r7
 80109bc:	b209      	sxth	r1, r1
 80109be:	4589      	cmp	r9, r1
 80109c0:	bfb8      	it	lt
 80109c2:	4689      	movlt	r9, r1
 80109c4:	3301      	adds	r3, #1
 80109c6:	e7ef      	b.n	80109a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 80109c8:	4f73      	ldr	r7, [pc, #460]	@ (8010b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 80109ca:	883a      	ldrh	r2, [r7, #0]
 80109cc:	4693      	mov	fp, r2
 80109ce:	4283      	cmp	r3, r0
 80109d0:	da08      	bge.n	80109e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 80109d2:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 80109d6:	3301      	adds	r3, #1
 80109d8:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 80109dc:	458b      	cmp	fp, r1
 80109de:	bfa8      	it	ge
 80109e0:	468b      	movge	fp, r1
 80109e2:	e7f4      	b.n	80109ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 80109e4:	2300      	movs	r3, #0
 80109e6:	2a0f      	cmp	r2, #15
 80109e8:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 8010b9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 80109ec:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80109f0:	bf8c      	ite	hi
 80109f2:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 80109f6:	f04f 0801 	movls.w	r8, #1
 80109fa:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80109fe:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8010a02:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010a06:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8010a0a:	6828      	ldr	r0, [r5, #0]
 8010a0c:	455b      	cmp	r3, fp
 8010a0e:	f340 80c7 	ble.w	8010ba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8010a12:	6803      	ldr	r3, [r0, #0]
 8010a14:	f8b7 a000 	ldrh.w	sl, [r7]
 8010a18:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010a1c:	4798      	blx	r3
 8010a1e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8010a22:	682b      	ldr	r3, [r5, #0]
 8010a24:	ebaa 0000 	sub.w	r0, sl, r0
 8010a28:	b280      	uxth	r0, r0
 8010a2a:	ebac 0e08 	sub.w	lr, ip, r8
 8010a2e:	4570      	cmp	r0, lr
 8010a30:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 8010a34:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 8010a38:	dd05      	ble.n	8010a46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8010a3a:	4558      	cmp	r0, fp
 8010a3c:	dd03      	ble.n	8010a46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8010a3e:	b901      	cbnz	r1, 8010a42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010a40:	b392      	cbz	r2, 8010aa8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 8010a42:	4658      	mov	r0, fp
 8010a44:	e006      	b.n	8010a54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 8010a46:	2900      	cmp	r1, #0
 8010a48:	d1fb      	bne.n	8010a42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010a4a:	2a00      	cmp	r2, #0
 8010a4c:	d1f9      	bne.n	8010a42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010a4e:	4558      	cmp	r0, fp
 8010a50:	bfb8      	it	lt
 8010a52:	4658      	movlt	r0, fp
 8010a54:	f9b9 3000 	ldrsh.w	r3, [r9]
 8010a58:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 8010a5c:	2200      	movs	r2, #0
 8010a5e:	ebac 0000 	sub.w	r0, ip, r0
 8010a62:	f8b6 a000 	ldrh.w	sl, [r6]
 8010a66:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010a6a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8010a6e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010a72:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010a76:	4553      	cmp	r3, sl
 8010a78:	ddc5      	ble.n	8010a06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8010a7a:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8010a7e:	ab0d      	add	r3, sp, #52	@ 0x34
 8010a80:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010a84:	6851      	ldr	r1, [r2, #4]
 8010a86:	c303      	stmia	r3!, {r0, r1}
 8010a88:	a80d      	add	r0, sp, #52	@ 0x34
 8010a8a:	a90b      	add	r1, sp, #44	@ 0x2c
 8010a8c:	f7fa f958 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 8010a90:	a80d      	add	r0, sp, #52	@ 0x34
 8010a92:	f7fa f998 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a96:	b920      	cbnz	r0, 8010aa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 8010a98:	6823      	ldr	r3, [r4, #0]
 8010a9a:	a90d      	add	r1, sp, #52	@ 0x34
 8010a9c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010a9e:	4620      	mov	r0, r4
 8010aa0:	4798      	blx	r3
 8010aa2:	f10a 0a01 	add.w	sl, sl, #1
 8010aa6:	e7e4      	b.n	8010a72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 8010aa8:	681a      	ldr	r2, [r3, #0]
 8010aaa:	2101      	movs	r1, #1
 8010aac:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 8010ab0:	4618      	mov	r0, r3
 8010ab2:	4790      	blx	r2
 8010ab4:	e7a7      	b.n	8010a06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8010ab6:	4b39      	ldr	r3, [pc, #228]	@ (8010b9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 8010ab8:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 8010b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 8010abc:	881f      	ldrh	r7, [r3, #0]
 8010abe:	2300      	movs	r3, #0
 8010ac0:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 8010ac4:	2f0f      	cmp	r7, #15
 8010ac6:	bf8c      	ite	hi
 8010ac8:	08ff      	lsrhi	r7, r7, #3
 8010aca:	2701      	movls	r7, #1
 8010acc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010ad0:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 8010ad4:	6828      	ldr	r0, [r5, #0]
 8010ad6:	4413      	add	r3, r2
 8010ad8:	b21b      	sxth	r3, r3
 8010ada:	454b      	cmp	r3, r9
 8010adc:	da60      	bge.n	8010ba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8010ade:	6803      	ldr	r3, [r0, #0]
 8010ae0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010ae4:	4798      	blx	r3
 8010ae6:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 8010aea:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010aee:	682a      	ldr	r2, [r5, #0]
 8010af0:	4473      	add	r3, lr
 8010af2:	b21b      	sxth	r3, r3
 8010af4:	eb03 0e07 	add.w	lr, r3, r7
 8010af8:	4570      	cmp	r0, lr
 8010afa:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 8010afe:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 8010b02:	da0d      	bge.n	8010b20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8010b04:	4548      	cmp	r0, r9
 8010b06:	da0b      	bge.n	8010b20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8010b08:	f1bc 0f00 	cmp.w	ip, #0
 8010b0c:	d138      	bne.n	8010b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010b0e:	2900      	cmp	r1, #0
 8010b10:	d136      	bne.n	8010b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010b12:	6813      	ldr	r3, [r2, #0]
 8010b14:	2101      	movs	r1, #1
 8010b16:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8010b1a:	4610      	mov	r0, r2
 8010b1c:	4798      	blx	r3
 8010b1e:	e7d5      	b.n	8010acc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010b20:	f1bc 0f00 	cmp.w	ip, #0
 8010b24:	d12c      	bne.n	8010b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010b26:	bb59      	cbnz	r1, 8010b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8010b28:	4548      	cmp	r0, r9
 8010b2a:	bfa8      	it	ge
 8010b2c:	4648      	movge	r0, r9
 8010b2e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8010b32:	f8b6 a000 	ldrh.w	sl, [r6]
 8010b36:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010b3a:	2100      	movs	r1, #0
 8010b3c:	1ac0      	subs	r0, r0, r3
 8010b3e:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8010b42:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8010b46:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8010b4a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010b4e:	4553      	cmp	r3, sl
 8010b50:	ddbc      	ble.n	8010acc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010b52:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8010b56:	ab0d      	add	r3, sp, #52	@ 0x34
 8010b58:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010b5c:	6851      	ldr	r1, [r2, #4]
 8010b5e:	c303      	stmia	r3!, {r0, r1}
 8010b60:	a80d      	add	r0, sp, #52	@ 0x34
 8010b62:	a90b      	add	r1, sp, #44	@ 0x2c
 8010b64:	f7fa f8ec 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 8010b68:	a80d      	add	r0, sp, #52	@ 0x34
 8010b6a:	f7fa f92c 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b6e:	b920      	cbnz	r0, 8010b7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 8010b70:	6823      	ldr	r3, [r4, #0]
 8010b72:	a90d      	add	r1, sp, #52	@ 0x34
 8010b74:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010b76:	4620      	mov	r0, r4
 8010b78:	4798      	blx	r3
 8010b7a:	f10a 0a01 	add.w	sl, sl, #1
 8010b7e:	e7e4      	b.n	8010b4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 8010b80:	4648      	mov	r0, r9
 8010b82:	e7d4      	b.n	8010b2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 8010b84:	20014040 	.word	0x20014040
 8010b88:	20014080 	.word	0x20014080
 8010b8c:	2001408c 	.word	0x2001408c
 8010b90:	20000194 	.word	0x20000194
 8010b94:	20014036 	.word	0x20014036
 8010b98:	20014032 	.word	0x20014032
 8010b9c:	20014034 	.word	0x20014034
 8010ba0:	6828      	ldr	r0, [r5, #0]
 8010ba2:	6803      	ldr	r3, [r0, #0]
 8010ba4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010ba6:	4798      	blx	r3
 8010ba8:	4ba5      	ldr	r3, [pc, #660]	@ (8010e40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 8010baa:	781b      	ldrb	r3, [r3, #0]
 8010bac:	2b00      	cmp	r3, #0
 8010bae:	f43f aed4 	beq.w	801095a <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010bb2:	2300      	movs	r3, #0
 8010bb4:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8010bb8:	4ba2      	ldr	r3, [pc, #648]	@ (8010e44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 8010bba:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 8010bbe:	881b      	ldrh	r3, [r3, #0]
 8010bc0:	a80f      	add	r0, sp, #60	@ 0x3c
 8010bc2:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 8010bc6:	42b3      	cmp	r3, r6
 8010bc8:	f4bf aec7 	bcs.w	801095a <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010bcc:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8010bd0:	2907      	cmp	r1, #7
 8010bd2:	d815      	bhi.n	8010c00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 8010bd4:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010bd8:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8010bdc:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8010be0:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8010be4:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8010be8:	1c4a      	adds	r2, r1, #1
 8010bea:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8010bee:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 8010bf2:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 8010bf6:	f8a2 e002 	strh.w	lr, [r2, #2]
 8010bfa:	f8a2 c004 	strh.w	ip, [r2, #4]
 8010bfe:	80d7      	strh	r7, [r2, #6]
 8010c00:	3301      	adds	r3, #1
 8010c02:	b29b      	uxth	r3, r3
 8010c04:	e7df      	b.n	8010bc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8010c06:	2b02      	cmp	r3, #2
 8010c08:	f040 80d1 	bne.w	8010dae <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8010c0c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010c10:	9308      	str	r3, [sp, #32]
 8010c12:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 8010c16:	9307      	str	r3, [sp, #28]
 8010c18:	6803      	ldr	r3, [r0, #0]
 8010c1a:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 8010c1e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010c22:	4798      	blx	r3
 8010c24:	4b88      	ldr	r3, [pc, #544]	@ (8010e48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 8010c26:	881b      	ldrh	r3, [r3, #0]
 8010c28:	9302      	str	r3, [sp, #8]
 8010c2a:	4b88      	ldr	r3, [pc, #544]	@ (8010e4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 8010c2c:	881e      	ldrh	r6, [r3, #0]
 8010c2e:	4b88      	ldr	r3, [pc, #544]	@ (8010e50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010c30:	781b      	ldrb	r3, [r3, #0]
 8010c32:	f10b 37ff 	add.w	r7, fp, #4294967295
 8010c36:	2b01      	cmp	r3, #1
 8010c38:	bf1c      	itt	ne
 8010c3a:	9b02      	ldrne	r3, [sp, #8]
 8010c3c:	9602      	strne	r6, [sp, #8]
 8010c3e:	b2bf      	uxth	r7, r7
 8010c40:	fa0f f887 	sxth.w	r8, r7
 8010c44:	4682      	mov	sl, r0
 8010c46:	f04f 0000 	mov.w	r0, #0
 8010c4a:	bf18      	it	ne
 8010c4c:	461e      	movne	r6, r3
 8010c4e:	f7ef ffe7 	bl	8000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010c52:	fb96 fbfb 	sdiv	fp, r6, fp
 8010c56:	fb0b f808 	mul.w	r8, fp, r8
 8010c5a:	45c2      	cmp	sl, r8
 8010c5c:	da0c      	bge.n	8010c78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 8010c5e:	6828      	ldr	r0, [r5, #0]
 8010c60:	6803      	ldr	r3, [r0, #0]
 8010c62:	210a      	movs	r1, #10
 8010c64:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010c68:	4798      	blx	r3
 8010c6a:	6828      	ldr	r0, [r5, #0]
 8010c6c:	6803      	ldr	r3, [r0, #0]
 8010c6e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010c72:	4798      	blx	r3
 8010c74:	4682      	mov	sl, r0
 8010c76:	e7f0      	b.n	8010c5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 8010c78:	2000      	movs	r0, #0
 8010c7a:	f7ef fffb 	bl	8000c74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010c7e:	fa1f f38b 	uxth.w	r3, fp
 8010c82:	fb17 f703 	smulbb	r7, r7, r3
 8010c86:	9304      	str	r3, [sp, #16]
 8010c88:	b2bb      	uxth	r3, r7
 8010c8a:	9305      	str	r3, [sp, #20]
 8010c8c:	f04f 0800 	mov.w	r8, #0
 8010c90:	0973      	lsrs	r3, r6, #5
 8010c92:	4f70      	ldr	r7, [pc, #448]	@ (8010e54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 8010c94:	9306      	str	r3, [sp, #24]
 8010c96:	4645      	mov	r5, r8
 8010c98:	42b5      	cmp	r5, r6
 8010c9a:	d085      	beq.n	8010ba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010c9c:	6838      	ldr	r0, [r7, #0]
 8010c9e:	6803      	ldr	r3, [r0, #0]
 8010ca0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010ca4:	4798      	blx	r3
 8010ca6:	4582      	cmp	sl, r0
 8010ca8:	4681      	mov	r9, r0
 8010caa:	d907      	bls.n	8010cbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 8010cac:	f1b8 0f00 	cmp.w	r8, #0
 8010cb0:	d007      	beq.n	8010cc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 8010cb2:	6838      	ldr	r0, [r7, #0]
 8010cb4:	6803      	ldr	r3, [r0, #0]
 8010cb6:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8010cba:	e774      	b.n	8010ba6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8010cbc:	f1b8 0f00 	cmp.w	r8, #0
 8010cc0:	d003      	beq.n	8010cca <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 8010cc2:	454d      	cmp	r5, r9
 8010cc4:	d3f5      	bcc.n	8010cb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 8010cc6:	f04f 0801 	mov.w	r8, #1
 8010cca:	9a04      	ldr	r2, [sp, #16]
 8010ccc:	fb95 f3fb 	sdiv	r3, r5, fp
 8010cd0:	9303      	str	r3, [sp, #12]
 8010cd2:	3301      	adds	r3, #1
 8010cd4:	fb13 f302 	smulbb	r3, r3, r2
 8010cd8:	b299      	uxth	r1, r3
 8010cda:	f1b8 0f00 	cmp.w	r8, #0
 8010cde:	d04e      	beq.n	8010d7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 8010ce0:	eb09 030b 	add.w	r3, r9, fp
 8010ce4:	42b3      	cmp	r3, r6
 8010ce6:	bfa8      	it	ge
 8010ce8:	4633      	movge	r3, r6
 8010cea:	9807      	ldr	r0, [sp, #28]
 8010cec:	b29b      	uxth	r3, r3
 8010cee:	428b      	cmp	r3, r1
 8010cf0:	bf94      	ite	ls
 8010cf2:	ebc5 0203 	rsbls	r2, r5, r3
 8010cf6:	ebc5 0201 	rsbhi	r2, r5, r1
 8010cfa:	4282      	cmp	r2, r0
 8010cfc:	bfa8      	it	ge
 8010cfe:	4602      	movge	r2, r0
 8010d00:	9808      	ldr	r0, [sp, #32]
 8010d02:	fa1f fa82 	uxth.w	sl, r2
 8010d06:	4582      	cmp	sl, r0
 8010d08:	d205      	bcs.n	8010d16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8010d0a:	fa15 f082 	uxtah	r0, r5, r2
 8010d0e:	4286      	cmp	r6, r0
 8010d10:	d001      	beq.n	8010d16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8010d12:	4299      	cmp	r1, r3
 8010d14:	d240      	bcs.n	8010d98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 8010d16:	2001      	movs	r0, #1
 8010d18:	9209      	str	r2, [sp, #36]	@ 0x24
 8010d1a:	f7ef ff81 	bl	8000c20 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010d1e:	6838      	ldr	r0, [r7, #0]
 8010d20:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8010d24:	6803      	ldr	r3, [r0, #0]
 8010d26:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010d2a:	4798      	blx	r3
 8010d2c:	4b48      	ldr	r3, [pc, #288]	@ (8010e50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010d2e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010d30:	781b      	ldrb	r3, [r3, #0]
 8010d32:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8010d36:	2b01      	cmp	r3, #1
 8010d38:	b212      	sxth	r2, r2
 8010d3a:	f04f 0000 	mov.w	r0, #0
 8010d3e:	d122      	bne.n	8010d86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 8010d40:	1b73      	subs	r3, r6, r5
 8010d42:	eba3 030a 	sub.w	r3, r3, sl
 8010d46:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8010d4a:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 8010d4e:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8010d52:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 8010d56:	6823      	ldr	r3, [r4, #0]
 8010d58:	a90d      	add	r1, sp, #52	@ 0x34
 8010d5a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010d5c:	4620      	mov	r0, r4
 8010d5e:	4798      	blx	r3
 8010d60:	6838      	ldr	r0, [r7, #0]
 8010d62:	9b03      	ldr	r3, [sp, #12]
 8010d64:	4259      	negs	r1, r3
 8010d66:	6803      	ldr	r3, [r0, #0]
 8010d68:	b209      	sxth	r1, r1
 8010d6a:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010d6e:	4798      	blx	r3
 8010d70:	4455      	add	r5, sl
 8010d72:	2001      	movs	r0, #1
 8010d74:	b2ad      	uxth	r5, r5
 8010d76:	f7ef ff7d 	bl	8000c74 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010d7a:	46ca      	mov	sl, r9
 8010d7c:	e78c      	b.n	8010c98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 8010d7e:	9b05      	ldr	r3, [sp, #20]
 8010d80:	eba9 0303 	sub.w	r3, r9, r3
 8010d84:	e7b1      	b.n	8010cea <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8010d86:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8010d8a:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 8010d8e:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 8010d92:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8010d96:	e7de      	b.n	8010d56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 8010d98:	6838      	ldr	r0, [r7, #0]
 8010d9a:	6803      	ldr	r3, [r0, #0]
 8010d9c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010d9e:	4798      	blx	r3
 8010da0:	6838      	ldr	r0, [r7, #0]
 8010da2:	9906      	ldr	r1, [sp, #24]
 8010da4:	6803      	ldr	r3, [r0, #0]
 8010da6:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010daa:	4798      	blx	r3
 8010dac:	e7e5      	b.n	8010d7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 8010dae:	2b03      	cmp	r3, #3
 8010db0:	f040 8130 	bne.w	8011014 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 8010db4:	4b26      	ldr	r3, [pc, #152]	@ (8010e50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010db6:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 8010dba:	781b      	ldrb	r3, [r3, #0]
 8010dbc:	2b01      	cmp	r3, #1
 8010dbe:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8010dc2:	f000 8093 	beq.w	8010eec <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010dc6:	8832      	ldrh	r2, [r6, #0]
 8010dc8:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8010dcc:	3201      	adds	r2, #1
 8010dce:	b292      	uxth	r2, r2
 8010dd0:	2900      	cmp	r1, #0
 8010dd2:	f43f aee9 	beq.w	8010ba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010dd6:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 8010dda:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 8010dde:	441d      	add	r5, r3
 8010de0:	b22d      	sxth	r5, r5
 8010de2:	4694      	mov	ip, r2
 8010de4:	f04f 0800 	mov.w	r8, #0
 8010de8:	fa1f f38c 	uxth.w	r3, ip
 8010dec:	4299      	cmp	r1, r3
 8010dee:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8010df2:	f240 80ba 	bls.w	8010f6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 8010df6:	4427      	add	r7, r4
 8010df8:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8010dfc:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8010e00:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8010e04:	4283      	cmp	r3, r0
 8010e06:	f340 809c 	ble.w	8010f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 8010e0a:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 8010e0e:	4405      	add	r5, r0
 8010e10:	b22d      	sxth	r5, r5
 8010e12:	429d      	cmp	r5, r3
 8010e14:	bfa8      	it	ge
 8010e16:	461d      	movge	r5, r3
 8010e18:	46e0      	mov	r8, ip
 8010e1a:	f10c 0c01 	add.w	ip, ip, #1
 8010e1e:	e7e3      	b.n	8010de8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 8010e20:	d10a      	bne.n	8010e38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 8010e22:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 8010e26:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8010e2a:	4562      	cmp	r2, ip
 8010e2c:	bfb8      	it	lt
 8010e2e:	4662      	movlt	r2, ip
 8010e30:	4288      	cmp	r0, r1
 8010e32:	bfb8      	it	lt
 8010e34:	4698      	movlt	r8, r3
 8010e36:	e082      	b.n	8010f3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010e38:	428a      	cmp	r2, r1
 8010e3a:	bfb8      	it	lt
 8010e3c:	460a      	movlt	r2, r1
 8010e3e:	e07e      	b.n	8010f3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010e40:	2001403c 	.word	0x2001403c
 8010e44:	20000194 	.word	0x20000194
 8010e48:	20014034 	.word	0x20014034
 8010e4c:	20014032 	.word	0x20014032
 8010e50:	20014036 	.word	0x20014036
 8010e54:	20014040 	.word	0x20014040
 8010e58:	19e1      	adds	r1, r4, r7
 8010e5a:	ab0d      	add	r3, sp, #52	@ 0x34
 8010e5c:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8010e60:	6849      	ldr	r1, [r1, #4]
 8010e62:	c303      	stmia	r3!, {r0, r1}
 8010e64:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8010e68:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010e6c:	454b      	cmp	r3, r9
 8010e6e:	bfb8      	it	lt
 8010e70:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 8010e74:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8010e78:	440b      	add	r3, r1
 8010e7a:	1a9b      	subs	r3, r3, r2
 8010e7c:	a80d      	add	r0, sp, #52	@ 0x34
 8010e7e:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010e82:	f7fe fecd 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010e86:	a80d      	add	r0, sp, #52	@ 0x34
 8010e88:	f7f9 ff9d 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010e8c:	bb70      	cbnz	r0, 8010eec <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010e8e:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 8010e92:	6828      	ldr	r0, [r5, #0]
 8010e94:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8010e98:	f8d0 e000 	ldr.w	lr, [r0]
 8010e9c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8010ea0:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010ea4:	45cc      	cmp	ip, r9
 8010ea6:	bfd4      	ite	le
 8010ea8:	fa1f fc8c 	uxthle.w	ip, ip
 8010eac:	fa1f fc89 	uxthgt.w	ip, r9
 8010eb0:	f8cd c000 	str.w	ip, [sp]
 8010eb4:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 8010eb8:	47d8      	blx	fp
 8010eba:	4683      	mov	fp, r0
 8010ebc:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010ec0:	a80d      	add	r0, sp, #52	@ 0x34
 8010ec2:	f7fe fe93 	bl	800fbec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010ec6:	6823      	ldr	r3, [r4, #0]
 8010ec8:	4427      	add	r7, r4
 8010eca:	4620      	mov	r0, r4
 8010ecc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010ece:	a90d      	add	r1, sp, #52	@ 0x34
 8010ed0:	4798      	blx	r3
 8010ed2:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 8010ed6:	eba0 000b 	sub.w	r0, r0, fp
 8010eda:	b200      	sxth	r0, r0
 8010edc:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 8010ee0:	b920      	cbnz	r0, 8010eec <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010ee2:	fa1f f188 	uxth.w	r1, r8
 8010ee6:	4650      	mov	r0, sl
 8010ee8:	f7ff f93e 	bl	8010168 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010eec:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8010ef0:	f1bb 0f00 	cmp.w	fp, #0
 8010ef4:	f43f ae58 	beq.w	8010ba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010ef8:	8833      	ldrh	r3, [r6, #0]
 8010efa:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8010efe:	3301      	adds	r3, #1
 8010f00:	b29b      	uxth	r3, r3
 8010f02:	f04f 0800 	mov.w	r8, #0
 8010f06:	b299      	uxth	r1, r3
 8010f08:	458b      	cmp	fp, r1
 8010f0a:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8010f0e:	d9a3      	bls.n	8010e58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 8010f10:	4427      	add	r7, r4
 8010f12:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8010f16:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 8010f1a:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 8010f1e:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8010f22:	4408      	add	r0, r1
 8010f24:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8010f28:	4461      	add	r1, ip
 8010f2a:	b200      	sxth	r0, r0
 8010f2c:	b209      	sxth	r1, r1
 8010f2e:	4288      	cmp	r0, r1
 8010f30:	f6bf af76 	bge.w	8010e20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 8010f34:	4584      	cmp	ip, r0
 8010f36:	4662      	mov	r2, ip
 8010f38:	4698      	mov	r8, r3
 8010f3a:	bfb8      	it	lt
 8010f3c:	4602      	movlt	r2, r0
 8010f3e:	3301      	adds	r3, #1
 8010f40:	e7e1      	b.n	8010f06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 8010f42:	d10e      	bne.n	8010f62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 8010f44:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8010f48:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8010f4c:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8010f50:	4473      	add	r3, lr
 8010f52:	b21b      	sxth	r3, r3
 8010f54:	429d      	cmp	r5, r3
 8010f56:	bfa8      	it	ge
 8010f58:	461d      	movge	r5, r3
 8010f5a:	4287      	cmp	r7, r0
 8010f5c:	bfb8      	it	lt
 8010f5e:	46e0      	movlt	r8, ip
 8010f60:	e75b      	b.n	8010e1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8010f62:	4285      	cmp	r5, r0
 8010f64:	bfa8      	it	ge
 8010f66:	4605      	movge	r5, r0
 8010f68:	e757      	b.n	8010e1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8010f6a:	eb0a 0007 	add.w	r0, sl, r7
 8010f6e:	4427      	add	r7, r4
 8010f70:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8010f74:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8010f78:	45cb      	cmp	fp, r9
 8010f7a:	bfbe      	ittt	lt
 8010f7c:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 8010f80:	445d      	addlt	r5, fp
 8010f82:	b22d      	sxthlt	r5, r5
 8010f84:	f7f9 ff1f 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010f88:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8010f8c:	2800      	cmp	r0, #0
 8010f8e:	f47f af1f 	bne.w	8010dd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 8010f92:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8010f96:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010f9a:	482b      	ldr	r0, [pc, #172]	@ (8011048 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 8010f9c:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8010fa0:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8010fa4:	6800      	ldr	r0, [r0, #0]
 8010fa6:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 8010faa:	1aad      	subs	r5, r5, r2
 8010fac:	454d      	cmp	r5, r9
 8010fae:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8010fb2:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010fb6:	bfa8      	it	ge
 8010fb8:	464d      	movge	r5, r9
 8010fba:	f8d0 c000 	ldr.w	ip, [r0]
 8010fbe:	b2ad      	uxth	r5, r5
 8010fc0:	fa1f fb8b 	uxth.w	fp, fp
 8010fc4:	455d      	cmp	r5, fp
 8010fc6:	bf94      	ite	ls
 8010fc8:	9500      	strls	r5, [sp, #0]
 8010fca:	f8cd b000 	strhi.w	fp, [sp]
 8010fce:	b292      	uxth	r2, r2
 8010fd0:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 8010fd4:	b29b      	uxth	r3, r3
 8010fd6:	b289      	uxth	r1, r1
 8010fd8:	47a8      	blx	r5
 8010fda:	6823      	ldr	r3, [r4, #0]
 8010fdc:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010fe0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010fe2:	a90d      	add	r1, sp, #52	@ 0x34
 8010fe4:	4620      	mov	r0, r4
 8010fe6:	4798      	blx	r3
 8010fe8:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8010fec:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8010ff0:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8010ff4:	1a5b      	subs	r3, r3, r1
 8010ff6:	440a      	add	r2, r1
 8010ff8:	b21b      	sxth	r3, r3
 8010ffa:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8010ffe:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8011002:	2b00      	cmp	r3, #0
 8011004:	f47f aedf 	bne.w	8010dc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8011008:	fa1f f188 	uxth.w	r1, r8
 801100c:	4650      	mov	r0, sl
 801100e:	f7ff f8ab 	bl	8010168 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011012:	e6d8      	b.n	8010dc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8011014:	8835      	ldrh	r5, [r6, #0]
 8011016:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801101a:	42ab      	cmp	r3, r5
 801101c:	f67f adc4 	bls.w	8010ba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8011020:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011024:	ab0d      	add	r3, sp, #52	@ 0x34
 8011026:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801102a:	6851      	ldr	r1, [r2, #4]
 801102c:	c303      	stmia	r3!, {r0, r1}
 801102e:	a80d      	add	r0, sp, #52	@ 0x34
 8011030:	f7f9 fec9 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011034:	b920      	cbnz	r0, 8011040 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 8011036:	6823      	ldr	r3, [r4, #0]
 8011038:	a90d      	add	r1, sp, #52	@ 0x34
 801103a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801103c:	4620      	mov	r0, r4
 801103e:	4798      	blx	r3
 8011040:	3501      	adds	r5, #1
 8011042:	b2ad      	uxth	r5, r5
 8011044:	e7e7      	b.n	8011016 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 8011046:	bf00      	nop
 8011048:	20014040 	.word	0x20014040

0801104c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801104c:	4b03      	ldr	r3, [pc, #12]	@ (801105c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801104e:	2200      	movs	r2, #0
 8011050:	801a      	strh	r2, [r3, #0]
 8011052:	805a      	strh	r2, [r3, #2]
 8011054:	809a      	strh	r2, [r3, #4]
 8011056:	80da      	strh	r2, [r3, #6]
 8011058:	4770      	bx	lr
 801105a:	bf00      	nop
 801105c:	2001408c 	.word	0x2001408c

08011060 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011064:	4606      	mov	r6, r0
 8011066:	b09d      	sub	sp, #116	@ 0x74
 8011068:	a803      	add	r0, sp, #12
 801106a:	4614      	mov	r4, r2
 801106c:	468a      	mov	sl, r1
 801106e:	461d      	mov	r5, r3
 8011070:	f001 f9b0 	bl	80123d4 <_ZN8touchgfx12TextProviderC1Ev>
 8011074:	6833      	ldr	r3, [r6, #0]
 8011076:	4630      	mov	r0, r6
 8011078:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801107a:	4798      	blx	r3
 801107c:	6833      	ldr	r3, [r6, #0]
 801107e:	4607      	mov	r7, r0
 8011080:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011082:	4630      	mov	r0, r6
 8011084:	4798      	blx	r3
 8011086:	462a      	mov	r2, r5
 8011088:	9000      	str	r0, [sp, #0]
 801108a:	4621      	mov	r1, r4
 801108c:	463b      	mov	r3, r7
 801108e:	a803      	add	r0, sp, #12
 8011090:	f001 f9f3 	bl	801247a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011094:	2500      	movs	r5, #0
 8011096:	462c      	mov	r4, r5
 8011098:	46a9      	mov	r9, r5
 801109a:	46a8      	mov	r8, r5
 801109c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 80110a0:	2300      	movs	r3, #0
 80110a2:	9302      	str	r3, [sp, #8]
 80110a4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80110a8:	429c      	cmp	r4, r3
 80110aa:	d002      	beq.n	80110b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80110ac:	455c      	cmp	r4, fp
 80110ae:	bf18      	it	ne
 80110b0:	4625      	movne	r5, r4
 80110b2:	ab02      	add	r3, sp, #8
 80110b4:	4632      	mov	r2, r6
 80110b6:	4651      	mov	r1, sl
 80110b8:	a803      	add	r0, sp, #12
 80110ba:	f001 fcf9 	bl	8012ab0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80110be:	4604      	mov	r4, r0
 80110c0:	b108      	cbz	r0, 80110c6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80110c2:	280a      	cmp	r0, #10
 80110c4:	d10a      	bne.n	80110dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80110c6:	45c1      	cmp	r9, r8
 80110c8:	bf38      	it	cc
 80110ca:	46c1      	movcc	r9, r8
 80110cc:	f04f 0800 	mov.w	r8, #0
 80110d0:	2c00      	cmp	r4, #0
 80110d2:	d1e5      	bne.n	80110a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80110d4:	4648      	mov	r0, r9
 80110d6:	b01d      	add	sp, #116	@ 0x74
 80110d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110dc:	9a02      	ldr	r2, [sp, #8]
 80110de:	2a00      	cmp	r2, #0
 80110e0:	d0de      	beq.n	80110a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80110e2:	7b57      	ldrb	r7, [r2, #13]
 80110e4:	6833      	ldr	r3, [r6, #0]
 80110e6:	8894      	ldrh	r4, [r2, #4]
 80110e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80110ea:	007f      	lsls	r7, r7, #1
 80110ec:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 80110f0:	7a97      	ldrb	r7, [r2, #10]
 80110f2:	4629      	mov	r1, r5
 80110f4:	4307      	orrs	r7, r0
 80110f6:	4630      	mov	r0, r6
 80110f8:	4798      	blx	r3
 80110fa:	4438      	add	r0, r7
 80110fc:	4480      	add	r8, r0
 80110fe:	fa1f f888 	uxth.w	r8, r8
 8011102:	e7e5      	b.n	80110d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011104 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011104:	b508      	push	{r3, lr}
 8011106:	6803      	ldr	r3, [r0, #0]
 8011108:	68db      	ldr	r3, [r3, #12]
 801110a:	4798      	blx	r3
 801110c:	b128      	cbz	r0, 801111a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801110e:	7b43      	ldrb	r3, [r0, #13]
 8011110:	7a80      	ldrb	r0, [r0, #10]
 8011112:	005b      	lsls	r3, r3, #1
 8011114:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011118:	4318      	orrs	r0, r3
 801111a:	bd08      	pop	{r3, pc}

0801111c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801111c:	b40e      	push	{r1, r2, r3}
 801111e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011120:	b09e      	sub	sp, #120	@ 0x78
 8011122:	ab23      	add	r3, sp, #140	@ 0x8c
 8011124:	4605      	mov	r5, r0
 8011126:	f853 4b04 	ldr.w	r4, [r3], #4
 801112a:	9303      	str	r3, [sp, #12]
 801112c:	a805      	add	r0, sp, #20
 801112e:	f001 f951 	bl	80123d4 <_ZN8touchgfx12TextProviderC1Ev>
 8011132:	682b      	ldr	r3, [r5, #0]
 8011134:	4628      	mov	r0, r5
 8011136:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011138:	4798      	blx	r3
 801113a:	682b      	ldr	r3, [r5, #0]
 801113c:	4606      	mov	r6, r0
 801113e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011140:	4628      	mov	r0, r5
 8011142:	4798      	blx	r3
 8011144:	4633      	mov	r3, r6
 8011146:	ae1e      	add	r6, sp, #120	@ 0x78
 8011148:	4621      	mov	r1, r4
 801114a:	9000      	str	r0, [sp, #0]
 801114c:	9a03      	ldr	r2, [sp, #12]
 801114e:	2400      	movs	r4, #0
 8011150:	a805      	add	r0, sp, #20
 8011152:	f001 f992 	bl	801247a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011156:	f846 4d68 	str.w	r4, [r6, #-104]!
 801115a:	462a      	mov	r2, r5
 801115c:	4633      	mov	r3, r6
 801115e:	4621      	mov	r1, r4
 8011160:	a805      	add	r0, sp, #20
 8011162:	f001 fca5 	bl	8012ab0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011166:	b1f0      	cbz	r0, 80111a6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011168:	280a      	cmp	r0, #10
 801116a:	d018      	beq.n	801119e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801116c:	9f04      	ldr	r7, [sp, #16]
 801116e:	b1b7      	cbz	r7, 801119e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011170:	7b78      	ldrb	r0, [r7, #13]
 8011172:	7a3b      	ldrb	r3, [r7, #8]
 8011174:	88ea      	ldrh	r2, [r5, #6]
 8011176:	00c1      	lsls	r1, r0, #3
 8011178:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801117c:	4319      	orrs	r1, r3
 801117e:	0643      	lsls	r3, r0, #25
 8011180:	bf44      	itt	mi
 8011182:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8011186:	b219      	sxthmi	r1, r3
 8011188:	0100      	lsls	r0, r0, #4
 801118a:	79fb      	ldrb	r3, [r7, #7]
 801118c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8011190:	4303      	orrs	r3, r0
 8011192:	4413      	add	r3, r2
 8011194:	1a5b      	subs	r3, r3, r1
 8011196:	b21b      	sxth	r3, r3
 8011198:	429c      	cmp	r4, r3
 801119a:	bfb8      	it	lt
 801119c:	461c      	movlt	r4, r3
 801119e:	4633      	mov	r3, r6
 80111a0:	462a      	mov	r2, r5
 80111a2:	2100      	movs	r1, #0
 80111a4:	e7dc      	b.n	8011160 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80111a6:	b2a0      	uxth	r0, r4
 80111a8:	b01e      	add	sp, #120	@ 0x78
 80111aa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80111ae:	b003      	add	sp, #12
 80111b0:	4770      	bx	lr

080111b2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80111b2:	7a43      	ldrb	r3, [r0, #9]
 80111b4:	8880      	ldrh	r0, [r0, #4]
 80111b6:	4418      	add	r0, r3
 80111b8:	b280      	uxth	r0, r0
 80111ba:	4770      	bx	lr

080111bc <_ZNK8touchgfx4Font13getFontHeightEv>:
 80111bc:	6803      	ldr	r3, [r0, #0]
 80111be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80111c0:	4718      	bx	r3

080111c2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80111c2:	b40e      	push	{r1, r2, r3}
 80111c4:	b570      	push	{r4, r5, r6, lr}
 80111c6:	b09d      	sub	sp, #116	@ 0x74
 80111c8:	ab21      	add	r3, sp, #132	@ 0x84
 80111ca:	4604      	mov	r4, r0
 80111cc:	f853 5b04 	ldr.w	r5, [r3], #4
 80111d0:	9302      	str	r3, [sp, #8]
 80111d2:	a803      	add	r0, sp, #12
 80111d4:	f001 f8fe 	bl	80123d4 <_ZN8touchgfx12TextProviderC1Ev>
 80111d8:	6823      	ldr	r3, [r4, #0]
 80111da:	4620      	mov	r0, r4
 80111dc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80111de:	4798      	blx	r3
 80111e0:	6823      	ldr	r3, [r4, #0]
 80111e2:	4606      	mov	r6, r0
 80111e4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80111e6:	4620      	mov	r0, r4
 80111e8:	4798      	blx	r3
 80111ea:	4633      	mov	r3, r6
 80111ec:	9000      	str	r0, [sp, #0]
 80111ee:	9a02      	ldr	r2, [sp, #8]
 80111f0:	4629      	mov	r1, r5
 80111f2:	a803      	add	r0, sp, #12
 80111f4:	f001 f941 	bl	801247a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80111f8:	a803      	add	r0, sp, #12
 80111fa:	f001 fcdb 	bl	8012bb4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80111fe:	2401      	movs	r4, #1
 8011200:	b2a3      	uxth	r3, r4
 8011202:	b140      	cbz	r0, 8011216 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011204:	280a      	cmp	r0, #10
 8011206:	bf08      	it	eq
 8011208:	3301      	addeq	r3, #1
 801120a:	a803      	add	r0, sp, #12
 801120c:	bf08      	it	eq
 801120e:	b21c      	sxtheq	r4, r3
 8011210:	f001 fcd0 	bl	8012bb4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011214:	e7f4      	b.n	8011200 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011216:	4618      	mov	r0, r3
 8011218:	b01d      	add	sp, #116	@ 0x74
 801121a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801121e:	b003      	add	sp, #12
 8011220:	4770      	bx	lr

08011222 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011222:	b40e      	push	{r1, r2, r3}
 8011224:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011226:	b09e      	sub	sp, #120	@ 0x78
 8011228:	ab23      	add	r3, sp, #140	@ 0x8c
 801122a:	4604      	mov	r4, r0
 801122c:	f853 5b04 	ldr.w	r5, [r3], #4
 8011230:	9303      	str	r3, [sp, #12]
 8011232:	a805      	add	r0, sp, #20
 8011234:	f001 f8ce 	bl	80123d4 <_ZN8touchgfx12TextProviderC1Ev>
 8011238:	6823      	ldr	r3, [r4, #0]
 801123a:	4620      	mov	r0, r4
 801123c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801123e:	4798      	blx	r3
 8011240:	6823      	ldr	r3, [r4, #0]
 8011242:	4606      	mov	r6, r0
 8011244:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011246:	4620      	mov	r0, r4
 8011248:	4798      	blx	r3
 801124a:	4633      	mov	r3, r6
 801124c:	4629      	mov	r1, r5
 801124e:	9000      	str	r0, [sp, #0]
 8011250:	9a03      	ldr	r2, [sp, #12]
 8011252:	a805      	add	r0, sp, #20
 8011254:	ad1e      	add	r5, sp, #120	@ 0x78
 8011256:	f001 f910 	bl	801247a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801125a:	2100      	movs	r1, #0
 801125c:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011260:	4622      	mov	r2, r4
 8011262:	462b      	mov	r3, r5
 8011264:	a805      	add	r0, sp, #20
 8011266:	f001 fc23 	bl	8012ab0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801126a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801126e:	b1d8      	cbz	r0, 80112a8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8011270:	280a      	cmp	r0, #10
 8011272:	d012      	beq.n	801129a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011274:	9804      	ldr	r0, [sp, #16]
 8011276:	b180      	cbz	r0, 801129a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011278:	7b47      	ldrb	r7, [r0, #13]
 801127a:	88e2      	ldrh	r2, [r4, #6]
 801127c:	00fb      	lsls	r3, r7, #3
 801127e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011282:	7a03      	ldrb	r3, [r0, #8]
 8011284:	430b      	orrs	r3, r1
 8011286:	0679      	lsls	r1, r7, #25
 8011288:	bf44      	itt	mi
 801128a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801128e:	b21b      	sxthmi	r3, r3
 8011290:	1ad3      	subs	r3, r2, r3
 8011292:	b21b      	sxth	r3, r3
 8011294:	429e      	cmp	r6, r3
 8011296:	bfa8      	it	ge
 8011298:	461e      	movge	r6, r3
 801129a:	462b      	mov	r3, r5
 801129c:	4622      	mov	r2, r4
 801129e:	2100      	movs	r1, #0
 80112a0:	a805      	add	r0, sp, #20
 80112a2:	f001 fc05 	bl	8012ab0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80112a6:	e7e2      	b.n	801126e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80112a8:	4630      	mov	r0, r6
 80112aa:	b01e      	add	sp, #120	@ 0x78
 80112ac:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80112b0:	b003      	add	sp, #12
 80112b2:	4770      	bx	lr

080112b4 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80112b4:	b513      	push	{r0, r1, r4, lr}
 80112b6:	6803      	ldr	r3, [r0, #0]
 80112b8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80112bc:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80112c0:	f8ad 1004 	strh.w	r1, [sp, #4]
 80112c4:	2400      	movs	r4, #0
 80112c6:	9400      	str	r4, [sp, #0]
 80112c8:	f8ad 2006 	strh.w	r2, [sp, #6]
 80112cc:	691b      	ldr	r3, [r3, #16]
 80112ce:	4669      	mov	r1, sp
 80112d0:	4798      	blx	r3
 80112d2:	b002      	add	sp, #8
 80112d4:	bd10      	pop	{r4, pc}

080112d6 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80112d6:	b538      	push	{r3, r4, r5, lr}
 80112d8:	680b      	ldr	r3, [r1, #0]
 80112da:	460c      	mov	r4, r1
 80112dc:	68db      	ldr	r3, [r3, #12]
 80112de:	4605      	mov	r5, r0
 80112e0:	4798      	blx	r3
 80112e2:	6823      	ldr	r3, [r4, #0]
 80112e4:	4620      	mov	r0, r4
 80112e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80112e8:	4629      	mov	r1, r5
 80112ea:	4798      	blx	r3
 80112ec:	4628      	mov	r0, r5
 80112ee:	bd38      	pop	{r3, r4, r5, pc}

080112f0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80112f0:	b410      	push	{r4}
 80112f2:	880a      	ldrh	r2, [r1, #0]
 80112f4:	8884      	ldrh	r4, [r0, #4]
 80112f6:	4422      	add	r2, r4
 80112f8:	800a      	strh	r2, [r1, #0]
 80112fa:	88c4      	ldrh	r4, [r0, #6]
 80112fc:	884a      	ldrh	r2, [r1, #2]
 80112fe:	4422      	add	r2, r4
 8011300:	804a      	strh	r2, [r1, #2]
 8011302:	6940      	ldr	r0, [r0, #20]
 8011304:	b120      	cbz	r0, 8011310 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8011306:	6803      	ldr	r3, [r0, #0]
 8011308:	f85d 4b04 	ldr.w	r4, [sp], #4
 801130c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801130e:	4718      	bx	r3
 8011310:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011314:	4770      	bx	lr

08011316 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8011316:	b570      	push	{r4, r5, r6, lr}
 8011318:	8882      	ldrh	r2, [r0, #4]
 801131a:	880b      	ldrh	r3, [r1, #0]
 801131c:	4413      	add	r3, r2
 801131e:	800b      	strh	r3, [r1, #0]
 8011320:	88c2      	ldrh	r2, [r0, #6]
 8011322:	884b      	ldrh	r3, [r1, #2]
 8011324:	460c      	mov	r4, r1
 8011326:	4413      	add	r3, r2
 8011328:	804b      	strh	r3, [r1, #2]
 801132a:	4605      	mov	r5, r0
 801132c:	1d01      	adds	r1, r0, #4
 801132e:	4620      	mov	r0, r4
 8011330:	f7f9 fd06 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 8011334:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011338:	2b00      	cmp	r3, #0
 801133a:	dd0b      	ble.n	8011354 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801133c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011340:	2b00      	cmp	r3, #0
 8011342:	dd07      	ble.n	8011354 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011344:	6968      	ldr	r0, [r5, #20]
 8011346:	b128      	cbz	r0, 8011354 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011348:	6803      	ldr	r3, [r0, #0]
 801134a:	4621      	mov	r1, r4
 801134c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801134e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011352:	4718      	bx	r3
 8011354:	bd70      	pop	{r4, r5, r6, pc}
	...

08011358 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011358:	b570      	push	{r4, r5, r6, lr}
 801135a:	8882      	ldrh	r2, [r0, #4]
 801135c:	880b      	ldrh	r3, [r1, #0]
 801135e:	4413      	add	r3, r2
 8011360:	800b      	strh	r3, [r1, #0]
 8011362:	88c2      	ldrh	r2, [r0, #6]
 8011364:	884b      	ldrh	r3, [r1, #2]
 8011366:	460c      	mov	r4, r1
 8011368:	4413      	add	r3, r2
 801136a:	804b      	strh	r3, [r1, #2]
 801136c:	4605      	mov	r5, r0
 801136e:	1d01      	adds	r1, r0, #4
 8011370:	4620      	mov	r0, r4
 8011372:	f7f9 fce5 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 8011376:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801137a:	2b00      	cmp	r3, #0
 801137c:	dd19      	ble.n	80113b2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801137e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011382:	2b00      	cmp	r3, #0
 8011384:	dd15      	ble.n	80113b2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011386:	6968      	ldr	r0, [r5, #20]
 8011388:	b128      	cbz	r0, 8011396 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801138a:	6803      	ldr	r3, [r0, #0]
 801138c:	4621      	mov	r1, r4
 801138e:	691b      	ldr	r3, [r3, #16]
 8011390:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011394:	4718      	bx	r3
 8011396:	4b07      	ldr	r3, [pc, #28]	@ (80113b4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8011398:	681b      	ldr	r3, [r3, #0]
 801139a:	3304      	adds	r3, #4
 801139c:	429d      	cmp	r5, r3
 801139e:	d108      	bne.n	80113b2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80113a0:	f7fe fdd6 	bl	800ff50 <_ZN8touchgfx11Application11getInstanceEv>
 80113a4:	6803      	ldr	r3, [r0, #0]
 80113a6:	6821      	ldr	r1, [r4, #0]
 80113a8:	6862      	ldr	r2, [r4, #4]
 80113aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80113ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113b0:	4718      	bx	r3
 80113b2:	bd70      	pop	{r4, r5, r6, pc}
 80113b4:	20014084 	.word	0x20014084

080113b8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80113b8:	b570      	push	{r4, r5, r6, lr}
 80113ba:	4604      	mov	r4, r0
 80113bc:	4616      	mov	r6, r2
 80113be:	460d      	mov	r5, r1
 80113c0:	b901      	cbnz	r1, 80113c4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80113c2:	b192      	cbz	r2, 80113ea <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80113c4:	6823      	ldr	r3, [r4, #0]
 80113c6:	4620      	mov	r0, r4
 80113c8:	699b      	ldr	r3, [r3, #24]
 80113ca:	4798      	blx	r3
 80113cc:	88e2      	ldrh	r2, [r4, #6]
 80113ce:	88a1      	ldrh	r1, [r4, #4]
 80113d0:	4432      	add	r2, r6
 80113d2:	4429      	add	r1, r5
 80113d4:	4620      	mov	r0, r4
 80113d6:	b212      	sxth	r2, r2
 80113d8:	b209      	sxth	r1, r1
 80113da:	f7f9 ff95 	bl	800b308 <_ZN8touchgfx8Drawable5setXYEss>
 80113de:	6823      	ldr	r3, [r4, #0]
 80113e0:	4620      	mov	r0, r4
 80113e2:	699b      	ldr	r3, [r3, #24]
 80113e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113e8:	4718      	bx	r3
 80113ea:	bd70      	pop	{r4, r5, r6, pc}

080113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80113ec:	b510      	push	{r4, lr}
 80113ee:	4604      	mov	r4, r0
 80113f0:	4608      	mov	r0, r1
 80113f2:	2300      	movs	r3, #0
 80113f4:	8023      	strh	r3, [r4, #0]
 80113f6:	8063      	strh	r3, [r4, #2]
 80113f8:	6803      	ldr	r3, [r0, #0]
 80113fa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80113fe:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011402:	80a1      	strh	r1, [r4, #4]
 8011404:	80e2      	strh	r2, [r4, #6]
 8011406:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011408:	4621      	mov	r1, r4
 801140a:	4798      	blx	r3
 801140c:	4620      	mov	r0, r4
 801140e:	bd10      	pop	{r4, pc}

08011410 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 8011410:	4770      	bx	lr

08011412 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 8011412:	b510      	push	{r4, lr}
 8011414:	211c      	movs	r1, #28
 8011416:	4604      	mov	r4, r0
 8011418:	f011 f82f 	bl	802247a <_ZdlPvj>
 801141c:	4620      	mov	r0, r4
 801141e:	bd10      	pop	{r4, pc}

08011420 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8011420:	4a04      	ldr	r2, [pc, #16]	@ (8011434 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 8011422:	6002      	str	r2, [r0, #0]
 8011424:	2200      	movs	r2, #0
 8011426:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801142a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801142e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011432:	4770      	bx	lr
 8011434:	08025d68 	.word	0x08025d68

08011438 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8011438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801143c:	4604      	mov	r4, r0
 801143e:	b087      	sub	sp, #28
 8011440:	8b45      	ldrh	r5, [r0, #26]
 8011442:	f8b2 c000 	ldrh.w	ip, [r2]
 8011446:	9105      	str	r1, [sp, #20]
 8011448:	68e1      	ldr	r1, [r4, #12]
 801144a:	9203      	str	r2, [sp, #12]
 801144c:	1c68      	adds	r0, r5, #1
 801144e:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8011452:	f01c 0501 	ands.w	r5, ip, #1
 8011456:	f9b3 2000 	ldrsh.w	r2, [r3]
 801145a:	9502      	str	r5, [sp, #8]
 801145c:	b280      	uxth	r0, r0
 801145e:	d07d      	beq.n	801155c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8011460:	ee07 2a90 	vmov	s15, r2
 8011464:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8011468:	8360      	strh	r0, [r4, #26]
 801146a:	edc1 6a00 	vstr	s13, [r1]
 801146e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8011472:	8b61      	ldrh	r1, [r4, #26]
 8011474:	ee07 2a10 	vmov	s14, r2
 8011478:	68e2      	ldr	r2, [r4, #12]
 801147a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801147e:	f04f 0e00 	mov.w	lr, #0
 8011482:	1c48      	adds	r0, r1, #1
 8011484:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8011488:	ee06 ea10 	vmov	s12, lr
 801148c:	8360      	strh	r0, [r4, #26]
 801148e:	ed82 7a00 	vstr	s14, [r2]
 8011492:	8b21      	ldrh	r1, [r4, #24]
 8011494:	68a2      	ldr	r2, [r4, #8]
 8011496:	2501      	movs	r5, #1
 8011498:	1c48      	adds	r0, r1, #1
 801149a:	8320      	strh	r0, [r4, #24]
 801149c:	5455      	strb	r5, [r2, r1]
 801149e:	2200      	movs	r2, #0
 80114a0:	3304      	adds	r3, #4
 80114a2:	ee07 2a90 	vmov	s15, r2
 80114a6:	9300      	str	r3, [sp, #0]
 80114a8:	46aa      	mov	sl, r5
 80114aa:	4613      	mov	r3, r2
 80114ac:	4611      	mov	r1, r2
 80114ae:	462e      	mov	r6, r5
 80114b0:	9201      	str	r2, [sp, #4]
 80114b2:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 80114b6:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 80114ba:	9805      	ldr	r0, [sp, #20]
 80114bc:	f8d4 b008 	ldr.w	fp, [r4, #8]
 80114c0:	f108 0701 	add.w	r7, r8, #1
 80114c4:	42a8      	cmp	r0, r5
 80114c6:	b2bf      	uxth	r7, r7
 80114c8:	eb0b 0908 	add.w	r9, fp, r8
 80114cc:	f340 80db 	ble.w	8011686 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 80114d0:	fa4c f906 	asr.w	r9, ip, r6
 80114d4:	f009 0901 	and.w	r9, r9, #1
 80114d8:	fa5f f389 	uxtb.w	r3, r9
 80114dc:	9304      	str	r3, [sp, #16]
 80114de:	9b00      	ldr	r3, [sp, #0]
 80114e0:	f9b3 1000 	ldrsh.w	r1, [r3]
 80114e4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80114e8:	f1b9 0f00 	cmp.w	r9, #0
 80114ec:	d07d      	beq.n	80115ea <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 80114ee:	ee05 1a10 	vmov	s10, r1
 80114f2:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 80114f6:	ee05 3a10 	vmov	s10, r3
 80114fa:	8327      	strh	r7, [r4, #24]
 80114fc:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8011500:	f1ba 0f00 	cmp.w	sl, #0
 8011504:	d050      	beq.n	80115a8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 8011506:	f04f 0002 	mov.w	r0, #2
 801150a:	f80b 0008 	strb.w	r0, [fp, r8]
 801150e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011512:	68e7      	ldr	r7, [r4, #12]
 8011514:	f108 0901 	add.w	r9, r8, #1
 8011518:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801151c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8011520:	edc7 4a00 	vstr	s9, [r7]
 8011524:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011528:	68e7      	ldr	r7, [r4, #12]
 801152a:	f108 0901 	add.w	r9, r8, #1
 801152e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8011532:	f8a4 901a 	strh.w	r9, [r4, #26]
 8011536:	ed87 5a00 	vstr	s10, [r7]
 801153a:	3601      	adds	r6, #1
 801153c:	2e10      	cmp	r6, #16
 801153e:	d106      	bne.n	801154e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8011540:	9e01      	ldr	r6, [sp, #4]
 8011542:	9803      	ldr	r0, [sp, #12]
 8011544:	3601      	adds	r6, #1
 8011546:	9601      	str	r6, [sp, #4]
 8011548:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 801154c:	2600      	movs	r6, #0
 801154e:	9800      	ldr	r0, [sp, #0]
 8011550:	f8dd a010 	ldr.w	sl, [sp, #16]
 8011554:	3004      	adds	r0, #4
 8011556:	3501      	adds	r5, #1
 8011558:	9000      	str	r0, [sp, #0]
 801155a:	e7ac      	b.n	80114b6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 801155c:	ee06 2a10 	vmov	s12, r2
 8011560:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8011564:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8011568:	ee16 5a10 	vmov	r5, s12
 801156c:	442a      	add	r2, r5
 801156e:	ee06 2a90 	vmov	s13, r2
 8011572:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8011576:	8360      	strh	r0, [r4, #26]
 8011578:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801157c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8011580:	4472      	add	r2, lr
 8011582:	ee07 2a10 	vmov	s14, r2
 8011586:	ee66 6aa7 	vmul.f32	s13, s13, s15
 801158a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801158e:	edc1 6a00 	vstr	s13, [r1]
 8011592:	8b61      	ldrh	r1, [r4, #26]
 8011594:	68e2      	ldr	r2, [r4, #12]
 8011596:	ee27 7a27 	vmul.f32	s14, s14, s15
 801159a:	1c48      	adds	r0, r1, #1
 801159c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80115a0:	8360      	strh	r0, [r4, #26]
 80115a2:	ed82 7a00 	vstr	s14, [r2]
 80115a6:	e774      	b.n	8011492 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 80115a8:	f04f 0005 	mov.w	r0, #5
 80115ac:	f80b 0008 	strb.w	r0, [fp, r8]
 80115b0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80115b4:	68e7      	ldr	r7, [r4, #12]
 80115b6:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 80115ba:	f108 0901 	add.w	r9, r8, #1
 80115be:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80115c2:	f8a4 901a 	strh.w	r9, [r4, #26]
 80115c6:	ed87 4a00 	vstr	s8, [r7]
 80115ca:	ee04 2a10 	vmov	s8, r2
 80115ce:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80115d2:	68e7      	ldr	r7, [r4, #12]
 80115d4:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 80115d8:	f108 0901 	add.w	r9, r8, #1
 80115dc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80115e0:	f8a4 901a 	strh.w	r9, [r4, #26]
 80115e4:	ed87 4a00 	vstr	s8, [r7]
 80115e8:	e791      	b.n	801150e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 80115ea:	f1ba 0f00 	cmp.w	sl, #0
 80115ee:	d146      	bne.n	801167e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 80115f0:	f04f 0005 	mov.w	r0, #5
 80115f4:	8327      	strh	r7, [r4, #24]
 80115f6:	f80b 0008 	strb.w	r0, [fp, r8]
 80115fa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80115fe:	68e7      	ldr	r7, [r4, #12]
 8011600:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8011604:	f108 0901 	add.w	r9, r8, #1
 8011608:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801160c:	ee17 0a90 	vmov	r0, s15
 8011610:	f8a4 901a 	strh.w	r9, [r4, #26]
 8011614:	ed87 5a00 	vstr	s10, [r7]
 8011618:	ee05 2a10 	vmov	s10, r2
 801161c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011620:	68e7      	ldr	r7, [r4, #12]
 8011622:	4408      	add	r0, r1
 8011624:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8011628:	ee07 0a90 	vmov	s15, r0
 801162c:	f108 0901 	add.w	r9, r8, #1
 8011630:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8011634:	f8a4 901a 	strh.w	r9, [r4, #26]
 8011638:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801163c:	ed87 5a00 	vstr	s10, [r7]
 8011640:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011644:	68e7      	ldr	r7, [r4, #12]
 8011646:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801164a:	f108 0901 	add.w	r9, r8, #1
 801164e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8011652:	441a      	add	r2, r3
 8011654:	f8a4 901a 	strh.w	r9, [r4, #26]
 8011658:	edc7 7a00 	vstr	s15, [r7]
 801165c:	ee07 2a90 	vmov	s15, r2
 8011660:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011664:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8011668:	68e7      	ldr	r7, [r4, #12]
 801166a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801166e:	f108 0901 	add.w	r9, r8, #1
 8011672:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8011676:	f8a4 901a 	strh.w	r9, [r4, #26]
 801167a:	edc7 7a00 	vstr	s15, [r7]
 801167e:	461a      	mov	r2, r3
 8011680:	ee07 1a90 	vmov	s15, r1
 8011684:	e759      	b.n	801153a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 8011686:	f1ba 0f00 	cmp.w	sl, #0
 801168a:	d045      	beq.n	8011718 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 801168c:	ee05 1a90 	vmov	s11, r1
 8011690:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8011694:	eef4 5a66 	vcmp.f32	s11, s13
 8011698:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801169c:	d108      	bne.n	80116b0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 801169e:	ee05 3a90 	vmov	s11, r3
 80116a2:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80116a6:	eef4 5a47 	vcmp.f32	s11, s14
 80116aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80116ae:	d033      	beq.n	8011718 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 80116b0:	9b02      	ldr	r3, [sp, #8]
 80116b2:	8327      	strh	r7, [r4, #24]
 80116b4:	b1b3      	cbz	r3, 80116e4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 80116b6:	2302      	movs	r3, #2
 80116b8:	f889 3000 	strb.w	r3, [r9]
 80116bc:	8b62      	ldrh	r2, [r4, #26]
 80116be:	68e3      	ldr	r3, [r4, #12]
 80116c0:	1c51      	adds	r1, r2, #1
 80116c2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80116c6:	8361      	strh	r1, [r4, #26]
 80116c8:	edc3 6a00 	vstr	s13, [r3]
 80116cc:	8b62      	ldrh	r2, [r4, #26]
 80116ce:	68e3      	ldr	r3, [r4, #12]
 80116d0:	1c51      	adds	r1, r2, #1
 80116d2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80116d6:	8361      	strh	r1, [r4, #26]
 80116d8:	ed83 7a00 	vstr	s14, [r3]
 80116dc:	9800      	ldr	r0, [sp, #0]
 80116de:	b007      	add	sp, #28
 80116e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116e4:	2305      	movs	r3, #5
 80116e6:	f889 3000 	strb.w	r3, [r9]
 80116ea:	8b62      	ldrh	r2, [r4, #26]
 80116ec:	68e3      	ldr	r3, [r4, #12]
 80116ee:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80116f2:	1c51      	adds	r1, r2, #1
 80116f4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80116f8:	8361      	strh	r1, [r4, #26]
 80116fa:	ee07 ea90 	vmov	s15, lr
 80116fe:	ed83 6a00 	vstr	s12, [r3]
 8011702:	8b62      	ldrh	r2, [r4, #26]
 8011704:	68e3      	ldr	r3, [r4, #12]
 8011706:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801170a:	1c51      	adds	r1, r2, #1
 801170c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8011710:	8361      	strh	r1, [r4, #26]
 8011712:	edc3 7a00 	vstr	s15, [r3]
 8011716:	e7d1      	b.n	80116bc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8011718:	ee05 2a90 	vmov	s11, r2
 801171c:	9902      	ldr	r1, [sp, #8]
 801171e:	8327      	strh	r7, [r4, #24]
 8011720:	2305      	movs	r3, #5
 8011722:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8011726:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801172a:	f889 3000 	strb.w	r3, [r9]
 801172e:	b181      	cbz	r1, 8011752 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 8011730:	8b62      	ldrh	r2, [r4, #26]
 8011732:	68e3      	ldr	r3, [r4, #12]
 8011734:	1c51      	adds	r1, r2, #1
 8011736:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801173a:	8361      	strh	r1, [r4, #26]
 801173c:	ed83 5a00 	vstr	s10, [r3]
 8011740:	8b62      	ldrh	r2, [r4, #26]
 8011742:	68e3      	ldr	r3, [r4, #12]
 8011744:	1c51      	adds	r1, r2, #1
 8011746:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801174a:	8361      	strh	r1, [r4, #26]
 801174c:	edc3 5a00 	vstr	s11, [r3]
 8011750:	e7b4      	b.n	80116bc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8011752:	8b65      	ldrh	r5, [r4, #26]
 8011754:	68e1      	ldr	r1, [r4, #12]
 8011756:	1c6e      	adds	r6, r5, #1
 8011758:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801175c:	8366      	strh	r6, [r4, #26]
 801175e:	ed81 5a00 	vstr	s10, [r1]
 8011762:	8b65      	ldrh	r5, [r4, #26]
 8011764:	68e1      	ldr	r1, [r4, #12]
 8011766:	1c6e      	adds	r6, r5, #1
 8011768:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801176c:	8366      	strh	r6, [r4, #26]
 801176e:	edc1 5a00 	vstr	s11, [r1]
 8011772:	8b65      	ldrh	r5, [r4, #26]
 8011774:	68e1      	ldr	r1, [r4, #12]
 8011776:	1c6e      	adds	r6, r5, #1
 8011778:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801177c:	ee17 0a90 	vmov	r0, s15
 8011780:	ee16 5a10 	vmov	r5, s12
 8011784:	4428      	add	r0, r5
 8011786:	ee07 0a90 	vmov	s15, r0
 801178a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801178e:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8011792:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8011796:	4472      	add	r2, lr
 8011798:	8366      	strh	r6, [r4, #26]
 801179a:	edc1 7a00 	vstr	s15, [r1]
 801179e:	ee07 2a90 	vmov	s15, r2
 80117a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80117a6:	8b61      	ldrh	r1, [r4, #26]
 80117a8:	68e5      	ldr	r5, [r4, #12]
 80117aa:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80117ae:	1c4e      	adds	r6, r1, #1
 80117b0:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 80117b4:	8366      	strh	r6, [r4, #26]
 80117b6:	edc1 7a00 	vstr	s15, [r1]
 80117ba:	8b22      	ldrh	r2, [r4, #24]
 80117bc:	68a1      	ldr	r1, [r4, #8]
 80117be:	1c55      	adds	r5, r2, #1
 80117c0:	8325      	strh	r5, [r4, #24]
 80117c2:	548b      	strb	r3, [r1, r2]
 80117c4:	e791      	b.n	80116ea <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

080117c8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 80117c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80117cc:	b08e      	sub	sp, #56	@ 0x38
 80117ce:	4604      	mov	r4, r0
 80117d0:	4688      	mov	r8, r1
 80117d2:	4615      	mov	r5, r2
 80117d4:	4699      	mov	r9, r3
 80117d6:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 80117d8:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 80117dc:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 80117de:	f7f0 f8ab 	bl	8001938 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 80117e2:	6060      	str	r0, [r4, #4]
 80117e4:	f1b9 0f00 	cmp.w	r9, #0
 80117e8:	f000 80e8 	beq.w	80119bc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 80117ec:	2800      	cmp	r0, #0
 80117ee:	f000 80e5 	beq.w	80119bc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 80117f2:	a805      	add	r0, sp, #20
 80117f4:	f000 f8f9 	bl	80119ea <_ZN8touchgfx9Matrix3x3C1Ev>
 80117f8:	6833      	ldr	r3, [r6, #0]
 80117fa:	4630      	mov	r0, r6
 80117fc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80117fe:	4798      	blx	r3
 8011800:	a805      	add	r0, sp, #20
 8011802:	eef0 0a40 	vmov.f32	s1, s0
 8011806:	f000 f8f4 	bl	80119f2 <_ZN8touchgfx9Matrix3x35scaleEff>
 801180a:	6860      	ldr	r0, [r4, #4]
 801180c:	f1ba 0f03 	cmp.w	sl, #3
 8011810:	d83b      	bhi.n	801188a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 8011812:	e8df f00a 	tbb	[pc, sl]
 8011816:	1002      	.short	0x1002
 8011818:	9f71      	.short	0x9f71
 801181a:	6803      	ldr	r3, [r0, #0]
 801181c:	462a      	mov	r2, r5
 801181e:	689b      	ldr	r3, [r3, #8]
 8011820:	4641      	mov	r1, r8
 8011822:	4798      	blx	r3
 8011824:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8011828:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801182c:	ee07 7a90 	vmov	s15, r7
 8011830:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8011834:	e026      	b.n	8011884 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 8011836:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 801183a:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 801183e:	8869      	ldrh	r1, [r5, #2]
 8011840:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011844:	1a9b      	subs	r3, r3, r2
 8011846:	1a5b      	subs	r3, r3, r1
 8011848:	f8ad 300c 	strh.w	r3, [sp, #12]
 801184c:	882b      	ldrh	r3, [r5, #0]
 801184e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011852:	88ab      	ldrh	r3, [r5, #4]
 8011854:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011858:	6803      	ldr	r3, [r0, #0]
 801185a:	aa03      	add	r2, sp, #12
 801185c:	689b      	ldr	r3, [r3, #8]
 801185e:	4641      	mov	r1, r8
 8011860:	4798      	blx	r3
 8011862:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 80119c4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 8011866:	a805      	add	r0, sp, #20
 8011868:	f000 f8e8 	bl	8011a3c <_ZN8touchgfx9Matrix3x36rotateEf>
 801186c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8011870:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8011872:	ee07 7a90 	vmov	s15, r7
 8011876:	1a9b      	subs	r3, r3, r2
 8011878:	ee00 3a10 	vmov	s0, r3
 801187c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8011880:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8011884:	a805      	add	r0, sp, #20
 8011886:	f000 f927 	bl	8011ad8 <_ZN8touchgfx9Matrix3x39translateEff>
 801188a:	6860      	ldr	r0, [r4, #4]
 801188c:	6803      	ldr	r3, [r0, #0]
 801188e:	a905      	add	r1, sp, #20
 8011890:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011892:	4798      	blx	r3
 8011894:	6860      	ldr	r0, [r4, #4]
 8011896:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8011898:	6803      	ldr	r3, [r0, #0]
 801189a:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 801189e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80118a0:	4798      	blx	r3
 80118a2:	6860      	ldr	r0, [r4, #4]
 80118a4:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 80118a8:	6803      	ldr	r3, [r0, #0]
 80118aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80118ac:	4798      	blx	r3
 80118ae:	6860      	ldr	r0, [r4, #4]
 80118b0:	6803      	ldr	r3, [r0, #0]
 80118b2:	2101      	movs	r1, #1
 80118b4:	68db      	ldr	r3, [r3, #12]
 80118b6:	2500      	movs	r5, #0
 80118b8:	4798      	blx	r3
 80118ba:	f8b9 7000 	ldrh.w	r7, [r9]
 80118be:	61a5      	str	r5, [r4, #24]
 80118c0:	f104 0310 	add.w	r3, r4, #16
 80118c4:	f104 0208 	add.w	r2, r4, #8
 80118c8:	f104 0114 	add.w	r1, r4, #20
 80118cc:	f104 000c 	add.w	r0, r4, #12
 80118d0:	f109 0602 	add.w	r6, r9, #2
 80118d4:	f7f1 fd92 	bl	80033fc <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 80118d8:	42af      	cmp	r7, r5
 80118da:	dd60      	ble.n	801199e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 80118dc:	8831      	ldrh	r1, [r6, #0]
 80118de:	f101 030f 	add.w	r3, r1, #15
 80118e2:	1cb2      	adds	r2, r6, #2
 80118e4:	f3c3 1307 	ubfx	r3, r3, #4, #8
 80118e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80118ec:	4620      	mov	r0, r4
 80118ee:	f7ff fda3 	bl	8011438 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 80118f2:	3501      	adds	r5, #1
 80118f4:	4606      	mov	r6, r0
 80118f6:	e7ef      	b.n	80118d8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 80118f8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80118fc:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8011900:	8829      	ldrh	r1, [r5, #0]
 8011902:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011906:	1a9b      	subs	r3, r3, r2
 8011908:	1a5b      	subs	r3, r3, r1
 801190a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801190e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011912:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011916:	886d      	ldrh	r5, [r5, #2]
 8011918:	f8ad 1012 	strh.w	r1, [sp, #18]
 801191c:	1a5b      	subs	r3, r3, r1
 801191e:	1b5b      	subs	r3, r3, r5
 8011920:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011924:	6803      	ldr	r3, [r0, #0]
 8011926:	aa03      	add	r2, sp, #12
 8011928:	689b      	ldr	r3, [r3, #8]
 801192a:	4641      	mov	r1, r8
 801192c:	4798      	blx	r3
 801192e:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 80119c8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 8011932:	a805      	add	r0, sp, #20
 8011934:	f000 f882 	bl	8011a3c <_ZN8touchgfx9Matrix3x36rotateEf>
 8011938:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801193c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801193e:	1a9b      	subs	r3, r3, r2
 8011940:	ee00 3a90 	vmov	s1, r3
 8011944:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8011948:	1bdb      	subs	r3, r3, r7
 801194a:	ee00 3a10 	vmov	s0, r3
 801194e:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8011952:	e795      	b.n	8011880 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8011954:	886b      	ldrh	r3, [r5, #2]
 8011956:	f8ad 300c 	strh.w	r3, [sp, #12]
 801195a:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801195e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011962:	8829      	ldrh	r1, [r5, #0]
 8011964:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011968:	1a9b      	subs	r3, r3, r2
 801196a:	1a5b      	subs	r3, r3, r1
 801196c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011970:	88eb      	ldrh	r3, [r5, #6]
 8011972:	f8ad 3010 	strh.w	r3, [sp, #16]
 8011976:	6803      	ldr	r3, [r0, #0]
 8011978:	aa03      	add	r2, sp, #12
 801197a:	689b      	ldr	r3, [r3, #8]
 801197c:	4641      	mov	r1, r8
 801197e:	4798      	blx	r3
 8011980:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 80119cc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8011984:	a805      	add	r0, sp, #20
 8011986:	f000 f859 	bl	8011a3c <_ZN8touchgfx9Matrix3x36rotateEf>
 801198a:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801198e:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8011992:	1bdb      	subs	r3, r3, r7
 8011994:	ee00 3a90 	vmov	s1, r3
 8011998:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 801199c:	e748      	b.n	8011830 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 801199e:	6860      	ldr	r0, [r4, #4]
 80119a0:	8b22      	ldrh	r2, [r4, #24]
 80119a2:	6803      	ldr	r3, [r0, #0]
 80119a4:	2100      	movs	r1, #0
 80119a6:	9101      	str	r1, [sp, #4]
 80119a8:	8b61      	ldrh	r1, [r4, #26]
 80119aa:	9100      	str	r1, [sp, #0]
 80119ac:	6a1d      	ldr	r5, [r3, #32]
 80119ae:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 80119b2:	47a8      	blx	r5
 80119b4:	6860      	ldr	r0, [r4, #4]
 80119b6:	6803      	ldr	r3, [r0, #0]
 80119b8:	69db      	ldr	r3, [r3, #28]
 80119ba:	4798      	blx	r3
 80119bc:	b00e      	add	sp, #56	@ 0x38
 80119be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80119c2:	bf00      	nop
 80119c4:	42b40000 	.word	0x42b40000
 80119c8:	43340000 	.word	0x43340000
 80119cc:	43870000 	.word	0x43870000

080119d0 <_ZN8touchgfx9Matrix3x35resetEv>:
 80119d0:	2300      	movs	r3, #0
 80119d2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80119d6:	6002      	str	r2, [r0, #0]
 80119d8:	6043      	str	r3, [r0, #4]
 80119da:	6083      	str	r3, [r0, #8]
 80119dc:	60c3      	str	r3, [r0, #12]
 80119de:	6102      	str	r2, [r0, #16]
 80119e0:	6143      	str	r3, [r0, #20]
 80119e2:	6183      	str	r3, [r0, #24]
 80119e4:	61c3      	str	r3, [r0, #28]
 80119e6:	6202      	str	r2, [r0, #32]
 80119e8:	4770      	bx	lr

080119ea <_ZN8touchgfx9Matrix3x3C1Ev>:
 80119ea:	b508      	push	{r3, lr}
 80119ec:	f7ff fff0 	bl	80119d0 <_ZN8touchgfx9Matrix3x35resetEv>
 80119f0:	bd08      	pop	{r3, pc}

080119f2 <_ZN8touchgfx9Matrix3x35scaleEff>:
 80119f2:	edd0 7a00 	vldr	s15, [r0]
 80119f6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80119fa:	edc0 7a00 	vstr	s15, [r0]
 80119fe:	edd0 7a01 	vldr	s15, [r0, #4]
 8011a02:	ee67 7a80 	vmul.f32	s15, s15, s0
 8011a06:	edc0 7a01 	vstr	s15, [r0, #4]
 8011a0a:	edd0 7a02 	vldr	s15, [r0, #8]
 8011a0e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8011a12:	edd0 7a03 	vldr	s15, [r0, #12]
 8011a16:	ed80 0a02 	vstr	s0, [r0, #8]
 8011a1a:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8011a1e:	edc0 7a03 	vstr	s15, [r0, #12]
 8011a22:	edd0 7a04 	vldr	s15, [r0, #16]
 8011a26:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8011a2a:	edc0 7a04 	vstr	s15, [r0, #16]
 8011a2e:	edd0 7a05 	vldr	s15, [r0, #20]
 8011a32:	ee67 0aa0 	vmul.f32	s1, s15, s1
 8011a36:	edc0 0a05 	vstr	s1, [r0, #20]
 8011a3a:	4770      	bx	lr

08011a3c <_ZN8touchgfx9Matrix3x36rotateEf>:
 8011a3c:	b510      	push	{r4, lr}
 8011a3e:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8011ad0 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 8011a42:	ee20 0a27 	vmul.f32	s0, s0, s15
 8011a46:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8011ad4 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8011a4a:	ed2d 8b02 	vpush	{d8}
 8011a4e:	eec0 8a27 	vdiv.f32	s17, s0, s15
 8011a52:	4604      	mov	r4, r0
 8011a54:	eeb0 0a68 	vmov.f32	s0, s17
 8011a58:	f010 fd58 	bl	802250c <cosf>
 8011a5c:	eeb0 8a40 	vmov.f32	s16, s0
 8011a60:	eeb0 0a68 	vmov.f32	s0, s17
 8011a64:	f010 fd96 	bl	8022594 <sinf>
 8011a68:	edd4 6a03 	vldr	s13, [r4, #12]
 8011a6c:	edd4 4a00 	vldr	s9, [r4]
 8011a70:	ed94 7a04 	vldr	s14, [r4, #16]
 8011a74:	ed94 5a01 	vldr	s10, [r4, #4]
 8011a78:	edd4 5a02 	vldr	s11, [r4, #8]
 8011a7c:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8011a80:	ee66 6a88 	vmul.f32	s13, s13, s16
 8011a84:	eee8 7a24 	vfma.f32	s15, s16, s9
 8011a88:	eee0 6a24 	vfma.f32	s13, s0, s9
 8011a8c:	edc4 7a00 	vstr	s15, [r4]
 8011a90:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8011a94:	ee27 7a08 	vmul.f32	s14, s14, s16
 8011a98:	eee8 7a05 	vfma.f32	s15, s16, s10
 8011a9c:	eea0 7a05 	vfma.f32	s14, s0, s10
 8011aa0:	edc4 7a01 	vstr	s15, [r4, #4]
 8011aa4:	edd4 7a05 	vldr	s15, [r4, #20]
 8011aa8:	edc4 6a03 	vstr	s13, [r4, #12]
 8011aac:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8011ab0:	ee67 7a88 	vmul.f32	s15, s15, s16
 8011ab4:	eea8 6a25 	vfma.f32	s12, s16, s11
 8011ab8:	ecbd 8b02 	vpop	{d8}
 8011abc:	eee0 7a25 	vfma.f32	s15, s0, s11
 8011ac0:	ed84 6a02 	vstr	s12, [r4, #8]
 8011ac4:	ed84 7a04 	vstr	s14, [r4, #16]
 8011ac8:	edc4 7a05 	vstr	s15, [r4, #20]
 8011acc:	bd10      	pop	{r4, pc}
 8011ace:	bf00      	nop
 8011ad0:	40490fdb 	.word	0x40490fdb
 8011ad4:	43340000 	.word	0x43340000

08011ad8 <_ZN8touchgfx9Matrix3x39translateEff>:
 8011ad8:	ed90 6a06 	vldr	s12, [r0, #24]
 8011adc:	edd0 7a00 	vldr	s15, [r0]
 8011ae0:	edd0 6a07 	vldr	s13, [r0, #28]
 8011ae4:	ed90 7a08 	vldr	s14, [r0, #32]
 8011ae8:	eee6 7a00 	vfma.f32	s15, s12, s0
 8011aec:	edc0 7a00 	vstr	s15, [r0]
 8011af0:	edd0 7a01 	vldr	s15, [r0, #4]
 8011af4:	eee6 7a80 	vfma.f32	s15, s13, s0
 8011af8:	edc0 7a01 	vstr	s15, [r0, #4]
 8011afc:	edd0 7a02 	vldr	s15, [r0, #8]
 8011b00:	eee7 7a00 	vfma.f32	s15, s14, s0
 8011b04:	edc0 7a02 	vstr	s15, [r0, #8]
 8011b08:	edd0 7a03 	vldr	s15, [r0, #12]
 8011b0c:	eee6 7a20 	vfma.f32	s15, s12, s1
 8011b10:	edc0 7a03 	vstr	s15, [r0, #12]
 8011b14:	edd0 7a04 	vldr	s15, [r0, #16]
 8011b18:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8011b1c:	edc0 7a04 	vstr	s15, [r0, #16]
 8011b20:	edd0 7a05 	vldr	s15, [r0, #20]
 8011b24:	eee7 7a20 	vfma.f32	s15, s14, s1
 8011b28:	edc0 7a05 	vstr	s15, [r0, #20]
 8011b2c:	4770      	bx	lr

08011b2e <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8011b2e:	edd0 6a01 	vldr	s13, [r0, #4]
 8011b32:	edd0 7a04 	vldr	s15, [r0, #16]
 8011b36:	ed90 7a03 	vldr	s14, [r0, #12]
 8011b3a:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8011b3e:	ee60 0aa6 	vmul.f32	s1, s1, s13
 8011b42:	edd0 6a00 	vldr	s13, [r0]
 8011b46:	eee7 7a00 	vfma.f32	s15, s14, s0
 8011b4a:	b084      	sub	sp, #16
 8011b4c:	eee6 0a80 	vfma.f32	s1, s13, s0
 8011b50:	ed90 7a05 	vldr	s14, [r0, #20]
 8011b54:	ed90 0a02 	vldr	s0, [r0, #8]
 8011b58:	ee30 0a80 	vadd.f32	s0, s1, s0
 8011b5c:	ee77 0a87 	vadd.f32	s1, s15, s14
 8011b60:	b004      	add	sp, #16
 8011b62:	4770      	bx	lr

08011b64 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8011b64:	b530      	push	{r4, r5, lr}
 8011b66:	8083      	strh	r3, [r0, #4]
 8011b68:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011b6c:	80c3      	strh	r3, [r0, #6]
 8011b6e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011b72:	7203      	strb	r3, [r0, #8]
 8011b74:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011b78:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8011b7c:	7243      	strb	r3, [r0, #9]
 8011b7e:	7a83      	ldrb	r3, [r0, #10]
 8011b80:	6141      	str	r1, [r0, #20]
 8011b82:	f365 0306 	bfi	r3, r5, #0, #7
 8011b86:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8011b8a:	8302      	strh	r2, [r0, #24]
 8011b8c:	f365 13c7 	bfi	r3, r5, #7, #1
 8011b90:	7283      	strb	r3, [r0, #10]
 8011b92:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011b96:	72c3      	strb	r3, [r0, #11]
 8011b98:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8011b9c:	7303      	strb	r3, [r0, #12]
 8011b9e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8011ba2:	81c3      	strh	r3, [r0, #14]
 8011ba4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8011ba8:	8203      	strh	r3, [r0, #16]
 8011baa:	4b01      	ldr	r3, [pc, #4]	@ (8011bb0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011bac:	6003      	str	r3, [r0, #0]
 8011bae:	bd30      	pop	{r4, r5, pc}
 8011bb0:	08025d7c 	.word	0x08025d7c

08011bb4 <_ZNK8touchgfx9ConstFont4findEt>:
 8011bb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011bb6:	6944      	ldr	r4, [r0, #20]
 8011bb8:	b3bc      	cbz	r4, 8011c2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011bba:	88a3      	ldrh	r3, [r4, #4]
 8011bbc:	8b02      	ldrh	r2, [r0, #24]
 8011bbe:	1acb      	subs	r3, r1, r3
 8011bc0:	f102 32ff 	add.w	r2, r2, #4294967295
 8011bc4:	d431      	bmi.n	8011c2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011bc6:	4293      	cmp	r3, r2
 8011bc8:	dd0c      	ble.n	8011be4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011bca:	230e      	movs	r3, #14
 8011bcc:	fb03 4302 	mla	r3, r3, r2, r4
 8011bd0:	889b      	ldrh	r3, [r3, #4]
 8011bd2:	1a5b      	subs	r3, r3, r1
 8011bd4:	1ad3      	subs	r3, r2, r3
 8011bd6:	429a      	cmp	r2, r3
 8011bd8:	db27      	blt.n	8011c2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011bda:	2b00      	cmp	r3, #0
 8011bdc:	bfbc      	itt	lt
 8011bde:	2302      	movlt	r3, #2
 8011be0:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011be4:	2500      	movs	r5, #0
 8011be6:	260e      	movs	r6, #14
 8011be8:	4295      	cmp	r5, r2
 8011bea:	dc1e      	bgt.n	8011c2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011bec:	fb06 4003 	mla	r0, r6, r3, r4
 8011bf0:	8887      	ldrh	r7, [r0, #4]
 8011bf2:	42b9      	cmp	r1, r7
 8011bf4:	d01a      	beq.n	8011c2c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011bf6:	d20d      	bcs.n	8011c14 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011bf8:	1e5a      	subs	r2, r3, #1
 8011bfa:	4295      	cmp	r5, r2
 8011bfc:	dc15      	bgt.n	8011c2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011bfe:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011c02:	1a5b      	subs	r3, r3, r1
 8011c04:	1ad3      	subs	r3, r2, r3
 8011c06:	429a      	cmp	r2, r3
 8011c08:	db0f      	blt.n	8011c2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011c0a:	429d      	cmp	r5, r3
 8011c0c:	ddec      	ble.n	8011be8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011c0e:	1953      	adds	r3, r2, r5
 8011c10:	105b      	asrs	r3, r3, #1
 8011c12:	e7e9      	b.n	8011be8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011c14:	1c5d      	adds	r5, r3, #1
 8011c16:	42aa      	cmp	r2, r5
 8011c18:	db07      	blt.n	8011c2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011c1a:	8a43      	ldrh	r3, [r0, #18]
 8011c1c:	1acb      	subs	r3, r1, r3
 8011c1e:	442b      	add	r3, r5
 8011c20:	429d      	cmp	r5, r3
 8011c22:	dc02      	bgt.n	8011c2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011c24:	429a      	cmp	r2, r3
 8011c26:	dadf      	bge.n	8011be8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011c28:	e7f1      	b.n	8011c0e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011c2a:	2000      	movs	r0, #0
 8011c2c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011c2e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011c2e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011c30:	4604      	mov	r4, r0
 8011c32:	4617      	mov	r7, r2
 8011c34:	461e      	mov	r6, r3
 8011c36:	b911      	cbnz	r1, 8011c3e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011c38:	2500      	movs	r5, #0
 8011c3a:	4628      	mov	r0, r5
 8011c3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011c3e:	290a      	cmp	r1, #10
 8011c40:	d0fa      	beq.n	8011c38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011c42:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8011c46:	4291      	cmp	r1, r2
 8011c48:	d0f6      	beq.n	8011c38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011c4a:	f242 020b 	movw	r2, #8203	@ 0x200b
 8011c4e:	4291      	cmp	r1, r2
 8011c50:	d0f2      	beq.n	8011c38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011c52:	f7ff ffaf 	bl	8011bb4 <_ZNK8touchgfx9ConstFont4findEt>
 8011c56:	4605      	mov	r5, r0
 8011c58:	b950      	cbnz	r0, 8011c70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011c5a:	6823      	ldr	r3, [r4, #0]
 8011c5c:	4620      	mov	r0, r4
 8011c5e:	691b      	ldr	r3, [r3, #16]
 8011c60:	4798      	blx	r3
 8011c62:	4601      	mov	r1, r0
 8011c64:	4620      	mov	r0, r4
 8011c66:	f7ff ffa5 	bl	8011bb4 <_ZNK8touchgfx9ConstFont4findEt>
 8011c6a:	4605      	mov	r5, r0
 8011c6c:	2800      	cmp	r0, #0
 8011c6e:	d0e3      	beq.n	8011c38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011c70:	6823      	ldr	r3, [r4, #0]
 8011c72:	4629      	mov	r1, r5
 8011c74:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011c76:	4620      	mov	r0, r4
 8011c78:	4798      	blx	r3
 8011c7a:	6038      	str	r0, [r7, #0]
 8011c7c:	6823      	ldr	r3, [r4, #0]
 8011c7e:	4620      	mov	r0, r4
 8011c80:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011c82:	4798      	blx	r3
 8011c84:	7030      	strb	r0, [r6, #0]
 8011c86:	e7d8      	b.n	8011c3a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011c88 <_ZN8touchgfx4clzuEm>:
 8011c88:	4603      	mov	r3, r0
 8011c8a:	b1c8      	cbz	r0, 8011cc0 <_ZN8touchgfx4clzuEm+0x38>
 8011c8c:	0c02      	lsrs	r2, r0, #16
 8011c8e:	0412      	lsls	r2, r2, #16
 8011c90:	b9a2      	cbnz	r2, 8011cbc <_ZN8touchgfx4clzuEm+0x34>
 8011c92:	0403      	lsls	r3, r0, #16
 8011c94:	2010      	movs	r0, #16
 8011c96:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8011c9a:	bf04      	itt	eq
 8011c9c:	021b      	lsleq	r3, r3, #8
 8011c9e:	3008      	addeq	r0, #8
 8011ca0:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8011ca4:	bf04      	itt	eq
 8011ca6:	011b      	lsleq	r3, r3, #4
 8011ca8:	3004      	addeq	r0, #4
 8011caa:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8011cae:	bf04      	itt	eq
 8011cb0:	009b      	lsleq	r3, r3, #2
 8011cb2:	3002      	addeq	r0, #2
 8011cb4:	2b00      	cmp	r3, #0
 8011cb6:	db04      	blt.n	8011cc2 <_ZN8touchgfx4clzuEm+0x3a>
 8011cb8:	3001      	adds	r0, #1
 8011cba:	4770      	bx	lr
 8011cbc:	2000      	movs	r0, #0
 8011cbe:	e7ea      	b.n	8011c96 <_ZN8touchgfx4clzuEm+0xe>
 8011cc0:	2020      	movs	r0, #32
 8011cc2:	4770      	bx	lr

08011cc4 <_ZN8touchgfx7muldivuEmmmRm>:
 8011cc4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011cc8:	460f      	mov	r7, r1
 8011cca:	4615      	mov	r5, r2
 8011ccc:	461e      	mov	r6, r3
 8011cce:	4601      	mov	r1, r0
 8011cd0:	b100      	cbz	r0, 8011cd4 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8011cd2:	b927      	cbnz	r7, 8011cde <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8011cd4:	2000      	movs	r0, #0
 8011cd6:	6030      	str	r0, [r6, #0]
 8011cd8:	b002      	add	sp, #8
 8011cda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011cde:	f7ff ffd3 	bl	8011c88 <_ZN8touchgfx4clzuEm>
 8011ce2:	b980      	cbnz	r0, 8011d06 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8011ce4:	4638      	mov	r0, r7
 8011ce6:	f7ff ffcf 	bl	8011c88 <_ZN8touchgfx4clzuEm>
 8011cea:	2800      	cmp	r0, #0
 8011cec:	dd05      	ble.n	8011cfa <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8011cee:	4633      	mov	r3, r6
 8011cf0:	462a      	mov	r2, r5
 8011cf2:	4638      	mov	r0, r7
 8011cf4:	f7ff ffe6 	bl	8011cc4 <_ZN8touchgfx7muldivuEmmmRm>
 8011cf8:	e7ee      	b.n	8011cd8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011cfa:	f04f 33ff 	mov.w	r3, #4294967295
 8011cfe:	6033      	str	r3, [r6, #0]
 8011d00:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8011d04:	e7e8      	b.n	8011cd8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011d06:	fa37 f800 	lsrs.w	r8, r7, r0
 8011d0a:	fb07 f301 	mul.w	r3, r7, r1
 8011d0e:	d105      	bne.n	8011d1c <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8011d10:	fbb3 f0f5 	udiv	r0, r3, r5
 8011d14:	fb05 3510 	mls	r5, r5, r0, r3
 8011d18:	6035      	str	r5, [r6, #0]
 8011d1a:	e7dd      	b.n	8011cd8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011d1c:	2301      	movs	r3, #1
 8011d1e:	fa01 fa00 	lsl.w	sl, r1, r0
 8011d22:	fa03 f000 	lsl.w	r0, r3, r0
 8011d26:	3801      	subs	r0, #1
 8011d28:	462a      	mov	r2, r5
 8011d2a:	4633      	mov	r3, r6
 8011d2c:	4038      	ands	r0, r7
 8011d2e:	f7ff ffc9 	bl	8011cc4 <_ZN8touchgfx7muldivuEmmmRm>
 8011d32:	fbba f9f5 	udiv	r9, sl, r5
 8011d36:	462a      	mov	r2, r5
 8011d38:	4607      	mov	r7, r0
 8011d3a:	ab01      	add	r3, sp, #4
 8011d3c:	fb05 a119 	mls	r1, r5, r9, sl
 8011d40:	4640      	mov	r0, r8
 8011d42:	f7ff ffbf 	bl	8011cc4 <_ZN8touchgfx7muldivuEmmmRm>
 8011d46:	9b01      	ldr	r3, [sp, #4]
 8011d48:	6832      	ldr	r2, [r6, #0]
 8011d4a:	fb08 f409 	mul.w	r4, r8, r9
 8011d4e:	441a      	add	r2, r3
 8011d50:	fbb2 f3f5 	udiv	r3, r2, r5
 8011d54:	441c      	add	r4, r3
 8011d56:	443c      	add	r4, r7
 8011d58:	4420      	add	r0, r4
 8011d5a:	fb05 2513 	mls	r5, r5, r3, r2
 8011d5e:	e7db      	b.n	8011d18 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08011d60 <_ZN8touchgfx6muldivElllRl>:
 8011d60:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011d62:	2800      	cmp	r0, #0
 8011d64:	bfba      	itte	lt
 8011d66:	4240      	neglt	r0, r0
 8011d68:	f04f 34ff 	movlt.w	r4, #4294967295
 8011d6c:	2401      	movge	r4, #1
 8011d6e:	2900      	cmp	r1, #0
 8011d70:	bfbc      	itt	lt
 8011d72:	4249      	neglt	r1, r1
 8011d74:	4264      	neglt	r4, r4
 8011d76:	2a00      	cmp	r2, #0
 8011d78:	bfb6      	itet	lt
 8011d7a:	4265      	neglt	r5, r4
 8011d7c:	4625      	movge	r5, r4
 8011d7e:	4252      	neglt	r2, r2
 8011d80:	4288      	cmp	r0, r1
 8011d82:	461e      	mov	r6, r3
 8011d84:	bfc2      	ittt	gt
 8011d86:	4603      	movgt	r3, r0
 8011d88:	4608      	movgt	r0, r1
 8011d8a:	4619      	movgt	r1, r3
 8011d8c:	ab01      	add	r3, sp, #4
 8011d8e:	f7ff ff99 	bl	8011cc4 <_ZN8touchgfx7muldivuEmmmRm>
 8011d92:	9b01      	ldr	r3, [sp, #4]
 8011d94:	4368      	muls	r0, r5
 8011d96:	435c      	muls	r4, r3
 8011d98:	6034      	str	r4, [r6, #0]
 8011d9a:	b002      	add	sp, #8
 8011d9c:	bd70      	pop	{r4, r5, r6, pc}

08011d9e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8011d9e:	2000      	movs	r0, #0
 8011da0:	4770      	bx	lr

08011da2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011da2:	2001      	movs	r0, #1
 8011da4:	4770      	bx	lr

08011da6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011da6:	2002      	movs	r0, #2
 8011da8:	4770      	bx	lr

08011daa <_ZN8touchgfx6ScreenD1Ev>:
 8011daa:	4770      	bx	lr

08011dac <_ZN8touchgfx12GestureEventD1Ev>:
 8011dac:	4770      	bx	lr

08011dae <_ZN8touchgfx9DragEventD1Ev>:
 8011dae:	4770      	bx	lr

08011db0 <_ZN8touchgfx10ClickEventD1Ev>:
 8011db0:	4770      	bx	lr

08011db2 <_ZN8touchgfx10ClickEventD0Ev>:
 8011db2:	b510      	push	{r4, lr}
 8011db4:	210c      	movs	r1, #12
 8011db6:	4604      	mov	r4, r0
 8011db8:	f010 fb5f 	bl	802247a <_ZdlPvj>
 8011dbc:	4620      	mov	r0, r4
 8011dbe:	bd10      	pop	{r4, pc}

08011dc0 <_ZN8touchgfx9DragEventD0Ev>:
 8011dc0:	b510      	push	{r4, lr}
 8011dc2:	2110      	movs	r1, #16
 8011dc4:	4604      	mov	r4, r0
 8011dc6:	f010 fb58 	bl	802247a <_ZdlPvj>
 8011dca:	4620      	mov	r0, r4
 8011dcc:	bd10      	pop	{r4, pc}

08011dce <_ZN8touchgfx12GestureEventD0Ev>:
 8011dce:	b510      	push	{r4, lr}
 8011dd0:	210c      	movs	r1, #12
 8011dd2:	4604      	mov	r4, r0
 8011dd4:	f010 fb51 	bl	802247a <_ZdlPvj>
 8011dd8:	4620      	mov	r0, r4
 8011dda:	bd10      	pop	{r4, pc}

08011ddc <_ZN8touchgfx6ScreenD0Ev>:
 8011ddc:	b510      	push	{r4, lr}
 8011dde:	213c      	movs	r1, #60	@ 0x3c
 8011de0:	4604      	mov	r4, r0
 8011de2:	f010 fb4a 	bl	802247a <_ZdlPvj>
 8011de6:	4620      	mov	r0, r4
 8011de8:	bd10      	pop	{r4, pc}
	...

08011dec <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011dec:	b530      	push	{r4, r5, lr}
 8011dee:	460d      	mov	r5, r1
 8011df0:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011df2:	b087      	sub	sp, #28
 8011df4:	4604      	mov	r4, r0
 8011df6:	b301      	cbz	r1, 8011e3a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011df8:	a801      	add	r0, sp, #4
 8011dfa:	f7ff faf7 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011dfe:	892a      	ldrh	r2, [r5, #8]
 8011e00:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011e04:	7928      	ldrb	r0, [r5, #4]
 8011e06:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011e0a:	f88d 0010 	strb.w	r0, [sp, #16]
 8011e0e:	1ad2      	subs	r2, r2, r3
 8011e10:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8011e12:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011e14:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011e18:	441a      	add	r2, r3
 8011e1a:	896b      	ldrh	r3, [r5, #10]
 8011e1c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011e20:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011e24:	1b5b      	subs	r3, r3, r5
 8011e26:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8011e28:	442b      	add	r3, r5
 8011e2a:	4d05      	ldr	r5, [pc, #20]	@ (8011e40 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011e2c:	9503      	str	r5, [sp, #12]
 8011e2e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011e32:	6803      	ldr	r3, [r0, #0]
 8011e34:	a903      	add	r1, sp, #12
 8011e36:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011e38:	4798      	blx	r3
 8011e3a:	b007      	add	sp, #28
 8011e3c:	bd30      	pop	{r4, r5, pc}
 8011e3e:	bf00      	nop
 8011e40:	08025e0c 	.word	0x08025e0c

08011e44 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011e44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e48:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8011e4a:	b08a      	sub	sp, #40	@ 0x28
 8011e4c:	4604      	mov	r4, r0
 8011e4e:	460d      	mov	r5, r1
 8011e50:	b113      	cbz	r3, 8011e58 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8011e52:	790b      	ldrb	r3, [r1, #4]
 8011e54:	2b00      	cmp	r3, #0
 8011e56:	d044      	beq.n	8011ee2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011e58:	f104 0804 	add.w	r8, r4, #4
 8011e5c:	4641      	mov	r1, r8
 8011e5e:	a803      	add	r0, sp, #12
 8011e60:	f7ff fac4 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e64:	792b      	ldrb	r3, [r5, #4]
 8011e66:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011e6a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8011e6e:	b983      	cbnz	r3, 8011e92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011e70:	892a      	ldrh	r2, [r5, #8]
 8011e72:	88e9      	ldrh	r1, [r5, #6]
 8011e74:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8011e78:	1b92      	subs	r2, r2, r6
 8011e7a:	1bc9      	subs	r1, r1, r7
 8011e7c:	9301      	str	r3, [sp, #4]
 8011e7e:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8011e82:	9300      	str	r3, [sp, #0]
 8011e84:	b212      	sxth	r2, r2
 8011e86:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8011e8a:	b209      	sxth	r1, r1
 8011e8c:	4640      	mov	r0, r8
 8011e8e:	f7f8 fe73 	bl	800ab78 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8011e92:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011e94:	b329      	cbz	r1, 8011ee2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011e96:	a805      	add	r0, sp, #20
 8011e98:	f7ff faa8 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e9c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011ea0:	792b      	ldrb	r3, [r5, #4]
 8011ea2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011ea4:	f88d 3020 	strb.w	r3, [sp, #32]
 8011ea8:	1abf      	subs	r7, r7, r2
 8011eaa:	88ea      	ldrh	r2, [r5, #6]
 8011eac:	4417      	add	r7, r2
 8011eae:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8011eb0:	4417      	add	r7, r2
 8011eb2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011eb6:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8011eba:	1ab6      	subs	r6, r6, r2
 8011ebc:	892a      	ldrh	r2, [r5, #8]
 8011ebe:	4416      	add	r6, r2
 8011ec0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011ec2:	4416      	add	r6, r2
 8011ec4:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8011ec8:	4a07      	ldr	r2, [pc, #28]	@ (8011ee8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011eca:	9207      	str	r2, [sp, #28]
 8011ecc:	2600      	movs	r6, #0
 8011ece:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8011ed2:	6803      	ldr	r3, [r0, #0]
 8011ed4:	a907      	add	r1, sp, #28
 8011ed6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011ed8:	4798      	blx	r3
 8011eda:	792b      	ldrb	r3, [r5, #4]
 8011edc:	b10b      	cbz	r3, 8011ee2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011ede:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8011ee2:	b00a      	add	sp, #40	@ 0x28
 8011ee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ee8:	08025de4 	.word	0x08025de4

08011eec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011eec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ef0:	460c      	mov	r4, r1
 8011ef2:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011ef4:	b088      	sub	sp, #32
 8011ef6:	4605      	mov	r5, r0
 8011ef8:	2900      	cmp	r1, #0
 8011efa:	d06d      	beq.n	8011fd8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011efc:	4668      	mov	r0, sp
 8011efe:	f7ff fa75 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f02:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8011f04:	88e3      	ldrh	r3, [r4, #6]
 8011f06:	f9bd 8000 	ldrsh.w	r8, [sp]
 8011f0a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011f0e:	440b      	add	r3, r1
 8011f10:	b21b      	sxth	r3, r3
 8011f12:	4543      	cmp	r3, r8
 8011f14:	db31      	blt.n	8011f7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011f16:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011f1a:	44c4      	add	ip, r8
 8011f1c:	fa0f fc8c 	sxth.w	ip, ip
 8011f20:	4563      	cmp	r3, ip
 8011f22:	da2a      	bge.n	8011f7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011f24:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8011f26:	8926      	ldrh	r6, [r4, #8]
 8011f28:	4416      	add	r6, r2
 8011f2a:	b236      	sxth	r6, r6
 8011f2c:	42be      	cmp	r6, r7
 8011f2e:	db24      	blt.n	8011f7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011f30:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011f34:	4438      	add	r0, r7
 8011f36:	b200      	sxth	r0, r0
 8011f38:	4286      	cmp	r6, r0
 8011f3a:	da1e      	bge.n	8011f7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011f3c:	8963      	ldrh	r3, [r4, #10]
 8011f3e:	4419      	add	r1, r3
 8011f40:	b209      	sxth	r1, r1
 8011f42:	4541      	cmp	r1, r8
 8011f44:	db08      	blt.n	8011f58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011f46:	4561      	cmp	r1, ip
 8011f48:	da06      	bge.n	8011f58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011f4a:	89a3      	ldrh	r3, [r4, #12]
 8011f4c:	441a      	add	r2, r3
 8011f4e:	b212      	sxth	r2, r2
 8011f50:	42ba      	cmp	r2, r7
 8011f52:	db01      	blt.n	8011f58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011f54:	4282      	cmp	r2, r0
 8011f56:	db10      	blt.n	8011f7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011f58:	4b21      	ldr	r3, [pc, #132]	@ (8011fe0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011f5a:	9304      	str	r3, [sp, #16]
 8011f5c:	2302      	movs	r3, #2
 8011f5e:	f88d 3014 	strb.w	r3, [sp, #20]
 8011f62:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011f64:	2300      	movs	r3, #0
 8011f66:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011f6a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011f6e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011f72:	6803      	ldr	r3, [r0, #0]
 8011f74:	a904      	add	r1, sp, #16
 8011f76:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011f78:	4798      	blx	r3
 8011f7a:	1d29      	adds	r1, r5, #4
 8011f7c:	a802      	add	r0, sp, #8
 8011f7e:	f7ff fa35 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f82:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011f86:	88e0      	ldrh	r0, [r4, #6]
 8011f88:	7921      	ldrb	r1, [r4, #4]
 8011f8a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8011f8e:	8922      	ldrh	r2, [r4, #8]
 8011f90:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8011f92:	f88d 1014 	strb.w	r1, [sp, #20]
 8011f96:	eba3 0808 	sub.w	r8, r3, r8
 8011f9a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011f9e:	1bdf      	subs	r7, r3, r7
 8011fa0:	b2bb      	uxth	r3, r7
 8011fa2:	fa1f f888 	uxth.w	r8, r8
 8011fa6:	8967      	ldrh	r7, [r4, #10]
 8011fa8:	89a4      	ldrh	r4, [r4, #12]
 8011faa:	4440      	add	r0, r8
 8011fac:	4460      	add	r0, ip
 8011fae:	441a      	add	r2, r3
 8011fb0:	44b8      	add	r8, r7
 8011fb2:	4423      	add	r3, r4
 8011fb4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011fb8:	4433      	add	r3, r6
 8011fba:	4432      	add	r2, r6
 8011fbc:	44e0      	add	r8, ip
 8011fbe:	4c09      	ldr	r4, [pc, #36]	@ (8011fe4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011fc0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011fc2:	9404      	str	r4, [sp, #16]
 8011fc4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011fc8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011fcc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011fd0:	6803      	ldr	r3, [r0, #0]
 8011fd2:	a904      	add	r1, sp, #16
 8011fd4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011fd6:	4798      	blx	r3
 8011fd8:	b008      	add	sp, #32
 8011fda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011fde:	bf00      	nop
 8011fe0:	08025de4 	.word	0x08025de4
 8011fe4:	08025df8 	.word	0x08025df8

08011fe8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011fe8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011fea:	4604      	mov	r4, r0
 8011fec:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011ff0:	3201      	adds	r2, #1
 8011ff2:	d112      	bne.n	801201a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011ff4:	6803      	ldr	r3, [r0, #0]
 8011ff6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011ffa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011ffe:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012002:	2500      	movs	r5, #0
 8012004:	9500      	str	r5, [sp, #0]
 8012006:	466d      	mov	r5, sp
 8012008:	4629      	mov	r1, r5
 801200a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801200e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012010:	4798      	blx	r3
 8012012:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012016:	e884 0003 	stmia.w	r4, {r0, r1}
 801201a:	4620      	mov	r0, r4
 801201c:	b003      	add	sp, #12
 801201e:	bd30      	pop	{r4, r5, pc}

08012020 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012020:	b513      	push	{r0, r1, r4, lr}
 8012022:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8012026:	3301      	adds	r3, #1
 8012028:	4604      	mov	r4, r0
 801202a:	d109      	bne.n	8012040 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801202c:	4601      	mov	r1, r0
 801202e:	4668      	mov	r0, sp
 8012030:	f7ff f9dc 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012034:	f8bd 3000 	ldrh.w	r3, [sp]
 8012038:	8423      	strh	r3, [r4, #32]
 801203a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801203e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8012040:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012044:	b002      	add	sp, #8
 8012046:	bd10      	pop	{r4, pc}

08012048 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012048:	b513      	push	{r0, r1, r4, lr}
 801204a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801204e:	3301      	adds	r3, #1
 8012050:	4604      	mov	r4, r0
 8012052:	d109      	bne.n	8012068 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012054:	4601      	mov	r1, r0
 8012056:	4668      	mov	r0, sp
 8012058:	f7ff f9c8 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801205c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012060:	8423      	strh	r3, [r4, #32]
 8012062:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012066:	8463      	strh	r3, [r4, #34]	@ 0x22
 8012068:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 801206c:	b002      	add	sp, #8
 801206e:	bd10      	pop	{r4, pc}

08012070 <_ZN8touchgfx6ScreenC1Ev>:
 8012070:	b570      	push	{r4, r5, r6, lr}
 8012072:	4605      	mov	r5, r0
 8012074:	4b16      	ldr	r3, [pc, #88]	@ (80120d0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8012076:	f845 3b04 	str.w	r3, [r5], #4
 801207a:	2300      	movs	r3, #0
 801207c:	8103      	strh	r3, [r0, #8]
 801207e:	8143      	strh	r3, [r0, #10]
 8012080:	8183      	strh	r3, [r0, #12]
 8012082:	81c3      	strh	r3, [r0, #14]
 8012084:	8203      	strh	r3, [r0, #16]
 8012086:	8243      	strh	r3, [r0, #18]
 8012088:	8283      	strh	r3, [r0, #20]
 801208a:	82c3      	strh	r3, [r0, #22]
 801208c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012090:	6203      	str	r3, [r0, #32]
 8012092:	8483      	strh	r3, [r0, #36]	@ 0x24
 8012094:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8012096:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801209a:	4a0e      	ldr	r2, [pc, #56]	@ (80120d4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801209c:	6343      	str	r3, [r0, #52]	@ 0x34
 801209e:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80120a2:	4b0d      	ldr	r3, [pc, #52]	@ (80120d8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80120a4:	6042      	str	r2, [r0, #4]
 80120a6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80120aa:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80120ac:	4a0b      	ldr	r2, [pc, #44]	@ (80120dc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80120ae:	4604      	mov	r4, r0
 80120b0:	2101      	movs	r1, #1
 80120b2:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80120b6:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80120ba:	f9b2 1000 	ldrsh.w	r1, [r2]
 80120be:	4628      	mov	r0, r5
 80120c0:	4798      	blx	r3
 80120c2:	6863      	ldr	r3, [r4, #4]
 80120c4:	4628      	mov	r0, r5
 80120c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80120c8:	4631      	mov	r1, r6
 80120ca:	4798      	blx	r3
 80120cc:	4620      	mov	r0, r4
 80120ce:	bd70      	pop	{r4, r5, r6, pc}
 80120d0:	08025e20 	.word	0x08025e20
 80120d4:	0802597c 	.word	0x0802597c
 80120d8:	20014034 	.word	0x20014034
 80120dc:	20014032 	.word	0x20014032

080120e0 <_ZN8touchgfx6Screen4drawEv>:
 80120e0:	b507      	push	{r0, r1, r2, lr}
 80120e2:	4b09      	ldr	r3, [pc, #36]	@ (8012108 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80120e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80120e8:	4b08      	ldr	r3, [pc, #32]	@ (801210c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80120ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 80120ee:	f9b3 3000 	ldrsh.w	r3, [r3]
 80120f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80120f6:	6803      	ldr	r3, [r0, #0]
 80120f8:	2100      	movs	r1, #0
 80120fa:	9100      	str	r1, [sp, #0]
 80120fc:	689b      	ldr	r3, [r3, #8]
 80120fe:	4669      	mov	r1, sp
 8012100:	4798      	blx	r3
 8012102:	b003      	add	sp, #12
 8012104:	f85d fb04 	ldr.w	pc, [sp], #4
 8012108:	20014032 	.word	0x20014032
 801210c:	20014034 	.word	0x20014034

08012110 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012114:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012118:	2b00      	cmp	r3, #0
 801211a:	b089      	sub	sp, #36	@ 0x24
 801211c:	4680      	mov	r8, r0
 801211e:	460c      	mov	r4, r1
 8012120:	4615      	mov	r5, r2
 8012122:	dd0e      	ble.n	8012142 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012124:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012128:	2b00      	cmp	r3, #0
 801212a:	dd0a      	ble.n	8012142 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801212c:	4628      	mov	r0, r5
 801212e:	f7ff ff5b 	bl	8011fe8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012132:	4621      	mov	r1, r4
 8012134:	f7fd fe2d 	bl	800fd92 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012138:	69eb      	ldr	r3, [r5, #28]
 801213a:	b928      	cbnz	r0, 8012148 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801213c:	461d      	mov	r5, r3
 801213e:	2b00      	cmp	r3, #0
 8012140:	d1f4      	bne.n	801212c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012142:	b009      	add	sp, #36	@ 0x24
 8012144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012148:	ae04      	add	r6, sp, #16
 801214a:	2b00      	cmp	r3, #0
 801214c:	f000 80b5 	beq.w	80122ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012150:	682b      	ldr	r3, [r5, #0]
 8012152:	4629      	mov	r1, r5
 8012154:	68db      	ldr	r3, [r3, #12]
 8012156:	a802      	add	r0, sp, #8
 8012158:	4798      	blx	r3
 801215a:	4628      	mov	r0, r5
 801215c:	f7ff ff60 	bl	8012020 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012160:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012164:	4407      	add	r7, r0
 8012166:	4628      	mov	r0, r5
 8012168:	f7ff ff6e 	bl	8012048 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801216c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012170:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012174:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012178:	4418      	add	r0, r3
 801217a:	4621      	mov	r1, r4
 801217c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012180:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012184:	b23f      	sxth	r7, r7
 8012186:	4630      	mov	r0, r6
 8012188:	f8ad 3016 	strh.w	r3, [sp, #22]
 801218c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012190:	f7f8 fdd6 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 8012194:	4628      	mov	r0, r5
 8012196:	f7ff ff27 	bl	8011fe8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801219a:	4602      	mov	r2, r0
 801219c:	e896 0003 	ldmia.w	r6, {r0, r1}
 80121a0:	ab06      	add	r3, sp, #24
 80121a2:	e883 0003 	stmia.w	r3, {r0, r1}
 80121a6:	4611      	mov	r1, r2
 80121a8:	4618      	mov	r0, r3
 80121aa:	f7f8 fdc9 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 80121ae:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80121b2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80121b6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80121ba:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80121be:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80121c2:	4299      	cmp	r1, r3
 80121c4:	d10b      	bne.n	80121de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80121c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80121ca:	4552      	cmp	r2, sl
 80121cc:	d107      	bne.n	80121de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80121ce:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80121d2:	455a      	cmp	r2, fp
 80121d4:	d103      	bne.n	80121de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80121d6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80121da:	454a      	cmp	r2, r9
 80121dc:	d06d      	beq.n	80122ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80121de:	f1bb 0f00 	cmp.w	fp, #0
 80121e2:	dd65      	ble.n	80122b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80121e4:	f1b9 0f00 	cmp.w	r9, #0
 80121e8:	dd62      	ble.n	80122b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80121ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80121ee:	fa1f f08a 	uxth.w	r0, sl
 80121f2:	4552      	cmp	r2, sl
 80121f4:	9000      	str	r0, [sp, #0]
 80121f6:	da12      	bge.n	801221e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80121f8:	9301      	str	r3, [sp, #4]
 80121fa:	9b00      	ldr	r3, [sp, #0]
 80121fc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012200:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012204:	1a9a      	subs	r2, r3, r2
 8012206:	f8ad 1010 	strh.w	r1, [sp, #16]
 801220a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801220e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012212:	69ea      	ldr	r2, [r5, #28]
 8012214:	4631      	mov	r1, r6
 8012216:	4640      	mov	r0, r8
 8012218:	f7ff ff7a 	bl	8012110 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801221c:	9b01      	ldr	r3, [sp, #4]
 801221e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012222:	429a      	cmp	r2, r3
 8012224:	b29f      	uxth	r7, r3
 8012226:	da0d      	bge.n	8012244 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012228:	f8ad 2010 	strh.w	r2, [sp, #16]
 801222c:	1aba      	subs	r2, r7, r2
 801222e:	f8ad a012 	strh.w	sl, [sp, #18]
 8012232:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012236:	f8ad 9016 	strh.w	r9, [sp, #22]
 801223a:	69ea      	ldr	r2, [r5, #28]
 801223c:	4631      	mov	r1, r6
 801223e:	4640      	mov	r0, r8
 8012240:	f7ff ff66 	bl	8012110 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012244:	8822      	ldrh	r2, [r4, #0]
 8012246:	88a3      	ldrh	r3, [r4, #4]
 8012248:	445f      	add	r7, fp
 801224a:	4413      	add	r3, r2
 801224c:	b29b      	uxth	r3, r3
 801224e:	b2bf      	uxth	r7, r7
 8012250:	b23a      	sxth	r2, r7
 8012252:	b219      	sxth	r1, r3
 8012254:	4291      	cmp	r1, r2
 8012256:	dd0d      	ble.n	8012274 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012258:	1bdb      	subs	r3, r3, r7
 801225a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801225e:	f8ad a012 	strh.w	sl, [sp, #18]
 8012262:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012266:	f8ad 9016 	strh.w	r9, [sp, #22]
 801226a:	69ea      	ldr	r2, [r5, #28]
 801226c:	4631      	mov	r1, r6
 801226e:	4640      	mov	r0, r8
 8012270:	f7ff ff4e 	bl	8012110 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012274:	88e2      	ldrh	r2, [r4, #6]
 8012276:	8863      	ldrh	r3, [r4, #2]
 8012278:	4413      	add	r3, r2
 801227a:	9a00      	ldr	r2, [sp, #0]
 801227c:	444a      	add	r2, r9
 801227e:	b29b      	uxth	r3, r3
 8012280:	fa1f f982 	uxth.w	r9, r2
 8012284:	fa0f f289 	sxth.w	r2, r9
 8012288:	b219      	sxth	r1, r3
 801228a:	428a      	cmp	r2, r1
 801228c:	da15      	bge.n	80122ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801228e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012292:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012296:	f8ad 1014 	strh.w	r1, [sp, #20]
 801229a:	eba3 0309 	sub.w	r3, r3, r9
 801229e:	f8ad 0010 	strh.w	r0, [sp, #16]
 80122a2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80122a6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80122aa:	69ea      	ldr	r2, [r5, #28]
 80122ac:	4631      	mov	r1, r6
 80122ae:	e001      	b.n	80122b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80122b0:	69ea      	ldr	r2, [r5, #28]
 80122b2:	4621      	mov	r1, r4
 80122b4:	4640      	mov	r0, r8
 80122b6:	f7ff ff2b 	bl	8012110 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80122ba:	4628      	mov	r0, r5
 80122bc:	f7ff fe94 	bl	8011fe8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80122c0:	6861      	ldr	r1, [r4, #4]
 80122c2:	4602      	mov	r2, r0
 80122c4:	6820      	ldr	r0, [r4, #0]
 80122c6:	4633      	mov	r3, r6
 80122c8:	c303      	stmia	r3!, {r0, r1}
 80122ca:	4611      	mov	r1, r2
 80122cc:	4630      	mov	r0, r6
 80122ce:	f7f8 fd37 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 80122d2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80122d6:	2b00      	cmp	r3, #0
 80122d8:	f77f af33 	ble.w	8012142 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80122dc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80122e0:	2b00      	cmp	r3, #0
 80122e2:	f77f af2e 	ble.w	8012142 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80122e6:	4628      	mov	r0, r5
 80122e8:	f7ff fe9a 	bl	8012020 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80122ec:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80122f0:	1a18      	subs	r0, r3, r0
 80122f2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80122f6:	4628      	mov	r0, r5
 80122f8:	f7ff fea6 	bl	8012048 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80122fc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012300:	1a18      	subs	r0, r3, r0
 8012302:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012306:	682b      	ldr	r3, [r5, #0]
 8012308:	4631      	mov	r1, r6
 801230a:	689b      	ldr	r3, [r3, #8]
 801230c:	4628      	mov	r0, r5
 801230e:	4798      	blx	r3
 8012310:	e717      	b.n	8012142 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012312 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012312:	b570      	push	{r4, r5, r6, lr}
 8012314:	460c      	mov	r4, r1
 8012316:	b086      	sub	sp, #24
 8012318:	1d06      	adds	r6, r0, #4
 801231a:	2300      	movs	r3, #0
 801231c:	4631      	mov	r1, r6
 801231e:	4605      	mov	r5, r0
 8012320:	a802      	add	r0, sp, #8
 8012322:	9301      	str	r3, [sp, #4]
 8012324:	f7ff f862 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012328:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801232c:	8822      	ldrh	r2, [r4, #0]
 801232e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012332:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012336:	f8ad 0014 	strh.w	r0, [sp, #20]
 801233a:	1ad2      	subs	r2, r2, r3
 801233c:	8863      	ldrh	r3, [r4, #2]
 801233e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012342:	1a5b      	subs	r3, r3, r1
 8012344:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012348:	f8ad 1016 	strh.w	r1, [sp, #22]
 801234c:	aa01      	add	r2, sp, #4
 801234e:	a904      	add	r1, sp, #16
 8012350:	4630      	mov	r0, r6
 8012352:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012356:	f7f8 fdcb 	bl	800aef0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801235a:	9a01      	ldr	r2, [sp, #4]
 801235c:	b11a      	cbz	r2, 8012366 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801235e:	4621      	mov	r1, r4
 8012360:	4628      	mov	r0, r5
 8012362:	f7ff fed5 	bl	8012110 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012366:	b006      	add	sp, #24
 8012368:	bd70      	pop	{r4, r5, r6, pc}

0801236a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801236a:	b530      	push	{r4, r5, lr}
 801236c:	4602      	mov	r2, r0
 801236e:	4604      	mov	r4, r0
 8012370:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012374:	b085      	sub	sp, #20
 8012376:	460d      	mov	r5, r1
 8012378:	6851      	ldr	r1, [r2, #4]
 801237a:	466b      	mov	r3, sp
 801237c:	c303      	stmia	r3!, {r0, r1}
 801237e:	4629      	mov	r1, r5
 8012380:	4668      	mov	r0, sp
 8012382:	f7f8 fcdd 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 8012386:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801238a:	b12b      	cbz	r3, 8012398 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801238c:	4669      	mov	r1, sp
 801238e:	4620      	mov	r0, r4
 8012390:	f7ff ffbf 	bl	8012312 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012394:	b005      	add	sp, #20
 8012396:	bd30      	pop	{r4, r5, pc}
 8012398:	3404      	adds	r4, #4
 801239a:	4621      	mov	r1, r4
 801239c:	a802      	add	r0, sp, #8
 801239e:	f7ff f825 	bl	80113ec <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80123a2:	f8bd 3000 	ldrh.w	r3, [sp]
 80123a6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80123aa:	1a9b      	subs	r3, r3, r2
 80123ac:	f8ad 3000 	strh.w	r3, [sp]
 80123b0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80123b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80123b8:	4669      	mov	r1, sp
 80123ba:	1a9b      	subs	r3, r3, r2
 80123bc:	4620      	mov	r0, r4
 80123be:	f8ad 3002 	strh.w	r3, [sp, #2]
 80123c2:	f7f8 fd5c 	bl	800ae7e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80123c6:	e7e5      	b.n	8012394 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080123c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80123c8:	680a      	ldr	r2, [r1, #0]
 80123ca:	460b      	mov	r3, r1
 80123cc:	6992      	ldr	r2, [r2, #24]
 80123ce:	1d01      	adds	r1, r0, #4
 80123d0:	4618      	mov	r0, r3
 80123d2:	4710      	bx	r2

080123d4 <_ZN8touchgfx12TextProviderC1Ev>:
 80123d4:	b538      	push	{r3, r4, r5, lr}
 80123d6:	2500      	movs	r5, #0
 80123d8:	2302      	movs	r3, #2
 80123da:	4604      	mov	r4, r0
 80123dc:	e9c0 5500 	strd	r5, r5, [r0]
 80123e0:	7403      	strb	r3, [r0, #16]
 80123e2:	6145      	str	r5, [r0, #20]
 80123e4:	7605      	strb	r5, [r0, #24]
 80123e6:	83c5      	strh	r5, [r0, #30]
 80123e8:	8405      	strh	r5, [r0, #32]
 80123ea:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80123ec:	8705      	strh	r5, [r0, #56]	@ 0x38
 80123ee:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 80123f0:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 80123f4:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 80123f8:	220e      	movs	r2, #14
 80123fa:	4629      	mov	r1, r5
 80123fc:	304c      	adds	r0, #76	@ 0x4c
 80123fe:	f011 f9fc 	bl	80237fa <memset>
 8012402:	2301      	movs	r3, #1
 8012404:	4620      	mov	r0, r4
 8012406:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 801240a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801240e:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8012412:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8012416:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801241a:	f7f0 ff9d 	bl	8003358 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801241e:	4620      	mov	r0, r4
 8012420:	bd38      	pop	{r3, r4, r5, pc}

08012422 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012422:	b530      	push	{r4, r5, lr}
 8012424:	2500      	movs	r5, #0
 8012426:	2401      	movs	r4, #1
 8012428:	6843      	ldr	r3, [r0, #4]
 801242a:	b913      	cbnz	r3, 8012432 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801242c:	6803      	ldr	r3, [r0, #0]
 801242e:	b313      	cbz	r3, 8012476 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012430:	6043      	str	r3, [r0, #4]
 8012432:	7e03      	ldrb	r3, [r0, #24]
 8012434:	b143      	cbz	r3, 8012448 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012436:	6943      	ldr	r3, [r0, #20]
 8012438:	b12b      	cbz	r3, 8012446 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801243a:	881a      	ldrh	r2, [r3, #0]
 801243c:	b11a      	cbz	r2, 8012446 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801243e:	1c9a      	adds	r2, r3, #2
 8012440:	6142      	str	r2, [r0, #20]
 8012442:	8818      	ldrh	r0, [r3, #0]
 8012444:	bd30      	pop	{r4, r5, pc}
 8012446:	7605      	strb	r5, [r0, #24]
 8012448:	6843      	ldr	r3, [r0, #4]
 801244a:	8819      	ldrh	r1, [r3, #0]
 801244c:	b199      	cbz	r1, 8012476 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801244e:	1c9a      	adds	r2, r3, #2
 8012450:	2902      	cmp	r1, #2
 8012452:	6042      	str	r2, [r0, #4]
 8012454:	d1f5      	bne.n	8012442 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012456:	7c03      	ldrb	r3, [r0, #16]
 8012458:	2b01      	cmp	r3, #1
 801245a:	d8e5      	bhi.n	8012428 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801245c:	1c5a      	adds	r2, r3, #1
 801245e:	3302      	adds	r3, #2
 8012460:	7402      	strb	r2, [r0, #16]
 8012462:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012466:	6143      	str	r3, [r0, #20]
 8012468:	2b00      	cmp	r3, #0
 801246a:	d0dd      	beq.n	8012428 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801246c:	881b      	ldrh	r3, [r3, #0]
 801246e:	2b00      	cmp	r3, #0
 8012470:	d0da      	beq.n	8012428 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012472:	7604      	strb	r4, [r0, #24]
 8012474:	e7d8      	b.n	8012428 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012476:	2000      	movs	r0, #0
 8012478:	e7e4      	b.n	8012444 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801247a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801247a:	b430      	push	{r4, r5}
 801247c:	6001      	str	r1, [r0, #0]
 801247e:	2100      	movs	r1, #0
 8012480:	6041      	str	r1, [r0, #4]
 8012482:	6815      	ldr	r5, [r2, #0]
 8012484:	6085      	str	r5, [r0, #8]
 8012486:	6852      	ldr	r2, [r2, #4]
 8012488:	6443      	str	r3, [r0, #68]	@ 0x44
 801248a:	9b02      	ldr	r3, [sp, #8]
 801248c:	60c2      	str	r2, [r0, #12]
 801248e:	7401      	strb	r1, [r0, #16]
 8012490:	6141      	str	r1, [r0, #20]
 8012492:	7601      	strb	r1, [r0, #24]
 8012494:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012496:	8401      	strh	r1, [r0, #32]
 8012498:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 801249c:	6483      	str	r3, [r0, #72]	@ 0x48
 801249e:	bc30      	pop	{r4, r5}
 80124a0:	f7f0 bf5a 	b.w	8003358 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080124a4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80124a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80124a6:	4605      	mov	r5, r0
 80124a8:	4608      	mov	r0, r1
 80124aa:	b1e9      	cbz	r1, 80124e8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80124ac:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 80124b0:	460b      	mov	r3, r1
 80124b2:	f101 0708 	add.w	r7, r1, #8
 80124b6:	4622      	mov	r2, r4
 80124b8:	6818      	ldr	r0, [r3, #0]
 80124ba:	6859      	ldr	r1, [r3, #4]
 80124bc:	4626      	mov	r6, r4
 80124be:	c603      	stmia	r6!, {r0, r1}
 80124c0:	3308      	adds	r3, #8
 80124c2:	42bb      	cmp	r3, r7
 80124c4:	4634      	mov	r4, r6
 80124c6:	d1f7      	bne.n	80124b8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80124c8:	6818      	ldr	r0, [r3, #0]
 80124ca:	6030      	str	r0, [r6, #0]
 80124cc:	889b      	ldrh	r3, [r3, #4]
 80124ce:	80b3      	strh	r3, [r6, #4]
 80124d0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80124d4:	015b      	lsls	r3, r3, #5
 80124d6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80124da:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 80124de:	430b      	orrs	r3, r1
 80124e0:	425b      	negs	r3, r3
 80124e2:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 80124e6:	4610      	mov	r0, r2
 80124e8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080124ea <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80124ea:	b538      	push	{r3, r4, r5, lr}
 80124ec:	460c      	mov	r4, r1
 80124ee:	6811      	ldr	r1, [r2, #0]
 80124f0:	4610      	mov	r0, r2
 80124f2:	68cd      	ldr	r5, [r1, #12]
 80124f4:	4619      	mov	r1, r3
 80124f6:	47a8      	blx	r5
 80124f8:	2800      	cmp	r0, #0
 80124fa:	bf08      	it	eq
 80124fc:	4620      	moveq	r0, r4
 80124fe:	bd38      	pop	{r3, r4, r5, pc}

08012500 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012504:	468c      	mov	ip, r1
 8012506:	4605      	mov	r5, r0
 8012508:	4614      	mov	r4, r2
 801250a:	b942      	cbnz	r2, 801251e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 801250c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8012510:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8012514:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8012518:	4620      	mov	r0, r4
 801251a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801251e:	7b50      	ldrb	r0, [r2, #13]
 8012520:	8893      	ldrh	r3, [r2, #4]
 8012522:	0106      	lsls	r6, r0, #4
 8012524:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8012528:	79e6      	ldrb	r6, [r4, #7]
 801252a:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 801252e:	4316      	orrs	r6, r2
 8012530:	185a      	adds	r2, r3, r1
 8012532:	b291      	uxth	r1, r2
 8012534:	291d      	cmp	r1, #29
 8012536:	b2b7      	uxth	r7, r6
 8012538:	d87e      	bhi.n	8012638 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801253a:	2201      	movs	r2, #1
 801253c:	408a      	lsls	r2, r1
 801253e:	498a      	ldr	r1, [pc, #552]	@ (8012768 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8012540:	420a      	tst	r2, r1
 8012542:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8012546:	d12d      	bne.n	80125a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012548:	f412 7f60 	tst.w	r2, #896	@ 0x380
 801254c:	d074      	beq.n	8012638 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801254e:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8012552:	4623      	mov	r3, r4
 8012554:	f104 0e08 	add.w	lr, r4, #8
 8012558:	4614      	mov	r4, r2
 801255a:	6818      	ldr	r0, [r3, #0]
 801255c:	6859      	ldr	r1, [r3, #4]
 801255e:	4694      	mov	ip, r2
 8012560:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012564:	3308      	adds	r3, #8
 8012566:	4573      	cmp	r3, lr
 8012568:	4662      	mov	r2, ip
 801256a:	d1f6      	bne.n	801255a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801256c:	6818      	ldr	r0, [r3, #0]
 801256e:	f8cc 0000 	str.w	r0, [ip]
 8012572:	889b      	ldrh	r3, [r3, #4]
 8012574:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012578:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 801257c:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8012580:	b2b3      	uxth	r3, r6
 8012582:	1aca      	subs	r2, r1, r3
 8012584:	b292      	uxth	r2, r2
 8012586:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 801258a:	10d2      	asrs	r2, r2, #3
 801258c:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8012590:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8012594:	4302      	orrs	r2, r0
 8012596:	1bcf      	subs	r7, r1, r7
 8012598:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 801259c:	1afb      	subs	r3, r7, r3
 801259e:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 80125a2:	e7b9      	b.n	8012518 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80125a4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80125a8:	4623      	mov	r3, r4
 80125aa:	f104 0808 	add.w	r8, r4, #8
 80125ae:	4614      	mov	r4, r2
 80125b0:	6818      	ldr	r0, [r3, #0]
 80125b2:	6859      	ldr	r1, [r3, #4]
 80125b4:	4696      	mov	lr, r2
 80125b6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80125ba:	3308      	adds	r3, #8
 80125bc:	4543      	cmp	r3, r8
 80125be:	4672      	mov	r2, lr
 80125c0:	d1f6      	bne.n	80125b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 80125c2:	6818      	ldr	r0, [r3, #0]
 80125c4:	f8ce 0000 	str.w	r0, [lr]
 80125c8:	889b      	ldrh	r3, [r3, #4]
 80125ca:	f8ae 3004 	strh.w	r3, [lr, #4]
 80125ce:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 80125d0:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80125d4:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 80125d6:	f640 6333 	movw	r3, #3635	@ 0xe33
 80125da:	4299      	cmp	r1, r3
 80125dc:	d111      	bne.n	8012602 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80125de:	f8dc 3000 	ldr.w	r3, [ip]
 80125e2:	4660      	mov	r0, ip
 80125e4:	68db      	ldr	r3, [r3, #12]
 80125e6:	4798      	blx	r3
 80125e8:	7b41      	ldrb	r1, [r0, #13]
 80125ea:	00cb      	lsls	r3, r1, #3
 80125ec:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80125f0:	7a03      	ldrb	r3, [r0, #8]
 80125f2:	4313      	orrs	r3, r2
 80125f4:	064a      	lsls	r2, r1, #25
 80125f6:	bf44      	itt	mi
 80125f8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80125fc:	b21b      	sxthmi	r3, r3
 80125fe:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8012602:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8012606:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 801260a:	443b      	add	r3, r7
 801260c:	4433      	add	r3, r6
 801260e:	b29b      	uxth	r3, r3
 8012610:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8012614:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8012618:	10db      	asrs	r3, r3, #3
 801261a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801261e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012622:	4313      	orrs	r3, r2
 8012624:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8012628:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 801262c:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8012630:	1a9b      	subs	r3, r3, r2
 8012632:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8012636:	e76f      	b.n	8012518 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8012638:	f023 0204 	bic.w	r2, r3, #4
 801263c:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8012640:	428a      	cmp	r2, r1
 8012642:	d003      	beq.n	801264c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8012644:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8012648:	4293      	cmp	r3, r2
 801264a:	d137      	bne.n	80126bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 801264c:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8012650:	4622      	mov	r2, r4
 8012652:	f104 0808 	add.w	r8, r4, #8
 8012656:	4634      	mov	r4, r6
 8012658:	6810      	ldr	r0, [r2, #0]
 801265a:	6851      	ldr	r1, [r2, #4]
 801265c:	46b6      	mov	lr, r6
 801265e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012662:	3208      	adds	r2, #8
 8012664:	4542      	cmp	r2, r8
 8012666:	4676      	mov	r6, lr
 8012668:	d1f6      	bne.n	8012658 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 801266a:	6810      	ldr	r0, [r2, #0]
 801266c:	f8ce 0000 	str.w	r0, [lr]
 8012670:	8892      	ldrh	r2, [r2, #4]
 8012672:	f8ae 2004 	strh.w	r2, [lr, #4]
 8012676:	3b01      	subs	r3, #1
 8012678:	b29b      	uxth	r3, r3
 801267a:	4662      	mov	r2, ip
 801267c:	4621      	mov	r1, r4
 801267e:	4628      	mov	r0, r5
 8012680:	f7ff ff33 	bl	80124ea <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012684:	7b41      	ldrb	r1, [r0, #13]
 8012686:	00cb      	lsls	r3, r1, #3
 8012688:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801268c:	7a03      	ldrb	r3, [r0, #8]
 801268e:	0648      	lsls	r0, r1, #25
 8012690:	ea43 0302 	orr.w	r3, r3, r2
 8012694:	bf44      	itt	mi
 8012696:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801269a:	b21b      	sxthmi	r3, r3
 801269c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80126a0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80126a4:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 80126a8:	005b      	lsls	r3, r3, #1
 80126aa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80126ae:	4313      	orrs	r3, r2
 80126b0:	115a      	asrs	r2, r3, #5
 80126b2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80126b6:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 80126ba:	e046      	b.n	801274a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 80126bc:	00c2      	lsls	r2, r0, #3
 80126be:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80126c2:	7a22      	ldrb	r2, [r4, #8]
 80126c4:	430a      	orrs	r2, r1
 80126c6:	0641      	lsls	r1, r0, #25
 80126c8:	bf44      	itt	mi
 80126ca:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 80126ce:	b212      	sxthmi	r2, r2
 80126d0:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 80126d4:	f640 6109 	movw	r1, #3593	@ 0xe09
 80126d8:	f023 0210 	bic.w	r2, r3, #16
 80126dc:	428a      	cmp	r2, r1
 80126de:	d003      	beq.n	80126e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 80126e0:	f640 6213 	movw	r2, #3603	@ 0xe13
 80126e4:	4293      	cmp	r3, r2
 80126e6:	d13d      	bne.n	8012764 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 80126e8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80126ec:	f104 0808 	add.w	r8, r4, #8
 80126f0:	4696      	mov	lr, r2
 80126f2:	6820      	ldr	r0, [r4, #0]
 80126f4:	6861      	ldr	r1, [r4, #4]
 80126f6:	4616      	mov	r6, r2
 80126f8:	c603      	stmia	r6!, {r0, r1}
 80126fa:	3408      	adds	r4, #8
 80126fc:	4544      	cmp	r4, r8
 80126fe:	4632      	mov	r2, r6
 8012700:	d1f7      	bne.n	80126f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8012702:	6820      	ldr	r0, [r4, #0]
 8012704:	6030      	str	r0, [r6, #0]
 8012706:	88a1      	ldrh	r1, [r4, #4]
 8012708:	80b1      	strh	r1, [r6, #4]
 801270a:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 801270e:	0076      	lsls	r6, r6, #1
 8012710:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8012714:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8012718:	4316      	orrs	r6, r2
 801271a:	f640 6213 	movw	r2, #3603	@ 0xe13
 801271e:	4293      	cmp	r3, r2
 8012720:	bf1a      	itte	ne
 8012722:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012726:	b29b      	uxthne	r3, r3
 8012728:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 801272c:	4662      	mov	r2, ip
 801272e:	4671      	mov	r1, lr
 8012730:	4628      	mov	r0, r5
 8012732:	4674      	mov	r4, lr
 8012734:	f7ff fed9 	bl	80124ea <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012738:	7b43      	ldrb	r3, [r0, #13]
 801273a:	7a82      	ldrb	r2, [r0, #10]
 801273c:	005b      	lsls	r3, r3, #1
 801273e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012742:	4313      	orrs	r3, r2
 8012744:	1af6      	subs	r6, r6, r3
 8012746:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 801274a:	7b61      	ldrb	r1, [r4, #13]
 801274c:	00cb      	lsls	r3, r1, #3
 801274e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012752:	7a23      	ldrb	r3, [r4, #8]
 8012754:	4313      	orrs	r3, r2
 8012756:	064a      	lsls	r2, r1, #25
 8012758:	bf44      	itt	mi
 801275a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801275e:	b21b      	sxthmi	r3, r3
 8012760:	1bdb      	subs	r3, r3, r7
 8012762:	e71c      	b.n	801259e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012764:	2300      	movs	r3, #0
 8012766:	e7a6      	b.n	80126b6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8012768:	3fc00079 	.word	0x3fc00079

0801276c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801276c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012770:	4604      	mov	r4, r0
 8012772:	b942      	cbnz	r2, 8012786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012774:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012778:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 801277c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8012780:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8012784:	e047      	b.n	8012816 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012786:	7b51      	ldrb	r1, [r2, #13]
 8012788:	8893      	ldrh	r3, [r2, #4]
 801278a:	010d      	lsls	r5, r1, #4
 801278c:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8012790:	79d5      	ldrb	r5, [r2, #7]
 8012792:	4305      	orrs	r5, r0
 8012794:	2d04      	cmp	r5, #4
 8012796:	bfcc      	ite	gt
 8012798:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801279c:	f04f 0e01 	movle.w	lr, #1
 80127a0:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 80127a4:	f200 80ab 	bhi.w	80128fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80127a8:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 80127ac:	4283      	cmp	r3, r0
 80127ae:	d216      	bcs.n	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127b0:	f240 605b 	movw	r0, #1627	@ 0x65b
 80127b4:	4283      	cmp	r3, r0
 80127b6:	d859      	bhi.n	801286c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80127b8:	f240 6057 	movw	r0, #1623	@ 0x657
 80127bc:	4283      	cmp	r3, r0
 80127be:	d20e      	bcs.n	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127c0:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80127c4:	d24a      	bcs.n	801285c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80127c6:	f240 604e 	movw	r0, #1614	@ 0x64e
 80127ca:	4283      	cmp	r3, r0
 80127cc:	d207      	bcs.n	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80127ce:	f240 601a 	movw	r0, #1562	@ 0x61a
 80127d2:	4283      	cmp	r3, r0
 80127d4:	d02a      	beq.n	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80127d6:	d821      	bhi.n	801281c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80127d8:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 80127dc:	d35b      	bcc.n	8012896 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80127de:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 80127e2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80127e6:	f040 80d0 	bne.w	801298a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80127ea:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 80127ee:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80127f2:	f040 80ca 	bne.w	801298a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80127f6:	00cb      	lsls	r3, r1, #3
 80127f8:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80127fc:	7a13      	ldrb	r3, [r2, #8]
 80127fe:	0649      	lsls	r1, r1, #25
 8012800:	ea43 0300 	orr.w	r3, r3, r0
 8012804:	bf44      	itt	mi
 8012806:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801280a:	b21b      	sxthmi	r3, r3
 801280c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012810:	1b5d      	subs	r5, r3, r5
 8012812:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012816:	4610      	mov	r0, r2
 8012818:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801281c:	f240 604b 	movw	r0, #1611	@ 0x64b
 8012820:	4283      	cmp	r3, r0
 8012822:	d338      	bcc.n	8012896 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012824:	f240 604c 	movw	r0, #1612	@ 0x64c
 8012828:	4283      	cmp	r3, r0
 801282a:	d9d8      	bls.n	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801282c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8012830:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8012834:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012838:	f040 80f2 	bne.w	8012a20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801283c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012840:	f040 80ee 	bne.w	8012a20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012844:	00cb      	lsls	r3, r1, #3
 8012846:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801284a:	7a13      	ldrb	r3, [r2, #8]
 801284c:	064e      	lsls	r6, r1, #25
 801284e:	ea43 0300 	orr.w	r3, r3, r0
 8012852:	bf44      	itt	mi
 8012854:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012858:	b21b      	sxthmi	r3, r3
 801285a:	e7d9      	b.n	8012810 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801285c:	f240 6054 	movw	r0, #1620	@ 0x654
 8012860:	4283      	cmp	r3, r0
 8012862:	d8e3      	bhi.n	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012864:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8012868:	d9e0      	bls.n	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801286a:	e7b8      	b.n	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801286c:	f240 6074 	movw	r0, #1652	@ 0x674
 8012870:	4283      	cmp	r3, r0
 8012872:	d0b4      	beq.n	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012874:	d82d      	bhi.n	80128d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012876:	f240 605e 	movw	r0, #1630	@ 0x65e
 801287a:	4283      	cmp	r3, r0
 801287c:	d804      	bhi.n	8012888 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801287e:	f240 605d 	movw	r0, #1629	@ 0x65d
 8012882:	4283      	cmp	r3, r0
 8012884:	d3d2      	bcc.n	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012886:	e7aa      	b.n	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012888:	f240 605f 	movw	r0, #1631	@ 0x65f
 801288c:	4283      	cmp	r3, r0
 801288e:	d0cd      	beq.n	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012890:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8012894:	d0a3      	beq.n	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012896:	00cb      	lsls	r3, r1, #3
 8012898:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801289c:	7a13      	ldrb	r3, [r2, #8]
 801289e:	0649      	lsls	r1, r1, #25
 80128a0:	ea43 0300 	orr.w	r3, r3, r0
 80128a4:	bf44      	itt	mi
 80128a6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80128aa:	b21b      	sxthmi	r3, r3
 80128ac:	1b5d      	subs	r5, r3, r5
 80128ae:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80128b2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80128b6:	7b53      	ldrb	r3, [r2, #13]
 80128b8:	015b      	lsls	r3, r3, #5
 80128ba:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80128be:	7993      	ldrb	r3, [r2, #6]
 80128c0:	430b      	orrs	r3, r1
 80128c2:	005b      	lsls	r3, r3, #1
 80128c4:	2105      	movs	r1, #5
 80128c6:	fb93 f3f1 	sdiv	r3, r3, r1
 80128ca:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80128ce:	440b      	add	r3, r1
 80128d0:	e756      	b.n	8012780 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80128d2:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 80128d6:	4283      	cmp	r3, r0
 80128d8:	d809      	bhi.n	80128ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80128da:	f240 60df 	movw	r0, #1759	@ 0x6df
 80128de:	4283      	cmp	r3, r0
 80128e0:	f4bf af7d 	bcs.w	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80128e4:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 80128e8:	2b05      	cmp	r3, #5
 80128ea:	d8d4      	bhi.n	8012896 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80128ec:	e777      	b.n	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80128ee:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 80128f2:	4283      	cmp	r3, r0
 80128f4:	d09a      	beq.n	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80128f6:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 80128fa:	4283      	cmp	r3, r0
 80128fc:	e7ca      	b.n	8012894 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80128fe:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8012902:	d22b      	bcs.n	801295c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012904:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8012908:	4283      	cmp	r3, r0
 801290a:	d28f      	bcs.n	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801290c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8012910:	4283      	cmp	r3, r0
 8012912:	d816      	bhi.n	8012942 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012914:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8012918:	4283      	cmp	r3, r0
 801291a:	f4bf af60 	bcs.w	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801291e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8012922:	4283      	cmp	r3, r0
 8012924:	d80a      	bhi.n	801293c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012926:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801292a:	4283      	cmp	r3, r0
 801292c:	f4bf af57 	bcs.w	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012930:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8012934:	4283      	cmp	r3, r0
 8012936:	f43f af79 	beq.w	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801293a:	e7ac      	b.n	8012896 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801293c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8012940:	e7f8      	b.n	8012934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012942:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8012946:	4283      	cmp	r3, r0
 8012948:	d802      	bhi.n	8012950 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801294a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801294e:	e798      	b.n	8012882 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012950:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8012954:	4283      	cmp	r3, r0
 8012956:	f47f af42 	bne.w	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801295a:	e767      	b.n	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801295c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8012960:	4283      	cmp	r3, r0
 8012962:	f43f af63 	beq.w	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012966:	d802      	bhi.n	801296e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012968:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 801296c:	e7f2      	b.n	8012954 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801296e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8012972:	4283      	cmp	r3, r0
 8012974:	d805      	bhi.n	8012982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012976:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801297a:	4283      	cmp	r3, r0
 801297c:	f4ff af2f 	bcc.w	80127de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012980:	e754      	b.n	801282c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012982:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8012986:	4283      	cmp	r3, r0
 8012988:	e7af      	b.n	80128ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801298a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801298e:	4617      	mov	r7, r2
 8012990:	f102 0808 	add.w	r8, r2, #8
 8012994:	4666      	mov	r6, ip
 8012996:	6838      	ldr	r0, [r7, #0]
 8012998:	6879      	ldr	r1, [r7, #4]
 801299a:	46e6      	mov	lr, ip
 801299c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80129a0:	3708      	adds	r7, #8
 80129a2:	4547      	cmp	r7, r8
 80129a4:	46f4      	mov	ip, lr
 80129a6:	d1f6      	bne.n	8012996 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80129a8:	6838      	ldr	r0, [r7, #0]
 80129aa:	f8ce 0000 	str.w	r0, [lr]
 80129ae:	88b9      	ldrh	r1, [r7, #4]
 80129b0:	f8ae 1004 	strh.w	r1, [lr, #4]
 80129b4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80129b8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80129bc:	d009      	beq.n	80129d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80129be:	7b51      	ldrb	r1, [r2, #13]
 80129c0:	7992      	ldrb	r2, [r2, #6]
 80129c2:	0149      	lsls	r1, r1, #5
 80129c4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80129c8:	4311      	orrs	r1, r2
 80129ca:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80129ce:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80129d2:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80129d6:	b2ad      	uxth	r5, r5
 80129d8:	d00d      	beq.n	80129f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80129da:	442b      	add	r3, r5
 80129dc:	b29b      	uxth	r3, r3
 80129de:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80129e2:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80129e6:	10db      	asrs	r3, r3, #3
 80129e8:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80129ec:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80129f0:	4313      	orrs	r3, r2
 80129f2:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80129f6:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80129fa:	00cb      	lsls	r3, r1, #3
 80129fc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012a00:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8012a04:	064f      	lsls	r7, r1, #25
 8012a06:	ea43 0302 	orr.w	r3, r3, r2
 8012a0a:	bf44      	itt	mi
 8012a0c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012a10:	b21b      	sxthmi	r3, r3
 8012a12:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012a16:	1b5b      	subs	r3, r3, r5
 8012a18:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8012a1c:	4632      	mov	r2, r6
 8012a1e:	e6fa      	b.n	8012816 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012a20:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8012a24:	4617      	mov	r7, r2
 8012a26:	f102 0908 	add.w	r9, r2, #8
 8012a2a:	4666      	mov	r6, ip
 8012a2c:	6838      	ldr	r0, [r7, #0]
 8012a2e:	6879      	ldr	r1, [r7, #4]
 8012a30:	46e0      	mov	r8, ip
 8012a32:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8012a36:	3708      	adds	r7, #8
 8012a38:	454f      	cmp	r7, r9
 8012a3a:	46c4      	mov	ip, r8
 8012a3c:	d1f6      	bne.n	8012a2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8012a3e:	6838      	ldr	r0, [r7, #0]
 8012a40:	f8c8 0000 	str.w	r0, [r8]
 8012a44:	88b9      	ldrh	r1, [r7, #4]
 8012a46:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012a4a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8012a4e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012a52:	d009      	beq.n	8012a68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8012a54:	7b51      	ldrb	r1, [r2, #13]
 8012a56:	7992      	ldrb	r2, [r2, #6]
 8012a58:	0149      	lsls	r1, r1, #5
 8012a5a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012a5e:	4311      	orrs	r1, r2
 8012a60:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012a64:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8012a68:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012a6c:	d00e      	beq.n	8012a8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8012a6e:	eba3 030e 	sub.w	r3, r3, lr
 8012a72:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8012a76:	b29b      	uxth	r3, r3
 8012a78:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012a7c:	10db      	asrs	r3, r3, #3
 8012a7e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012a82:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012a86:	4313      	orrs	r3, r2
 8012a88:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8012a8c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8012a90:	00cb      	lsls	r3, r1, #3
 8012a92:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012a96:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8012a9a:	0648      	lsls	r0, r1, #25
 8012a9c:	ea43 0302 	orr.w	r3, r3, r2
 8012aa0:	bf44      	itt	mi
 8012aa2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012aa6:	b21b      	sxthmi	r3, r3
 8012aa8:	1b5d      	subs	r5, r3, r5
 8012aaa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012aae:	e7b5      	b.n	8012a1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012ab0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012ab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ab4:	461e      	mov	r6, r3
 8012ab6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012ab8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012abc:	4604      	mov	r4, r0
 8012abe:	4617      	mov	r7, r2
 8012ac0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012ac4:	f7f0 fc06 	bl	80032d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012ac8:	4605      	mov	r5, r0
 8012aca:	b918      	cbnz	r0, 8012ad4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012acc:	6030      	str	r0, [r6, #0]
 8012ace:	4628      	mov	r0, r5
 8012ad0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ad4:	683b      	ldr	r3, [r7, #0]
 8012ad6:	4601      	mov	r1, r0
 8012ad8:	68db      	ldr	r3, [r3, #12]
 8012ada:	4638      	mov	r0, r7
 8012adc:	4798      	blx	r3
 8012ade:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8012ae2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8012ae6:	4602      	mov	r2, r0
 8012ae8:	6030      	str	r0, [r6, #0]
 8012aea:	d213      	bcs.n	8012b14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012aec:	4643      	mov	r3, r8
 8012aee:	4639      	mov	r1, r7
 8012af0:	4620      	mov	r0, r4
 8012af2:	f7ff fe3b 	bl	801276c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012af6:	6030      	str	r0, [r6, #0]
 8012af8:	6833      	ldr	r3, [r6, #0]
 8012afa:	b143      	cbz	r3, 8012b0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012afc:	7b5a      	ldrb	r2, [r3, #13]
 8012afe:	7a9b      	ldrb	r3, [r3, #10]
 8012b00:	0052      	lsls	r2, r2, #1
 8012b02:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8012b06:	4313      	orrs	r3, r2
 8012b08:	bf0c      	ite	eq
 8012b0a:	2301      	moveq	r3, #1
 8012b0c:	2300      	movne	r3, #0
 8012b0e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8012b12:	e7dc      	b.n	8012ace <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012b14:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012b18:	b29b      	uxth	r3, r3
 8012b1a:	2b7f      	cmp	r3, #127	@ 0x7f
 8012b1c:	d804      	bhi.n	8012b28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012b1e:	4639      	mov	r1, r7
 8012b20:	4620      	mov	r0, r4
 8012b22:	f7ff fced 	bl	8012500 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012b26:	e7e6      	b.n	8012af6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012b28:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8012b2c:	2b00      	cmp	r3, #0
 8012b2e:	d0e3      	beq.n	8012af8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012b30:	f640 1302 	movw	r3, #2306	@ 0x902
 8012b34:	429d      	cmp	r5, r3
 8012b36:	d1df      	bne.n	8012af8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012b38:	4601      	mov	r1, r0
 8012b3a:	4620      	mov	r0, r4
 8012b3c:	f7ff fcb2 	bl	80124a4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012b40:	e7d9      	b.n	8012af6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08012b42 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012b42:	b510      	push	{r4, lr}
 8012b44:	4604      	mov	r4, r0
 8012b46:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8012b4a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012b4c:	b1f1      	cbz	r1, 8012b8c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012b4e:	2b0a      	cmp	r3, #10
 8012b50:	d02f      	beq.n	8012bb2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012b52:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8012b54:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012b58:	3901      	subs	r1, #1
 8012b5a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8012b5c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8012b60:	1c51      	adds	r1, r2, #1
 8012b62:	b289      	uxth	r1, r1
 8012b64:	2901      	cmp	r1, #1
 8012b66:	bf84      	itt	hi
 8012b68:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012b6c:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8012b6e:	f103 0201 	add.w	r2, r3, #1
 8012b72:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012b74:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012b76:	bf98      	it	ls
 8012b78:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8012b7a:	4413      	add	r3, r2
 8012b7c:	b29b      	uxth	r3, r3
 8012b7e:	2b09      	cmp	r3, #9
 8012b80:	bf88      	it	hi
 8012b82:	3b0a      	subhi	r3, #10
 8012b84:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012b88:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012b8a:	e7dc      	b.n	8012b46 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012b8c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012b8e:	2b0a      	cmp	r3, #10
 8012b90:	d00f      	beq.n	8012bb2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012b92:	4620      	mov	r0, r4
 8012b94:	f7ff fc45 	bl	8012422 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012b98:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012b9a:	1c5a      	adds	r2, r3, #1
 8012b9c:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012b9e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012ba0:	4413      	add	r3, r2
 8012ba2:	b29b      	uxth	r3, r3
 8012ba4:	2b09      	cmp	r3, #9
 8012ba6:	bf88      	it	hi
 8012ba8:	3b0a      	subhi	r3, #10
 8012baa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012bae:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012bb0:	e7ec      	b.n	8012b8c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012bb2:	bd10      	pop	{r4, pc}

08012bb4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012bb4:	b538      	push	{r3, r4, r5, lr}
 8012bb6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012bb8:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012bbc:	4604      	mov	r4, r0
 8012bbe:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8012bc0:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8012bc2:	3a01      	subs	r2, #1
 8012bc4:	8702      	strh	r2, [r0, #56]	@ 0x38
 8012bc6:	1c5a      	adds	r2, r3, #1
 8012bc8:	b292      	uxth	r2, r2
 8012bca:	2a09      	cmp	r2, #9
 8012bcc:	bf86      	itte	hi
 8012bce:	3b09      	subhi	r3, #9
 8012bd0:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8012bd2:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8012bd4:	f7ff ffb5 	bl	8012b42 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012bd8:	8c23      	ldrh	r3, [r4, #32]
 8012bda:	2b01      	cmp	r3, #1
 8012bdc:	bf9c      	itt	ls
 8012bde:	3301      	addls	r3, #1
 8012be0:	8423      	strhls	r3, [r4, #32]
 8012be2:	8be3      	ldrh	r3, [r4, #30]
 8012be4:	b90b      	cbnz	r3, 8012bea <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012be6:	2302      	movs	r3, #2
 8012be8:	83e3      	strh	r3, [r4, #30]
 8012bea:	8be3      	ldrh	r3, [r4, #30]
 8012bec:	3b01      	subs	r3, #1
 8012bee:	b29b      	uxth	r3, r3
 8012bf0:	83e3      	strh	r3, [r4, #30]
 8012bf2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012bf6:	4628      	mov	r0, r5
 8012bf8:	8365      	strh	r5, [r4, #26]
 8012bfa:	bd38      	pop	{r3, r4, r5, pc}

08012bfc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012bfc:	428a      	cmp	r2, r1
 8012bfe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012c02:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8012c04:	d931      	bls.n	8012c6a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8012c06:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8012c08:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8012c0c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8012c10:	19ee      	adds	r6, r5, r7
 8012c12:	1a54      	subs	r4, r2, r1
 8012c14:	3e01      	subs	r6, #1
 8012c16:	fa1f fe84 	uxth.w	lr, r4
 8012c1a:	b2b4      	uxth	r4, r6
 8012c1c:	eba4 090e 	sub.w	r9, r4, lr
 8012c20:	fa1f f989 	uxth.w	r9, r9
 8012c24:	2c09      	cmp	r4, #9
 8012c26:	4626      	mov	r6, r4
 8012c28:	bf88      	it	hi
 8012c2a:	f1a4 060a 	subhi.w	r6, r4, #10
 8012c2e:	f1bc 0f00 	cmp.w	ip, #0
 8012c32:	bf08      	it	eq
 8012c34:	f04f 0c02 	moveq.w	ip, #2
 8012c38:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012c3c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012c40:	fa1f fc8c 	uxth.w	ip, ip
 8012c44:	3c01      	subs	r4, #1
 8012c46:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8012c4a:	b2a4      	uxth	r4, r4
 8012c4c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012c50:	454c      	cmp	r4, r9
 8012c52:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8012c56:	d1e5      	bne.n	8012c24 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012c58:	eba5 050e 	sub.w	r5, r5, lr
 8012c5c:	eb0e 0408 	add.w	r4, lr, r8
 8012c60:	8705      	strh	r5, [r0, #56]	@ 0x38
 8012c62:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8012c66:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8012c6a:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8012c6c:	1a64      	subs	r4, r4, r1
 8012c6e:	4439      	add	r1, r7
 8012c70:	b289      	uxth	r1, r1
 8012c72:	2909      	cmp	r1, #9
 8012c74:	bf88      	it	hi
 8012c76:	390a      	subhi	r1, #10
 8012c78:	8704      	strh	r4, [r0, #56]	@ 0x38
 8012c7a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012c7c:	250a      	movs	r5, #10
 8012c7e:	b18a      	cbz	r2, 8012ca4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8012c80:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8012c82:	3a01      	subs	r2, #1
 8012c84:	b292      	uxth	r2, r2
 8012c86:	3101      	adds	r1, #1
 8012c88:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012c8c:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012c8e:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012c90:	b901      	cbnz	r1, 8012c94 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8012c92:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012c94:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012c96:	3901      	subs	r1, #1
 8012c98:	b289      	uxth	r1, r1
 8012c9a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012c9c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012ca0:	844c      	strh	r4, [r1, #34]	@ 0x22
 8012ca2:	e7ec      	b.n	8012c7e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8012ca4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012ca8:	f7ff bf4b 	b.w	8012b42 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08012cac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8012cac:	b570      	push	{r4, r5, r6, lr}
 8012cae:	2500      	movs	r5, #0
 8012cb0:	4295      	cmp	r5, r2
 8012cb2:	d011      	beq.n	8012cd8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8012cb4:	8bc4      	ldrh	r4, [r0, #30]
 8012cb6:	f831 6b02 	ldrh.w	r6, [r1], #2
 8012cba:	4414      	add	r4, r2
 8012cbc:	3c01      	subs	r4, #1
 8012cbe:	1b64      	subs	r4, r4, r5
 8012cc0:	b2a4      	uxth	r4, r4
 8012cc2:	2c01      	cmp	r4, #1
 8012cc4:	bf88      	it	hi
 8012cc6:	3c02      	subhi	r4, #2
 8012cc8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012ccc:	8b64      	ldrh	r4, [r4, #26]
 8012cce:	42b4      	cmp	r4, r6
 8012cd0:	d117      	bne.n	8012d02 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012cd2:	3501      	adds	r5, #1
 8012cd4:	b2ad      	uxth	r5, r5
 8012cd6:	e7eb      	b.n	8012cb0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012cd8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012cdc:	2400      	movs	r4, #0
 8012cde:	4413      	add	r3, r2
 8012ce0:	b2a2      	uxth	r2, r4
 8012ce2:	429a      	cmp	r2, r3
 8012ce4:	da0f      	bge.n	8012d06 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8012ce6:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8012ce8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8012cec:	4432      	add	r2, r6
 8012cee:	b292      	uxth	r2, r2
 8012cf0:	2a09      	cmp	r2, #9
 8012cf2:	bf88      	it	hi
 8012cf4:	3a0a      	subhi	r2, #10
 8012cf6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012cfa:	3401      	adds	r4, #1
 8012cfc:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8012cfe:	42aa      	cmp	r2, r5
 8012d00:	d0ee      	beq.n	8012ce0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8012d02:	2000      	movs	r0, #0
 8012d04:	bd70      	pop	{r4, r5, r6, pc}
 8012d06:	2001      	movs	r0, #1
 8012d08:	e7fc      	b.n	8012d04 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08012d0a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012d0a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d0e:	4605      	mov	r5, r0
 8012d10:	4616      	mov	r6, r2
 8012d12:	1c8c      	adds	r4, r1, #2
 8012d14:	8809      	ldrh	r1, [r1, #0]
 8012d16:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012d1a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012d1e:	42b3      	cmp	r3, r6
 8012d20:	d124      	bne.n	8012d6c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012d22:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012d26:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012d2a:	f001 070f 	and.w	r7, r1, #15
 8012d2e:	f8cd 8000 	str.w	r8, [sp]
 8012d32:	464b      	mov	r3, r9
 8012d34:	4652      	mov	r2, sl
 8012d36:	4621      	mov	r1, r4
 8012d38:	4628      	mov	r0, r5
 8012d3a:	f7ff ffb7 	bl	8012cac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012d3e:	4683      	mov	fp, r0
 8012d40:	b168      	cbz	r0, 8012d5e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012d42:	eb0a 0109 	add.w	r1, sl, r9
 8012d46:	4441      	add	r1, r8
 8012d48:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012d4c:	463a      	mov	r2, r7
 8012d4e:	4649      	mov	r1, r9
 8012d50:	4628      	mov	r0, r5
 8012d52:	f7ff ff53 	bl	8012bfc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012d56:	4658      	mov	r0, fp
 8012d58:	b003      	add	sp, #12
 8012d5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d5e:	eb07 010a 	add.w	r1, r7, sl
 8012d62:	4449      	add	r1, r9
 8012d64:	4441      	add	r1, r8
 8012d66:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012d6a:	e7d2      	b.n	8012d12 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012d6c:	f04f 0b00 	mov.w	fp, #0
 8012d70:	e7f1      	b.n	8012d56 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012d72 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012d72:	b570      	push	{r4, r5, r6, lr}
 8012d74:	8810      	ldrh	r0, [r2, #0]
 8012d76:	4298      	cmp	r0, r3
 8012d78:	d817      	bhi.n	8012daa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012d7a:	1e48      	subs	r0, r1, #1
 8012d7c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012d80:	4298      	cmp	r0, r3
 8012d82:	d312      	bcc.n	8012daa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012d84:	2400      	movs	r4, #0
 8012d86:	428c      	cmp	r4, r1
 8012d88:	d20f      	bcs.n	8012daa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012d8a:	1860      	adds	r0, r4, r1
 8012d8c:	1040      	asrs	r0, r0, #1
 8012d8e:	0085      	lsls	r5, r0, #2
 8012d90:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012d94:	42b3      	cmp	r3, r6
 8012d96:	d902      	bls.n	8012d9e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012d98:	3001      	adds	r0, #1
 8012d9a:	b284      	uxth	r4, r0
 8012d9c:	e7f3      	b.n	8012d86 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012d9e:	d201      	bcs.n	8012da4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012da0:	b281      	uxth	r1, r0
 8012da2:	e7f0      	b.n	8012d86 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012da4:	442a      	add	r2, r5
 8012da6:	8850      	ldrh	r0, [r2, #2]
 8012da8:	bd70      	pop	{r4, r5, r6, pc}
 8012daa:	2000      	movs	r0, #0
 8012dac:	e7fc      	b.n	8012da8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012dae <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012dae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012db2:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8012db4:	886f      	ldrh	r7, [r5, #2]
 8012db6:	4604      	mov	r4, r0
 8012db8:	087f      	lsrs	r7, r7, #1
 8012dba:	260b      	movs	r6, #11
 8012dbc:	3e01      	subs	r6, #1
 8012dbe:	d013      	beq.n	8012de8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012dc0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012dc2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012dc6:	462a      	mov	r2, r5
 8012dc8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012dcc:	4639      	mov	r1, r7
 8012dce:	4643      	mov	r3, r8
 8012dd0:	4620      	mov	r0, r4
 8012dd2:	f7ff ffce 	bl	8012d72 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012dd6:	b138      	cbz	r0, 8012de8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012dd8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012ddc:	4642      	mov	r2, r8
 8012dde:	4620      	mov	r0, r4
 8012de0:	f7ff ff93 	bl	8012d0a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012de4:	2800      	cmp	r0, #0
 8012de6:	d1e9      	bne.n	8012dbc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012de8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012dec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012dec:	b570      	push	{r4, r5, r6, lr}
 8012dee:	694a      	ldr	r2, [r1, #20]
 8012df0:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8012df2:	684b      	ldr	r3, [r1, #4]
 8012df4:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8012df6:	1b54      	subs	r4, r2, r5
 8012df8:	f000 8106 	beq.w	8013008 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8012dfc:	1b9b      	subs	r3, r3, r6
 8012dfe:	d003      	beq.n	8012e08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012e00:	4363      	muls	r3, r4
 8012e02:	2210      	movs	r2, #16
 8012e04:	fb93 f3f2 	sdiv	r3, r3, r2
 8012e08:	680c      	ldr	r4, [r1, #0]
 8012e0a:	698a      	ldr	r2, [r1, #24]
 8012e0c:	1b65      	subs	r5, r4, r5
 8012e0e:	f000 80fd 	beq.w	801300c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8012e12:	1b92      	subs	r2, r2, r6
 8012e14:	d003      	beq.n	8012e1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012e16:	436a      	muls	r2, r5
 8012e18:	2410      	movs	r4, #16
 8012e1a:	fb92 f2f4 	sdiv	r2, r2, r4
 8012e1e:	1a9b      	subs	r3, r3, r2
 8012e20:	ee07 3a90 	vmov	s15, r3
 8012e24:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8013048 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012e28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e2c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012e30:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012e34:	460a      	mov	r2, r1
 8012e36:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012e3a:	4603      	mov	r3, r0
 8012e3c:	f100 040c 	add.w	r4, r0, #12
 8012e40:	eeb1 6a43 	vneg.f32	s12, s6
 8012e44:	edd2 7a02 	vldr	s15, [r2, #8]
 8012e48:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012e4c:	3214      	adds	r2, #20
 8012e4e:	ece3 6a01 	vstmia	r3!, {s13}
 8012e52:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012e56:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012e5a:	429c      	cmp	r4, r3
 8012e5c:	edc3 7a02 	vstr	s15, [r3, #8]
 8012e60:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012e64:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012e68:	edc3 7a05 	vstr	s15, [r3, #20]
 8012e6c:	d1ea      	bne.n	8012e44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012e6e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012e70:	698b      	ldr	r3, [r1, #24]
 8012e72:	edd0 4a02 	vldr	s9, [r0, #8]
 8012e76:	edd0 3a00 	vldr	s7, [r0]
 8012e7a:	edd0 6a01 	vldr	s13, [r0, #4]
 8012e7e:	ed90 5a05 	vldr	s10, [r0, #20]
 8012e82:	ed90 2a03 	vldr	s4, [r0, #12]
 8012e86:	edd0 5a04 	vldr	s11, [r0, #16]
 8012e8a:	ed90 1a07 	vldr	s2, [r0, #28]
 8012e8e:	edd0 2a06 	vldr	s5, [r0, #24]
 8012e92:	1a9b      	subs	r3, r3, r2
 8012e94:	ee07 3a90 	vmov	s15, r3
 8012e98:	684b      	ldr	r3, [r1, #4]
 8012e9a:	1a9b      	subs	r3, r3, r2
 8012e9c:	ee07 3a10 	vmov	s14, r3
 8012ea0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012ea4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012ea8:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012eac:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012eb0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012eb4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012eb8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012ebc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012ec0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012ec4:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012ec8:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012ecc:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8012ed0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012ed2:	694a      	ldr	r2, [r1, #20]
 8012ed4:	1b13      	subs	r3, r2, r4
 8012ed6:	ee07 3a10 	vmov	s14, r3
 8012eda:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ede:	680b      	ldr	r3, [r1, #0]
 8012ee0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012ee4:	1b1b      	subs	r3, r3, r4
 8012ee6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012eea:	ee07 3a10 	vmov	s14, r3
 8012eee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ef2:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012ef6:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012efa:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012efe:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8012f02:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012f04:	698b      	ldr	r3, [r1, #24]
 8012f06:	1a9b      	subs	r3, r3, r2
 8012f08:	ee06 3a90 	vmov	s13, r3
 8012f0c:	684b      	ldr	r3, [r1, #4]
 8012f0e:	1a9b      	subs	r3, r3, r2
 8012f10:	ee07 3a10 	vmov	s14, r3
 8012f14:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012f18:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f1c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012f20:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012f24:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012f28:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012f2c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012f30:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8012f34:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012f36:	694a      	ldr	r2, [r1, #20]
 8012f38:	1b13      	subs	r3, r2, r4
 8012f3a:	ee07 3a10 	vmov	s14, r3
 8012f3e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f42:	680b      	ldr	r3, [r1, #0]
 8012f44:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012f48:	1b1b      	subs	r3, r3, r4
 8012f4a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012f4e:	ee07 3a10 	vmov	s14, r3
 8012f52:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f56:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012f5a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012f5e:	edd0 5a08 	vldr	s11, [r0, #32]
 8012f62:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012f66:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012f6a:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8012f6e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012f70:	698b      	ldr	r3, [r1, #24]
 8012f72:	1a9b      	subs	r3, r3, r2
 8012f74:	ee07 3a10 	vmov	s14, r3
 8012f78:	684b      	ldr	r3, [r1, #4]
 8012f7a:	1a9b      	subs	r3, r3, r2
 8012f7c:	ee01 3a90 	vmov	s3, r3
 8012f80:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f84:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012f88:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012f8c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012f90:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012f94:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012f98:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012f9c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012fa0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012fa4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012fa6:	694a      	ldr	r2, [r1, #20]
 8012fa8:	1b13      	subs	r3, r2, r4
 8012faa:	ee03 3a10 	vmov	s6, r3
 8012fae:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012fb2:	680b      	ldr	r3, [r1, #0]
 8012fb4:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012fb8:	1b1b      	subs	r3, r3, r4
 8012fba:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012fbe:	ee03 3a10 	vmov	s6, r3
 8012fc2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012fc6:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012fca:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012fce:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012fd2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012fd6:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8012fda:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012fde:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012fe6:	dd13      	ble.n	8013010 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012fe8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012fec:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012ff0:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012ff2:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012ff6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012ffa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ffe:	dd15      	ble.n	801302c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013000:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8013004:	6403      	str	r3, [r0, #64]	@ 0x40
 8013006:	bd70      	pop	{r4, r5, r6, pc}
 8013008:	4623      	mov	r3, r4
 801300a:	e6fd      	b.n	8012e08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801300c:	462a      	mov	r2, r5
 801300e:	e706      	b.n	8012e1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013010:	d502      	bpl.n	8013018 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013012:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8013016:	e7e9      	b.n	8012fec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013018:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801301c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013020:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013024:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013028:	dade      	bge.n	8012fe8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801302a:	e7f2      	b.n	8013012 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801302c:	d502      	bpl.n	8013034 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801302e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8013032:	e7e7      	b.n	8013004 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013034:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013038:	eee3 4a86 	vfma.f32	s9, s7, s12
 801303c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013040:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013044:	dadc      	bge.n	8013000 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013046:	e7f2      	b.n	801302e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013048:	3d800000 	.word	0x3d800000

0801304c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801304c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013050:	2714      	movs	r7, #20
 8013052:	435f      	muls	r7, r3
 8013054:	eb02 0c07 	add.w	ip, r2, r7
 8013058:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801305c:	f115 0e0f 	adds.w	lr, r5, #15
 8013060:	f100 80a2 	bmi.w	80131a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013064:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013068:	9c08      	ldr	r4, [sp, #32]
 801306a:	f8c0 e014 	str.w	lr, [r0, #20]
 801306e:	2614      	movs	r6, #20
 8013070:	4366      	muls	r6, r4
 8013072:	eb02 0806 	add.w	r8, r2, r6
 8013076:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801307a:	f115 040f 	adds.w	r4, r5, #15
 801307e:	f100 809f 	bmi.w	80131c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013082:	1124      	asrs	r4, r4, #4
 8013084:	eba4 040e 	sub.w	r4, r4, lr
 8013088:	6184      	str	r4, [r0, #24]
 801308a:	2c00      	cmp	r4, #0
 801308c:	f000 808a 	beq.w	80131a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013090:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013094:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013098:	5995      	ldr	r5, [r2, r6]
 801309a:	eba4 0809 	sub.w	r8, r4, r9
 801309e:	59d4      	ldr	r4, [r2, r7]
 80130a0:	eba5 0a04 	sub.w	sl, r5, r4
 80130a4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80130a8:	fb0e fe05 	mul.w	lr, lr, r5
 80130ac:	fb0a ee19 	mls	lr, sl, r9, lr
 80130b0:	fb08 e404 	mla	r4, r8, r4, lr
 80130b4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80130b8:	3c01      	subs	r4, #1
 80130ba:	19a4      	adds	r4, r4, r6
 80130bc:	f100 808c 	bmi.w	80131d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80130c0:	fb94 fef6 	sdiv	lr, r4, r6
 80130c4:	f8c0 e000 	str.w	lr, [r0]
 80130c8:	fb06 441e 	mls	r4, r6, lr, r4
 80130cc:	6104      	str	r4, [r0, #16]
 80130ce:	2d00      	cmp	r5, #0
 80130d0:	f2c0 8095 	blt.w	80131fe <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80130d4:	fb95 f4f6 	sdiv	r4, r5, r6
 80130d8:	6044      	str	r4, [r0, #4]
 80130da:	fb06 5514 	mls	r5, r6, r4, r5
 80130de:	6085      	str	r5, [r0, #8]
 80130e0:	60c6      	str	r6, [r0, #12]
 80130e2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80130e6:	6945      	ldr	r5, [r0, #20]
 80130e8:	59d2      	ldr	r2, [r2, r7]
 80130ea:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8013220 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80130ee:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80130f2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80130f6:	ee07 4a10 	vmov	s14, r4
 80130fa:	6804      	ldr	r4, [r0, #0]
 80130fc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8013100:	ee07 2a90 	vmov	s15, r2
 8013104:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013108:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801310c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013110:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013114:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013118:	edd3 6a00 	vldr	s13, [r3]
 801311c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013120:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8013124:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013128:	edc0 6a07 	vstr	s13, [r0, #28]
 801312c:	edd0 6a01 	vldr	s13, [r0, #4]
 8013130:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8013134:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8013138:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801313c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013140:	ed80 6a08 	vstr	s12, [r0, #32]
 8013144:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8013146:	6242      	str	r2, [r0, #36]	@ 0x24
 8013148:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 801314c:	ed93 6a03 	vldr	s12, [r3, #12]
 8013150:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013154:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8013158:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801315c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8013160:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8013164:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8013168:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801316c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8013170:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8013172:	6302      	str	r2, [r0, #48]	@ 0x30
 8013174:	ed93 6a06 	vldr	s12, [r3, #24]
 8013178:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 801317c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013180:	eeb0 7a46 	vmov.f32	s14, s12
 8013184:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8013188:	eea6 7a27 	vfma.f32	s14, s12, s15
 801318c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8013190:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8013194:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8013198:	eee6 7a87 	vfma.f32	s15, s13, s14
 801319c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 80131a0:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80131a2:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80131a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80131a8:	f1c5 0501 	rsb	r5, r5, #1
 80131ac:	f015 050f 	ands.w	r5, r5, #15
 80131b0:	bf18      	it	ne
 80131b2:	2501      	movne	r5, #1
 80131b4:	2410      	movs	r4, #16
 80131b6:	fb9e fef4 	sdiv	lr, lr, r4
 80131ba:	ebae 0e05 	sub.w	lr, lr, r5
 80131be:	e753      	b.n	8013068 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80131c0:	f1c5 0501 	rsb	r5, r5, #1
 80131c4:	f015 050f 	ands.w	r5, r5, #15
 80131c8:	bf18      	it	ne
 80131ca:	2501      	movne	r5, #1
 80131cc:	f04f 0910 	mov.w	r9, #16
 80131d0:	fb94 f4f9 	sdiv	r4, r4, r9
 80131d4:	1b64      	subs	r4, r4, r5
 80131d6:	e755      	b.n	8013084 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80131d8:	4264      	negs	r4, r4
 80131da:	fb94 fef6 	sdiv	lr, r4, r6
 80131de:	f1ce 0800 	rsb	r8, lr, #0
 80131e2:	fb06 441e 	mls	r4, r6, lr, r4
 80131e6:	f8c0 8000 	str.w	r8, [r0]
 80131ea:	6104      	str	r4, [r0, #16]
 80131ec:	2c00      	cmp	r4, #0
 80131ee:	f43f af6e 	beq.w	80130ce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80131f2:	ea6f 0e0e 	mvn.w	lr, lr
 80131f6:	f8c0 e000 	str.w	lr, [r0]
 80131fa:	1b34      	subs	r4, r6, r4
 80131fc:	e766      	b.n	80130cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80131fe:	426d      	negs	r5, r5
 8013200:	fb95 f4f6 	sdiv	r4, r5, r6
 8013204:	f1c4 0e00 	rsb	lr, r4, #0
 8013208:	fb06 5514 	mls	r5, r6, r4, r5
 801320c:	f8c0 e004 	str.w	lr, [r0, #4]
 8013210:	6085      	str	r5, [r0, #8]
 8013212:	2d00      	cmp	r5, #0
 8013214:	f43f af64 	beq.w	80130e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013218:	43e4      	mvns	r4, r4
 801321a:	6044      	str	r4, [r0, #4]
 801321c:	1b75      	subs	r5, r6, r5
 801321e:	e75e      	b.n	80130de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013220:	3d800000 	.word	0x3d800000

08013224 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8013224:	4b01      	ldr	r3, [pc, #4]	@ (801322c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8013226:	6018      	str	r0, [r3, #0]
 8013228:	4770      	bx	lr
 801322a:	bf00      	nop
 801322c:	200140a8 	.word	0x200140a8

08013230 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8013230:	4b06      	ldr	r3, [pc, #24]	@ (801324c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8013232:	881a      	ldrh	r2, [r3, #0]
 8013234:	4282      	cmp	r2, r0
 8013236:	d807      	bhi.n	8013248 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8013238:	4b05      	ldr	r3, [pc, #20]	@ (8013250 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801323a:	881b      	ldrh	r3, [r3, #0]
 801323c:	4413      	add	r3, r2
 801323e:	4298      	cmp	r0, r3
 8013240:	bfac      	ite	ge
 8013242:	2000      	movge	r0, #0
 8013244:	2001      	movlt	r0, #1
 8013246:	4770      	bx	lr
 8013248:	2000      	movs	r0, #0
 801324a:	4770      	bx	lr
 801324c:	200140c8 	.word	0x200140c8
 8013250:	200140cc 	.word	0x200140cc

08013254 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8013254:	b508      	push	{r3, lr}
 8013256:	4601      	mov	r1, r0
 8013258:	f7ff ffea 	bl	8013230 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801325c:	b118      	cbz	r0, 8013266 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801325e:	4b02      	ldr	r3, [pc, #8]	@ (8013268 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013260:	681b      	ldr	r3, [r3, #0]
 8013262:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8013266:	bd08      	pop	{r3, pc}
 8013268:	200140ac 	.word	0x200140ac

0801326c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801326c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801326e:	4c24      	ldr	r4, [pc, #144]	@ (8013300 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8013270:	6823      	ldr	r3, [r4, #0]
 8013272:	2b00      	cmp	r3, #0
 8013274:	d042      	beq.n	80132fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013276:	4a23      	ldr	r2, [pc, #140]	@ (8013304 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8013278:	4d23      	ldr	r5, [pc, #140]	@ (8013308 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801327a:	8811      	ldrh	r1, [r2, #0]
 801327c:	f8b5 c000 	ldrh.w	ip, [r5]
 8013280:	4822      	ldr	r0, [pc, #136]	@ (801330c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8013282:	4461      	add	r1, ip
 8013284:	1c4a      	adds	r2, r1, #1
 8013286:	f022 0201 	bic.w	r2, r2, #1
 801328a:	008f      	lsls	r7, r1, #2
 801328c:	0412      	lsls	r2, r2, #16
 801328e:	19de      	adds	r6, r3, r7
 8013290:	0c12      	lsrs	r2, r2, #16
 8013292:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8013296:	6006      	str	r6, [r0, #0]
 8013298:	4e1d      	ldr	r6, [pc, #116]	@ (8013310 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801329a:	19da      	adds	r2, r3, r7
 801329c:	6032      	str	r2, [r6, #0]
 801329e:	220e      	movs	r2, #14
 80132a0:	fb02 f20c 	mul.w	r2, r2, ip
 80132a4:	3203      	adds	r2, #3
 80132a6:	f022 0203 	bic.w	r2, r2, #3
 80132aa:	443a      	add	r2, r7
 80132ac:	4f19      	ldr	r7, [pc, #100]	@ (8013314 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80132ae:	4413      	add	r3, r2
 80132b0:	603b      	str	r3, [r7, #0]
 80132b2:	4f19      	ldr	r7, [pc, #100]	@ (8013318 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80132b4:	2300      	movs	r3, #0
 80132b6:	803b      	strh	r3, [r7, #0]
 80132b8:	4f18      	ldr	r7, [pc, #96]	@ (801331c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80132ba:	683f      	ldr	r7, [r7, #0]
 80132bc:	1aba      	subs	r2, r7, r2
 80132be:	4f18      	ldr	r7, [pc, #96]	@ (8013320 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80132c0:	603a      	str	r2, [r7, #0]
 80132c2:	4a18      	ldr	r2, [pc, #96]	@ (8013324 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80132c4:	469c      	mov	ip, r3
 80132c6:	8013      	strh	r3, [r2, #0]
 80132c8:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80132cc:	428b      	cmp	r3, r1
 80132ce:	d10d      	bne.n	80132ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80132d0:	882d      	ldrh	r5, [r5, #0]
 80132d2:	6830      	ldr	r0, [r6, #0]
 80132d4:	2300      	movs	r3, #0
 80132d6:	240e      	movs	r4, #14
 80132d8:	429d      	cmp	r5, r3
 80132da:	d90f      	bls.n	80132fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80132dc:	fb04 0203 	mla	r2, r4, r3, r0
 80132e0:	3301      	adds	r3, #1
 80132e2:	7b11      	ldrb	r1, [r2, #12]
 80132e4:	f36f 1145 	bfc	r1, #5, #1
 80132e8:	7311      	strb	r1, [r2, #12]
 80132ea:	e7f5      	b.n	80132d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80132ec:	6822      	ldr	r2, [r4, #0]
 80132ee:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80132f2:	6802      	ldr	r2, [r0, #0]
 80132f4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80132f8:	3301      	adds	r3, #1
 80132fa:	e7e7      	b.n	80132cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80132fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80132fe:	bf00      	nop
 8013300:	200140ac 	.word	0x200140ac
 8013304:	200140c8 	.word	0x200140c8
 8013308:	200140cc 	.word	0x200140cc
 801330c:	200140c0 	.word	0x200140c0
 8013310:	200140b0 	.word	0x200140b0
 8013314:	200140b8 	.word	0x200140b8
 8013318:	200140ca 	.word	0x200140ca
 801331c:	200140b4 	.word	0x200140b4
 8013320:	200140c4 	.word	0x200140c4
 8013324:	200140bc 	.word	0x200140bc

08013328 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8013328:	4b06      	ldr	r3, [pc, #24]	@ (8013344 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801332a:	681b      	ldr	r3, [r3, #0]
 801332c:	b943      	cbnz	r3, 8013340 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801332e:	b139      	cbz	r1, 8013340 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013330:	4b05      	ldr	r3, [pc, #20]	@ (8013348 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8013332:	801a      	strh	r2, [r3, #0]
 8013334:	4b05      	ldr	r3, [pc, #20]	@ (801334c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8013336:	6019      	str	r1, [r3, #0]
 8013338:	4b05      	ldr	r3, [pc, #20]	@ (8013350 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801333a:	6018      	str	r0, [r3, #0]
 801333c:	f7ff bf96 	b.w	801326c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013340:	4770      	bx	lr
 8013342:	bf00      	nop
 8013344:	200140b8 	.word	0x200140b8
 8013348:	200140cc 	.word	0x200140cc
 801334c:	200140b4 	.word	0x200140b4
 8013350:	200140ac 	.word	0x200140ac

08013354 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013354:	b470      	push	{r4, r5, r6}
 8013356:	4c07      	ldr	r4, [pc, #28]	@ (8013374 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8013358:	6826      	ldr	r6, [r4, #0]
 801335a:	4605      	mov	r5, r0
 801335c:	4610      	mov	r0, r2
 801335e:	9a03      	ldr	r2, [sp, #12]
 8013360:	b936      	cbnz	r6, 8013370 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013362:	6025      	str	r5, [r4, #0]
 8013364:	4c04      	ldr	r4, [pc, #16]	@ (8013378 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8013366:	8021      	strh	r1, [r4, #0]
 8013368:	bc70      	pop	{r4, r5, r6}
 801336a:	4619      	mov	r1, r3
 801336c:	f7ff bfdc 	b.w	8013328 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013370:	bc70      	pop	{r4, r5, r6}
 8013372:	4770      	bx	lr
 8013374:	200140d0 	.word	0x200140d0
 8013378:	200140c8 	.word	0x200140c8

0801337c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801337c:	4a12      	ldr	r2, [pc, #72]	@ (80133c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801337e:	8803      	ldrh	r3, [r0, #0]
 8013380:	8812      	ldrh	r2, [r2, #0]
 8013382:	4293      	cmp	r3, r2
 8013384:	d207      	bcs.n	8013396 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8013386:	4a11      	ldr	r2, [pc, #68]	@ (80133cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8013388:	6812      	ldr	r2, [r2, #0]
 801338a:	2114      	movs	r1, #20
 801338c:	fb01 2303 	mla	r3, r1, r3, r2
 8013390:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8013394:	4770      	bx	lr
 8013396:	490e      	ldr	r1, [pc, #56]	@ (80133d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013398:	8809      	ldrh	r1, [r1, #0]
 801339a:	4411      	add	r1, r2
 801339c:	428b      	cmp	r3, r1
 801339e:	da04      	bge.n	80133aa <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80133a0:	1a9b      	subs	r3, r3, r2
 80133a2:	4a0c      	ldr	r2, [pc, #48]	@ (80133d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80133a4:	210e      	movs	r1, #14
 80133a6:	6812      	ldr	r2, [r2, #0]
 80133a8:	e7f0      	b.n	801338c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80133aa:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80133ae:	4293      	cmp	r3, r2
 80133b0:	d108      	bne.n	80133c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80133b2:	4b09      	ldr	r3, [pc, #36]	@ (80133d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80133b4:	781b      	ldrb	r3, [r3, #0]
 80133b6:	b91b      	cbnz	r3, 80133c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80133b8:	4b08      	ldr	r3, [pc, #32]	@ (80133dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80133ba:	f9b3 0000 	ldrsh.w	r0, [r3]
 80133be:	4770      	bx	lr
 80133c0:	4b07      	ldr	r3, [pc, #28]	@ (80133e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80133c2:	e7fa      	b.n	80133ba <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80133c4:	2000      	movs	r0, #0
 80133c6:	4770      	bx	lr
 80133c8:	200140c8 	.word	0x200140c8
 80133cc:	200140d0 	.word	0x200140d0
 80133d0:	200140cc 	.word	0x200140cc
 80133d4:	200140b0 	.word	0x200140b0
 80133d8:	20014036 	.word	0x20014036
 80133dc:	20014038 	.word	0x20014038
 80133e0:	2001403a 	.word	0x2001403a

080133e4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80133e4:	4a12      	ldr	r2, [pc, #72]	@ (8013430 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80133e6:	8803      	ldrh	r3, [r0, #0]
 80133e8:	8812      	ldrh	r2, [r2, #0]
 80133ea:	4293      	cmp	r3, r2
 80133ec:	d207      	bcs.n	80133fe <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80133ee:	4a11      	ldr	r2, [pc, #68]	@ (8013434 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80133f0:	6812      	ldr	r2, [r2, #0]
 80133f2:	2114      	movs	r1, #20
 80133f4:	fb01 2303 	mla	r3, r1, r3, r2
 80133f8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80133fc:	4770      	bx	lr
 80133fe:	490e      	ldr	r1, [pc, #56]	@ (8013438 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8013400:	8809      	ldrh	r1, [r1, #0]
 8013402:	4411      	add	r1, r2
 8013404:	428b      	cmp	r3, r1
 8013406:	da04      	bge.n	8013412 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8013408:	1a9b      	subs	r3, r3, r2
 801340a:	4a0c      	ldr	r2, [pc, #48]	@ (801343c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801340c:	210e      	movs	r1, #14
 801340e:	6812      	ldr	r2, [r2, #0]
 8013410:	e7f0      	b.n	80133f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8013412:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013416:	4293      	cmp	r3, r2
 8013418:	d108      	bne.n	801342c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801341a:	4b09      	ldr	r3, [pc, #36]	@ (8013440 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801341c:	781b      	ldrb	r3, [r3, #0]
 801341e:	b91b      	cbnz	r3, 8013428 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8013420:	4b08      	ldr	r3, [pc, #32]	@ (8013444 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013422:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013426:	4770      	bx	lr
 8013428:	4b07      	ldr	r3, [pc, #28]	@ (8013448 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801342a:	e7fa      	b.n	8013422 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801342c:	2000      	movs	r0, #0
 801342e:	4770      	bx	lr
 8013430:	200140c8 	.word	0x200140c8
 8013434:	200140d0 	.word	0x200140d0
 8013438:	200140cc 	.word	0x200140cc
 801343c:	200140b0 	.word	0x200140b0
 8013440:	20014036 	.word	0x20014036
 8013444:	2001403a 	.word	0x2001403a
 8013448:	20014038 	.word	0x20014038

0801344c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801344c:	b530      	push	{r4, r5, lr}
 801344e:	4a22      	ldr	r2, [pc, #136]	@ (80134d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8013450:	880b      	ldrh	r3, [r1, #0]
 8013452:	8812      	ldrh	r2, [r2, #0]
 8013454:	4293      	cmp	r3, r2
 8013456:	d213      	bcs.n	8013480 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8013458:	4a20      	ldr	r2, [pc, #128]	@ (80134dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801345a:	6812      	ldr	r2, [r2, #0]
 801345c:	2114      	movs	r1, #20
 801345e:	fb01 2303 	mla	r3, r1, r3, r2
 8013462:	8a1a      	ldrh	r2, [r3, #16]
 8013464:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013468:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801346c:	8a5b      	ldrh	r3, [r3, #18]
 801346e:	8004      	strh	r4, [r0, #0]
 8013470:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013474:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013478:	8041      	strh	r1, [r0, #2]
 801347a:	8082      	strh	r2, [r0, #4]
 801347c:	80c3      	strh	r3, [r0, #6]
 801347e:	e024      	b.n	80134ca <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8013480:	4917      	ldr	r1, [pc, #92]	@ (80134e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013482:	8809      	ldrh	r1, [r1, #0]
 8013484:	4411      	add	r1, r2
 8013486:	428b      	cmp	r3, r1
 8013488:	da10      	bge.n	80134ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801348a:	1a9b      	subs	r3, r3, r2
 801348c:	220e      	movs	r2, #14
 801348e:	4353      	muls	r3, r2
 8013490:	4a14      	ldr	r2, [pc, #80]	@ (80134e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8013492:	6811      	ldr	r1, [r2, #0]
 8013494:	18ca      	adds	r2, r1, r3
 8013496:	5ecd      	ldrsh	r5, [r1, r3]
 8013498:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801349c:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 80134a0:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 80134a4:	8005      	strh	r5, [r0, #0]
 80134a6:	8044      	strh	r4, [r0, #2]
 80134a8:	8081      	strh	r1, [r0, #4]
 80134aa:	e7e7      	b.n	801347c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80134ac:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80134b0:	4293      	cmp	r3, r2
 80134b2:	d10b      	bne.n	80134cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 80134b4:	4b0c      	ldr	r3, [pc, #48]	@ (80134e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80134b6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80134ba:	4b0c      	ldr	r3, [pc, #48]	@ (80134ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80134bc:	8081      	strh	r1, [r0, #4]
 80134be:	f9b3 2000 	ldrsh.w	r2, [r3]
 80134c2:	80c2      	strh	r2, [r0, #6]
 80134c4:	2300      	movs	r3, #0
 80134c6:	8003      	strh	r3, [r0, #0]
 80134c8:	8043      	strh	r3, [r0, #2]
 80134ca:	bd30      	pop	{r4, r5, pc}
 80134cc:	2300      	movs	r3, #0
 80134ce:	8003      	strh	r3, [r0, #0]
 80134d0:	8043      	strh	r3, [r0, #2]
 80134d2:	8083      	strh	r3, [r0, #4]
 80134d4:	e7d2      	b.n	801347c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80134d6:	bf00      	nop
 80134d8:	200140c8 	.word	0x200140c8
 80134dc:	200140d0 	.word	0x200140d0
 80134e0:	200140cc 	.word	0x200140cc
 80134e4:	200140b0 	.word	0x200140b0
 80134e8:	20014032 	.word	0x20014032
 80134ec:	20014034 	.word	0x20014034

080134f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80134f0:	4a17      	ldr	r2, [pc, #92]	@ (8013550 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80134f2:	8803      	ldrh	r3, [r0, #0]
 80134f4:	8812      	ldrh	r2, [r2, #0]
 80134f6:	4293      	cmp	r3, r2
 80134f8:	d213      	bcs.n	8013522 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80134fa:	4a16      	ldr	r2, [pc, #88]	@ (8013554 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80134fc:	6812      	ldr	r2, [r2, #0]
 80134fe:	2114      	movs	r1, #20
 8013500:	fb01 2303 	mla	r3, r1, r3, r2
 8013504:	8a1a      	ldrh	r2, [r3, #16]
 8013506:	8919      	ldrh	r1, [r3, #8]
 8013508:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801350c:	428a      	cmp	r2, r1
 801350e:	db1d      	blt.n	801354c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013510:	8a58      	ldrh	r0, [r3, #18]
 8013512:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013516:	895b      	ldrh	r3, [r3, #10]
 8013518:	4298      	cmp	r0, r3
 801351a:	bfac      	ite	ge
 801351c:	2000      	movge	r0, #0
 801351e:	2001      	movlt	r0, #1
 8013520:	4770      	bx	lr
 8013522:	490d      	ldr	r1, [pc, #52]	@ (8013558 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013524:	8809      	ldrh	r1, [r1, #0]
 8013526:	4411      	add	r1, r2
 8013528:	428b      	cmp	r3, r1
 801352a:	da0d      	bge.n	8013548 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801352c:	1a9b      	subs	r3, r3, r2
 801352e:	4a0b      	ldr	r2, [pc, #44]	@ (801355c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013530:	6812      	ldr	r2, [r2, #0]
 8013532:	210e      	movs	r1, #14
 8013534:	fb01 2303 	mla	r3, r1, r3, r2
 8013538:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801353c:	891a      	ldrh	r2, [r3, #8]
 801353e:	4291      	cmp	r1, r2
 8013540:	db04      	blt.n	801354c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013542:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8013546:	e7e6      	b.n	8013516 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8013548:	2000      	movs	r0, #0
 801354a:	4770      	bx	lr
 801354c:	2001      	movs	r0, #1
 801354e:	4770      	bx	lr
 8013550:	200140c8 	.word	0x200140c8
 8013554:	200140d0 	.word	0x200140d0
 8013558:	200140cc 	.word	0x200140cc
 801355c:	200140b0 	.word	0x200140b0

08013560 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013560:	4a12      	ldr	r2, [pc, #72]	@ (80135ac <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013562:	8803      	ldrh	r3, [r0, #0]
 8013564:	8811      	ldrh	r1, [r2, #0]
 8013566:	428b      	cmp	r3, r1
 8013568:	d20b      	bcs.n	8013582 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801356a:	4a11      	ldr	r2, [pc, #68]	@ (80135b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801356c:	6812      	ldr	r2, [r2, #0]
 801356e:	b112      	cbz	r2, 8013576 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013570:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013574:	b9c0      	cbnz	r0, 80135a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8013576:	4a0f      	ldr	r2, [pc, #60]	@ (80135b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013578:	6811      	ldr	r1, [r2, #0]
 801357a:	2214      	movs	r2, #20
 801357c:	4353      	muls	r3, r2
 801357e:	58c8      	ldr	r0, [r1, r3]
 8013580:	4770      	bx	lr
 8013582:	4a0d      	ldr	r2, [pc, #52]	@ (80135b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013584:	8812      	ldrh	r2, [r2, #0]
 8013586:	440a      	add	r2, r1
 8013588:	4293      	cmp	r3, r2
 801358a:	da04      	bge.n	8013596 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801358c:	4a08      	ldr	r2, [pc, #32]	@ (80135b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801358e:	6812      	ldr	r2, [r2, #0]
 8013590:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013594:	4770      	bx	lr
 8013596:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801359a:	4293      	cmp	r3, r2
 801359c:	d103      	bne.n	80135a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801359e:	4b07      	ldr	r3, [pc, #28]	@ (80135bc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80135a0:	681b      	ldr	r3, [r3, #0]
 80135a2:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80135a4:	4770      	bx	lr
 80135a6:	2000      	movs	r0, #0
 80135a8:	4770      	bx	lr
 80135aa:	bf00      	nop
 80135ac:	200140c8 	.word	0x200140c8
 80135b0:	200140ac 	.word	0x200140ac
 80135b4:	200140d0 	.word	0x200140d0
 80135b8:	200140cc 	.word	0x200140cc
 80135bc:	20014040 	.word	0x20014040

080135c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80135c0:	4b24      	ldr	r3, [pc, #144]	@ (8013654 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80135c2:	8802      	ldrh	r2, [r0, #0]
 80135c4:	8818      	ldrh	r0, [r3, #0]
 80135c6:	4282      	cmp	r2, r0
 80135c8:	d221      	bcs.n	801360e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80135ca:	4b23      	ldr	r3, [pc, #140]	@ (8013658 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80135cc:	6819      	ldr	r1, [r3, #0]
 80135ce:	2314      	movs	r3, #20
 80135d0:	fb03 1302 	mla	r3, r3, r2, r1
 80135d4:	6858      	ldr	r0, [r3, #4]
 80135d6:	2800      	cmp	r0, #0
 80135d8:	d03a      	beq.n	8013650 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80135da:	4920      	ldr	r1, [pc, #128]	@ (801365c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80135dc:	6809      	ldr	r1, [r1, #0]
 80135de:	2900      	cmp	r1, #0
 80135e0:	d036      	beq.n	8013650 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80135e2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80135e6:	2900      	cmp	r1, #0
 80135e8:	d032      	beq.n	8013650 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80135ea:	891a      	ldrh	r2, [r3, #8]
 80135ec:	8958      	ldrh	r0, [r3, #10]
 80135ee:	4350      	muls	r0, r2
 80135f0:	7c5a      	ldrb	r2, [r3, #17]
 80135f2:	7cdb      	ldrb	r3, [r3, #19]
 80135f4:	0952      	lsrs	r2, r2, #5
 80135f6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80135fa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80135fe:	2b0b      	cmp	r3, #11
 8013600:	bf18      	it	ne
 8013602:	0040      	lslne	r0, r0, #1
 8013604:	3003      	adds	r0, #3
 8013606:	f020 0003 	bic.w	r0, r0, #3
 801360a:	4408      	add	r0, r1
 801360c:	4770      	bx	lr
 801360e:	4b14      	ldr	r3, [pc, #80]	@ (8013660 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013610:	881b      	ldrh	r3, [r3, #0]
 8013612:	4403      	add	r3, r0
 8013614:	429a      	cmp	r2, r3
 8013616:	da1a      	bge.n	801364e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013618:	4b12      	ldr	r3, [pc, #72]	@ (8013664 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801361a:	681b      	ldr	r3, [r3, #0]
 801361c:	1a10      	subs	r0, r2, r0
 801361e:	210e      	movs	r1, #14
 8013620:	fb01 3000 	mla	r0, r1, r0, r3
 8013624:	7b03      	ldrb	r3, [r0, #12]
 8013626:	f003 031f 	and.w	r3, r3, #31
 801362a:	2b0b      	cmp	r3, #11
 801362c:	d10b      	bne.n	8013646 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801362e:	8903      	ldrh	r3, [r0, #8]
 8013630:	8940      	ldrh	r0, [r0, #10]
 8013632:	4358      	muls	r0, r3
 8013634:	4b09      	ldr	r3, [pc, #36]	@ (801365c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013636:	6819      	ldr	r1, [r3, #0]
 8013638:	3003      	adds	r0, #3
 801363a:	f020 0303 	bic.w	r3, r0, #3
 801363e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013642:	4418      	add	r0, r3
 8013644:	4770      	bx	lr
 8013646:	2b0d      	cmp	r3, #13
 8013648:	d101      	bne.n	801364e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801364a:	300d      	adds	r0, #13
 801364c:	4770      	bx	lr
 801364e:	2000      	movs	r0, #0
 8013650:	4770      	bx	lr
 8013652:	bf00      	nop
 8013654:	200140c8 	.word	0x200140c8
 8013658:	200140d0 	.word	0x200140d0
 801365c:	200140ac 	.word	0x200140ac
 8013660:	200140cc 	.word	0x200140cc
 8013664:	200140b0 	.word	0x200140b0

08013668 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013668:	b510      	push	{r4, lr}
 801366a:	4b1f      	ldr	r3, [pc, #124]	@ (80136e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 801366c:	8802      	ldrh	r2, [r0, #0]
 801366e:	881b      	ldrh	r3, [r3, #0]
 8013670:	429a      	cmp	r2, r3
 8013672:	d21a      	bcs.n	80136aa <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8013674:	4b1d      	ldr	r3, [pc, #116]	@ (80136ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8013676:	681b      	ldr	r3, [r3, #0]
 8013678:	2114      	movs	r1, #20
 801367a:	fb01 3102 	mla	r1, r1, r2, r3
 801367e:	7c4b      	ldrb	r3, [r1, #17]
 8013680:	0958      	lsrs	r0, r3, #5
 8013682:	7ccb      	ldrb	r3, [r1, #19]
 8013684:	491a      	ldr	r1, [pc, #104]	@ (80136f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8013686:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801368a:	6809      	ldr	r1, [r1, #0]
 801368c:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8013690:	b2d8      	uxtb	r0, r3
 8013692:	b149      	cbz	r1, 80136a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8013694:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8013698:	b132      	cbz	r2, 80136a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801369a:	2b0e      	cmp	r3, #14
 801369c:	d021      	beq.n	80136e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801369e:	280f      	cmp	r0, #15
 80136a0:	d01d      	beq.n	80136de <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 80136a2:	2810      	cmp	r0, #16
 80136a4:	bf08      	it	eq
 80136a6:	2002      	moveq	r0, #2
 80136a8:	bd10      	pop	{r4, pc}
 80136aa:	4912      	ldr	r1, [pc, #72]	@ (80136f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 80136ac:	8809      	ldrh	r1, [r1, #0]
 80136ae:	4419      	add	r1, r3
 80136b0:	428a      	cmp	r2, r1
 80136b2:	da09      	bge.n	80136c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 80136b4:	1ad3      	subs	r3, r2, r3
 80136b6:	4a10      	ldr	r2, [pc, #64]	@ (80136f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 80136b8:	6812      	ldr	r2, [r2, #0]
 80136ba:	210e      	movs	r1, #14
 80136bc:	fb01 2303 	mla	r3, r1, r3, r2
 80136c0:	7b18      	ldrb	r0, [r3, #12]
 80136c2:	f000 001f 	and.w	r0, r0, #31
 80136c6:	e7ef      	b.n	80136a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80136c8:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 80136cc:	429a      	cmp	r2, r3
 80136ce:	d108      	bne.n	80136e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80136d0:	f7ef fc3a 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 80136d4:	6803      	ldr	r3, [r0, #0]
 80136d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80136dc:	4718      	bx	r3
 80136de:	2001      	movs	r0, #1
 80136e0:	e7e2      	b.n	80136a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80136e2:	2000      	movs	r0, #0
 80136e4:	e7e0      	b.n	80136a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80136e6:	bf00      	nop
 80136e8:	200140c8 	.word	0x200140c8
 80136ec:	200140d0 	.word	0x200140d0
 80136f0:	200140ac 	.word	0x200140ac
 80136f4:	200140cc 	.word	0x200140cc
 80136f8:	200140b0 	.word	0x200140b0

080136fc <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80136fc:	2010      	movs	r0, #16
 80136fe:	4770      	bx	lr

08013700 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8013700:	2000      	movs	r0, #0
 8013702:	4770      	bx	lr

08013704 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8013704:	4b02      	ldr	r3, [pc, #8]	@ (8013710 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8013706:	8818      	ldrh	r0, [r3, #0]
 8013708:	0040      	lsls	r0, r0, #1
 801370a:	b280      	uxth	r0, r0
 801370c:	4770      	bx	lr
 801370e:	bf00      	nop
 8013710:	20014038 	.word	0x20014038

08013714 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013714:	2bff      	cmp	r3, #255	@ 0xff
 8013716:	d05e      	beq.n	80137d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8013718:	2a0b      	cmp	r2, #11
 801371a:	d058      	beq.n	80137ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801371c:	d80e      	bhi.n	801373c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801371e:	2a03      	cmp	r2, #3
 8013720:	d04d      	beq.n	80137be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8013722:	d804      	bhi.n	801372e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8013724:	2a01      	cmp	r2, #1
 8013726:	d04c      	beq.n	80137c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8013728:	d94d      	bls.n	80137c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801372a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 801372c:	e031      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801372e:	2a09      	cmp	r2, #9
 8013730:	d04d      	beq.n	80137ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8013732:	d84a      	bhi.n	80137ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8013734:	2a08      	cmp	r2, #8
 8013736:	d048      	beq.n	80137ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8013738:	2300      	movs	r3, #0
 801373a:	e02a      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801373c:	2a2f      	cmp	r2, #47	@ 0x2f
 801373e:	d02c      	beq.n	801379a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8013740:	d811      	bhi.n	8013766 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8013742:	2a2d      	cmp	r2, #45	@ 0x2d
 8013744:	d018      	beq.n	8013778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8013746:	d831      	bhi.n	80137ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8013748:	2a2c      	cmp	r2, #44	@ 0x2c
 801374a:	d1f5      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801374c:	684a      	ldr	r2, [r1, #4]
 801374e:	7813      	ldrb	r3, [r2, #0]
 8013750:	7852      	ldrb	r2, [r2, #1]
 8013752:	2a00      	cmp	r2, #0
 8013754:	d1f0      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013756:	2b01      	cmp	r3, #1
 8013758:	d01d      	beq.n	8013796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801375a:	2b00      	cmp	r3, #0
 801375c:	d02d      	beq.n	80137ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801375e:	2b02      	cmp	r3, #2
 8013760:	d1ea      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013762:	68c3      	ldr	r3, [r0, #12]
 8013764:	e015      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013766:	2a31      	cmp	r2, #49	@ 0x31
 8013768:	d004      	beq.n	8013774 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801376a:	d332      	bcc.n	80137d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801376c:	2a32      	cmp	r2, #50	@ 0x32
 801376e:	d030      	beq.n	80137d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8013770:	2a33      	cmp	r2, #51	@ 0x33
 8013772:	d1e1      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013774:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8013776:	e00c      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013778:	684a      	ldr	r2, [r1, #4]
 801377a:	7813      	ldrb	r3, [r2, #0]
 801377c:	7852      	ldrb	r2, [r2, #1]
 801377e:	2a00      	cmp	r2, #0
 8013780:	d1da      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013782:	2b01      	cmp	r3, #1
 8013784:	d004      	beq.n	8013790 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8013786:	d30f      	bcc.n	80137a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8013788:	2b02      	cmp	r3, #2
 801378a:	d1d5      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801378c:	6943      	ldr	r3, [r0, #20]
 801378e:	e000      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013790:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8013792:	4618      	mov	r0, r3
 8013794:	4770      	bx	lr
 8013796:	69c3      	ldr	r3, [r0, #28]
 8013798:	e7fb      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801379a:	684b      	ldr	r3, [r1, #4]
 801379c:	781a      	ldrb	r2, [r3, #0]
 801379e:	785b      	ldrb	r3, [r3, #1]
 80137a0:	2b00      	cmp	r3, #0
 80137a2:	d1c9      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137a4:	2a00      	cmp	r2, #0
 80137a6:	d1f4      	bne.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137a8:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80137aa:	e7f2      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137ac:	684b      	ldr	r3, [r1, #4]
 80137ae:	781a      	ldrb	r2, [r3, #0]
 80137b0:	785b      	ldrb	r3, [r3, #1]
 80137b2:	2b00      	cmp	r3, #0
 80137b4:	d1c0      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137b6:	2a00      	cmp	r2, #0
 80137b8:	d1eb      	bne.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137ba:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80137bc:	e7e9      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137be:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 80137c0:	e7e7      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137c2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80137c4:	e7e5      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137c6:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80137c8:	e7e3      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137ca:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 80137cc:	e7e1      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137ce:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80137d0:	e7df      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137d2:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 80137d4:	e7dd      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137d6:	2a0b      	cmp	r2, #11
 80137d8:	d059      	beq.n	801388e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80137da:	d80e      	bhi.n	80137fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 80137dc:	2a03      	cmp	r2, #3
 80137de:	d050      	beq.n	8013882 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 80137e0:	d804      	bhi.n	80137ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80137e2:	2a01      	cmp	r2, #1
 80137e4:	d04f      	beq.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 80137e6:	d950      	bls.n	801388a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80137e8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80137ea:	e7d2      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137ec:	2a09      	cmp	r2, #9
 80137ee:	d04e      	beq.n	801388e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80137f0:	d801      	bhi.n	80137f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80137f2:	2a08      	cmp	r2, #8
 80137f4:	d1a0      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137f6:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80137f8:	e7cb      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80137fa:	2a2f      	cmp	r2, #47	@ 0x2f
 80137fc:	d02d      	beq.n	801385a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 80137fe:	d811      	bhi.n	8013824 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8013800:	2a2d      	cmp	r2, #45	@ 0x2d
 8013802:	d018      	beq.n	8013836 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8013804:	d833      	bhi.n	801386e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8013806:	2a2c      	cmp	r2, #44	@ 0x2c
 8013808:	d196      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801380a:	684a      	ldr	r2, [r1, #4]
 801380c:	7813      	ldrb	r3, [r2, #0]
 801380e:	7852      	ldrb	r2, [r2, #1]
 8013810:	2a00      	cmp	r2, #0
 8013812:	d191      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013814:	2b01      	cmp	r3, #1
 8013816:	d01e      	beq.n	8013856 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013818:	2b00      	cmp	r3, #0
 801381a:	d030      	beq.n	801387e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 801381c:	2b02      	cmp	r3, #2
 801381e:	d18b      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013820:	6903      	ldr	r3, [r0, #16]
 8013822:	e7b6      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013824:	2a31      	cmp	r2, #49	@ 0x31
 8013826:	d004      	beq.n	8013832 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8013828:	d333      	bcc.n	8013892 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801382a:	2a32      	cmp	r2, #50	@ 0x32
 801382c:	d031      	beq.n	8013892 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801382e:	2a33      	cmp	r2, #51	@ 0x33
 8013830:	d182      	bne.n	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013832:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8013834:	e7ad      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013836:	684a      	ldr	r2, [r1, #4]
 8013838:	7813      	ldrb	r3, [r2, #0]
 801383a:	7852      	ldrb	r2, [r2, #1]
 801383c:	2a00      	cmp	r2, #0
 801383e:	f47f af7b 	bne.w	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013842:	2b01      	cmp	r3, #1
 8013844:	d005      	beq.n	8013852 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013846:	d310      	bcc.n	801386a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8013848:	2b02      	cmp	r3, #2
 801384a:	f47f af75 	bne.w	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801384e:	6983      	ldr	r3, [r0, #24]
 8013850:	e79f      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013852:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8013854:	e79d      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013856:	6a03      	ldr	r3, [r0, #32]
 8013858:	e79b      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801385a:	684b      	ldr	r3, [r1, #4]
 801385c:	781a      	ldrb	r2, [r3, #0]
 801385e:	785b      	ldrb	r3, [r3, #1]
 8013860:	2b00      	cmp	r3, #0
 8013862:	f47f af69 	bne.w	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013866:	2a00      	cmp	r2, #0
 8013868:	d193      	bne.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801386a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801386c:	e791      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801386e:	684b      	ldr	r3, [r1, #4]
 8013870:	781a      	ldrb	r2, [r3, #0]
 8013872:	785b      	ldrb	r3, [r3, #1]
 8013874:	2b00      	cmp	r3, #0
 8013876:	f47f af5f 	bne.w	8013738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801387a:	2a00      	cmp	r2, #0
 801387c:	d189      	bne.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801387e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8013880:	e787      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013882:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8013884:	e785      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013886:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8013888:	e783      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801388a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801388c:	e781      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801388e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8013890:	e77f      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013892:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8013894:	e77d      	b.n	8013792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08013896 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013896:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801389a:	b087      	sub	sp, #28
 801389c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801389e:	9205      	str	r2, [sp, #20]
 80138a0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80138a4:	9202      	str	r2, [sp, #8]
 80138a6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80138aa:	9101      	str	r1, [sp, #4]
 80138ac:	6841      	ldr	r1, [r0, #4]
 80138ae:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80138b2:	fb01 2404 	mla	r4, r1, r4, r2
 80138b6:	6802      	ldr	r2, [r0, #0]
 80138b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80138bc:	f8de 2000 	ldr.w	r2, [lr]
 80138c0:	9203      	str	r2, [sp, #12]
 80138c2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80138c6:	3204      	adds	r2, #4
 80138c8:	9204      	str	r2, [sp, #16]
 80138ca:	9a02      	ldr	r2, [sp, #8]
 80138cc:	43d6      	mvns	r6, r2
 80138ce:	b2f6      	uxtb	r6, r6
 80138d0:	9a01      	ldr	r2, [sp, #4]
 80138d2:	2a00      	cmp	r2, #0
 80138d4:	dc03      	bgt.n	80138de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80138d6:	9a05      	ldr	r2, [sp, #20]
 80138d8:	2a00      	cmp	r2, #0
 80138da:	f340 8129 	ble.w	8013b30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80138de:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80138e0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80138e4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80138e8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80138ec:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80138ee:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80138f2:	2b00      	cmp	r3, #0
 80138f4:	dd0e      	ble.n	8013914 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80138f6:	1408      	asrs	r0, r1, #16
 80138f8:	d405      	bmi.n	8013906 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80138fa:	4560      	cmp	r0, ip
 80138fc:	da03      	bge.n	8013906 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80138fe:	1410      	asrs	r0, r2, #16
 8013900:	d401      	bmi.n	8013906 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013902:	42b8      	cmp	r0, r7
 8013904:	db07      	blt.n	8013916 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013906:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013908:	4401      	add	r1, r0
 801390a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801390c:	3b01      	subs	r3, #1
 801390e:	4402      	add	r2, r0
 8013910:	3402      	adds	r4, #2
 8013912:	e7ee      	b.n	80138f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013914:	d071      	beq.n	80139fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013916:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013918:	1e58      	subs	r0, r3, #1
 801391a:	fb05 1500 	mla	r5, r5, r0, r1
 801391e:	142d      	asrs	r5, r5, #16
 8013920:	d45f      	bmi.n	80139e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013922:	4565      	cmp	r5, ip
 8013924:	da5d      	bge.n	80139e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013926:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013928:	fb05 2000 	mla	r0, r5, r0, r2
 801392c:	1400      	asrs	r0, r0, #16
 801392e:	d458      	bmi.n	80139e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013930:	42b8      	cmp	r0, r7
 8013932:	da56      	bge.n	80139e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013934:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8013938:	4699      	mov	r9, r3
 801393a:	46a2      	mov	sl, r4
 801393c:	f1b9 0f00 	cmp.w	r9, #0
 8013940:	dd57      	ble.n	80139f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8013942:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013946:	9803      	ldr	r0, [sp, #12]
 8013948:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801394c:	140d      	asrs	r5, r1, #16
 801394e:	fb07 000c 	mla	r0, r7, ip, r0
 8013952:	f109 39ff 	add.w	r9, r9, #4294967295
 8013956:	5d40      	ldrb	r0, [r0, r5]
 8013958:	9d04      	ldr	r5, [sp, #16]
 801395a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801395e:	f8ba 5000 	ldrh.w	r5, [sl]
 8013962:	122f      	asrs	r7, r5, #8
 8013964:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013968:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801396c:	fb17 f706 	smulbb	r7, r7, r6
 8013970:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013974:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013978:	00ed      	lsls	r5, r5, #3
 801397a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801397e:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8013982:	10c7      	asrs	r7, r0, #3
 8013984:	b2ed      	uxtb	r5, r5
 8013986:	00c0      	lsls	r0, r0, #3
 8013988:	fb18 f806 	smulbb	r8, r8, r6
 801398c:	fb15 f506 	smulbb	r5, r5, r6
 8013990:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013994:	b2c0      	uxtb	r0, r0
 8013996:	fa1f fc8c 	uxth.w	ip, ip
 801399a:	fb07 870b 	mla	r7, r7, fp, r8
 801399e:	fb00 500b 	mla	r0, r0, fp, r5
 80139a2:	b280      	uxth	r0, r0
 80139a4:	b2bf      	uxth	r7, r7
 80139a6:	f10c 0501 	add.w	r5, ip, #1
 80139aa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80139ae:	f107 0801 	add.w	r8, r7, #1
 80139b2:	1c45      	adds	r5, r0, #1
 80139b4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80139b8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80139bc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80139be:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80139c2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80139c6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80139ca:	ea45 0c0c 	orr.w	ip, r5, ip
 80139ce:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80139d2:	4401      	add	r1, r0
 80139d4:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80139d6:	ea4c 0c08 	orr.w	ip, ip, r8
 80139da:	f82a cb02 	strh.w	ip, [sl], #2
 80139de:	4402      	add	r2, r0
 80139e0:	e7ac      	b.n	801393c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80139e2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80139e6:	f04f 0800 	mov.w	r8, #0
 80139ea:	eb03 0008 	add.w	r0, r3, r8
 80139ee:	2800      	cmp	r0, #0
 80139f0:	dc41      	bgt.n	8013a76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80139f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80139f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80139fa:	9b01      	ldr	r3, [sp, #4]
 80139fc:	2b00      	cmp	r3, #0
 80139fe:	f340 8097 	ble.w	8013b30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013a02:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013a06:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013a0a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013a0e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013a10:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013a14:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013a18:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013a1c:	eef0 6a62 	vmov.f32	s13, s5
 8013a20:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013a24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013a28:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013a2c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013a30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013a34:	eef0 6a43 	vmov.f32	s13, s6
 8013a38:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013a3c:	ee12 2a90 	vmov	r2, s5
 8013a40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013a44:	fb92 f3f3 	sdiv	r3, r2, r3
 8013a48:	ee13 2a10 	vmov	r2, s6
 8013a4c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013a4e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013a50:	fb92 f3f3 	sdiv	r3, r2, r3
 8013a54:	9314      	str	r3, [sp, #80]	@ 0x50
 8013a56:	9b01      	ldr	r3, [sp, #4]
 8013a58:	9a05      	ldr	r2, [sp, #20]
 8013a5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013a5e:	3b01      	subs	r3, #1
 8013a60:	9301      	str	r3, [sp, #4]
 8013a62:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013a66:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013a68:	eeb0 3a67 	vmov.f32	s6, s15
 8013a6c:	bf08      	it	eq
 8013a6e:	4613      	moveq	r3, r2
 8013a70:	eef0 2a47 	vmov.f32	s5, s14
 8013a74:	e72c      	b.n	80138d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013a76:	140f      	asrs	r7, r1, #16
 8013a78:	d453      	bmi.n	8013b22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a7a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013a7e:	42bd      	cmp	r5, r7
 8013a80:	dd4f      	ble.n	8013b22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a82:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013a86:	d44c      	bmi.n	8013b22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a88:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013a8c:	4560      	cmp	r0, ip
 8013a8e:	dd48      	ble.n	8013b22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a90:	9803      	ldr	r0, [sp, #12]
 8013a92:	b22d      	sxth	r5, r5
 8013a94:	fb0c 0505 	mla	r5, ip, r5, r0
 8013a98:	5de8      	ldrb	r0, [r5, r7]
 8013a9a:	9d04      	ldr	r5, [sp, #16]
 8013a9c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013aa0:	f06f 0501 	mvn.w	r5, #1
 8013aa4:	fb05 fb08 	mul.w	fp, r5, r8
 8013aa8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013aac:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013ab0:	122f      	asrs	r7, r5, #8
 8013ab2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013ab6:	fb17 f706 	smulbb	r7, r7, r6
 8013aba:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013abe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013ac2:	00ed      	lsls	r5, r5, #3
 8013ac4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013ac8:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013acc:	10c7      	asrs	r7, r0, #3
 8013ace:	b2ed      	uxtb	r5, r5
 8013ad0:	00c0      	lsls	r0, r0, #3
 8013ad2:	fb19 f906 	smulbb	r9, r9, r6
 8013ad6:	fb15 f506 	smulbb	r5, r5, r6
 8013ada:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013ade:	b2c0      	uxtb	r0, r0
 8013ae0:	fa1f fc8c 	uxth.w	ip, ip
 8013ae4:	fb07 970a 	mla	r7, r7, sl, r9
 8013ae8:	fb00 500a 	mla	r0, r0, sl, r5
 8013aec:	b2bf      	uxth	r7, r7
 8013aee:	b280      	uxth	r0, r0
 8013af0:	f10c 0501 	add.w	r5, ip, #1
 8013af4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013af8:	f107 0901 	add.w	r9, r7, #1
 8013afc:	1c45      	adds	r5, r0, #1
 8013afe:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013b02:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013b06:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013b0a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013b0e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013b12:	ea45 0c0c 	orr.w	ip, r5, ip
 8013b16:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013b1a:	ea4c 0c09 	orr.w	ip, ip, r9
 8013b1e:	f824 c00b 	strh.w	ip, [r4, fp]
 8013b22:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013b24:	4401      	add	r1, r0
 8013b26:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013b28:	f108 38ff 	add.w	r8, r8, #4294967295
 8013b2c:	4402      	add	r2, r0
 8013b2e:	e75c      	b.n	80139ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013b30:	b007      	add	sp, #28
 8013b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013b36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013b36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b3a:	b085      	sub	sp, #20
 8013b3c:	4693      	mov	fp, r2
 8013b3e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013b40:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013b42:	6870      	ldr	r0, [r6, #4]
 8013b44:	9100      	str	r1, [sp, #0]
 8013b46:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013b4a:	fb00 2404 	mla	r4, r0, r4, r2
 8013b4e:	6832      	ldr	r2, [r6, #0]
 8013b50:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013b54:	682a      	ldr	r2, [r5, #0]
 8013b56:	9201      	str	r2, [sp, #4]
 8013b58:	686a      	ldr	r2, [r5, #4]
 8013b5a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8013b5e:	3204      	adds	r2, #4
 8013b60:	9202      	str	r2, [sp, #8]
 8013b62:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013b66:	9a00      	ldr	r2, [sp, #0]
 8013b68:	2a00      	cmp	r2, #0
 8013b6a:	dc03      	bgt.n	8013b74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013b6c:	f1bb 0f00 	cmp.w	fp, #0
 8013b70:	f340 80a0 	ble.w	8013cb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013b74:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013b76:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013b7a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013b7e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013b82:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013b84:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013b88:	2b00      	cmp	r3, #0
 8013b8a:	dd0c      	ble.n	8013ba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013b8c:	1406      	asrs	r6, r0, #16
 8013b8e:	d405      	bmi.n	8013b9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013b90:	454e      	cmp	r6, r9
 8013b92:	da03      	bge.n	8013b9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013b94:	1416      	asrs	r6, r2, #16
 8013b96:	d401      	bmi.n	8013b9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013b98:	4546      	cmp	r6, r8
 8013b9a:	db05      	blt.n	8013ba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013b9c:	4470      	add	r0, lr
 8013b9e:	4462      	add	r2, ip
 8013ba0:	3b01      	subs	r3, #1
 8013ba2:	3402      	adds	r4, #2
 8013ba4:	e7f0      	b.n	8013b88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013ba6:	d00f      	beq.n	8013bc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013ba8:	1e5e      	subs	r6, r3, #1
 8013baa:	fb0e 0706 	mla	r7, lr, r6, r0
 8013bae:	143f      	asrs	r7, r7, #16
 8013bb0:	d541      	bpl.n	8013c36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013bb2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013bb6:	4698      	mov	r8, r3
 8013bb8:	9603      	str	r6, [sp, #12]
 8013bba:	f1b8 0f00 	cmp.w	r8, #0
 8013bbe:	dc59      	bgt.n	8013c74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013bc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013bc4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013bc8:	9b00      	ldr	r3, [sp, #0]
 8013bca:	2b00      	cmp	r3, #0
 8013bcc:	dd72      	ble.n	8013cb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013bce:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013bd2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013bd6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013bda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013bdc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013be0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013be4:	eeb0 6a62 	vmov.f32	s12, s5
 8013be8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013bec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013bf0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013bf4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013bf8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013bfc:	eeb0 6a43 	vmov.f32	s12, s6
 8013c00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013c04:	ee12 2a90 	vmov	r2, s5
 8013c08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013c0c:	fb92 fef3 	sdiv	lr, r2, r3
 8013c10:	ee13 2a10 	vmov	r2, s6
 8013c14:	fb92 fcf3 	sdiv	ip, r2, r3
 8013c18:	9b00      	ldr	r3, [sp, #0]
 8013c1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013c1e:	3b01      	subs	r3, #1
 8013c20:	9300      	str	r3, [sp, #0]
 8013c22:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013c26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013c28:	eeb0 3a67 	vmov.f32	s6, s15
 8013c2c:	bf08      	it	eq
 8013c2e:	465b      	moveq	r3, fp
 8013c30:	eef0 2a47 	vmov.f32	s5, s14
 8013c34:	e797      	b.n	8013b66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8013c36:	454f      	cmp	r7, r9
 8013c38:	dabb      	bge.n	8013bb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013c3a:	fb0c 2606 	mla	r6, ip, r6, r2
 8013c3e:	1436      	asrs	r6, r6, #16
 8013c40:	d4b7      	bmi.n	8013bb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013c42:	4546      	cmp	r6, r8
 8013c44:	dab5      	bge.n	8013bb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013c46:	461e      	mov	r6, r3
 8013c48:	46a0      	mov	r8, r4
 8013c4a:	2e00      	cmp	r6, #0
 8013c4c:	ddb8      	ble.n	8013bc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013c4e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013c52:	9901      	ldr	r1, [sp, #4]
 8013c54:	1417      	asrs	r7, r2, #16
 8013c56:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013c5a:	fb0a 1707 	mla	r7, sl, r7, r1
 8013c5e:	9902      	ldr	r1, [sp, #8]
 8013c60:	f817 7009 	ldrb.w	r7, [r7, r9]
 8013c64:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013c68:	f828 7b02 	strh.w	r7, [r8], #2
 8013c6c:	4470      	add	r0, lr
 8013c6e:	4462      	add	r2, ip
 8013c70:	3e01      	subs	r6, #1
 8013c72:	e7ea      	b.n	8013c4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013c74:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013c78:	d417      	bmi.n	8013caa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c7a:	68ae      	ldr	r6, [r5, #8]
 8013c7c:	454e      	cmp	r6, r9
 8013c7e:	dd14      	ble.n	8013caa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c80:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013c84:	d411      	bmi.n	8013caa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c86:	68ef      	ldr	r7, [r5, #12]
 8013c88:	4557      	cmp	r7, sl
 8013c8a:	dd0e      	ble.n	8013caa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c8c:	9f01      	ldr	r7, [sp, #4]
 8013c8e:	b236      	sxth	r6, r6
 8013c90:	fb0a 7606 	mla	r6, sl, r6, r7
 8013c94:	9f02      	ldr	r7, [sp, #8]
 8013c96:	f816 6009 	ldrb.w	r6, [r6, r9]
 8013c9a:	f06f 0101 	mvn.w	r1, #1
 8013c9e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013ca2:	fb01 f608 	mul.w	r6, r1, r8
 8013ca6:	9903      	ldr	r1, [sp, #12]
 8013ca8:	538f      	strh	r7, [r1, r6]
 8013caa:	4470      	add	r0, lr
 8013cac:	4462      	add	r2, ip
 8013cae:	f108 38ff 	add.w	r8, r8, #4294967295
 8013cb2:	e782      	b.n	8013bba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013cb4:	b005      	add	sp, #20
 8013cb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013cba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013cba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cbe:	b087      	sub	sp, #28
 8013cc0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013cc2:	9205      	str	r2, [sp, #20]
 8013cc4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013cc8:	9203      	str	r2, [sp, #12]
 8013cca:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013cce:	9102      	str	r1, [sp, #8]
 8013cd0:	6861      	ldr	r1, [r4, #4]
 8013cd2:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013cd6:	fb01 2000 	mla	r0, r1, r0, r2
 8013cda:	6822      	ldr	r2, [r4, #0]
 8013cdc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013ce0:	9200      	str	r2, [sp, #0]
 8013ce2:	f8dc 2000 	ldr.w	r2, [ip]
 8013ce6:	9204      	str	r2, [sp, #16]
 8013ce8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013cec:	3204      	adds	r2, #4
 8013cee:	9201      	str	r2, [sp, #4]
 8013cf0:	9a03      	ldr	r2, [sp, #12]
 8013cf2:	43d5      	mvns	r5, r2
 8013cf4:	b2ed      	uxtb	r5, r5
 8013cf6:	9a02      	ldr	r2, [sp, #8]
 8013cf8:	2a00      	cmp	r2, #0
 8013cfa:	dc03      	bgt.n	8013d04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013cfc:	9a05      	ldr	r2, [sp, #20]
 8013cfe:	2a00      	cmp	r2, #0
 8013d00:	f340 812c 	ble.w	8013f5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013d04:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013d06:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8013d0a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013d0e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013d12:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013d14:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013d18:	2b00      	cmp	r3, #0
 8013d1a:	dd10      	ble.n	8013d3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013d1c:	140c      	asrs	r4, r1, #16
 8013d1e:	d405      	bmi.n	8013d2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013d20:	4574      	cmp	r4, lr
 8013d22:	da03      	bge.n	8013d2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013d24:	1414      	asrs	r4, r2, #16
 8013d26:	d401      	bmi.n	8013d2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013d28:	42bc      	cmp	r4, r7
 8013d2a:	db09      	blt.n	8013d40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013d2c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013d2e:	9800      	ldr	r0, [sp, #0]
 8013d30:	4421      	add	r1, r4
 8013d32:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013d34:	3002      	adds	r0, #2
 8013d36:	4422      	add	r2, r4
 8013d38:	3b01      	subs	r3, #1
 8013d3a:	9000      	str	r0, [sp, #0]
 8013d3c:	e7ec      	b.n	8013d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013d3e:	d071      	beq.n	8013e24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013d40:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013d42:	1e5c      	subs	r4, r3, #1
 8013d44:	fb06 1604 	mla	r6, r6, r4, r1
 8013d48:	1436      	asrs	r6, r6, #16
 8013d4a:	d45d      	bmi.n	8013e08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013d4c:	4576      	cmp	r6, lr
 8013d4e:	da5b      	bge.n	8013e08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013d50:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8013d52:	fb06 2404 	mla	r4, r6, r4, r2
 8013d56:	1424      	asrs	r4, r4, #16
 8013d58:	d456      	bmi.n	8013e08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013d5a:	42bc      	cmp	r4, r7
 8013d5c:	da54      	bge.n	8013e08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013d5e:	f8dd 9000 	ldr.w	r9, [sp]
 8013d62:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8013d66:	4698      	mov	r8, r3
 8013d68:	f1b8 0f00 	cmp.w	r8, #0
 8013d6c:	dd54      	ble.n	8013e18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013d6e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013d72:	9804      	ldr	r0, [sp, #16]
 8013d74:	1414      	asrs	r4, r2, #16
 8013d76:	fb07 0404 	mla	r4, r7, r4, r0
 8013d7a:	140e      	asrs	r6, r1, #16
 8013d7c:	9801      	ldr	r0, [sp, #4]
 8013d7e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8013d82:	f8b9 4000 	ldrh.w	r4, [r9]
 8013d86:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013d8a:	eb00 0b0e 	add.w	fp, r0, lr
 8013d8e:	1227      	asrs	r7, r4, #8
 8013d90:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013d94:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013d98:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013d9c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013d9e:	fb16 f60a 	smulbb	r6, r6, sl
 8013da2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013da6:	fb07 6705 	mla	r7, r7, r5, r6
 8013daa:	10e6      	asrs	r6, r4, #3
 8013dac:	00e4      	lsls	r4, r4, #3
 8013dae:	b2e4      	uxtb	r4, r4
 8013db0:	fb1b fb0a 	smulbb	fp, fp, sl
 8013db4:	fb14 f405 	smulbb	r4, r4, r5
 8013db8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013dbc:	b2bf      	uxth	r7, r7
 8013dbe:	fb06 b605 	mla	r6, r6, r5, fp
 8013dc2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013dc6:	b2b6      	uxth	r6, r6
 8013dc8:	fa1f fe8e 	uxth.w	lr, lr
 8013dcc:	1c7c      	adds	r4, r7, #1
 8013dce:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013dd2:	f106 0b01 	add.w	fp, r6, #1
 8013dd6:	f10e 0401 	add.w	r4, lr, #1
 8013dda:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8013dde:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013de2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013de6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013dea:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013dee:	4327      	orrs	r7, r4
 8013df0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013df4:	4401      	add	r1, r0
 8013df6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013df8:	ea47 070b 	orr.w	r7, r7, fp
 8013dfc:	f829 7b02 	strh.w	r7, [r9], #2
 8013e00:	4402      	add	r2, r0
 8013e02:	f108 38ff 	add.w	r8, r8, #4294967295
 8013e06:	e7af      	b.n	8013d68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013e08:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8013e0c:	f04f 0e00 	mov.w	lr, #0
 8013e10:	eb03 040e 	add.w	r4, r3, lr
 8013e14:	2c00      	cmp	r4, #0
 8013e16:	dc43      	bgt.n	8013ea0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8013e18:	9a00      	ldr	r2, [sp, #0]
 8013e1a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013e1e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013e22:	9300      	str	r3, [sp, #0]
 8013e24:	9b02      	ldr	r3, [sp, #8]
 8013e26:	2b00      	cmp	r3, #0
 8013e28:	f340 8098 	ble.w	8013f5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013e2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013e30:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013e34:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013e38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013e3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013e3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013e42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013e46:	eef0 6a62 	vmov.f32	s13, s5
 8013e4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013e4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013e52:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013e56:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013e5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013e5e:	eef0 6a43 	vmov.f32	s13, s6
 8013e62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013e66:	ee12 2a90 	vmov	r2, s5
 8013e6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013e6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e72:	ee13 2a10 	vmov	r2, s6
 8013e76:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013e78:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013e7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e7e:	9314      	str	r3, [sp, #80]	@ 0x50
 8013e80:	9b02      	ldr	r3, [sp, #8]
 8013e82:	9a05      	ldr	r2, [sp, #20]
 8013e84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013e88:	3b01      	subs	r3, #1
 8013e8a:	9302      	str	r3, [sp, #8]
 8013e8c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013e90:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013e92:	eeb0 3a67 	vmov.f32	s6, s15
 8013e96:	bf08      	it	eq
 8013e98:	4613      	moveq	r3, r2
 8013e9a:	eef0 2a47 	vmov.f32	s5, s14
 8013e9e:	e72a      	b.n	8013cf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013ea0:	140f      	asrs	r7, r1, #16
 8013ea2:	d454      	bmi.n	8013f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013ea4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013ea8:	42be      	cmp	r6, r7
 8013eaa:	dd50      	ble.n	8013f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013eac:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013eb0:	d44d      	bmi.n	8013f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013eb2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013eb6:	4544      	cmp	r4, r8
 8013eb8:	dd49      	ble.n	8013f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013eba:	9c04      	ldr	r4, [sp, #16]
 8013ebc:	b236      	sxth	r6, r6
 8013ebe:	fb08 4606 	mla	r6, r8, r6, r4
 8013ec2:	f06f 0001 	mvn.w	r0, #1
 8013ec6:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013eca:	9c01      	ldr	r4, [sp, #4]
 8013ecc:	fb00 fa0e 	mul.w	sl, r0, lr
 8013ed0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013ed4:	9800      	ldr	r0, [sp, #0]
 8013ed6:	eb04 0b08 	add.w	fp, r4, r8
 8013eda:	f830 400a 	ldrh.w	r4, [r0, sl]
 8013ede:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013ee2:	9801      	ldr	r0, [sp, #4]
 8013ee4:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013ee8:	f810 8008 	ldrb.w	r8, [r0, r8]
 8013eec:	9800      	ldr	r0, [sp, #0]
 8013eee:	1227      	asrs	r7, r4, #8
 8013ef0:	fb16 f609 	smulbb	r6, r6, r9
 8013ef4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013ef8:	fb07 6705 	mla	r7, r7, r5, r6
 8013efc:	10e6      	asrs	r6, r4, #3
 8013efe:	00e4      	lsls	r4, r4, #3
 8013f00:	b2e4      	uxtb	r4, r4
 8013f02:	fb1b fb09 	smulbb	fp, fp, r9
 8013f06:	fb14 f405 	smulbb	r4, r4, r5
 8013f0a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013f0e:	b2bf      	uxth	r7, r7
 8013f10:	fb06 b605 	mla	r6, r6, r5, fp
 8013f14:	fb08 4809 	mla	r8, r8, r9, r4
 8013f18:	b2b6      	uxth	r6, r6
 8013f1a:	fa1f f888 	uxth.w	r8, r8
 8013f1e:	1c7c      	adds	r4, r7, #1
 8013f20:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013f24:	f106 0b01 	add.w	fp, r6, #1
 8013f28:	f108 0401 	add.w	r4, r8, #1
 8013f2c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8013f30:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013f34:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013f38:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013f3c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013f40:	4327      	orrs	r7, r4
 8013f42:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013f46:	ea47 070b 	orr.w	r7, r7, fp
 8013f4a:	f820 700a 	strh.w	r7, [r0, sl]
 8013f4e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013f50:	4401      	add	r1, r0
 8013f52:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013f54:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013f58:	4402      	add	r2, r0
 8013f5a:	e759      	b.n	8013e10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013f5c:	b007      	add	sp, #28
 8013f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f68:	b085      	sub	sp, #20
 8013f6a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013f6e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013f70:	9203      	str	r2, [sp, #12]
 8013f72:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013f76:	6870      	ldr	r0, [r6, #4]
 8013f78:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013f7a:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8013f7e:	686f      	ldr	r7, [r5, #4]
 8013f80:	9101      	str	r1, [sp, #4]
 8013f82:	fb00 2404 	mla	r4, r0, r4, r2
 8013f86:	6832      	ldr	r2, [r6, #0]
 8013f88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013f8c:	682a      	ldr	r2, [r5, #0]
 8013f8e:	9202      	str	r2, [sp, #8]
 8013f90:	3704      	adds	r7, #4
 8013f92:	9a01      	ldr	r2, [sp, #4]
 8013f94:	2a00      	cmp	r2, #0
 8013f96:	dc03      	bgt.n	8013fa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013f98:	9a03      	ldr	r2, [sp, #12]
 8013f9a:	2a00      	cmp	r2, #0
 8013f9c:	f340 80cc 	ble.w	8014138 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013fa0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013fa2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013fa6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013faa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013fae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013fb0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013fb4:	2b00      	cmp	r3, #0
 8013fb6:	dd0d      	ble.n	8013fd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013fb8:	1406      	asrs	r6, r0, #16
 8013fba:	d405      	bmi.n	8013fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013fbc:	454e      	cmp	r6, r9
 8013fbe:	da03      	bge.n	8013fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013fc0:	1416      	asrs	r6, r2, #16
 8013fc2:	d401      	bmi.n	8013fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013fc4:	4546      	cmp	r6, r8
 8013fc6:	db06      	blt.n	8013fd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013fc8:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8013fca:	4460      	add	r0, ip
 8013fcc:	4432      	add	r2, r6
 8013fce:	3b01      	subs	r3, #1
 8013fd0:	3402      	adds	r4, #2
 8013fd2:	e7ef      	b.n	8013fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013fd4:	d00f      	beq.n	8013ff6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013fd6:	1e5e      	subs	r6, r3, #1
 8013fd8:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013fdc:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013fe0:	d543      	bpl.n	801406a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8013fe2:	4698      	mov	r8, r3
 8013fe4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013fe8:	f1b8 0f00 	cmp.w	r8, #0
 8013fec:	dc71      	bgt.n	80140d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8013fee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013ff2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013ff6:	9b01      	ldr	r3, [sp, #4]
 8013ff8:	2b00      	cmp	r3, #0
 8013ffa:	f340 809d 	ble.w	8014138 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013ffe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014002:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014006:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801400a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801400c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014010:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014014:	eeb0 6a62 	vmov.f32	s12, s5
 8014018:	ee61 7a27 	vmul.f32	s15, s2, s15
 801401c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014020:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014024:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014028:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801402c:	eeb0 6a43 	vmov.f32	s12, s6
 8014030:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014034:	ee12 2a90 	vmov	r2, s5
 8014038:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801403c:	fb92 fcf3 	sdiv	ip, r2, r3
 8014040:	ee13 2a10 	vmov	r2, s6
 8014044:	fb92 f3f3 	sdiv	r3, r2, r3
 8014048:	9312      	str	r3, [sp, #72]	@ 0x48
 801404a:	9b01      	ldr	r3, [sp, #4]
 801404c:	9a03      	ldr	r2, [sp, #12]
 801404e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014052:	3b01      	subs	r3, #1
 8014054:	9301      	str	r3, [sp, #4]
 8014056:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801405a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801405c:	eeb0 3a67 	vmov.f32	s6, s15
 8014060:	bf08      	it	eq
 8014062:	4613      	moveq	r3, r2
 8014064:	eef0 2a47 	vmov.f32	s5, s14
 8014068:	e793      	b.n	8013f92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801406a:	45ce      	cmp	lr, r9
 801406c:	dab9      	bge.n	8013fe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801406e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014070:	fb01 2606 	mla	r6, r1, r6, r2
 8014074:	1436      	asrs	r6, r6, #16
 8014076:	d4b4      	bmi.n	8013fe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014078:	4546      	cmp	r6, r8
 801407a:	dab2      	bge.n	8013fe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801407c:	4698      	mov	r8, r3
 801407e:	46a2      	mov	sl, r4
 8014080:	f1b8 0f00 	cmp.w	r8, #0
 8014084:	ddb3      	ble.n	8013fee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014086:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801408a:	9902      	ldr	r1, [sp, #8]
 801408c:	1416      	asrs	r6, r2, #16
 801408e:	fb09 1606 	mla	r6, r9, r6, r1
 8014092:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8014096:	492a      	ldr	r1, [pc, #168]	@ (8014140 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014098:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801409c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80140a0:	eb07 0b0e 	add.w	fp, r7, lr
 80140a4:	4460      	add	r0, ip
 80140a6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80140aa:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80140ae:	00f6      	lsls	r6, r6, #3
 80140b0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80140b4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80140b8:	ea49 0606 	orr.w	r6, r9, r6
 80140bc:	f817 900e 	ldrb.w	r9, [r7, lr]
 80140c0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80140c2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80140c6:	f82a 6b02 	strh.w	r6, [sl], #2
 80140ca:	440a      	add	r2, r1
 80140cc:	f108 38ff 	add.w	r8, r8, #4294967295
 80140d0:	e7d6      	b.n	8014080 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80140d2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80140d6:	d429      	bmi.n	801412c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80140d8:	68ae      	ldr	r6, [r5, #8]
 80140da:	454e      	cmp	r6, r9
 80140dc:	dd26      	ble.n	801412c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80140de:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80140e2:	d423      	bmi.n	801412c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80140e4:	68e9      	ldr	r1, [r5, #12]
 80140e6:	4559      	cmp	r1, fp
 80140e8:	dd20      	ble.n	801412c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80140ea:	9902      	ldr	r1, [sp, #8]
 80140ec:	fa0f fe86 	sxth.w	lr, r6
 80140f0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80140f4:	f06f 0101 	mvn.w	r1, #1
 80140f8:	f81e e009 	ldrb.w	lr, [lr, r9]
 80140fc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014100:	eb07 060e 	add.w	r6, r7, lr
 8014104:	fb01 f908 	mul.w	r9, r1, r8
 8014108:	f896 b002 	ldrb.w	fp, [r6, #2]
 801410c:	7876      	ldrb	r6, [r6, #1]
 801410e:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8014112:	00f6      	lsls	r6, r6, #3
 8014114:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8014118:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801411c:	ea4b 0606 	orr.w	r6, fp, r6
 8014120:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014124:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8014128:	f82a 6009 	strh.w	r6, [sl, r9]
 801412c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801412e:	4460      	add	r0, ip
 8014130:	440a      	add	r2, r1
 8014132:	f108 38ff 	add.w	r8, r8, #4294967295
 8014136:	e757      	b.n	8013fe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014138:	b005      	add	sp, #20
 801413a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801413e:	bf00      	nop
 8014140:	fffff800 	.word	0xfffff800

08014144 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014148:	b087      	sub	sp, #28
 801414a:	468b      	mov	fp, r1
 801414c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801414e:	9204      	str	r2, [sp, #16]
 8014150:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014154:	9205      	str	r2, [sp, #20]
 8014156:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801415a:	6841      	ldr	r1, [r0, #4]
 801415c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8014160:	fb01 2404 	mla	r4, r1, r4, r2
 8014164:	6802      	ldr	r2, [r0, #0]
 8014166:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801416a:	f8dc 2000 	ldr.w	r2, [ip]
 801416e:	9201      	str	r2, [sp, #4]
 8014170:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014174:	3204      	adds	r2, #4
 8014176:	9202      	str	r2, [sp, #8]
 8014178:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801417c:	f1bb 0f00 	cmp.w	fp, #0
 8014180:	dc03      	bgt.n	801418a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014182:	9a04      	ldr	r2, [sp, #16]
 8014184:	2a00      	cmp	r2, #0
 8014186:	f340 8138 	ble.w	80143fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801418a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801418c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014190:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8014194:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014198:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801419a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801419e:	2b00      	cmp	r3, #0
 80141a0:	dd0e      	ble.n	80141c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80141a2:	1402      	asrs	r2, r0, #16
 80141a4:	d405      	bmi.n	80141b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80141a6:	42ba      	cmp	r2, r7
 80141a8:	da03      	bge.n	80141b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80141aa:	140a      	asrs	r2, r1, #16
 80141ac:	d401      	bmi.n	80141b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80141ae:	42b2      	cmp	r2, r6
 80141b0:	db07      	blt.n	80141c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80141b2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80141b4:	4410      	add	r0, r2
 80141b6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80141b8:	3b01      	subs	r3, #1
 80141ba:	4411      	add	r1, r2
 80141bc:	3402      	adds	r4, #2
 80141be:	e7ee      	b.n	801419e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80141c0:	d019      	beq.n	80141f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80141c2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80141c4:	1e5a      	subs	r2, r3, #1
 80141c6:	fb05 0502 	mla	r5, r5, r2, r0
 80141ca:	142d      	asrs	r5, r5, #16
 80141cc:	d409      	bmi.n	80141e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80141ce:	42bd      	cmp	r5, r7
 80141d0:	da07      	bge.n	80141e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80141d2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80141d4:	fb05 1202 	mla	r2, r5, r2, r1
 80141d8:	1412      	asrs	r2, r2, #16
 80141da:	d402      	bmi.n	80141e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80141dc:	42b2      	cmp	r2, r6
 80141de:	f2c0 80ac 	blt.w	801433a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80141e2:	f04f 0e00 	mov.w	lr, #0
 80141e6:	eb03 020e 	add.w	r2, r3, lr
 80141ea:	2a00      	cmp	r2, #0
 80141ec:	dc3e      	bgt.n	801426c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80141ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80141f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80141f6:	f1bb 0f00 	cmp.w	fp, #0
 80141fa:	f340 80fe 	ble.w	80143fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80141fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014202:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014206:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801420a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801420c:	f1bb 0b01 	subs.w	fp, fp, #1
 8014210:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014214:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014218:	eeb0 6a62 	vmov.f32	s12, s5
 801421c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014220:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014224:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014228:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801422c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014230:	eeb0 6a43 	vmov.f32	s12, s6
 8014234:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014238:	ee12 2a90 	vmov	r2, s5
 801423c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014240:	fb92 f3f3 	sdiv	r3, r2, r3
 8014244:	ee13 2a10 	vmov	r2, s6
 8014248:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801424c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801424e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014250:	fb92 f3f3 	sdiv	r3, r2, r3
 8014254:	9a04      	ldr	r2, [sp, #16]
 8014256:	9314      	str	r3, [sp, #80]	@ 0x50
 8014258:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801425c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801425e:	eeb0 3a67 	vmov.f32	s6, s15
 8014262:	bf08      	it	eq
 8014264:	4613      	moveq	r3, r2
 8014266:	eef0 2a47 	vmov.f32	s5, s14
 801426a:	e787      	b.n	801417c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801426c:	1406      	asrs	r6, r0, #16
 801426e:	d45d      	bmi.n	801432c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014270:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014274:	42b5      	cmp	r5, r6
 8014276:	dd59      	ble.n	801432c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014278:	140f      	asrs	r7, r1, #16
 801427a:	d457      	bmi.n	801432c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801427c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014280:	42ba      	cmp	r2, r7
 8014282:	dd53      	ble.n	801432c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014284:	9a01      	ldr	r2, [sp, #4]
 8014286:	b22d      	sxth	r5, r5
 8014288:	fb07 2505 	mla	r5, r7, r5, r2
 801428c:	5daa      	ldrb	r2, [r5, r6]
 801428e:	9d02      	ldr	r5, [sp, #8]
 8014290:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014294:	0e2e      	lsrs	r6, r5, #24
 8014296:	d049      	beq.n	801432c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014298:	f06f 0201 	mvn.w	r2, #1
 801429c:	fb02 f20e 	mul.w	r2, r2, lr
 80142a0:	9203      	str	r2, [sp, #12]
 80142a2:	f834 8002 	ldrh.w	r8, [r4, r2]
 80142a6:	9a05      	ldr	r2, [sp, #20]
 80142a8:	4356      	muls	r6, r2
 80142aa:	1c72      	adds	r2, r6, #1
 80142ac:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80142b0:	1212      	asrs	r2, r2, #8
 80142b2:	fa1f f982 	uxth.w	r9, r2
 80142b6:	ea4f 2728 	mov.w	r7, r8, asr #8
 80142ba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80142be:	43d2      	mvns	r2, r2
 80142c0:	b2d2      	uxtb	r2, r2
 80142c2:	fb16 f609 	smulbb	r6, r6, r9
 80142c6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80142ca:	fb07 6702 	mla	r7, r7, r2, r6
 80142ce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80142d2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80142d6:	b2ed      	uxtb	r5, r5
 80142d8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80142dc:	fa5f f888 	uxtb.w	r8, r8
 80142e0:	fb15 f509 	smulbb	r5, r5, r9
 80142e4:	fb08 5502 	mla	r5, r8, r2, r5
 80142e8:	b2bf      	uxth	r7, r7
 80142ea:	fb1a fa09 	smulbb	sl, sl, r9
 80142ee:	b2ad      	uxth	r5, r5
 80142f0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80142f4:	fb06 a602 	mla	r6, r6, r2, sl
 80142f8:	1c7a      	adds	r2, r7, #1
 80142fa:	f105 0a01 	add.w	sl, r5, #1
 80142fe:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014302:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014306:	b2b6      	uxth	r6, r6
 8014308:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801430c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014310:	ea4a 0707 	orr.w	r7, sl, r7
 8014314:	f106 0a01 	add.w	sl, r6, #1
 8014318:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801431c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014320:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014324:	9a03      	ldr	r2, [sp, #12]
 8014326:	ea47 070a 	orr.w	r7, r7, sl
 801432a:	52a7      	strh	r7, [r4, r2]
 801432c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801432e:	4410      	add	r0, r2
 8014330:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014332:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014336:	4411      	add	r1, r2
 8014338:	e755      	b.n	80141e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801433a:	f04f 0800 	mov.w	r8, #0
 801433e:	eba3 0208 	sub.w	r2, r3, r8
 8014342:	2a00      	cmp	r2, #0
 8014344:	f77f af53 	ble.w	80141ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014348:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801434c:	9f01      	ldr	r7, [sp, #4]
 801434e:	140a      	asrs	r2, r1, #16
 8014350:	1405      	asrs	r5, r0, #16
 8014352:	fb06 7202 	mla	r2, r6, r2, r7
 8014356:	5d52      	ldrb	r2, [r2, r5]
 8014358:	9d02      	ldr	r5, [sp, #8]
 801435a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801435e:	0e2e      	lsrs	r6, r5, #24
 8014360:	d044      	beq.n	80143ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8014362:	9a05      	ldr	r2, [sp, #20]
 8014364:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014368:	4356      	muls	r6, r2
 801436a:	1c72      	adds	r2, r6, #1
 801436c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014370:	1212      	asrs	r2, r2, #8
 8014372:	fa1f f982 	uxth.w	r9, r2
 8014376:	ea4f 272e 	mov.w	r7, lr, asr #8
 801437a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801437e:	43d2      	mvns	r2, r2
 8014380:	b2d2      	uxtb	r2, r2
 8014382:	fb16 f609 	smulbb	r6, r6, r9
 8014386:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801438a:	fb07 6702 	mla	r7, r7, r2, r6
 801438e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014392:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014396:	b2ed      	uxtb	r5, r5
 8014398:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801439c:	fa5f fe8e 	uxtb.w	lr, lr
 80143a0:	fb15 f509 	smulbb	r5, r5, r9
 80143a4:	fb0e 5502 	mla	r5, lr, r2, r5
 80143a8:	b2bf      	uxth	r7, r7
 80143aa:	fb1a fa09 	smulbb	sl, sl, r9
 80143ae:	b2ad      	uxth	r5, r5
 80143b0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80143b4:	fb06 a602 	mla	r6, r6, r2, sl
 80143b8:	1c7a      	adds	r2, r7, #1
 80143ba:	f105 0a01 	add.w	sl, r5, #1
 80143be:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80143c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80143c6:	b2b6      	uxth	r6, r6
 80143c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80143cc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80143d0:	ea4a 0707 	orr.w	r7, sl, r7
 80143d4:	f106 0a01 	add.w	sl, r6, #1
 80143d8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80143dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80143e0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80143e4:	ea47 070a 	orr.w	r7, r7, sl
 80143e8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80143ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80143ee:	4410      	add	r0, r2
 80143f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80143f2:	f108 0801 	add.w	r8, r8, #1
 80143f6:	4411      	add	r1, r2
 80143f8:	e7a1      	b.n	801433e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80143fa:	b007      	add	sp, #28
 80143fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014404:	b085      	sub	sp, #20
 8014406:	468b      	mov	fp, r1
 8014408:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801440a:	9203      	str	r2, [sp, #12]
 801440c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014410:	6841      	ldr	r1, [r0, #4]
 8014412:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014416:	fb01 2404 	mla	r4, r1, r4, r2
 801441a:	6802      	ldr	r2, [r0, #0]
 801441c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014420:	f8de 2000 	ldr.w	r2, [lr]
 8014424:	9200      	str	r2, [sp, #0]
 8014426:	f8de 2004 	ldr.w	r2, [lr, #4]
 801442a:	3204      	adds	r2, #4
 801442c:	9201      	str	r2, [sp, #4]
 801442e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014432:	f1bb 0f00 	cmp.w	fp, #0
 8014436:	dc03      	bgt.n	8014440 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014438:	9a03      	ldr	r2, [sp, #12]
 801443a:	2a00      	cmp	r2, #0
 801443c:	f340 8153 	ble.w	80146e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014440:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014442:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014446:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801444a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801444e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014450:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014454:	2b00      	cmp	r3, #0
 8014456:	dd0e      	ble.n	8014476 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014458:	1408      	asrs	r0, r1, #16
 801445a:	d405      	bmi.n	8014468 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801445c:	42b8      	cmp	r0, r7
 801445e:	da03      	bge.n	8014468 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014460:	1410      	asrs	r0, r2, #16
 8014462:	d401      	bmi.n	8014468 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014464:	42b0      	cmp	r0, r6
 8014466:	db07      	blt.n	8014478 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014468:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801446a:	4401      	add	r1, r0
 801446c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801446e:	3b01      	subs	r3, #1
 8014470:	4402      	add	r2, r0
 8014472:	3402      	adds	r4, #2
 8014474:	e7ee      	b.n	8014454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014476:	d017      	beq.n	80144a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014478:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801447a:	1e58      	subs	r0, r3, #1
 801447c:	fb05 1500 	mla	r5, r5, r0, r1
 8014480:	142d      	asrs	r5, r5, #16
 8014482:	d409      	bmi.n	8014498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014484:	42bd      	cmp	r5, r7
 8014486:	da07      	bge.n	8014498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014488:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801448a:	fb05 2000 	mla	r0, r5, r0, r2
 801448e:	1400      	asrs	r0, r0, #16
 8014490:	d402      	bmi.n	8014498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014492:	42b0      	cmp	r0, r6
 8014494:	f2c0 80bc 	blt.w	8014610 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8014498:	2600      	movs	r6, #0
 801449a:	1998      	adds	r0, r3, r6
 801449c:	2800      	cmp	r0, #0
 801449e:	dc3e      	bgt.n	801451e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80144a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80144a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80144a8:	f1bb 0f00 	cmp.w	fp, #0
 80144ac:	f340 811b 	ble.w	80146e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80144b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80144b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80144b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80144bc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80144be:	f1bb 0b01 	subs.w	fp, fp, #1
 80144c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80144c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80144ca:	eeb0 6a62 	vmov.f32	s12, s5
 80144ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80144d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80144d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80144da:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80144de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80144e2:	eeb0 6a43 	vmov.f32	s12, s6
 80144e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80144ea:	ee12 2a90 	vmov	r2, s5
 80144ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80144f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80144f6:	ee13 2a10 	vmov	r2, s6
 80144fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80144fe:	9311      	str	r3, [sp, #68]	@ 0x44
 8014500:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014502:	fb92 f3f3 	sdiv	r3, r2, r3
 8014506:	9a03      	ldr	r2, [sp, #12]
 8014508:	9312      	str	r3, [sp, #72]	@ 0x48
 801450a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801450e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014510:	eeb0 3a67 	vmov.f32	s6, s15
 8014514:	bf08      	it	eq
 8014516:	4613      	moveq	r3, r2
 8014518:	eef0 2a47 	vmov.f32	s5, s14
 801451c:	e789      	b.n	8014432 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801451e:	140f      	asrs	r7, r1, #16
 8014520:	d426      	bmi.n	8014570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014522:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014526:	42bd      	cmp	r5, r7
 8014528:	dd22      	ble.n	8014570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801452a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801452e:	d41f      	bmi.n	8014570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014530:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014534:	4560      	cmp	r0, ip
 8014536:	dd1b      	ble.n	8014570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014538:	9800      	ldr	r0, [sp, #0]
 801453a:	b22d      	sxth	r5, r5
 801453c:	fb0c 0505 	mla	r5, ip, r5, r0
 8014540:	5de8      	ldrb	r0, [r5, r7]
 8014542:	9d01      	ldr	r5, [sp, #4]
 8014544:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014548:	0e07      	lsrs	r7, r0, #24
 801454a:	2fff      	cmp	r7, #255	@ 0xff
 801454c:	d116      	bne.n	801457c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801454e:	f06f 0501 	mvn.w	r5, #1
 8014552:	fb05 f706 	mul.w	r7, r5, r6
 8014556:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801455a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801455e:	0945      	lsrs	r5, r0, #5
 8014560:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014564:	ea4c 0505 	orr.w	r5, ip, r5
 8014568:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801456c:	4305      	orrs	r5, r0
 801456e:	53e5      	strh	r5, [r4, r7]
 8014570:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014572:	4401      	add	r1, r0
 8014574:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014576:	3e01      	subs	r6, #1
 8014578:	4402      	add	r2, r0
 801457a:	e78e      	b.n	801449a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801457c:	b2fd      	uxtb	r5, r7
 801457e:	2f00      	cmp	r7, #0
 8014580:	d0f6      	beq.n	8014570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014582:	f06f 0701 	mvn.w	r7, #1
 8014586:	4377      	muls	r7, r6
 8014588:	fa1f f985 	uxth.w	r9, r5
 801458c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014590:	9702      	str	r7, [sp, #8]
 8014592:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014596:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801459a:	43ed      	mvns	r5, r5
 801459c:	b2ed      	uxtb	r5, r5
 801459e:	fb17 f709 	smulbb	r7, r7, r9
 80145a2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80145a6:	fb0c 7c05 	mla	ip, ip, r5, r7
 80145aa:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80145ae:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80145b2:	b2c0      	uxtb	r0, r0
 80145b4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80145b8:	fa5f f888 	uxtb.w	r8, r8
 80145bc:	fb10 f009 	smulbb	r0, r0, r9
 80145c0:	fb08 0005 	mla	r0, r8, r5, r0
 80145c4:	b280      	uxth	r0, r0
 80145c6:	fa1f fc8c 	uxth.w	ip, ip
 80145ca:	fb1a fa09 	smulbb	sl, sl, r9
 80145ce:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80145d2:	fb07 a705 	mla	r7, r7, r5, sl
 80145d6:	f100 0a01 	add.w	sl, r0, #1
 80145da:	f10c 0501 	add.w	r5, ip, #1
 80145de:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80145e2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80145e6:	b2bf      	uxth	r7, r7
 80145e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80145ec:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80145f0:	ea4a 0c0c 	orr.w	ip, sl, ip
 80145f4:	f107 0a01 	add.w	sl, r7, #1
 80145f8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80145fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014600:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014604:	9802      	ldr	r0, [sp, #8]
 8014606:	ea4c 0c0a 	orr.w	ip, ip, sl
 801460a:	f824 c000 	strh.w	ip, [r4, r0]
 801460e:	e7af      	b.n	8014570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014610:	f04f 0800 	mov.w	r8, #0
 8014614:	eba3 0008 	sub.w	r0, r3, r8
 8014618:	2800      	cmp	r0, #0
 801461a:	f77f af41 	ble.w	80144a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801461e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014622:	9f00      	ldr	r7, [sp, #0]
 8014624:	1410      	asrs	r0, r2, #16
 8014626:	140d      	asrs	r5, r1, #16
 8014628:	fb06 7000 	mla	r0, r6, r0, r7
 801462c:	5d40      	ldrb	r0, [r0, r5]
 801462e:	9d01      	ldr	r5, [sp, #4]
 8014630:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014634:	0e2e      	lsrs	r6, r5, #24
 8014636:	2eff      	cmp	r6, #255	@ 0xff
 8014638:	d112      	bne.n	8014660 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801463a:	482c      	ldr	r0, [pc, #176]	@ (80146ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801463c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014640:	0968      	lsrs	r0, r5, #5
 8014642:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014646:	4330      	orrs	r0, r6
 8014648:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801464c:	4328      	orrs	r0, r5
 801464e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8014652:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014654:	4401      	add	r1, r0
 8014656:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014658:	f108 0801 	add.w	r8, r8, #1
 801465c:	4402      	add	r2, r0
 801465e:	e7d9      	b.n	8014614 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014660:	b2f0      	uxtb	r0, r6
 8014662:	2e00      	cmp	r6, #0
 8014664:	d0f5      	beq.n	8014652 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014666:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801466a:	fa1f f980 	uxth.w	r9, r0
 801466e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014672:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014676:	43c0      	mvns	r0, r0
 8014678:	b2c0      	uxtb	r0, r0
 801467a:	fb16 f609 	smulbb	r6, r6, r9
 801467e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014682:	fb07 6700 	mla	r7, r7, r0, r6
 8014686:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801468a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801468e:	b2ed      	uxtb	r5, r5
 8014690:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014694:	fa5f fc8c 	uxtb.w	ip, ip
 8014698:	fb15 f509 	smulbb	r5, r5, r9
 801469c:	fb0c 5500 	mla	r5, ip, r0, r5
 80146a0:	b2bf      	uxth	r7, r7
 80146a2:	fb1a fa09 	smulbb	sl, sl, r9
 80146a6:	b2ad      	uxth	r5, r5
 80146a8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80146ac:	fb06 a600 	mla	r6, r6, r0, sl
 80146b0:	1c78      	adds	r0, r7, #1
 80146b2:	f105 0a01 	add.w	sl, r5, #1
 80146b6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80146ba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80146be:	b2b6      	uxth	r6, r6
 80146c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80146c4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80146c8:	ea4a 0707 	orr.w	r7, sl, r7
 80146cc:	f106 0a01 	add.w	sl, r6, #1
 80146d0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80146d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80146d8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80146dc:	ea47 070a 	orr.w	r7, r7, sl
 80146e0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80146e4:	e7b5      	b.n	8014652 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80146e6:	b005      	add	sp, #20
 80146e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146ec:	fffff800 	.word	0xfffff800

080146f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80146f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146f4:	b087      	sub	sp, #28
 80146f6:	468b      	mov	fp, r1
 80146f8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80146fa:	9204      	str	r2, [sp, #16]
 80146fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014700:	9205      	str	r2, [sp, #20]
 8014702:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8014706:	6861      	ldr	r1, [r4, #4]
 8014708:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801470c:	fb01 2000 	mla	r0, r1, r0, r2
 8014710:	6822      	ldr	r2, [r4, #0]
 8014712:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014716:	f8de 2000 	ldr.w	r2, [lr]
 801471a:	9201      	str	r2, [sp, #4]
 801471c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014720:	9202      	str	r2, [sp, #8]
 8014722:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014726:	f1bb 0f00 	cmp.w	fp, #0
 801472a:	dc03      	bgt.n	8014734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801472c:	9a04      	ldr	r2, [sp, #16]
 801472e:	2a00      	cmp	r2, #0
 8014730:	f340 8142 	ble.w	80149b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014734:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014736:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801473a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801473e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014742:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014744:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014748:	2b00      	cmp	r3, #0
 801474a:	dd0e      	ble.n	801476a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801474c:	140c      	asrs	r4, r1, #16
 801474e:	d405      	bmi.n	801475c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014750:	42bc      	cmp	r4, r7
 8014752:	da03      	bge.n	801475c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014754:	1414      	asrs	r4, r2, #16
 8014756:	d401      	bmi.n	801475c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014758:	42b4      	cmp	r4, r6
 801475a:	db07      	blt.n	801476c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801475c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801475e:	4421      	add	r1, r4
 8014760:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014762:	3b01      	subs	r3, #1
 8014764:	4422      	add	r2, r4
 8014766:	3002      	adds	r0, #2
 8014768:	e7ee      	b.n	8014748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801476a:	d019      	beq.n	80147a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801476c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801476e:	1e5c      	subs	r4, r3, #1
 8014770:	fb05 1504 	mla	r5, r5, r4, r1
 8014774:	142d      	asrs	r5, r5, #16
 8014776:	d409      	bmi.n	801478c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014778:	42bd      	cmp	r5, r7
 801477a:	da07      	bge.n	801478c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801477c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801477e:	fb05 2404 	mla	r4, r5, r4, r2
 8014782:	1424      	asrs	r4, r4, #16
 8014784:	d402      	bmi.n	801478c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014786:	42b4      	cmp	r4, r6
 8014788:	f2c0 80b1 	blt.w	80148ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801478c:	f04f 0800 	mov.w	r8, #0
 8014790:	eb03 0408 	add.w	r4, r3, r8
 8014794:	2c00      	cmp	r4, #0
 8014796:	dc3e      	bgt.n	8014816 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8014798:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801479c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80147a0:	f1bb 0f00 	cmp.w	fp, #0
 80147a4:	f340 8108 	ble.w	80149b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80147a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80147ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80147b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80147b4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80147b6:	f1bb 0b01 	subs.w	fp, fp, #1
 80147ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80147be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80147c2:	eeb0 6a62 	vmov.f32	s12, s5
 80147c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80147ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80147ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80147d2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80147d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80147da:	eeb0 6a43 	vmov.f32	s12, s6
 80147de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80147e2:	ee12 2a90 	vmov	r2, s5
 80147e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80147ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80147ee:	ee13 2a10 	vmov	r2, s6
 80147f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80147f6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80147f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80147fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80147fe:	9a04      	ldr	r2, [sp, #16]
 8014800:	9314      	str	r3, [sp, #80]	@ 0x50
 8014802:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014806:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014808:	eeb0 3a67 	vmov.f32	s6, s15
 801480c:	bf08      	it	eq
 801480e:	4613      	moveq	r3, r2
 8014810:	eef0 2a47 	vmov.f32	s5, s14
 8014814:	e787      	b.n	8014726 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8014816:	140e      	asrs	r6, r1, #16
 8014818:	d462      	bmi.n	80148e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801481a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801481e:	42b5      	cmp	r5, r6
 8014820:	dd5e      	ble.n	80148e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014822:	1417      	asrs	r7, r2, #16
 8014824:	d45c      	bmi.n	80148e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014826:	f8de 400c 	ldr.w	r4, [lr, #12]
 801482a:	42bc      	cmp	r4, r7
 801482c:	dd58      	ble.n	80148e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801482e:	b22d      	sxth	r5, r5
 8014830:	fb07 6505 	mla	r5, r7, r5, r6
 8014834:	9c02      	ldr	r4, [sp, #8]
 8014836:	5d66      	ldrb	r6, [r4, r5]
 8014838:	2e00      	cmp	r6, #0
 801483a:	d051      	beq.n	80148e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801483c:	9c01      	ldr	r4, [sp, #4]
 801483e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8014842:	f06f 0401 	mvn.w	r4, #1
 8014846:	fb04 f408 	mul.w	r4, r4, r8
 801484a:	9403      	str	r4, [sp, #12]
 801484c:	5b05      	ldrh	r5, [r0, r4]
 801484e:	9c05      	ldr	r4, [sp, #20]
 8014850:	4366      	muls	r6, r4
 8014852:	1c74      	adds	r4, r6, #1
 8014854:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014858:	1224      	asrs	r4, r4, #8
 801485a:	b2a7      	uxth	r7, r4
 801485c:	122e      	asrs	r6, r5, #8
 801485e:	43e4      	mvns	r4, r4
 8014860:	b2e4      	uxtb	r4, r4
 8014862:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8014866:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801486a:	fb16 f604 	smulbb	r6, r6, r4
 801486e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014872:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014876:	00ed      	lsls	r5, r5, #3
 8014878:	fb0c 6c07 	mla	ip, ip, r7, r6
 801487c:	b2ed      	uxtb	r5, r5
 801487e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8014882:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014886:	fb15 f504 	smulbb	r5, r5, r4
 801488a:	fa5f f989 	uxtb.w	r9, r9
 801488e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014892:	fb09 5507 	mla	r5, r9, r7, r5
 8014896:	fb1a fa04 	smulbb	sl, sl, r4
 801489a:	fa1f fc8c 	uxth.w	ip, ip
 801489e:	b2ad      	uxth	r5, r5
 80148a0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80148a4:	fb06 a607 	mla	r6, r6, r7, sl
 80148a8:	f10c 0401 	add.w	r4, ip, #1
 80148ac:	f105 0a01 	add.w	sl, r5, #1
 80148b0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80148b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80148b8:	b2b6      	uxth	r6, r6
 80148ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80148be:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80148c2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80148c6:	f106 0a01 	add.w	sl, r6, #1
 80148ca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80148ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80148d2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80148d6:	9c03      	ldr	r4, [sp, #12]
 80148d8:	ea4c 0c0a 	orr.w	ip, ip, sl
 80148dc:	f820 c004 	strh.w	ip, [r0, r4]
 80148e0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80148e2:	4421      	add	r1, r4
 80148e4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80148e6:	f108 38ff 	add.w	r8, r8, #4294967295
 80148ea:	4422      	add	r2, r4
 80148ec:	e750      	b.n	8014790 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80148ee:	f04f 0900 	mov.w	r9, #0
 80148f2:	eba3 0409 	sub.w	r4, r3, r9
 80148f6:	2c00      	cmp	r4, #0
 80148f8:	f77f af4e 	ble.w	8014798 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80148fc:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014900:	140d      	asrs	r5, r1, #16
 8014902:	1414      	asrs	r4, r2, #16
 8014904:	fb06 5404 	mla	r4, r6, r4, r5
 8014908:	9d02      	ldr	r5, [sp, #8]
 801490a:	5d2e      	ldrb	r6, [r5, r4]
 801490c:	2e00      	cmp	r6, #0
 801490e:	d04c      	beq.n	80149aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8014910:	9d01      	ldr	r5, [sp, #4]
 8014912:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8014916:	9c05      	ldr	r4, [sp, #20]
 8014918:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801491c:	4366      	muls	r6, r4
 801491e:	1c74      	adds	r4, r6, #1
 8014920:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014924:	1224      	asrs	r4, r4, #8
 8014926:	b2a7      	uxth	r7, r4
 8014928:	122e      	asrs	r6, r5, #8
 801492a:	43e4      	mvns	r4, r4
 801492c:	b2e4      	uxtb	r4, r4
 801492e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014932:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014936:	fb16 f604 	smulbb	r6, r6, r4
 801493a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801493e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014942:	00ed      	lsls	r5, r5, #3
 8014944:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014948:	b2ed      	uxtb	r5, r5
 801494a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801494e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014952:	fb15 f504 	smulbb	r5, r5, r4
 8014956:	fa5f f888 	uxtb.w	r8, r8
 801495a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801495e:	fb08 5507 	mla	r5, r8, r7, r5
 8014962:	fb1a fa04 	smulbb	sl, sl, r4
 8014966:	fa1f fc8c 	uxth.w	ip, ip
 801496a:	b2ad      	uxth	r5, r5
 801496c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014970:	fb06 a607 	mla	r6, r6, r7, sl
 8014974:	f10c 0401 	add.w	r4, ip, #1
 8014978:	f105 0a01 	add.w	sl, r5, #1
 801497c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014980:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014984:	b2b6      	uxth	r6, r6
 8014986:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801498a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801498e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014992:	f106 0a01 	add.w	sl, r6, #1
 8014996:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801499a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801499e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80149a2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80149a6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80149aa:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80149ac:	4421      	add	r1, r4
 80149ae:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80149b0:	f109 0901 	add.w	r9, r9, #1
 80149b4:	4422      	add	r2, r4
 80149b6:	e79c      	b.n	80148f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80149b8:	b007      	add	sp, #28
 80149ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080149be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80149be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149c2:	b085      	sub	sp, #20
 80149c4:	468b      	mov	fp, r1
 80149c6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80149c8:	9203      	str	r2, [sp, #12]
 80149ca:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 80149ce:	6861      	ldr	r1, [r4, #4]
 80149d0:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80149d4:	fb01 2000 	mla	r0, r1, r0, r2
 80149d8:	6822      	ldr	r2, [r4, #0]
 80149da:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80149de:	f8d8 2000 	ldr.w	r2, [r8]
 80149e2:	9200      	str	r2, [sp, #0]
 80149e4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80149e8:	9201      	str	r2, [sp, #4]
 80149ea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80149ee:	f1bb 0f00 	cmp.w	fp, #0
 80149f2:	dc03      	bgt.n	80149fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80149f4:	9a03      	ldr	r2, [sp, #12]
 80149f6:	2a00      	cmp	r2, #0
 80149f8:	f340 8146 	ble.w	8014c88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80149fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80149fe:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014a02:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014a06:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014a0a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014a0c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014a10:	2b00      	cmp	r3, #0
 8014a12:	dd0e      	ble.n	8014a32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014a14:	140c      	asrs	r4, r1, #16
 8014a16:	d405      	bmi.n	8014a24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a18:	42bc      	cmp	r4, r7
 8014a1a:	da03      	bge.n	8014a24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a1c:	1414      	asrs	r4, r2, #16
 8014a1e:	d401      	bmi.n	8014a24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a20:	42b4      	cmp	r4, r6
 8014a22:	db07      	blt.n	8014a34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014a24:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014a26:	4421      	add	r1, r4
 8014a28:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014a2a:	3b01      	subs	r3, #1
 8014a2c:	4422      	add	r2, r4
 8014a2e:	3002      	adds	r0, #2
 8014a30:	e7ee      	b.n	8014a10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014a32:	d017      	beq.n	8014a64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014a34:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014a36:	1e5c      	subs	r4, r3, #1
 8014a38:	fb05 1504 	mla	r5, r5, r4, r1
 8014a3c:	142d      	asrs	r5, r5, #16
 8014a3e:	d409      	bmi.n	8014a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014a40:	42bd      	cmp	r5, r7
 8014a42:	da07      	bge.n	8014a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014a44:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014a46:	fb05 2404 	mla	r4, r5, r4, r2
 8014a4a:	1424      	asrs	r4, r4, #16
 8014a4c:	d402      	bmi.n	8014a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014a4e:	42b4      	cmp	r4, r6
 8014a50:	f2c0 80b3 	blt.w	8014bba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8014a54:	2600      	movs	r6, #0
 8014a56:	199c      	adds	r4, r3, r6
 8014a58:	2c00      	cmp	r4, #0
 8014a5a:	dc3e      	bgt.n	8014ada <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014a5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014a60:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014a64:	f1bb 0f00 	cmp.w	fp, #0
 8014a68:	f340 810e 	ble.w	8014c88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014a6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a74:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014a78:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a7a:	f1bb 0b01 	subs.w	fp, fp, #1
 8014a7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a86:	eeb0 6a62 	vmov.f32	s12, s5
 8014a8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a96:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014a9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a9e:	eeb0 6a43 	vmov.f32	s12, s6
 8014aa2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014aa6:	ee12 2a90 	vmov	r2, s5
 8014aaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014aae:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ab2:	ee13 2a10 	vmov	r2, s6
 8014ab6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014aba:	9311      	str	r3, [sp, #68]	@ 0x44
 8014abc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014abe:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ac2:	9a03      	ldr	r2, [sp, #12]
 8014ac4:	9312      	str	r3, [sp, #72]	@ 0x48
 8014ac6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014aca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014acc:	eeb0 3a67 	vmov.f32	s6, s15
 8014ad0:	bf08      	it	eq
 8014ad2:	4613      	moveq	r3, r2
 8014ad4:	eef0 2a47 	vmov.f32	s5, s14
 8014ad8:	e789      	b.n	80149ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014ada:	140f      	asrs	r7, r1, #16
 8014adc:	d418      	bmi.n	8014b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014ade:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014ae2:	42bd      	cmp	r5, r7
 8014ae4:	dd14      	ble.n	8014b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014ae6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014aea:	d411      	bmi.n	8014b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014aec:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014af0:	4564      	cmp	r4, ip
 8014af2:	dd0d      	ble.n	8014b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014af4:	b22d      	sxth	r5, r5
 8014af6:	fb0c 7505 	mla	r5, ip, r5, r7
 8014afa:	9c01      	ldr	r4, [sp, #4]
 8014afc:	5d64      	ldrb	r4, [r4, r5]
 8014afe:	2cff      	cmp	r4, #255	@ 0xff
 8014b00:	d10c      	bne.n	8014b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014b02:	9c00      	ldr	r4, [sp, #0]
 8014b04:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8014b08:	f06f 0401 	mvn.w	r4, #1
 8014b0c:	4374      	muls	r4, r6
 8014b0e:	5305      	strh	r5, [r0, r4]
 8014b10:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014b12:	4421      	add	r1, r4
 8014b14:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014b16:	3e01      	subs	r6, #1
 8014b18:	4422      	add	r2, r4
 8014b1a:	e79c      	b.n	8014a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014b1c:	2c00      	cmp	r4, #0
 8014b1e:	d0f7      	beq.n	8014b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014b20:	9f00      	ldr	r7, [sp, #0]
 8014b22:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8014b26:	f06f 0501 	mvn.w	r5, #1
 8014b2a:	4375      	muls	r5, r6
 8014b2c:	9502      	str	r5, [sp, #8]
 8014b2e:	5b45      	ldrh	r5, [r0, r5]
 8014b30:	fa1f fc84 	uxth.w	ip, r4
 8014b34:	122f      	asrs	r7, r5, #8
 8014b36:	43e4      	mvns	r4, r4
 8014b38:	b2e4      	uxtb	r4, r4
 8014b3a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8014b3e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014b42:	fb17 f704 	smulbb	r7, r7, r4
 8014b46:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014b4a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014b4e:	00ed      	lsls	r5, r5, #3
 8014b50:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8014b54:	b2ed      	uxtb	r5, r5
 8014b56:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014b5a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014b5e:	fb15 f504 	smulbb	r5, r5, r4
 8014b62:	fa5f f989 	uxtb.w	r9, r9
 8014b66:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014b6a:	fb09 550c 	mla	r5, r9, ip, r5
 8014b6e:	fb1a fa04 	smulbb	sl, sl, r4
 8014b72:	fa1f fe8e 	uxth.w	lr, lr
 8014b76:	b2ad      	uxth	r5, r5
 8014b78:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014b7c:	fb07 a70c 	mla	r7, r7, ip, sl
 8014b80:	f10e 0401 	add.w	r4, lr, #1
 8014b84:	f105 0a01 	add.w	sl, r5, #1
 8014b88:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8014b8c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014b90:	b2bf      	uxth	r7, r7
 8014b92:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014b96:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014b9a:	ea4a 0e0e 	orr.w	lr, sl, lr
 8014b9e:	f107 0a01 	add.w	sl, r7, #1
 8014ba2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014ba6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014baa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014bae:	9c02      	ldr	r4, [sp, #8]
 8014bb0:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014bb4:	f820 e004 	strh.w	lr, [r0, r4]
 8014bb8:	e7aa      	b.n	8014b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014bba:	f04f 0900 	mov.w	r9, #0
 8014bbe:	eba3 0409 	sub.w	r4, r3, r9
 8014bc2:	2c00      	cmp	r4, #0
 8014bc4:	f77f af4a 	ble.w	8014a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014bc8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014bcc:	1414      	asrs	r4, r2, #16
 8014bce:	140d      	asrs	r5, r1, #16
 8014bd0:	fb06 5504 	mla	r5, r6, r4, r5
 8014bd4:	9c01      	ldr	r4, [sp, #4]
 8014bd6:	5d64      	ldrb	r4, [r4, r5]
 8014bd8:	2cff      	cmp	r4, #255	@ 0xff
 8014bda:	d10b      	bne.n	8014bf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014bdc:	9c00      	ldr	r4, [sp, #0]
 8014bde:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8014be2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8014be6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014be8:	4421      	add	r1, r4
 8014bea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014bec:	f109 0901 	add.w	r9, r9, #1
 8014bf0:	4422      	add	r2, r4
 8014bf2:	e7e4      	b.n	8014bbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8014bf4:	2c00      	cmp	r4, #0
 8014bf6:	d0f6      	beq.n	8014be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014bf8:	9e00      	ldr	r6, [sp, #0]
 8014bfa:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8014bfe:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014c02:	b2a7      	uxth	r7, r4
 8014c04:	122e      	asrs	r6, r5, #8
 8014c06:	43e4      	mvns	r4, r4
 8014c08:	b2e4      	uxtb	r4, r4
 8014c0a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014c0e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014c12:	fb16 f604 	smulbb	r6, r6, r4
 8014c16:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014c1a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014c1e:	00ed      	lsls	r5, r5, #3
 8014c20:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014c24:	b2ed      	uxtb	r5, r5
 8014c26:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014c2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014c2e:	fb15 f504 	smulbb	r5, r5, r4
 8014c32:	fa5f fe8e 	uxtb.w	lr, lr
 8014c36:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014c3a:	fb0e 5507 	mla	r5, lr, r7, r5
 8014c3e:	fb1a fa04 	smulbb	sl, sl, r4
 8014c42:	fa1f fc8c 	uxth.w	ip, ip
 8014c46:	b2ad      	uxth	r5, r5
 8014c48:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014c4c:	fb06 a607 	mla	r6, r6, r7, sl
 8014c50:	f10c 0401 	add.w	r4, ip, #1
 8014c54:	f105 0a01 	add.w	sl, r5, #1
 8014c58:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014c5c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014c60:	b2b6      	uxth	r6, r6
 8014c62:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014c66:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014c6a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014c6e:	f106 0a01 	add.w	sl, r6, #1
 8014c72:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014c76:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014c7a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014c7e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014c82:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014c86:	e7ae      	b.n	8014be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014c88:	b005      	add	sp, #20
 8014c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c8e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c92:	b085      	sub	sp, #20
 8014c94:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014c96:	9203      	str	r2, [sp, #12]
 8014c98:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8014c9c:	9201      	str	r2, [sp, #4]
 8014c9e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014ca2:	9100      	str	r1, [sp, #0]
 8014ca4:	6841      	ldr	r1, [r0, #4]
 8014ca6:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014caa:	fb01 2404 	mla	r4, r1, r4, r2
 8014cae:	6802      	ldr	r2, [r0, #0]
 8014cb0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014cb4:	f8de 2000 	ldr.w	r2, [lr]
 8014cb8:	9202      	str	r2, [sp, #8]
 8014cba:	9a01      	ldr	r2, [sp, #4]
 8014cbc:	43d6      	mvns	r6, r2
 8014cbe:	b2f6      	uxtb	r6, r6
 8014cc0:	9a00      	ldr	r2, [sp, #0]
 8014cc2:	2a00      	cmp	r2, #0
 8014cc4:	dc03      	bgt.n	8014cce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014cc6:	9a03      	ldr	r2, [sp, #12]
 8014cc8:	2a00      	cmp	r2, #0
 8014cca:	f340 8124 	ble.w	8014f16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014cce:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014cd0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014cd4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014cd8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014cdc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014cde:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014ce2:	2b00      	cmp	r3, #0
 8014ce4:	dd0e      	ble.n	8014d04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014ce6:	1408      	asrs	r0, r1, #16
 8014ce8:	d405      	bmi.n	8014cf6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014cea:	4560      	cmp	r0, ip
 8014cec:	da03      	bge.n	8014cf6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014cee:	1410      	asrs	r0, r2, #16
 8014cf0:	d401      	bmi.n	8014cf6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014cf2:	42b8      	cmp	r0, r7
 8014cf4:	db07      	blt.n	8014d06 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014cf6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014cf8:	4401      	add	r1, r0
 8014cfa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014cfc:	3b01      	subs	r3, #1
 8014cfe:	4402      	add	r2, r0
 8014d00:	3402      	adds	r4, #2
 8014d02:	e7ee      	b.n	8014ce2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014d04:	d06e      	beq.n	8014de4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014d06:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014d08:	1e58      	subs	r0, r3, #1
 8014d0a:	fb05 1500 	mla	r5, r5, r0, r1
 8014d0e:	142d      	asrs	r5, r5, #16
 8014d10:	d45c      	bmi.n	8014dcc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014d12:	4565      	cmp	r5, ip
 8014d14:	da5a      	bge.n	8014dcc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014d16:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014d18:	fb05 2000 	mla	r0, r5, r0, r2
 8014d1c:	1400      	asrs	r0, r0, #16
 8014d1e:	d455      	bmi.n	8014dcc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014d20:	42b8      	cmp	r0, r7
 8014d22:	da53      	bge.n	8014dcc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014d24:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8014d28:	4699      	mov	r9, r3
 8014d2a:	46a2      	mov	sl, r4
 8014d2c:	f1b9 0f00 	cmp.w	r9, #0
 8014d30:	dd54      	ble.n	8014ddc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014d32:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014d36:	140d      	asrs	r5, r1, #16
 8014d38:	1410      	asrs	r0, r2, #16
 8014d3a:	fb07 5000 	mla	r0, r7, r0, r5
 8014d3e:	9d02      	ldr	r5, [sp, #8]
 8014d40:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014d44:	f8ba 5000 	ldrh.w	r5, [sl]
 8014d48:	122f      	asrs	r7, r5, #8
 8014d4a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014d4e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014d52:	fb17 f706 	smulbb	r7, r7, r6
 8014d56:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014d5a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014d5e:	00ed      	lsls	r5, r5, #3
 8014d60:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014d64:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014d68:	10c7      	asrs	r7, r0, #3
 8014d6a:	b2ed      	uxtb	r5, r5
 8014d6c:	00c0      	lsls	r0, r0, #3
 8014d6e:	fb18 f806 	smulbb	r8, r8, r6
 8014d72:	fb15 f506 	smulbb	r5, r5, r6
 8014d76:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014d7a:	b2c0      	uxtb	r0, r0
 8014d7c:	fa1f fc8c 	uxth.w	ip, ip
 8014d80:	fb07 870b 	mla	r7, r7, fp, r8
 8014d84:	fb00 500b 	mla	r0, r0, fp, r5
 8014d88:	b280      	uxth	r0, r0
 8014d8a:	b2bf      	uxth	r7, r7
 8014d8c:	f10c 0501 	add.w	r5, ip, #1
 8014d90:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014d94:	f107 0801 	add.w	r8, r7, #1
 8014d98:	1c45      	adds	r5, r0, #1
 8014d9a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014d9e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014da2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014da4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014da8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014dac:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014db0:	ea45 0c0c 	orr.w	ip, r5, ip
 8014db4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014db8:	4401      	add	r1, r0
 8014dba:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014dbc:	ea4c 0c08 	orr.w	ip, ip, r8
 8014dc0:	f82a cb02 	strh.w	ip, [sl], #2
 8014dc4:	4402      	add	r2, r0
 8014dc6:	f109 39ff 	add.w	r9, r9, #4294967295
 8014dca:	e7af      	b.n	8014d2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014dcc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014dd0:	f04f 0800 	mov.w	r8, #0
 8014dd4:	eb03 0008 	add.w	r0, r3, r8
 8014dd8:	2800      	cmp	r0, #0
 8014dda:	dc41      	bgt.n	8014e60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014ddc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014de0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014de4:	9b00      	ldr	r3, [sp, #0]
 8014de6:	2b00      	cmp	r3, #0
 8014de8:	f340 8095 	ble.w	8014f16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014dec:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014df0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014df4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014df8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014dfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014dfe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014e02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014e06:	eef0 6a62 	vmov.f32	s13, s5
 8014e0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014e0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014e16:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8014e1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014e1e:	eef0 6a43 	vmov.f32	s13, s6
 8014e22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014e26:	ee12 2a90 	vmov	r2, s5
 8014e2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014e2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e32:	ee13 2a10 	vmov	r2, s6
 8014e36:	9311      	str	r3, [sp, #68]	@ 0x44
 8014e38:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014e3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e3e:	9312      	str	r3, [sp, #72]	@ 0x48
 8014e40:	9b00      	ldr	r3, [sp, #0]
 8014e42:	9a03      	ldr	r2, [sp, #12]
 8014e44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e48:	3b01      	subs	r3, #1
 8014e4a:	9300      	str	r3, [sp, #0]
 8014e4c:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014e50:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014e52:	eeb0 3a67 	vmov.f32	s6, s15
 8014e56:	bf08      	it	eq
 8014e58:	4613      	moveq	r3, r2
 8014e5a:	eef0 2a47 	vmov.f32	s5, s14
 8014e5e:	e72f      	b.n	8014cc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014e60:	140f      	asrs	r7, r1, #16
 8014e62:	d451      	bmi.n	8014f08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e64:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014e68:	42bd      	cmp	r5, r7
 8014e6a:	dd4d      	ble.n	8014f08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e6c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014e70:	d44a      	bmi.n	8014f08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e72:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014e76:	4560      	cmp	r0, ip
 8014e78:	dd46      	ble.n	8014f08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e7a:	b22d      	sxth	r5, r5
 8014e7c:	fb0c 7505 	mla	r5, ip, r5, r7
 8014e80:	9802      	ldr	r0, [sp, #8]
 8014e82:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014e86:	f06f 0501 	mvn.w	r5, #1
 8014e8a:	fb05 fb08 	mul.w	fp, r5, r8
 8014e8e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014e92:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014e96:	122f      	asrs	r7, r5, #8
 8014e98:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014e9c:	fb17 f706 	smulbb	r7, r7, r6
 8014ea0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014ea4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014ea8:	00ed      	lsls	r5, r5, #3
 8014eaa:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014eae:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014eb2:	10c7      	asrs	r7, r0, #3
 8014eb4:	b2ed      	uxtb	r5, r5
 8014eb6:	00c0      	lsls	r0, r0, #3
 8014eb8:	fb19 f906 	smulbb	r9, r9, r6
 8014ebc:	fb15 f506 	smulbb	r5, r5, r6
 8014ec0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014ec4:	b2c0      	uxtb	r0, r0
 8014ec6:	fa1f fc8c 	uxth.w	ip, ip
 8014eca:	fb07 970a 	mla	r7, r7, sl, r9
 8014ece:	fb00 500a 	mla	r0, r0, sl, r5
 8014ed2:	b2bf      	uxth	r7, r7
 8014ed4:	b280      	uxth	r0, r0
 8014ed6:	f10c 0501 	add.w	r5, ip, #1
 8014eda:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ede:	f107 0901 	add.w	r9, r7, #1
 8014ee2:	1c45      	adds	r5, r0, #1
 8014ee4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014ee8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014eec:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014ef0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014ef4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014ef8:	ea45 0c0c 	orr.w	ip, r5, ip
 8014efc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014f00:	ea4c 0c09 	orr.w	ip, ip, r9
 8014f04:	f824 c00b 	strh.w	ip, [r4, fp]
 8014f08:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014f0a:	4401      	add	r1, r0
 8014f0c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014f0e:	f108 38ff 	add.w	r8, r8, #4294967295
 8014f12:	4402      	add	r2, r0
 8014f14:	e75e      	b.n	8014dd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8014f16:	b005      	add	sp, #20
 8014f18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014f1c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f20:	b085      	sub	sp, #20
 8014f22:	4693      	mov	fp, r2
 8014f24:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014f26:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014f28:	6870      	ldr	r0, [r6, #4]
 8014f2a:	9101      	str	r1, [sp, #4]
 8014f2c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014f30:	fb00 2404 	mla	r4, r0, r4, r2
 8014f34:	6832      	ldr	r2, [r6, #0]
 8014f36:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8014f3a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014f3e:	682a      	ldr	r2, [r5, #0]
 8014f40:	9202      	str	r2, [sp, #8]
 8014f42:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014f46:	9a01      	ldr	r2, [sp, #4]
 8014f48:	2a00      	cmp	r2, #0
 8014f4a:	dc03      	bgt.n	8014f54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014f4c:	f1bb 0f00 	cmp.w	fp, #0
 8014f50:	f340 809a 	ble.w	8015088 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014f54:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014f56:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014f5a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014f5e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014f62:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014f64:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014f68:	2b00      	cmp	r3, #0
 8014f6a:	dd0c      	ble.n	8014f86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014f6c:	1406      	asrs	r6, r0, #16
 8014f6e:	d405      	bmi.n	8014f7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f70:	454e      	cmp	r6, r9
 8014f72:	da03      	bge.n	8014f7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f74:	1416      	asrs	r6, r2, #16
 8014f76:	d401      	bmi.n	8014f7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f78:	4546      	cmp	r6, r8
 8014f7a:	db05      	blt.n	8014f88 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014f7c:	4470      	add	r0, lr
 8014f7e:	4462      	add	r2, ip
 8014f80:	3b01      	subs	r3, #1
 8014f82:	3402      	adds	r4, #2
 8014f84:	e7f0      	b.n	8014f68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014f86:	d00f      	beq.n	8014fa8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014f88:	1e5e      	subs	r6, r3, #1
 8014f8a:	fb0e 0706 	mla	r7, lr, r6, r0
 8014f8e:	143f      	asrs	r7, r7, #16
 8014f90:	d541      	bpl.n	8015016 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014f92:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014f96:	4698      	mov	r8, r3
 8014f98:	9603      	str	r6, [sp, #12]
 8014f9a:	f1b8 0f00 	cmp.w	r8, #0
 8014f9e:	dc56      	bgt.n	801504e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014fa0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014fa4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014fa8:	9b01      	ldr	r3, [sp, #4]
 8014faa:	2b00      	cmp	r3, #0
 8014fac:	dd6c      	ble.n	8015088 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014fae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014fb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014fb6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014fba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014fbc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014fc0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014fc4:	eeb0 6a62 	vmov.f32	s12, s5
 8014fc8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014fcc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014fd0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014fd4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014fd8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014fdc:	eeb0 6a43 	vmov.f32	s12, s6
 8014fe0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014fe4:	ee12 2a90 	vmov	r2, s5
 8014fe8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014fec:	fb92 fef3 	sdiv	lr, r2, r3
 8014ff0:	ee13 2a10 	vmov	r2, s6
 8014ff4:	fb92 fcf3 	sdiv	ip, r2, r3
 8014ff8:	9b01      	ldr	r3, [sp, #4]
 8014ffa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ffe:	3b01      	subs	r3, #1
 8015000:	9301      	str	r3, [sp, #4]
 8015002:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015006:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015008:	eeb0 3a67 	vmov.f32	s6, s15
 801500c:	bf08      	it	eq
 801500e:	465b      	moveq	r3, fp
 8015010:	eef0 2a47 	vmov.f32	s5, s14
 8015014:	e797      	b.n	8014f46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015016:	454f      	cmp	r7, r9
 8015018:	dabb      	bge.n	8014f92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801501a:	fb0c 2606 	mla	r6, ip, r6, r2
 801501e:	1436      	asrs	r6, r6, #16
 8015020:	d4b7      	bmi.n	8014f92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015022:	4546      	cmp	r6, r8
 8015024:	dab5      	bge.n	8014f92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015026:	461e      	mov	r6, r3
 8015028:	46a0      	mov	r8, r4
 801502a:	2e00      	cmp	r6, #0
 801502c:	ddb8      	ble.n	8014fa0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801502e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015032:	9902      	ldr	r1, [sp, #8]
 8015034:	1417      	asrs	r7, r2, #16
 8015036:	ea4f 4920 	mov.w	r9, r0, asr #16
 801503a:	fb0a 9707 	mla	r7, sl, r7, r9
 801503e:	4470      	add	r0, lr
 8015040:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015044:	f828 7b02 	strh.w	r7, [r8], #2
 8015048:	4462      	add	r2, ip
 801504a:	3e01      	subs	r6, #1
 801504c:	e7ed      	b.n	801502a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801504e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015052:	d414      	bmi.n	801507e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015054:	68ae      	ldr	r6, [r5, #8]
 8015056:	454e      	cmp	r6, r9
 8015058:	dd11      	ble.n	801507e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801505a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801505e:	d40e      	bmi.n	801507e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015060:	68ef      	ldr	r7, [r5, #12]
 8015062:	4557      	cmp	r7, sl
 8015064:	dd0b      	ble.n	801507e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015066:	b236      	sxth	r6, r6
 8015068:	fb0a 9606 	mla	r6, sl, r6, r9
 801506c:	9f02      	ldr	r7, [sp, #8]
 801506e:	f06f 0101 	mvn.w	r1, #1
 8015072:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015076:	fb01 f608 	mul.w	r6, r1, r8
 801507a:	9903      	ldr	r1, [sp, #12]
 801507c:	538f      	strh	r7, [r1, r6]
 801507e:	4470      	add	r0, lr
 8015080:	4462      	add	r2, ip
 8015082:	f108 38ff 	add.w	r8, r8, #4294967295
 8015086:	e788      	b.n	8014f9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015088:	b005      	add	sp, #20
 801508a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801508e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801508e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015092:	b087      	sub	sp, #28
 8015094:	468b      	mov	fp, r1
 8015096:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015098:	9203      	str	r2, [sp, #12]
 801509a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801509e:	9204      	str	r2, [sp, #16]
 80150a0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 80150a4:	6841      	ldr	r1, [r0, #4]
 80150a6:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80150aa:	fb01 2505 	mla	r5, r1, r5, r2
 80150ae:	6802      	ldr	r2, [r0, #0]
 80150b0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80150b4:	f8d9 2000 	ldr.w	r2, [r9]
 80150b8:	9201      	str	r2, [sp, #4]
 80150ba:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80150be:	f1bb 0f00 	cmp.w	fp, #0
 80150c2:	dc03      	bgt.n	80150cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80150c4:	9a03      	ldr	r2, [sp, #12]
 80150c6:	2a00      	cmp	r2, #0
 80150c8:	f340 8159 	ble.w	801537e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80150cc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80150ce:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80150d2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80150d6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80150da:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80150dc:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80150e0:	2b00      	cmp	r3, #0
 80150e2:	dd0e      	ble.n	8015102 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80150e4:	1402      	asrs	r2, r0, #16
 80150e6:	d405      	bmi.n	80150f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80150e8:	42ba      	cmp	r2, r7
 80150ea:	da03      	bge.n	80150f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80150ec:	140a      	asrs	r2, r1, #16
 80150ee:	d401      	bmi.n	80150f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80150f0:	42b2      	cmp	r2, r6
 80150f2:	db07      	blt.n	8015104 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80150f4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80150f6:	4410      	add	r0, r2
 80150f8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80150fa:	3b01      	subs	r3, #1
 80150fc:	4411      	add	r1, r2
 80150fe:	3502      	adds	r5, #2
 8015100:	e7ee      	b.n	80150e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015102:	d017      	beq.n	8015134 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015104:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015106:	1e5a      	subs	r2, r3, #1
 8015108:	fb04 0402 	mla	r4, r4, r2, r0
 801510c:	1424      	asrs	r4, r4, #16
 801510e:	d409      	bmi.n	8015124 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015110:	42bc      	cmp	r4, r7
 8015112:	da07      	bge.n	8015124 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015114:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015116:	fb04 1202 	mla	r2, r4, r2, r1
 801511a:	1412      	asrs	r2, r2, #16
 801511c:	d402      	bmi.n	8015124 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801511e:	42b2      	cmp	r2, r6
 8015120:	f2c0 80bf 	blt.w	80152a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015124:	2700      	movs	r7, #0
 8015126:	19da      	adds	r2, r3, r7
 8015128:	2a00      	cmp	r2, #0
 801512a:	dc3e      	bgt.n	80151aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801512c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015130:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015134:	f1bb 0f00 	cmp.w	fp, #0
 8015138:	f340 8121 	ble.w	801537e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801513c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015140:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015144:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015148:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801514a:	f1bb 0b01 	subs.w	fp, fp, #1
 801514e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015152:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015156:	eeb0 6a62 	vmov.f32	s12, s5
 801515a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801515e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015162:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015166:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801516a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801516e:	eeb0 6a43 	vmov.f32	s12, s6
 8015172:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015176:	ee12 2a90 	vmov	r2, s5
 801517a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801517e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015182:	ee13 2a10 	vmov	r2, s6
 8015186:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801518a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801518c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801518e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015192:	9a03      	ldr	r2, [sp, #12]
 8015194:	9314      	str	r3, [sp, #80]	@ 0x50
 8015196:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801519a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801519c:	eeb0 3a67 	vmov.f32	s6, s15
 80151a0:	bf08      	it	eq
 80151a2:	4613      	moveq	r3, r2
 80151a4:	eef0 2a47 	vmov.f32	s5, s14
 80151a8:	e789      	b.n	80150be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80151aa:	1406      	asrs	r6, r0, #16
 80151ac:	d42d      	bmi.n	801520a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80151ae:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80151b2:	42b4      	cmp	r4, r6
 80151b4:	dd29      	ble.n	801520a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80151b6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80151ba:	d426      	bmi.n	801520a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80151bc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80151c0:	4562      	cmp	r2, ip
 80151c2:	dd22      	ble.n	801520a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80151c4:	b224      	sxth	r4, r4
 80151c6:	9a01      	ldr	r2, [sp, #4]
 80151c8:	fb0c 6404 	mla	r4, ip, r4, r6
 80151cc:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80151d0:	0e22      	lsrs	r2, r4, #24
 80151d2:	d01a      	beq.n	801520a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80151d4:	9e04      	ldr	r6, [sp, #16]
 80151d6:	4372      	muls	r2, r6
 80151d8:	1c56      	adds	r6, r2, #1
 80151da:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80151de:	1212      	asrs	r2, r2, #8
 80151e0:	0a26      	lsrs	r6, r4, #8
 80151e2:	2aff      	cmp	r2, #255	@ 0xff
 80151e4:	9605      	str	r6, [sp, #20]
 80151e6:	d116      	bne.n	8015216 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80151e8:	f06f 0201 	mvn.w	r2, #1
 80151ec:	fb02 fc07 	mul.w	ip, r2, r7
 80151f0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80151f4:	0962      	lsrs	r2, r4, #5
 80151f6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80151fa:	f026 0607 	bic.w	r6, r6, #7
 80151fe:	4316      	orrs	r6, r2
 8015200:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015204:	4326      	orrs	r6, r4
 8015206:	f825 600c 	strh.w	r6, [r5, ip]
 801520a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801520c:	4410      	add	r0, r2
 801520e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015210:	3f01      	subs	r7, #1
 8015212:	4411      	add	r1, r2
 8015214:	e787      	b.n	8015126 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015216:	f06f 0601 	mvn.w	r6, #1
 801521a:	437e      	muls	r6, r7
 801521c:	fa1f fa82 	uxth.w	sl, r2
 8015220:	f835 8006 	ldrh.w	r8, [r5, r6]
 8015224:	9602      	str	r6, [sp, #8]
 8015226:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801522a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801522e:	43d2      	mvns	r2, r2
 8015230:	b2d2      	uxtb	r2, r2
 8015232:	fb1c fc0a 	smulbb	ip, ip, sl
 8015236:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801523a:	fb0e ce02 	mla	lr, lr, r2, ip
 801523e:	b2e4      	uxtb	r4, r4
 8015240:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015244:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015248:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801524c:	fa5f f888 	uxtb.w	r8, r8
 8015250:	fb14 f40a 	smulbb	r4, r4, sl
 8015254:	fb08 4402 	mla	r4, r8, r2, r4
 8015258:	fa1f fe8e 	uxth.w	lr, lr
 801525c:	fb16 f60a 	smulbb	r6, r6, sl
 8015260:	b2a4      	uxth	r4, r4
 8015262:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015266:	fb0c 6c02 	mla	ip, ip, r2, r6
 801526a:	f10e 0201 	add.w	r2, lr, #1
 801526e:	1c66      	adds	r6, r4, #1
 8015270:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015274:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015278:	fa1f fc8c 	uxth.w	ip, ip
 801527c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015280:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015284:	ea46 0e0e 	orr.w	lr, r6, lr
 8015288:	f10c 0601 	add.w	r6, ip, #1
 801528c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015290:	0976      	lsrs	r6, r6, #5
 8015292:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015296:	9a02      	ldr	r2, [sp, #8]
 8015298:	ea4e 0e06 	orr.w	lr, lr, r6
 801529c:	f825 e002 	strh.w	lr, [r5, r2]
 80152a0:	e7b3      	b.n	801520a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80152a2:	f04f 0800 	mov.w	r8, #0
 80152a6:	eba3 0208 	sub.w	r2, r3, r8
 80152aa:	2a00      	cmp	r2, #0
 80152ac:	f77f af3e 	ble.w	801512c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152b0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80152b4:	1404      	asrs	r4, r0, #16
 80152b6:	140a      	asrs	r2, r1, #16
 80152b8:	fb06 4202 	mla	r2, r6, r2, r4
 80152bc:	9c01      	ldr	r4, [sp, #4]
 80152be:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80152c2:	0e22      	lsrs	r2, r4, #24
 80152c4:	d016      	beq.n	80152f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80152c6:	9e04      	ldr	r6, [sp, #16]
 80152c8:	4372      	muls	r2, r6
 80152ca:	1c56      	adds	r6, r2, #1
 80152cc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80152d0:	1212      	asrs	r2, r2, #8
 80152d2:	2aff      	cmp	r2, #255	@ 0xff
 80152d4:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80152d8:	d113      	bne.n	8015302 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80152da:	0962      	lsrs	r2, r4, #5
 80152dc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80152e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80152e4:	f026 0607 	bic.w	r6, r6, #7
 80152e8:	4316      	orrs	r6, r2
 80152ea:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80152ee:	4326      	orrs	r6, r4
 80152f0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80152f4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80152f6:	4410      	add	r0, r2
 80152f8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80152fa:	f108 0801 	add.w	r8, r8, #1
 80152fe:	4411      	add	r1, r2
 8015300:	e7d1      	b.n	80152a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8015302:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8015306:	fa1f fa82 	uxth.w	sl, r2
 801530a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801530e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8015312:	43d2      	mvns	r2, r2
 8015314:	b2d2      	uxtb	r2, r2
 8015316:	fb17 f70a 	smulbb	r7, r7, sl
 801531a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801531e:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015322:	b2e4      	uxtb	r4, r4
 8015324:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015328:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801532c:	fa5f fe8e 	uxtb.w	lr, lr
 8015330:	fb14 f40a 	smulbb	r4, r4, sl
 8015334:	fb0e 4402 	mla	r4, lr, r2, r4
 8015338:	b2f6      	uxtb	r6, r6
 801533a:	fa1f fc8c 	uxth.w	ip, ip
 801533e:	fb16 f60a 	smulbb	r6, r6, sl
 8015342:	b2a4      	uxth	r4, r4
 8015344:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015348:	fb07 6702 	mla	r7, r7, r2, r6
 801534c:	f10c 0201 	add.w	r2, ip, #1
 8015350:	1c66      	adds	r6, r4, #1
 8015352:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015356:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801535a:	b2bf      	uxth	r7, r7
 801535c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015360:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015364:	ea46 0c0c 	orr.w	ip, r6, ip
 8015368:	1c7e      	adds	r6, r7, #1
 801536a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801536e:	0976      	lsrs	r6, r6, #5
 8015370:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015374:	ea4c 0c06 	orr.w	ip, ip, r6
 8015378:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801537c:	e7ba      	b.n	80152f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801537e:	b007      	add	sp, #28
 8015380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015384 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015388:	b085      	sub	sp, #20
 801538a:	468b      	mov	fp, r1
 801538c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801538e:	9203      	str	r2, [sp, #12]
 8015390:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015394:	6841      	ldr	r1, [r0, #4]
 8015396:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801539a:	fb01 2404 	mla	r4, r1, r4, r2
 801539e:	6802      	ldr	r2, [r0, #0]
 80153a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80153a4:	f8d8 2000 	ldr.w	r2, [r8]
 80153a8:	9201      	str	r2, [sp, #4]
 80153aa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80153ae:	f1bb 0f00 	cmp.w	fp, #0
 80153b2:	dc03      	bgt.n	80153bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80153b4:	9a03      	ldr	r2, [sp, #12]
 80153b6:	2a00      	cmp	r2, #0
 80153b8:	f340 814f 	ble.w	801565a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80153bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80153be:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80153c2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80153c6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80153ca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80153cc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80153d0:	2b00      	cmp	r3, #0
 80153d2:	dd0e      	ble.n	80153f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80153d4:	1408      	asrs	r0, r1, #16
 80153d6:	d405      	bmi.n	80153e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80153d8:	42b8      	cmp	r0, r7
 80153da:	da03      	bge.n	80153e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80153dc:	1410      	asrs	r0, r2, #16
 80153de:	d401      	bmi.n	80153e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80153e0:	42b0      	cmp	r0, r6
 80153e2:	db07      	blt.n	80153f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80153e4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80153e6:	4401      	add	r1, r0
 80153e8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80153ea:	3b01      	subs	r3, #1
 80153ec:	4402      	add	r2, r0
 80153ee:	3402      	adds	r4, #2
 80153f0:	e7ee      	b.n	80153d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80153f2:	d017      	beq.n	8015424 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80153f4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80153f6:	1e58      	subs	r0, r3, #1
 80153f8:	fb05 1500 	mla	r5, r5, r0, r1
 80153fc:	142d      	asrs	r5, r5, #16
 80153fe:	d409      	bmi.n	8015414 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015400:	42bd      	cmp	r5, r7
 8015402:	da07      	bge.n	8015414 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015404:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015406:	fb05 2000 	mla	r0, r5, r0, r2
 801540a:	1400      	asrs	r0, r0, #16
 801540c:	d402      	bmi.n	8015414 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801540e:	42b0      	cmp	r0, r6
 8015410:	f2c0 80ba 	blt.w	8015588 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015414:	2600      	movs	r6, #0
 8015416:	1998      	adds	r0, r3, r6
 8015418:	2800      	cmp	r0, #0
 801541a:	dc3e      	bgt.n	801549a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801541c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015420:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015424:	f1bb 0f00 	cmp.w	fp, #0
 8015428:	f340 8117 	ble.w	801565a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801542c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015430:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015434:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015438:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801543a:	f1bb 0b01 	subs.w	fp, fp, #1
 801543e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015442:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015446:	eeb0 6a62 	vmov.f32	s12, s5
 801544a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801544e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015452:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015456:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801545a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801545e:	eeb0 6a43 	vmov.f32	s12, s6
 8015462:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015466:	ee12 2a90 	vmov	r2, s5
 801546a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801546e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015472:	ee13 2a10 	vmov	r2, s6
 8015476:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801547a:	9311      	str	r3, [sp, #68]	@ 0x44
 801547c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801547e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015482:	9a03      	ldr	r2, [sp, #12]
 8015484:	9312      	str	r3, [sp, #72]	@ 0x48
 8015486:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801548a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801548c:	eeb0 3a67 	vmov.f32	s6, s15
 8015490:	bf08      	it	eq
 8015492:	4613      	moveq	r3, r2
 8015494:	eef0 2a47 	vmov.f32	s5, s14
 8015498:	e789      	b.n	80153ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801549a:	140f      	asrs	r7, r1, #16
 801549c:	d424      	bmi.n	80154e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801549e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80154a2:	42bd      	cmp	r5, r7
 80154a4:	dd20      	ble.n	80154e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80154a6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80154aa:	d41d      	bmi.n	80154e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80154ac:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80154b0:	4560      	cmp	r0, ip
 80154b2:	dd19      	ble.n	80154e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80154b4:	b22d      	sxth	r5, r5
 80154b6:	fb0c 7505 	mla	r5, ip, r5, r7
 80154ba:	9801      	ldr	r0, [sp, #4]
 80154bc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80154c0:	0e07      	lsrs	r7, r0, #24
 80154c2:	2fff      	cmp	r7, #255	@ 0xff
 80154c4:	d116      	bne.n	80154f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80154c6:	f06f 0501 	mvn.w	r5, #1
 80154ca:	fb05 f706 	mul.w	r7, r5, r6
 80154ce:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80154d2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80154d6:	0945      	lsrs	r5, r0, #5
 80154d8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80154dc:	ea4c 0505 	orr.w	r5, ip, r5
 80154e0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80154e4:	4305      	orrs	r5, r0
 80154e6:	53e5      	strh	r5, [r4, r7]
 80154e8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80154ea:	4401      	add	r1, r0
 80154ec:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80154ee:	3e01      	subs	r6, #1
 80154f0:	4402      	add	r2, r0
 80154f2:	e790      	b.n	8015416 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80154f4:	b2fd      	uxtb	r5, r7
 80154f6:	2f00      	cmp	r7, #0
 80154f8:	d0f6      	beq.n	80154e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80154fa:	f06f 0701 	mvn.w	r7, #1
 80154fe:	4377      	muls	r7, r6
 8015500:	fa1f f985 	uxth.w	r9, r5
 8015504:	f834 e007 	ldrh.w	lr, [r4, r7]
 8015508:	9702      	str	r7, [sp, #8]
 801550a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801550e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015512:	43ed      	mvns	r5, r5
 8015514:	b2ed      	uxtb	r5, r5
 8015516:	fb17 f709 	smulbb	r7, r7, r9
 801551a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801551e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015522:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015526:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801552a:	b2c0      	uxtb	r0, r0
 801552c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015530:	fa5f fe8e 	uxtb.w	lr, lr
 8015534:	fb10 f009 	smulbb	r0, r0, r9
 8015538:	fb0e 0005 	mla	r0, lr, r5, r0
 801553c:	b280      	uxth	r0, r0
 801553e:	fa1f fc8c 	uxth.w	ip, ip
 8015542:	fb1a fa09 	smulbb	sl, sl, r9
 8015546:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801554a:	fb07 a705 	mla	r7, r7, r5, sl
 801554e:	f100 0a01 	add.w	sl, r0, #1
 8015552:	f10c 0501 	add.w	r5, ip, #1
 8015556:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801555a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801555e:	b2bf      	uxth	r7, r7
 8015560:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015564:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015568:	ea4a 0c0c 	orr.w	ip, sl, ip
 801556c:	f107 0a01 	add.w	sl, r7, #1
 8015570:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015574:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015578:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801557c:	9802      	ldr	r0, [sp, #8]
 801557e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015582:	f824 c000 	strh.w	ip, [r4, r0]
 8015586:	e7af      	b.n	80154e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015588:	f04f 0e00 	mov.w	lr, #0
 801558c:	eba3 000e 	sub.w	r0, r3, lr
 8015590:	2800      	cmp	r0, #0
 8015592:	f77f af43 	ble.w	801541c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015596:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801559a:	140d      	asrs	r5, r1, #16
 801559c:	1410      	asrs	r0, r2, #16
 801559e:	fb06 5000 	mla	r0, r6, r0, r5
 80155a2:	9d01      	ldr	r5, [sp, #4]
 80155a4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80155a8:	0e2e      	lsrs	r6, r5, #24
 80155aa:	2eff      	cmp	r6, #255	@ 0xff
 80155ac:	d112      	bne.n	80155d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80155ae:	482c      	ldr	r0, [pc, #176]	@ (8015660 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80155b0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80155b4:	0968      	lsrs	r0, r5, #5
 80155b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80155ba:	4330      	orrs	r0, r6
 80155bc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80155c0:	4328      	orrs	r0, r5
 80155c2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80155c6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80155c8:	4401      	add	r1, r0
 80155ca:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80155cc:	f10e 0e01 	add.w	lr, lr, #1
 80155d0:	4402      	add	r2, r0
 80155d2:	e7db      	b.n	801558c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80155d4:	b2f0      	uxtb	r0, r6
 80155d6:	2e00      	cmp	r6, #0
 80155d8:	d0f5      	beq.n	80155c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80155da:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80155de:	fa1f f980 	uxth.w	r9, r0
 80155e2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80155e6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80155ea:	43c0      	mvns	r0, r0
 80155ec:	b2c0      	uxtb	r0, r0
 80155ee:	fb16 f609 	smulbb	r6, r6, r9
 80155f2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80155f6:	fb07 6700 	mla	r7, r7, r0, r6
 80155fa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80155fe:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015602:	b2ed      	uxtb	r5, r5
 8015604:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015608:	fa5f fc8c 	uxtb.w	ip, ip
 801560c:	fb15 f509 	smulbb	r5, r5, r9
 8015610:	fb0c 5500 	mla	r5, ip, r0, r5
 8015614:	b2bf      	uxth	r7, r7
 8015616:	fb1a fa09 	smulbb	sl, sl, r9
 801561a:	b2ad      	uxth	r5, r5
 801561c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015620:	fb06 a600 	mla	r6, r6, r0, sl
 8015624:	1c78      	adds	r0, r7, #1
 8015626:	f105 0a01 	add.w	sl, r5, #1
 801562a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801562e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015632:	b2b6      	uxth	r6, r6
 8015634:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015638:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801563c:	ea4a 0707 	orr.w	r7, sl, r7
 8015640:	f106 0a01 	add.w	sl, r6, #1
 8015644:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015648:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801564c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015650:	ea47 070a 	orr.w	r7, r7, sl
 8015654:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8015658:	e7b5      	b.n	80155c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801565a:	b005      	add	sp, #20
 801565c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015660:	fffff800 	.word	0xfffff800

08015664 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015668:	b087      	sub	sp, #28
 801566a:	468b      	mov	fp, r1
 801566c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801566e:	9203      	str	r2, [sp, #12]
 8015670:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015674:	9204      	str	r2, [sp, #16]
 8015676:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801567a:	6841      	ldr	r1, [r0, #4]
 801567c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8015680:	fb01 2404 	mla	r4, r1, r4, r2
 8015684:	6802      	ldr	r2, [r0, #0]
 8015686:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801568a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801568e:	3201      	adds	r2, #1
 8015690:	f022 0201 	bic.w	r2, r2, #1
 8015694:	9200      	str	r2, [sp, #0]
 8015696:	f8d9 2000 	ldr.w	r2, [r9]
 801569a:	9201      	str	r2, [sp, #4]
 801569c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80156a0:	f1bb 0f00 	cmp.w	fp, #0
 80156a4:	dc03      	bgt.n	80156ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80156a6:	9a03      	ldr	r2, [sp, #12]
 80156a8:	2a00      	cmp	r2, #0
 80156aa:	f340 8169 	ble.w	8015980 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80156ae:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80156b0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80156b4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80156b8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80156bc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80156be:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80156c2:	2b00      	cmp	r3, #0
 80156c4:	dd0e      	ble.n	80156e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80156c6:	1402      	asrs	r2, r0, #16
 80156c8:	d405      	bmi.n	80156d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80156ca:	42ba      	cmp	r2, r7
 80156cc:	da03      	bge.n	80156d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80156ce:	140a      	asrs	r2, r1, #16
 80156d0:	d401      	bmi.n	80156d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80156d2:	42b2      	cmp	r2, r6
 80156d4:	db07      	blt.n	80156e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80156d6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80156d8:	4410      	add	r0, r2
 80156da:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80156dc:	3b01      	subs	r3, #1
 80156de:	4411      	add	r1, r2
 80156e0:	3402      	adds	r4, #2
 80156e2:	e7ee      	b.n	80156c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80156e4:	d017      	beq.n	8015716 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80156e6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80156e8:	1e5a      	subs	r2, r3, #1
 80156ea:	fb05 0502 	mla	r5, r5, r2, r0
 80156ee:	142d      	asrs	r5, r5, #16
 80156f0:	d409      	bmi.n	8015706 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80156f2:	42bd      	cmp	r5, r7
 80156f4:	da07      	bge.n	8015706 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80156f6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80156f8:	fb05 1202 	mla	r2, r5, r2, r1
 80156fc:	1412      	asrs	r2, r2, #16
 80156fe:	d402      	bmi.n	8015706 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015700:	42b2      	cmp	r2, r6
 8015702:	f2c0 80c7 	blt.w	8015894 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8015706:	2700      	movs	r7, #0
 8015708:	19da      	adds	r2, r3, r7
 801570a:	2a00      	cmp	r2, #0
 801570c:	dc3e      	bgt.n	801578c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801570e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015712:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015716:	f1bb 0f00 	cmp.w	fp, #0
 801571a:	f340 8131 	ble.w	8015980 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801571e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015722:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015726:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801572a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801572c:	f1bb 0b01 	subs.w	fp, fp, #1
 8015730:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015734:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015738:	eeb0 6a62 	vmov.f32	s12, s5
 801573c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015740:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015744:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015748:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801574c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015750:	eeb0 6a43 	vmov.f32	s12, s6
 8015754:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015758:	ee12 2a90 	vmov	r2, s5
 801575c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015760:	fb92 f3f3 	sdiv	r3, r2, r3
 8015764:	ee13 2a10 	vmov	r2, s6
 8015768:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801576c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801576e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015770:	fb92 f3f3 	sdiv	r3, r2, r3
 8015774:	9a03      	ldr	r2, [sp, #12]
 8015776:	9314      	str	r3, [sp, #80]	@ 0x50
 8015778:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801577c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801577e:	eeb0 3a67 	vmov.f32	s6, s15
 8015782:	bf08      	it	eq
 8015784:	4613      	moveq	r3, r2
 8015786:	eef0 2a47 	vmov.f32	s5, s14
 801578a:	e789      	b.n	80156a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801578c:	1405      	asrs	r5, r0, #16
 801578e:	d435      	bmi.n	80157fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015790:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015794:	42aa      	cmp	r2, r5
 8015796:	dd31      	ble.n	80157fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015798:	140e      	asrs	r6, r1, #16
 801579a:	d42f      	bmi.n	80157fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801579c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80157a0:	42b2      	cmp	r2, r6
 80157a2:	dd2b      	ble.n	80157fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80157a4:	9a00      	ldr	r2, [sp, #0]
 80157a6:	fb06 5502 	mla	r5, r6, r2, r5
 80157aa:	086a      	lsrs	r2, r5, #1
 80157ac:	9e01      	ldr	r6, [sp, #4]
 80157ae:	5cb2      	ldrb	r2, [r6, r2]
 80157b0:	07ee      	lsls	r6, r5, #31
 80157b2:	bf54      	ite	pl
 80157b4:	f002 020f 	andpl.w	r2, r2, #15
 80157b8:	1112      	asrmi	r2, r2, #4
 80157ba:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80157be:	b2d2      	uxtb	r2, r2
 80157c0:	b1e2      	cbz	r2, 80157fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80157c2:	9d04      	ldr	r5, [sp, #16]
 80157c4:	436a      	muls	r2, r5
 80157c6:	1c55      	adds	r5, r2, #1
 80157c8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80157cc:	4d6e      	ldr	r5, [pc, #440]	@ (8015988 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80157ce:	682d      	ldr	r5, [r5, #0]
 80157d0:	1212      	asrs	r2, r2, #8
 80157d2:	0a2e      	lsrs	r6, r5, #8
 80157d4:	2aff      	cmp	r2, #255	@ 0xff
 80157d6:	9605      	str	r6, [sp, #20]
 80157d8:	d116      	bne.n	8015808 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80157da:	f06f 0201 	mvn.w	r2, #1
 80157de:	fb02 fc07 	mul.w	ip, r2, r7
 80157e2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80157e6:	096a      	lsrs	r2, r5, #5
 80157e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80157ec:	f026 0607 	bic.w	r6, r6, #7
 80157f0:	4316      	orrs	r6, r2
 80157f2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80157f6:	432e      	orrs	r6, r5
 80157f8:	f824 600c 	strh.w	r6, [r4, ip]
 80157fc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80157fe:	4410      	add	r0, r2
 8015800:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015802:	3f01      	subs	r7, #1
 8015804:	4411      	add	r1, r2
 8015806:	e77f      	b.n	8015708 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8015808:	f06f 0601 	mvn.w	r6, #1
 801580c:	437e      	muls	r6, r7
 801580e:	fa1f fa82 	uxth.w	sl, r2
 8015812:	f834 8006 	ldrh.w	r8, [r4, r6]
 8015816:	9602      	str	r6, [sp, #8]
 8015818:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801581c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8015820:	43d2      	mvns	r2, r2
 8015822:	b2d2      	uxtb	r2, r2
 8015824:	fb1c fc0a 	smulbb	ip, ip, sl
 8015828:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801582c:	fb0e ce02 	mla	lr, lr, r2, ip
 8015830:	b2ed      	uxtb	r5, r5
 8015832:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015836:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801583a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801583e:	fa5f f888 	uxtb.w	r8, r8
 8015842:	fb15 f50a 	smulbb	r5, r5, sl
 8015846:	fb08 5502 	mla	r5, r8, r2, r5
 801584a:	fa1f fe8e 	uxth.w	lr, lr
 801584e:	fb16 f60a 	smulbb	r6, r6, sl
 8015852:	b2ad      	uxth	r5, r5
 8015854:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015858:	fb0c 6c02 	mla	ip, ip, r2, r6
 801585c:	f10e 0201 	add.w	r2, lr, #1
 8015860:	1c6e      	adds	r6, r5, #1
 8015862:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015866:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801586a:	fa1f fc8c 	uxth.w	ip, ip
 801586e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015872:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015876:	ea46 0e0e 	orr.w	lr, r6, lr
 801587a:	f10c 0601 	add.w	r6, ip, #1
 801587e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015882:	0976      	lsrs	r6, r6, #5
 8015884:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015888:	9a02      	ldr	r2, [sp, #8]
 801588a:	ea4e 0e06 	orr.w	lr, lr, r6
 801588e:	f824 e002 	strh.w	lr, [r4, r2]
 8015892:	e7b3      	b.n	80157fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015894:	f04f 0800 	mov.w	r8, #0
 8015898:	eba3 0208 	sub.w	r2, r3, r8
 801589c:	2a00      	cmp	r2, #0
 801589e:	f77f af36 	ble.w	801570e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80158a2:	9e00      	ldr	r6, [sp, #0]
 80158a4:	1402      	asrs	r2, r0, #16
 80158a6:	140d      	asrs	r5, r1, #16
 80158a8:	fb06 2505 	mla	r5, r6, r5, r2
 80158ac:	086a      	lsrs	r2, r5, #1
 80158ae:	9e01      	ldr	r6, [sp, #4]
 80158b0:	5cb2      	ldrb	r2, [r6, r2]
 80158b2:	07ed      	lsls	r5, r5, #31
 80158b4:	bf54      	ite	pl
 80158b6:	f002 020f 	andpl.w	r2, r2, #15
 80158ba:	1112      	asrmi	r2, r2, #4
 80158bc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80158c0:	b2d2      	uxtb	r2, r2
 80158c2:	b1c2      	cbz	r2, 80158f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80158c4:	9d04      	ldr	r5, [sp, #16]
 80158c6:	436a      	muls	r2, r5
 80158c8:	1c55      	adds	r5, r2, #1
 80158ca:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80158ce:	4d2e      	ldr	r5, [pc, #184]	@ (8015988 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80158d0:	1212      	asrs	r2, r2, #8
 80158d2:	682e      	ldr	r6, [r5, #0]
 80158d4:	2aff      	cmp	r2, #255	@ 0xff
 80158d6:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80158da:	d113      	bne.n	8015904 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80158dc:	0972      	lsrs	r2, r6, #5
 80158de:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80158e2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80158e6:	f025 0507 	bic.w	r5, r5, #7
 80158ea:	4315      	orrs	r5, r2
 80158ec:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80158f0:	4335      	orrs	r5, r6
 80158f2:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80158f6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80158f8:	4410      	add	r0, r2
 80158fa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80158fc:	f108 0801 	add.w	r8, r8, #1
 8015900:	4411      	add	r1, r2
 8015902:	e7c9      	b.n	8015898 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8015904:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015908:	fa1f fa82 	uxth.w	sl, r2
 801590c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015910:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8015914:	43d2      	mvns	r2, r2
 8015916:	b2d2      	uxtb	r2, r2
 8015918:	fb17 f70a 	smulbb	r7, r7, sl
 801591c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015920:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015924:	b2f6      	uxtb	r6, r6
 8015926:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801592a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801592e:	fa5f fe8e 	uxtb.w	lr, lr
 8015932:	fb16 f60a 	smulbb	r6, r6, sl
 8015936:	fb0e 6602 	mla	r6, lr, r2, r6
 801593a:	b2ed      	uxtb	r5, r5
 801593c:	fa1f fc8c 	uxth.w	ip, ip
 8015940:	fb15 f50a 	smulbb	r5, r5, sl
 8015944:	b2b6      	uxth	r6, r6
 8015946:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801594a:	fb07 5702 	mla	r7, r7, r2, r5
 801594e:	f10c 0201 	add.w	r2, ip, #1
 8015952:	1c75      	adds	r5, r6, #1
 8015954:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015958:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801595c:	b2bf      	uxth	r7, r7
 801595e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015962:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015966:	ea45 0c0c 	orr.w	ip, r5, ip
 801596a:	1c7d      	adds	r5, r7, #1
 801596c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8015970:	096d      	lsrs	r5, r5, #5
 8015972:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015976:	ea4c 0c05 	orr.w	ip, ip, r5
 801597a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801597e:	e7ba      	b.n	80158f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015980:	b007      	add	sp, #28
 8015982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015986:	bf00      	nop
 8015988:	20014050 	.word	0x20014050

0801598c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801598c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015990:	b087      	sub	sp, #28
 8015992:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8015ca0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015996:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015998:	9205      	str	r2, [sp, #20]
 801599a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801599e:	9101      	str	r1, [sp, #4]
 80159a0:	6841      	ldr	r1, [r0, #4]
 80159a2:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 80159a6:	fb01 2404 	mla	r4, r1, r4, r2
 80159aa:	6802      	ldr	r2, [r0, #0]
 80159ac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80159b0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80159b4:	3201      	adds	r2, #1
 80159b6:	f022 0201 	bic.w	r2, r2, #1
 80159ba:	9202      	str	r2, [sp, #8]
 80159bc:	f8db 2000 	ldr.w	r2, [fp]
 80159c0:	9203      	str	r2, [sp, #12]
 80159c2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80159c6:	9a01      	ldr	r2, [sp, #4]
 80159c8:	2a00      	cmp	r2, #0
 80159ca:	dc03      	bgt.n	80159d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80159cc:	9a05      	ldr	r2, [sp, #20]
 80159ce:	2a00      	cmp	r2, #0
 80159d0:	f340 8162 	ble.w	8015c98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80159d4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80159d6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80159da:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80159de:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80159e2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80159e4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80159e8:	2b00      	cmp	r3, #0
 80159ea:	dd0e      	ble.n	8015a0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80159ec:	1402      	asrs	r2, r0, #16
 80159ee:	d405      	bmi.n	80159fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80159f0:	42ba      	cmp	r2, r7
 80159f2:	da03      	bge.n	80159fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80159f4:	140a      	asrs	r2, r1, #16
 80159f6:	d401      	bmi.n	80159fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80159f8:	42b2      	cmp	r2, r6
 80159fa:	db07      	blt.n	8015a0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80159fc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80159fe:	4410      	add	r0, r2
 8015a00:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015a02:	3b01      	subs	r3, #1
 8015a04:	4411      	add	r1, r2
 8015a06:	3402      	adds	r4, #2
 8015a08:	e7ee      	b.n	80159e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015a0a:	d017      	beq.n	8015a3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015a0c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015a0e:	1e5a      	subs	r2, r3, #1
 8015a10:	fb05 0502 	mla	r5, r5, r2, r0
 8015a14:	142d      	asrs	r5, r5, #16
 8015a16:	d409      	bmi.n	8015a2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015a18:	42bd      	cmp	r5, r7
 8015a1a:	da07      	bge.n	8015a2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015a1c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015a1e:	fb05 1202 	mla	r2, r5, r2, r1
 8015a22:	1412      	asrs	r2, r2, #16
 8015a24:	d402      	bmi.n	8015a2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015a26:	42b2      	cmp	r2, r6
 8015a28:	f2c0 80c3 	blt.w	8015bb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8015a2c:	2500      	movs	r5, #0
 8015a2e:	195a      	adds	r2, r3, r5
 8015a30:	2a00      	cmp	r2, #0
 8015a32:	dc3f      	bgt.n	8015ab4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015a34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015a38:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015a3c:	9b01      	ldr	r3, [sp, #4]
 8015a3e:	2b00      	cmp	r3, #0
 8015a40:	f340 812a 	ble.w	8015c98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015a44:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015a48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015a4c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015a50:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015a56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015a5a:	eeb0 6a62 	vmov.f32	s12, s5
 8015a5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015a62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015a6a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015a6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015a72:	eeb0 6a43 	vmov.f32	s12, s6
 8015a76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015a7a:	ee12 2a90 	vmov	r2, s5
 8015a7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a82:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a86:	ee13 2a10 	vmov	r2, s6
 8015a8a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015a8c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a92:	9314      	str	r3, [sp, #80]	@ 0x50
 8015a94:	9b01      	ldr	r3, [sp, #4]
 8015a96:	9a05      	ldr	r2, [sp, #20]
 8015a98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a9c:	3b01      	subs	r3, #1
 8015a9e:	9301      	str	r3, [sp, #4]
 8015aa0:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015aa4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015aa6:	eeb0 3a67 	vmov.f32	s6, s15
 8015aaa:	bf08      	it	eq
 8015aac:	4613      	moveq	r3, r2
 8015aae:	eef0 2a47 	vmov.f32	s5, s14
 8015ab2:	e788      	b.n	80159c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015ab4:	1406      	asrs	r6, r0, #16
 8015ab6:	d42c      	bmi.n	8015b12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015ab8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015abc:	42b2      	cmp	r2, r6
 8015abe:	dd28      	ble.n	8015b12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015ac0:	140f      	asrs	r7, r1, #16
 8015ac2:	d426      	bmi.n	8015b12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015ac4:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015ac8:	42ba      	cmp	r2, r7
 8015aca:	dd22      	ble.n	8015b12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015acc:	9a02      	ldr	r2, [sp, #8]
 8015ace:	fb07 6602 	mla	r6, r7, r2, r6
 8015ad2:	0872      	lsrs	r2, r6, #1
 8015ad4:	9f03      	ldr	r7, [sp, #12]
 8015ad6:	5cba      	ldrb	r2, [r7, r2]
 8015ad8:	07f6      	lsls	r6, r6, #31
 8015ada:	bf54      	ite	pl
 8015adc:	f002 020f 	andpl.w	r2, r2, #15
 8015ae0:	1112      	asrmi	r2, r2, #4
 8015ae2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015ae6:	b2d2      	uxtb	r2, r2
 8015ae8:	2aff      	cmp	r2, #255	@ 0xff
 8015aea:	d118      	bne.n	8015b1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015aec:	f8d8 2000 	ldr.w	r2, [r8]
 8015af0:	f06f 0601 	mvn.w	r6, #1
 8015af4:	fb06 f705 	mul.w	r7, r6, r5
 8015af8:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8015afc:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8015b00:	0956      	lsrs	r6, r2, #5
 8015b02:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015b06:	ea4c 0606 	orr.w	r6, ip, r6
 8015b0a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015b0e:	4316      	orrs	r6, r2
 8015b10:	53e6      	strh	r6, [r4, r7]
 8015b12:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015b14:	4410      	add	r0, r2
 8015b16:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015b18:	3d01      	subs	r5, #1
 8015b1a:	4411      	add	r1, r2
 8015b1c:	e787      	b.n	8015a2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015b1e:	2a00      	cmp	r2, #0
 8015b20:	d0f7      	beq.n	8015b12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015b22:	f06f 0601 	mvn.w	r6, #1
 8015b26:	436e      	muls	r6, r5
 8015b28:	f8d8 c000 	ldr.w	ip, [r8]
 8015b2c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8015b30:	9604      	str	r6, [sp, #16]
 8015b32:	fa1f f982 	uxth.w	r9, r2
 8015b36:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015b3a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8015b3e:	43d2      	mvns	r2, r2
 8015b40:	b2d2      	uxtb	r2, r2
 8015b42:	fb16 f609 	smulbb	r6, r6, r9
 8015b46:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015b4a:	fb07 6702 	mla	r7, r7, r2, r6
 8015b4e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8015b52:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015b56:	fa5f fc8c 	uxtb.w	ip, ip
 8015b5a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015b5e:	fa5f fe8e 	uxtb.w	lr, lr
 8015b62:	fb1c fc09 	smulbb	ip, ip, r9
 8015b66:	fb0e cc02 	mla	ip, lr, r2, ip
 8015b6a:	b2bf      	uxth	r7, r7
 8015b6c:	fb1a fa09 	smulbb	sl, sl, r9
 8015b70:	fa1f fc8c 	uxth.w	ip, ip
 8015b74:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015b78:	fb06 a602 	mla	r6, r6, r2, sl
 8015b7c:	1c7a      	adds	r2, r7, #1
 8015b7e:	f10c 0a01 	add.w	sl, ip, #1
 8015b82:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015b86:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8015b8a:	b2b6      	uxth	r6, r6
 8015b8c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015b90:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015b94:	ea4a 0707 	orr.w	r7, sl, r7
 8015b98:	f106 0a01 	add.w	sl, r6, #1
 8015b9c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ba0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015ba4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015ba8:	9a04      	ldr	r2, [sp, #16]
 8015baa:	ea47 070a 	orr.w	r7, r7, sl
 8015bae:	52a7      	strh	r7, [r4, r2]
 8015bb0:	e7af      	b.n	8015b12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015bb2:	f04f 0e00 	mov.w	lr, #0
 8015bb6:	eba3 020e 	sub.w	r2, r3, lr
 8015bba:	2a00      	cmp	r2, #0
 8015bbc:	f77f af3a 	ble.w	8015a34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015bc0:	9e02      	ldr	r6, [sp, #8]
 8015bc2:	1402      	asrs	r2, r0, #16
 8015bc4:	140d      	asrs	r5, r1, #16
 8015bc6:	fb06 2505 	mla	r5, r6, r5, r2
 8015bca:	086a      	lsrs	r2, r5, #1
 8015bcc:	9e03      	ldr	r6, [sp, #12]
 8015bce:	5cb2      	ldrb	r2, [r6, r2]
 8015bd0:	07ed      	lsls	r5, r5, #31
 8015bd2:	bf54      	ite	pl
 8015bd4:	f002 020f 	andpl.w	r2, r2, #15
 8015bd8:	1112      	asrmi	r2, r2, #4
 8015bda:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015bde:	b2d2      	uxtb	r2, r2
 8015be0:	2aff      	cmp	r2, #255	@ 0xff
 8015be2:	d115      	bne.n	8015c10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015be4:	f8d8 5000 	ldr.w	r5, [r8]
 8015be8:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8015bec:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8015bf0:	096a      	lsrs	r2, r5, #5
 8015bf2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015bf6:	4332      	orrs	r2, r6
 8015bf8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015bfc:	432a      	orrs	r2, r5
 8015bfe:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8015c02:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015c04:	4410      	add	r0, r2
 8015c06:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015c08:	f10e 0e01 	add.w	lr, lr, #1
 8015c0c:	4411      	add	r1, r2
 8015c0e:	e7d2      	b.n	8015bb6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015c10:	2a00      	cmp	r2, #0
 8015c12:	d0f6      	beq.n	8015c02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015c14:	f8d8 7000 	ldr.w	r7, [r8]
 8015c18:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015c1c:	fa1f f982 	uxth.w	r9, r2
 8015c20:	ea4f 262c 	mov.w	r6, ip, asr #8
 8015c24:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8015c28:	43d2      	mvns	r2, r2
 8015c2a:	b2d2      	uxtb	r2, r2
 8015c2c:	fb15 f509 	smulbb	r5, r5, r9
 8015c30:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015c34:	fb06 5602 	mla	r6, r6, r2, r5
 8015c38:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8015c3c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015c40:	b2ff      	uxtb	r7, r7
 8015c42:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015c46:	fa5f fc8c 	uxtb.w	ip, ip
 8015c4a:	fb17 f709 	smulbb	r7, r7, r9
 8015c4e:	fb0c 7702 	mla	r7, ip, r2, r7
 8015c52:	b2b6      	uxth	r6, r6
 8015c54:	fb1a fa09 	smulbb	sl, sl, r9
 8015c58:	b2bf      	uxth	r7, r7
 8015c5a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015c5e:	fb05 a502 	mla	r5, r5, r2, sl
 8015c62:	1c72      	adds	r2, r6, #1
 8015c64:	f107 0a01 	add.w	sl, r7, #1
 8015c68:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015c6c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015c70:	b2ad      	uxth	r5, r5
 8015c72:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015c76:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015c7a:	ea4a 0606 	orr.w	r6, sl, r6
 8015c7e:	f105 0a01 	add.w	sl, r5, #1
 8015c82:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015c86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015c8a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015c8e:	ea46 060a 	orr.w	r6, r6, sl
 8015c92:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015c96:	e7b4      	b.n	8015c02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015c98:	b007      	add	sp, #28
 8015c9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c9e:	bf00      	nop
 8015ca0:	20014050 	.word	0x20014050

08015ca4 <_ZN8touchgfx8LCD16bppD1Ev>:
 8015ca4:	4770      	bx	lr

08015ca6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8015ca6:	4770      	bx	lr

08015ca8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8015ca8:	4770      	bx	lr

08015caa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8015caa:	4770      	bx	lr

08015cac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8015cac:	4770      	bx	lr

08015cae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8015cae:	4770      	bx	lr

08015cb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8015cb0:	4770      	bx	lr

08015cb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015cb2:	4770      	bx	lr

08015cb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015cb4:	4770      	bx	lr

08015cb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015cb6:	4770      	bx	lr

08015cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015cb8:	4770      	bx	lr

08015cba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015cba:	4770      	bx	lr

08015cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015cbc:	4770      	bx	lr

08015cbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015cbe:	4770      	bx	lr

08015cc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015cc0:	4770      	bx	lr

08015cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015cc2:	4770      	bx	lr

08015cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015cc4:	4770      	bx	lr

08015cc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015cc6:	4770      	bx	lr

08015cc8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015cc8:	4770      	bx	lr

08015cca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015cca:	4770      	bx	lr

08015ccc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015ccc:	4770      	bx	lr

08015cce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015cce:	4770      	bx	lr

08015cd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015cd0:	4770      	bx	lr

08015cd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015cd2:	4770      	bx	lr

08015cd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015cd4:	4770      	bx	lr

08015cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015cd6:	4770      	bx	lr

08015cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015cd8:	4770      	bx	lr

08015cda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015cda:	4770      	bx	lr

08015cdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8015cdc:	4770      	bx	lr

08015cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015cde:	4770      	bx	lr

08015ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015ce0:	4770      	bx	lr

08015ce2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015ce2:	4770      	bx	lr

08015ce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015ce4:	4770      	bx	lr

08015ce6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8015ce6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015cea:	b088      	sub	sp, #32
 8015cec:	ac08      	add	r4, sp, #32
 8015cee:	4606      	mov	r6, r0
 8015cf0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8015cf4:	4620      	mov	r0, r4
 8015cf6:	4688      	mov	r8, r1
 8015cf8:	4691      	mov	r9, r2
 8015cfa:	f7fd fc31 	bl	8013560 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015cfe:	6833      	ldr	r3, [r6, #0]
 8015d00:	4605      	mov	r5, r0
 8015d02:	4620      	mov	r0, r4
 8015d04:	699f      	ldr	r7, [r3, #24]
 8015d06:	f7fd fb39 	bl	801337c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015d0a:	4682      	mov	sl, r0
 8015d0c:	4620      	mov	r0, r4
 8015d0e:	f7fd fb69 	bl	80133e4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015d12:	9500      	str	r5, [sp, #0]
 8015d14:	e9cd a001 	strd	sl, r0, [sp, #4]
 8015d18:	464b      	mov	r3, r9
 8015d1a:	a806      	add	r0, sp, #24
 8015d1c:	4642      	mov	r2, r8
 8015d1e:	4631      	mov	r1, r6
 8015d20:	47b8      	blx	r7
 8015d22:	4628      	mov	r0, r5
 8015d24:	b008      	add	sp, #32
 8015d26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08015d2c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8015d2c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015d30:	2300      	movs	r3, #0
 8015d32:	9300      	str	r3, [sp, #0]
 8015d34:	4b3d      	ldr	r3, [pc, #244]	@ (8015e2c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8015d36:	781b      	ldrb	r3, [r3, #0]
 8015d38:	2b00      	cmp	r3, #0
 8015d3a:	d137      	bne.n	8015dac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8015d3c:	4a3c      	ldr	r2, [pc, #240]	@ (8015e30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015d3e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015d42:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015d46:	2b00      	cmp	r3, #0
 8015d48:	d132      	bne.n	8015db0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015d4a:	4b3a      	ldr	r3, [pc, #232]	@ (8015e34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015d4c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015d50:	6808      	ldr	r0, [r1, #0]
 8015d52:	6849      	ldr	r1, [r1, #4]
 8015d54:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015d58:	ac02      	add	r4, sp, #8
 8015d5a:	ab02      	add	r3, sp, #8
 8015d5c:	c303      	stmia	r3!, {r0, r1}
 8015d5e:	4669      	mov	r1, sp
 8015d60:	4620      	mov	r0, r4
 8015d62:	f7f9 ff85 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015d66:	4668      	mov	r0, sp
 8015d68:	f7f9 ff5a 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015d6c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015d70:	f8bd 2000 	ldrh.w	r2, [sp]
 8015d74:	4d30      	ldr	r5, [pc, #192]	@ (8015e38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015d76:	4413      	add	r3, r2
 8015d78:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015d7c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8015d80:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015d84:	6828      	ldr	r0, [r5, #0]
 8015d86:	4413      	add	r3, r2
 8015d88:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015d8c:	6803      	ldr	r3, [r0, #0]
 8015d8e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015d90:	4798      	blx	r3
 8015d92:	f010 0f01 	tst.w	r0, #1
 8015d96:	462f      	mov	r7, r5
 8015d98:	d00c      	beq.n	8015db4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015d9a:	6828      	ldr	r0, [r5, #0]
 8015d9c:	6803      	ldr	r3, [r0, #0]
 8015d9e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8015da2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8015da4:	4798      	blx	r3
 8015da6:	b004      	add	sp, #16
 8015da8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015dac:	4a21      	ldr	r2, [pc, #132]	@ (8015e34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015dae:	e7c6      	b.n	8015d3e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8015db0:	4b1f      	ldr	r3, [pc, #124]	@ (8015e30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015db2:	e7cb      	b.n	8015d4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015db4:	6838      	ldr	r0, [r7, #0]
 8015db6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015dba:	6803      	ldr	r3, [r0, #0]
 8015dbc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8015dc0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015dc2:	4798      	blx	r3
 8015dc4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015dc8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015dcc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8015dd0:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015dd4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015dd8:	6838      	ldr	r0, [r7, #0]
 8015dda:	6803      	ldr	r3, [r0, #0]
 8015ddc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015dde:	4798      	blx	r3
 8015de0:	4a13      	ldr	r2, [pc, #76]	@ (8015e30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015de2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8015de6:	8813      	ldrh	r3, [r2, #0]
 8015de8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015dec:	fb03 1404 	mla	r4, r3, r4, r1
 8015df0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015df4:	435d      	muls	r5, r3
 8015df6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015dfa:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015dfe:	4691      	mov	r9, r2
 8015e00:	6838      	ldr	r0, [r7, #0]
 8015e02:	42ac      	cmp	r4, r5
 8015e04:	6803      	ldr	r3, [r0, #0]
 8015e06:	d20e      	bcs.n	8015e26 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8015e08:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 8015e0c:	4632      	mov	r2, r6
 8015e0e:	4643      	mov	r3, r8
 8015e10:	4621      	mov	r1, r4
 8015e12:	47d0      	blx	sl
 8015e14:	f8b9 3000 	ldrh.w	r3, [r9]
 8015e18:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e1c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8015e20:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015e24:	e7ec      	b.n	8015e00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8015e26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015e28:	4798      	blx	r3
 8015e2a:	e7bc      	b.n	8015da6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8015e2c:	20014036 	.word	0x20014036
 8015e30:	20014038 	.word	0x20014038
 8015e34:	2001403a 	.word	0x2001403a
 8015e38:	20014040 	.word	0x20014040

08015e3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8015e3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e40:	b08b      	sub	sp, #44	@ 0x2c
 8015e42:	460f      	mov	r7, r1
 8015e44:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8015e48:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8015e4c:	4616      	mov	r6, r2
 8015e4e:	f1bb 0f00 	cmp.w	fp, #0
 8015e52:	d04a      	beq.n	8015eea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015e54:	6810      	ldr	r0, [r2, #0]
 8015e56:	6851      	ldr	r1, [r2, #4]
 8015e58:	ad06      	add	r5, sp, #24
 8015e5a:	c503      	stmia	r5!, {r0, r1}
 8015e5c:	6818      	ldr	r0, [r3, #0]
 8015e5e:	6859      	ldr	r1, [r3, #4]
 8015e60:	ad08      	add	r5, sp, #32
 8015e62:	c503      	stmia	r5!, {r0, r1}
 8015e64:	a806      	add	r0, sp, #24
 8015e66:	f7f9 fedb 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015e6a:	4631      	mov	r1, r6
 8015e6c:	a808      	add	r0, sp, #32
 8015e6e:	f7f9 feff 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015e72:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015e76:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8015e7a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8015e7e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8015e82:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8015e86:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015e8a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8015e8e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8015e92:	4f5f      	ldr	r7, [pc, #380]	@ (8016010 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015e94:	440a      	add	r2, r1
 8015e96:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015e9a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015e9e:	6838      	ldr	r0, [r7, #0]
 8015ea0:	4413      	add	r3, r2
 8015ea2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8015ea6:	6803      	ldr	r3, [r0, #0]
 8015ea8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015eaa:	4798      	blx	r3
 8015eac:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8015eb0:	46b9      	mov	r9, r7
 8015eb2:	d11d      	bne.n	8015ef0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015eb4:	b9fc      	cbnz	r4, 8015ef6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015eb6:	f010 0f01 	tst.w	r0, #1
 8015eba:	d01c      	beq.n	8015ef6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015ebc:	f8d9 0000 	ldr.w	r0, [r9]
 8015ec0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8015ec4:	6801      	ldr	r1, [r0, #0]
 8015ec6:	f8cd b00c 	str.w	fp, [sp, #12]
 8015eca:	2700      	movs	r7, #0
 8015ecc:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8015ed0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015ed4:	9402      	str	r4, [sp, #8]
 8015ed6:	b2ad      	uxth	r5, r5
 8015ed8:	fa1f f488 	uxth.w	r4, r8
 8015edc:	9501      	str	r5, [sp, #4]
 8015ede:	9400      	str	r4, [sp, #0]
 8015ee0:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 8015ee2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015ee6:	4631      	mov	r1, r6
 8015ee8:	47a0      	blx	r4
 8015eea:	b00b      	add	sp, #44	@ 0x2c
 8015eec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ef0:	f010 0f04 	tst.w	r0, #4
 8015ef4:	e7e1      	b.n	8015eba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8015ef6:	f8d9 0000 	ldr.w	r0, [r9]
 8015efa:	6803      	ldr	r3, [r0, #0]
 8015efc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015efe:	4798      	blx	r3
 8015f00:	4b44      	ldr	r3, [pc, #272]	@ (8016014 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8015f02:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8015f06:	881a      	ldrh	r2, [r3, #0]
 8015f08:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8015f0c:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8015f10:	fb02 1404 	mla	r4, r2, r4, r1
 8015f14:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015f18:	469a      	mov	sl, r3
 8015f1a:	fb05 f502 	mul.w	r5, r5, r2
 8015f1e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8015f22:	d059      	beq.n	8015fd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8015f24:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8015f28:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015f2c:	fa1f f28b 	uxth.w	r2, fp
 8015f30:	fa1f f989 	uxth.w	r9, r9
 8015f34:	469e      	mov	lr, r3
 8015f36:	42ac      	cmp	r4, r5
 8015f38:	d264      	bcs.n	8016004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015f3a:	eb04 0a07 	add.w	sl, r4, r7
 8015f3e:	4554      	cmp	r4, sl
 8015f40:	d23d      	bcs.n	8015fbe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8015f42:	8821      	ldrh	r1, [r4, #0]
 8015f44:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015f48:	1208      	asrs	r0, r1, #8
 8015f4a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015f4e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8015f52:	fb10 f009 	smulbb	r0, r0, r9
 8015f56:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015f5a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015f5e:	00c9      	lsls	r1, r1, #3
 8015f60:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015f64:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015f68:	10d8      	asrs	r0, r3, #3
 8015f6a:	b2c9      	uxtb	r1, r1
 8015f6c:	00db      	lsls	r3, r3, #3
 8015f6e:	fa1f fc8c 	uxth.w	ip, ip
 8015f72:	fb1b fb09 	smulbb	fp, fp, r9
 8015f76:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8015f7a:	b2db      	uxtb	r3, r3
 8015f7c:	fb11 f109 	smulbb	r1, r1, r9
 8015f80:	fb00 b002 	mla	r0, r0, r2, fp
 8015f84:	fb03 1302 	mla	r3, r3, r2, r1
 8015f88:	f10c 0b01 	add.w	fp, ip, #1
 8015f8c:	b29b      	uxth	r3, r3
 8015f8e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8015f92:	b280      	uxth	r0, r0
 8015f94:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8015f98:	f103 0c01 	add.w	ip, r3, #1
 8015f9c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015fa0:	1c43      	adds	r3, r0, #1
 8015fa2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015fa6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015faa:	0940      	lsrs	r0, r0, #5
 8015fac:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015fb0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015fb4:	ea4c 0c00 	orr.w	ip, ip, r0
 8015fb8:	f824 cb02 	strh.w	ip, [r4], #2
 8015fbc:	e7bf      	b.n	8015f3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8015fbe:	f8be 3000 	ldrh.w	r3, [lr]
 8015fc2:	eba3 0308 	sub.w	r3, r3, r8
 8015fc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015fca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015fce:	eba3 0308 	sub.w	r3, r3, r8
 8015fd2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015fd6:	e7ae      	b.n	8015f36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015fd8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015fdc:	f8d9 0000 	ldr.w	r0, [r9]
 8015fe0:	42ac      	cmp	r4, r5
 8015fe2:	6803      	ldr	r3, [r0, #0]
 8015fe4:	d20e      	bcs.n	8016004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015fe6:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 8015fea:	4632      	mov	r2, r6
 8015fec:	463b      	mov	r3, r7
 8015fee:	4621      	mov	r1, r4
 8015ff0:	47c0      	blx	r8
 8015ff2:	f8ba 3000 	ldrh.w	r3, [sl]
 8015ff6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015ffa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015ffe:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016002:	e7eb      	b.n	8015fdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8016004:	4b02      	ldr	r3, [pc, #8]	@ (8016010 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016006:	6818      	ldr	r0, [r3, #0]
 8016008:	6803      	ldr	r3, [r0, #0]
 801600a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801600c:	4798      	blx	r3
 801600e:	e76c      	b.n	8015eea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8016010:	20014040 	.word	0x20014040
 8016014:	20014038 	.word	0x20014038

08016018 <_ZN8touchgfx8LCD16bppD0Ev>:
 8016018:	b510      	push	{r4, lr}
 801601a:	218c      	movs	r1, #140	@ 0x8c
 801601c:	4604      	mov	r4, r0
 801601e:	f00c fa2c 	bl	802247a <_ZdlPvj>
 8016022:	4620      	mov	r0, r4
 8016024:	bd10      	pop	{r4, pc}

08016026 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8016026:	b510      	push	{r4, lr}
 8016028:	2104      	movs	r1, #4
 801602a:	4604      	mov	r4, r0
 801602c:	f00c fa25 	bl	802247a <_ZdlPvj>
 8016030:	4620      	mov	r0, r4
 8016032:	bd10      	pop	{r4, pc}

08016034 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8016034:	b510      	push	{r4, lr}
 8016036:	2104      	movs	r1, #4
 8016038:	4604      	mov	r4, r0
 801603a:	f00c fa1e 	bl	802247a <_ZdlPvj>
 801603e:	4620      	mov	r0, r4
 8016040:	bd10      	pop	{r4, pc}

08016042 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8016042:	b510      	push	{r4, lr}
 8016044:	f640 0144 	movw	r1, #2116	@ 0x844
 8016048:	4604      	mov	r4, r0
 801604a:	f00c fa16 	bl	802247a <_ZdlPvj>
 801604e:	4620      	mov	r0, r4
 8016050:	bd10      	pop	{r4, pc}

08016052 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8016052:	b510      	push	{r4, lr}
 8016054:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8016058:	4604      	mov	r4, r0
 801605a:	f00c fa0e 	bl	802247a <_ZdlPvj>
 801605e:	4620      	mov	r0, r4
 8016060:	bd10      	pop	{r4, pc}

08016062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016062:	b510      	push	{r4, lr}
 8016064:	2104      	movs	r1, #4
 8016066:	4604      	mov	r4, r0
 8016068:	f00c fa07 	bl	802247a <_ZdlPvj>
 801606c:	4620      	mov	r0, r4
 801606e:	bd10      	pop	{r4, pc}

08016070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016070:	b510      	push	{r4, lr}
 8016072:	2104      	movs	r1, #4
 8016074:	4604      	mov	r4, r0
 8016076:	f00c fa00 	bl	802247a <_ZdlPvj>
 801607a:	4620      	mov	r0, r4
 801607c:	bd10      	pop	{r4, pc}

0801607e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801607e:	b510      	push	{r4, lr}
 8016080:	2104      	movs	r1, #4
 8016082:	4604      	mov	r4, r0
 8016084:	f00c f9f9 	bl	802247a <_ZdlPvj>
 8016088:	4620      	mov	r0, r4
 801608a:	bd10      	pop	{r4, pc}

0801608c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801608c:	b510      	push	{r4, lr}
 801608e:	2104      	movs	r1, #4
 8016090:	4604      	mov	r4, r0
 8016092:	f00c f9f2 	bl	802247a <_ZdlPvj>
 8016096:	4620      	mov	r0, r4
 8016098:	bd10      	pop	{r4, pc}

0801609a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801609a:	b510      	push	{r4, lr}
 801609c:	2104      	movs	r1, #4
 801609e:	4604      	mov	r4, r0
 80160a0:	f00c f9eb 	bl	802247a <_ZdlPvj>
 80160a4:	4620      	mov	r0, r4
 80160a6:	bd10      	pop	{r4, pc}

080160a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80160a8:	b510      	push	{r4, lr}
 80160aa:	2104      	movs	r1, #4
 80160ac:	4604      	mov	r4, r0
 80160ae:	f00c f9e4 	bl	802247a <_ZdlPvj>
 80160b2:	4620      	mov	r0, r4
 80160b4:	bd10      	pop	{r4, pc}

080160b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80160b6:	b510      	push	{r4, lr}
 80160b8:	2104      	movs	r1, #4
 80160ba:	4604      	mov	r4, r0
 80160bc:	f00c f9dd 	bl	802247a <_ZdlPvj>
 80160c0:	4620      	mov	r0, r4
 80160c2:	bd10      	pop	{r4, pc}

080160c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80160c4:	b510      	push	{r4, lr}
 80160c6:	2104      	movs	r1, #4
 80160c8:	4604      	mov	r4, r0
 80160ca:	f00c f9d6 	bl	802247a <_ZdlPvj>
 80160ce:	4620      	mov	r0, r4
 80160d0:	bd10      	pop	{r4, pc}

080160d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80160d2:	b510      	push	{r4, lr}
 80160d4:	2104      	movs	r1, #4
 80160d6:	4604      	mov	r4, r0
 80160d8:	f00c f9cf 	bl	802247a <_ZdlPvj>
 80160dc:	4620      	mov	r0, r4
 80160de:	bd10      	pop	{r4, pc}

080160e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80160e0:	b510      	push	{r4, lr}
 80160e2:	2104      	movs	r1, #4
 80160e4:	4604      	mov	r4, r0
 80160e6:	f00c f9c8 	bl	802247a <_ZdlPvj>
 80160ea:	4620      	mov	r0, r4
 80160ec:	bd10      	pop	{r4, pc}

080160ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80160ee:	b510      	push	{r4, lr}
 80160f0:	2104      	movs	r1, #4
 80160f2:	4604      	mov	r4, r0
 80160f4:	f00c f9c1 	bl	802247a <_ZdlPvj>
 80160f8:	4620      	mov	r0, r4
 80160fa:	bd10      	pop	{r4, pc}

080160fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80160fc:	b510      	push	{r4, lr}
 80160fe:	2104      	movs	r1, #4
 8016100:	4604      	mov	r4, r0
 8016102:	f00c f9ba 	bl	802247a <_ZdlPvj>
 8016106:	4620      	mov	r0, r4
 8016108:	bd10      	pop	{r4, pc}

0801610a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801610a:	b510      	push	{r4, lr}
 801610c:	2104      	movs	r1, #4
 801610e:	4604      	mov	r4, r0
 8016110:	f00c f9b3 	bl	802247a <_ZdlPvj>
 8016114:	4620      	mov	r0, r4
 8016116:	bd10      	pop	{r4, pc}

08016118 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016118:	b510      	push	{r4, lr}
 801611a:	2104      	movs	r1, #4
 801611c:	4604      	mov	r4, r0
 801611e:	f00c f9ac 	bl	802247a <_ZdlPvj>
 8016122:	4620      	mov	r0, r4
 8016124:	bd10      	pop	{r4, pc}

08016126 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016126:	b510      	push	{r4, lr}
 8016128:	2104      	movs	r1, #4
 801612a:	4604      	mov	r4, r0
 801612c:	f00c f9a5 	bl	802247a <_ZdlPvj>
 8016130:	4620      	mov	r0, r4
 8016132:	bd10      	pop	{r4, pc}

08016134 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016134:	b510      	push	{r4, lr}
 8016136:	2104      	movs	r1, #4
 8016138:	4604      	mov	r4, r0
 801613a:	f00c f99e 	bl	802247a <_ZdlPvj>
 801613e:	4620      	mov	r0, r4
 8016140:	bd10      	pop	{r4, pc}

08016142 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016142:	b510      	push	{r4, lr}
 8016144:	2104      	movs	r1, #4
 8016146:	4604      	mov	r4, r0
 8016148:	f00c f997 	bl	802247a <_ZdlPvj>
 801614c:	4620      	mov	r0, r4
 801614e:	bd10      	pop	{r4, pc}

08016150 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016150:	b510      	push	{r4, lr}
 8016152:	2104      	movs	r1, #4
 8016154:	4604      	mov	r4, r0
 8016156:	f00c f990 	bl	802247a <_ZdlPvj>
 801615a:	4620      	mov	r0, r4
 801615c:	bd10      	pop	{r4, pc}

0801615e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801615e:	b510      	push	{r4, lr}
 8016160:	2104      	movs	r1, #4
 8016162:	4604      	mov	r4, r0
 8016164:	f00c f989 	bl	802247a <_ZdlPvj>
 8016168:	4620      	mov	r0, r4
 801616a:	bd10      	pop	{r4, pc}

0801616c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801616c:	b510      	push	{r4, lr}
 801616e:	2104      	movs	r1, #4
 8016170:	4604      	mov	r4, r0
 8016172:	f00c f982 	bl	802247a <_ZdlPvj>
 8016176:	4620      	mov	r0, r4
 8016178:	bd10      	pop	{r4, pc}

0801617a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801617a:	b510      	push	{r4, lr}
 801617c:	2104      	movs	r1, #4
 801617e:	4604      	mov	r4, r0
 8016180:	f00c f97b 	bl	802247a <_ZdlPvj>
 8016184:	4620      	mov	r0, r4
 8016186:	bd10      	pop	{r4, pc}

08016188 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016188:	b510      	push	{r4, lr}
 801618a:	2104      	movs	r1, #4
 801618c:	4604      	mov	r4, r0
 801618e:	f00c f974 	bl	802247a <_ZdlPvj>
 8016192:	4620      	mov	r0, r4
 8016194:	bd10      	pop	{r4, pc}

08016196 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016196:	b510      	push	{r4, lr}
 8016198:	2104      	movs	r1, #4
 801619a:	4604      	mov	r4, r0
 801619c:	f00c f96d 	bl	802247a <_ZdlPvj>
 80161a0:	4620      	mov	r0, r4
 80161a2:	bd10      	pop	{r4, pc}

080161a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80161a4:	b510      	push	{r4, lr}
 80161a6:	2104      	movs	r1, #4
 80161a8:	4604      	mov	r4, r0
 80161aa:	f00c f966 	bl	802247a <_ZdlPvj>
 80161ae:	4620      	mov	r0, r4
 80161b0:	bd10      	pop	{r4, pc}

080161b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80161b2:	b510      	push	{r4, lr}
 80161b4:	2104      	movs	r1, #4
 80161b6:	4604      	mov	r4, r0
 80161b8:	f00c f95f 	bl	802247a <_ZdlPvj>
 80161bc:	4620      	mov	r0, r4
 80161be:	bd10      	pop	{r4, pc}

080161c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80161c0:	b510      	push	{r4, lr}
 80161c2:	2104      	movs	r1, #4
 80161c4:	4604      	mov	r4, r0
 80161c6:	f00c f958 	bl	802247a <_ZdlPvj>
 80161ca:	4620      	mov	r0, r4
 80161cc:	bd10      	pop	{r4, pc}

080161ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80161ce:	b510      	push	{r4, lr}
 80161d0:	2104      	movs	r1, #4
 80161d2:	4604      	mov	r4, r0
 80161d4:	f00c f951 	bl	802247a <_ZdlPvj>
 80161d8:	4620      	mov	r0, r4
 80161da:	bd10      	pop	{r4, pc}

080161dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80161dc:	b510      	push	{r4, lr}
 80161de:	2104      	movs	r1, #4
 80161e0:	4604      	mov	r4, r0
 80161e2:	f00c f94a 	bl	802247a <_ZdlPvj>
 80161e6:	4620      	mov	r0, r4
 80161e8:	bd10      	pop	{r4, pc}
	...

080161ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 80161ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161f0:	b08f      	sub	sp, #60	@ 0x3c
 80161f2:	4616      	mov	r6, r2
 80161f4:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80161f8:	9205      	str	r2, [sp, #20]
 80161fa:	4682      	mov	sl, r0
 80161fc:	460d      	mov	r5, r1
 80161fe:	2a00      	cmp	r2, #0
 8016200:	f000 82b7 	beq.w	8016772 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 8016204:	6830      	ldr	r0, [r6, #0]
 8016206:	6871      	ldr	r1, [r6, #4]
 8016208:	ac0a      	add	r4, sp, #40	@ 0x28
 801620a:	c403      	stmia	r4!, {r0, r1}
 801620c:	6818      	ldr	r0, [r3, #0]
 801620e:	6859      	ldr	r1, [r3, #4]
 8016210:	ac0c      	add	r4, sp, #48	@ 0x30
 8016212:	c403      	stmia	r4!, {r0, r1}
 8016214:	a80a      	add	r0, sp, #40	@ 0x28
 8016216:	f7f9 fd03 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801621a:	4631      	mov	r1, r6
 801621c:	a80c      	add	r0, sp, #48	@ 0x30
 801621e:	f7f9 fd27 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016222:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8016226:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801622a:	bfd7      	itett	le
 801622c:	b293      	uxthle	r3, r2
 801622e:	2301      	movgt	r3, #1
 8016230:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016234:	fb91 f3f3 	sdivle	r3, r1, r3
 8016238:	9300      	str	r3, [sp, #0]
 801623a:	f105 0308 	add.w	r3, r5, #8
 801623e:	9900      	ldr	r1, [sp, #0]
 8016240:	9306      	str	r3, [sp, #24]
 8016242:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8016246:	440b      	add	r3, r1
 8016248:	3b01      	subs	r3, #1
 801624a:	fb93 f3f1 	sdiv	r3, r3, r1
 801624e:	9906      	ldr	r1, [sp, #24]
 8016250:	3b01      	subs	r3, #1
 8016252:	b29b      	uxth	r3, r3
 8016254:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016258:	9307      	str	r3, [sp, #28]
 801625a:	9900      	ldr	r1, [sp, #0]
 801625c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016260:	fb93 f0f1 	sdiv	r0, r3, r1
 8016264:	b284      	uxth	r4, r0
 8016266:	9402      	str	r4, [sp, #8]
 8016268:	9d02      	ldr	r5, [sp, #8]
 801626a:	9c00      	ldr	r4, [sp, #0]
 801626c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8016270:	fb05 3414 	mls	r4, r5, r4, r3
 8016274:	fb14 f402 	smulbb	r4, r4, r2
 8016278:	440c      	add	r4, r1
 801627a:	b2a4      	uxth	r4, r4
 801627c:	2d00      	cmp	r5, #0
 801627e:	d06c      	beq.n	801635a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8016280:	1e6a      	subs	r2, r5, #1
 8016282:	9806      	ldr	r0, [sp, #24]
 8016284:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8016288:	9a07      	ldr	r2, [sp, #28]
 801628a:	ba36      	rev	r6, r6
 801628c:	4416      	add	r6, r2
 801628e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8016292:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8016296:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 80165cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801629a:	4411      	add	r1, r2
 801629c:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80162a0:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 80162a4:	4413      	add	r3, r2
 80162a6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80162aa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80162ae:	9301      	str	r3, [sp, #4]
 80162b0:	4bc4      	ldr	r3, [pc, #784]	@ (80165c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 80162b2:	6818      	ldr	r0, [r3, #0]
 80162b4:	6803      	ldr	r3, [r0, #0]
 80162b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80162b8:	4798      	blx	r3
 80162ba:	4bc3      	ldr	r3, [pc, #780]	@ (80165c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 80162bc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80162c0:	881b      	ldrh	r3, [r3, #0]
 80162c2:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 80162c6:	fb03 2808 	mla	r8, r3, r8, r2
 80162ca:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 80162ce:	436b      	muls	r3, r5
 80162d0:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 80162d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80162d6:	2500      	movs	r5, #0
 80162d8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80162dc:	fb94 f3f3 	sdiv	r3, r4, r3
 80162e0:	9304      	str	r3, [sp, #16]
 80162e2:	f10a 0304 	add.w	r3, sl, #4
 80162e6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80162ea:	4629      	mov	r1, r5
 80162ec:	4618      	mov	r0, r3
 80162ee:	9308      	str	r3, [sp, #32]
 80162f0:	f00d fa83 	bl	80237fa <memset>
 80162f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80162f6:	4543      	cmp	r3, r8
 80162f8:	f240 8236 	bls.w	8016768 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80162fc:	2203      	movs	r2, #3
 80162fe:	2107      	movs	r1, #7
 8016300:	200b      	movs	r0, #11
 8016302:	2c00      	cmp	r4, #0
 8016304:	f000 8131 	beq.w	801656a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 8016308:	7833      	ldrb	r3, [r6, #0]
 801630a:	b2db      	uxtb	r3, r3
 801630c:	2bfe      	cmp	r3, #254	@ 0xfe
 801630e:	d126      	bne.n	801635e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 8016310:	f896 e001 	ldrb.w	lr, [r6, #1]
 8016314:	f896 c002 	ldrb.w	ip, [r6, #2]
 8016318:	f896 b003 	ldrb.w	fp, [r6, #3]
 801631c:	fa5f fe8e 	uxtb.w	lr, lr
 8016320:	fa5f fc8c 	uxtb.w	ip, ip
 8016324:	f36e 0507 	bfi	r5, lr, #0, #8
 8016328:	f36c 250f 	bfi	r5, ip, #8, #8
 801632c:	fa5f fb8b 	uxtb.w	fp, fp
 8016330:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8016334:	f36b 4517 	bfi	r5, fp, #16, #8
 8016338:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801633c:	0e2b      	lsrs	r3, r5, #24
 801633e:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8016342:	fb10 c303 	smlabb	r3, r0, r3, ip
 8016346:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801634a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801634e:	3c01      	subs	r4, #1
 8016350:	1d37      	adds	r7, r6, #4
 8016352:	b2a4      	uxth	r4, r4
 8016354:	605d      	str	r5, [r3, #4]
 8016356:	463e      	mov	r6, r7
 8016358:	e7d3      	b.n	8016302 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801635a:	9e07      	ldr	r6, [sp, #28]
 801635c:	e797      	b.n	801628e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801635e:	2bff      	cmp	r3, #255	@ 0xff
 8016360:	d127      	bne.n	80163b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8016362:	f896 c001 	ldrb.w	ip, [r6, #1]
 8016366:	78b3      	ldrb	r3, [r6, #2]
 8016368:	f896 e003 	ldrb.w	lr, [r6, #3]
 801636c:	f896 b004 	ldrb.w	fp, [r6, #4]
 8016370:	fa5f fc8c 	uxtb.w	ip, ip
 8016374:	b2db      	uxtb	r3, r3
 8016376:	f36c 0507 	bfi	r5, ip, #0, #8
 801637a:	f363 250f 	bfi	r5, r3, #8, #8
 801637e:	fa5f fe8e 	uxtb.w	lr, lr
 8016382:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8016386:	fb12 330e 	smlabb	r3, r2, lr, r3
 801638a:	fa5f fb8b 	uxtb.w	fp, fp
 801638e:	f36e 4517 	bfi	r5, lr, #16, #8
 8016392:	fb11 330c 	smlabb	r3, r1, ip, r3
 8016396:	f36b 651f 	bfi	r5, fp, #24, #8
 801639a:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801639e:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 80163a2:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 80163a6:	3c01      	subs	r4, #1
 80163a8:	1d77      	adds	r7, r6, #5
 80163aa:	b2a4      	uxth	r4, r4
 80163ac:	f8cb 5004 	str.w	r5, [fp, #4]
 80163b0:	e7d1      	b.n	8016356 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80163b2:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 80163b6:	f106 0701 	add.w	r7, r6, #1
 80163ba:	d107      	bne.n	80163cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 80163bc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80163c0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80163c4:	685d      	ldr	r5, [r3, #4]
 80163c6:	3c01      	subs	r4, #1
 80163c8:	b2a4      	uxth	r4, r4
 80163ca:	e7c4      	b.n	8016356 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80163cc:	f1bc 0f01 	cmp.w	ip, #1
 80163d0:	d12c      	bne.n	801642c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 80163d2:	f003 0e03 	and.w	lr, r3, #3
 80163d6:	f1ae 0e02 	sub.w	lr, lr, #2
 80163da:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 80163de:	fa5f fe8e 	uxtb.w	lr, lr
 80163e2:	f003 0c0c 	and.w	ip, r3, #12
 80163e6:	f36e 0507 	bfi	r5, lr, #0, #8
 80163ea:	f1ac 0c08 	sub.w	ip, ip, #8
 80163ee:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80163f2:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80163f6:	f36c 250f 	bfi	r5, ip, #8, #8
 80163fa:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80163fe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016402:	3b02      	subs	r3, #2
 8016404:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8016408:	b2db      	uxtb	r3, r3
 801640a:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801640e:	f363 4517 	bfi	r5, r3, #16, #8
 8016412:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8016416:	0e2e      	lsrs	r6, r5, #24
 8016418:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801641c:	fb10 c606 	smlabb	r6, r0, r6, ip
 8016420:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8016424:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8016428:	6075      	str	r5, [r6, #4]
 801642a:	e7cc      	b.n	80163c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801642c:	f1bc 0f02 	cmp.w	ip, #2
 8016430:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016434:	d12a      	bne.n	801648c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8016436:	1cb7      	adds	r7, r6, #2
 8016438:	7876      	ldrb	r6, [r6, #1]
 801643a:	b2f6      	uxtb	r6, r6
 801643c:	f006 0c0f 	and.w	ip, r6, #15
 8016440:	3b20      	subs	r3, #32
 8016442:	f1ac 0c08 	sub.w	ip, ip, #8
 8016446:	449c      	add	ip, r3
 8016448:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801644c:	fa5f fc8c 	uxtb.w	ip, ip
 8016450:	f36c 0507 	bfi	r5, ip, #0, #8
 8016454:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8016458:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801645c:	fa5f fe8e 	uxtb.w	lr, lr
 8016460:	1136      	asrs	r6, r6, #4
 8016462:	f36e 250f 	bfi	r5, lr, #8, #8
 8016466:	3e08      	subs	r6, #8
 8016468:	4433      	add	r3, r6
 801646a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801646e:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8016472:	b2db      	uxtb	r3, r3
 8016474:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8016478:	f363 4517 	bfi	r5, r3, #16, #8
 801647c:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8016480:	0e2e      	lsrs	r6, r5, #24
 8016482:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8016486:	fb10 e606 	smlabb	r6, r0, r6, lr
 801648a:	e7c9      	b.n	8016420 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801648c:	1c5e      	adds	r6, r3, #1
 801648e:	42a6      	cmp	r6, r4
 8016490:	dd4e      	ble.n	8016530 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8016492:	1b36      	subs	r6, r6, r4
 8016494:	2e00      	cmp	r6, #0
 8016496:	dc4e      	bgt.n	8016536 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8016498:	f8dd b004 	ldr.w	fp, [sp, #4]
 801649c:	2400      	movs	r4, #0
 801649e:	f1bb 0f00 	cmp.w	fp, #0
 80164a2:	f340 8122 	ble.w	80166ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 80164a6:	1c7b      	adds	r3, r7, #1
 80164a8:	9303      	str	r3, [sp, #12]
 80164aa:	783b      	ldrb	r3, [r7, #0]
 80164ac:	b2db      	uxtb	r3, r3
 80164ae:	2bfe      	cmp	r3, #254	@ 0xfe
 80164b0:	d160      	bne.n	8016574 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 80164b2:	7879      	ldrb	r1, [r7, #1]
 80164b4:	78ba      	ldrb	r2, [r7, #2]
 80164b6:	78f8      	ldrb	r0, [r7, #3]
 80164b8:	b2c9      	uxtb	r1, r1
 80164ba:	f361 0507 	bfi	r5, r1, #0, #8
 80164be:	b2d2      	uxtb	r2, r2
 80164c0:	1d3b      	adds	r3, r7, #4
 80164c2:	f362 250f 	bfi	r5, r2, #8, #8
 80164c6:	b2c0      	uxtb	r0, r0
 80164c8:	9303      	str	r3, [sp, #12]
 80164ca:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80164ce:	2303      	movs	r3, #3
 80164d0:	fb13 2200 	smlabb	r2, r3, r0, r2
 80164d4:	f360 4517 	bfi	r5, r0, #16, #8
 80164d8:	2307      	movs	r3, #7
 80164da:	fb13 2101 	smlabb	r1, r3, r1, r2
 80164de:	0e2e      	lsrs	r6, r5, #24
 80164e0:	230b      	movs	r3, #11
 80164e2:	fb13 1306 	smlabb	r3, r3, r6, r1
 80164e6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80164ea:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80164ee:	605d      	str	r5, [r3, #4]
 80164f0:	2601      	movs	r6, #1
 80164f2:	4637      	mov	r7, r6
 80164f4:	0e2b      	lsrs	r3, r5, #24
 80164f6:	ebab 0b07 	sub.w	fp, fp, r7
 80164fa:	eba6 0607 	sub.w	r6, r6, r7
 80164fe:	f040 80d3 	bne.w	80166a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8016502:	b18c      	cbz	r4, 8016528 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8016504:	4648      	mov	r0, r9
 8016506:	00a1      	lsls	r1, r4, #2
 8016508:	f7ea ff06 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 801650c:	9b05      	ldr	r3, [sp, #20]
 801650e:	4622      	mov	r2, r4
 8016510:	4649      	mov	r1, r9
 8016512:	4640      	mov	r0, r8
 8016514:	f7ea ff4e 	bl	80013b4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8016518:	4b2c      	ldr	r3, [pc, #176]	@ (80165cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801651a:	4a2d      	ldr	r2, [pc, #180]	@ (80165d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801651c:	4599      	cmp	r9, r3
 801651e:	bf08      	it	eq
 8016520:	4613      	moveq	r3, r2
 8016522:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016526:	4699      	mov	r9, r3
 8016528:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801652c:	2400      	movs	r4, #0
 801652e:	e0da      	b.n	80166e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8016530:	1ba6      	subs	r6, r4, r6
 8016532:	b2b4      	uxth	r4, r6
 8016534:	e70f      	b.n	8016356 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8016536:	9b01      	ldr	r3, [sp, #4]
 8016538:	9a01      	ldr	r2, [sp, #4]
 801653a:	42b3      	cmp	r3, r6
 801653c:	bfa8      	it	ge
 801653e:	4633      	movge	r3, r6
 8016540:	0e2c      	lsrs	r4, r5, #24
 8016542:	eba2 0b03 	sub.w	fp, r2, r3
 8016546:	eba6 0603 	sub.w	r6, r6, r3
 801654a:	d00b      	beq.n	8016564 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801654c:	f1a9 0104 	sub.w	r1, r9, #4
 8016550:	461a      	mov	r2, r3
 8016552:	2a00      	cmp	r2, #0
 8016554:	dc02      	bgt.n	801655c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8016556:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801655a:	e7a0      	b.n	801649e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801655c:	f841 5f04 	str.w	r5, [r1, #4]!
 8016560:	3a01      	subs	r2, #1
 8016562:	e7f6      	b.n	8016552 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8016564:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8016568:	e799      	b.n	801649e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801656a:	4637      	mov	r7, r6
 801656c:	f8dd b004 	ldr.w	fp, [sp, #4]
 8016570:	4626      	mov	r6, r4
 8016572:	e794      	b.n	801649e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8016574:	2bff      	cmp	r3, #255	@ 0xff
 8016576:	d11d      	bne.n	80165b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8016578:	7878      	ldrb	r0, [r7, #1]
 801657a:	78ba      	ldrb	r2, [r7, #2]
 801657c:	78fe      	ldrb	r6, [r7, #3]
 801657e:	1d7b      	adds	r3, r7, #5
 8016580:	b2c0      	uxtb	r0, r0
 8016582:	9303      	str	r3, [sp, #12]
 8016584:	793b      	ldrb	r3, [r7, #4]
 8016586:	f360 0507 	bfi	r5, r0, #0, #8
 801658a:	b2d2      	uxtb	r2, r2
 801658c:	b2d9      	uxtb	r1, r3
 801658e:	f362 250f 	bfi	r5, r2, #8, #8
 8016592:	b2f6      	uxtb	r6, r6
 8016594:	2303      	movs	r3, #3
 8016596:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801659a:	fb13 2206 	smlabb	r2, r3, r6, r2
 801659e:	2307      	movs	r3, #7
 80165a0:	fb13 2000 	smlabb	r0, r3, r0, r2
 80165a4:	f366 4517 	bfi	r5, r6, #16, #8
 80165a8:	230b      	movs	r3, #11
 80165aa:	f361 651f 	bfi	r5, r1, #24, #8
 80165ae:	fb13 0301 	smlabb	r3, r3, r1, r0
 80165b2:	e798      	b.n	80164e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 80165b4:	119e      	asrs	r6, r3, #6
 80165b6:	d10d      	bne.n	80165d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 80165b8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80165bc:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80165c0:	685d      	ldr	r5, [r3, #4]
 80165c2:	e795      	b.n	80164f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 80165c4:	20014040 	.word	0x20014040
 80165c8:	20014038 	.word	0x20014038
 80165cc:	20000280 	.word	0x20000280
 80165d0:	20000380 	.word	0x20000380
 80165d4:	2e01      	cmp	r6, #1
 80165d6:	ea4f 6115 	mov.w	r1, r5, lsr #24
 80165da:	d12b      	bne.n	8016634 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 80165dc:	f003 0003 	and.w	r0, r3, #3
 80165e0:	3802      	subs	r0, #2
 80165e2:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 80165e6:	b2c0      	uxtb	r0, r0
 80165e8:	f003 020c 	and.w	r2, r3, #12
 80165ec:	f360 0507 	bfi	r5, r0, #0, #8
 80165f0:	3a08      	subs	r2, #8
 80165f2:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80165f6:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80165fa:	f362 250f 	bfi	r5, r2, #8, #8
 80165fe:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8016602:	1e9f      	subs	r7, r3, #2
 8016604:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8016608:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801660c:	b2db      	uxtb	r3, r3
 801660e:	2703      	movs	r7, #3
 8016610:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016614:	fb17 2203 	smlabb	r2, r7, r3, r2
 8016618:	2707      	movs	r7, #7
 801661a:	f363 4517 	bfi	r5, r3, #16, #8
 801661e:	fb17 2000 	smlabb	r0, r7, r0, r2
 8016622:	230b      	movs	r3, #11
 8016624:	fb13 0101 	smlabb	r1, r3, r1, r0
 8016628:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801662c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8016630:	604d      	str	r5, [r1, #4]
 8016632:	e75e      	b.n	80164f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8016634:	2e02      	cmp	r6, #2
 8016636:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801663a:	d12f      	bne.n	801669c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801663c:	7878      	ldrb	r0, [r7, #1]
 801663e:	1cba      	adds	r2, r7, #2
 8016640:	b2c0      	uxtb	r0, r0
 8016642:	9203      	str	r2, [sp, #12]
 8016644:	f000 020f 	and.w	r2, r0, #15
 8016648:	3b20      	subs	r3, #32
 801664a:	3a08      	subs	r2, #8
 801664c:	441a      	add	r2, r3
 801664e:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8016652:	b2d2      	uxtb	r2, r2
 8016654:	f362 0507 	bfi	r5, r2, #0, #8
 8016658:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801665c:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8016660:	b2f6      	uxtb	r6, r6
 8016662:	1100      	asrs	r0, r0, #4
 8016664:	f366 250f 	bfi	r5, r6, #8, #8
 8016668:	3808      	subs	r0, #8
 801666a:	4403      	add	r3, r0
 801666c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8016670:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016674:	b2db      	uxtb	r3, r3
 8016676:	2003      	movs	r0, #3
 8016678:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801667c:	fb10 6603 	smlabb	r6, r0, r3, r6
 8016680:	2007      	movs	r0, #7
 8016682:	f363 4517 	bfi	r5, r3, #16, #8
 8016686:	fb10 6202 	smlabb	r2, r0, r2, r6
 801668a:	230b      	movs	r3, #11
 801668c:	fb13 2101 	smlabb	r1, r3, r1, r2
 8016690:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8016694:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8016698:	604d      	str	r5, [r1, #4]
 801669a:	e729      	b.n	80164f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801669c:	1c5e      	adds	r6, r3, #1
 801669e:	45b3      	cmp	fp, r6
 80166a0:	465f      	mov	r7, fp
 80166a2:	bfa8      	it	ge
 80166a4:	4637      	movge	r7, r6
 80166a6:	e725      	b.n	80164f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 80166a8:	193b      	adds	r3, r7, r4
 80166aa:	2b40      	cmp	r3, #64	@ 0x40
 80166ac:	dd13      	ble.n	80166d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 80166ae:	4648      	mov	r0, r9
 80166b0:	00a1      	lsls	r1, r4, #2
 80166b2:	f7ea fe31 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 80166b6:	4649      	mov	r1, r9
 80166b8:	9b05      	ldr	r3, [sp, #20]
 80166ba:	4622      	mov	r2, r4
 80166bc:	4640      	mov	r0, r8
 80166be:	f7ea fe79 	bl	80013b4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80166c2:	4b2d      	ldr	r3, [pc, #180]	@ (8016778 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 80166c4:	4599      	cmp	r9, r3
 80166c6:	bf0c      	ite	eq
 80166c8:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8016784 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 80166cc:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8016778 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 80166d0:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80166d4:	2400      	movs	r4, #0
 80166d6:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 80166da:	463b      	mov	r3, r7
 80166dc:	3b01      	subs	r3, #1
 80166de:	f842 5b04 	str.w	r5, [r2], #4
 80166e2:	d1fb      	bne.n	80166dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 80166e4:	443c      	add	r4, r7
 80166e6:	9f03      	ldr	r7, [sp, #12]
 80166e8:	e6d9      	b.n	801649e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80166ea:	b15c      	cbz	r4, 8016704 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 80166ec:	00a1      	lsls	r1, r4, #2
 80166ee:	4648      	mov	r0, r9
 80166f0:	f7ea fe12 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 80166f4:	4640      	mov	r0, r8
 80166f6:	9b05      	ldr	r3, [sp, #20]
 80166f8:	4622      	mov	r2, r4
 80166fa:	4649      	mov	r1, r9
 80166fc:	f7ea fe5a 	bl	80013b4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8016700:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016704:	4b1d      	ldr	r3, [pc, #116]	@ (801677c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8016706:	9a01      	ldr	r2, [sp, #4]
 8016708:	881b      	ldrh	r3, [r3, #0]
 801670a:	1a9b      	subs	r3, r3, r2
 801670c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8016710:	9b04      	ldr	r3, [sp, #16]
 8016712:	3301      	adds	r3, #1
 8016714:	9304      	str	r3, [sp, #16]
 8016716:	9a04      	ldr	r2, [sp, #16]
 8016718:	9b00      	ldr	r3, [sp, #0]
 801671a:	4293      	cmp	r3, r2
 801671c:	d11d      	bne.n	801675a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801671e:	9b02      	ldr	r3, [sp, #8]
 8016720:	9a02      	ldr	r2, [sp, #8]
 8016722:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8016726:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801672a:	9808      	ldr	r0, [sp, #32]
 801672c:	f103 0b01 	add.w	fp, r3, #1
 8016730:	9b06      	ldr	r3, [sp, #24]
 8016732:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8016736:	9b07      	ldr	r3, [sp, #28]
 8016738:	2500      	movs	r5, #0
 801673a:	ba3f      	rev	r7, r7
 801673c:	1ba4      	subs	r4, r4, r6
 801673e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8016742:	4629      	mov	r1, r5
 8016744:	441f      	add	r7, r3
 8016746:	b2a4      	uxth	r4, r4
 8016748:	f00d f857 	bl	80237fa <memset>
 801674c:	f8cd b008 	str.w	fp, [sp, #8]
 8016750:	9504      	str	r5, [sp, #16]
 8016752:	f7ea fdd7 	bl	8001304 <_ZN8touchgfx5paint8tearDownEv>
 8016756:	463e      	mov	r6, r7
 8016758:	e5cc      	b.n	80162f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801675a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801675e:	9b01      	ldr	r3, [sp, #4]
 8016760:	1ae4      	subs	r4, r4, r3
 8016762:	1ba4      	subs	r4, r4, r6
 8016764:	b2a4      	uxth	r4, r4
 8016766:	e7f4      	b.n	8016752 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8016768:	4b05      	ldr	r3, [pc, #20]	@ (8016780 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801676a:	6818      	ldr	r0, [r3, #0]
 801676c:	6803      	ldr	r3, [r0, #0]
 801676e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016770:	4798      	blx	r3
 8016772:	b00f      	add	sp, #60	@ 0x3c
 8016774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016778:	20000280 	.word	0x20000280
 801677c:	20014038 	.word	0x20014038
 8016780:	20014040 	.word	0x20014040
 8016784:	20000380 	.word	0x20000380

08016788 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801678c:	b08f      	sub	sp, #60	@ 0x3c
 801678e:	461c      	mov	r4, r3
 8016790:	9205      	str	r2, [sp, #20]
 8016792:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016796:	9100      	str	r1, [sp, #0]
 8016798:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801679a:	9201      	str	r2, [sp, #4]
 801679c:	2a00      	cmp	r2, #0
 801679e:	f000 8115 	beq.w	80169cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 80167a2:	6820      	ldr	r0, [r4, #0]
 80167a4:	6861      	ldr	r1, [r4, #4]
 80167a6:	aa0a      	add	r2, sp, #40	@ 0x28
 80167a8:	c203      	stmia	r2!, {r0, r1}
 80167aa:	6818      	ldr	r0, [r3, #0]
 80167ac:	6859      	ldr	r1, [r3, #4]
 80167ae:	aa0c      	add	r2, sp, #48	@ 0x30
 80167b0:	c203      	stmia	r2!, {r0, r1}
 80167b2:	a80a      	add	r0, sp, #40	@ 0x28
 80167b4:	f7f9 fa34 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80167b8:	4621      	mov	r1, r4
 80167ba:	a80c      	add	r0, sp, #48	@ 0x30
 80167bc:	f7f9 fa58 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80167c0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80167c4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80167c8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80167cc:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80167d0:	bfde      	ittt	le
 80167d2:	b2b3      	uxthle	r3, r6
 80167d4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80167d8:	fb92 f3f3 	sdivle	r3, r2, r3
 80167dc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80167e0:	bfc8      	it	gt
 80167e2:	2301      	movgt	r3, #1
 80167e4:	fb92 f1f3 	sdiv	r1, r2, r3
 80167e8:	fa1f fc81 	uxth.w	ip, r1
 80167ec:	fb0c 2413 	mls	r4, ip, r3, r2
 80167f0:	fb14 f406 	smulbb	r4, r4, r6
 80167f4:	441d      	add	r5, r3
 80167f6:	4404      	add	r4, r0
 80167f8:	4661      	mov	r1, ip
 80167fa:	3d01      	subs	r5, #1
 80167fc:	b2a4      	uxth	r4, r4
 80167fe:	fb95 f5f3 	sdiv	r5, r5, r3
 8016802:	b131      	cbz	r1, 8016812 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8016804:	9b05      	ldr	r3, [sp, #20]
 8016806:	9900      	ldr	r1, [sp, #0]
 8016808:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801680c:	ba1b      	rev	r3, r3
 801680e:	4419      	add	r1, r3
 8016810:	9100      	str	r1, [sp, #0]
 8016812:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016816:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801681a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801681e:	4418      	add	r0, r3
 8016820:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016824:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016828:	441a      	add	r2, r3
 801682a:	4b6a      	ldr	r3, [pc, #424]	@ (80169d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801682c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016830:	6818      	ldr	r0, [r3, #0]
 8016832:	6803      	ldr	r3, [r0, #0]
 8016834:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016836:	4798      	blx	r3
 8016838:	4967      	ldr	r1, [pc, #412]	@ (80169d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801683a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801683e:	880b      	ldrh	r3, [r1, #0]
 8016840:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016844:	9109      	str	r1, [sp, #36]	@ 0x24
 8016846:	fb03 c202 	mla	r2, r3, r2, ip
 801684a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801684e:	4373      	muls	r3, r6
 8016850:	b2ad      	uxth	r5, r5
 8016852:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016856:	00ad      	lsls	r5, r5, #2
 8016858:	9306      	str	r3, [sp, #24]
 801685a:	1d2b      	adds	r3, r5, #4
 801685c:	9307      	str	r3, [sp, #28]
 801685e:	9b01      	ldr	r3, [sp, #4]
 8016860:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016864:	9103      	str	r1, [sp, #12]
 8016866:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801686a:	2c00      	cmp	r4, #0
 801686c:	bf0c      	ite	eq
 801686e:	46c6      	moveq	lr, r8
 8016870:	f04f 0e00 	movne.w	lr, #0
 8016874:	2300      	movs	r3, #0
 8016876:	b292      	uxth	r2, r2
 8016878:	fa1f fe8e 	uxth.w	lr, lr
 801687c:	9302      	str	r3, [sp, #8]
 801687e:	9204      	str	r2, [sp, #16]
 8016880:	9a06      	ldr	r2, [sp, #24]
 8016882:	4282      	cmp	r2, r0
 8016884:	f240 809d 	bls.w	80169c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8016888:	b963      	cbnz	r3, 80168a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801688a:	9b00      	ldr	r3, [sp, #0]
 801688c:	781a      	ldrb	r2, [r3, #0]
 801688e:	0993      	lsrs	r3, r2, #6
 8016890:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016894:	9202      	str	r2, [sp, #8]
 8016896:	1e5a      	subs	r2, r3, #1
 8016898:	2a02      	cmp	r2, #2
 801689a:	d815      	bhi.n	80168c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801689c:	9a00      	ldr	r2, [sp, #0]
 801689e:	3201      	adds	r2, #1
 80168a0:	9200      	str	r2, [sp, #0]
 80168a2:	b29b      	uxth	r3, r3
 80168a4:	b1b4      	cbz	r4, 80168d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 80168a6:	429c      	cmp	r4, r3
 80168a8:	bf95      	itete	ls
 80168aa:	1b1c      	subls	r4, r3, r4
 80168ac:	1ae4      	subhi	r4, r4, r3
 80168ae:	fa1f fa84 	uxthls.w	sl, r4
 80168b2:	b2a4      	uxthhi	r4, r4
 80168b4:	bf87      	ittee	hi
 80168b6:	4671      	movhi	r1, lr
 80168b8:	f04f 0a00 	movhi.w	sl, #0
 80168bc:	fa1f f188 	uxthls.w	r1, r8
 80168c0:	2400      	movls	r4, #0
 80168c2:	4653      	mov	r3, sl
 80168c4:	468e      	mov	lr, r1
 80168c6:	e7db      	b.n	8016880 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 80168c8:	9a00      	ldr	r2, [sp, #0]
 80168ca:	9b00      	ldr	r3, [sp, #0]
 80168cc:	3202      	adds	r2, #2
 80168ce:	785b      	ldrb	r3, [r3, #1]
 80168d0:	9200      	str	r2, [sp, #0]
 80168d2:	e7e7      	b.n	80168a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 80168d4:	2202      	movs	r2, #2
 80168d6:	4615      	mov	r5, r2
 80168d8:	9907      	ldr	r1, [sp, #28]
 80168da:	9a02      	ldr	r2, [sp, #8]
 80168dc:	fb15 1202 	smlabb	r2, r5, r2, r1
 80168e0:	9905      	ldr	r1, [sp, #20]
 80168e2:	4573      	cmp	r3, lr
 80168e4:	f831 c002 	ldrh.w	ip, [r1, r2]
 80168e8:	9a01      	ldr	r2, [sp, #4]
 80168ea:	bf2b      	itete	cs
 80168ec:	eba3 0a0e 	subcs.w	sl, r3, lr
 80168f0:	ebae 0103 	subcc.w	r1, lr, r3
 80168f4:	46f1      	movcs	r9, lr
 80168f6:	4699      	movcc	r9, r3
 80168f8:	bf27      	ittee	cs
 80168fa:	fa1f fa8a 	uxthcs.w	sl, sl
 80168fe:	4621      	movcs	r1, r4
 8016900:	b289      	uxthcc	r1, r1
 8016902:	46a2      	movcc	sl, r4
 8016904:	2aff      	cmp	r2, #255	@ 0xff
 8016906:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801690a:	d105      	bne.n	8016918 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801690c:	4481      	add	r9, r0
 801690e:	4581      	cmp	r9, r0
 8016910:	d045      	beq.n	801699e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8016912:	f820 cb02 	strh.w	ip, [r0], #2
 8016916:	e7fa      	b.n	801690e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8016918:	9d03      	ldr	r5, [sp, #12]
 801691a:	ea4f 222c 	mov.w	r2, ip, asr #8
 801691e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8016922:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8016926:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801692a:	436a      	muls	r2, r5
 801692c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8016930:	fa5f fc8c 	uxtb.w	ip, ip
 8016934:	9208      	str	r2, [sp, #32]
 8016936:	fb0b fb05 	mul.w	fp, fp, r5
 801693a:	fb0c fc05 	mul.w	ip, ip, r5
 801693e:	4481      	add	r9, r0
 8016940:	4581      	cmp	r9, r0
 8016942:	d02c      	beq.n	801699e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8016944:	8802      	ldrh	r2, [r0, #0]
 8016946:	9d04      	ldr	r5, [sp, #16]
 8016948:	9f04      	ldr	r7, [sp, #16]
 801694a:	1216      	asrs	r6, r2, #8
 801694c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016950:	fb16 f605 	smulbb	r6, r6, r5
 8016954:	9d08      	ldr	r5, [sp, #32]
 8016956:	442e      	add	r6, r5
 8016958:	10d5      	asrs	r5, r2, #3
 801695a:	00d2      	lsls	r2, r2, #3
 801695c:	b2d2      	uxtb	r2, r2
 801695e:	fb12 f207 	smulbb	r2, r2, r7
 8016962:	b2b6      	uxth	r6, r6
 8016964:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016968:	4462      	add	r2, ip
 801696a:	fb15 f507 	smulbb	r5, r5, r7
 801696e:	b292      	uxth	r2, r2
 8016970:	1c77      	adds	r7, r6, #1
 8016972:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016976:	1c57      	adds	r7, r2, #1
 8016978:	445d      	add	r5, fp
 801697a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801697e:	b2ad      	uxth	r5, r5
 8016980:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016984:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016988:	4316      	orrs	r6, r2
 801698a:	1c6a      	adds	r2, r5, #1
 801698c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016990:	096d      	lsrs	r5, r5, #5
 8016992:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016996:	432e      	orrs	r6, r5
 8016998:	f820 6b02 	strh.w	r6, [r0], #2
 801699c:	e7d0      	b.n	8016940 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801699e:	4573      	cmp	r3, lr
 80169a0:	d38f      	bcc.n	80168c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 80169a2:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 80169a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80169a8:	fa1f f188 	uxth.w	r1, r8
 80169ac:	1a64      	subs	r4, r4, r1
 80169ae:	881b      	ldrh	r3, [r3, #0]
 80169b0:	b2a4      	uxth	r4, r4
 80169b2:	2c00      	cmp	r4, #0
 80169b4:	eba3 0308 	sub.w	r3, r3, r8
 80169b8:	bf18      	it	ne
 80169ba:	2100      	movne	r1, #0
 80169bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80169c0:	e77f      	b.n	80168c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 80169c2:	4b04      	ldr	r3, [pc, #16]	@ (80169d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80169c4:	6818      	ldr	r0, [r3, #0]
 80169c6:	6803      	ldr	r3, [r0, #0]
 80169c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80169ca:	4798      	blx	r3
 80169cc:	b00f      	add	sp, #60	@ 0x3c
 80169ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169d2:	bf00      	nop
 80169d4:	20014040 	.word	0x20014040
 80169d8:	20014038 	.word	0x20014038

080169dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80169dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169e0:	b09f      	sub	sp, #124	@ 0x7c
 80169e2:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80169e6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80169ea:	9209      	str	r2, [sp, #36]	@ 0x24
 80169ec:	461d      	mov	r5, r3
 80169ee:	4604      	mov	r4, r0
 80169f0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80169f2:	2a00      	cmp	r2, #0
 80169f4:	f000 81eb 	beq.w	8016dce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 80169f8:	6828      	ldr	r0, [r5, #0]
 80169fa:	6869      	ldr	r1, [r5, #4]
 80169fc:	aa1a      	add	r2, sp, #104	@ 0x68
 80169fe:	c203      	stmia	r2!, {r0, r1}
 8016a00:	6818      	ldr	r0, [r3, #0]
 8016a02:	6859      	ldr	r1, [r3, #4]
 8016a04:	aa1c      	add	r2, sp, #112	@ 0x70
 8016a06:	c203      	stmia	r2!, {r0, r1}
 8016a08:	a81a      	add	r0, sp, #104	@ 0x68
 8016a0a:	f7f9 f909 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a0e:	4629      	mov	r1, r5
 8016a10:	a81c      	add	r0, sp, #112	@ 0x70
 8016a12:	f7f9 f92d 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016a16:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016a1a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8016a1e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8016a22:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016a26:	bfd7      	itett	le
 8016a28:	b29a      	uxthle	r2, r3
 8016a2a:	2201      	movgt	r2, #1
 8016a2c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016a30:	fb91 f2f2 	sdivle	r2, r1, r2
 8016a34:	9202      	str	r2, [sp, #8]
 8016a36:	9802      	ldr	r0, [sp, #8]
 8016a38:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8016a3c:	fb92 f0f0 	sdiv	r0, r2, r0
 8016a40:	b280      	uxth	r0, r0
 8016a42:	9010      	str	r0, [sp, #64]	@ 0x40
 8016a44:	9902      	ldr	r1, [sp, #8]
 8016a46:	9802      	ldr	r0, [sp, #8]
 8016a48:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8016a4a:	4488      	add	r8, r1
 8016a4c:	fb05 2510 	mls	r5, r5, r0, r2
 8016a50:	fb15 f503 	smulbb	r5, r5, r3
 8016a54:	f108 38ff 	add.w	r8, r8, #4294967295
 8016a58:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016a5c:	fb98 f8f1 	sdiv	r8, r8, r1
 8016a60:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8016a64:	440d      	add	r5, r1
 8016a66:	4419      	add	r1, r3
 8016a68:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016a6c:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8016a70:	441a      	add	r2, r3
 8016a72:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016a76:	9304      	str	r3, [sp, #16]
 8016a78:	4b95      	ldr	r3, [pc, #596]	@ (8016cd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8016a7a:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8016a7e:	6818      	ldr	r0, [r3, #0]
 8016a80:	6803      	ldr	r3, [r0, #0]
 8016a82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016a84:	4798      	blx	r3
 8016a86:	4b93      	ldr	r3, [pc, #588]	@ (8016cd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016a88:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016a8c:	881a      	ldrh	r2, [r3, #0]
 8016a8e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8016a92:	9318      	str	r3, [sp, #96]	@ 0x60
 8016a94:	fb02 7101 	mla	r1, r2, r1, r7
 8016a98:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016a9c:	4356      	muls	r6, r2
 8016a9e:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8016aa2:	f108 0801 	add.w	r8, r8, #1
 8016aa6:	920a      	str	r2, [sp, #40]	@ 0x28
 8016aa8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016aaa:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8016aae:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016ab0:	fa1f f888 	uxth.w	r8, r8
 8016ab4:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8016ab8:	f108 0204 	add.w	r2, r8, #4
 8016abc:	9211      	str	r2, [sp, #68]	@ 0x44
 8016abe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016ac0:	4b85      	ldr	r3, [pc, #532]	@ (8016cd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016ac2:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8016ac6:	b2ad      	uxth	r5, r5
 8016ac8:	9215      	str	r2, [sp, #84]	@ 0x54
 8016aca:	2d00      	cmp	r5, #0
 8016acc:	9a04      	ldr	r2, [sp, #16]
 8016ace:	f04f 0100 	mov.w	r1, #0
 8016ad2:	bf18      	it	ne
 8016ad4:	2200      	movne	r2, #0
 8016ad6:	1b1b      	subs	r3, r3, r4
 8016ad8:	b292      	uxth	r2, r2
 8016ada:	910d      	str	r1, [sp, #52]	@ 0x34
 8016adc:	9319      	str	r3, [sp, #100]	@ 0x64
 8016ade:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8016ae0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016ae2:	fa11 f383 	uxtah	r3, r1, r3
 8016ae6:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016ae8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016aec:	3304      	adds	r3, #4
 8016aee:	9306      	str	r3, [sp, #24]
 8016af0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016af2:	4283      	cmp	r3, r0
 8016af4:	f240 8166 	bls.w	8016dc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8016af8:	9902      	ldr	r1, [sp, #8]
 8016afa:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8016afe:	fbb5 f3f3 	udiv	r3, r5, r3
 8016b02:	1acb      	subs	r3, r1, r3
 8016b04:	b29b      	uxth	r3, r3
 8016b06:	9316      	str	r3, [sp, #88]	@ 0x58
 8016b08:	9b06      	ldr	r3, [sp, #24]
 8016b0a:	9e06      	ldr	r6, [sp, #24]
 8016b0c:	7859      	ldrb	r1, [r3, #1]
 8016b0e:	789b      	ldrb	r3, [r3, #2]
 8016b10:	7836      	ldrb	r6, [r6, #0]
 8016b12:	9612      	str	r6, [sp, #72]	@ 0x48
 8016b14:	021b      	lsls	r3, r3, #8
 8016b16:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8016b1a:	9906      	ldr	r1, [sp, #24]
 8016b1c:	78c9      	ldrb	r1, [r1, #3]
 8016b1e:	430b      	orrs	r3, r1
 8016b20:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8016b22:	3601      	adds	r6, #1
 8016b24:	4419      	add	r1, r3
 8016b26:	9605      	str	r6, [sp, #20]
 8016b28:	1c4e      	adds	r6, r1, #1
 8016b2a:	9603      	str	r6, [sp, #12]
 8016b2c:	7849      	ldrb	r1, [r1, #1]
 8016b2e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016b30:	0209      	lsls	r1, r1, #8
 8016b32:	5cf3      	ldrb	r3, [r6, r3]
 8016b34:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8016b38:	4319      	orrs	r1, r3
 8016b3a:	b28b      	uxth	r3, r1
 8016b3c:	930c      	str	r3, [sp, #48]	@ 0x30
 8016b3e:	2300      	movs	r3, #0
 8016b40:	f04f 0a01 	mov.w	sl, #1
 8016b44:	9307      	str	r3, [sp, #28]
 8016b46:	469c      	mov	ip, r3
 8016b48:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016b4c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8016b50:	46d3      	mov	fp, sl
 8016b52:	4657      	mov	r7, sl
 8016b54:	930e      	str	r3, [sp, #56]	@ 0x38
 8016b56:	2d00      	cmp	r5, #0
 8016b58:	d07e      	beq.n	8016c58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016b5a:	42af      	cmp	r7, r5
 8016b5c:	d26e      	bcs.n	8016c3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8016b5e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016b60:	9201      	str	r2, [sp, #4]
 8016b62:	1bed      	subs	r5, r5, r7
 8016b64:	4283      	cmp	r3, r0
 8016b66:	b2ad      	uxth	r5, r5
 8016b68:	d802      	bhi.n	8016b70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8016b6a:	e073      	b.n	8016c54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8016b6c:	2b00      	cmp	r3, #0
 8016b6e:	d15f      	bne.n	8016c30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8016b70:	9b03      	ldr	r3, [sp, #12]
 8016b72:	785b      	ldrb	r3, [r3, #1]
 8016b74:	f1cb 0207 	rsb	r2, fp, #7
 8016b78:	4093      	lsls	r3, r2
 8016b7a:	005b      	lsls	r3, r3, #1
 8016b7c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016b80:	9b03      	ldr	r3, [sp, #12]
 8016b82:	781b      	ldrb	r3, [r3, #0]
 8016b84:	fa43 f30b 	asr.w	r3, r3, fp
 8016b88:	b2db      	uxtb	r3, r3
 8016b8a:	4313      	orrs	r3, r2
 8016b8c:	f10b 0201 	add.w	r2, fp, #1
 8016b90:	fa5f fb82 	uxtb.w	fp, r2
 8016b94:	9a03      	ldr	r2, [sp, #12]
 8016b96:	f1bb 0f08 	cmp.w	fp, #8
 8016b9a:	bf15      	itete	ne
 8016b9c:	3201      	addne	r2, #1
 8016b9e:	3202      	addeq	r2, #2
 8016ba0:	9203      	strne	r2, [sp, #12]
 8016ba2:	9203      	streq	r2, [sp, #12]
 8016ba4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016ba6:	b29f      	uxth	r7, r3
 8016ba8:	bf08      	it	eq
 8016baa:	f04f 0b00 	moveq.w	fp, #0
 8016bae:	42ba      	cmp	r2, r7
 8016bb0:	d309      	bcc.n	8016bc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8016bb2:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8016bb6:	2301      	movs	r3, #1
 8016bb8:	9a05      	ldr	r2, [sp, #20]
 8016bba:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8016bbe:	d30e      	bcc.n	8016bde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8016bc0:	469a      	mov	sl, r3
 8016bc2:	2600      	movs	r6, #0
 8016bc4:	e035      	b.n	8016c32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8016bc6:	9b05      	ldr	r3, [sp, #20]
 8016bc8:	429f      	cmp	r7, r3
 8016bca:	d318      	bcc.n	8016bfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8016bcc:	eb04 030a 	add.w	r3, r4, sl
 8016bd0:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8016bd4:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8016bd8:	f10a 0301 	add.w	r3, sl, #1
 8016bdc:	b29b      	uxth	r3, r3
 8016bde:	9a05      	ldr	r2, [sp, #20]
 8016be0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016be4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016be6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016bea:	7116      	strb	r6, [r2, #4]
 8016bec:	f10a 0601 	add.w	r6, sl, #1
 8016bf0:	80d1      	strh	r1, [r2, #6]
 8016bf2:	7156      	strb	r6, [r2, #5]
 8016bf4:	9a05      	ldr	r2, [sp, #20]
 8016bf6:	3201      	adds	r2, #1
 8016bf8:	b292      	uxth	r2, r2
 8016bfa:	9205      	str	r2, [sp, #20]
 8016bfc:	e7e0      	b.n	8016bc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8016bfe:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8016c02:	463a      	mov	r2, r7
 8016c04:	795b      	ldrb	r3, [r3, #5]
 8016c06:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8016c0a:	4426      	add	r6, r4
 8016c0c:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8016c0e:	eb01 0c06 	add.w	ip, r1, r6
 8016c12:	f1bc 0f00 	cmp.w	ip, #0
 8016c16:	dd07      	ble.n	8016c28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8016c18:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016c1c:	f892 c004 	ldrb.w	ip, [r2, #4]
 8016c20:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8016c24:	88d2      	ldrh	r2, [r2, #6]
 8016c26:	e7f1      	b.n	8016c0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8016c28:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8016c2c:	b29b      	uxth	r3, r3
 8016c2e:	e7c3      	b.n	8016bb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8016c30:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8016c32:	970c      	str	r7, [sp, #48]	@ 0x30
 8016c34:	9a01      	ldr	r2, [sp, #4]
 8016c36:	46b4      	mov	ip, r6
 8016c38:	461f      	mov	r7, r3
 8016c3a:	e78c      	b.n	8016b56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8016c3c:	1b7b      	subs	r3, r7, r5
 8016c3e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016c42:	9201      	str	r2, [sp, #4]
 8016c44:	eb0c 0605 	add.w	r6, ip, r5
 8016c48:	b29b      	uxth	r3, r3
 8016c4a:	b2b6      	uxth	r6, r6
 8016c4c:	2500      	movs	r5, #0
 8016c4e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016c50:	4282      	cmp	r2, r0
 8016c52:	d88b      	bhi.n	8016b6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8016c54:	9a01      	ldr	r2, [sp, #4]
 8016c56:	e74b      	b.n	8016af0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8016c58:	4297      	cmp	r7, r2
 8016c5a:	d332      	bcc.n	8016cc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8016c5c:	1abb      	subs	r3, r7, r2
 8016c5e:	b29b      	uxth	r3, r3
 8016c60:	9208      	str	r2, [sp, #32]
 8016c62:	9501      	str	r5, [sp, #4]
 8016c64:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016c66:	29ff      	cmp	r1, #255	@ 0xff
 8016c68:	9908      	ldr	r1, [sp, #32]
 8016c6a:	eb0c 0601 	add.w	r6, ip, r1
 8016c6e:	d135      	bne.n	8016cdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8016c70:	f1a0 0e02 	sub.w	lr, r0, #2
 8016c74:	b2b6      	uxth	r6, r6
 8016c76:	45b4      	cmp	ip, r6
 8016c78:	f040 808c 	bne.w	8016d94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8016c7c:	9908      	ldr	r1, [sp, #32]
 8016c7e:	4297      	cmp	r7, r2
 8016c80:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016c84:	d3e2      	bcc.n	8016c4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8016c86:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8016c88:	9904      	ldr	r1, [sp, #16]
 8016c8a:	8812      	ldrh	r2, [r2, #0]
 8016c8c:	1a52      	subs	r2, r2, r1
 8016c8e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016c92:	9a07      	ldr	r2, [sp, #28]
 8016c94:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8016c96:	3201      	adds	r2, #1
 8016c98:	428a      	cmp	r2, r1
 8016c9a:	9207      	str	r2, [sp, #28]
 8016c9c:	f040 8087 	bne.w	8016dae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8016ca0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8016ca4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8016ca8:	9b04      	ldr	r3, [sp, #16]
 8016caa:	1bed      	subs	r5, r5, r7
 8016cac:	b2ad      	uxth	r5, r5
 8016cae:	2d00      	cmp	r5, #0
 8016cb0:	bf08      	it	eq
 8016cb2:	461a      	moveq	r2, r3
 8016cb4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016cb6:	bf18      	it	ne
 8016cb8:	2200      	movne	r2, #0
 8016cba:	3301      	adds	r3, #1
 8016cbc:	930d      	str	r3, [sp, #52]	@ 0x34
 8016cbe:	b292      	uxth	r2, r2
 8016cc0:	e70d      	b.n	8016ade <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8016cc2:	1bd1      	subs	r1, r2, r7
 8016cc4:	b28b      	uxth	r3, r1
 8016cc6:	9301      	str	r3, [sp, #4]
 8016cc8:	9708      	str	r7, [sp, #32]
 8016cca:	462b      	mov	r3, r5
 8016ccc:	e7ca      	b.n	8016c64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8016cce:	bf00      	nop
 8016cd0:	20014040 	.word	0x20014040
 8016cd4:	20014038 	.word	0x20014038
 8016cd8:	fffff7fb 	.word	0xfffff7fb
 8016cdc:	b2b6      	uxth	r6, r6
 8016cde:	900b      	str	r0, [sp, #44]	@ 0x2c
 8016ce0:	45b4      	cmp	ip, r6
 8016ce2:	d0cb      	beq.n	8016c7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8016ce4:	f10c 0101 	add.w	r1, ip, #1
 8016ce8:	44a4      	add	ip, r4
 8016cea:	9117      	str	r1, [sp, #92]	@ 0x5c
 8016cec:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016cf0:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016cf2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016cf6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016cf8:	f8b1 c000 	ldrh.w	ip, [r1]
 8016cfc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016cfe:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8016d02:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016d06:	fb1e fe01 	smulbb	lr, lr, r1
 8016d0a:	ea4f 2825 	mov.w	r8, r5, asr #8
 8016d0e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016d10:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8016d14:	fb08 e801 	mla	r8, r8, r1, lr
 8016d18:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8016d1c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016d1e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8016d22:	fb19 f901 	smulbb	r9, r9, r1
 8016d26:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8016d2a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016d2c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8016d30:	fb0e 9e01 	mla	lr, lr, r1, r9
 8016d34:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016d38:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016d3a:	fa5f fc8c 	uxtb.w	ip, ip
 8016d3e:	fb1c fc01 	smulbb	ip, ip, r1
 8016d42:	00ed      	lsls	r5, r5, #3
 8016d44:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016d46:	b2ed      	uxtb	r5, r5
 8016d48:	fb05 c501 	mla	r5, r5, r1, ip
 8016d4c:	fa1f f888 	uxth.w	r8, r8
 8016d50:	fa1f fe8e 	uxth.w	lr, lr
 8016d54:	b2ad      	uxth	r5, r5
 8016d56:	f108 0c01 	add.w	ip, r8, #1
 8016d5a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016d5e:	f10e 0901 	add.w	r9, lr, #1
 8016d62:	f105 0c01 	add.w	ip, r5, #1
 8016d66:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016d6a:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016d6e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016d72:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8016d76:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016d7a:	ea4c 0808 	orr.w	r8, ip, r8
 8016d7e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016d80:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8016d84:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016d88:	ea48 0809 	orr.w	r8, r8, r9
 8016d8c:	f821 8b02 	strh.w	r8, [r1], #2
 8016d90:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016d92:	e7a5      	b.n	8016ce0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8016d94:	f10c 0801 	add.w	r8, ip, #1
 8016d98:	44a4      	add	ip, r4
 8016d9a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016d9c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016da0:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016da4:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016da8:	fa1f fc88 	uxth.w	ip, r8
 8016dac:	e763      	b.n	8016c76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8016dae:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016db2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8016db6:	1aad      	subs	r5, r5, r2
 8016db8:	b2ad      	uxth	r5, r5
 8016dba:	2d00      	cmp	r5, #0
 8016dbc:	bf18      	it	ne
 8016dbe:	2200      	movne	r2, #0
 8016dc0:	9201      	str	r2, [sp, #4]
 8016dc2:	e744      	b.n	8016c4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8016dc4:	4b03      	ldr	r3, [pc, #12]	@ (8016dd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8016dc6:	6818      	ldr	r0, [r3, #0]
 8016dc8:	6803      	ldr	r3, [r0, #0]
 8016dca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016dcc:	4798      	blx	r3
 8016dce:	b01f      	add	sp, #124	@ 0x7c
 8016dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dd4:	20014040 	.word	0x20014040

08016dd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8016dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ddc:	b093      	sub	sp, #76	@ 0x4c
 8016dde:	4616      	mov	r6, r2
 8016de0:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8016de4:	9003      	str	r0, [sp, #12]
 8016de6:	460d      	mov	r5, r1
 8016de8:	9201      	str	r2, [sp, #4]
 8016dea:	2a00      	cmp	r2, #0
 8016dec:	f000 8304 	beq.w	80173f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8016df0:	6830      	ldr	r0, [r6, #0]
 8016df2:	6871      	ldr	r1, [r6, #4]
 8016df4:	ac0e      	add	r4, sp, #56	@ 0x38
 8016df6:	c403      	stmia	r4!, {r0, r1}
 8016df8:	6818      	ldr	r0, [r3, #0]
 8016dfa:	6859      	ldr	r1, [r3, #4]
 8016dfc:	ac10      	add	r4, sp, #64	@ 0x40
 8016dfe:	c403      	stmia	r4!, {r0, r1}
 8016e00:	a80e      	add	r0, sp, #56	@ 0x38
 8016e02:	f7f8 ff0d 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016e06:	4631      	mov	r1, r6
 8016e08:	a810      	add	r0, sp, #64	@ 0x40
 8016e0a:	f7f8 ff31 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016e0e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8016e12:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8016e16:	bfd7      	itett	le
 8016e18:	b293      	uxthle	r3, r2
 8016e1a:	2301      	movgt	r3, #1
 8016e1c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016e20:	fb91 f3f3 	sdivle	r3, r1, r3
 8016e24:	9304      	str	r3, [sp, #16]
 8016e26:	f105 0308 	add.w	r3, r5, #8
 8016e2a:	9904      	ldr	r1, [sp, #16]
 8016e2c:	9308      	str	r3, [sp, #32]
 8016e2e:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8016e32:	440b      	add	r3, r1
 8016e34:	3b01      	subs	r3, #1
 8016e36:	fb93 f3f1 	sdiv	r3, r3, r1
 8016e3a:	9908      	ldr	r1, [sp, #32]
 8016e3c:	3b01      	subs	r3, #1
 8016e3e:	b29b      	uxth	r3, r3
 8016e40:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016e44:	9309      	str	r3, [sp, #36]	@ 0x24
 8016e46:	9904      	ldr	r1, [sp, #16]
 8016e48:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8016e4c:	fb93 f0f1 	sdiv	r0, r3, r1
 8016e50:	b284      	uxth	r4, r0
 8016e52:	9405      	str	r4, [sp, #20]
 8016e54:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8016e58:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8016e5c:	fb05 3914 	mls	r9, r5, r4, r3
 8016e60:	fb19 f902 	smulbb	r9, r9, r2
 8016e64:	4489      	add	r9, r1
 8016e66:	fa1f f989 	uxth.w	r9, r9
 8016e6a:	2d00      	cmp	r5, #0
 8016e6c:	d05d      	beq.n	8016f2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8016e6e:	1e6a      	subs	r2, r5, #1
 8016e70:	9808      	ldr	r0, [sp, #32]
 8016e72:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8016e76:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016e78:	fa9a fa8a 	rev.w	sl, sl
 8016e7c:	4492      	add	sl, r2
 8016e7e:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8016e82:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8016e86:	4411      	add	r1, r2
 8016e88:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8016e8c:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8016e90:	4413      	add	r3, r2
 8016e92:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8016e96:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8016e9a:	9302      	str	r3, [sp, #8]
 8016e9c:	4bcb      	ldr	r3, [pc, #812]	@ (80171cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 8016e9e:	6818      	ldr	r0, [r3, #0]
 8016ea0:	6803      	ldr	r3, [r0, #0]
 8016ea2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016ea4:	4798      	blx	r3
 8016ea6:	4bca      	ldr	r3, [pc, #808]	@ (80171d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8016ea8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8016eac:	881b      	ldrh	r3, [r3, #0]
 8016eae:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8016eb2:	fb03 2404 	mla	r4, r3, r4, r2
 8016eb6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016eba:	436b      	muls	r3, r5
 8016ebc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016ec0:	930d      	str	r3, [sp, #52]	@ 0x34
 8016ec2:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8016ec6:	fb99 f3f3 	sdiv	r3, r9, r3
 8016eca:	9306      	str	r3, [sp, #24]
 8016ecc:	9b01      	ldr	r3, [sp, #4]
 8016ece:	43db      	mvns	r3, r3
 8016ed0:	b2db      	uxtb	r3, r3
 8016ed2:	930a      	str	r3, [sp, #40]	@ 0x28
 8016ed4:	9b03      	ldr	r3, [sp, #12]
 8016ed6:	3304      	adds	r3, #4
 8016ed8:	4618      	mov	r0, r3
 8016eda:	2280      	movs	r2, #128	@ 0x80
 8016edc:	2100      	movs	r1, #0
 8016ede:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016ee0:	f00c fc8b 	bl	80237fa <memset>
 8016ee4:	4bbb      	ldr	r3, [pc, #748]	@ (80171d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8016ee6:	9300      	str	r3, [sp, #0]
 8016ee8:	2300      	movs	r3, #0
 8016eea:	f04f 0600 	mov.w	r6, #0
 8016eee:	9307      	str	r3, [sp, #28]
 8016ef0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016ef2:	42a3      	cmp	r3, r4
 8016ef4:	f240 827b 	bls.w	80173ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 8016ef8:	f04f 0e07 	mov.w	lr, #7
 8016efc:	f1b9 0f00 	cmp.w	r9, #0
 8016f00:	f000 8159 	beq.w	80171b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 8016f04:	f89a 5000 	ldrb.w	r5, [sl]
 8016f08:	b2ed      	uxtb	r5, r5
 8016f0a:	11aa      	asrs	r2, r5, #6
 8016f0c:	f10a 0701 	add.w	r7, sl, #1
 8016f10:	d10e      	bne.n	8016f30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 8016f12:	9b03      	ldr	r3, [sp, #12]
 8016f14:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016f18:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016f1c:	88ae      	ldrh	r6, [r5, #4]
 8016f1e:	f109 39ff 	add.w	r9, r9, #4294967295
 8016f22:	fa1f f989 	uxth.w	r9, r9
 8016f26:	46ba      	mov	sl, r7
 8016f28:	e7e8      	b.n	8016efc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8016f2a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8016f2e:	e7a6      	b.n	8016e7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 8016f30:	2a01      	cmp	r2, #1
 8016f32:	d129      	bne.n	8016f88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8016f34:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8016f38:	f005 0203 	and.w	r2, r5, #3
 8016f3c:	3b02      	subs	r3, #2
 8016f3e:	4413      	add	r3, r2
 8016f40:	f003 031f 	and.w	r3, r3, #31
 8016f44:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8016f48:	f363 0604 	bfi	r6, r3, #0, #5
 8016f4c:	3a02      	subs	r2, #2
 8016f4e:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 8016f52:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016f56:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8016f5a:	f362 164a 	bfi	r6, r2, #5, #6
 8016f5e:	3d02      	subs	r5, #2
 8016f60:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8016f64:	f005 051f 	and.w	r5, r5, #31
 8016f68:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016f6c:	2103      	movs	r1, #3
 8016f6e:	fb11 2205 	smlabb	r2, r1, r5, r2
 8016f72:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8016f76:	9a03      	ldr	r2, [sp, #12]
 8016f78:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016f7c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016f80:	f365 26cf 	bfi	r6, r5, #11, #5
 8016f84:	809e      	strh	r6, [r3, #4]
 8016f86:	e7ca      	b.n	8016f1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8016f88:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016f8c:	2a02      	cmp	r2, #2
 8016f8e:	b2ab      	uxth	r3, r5
 8016f90:	d136      	bne.n	8017000 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 8016f92:	2101      	movs	r1, #1
 8016f94:	fb12 1205 	smlabb	r2, r2, r5, r1
 8016f98:	4492      	add	sl, r2
 8016f9a:	463a      	mov	r2, r7
 8016f9c:	4552      	cmp	r2, sl
 8016f9e:	d01c      	beq.n	8016fda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8016fa0:	4694      	mov	ip, r2
 8016fa2:	f04f 0b03 	mov.w	fp, #3
 8016fa6:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8016faa:	7852      	ldrb	r2, [r2, #1]
 8016fac:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8016fb0:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8016fb4:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8016fb8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016fbc:	f001 021f 	and.w	r2, r1, #31
 8016fc0:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8016fc4:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8016fc8:	9a03      	ldr	r2, [sp, #12]
 8016fca:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016fce:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016fd2:	460e      	mov	r6, r1
 8016fd4:	8081      	strh	r1, [r0, #4]
 8016fd6:	4662      	mov	r2, ip
 8016fd8:	e7e0      	b.n	8016f9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8016fda:	4599      	cmp	r9, r3
 8016fdc:	d20b      	bcs.n	8016ff6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8016fde:	eba5 0509 	sub.w	r5, r5, r9
 8016fe2:	2d00      	cmp	r5, #0
 8016fe4:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8016fe8:	f300 8209 	bgt.w	80173fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8016fec:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016ff0:	2301      	movs	r3, #1
 8016ff2:	9307      	str	r3, [sp, #28]
 8016ff4:	e00c      	b.n	8017010 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016ff6:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8016ffa:	eba9 0903 	sub.w	r9, r9, r3
 8016ffe:	e790      	b.n	8016f22 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8017000:	4599      	cmp	r9, r3
 8017002:	d2fa      	bcs.n	8016ffa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 8017004:	eba5 0509 	sub.w	r5, r5, r9
 8017008:	2d00      	cmp	r5, #0
 801700a:	dc1d      	bgt.n	8017048 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801700c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8017010:	f04f 0b00 	mov.w	fp, #0
 8017014:	f1b8 0f00 	cmp.w	r8, #0
 8017018:	f340 81a1 	ble.w	801735e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 801701c:	783b      	ldrb	r3, [r7, #0]
 801701e:	b2db      	uxtb	r3, r3
 8017020:	119a      	asrs	r2, r3, #6
 8017022:	f107 0a01 	add.w	sl, r7, #1
 8017026:	f040 80d7 	bne.w	80171d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801702a:	9a03      	ldr	r2, [sp, #12]
 801702c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017030:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017034:	889e      	ldrh	r6, [r3, #4]
 8017036:	9b01      	ldr	r3, [sp, #4]
 8017038:	2bff      	cmp	r3, #255	@ 0xff
 801703a:	f040 81e9 	bne.w	8017410 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801703e:	8026      	strh	r6, [r4, #0]
 8017040:	f108 38ff 	add.w	r8, r8, #4294967295
 8017044:	3402      	adds	r4, #2
 8017046:	e0be      	b.n	80171c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017048:	9b02      	ldr	r3, [sp, #8]
 801704a:	9a02      	ldr	r2, [sp, #8]
 801704c:	42ab      	cmp	r3, r5
 801704e:	bfa8      	it	ge
 8017050:	462b      	movge	r3, r5
 8017052:	eba2 0803 	sub.w	r8, r2, r3
 8017056:	9a07      	ldr	r2, [sp, #28]
 8017058:	1aed      	subs	r5, r5, r3
 801705a:	2a00      	cmp	r2, #0
 801705c:	d05a      	beq.n	8017114 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801705e:	9a01      	ldr	r2, [sp, #4]
 8017060:	2aff      	cmp	r2, #255	@ 0xff
 8017062:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017066:	d049      	beq.n	80170fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8017068:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801706c:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8017070:	42a3      	cmp	r3, r4
 8017072:	f240 80a5 	bls.w	80171c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8017076:	46bc      	mov	ip, r7
 8017078:	8820      	ldrh	r0, [r4, #0]
 801707a:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801707e:	7879      	ldrb	r1, [r7, #1]
 8017080:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8017084:	b212      	sxth	r2, r2
 8017086:	b291      	uxth	r1, r2
 8017088:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801708c:	120f      	asrs	r7, r1, #8
 801708e:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8017092:	fb1a fa09 	smulbb	sl, sl, r9
 8017096:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801709a:	fb07 a70e 	mla	r7, r7, lr, sl
 801709e:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 80170a2:	00c0      	lsls	r0, r0, #3
 80170a4:	10c9      	asrs	r1, r1, #3
 80170a6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80170aa:	00d2      	lsls	r2, r2, #3
 80170ac:	b2c0      	uxtb	r0, r0
 80170ae:	fb1a fa09 	smulbb	sl, sl, r9
 80170b2:	fb10 f009 	smulbb	r0, r0, r9
 80170b6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80170ba:	b2d2      	uxtb	r2, r2
 80170bc:	b2bf      	uxth	r7, r7
 80170be:	fb01 a10e 	mla	r1, r1, lr, sl
 80170c2:	fb02 020e 	mla	r2, r2, lr, r0
 80170c6:	b289      	uxth	r1, r1
 80170c8:	b292      	uxth	r2, r2
 80170ca:	1c78      	adds	r0, r7, #1
 80170cc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80170d0:	f101 0a01 	add.w	sl, r1, #1
 80170d4:	1c50      	adds	r0, r2, #1
 80170d6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80170da:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 80170de:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80170e2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80170e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80170ea:	4307      	orrs	r7, r0
 80170ec:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80170f0:	ea47 070a 	orr.w	r7, r7, sl
 80170f4:	f824 7b02 	strh.w	r7, [r4], #2
 80170f8:	4667      	mov	r7, ip
 80170fa:	e7b9      	b.n	8017070 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80170fc:	42a3      	cmp	r3, r4
 80170fe:	d95f      	bls.n	80171c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8017100:	463a      	mov	r2, r7
 8017102:	f812 1b02 	ldrb.w	r1, [r2], #2
 8017106:	7878      	ldrb	r0, [r7, #1]
 8017108:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801710c:	f824 1b02 	strh.w	r1, [r4], #2
 8017110:	4617      	mov	r7, r2
 8017112:	e7f3      	b.n	80170fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8017114:	9901      	ldr	r1, [sp, #4]
 8017116:	29ff      	cmp	r1, #255	@ 0xff
 8017118:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801711c:	b2b2      	uxth	r2, r6
 801711e:	d044      	beq.n	80171aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8017120:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017124:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 8017128:	ea4f 2922 	mov.w	r9, r2, asr #8
 801712c:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8017130:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 8017134:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017138:	4608      	mov	r0, r1
 801713a:	fb09 f901 	mul.w	r9, r9, r1
 801713e:	fb0e fe01 	mul.w	lr, lr, r1
 8017142:	00d1      	lsls	r1, r2, #3
 8017144:	b2c9      	uxtb	r1, r1
 8017146:	4341      	muls	r1, r0
 8017148:	429c      	cmp	r4, r3
 801714a:	f4bf af61 	bcs.w	8017010 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801714e:	8822      	ldrh	r2, [r4, #0]
 8017150:	1210      	asrs	r0, r2, #8
 8017152:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8017156:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801715a:	00d2      	lsls	r2, r2, #3
 801715c:	fb00 900a 	mla	r0, r0, sl, r9
 8017160:	b2d2      	uxtb	r2, r2
 8017162:	b280      	uxth	r0, r0
 8017164:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017168:	fb02 120a 	mla	r2, r2, sl, r1
 801716c:	b292      	uxth	r2, r2
 801716e:	f100 0b01 	add.w	fp, r0, #1
 8017172:	fb0c ec0a 	mla	ip, ip, sl, lr
 8017176:	fa1f fc8c 	uxth.w	ip, ip
 801717a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801717e:	1c50      	adds	r0, r2, #1
 8017180:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017184:	f10c 0201 	add.w	r2, ip, #1
 8017188:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801718c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8017190:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8017194:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017198:	ea40 0b0b 	orr.w	fp, r0, fp
 801719c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80171a0:	ea4b 0b0c 	orr.w	fp, fp, ip
 80171a4:	f824 bb02 	strh.w	fp, [r4], #2
 80171a8:	e7ce      	b.n	8017148 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 80171aa:	429c      	cmp	r4, r3
 80171ac:	f4bf af30 	bcs.w	8017010 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80171b0:	f824 2b02 	strh.w	r2, [r4], #2
 80171b4:	e7f9      	b.n	80171aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80171b6:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80171ba:	4657      	mov	r7, sl
 80171bc:	464d      	mov	r5, r9
 80171be:	e727      	b.n	8017010 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80171c0:	2300      	movs	r3, #0
 80171c2:	e716      	b.n	8016ff2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 80171c4:	44bb      	add	fp, r7
 80171c6:	4657      	mov	r7, sl
 80171c8:	e724      	b.n	8017014 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 80171ca:	bf00      	nop
 80171cc:	20014040 	.word	0x20014040
 80171d0:	20014038 	.word	0x20014038
 80171d4:	20000280 	.word	0x20000280
 80171d8:	2a01      	cmp	r2, #1
 80171da:	d12a      	bne.n	8017232 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 80171dc:	f3c6 0104 	ubfx	r1, r6, #0, #5
 80171e0:	f003 0203 	and.w	r2, r3, #3
 80171e4:	3902      	subs	r1, #2
 80171e6:	4411      	add	r1, r2
 80171e8:	f001 011f 	and.w	r1, r1, #31
 80171ec:	f3c3 0081 	ubfx	r0, r3, #2, #2
 80171f0:	f361 0604 	bfi	r6, r1, #0, #5
 80171f4:	3802      	subs	r0, #2
 80171f6:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80171fa:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80171fe:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8017202:	f360 164a 	bfi	r6, r0, #5, #6
 8017206:	3b02      	subs	r3, #2
 8017208:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801720c:	f002 031f 	and.w	r3, r2, #31
 8017210:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8017214:	2203      	movs	r2, #3
 8017216:	f363 26cf 	bfi	r6, r3, #11, #5
 801721a:	fb12 0303 	smlabb	r3, r2, r3, r0
 801721e:	2207      	movs	r2, #7
 8017220:	fb12 3301 	smlabb	r3, r2, r1, r3
 8017224:	9a03      	ldr	r2, [sp, #12]
 8017226:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801722a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801722e:	809e      	strh	r6, [r3, #4]
 8017230:	e701      	b.n	8017036 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 8017232:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8017236:	45a8      	cmp	r8, r5
 8017238:	4647      	mov	r7, r8
 801723a:	bfa8      	it	ge
 801723c:	462f      	movge	r7, r5
 801723e:	2a02      	cmp	r2, #2
 8017240:	d154      	bne.n	80172ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 8017242:	9b01      	ldr	r3, [sp, #4]
 8017244:	2bff      	cmp	r3, #255	@ 0xff
 8017246:	d01a      	beq.n	801727e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8017248:	eb0b 0307 	add.w	r3, fp, r7
 801724c:	2b40      	cmp	r3, #64	@ 0x40
 801724e:	dd16      	ble.n	801727e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8017250:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8017254:	4649      	mov	r1, r9
 8017256:	9800      	ldr	r0, [sp, #0]
 8017258:	f7ea f85e 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 801725c:	465a      	mov	r2, fp
 801725e:	9b01      	ldr	r3, [sp, #4]
 8017260:	9900      	ldr	r1, [sp, #0]
 8017262:	4620      	mov	r0, r4
 8017264:	f7ea f882 	bl	800136c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017268:	9b00      	ldr	r3, [sp, #0]
 801726a:	461a      	mov	r2, r3
 801726c:	4b6c      	ldr	r3, [pc, #432]	@ (8017420 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801726e:	429a      	cmp	r2, r3
 8017270:	bf0c      	ite	eq
 8017272:	4b6c      	ldreq	r3, [pc, #432]	@ (8017424 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8017274:	4b6a      	ldrne	r3, [pc, #424]	@ (8017420 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017276:	9300      	str	r3, [sp, #0]
 8017278:	444c      	add	r4, r9
 801727a:	f04f 0b00 	mov.w	fp, #0
 801727e:	4652      	mov	r2, sl
 8017280:	2100      	movs	r1, #0
 8017282:	42a9      	cmp	r1, r5
 8017284:	da2c      	bge.n	80172e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8017286:	4694      	mov	ip, r2
 8017288:	f04f 0903 	mov.w	r9, #3
 801728c:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8017290:	7852      	ldrb	r2, [r2, #1]
 8017292:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8017296:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801729a:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801729e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80172a2:	f003 021f 	and.w	r2, r3, #31
 80172a6:	fb19 000e 	smlabb	r0, r9, lr, r0
 80172aa:	f04f 0e07 	mov.w	lr, #7
 80172ae:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80172b2:	9a03      	ldr	r2, [sp, #12]
 80172b4:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80172b8:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80172bc:	42b9      	cmp	r1, r7
 80172be:	461e      	mov	r6, r3
 80172c0:	8083      	strh	r3, [r0, #4]
 80172c2:	da0a      	bge.n	80172da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 80172c4:	9a01      	ldr	r2, [sp, #4]
 80172c6:	2aff      	cmp	r2, #255	@ 0xff
 80172c8:	bf15      	itete	ne
 80172ca:	9a00      	ldrne	r2, [sp, #0]
 80172cc:	8023      	strheq	r3, [r4, #0]
 80172ce:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 80172d2:	3402      	addeq	r4, #2
 80172d4:	bf18      	it	ne
 80172d6:	f10b 0b01 	addne.w	fp, fp, #1
 80172da:	3101      	adds	r1, #1
 80172dc:	4662      	mov	r2, ip
 80172de:	e7d0      	b.n	8017282 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 80172e0:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80172e4:	eba8 0807 	sub.w	r8, r8, r7
 80172e8:	1bed      	subs	r5, r5, r7
 80172ea:	e76c      	b.n	80171c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80172ec:	9b01      	ldr	r3, [sp, #4]
 80172ee:	2bff      	cmp	r3, #255	@ 0xff
 80172f0:	eba8 0807 	sub.w	r8, r8, r7
 80172f4:	eba5 0507 	sub.w	r5, r5, r7
 80172f8:	fa1f f986 	uxth.w	r9, r6
 80172fc:	d027      	beq.n	801734e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80172fe:	eb0b 0307 	add.w	r3, fp, r7
 8017302:	2b40      	cmp	r3, #64	@ 0x40
 8017304:	dd18      	ble.n	8017338 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 8017306:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801730a:	4619      	mov	r1, r3
 801730c:	9800      	ldr	r0, [sp, #0]
 801730e:	930c      	str	r3, [sp, #48]	@ 0x30
 8017310:	f7ea f802 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 8017314:	465a      	mov	r2, fp
 8017316:	9b01      	ldr	r3, [sp, #4]
 8017318:	9900      	ldr	r1, [sp, #0]
 801731a:	4620      	mov	r0, r4
 801731c:	f7ea f826 	bl	800136c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017320:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017322:	441c      	add	r4, r3
 8017324:	9b00      	ldr	r3, [sp, #0]
 8017326:	461a      	mov	r2, r3
 8017328:	4b3d      	ldr	r3, [pc, #244]	@ (8017420 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801732a:	429a      	cmp	r2, r3
 801732c:	bf0c      	ite	eq
 801732e:	4b3d      	ldreq	r3, [pc, #244]	@ (8017424 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8017330:	4b3b      	ldrne	r3, [pc, #236]	@ (8017420 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017332:	9300      	str	r3, [sp, #0]
 8017334:	f04f 0b00 	mov.w	fp, #0
 8017338:	9b00      	ldr	r3, [sp, #0]
 801733a:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801733e:	463b      	mov	r3, r7
 8017340:	2b00      	cmp	r3, #0
 8017342:	f43f af3f 	beq.w	80171c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8017346:	f822 9b02 	strh.w	r9, [r2], #2
 801734a:	3b01      	subs	r3, #1
 801734c:	e7f8      	b.n	8017340 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801734e:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8017352:	42a7      	cmp	r7, r4
 8017354:	f67f af37 	bls.w	80171c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017358:	f824 9b02 	strh.w	r9, [r4], #2
 801735c:	e7f9      	b.n	8017352 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801735e:	f1bb 0f00 	cmp.w	fp, #0
 8017362:	d00c      	beq.n	801737e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8017364:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8017368:	4641      	mov	r1, r8
 801736a:	9800      	ldr	r0, [sp, #0]
 801736c:	f7e9 ffd4 	bl	8001318 <_ZN8touchgfx5paint9flushLineEPmi>
 8017370:	4620      	mov	r0, r4
 8017372:	9b01      	ldr	r3, [sp, #4]
 8017374:	9900      	ldr	r1, [sp, #0]
 8017376:	465a      	mov	r2, fp
 8017378:	f7e9 fff8 	bl	800136c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801737c:	4444      	add	r4, r8
 801737e:	4b2a      	ldr	r3, [pc, #168]	@ (8017428 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8017380:	9a02      	ldr	r2, [sp, #8]
 8017382:	881b      	ldrh	r3, [r3, #0]
 8017384:	1a9b      	subs	r3, r3, r2
 8017386:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801738a:	9b06      	ldr	r3, [sp, #24]
 801738c:	3301      	adds	r3, #1
 801738e:	9306      	str	r3, [sp, #24]
 8017390:	9a06      	ldr	r2, [sp, #24]
 8017392:	9b04      	ldr	r3, [sp, #16]
 8017394:	4293      	cmp	r3, r2
 8017396:	d120      	bne.n	80173da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8017398:	9b05      	ldr	r3, [sp, #20]
 801739a:	9a05      	ldr	r2, [sp, #20]
 801739c:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 80173a0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80173a4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80173a6:	f103 0801 	add.w	r8, r3, #1
 80173aa:	9b08      	ldr	r3, [sp, #32]
 80173ac:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80173b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80173b2:	ba3f      	rev	r7, r7
 80173b4:	2280      	movs	r2, #128	@ 0x80
 80173b6:	2100      	movs	r1, #0
 80173b8:	441f      	add	r7, r3
 80173ba:	eba9 0905 	sub.w	r9, r9, r5
 80173be:	f00c fa1c 	bl	80237fa <memset>
 80173c2:	2300      	movs	r3, #0
 80173c4:	fa1f f989 	uxth.w	r9, r9
 80173c8:	f04f 0600 	mov.w	r6, #0
 80173cc:	f8cd 8014 	str.w	r8, [sp, #20]
 80173d0:	9306      	str	r3, [sp, #24]
 80173d2:	f7e9 ff97 	bl	8001304 <_ZN8touchgfx5paint8tearDownEv>
 80173d6:	46ba      	mov	sl, r7
 80173d8:	e58a      	b.n	8016ef0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 80173da:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 80173de:	9b02      	ldr	r3, [sp, #8]
 80173e0:	eba9 0903 	sub.w	r9, r9, r3
 80173e4:	eba9 0505 	sub.w	r5, r9, r5
 80173e8:	fa1f f985 	uxth.w	r9, r5
 80173ec:	e7f1      	b.n	80173d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 80173ee:	4b0f      	ldr	r3, [pc, #60]	@ (801742c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 80173f0:	6818      	ldr	r0, [r3, #0]
 80173f2:	6803      	ldr	r3, [r0, #0]
 80173f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80173f6:	4798      	blx	r3
 80173f8:	b013      	add	sp, #76	@ 0x4c
 80173fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173fe:	9b02      	ldr	r3, [sp, #8]
 8017400:	9a02      	ldr	r2, [sp, #8]
 8017402:	42ab      	cmp	r3, r5
 8017404:	bfa8      	it	ge
 8017406:	462b      	movge	r3, r5
 8017408:	eba2 0803 	sub.w	r8, r2, r3
 801740c:	1aed      	subs	r5, r5, r3
 801740e:	e626      	b.n	801705e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 8017410:	f108 38ff 	add.w	r8, r8, #4294967295
 8017414:	fa1f f986 	uxth.w	r9, r6
 8017418:	2500      	movs	r5, #0
 801741a:	2701      	movs	r7, #1
 801741c:	e76f      	b.n	80172fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801741e:	bf00      	nop
 8017420:	20000280 	.word	0x20000280
 8017424:	20000380 	.word	0x20000380
 8017428:	20014038 	.word	0x20014038
 801742c:	20014040 	.word	0x20014040

08017430 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8017430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017434:	b08f      	sub	sp, #60	@ 0x3c
 8017436:	461c      	mov	r4, r3
 8017438:	9203      	str	r2, [sp, #12]
 801743a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801743e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017440:	9202      	str	r2, [sp, #8]
 8017442:	460f      	mov	r7, r1
 8017444:	2a00      	cmp	r2, #0
 8017446:	f000 8128 	beq.w	801769a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801744a:	6820      	ldr	r0, [r4, #0]
 801744c:	6861      	ldr	r1, [r4, #4]
 801744e:	aa0a      	add	r2, sp, #40	@ 0x28
 8017450:	c203      	stmia	r2!, {r0, r1}
 8017452:	6818      	ldr	r0, [r3, #0]
 8017454:	6859      	ldr	r1, [r3, #4]
 8017456:	aa0c      	add	r2, sp, #48	@ 0x30
 8017458:	c203      	stmia	r2!, {r0, r1}
 801745a:	a80a      	add	r0, sp, #40	@ 0x28
 801745c:	f7f8 fbe0 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017460:	4621      	mov	r1, r4
 8017462:	a80c      	add	r0, sp, #48	@ 0x30
 8017464:	f7f8 fc04 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017468:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801746c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8017470:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8017474:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8017478:	bfde      	ittt	le
 801747a:	b2b3      	uxthle	r3, r6
 801747c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8017480:	fb92 f3f3 	sdivle	r3, r2, r3
 8017484:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017488:	bfc8      	it	gt
 801748a:	2301      	movgt	r3, #1
 801748c:	fb92 f1f3 	sdiv	r1, r2, r3
 8017490:	fa1f fc81 	uxth.w	ip, r1
 8017494:	fb0c 2413 	mls	r4, ip, r3, r2
 8017498:	fb14 f406 	smulbb	r4, r4, r6
 801749c:	441d      	add	r5, r3
 801749e:	4404      	add	r4, r0
 80174a0:	4661      	mov	r1, ip
 80174a2:	3d01      	subs	r5, #1
 80174a4:	b2a4      	uxth	r4, r4
 80174a6:	fb95 f5f3 	sdiv	r5, r5, r3
 80174aa:	b121      	cbz	r1, 80174b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 80174ac:	9b03      	ldr	r3, [sp, #12]
 80174ae:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80174b2:	ba1b      	rev	r3, r3
 80174b4:	441f      	add	r7, r3
 80174b6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80174ba:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80174be:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80174c2:	4418      	add	r0, r3
 80174c4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80174c8:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80174cc:	441a      	add	r2, r3
 80174ce:	4b74      	ldr	r3, [pc, #464]	@ (80176a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80174d0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80174d4:	6818      	ldr	r0, [r3, #0]
 80174d6:	6803      	ldr	r3, [r0, #0]
 80174d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80174da:	4798      	blx	r3
 80174dc:	4a71      	ldr	r2, [pc, #452]	@ (80176a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80174de:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80174e2:	8813      	ldrh	r3, [r2, #0]
 80174e4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80174e8:	9209      	str	r2, [sp, #36]	@ 0x24
 80174ea:	fb03 c101 	mla	r1, r3, r1, ip
 80174ee:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80174f2:	4373      	muls	r3, r6
 80174f4:	b2ad      	uxth	r5, r5
 80174f6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80174fa:	00ad      	lsls	r5, r5, #2
 80174fc:	2c00      	cmp	r4, #0
 80174fe:	9304      	str	r3, [sp, #16]
 8017500:	f105 0304 	add.w	r3, r5, #4
 8017504:	9305      	str	r3, [sp, #20]
 8017506:	bf0c      	ite	eq
 8017508:	46c8      	moveq	r8, r9
 801750a:	f04f 0800 	movne.w	r8, #0
 801750e:	2300      	movs	r3, #0
 8017510:	fa1f f888 	uxth.w	r8, r8
 8017514:	9301      	str	r3, [sp, #4]
 8017516:	9a04      	ldr	r2, [sp, #16]
 8017518:	4282      	cmp	r2, r0
 801751a:	f240 80b9 	bls.w	8017690 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801751e:	b95b      	cbnz	r3, 8017538 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8017520:	783a      	ldrb	r2, [r7, #0]
 8017522:	0993      	lsrs	r3, r2, #6
 8017524:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017528:	9201      	str	r2, [sp, #4]
 801752a:	1e5a      	subs	r2, r3, #1
 801752c:	2a02      	cmp	r2, #2
 801752e:	bf8d      	iteet	hi
 8017530:	787b      	ldrbhi	r3, [r7, #1]
 8017532:	3701      	addls	r7, #1
 8017534:	b29b      	uxthls	r3, r3
 8017536:	3702      	addhi	r7, #2
 8017538:	b184      	cbz	r4, 801755c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801753a:	429c      	cmp	r4, r3
 801753c:	bf95      	itete	ls
 801753e:	1b1c      	subls	r4, r3, r4
 8017540:	1ae4      	subhi	r4, r4, r3
 8017542:	fa1f fa84 	uxthls.w	sl, r4
 8017546:	b2a4      	uxthhi	r4, r4
 8017548:	bf87      	ittee	hi
 801754a:	46c4      	movhi	ip, r8
 801754c:	f04f 0a00 	movhi.w	sl, #0
 8017550:	fa1f fc89 	uxthls.w	ip, r9
 8017554:	2400      	movls	r4, #0
 8017556:	4653      	mov	r3, sl
 8017558:	46e0      	mov	r8, ip
 801755a:	e7dc      	b.n	8017516 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801755c:	2204      	movs	r2, #4
 801755e:	4615      	mov	r5, r2
 8017560:	9905      	ldr	r1, [sp, #20]
 8017562:	9a01      	ldr	r2, [sp, #4]
 8017564:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017568:	9903      	ldr	r1, [sp, #12]
 801756a:	588a      	ldr	r2, [r1, r2]
 801756c:	4543      	cmp	r3, r8
 801756e:	bf27      	ittee	cs
 8017570:	eba3 0a08 	subcs.w	sl, r3, r8
 8017574:	46c6      	movcs	lr, r8
 8017576:	eba8 0c03 	subcc.w	ip, r8, r3
 801757a:	469e      	movcc	lr, r3
 801757c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8017580:	bf27      	ittee	cs
 8017582:	fa1f fa8a 	uxthcs.w	sl, sl
 8017586:	46a4      	movcs	ip, r4
 8017588:	fa1f fc8c 	uxthcc.w	ip, ip
 801758c:	46a2      	movcc	sl, r4
 801758e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8017592:	2900      	cmp	r1, #0
 8017594:	d066      	beq.n	8017664 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8017596:	29ff      	cmp	r1, #255	@ 0xff
 8017598:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801759c:	d114      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801759e:	9d02      	ldr	r5, [sp, #8]
 80175a0:	2dff      	cmp	r5, #255	@ 0xff
 80175a2:	d111      	bne.n	80175c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80175a4:	0951      	lsrs	r1, r2, #5
 80175a6:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80175aa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80175ae:	f026 0607 	bic.w	r6, r6, #7
 80175b2:	430e      	orrs	r6, r1
 80175b4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80175b8:	4316      	orrs	r6, r2
 80175ba:	b2b6      	uxth	r6, r6
 80175bc:	4486      	add	lr, r0
 80175be:	4586      	cmp	lr, r0
 80175c0:	d051      	beq.n	8017666 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80175c2:	f820 6b02 	strh.w	r6, [r0], #2
 80175c6:	e7fa      	b.n	80175be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80175c8:	9d02      	ldr	r5, [sp, #8]
 80175ca:	4369      	muls	r1, r5
 80175cc:	1c4d      	adds	r5, r1, #1
 80175ce:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80175d2:	122d      	asrs	r5, r5, #8
 80175d4:	ea6f 0b05 	mvn.w	fp, r5
 80175d8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80175dc:	b2ad      	uxth	r5, r5
 80175de:	b2f6      	uxtb	r6, r6
 80175e0:	b2d2      	uxtb	r2, r2
 80175e2:	fb11 f105 	smulbb	r1, r1, r5
 80175e6:	fb16 f605 	smulbb	r6, r6, r5
 80175ea:	fb12 f205 	smulbb	r2, r2, r5
 80175ee:	b289      	uxth	r1, r1
 80175f0:	b2b6      	uxth	r6, r6
 80175f2:	b292      	uxth	r2, r2
 80175f4:	9106      	str	r1, [sp, #24]
 80175f6:	9607      	str	r6, [sp, #28]
 80175f8:	9208      	str	r2, [sp, #32]
 80175fa:	4486      	add	lr, r0
 80175fc:	fa5f fb8b 	uxtb.w	fp, fp
 8017600:	4586      	cmp	lr, r0
 8017602:	d030      	beq.n	8017666 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017604:	8802      	ldrh	r2, [r0, #0]
 8017606:	9906      	ldr	r1, [sp, #24]
 8017608:	1216      	asrs	r6, r2, #8
 801760a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801760e:	10d5      	asrs	r5, r2, #3
 8017610:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017614:	fb06 160b 	mla	r6, r6, fp, r1
 8017618:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801761c:	9907      	ldr	r1, [sp, #28]
 801761e:	00d2      	lsls	r2, r2, #3
 8017620:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017624:	fb05 150b 	mla	r5, r5, fp, r1
 8017628:	b2d2      	uxtb	r2, r2
 801762a:	9908      	ldr	r1, [sp, #32]
 801762c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017630:	b2b6      	uxth	r6, r6
 8017632:	fb02 120b 	mla	r2, r2, fp, r1
 8017636:	b292      	uxth	r2, r2
 8017638:	1c71      	adds	r1, r6, #1
 801763a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801763e:	1c51      	adds	r1, r2, #1
 8017640:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017644:	b2ad      	uxth	r5, r5
 8017646:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801764a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801764e:	4316      	orrs	r6, r2
 8017650:	1c6a      	adds	r2, r5, #1
 8017652:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017656:	096d      	lsrs	r5, r5, #5
 8017658:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801765c:	432e      	orrs	r6, r5
 801765e:	f820 6b02 	strh.w	r6, [r0], #2
 8017662:	e7cd      	b.n	8017600 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8017664:	4470      	add	r0, lr
 8017666:	4543      	cmp	r3, r8
 8017668:	f4ff af75 	bcc.w	8017556 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801766c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8017670:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017672:	fa1f fc89 	uxth.w	ip, r9
 8017676:	eba4 040c 	sub.w	r4, r4, ip
 801767a:	881b      	ldrh	r3, [r3, #0]
 801767c:	b2a4      	uxth	r4, r4
 801767e:	2c00      	cmp	r4, #0
 8017680:	eba3 0309 	sub.w	r3, r3, r9
 8017684:	bf18      	it	ne
 8017686:	f04f 0c00 	movne.w	ip, #0
 801768a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801768e:	e762      	b.n	8017556 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8017690:	4b03      	ldr	r3, [pc, #12]	@ (80176a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8017692:	6818      	ldr	r0, [r3, #0]
 8017694:	6803      	ldr	r3, [r0, #0]
 8017696:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017698:	4798      	blx	r3
 801769a:	b00f      	add	sp, #60	@ 0x3c
 801769c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176a0:	20014040 	.word	0x20014040
 80176a4:	20014038 	.word	0x20014038

080176a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80176a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176ac:	b093      	sub	sp, #76	@ 0x4c
 80176ae:	461c      	mov	r4, r3
 80176b0:	9205      	str	r2, [sp, #20]
 80176b2:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 80176b6:	9101      	str	r1, [sp, #4]
 80176b8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80176ba:	9202      	str	r2, [sp, #8]
 80176bc:	2a00      	cmp	r2, #0
 80176be:	f000 812c 	beq.w	801791a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80176c2:	6820      	ldr	r0, [r4, #0]
 80176c4:	6861      	ldr	r1, [r4, #4]
 80176c6:	aa0e      	add	r2, sp, #56	@ 0x38
 80176c8:	c203      	stmia	r2!, {r0, r1}
 80176ca:	6818      	ldr	r0, [r3, #0]
 80176cc:	6859      	ldr	r1, [r3, #4]
 80176ce:	aa10      	add	r2, sp, #64	@ 0x40
 80176d0:	c203      	stmia	r2!, {r0, r1}
 80176d2:	a80e      	add	r0, sp, #56	@ 0x38
 80176d4:	f7f8 faa4 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80176d8:	4621      	mov	r1, r4
 80176da:	a810      	add	r0, sp, #64	@ 0x40
 80176dc:	f7f8 fac8 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80176e0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80176e4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80176e8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80176ec:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80176f0:	bfde      	ittt	le
 80176f2:	b2b3      	uxthle	r3, r6
 80176f4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80176f8:	fb92 f3f3 	sdivle	r3, r2, r3
 80176fc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8017700:	bfc8      	it	gt
 8017702:	2301      	movgt	r3, #1
 8017704:	fb92 f1f3 	sdiv	r1, r2, r3
 8017708:	fa1f fc81 	uxth.w	ip, r1
 801770c:	fb0c 2413 	mls	r4, ip, r3, r2
 8017710:	fb14 f406 	smulbb	r4, r4, r6
 8017714:	441d      	add	r5, r3
 8017716:	4404      	add	r4, r0
 8017718:	4661      	mov	r1, ip
 801771a:	3d01      	subs	r5, #1
 801771c:	b2a4      	uxth	r4, r4
 801771e:	fb95 f5f3 	sdiv	r5, r5, r3
 8017722:	b131      	cbz	r1, 8017732 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8017724:	9b05      	ldr	r3, [sp, #20]
 8017726:	9901      	ldr	r1, [sp, #4]
 8017728:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801772c:	ba1b      	rev	r3, r3
 801772e:	4419      	add	r1, r3
 8017730:	9101      	str	r1, [sp, #4]
 8017732:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8017736:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801773a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801773e:	4418      	add	r0, r3
 8017740:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8017744:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8017748:	441a      	add	r2, r3
 801774a:	4b75      	ldr	r3, [pc, #468]	@ (8017920 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801774c:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8017750:	6818      	ldr	r0, [r3, #0]
 8017752:	6803      	ldr	r3, [r0, #0]
 8017754:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017756:	4798      	blx	r3
 8017758:	4972      	ldr	r1, [pc, #456]	@ (8017924 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801775a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801775e:	880b      	ldrh	r3, [r1, #0]
 8017760:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8017764:	910d      	str	r1, [sp, #52]	@ 0x34
 8017766:	fb03 c202 	mla	r2, r3, r2, ip
 801776a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801776e:	4373      	muls	r3, r6
 8017770:	b2ad      	uxth	r5, r5
 8017772:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017776:	00ad      	lsls	r5, r5, #2
 8017778:	9308      	str	r3, [sp, #32]
 801777a:	1d2b      	adds	r3, r5, #4
 801777c:	9309      	str	r3, [sp, #36]	@ 0x24
 801777e:	9b02      	ldr	r3, [sp, #8]
 8017780:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017784:	9106      	str	r1, [sp, #24]
 8017786:	43da      	mvns	r2, r3
 8017788:	2c00      	cmp	r4, #0
 801778a:	bf0c      	ite	eq
 801778c:	46dc      	moveq	ip, fp
 801778e:	f04f 0c00 	movne.w	ip, #0
 8017792:	2300      	movs	r3, #0
 8017794:	b2d2      	uxtb	r2, r2
 8017796:	fa1f fc8c 	uxth.w	ip, ip
 801779a:	9303      	str	r3, [sp, #12]
 801779c:	9207      	str	r2, [sp, #28]
 801779e:	9a08      	ldr	r2, [sp, #32]
 80177a0:	4282      	cmp	r2, r0
 80177a2:	f240 80b5 	bls.w	8017910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80177a6:	b963      	cbnz	r3, 80177c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80177a8:	9b01      	ldr	r3, [sp, #4]
 80177aa:	781a      	ldrb	r2, [r3, #0]
 80177ac:	0993      	lsrs	r3, r2, #6
 80177ae:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80177b2:	9203      	str	r2, [sp, #12]
 80177b4:	1e5a      	subs	r2, r3, #1
 80177b6:	2a02      	cmp	r2, #2
 80177b8:	d815      	bhi.n	80177e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 80177ba:	9a01      	ldr	r2, [sp, #4]
 80177bc:	3201      	adds	r2, #1
 80177be:	9201      	str	r2, [sp, #4]
 80177c0:	b29b      	uxth	r3, r3
 80177c2:	b1b4      	cbz	r4, 80177f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 80177c4:	429c      	cmp	r4, r3
 80177c6:	bf95      	itete	ls
 80177c8:	1b1c      	subls	r4, r3, r4
 80177ca:	1ae4      	subhi	r4, r4, r3
 80177cc:	fa1f f884 	uxthls.w	r8, r4
 80177d0:	b2a4      	uxthhi	r4, r4
 80177d2:	bf87      	ittee	hi
 80177d4:	4666      	movhi	r6, ip
 80177d6:	f04f 0800 	movhi.w	r8, #0
 80177da:	fa1f f68b 	uxthls.w	r6, fp
 80177de:	2400      	movls	r4, #0
 80177e0:	4643      	mov	r3, r8
 80177e2:	46b4      	mov	ip, r6
 80177e4:	e7db      	b.n	801779e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 80177e6:	9a01      	ldr	r2, [sp, #4]
 80177e8:	9b01      	ldr	r3, [sp, #4]
 80177ea:	3202      	adds	r2, #2
 80177ec:	785b      	ldrb	r3, [r3, #1]
 80177ee:	9201      	str	r2, [sp, #4]
 80177f0:	e7e7      	b.n	80177c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80177f2:	2203      	movs	r2, #3
 80177f4:	4615      	mov	r5, r2
 80177f6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80177f8:	9a03      	ldr	r2, [sp, #12]
 80177fa:	fb15 1202 	smlabb	r2, r5, r2, r1
 80177fe:	9905      	ldr	r1, [sp, #20]
 8017800:	4563      	cmp	r3, ip
 8017802:	eb01 0502 	add.w	r5, r1, r2
 8017806:	9902      	ldr	r1, [sp, #8]
 8017808:	bf29      	itett	cs
 801780a:	eba3 080c 	subcs.w	r8, r3, ip
 801780e:	ebac 0603 	subcc.w	r6, ip, r3
 8017812:	fa1f f888 	uxthcs.w	r8, r8
 8017816:	46e1      	movcs	r9, ip
 8017818:	bf2f      	iteee	cs
 801781a:	4626      	movcs	r6, r4
 801781c:	b2b6      	uxthcc	r6, r6
 801781e:	4699      	movcc	r9, r3
 8017820:	46a0      	movcc	r8, r4
 8017822:	29ff      	cmp	r1, #255	@ 0xff
 8017824:	d04a      	beq.n	80178bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8017826:	9f06      	ldr	r7, [sp, #24]
 8017828:	78a9      	ldrb	r1, [r5, #2]
 801782a:	9004      	str	r0, [sp, #16]
 801782c:	4379      	muls	r1, r7
 801782e:	910a      	str	r1, [sp, #40]	@ 0x28
 8017830:	7869      	ldrb	r1, [r5, #1]
 8017832:	4379      	muls	r1, r7
 8017834:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017836:	9905      	ldr	r1, [sp, #20]
 8017838:	5c8a      	ldrb	r2, [r1, r2]
 801783a:	437a      	muls	r2, r7
 801783c:	920c      	str	r2, [sp, #48]	@ 0x30
 801783e:	46ca      	mov	sl, r9
 8017840:	f1ba 0f00 	cmp.w	sl, #0
 8017844:	d03d      	beq.n	80178c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8017846:	9a04      	ldr	r2, [sp, #16]
 8017848:	9f07      	ldr	r7, [sp, #28]
 801784a:	8812      	ldrh	r2, [r2, #0]
 801784c:	1215      	asrs	r5, r2, #8
 801784e:	46be      	mov	lr, r7
 8017850:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017854:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8017856:	10d1      	asrs	r1, r2, #3
 8017858:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801785c:	fb05 750e 	mla	r5, r5, lr, r7
 8017860:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017864:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8017866:	00d2      	lsls	r2, r2, #3
 8017868:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801786c:	fb01 710e 	mla	r1, r1, lr, r7
 8017870:	b2d2      	uxtb	r2, r2
 8017872:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8017874:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017878:	b2ad      	uxth	r5, r5
 801787a:	fb02 720e 	mla	r2, r2, lr, r7
 801787e:	b292      	uxth	r2, r2
 8017880:	f105 0e01 	add.w	lr, r5, #1
 8017884:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8017888:	f102 0e01 	add.w	lr, r2, #1
 801788c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8017890:	b289      	uxth	r1, r1
 8017892:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017896:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801789a:	4315      	orrs	r5, r2
 801789c:	1c4a      	adds	r2, r1, #1
 801789e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80178a2:	0949      	lsrs	r1, r1, #5
 80178a4:	9a04      	ldr	r2, [sp, #16]
 80178a6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80178aa:	430d      	orrs	r5, r1
 80178ac:	f822 5b02 	strh.w	r5, [r2], #2
 80178b0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80178b4:	9204      	str	r2, [sp, #16]
 80178b6:	fa1f fa8a 	uxth.w	sl, sl
 80178ba:	e7c1      	b.n	8017840 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 80178bc:	4649      	mov	r1, r9
 80178be:	4686      	mov	lr, r0
 80178c0:	b999      	cbnz	r1, 80178ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80178c2:	4563      	cmp	r3, ip
 80178c4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 80178c8:	d38a      	bcc.n	80177e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80178ca:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 80178ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80178d0:	fa1f f68b 	uxth.w	r6, fp
 80178d4:	1ba4      	subs	r4, r4, r6
 80178d6:	881b      	ldrh	r3, [r3, #0]
 80178d8:	b2a4      	uxth	r4, r4
 80178da:	2c00      	cmp	r4, #0
 80178dc:	eba3 030b 	sub.w	r3, r3, fp
 80178e0:	bf18      	it	ne
 80178e2:	2600      	movne	r6, #0
 80178e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80178e8:	e77a      	b.n	80177e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80178ea:	78aa      	ldrb	r2, [r5, #2]
 80178ec:	4f0e      	ldr	r7, [pc, #56]	@ (8017928 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80178ee:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80178f2:	786a      	ldrb	r2, [r5, #1]
 80178f4:	00d2      	lsls	r2, r2, #3
 80178f6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80178fa:	ea4a 0202 	orr.w	r2, sl, r2
 80178fe:	f895 a000 	ldrb.w	sl, [r5]
 8017902:	3901      	subs	r1, #1
 8017904:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8017908:	f82e 2b02 	strh.w	r2, [lr], #2
 801790c:	b289      	uxth	r1, r1
 801790e:	e7d7      	b.n	80178c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8017910:	4b03      	ldr	r3, [pc, #12]	@ (8017920 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8017912:	6818      	ldr	r0, [r3, #0]
 8017914:	6803      	ldr	r3, [r0, #0]
 8017916:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017918:	4798      	blx	r3
 801791a:	b013      	add	sp, #76	@ 0x4c
 801791c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017920:	20014040 	.word	0x20014040
 8017924:	20014038 	.word	0x20014038
 8017928:	fffff800 	.word	0xfffff800

0801792c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801792c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017930:	b09d      	sub	sp, #116	@ 0x74
 8017932:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8017936:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801793a:	920e      	str	r2, [sp, #56]	@ 0x38
 801793c:	461c      	mov	r4, r3
 801793e:	4683      	mov	fp, r0
 8017940:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8017942:	2a00      	cmp	r2, #0
 8017944:	f000 81e0 	beq.w	8017d08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8017948:	6820      	ldr	r0, [r4, #0]
 801794a:	6861      	ldr	r1, [r4, #4]
 801794c:	aa18      	add	r2, sp, #96	@ 0x60
 801794e:	c203      	stmia	r2!, {r0, r1}
 8017950:	6818      	ldr	r0, [r3, #0]
 8017952:	6859      	ldr	r1, [r3, #4]
 8017954:	aa1a      	add	r2, sp, #104	@ 0x68
 8017956:	c203      	stmia	r2!, {r0, r1}
 8017958:	a818      	add	r0, sp, #96	@ 0x60
 801795a:	f7f8 f961 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801795e:	4621      	mov	r1, r4
 8017960:	a81a      	add	r0, sp, #104	@ 0x68
 8017962:	f7f8 f985 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017966:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801796a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801796e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017972:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017976:	bfd7      	itett	le
 8017978:	b29a      	uxthle	r2, r3
 801797a:	2201      	movgt	r2, #1
 801797c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017980:	fb91 f2f2 	sdivle	r2, r1, r2
 8017984:	9202      	str	r2, [sp, #8]
 8017986:	9802      	ldr	r0, [sp, #8]
 8017988:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801798c:	fb92 f0f0 	sdiv	r0, r2, r0
 8017990:	b280      	uxth	r0, r0
 8017992:	900f      	str	r0, [sp, #60]	@ 0x3c
 8017994:	9902      	ldr	r1, [sp, #8]
 8017996:	9802      	ldr	r0, [sp, #8]
 8017998:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801799a:	440c      	add	r4, r1
 801799c:	fb05 2510 	mls	r5, r5, r0, r2
 80179a0:	fb15 f503 	smulbb	r5, r5, r3
 80179a4:	3c01      	subs	r4, #1
 80179a6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 80179aa:	fb94 f4f1 	sdiv	r4, r4, r1
 80179ae:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 80179b2:	440d      	add	r5, r1
 80179b4:	4419      	add	r1, r3
 80179b6:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 80179ba:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 80179be:	441a      	add	r2, r3
 80179c0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80179c4:	9306      	str	r3, [sp, #24]
 80179c6:	4bb3      	ldr	r3, [pc, #716]	@ (8017c94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 80179c8:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 80179cc:	6818      	ldr	r0, [r3, #0]
 80179ce:	6803      	ldr	r3, [r0, #0]
 80179d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80179d2:	4798      	blx	r3
 80179d4:	4bb0      	ldr	r3, [pc, #704]	@ (8017c98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 80179d6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 80179da:	881a      	ldrh	r2, [r3, #0]
 80179dc:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 80179e0:	9316      	str	r3, [sp, #88]	@ 0x58
 80179e2:	fb02 7101 	mla	r1, r2, r1, r7
 80179e6:	3401      	adds	r4, #1
 80179e8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 80179ec:	b2a4      	uxth	r4, r4
 80179ee:	4356      	muls	r6, r2
 80179f0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 80179f4:	00a4      	lsls	r4, r4, #2
 80179f6:	920a      	str	r2, [sp, #40]	@ 0x28
 80179f8:	1d22      	adds	r2, r4, #4
 80179fa:	b2ad      	uxth	r5, r5
 80179fc:	9213      	str	r2, [sp, #76]	@ 0x4c
 80179fe:	4ba7      	ldr	r3, [pc, #668]	@ (8017c9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8017a00:	9a06      	ldr	r2, [sp, #24]
 8017a02:	2d00      	cmp	r5, #0
 8017a04:	bf0c      	ite	eq
 8017a06:	4611      	moveq	r1, r2
 8017a08:	2100      	movne	r1, #0
 8017a0a:	2200      	movs	r2, #0
 8017a0c:	eba3 030b 	sub.w	r3, r3, fp
 8017a10:	b289      	uxth	r1, r1
 8017a12:	920d      	str	r2, [sp, #52]	@ 0x34
 8017a14:	9317      	str	r3, [sp, #92]	@ 0x5c
 8017a16:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017a18:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017a1a:	fa12 f383 	uxtah	r3, r2, r3
 8017a1e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017a20:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017a24:	3304      	adds	r3, #4
 8017a26:	9308      	str	r3, [sp, #32]
 8017a28:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017a2a:	4543      	cmp	r3, r8
 8017a2c:	f240 8167 	bls.w	8017cfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8017a30:	9a02      	ldr	r2, [sp, #8]
 8017a32:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8017a36:	fbb5 f3f3 	udiv	r3, r5, r3
 8017a3a:	1ad3      	subs	r3, r2, r3
 8017a3c:	b29b      	uxth	r3, r3
 8017a3e:	9314      	str	r3, [sp, #80]	@ 0x50
 8017a40:	9b08      	ldr	r3, [sp, #32]
 8017a42:	9808      	ldr	r0, [sp, #32]
 8017a44:	785a      	ldrb	r2, [r3, #1]
 8017a46:	789b      	ldrb	r3, [r3, #2]
 8017a48:	7800      	ldrb	r0, [r0, #0]
 8017a4a:	9010      	str	r0, [sp, #64]	@ 0x40
 8017a4c:	021b      	lsls	r3, r3, #8
 8017a4e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017a52:	9a08      	ldr	r2, [sp, #32]
 8017a54:	78d2      	ldrb	r2, [r2, #3]
 8017a56:	4313      	orrs	r3, r2
 8017a58:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017a5a:	3001      	adds	r0, #1
 8017a5c:	441a      	add	r2, r3
 8017a5e:	9007      	str	r0, [sp, #28]
 8017a60:	1c50      	adds	r0, r2, #1
 8017a62:	9005      	str	r0, [sp, #20]
 8017a64:	7852      	ldrb	r2, [r2, #1]
 8017a66:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017a68:	0212      	lsls	r2, r2, #8
 8017a6a:	5cc3      	ldrb	r3, [r0, r3]
 8017a6c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017a70:	431a      	orrs	r2, r3
 8017a72:	b293      	uxth	r3, r2
 8017a74:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017a76:	2300      	movs	r3, #0
 8017a78:	9309      	str	r3, [sp, #36]	@ 0x24
 8017a7a:	2301      	movs	r3, #1
 8017a7c:	9301      	str	r3, [sp, #4]
 8017a7e:	9304      	str	r3, [sp, #16]
 8017a80:	2300      	movs	r3, #0
 8017a82:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8017a86:	9303      	str	r3, [sp, #12]
 8017a88:	f04f 0e01 	mov.w	lr, #1
 8017a8c:	2d00      	cmp	r5, #0
 8017a8e:	d07c      	beq.n	8017b8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8017a90:	45ae      	cmp	lr, r5
 8017a92:	d26b      	bcs.n	8017b6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8017a94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017a96:	eba5 050e 	sub.w	r5, r5, lr
 8017a9a:	4543      	cmp	r3, r8
 8017a9c:	b2ad      	uxth	r5, r5
 8017a9e:	460c      	mov	r4, r1
 8017aa0:	d802      	bhi.n	8017aa8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8017aa2:	e070      	b.n	8017b86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8017aa4:	2b00      	cmp	r3, #0
 8017aa6:	d15c      	bne.n	8017b62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017aa8:	9b05      	ldr	r3, [sp, #20]
 8017aaa:	9a04      	ldr	r2, [sp, #16]
 8017aac:	785b      	ldrb	r3, [r3, #1]
 8017aae:	9904      	ldr	r1, [sp, #16]
 8017ab0:	f1c2 0207 	rsb	r2, r2, #7
 8017ab4:	4093      	lsls	r3, r2
 8017ab6:	005b      	lsls	r3, r3, #1
 8017ab8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017abc:	9b05      	ldr	r3, [sp, #20]
 8017abe:	781b      	ldrb	r3, [r3, #0]
 8017ac0:	410b      	asrs	r3, r1
 8017ac2:	3101      	adds	r1, #1
 8017ac4:	b2c9      	uxtb	r1, r1
 8017ac6:	2908      	cmp	r1, #8
 8017ac8:	9104      	str	r1, [sp, #16]
 8017aca:	9905      	ldr	r1, [sp, #20]
 8017acc:	bf0a      	itet	eq
 8017ace:	3102      	addeq	r1, #2
 8017ad0:	3101      	addne	r1, #1
 8017ad2:	9105      	streq	r1, [sp, #20]
 8017ad4:	b2db      	uxtb	r3, r3
 8017ad6:	bf0a      	itet	eq
 8017ad8:	2100      	moveq	r1, #0
 8017ada:	9105      	strne	r1, [sp, #20]
 8017adc:	9104      	streq	r1, [sp, #16]
 8017ade:	4313      	orrs	r3, r2
 8017ae0:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8017ae2:	b29a      	uxth	r2, r3
 8017ae4:	4291      	cmp	r1, r2
 8017ae6:	d30a      	bcc.n	8017afe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8017ae8:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8017aec:	2301      	movs	r3, #1
 8017aee:	9907      	ldr	r1, [sp, #28]
 8017af0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017af4:	d30f      	bcc.n	8017b16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8017af6:	2100      	movs	r1, #0
 8017af8:	9301      	str	r3, [sp, #4]
 8017afa:	9103      	str	r1, [sp, #12]
 8017afc:	e032      	b.n	8017b64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8017afe:	9b07      	ldr	r3, [sp, #28]
 8017b00:	429a      	cmp	r2, r3
 8017b02:	d318      	bcc.n	8017b36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8017b04:	9b01      	ldr	r3, [sp, #4]
 8017b06:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8017b0a:	445b      	add	r3, fp
 8017b0c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8017b10:	9b01      	ldr	r3, [sp, #4]
 8017b12:	3301      	adds	r3, #1
 8017b14:	b29b      	uxth	r3, r3
 8017b16:	9907      	ldr	r1, [sp, #28]
 8017b18:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8017b1c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017b20:	7108      	strb	r0, [r1, #4]
 8017b22:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8017b24:	80c8      	strh	r0, [r1, #6]
 8017b26:	9801      	ldr	r0, [sp, #4]
 8017b28:	3001      	adds	r0, #1
 8017b2a:	7148      	strb	r0, [r1, #5]
 8017b2c:	9907      	ldr	r1, [sp, #28]
 8017b2e:	3101      	adds	r1, #1
 8017b30:	b289      	uxth	r1, r1
 8017b32:	9107      	str	r1, [sp, #28]
 8017b34:	e7df      	b.n	8017af6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8017b36:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8017b3a:	4611      	mov	r1, r2
 8017b3c:	795b      	ldrb	r3, [r3, #5]
 8017b3e:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8017b42:	4458      	add	r0, fp
 8017b44:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8017b46:	4406      	add	r6, r0
 8017b48:	2e00      	cmp	r6, #0
 8017b4a:	dd06      	ble.n	8017b5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8017b4c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017b50:	790e      	ldrb	r6, [r1, #4]
 8017b52:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8017b56:	88c9      	ldrh	r1, [r1, #6]
 8017b58:	e7f4      	b.n	8017b44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8017b5a:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8017b5e:	b29b      	uxth	r3, r3
 8017b60:	e7c5      	b.n	8017aee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8017b62:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017b64:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017b66:	4621      	mov	r1, r4
 8017b68:	469e      	mov	lr, r3
 8017b6a:	e78f      	b.n	8017a8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8017b6c:	9a03      	ldr	r2, [sp, #12]
 8017b6e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017b72:	442a      	add	r2, r5
 8017b74:	ebae 0305 	sub.w	r3, lr, r5
 8017b78:	b292      	uxth	r2, r2
 8017b7a:	b29b      	uxth	r3, r3
 8017b7c:	9203      	str	r2, [sp, #12]
 8017b7e:	2500      	movs	r5, #0
 8017b80:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017b82:	4542      	cmp	r2, r8
 8017b84:	d88e      	bhi.n	8017aa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8017b86:	4621      	mov	r1, r4
 8017b88:	e74e      	b.n	8017a28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8017b8a:	458e      	cmp	lr, r1
 8017b8c:	bf29      	itett	cs
 8017b8e:	ebae 0301 	subcs.w	r3, lr, r1
 8017b92:	eba1 040e 	subcc.w	r4, r1, lr
 8017b96:	b29b      	uxthcs	r3, r3
 8017b98:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8017b9a:	bf2f      	iteee	cs
 8017b9c:	462c      	movcs	r4, r5
 8017b9e:	b2a4      	uxthcc	r4, r4
 8017ba0:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8017ba4:	462b      	movcc	r3, r5
 8017ba6:	f04f 0900 	mov.w	r9, #0
 8017baa:	9a03      	ldr	r2, [sp, #12]
 8017bac:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8017bae:	444a      	add	r2, r9
 8017bb0:	4548      	cmp	r0, r9
 8017bb2:	b292      	uxth	r2, r2
 8017bb4:	d074      	beq.n	8017ca0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8017bb6:	445a      	add	r2, fp
 8017bb8:	2004      	movs	r0, #4
 8017bba:	4605      	mov	r5, r0
 8017bbc:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8017bc0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017bc2:	fb15 0202 	smlabb	r2, r5, r2, r0
 8017bc6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017bc8:	5880      	ldr	r0, [r0, r2]
 8017bca:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8017bce:	d014      	beq.n	8017bfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8017bd0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017bd4:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8017bd8:	d112      	bne.n	8017c00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8017bda:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017bdc:	2aff      	cmp	r2, #255	@ 0xff
 8017bde:	d10f      	bne.n	8017c00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8017be0:	0942      	lsrs	r2, r0, #5
 8017be2:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8017be6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017bea:	f025 0507 	bic.w	r5, r5, #7
 8017bee:	4315      	orrs	r5, r2
 8017bf0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017bf4:	4305      	orrs	r5, r0
 8017bf6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8017bfa:	f109 0901 	add.w	r9, r9, #1
 8017bfe:	e7d4      	b.n	8017baa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8017c00:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8017c04:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017c08:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8017c0c:	9215      	str	r2, [sp, #84]	@ 0x54
 8017c0e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017c10:	fb02 fa0a 	mul.w	sl, r2, sl
 8017c14:	f10a 0201 	add.w	r2, sl, #1
 8017c18:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8017c1c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017c20:	1212      	asrs	r2, r2, #8
 8017c22:	fa1f fa82 	uxth.w	sl, r2
 8017c26:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8017c2a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017c2e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017c32:	43d2      	mvns	r2, r2
 8017c34:	b2d2      	uxtb	r2, r2
 8017c36:	fb16 f60a 	smulbb	r6, r6, sl
 8017c3a:	fa5f fc8c 	uxtb.w	ip, ip
 8017c3e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017c42:	b2c0      	uxtb	r0, r0
 8017c44:	fb07 6702 	mla	r7, r7, r2, r6
 8017c48:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8017c4c:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8017c4e:	fb10 f00a 	smulbb	r0, r0, sl
 8017c52:	fb0c 0002 	mla	r0, ip, r2, r0
 8017c56:	b2ed      	uxtb	r5, r5
 8017c58:	b2bf      	uxth	r7, r7
 8017c5a:	fb15 f50a 	smulbb	r5, r5, sl
 8017c5e:	b280      	uxth	r0, r0
 8017c60:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017c64:	fb06 5602 	mla	r6, r6, r2, r5
 8017c68:	1c7a      	adds	r2, r7, #1
 8017c6a:	1c45      	adds	r5, r0, #1
 8017c6c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017c70:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017c74:	b2b6      	uxth	r6, r6
 8017c76:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017c7a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017c7e:	432f      	orrs	r7, r5
 8017c80:	1c75      	adds	r5, r6, #1
 8017c82:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017c86:	096d      	lsrs	r5, r5, #5
 8017c88:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017c8c:	432f      	orrs	r7, r5
 8017c8e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8017c92:	e7b2      	b.n	8017bfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8017c94:	20014040 	.word	0x20014040
 8017c98:	20014038 	.word	0x20014038
 8017c9c:	fffff7fb 	.word	0xfffff7fb
 8017ca0:	9203      	str	r2, [sp, #12]
 8017ca2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017ca4:	458e      	cmp	lr, r1
 8017ca6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017caa:	f4ff af68 	bcc.w	8017b7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8017cae:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8017cb0:	9906      	ldr	r1, [sp, #24]
 8017cb2:	8812      	ldrh	r2, [r2, #0]
 8017cb4:	1a52      	subs	r2, r2, r1
 8017cb6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017cba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017cbc:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8017cbe:	3201      	adds	r2, #1
 8017cc0:	428a      	cmp	r2, r1
 8017cc2:	9209      	str	r2, [sp, #36]	@ 0x24
 8017cc4:	d111      	bne.n	8017cea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8017cc6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8017cca:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8017cce:	9b06      	ldr	r3, [sp, #24]
 8017cd0:	eba5 0509 	sub.w	r5, r5, r9
 8017cd4:	b2ad      	uxth	r5, r5
 8017cd6:	2d00      	cmp	r5, #0
 8017cd8:	bf08      	it	eq
 8017cda:	4619      	moveq	r1, r3
 8017cdc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017cde:	bf18      	it	ne
 8017ce0:	2100      	movne	r1, #0
 8017ce2:	3301      	adds	r3, #1
 8017ce4:	930d      	str	r3, [sp, #52]	@ 0x34
 8017ce6:	b289      	uxth	r1, r1
 8017ce8:	e695      	b.n	8017a16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8017cea:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017cee:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8017cf2:	1b2d      	subs	r5, r5, r4
 8017cf4:	b2ad      	uxth	r5, r5
 8017cf6:	2d00      	cmp	r5, #0
 8017cf8:	bf18      	it	ne
 8017cfa:	2400      	movne	r4, #0
 8017cfc:	e740      	b.n	8017b80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8017cfe:	4b04      	ldr	r3, [pc, #16]	@ (8017d10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8017d00:	6818      	ldr	r0, [r3, #0]
 8017d02:	6803      	ldr	r3, [r0, #0]
 8017d04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017d06:	4798      	blx	r3
 8017d08:	b01d      	add	sp, #116	@ 0x74
 8017d0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d0e:	bf00      	nop
 8017d10:	20014040 	.word	0x20014040

08017d14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8017d14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d18:	b09f      	sub	sp, #124	@ 0x7c
 8017d1a:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8017d1e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8017d22:	920a      	str	r2, [sp, #40]	@ 0x28
 8017d24:	461d      	mov	r5, r3
 8017d26:	4604      	mov	r4, r0
 8017d28:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017d2a:	2a00      	cmp	r2, #0
 8017d2c:	f000 81fa 	beq.w	8018124 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8017d30:	6828      	ldr	r0, [r5, #0]
 8017d32:	6869      	ldr	r1, [r5, #4]
 8017d34:	aa1a      	add	r2, sp, #104	@ 0x68
 8017d36:	c203      	stmia	r2!, {r0, r1}
 8017d38:	6818      	ldr	r0, [r3, #0]
 8017d3a:	6859      	ldr	r1, [r3, #4]
 8017d3c:	aa1c      	add	r2, sp, #112	@ 0x70
 8017d3e:	c203      	stmia	r2!, {r0, r1}
 8017d40:	a81a      	add	r0, sp, #104	@ 0x68
 8017d42:	f7f7 ff6d 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d46:	4629      	mov	r1, r5
 8017d48:	a81c      	add	r0, sp, #112	@ 0x70
 8017d4a:	f7f7 ff91 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d4e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017d52:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017d56:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8017d5a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017d5e:	bfd7      	itett	le
 8017d60:	b29a      	uxthle	r2, r3
 8017d62:	2201      	movgt	r2, #1
 8017d64:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017d68:	fb91 f2f2 	sdivle	r2, r1, r2
 8017d6c:	9201      	str	r2, [sp, #4]
 8017d6e:	9801      	ldr	r0, [sp, #4]
 8017d70:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8017d74:	fb92 f0f0 	sdiv	r0, r2, r0
 8017d78:	b280      	uxth	r0, r0
 8017d7a:	9010      	str	r0, [sp, #64]	@ 0x40
 8017d7c:	9901      	ldr	r1, [sp, #4]
 8017d7e:	9801      	ldr	r0, [sp, #4]
 8017d80:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8017d82:	440e      	add	r6, r1
 8017d84:	fb05 2510 	mls	r5, r5, r0, r2
 8017d88:	fb15 f503 	smulbb	r5, r5, r3
 8017d8c:	3e01      	subs	r6, #1
 8017d8e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8017d92:	fb96 f6f1 	sdiv	r6, r6, r1
 8017d96:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8017d9a:	440d      	add	r5, r1
 8017d9c:	4419      	add	r1, r3
 8017d9e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8017da2:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017da6:	441a      	add	r2, r3
 8017da8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017dac:	9304      	str	r3, [sp, #16]
 8017dae:	4b96      	ldr	r3, [pc, #600]	@ (8018008 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8017db0:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8017db4:	6818      	ldr	r0, [r3, #0]
 8017db6:	6803      	ldr	r3, [r0, #0]
 8017db8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017dba:	4798      	blx	r3
 8017dbc:	4b93      	ldr	r3, [pc, #588]	@ (801800c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8017dbe:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8017dc2:	881a      	ldrh	r2, [r3, #0]
 8017dc4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8017dc8:	9318      	str	r3, [sp, #96]	@ 0x60
 8017dca:	fb02 c101 	mla	r1, r2, r1, ip
 8017dce:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8017dd2:	4357      	muls	r7, r2
 8017dd4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8017dd8:	3601      	adds	r6, #1
 8017dda:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017ddc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017dde:	4b8c      	ldr	r3, [pc, #560]	@ (8018010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8017de0:	b2b6      	uxth	r6, r6
 8017de2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8017de6:	1d32      	adds	r2, r6, #4
 8017de8:	9206      	str	r2, [sp, #24]
 8017dea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017dec:	43d2      	mvns	r2, r2
 8017dee:	b2d2      	uxtb	r2, r2
 8017df0:	b2ad      	uxth	r5, r5
 8017df2:	9215      	str	r2, [sp, #84]	@ 0x54
 8017df4:	9a04      	ldr	r2, [sp, #16]
 8017df6:	2d00      	cmp	r5, #0
 8017df8:	bf0c      	ite	eq
 8017dfa:	4611      	moveq	r1, r2
 8017dfc:	2100      	movne	r1, #0
 8017dfe:	2200      	movs	r2, #0
 8017e00:	1b1b      	subs	r3, r3, r4
 8017e02:	b289      	uxth	r1, r1
 8017e04:	920d      	str	r2, [sp, #52]	@ 0x34
 8017e06:	9319      	str	r3, [sp, #100]	@ 0x64
 8017e08:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017e0a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017e0c:	fa12 f383 	uxtah	r3, r2, r3
 8017e10:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017e12:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017e16:	3304      	adds	r3, #4
 8017e18:	9307      	str	r3, [sp, #28]
 8017e1a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017e1c:	455b      	cmp	r3, fp
 8017e1e:	f240 817c 	bls.w	801811a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8017e22:	9a01      	ldr	r2, [sp, #4]
 8017e24:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8017e28:	fbb5 f3f3 	udiv	r3, r5, r3
 8017e2c:	1ad3      	subs	r3, r2, r3
 8017e2e:	b29b      	uxth	r3, r3
 8017e30:	9316      	str	r3, [sp, #88]	@ 0x58
 8017e32:	9b07      	ldr	r3, [sp, #28]
 8017e34:	9807      	ldr	r0, [sp, #28]
 8017e36:	785a      	ldrb	r2, [r3, #1]
 8017e38:	789b      	ldrb	r3, [r3, #2]
 8017e3a:	7800      	ldrb	r0, [r0, #0]
 8017e3c:	9011      	str	r0, [sp, #68]	@ 0x44
 8017e3e:	021b      	lsls	r3, r3, #8
 8017e40:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017e44:	9a07      	ldr	r2, [sp, #28]
 8017e46:	78d2      	ldrb	r2, [r2, #3]
 8017e48:	4313      	orrs	r3, r2
 8017e4a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017e4c:	3001      	adds	r0, #1
 8017e4e:	441a      	add	r2, r3
 8017e50:	9005      	str	r0, [sp, #20]
 8017e52:	1c50      	adds	r0, r2, #1
 8017e54:	9003      	str	r0, [sp, #12]
 8017e56:	7852      	ldrb	r2, [r2, #1]
 8017e58:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017e5a:	0212      	lsls	r2, r2, #8
 8017e5c:	5cc3      	ldrb	r3, [r0, r3]
 8017e5e:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017e62:	431a      	orrs	r2, r3
 8017e64:	b293      	uxth	r3, r2
 8017e66:	930c      	str	r3, [sp, #48]	@ 0x30
 8017e68:	2300      	movs	r3, #0
 8017e6a:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8017e6e:	9308      	str	r3, [sp, #32]
 8017e70:	461a      	mov	r2, r3
 8017e72:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017e76:	930e      	str	r3, [sp, #56]	@ 0x38
 8017e78:	f04f 0801 	mov.w	r8, #1
 8017e7c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8017e80:	f8cd 8008 	str.w	r8, [sp, #8]
 8017e84:	46c4      	mov	ip, r8
 8017e86:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017e88:	2d00      	cmp	r5, #0
 8017e8a:	d07c      	beq.n	8017f86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8017e8c:	45ac      	cmp	ip, r5
 8017e8e:	d26c      	bcs.n	8017f6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8017e90:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017e92:	eba5 050c 	sub.w	r5, r5, ip
 8017e96:	455b      	cmp	r3, fp
 8017e98:	b2ad      	uxth	r5, r5
 8017e9a:	4608      	mov	r0, r1
 8017e9c:	d802      	bhi.n	8017ea4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8017e9e:	e070      	b.n	8017f82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8017ea0:	2b00      	cmp	r3, #0
 8017ea2:	d15c      	bne.n	8017f5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8017ea4:	9b03      	ldr	r3, [sp, #12]
 8017ea6:	9a02      	ldr	r2, [sp, #8]
 8017ea8:	785b      	ldrb	r3, [r3, #1]
 8017eaa:	9902      	ldr	r1, [sp, #8]
 8017eac:	f1c2 0207 	rsb	r2, r2, #7
 8017eb0:	4093      	lsls	r3, r2
 8017eb2:	005b      	lsls	r3, r3, #1
 8017eb4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017eb8:	9b03      	ldr	r3, [sp, #12]
 8017eba:	781b      	ldrb	r3, [r3, #0]
 8017ebc:	410b      	asrs	r3, r1
 8017ebe:	3101      	adds	r1, #1
 8017ec0:	b2c9      	uxtb	r1, r1
 8017ec2:	2908      	cmp	r1, #8
 8017ec4:	9102      	str	r1, [sp, #8]
 8017ec6:	9903      	ldr	r1, [sp, #12]
 8017ec8:	bf0a      	itet	eq
 8017eca:	3102      	addeq	r1, #2
 8017ecc:	3101      	addne	r1, #1
 8017ece:	9103      	streq	r1, [sp, #12]
 8017ed0:	b2db      	uxtb	r3, r3
 8017ed2:	bf0a      	itet	eq
 8017ed4:	2100      	moveq	r1, #0
 8017ed6:	9103      	strne	r1, [sp, #12]
 8017ed8:	9102      	streq	r1, [sp, #8]
 8017eda:	4313      	orrs	r3, r2
 8017edc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017ede:	b29a      	uxth	r2, r3
 8017ee0:	4291      	cmp	r1, r2
 8017ee2:	d30a      	bcc.n	8017efa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8017ee4:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8017ee8:	2301      	movs	r3, #1
 8017eea:	9905      	ldr	r1, [sp, #20]
 8017eec:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017ef0:	d30f      	bcc.n	8017f12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8017ef2:	2100      	movs	r1, #0
 8017ef4:	4698      	mov	r8, r3
 8017ef6:	9100      	str	r1, [sp, #0]
 8017ef8:	e032      	b.n	8017f60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8017efa:	9b05      	ldr	r3, [sp, #20]
 8017efc:	429a      	cmp	r2, r3
 8017efe:	d318      	bcc.n	8017f32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8017f00:	eb04 0308 	add.w	r3, r4, r8
 8017f04:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8017f08:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8017f0c:	f108 0301 	add.w	r3, r8, #1
 8017f10:	b29b      	uxth	r3, r3
 8017f12:	9905      	ldr	r1, [sp, #20]
 8017f14:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8017f18:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017f1c:	710e      	strb	r6, [r1, #4]
 8017f1e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8017f20:	80ce      	strh	r6, [r1, #6]
 8017f22:	f108 0601 	add.w	r6, r8, #1
 8017f26:	714e      	strb	r6, [r1, #5]
 8017f28:	9905      	ldr	r1, [sp, #20]
 8017f2a:	3101      	adds	r1, #1
 8017f2c:	b289      	uxth	r1, r1
 8017f2e:	9105      	str	r1, [sp, #20]
 8017f30:	e7df      	b.n	8017ef2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8017f32:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8017f36:	4611      	mov	r1, r2
 8017f38:	795b      	ldrb	r3, [r3, #5]
 8017f3a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8017f3e:	4426      	add	r6, r4
 8017f40:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8017f42:	4437      	add	r7, r6
 8017f44:	2f00      	cmp	r7, #0
 8017f46:	dd06      	ble.n	8017f56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8017f48:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017f4c:	790f      	ldrb	r7, [r1, #4]
 8017f4e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8017f52:	88c9      	ldrh	r1, [r1, #6]
 8017f54:	e7f4      	b.n	8017f40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8017f56:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8017f5a:	b29b      	uxth	r3, r3
 8017f5c:	e7c5      	b.n	8017eea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8017f5e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017f60:	920c      	str	r2, [sp, #48]	@ 0x30
 8017f62:	4601      	mov	r1, r0
 8017f64:	9a00      	ldr	r2, [sp, #0]
 8017f66:	469c      	mov	ip, r3
 8017f68:	e78e      	b.n	8017e88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8017f6a:	1957      	adds	r7, r2, r5
 8017f6c:	ebac 0305 	sub.w	r3, ip, r5
 8017f70:	b2ba      	uxth	r2, r7
 8017f72:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8017f76:	9200      	str	r2, [sp, #0]
 8017f78:	b29b      	uxth	r3, r3
 8017f7a:	2500      	movs	r5, #0
 8017f7c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017f7e:	455a      	cmp	r2, fp
 8017f80:	d88e      	bhi.n	8017ea0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8017f82:	4601      	mov	r1, r0
 8017f84:	e749      	b.n	8017e1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8017f86:	458c      	cmp	ip, r1
 8017f88:	bf2c      	ite	cs
 8017f8a:	4628      	movcs	r0, r5
 8017f8c:	462b      	movcc	r3, r5
 8017f8e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8017f90:	bf27      	ittee	cs
 8017f92:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8017f94:	ebac 0301 	subcs.w	r3, ip, r1
 8017f98:	eba1 000c 	subcc.w	r0, r1, ip
 8017f9c:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8017fa0:	bf2c      	ite	cs
 8017fa2:	b29b      	uxthcs	r3, r3
 8017fa4:	b280      	uxthcc	r0, r0
 8017fa6:	2dff      	cmp	r5, #255	@ 0xff
 8017fa8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8017faa:	eb02 0705 	add.w	r7, r2, r5
 8017fae:	b2bd      	uxth	r5, r7
 8017fb0:	9500      	str	r5, [sp, #0]
 8017fb2:	d12f      	bne.n	8018014 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8017fb4:	465e      	mov	r6, fp
 8017fb6:	9d00      	ldr	r5, [sp, #0]
 8017fb8:	42aa      	cmp	r2, r5
 8017fba:	f040 8084 	bne.w	80180c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8017fbe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017fc0:	458c      	cmp	ip, r1
 8017fc2:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017fc6:	d3d8      	bcc.n	8017f7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8017fc8:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8017fca:	9904      	ldr	r1, [sp, #16]
 8017fcc:	8812      	ldrh	r2, [r2, #0]
 8017fce:	1a52      	subs	r2, r2, r1
 8017fd0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017fd4:	9a08      	ldr	r2, [sp, #32]
 8017fd6:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017fd8:	3201      	adds	r2, #1
 8017fda:	428a      	cmp	r2, r1
 8017fdc:	9208      	str	r2, [sp, #32]
 8017fde:	f040 8092 	bne.w	8018106 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8017fe2:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8017fe6:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8017fea:	9b04      	ldr	r3, [sp, #16]
 8017fec:	eba5 050c 	sub.w	r5, r5, ip
 8017ff0:	b2ad      	uxth	r5, r5
 8017ff2:	2d00      	cmp	r5, #0
 8017ff4:	bf08      	it	eq
 8017ff6:	4619      	moveq	r1, r3
 8017ff8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017ffa:	bf18      	it	ne
 8017ffc:	2100      	movne	r1, #0
 8017ffe:	3301      	adds	r3, #1
 8018000:	930d      	str	r3, [sp, #52]	@ 0x34
 8018002:	b289      	uxth	r1, r1
 8018004:	e700      	b.n	8017e08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8018006:	bf00      	nop
 8018008:	20014040 	.word	0x20014040
 801800c:	20014038 	.word	0x20014038
 8018010:	fffff7fb 	.word	0xfffff7fb
 8018014:	46d9      	mov	r9, fp
 8018016:	9d00      	ldr	r5, [sp, #0]
 8018018:	42aa      	cmp	r2, r5
 801801a:	d0d0      	beq.n	8017fbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801801c:	1c55      	adds	r5, r2, #1
 801801e:	4422      	add	r2, r4
 8018020:	9517      	str	r5, [sp, #92]	@ 0x5c
 8018022:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8018026:	9a06      	ldr	r2, [sp, #24]
 8018028:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801802c:	4472      	add	r2, lr
 801802e:	9212      	str	r2, [sp, #72]	@ 0x48
 8018030:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8018032:	f8b9 2000 	ldrh.w	r2, [r9]
 8018036:	f897 a002 	ldrb.w	sl, [r7, #2]
 801803a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801803c:	1216      	asrs	r6, r2, #8
 801803e:	fb1a fa07 	smulbb	sl, sl, r7
 8018042:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018046:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018048:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801804c:	fb06 a607 	mla	r6, r6, r7, sl
 8018050:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8018052:	f897 a001 	ldrb.w	sl, [r7, #1]
 8018056:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8018058:	10d5      	asrs	r5, r2, #3
 801805a:	fb1a fa07 	smulbb	sl, sl, r7
 801805e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018062:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018064:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018068:	fb05 a507 	mla	r5, r5, r7, sl
 801806c:	9f06      	ldr	r7, [sp, #24]
 801806e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018072:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8018074:	00d2      	lsls	r2, r2, #3
 8018076:	fb1e fe07 	smulbb	lr, lr, r7
 801807a:	b2d2      	uxtb	r2, r2
 801807c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801807e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018082:	b2b6      	uxth	r6, r6
 8018084:	fb02 e207 	mla	r2, r2, r7, lr
 8018088:	b292      	uxth	r2, r2
 801808a:	b2ad      	uxth	r5, r5
 801808c:	f106 0a01 	add.w	sl, r6, #1
 8018090:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018094:	f102 0e01 	add.w	lr, r2, #1
 8018098:	f105 0a01 	add.w	sl, r5, #1
 801809c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80180a0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80180a4:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80180a8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80180ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80180b0:	ea4e 0606 	orr.w	r6, lr, r6
 80180b4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80180b8:	ea46 060a 	orr.w	r6, r6, sl
 80180bc:	f829 6b02 	strh.w	r6, [r9], #2
 80180c0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80180c4:	e7a7      	b.n	8018016 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 80180c6:	f102 0e01 	add.w	lr, r2, #1
 80180ca:	4422      	add	r2, r4
 80180cc:	9f06      	ldr	r7, [sp, #24]
 80180ce:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 80180d2:	9a06      	ldr	r2, [sp, #24]
 80180d4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80180d8:	eb02 0a05 	add.w	sl, r2, r5
 80180dc:	4a13      	ldr	r2, [pc, #76]	@ (801812c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 80180de:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80180e2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80180e6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80180ea:	00d2      	lsls	r2, r2, #3
 80180ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80180f0:	ea49 0202 	orr.w	r2, r9, r2
 80180f4:	f817 9005 	ldrb.w	r9, [r7, r5]
 80180f8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80180fc:	f826 2b02 	strh.w	r2, [r6], #2
 8018100:	fa1f f28e 	uxth.w	r2, lr
 8018104:	e757      	b.n	8017fb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8018106:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801810a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801810e:	1a2d      	subs	r5, r5, r0
 8018110:	b2ad      	uxth	r5, r5
 8018112:	2d00      	cmp	r5, #0
 8018114:	bf18      	it	ne
 8018116:	2000      	movne	r0, #0
 8018118:	e730      	b.n	8017f7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801811a:	4b05      	ldr	r3, [pc, #20]	@ (8018130 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801811c:	6818      	ldr	r0, [r3, #0]
 801811e:	6803      	ldr	r3, [r0, #0]
 8018120:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018122:	4798      	blx	r3
 8018124:	b01f      	add	sp, #124	@ 0x7c
 8018126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801812a:	bf00      	nop
 801812c:	fffff800 	.word	0xfffff800
 8018130:	20014040 	.word	0x20014040

08018134 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8018134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018138:	b091      	sub	sp, #68	@ 0x44
 801813a:	469b      	mov	fp, r3
 801813c:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8018140:	4616      	mov	r6, r2
 8018142:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8018146:	f9b3 2000 	ldrsh.w	r2, [r3]
 801814a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801814e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8018152:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8018156:	4604      	mov	r4, r0
 8018158:	460d      	mov	r5, r1
 801815a:	4640      	mov	r0, r8
 801815c:	4659      	mov	r1, fp
 801815e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8018162:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8018166:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801816a:	f7f2 fde9 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 801816e:	4631      	mov	r1, r6
 8018170:	4640      	mov	r0, r8
 8018172:	f7f2 fde5 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 8018176:	4b74      	ldr	r3, [pc, #464]	@ (8018348 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8018178:	8818      	ldrh	r0, [r3, #0]
 801817a:	4b74      	ldr	r3, [pc, #464]	@ (801834c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801817c:	8819      	ldrh	r1, [r3, #0]
 801817e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8018182:	2b00      	cmp	r3, #0
 8018184:	b202      	sxth	r2, r0
 8018186:	b20e      	sxth	r6, r1
 8018188:	da07      	bge.n	801819a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801818a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801818e:	4463      	add	r3, ip
 8018190:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8018194:	2300      	movs	r3, #0
 8018196:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801819a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801819e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80181a2:	1ad2      	subs	r2, r2, r3
 80181a4:	4594      	cmp	ip, r2
 80181a6:	bfc4      	itt	gt
 80181a8:	1ac2      	subgt	r2, r0, r3
 80181aa:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 80181ae:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80181b2:	2a00      	cmp	r2, #0
 80181b4:	da07      	bge.n	80181c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80181b6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80181ba:	4462      	add	r2, ip
 80181bc:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80181c0:	2200      	movs	r2, #0
 80181c2:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80181c6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80181ca:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80181ce:	eba6 060a 	sub.w	r6, r6, sl
 80181d2:	42b2      	cmp	r2, r6
 80181d4:	bfc4      	itt	gt
 80181d6:	eba1 020a 	subgt.w	r2, r1, sl
 80181da:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 80181de:	4a5c      	ldr	r2, [pc, #368]	@ (8018350 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80181e0:	7812      	ldrb	r2, [r2, #0]
 80181e2:	b9a2      	cbnz	r2, 801820e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80181e4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80181e8:	4286      	cmp	r6, r0
 80181ea:	4640      	mov	r0, r8
 80181ec:	9303      	str	r3, [sp, #12]
 80181ee:	bf14      	ite	ne
 80181f0:	2600      	movne	r6, #0
 80181f2:	2601      	moveq	r6, #1
 80181f4:	f7f2 fde7 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80181f8:	9b03      	ldr	r3, [sp, #12]
 80181fa:	b160      	cbz	r0, 8018216 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80181fc:	2300      	movs	r3, #0
 80181fe:	8023      	strh	r3, [r4, #0]
 8018200:	8063      	strh	r3, [r4, #2]
 8018202:	80a3      	strh	r3, [r4, #4]
 8018204:	4620      	mov	r0, r4
 8018206:	80e3      	strh	r3, [r4, #6]
 8018208:	b011      	add	sp, #68	@ 0x44
 801820a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801820e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8018212:	428e      	cmp	r6, r1
 8018214:	e7e9      	b.n	80181ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8018216:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801821a:	9205      	str	r2, [sp, #20]
 801821c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8018220:	9206      	str	r2, [sp, #24]
 8018222:	f8bb 2000 	ldrh.w	r2, [fp]
 8018226:	900e      	str	r0, [sp, #56]	@ 0x38
 8018228:	1a9b      	subs	r3, r3, r2
 801822a:	b21b      	sxth	r3, r3
 801822c:	9303      	str	r3, [sp, #12]
 801822e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018232:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8018236:	ebaa 0a03 	sub.w	sl, sl, r3
 801823a:	fa0f f38a 	sxth.w	r3, sl
 801823e:	9304      	str	r3, [sp, #16]
 8018240:	9b03      	ldr	r3, [sp, #12]
 8018242:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8018246:	9b04      	ldr	r3, [sp, #16]
 8018248:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801824c:	9b05      	ldr	r3, [sp, #20]
 801824e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8018252:	a90e      	add	r1, sp, #56	@ 0x38
 8018254:	9b06      	ldr	r3, [sp, #24]
 8018256:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801825a:	a80c      	add	r0, sp, #48	@ 0x30
 801825c:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8018260:	f7f7 fd06 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018264:	4640      	mov	r0, r8
 8018266:	f7f7 fcdb 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801826a:	a80e      	add	r0, sp, #56	@ 0x38
 801826c:	f7f7 fcd8 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018270:	4b38      	ldr	r3, [pc, #224]	@ (8018354 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8018272:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8018276:	881b      	ldrh	r3, [r3, #0]
 8018278:	9307      	str	r3, [sp, #28]
 801827a:	682b      	ldr	r3, [r5, #0]
 801827c:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8018358 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8018280:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018282:	4628      	mov	r0, r5
 8018284:	4798      	blx	r3
 8018286:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801828a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801828e:	4681      	mov	r9, r0
 8018290:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8018294:	f8db 0000 	ldr.w	r0, [fp]
 8018298:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801829a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801829e:	6803      	ldr	r3, [r0, #0]
 80182a0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80182a2:	4798      	blx	r3
 80182a4:	4607      	mov	r7, r0
 80182a6:	f8db 0000 	ldr.w	r0, [fp]
 80182aa:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80182ae:	6803      	ldr	r3, [r0, #0]
 80182b0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80182b4:	9109      	str	r1, [sp, #36]	@ 0x24
 80182b6:	9208      	str	r2, [sp, #32]
 80182b8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80182ba:	4798      	blx	r3
 80182bc:	f010 0f01 	tst.w	r0, #1
 80182c0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80182c4:	d012      	beq.n	80182ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80182c6:	f8db 0000 	ldr.w	r0, [fp]
 80182ca:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80182ce:	6803      	ldr	r3, [r0, #0]
 80182d0:	9200      	str	r2, [sp, #0]
 80182d2:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 80182d4:	e898 0006 	ldmia.w	r8, {r1, r2}
 80182d8:	462b      	mov	r3, r5
 80182da:	47b0      	blx	r6
 80182dc:	9b03      	ldr	r3, [sp, #12]
 80182de:	8023      	strh	r3, [r4, #0]
 80182e0:	9b04      	ldr	r3, [sp, #16]
 80182e2:	8063      	strh	r3, [r4, #2]
 80182e4:	9b05      	ldr	r3, [sp, #20]
 80182e6:	80a3      	strh	r3, [r4, #4]
 80182e8:	9b06      	ldr	r3, [sp, #24]
 80182ea:	e78b      	b.n	8018204 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80182ec:	fb09 f202 	mul.w	r2, r9, r2
 80182f0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80182f4:	440f      	add	r7, r1
 80182f6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80182fa:	b166      	cbz	r6, 8018316 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80182fc:	9a07      	ldr	r2, [sp, #28]
 80182fe:	4592      	cmp	sl, r2
 8018300:	d109      	bne.n	8018316 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8018302:	f8db 0000 	ldr.w	r0, [fp]
 8018306:	6802      	ldr	r2, [r0, #0]
 8018308:	fb09 f303 	mul.w	r3, r9, r3
 801830c:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 801830e:	4629      	mov	r1, r5
 8018310:	463a      	mov	r2, r7
 8018312:	47b0      	blx	r6
 8018314:	e7e2      	b.n	80182dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018316:	fb0a f303 	mul.w	r3, sl, r3
 801831a:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8018358 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801831e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8018322:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8018326:	4545      	cmp	r5, r8
 8018328:	d2d8      	bcs.n	80182dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801832a:	f8db 0000 	ldr.w	r0, [fp]
 801832e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018332:	6802      	ldr	r2, [r0, #0]
 8018334:	4629      	mov	r1, r5
 8018336:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 801833a:	005b      	lsls	r3, r3, #1
 801833c:	463a      	mov	r2, r7
 801833e:	47d0      	blx	sl
 8018340:	444f      	add	r7, r9
 8018342:	4435      	add	r5, r6
 8018344:	e7ef      	b.n	8018326 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8018346:	bf00      	nop
 8018348:	20014032 	.word	0x20014032
 801834c:	20014034 	.word	0x20014034
 8018350:	20014036 	.word	0x20014036
 8018354:	20014038 	.word	0x20014038
 8018358:	20014040 	.word	0x20014040

0801835c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801835c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801835e:	4606      	mov	r6, r0
 8018360:	b087      	sub	sp, #28
 8018362:	460c      	mov	r4, r1
 8018364:	4617      	mov	r7, r2
 8018366:	461d      	mov	r5, r3
 8018368:	b333      	cbz	r3, 80183b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801836a:	4608      	mov	r0, r1
 801836c:	f7f2 fd2b 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018370:	bb10      	cbnz	r0, 80183b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018372:	6820      	ldr	r0, [r4, #0]
 8018374:	6861      	ldr	r1, [r4, #4]
 8018376:	4c1c      	ldr	r4, [pc, #112]	@ (80183e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8018378:	ab04      	add	r3, sp, #16
 801837a:	c303      	stmia	r3!, {r0, r1}
 801837c:	a804      	add	r0, sp, #16
 801837e:	f7f7 fc4f 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018382:	6820      	ldr	r0, [r4, #0]
 8018384:	6803      	ldr	r3, [r0, #0]
 8018386:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018388:	4798      	blx	r3
 801838a:	2dff      	cmp	r5, #255	@ 0xff
 801838c:	d016      	beq.n	80183bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801838e:	f010 0f08 	tst.w	r0, #8
 8018392:	6820      	ldr	r0, [r4, #0]
 8018394:	d015      	beq.n	80183c2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8018396:	2400      	movs	r4, #0
 8018398:	6801      	ldr	r1, [r0, #0]
 801839a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801839e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80183a2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80183a6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80183aa:	9401      	str	r4, [sp, #4]
 80183ac:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80183b0:	9400      	str	r4, [sp, #0]
 80183b2:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 80183b4:	4639      	mov	r1, r7
 80183b6:	47a0      	blx	r4
 80183b8:	b007      	add	sp, #28
 80183ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80183bc:	f010 0f02 	tst.w	r0, #2
 80183c0:	e7e7      	b.n	8018392 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80183c2:	6803      	ldr	r3, [r0, #0]
 80183c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80183c6:	4798      	blx	r3
 80183c8:	4b08      	ldr	r3, [pc, #32]	@ (80183ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80183ca:	881a      	ldrh	r2, [r3, #0]
 80183cc:	6833      	ldr	r3, [r6, #0]
 80183ce:	e9cd 7500 	strd	r7, r5, [sp]
 80183d2:	4601      	mov	r1, r0
 80183d4:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80183d6:	4630      	mov	r0, r6
 80183d8:	ab04      	add	r3, sp, #16
 80183da:	47a8      	blx	r5
 80183dc:	6820      	ldr	r0, [r4, #0]
 80183de:	6803      	ldr	r3, [r0, #0]
 80183e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80183e2:	4798      	blx	r3
 80183e4:	e7e8      	b.n	80183b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80183e6:	bf00      	nop
 80183e8:	20014040 	.word	0x20014040
 80183ec:	20014038 	.word	0x20014038

080183f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80183f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80183f4:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80183f8:	9e08      	ldr	r6, [sp, #32]
 80183fa:	4688      	mov	r8, r1
 80183fc:	4614      	mov	r4, r2
 80183fe:	461d      	mov	r5, r3
 8018400:	2f00      	cmp	r7, #0
 8018402:	f000 80a9 	beq.w	8018558 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018406:	4618      	mov	r0, r3
 8018408:	f7f2 fcdd 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801840c:	2800      	cmp	r0, #0
 801840e:	f040 80a3 	bne.w	8018558 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018412:	f9b5 1000 	ldrsh.w	r1, [r5]
 8018416:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801841a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801841e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8018422:	fb04 1303 	mla	r3, r4, r3, r1
 8018426:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801842a:	4365      	muls	r5, r4
 801842c:	2fff      	cmp	r7, #255	@ 0xff
 801842e:	eba4 0200 	sub.w	r2, r4, r0
 8018432:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8018436:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801843a:	d04a      	beq.n	80184d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801843c:	b2bc      	uxth	r4, r7
 801843e:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8018442:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8018446:	fa5f f788 	uxtb.w	r7, r8
 801844a:	b2f3      	uxtb	r3, r6
 801844c:	0040      	lsls	r0, r0, #1
 801844e:	fb0e fe04 	mul.w	lr, lr, r4
 8018452:	4367      	muls	r7, r4
 8018454:	4363      	muls	r3, r4
 8018456:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801845a:	fa1f fc8c 	uxth.w	ip, ip
 801845e:	42a9      	cmp	r1, r5
 8018460:	d27a      	bcs.n	8018558 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018462:	eb01 0900 	add.w	r9, r1, r0
 8018466:	4549      	cmp	r1, r9
 8018468:	d231      	bcs.n	80184ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801846a:	880a      	ldrh	r2, [r1, #0]
 801846c:	1214      	asrs	r4, r2, #8
 801846e:	10d6      	asrs	r6, r2, #3
 8018470:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8018474:	00d2      	lsls	r2, r2, #3
 8018476:	b2d2      	uxtb	r2, r2
 8018478:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801847c:	fb14 f40c 	smulbb	r4, r4, ip
 8018480:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018484:	4474      	add	r4, lr
 8018486:	fb12 f20c 	smulbb	r2, r2, ip
 801848a:	b2a4      	uxth	r4, r4
 801848c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018490:	441a      	add	r2, r3
 8018492:	b292      	uxth	r2, r2
 8018494:	f104 0a01 	add.w	sl, r4, #1
 8018498:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801849c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80184a0:	fb16 f60c 	smulbb	r6, r6, ip
 80184a4:	f102 0a01 	add.w	sl, r2, #1
 80184a8:	443e      	add	r6, r7
 80184aa:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80184ae:	b2b6      	uxth	r6, r6
 80184b0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80184b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80184b8:	4322      	orrs	r2, r4
 80184ba:	1c74      	adds	r4, r6, #1
 80184bc:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80184c0:	0976      	lsrs	r6, r6, #5
 80184c2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80184c6:	4332      	orrs	r2, r6
 80184c8:	f821 2b02 	strh.w	r2, [r1], #2
 80184cc:	e7cb      	b.n	8018466 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80184ce:	4441      	add	r1, r8
 80184d0:	e7c5      	b.n	801845e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80184d2:	4f22      	ldr	r7, [pc, #136]	@ (801855c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80184d4:	0973      	lsrs	r3, r6, #5
 80184d6:	ea08 0707 	and.w	r7, r8, r7
 80184da:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80184de:	433b      	orrs	r3, r7
 80184e0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80184e4:	4333      	orrs	r3, r6
 80184e6:	07e7      	lsls	r7, r4, #31
 80184e8:	b29b      	uxth	r3, r3
 80184ea:	d50b      	bpl.n	8018504 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80184ec:	0040      	lsls	r0, r0, #1
 80184ee:	0052      	lsls	r2, r2, #1
 80184f0:	42a9      	cmp	r1, r5
 80184f2:	d231      	bcs.n	8018558 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80184f4:	180c      	adds	r4, r1, r0
 80184f6:	42a1      	cmp	r1, r4
 80184f8:	d202      	bcs.n	8018500 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80184fa:	f821 3b02 	strh.w	r3, [r1], #2
 80184fe:	e7fa      	b.n	80184f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8018500:	4411      	add	r1, r2
 8018502:	e7f5      	b.n	80184f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8018504:	078e      	lsls	r6, r1, #30
 8018506:	d008      	beq.n	801851a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8018508:	0066      	lsls	r6, r4, #1
 801850a:	460a      	mov	r2, r1
 801850c:	42aa      	cmp	r2, r5
 801850e:	d202      	bcs.n	8018516 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8018510:	8013      	strh	r3, [r2, #0]
 8018512:	4432      	add	r2, r6
 8018514:	e7fa      	b.n	801850c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8018516:	3102      	adds	r1, #2
 8018518:	3801      	subs	r0, #1
 801851a:	07c2      	lsls	r2, r0, #31
 801851c:	d50b      	bpl.n	8018536 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801851e:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8018522:	3a01      	subs	r2, #1
 8018524:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8018528:	0066      	lsls	r6, r4, #1
 801852a:	42aa      	cmp	r2, r5
 801852c:	d202      	bcs.n	8018534 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801852e:	8013      	strh	r3, [r2, #0]
 8018530:	4432      	add	r2, r6
 8018532:	e7fa      	b.n	801852a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8018534:	3801      	subs	r0, #1
 8018536:	b178      	cbz	r0, 8018558 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018538:	1040      	asrs	r0, r0, #1
 801853a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801853e:	0080      	lsls	r0, r0, #2
 8018540:	0064      	lsls	r4, r4, #1
 8018542:	42a9      	cmp	r1, r5
 8018544:	d208      	bcs.n	8018558 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018546:	180e      	adds	r6, r1, r0
 8018548:	460a      	mov	r2, r1
 801854a:	42b2      	cmp	r2, r6
 801854c:	d202      	bcs.n	8018554 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801854e:	f842 3b04 	str.w	r3, [r2], #4
 8018552:	e7fa      	b.n	801854a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8018554:	4421      	add	r1, r4
 8018556:	e7f4      	b.n	8018542 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8018558:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801855c:	00fff800 	.word	0x00fff800

08018560 <_ZN8touchgfx8LCD16bppC1Ev>:
 8018560:	2200      	movs	r2, #0
 8018562:	4912      	ldr	r1, [pc, #72]	@ (80185ac <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8018564:	6001      	str	r1, [r0, #0]
 8018566:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801856a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801856e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8018572:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8018576:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801857a:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801857e:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8018582:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8018586:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801858a:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801858e:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8018592:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8018596:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801859a:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801859e:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 80185a2:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 80185a6:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 80185aa:	4770      	bx	lr
 80185ac:	080260f0 	.word	0x080260f0

080185b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80185b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185b4:	460d      	mov	r5, r1
 80185b6:	b08d      	sub	sp, #52	@ 0x34
 80185b8:	4604      	mov	r4, r0
 80185ba:	6808      	ldr	r0, [r1, #0]
 80185bc:	6849      	ldr	r1, [r1, #4]
 80185be:	4699      	mov	r9, r3
 80185c0:	ab08      	add	r3, sp, #32
 80185c2:	c303      	stmia	r3!, {r0, r1}
 80185c4:	6810      	ldr	r0, [r2, #0]
 80185c6:	6851      	ldr	r1, [r2, #4]
 80185c8:	ab0a      	add	r3, sp, #40	@ 0x28
 80185ca:	c303      	stmia	r3!, {r0, r1}
 80185cc:	a808      	add	r0, sp, #32
 80185ce:	f7f7 fb27 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80185d2:	4629      	mov	r1, r5
 80185d4:	a80a      	add	r0, sp, #40	@ 0x28
 80185d6:	f7f7 fb4b 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80185da:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80185de:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80185e2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 80185e6:	4d63      	ldr	r5, [pc, #396]	@ (8018774 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80185e8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 80185ec:	6828      	ldr	r0, [r5, #0]
 80185ee:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80185f2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80185f6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80185fa:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80185fe:	440a      	add	r2, r1
 8018600:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8018604:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8018608:	4413      	add	r3, r2
 801860a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801860e:	6803      	ldr	r3, [r0, #0]
 8018610:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018612:	4798      	blx	r3
 8018614:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018618:	d119      	bne.n	801864e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801861a:	f010 0f20 	tst.w	r0, #32
 801861e:	6828      	ldr	r0, [r5, #0]
 8018620:	d018      	beq.n	8018654 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8018622:	2500      	movs	r5, #0
 8018624:	6801      	ldr	r1, [r0, #0]
 8018626:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801862a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801862e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8018632:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8018636:	9502      	str	r5, [sp, #8]
 8018638:	b2b6      	uxth	r6, r6
 801863a:	fa1f f588 	uxth.w	r5, r8
 801863e:	9601      	str	r6, [sp, #4]
 8018640:	9500      	str	r5, [sp, #0]
 8018642:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8018644:	4621      	mov	r1, r4
 8018646:	47a8      	blx	r5
 8018648:	b00d      	add	sp, #52	@ 0x34
 801864a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801864e:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8018652:	e7e4      	b.n	801861e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8018654:	6803      	ldr	r3, [r0, #0]
 8018656:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018658:	4798      	blx	r3
 801865a:	4947      	ldr	r1, [pc, #284]	@ (8018778 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801865c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8018660:	880b      	ldrh	r3, [r1, #0]
 8018662:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8018666:	fb03 5202 	mla	r2, r3, r2, r5
 801866a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801866e:	4373      	muls	r3, r6
 8018670:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018674:	9307      	str	r3, [sp, #28]
 8018676:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801867a:	9306      	str	r3, [sp, #24]
 801867c:	468a      	mov	sl, r1
 801867e:	9b07      	ldr	r3, [sp, #28]
 8018680:	4298      	cmp	r0, r3
 8018682:	d270      	bcs.n	8018766 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8018684:	9b06      	ldr	r3, [sp, #24]
 8018686:	4621      	mov	r1, r4
 8018688:	eb00 0b03 	add.w	fp, r0, r3
 801868c:	4558      	cmp	r0, fp
 801868e:	d25d      	bcs.n	801874c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8018690:	f851 4b04 	ldr.w	r4, [r1], #4
 8018694:	0e23      	lsrs	r3, r4, #24
 8018696:	d014      	beq.n	80186c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018698:	2bff      	cmp	r3, #255	@ 0xff
 801869a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801869e:	d112      	bne.n	80186c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80186a0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80186a4:	d10f      	bne.n	80186c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80186a6:	0963      	lsrs	r3, r4, #5
 80186a8:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80186ac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80186b0:	f02c 0c07 	bic.w	ip, ip, #7
 80186b4:	ea43 0c0c 	orr.w	ip, r3, ip
 80186b8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80186bc:	ea4c 0404 	orr.w	r4, ip, r4
 80186c0:	8004      	strh	r4, [r0, #0]
 80186c2:	3002      	adds	r0, #2
 80186c4:	e7e2      	b.n	801868c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80186c6:	fb09 f303 	mul.w	r3, r9, r3
 80186ca:	8807      	ldrh	r7, [r0, #0]
 80186cc:	1c5a      	adds	r2, r3, #1
 80186ce:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80186d2:	1212      	asrs	r2, r2, #8
 80186d4:	123e      	asrs	r6, r7, #8
 80186d6:	b293      	uxth	r3, r2
 80186d8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80186dc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80186e0:	43d2      	mvns	r2, r2
 80186e2:	b2d2      	uxtb	r2, r2
 80186e4:	10fd      	asrs	r5, r7, #3
 80186e6:	fb1e fe03 	smulbb	lr, lr, r3
 80186ea:	00ff      	lsls	r7, r7, #3
 80186ec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80186f0:	fb06 e602 	mla	r6, r6, r2, lr
 80186f4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80186f8:	b2ff      	uxtb	r7, r7
 80186fa:	fa5f fc8c 	uxtb.w	ip, ip
 80186fe:	b2e4      	uxtb	r4, r4
 8018700:	b2b6      	uxth	r6, r6
 8018702:	fb1c fc03 	smulbb	ip, ip, r3
 8018706:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801870a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801870e:	fb14 f403 	smulbb	r4, r4, r3
 8018712:	fb05 c502 	mla	r5, r5, r2, ip
 8018716:	f106 0e01 	add.w	lr, r6, #1
 801871a:	fb07 4702 	mla	r7, r7, r2, r4
 801871e:	b2ad      	uxth	r5, r5
 8018720:	b2bf      	uxth	r7, r7
 8018722:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8018726:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801872a:	f105 0c01 	add.w	ip, r5, #1
 801872e:	1c7e      	adds	r6, r7, #1
 8018730:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8018734:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018738:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801873c:	096d      	lsrs	r5, r5, #5
 801873e:	ea46 060e 	orr.w	r6, r6, lr
 8018742:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018746:	432e      	orrs	r6, r5
 8018748:	8006      	strh	r6, [r0, #0]
 801874a:	e7ba      	b.n	80186c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801874c:	f8ba 3000 	ldrh.w	r3, [sl]
 8018750:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8018754:	eba3 0308 	sub.w	r3, r3, r8
 8018758:	eba4 0408 	sub.w	r4, r4, r8
 801875c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018760:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8018764:	e78b      	b.n	801867e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8018766:	4b03      	ldr	r3, [pc, #12]	@ (8018774 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018768:	6818      	ldr	r0, [r3, #0]
 801876a:	6803      	ldr	r3, [r0, #0]
 801876c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801876e:	4798      	blx	r3
 8018770:	e76a      	b.n	8018648 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8018772:	bf00      	nop
 8018774:	20014040 	.word	0x20014040
 8018778:	20014038 	.word	0x20014038

0801877c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801877c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018780:	460c      	mov	r4, r1
 8018782:	b085      	sub	sp, #20
 8018784:	6810      	ldr	r0, [r2, #0]
 8018786:	6851      	ldr	r1, [r2, #4]
 8018788:	466d      	mov	r5, sp
 801878a:	c503      	stmia	r5!, {r0, r1}
 801878c:	6818      	ldr	r0, [r3, #0]
 801878e:	6859      	ldr	r1, [r3, #4]
 8018790:	4616      	mov	r6, r2
 8018792:	c503      	stmia	r5!, {r0, r1}
 8018794:	4668      	mov	r0, sp
 8018796:	f7f7 fa43 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801879a:	4631      	mov	r1, r6
 801879c:	a802      	add	r0, sp, #8
 801879e:	f7f7 fa67 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80187a2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80187a6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80187aa:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80187ae:	4d28      	ldr	r5, [pc, #160]	@ (8018850 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80187b0:	4e28      	ldr	r6, [pc, #160]	@ (8018854 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80187b2:	6828      	ldr	r0, [r5, #0]
 80187b4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80187b8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80187bc:	fb11 2103 	smlabb	r1, r1, r3, r2
 80187c0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80187c4:	f8bd 1000 	ldrh.w	r1, [sp]
 80187c8:	440a      	add	r2, r1
 80187ca:	f8ad 2008 	strh.w	r2, [sp, #8]
 80187ce:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80187d2:	4413      	add	r3, r2
 80187d4:	f8ad 300a 	strh.w	r3, [sp, #10]
 80187d8:	6803      	ldr	r3, [r0, #0]
 80187da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80187dc:	4798      	blx	r3
 80187de:	8833      	ldrh	r3, [r6, #0]
 80187e0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80187e4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80187e8:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8018858 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80187ec:	fb03 1202 	mla	r2, r3, r2, r1
 80187f0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80187f4:	fb08 f303 	mul.w	r3, r8, r3
 80187f8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80187fc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8018800:	4298      	cmp	r0, r3
 8018802:	d21d      	bcs.n	8018840 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8018804:	eb00 080c 	add.w	r8, r0, ip
 8018808:	4540      	cmp	r0, r8
 801880a:	d20f      	bcs.n	801882c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801880c:	f854 1b04 	ldr.w	r1, [r4], #4
 8018810:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8018814:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8018818:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801881c:	ea42 0209 	orr.w	r2, r2, r9
 8018820:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8018824:	430a      	orrs	r2, r1
 8018826:	f820 2b02 	strh.w	r2, [r0], #2
 801882a:	e7ed      	b.n	8018808 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801882c:	8832      	ldrh	r2, [r6, #0]
 801882e:	1bd2      	subs	r2, r2, r7
 8018830:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018834:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8018838:	1bd2      	subs	r2, r2, r7
 801883a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801883e:	e7df      	b.n	8018800 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8018840:	6828      	ldr	r0, [r5, #0]
 8018842:	6803      	ldr	r3, [r0, #0]
 8018844:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018846:	4798      	blx	r3
 8018848:	b005      	add	sp, #20
 801884a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801884e:	bf00      	nop
 8018850:	20014040 	.word	0x20014040
 8018854:	20014038 	.word	0x20014038
 8018858:	fffff800 	.word	0xfffff800

0801885c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801885c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018860:	460e      	mov	r6, r1
 8018862:	b08e      	sub	sp, #56	@ 0x38
 8018864:	4604      	mov	r4, r0
 8018866:	6808      	ldr	r0, [r1, #0]
 8018868:	6849      	ldr	r1, [r1, #4]
 801886a:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8018a44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801886e:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8018a48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8018872:	461d      	mov	r5, r3
 8018874:	ab0a      	add	r3, sp, #40	@ 0x28
 8018876:	c303      	stmia	r3!, {r0, r1}
 8018878:	6810      	ldr	r0, [r2, #0]
 801887a:	6851      	ldr	r1, [r2, #4]
 801887c:	ab0c      	add	r3, sp, #48	@ 0x30
 801887e:	c303      	stmia	r3!, {r0, r1}
 8018880:	a80a      	add	r0, sp, #40	@ 0x28
 8018882:	f7f7 f9cd 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018886:	4631      	mov	r1, r6
 8018888:	a80c      	add	r0, sp, #48	@ 0x30
 801888a:	f7f7 f9f1 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801888e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8018892:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8018896:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801889a:	f8d8 0000 	ldr.w	r0, [r8]
 801889e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 80188a2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80188a6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80188aa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80188ae:	440c      	add	r4, r1
 80188b0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 80188b4:	440a      	add	r2, r1
 80188b6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80188ba:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80188be:	4413      	add	r3, r2
 80188c0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80188c4:	6803      	ldr	r3, [r0, #0]
 80188c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80188c8:	4798      	blx	r3
 80188ca:	2dff      	cmp	r5, #255	@ 0xff
 80188cc:	d124      	bne.n	8018918 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80188ce:	f010 0f01 	tst.w	r0, #1
 80188d2:	f8d8 0000 	ldr.w	r0, [r8]
 80188d6:	d022      	beq.n	801891e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80188d8:	2100      	movs	r1, #0
 80188da:	f8d0 c000 	ldr.w	ip, [r0]
 80188de:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80188e2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 80188e6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80188ea:	f04f 0e01 	mov.w	lr, #1
 80188ee:	f8cd e018 	str.w	lr, [sp, #24]
 80188f2:	f8b9 e000 	ldrh.w	lr, [r9]
 80188f6:	9503      	str	r5, [sp, #12]
 80188f8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80188fc:	b2b6      	uxth	r6, r6
 80188fe:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8018902:	9102      	str	r1, [sp, #8]
 8018904:	b2bf      	uxth	r7, r7
 8018906:	9601      	str	r6, [sp, #4]
 8018908:	9700      	str	r7, [sp, #0]
 801890a:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 801890e:	4621      	mov	r1, r4
 8018910:	47a8      	blx	r5
 8018912:	b00e      	add	sp, #56	@ 0x38
 8018914:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018918:	f010 0f04 	tst.w	r0, #4
 801891c:	e7d9      	b.n	80188d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801891e:	6803      	ldr	r3, [r0, #0]
 8018920:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018922:	4798      	blx	r3
 8018924:	f8b9 3000 	ldrh.w	r3, [r9]
 8018928:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801892c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8018930:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8018934:	fb03 1202 	mla	r2, r3, r2, r1
 8018938:	ebac 0c07 	sub.w	ip, ip, r7
 801893c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018940:	435e      	muls	r6, r3
 8018942:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8018946:	2dff      	cmp	r5, #255	@ 0xff
 8018948:	eba3 0707 	sub.w	r7, r3, r7
 801894c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018950:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018954:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8018958:	d049      	beq.n	80189ee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801895a:	43eb      	mvns	r3, r5
 801895c:	fa1f f985 	uxth.w	r9, r5
 8018960:	b2db      	uxtb	r3, r3
 8018962:	42b0      	cmp	r0, r6
 8018964:	d266      	bcs.n	8018a34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018966:	eb00 0a0e 	add.w	sl, r0, lr
 801896a:	4550      	cmp	r0, sl
 801896c:	4621      	mov	r1, r4
 801896e:	f104 0403 	add.w	r4, r4, #3
 8018972:	d25b      	bcs.n	8018a2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8018974:	8802      	ldrh	r2, [r0, #0]
 8018976:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801897a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801897e:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8018982:	fb11 f109 	smulbb	r1, r1, r9
 8018986:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801898a:	10d5      	asrs	r5, r2, #3
 801898c:	fb08 1803 	mla	r8, r8, r3, r1
 8018990:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8018994:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018998:	fb11 f109 	smulbb	r1, r1, r9
 801899c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80189a0:	fb05 1503 	mla	r5, r5, r3, r1
 80189a4:	00d2      	lsls	r2, r2, #3
 80189a6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80189aa:	b2d2      	uxtb	r2, r2
 80189ac:	fb11 f109 	smulbb	r1, r1, r9
 80189b0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80189b4:	fa1f f888 	uxth.w	r8, r8
 80189b8:	fb02 1203 	mla	r2, r2, r3, r1
 80189bc:	b292      	uxth	r2, r2
 80189be:	f108 0101 	add.w	r1, r8, #1
 80189c2:	b2ad      	uxth	r5, r5
 80189c4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80189c8:	1c51      	adds	r1, r2, #1
 80189ca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80189ce:	1c69      	adds	r1, r5, #1
 80189d0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80189d4:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80189d8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80189dc:	096d      	lsrs	r5, r5, #5
 80189de:	ea42 0208 	orr.w	r2, r2, r8
 80189e2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80189e6:	432a      	orrs	r2, r5
 80189e8:	f820 2b02 	strh.w	r2, [r0], #2
 80189ec:	e7bd      	b.n	801896a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80189ee:	4a14      	ldr	r2, [pc, #80]	@ (8018a40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80189f0:	42b0      	cmp	r0, r6
 80189f2:	d21f      	bcs.n	8018a34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80189f4:	eb00 050e 	add.w	r5, r0, lr
 80189f8:	42a8      	cmp	r0, r5
 80189fa:	4621      	mov	r1, r4
 80189fc:	f104 0403 	add.w	r4, r4, #3
 8018a00:	d210      	bcs.n	8018a24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8018a02:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8018a06:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8018a0a:	00db      	lsls	r3, r3, #3
 8018a0c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8018a10:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018a14:	430b      	orrs	r3, r1
 8018a16:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018a1a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8018a1e:	f820 3b02 	strh.w	r3, [r0], #2
 8018a22:	e7e9      	b.n	80189f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8018a24:	4438      	add	r0, r7
 8018a26:	eb01 040c 	add.w	r4, r1, ip
 8018a2a:	e7e1      	b.n	80189f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8018a2c:	4438      	add	r0, r7
 8018a2e:	eb01 040c 	add.w	r4, r1, ip
 8018a32:	e796      	b.n	8018962 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8018a34:	4b03      	ldr	r3, [pc, #12]	@ (8018a44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8018a36:	6818      	ldr	r0, [r3, #0]
 8018a38:	6803      	ldr	r3, [r0, #0]
 8018a3a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018a3c:	4798      	blx	r3
 8018a3e:	e768      	b.n	8018912 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8018a40:	fffff800 	.word	0xfffff800
 8018a44:	20014040 	.word	0x20014040
 8018a48:	20014038 	.word	0x20014038

08018a4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018a4c:	b4f0      	push	{r4, r5, r6, r7}
 8018a4e:	4616      	mov	r6, r2
 8018a50:	2e01      	cmp	r6, #1
 8018a52:	461c      	mov	r4, r3
 8018a54:	460d      	mov	r5, r1
 8018a56:	9a04      	ldr	r2, [sp, #16]
 8018a58:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018a5c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8018a60:	d012      	beq.n	8018a88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8018a62:	d303      	bcc.n	8018a6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8018a64:	2e02      	cmp	r6, #2
 8018a66:	d00a      	beq.n	8018a7e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8018a68:	bcf0      	pop	{r4, r5, r6, r7}
 8018a6a:	4770      	bx	lr
 8018a6c:	6805      	ldr	r5, [r0, #0]
 8018a6e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8018a72:	68ed      	ldr	r5, [r5, #12]
 8018a74:	4613      	mov	r3, r2
 8018a76:	46ac      	mov	ip, r5
 8018a78:	4622      	mov	r2, r4
 8018a7a:	bcf0      	pop	{r4, r5, r6, r7}
 8018a7c:	4760      	bx	ip
 8018a7e:	4621      	mov	r1, r4
 8018a80:	4628      	mov	r0, r5
 8018a82:	bcf0      	pop	{r4, r5, r6, r7}
 8018a84:	f7ff bd94 	b.w	80185b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a88:	4621      	mov	r1, r4
 8018a8a:	4628      	mov	r0, r5
 8018a8c:	bcf0      	pop	{r4, r5, r6, r7}
 8018a8e:	f7ff bee5 	b.w	801885c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08018a94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8018a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a98:	4681      	mov	r9, r0
 8018a9a:	b093      	sub	sp, #76	@ 0x4c
 8018a9c:	6810      	ldr	r0, [r2, #0]
 8018a9e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8018aa2:	4f6d      	ldr	r7, [pc, #436]	@ (8018c58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018aa4:	4688      	mov	r8, r1
 8018aa6:	6851      	ldr	r1, [r2, #4]
 8018aa8:	ac0e      	add	r4, sp, #56	@ 0x38
 8018aaa:	c403      	stmia	r4!, {r0, r1}
 8018aac:	6818      	ldr	r0, [r3, #0]
 8018aae:	6859      	ldr	r1, [r3, #4]
 8018ab0:	ac10      	add	r4, sp, #64	@ 0x40
 8018ab2:	4616      	mov	r6, r2
 8018ab4:	c403      	stmia	r4!, {r0, r1}
 8018ab6:	a80e      	add	r0, sp, #56	@ 0x38
 8018ab8:	f7f7 f8b2 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018abc:	4631      	mov	r1, r6
 8018abe:	a810      	add	r0, sp, #64	@ 0x40
 8018ac0:	f7f7 f8d6 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018ac4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8018ac8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8018acc:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8018ad0:	4e62      	ldr	r6, [pc, #392]	@ (8018c5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018ad2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8018ad6:	6830      	ldr	r0, [r6, #0]
 8018ad8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8018adc:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018ae0:	4489      	add	r9, r1
 8018ae2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8018ae6:	440a      	add	r2, r1
 8018ae8:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8018aec:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018af0:	4413      	add	r3, r2
 8018af2:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8018af6:	6803      	ldr	r3, [r0, #0]
 8018af8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018afa:	4798      	blx	r3
 8018afc:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018b00:	6830      	ldr	r0, [r6, #0]
 8018b02:	d01d      	beq.n	8018b40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8018b04:	2200      	movs	r2, #0
 8018b06:	6801      	ldr	r1, [r0, #0]
 8018b08:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8018b0c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018b10:	220b      	movs	r2, #11
 8018b12:	9207      	str	r2, [sp, #28]
 8018b14:	883a      	ldrh	r2, [r7, #0]
 8018b16:	9206      	str	r2, [sp, #24]
 8018b18:	2201      	movs	r2, #1
 8018b1a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8018b1e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8018b22:	9203      	str	r2, [sp, #12]
 8018b24:	b2a4      	uxth	r4, r4
 8018b26:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8018b2a:	9200      	str	r2, [sp, #0]
 8018b2c:	b2ad      	uxth	r5, r5
 8018b2e:	9502      	str	r5, [sp, #8]
 8018b30:	9401      	str	r4, [sp, #4]
 8018b32:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 8018b34:	4642      	mov	r2, r8
 8018b36:	4649      	mov	r1, r9
 8018b38:	47a0      	blx	r4
 8018b3a:	b013      	add	sp, #76	@ 0x4c
 8018b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b40:	6803      	ldr	r3, [r0, #0]
 8018b42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018b44:	4798      	blx	r3
 8018b46:	883b      	ldrh	r3, [r7, #0]
 8018b48:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018b4c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8018b50:	fb03 1202 	mla	r2, r3, r2, r1
 8018b54:	435d      	muls	r5, r3
 8018b56:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018b5a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8018b5e:	920c      	str	r2, [sp, #48]	@ 0x30
 8018b60:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8018b64:	1b12      	subs	r2, r2, r4
 8018b66:	920d      	str	r2, [sp, #52]	@ 0x34
 8018b68:	0062      	lsls	r2, r4, #1
 8018b6a:	1b1c      	subs	r4, r3, r4
 8018b6c:	0063      	lsls	r3, r4, #1
 8018b6e:	920a      	str	r2, [sp, #40]	@ 0x28
 8018b70:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018b72:	f04f 0e04 	mov.w	lr, #4
 8018b76:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018b78:	4298      	cmp	r0, r3
 8018b7a:	d266      	bcs.n	8018c4a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8018b7c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018b7e:	eb00 0b03 	add.w	fp, r0, r3
 8018b82:	4558      	cmp	r0, fp
 8018b84:	d25c      	bcs.n	8018c40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8018b86:	f819 3b01 	ldrb.w	r3, [r9], #1
 8018b8a:	fb1e e303 	smlabb	r3, lr, r3, lr
 8018b8e:	f858 2003 	ldr.w	r2, [r8, r3]
 8018b92:	0e11      	lsrs	r1, r2, #24
 8018b94:	d012      	beq.n	8018bbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018b96:	29ff      	cmp	r1, #255	@ 0xff
 8018b98:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8018b9c:	d110      	bne.n	8018bc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018b9e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018ba2:	d10d      	bne.n	8018bc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018ba4:	0953      	lsrs	r3, r2, #5
 8018ba6:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8018baa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018bae:	f027 0707 	bic.w	r7, r7, #7
 8018bb2:	431f      	orrs	r7, r3
 8018bb4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018bb8:	433a      	orrs	r2, r7
 8018bba:	8002      	strh	r2, [r0, #0]
 8018bbc:	3002      	adds	r0, #2
 8018bbe:	e7e0      	b.n	8018b82 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8018bc0:	fb0a f101 	mul.w	r1, sl, r1
 8018bc4:	8806      	ldrh	r6, [r0, #0]
 8018bc6:	1c4b      	adds	r3, r1, #1
 8018bc8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018bcc:	1235      	asrs	r5, r6, #8
 8018bce:	10f4      	asrs	r4, r6, #3
 8018bd0:	121b      	asrs	r3, r3, #8
 8018bd2:	00f6      	lsls	r6, r6, #3
 8018bd4:	b299      	uxth	r1, r3
 8018bd6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8018bda:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018bde:	b2f6      	uxtb	r6, r6
 8018be0:	43db      	mvns	r3, r3
 8018be2:	b2d2      	uxtb	r2, r2
 8018be4:	b2db      	uxtb	r3, r3
 8018be6:	fb1c fc01 	smulbb	ip, ip, r1
 8018bea:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018bee:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018bf2:	fb12 f201 	smulbb	r2, r2, r1
 8018bf6:	fb05 c503 	mla	r5, r5, r3, ip
 8018bfa:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8018bfe:	b2ff      	uxtb	r7, r7
 8018c00:	fb06 2203 	mla	r2, r6, r3, r2
 8018c04:	b2ad      	uxth	r5, r5
 8018c06:	fb17 f701 	smulbb	r7, r7, r1
 8018c0a:	b292      	uxth	r2, r2
 8018c0c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8018c10:	fb04 7403 	mla	r4, r4, r3, r7
 8018c14:	f105 0c01 	add.w	ip, r5, #1
 8018c18:	1c57      	adds	r7, r2, #1
 8018c1a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018c1e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018c22:	b2a4      	uxth	r4, r4
 8018c24:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018c28:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018c2c:	433d      	orrs	r5, r7
 8018c2e:	1c67      	adds	r7, r4, #1
 8018c30:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8018c34:	0964      	lsrs	r4, r4, #5
 8018c36:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8018c3a:	4325      	orrs	r5, r4
 8018c3c:	8005      	strh	r5, [r0, #0]
 8018c3e:	e7bd      	b.n	8018bbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018c40:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018c42:	4418      	add	r0, r3
 8018c44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018c46:	4499      	add	r9, r3
 8018c48:	e795      	b.n	8018b76 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8018c4a:	4b04      	ldr	r3, [pc, #16]	@ (8018c5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018c4c:	6818      	ldr	r0, [r3, #0]
 8018c4e:	6803      	ldr	r3, [r0, #0]
 8018c50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018c52:	4798      	blx	r3
 8018c54:	e771      	b.n	8018b3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8018c56:	bf00      	nop
 8018c58:	20014038 	.word	0x20014038
 8018c5c:	20014040 	.word	0x20014040

08018c60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8018c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c64:	b087      	sub	sp, #28
 8018c66:	4680      	mov	r8, r0
 8018c68:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8018c6c:	460d      	mov	r5, r1
 8018c6e:	4614      	mov	r4, r2
 8018c70:	2e00      	cmp	r6, #0
 8018c72:	f000 80b9 	beq.w	8018de8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8018c76:	6810      	ldr	r0, [r2, #0]
 8018c78:	6851      	ldr	r1, [r2, #4]
 8018c7a:	af02      	add	r7, sp, #8
 8018c7c:	c703      	stmia	r7!, {r0, r1}
 8018c7e:	6818      	ldr	r0, [r3, #0]
 8018c80:	6859      	ldr	r1, [r3, #4]
 8018c82:	af04      	add	r7, sp, #16
 8018c84:	c703      	stmia	r7!, {r0, r1}
 8018c86:	a802      	add	r0, sp, #8
 8018c88:	f7f6 ffca 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018c8c:	4621      	mov	r1, r4
 8018c8e:	a804      	add	r0, sp, #16
 8018c90:	f7f6 ffee 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018c94:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018c98:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018c9c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8018ca0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018ca4:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018ca8:	eb08 0401 	add.w	r4, r8, r1
 8018cac:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018cb0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018cb4:	440a      	add	r2, r1
 8018cb6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018cba:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018cbe:	4413      	add	r3, r2
 8018cc0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018cc4:	4b4a      	ldr	r3, [pc, #296]	@ (8018df0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018cc6:	6818      	ldr	r0, [r3, #0]
 8018cc8:	6803      	ldr	r3, [r0, #0]
 8018cca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018ccc:	4798      	blx	r3
 8018cce:	4b49      	ldr	r3, [pc, #292]	@ (8018df4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018cd0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018cd4:	881a      	ldrh	r2, [r3, #0]
 8018cd6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018cda:	2eff      	cmp	r6, #255	@ 0xff
 8018cdc:	fb02 c101 	mla	r1, r2, r1, ip
 8018ce0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018ce4:	fb02 f207 	mul.w	r2, r2, r7
 8018ce8:	f105 0104 	add.w	r1, r5, #4
 8018cec:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018cf0:	461d      	mov	r5, r3
 8018cf2:	d05a      	beq.n	8018daa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018cf4:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8018cf8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018cfc:	b2b6      	uxth	r6, r6
 8018cfe:	fa1f fe8e 	uxth.w	lr, lr
 8018d02:	9301      	str	r3, [sp, #4]
 8018d04:	4282      	cmp	r2, r0
 8018d06:	d96a      	bls.n	8018dde <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018d08:	eb00 0b0a 	add.w	fp, r0, sl
 8018d0c:	4583      	cmp	fp, r0
 8018d0e:	d940      	bls.n	8018d92 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018d10:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018d14:	8805      	ldrh	r5, [r0, #0]
 8018d16:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018d1a:	122f      	asrs	r7, r5, #8
 8018d1c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018d20:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018d24:	fb17 f70e 	smulbb	r7, r7, lr
 8018d28:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018d2c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018d30:	00ed      	lsls	r5, r5, #3
 8018d32:	fb0c 7c06 	mla	ip, ip, r6, r7
 8018d36:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8018d3a:	10df      	asrs	r7, r3, #3
 8018d3c:	b2ed      	uxtb	r5, r5
 8018d3e:	00db      	lsls	r3, r3, #3
 8018d40:	fa1f fc8c 	uxth.w	ip, ip
 8018d44:	fb19 f90e 	smulbb	r9, r9, lr
 8018d48:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018d4c:	b2db      	uxtb	r3, r3
 8018d4e:	fb15 f50e 	smulbb	r5, r5, lr
 8018d52:	fb07 9706 	mla	r7, r7, r6, r9
 8018d56:	fb03 5306 	mla	r3, r3, r6, r5
 8018d5a:	f10c 0901 	add.w	r9, ip, #1
 8018d5e:	b29b      	uxth	r3, r3
 8018d60:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8018d64:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8018d68:	f103 0c01 	add.w	ip, r3, #1
 8018d6c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018d70:	b2bf      	uxth	r7, r7
 8018d72:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018d76:	ea4c 0c09 	orr.w	ip, ip, r9
 8018d7a:	f107 0901 	add.w	r9, r7, #1
 8018d7e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8018d82:	097f      	lsrs	r7, r7, #5
 8018d84:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018d88:	ea4c 0c07 	orr.w	ip, ip, r7
 8018d8c:	f820 cb02 	strh.w	ip, [r0], #2
 8018d90:	e7bc      	b.n	8018d0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018d92:	9b01      	ldr	r3, [sp, #4]
 8018d94:	881b      	ldrh	r3, [r3, #0]
 8018d96:	eba3 0308 	sub.w	r3, r3, r8
 8018d9a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018d9e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018da2:	eba3 0308 	sub.w	r3, r3, r8
 8018da6:	441c      	add	r4, r3
 8018da8:	e7ac      	b.n	8018d04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8018daa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018dae:	4282      	cmp	r2, r0
 8018db0:	d915      	bls.n	8018dde <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018db2:	eb00 060a 	add.w	r6, r0, sl
 8018db6:	4286      	cmp	r6, r0
 8018db8:	d906      	bls.n	8018dc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8018dba:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018dbe:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018dc2:	f820 3b02 	strh.w	r3, [r0], #2
 8018dc6:	e7f6      	b.n	8018db6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018dc8:	882b      	ldrh	r3, [r5, #0]
 8018dca:	eba3 0308 	sub.w	r3, r3, r8
 8018dce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018dd2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018dd6:	eba3 0308 	sub.w	r3, r3, r8
 8018dda:	441c      	add	r4, r3
 8018ddc:	e7e7      	b.n	8018dae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018dde:	4b04      	ldr	r3, [pc, #16]	@ (8018df0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018de0:	6818      	ldr	r0, [r3, #0]
 8018de2:	6803      	ldr	r3, [r0, #0]
 8018de4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018de6:	4798      	blx	r3
 8018de8:	b007      	add	sp, #28
 8018dea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dee:	bf00      	nop
 8018df0:	20014040 	.word	0x20014040
 8018df4:	20014038 	.word	0x20014038

08018df8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8018df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018dfc:	b091      	sub	sp, #68	@ 0x44
 8018dfe:	4680      	mov	r8, r0
 8018e00:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8018e04:	460f      	mov	r7, r1
 8018e06:	4614      	mov	r4, r2
 8018e08:	2d00      	cmp	r5, #0
 8018e0a:	d051      	beq.n	8018eb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018e0c:	6810      	ldr	r0, [r2, #0]
 8018e0e:	6851      	ldr	r1, [r2, #4]
 8018e10:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8019014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018e14:	ae0c      	add	r6, sp, #48	@ 0x30
 8018e16:	c603      	stmia	r6!, {r0, r1}
 8018e18:	6818      	ldr	r0, [r3, #0]
 8018e1a:	6859      	ldr	r1, [r3, #4]
 8018e1c:	ae0e      	add	r6, sp, #56	@ 0x38
 8018e1e:	c603      	stmia	r6!, {r0, r1}
 8018e20:	a80c      	add	r0, sp, #48	@ 0x30
 8018e22:	f7f6 fefd 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018e26:	4621      	mov	r1, r4
 8018e28:	a80e      	add	r0, sp, #56	@ 0x38
 8018e2a:	f7f6 ff21 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018e2e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8018e32:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018e36:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8018e3a:	f8d9 0000 	ldr.w	r0, [r9]
 8018e3e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8018e42:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8018e46:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018e4a:	eb08 0401 	add.w	r4, r8, r1
 8018e4e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8018e52:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8019018 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8018e56:	440a      	add	r2, r1
 8018e58:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8018e5c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8018e60:	4413      	add	r3, r2
 8018e62:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8018e66:	6803      	ldr	r3, [r0, #0]
 8018e68:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018e6a:	4798      	blx	r3
 8018e6c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018e70:	f8d9 0000 	ldr.w	r0, [r9]
 8018e74:	d01f      	beq.n	8018eb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018e76:	2200      	movs	r2, #0
 8018e78:	6801      	ldr	r1, [r0, #0]
 8018e7a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8018e7e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018e82:	220b      	movs	r2, #11
 8018e84:	9207      	str	r2, [sp, #28]
 8018e86:	f8b8 2000 	ldrh.w	r2, [r8]
 8018e8a:	9206      	str	r2, [sp, #24]
 8018e8c:	2201      	movs	r2, #1
 8018e8e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018e92:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8018e96:	9203      	str	r2, [sp, #12]
 8018e98:	fa1f f28a 	uxth.w	r2, sl
 8018e9c:	9202      	str	r2, [sp, #8]
 8018e9e:	b2b6      	uxth	r6, r6
 8018ea0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018ea4:	9200      	str	r2, [sp, #0]
 8018ea6:	9601      	str	r6, [sp, #4]
 8018ea8:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 8018eaa:	463a      	mov	r2, r7
 8018eac:	4621      	mov	r1, r4
 8018eae:	47a8      	blx	r5
 8018eb0:	b011      	add	sp, #68	@ 0x44
 8018eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018eb6:	6803      	ldr	r3, [r0, #0]
 8018eb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018eba:	4798      	blx	r3
 8018ebc:	f8b8 2000 	ldrh.w	r2, [r8]
 8018ec0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018ec4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8018ec8:	2dff      	cmp	r5, #255	@ 0xff
 8018eca:	fb02 1303 	mla	r3, r2, r3, r1
 8018ece:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ed2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018ed6:	fb0a fa02 	mul.w	sl, sl, r2
 8018eda:	d062      	beq.n	8018fa2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018edc:	ea6f 0c05 	mvn.w	ip, r5
 8018ee0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018ee4:	930a      	str	r3, [sp, #40]	@ 0x28
 8018ee6:	b2ad      	uxth	r5, r5
 8018ee8:	fa5f fc8c 	uxtb.w	ip, ip
 8018eec:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8018ef0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018ef2:	4298      	cmp	r0, r3
 8018ef4:	f080 8085 	bcs.w	8019002 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018ef8:	eb00 0b09 	add.w	fp, r0, r9
 8018efc:	4558      	cmp	r0, fp
 8018efe:	d246      	bcs.n	8018f8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018f00:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018f04:	2303      	movs	r3, #3
 8018f06:	2204      	movs	r2, #4
 8018f08:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018f0c:	eb07 0a0e 	add.w	sl, r7, lr
 8018f10:	8803      	ldrh	r3, [r0, #0]
 8018f12:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8018f16:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018f1a:	1219      	asrs	r1, r3, #8
 8018f1c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018f20:	fb18 f805 	smulbb	r8, r8, r5
 8018f24:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018f28:	10da      	asrs	r2, r3, #3
 8018f2a:	fb01 810c 	mla	r1, r1, ip, r8
 8018f2e:	00db      	lsls	r3, r3, #3
 8018f30:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018f34:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018f38:	b2db      	uxtb	r3, r3
 8018f3a:	fb18 f805 	smulbb	r8, r8, r5
 8018f3e:	fb1e fe05 	smulbb	lr, lr, r5
 8018f42:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8018f46:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8018f4a:	b289      	uxth	r1, r1
 8018f4c:	fb02 820c 	mla	r2, r2, ip, r8
 8018f50:	fb03 e30c 	mla	r3, r3, ip, lr
 8018f54:	b292      	uxth	r2, r2
 8018f56:	b29b      	uxth	r3, r3
 8018f58:	f101 0801 	add.w	r8, r1, #1
 8018f5c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8018f60:	f103 0e01 	add.w	lr, r3, #1
 8018f64:	f102 0801 	add.w	r8, r2, #1
 8018f68:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018f6c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8018f70:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018f74:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018f78:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018f7c:	ea4e 0101 	orr.w	r1, lr, r1
 8018f80:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018f84:	ea41 0108 	orr.w	r1, r1, r8
 8018f88:	f820 1b02 	strh.w	r1, [r0], #2
 8018f8c:	e7b6      	b.n	8018efc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8018f8e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018f90:	881b      	ldrh	r3, [r3, #0]
 8018f92:	1b9b      	subs	r3, r3, r6
 8018f94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018f98:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018f9c:	1b9b      	subs	r3, r3, r6
 8018f9e:	441c      	add	r4, r3
 8018fa0:	e7a6      	b.n	8018ef0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018fa2:	491b      	ldr	r1, [pc, #108]	@ (8019010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018fa4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018fa8:	2203      	movs	r2, #3
 8018faa:	2504      	movs	r5, #4
 8018fac:	4550      	cmp	r0, sl
 8018fae:	d228      	bcs.n	8019002 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018fb0:	eb00 0c09 	add.w	ip, r0, r9
 8018fb4:	4560      	cmp	r0, ip
 8018fb6:	4623      	mov	r3, r4
 8018fb8:	d219      	bcs.n	8018fee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8018fba:	f893 e000 	ldrb.w	lr, [r3]
 8018fbe:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018fc2:	eb07 0b0e 	add.w	fp, r7, lr
 8018fc6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018fca:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018fce:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018fd2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8018fd6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8018fda:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018fde:	ea43 030b 	orr.w	r3, r3, fp
 8018fe2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8018fe6:	3401      	adds	r4, #1
 8018fe8:	f820 3b02 	strh.w	r3, [r0], #2
 8018fec:	e7e2      	b.n	8018fb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018fee:	f8b8 3000 	ldrh.w	r3, [r8]
 8018ff2:	1b9b      	subs	r3, r3, r6
 8018ff4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ff8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018ffc:	1b9b      	subs	r3, r3, r6
 8018ffe:	441c      	add	r4, r3
 8019000:	e7d4      	b.n	8018fac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8019002:	4b04      	ldr	r3, [pc, #16]	@ (8019014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8019004:	6818      	ldr	r0, [r3, #0]
 8019006:	6803      	ldr	r3, [r0, #0]
 8019008:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801900a:	4798      	blx	r3
 801900c:	e750      	b.n	8018eb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801900e:	bf00      	nop
 8019010:	fffff800 	.word	0xfffff800
 8019014:	20014040 	.word	0x20014040
 8019018:	20014038 	.word	0x20014038

0801901c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801901c:	b4f0      	push	{r4, r5, r6, r7}
 801901e:	460c      	mov	r4, r1
 8019020:	4611      	mov	r1, r2
 8019022:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8019026:	780f      	ldrb	r7, [r1, #0]
 8019028:	784e      	ldrb	r6, [r1, #1]
 801902a:	2f01      	cmp	r7, #1
 801902c:	461a      	mov	r2, r3
 801902e:	9b04      	ldr	r3, [sp, #16]
 8019030:	d038      	beq.n	80190a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8019032:	d31f      	bcc.n	8019074 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8019034:	2f02      	cmp	r7, #2
 8019036:	d14d      	bne.n	80190d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019038:	2e03      	cmp	r6, #3
 801903a:	d84b      	bhi.n	80190d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801903c:	e8df f006 	tbb	[pc, r6]
 8019040:	17140702 	.word	0x17140702
 8019044:	9504      	str	r5, [sp, #16]
 8019046:	4620      	mov	r0, r4
 8019048:	bcf0      	pop	{r4, r5, r6, r7}
 801904a:	f7ff be09 	b.w	8018c60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801904e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8019050:	2800      	cmp	r0, #0
 8019052:	d03f      	beq.n	80190d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019054:	6806      	ldr	r6, [r0, #0]
 8019056:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801905a:	68b5      	ldr	r5, [r6, #8]
 801905c:	4613      	mov	r3, r2
 801905e:	46ac      	mov	ip, r5
 8019060:	460a      	mov	r2, r1
 8019062:	4621      	mov	r1, r4
 8019064:	bcf0      	pop	{r4, r5, r6, r7}
 8019066:	4760      	bx	ip
 8019068:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801906c:	e7f0      	b.n	8019050 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801906e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8019072:	e7ed      	b.n	8019050 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8019074:	2e03      	cmp	r6, #3
 8019076:	d82d      	bhi.n	80190d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019078:	e8df f006 	tbb	[pc, r6]
 801907c:	110e0702 	.word	0x110e0702
 8019080:	9504      	str	r5, [sp, #16]
 8019082:	4620      	mov	r0, r4
 8019084:	bcf0      	pop	{r4, r5, r6, r7}
 8019086:	f7ff bd05 	b.w	8018a94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801908a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801908c:	b310      	cbz	r0, 80190d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801908e:	6806      	ldr	r6, [r0, #0]
 8019090:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8019094:	68f5      	ldr	r5, [r6, #12]
 8019096:	e7e1      	b.n	801905c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8019098:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801909c:	e7f6      	b.n	801908c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801909e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80190a2:	e7f3      	b.n	801908c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80190a4:	2e03      	cmp	r6, #3
 80190a6:	d815      	bhi.n	80190d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80190a8:	e8df f006 	tbb	[pc, r6]
 80190ac:	110e0702 	.word	0x110e0702
 80190b0:	9504      	str	r5, [sp, #16]
 80190b2:	4620      	mov	r0, r4
 80190b4:	bcf0      	pop	{r4, r5, r6, r7}
 80190b6:	f7ff be9f 	b.w	8018df8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80190ba:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80190bc:	b150      	cbz	r0, 80190d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80190be:	6806      	ldr	r6, [r0, #0]
 80190c0:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80190c4:	6935      	ldr	r5, [r6, #16]
 80190c6:	e7c9      	b.n	801905c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80190c8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80190cc:	e7f6      	b.n	80190bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80190ce:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80190d2:	e7f3      	b.n	80190bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80190d4:	bcf0      	pop	{r4, r5, r6, r7}
 80190d6:	4770      	bx	lr

080190d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80190d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190dc:	4604      	mov	r4, r0
 80190de:	b087      	sub	sp, #28
 80190e0:	6810      	ldr	r0, [r2, #0]
 80190e2:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 80190e6:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8019320 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80190ea:	460e      	mov	r6, r1
 80190ec:	6851      	ldr	r1, [r2, #4]
 80190ee:	ad02      	add	r5, sp, #8
 80190f0:	c503      	stmia	r5!, {r0, r1}
 80190f2:	6818      	ldr	r0, [r3, #0]
 80190f4:	6859      	ldr	r1, [r3, #4]
 80190f6:	ad04      	add	r5, sp, #16
 80190f8:	4617      	mov	r7, r2
 80190fa:	c503      	stmia	r5!, {r0, r1}
 80190fc:	a802      	add	r0, sp, #8
 80190fe:	f7f6 fd8f 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019102:	4639      	mov	r1, r7
 8019104:	a804      	add	r0, sp, #16
 8019106:	f7f6 fdb3 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801910a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801910e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019112:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8019116:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801911a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801911e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019122:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8019126:	440e      	add	r6, r1
 8019128:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801912c:	440a      	add	r2, r1
 801912e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019132:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019136:	4413      	add	r3, r2
 8019138:	f8ad 3012 	strh.w	r3, [sp, #18]
 801913c:	4b77      	ldr	r3, [pc, #476]	@ (801931c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801913e:	6818      	ldr	r0, [r3, #0]
 8019140:	6803      	ldr	r3, [r0, #0]
 8019142:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019144:	4798      	blx	r3
 8019146:	f8b9 b000 	ldrh.w	fp, [r9]
 801914a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801914e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019152:	fb0b 2303 	mla	r3, fp, r3, r2
 8019156:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801915a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801915e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8019162:	fb05 f50b 	mul.w	r5, r5, fp
 8019166:	9300      	str	r3, [sp, #0]
 8019168:	d069      	beq.n	801923e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801916a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801916e:	4558      	cmp	r0, fp
 8019170:	f080 80cc 	bcs.w	801930c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8019174:	9b00      	ldr	r3, [sp, #0]
 8019176:	18c3      	adds	r3, r0, r3
 8019178:	9301      	str	r3, [sp, #4]
 801917a:	4631      	mov	r1, r6
 801917c:	9b01      	ldr	r3, [sp, #4]
 801917e:	4298      	cmp	r0, r3
 8019180:	d24f      	bcs.n	8019222 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8019182:	f811 2b01 	ldrb.w	r2, [r1], #1
 8019186:	2a00      	cmp	r2, #0
 8019188:	d048      	beq.n	801921c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801918a:	fb0a f202 	mul.w	r2, sl, r2
 801918e:	1c53      	adds	r3, r2, #1
 8019190:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019194:	121b      	asrs	r3, r3, #8
 8019196:	d041      	beq.n	801921c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019198:	8802      	ldrh	r2, [r0, #0]
 801919a:	f8b4 c000 	ldrh.w	ip, [r4]
 801919e:	b29e      	uxth	r6, r3
 80191a0:	1215      	asrs	r5, r2, #8
 80191a2:	43db      	mvns	r3, r3
 80191a4:	b2db      	uxtb	r3, r3
 80191a6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80191aa:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80191ae:	fb15 f503 	smulbb	r5, r5, r3
 80191b2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80191b6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80191ba:	00d2      	lsls	r2, r2, #3
 80191bc:	fb07 5706 	mla	r7, r7, r6, r5
 80191c0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80191c4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80191c8:	b2d2      	uxtb	r2, r2
 80191ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80191ce:	b2bf      	uxth	r7, r7
 80191d0:	fb1e fe03 	smulbb	lr, lr, r3
 80191d4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80191d8:	fa5f fc8c 	uxtb.w	ip, ip
 80191dc:	fb12 f203 	smulbb	r2, r2, r3
 80191e0:	fb05 e506 	mla	r5, r5, r6, lr
 80191e4:	fb0c 2c06 	mla	ip, ip, r6, r2
 80191e8:	f107 0e01 	add.w	lr, r7, #1
 80191ec:	fa1f fc8c 	uxth.w	ip, ip
 80191f0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80191f4:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 80191f8:	f10c 0701 	add.w	r7, ip, #1
 80191fc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019200:	b2ad      	uxth	r5, r5
 8019202:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019206:	ea47 070e 	orr.w	r7, r7, lr
 801920a:	f105 0e01 	add.w	lr, r5, #1
 801920e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8019212:	096d      	lsrs	r5, r5, #5
 8019214:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019218:	432f      	orrs	r7, r5
 801921a:	8007      	strh	r7, [r0, #0]
 801921c:	3002      	adds	r0, #2
 801921e:	3402      	adds	r4, #2
 8019220:	e7ac      	b.n	801917c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8019222:	f8b9 3000 	ldrh.w	r3, [r9]
 8019226:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801922a:	eba3 0308 	sub.w	r3, r3, r8
 801922e:	eba6 0608 	sub.w	r6, r6, r8
 8019232:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8019236:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801923a:	440e      	add	r6, r1
 801923c:	e797      	b.n	801916e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801923e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8019242:	42a8      	cmp	r0, r5
 8019244:	d262      	bcs.n	801930c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8019246:	9b00      	ldr	r3, [sp, #0]
 8019248:	4631      	mov	r1, r6
 801924a:	eb00 0b03 	add.w	fp, r0, r3
 801924e:	4558      	cmp	r0, fp
 8019250:	d24e      	bcs.n	80192f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8019252:	f811 3b01 	ldrb.w	r3, [r1], #1
 8019256:	b12b      	cbz	r3, 8019264 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8019258:	2bff      	cmp	r3, #255	@ 0xff
 801925a:	f8b4 e000 	ldrh.w	lr, [r4]
 801925e:	d104      	bne.n	801926a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8019260:	f8a0 e000 	strh.w	lr, [r0]
 8019264:	3002      	adds	r0, #2
 8019266:	3402      	adds	r4, #2
 8019268:	e7f1      	b.n	801924e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801926a:	8802      	ldrh	r2, [r0, #0]
 801926c:	b29f      	uxth	r7, r3
 801926e:	1216      	asrs	r6, r2, #8
 8019270:	43db      	mvns	r3, r3
 8019272:	b2db      	uxtb	r3, r3
 8019274:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019278:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801927c:	fb16 f603 	smulbb	r6, r6, r3
 8019280:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8019284:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019288:	00d2      	lsls	r2, r2, #3
 801928a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801928e:	b2d2      	uxtb	r2, r2
 8019290:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019294:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019298:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801929c:	fb1a fa03 	smulbb	sl, sl, r3
 80192a0:	fa1f fc8c 	uxth.w	ip, ip
 80192a4:	fb12 f303 	smulbb	r3, r2, r3
 80192a8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80192ac:	fa5f fe8e 	uxtb.w	lr, lr
 80192b0:	fb06 a607 	mla	r6, r6, r7, sl
 80192b4:	f10c 0201 	add.w	r2, ip, #1
 80192b8:	fb0e 3307 	mla	r3, lr, r7, r3
 80192bc:	b2b6      	uxth	r6, r6
 80192be:	b29b      	uxth	r3, r3
 80192c0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80192c4:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80192c8:	f106 0a01 	add.w	sl, r6, #1
 80192cc:	f103 0c01 	add.w	ip, r3, #1
 80192d0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80192d4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80192d8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80192dc:	0976      	lsrs	r6, r6, #5
 80192de:	ea4c 0c02 	orr.w	ip, ip, r2
 80192e2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80192e6:	ea4c 0c06 	orr.w	ip, ip, r6
 80192ea:	f8a0 c000 	strh.w	ip, [r0]
 80192ee:	e7b9      	b.n	8019264 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80192f0:	f8b9 3000 	ldrh.w	r3, [r9]
 80192f4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80192f8:	eba3 0308 	sub.w	r3, r3, r8
 80192fc:	eba6 0608 	sub.w	r6, r6, r8
 8019300:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8019304:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019308:	440e      	add	r6, r1
 801930a:	e79a      	b.n	8019242 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801930c:	4b03      	ldr	r3, [pc, #12]	@ (801931c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801930e:	6818      	ldr	r0, [r3, #0]
 8019310:	6803      	ldr	r3, [r0, #0]
 8019312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019314:	4798      	blx	r3
 8019316:	b007      	add	sp, #28
 8019318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801931c:	20014040 	.word	0x20014040
 8019320:	20014038 	.word	0x20014038

08019324 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8019324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019328:	b089      	sub	sp, #36	@ 0x24
 801932a:	4607      	mov	r7, r0
 801932c:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8019330:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019332:	4688      	mov	r8, r1
 8019334:	4692      	mov	sl, r2
 8019336:	4699      	mov	r9, r3
 8019338:	2e00      	cmp	r6, #0
 801933a:	d048      	beq.n	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801933c:	4608      	mov	r0, r1
 801933e:	f7fa f81d 	bl	801337c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019342:	4605      	mov	r5, r0
 8019344:	4640      	mov	r0, r8
 8019346:	f7fa f84d 	bl	80133e4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801934a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801934e:	4640      	mov	r0, r8
 8019350:	f8ad a008 	strh.w	sl, [sp, #8]
 8019354:	f8ad 500c 	strh.w	r5, [sp, #12]
 8019358:	f8ad 900a 	strh.w	r9, [sp, #10]
 801935c:	f7fa f900 	bl	8013560 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019360:	4605      	mov	r5, r0
 8019362:	4640      	mov	r0, r8
 8019364:	f7fa f92c 	bl	80135c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8019368:	4682      	mov	sl, r0
 801936a:	4640      	mov	r0, r8
 801936c:	f7fa f97c 	bl	8013668 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019370:	2810      	cmp	r0, #16
 8019372:	d82c      	bhi.n	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019374:	e8df f010 	tbh	[pc, r0, lsl #1]
 8019378:	00ba00ca 	.word	0x00ba00ca
 801937c:	002b0011 	.word	0x002b0011
 8019380:	002b002b 	.word	0x002b002b
 8019384:	002b002b 	.word	0x002b002b
 8019388:	002b002b 	.word	0x002b002b
 801938c:	00c1002b 	.word	0x00c1002b
 8019390:	002b002b 	.word	0x002b002b
 8019394:	002b0180 	.word	0x002b0180
 8019398:	0173      	.short	0x0173
 801939a:	4bbc      	ldr	r3, [pc, #752]	@ (801968c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801939c:	6818      	ldr	r0, [r3, #0]
 801939e:	6803      	ldr	r3, [r0, #0]
 80193a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80193a2:	4798      	blx	r3
 80193a4:	2eff      	cmp	r6, #255	@ 0xff
 80193a6:	d101      	bne.n	80193ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80193a8:	0683      	lsls	r3, r0, #26
 80193aa:	d506      	bpl.n	80193ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 80193ac:	4633      	mov	r3, r6
 80193ae:	4622      	mov	r2, r4
 80193b0:	a902      	add	r1, sp, #8
 80193b2:	4628      	mov	r0, r5
 80193b4:	f7ff f8fc 	bl	80185b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80193b8:	e009      	b.n	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80193ba:	4640      	mov	r0, r8
 80193bc:	f7fa f898 	bl	80134f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80193c0:	b940      	cbnz	r0, 80193d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 80193c2:	4623      	mov	r3, r4
 80193c4:	aa02      	add	r2, sp, #8
 80193c6:	4629      	mov	r1, r5
 80193c8:	4638      	mov	r0, r7
 80193ca:	f7ff f9d7 	bl	801877c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80193ce:	b009      	add	sp, #36	@ 0x24
 80193d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193d4:	f10d 0918 	add.w	r9, sp, #24
 80193d8:	4641      	mov	r1, r8
 80193da:	4648      	mov	r0, r9
 80193dc:	f7fa f836 	bl	801344c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80193e0:	e899 0003 	ldmia.w	r9, {r0, r1}
 80193e4:	f10d 0810 	add.w	r8, sp, #16
 80193e8:	e888 0003 	stmia.w	r8, {r0, r1}
 80193ec:	4640      	mov	r0, r8
 80193ee:	4621      	mov	r1, r4
 80193f0:	f7f1 fca6 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 80193f4:	4640      	mov	r0, r8
 80193f6:	f7f1 fce6 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80193fa:	2800      	cmp	r0, #0
 80193fc:	d1d6      	bne.n	80193ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80193fe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019402:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8019406:	4293      	cmp	r3, r2
 8019408:	dd12      	ble.n	8019430 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801940a:	1a9b      	subs	r3, r3, r2
 801940c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019410:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019414:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019418:	f8ad 201a 	strh.w	r2, [sp, #26]
 801941c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019420:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019424:	464a      	mov	r2, r9
 8019426:	4633      	mov	r3, r6
 8019428:	a902      	add	r1, sp, #8
 801942a:	4628      	mov	r0, r5
 801942c:	f7ff f8c0 	bl	80185b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019430:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019434:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019438:	4293      	cmp	r3, r2
 801943a:	dd12      	ble.n	8019462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801943c:	1a9b      	subs	r3, r3, r2
 801943e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019442:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019446:	f8ad 2018 	strh.w	r2, [sp, #24]
 801944a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801944e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019452:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019456:	23ff      	movs	r3, #255	@ 0xff
 8019458:	464a      	mov	r2, r9
 801945a:	a902      	add	r1, sp, #8
 801945c:	4628      	mov	r0, r5
 801945e:	f7ff f8a7 	bl	80185b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019462:	4643      	mov	r3, r8
 8019464:	aa02      	add	r2, sp, #8
 8019466:	4629      	mov	r1, r5
 8019468:	4638      	mov	r0, r7
 801946a:	f7ff f987 	bl	801877c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801946e:	88a2      	ldrh	r2, [r4, #4]
 8019470:	8823      	ldrh	r3, [r4, #0]
 8019472:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019476:	4413      	add	r3, r2
 8019478:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801947c:	440a      	add	r2, r1
 801947e:	b29b      	uxth	r3, r3
 8019480:	b292      	uxth	r2, r2
 8019482:	b211      	sxth	r1, r2
 8019484:	b218      	sxth	r0, r3
 8019486:	4288      	cmp	r0, r1
 8019488:	dd12      	ble.n	80194b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801948a:	1a9b      	subs	r3, r3, r2
 801948c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019490:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8019494:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019498:	f8ad 301c 	strh.w	r3, [sp, #28]
 801949c:	f8ad 001e 	strh.w	r0, [sp, #30]
 80194a0:	23ff      	movs	r3, #255	@ 0xff
 80194a2:	464a      	mov	r2, r9
 80194a4:	a902      	add	r1, sp, #8
 80194a6:	4628      	mov	r0, r5
 80194a8:	f8ad 601a 	strh.w	r6, [sp, #26]
 80194ac:	f7ff f880 	bl	80185b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80194b0:	88e2      	ldrh	r2, [r4, #6]
 80194b2:	8863      	ldrh	r3, [r4, #2]
 80194b4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80194b8:	4413      	add	r3, r2
 80194ba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80194be:	440a      	add	r2, r1
 80194c0:	b29b      	uxth	r3, r3
 80194c2:	b292      	uxth	r2, r2
 80194c4:	b211      	sxth	r1, r2
 80194c6:	b218      	sxth	r0, r3
 80194c8:	4288      	cmp	r0, r1
 80194ca:	dd80      	ble.n	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80194cc:	1a9b      	subs	r3, r3, r2
 80194ce:	f9b4 6000 	ldrsh.w	r6, [r4]
 80194d2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80194d6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80194da:	f8ad 6018 	strh.w	r6, [sp, #24]
 80194de:	f8ad 101a 	strh.w	r1, [sp, #26]
 80194e2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80194e6:	23ff      	movs	r3, #255	@ 0xff
 80194e8:	464a      	mov	r2, r9
 80194ea:	e761      	b.n	80193b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 80194ec:	4633      	mov	r3, r6
 80194ee:	4622      	mov	r2, r4
 80194f0:	a902      	add	r1, sp, #8
 80194f2:	4628      	mov	r0, r5
 80194f4:	f7ff f9b2 	bl	801885c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80194f8:	e769      	b.n	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80194fa:	e9cd 4600 	strd	r4, r6, [sp]
 80194fe:	ab02      	add	r3, sp, #8
 8019500:	4652      	mov	r2, sl
 8019502:	4629      	mov	r1, r5
 8019504:	4638      	mov	r0, r7
 8019506:	f7ff fd89 	bl	801901c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801950a:	e760      	b.n	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801950c:	4640      	mov	r0, r8
 801950e:	f7f9 ffef 	bl	80134f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019512:	b948      	cbnz	r0, 8019528 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8019514:	683b      	ldr	r3, [r7, #0]
 8019516:	e9cd 6000 	strd	r6, r0, [sp]
 801951a:	aa02      	add	r2, sp, #8
 801951c:	68de      	ldr	r6, [r3, #12]
 801951e:	4629      	mov	r1, r5
 8019520:	4623      	mov	r3, r4
 8019522:	4638      	mov	r0, r7
 8019524:	47b0      	blx	r6
 8019526:	e752      	b.n	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019528:	f10d 0918 	add.w	r9, sp, #24
 801952c:	4641      	mov	r1, r8
 801952e:	4648      	mov	r0, r9
 8019530:	f7f9 ff8c 	bl	801344c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019534:	e899 0003 	ldmia.w	r9, {r0, r1}
 8019538:	f10d 0810 	add.w	r8, sp, #16
 801953c:	e888 0003 	stmia.w	r8, {r0, r1}
 8019540:	4640      	mov	r0, r8
 8019542:	4621      	mov	r1, r4
 8019544:	f7f1 fbfc 	bl	800ad40 <_ZN8touchgfx4RectaNERKS0_>
 8019548:	4640      	mov	r0, r8
 801954a:	f7f1 fc3c 	bl	800adc6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801954e:	b138      	cbz	r0, 8019560 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8019550:	9600      	str	r6, [sp, #0]
 8019552:	4623      	mov	r3, r4
 8019554:	aa02      	add	r2, sp, #8
 8019556:	4651      	mov	r1, sl
 8019558:	4628      	mov	r0, r5
 801955a:	f7ff fdbd 	bl	80190d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801955e:	e736      	b.n	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019560:	683b      	ldr	r3, [r7, #0]
 8019562:	e9cd 6000 	strd	r6, r0, [sp]
 8019566:	aa02      	add	r2, sp, #8
 8019568:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801956c:	4629      	mov	r1, r5
 801956e:	4643      	mov	r3, r8
 8019570:	4638      	mov	r0, r7
 8019572:	47d8      	blx	fp
 8019574:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019578:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801957c:	4293      	cmp	r3, r2
 801957e:	dd13      	ble.n	80195a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8019580:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019584:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019588:	f8ad 0018 	strh.w	r0, [sp, #24]
 801958c:	1a9b      	subs	r3, r3, r2
 801958e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019592:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019596:	f8ad 301e 	strh.w	r3, [sp, #30]
 801959a:	9600      	str	r6, [sp, #0]
 801959c:	464b      	mov	r3, r9
 801959e:	aa02      	add	r2, sp, #8
 80195a0:	4651      	mov	r1, sl
 80195a2:	4628      	mov	r0, r5
 80195a4:	f7ff fd98 	bl	80190d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80195a8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80195ac:	f9b4 2000 	ldrsh.w	r2, [r4]
 80195b0:	4293      	cmp	r3, r2
 80195b2:	dd13      	ble.n	80195dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 80195b4:	1a9b      	subs	r3, r3, r2
 80195b6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80195ba:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80195be:	f8ad 2018 	strh.w	r2, [sp, #24]
 80195c2:	f8ad 001a 	strh.w	r0, [sp, #26]
 80195c6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80195ca:	f8ad 101e 	strh.w	r1, [sp, #30]
 80195ce:	9600      	str	r6, [sp, #0]
 80195d0:	464b      	mov	r3, r9
 80195d2:	aa02      	add	r2, sp, #8
 80195d4:	4651      	mov	r1, sl
 80195d6:	4628      	mov	r0, r5
 80195d8:	f7ff fd7e 	bl	80190d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80195dc:	88a2      	ldrh	r2, [r4, #4]
 80195de:	8823      	ldrh	r3, [r4, #0]
 80195e0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80195e4:	4413      	add	r3, r2
 80195e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80195ea:	440a      	add	r2, r1
 80195ec:	b29b      	uxth	r3, r3
 80195ee:	b292      	uxth	r2, r2
 80195f0:	b211      	sxth	r1, r2
 80195f2:	b218      	sxth	r0, r3
 80195f4:	4288      	cmp	r0, r1
 80195f6:	dd13      	ble.n	8019620 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 80195f8:	1a9b      	subs	r3, r3, r2
 80195fa:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80195fe:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8019602:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019606:	f8ad 301c 	strh.w	r3, [sp, #28]
 801960a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801960e:	9600      	str	r6, [sp, #0]
 8019610:	464b      	mov	r3, r9
 8019612:	aa02      	add	r2, sp, #8
 8019614:	4651      	mov	r1, sl
 8019616:	4628      	mov	r0, r5
 8019618:	f8ad 701a 	strh.w	r7, [sp, #26]
 801961c:	f7ff fd5c 	bl	80190d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019620:	88e2      	ldrh	r2, [r4, #6]
 8019622:	8863      	ldrh	r3, [r4, #2]
 8019624:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019628:	4413      	add	r3, r2
 801962a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801962e:	440a      	add	r2, r1
 8019630:	b29b      	uxth	r3, r3
 8019632:	b292      	uxth	r2, r2
 8019634:	b211      	sxth	r1, r2
 8019636:	b218      	sxth	r0, r3
 8019638:	4288      	cmp	r0, r1
 801963a:	f77f aec8 	ble.w	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801963e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8019642:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019646:	f8ad 7018 	strh.w	r7, [sp, #24]
 801964a:	1a9b      	subs	r3, r3, r2
 801964c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019650:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019654:	f8ad 001c 	strh.w	r0, [sp, #28]
 8019658:	9600      	str	r6, [sp, #0]
 801965a:	464b      	mov	r3, r9
 801965c:	e77a      	b.n	8019554 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801965e:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8019662:	2800      	cmp	r0, #0
 8019664:	f43f aeb3 	beq.w	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019668:	6803      	ldr	r3, [r0, #0]
 801966a:	9600      	str	r6, [sp, #0]
 801966c:	68de      	ldr	r6, [r3, #12]
 801966e:	4623      	mov	r3, r4
 8019670:	aa02      	add	r2, sp, #8
 8019672:	4629      	mov	r1, r5
 8019674:	47b0      	blx	r6
 8019676:	e6aa      	b.n	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019678:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801967c:	2800      	cmp	r0, #0
 801967e:	f43f aea6 	beq.w	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019682:	6803      	ldr	r3, [r0, #0]
 8019684:	9600      	str	r6, [sp, #0]
 8019686:	689e      	ldr	r6, [r3, #8]
 8019688:	e7f1      	b.n	801966e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801968a:	bf00      	nop
 801968c:	20014040 	.word	0x20014040

08019690 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8019690:	b180      	cbz	r0, 80196b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8019692:	2903      	cmp	r1, #3
 8019694:	d81c      	bhi.n	80196d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8019696:	e8df f001 	tbb	[pc, r1]
 801969a:	1d02      	.short	0x1d02
 801969c:	1f08      	.short	0x1f08
 801969e:	4b10      	ldr	r3, [pc, #64]	@ (80196e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80196a0:	8818      	ldrh	r0, [r3, #0]
 80196a2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80196a6:	4240      	negs	r0, r0
 80196a8:	4770      	bx	lr
 80196aa:	4b0d      	ldr	r3, [pc, #52]	@ (80196e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80196ac:	8818      	ldrh	r0, [r3, #0]
 80196ae:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80196b2:	4770      	bx	lr
 80196b4:	2903      	cmp	r1, #3
 80196b6:	d80b      	bhi.n	80196d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80196b8:	a301      	add	r3, pc, #4	@ (adr r3, 80196c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80196ba:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80196be:	bf00      	nop
 80196c0:	080196d5 	.word	0x080196d5
 80196c4:	080196ab 	.word	0x080196ab
 80196c8:	080196d9 	.word	0x080196d9
 80196cc:	0801969f 	.word	0x0801969f
 80196d0:	2000      	movs	r0, #0
 80196d2:	4770      	bx	lr
 80196d4:	2001      	movs	r0, #1
 80196d6:	4770      	bx	lr
 80196d8:	f04f 30ff 	mov.w	r0, #4294967295
 80196dc:	4770      	bx	lr
 80196de:	bf00      	nop
 80196e0:	20014038 	.word	0x20014038

080196e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80196e4:	b180      	cbz	r0, 8019708 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80196e6:	2903      	cmp	r1, #3
 80196e8:	d81c      	bhi.n	8019724 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80196ea:	e8df f001 	tbb	[pc, r1]
 80196ee:	021d      	.short	0x021d
 80196f0:	071f      	.short	0x071f
 80196f2:	4b10      	ldr	r3, [pc, #64]	@ (8019734 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80196f4:	8818      	ldrh	r0, [r3, #0]
 80196f6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80196fa:	4770      	bx	lr
 80196fc:	4b0d      	ldr	r3, [pc, #52]	@ (8019734 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80196fe:	8818      	ldrh	r0, [r3, #0]
 8019700:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019704:	4240      	negs	r0, r0
 8019706:	4770      	bx	lr
 8019708:	2903      	cmp	r1, #3
 801970a:	d80b      	bhi.n	8019724 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801970c:	a301      	add	r3, pc, #4	@ (adr r3, 8019714 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801970e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019712:	bf00      	nop
 8019714:	080196f3 	.word	0x080196f3
 8019718:	0801972d 	.word	0x0801972d
 801971c:	080196fd 	.word	0x080196fd
 8019720:	08019729 	.word	0x08019729
 8019724:	2000      	movs	r0, #0
 8019726:	4770      	bx	lr
 8019728:	2001      	movs	r0, #1
 801972a:	4770      	bx	lr
 801972c:	f04f 30ff 	mov.w	r0, #4294967295
 8019730:	4770      	bx	lr
 8019732:	bf00      	nop
 8019734:	20014038 	.word	0x20014038

08019738 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8019738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801973c:	b099      	sub	sp, #100	@ 0x64
 801973e:	910d      	str	r1, [sp, #52]	@ 0x34
 8019740:	a914      	add	r1, sp, #80	@ 0x50
 8019742:	e881 000c 	stmia.w	r1, {r2, r3}
 8019746:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801974a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801974c:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8019750:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8019754:	9310      	str	r3, [sp, #64]	@ 0x40
 8019756:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801975a:	9308      	str	r3, [sp, #32]
 801975c:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8019760:	9309      	str	r3, [sp, #36]	@ 0x24
 8019762:	7b4b      	ldrb	r3, [r1, #13]
 8019764:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8019768:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801976c:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8019770:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8019772:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8019776:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801977a:	ea4f 1843 	mov.w	r8, r3, lsl #5
 801977e:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8019782:	f891 8006 	ldrb.w	r8, [r1, #6]
 8019786:	ea58 0800 	orrs.w	r8, r8, r0
 801978a:	f000 81ce 	beq.w	8019b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801978e:	011b      	lsls	r3, r3, #4
 8019790:	79c8      	ldrb	r0, [r1, #7]
 8019792:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8019796:	4303      	orrs	r3, r0
 8019798:	930c      	str	r3, [sp, #48]	@ 0x30
 801979a:	f000 81c6 	beq.w	8019b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801979e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80197a2:	b29b      	uxth	r3, r3
 80197a4:	2d00      	cmp	r5, #0
 80197a6:	f000 812c 	beq.w	8019a02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 80197aa:	1aed      	subs	r5, r5, r3
 80197ac:	b2ad      	uxth	r5, r5
 80197ae:	0429      	lsls	r1, r5, #16
 80197b0:	d502      	bpl.n	80197b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 80197b2:	1b64      	subs	r4, r4, r5
 80197b4:	b224      	sxth	r4, r4
 80197b6:	2500      	movs	r5, #0
 80197b8:	f9b2 0000 	ldrsh.w	r0, [r2]
 80197bc:	8891      	ldrh	r1, [r2, #4]
 80197be:	4284      	cmp	r4, r0
 80197c0:	b283      	uxth	r3, r0
 80197c2:	bfb8      	it	lt
 80197c4:	18ed      	addlt	r5, r5, r3
 80197c6:	440b      	add	r3, r1
 80197c8:	b21b      	sxth	r3, r3
 80197ca:	930a      	str	r3, [sp, #40]	@ 0x28
 80197cc:	88d3      	ldrh	r3, [r2, #6]
 80197ce:	8852      	ldrh	r2, [r2, #2]
 80197d0:	4413      	add	r3, r2
 80197d2:	b21b      	sxth	r3, r3
 80197d4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80197d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80197d8:	930e      	str	r3, [sp, #56]	@ 0x38
 80197da:	bfb8      	it	lt
 80197dc:	1b2c      	sublt	r4, r5, r4
 80197de:	4bb5      	ldr	r3, [pc, #724]	@ (8019ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 80197e0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80197e2:	f893 b000 	ldrb.w	fp, [r3]
 80197e6:	bfbc      	itt	lt
 80197e8:	b2a5      	uxthlt	r5, r4
 80197ea:	4604      	movlt	r4, r0
 80197ec:	4653      	mov	r3, sl
 80197ee:	4621      	mov	r1, r4
 80197f0:	a814      	add	r0, sp, #80	@ 0x50
 80197f2:	f7f6 f889 	bl	800f908 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80197f6:	4621      	mov	r1, r4
 80197f8:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 80197fc:	4653      	mov	r3, sl
 80197fe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019800:	a814      	add	r0, sp, #80	@ 0x50
 8019802:	f7f6 f89e 	bl	800f942 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8019806:	a918      	add	r1, sp, #96	@ 0x60
 8019808:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801980c:	a817      	add	r0, sp, #92	@ 0x5c
 801980e:	f7f6 f9c5 	bl	800fb9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8019812:	f1ba 0f00 	cmp.w	sl, #0
 8019816:	f040 80f7 	bne.w	8019a08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 801981a:	f1bb 0f01 	cmp.w	fp, #1
 801981e:	f040 80fb 	bne.w	8019a18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 8019822:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019824:	2b00      	cmp	r3, #0
 8019826:	f040 81a8 	bne.w	8019b7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 801982a:	fa1f f288 	uxth.w	r2, r8
 801982e:	b905      	cbnz	r5, 8019832 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 8019830:	b15e      	cbz	r6, 801984a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8019832:	9808      	ldr	r0, [sp, #32]
 8019834:	fb06 5302 	mla	r3, r6, r2, r5
 8019838:	4343      	muls	r3, r0
 801983a:	4631      	mov	r1, r6
 801983c:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8019840:	f003 0607 	and.w	r6, r3, #7
 8019844:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019846:	1a5b      	subs	r3, r3, r1
 8019848:	930e      	str	r3, [sp, #56]	@ 0x38
 801984a:	f10b 31ff 	add.w	r1, fp, #4294967295
 801984e:	424b      	negs	r3, r1
 8019850:	414b      	adcs	r3, r1
 8019852:	4618      	mov	r0, r3
 8019854:	4651      	mov	r1, sl
 8019856:	930c      	str	r3, [sp, #48]	@ 0x30
 8019858:	f7ff ff1a 	bl	8019690 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801985c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801985e:	4683      	mov	fp, r0
 8019860:	4618      	mov	r0, r3
 8019862:	f7ff ff3f 	bl	80196e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8019866:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019868:	4603      	mov	r3, r0
 801986a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801986c:	eba1 0a00 	sub.w	sl, r1, r0
 8019870:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019872:	458a      	cmp	sl, r1
 8019874:	bfa8      	it	ge
 8019876:	468a      	movge	sl, r1
 8019878:	f1ba 0f00 	cmp.w	sl, #0
 801987c:	f340 8155 	ble.w	8019b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019880:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019882:	1b64      	subs	r4, r4, r5
 8019884:	1b0c      	subs	r4, r1, r4
 8019886:	4544      	cmp	r4, r8
 8019888:	bfd4      	ite	le
 801988a:	ebc5 0504 	rsble	r5, r5, r4
 801988e:	ebc5 0508 	rsbgt	r5, r5, r8
 8019892:	2d00      	cmp	r5, #0
 8019894:	f340 8149 	ble.w	8019b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019898:	9908      	ldr	r1, [sp, #32]
 801989a:	1b52      	subs	r2, r2, r5
 801989c:	434a      	muls	r2, r1
 801989e:	920e      	str	r2, [sp, #56]	@ 0x38
 80198a0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80198a2:	2a00      	cmp	r2, #0
 80198a4:	f040 8175 	bne.w	8019b92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 80198a8:	4a83      	ldr	r2, [pc, #524]	@ (8019ab8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 80198aa:	930a      	str	r3, [sp, #40]	@ 0x28
 80198ac:	6810      	ldr	r0, [r2, #0]
 80198ae:	6802      	ldr	r2, [r0, #0]
 80198b0:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80198b2:	4790      	blx	r2
 80198b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80198b6:	9908      	ldr	r1, [sp, #32]
 80198b8:	2201      	movs	r2, #1
 80198ba:	408a      	lsls	r2, r1
 80198bc:	3a01      	subs	r2, #1
 80198be:	497f      	ldr	r1, [pc, #508]	@ (8019abc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 80198c0:	b2d2      	uxtb	r2, r2
 80198c2:	880c      	ldrh	r4, [r1, #0]
 80198c4:	920c      	str	r2, [sp, #48]	@ 0x30
 80198c6:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 80198ca:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 80198ce:	fb04 1202 	mla	r2, r4, r2, r1
 80198d2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80198d6:	ea4f 2419 	mov.w	r4, r9, lsr #8
 80198da:	920a      	str	r2, [sp, #40]	@ 0x28
 80198dc:	f3c9 4207 	ubfx	r2, r9, #16, #8
 80198e0:	9212      	str	r2, [sp, #72]	@ 0x48
 80198e2:	b2e2      	uxtb	r2, r4
 80198e4:	9211      	str	r2, [sp, #68]	@ 0x44
 80198e6:	fa5f f289 	uxtb.w	r2, r9
 80198ea:	9210      	str	r2, [sp, #64]	@ 0x40
 80198ec:	4a74      	ldr	r2, [pc, #464]	@ (8019ac0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 80198ee:	ea4f 1159 	mov.w	r1, r9, lsr #5
 80198f2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80198f6:	4022      	ands	r2, r4
 80198f8:	430a      	orrs	r2, r1
 80198fa:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 80198fe:	ea42 0209 	orr.w	r2, r2, r9
 8019902:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8019906:	b292      	uxth	r2, r2
 8019908:	fb05 3b1b 	mls	fp, r5, fp, r3
 801990c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801990e:	460b      	mov	r3, r1
 8019910:	783a      	ldrb	r2, [r7, #0]
 8019912:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019914:	436b      	muls	r3, r5
 8019916:	4132      	asrs	r2, r6
 8019918:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 801991c:	b2d2      	uxtb	r2, r2
 801991e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019920:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8019924:	f0c0 8149 	bcc.w	8019bba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 8019928:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801992c:	46a9      	mov	r9, r5
 801992e:	f119 39ff 	adds.w	r9, r9, #4294967295
 8019932:	f0c0 8132 	bcc.w	8019b9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 8019936:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019938:	4013      	ands	r3, r2
 801993a:	d054      	beq.n	80199e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 801993c:	20ff      	movs	r0, #255	@ 0xff
 801993e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019940:	fb90 f1f1 	sdiv	r1, r0, r1
 8019944:	434b      	muls	r3, r1
 8019946:	2bfe      	cmp	r3, #254	@ 0xfe
 8019948:	dd03      	ble.n	8019952 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 801994a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801994c:	4281      	cmp	r1, r0
 801994e:	f000 8122 	beq.w	8019b96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8019952:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019954:	f8b8 4000 	ldrh.w	r4, [r8]
 8019958:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801995a:	fb11 f303 	smulbb	r3, r1, r3
 801995e:	b29b      	uxth	r3, r3
 8019960:	1c59      	adds	r1, r3, #1
 8019962:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019966:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801996a:	fa1f fe83 	uxth.w	lr, r3
 801996e:	1221      	asrs	r1, r4, #8
 8019970:	fb10 fb0e 	smulbb	fp, r0, lr
 8019974:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019978:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801997a:	43db      	mvns	r3, r3
 801997c:	b2db      	uxtb	r3, r3
 801997e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8019982:	fb01 b103 	mla	r1, r1, r3, fp
 8019986:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 801998a:	fb10 fb0e 	smulbb	fp, r0, lr
 801998e:	00e4      	lsls	r4, r4, #3
 8019990:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8019992:	b2e4      	uxtb	r4, r4
 8019994:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019998:	fb10 fe0e 	smulbb	lr, r0, lr
 801999c:	fb04 e403 	mla	r4, r4, r3, lr
 80199a0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80199a4:	b289      	uxth	r1, r1
 80199a6:	b2a4      	uxth	r4, r4
 80199a8:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 80199ac:	fb0c bc03 	mla	ip, ip, r3, fp
 80199b0:	1c4b      	adds	r3, r1, #1
 80199b2:	f104 0b01 	add.w	fp, r4, #1
 80199b6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80199ba:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 80199be:	fa1f fc8c 	uxth.w	ip, ip
 80199c2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80199c6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80199ca:	ea4b 0101 	orr.w	r1, fp, r1
 80199ce:	f10c 0b01 	add.w	fp, ip, #1
 80199d2:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 80199d6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80199da:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80199de:	ea41 010b 	orr.w	r1, r1, fp
 80199e2:	f8a8 1000 	strh.w	r1, [r8]
 80199e6:	9b08      	ldr	r3, [sp, #32]
 80199e8:	441e      	add	r6, r3
 80199ea:	b2b6      	uxth	r6, r6
 80199ec:	2e07      	cmp	r6, #7
 80199ee:	bf98      	it	ls
 80199f0:	411a      	asrls	r2, r3
 80199f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80199f4:	bf89      	itett	hi
 80199f6:	787a      	ldrbhi	r2, [r7, #1]
 80199f8:	b2d2      	uxtbls	r2, r2
 80199fa:	3701      	addhi	r7, #1
 80199fc:	2600      	movhi	r6, #0
 80199fe:	4498      	add	r8, r3
 8019a00:	e795      	b.n	801992e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 8019a02:	441c      	add	r4, r3
 8019a04:	b224      	sxth	r4, r4
 8019a06:	e6d7      	b.n	80197b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8019a08:	f1ba 0f01 	cmp.w	sl, #1
 8019a0c:	f47f af09 	bne.w	8019822 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019a10:	f1bb 0f01 	cmp.w	fp, #1
 8019a14:	f47f af05 	bne.w	8019822 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019a18:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019a1a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019a1c:	1a99      	subs	r1, r3, r2
 8019a1e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019a20:	1b9b      	subs	r3, r3, r6
 8019a22:	4299      	cmp	r1, r3
 8019a24:	bfa8      	it	ge
 8019a26:	4619      	movge	r1, r3
 8019a28:	2900      	cmp	r1, #0
 8019a2a:	9112      	str	r1, [sp, #72]	@ 0x48
 8019a2c:	dd7d      	ble.n	8019b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019a2e:	4a22      	ldr	r2, [pc, #136]	@ (8019ab8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8019a30:	9211      	str	r2, [sp, #68]	@ 0x44
 8019a32:	6810      	ldr	r0, [r2, #0]
 8019a34:	6803      	ldr	r3, [r0, #0]
 8019a36:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019a38:	4798      	blx	r3
 8019a3a:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8019a3e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8019a40:	d006      	beq.n	8019a50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8019a42:	9b08      	ldr	r3, [sp, #32]
 8019a44:	2b04      	cmp	r3, #4
 8019a46:	d133      	bne.n	8019ab0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8019a48:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019a4a:	3300      	adds	r3, #0
 8019a4c:	bf18      	it	ne
 8019a4e:	2301      	movne	r3, #1
 8019a50:	0582      	lsls	r2, r0, #22
 8019a52:	fa1f fc88 	uxth.w	ip, r8
 8019a56:	f140 80b9 	bpl.w	8019bcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8019a5a:	9808      	ldr	r0, [sp, #32]
 8019a5c:	2808      	cmp	r0, #8
 8019a5e:	f040 80b5 	bne.w	8019bcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8019a62:	2b00      	cmp	r3, #0
 8019a64:	d064      	beq.n	8019b30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 8019a66:	f10c 0c01 	add.w	ip, ip, #1
 8019a6a:	f02c 0301 	bic.w	r3, ip, #1
 8019a6e:	b29b      	uxth	r3, r3
 8019a70:	bb45      	cbnz	r5, 8019ac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8019a72:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019a74:	eb08 0004 	add.w	r0, r8, r4
 8019a78:	4290      	cmp	r0, r2
 8019a7a:	dc23      	bgt.n	8019ac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8019a7c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019a7e:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8019a82:	6810      	ldr	r0, [r2, #0]
 8019a84:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019a88:	6804      	ldr	r4, [r0, #0]
 8019a8a:	9506      	str	r5, [sp, #24]
 8019a8c:	f44f 7580 	mov.w	r5, #256	@ 0x100
 8019a90:	9505      	str	r5, [sp, #20]
 8019a92:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019a94:	9302      	str	r3, [sp, #8]
 8019a96:	b289      	uxth	r1, r1
 8019a98:	e9cd 3100 	strd	r3, r1, [sp]
 8019a9c:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8019aa0:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019aa4:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8019aa6:	4673      	mov	r3, lr
 8019aa8:	fb06 710c 	mla	r1, r6, ip, r7
 8019aac:	47a0      	blx	r4
 8019aae:	e03c      	b.n	8019b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019ab0:	2300      	movs	r3, #0
 8019ab2:	e7cd      	b.n	8019a50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8019ab4:	20014036 	.word	0x20014036
 8019ab8:	20014040 	.word	0x20014040
 8019abc:	20014038 	.word	0x20014038
 8019ac0:	00fff800 	.word	0x00fff800
 8019ac4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019ac6:	eba4 0e05 	sub.w	lr, r4, r5
 8019aca:	eba2 0e0e 	sub.w	lr, r2, lr
 8019ace:	45c6      	cmp	lr, r8
 8019ad0:	bfd4      	ite	le
 8019ad2:	ebc5 0e0e 	rsble	lr, r5, lr
 8019ad6:	ebc5 0e08 	rsbgt	lr, r5, r8
 8019ada:	f1be 0f00 	cmp.w	lr, #0
 8019ade:	d024      	beq.n	8019b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019ae0:	07e8      	lsls	r0, r5, #31
 8019ae2:	f53f ae9e 	bmi.w	8019822 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019ae6:	f01e 0001 	ands.w	r0, lr, #1
 8019aea:	f47f ae9a 	bne.w	8019822 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019aee:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019af0:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 8019af4:	6814      	ldr	r4, [r2, #0]
 8019af6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019afa:	086d      	lsrs	r5, r5, #1
 8019afc:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019b00:	fb06 560c 	mla	r6, r6, ip, r5
 8019b04:	6825      	ldr	r5, [r4, #0]
 8019b06:	9006      	str	r0, [sp, #24]
 8019b08:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8019b0c:	9005      	str	r0, [sp, #20]
 8019b0e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8019b10:	9302      	str	r3, [sp, #8]
 8019b12:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8019b16:	b289      	uxth	r1, r1
 8019b18:	fa1f f38e 	uxth.w	r3, lr
 8019b1c:	9101      	str	r1, [sp, #4]
 8019b1e:	9300      	str	r3, [sp, #0]
 8019b20:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 8019b22:	4643      	mov	r3, r8
 8019b24:	19b9      	adds	r1, r7, r6
 8019b26:	4620      	mov	r0, r4
 8019b28:	47a8      	blx	r5
 8019b2a:	b019      	add	sp, #100	@ 0x64
 8019b2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b30:	4a28      	ldr	r2, [pc, #160]	@ (8019bd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8019b32:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8019b36:	6810      	ldr	r0, [r2, #0]
 8019b38:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019b3c:	f8d0 a000 	ldr.w	sl, [r0]
 8019b40:	9306      	str	r3, [sp, #24]
 8019b42:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8019b46:	9305      	str	r3, [sp, #20]
 8019b48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019b4a:	f8cd c008 	str.w	ip, [sp, #8]
 8019b4e:	e9cd 9303 	strd	r9, r3, [sp, #12]
 8019b52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019b54:	1b64      	subs	r4, r4, r5
 8019b56:	1b1c      	subs	r4, r3, r4
 8019b58:	fb06 5608 	mla	r6, r6, r8, r5
 8019b5c:	4544      	cmp	r4, r8
 8019b5e:	bfd4      	ite	le
 8019b60:	ebc5 0504 	rsble	r5, r5, r4
 8019b64:	ebc5 0508 	rsbgt	r5, r5, r8
 8019b68:	b289      	uxth	r1, r1
 8019b6a:	b2ad      	uxth	r5, r5
 8019b6c:	9101      	str	r1, [sp, #4]
 8019b6e:	9500      	str	r5, [sp, #0]
 8019b70:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8019b74:	4673      	mov	r3, lr
 8019b76:	19b9      	adds	r1, r7, r6
 8019b78:	e798      	b.n	8019aac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8019b7a:	2208      	movs	r2, #8
 8019b7c:	9b08      	ldr	r3, [sp, #32]
 8019b7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b82:	1e5a      	subs	r2, r3, #1
 8019b84:	4442      	add	r2, r8
 8019b86:	fb92 f2f3 	sdiv	r2, r2, r3
 8019b8a:	fb12 f203 	smulbb	r2, r2, r3
 8019b8e:	b292      	uxth	r2, r2
 8019b90:	e64d      	b.n	801982e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 8019b92:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8019b94:	e68f      	b.n	80198b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 8019b96:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019b98:	e723      	b.n	80199e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8019b9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019b9c:	b143      	cbz	r3, 8019bb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 8019b9e:	441e      	add	r6, r3
 8019ba0:	b2b6      	uxth	r6, r6
 8019ba2:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8019ba6:	f006 0607 	and.w	r6, r6, #7
 8019baa:	783a      	ldrb	r2, [r7, #0]
 8019bac:	4132      	asrs	r2, r6
 8019bae:	b2d2      	uxtb	r2, r2
 8019bb0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019bb2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019bb4:	4419      	add	r1, r3
 8019bb6:	910a      	str	r1, [sp, #40]	@ 0x28
 8019bb8:	e6b2      	b.n	8019920 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8019bba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019bbc:	2b00      	cmp	r3, #0
 8019bbe:	d1b4      	bne.n	8019b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019bc0:	4b04      	ldr	r3, [pc, #16]	@ (8019bd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8019bc2:	6818      	ldr	r0, [r3, #0]
 8019bc4:	6803      	ldr	r3, [r0, #0]
 8019bc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019bc8:	4798      	blx	r3
 8019bca:	e7ae      	b.n	8019b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019bcc:	2b00      	cmp	r3, #0
 8019bce:	f47f af4a 	bne.w	8019a66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 8019bd2:	e626      	b.n	8019822 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019bd4:	20014040 	.word	0x20014040

08019bd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8019bd8:	b538      	push	{r3, r4, r5, lr}
 8019bda:	4c15      	ldr	r4, [pc, #84]	@ (8019c30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8019bdc:	7823      	ldrb	r3, [r4, #0]
 8019bde:	f3bf 8f5b 	dmb	ish
 8019be2:	07da      	lsls	r2, r3, #31
 8019be4:	4605      	mov	r5, r0
 8019be6:	d40b      	bmi.n	8019c00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019be8:	4620      	mov	r0, r4
 8019bea:	f008 fc48 	bl	802247e <__cxa_guard_acquire>
 8019bee:	b138      	cbz	r0, 8019c00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019bf0:	4620      	mov	r0, r4
 8019bf2:	f008 fc50 	bl	8022496 <__cxa_guard_release>
 8019bf6:	4a0f      	ldr	r2, [pc, #60]	@ (8019c34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019bf8:	490f      	ldr	r1, [pc, #60]	@ (8019c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8019bfa:	4810      	ldr	r0, [pc, #64]	@ (8019c3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8019bfc:	f008 fc38 	bl	8022470 <__aeabi_atexit>
 8019c00:	4c0f      	ldr	r4, [pc, #60]	@ (8019c40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8019c02:	7823      	ldrb	r3, [r4, #0]
 8019c04:	f3bf 8f5b 	dmb	ish
 8019c08:	07db      	lsls	r3, r3, #31
 8019c0a:	d40b      	bmi.n	8019c24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8019c0c:	4620      	mov	r0, r4
 8019c0e:	f008 fc36 	bl	802247e <__cxa_guard_acquire>
 8019c12:	b138      	cbz	r0, 8019c24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8019c14:	4620      	mov	r0, r4
 8019c16:	f008 fc3e 	bl	8022496 <__cxa_guard_release>
 8019c1a:	4a06      	ldr	r2, [pc, #24]	@ (8019c34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019c1c:	4909      	ldr	r1, [pc, #36]	@ (8019c44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8019c1e:	480a      	ldr	r0, [pc, #40]	@ (8019c48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019c20:	f008 fc26 	bl	8022470 <__aeabi_atexit>
 8019c24:	4b05      	ldr	r3, [pc, #20]	@ (8019c3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8019c26:	616b      	str	r3, [r5, #20]
 8019c28:	4b07      	ldr	r3, [pc, #28]	@ (8019c48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019c2a:	61ab      	str	r3, [r5, #24]
 8019c2c:	bd38      	pop	{r3, r4, r5, pc}
 8019c2e:	bf00      	nop
 8019c30:	20014124 	.word	0x20014124
 8019c34:	20000000 	.word	0x20000000
 8019c38:	08015ce1 	.word	0x08015ce1
 8019c3c:	200001e0 	.word	0x200001e0
 8019c40:	20014128 	.word	0x20014128
 8019c44:	08015cdf 	.word	0x08015cdf
 8019c48:	200001e4 	.word	0x200001e4

08019c4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019c4c:	b538      	push	{r3, r4, r5, lr}
 8019c4e:	4c15      	ldr	r4, [pc, #84]	@ (8019ca4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019c50:	7823      	ldrb	r3, [r4, #0]
 8019c52:	f3bf 8f5b 	dmb	ish
 8019c56:	07da      	lsls	r2, r3, #31
 8019c58:	4605      	mov	r5, r0
 8019c5a:	d40b      	bmi.n	8019c74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019c5c:	4620      	mov	r0, r4
 8019c5e:	f008 fc0e 	bl	802247e <__cxa_guard_acquire>
 8019c62:	b138      	cbz	r0, 8019c74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019c64:	4620      	mov	r0, r4
 8019c66:	f008 fc16 	bl	8022496 <__cxa_guard_release>
 8019c6a:	4a0f      	ldr	r2, [pc, #60]	@ (8019ca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019c6c:	490f      	ldr	r1, [pc, #60]	@ (8019cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019c6e:	4810      	ldr	r0, [pc, #64]	@ (8019cb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019c70:	f008 fbfe 	bl	8022470 <__aeabi_atexit>
 8019c74:	4c0f      	ldr	r4, [pc, #60]	@ (8019cb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8019c76:	7823      	ldrb	r3, [r4, #0]
 8019c78:	f3bf 8f5b 	dmb	ish
 8019c7c:	07db      	lsls	r3, r3, #31
 8019c7e:	d40b      	bmi.n	8019c98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019c80:	4620      	mov	r0, r4
 8019c82:	f008 fbfc 	bl	802247e <__cxa_guard_acquire>
 8019c86:	b138      	cbz	r0, 8019c98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019c88:	4620      	mov	r0, r4
 8019c8a:	f008 fc04 	bl	8022496 <__cxa_guard_release>
 8019c8e:	4a06      	ldr	r2, [pc, #24]	@ (8019ca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019c90:	4909      	ldr	r1, [pc, #36]	@ (8019cb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8019c92:	480a      	ldr	r0, [pc, #40]	@ (8019cbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019c94:	f008 fbec 	bl	8022470 <__aeabi_atexit>
 8019c98:	4b05      	ldr	r3, [pc, #20]	@ (8019cb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019c9a:	60eb      	str	r3, [r5, #12]
 8019c9c:	4b07      	ldr	r3, [pc, #28]	@ (8019cbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019c9e:	612b      	str	r3, [r5, #16]
 8019ca0:	bd38      	pop	{r3, r4, r5, pc}
 8019ca2:	bf00      	nop
 8019ca4:	200140fc 	.word	0x200140fc
 8019ca8:	20000000 	.word	0x20000000
 8019cac:	08015ce5 	.word	0x08015ce5
 8019cb0:	200001b8 	.word	0x200001b8
 8019cb4:	20014100 	.word	0x20014100
 8019cb8:	08015ce3 	.word	0x08015ce3
 8019cbc:	200001bc 	.word	0x200001bc

08019cc0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8019cc0:	b510      	push	{r4, lr}
 8019cc2:	4604      	mov	r4, r0
 8019cc4:	f7ff ff88 	bl	8019bd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019cc8:	4620      	mov	r0, r4
 8019cca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019cce:	f7ff bfbd 	b.w	8019c4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08019cd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8019cd4:	b538      	push	{r3, r4, r5, lr}
 8019cd6:	4c15      	ldr	r4, [pc, #84]	@ (8019d2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8019cd8:	7823      	ldrb	r3, [r4, #0]
 8019cda:	f3bf 8f5b 	dmb	ish
 8019cde:	07da      	lsls	r2, r3, #31
 8019ce0:	4605      	mov	r5, r0
 8019ce2:	d40b      	bmi.n	8019cfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019ce4:	4620      	mov	r0, r4
 8019ce6:	f008 fbca 	bl	802247e <__cxa_guard_acquire>
 8019cea:	b138      	cbz	r0, 8019cfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019cec:	4620      	mov	r0, r4
 8019cee:	f008 fbd2 	bl	8022496 <__cxa_guard_release>
 8019cf2:	4a0f      	ldr	r2, [pc, #60]	@ (8019d30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019cf4:	490f      	ldr	r1, [pc, #60]	@ (8019d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8019cf6:	4810      	ldr	r0, [pc, #64]	@ (8019d38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019cf8:	f008 fbba 	bl	8022470 <__aeabi_atexit>
 8019cfc:	4c0f      	ldr	r4, [pc, #60]	@ (8019d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8019cfe:	7823      	ldrb	r3, [r4, #0]
 8019d00:	f3bf 8f5b 	dmb	ish
 8019d04:	07db      	lsls	r3, r3, #31
 8019d06:	d40b      	bmi.n	8019d20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019d08:	4620      	mov	r0, r4
 8019d0a:	f008 fbb8 	bl	802247e <__cxa_guard_acquire>
 8019d0e:	b138      	cbz	r0, 8019d20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019d10:	4620      	mov	r0, r4
 8019d12:	f008 fbc0 	bl	8022496 <__cxa_guard_release>
 8019d16:	4a06      	ldr	r2, [pc, #24]	@ (8019d30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019d18:	4909      	ldr	r1, [pc, #36]	@ (8019d40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8019d1a:	480a      	ldr	r0, [pc, #40]	@ (8019d44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019d1c:	f008 fba8 	bl	8022470 <__aeabi_atexit>
 8019d20:	4b05      	ldr	r3, [pc, #20]	@ (8019d38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019d22:	626b      	str	r3, [r5, #36]	@ 0x24
 8019d24:	4b07      	ldr	r3, [pc, #28]	@ (8019d44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019d26:	62ab      	str	r3, [r5, #40]	@ 0x28
 8019d28:	bd38      	pop	{r3, r4, r5, pc}
 8019d2a:	bf00      	nop
 8019d2c:	2001412c 	.word	0x2001412c
 8019d30:	20000000 	.word	0x20000000
 8019d34:	08015cd9 	.word	0x08015cd9
 8019d38:	200001e8 	.word	0x200001e8
 8019d3c:	20014130 	.word	0x20014130
 8019d40:	08015cd7 	.word	0x08015cd7
 8019d44:	200001ec 	.word	0x200001ec

08019d48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019d48:	b538      	push	{r3, r4, r5, lr}
 8019d4a:	4c15      	ldr	r4, [pc, #84]	@ (8019da0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019d4c:	7823      	ldrb	r3, [r4, #0]
 8019d4e:	f3bf 8f5b 	dmb	ish
 8019d52:	07da      	lsls	r2, r3, #31
 8019d54:	4605      	mov	r5, r0
 8019d56:	d40b      	bmi.n	8019d70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019d58:	4620      	mov	r0, r4
 8019d5a:	f008 fb90 	bl	802247e <__cxa_guard_acquire>
 8019d5e:	b138      	cbz	r0, 8019d70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019d60:	4620      	mov	r0, r4
 8019d62:	f008 fb98 	bl	8022496 <__cxa_guard_release>
 8019d66:	4a0f      	ldr	r2, [pc, #60]	@ (8019da4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019d68:	490f      	ldr	r1, [pc, #60]	@ (8019da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019d6a:	4810      	ldr	r0, [pc, #64]	@ (8019dac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019d6c:	f008 fb80 	bl	8022470 <__aeabi_atexit>
 8019d70:	4c0f      	ldr	r4, [pc, #60]	@ (8019db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8019d72:	7823      	ldrb	r3, [r4, #0]
 8019d74:	f3bf 8f5b 	dmb	ish
 8019d78:	07db      	lsls	r3, r3, #31
 8019d7a:	d40b      	bmi.n	8019d94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019d7c:	4620      	mov	r0, r4
 8019d7e:	f008 fb7e 	bl	802247e <__cxa_guard_acquire>
 8019d82:	b138      	cbz	r0, 8019d94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019d84:	4620      	mov	r0, r4
 8019d86:	f008 fb86 	bl	8022496 <__cxa_guard_release>
 8019d8a:	4a06      	ldr	r2, [pc, #24]	@ (8019da4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019d8c:	4909      	ldr	r1, [pc, #36]	@ (8019db4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019d8e:	480a      	ldr	r0, [pc, #40]	@ (8019db8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019d90:	f008 fb6e 	bl	8022470 <__aeabi_atexit>
 8019d94:	4b05      	ldr	r3, [pc, #20]	@ (8019dac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019d96:	61eb      	str	r3, [r5, #28]
 8019d98:	4b07      	ldr	r3, [pc, #28]	@ (8019db8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019d9a:	622b      	str	r3, [r5, #32]
 8019d9c:	bd38      	pop	{r3, r4, r5, pc}
 8019d9e:	bf00      	nop
 8019da0:	20014104 	.word	0x20014104
 8019da4:	20000000 	.word	0x20000000
 8019da8:	08015cdd 	.word	0x08015cdd
 8019dac:	200001c0 	.word	0x200001c0
 8019db0:	20014108 	.word	0x20014108
 8019db4:	08015cdb 	.word	0x08015cdb
 8019db8:	200001c4 	.word	0x200001c4

08019dbc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019dbc:	b510      	push	{r4, lr}
 8019dbe:	4604      	mov	r4, r0
 8019dc0:	f7ff ff88 	bl	8019cd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019dc4:	4620      	mov	r0, r4
 8019dc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019dca:	f7ff bfbd 	b.w	8019d48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019dd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019dd0:	b538      	push	{r3, r4, r5, lr}
 8019dd2:	4c15      	ldr	r4, [pc, #84]	@ (8019e28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019dd4:	7823      	ldrb	r3, [r4, #0]
 8019dd6:	f3bf 8f5b 	dmb	ish
 8019dda:	07da      	lsls	r2, r3, #31
 8019ddc:	4605      	mov	r5, r0
 8019dde:	d40b      	bmi.n	8019df8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019de0:	4620      	mov	r0, r4
 8019de2:	f008 fb4c 	bl	802247e <__cxa_guard_acquire>
 8019de6:	b138      	cbz	r0, 8019df8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019de8:	4620      	mov	r0, r4
 8019dea:	f008 fb54 	bl	8022496 <__cxa_guard_release>
 8019dee:	4a0f      	ldr	r2, [pc, #60]	@ (8019e2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019df0:	490f      	ldr	r1, [pc, #60]	@ (8019e30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019df2:	4810      	ldr	r0, [pc, #64]	@ (8019e34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019df4:	f008 fb3c 	bl	8022470 <__aeabi_atexit>
 8019df8:	4c0f      	ldr	r4, [pc, #60]	@ (8019e38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8019dfa:	7823      	ldrb	r3, [r4, #0]
 8019dfc:	f3bf 8f5b 	dmb	ish
 8019e00:	07db      	lsls	r3, r3, #31
 8019e02:	d40b      	bmi.n	8019e1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019e04:	4620      	mov	r0, r4
 8019e06:	f008 fb3a 	bl	802247e <__cxa_guard_acquire>
 8019e0a:	b138      	cbz	r0, 8019e1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019e0c:	4620      	mov	r0, r4
 8019e0e:	f008 fb42 	bl	8022496 <__cxa_guard_release>
 8019e12:	4a06      	ldr	r2, [pc, #24]	@ (8019e2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019e14:	4909      	ldr	r1, [pc, #36]	@ (8019e3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8019e16:	480a      	ldr	r0, [pc, #40]	@ (8019e40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019e18:	f008 fb2a 	bl	8022470 <__aeabi_atexit>
 8019e1c:	4b05      	ldr	r3, [pc, #20]	@ (8019e34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019e1e:	636b      	str	r3, [r5, #52]	@ 0x34
 8019e20:	4b07      	ldr	r3, [pc, #28]	@ (8019e40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019e22:	63ab      	str	r3, [r5, #56]	@ 0x38
 8019e24:	bd38      	pop	{r3, r4, r5, pc}
 8019e26:	bf00      	nop
 8019e28:	2001413c 	.word	0x2001413c
 8019e2c:	20000000 	.word	0x20000000
 8019e30:	08015cd1 	.word	0x08015cd1
 8019e34:	200001f8 	.word	0x200001f8
 8019e38:	20014140 	.word	0x20014140
 8019e3c:	08015ccf 	.word	0x08015ccf
 8019e40:	200001fc 	.word	0x200001fc

08019e44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8019e44:	b538      	push	{r3, r4, r5, lr}
 8019e46:	4c15      	ldr	r4, [pc, #84]	@ (8019e9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019e48:	7823      	ldrb	r3, [r4, #0]
 8019e4a:	f3bf 8f5b 	dmb	ish
 8019e4e:	07da      	lsls	r2, r3, #31
 8019e50:	4605      	mov	r5, r0
 8019e52:	d40b      	bmi.n	8019e6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019e54:	4620      	mov	r0, r4
 8019e56:	f008 fb12 	bl	802247e <__cxa_guard_acquire>
 8019e5a:	b138      	cbz	r0, 8019e6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019e5c:	4620      	mov	r0, r4
 8019e5e:	f008 fb1a 	bl	8022496 <__cxa_guard_release>
 8019e62:	4a0f      	ldr	r2, [pc, #60]	@ (8019ea0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019e64:	490f      	ldr	r1, [pc, #60]	@ (8019ea4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8019e66:	4810      	ldr	r0, [pc, #64]	@ (8019ea8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019e68:	f008 fb02 	bl	8022470 <__aeabi_atexit>
 8019e6c:	4c0f      	ldr	r4, [pc, #60]	@ (8019eac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019e6e:	7823      	ldrb	r3, [r4, #0]
 8019e70:	f3bf 8f5b 	dmb	ish
 8019e74:	07db      	lsls	r3, r3, #31
 8019e76:	d40b      	bmi.n	8019e90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019e78:	4620      	mov	r0, r4
 8019e7a:	f008 fb00 	bl	802247e <__cxa_guard_acquire>
 8019e7e:	b138      	cbz	r0, 8019e90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019e80:	4620      	mov	r0, r4
 8019e82:	f008 fb08 	bl	8022496 <__cxa_guard_release>
 8019e86:	4a06      	ldr	r2, [pc, #24]	@ (8019ea0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019e88:	4909      	ldr	r1, [pc, #36]	@ (8019eb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019e8a:	480a      	ldr	r0, [pc, #40]	@ (8019eb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019e8c:	f008 faf0 	bl	8022470 <__aeabi_atexit>
 8019e90:	4b05      	ldr	r3, [pc, #20]	@ (8019ea8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019e92:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8019e94:	4b07      	ldr	r3, [pc, #28]	@ (8019eb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019e96:	632b      	str	r3, [r5, #48]	@ 0x30
 8019e98:	bd38      	pop	{r3, r4, r5, pc}
 8019e9a:	bf00      	nop
 8019e9c:	2001410c 	.word	0x2001410c
 8019ea0:	20000000 	.word	0x20000000
 8019ea4:	08015cd5 	.word	0x08015cd5
 8019ea8:	200001c8 	.word	0x200001c8
 8019eac:	20014110 	.word	0x20014110
 8019eb0:	08015cd3 	.word	0x08015cd3
 8019eb4:	200001cc 	.word	0x200001cc

08019eb8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019eb8:	b510      	push	{r4, lr}
 8019eba:	4604      	mov	r4, r0
 8019ebc:	f7ff ff88 	bl	8019dd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019ec0:	4620      	mov	r0, r4
 8019ec2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019ec6:	f7ff bfbd 	b.w	8019e44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019ecc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019ecc:	b538      	push	{r3, r4, r5, lr}
 8019ece:	4c15      	ldr	r4, [pc, #84]	@ (8019f24 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019ed0:	7823      	ldrb	r3, [r4, #0]
 8019ed2:	f3bf 8f5b 	dmb	ish
 8019ed6:	07da      	lsls	r2, r3, #31
 8019ed8:	4605      	mov	r5, r0
 8019eda:	d40b      	bmi.n	8019ef4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019edc:	4620      	mov	r0, r4
 8019ede:	f008 face 	bl	802247e <__cxa_guard_acquire>
 8019ee2:	b138      	cbz	r0, 8019ef4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019ee4:	4620      	mov	r0, r4
 8019ee6:	f008 fad6 	bl	8022496 <__cxa_guard_release>
 8019eea:	4a0f      	ldr	r2, [pc, #60]	@ (8019f28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019eec:	490f      	ldr	r1, [pc, #60]	@ (8019f2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8019eee:	4810      	ldr	r0, [pc, #64]	@ (8019f30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019ef0:	f008 fabe 	bl	8022470 <__aeabi_atexit>
 8019ef4:	4c0f      	ldr	r4, [pc, #60]	@ (8019f34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8019ef6:	7823      	ldrb	r3, [r4, #0]
 8019ef8:	f3bf 8f5b 	dmb	ish
 8019efc:	07db      	lsls	r3, r3, #31
 8019efe:	d40b      	bmi.n	8019f18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019f00:	4620      	mov	r0, r4
 8019f02:	f008 fabc 	bl	802247e <__cxa_guard_acquire>
 8019f06:	b138      	cbz	r0, 8019f18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019f08:	4620      	mov	r0, r4
 8019f0a:	f008 fac4 	bl	8022496 <__cxa_guard_release>
 8019f0e:	4a06      	ldr	r2, [pc, #24]	@ (8019f28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019f10:	4909      	ldr	r1, [pc, #36]	@ (8019f38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8019f12:	480a      	ldr	r0, [pc, #40]	@ (8019f3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019f14:	f008 faac 	bl	8022470 <__aeabi_atexit>
 8019f18:	4b05      	ldr	r3, [pc, #20]	@ (8019f30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019f1a:	656b      	str	r3, [r5, #84]	@ 0x54
 8019f1c:	4b07      	ldr	r3, [pc, #28]	@ (8019f3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019f1e:	65ab      	str	r3, [r5, #88]	@ 0x58
 8019f20:	bd38      	pop	{r3, r4, r5, pc}
 8019f22:	bf00      	nop
 8019f24:	20014144 	.word	0x20014144
 8019f28:	20000000 	.word	0x20000000
 8019f2c:	08015cc1 	.word	0x08015cc1
 8019f30:	20000200 	.word	0x20000200
 8019f34:	20014148 	.word	0x20014148
 8019f38:	08015cbf 	.word	0x08015cbf
 8019f3c:	20000204 	.word	0x20000204

08019f40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019f40:	b538      	push	{r3, r4, r5, lr}
 8019f42:	4c15      	ldr	r4, [pc, #84]	@ (8019f98 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8019f44:	7823      	ldrb	r3, [r4, #0]
 8019f46:	f3bf 8f5b 	dmb	ish
 8019f4a:	07da      	lsls	r2, r3, #31
 8019f4c:	4605      	mov	r5, r0
 8019f4e:	d40b      	bmi.n	8019f68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019f50:	4620      	mov	r0, r4
 8019f52:	f008 fa94 	bl	802247e <__cxa_guard_acquire>
 8019f56:	b138      	cbz	r0, 8019f68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019f58:	4620      	mov	r0, r4
 8019f5a:	f008 fa9c 	bl	8022496 <__cxa_guard_release>
 8019f5e:	4a0f      	ldr	r2, [pc, #60]	@ (8019f9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019f60:	490f      	ldr	r1, [pc, #60]	@ (8019fa0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8019f62:	4810      	ldr	r0, [pc, #64]	@ (8019fa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019f64:	f008 fa84 	bl	8022470 <__aeabi_atexit>
 8019f68:	4c0f      	ldr	r4, [pc, #60]	@ (8019fa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019f6a:	7823      	ldrb	r3, [r4, #0]
 8019f6c:	f3bf 8f5b 	dmb	ish
 8019f70:	07db      	lsls	r3, r3, #31
 8019f72:	d40b      	bmi.n	8019f8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019f74:	4620      	mov	r0, r4
 8019f76:	f008 fa82 	bl	802247e <__cxa_guard_acquire>
 8019f7a:	b138      	cbz	r0, 8019f8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019f7c:	4620      	mov	r0, r4
 8019f7e:	f008 fa8a 	bl	8022496 <__cxa_guard_release>
 8019f82:	4a06      	ldr	r2, [pc, #24]	@ (8019f9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019f84:	4909      	ldr	r1, [pc, #36]	@ (8019fac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019f86:	480a      	ldr	r0, [pc, #40]	@ (8019fb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019f88:	f008 fa72 	bl	8022470 <__aeabi_atexit>
 8019f8c:	4b05      	ldr	r3, [pc, #20]	@ (8019fa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019f8e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8019f90:	4b07      	ldr	r3, [pc, #28]	@ (8019fb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019f92:	652b      	str	r3, [r5, #80]	@ 0x50
 8019f94:	bd38      	pop	{r3, r4, r5, pc}
 8019f96:	bf00      	nop
 8019f98:	2001414c 	.word	0x2001414c
 8019f9c:	20000000 	.word	0x20000000
 8019fa0:	08015cc5 	.word	0x08015cc5
 8019fa4:	20000208 	.word	0x20000208
 8019fa8:	20014150 	.word	0x20014150
 8019fac:	08015cc3 	.word	0x08015cc3
 8019fb0:	2000020c 	.word	0x2000020c

08019fb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8019fb4:	b538      	push	{r3, r4, r5, lr}
 8019fb6:	4c15      	ldr	r4, [pc, #84]	@ (801a00c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019fb8:	7823      	ldrb	r3, [r4, #0]
 8019fba:	f3bf 8f5b 	dmb	ish
 8019fbe:	07da      	lsls	r2, r3, #31
 8019fc0:	4605      	mov	r5, r0
 8019fc2:	d40b      	bmi.n	8019fdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019fc4:	4620      	mov	r0, r4
 8019fc6:	f008 fa5a 	bl	802247e <__cxa_guard_acquire>
 8019fca:	b138      	cbz	r0, 8019fdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019fcc:	4620      	mov	r0, r4
 8019fce:	f008 fa62 	bl	8022496 <__cxa_guard_release>
 8019fd2:	4a0f      	ldr	r2, [pc, #60]	@ (801a010 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019fd4:	490f      	ldr	r1, [pc, #60]	@ (801a014 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8019fd6:	4810      	ldr	r0, [pc, #64]	@ (801a018 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019fd8:	f008 fa4a 	bl	8022470 <__aeabi_atexit>
 8019fdc:	4c0f      	ldr	r4, [pc, #60]	@ (801a01c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8019fde:	7823      	ldrb	r3, [r4, #0]
 8019fe0:	f3bf 8f5b 	dmb	ish
 8019fe4:	07db      	lsls	r3, r3, #31
 8019fe6:	d40b      	bmi.n	801a000 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019fe8:	4620      	mov	r0, r4
 8019fea:	f008 fa48 	bl	802247e <__cxa_guard_acquire>
 8019fee:	b138      	cbz	r0, 801a000 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019ff0:	4620      	mov	r0, r4
 8019ff2:	f008 fa50 	bl	8022496 <__cxa_guard_release>
 8019ff6:	4a06      	ldr	r2, [pc, #24]	@ (801a010 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019ff8:	4909      	ldr	r1, [pc, #36]	@ (801a020 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019ffa:	480a      	ldr	r0, [pc, #40]	@ (801a024 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019ffc:	f008 fa38 	bl	8022470 <__aeabi_atexit>
 801a000:	4b05      	ldr	r3, [pc, #20]	@ (801a018 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801a002:	646b      	str	r3, [r5, #68]	@ 0x44
 801a004:	4b07      	ldr	r3, [pc, #28]	@ (801a024 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801a006:	64ab      	str	r3, [r5, #72]	@ 0x48
 801a008:	bd38      	pop	{r3, r4, r5, pc}
 801a00a:	bf00      	nop
 801a00c:	20014114 	.word	0x20014114
 801a010:	20000000 	.word	0x20000000
 801a014:	08015cc9 	.word	0x08015cc9
 801a018:	200001d0 	.word	0x200001d0
 801a01c:	20014118 	.word	0x20014118
 801a020:	08015cc7 	.word	0x08015cc7
 801a024:	200001d4 	.word	0x200001d4

0801a028 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801a028:	b538      	push	{r3, r4, r5, lr}
 801a02a:	4c15      	ldr	r4, [pc, #84]	@ (801a080 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801a02c:	7823      	ldrb	r3, [r4, #0]
 801a02e:	f3bf 8f5b 	dmb	ish
 801a032:	07da      	lsls	r2, r3, #31
 801a034:	4605      	mov	r5, r0
 801a036:	d40b      	bmi.n	801a050 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a038:	4620      	mov	r0, r4
 801a03a:	f008 fa20 	bl	802247e <__cxa_guard_acquire>
 801a03e:	b138      	cbz	r0, 801a050 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a040:	4620      	mov	r0, r4
 801a042:	f008 fa28 	bl	8022496 <__cxa_guard_release>
 801a046:	4a0f      	ldr	r2, [pc, #60]	@ (801a084 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a048:	490f      	ldr	r1, [pc, #60]	@ (801a088 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801a04a:	4810      	ldr	r0, [pc, #64]	@ (801a08c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a04c:	f008 fa10 	bl	8022470 <__aeabi_atexit>
 801a050:	4c0f      	ldr	r4, [pc, #60]	@ (801a090 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801a052:	7823      	ldrb	r3, [r4, #0]
 801a054:	f3bf 8f5b 	dmb	ish
 801a058:	07db      	lsls	r3, r3, #31
 801a05a:	d40b      	bmi.n	801a074 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a05c:	4620      	mov	r0, r4
 801a05e:	f008 fa0e 	bl	802247e <__cxa_guard_acquire>
 801a062:	b138      	cbz	r0, 801a074 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a064:	4620      	mov	r0, r4
 801a066:	f008 fa16 	bl	8022496 <__cxa_guard_release>
 801a06a:	4a06      	ldr	r2, [pc, #24]	@ (801a084 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a06c:	4909      	ldr	r1, [pc, #36]	@ (801a094 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801a06e:	480a      	ldr	r0, [pc, #40]	@ (801a098 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a070:	f008 f9fe 	bl	8022470 <__aeabi_atexit>
 801a074:	4b05      	ldr	r3, [pc, #20]	@ (801a08c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a076:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801a078:	4b07      	ldr	r3, [pc, #28]	@ (801a098 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a07a:	642b      	str	r3, [r5, #64]	@ 0x40
 801a07c:	bd38      	pop	{r3, r4, r5, pc}
 801a07e:	bf00      	nop
 801a080:	20014134 	.word	0x20014134
 801a084:	20000000 	.word	0x20000000
 801a088:	08015ccd 	.word	0x08015ccd
 801a08c:	200001f0 	.word	0x200001f0
 801a090:	20014138 	.word	0x20014138
 801a094:	08015ccb 	.word	0x08015ccb
 801a098:	200001f4 	.word	0x200001f4

0801a09c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801a09c:	b510      	push	{r4, lr}
 801a09e:	4604      	mov	r4, r0
 801a0a0:	f7ff ff14 	bl	8019ecc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801a0a4:	4620      	mov	r0, r4
 801a0a6:	f7ff ff85 	bl	8019fb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801a0aa:	4620      	mov	r0, r4
 801a0ac:	f7ff ff48 	bl	8019f40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801a0b0:	4620      	mov	r0, r4
 801a0b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a0b6:	f7ff bfb7 	b.w	801a028 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801a0bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801a0bc:	b538      	push	{r3, r4, r5, lr}
 801a0be:	4c15      	ldr	r4, [pc, #84]	@ (801a114 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801a0c0:	7823      	ldrb	r3, [r4, #0]
 801a0c2:	f3bf 8f5b 	dmb	ish
 801a0c6:	07da      	lsls	r2, r3, #31
 801a0c8:	4605      	mov	r5, r0
 801a0ca:	d40b      	bmi.n	801a0e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801a0cc:	4620      	mov	r0, r4
 801a0ce:	f008 f9d6 	bl	802247e <__cxa_guard_acquire>
 801a0d2:	b138      	cbz	r0, 801a0e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801a0d4:	4620      	mov	r0, r4
 801a0d6:	f008 f9de 	bl	8022496 <__cxa_guard_release>
 801a0da:	4a0f      	ldr	r2, [pc, #60]	@ (801a118 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a0dc:	490f      	ldr	r1, [pc, #60]	@ (801a11c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801a0de:	4810      	ldr	r0, [pc, #64]	@ (801a120 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a0e0:	f008 f9c6 	bl	8022470 <__aeabi_atexit>
 801a0e4:	4c0f      	ldr	r4, [pc, #60]	@ (801a124 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801a0e6:	7823      	ldrb	r3, [r4, #0]
 801a0e8:	f3bf 8f5b 	dmb	ish
 801a0ec:	07db      	lsls	r3, r3, #31
 801a0ee:	d40b      	bmi.n	801a108 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801a0f0:	4620      	mov	r0, r4
 801a0f2:	f008 f9c4 	bl	802247e <__cxa_guard_acquire>
 801a0f6:	b138      	cbz	r0, 801a108 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801a0f8:	4620      	mov	r0, r4
 801a0fa:	f008 f9cc 	bl	8022496 <__cxa_guard_release>
 801a0fe:	4a06      	ldr	r2, [pc, #24]	@ (801a118 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a100:	4909      	ldr	r1, [pc, #36]	@ (801a128 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801a102:	480a      	ldr	r0, [pc, #40]	@ (801a12c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801a104:	f008 f9b4 	bl	8022470 <__aeabi_atexit>
 801a108:	4b05      	ldr	r3, [pc, #20]	@ (801a120 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a10a:	666b      	str	r3, [r5, #100]	@ 0x64
 801a10c:	4b07      	ldr	r3, [pc, #28]	@ (801a12c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801a10e:	66ab      	str	r3, [r5, #104]	@ 0x68
 801a110:	bd38      	pop	{r3, r4, r5, pc}
 801a112:	bf00      	nop
 801a114:	2001411c 	.word	0x2001411c
 801a118:	20000000 	.word	0x20000000
 801a11c:	08015cb9 	.word	0x08015cb9
 801a120:	200001d8 	.word	0x200001d8
 801a124:	20014120 	.word	0x20014120
 801a128:	08015cb7 	.word	0x08015cb7
 801a12c:	200001dc 	.word	0x200001dc

0801a130 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801a130:	b538      	push	{r3, r4, r5, lr}
 801a132:	4c15      	ldr	r4, [pc, #84]	@ (801a188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801a134:	7823      	ldrb	r3, [r4, #0]
 801a136:	f3bf 8f5b 	dmb	ish
 801a13a:	07da      	lsls	r2, r3, #31
 801a13c:	4605      	mov	r5, r0
 801a13e:	d40b      	bmi.n	801a158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801a140:	4620      	mov	r0, r4
 801a142:	f008 f99c 	bl	802247e <__cxa_guard_acquire>
 801a146:	b138      	cbz	r0, 801a158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801a148:	4620      	mov	r0, r4
 801a14a:	f008 f9a4 	bl	8022496 <__cxa_guard_release>
 801a14e:	4a0f      	ldr	r2, [pc, #60]	@ (801a18c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a150:	490f      	ldr	r1, [pc, #60]	@ (801a190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801a152:	4810      	ldr	r0, [pc, #64]	@ (801a194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a154:	f008 f98c 	bl	8022470 <__aeabi_atexit>
 801a158:	4c0f      	ldr	r4, [pc, #60]	@ (801a198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801a15a:	7823      	ldrb	r3, [r4, #0]
 801a15c:	f3bf 8f5b 	dmb	ish
 801a160:	07db      	lsls	r3, r3, #31
 801a162:	d40b      	bmi.n	801a17c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801a164:	4620      	mov	r0, r4
 801a166:	f008 f98a 	bl	802247e <__cxa_guard_acquire>
 801a16a:	b138      	cbz	r0, 801a17c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801a16c:	4620      	mov	r0, r4
 801a16e:	f008 f992 	bl	8022496 <__cxa_guard_release>
 801a172:	4a06      	ldr	r2, [pc, #24]	@ (801a18c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a174:	4909      	ldr	r1, [pc, #36]	@ (801a19c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801a176:	480a      	ldr	r0, [pc, #40]	@ (801a1a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801a178:	f008 f97a 	bl	8022470 <__aeabi_atexit>
 801a17c:	4b05      	ldr	r3, [pc, #20]	@ (801a194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a17e:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801a180:	4b07      	ldr	r3, [pc, #28]	@ (801a1a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801a182:	662b      	str	r3, [r5, #96]	@ 0x60
 801a184:	bd38      	pop	{r3, r4, r5, pc}
 801a186:	bf00      	nop
 801a188:	200140f4 	.word	0x200140f4
 801a18c:	20000000 	.word	0x20000000
 801a190:	08015cbd 	.word	0x08015cbd
 801a194:	200001b0 	.word	0x200001b0
 801a198:	200140f8 	.word	0x200140f8
 801a19c:	08015cbb 	.word	0x08015cbb
 801a1a0:	200001b4 	.word	0x200001b4

0801a1a4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801a1a4:	b510      	push	{r4, lr}
 801a1a6:	4604      	mov	r4, r0
 801a1a8:	f7ff ff88 	bl	801a0bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801a1ac:	4620      	mov	r0, r4
 801a1ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a1b2:	f7ff bfbd 	b.w	801a130 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801a1b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801a1b8:	b538      	push	{r3, r4, r5, lr}
 801a1ba:	4c15      	ldr	r4, [pc, #84]	@ (801a210 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801a1bc:	7823      	ldrb	r3, [r4, #0]
 801a1be:	f3bf 8f5b 	dmb	ish
 801a1c2:	07da      	lsls	r2, r3, #31
 801a1c4:	4605      	mov	r5, r0
 801a1c6:	d40b      	bmi.n	801a1e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801a1c8:	4620      	mov	r0, r4
 801a1ca:	f008 f958 	bl	802247e <__cxa_guard_acquire>
 801a1ce:	b138      	cbz	r0, 801a1e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801a1d0:	4620      	mov	r0, r4
 801a1d2:	f008 f960 	bl	8022496 <__cxa_guard_release>
 801a1d6:	4a0f      	ldr	r2, [pc, #60]	@ (801a214 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a1d8:	490f      	ldr	r1, [pc, #60]	@ (801a218 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801a1da:	4810      	ldr	r0, [pc, #64]	@ (801a21c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a1dc:	f008 f948 	bl	8022470 <__aeabi_atexit>
 801a1e0:	4c0f      	ldr	r4, [pc, #60]	@ (801a220 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801a1e2:	7823      	ldrb	r3, [r4, #0]
 801a1e4:	f3bf 8f5b 	dmb	ish
 801a1e8:	07db      	lsls	r3, r3, #31
 801a1ea:	d40b      	bmi.n	801a204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801a1ec:	4620      	mov	r0, r4
 801a1ee:	f008 f946 	bl	802247e <__cxa_guard_acquire>
 801a1f2:	b138      	cbz	r0, 801a204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801a1f4:	4620      	mov	r0, r4
 801a1f6:	f008 f94e 	bl	8022496 <__cxa_guard_release>
 801a1fa:	4a06      	ldr	r2, [pc, #24]	@ (801a214 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a1fc:	4909      	ldr	r1, [pc, #36]	@ (801a224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801a1fe:	480a      	ldr	r0, [pc, #40]	@ (801a228 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801a200:	f008 f936 	bl	8022470 <__aeabi_atexit>
 801a204:	4b05      	ldr	r3, [pc, #20]	@ (801a21c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a206:	676b      	str	r3, [r5, #116]	@ 0x74
 801a208:	4b07      	ldr	r3, [pc, #28]	@ (801a228 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801a20a:	67ab      	str	r3, [r5, #120]	@ 0x78
 801a20c:	bd38      	pop	{r3, r4, r5, pc}
 801a20e:	bf00      	nop
 801a210:	200140ec 	.word	0x200140ec
 801a214:	20000000 	.word	0x20000000
 801a218:	08015cb1 	.word	0x08015cb1
 801a21c:	200001a8 	.word	0x200001a8
 801a220:	200140f0 	.word	0x200140f0
 801a224:	08015caf 	.word	0x08015caf
 801a228:	200001ac 	.word	0x200001ac

0801a22c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801a22c:	b538      	push	{r3, r4, r5, lr}
 801a22e:	4c15      	ldr	r4, [pc, #84]	@ (801a284 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801a230:	7823      	ldrb	r3, [r4, #0]
 801a232:	f3bf 8f5b 	dmb	ish
 801a236:	07da      	lsls	r2, r3, #31
 801a238:	4605      	mov	r5, r0
 801a23a:	d40b      	bmi.n	801a254 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801a23c:	4620      	mov	r0, r4
 801a23e:	f008 f91e 	bl	802247e <__cxa_guard_acquire>
 801a242:	b138      	cbz	r0, 801a254 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801a244:	4620      	mov	r0, r4
 801a246:	f008 f926 	bl	8022496 <__cxa_guard_release>
 801a24a:	4a0f      	ldr	r2, [pc, #60]	@ (801a288 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801a24c:	490f      	ldr	r1, [pc, #60]	@ (801a28c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801a24e:	4810      	ldr	r0, [pc, #64]	@ (801a290 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801a250:	f008 f90e 	bl	8022470 <__aeabi_atexit>
 801a254:	4c0f      	ldr	r4, [pc, #60]	@ (801a294 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801a256:	7823      	ldrb	r3, [r4, #0]
 801a258:	f3bf 8f5b 	dmb	ish
 801a25c:	07db      	lsls	r3, r3, #31
 801a25e:	d40b      	bmi.n	801a278 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801a260:	4620      	mov	r0, r4
 801a262:	f008 f90c 	bl	802247e <__cxa_guard_acquire>
 801a266:	b138      	cbz	r0, 801a278 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801a268:	4620      	mov	r0, r4
 801a26a:	f008 f914 	bl	8022496 <__cxa_guard_release>
 801a26e:	4a06      	ldr	r2, [pc, #24]	@ (801a288 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801a270:	4909      	ldr	r1, [pc, #36]	@ (801a298 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801a272:	480a      	ldr	r0, [pc, #40]	@ (801a29c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801a274:	f008 f8fc 	bl	8022470 <__aeabi_atexit>
 801a278:	4b05      	ldr	r3, [pc, #20]	@ (801a290 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801a27a:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801a27c:	4b07      	ldr	r3, [pc, #28]	@ (801a29c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801a27e:	672b      	str	r3, [r5, #112]	@ 0x70
 801a280:	bd38      	pop	{r3, r4, r5, pc}
 801a282:	bf00      	nop
 801a284:	200140e4 	.word	0x200140e4
 801a288:	20000000 	.word	0x20000000
 801a28c:	08015cb5 	.word	0x08015cb5
 801a290:	200001a0 	.word	0x200001a0
 801a294:	200140e8 	.word	0x200140e8
 801a298:	08015cb3 	.word	0x08015cb3
 801a29c:	200001a4 	.word	0x200001a4

0801a2a0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801a2a0:	b510      	push	{r4, lr}
 801a2a2:	4604      	mov	r4, r0
 801a2a4:	f7ff ff88 	bl	801a1b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801a2a8:	4620      	mov	r0, r4
 801a2aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a2ae:	f7ff bfbd 	b.w	801a22c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801a2b2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801a2b2:	b510      	push	{r4, lr}
 801a2b4:	4604      	mov	r4, r0
 801a2b6:	f7ff fff3 	bl	801a2a0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801a2ba:	4620      	mov	r0, r4
 801a2bc:	f7ff ff72 	bl	801a1a4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801a2c0:	4620      	mov	r0, r4
 801a2c2:	f7ff fdf9 	bl	8019eb8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801a2c6:	4620      	mov	r0, r4
 801a2c8:	f7ff fcfa 	bl	8019cc0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801a2cc:	4620      	mov	r0, r4
 801a2ce:	f7ff fd75 	bl	8019dbc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801a2d2:	4620      	mov	r0, r4
 801a2d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a2d8:	f7ff bee0 	b.w	801a09c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801a2dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801a2dc:	b538      	push	{r3, r4, r5, lr}
 801a2de:	4c0b      	ldr	r4, [pc, #44]	@ (801a30c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801a2e0:	7823      	ldrb	r3, [r4, #0]
 801a2e2:	f3bf 8f5b 	dmb	ish
 801a2e6:	07db      	lsls	r3, r3, #31
 801a2e8:	4605      	mov	r5, r0
 801a2ea:	d40b      	bmi.n	801a304 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801a2ec:	4620      	mov	r0, r4
 801a2ee:	f008 f8c6 	bl	802247e <__cxa_guard_acquire>
 801a2f2:	b138      	cbz	r0, 801a304 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801a2f4:	4620      	mov	r0, r4
 801a2f6:	f008 f8ce 	bl	8022496 <__cxa_guard_release>
 801a2fa:	4a05      	ldr	r2, [pc, #20]	@ (801a310 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801a2fc:	4905      	ldr	r1, [pc, #20]	@ (801a314 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801a2fe:	4806      	ldr	r0, [pc, #24]	@ (801a318 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801a300:	f008 f8b6 	bl	8022470 <__aeabi_atexit>
 801a304:	4b04      	ldr	r3, [pc, #16]	@ (801a318 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801a306:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801a308:	bd38      	pop	{r3, r4, r5, pc}
 801a30a:	bf00      	nop
 801a30c:	200140d8 	.word	0x200140d8
 801a310:	20000000 	.word	0x20000000
 801a314:	08015cad 	.word	0x08015cad
 801a318:	20000198 	.word	0x20000198

0801a31c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801a31c:	b538      	push	{r3, r4, r5, lr}
 801a31e:	4c0b      	ldr	r4, [pc, #44]	@ (801a34c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801a320:	7823      	ldrb	r3, [r4, #0]
 801a322:	f3bf 8f5b 	dmb	ish
 801a326:	07db      	lsls	r3, r3, #31
 801a328:	4605      	mov	r5, r0
 801a32a:	d40b      	bmi.n	801a344 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801a32c:	4620      	mov	r0, r4
 801a32e:	f008 f8a6 	bl	802247e <__cxa_guard_acquire>
 801a332:	b138      	cbz	r0, 801a344 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801a334:	4620      	mov	r0, r4
 801a336:	f008 f8ae 	bl	8022496 <__cxa_guard_release>
 801a33a:	4a05      	ldr	r2, [pc, #20]	@ (801a350 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801a33c:	4905      	ldr	r1, [pc, #20]	@ (801a354 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801a33e:	4806      	ldr	r0, [pc, #24]	@ (801a358 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801a340:	f008 f896 	bl	8022470 <__aeabi_atexit>
 801a344:	4b04      	ldr	r3, [pc, #16]	@ (801a358 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801a346:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801a34a:	bd38      	pop	{r3, r4, r5, pc}
 801a34c:	200140dc 	.word	0x200140dc
 801a350:	20000000 	.word	0x20000000
 801a354:	08015cab 	.word	0x08015cab
 801a358:	2000019c 	.word	0x2000019c

0801a35c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801a35c:	b570      	push	{r4, r5, r6, lr}
 801a35e:	4d0d      	ldr	r5, [pc, #52]	@ (801a394 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801a360:	4c0d      	ldr	r4, [pc, #52]	@ (801a398 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801a362:	782b      	ldrb	r3, [r5, #0]
 801a364:	f3bf 8f5b 	dmb	ish
 801a368:	f013 0f01 	tst.w	r3, #1
 801a36c:	4606      	mov	r6, r0
 801a36e:	d10d      	bne.n	801a38c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801a370:	4628      	mov	r0, r5
 801a372:	f008 f884 	bl	802247e <__cxa_guard_acquire>
 801a376:	b148      	cbz	r0, 801a38c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801a378:	4b08      	ldr	r3, [pc, #32]	@ (801a39c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801a37a:	6023      	str	r3, [r4, #0]
 801a37c:	4628      	mov	r0, r5
 801a37e:	f008 f88a 	bl	8022496 <__cxa_guard_release>
 801a382:	4a07      	ldr	r2, [pc, #28]	@ (801a3a0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801a384:	4907      	ldr	r1, [pc, #28]	@ (801a3a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801a386:	4620      	mov	r0, r4
 801a388:	f008 f872 	bl	8022470 <__aeabi_atexit>
 801a38c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801a390:	bd70      	pop	{r4, r5, r6, pc}
 801a392:	bf00      	nop
 801a394:	200140e0 	.word	0x200140e0
 801a398:	20014258 	.word	0x20014258
 801a39c:	08025e8c 	.word	0x08025e8c
 801a3a0:	20000000 	.word	0x20000000
 801a3a4:	08015ca9 	.word	0x08015ca9

0801a3a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801a3a8:	b510      	push	{r4, lr}
 801a3aa:	4604      	mov	r4, r0
 801a3ac:	f7ff ff96 	bl	801a2dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801a3b0:	4620      	mov	r0, r4
 801a3b2:	f7ff ffb3 	bl	801a31c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801a3b6:	4620      	mov	r0, r4
 801a3b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a3bc:	f7ff bfce 	b.w	801a35c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801a3c0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801a3c0:	b570      	push	{r4, r5, r6, lr}
 801a3c2:	4d0d      	ldr	r5, [pc, #52]	@ (801a3f8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801a3c4:	4c0d      	ldr	r4, [pc, #52]	@ (801a3fc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801a3c6:	782b      	ldrb	r3, [r5, #0]
 801a3c8:	f3bf 8f5b 	dmb	ish
 801a3cc:	f013 0f01 	tst.w	r3, #1
 801a3d0:	4606      	mov	r6, r0
 801a3d2:	d10d      	bne.n	801a3f0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801a3d4:	4628      	mov	r0, r5
 801a3d6:	f008 f852 	bl	802247e <__cxa_guard_acquire>
 801a3da:	b148      	cbz	r0, 801a3f0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801a3dc:	4b08      	ldr	r3, [pc, #32]	@ (801a400 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801a3de:	6023      	str	r3, [r4, #0]
 801a3e0:	4628      	mov	r0, r5
 801a3e2:	f008 f858 	bl	8022496 <__cxa_guard_release>
 801a3e6:	4a07      	ldr	r2, [pc, #28]	@ (801a404 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801a3e8:	4907      	ldr	r1, [pc, #28]	@ (801a408 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801a3ea:	4620      	mov	r0, r4
 801a3ec:	f008 f840 	bl	8022470 <__aeabi_atexit>
 801a3f0:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801a3f4:	bd70      	pop	{r4, r5, r6, pc}
 801a3f6:	bf00      	nop
 801a3f8:	200140d4 	.word	0x200140d4
 801a3fc:	20014154 	.word	0x20014154
 801a400:	08025ea8 	.word	0x08025ea8
 801a404:	20000000 	.word	0x20000000
 801a408:	08015ca7 	.word	0x08015ca7

0801a40c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801a40c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a410:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801a414:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801a418:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801a41c:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801a420:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801a424:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801a428:	8808      	ldrh	r0, [r1, #0]
 801a42a:	fb05 4c0e 	mla	ip, r5, lr, r4
 801a42e:	2d00      	cmp	r5, #0
 801a430:	eb02 0a0c 	add.w	sl, r2, ip
 801a434:	f2c0 80b0 	blt.w	801a598 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a438:	45ab      	cmp	fp, r5
 801a43a:	f340 80ad 	ble.w	801a598 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a43e:	2c00      	cmp	r4, #0
 801a440:	f2c0 80a8 	blt.w	801a594 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a444:	45a6      	cmp	lr, r4
 801a446:	f340 80a5 	ble.w	801a594 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a44a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801a44e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801a452:	1c62      	adds	r2, r4, #1
 801a454:	f100 80a3 	bmi.w	801a59e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a458:	4596      	cmp	lr, r2
 801a45a:	f340 80a0 	ble.w	801a59e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a45e:	f1b9 0f00 	cmp.w	r9, #0
 801a462:	f000 809c 	beq.w	801a59e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a466:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a46a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a46e:	3501      	adds	r5, #1
 801a470:	f100 8099 	bmi.w	801a5a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a474:	45ab      	cmp	fp, r5
 801a476:	f340 8096 	ble.w	801a5a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a47a:	2f00      	cmp	r7, #0
 801a47c:	f000 8093 	beq.w	801a5a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a480:	2c00      	cmp	r4, #0
 801a482:	f2c0 808e 	blt.w	801a5a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a486:	45a6      	cmp	lr, r4
 801a488:	f340 808b 	ble.w	801a5a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a48c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801a490:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801a494:	3401      	adds	r4, #1
 801a496:	f100 8089 	bmi.w	801a5ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a49a:	45a6      	cmp	lr, r4
 801a49c:	f340 8086 	ble.w	801a5ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a4a0:	f1b9 0f00 	cmp.w	r9, #0
 801a4a4:	f000 8082 	beq.w	801a5ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a4a8:	44d6      	add	lr, sl
 801a4aa:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a4ae:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801a4b2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801a4b6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a4ba:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801a4be:	fb19 fe07 	smulbb	lr, r9, r7
 801a4c2:	ea44 0808 	orr.w	r8, r4, r8
 801a4c6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801a4ca:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801a4ce:	f1c7 0210 	rsb	r2, r7, #16
 801a4d2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a4d6:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a4da:	ea44 0c0c 	orr.w	ip, r4, ip
 801a4de:	eba2 0209 	sub.w	r2, r2, r9
 801a4e2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801a4e6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801a4ea:	fb04 f40c 	mul.w	r4, r4, ip
 801a4ee:	fb02 4808 	mla	r8, r2, r8, r4
 801a4f2:	041a      	lsls	r2, r3, #16
 801a4f4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a4f8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a4fc:	4313      	orrs	r3, r2
 801a4fe:	042a      	lsls	r2, r5, #16
 801a500:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a504:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a508:	fb0e 8303 	mla	r3, lr, r3, r8
 801a50c:	432a      	orrs	r2, r5
 801a50e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801a512:	fb07 3202 	mla	r2, r7, r2, r3
 801a516:	0d53      	lsrs	r3, r2, #21
 801a518:	0952      	lsrs	r2, r2, #5
 801a51a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a51e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a522:	431a      	orrs	r2, r3
 801a524:	b293      	uxth	r3, r2
 801a526:	b2b4      	uxth	r4, r6
 801a528:	1202      	asrs	r2, r0, #8
 801a52a:	43f6      	mvns	r6, r6
 801a52c:	b2f6      	uxtb	r6, r6
 801a52e:	121d      	asrs	r5, r3, #8
 801a530:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801a534:	fb12 f206 	smulbb	r2, r2, r6
 801a538:	10c7      	asrs	r7, r0, #3
 801a53a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a53e:	00c0      	lsls	r0, r0, #3
 801a540:	fb05 2504 	mla	r5, r5, r4, r2
 801a544:	b2c0      	uxtb	r0, r0
 801a546:	10da      	asrs	r2, r3, #3
 801a548:	00db      	lsls	r3, r3, #3
 801a54a:	b2db      	uxtb	r3, r3
 801a54c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a550:	fb10 f006 	smulbb	r0, r0, r6
 801a554:	b2ad      	uxth	r5, r5
 801a556:	fb03 0004 	mla	r0, r3, r4, r0
 801a55a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a55e:	fb17 f706 	smulbb	r7, r7, r6
 801a562:	b280      	uxth	r0, r0
 801a564:	1c6b      	adds	r3, r5, #1
 801a566:	fb02 7204 	mla	r2, r2, r4, r7
 801a56a:	b292      	uxth	r2, r2
 801a56c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a570:	1c43      	adds	r3, r0, #1
 801a572:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a576:	1c50      	adds	r0, r2, #1
 801a578:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a57c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a580:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a584:	0952      	lsrs	r2, r2, #5
 801a586:	432b      	orrs	r3, r5
 801a588:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a58c:	4313      	orrs	r3, r2
 801a58e:	800b      	strh	r3, [r1, #0]
 801a590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a594:	4680      	mov	r8, r0
 801a596:	e75c      	b.n	801a452 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801a598:	4684      	mov	ip, r0
 801a59a:	4680      	mov	r8, r0
 801a59c:	e767      	b.n	801a46e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a59e:	4684      	mov	ip, r0
 801a5a0:	e765      	b.n	801a46e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a5a2:	4605      	mov	r5, r0
 801a5a4:	e776      	b.n	801a494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801a5a6:	4603      	mov	r3, r0
 801a5a8:	4605      	mov	r5, r0
 801a5aa:	e782      	b.n	801a4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801a5ac:	4603      	mov	r3, r0
 801a5ae:	e780      	b.n	801a4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801a5b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5b4:	b099      	sub	sp, #100	@ 0x64
 801a5b6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801a5ba:	9215      	str	r2, [sp, #84]	@ 0x54
 801a5bc:	9309      	str	r3, [sp, #36]	@ 0x24
 801a5be:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801a5c0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801a5c4:	930d      	str	r3, [sp, #52]	@ 0x34
 801a5c6:	910c      	str	r1, [sp, #48]	@ 0x30
 801a5c8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801a5cc:	9016      	str	r0, [sp, #88]	@ 0x58
 801a5ce:	6850      	ldr	r0, [r2, #4]
 801a5d0:	6812      	ldr	r2, [r2, #0]
 801a5d2:	fb00 1303 	mla	r3, r0, r3, r1
 801a5d6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801a5da:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a5dc:	681b      	ldr	r3, [r3, #0]
 801a5de:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a5e0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a5e2:	685e      	ldr	r6, [r3, #4]
 801a5e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a5e6:	43db      	mvns	r3, r3
 801a5e8:	b2db      	uxtb	r3, r3
 801a5ea:	3604      	adds	r6, #4
 801a5ec:	930a      	str	r3, [sp, #40]	@ 0x28
 801a5ee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a5f0:	2b00      	cmp	r3, #0
 801a5f2:	dc03      	bgt.n	801a5fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a5f4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801a5f6:	2b00      	cmp	r3, #0
 801a5f8:	f340 8225 	ble.w	801aa46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a5fc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a5fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a602:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a606:	1e48      	subs	r0, r1, #1
 801a608:	1e57      	subs	r7, r2, #1
 801a60a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a60c:	2b00      	cmp	r3, #0
 801a60e:	f340 80e3 	ble.w	801a7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a612:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801a616:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a61a:	d406      	bmi.n	801a62a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a61c:	4584      	cmp	ip, r0
 801a61e:	da04      	bge.n	801a62a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a620:	2b00      	cmp	r3, #0
 801a622:	db02      	blt.n	801a62a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a624:	42bb      	cmp	r3, r7
 801a626:	f2c0 80d8 	blt.w	801a7da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a62a:	f11c 0c01 	adds.w	ip, ip, #1
 801a62e:	f100 80c9 	bmi.w	801a7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a632:	4561      	cmp	r1, ip
 801a634:	f2c0 80c6 	blt.w	801a7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a638:	3301      	adds	r3, #1
 801a63a:	f100 80c3 	bmi.w	801a7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a63e:	429a      	cmp	r2, r3
 801a640:	f2c0 80c0 	blt.w	801a7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a644:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801a648:	4647      	mov	r7, r8
 801a64a:	f1bb 0f00 	cmp.w	fp, #0
 801a64e:	f340 80e3 	ble.w	801a818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801a652:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801a654:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a656:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a65a:	689b      	ldr	r3, [r3, #8]
 801a65c:	ea5f 422a 	movs.w	r2, sl, asr #16
 801a660:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a664:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801a668:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a66c:	f100 8121 	bmi.w	801a8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a670:	f103 39ff 	add.w	r9, r3, #4294967295
 801a674:	454a      	cmp	r2, r9
 801a676:	f280 811c 	bge.w	801a8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a67a:	f1bc 0f00 	cmp.w	ip, #0
 801a67e:	f2c0 8118 	blt.w	801a8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a682:	f10e 39ff 	add.w	r9, lr, #4294967295
 801a686:	45cc      	cmp	ip, r9
 801a688:	f280 8113 	bge.w	801a8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a68c:	b21b      	sxth	r3, r3
 801a68e:	fb0c 2203 	mla	r2, ip, r3, r2
 801a692:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a694:	eb04 0902 	add.w	r9, r4, r2
 801a698:	5ca2      	ldrb	r2, [r4, r2]
 801a69a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801a69e:	2800      	cmp	r0, #0
 801a6a0:	f000 80fe 	beq.w	801a8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a6a4:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a6a8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801a6ac:	9211      	str	r2, [sp, #68]	@ 0x44
 801a6ae:	b151      	cbz	r1, 801a6c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a6b0:	eb09 0203 	add.w	r2, r9, r3
 801a6b4:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a6b8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a6bc:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a6be:	7853      	ldrb	r3, [r2, #1]
 801a6c0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a6c4:	9312      	str	r3, [sp, #72]	@ 0x48
 801a6c6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a6c8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a6ca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a6ce:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a6d2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a6d6:	ea4c 0c03 	orr.w	ip, ip, r3
 801a6da:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a6dc:	041b      	lsls	r3, r3, #16
 801a6de:	fb10 f201 	smulbb	r2, r0, r1
 801a6e2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801a6e6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a6ea:	10d2      	asrs	r2, r2, #3
 801a6ec:	4323      	orrs	r3, r4
 801a6ee:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801a6f2:	4353      	muls	r3, r2
 801a6f4:	fb09 330c 	mla	r3, r9, ip, r3
 801a6f8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a6fc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a700:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a704:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a708:	f1c1 0c10 	rsb	ip, r1, #16
 801a70c:	ebac 0c00 	sub.w	ip, ip, r0
 801a710:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a714:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a718:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a71a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a71c:	0418      	lsls	r0, r3, #16
 801a71e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a722:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a726:	4318      	orrs	r0, r3
 801a728:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a72c:	fb02 c200 	mla	r2, r2, r0, ip
 801a730:	0d53      	lsrs	r3, r2, #21
 801a732:	0952      	lsrs	r2, r2, #5
 801a734:	8838      	ldrh	r0, [r7, #0]
 801a736:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a73a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a73e:	431a      	orrs	r2, r3
 801a740:	b292      	uxth	r2, r2
 801a742:	1201      	asrs	r1, r0, #8
 801a744:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801a748:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a74c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a750:	fb11 f104 	smulbb	r1, r1, r4
 801a754:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a758:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a75c:	00c0      	lsls	r0, r0, #3
 801a75e:	fb0c 1c03 	mla	ip, ip, r3, r1
 801a762:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801a766:	10d1      	asrs	r1, r2, #3
 801a768:	b2c0      	uxtb	r0, r0
 801a76a:	00d2      	lsls	r2, r2, #3
 801a76c:	b2d2      	uxtb	r2, r2
 801a76e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a772:	fb1e fe04 	smulbb	lr, lr, r4
 801a776:	fb10 f004 	smulbb	r0, r0, r4
 801a77a:	fa1f fc8c 	uxth.w	ip, ip
 801a77e:	fb01 e103 	mla	r1, r1, r3, lr
 801a782:	fb02 0303 	mla	r3, r2, r3, r0
 801a786:	b29a      	uxth	r2, r3
 801a788:	f10c 0301 	add.w	r3, ip, #1
 801a78c:	b289      	uxth	r1, r1
 801a78e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a792:	1c53      	adds	r3, r2, #1
 801a794:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a798:	1c4a      	adds	r2, r1, #1
 801a79a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a79e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a7a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a7a6:	0949      	lsrs	r1, r1, #5
 801a7a8:	ea43 030c 	orr.w	r3, r3, ip
 801a7ac:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a7b0:	430b      	orrs	r3, r1
 801a7b2:	803b      	strh	r3, [r7, #0]
 801a7b4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a7b6:	449a      	add	sl, r3
 801a7b8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a7ba:	3702      	adds	r7, #2
 801a7bc:	441d      	add	r5, r3
 801a7be:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a7c2:	e742      	b.n	801a64a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a7c4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a7c6:	449a      	add	sl, r3
 801a7c8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a7ca:	441d      	add	r5, r3
 801a7cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a7ce:	3b01      	subs	r3, #1
 801a7d0:	9309      	str	r3, [sp, #36]	@ 0x24
 801a7d2:	f108 0802 	add.w	r8, r8, #2
 801a7d6:	e718      	b.n	801a60a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a7d8:	d023      	beq.n	801a822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a7da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a7dc:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801a7de:	3b01      	subs	r3, #1
 801a7e0:	fb00 a003 	mla	r0, r0, r3, sl
 801a7e4:	1400      	asrs	r0, r0, #16
 801a7e6:	f53f af2d 	bmi.w	801a644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a7ea:	3901      	subs	r1, #1
 801a7ec:	4288      	cmp	r0, r1
 801a7ee:	f6bf af29 	bge.w	801a644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a7f2:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801a7f4:	fb01 5303 	mla	r3, r1, r3, r5
 801a7f8:	141b      	asrs	r3, r3, #16
 801a7fa:	f53f af23 	bmi.w	801a644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a7fe:	3a01      	subs	r2, #1
 801a800:	4293      	cmp	r3, r2
 801a802:	f6bf af1f 	bge.w	801a644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a806:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801a80a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801a80e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801a812:	f1be 0f00 	cmp.w	lr, #0
 801a816:	dc6c      	bgt.n	801a8f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a818:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a81a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a81e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a822:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a824:	2b00      	cmp	r3, #0
 801a826:	f340 810e 	ble.w	801aa46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a82a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a82e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a832:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a836:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a838:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a83c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a840:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a844:	eef0 6a62 	vmov.f32	s13, s5
 801a848:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a84c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a850:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a854:	ee16 aa90 	vmov	sl, s13
 801a858:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a85c:	eef0 6a43 	vmov.f32	s13, s6
 801a860:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a864:	ee12 2a90 	vmov	r2, s5
 801a868:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a86c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a870:	ee13 2a10 	vmov	r2, s6
 801a874:	9325      	str	r3, [sp, #148]	@ 0x94
 801a876:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a878:	fb92 f3f3 	sdiv	r3, r2, r3
 801a87c:	9326      	str	r3, [sp, #152]	@ 0x98
 801a87e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a880:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801a882:	3b01      	subs	r3, #1
 801a884:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a888:	930c      	str	r3, [sp, #48]	@ 0x30
 801a88a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a88c:	bf08      	it	eq
 801a88e:	4613      	moveq	r3, r2
 801a890:	ee16 5a90 	vmov	r5, s13
 801a894:	9309      	str	r3, [sp, #36]	@ 0x24
 801a896:	eeb0 3a67 	vmov.f32	s6, s15
 801a89a:	eef0 2a47 	vmov.f32	s5, s14
 801a89e:	e6a6      	b.n	801a5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a8a0:	2900      	cmp	r1, #0
 801a8a2:	f43f af10 	beq.w	801a6c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a8a6:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a8aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a8ae:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a8b0:	e709      	b.n	801a6c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a8b2:	f112 0901 	adds.w	r9, r2, #1
 801a8b6:	f53f af7d 	bmi.w	801a7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a8ba:	454b      	cmp	r3, r9
 801a8bc:	f6ff af7a 	blt.w	801a7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a8c0:	f11c 0901 	adds.w	r9, ip, #1
 801a8c4:	f53f af76 	bmi.w	801a7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a8c8:	45ce      	cmp	lr, r9
 801a8ca:	f6ff af73 	blt.w	801a7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a8ce:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a8d0:	9202      	str	r2, [sp, #8]
 801a8d2:	b21b      	sxth	r3, r3
 801a8d4:	fa0f f28e 	sxth.w	r2, lr
 801a8d8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a8dc:	e9cd c003 	strd	ip, r0, [sp, #12]
 801a8e0:	9201      	str	r2, [sp, #4]
 801a8e2:	9300      	str	r3, [sp, #0]
 801a8e4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a8e6:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801a8e8:	4633      	mov	r3, r6
 801a8ea:	4639      	mov	r1, r7
 801a8ec:	f7ff fd8e 	bl	801a40c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801a8f0:	e760      	b.n	801a7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a8f2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a8f4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a8f6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a8fa:	ea4f 422a 	mov.w	r2, sl, asr #16
 801a8fe:	1429      	asrs	r1, r5, #16
 801a900:	fb03 2101 	mla	r1, r3, r1, r2
 801a904:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a906:	440a      	add	r2, r1
 801a908:	5c61      	ldrb	r1, [r4, r1]
 801a90a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801a90e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a912:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801a916:	f1bc 0f00 	cmp.w	ip, #0
 801a91a:	f000 808c 	beq.w	801aa36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801a91e:	7857      	ldrb	r7, [r2, #1]
 801a920:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801a924:	9413      	str	r4, [sp, #76]	@ 0x4c
 801a926:	b140      	cbz	r0, 801a93a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a928:	18d7      	adds	r7, r2, r3
 801a92a:	5cd3      	ldrb	r3, [r2, r3]
 801a92c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a930:	9310      	str	r3, [sp, #64]	@ 0x40
 801a932:	787b      	ldrb	r3, [r7, #1]
 801a934:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a938:	9314      	str	r3, [sp, #80]	@ 0x50
 801a93a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a93c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a93e:	fb1c f200 	smulbb	r2, ip, r0
 801a942:	041f      	lsls	r7, r3, #16
 801a944:	10d2      	asrs	r2, r2, #3
 801a946:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a94a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801a94e:	431f      	orrs	r7, r3
 801a950:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801a954:	9317      	str	r3, [sp, #92]	@ 0x5c
 801a956:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801a958:	041b      	lsls	r3, r3, #16
 801a95a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801a95e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a962:	ea43 030b 	orr.w	r3, r3, fp
 801a966:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a968:	4353      	muls	r3, r2
 801a96a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a96e:	fb04 3707 	mla	r7, r4, r7, r3
 801a972:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a976:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a97a:	ea43 0b01 	orr.w	fp, r3, r1
 801a97e:	f1c0 0110 	rsb	r1, r0, #16
 801a982:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a984:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a986:	eba1 0c0c 	sub.w	ip, r1, ip
 801a98a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a98e:	fb0c 770b 	mla	r7, ip, fp, r7
 801a992:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a996:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801a99a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a99e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a9a2:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a9a6:	fb02 770c 	mla	r7, r2, ip, r7
 801a9aa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a9ac:	0d79      	lsrs	r1, r7, #21
 801a9ae:	097f      	lsrs	r7, r7, #5
 801a9b0:	8812      	ldrh	r2, [r2, #0]
 801a9b2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a9b6:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a9ba:	430f      	orrs	r7, r1
 801a9bc:	b2bb      	uxth	r3, r7
 801a9be:	1211      	asrs	r1, r2, #8
 801a9c0:	1218      	asrs	r0, r3, #8
 801a9c2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a9c6:	fb11 f104 	smulbb	r1, r1, r4
 801a9ca:	10d7      	asrs	r7, r2, #3
 801a9cc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a9d0:	00d2      	lsls	r2, r2, #3
 801a9d2:	fb00 1009 	mla	r0, r0, r9, r1
 801a9d6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a9da:	10d9      	asrs	r1, r3, #3
 801a9dc:	b2d2      	uxtb	r2, r2
 801a9de:	00db      	lsls	r3, r3, #3
 801a9e0:	fb17 f704 	smulbb	r7, r7, r4
 801a9e4:	fb12 f204 	smulbb	r2, r2, r4
 801a9e8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a9ec:	b2db      	uxtb	r3, r3
 801a9ee:	b280      	uxth	r0, r0
 801a9f0:	fb01 7109 	mla	r1, r1, r9, r7
 801a9f4:	fb03 2309 	mla	r3, r3, r9, r2
 801a9f8:	b29b      	uxth	r3, r3
 801a9fa:	b289      	uxth	r1, r1
 801a9fc:	1c42      	adds	r2, r0, #1
 801a9fe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801aa02:	1c4f      	adds	r7, r1, #1
 801aa04:	1c5a      	adds	r2, r3, #1
 801aa06:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801aa0a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801aa0e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801aa12:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aa16:	0949      	lsrs	r1, r1, #5
 801aa18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801aa1a:	4310      	orrs	r0, r2
 801aa1c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801aa20:	4308      	orrs	r0, r1
 801aa22:	f823 0b02 	strh.w	r0, [r3], #2
 801aa26:	930e      	str	r3, [sp, #56]	@ 0x38
 801aa28:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801aa2a:	449a      	add	sl, r3
 801aa2c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801aa2e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801aa32:	441d      	add	r5, r3
 801aa34:	e6ed      	b.n	801a812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801aa36:	2800      	cmp	r0, #0
 801aa38:	f43f af7f 	beq.w	801a93a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801aa3c:	5cd3      	ldrb	r3, [r2, r3]
 801aa3e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801aa42:	9310      	str	r3, [sp, #64]	@ 0x40
 801aa44:	e779      	b.n	801a93a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801aa46:	b019      	add	sp, #100	@ 0x64
 801aa48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aa4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801aa4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aa50:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801aa54:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801aa58:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801aa5c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801aa60:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801aa64:	8808      	ldrh	r0, [r1, #0]
 801aa66:	fb08 470e 	mla	r7, r8, lr, r4
 801aa6a:	f1b8 0f00 	cmp.w	r8, #0
 801aa6e:	eb02 0907 	add.w	r9, r2, r7
 801aa72:	db67      	blt.n	801ab44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801aa74:	45c2      	cmp	sl, r8
 801aa76:	dd65      	ble.n	801ab44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801aa78:	2c00      	cmp	r4, #0
 801aa7a:	db61      	blt.n	801ab40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801aa7c:	45a6      	cmp	lr, r4
 801aa7e:	dd5f      	ble.n	801ab40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801aa80:	5dd2      	ldrb	r2, [r2, r7]
 801aa82:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801aa86:	1c62      	adds	r2, r4, #1
 801aa88:	d45f      	bmi.n	801ab4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aa8a:	4596      	cmp	lr, r2
 801aa8c:	dd5d      	ble.n	801ab4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aa8e:	2d00      	cmp	r5, #0
 801aa90:	d05b      	beq.n	801ab4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aa92:	f899 2001 	ldrb.w	r2, [r9, #1]
 801aa96:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801aa9a:	f118 0801 	adds.w	r8, r8, #1
 801aa9e:	d458      	bmi.n	801ab52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aaa0:	45c2      	cmp	sl, r8
 801aaa2:	dd56      	ble.n	801ab52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aaa4:	2e00      	cmp	r6, #0
 801aaa6:	d054      	beq.n	801ab52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aaa8:	2c00      	cmp	r4, #0
 801aaaa:	db50      	blt.n	801ab4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801aaac:	45a6      	cmp	lr, r4
 801aaae:	dd4e      	ble.n	801ab4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801aab0:	f819 200e 	ldrb.w	r2, [r9, lr]
 801aab4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801aab8:	3401      	adds	r4, #1
 801aaba:	d407      	bmi.n	801aacc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801aabc:	45a6      	cmp	lr, r4
 801aabe:	dd05      	ble.n	801aacc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801aac0:	b125      	cbz	r5, 801aacc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801aac2:	44ce      	add	lr, r9
 801aac4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801aac8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801aacc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801aad0:	fb15 f406 	smulbb	r4, r5, r6
 801aad4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801aad8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801aadc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801aae0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801aae4:	ea43 0c0c 	orr.w	ip, r3, ip
 801aae8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801aaec:	f1c6 0310 	rsb	r3, r6, #16
 801aaf0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801aaf4:	1b5b      	subs	r3, r3, r5
 801aaf6:	ea4e 0707 	orr.w	r7, lr, r7
 801aafa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801aafe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ab02:	437d      	muls	r5, r7
 801ab04:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ab08:	0403      	lsls	r3, r0, #16
 801ab0a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ab0e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ab12:	4318      	orrs	r0, r3
 801ab14:	0413      	lsls	r3, r2, #16
 801ab16:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ab1a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ab1e:	4313      	orrs	r3, r2
 801ab20:	fb04 c000 	mla	r0, r4, r0, ip
 801ab24:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ab28:	fb06 0003 	mla	r0, r6, r3, r0
 801ab2c:	0d43      	lsrs	r3, r0, #21
 801ab2e:	0940      	lsrs	r0, r0, #5
 801ab30:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ab34:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ab38:	4318      	orrs	r0, r3
 801ab3a:	8008      	strh	r0, [r1, #0]
 801ab3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ab40:	4684      	mov	ip, r0
 801ab42:	e7a0      	b.n	801aa86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ab44:	4607      	mov	r7, r0
 801ab46:	4684      	mov	ip, r0
 801ab48:	e7a7      	b.n	801aa9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ab4a:	4607      	mov	r7, r0
 801ab4c:	e7a5      	b.n	801aa9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ab4e:	4602      	mov	r2, r0
 801ab50:	e7b2      	b.n	801aab8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ab52:	4602      	mov	r2, r0
 801ab54:	e7ba      	b.n	801aacc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ab56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab5a:	b093      	sub	sp, #76	@ 0x4c
 801ab5c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801ab60:	920f      	str	r2, [sp, #60]	@ 0x3c
 801ab62:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ab64:	9108      	str	r1, [sp, #32]
 801ab66:	9306      	str	r3, [sp, #24]
 801ab68:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ab6c:	9010      	str	r0, [sp, #64]	@ 0x40
 801ab6e:	6850      	ldr	r0, [r2, #4]
 801ab70:	6812      	ldr	r2, [r2, #0]
 801ab72:	fb00 1303 	mla	r3, r0, r3, r1
 801ab76:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ab7a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ab7c:	681b      	ldr	r3, [r3, #0]
 801ab7e:	9307      	str	r3, [sp, #28]
 801ab80:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ab82:	685f      	ldr	r7, [r3, #4]
 801ab84:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801ab88:	3704      	adds	r7, #4
 801ab8a:	9b08      	ldr	r3, [sp, #32]
 801ab8c:	2b00      	cmp	r3, #0
 801ab8e:	dc03      	bgt.n	801ab98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ab90:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ab92:	2b00      	cmp	r3, #0
 801ab94:	f340 81b2 	ble.w	801aefc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ab98:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ab9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ab9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aba2:	1e48      	subs	r0, r1, #1
 801aba4:	f102 3cff 	add.w	ip, r2, #4294967295
 801aba8:	9b06      	ldr	r3, [sp, #24]
 801abaa:	2b00      	cmp	r3, #0
 801abac:	f340 80a9 	ble.w	801ad02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801abb0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801abb4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801abb8:	d406      	bmi.n	801abc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801abba:	4586      	cmp	lr, r0
 801abbc:	da04      	bge.n	801abc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801abbe:	2b00      	cmp	r3, #0
 801abc0:	db02      	blt.n	801abc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801abc2:	4563      	cmp	r3, ip
 801abc4:	f2c0 809e 	blt.w	801ad04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801abc8:	f11e 0e01 	adds.w	lr, lr, #1
 801abcc:	f100 808f 	bmi.w	801acee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801abd0:	4571      	cmp	r1, lr
 801abd2:	f2c0 808c 	blt.w	801acee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801abd6:	3301      	adds	r3, #1
 801abd8:	f100 8089 	bmi.w	801acee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801abdc:	429a      	cmp	r2, r3
 801abde:	f2c0 8086 	blt.w	801acee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801abe2:	f8dd b018 	ldr.w	fp, [sp, #24]
 801abe6:	46c8      	mov	r8, r9
 801abe8:	f1bb 0f00 	cmp.w	fp, #0
 801abec:	f340 80a6 	ble.w	801ad3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801abf0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801abf2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801abf4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801abf8:	689b      	ldr	r3, [r3, #8]
 801abfa:	1422      	asrs	r2, r4, #16
 801abfc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ac00:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ac04:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ac08:	f100 80e3 	bmi.w	801add2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ac0c:	f103 3aff 	add.w	sl, r3, #4294967295
 801ac10:	4552      	cmp	r2, sl
 801ac12:	f280 80de 	bge.w	801add2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ac16:	f1bc 0f00 	cmp.w	ip, #0
 801ac1a:	f2c0 80da 	blt.w	801add2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ac1e:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ac22:	45d4      	cmp	ip, sl
 801ac24:	f280 80d5 	bge.w	801add2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ac28:	b21b      	sxth	r3, r3
 801ac2a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ac2e:	9d07      	ldr	r5, [sp, #28]
 801ac30:	eb05 0a02 	add.w	sl, r5, r2
 801ac34:	5caa      	ldrb	r2, [r5, r2]
 801ac36:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ac3a:	2800      	cmp	r0, #0
 801ac3c:	f000 80c0 	beq.w	801adc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ac40:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ac44:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ac48:	920b      	str	r2, [sp, #44]	@ 0x2c
 801ac4a:	b151      	cbz	r1, 801ac62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ac4c:	eb0a 0203 	add.w	r2, sl, r3
 801ac50:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ac54:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ac58:	9309      	str	r3, [sp, #36]	@ 0x24
 801ac5a:	7853      	ldrb	r3, [r2, #1]
 801ac5c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ac60:	930c      	str	r3, [sp, #48]	@ 0x30
 801ac62:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ac64:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ac66:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ac6a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ac6e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ac72:	ea4c 0c03 	orr.w	ip, ip, r3
 801ac76:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ac78:	041b      	lsls	r3, r3, #16
 801ac7a:	fb10 f201 	smulbb	r2, r0, r1
 801ac7e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ac82:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ac86:	10d2      	asrs	r2, r2, #3
 801ac88:	432b      	orrs	r3, r5
 801ac8a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ac8e:	4353      	muls	r3, r2
 801ac90:	fb0a 330c 	mla	r3, sl, ip, r3
 801ac94:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ac98:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ac9c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801aca0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801aca4:	f1c1 0c10 	rsb	ip, r1, #16
 801aca8:	ebac 0c00 	sub.w	ip, ip, r0
 801acac:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801acb0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801acb4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801acb6:	0418      	lsls	r0, r3, #16
 801acb8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801acbc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801acc0:	4318      	orrs	r0, r3
 801acc2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801acc6:	fb02 c200 	mla	r2, r2, r0, ip
 801acca:	0d53      	lsrs	r3, r2, #21
 801accc:	0952      	lsrs	r2, r2, #5
 801acce:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801acd2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801acd6:	431a      	orrs	r2, r3
 801acd8:	f8a8 2000 	strh.w	r2, [r8]
 801acdc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801acde:	441c      	add	r4, r3
 801ace0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ace2:	f108 0802 	add.w	r8, r8, #2
 801ace6:	441e      	add	r6, r3
 801ace8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801acec:	e77c      	b.n	801abe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801acee:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801acf0:	441c      	add	r4, r3
 801acf2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801acf4:	441e      	add	r6, r3
 801acf6:	9b06      	ldr	r3, [sp, #24]
 801acf8:	3b01      	subs	r3, #1
 801acfa:	9306      	str	r3, [sp, #24]
 801acfc:	f109 0902 	add.w	r9, r9, #2
 801ad00:	e752      	b.n	801aba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ad02:	d020      	beq.n	801ad46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ad04:	9b06      	ldr	r3, [sp, #24]
 801ad06:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801ad08:	3b01      	subs	r3, #1
 801ad0a:	fb00 4003 	mla	r0, r0, r3, r4
 801ad0e:	1400      	asrs	r0, r0, #16
 801ad10:	f53f af67 	bmi.w	801abe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ad14:	3901      	subs	r1, #1
 801ad16:	4288      	cmp	r0, r1
 801ad18:	f6bf af63 	bge.w	801abe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ad1c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801ad1e:	fb01 6303 	mla	r3, r1, r3, r6
 801ad22:	141b      	asrs	r3, r3, #16
 801ad24:	f53f af5d 	bmi.w	801abe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ad28:	3a01      	subs	r2, #1
 801ad2a:	4293      	cmp	r3, r2
 801ad2c:	f6bf af59 	bge.w	801abe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ad30:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ad34:	46ca      	mov	sl, r9
 801ad36:	f1b8 0f00 	cmp.w	r8, #0
 801ad3a:	dc67      	bgt.n	801ae0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ad3c:	9b06      	ldr	r3, [sp, #24]
 801ad3e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ad42:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ad46:	9b08      	ldr	r3, [sp, #32]
 801ad48:	2b00      	cmp	r3, #0
 801ad4a:	f340 80d7 	ble.w	801aefc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ad4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad56:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad5a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ad5c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad60:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad64:	eeb0 6a62 	vmov.f32	s12, s5
 801ad68:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad70:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad74:	ee16 4a10 	vmov	r4, s12
 801ad78:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad7c:	eeb0 6a43 	vmov.f32	s12, s6
 801ad80:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad84:	ee12 2a90 	vmov	r2, s5
 801ad88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad8c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad90:	ee13 2a10 	vmov	r2, s6
 801ad94:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ad96:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ad98:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad9c:	9320      	str	r3, [sp, #128]	@ 0x80
 801ad9e:	9b08      	ldr	r3, [sp, #32]
 801ada0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ada2:	3b01      	subs	r3, #1
 801ada4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ada8:	9308      	str	r3, [sp, #32]
 801adaa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801adac:	bf08      	it	eq
 801adae:	4613      	moveq	r3, r2
 801adb0:	ee16 6a10 	vmov	r6, s12
 801adb4:	9306      	str	r3, [sp, #24]
 801adb6:	eeb0 3a67 	vmov.f32	s6, s15
 801adba:	eef0 2a47 	vmov.f32	s5, s14
 801adbe:	e6e4      	b.n	801ab8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801adc0:	2900      	cmp	r1, #0
 801adc2:	f43f af4e 	beq.w	801ac62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801adc6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801adca:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801adce:	9309      	str	r3, [sp, #36]	@ 0x24
 801add0:	e747      	b.n	801ac62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801add2:	f112 0a01 	adds.w	sl, r2, #1
 801add6:	d481      	bmi.n	801acdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801add8:	4553      	cmp	r3, sl
 801adda:	f6ff af7f 	blt.w	801acdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801adde:	f11c 0a01 	adds.w	sl, ip, #1
 801ade2:	f53f af7b 	bmi.w	801acdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ade6:	45d6      	cmp	lr, sl
 801ade8:	f6ff af78 	blt.w	801acdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801adec:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801adf0:	b21b      	sxth	r3, r3
 801adf2:	fa0f f28e 	sxth.w	r2, lr
 801adf6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801adfa:	9201      	str	r2, [sp, #4]
 801adfc:	9300      	str	r3, [sp, #0]
 801adfe:	9a07      	ldr	r2, [sp, #28]
 801ae00:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801ae02:	463b      	mov	r3, r7
 801ae04:	4641      	mov	r1, r8
 801ae06:	f7ff fe21 	bl	801aa4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ae0a:	e767      	b.n	801acdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae0c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ae0e:	9d07      	ldr	r5, [sp, #28]
 801ae10:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ae14:	1422      	asrs	r2, r4, #16
 801ae16:	1431      	asrs	r1, r6, #16
 801ae18:	fb03 2101 	mla	r1, r3, r1, r2
 801ae1c:	9a07      	ldr	r2, [sp, #28]
 801ae1e:	440a      	add	r2, r1
 801ae20:	5c69      	ldrb	r1, [r5, r1]
 801ae22:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801ae26:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ae2a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801ae2e:	f1be 0f00 	cmp.w	lr, #0
 801ae32:	d05c      	beq.n	801aeee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ae34:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ae38:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801ae3c:	950d      	str	r5, [sp, #52]	@ 0x34
 801ae3e:	b150      	cbz	r0, 801ae56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ae40:	eb02 0c03 	add.w	ip, r2, r3
 801ae44:	5cd3      	ldrb	r3, [r2, r3]
 801ae46:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ae4a:	930a      	str	r3, [sp, #40]	@ 0x28
 801ae4c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ae50:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ae54:	930e      	str	r3, [sp, #56]	@ 0x38
 801ae56:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ae58:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ae5a:	fb1e f200 	smulbb	r2, lr, r0
 801ae5e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ae62:	10d2      	asrs	r2, r2, #3
 801ae64:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ae68:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ae6c:	ea4c 0c03 	orr.w	ip, ip, r3
 801ae70:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ae74:	9311      	str	r3, [sp, #68]	@ 0x44
 801ae76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ae78:	041b      	lsls	r3, r3, #16
 801ae7a:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801ae7e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ae82:	ea43 030b 	orr.w	r3, r3, fp
 801ae86:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ae88:	4353      	muls	r3, r2
 801ae8a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ae8e:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ae92:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ae96:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801ae9a:	ea43 0b01 	orr.w	fp, r3, r1
 801ae9e:	f1c0 0110 	rsb	r1, r0, #16
 801aea2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801aea4:	eba1 0e0e 	sub.w	lr, r1, lr
 801aea8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801aeac:	fb0e cc0b 	mla	ip, lr, fp, ip
 801aeb0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801aeb4:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801aeb8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801aebc:	ea4b 0e0e 	orr.w	lr, fp, lr
 801aec0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801aec4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801aec8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801aecc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801aed0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801aed4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801aed8:	ea43 0c0c 	orr.w	ip, r3, ip
 801aedc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aede:	f82a cb02 	strh.w	ip, [sl], #2
 801aee2:	441c      	add	r4, r3
 801aee4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801aee6:	f108 38ff 	add.w	r8, r8, #4294967295
 801aeea:	441e      	add	r6, r3
 801aeec:	e723      	b.n	801ad36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801aeee:	2800      	cmp	r0, #0
 801aef0:	d0b1      	beq.n	801ae56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801aef2:	5cd3      	ldrb	r3, [r2, r3]
 801aef4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801aef8:	930a      	str	r3, [sp, #40]	@ 0x28
 801aefa:	e7ac      	b.n	801ae56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801aefc:	b013      	add	sp, #76	@ 0x4c
 801aefe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801af02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801af02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af06:	880d      	ldrh	r5, [r1, #0]
 801af08:	b087      	sub	sp, #28
 801af0a:	10ef      	asrs	r7, r5, #3
 801af0c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801af10:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801af14:	00ed      	lsls	r5, r5, #3
 801af16:	9701      	str	r7, [sp, #4]
 801af18:	b2ed      	uxtb	r5, r5
 801af1a:	9502      	str	r5, [sp, #8]
 801af1c:	9d01      	ldr	r5, [sp, #4]
 801af1e:	9103      	str	r1, [sp, #12]
 801af20:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801af24:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801af28:	9902      	ldr	r1, [sp, #8]
 801af2a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801af2e:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801af32:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801af36:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801af3a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801af3e:	022d      	lsls	r5, r5, #8
 801af40:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801af44:	fb06 0709 	mla	r7, r6, r9, r0
 801af48:	430d      	orrs	r5, r1
 801af4a:	2e00      	cmp	r6, #0
 801af4c:	eb02 0c07 	add.w	ip, r2, r7
 801af50:	9505      	str	r5, [sp, #20]
 801af52:	f2c0 80b6 	blt.w	801b0c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801af56:	45b3      	cmp	fp, r6
 801af58:	f340 80b3 	ble.w	801b0c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801af5c:	2800      	cmp	r0, #0
 801af5e:	f2c0 80ae 	blt.w	801b0be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801af62:	4581      	cmp	r9, r0
 801af64:	f340 80ab 	ble.w	801b0be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801af68:	5dd7      	ldrb	r7, [r2, r7]
 801af6a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801af6e:	441f      	add	r7, r3
 801af70:	1c42      	adds	r2, r0, #1
 801af72:	f100 80a9 	bmi.w	801b0c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801af76:	4591      	cmp	r9, r2
 801af78:	f340 80a6 	ble.w	801b0c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801af7c:	2c00      	cmp	r4, #0
 801af7e:	f000 80a3 	beq.w	801b0c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801af82:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801af86:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801af8a:	441d      	add	r5, r3
 801af8c:	3601      	adds	r6, #1
 801af8e:	f100 809f 	bmi.w	801b0d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801af92:	45b3      	cmp	fp, r6
 801af94:	f340 809c 	ble.w	801b0d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801af98:	f1be 0f00 	cmp.w	lr, #0
 801af9c:	f000 8098 	beq.w	801b0d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801afa0:	2800      	cmp	r0, #0
 801afa2:	f2c0 8093 	blt.w	801b0cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801afa6:	4581      	cmp	r9, r0
 801afa8:	f340 8090 	ble.w	801b0cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801afac:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801afb0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801afb4:	441e      	add	r6, r3
 801afb6:	3001      	adds	r0, #1
 801afb8:	f100 808d 	bmi.w	801b0d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801afbc:	4581      	cmp	r9, r0
 801afbe:	f340 808a 	ble.w	801b0d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801afc2:	2c00      	cmp	r4, #0
 801afc4:	f000 8087 	beq.w	801b0d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801afc8:	44e1      	add	r9, ip
 801afca:	f899 2001 	ldrb.w	r2, [r9, #1]
 801afce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801afd2:	4413      	add	r3, r2
 801afd4:	b2a4      	uxth	r4, r4
 801afd6:	fa1f fe8e 	uxth.w	lr, lr
 801afda:	fb04 fb0e 	mul.w	fp, r4, lr
 801afde:	0124      	lsls	r4, r4, #4
 801afe0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801afe4:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801afe8:	eba4 040b 	sub.w	r4, r4, fp
 801afec:	fa1f f08e 	uxth.w	r0, lr
 801aff0:	b2a2      	uxth	r2, r4
 801aff2:	78ac      	ldrb	r4, [r5, #2]
 801aff4:	f897 c002 	ldrb.w	ip, [r7, #2]
 801aff8:	9901      	ldr	r1, [sp, #4]
 801affa:	eba9 0900 	sub.w	r9, r9, r0
 801affe:	fa1f f989 	uxth.w	r9, r9
 801b002:	4354      	muls	r4, r2
 801b004:	fb09 440c 	mla	r4, r9, ip, r4
 801b008:	f896 c002 	ldrb.w	ip, [r6, #2]
 801b00c:	fb00 440c 	mla	r4, r0, ip, r4
 801b010:	f893 c002 	ldrb.w	ip, [r3, #2]
 801b014:	fa1f fe88 	uxth.w	lr, r8
 801b018:	ea6f 0808 	mvn.w	r8, r8
 801b01c:	fa5f f888 	uxtb.w	r8, r8
 801b020:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801b024:	fb1a fa08 	smulbb	sl, sl, r8
 801b028:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b02c:	fb0c ac0e 	mla	ip, ip, lr, sl
 801b030:	f895 a001 	ldrb.w	sl, [r5, #1]
 801b034:	787c      	ldrb	r4, [r7, #1]
 801b036:	782d      	ldrb	r5, [r5, #0]
 801b038:	783f      	ldrb	r7, [r7, #0]
 801b03a:	fb02 fa0a 	mul.w	sl, r2, sl
 801b03e:	fb09 aa04 	mla	sl, r9, r4, sl
 801b042:	7874      	ldrb	r4, [r6, #1]
 801b044:	436a      	muls	r2, r5
 801b046:	7835      	ldrb	r5, [r6, #0]
 801b048:	fb00 aa04 	mla	sl, r0, r4, sl
 801b04c:	fb09 2207 	mla	r2, r9, r7, r2
 801b050:	785c      	ldrb	r4, [r3, #1]
 801b052:	781b      	ldrb	r3, [r3, #0]
 801b054:	fb00 2005 	mla	r0, r0, r5, r2
 801b058:	fb0b a404 	mla	r4, fp, r4, sl
 801b05c:	fb0b 0b03 	mla	fp, fp, r3, r0
 801b060:	9b02      	ldr	r3, [sp, #8]
 801b062:	fb11 fa08 	smulbb	sl, r1, r8
 801b066:	fa1f fc8c 	uxth.w	ip, ip
 801b06a:	fb13 f808 	smulbb	r8, r3, r8
 801b06e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801b072:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801b076:	fb04 a40e 	mla	r4, r4, lr, sl
 801b07a:	f10c 0301 	add.w	r3, ip, #1
 801b07e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801b082:	fa1f fe8e 	uxth.w	lr, lr
 801b086:	b2a4      	uxth	r4, r4
 801b088:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b08c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801b090:	f104 0a01 	add.w	sl, r4, #1
 801b094:	f10e 0c01 	add.w	ip, lr, #1
 801b098:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b09c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b0a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b0a4:	0964      	lsrs	r4, r4, #5
 801b0a6:	ea4c 0c03 	orr.w	ip, ip, r3
 801b0aa:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801b0ae:	9b03      	ldr	r3, [sp, #12]
 801b0b0:	ea4c 0c04 	orr.w	ip, ip, r4
 801b0b4:	f8a3 c000 	strh.w	ip, [r3]
 801b0b8:	b007      	add	sp, #28
 801b0ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b0be:	af05      	add	r7, sp, #20
 801b0c0:	e756      	b.n	801af70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801b0c2:	ad05      	add	r5, sp, #20
 801b0c4:	462f      	mov	r7, r5
 801b0c6:	e761      	b.n	801af8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b0c8:	ad05      	add	r5, sp, #20
 801b0ca:	e75f      	b.n	801af8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b0cc:	ae05      	add	r6, sp, #20
 801b0ce:	e772      	b.n	801afb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801b0d0:	ab05      	add	r3, sp, #20
 801b0d2:	461e      	mov	r6, r3
 801b0d4:	e77e      	b.n	801afd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801b0d6:	ab05      	add	r3, sp, #20
 801b0d8:	e77c      	b.n	801afd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801b0da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0de:	b095      	sub	sp, #84	@ 0x54
 801b0e0:	9212      	str	r2, [sp, #72]	@ 0x48
 801b0e2:	9309      	str	r3, [sp, #36]	@ 0x24
 801b0e4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801b0e6:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801b0ea:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b0ec:	910e      	str	r1, [sp, #56]	@ 0x38
 801b0ee:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801b0f2:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b0f4:	6850      	ldr	r0, [r2, #4]
 801b0f6:	6812      	ldr	r2, [r2, #0]
 801b0f8:	fb00 1303 	mla	r3, r0, r3, r1
 801b0fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b100:	930a      	str	r3, [sp, #40]	@ 0x28
 801b102:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b104:	681b      	ldr	r3, [r3, #0]
 801b106:	930d      	str	r3, [sp, #52]	@ 0x34
 801b108:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b10a:	685c      	ldr	r4, [r3, #4]
 801b10c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b10e:	43db      	mvns	r3, r3
 801b110:	b2db      	uxtb	r3, r3
 801b112:	3404      	adds	r4, #4
 801b114:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b116:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b118:	2b00      	cmp	r3, #0
 801b11a:	dc03      	bgt.n	801b124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b11c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b11e:	2b00      	cmp	r3, #0
 801b120:	f340 8255 	ble.w	801b5ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b124:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b126:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b12a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b12e:	1e48      	subs	r0, r1, #1
 801b130:	1e55      	subs	r5, r2, #1
 801b132:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b134:	2b00      	cmp	r3, #0
 801b136:	f340 80f9 	ble.w	801b32c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b13a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801b13c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b13e:	1436      	asrs	r6, r6, #16
 801b140:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b144:	d406      	bmi.n	801b154 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b146:	4286      	cmp	r6, r0
 801b148:	da04      	bge.n	801b154 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b14a:	2b00      	cmp	r3, #0
 801b14c:	db02      	blt.n	801b154 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b14e:	42ab      	cmp	r3, r5
 801b150:	f2c0 80ed 	blt.w	801b32e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801b154:	3601      	adds	r6, #1
 801b156:	f100 80da 	bmi.w	801b30e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b15a:	42b1      	cmp	r1, r6
 801b15c:	f2c0 80d7 	blt.w	801b30e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b160:	3301      	adds	r3, #1
 801b162:	f100 80d4 	bmi.w	801b30e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b166:	429a      	cmp	r2, r3
 801b168:	f2c0 80d1 	blt.w	801b30e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b16c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b16e:	9311      	str	r3, [sp, #68]	@ 0x44
 801b170:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b172:	930c      	str	r3, [sp, #48]	@ 0x30
 801b174:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b176:	2b00      	cmp	r3, #0
 801b178:	f340 80fa 	ble.w	801b370 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801b17c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801b17e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b180:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b182:	68c6      	ldr	r6, [r0, #12]
 801b184:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801b186:	141d      	asrs	r5, r3, #16
 801b188:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b18c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b18e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801b190:	1400      	asrs	r0, r0, #16
 801b192:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b196:	6892      	ldr	r2, [r2, #8]
 801b198:	f100 813e 	bmi.w	801b418 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b19c:	1e57      	subs	r7, r2, #1
 801b19e:	42b8      	cmp	r0, r7
 801b1a0:	f280 813a 	bge.w	801b418 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b1a4:	2d00      	cmp	r5, #0
 801b1a6:	f2c0 8137 	blt.w	801b418 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b1aa:	1e77      	subs	r7, r6, #1
 801b1ac:	42bd      	cmp	r5, r7
 801b1ae:	f280 8133 	bge.w	801b418 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b1b2:	b212      	sxth	r2, r2
 801b1b4:	fb05 0002 	mla	r0, r5, r2, r0
 801b1b8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b1ba:	f815 a000 	ldrb.w	sl, [r5, r0]
 801b1be:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801b1c2:	182e      	adds	r6, r5, r0
 801b1c4:	eb04 050a 	add.w	r5, r4, sl
 801b1c8:	2b00      	cmp	r3, #0
 801b1ca:	f000 8117 	beq.w	801b3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801b1ce:	f896 c001 	ldrb.w	ip, [r6, #1]
 801b1d2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801b1d6:	44a4      	add	ip, r4
 801b1d8:	2900      	cmp	r1, #0
 801b1da:	f000 8117 	beq.w	801b40c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801b1de:	18b0      	adds	r0, r6, r2
 801b1e0:	5cb2      	ldrb	r2, [r6, r2]
 801b1e2:	7840      	ldrb	r0, [r0, #1]
 801b1e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b1e8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b1ec:	4422      	add	r2, r4
 801b1ee:	4420      	add	r0, r4
 801b1f0:	b29b      	uxth	r3, r3
 801b1f2:	b289      	uxth	r1, r1
 801b1f4:	fb03 f901 	mul.w	r9, r3, r1
 801b1f8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b1fc:	011b      	lsls	r3, r3, #4
 801b1fe:	b289      	uxth	r1, r1
 801b200:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801b204:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b208:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801b20a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801b20e:	f8b6 e000 	ldrh.w	lr, [r6]
 801b212:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801b216:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801b21a:	eba3 0309 	sub.w	r3, r3, r9
 801b21e:	b29b      	uxth	r3, r3
 801b220:	eba8 0801 	sub.w	r8, r8, r1
 801b224:	fa1f f888 	uxth.w	r8, r8
 801b228:	435f      	muls	r7, r3
 801b22a:	fb08 770b 	mla	r7, r8, fp, r7
 801b22e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b232:	9310      	str	r3, [sp, #64]	@ 0x40
 801b234:	fb01 770b 	mla	r7, r1, fp, r7
 801b238:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b23c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b23e:	fb09 770b 	mla	r7, r9, fp, r7
 801b242:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801b246:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801b24a:	fb1b fb03 	smulbb	fp, fp, r3
 801b24e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b252:	fb07 b706 	mla	r7, r7, r6, fp
 801b256:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b258:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b25c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801b260:	f89c c000 	ldrb.w	ip, [ip]
 801b264:	435d      	muls	r5, r3
 801b266:	fb08 550b 	mla	r5, r8, fp, r5
 801b26a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b26e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b270:	fb01 550b 	mla	r5, r1, fp, r5
 801b274:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b278:	fb09 550b 	mla	r5, r9, fp, r5
 801b27c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801b280:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801b284:	fb1b fb03 	smulbb	fp, fp, r3
 801b288:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b28a:	fb03 f30c 	mul.w	r3, r3, ip
 801b28e:	f892 c000 	ldrb.w	ip, [r2]
 801b292:	fb08 330a 	mla	r3, r8, sl, r3
 801b296:	fb01 330c 	mla	r3, r1, ip, r3
 801b29a:	f890 c000 	ldrb.w	ip, [r0]
 801b29e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b2a2:	fb09 3c0c 	mla	ip, r9, ip, r3
 801b2a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b2a8:	fa5f fe8e 	uxtb.w	lr, lr
 801b2ac:	b2bf      	uxth	r7, r7
 801b2ae:	fb1e fe03 	smulbb	lr, lr, r3
 801b2b2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b2b6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b2ba:	fb05 b506 	mla	r5, r5, r6, fp
 801b2be:	1c7b      	adds	r3, r7, #1
 801b2c0:	fb0c e606 	mla	r6, ip, r6, lr
 801b2c4:	b2ad      	uxth	r5, r5
 801b2c6:	b2b6      	uxth	r6, r6
 801b2c8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801b2cc:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801b2d0:	f105 0b01 	add.w	fp, r5, #1
 801b2d4:	1c77      	adds	r7, r6, #1
 801b2d6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801b2da:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b2de:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b2e2:	096d      	lsrs	r5, r5, #5
 801b2e4:	431f      	orrs	r7, r3
 801b2e6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b2ea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b2ec:	433d      	orrs	r5, r7
 801b2ee:	801d      	strh	r5, [r3, #0]
 801b2f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b2f2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801b2f4:	3302      	adds	r3, #2
 801b2f6:	930c      	str	r3, [sp, #48]	@ 0x30
 801b2f8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b2fa:	4413      	add	r3, r2
 801b2fc:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b2fe:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801b300:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b302:	4413      	add	r3, r2
 801b304:	9320      	str	r3, [sp, #128]	@ 0x80
 801b306:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b308:	3b01      	subs	r3, #1
 801b30a:	9311      	str	r3, [sp, #68]	@ 0x44
 801b30c:	e732      	b.n	801b174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b30e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b310:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801b312:	4433      	add	r3, r6
 801b314:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b316:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801b318:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b31a:	4433      	add	r3, r6
 801b31c:	9320      	str	r3, [sp, #128]	@ 0x80
 801b31e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b320:	3b01      	subs	r3, #1
 801b322:	9309      	str	r3, [sp, #36]	@ 0x24
 801b324:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b326:	3302      	adds	r3, #2
 801b328:	930a      	str	r3, [sp, #40]	@ 0x28
 801b32a:	e702      	b.n	801b132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b32c:	d027      	beq.n	801b37e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801b32e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b330:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801b332:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801b334:	3b01      	subs	r3, #1
 801b336:	fb00 5003 	mla	r0, r0, r3, r5
 801b33a:	1400      	asrs	r0, r0, #16
 801b33c:	f53f af16 	bmi.w	801b16c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b340:	3901      	subs	r1, #1
 801b342:	4288      	cmp	r0, r1
 801b344:	f6bf af12 	bge.w	801b16c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b348:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801b34a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b34c:	fb01 0303 	mla	r3, r1, r3, r0
 801b350:	141b      	asrs	r3, r3, #16
 801b352:	f53f af0b 	bmi.w	801b16c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b356:	3a01      	subs	r2, #1
 801b358:	4293      	cmp	r3, r2
 801b35a:	f6bf af07 	bge.w	801b16c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b35e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b360:	9311      	str	r3, [sp, #68]	@ 0x44
 801b362:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801b366:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b368:	930c      	str	r3, [sp, #48]	@ 0x30
 801b36a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b36c:	2b00      	cmp	r3, #0
 801b36e:	dc70      	bgt.n	801b452 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801b370:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b372:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b374:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b378:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b37c:	930a      	str	r3, [sp, #40]	@ 0x28
 801b37e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b380:	2b00      	cmp	r3, #0
 801b382:	f340 8124 	ble.w	801b5ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b386:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b38a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b38e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b392:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b394:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b398:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b39c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b3a0:	eef0 6a62 	vmov.f32	s13, s5
 801b3a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b3a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b3ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b3b0:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801b3b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b3b8:	eef0 6a43 	vmov.f32	s13, s6
 801b3bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b3c0:	ee12 2a90 	vmov	r2, s5
 801b3c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b3c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3cc:	ee13 2a10 	vmov	r2, s6
 801b3d0:	9321      	str	r3, [sp, #132]	@ 0x84
 801b3d2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b3d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3d8:	9322      	str	r3, [sp, #136]	@ 0x88
 801b3da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b3dc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b3de:	3b01      	subs	r3, #1
 801b3e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b3e4:	930e      	str	r3, [sp, #56]	@ 0x38
 801b3e6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b3e8:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801b3ec:	bf08      	it	eq
 801b3ee:	4613      	moveq	r3, r2
 801b3f0:	9309      	str	r3, [sp, #36]	@ 0x24
 801b3f2:	eeb0 3a67 	vmov.f32	s6, s15
 801b3f6:	eef0 2a47 	vmov.f32	s5, s14
 801b3fa:	e68c      	b.n	801b116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b3fc:	b149      	cbz	r1, 801b412 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801b3fe:	5cb2      	ldrb	r2, [r6, r2]
 801b400:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b404:	4422      	add	r2, r4
 801b406:	4628      	mov	r0, r5
 801b408:	46ac      	mov	ip, r5
 801b40a:	e6f1      	b.n	801b1f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b40c:	4628      	mov	r0, r5
 801b40e:	462a      	mov	r2, r5
 801b410:	e6ee      	b.n	801b1f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b412:	4628      	mov	r0, r5
 801b414:	462a      	mov	r2, r5
 801b416:	e7f7      	b.n	801b408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801b418:	1c47      	adds	r7, r0, #1
 801b41a:	f53f af69 	bmi.w	801b2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b41e:	42ba      	cmp	r2, r7
 801b420:	f6ff af66 	blt.w	801b2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b424:	1c6f      	adds	r7, r5, #1
 801b426:	f53f af63 	bmi.w	801b2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b42a:	42be      	cmp	r6, r7
 801b42c:	f6ff af60 	blt.w	801b2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b430:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801b432:	9002      	str	r0, [sp, #8]
 801b434:	b236      	sxth	r6, r6
 801b436:	b212      	sxth	r2, r2
 801b438:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801b43c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801b440:	9200      	str	r2, [sp, #0]
 801b442:	9601      	str	r6, [sp, #4]
 801b444:	4623      	mov	r3, r4
 801b446:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801b44a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b44c:	f7ff fd59 	bl	801af02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801b450:	e74e      	b.n	801b2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b452:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b454:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b456:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801b458:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b45a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b45e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801b460:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b464:	142d      	asrs	r5, r5, #16
 801b466:	1400      	asrs	r0, r0, #16
 801b468:	fb02 5000 	mla	r0, r2, r0, r5
 801b46c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b46e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801b472:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b476:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801b47a:	182e      	adds	r6, r5, r0
 801b47c:	eb04 0509 	add.w	r5, r4, r9
 801b480:	2b00      	cmp	r3, #0
 801b482:	f000 8096 	beq.w	801b5b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b486:	7877      	ldrb	r7, [r6, #1]
 801b488:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b48c:	4427      	add	r7, r4
 801b48e:	2900      	cmp	r1, #0
 801b490:	f000 8097 	beq.w	801b5c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801b494:	18b0      	adds	r0, r6, r2
 801b496:	5cb2      	ldrb	r2, [r6, r2]
 801b498:	7840      	ldrb	r0, [r0, #1]
 801b49a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b49e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b4a2:	4422      	add	r2, r4
 801b4a4:	4420      	add	r0, r4
 801b4a6:	b29b      	uxth	r3, r3
 801b4a8:	b289      	uxth	r1, r1
 801b4aa:	fb03 f801 	mul.w	r8, r3, r1
 801b4ae:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801b4b0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b4b4:	f8b6 c000 	ldrh.w	ip, [r6]
 801b4b8:	78be      	ldrb	r6, [r7, #2]
 801b4ba:	f814 9009 	ldrb.w	r9, [r4, r9]
 801b4be:	011b      	lsls	r3, r3, #4
 801b4c0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801b4c4:	b289      	uxth	r1, r1
 801b4c6:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b4ca:	eba3 0308 	sub.w	r3, r3, r8
 801b4ce:	b29b      	uxth	r3, r3
 801b4d0:	ebae 0e01 	sub.w	lr, lr, r1
 801b4d4:	fa1f fe8e 	uxth.w	lr, lr
 801b4d8:	435e      	muls	r6, r3
 801b4da:	fb0e 660b 	mla	r6, lr, fp, r6
 801b4de:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b4e2:	9310      	str	r3, [sp, #64]	@ 0x40
 801b4e4:	fb01 660b 	mla	r6, r1, fp, r6
 801b4e8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b4ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b4ee:	fb08 660b 	mla	r6, r8, fp, r6
 801b4f2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801b4f6:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801b4fa:	fb1b fb03 	smulbb	fp, fp, r3
 801b4fe:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b502:	fb06 b60a 	mla	r6, r6, sl, fp
 801b506:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b508:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b50c:	787d      	ldrb	r5, [r7, #1]
 801b50e:	783f      	ldrb	r7, [r7, #0]
 801b510:	435d      	muls	r5, r3
 801b512:	fb0e 550b 	mla	r5, lr, fp, r5
 801b516:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b51a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b51c:	fb01 550b 	mla	r5, r1, fp, r5
 801b520:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b524:	fb08 550b 	mla	r5, r8, fp, r5
 801b528:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b52c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801b530:	fb1b fb03 	smulbb	fp, fp, r3
 801b534:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b536:	437b      	muls	r3, r7
 801b538:	7817      	ldrb	r7, [r2, #0]
 801b53a:	fb0e 3309 	mla	r3, lr, r9, r3
 801b53e:	fb01 3307 	mla	r3, r1, r7, r3
 801b542:	7807      	ldrb	r7, [r0, #0]
 801b544:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b548:	fb08 3707 	mla	r7, r8, r7, r3
 801b54c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b54e:	fa5f fc8c 	uxtb.w	ip, ip
 801b552:	fb1c fc03 	smulbb	ip, ip, r3
 801b556:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b55a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b55e:	fb05 b50a 	mla	r5, r5, sl, fp
 801b562:	fb07 c70a 	mla	r7, r7, sl, ip
 801b566:	b2b6      	uxth	r6, r6
 801b568:	b2ad      	uxth	r5, r5
 801b56a:	b2bf      	uxth	r7, r7
 801b56c:	1c73      	adds	r3, r6, #1
 801b56e:	1c7a      	adds	r2, r7, #1
 801b570:	f105 0b01 	add.w	fp, r5, #1
 801b574:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b578:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801b57c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b580:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b584:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801b588:	096d      	lsrs	r5, r5, #5
 801b58a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b58c:	4316      	orrs	r6, r2
 801b58e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b592:	432e      	orrs	r6, r5
 801b594:	f823 6b02 	strh.w	r6, [r3], #2
 801b598:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801b59a:	930c      	str	r3, [sp, #48]	@ 0x30
 801b59c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b59e:	4413      	add	r3, r2
 801b5a0:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b5a2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801b5a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b5a6:	4413      	add	r3, r2
 801b5a8:	9320      	str	r3, [sp, #128]	@ 0x80
 801b5aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b5ac:	3b01      	subs	r3, #1
 801b5ae:	9311      	str	r3, [sp, #68]	@ 0x44
 801b5b0:	e6db      	b.n	801b36a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b5b2:	b149      	cbz	r1, 801b5c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801b5b4:	5cb2      	ldrb	r2, [r6, r2]
 801b5b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b5ba:	4422      	add	r2, r4
 801b5bc:	4628      	mov	r0, r5
 801b5be:	462f      	mov	r7, r5
 801b5c0:	e771      	b.n	801b4a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b5c2:	4628      	mov	r0, r5
 801b5c4:	462a      	mov	r2, r5
 801b5c6:	e76e      	b.n	801b4a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b5c8:	4628      	mov	r0, r5
 801b5ca:	462a      	mov	r2, r5
 801b5cc:	e7f7      	b.n	801b5be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b5ce:	b015      	add	sp, #84	@ 0x54
 801b5d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b5d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801b5d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5d8:	880f      	ldrh	r7, [r1, #0]
 801b5da:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801b5de:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801b5e2:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801b5e6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801b5ea:	023c      	lsls	r4, r7, #8
 801b5ec:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801b5f0:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801b5f4:	017c      	lsls	r4, r7, #5
 801b5f6:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801b5fa:	00ff      	lsls	r7, r7, #3
 801b5fc:	ea4b 0404 	orr.w	r4, fp, r4
 801b600:	b2ff      	uxtb	r7, r7
 801b602:	fb05 ca0e 	mla	sl, r5, lr, ip
 801b606:	4327      	orrs	r7, r4
 801b608:	2d00      	cmp	r5, #0
 801b60a:	eb02 080a 	add.w	r8, r2, sl
 801b60e:	9701      	str	r7, [sp, #4]
 801b610:	db7e      	blt.n	801b710 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801b612:	45a9      	cmp	r9, r5
 801b614:	dd7c      	ble.n	801b710 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801b616:	f1bc 0f00 	cmp.w	ip, #0
 801b61a:	db77      	blt.n	801b70c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801b61c:	45e6      	cmp	lr, ip
 801b61e:	dd75      	ble.n	801b70c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801b620:	f812 700a 	ldrb.w	r7, [r2, sl]
 801b624:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b628:	441f      	add	r7, r3
 801b62a:	f11c 0201 	adds.w	r2, ip, #1
 801b62e:	d472      	bmi.n	801b716 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b630:	4596      	cmp	lr, r2
 801b632:	dd70      	ble.n	801b716 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b634:	2800      	cmp	r0, #0
 801b636:	d06e      	beq.n	801b716 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b638:	f898 4001 	ldrb.w	r4, [r8, #1]
 801b63c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801b640:	441c      	add	r4, r3
 801b642:	3501      	adds	r5, #1
 801b644:	d46b      	bmi.n	801b71e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b646:	45a9      	cmp	r9, r5
 801b648:	dd69      	ble.n	801b71e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b64a:	2e00      	cmp	r6, #0
 801b64c:	d067      	beq.n	801b71e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b64e:	f1bc 0f00 	cmp.w	ip, #0
 801b652:	db62      	blt.n	801b71a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b654:	45e6      	cmp	lr, ip
 801b656:	dd60      	ble.n	801b71a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b658:	f818 500e 	ldrb.w	r5, [r8, lr]
 801b65c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b660:	441d      	add	r5, r3
 801b662:	f11c 0201 	adds.w	r2, ip, #1
 801b666:	d45d      	bmi.n	801b724 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b668:	4596      	cmp	lr, r2
 801b66a:	dd5b      	ble.n	801b724 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b66c:	2800      	cmp	r0, #0
 801b66e:	d059      	beq.n	801b724 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b670:	44c6      	add	lr, r8
 801b672:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b676:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b67a:	4413      	add	r3, r2
 801b67c:	b280      	uxth	r0, r0
 801b67e:	b2b2      	uxth	r2, r6
 801b680:	fb00 f602 	mul.w	r6, r0, r2
 801b684:	0100      	lsls	r0, r0, #4
 801b686:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801b68a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801b68e:	1b80      	subs	r0, r0, r6
 801b690:	fa1f fc82 	uxth.w	ip, r2
 801b694:	b282      	uxth	r2, r0
 801b696:	78a0      	ldrb	r0, [r4, #2]
 801b698:	f897 e002 	ldrb.w	lr, [r7, #2]
 801b69c:	f897 9000 	ldrb.w	r9, [r7]
 801b6a0:	787f      	ldrb	r7, [r7, #1]
 801b6a2:	eba8 080c 	sub.w	r8, r8, ip
 801b6a6:	fa1f f888 	uxth.w	r8, r8
 801b6aa:	4350      	muls	r0, r2
 801b6ac:	fb08 0e0e 	mla	lr, r8, lr, r0
 801b6b0:	78a8      	ldrb	r0, [r5, #2]
 801b6b2:	fb0c e000 	mla	r0, ip, r0, lr
 801b6b6:	f893 e002 	ldrb.w	lr, [r3, #2]
 801b6ba:	fb06 0e0e 	mla	lr, r6, lr, r0
 801b6be:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801b6c2:	f894 e000 	ldrb.w	lr, [r4]
 801b6c6:	fb02 fe0e 	mul.w	lr, r2, lr
 801b6ca:	fb08 e909 	mla	r9, r8, r9, lr
 801b6ce:	f895 e000 	ldrb.w	lr, [r5]
 801b6d2:	fb0c 990e 	mla	r9, ip, lr, r9
 801b6d6:	f893 e000 	ldrb.w	lr, [r3]
 801b6da:	785b      	ldrb	r3, [r3, #1]
 801b6dc:	fb06 9e0e 	mla	lr, r6, lr, r9
 801b6e0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b6e4:	ea4e 0e00 	orr.w	lr, lr, r0
 801b6e8:	7860      	ldrb	r0, [r4, #1]
 801b6ea:	4350      	muls	r0, r2
 801b6ec:	786a      	ldrb	r2, [r5, #1]
 801b6ee:	fb08 0007 	mla	r0, r8, r7, r0
 801b6f2:	fb0c 0202 	mla	r2, ip, r2, r0
 801b6f6:	fb06 2303 	mla	r3, r6, r3, r2
 801b6fa:	095b      	lsrs	r3, r3, #5
 801b6fc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b700:	ea4e 0303 	orr.w	r3, lr, r3
 801b704:	800b      	strh	r3, [r1, #0]
 801b706:	b003      	add	sp, #12
 801b708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b70c:	af01      	add	r7, sp, #4
 801b70e:	e78c      	b.n	801b62a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801b710:	ac01      	add	r4, sp, #4
 801b712:	4627      	mov	r7, r4
 801b714:	e795      	b.n	801b642 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b716:	ac01      	add	r4, sp, #4
 801b718:	e793      	b.n	801b642 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b71a:	ad01      	add	r5, sp, #4
 801b71c:	e7a1      	b.n	801b662 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801b71e:	ab01      	add	r3, sp, #4
 801b720:	461d      	mov	r5, r3
 801b722:	e7ab      	b.n	801b67c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801b724:	ab01      	add	r3, sp, #4
 801b726:	e7a9      	b.n	801b67c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801b728 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b72c:	b08f      	sub	sp, #60	@ 0x3c
 801b72e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801b732:	920c      	str	r2, [sp, #48]	@ 0x30
 801b734:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801b736:	910a      	str	r1, [sp, #40]	@ 0x28
 801b738:	9306      	str	r3, [sp, #24]
 801b73a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801b73e:	900d      	str	r0, [sp, #52]	@ 0x34
 801b740:	6850      	ldr	r0, [r2, #4]
 801b742:	6812      	ldr	r2, [r2, #0]
 801b744:	fb00 1303 	mla	r3, r0, r3, r1
 801b748:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b74c:	9307      	str	r3, [sp, #28]
 801b74e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b750:	681b      	ldr	r3, [r3, #0]
 801b752:	9308      	str	r3, [sp, #32]
 801b754:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b756:	685c      	ldr	r4, [r3, #4]
 801b758:	3404      	adds	r4, #4
 801b75a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b75c:	2b00      	cmp	r3, #0
 801b75e:	dc03      	bgt.n	801b768 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b760:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b762:	2b00      	cmp	r3, #0
 801b764:	f340 81d6 	ble.w	801bb14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b768:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b76a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b76e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b772:	1e48      	subs	r0, r1, #1
 801b774:	1e56      	subs	r6, r2, #1
 801b776:	9b06      	ldr	r3, [sp, #24]
 801b778:	2b00      	cmp	r3, #0
 801b77a:	f340 80b7 	ble.w	801b8ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b77e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801b782:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b786:	d406      	bmi.n	801b796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b788:	4287      	cmp	r7, r0
 801b78a:	da04      	bge.n	801b796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b78c:	2b00      	cmp	r3, #0
 801b78e:	db02      	blt.n	801b796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b790:	42b3      	cmp	r3, r6
 801b792:	f2c0 80ac 	blt.w	801b8ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801b796:	3701      	adds	r7, #1
 801b798:	f100 809d 	bmi.w	801b8d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b79c:	42b9      	cmp	r1, r7
 801b79e:	f2c0 809a 	blt.w	801b8d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b7a2:	3301      	adds	r3, #1
 801b7a4:	f100 8097 	bmi.w	801b8d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b7a8:	429a      	cmp	r2, r3
 801b7aa:	f2c0 8094 	blt.w	801b8d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b7ae:	9b06      	ldr	r3, [sp, #24]
 801b7b0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b7b2:	9b07      	ldr	r3, [sp, #28]
 801b7b4:	9309      	str	r3, [sp, #36]	@ 0x24
 801b7b6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b7b8:	2b00      	cmp	r3, #0
 801b7ba:	f340 80b5 	ble.w	801b928 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b7be:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b7c0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b7c2:	68c7      	ldr	r7, [r0, #12]
 801b7c4:	6892      	ldr	r2, [r2, #8]
 801b7c6:	ea5f 402b 	movs.w	r0, fp, asr #16
 801b7ca:	ea4f 4625 	mov.w	r6, r5, asr #16
 801b7ce:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b7d2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b7d6:	f100 80fb 	bmi.w	801b9d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b7da:	f102 3cff 	add.w	ip, r2, #4294967295
 801b7de:	4560      	cmp	r0, ip
 801b7e0:	f280 80f6 	bge.w	801b9d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b7e4:	2e00      	cmp	r6, #0
 801b7e6:	f2c0 80f3 	blt.w	801b9d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b7ea:	f107 3cff 	add.w	ip, r7, #4294967295
 801b7ee:	4566      	cmp	r6, ip
 801b7f0:	f280 80ee 	bge.w	801b9d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b7f4:	b212      	sxth	r2, r2
 801b7f6:	fb06 0002 	mla	r0, r6, r2, r0
 801b7fa:	9e08      	ldr	r6, [sp, #32]
 801b7fc:	1837      	adds	r7, r6, r0
 801b7fe:	5c30      	ldrb	r0, [r6, r0]
 801b800:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801b804:	eb04 0c08 	add.w	ip, r4, r8
 801b808:	2b00      	cmp	r3, #0
 801b80a:	f000 80d3 	beq.w	801b9b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b80e:	787e      	ldrb	r6, [r7, #1]
 801b810:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b814:	4426      	add	r6, r4
 801b816:	2900      	cmp	r1, #0
 801b818:	f000 80d4 	beq.w	801b9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801b81c:	18b8      	adds	r0, r7, r2
 801b81e:	5cba      	ldrb	r2, [r7, r2]
 801b820:	7840      	ldrb	r0, [r0, #1]
 801b822:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b826:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b82a:	4422      	add	r2, r4
 801b82c:	4420      	add	r0, r4
 801b82e:	b29b      	uxth	r3, r3
 801b830:	b289      	uxth	r1, r1
 801b832:	fb03 f901 	mul.w	r9, r3, r1
 801b836:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b83a:	011b      	lsls	r3, r3, #4
 801b83c:	b289      	uxth	r1, r1
 801b83e:	78b7      	ldrb	r7, [r6, #2]
 801b840:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b844:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b848:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b84c:	eba3 0309 	sub.w	r3, r3, r9
 801b850:	b29b      	uxth	r3, r3
 801b852:	ebae 0e01 	sub.w	lr, lr, r1
 801b856:	fa1f fe8e 	uxth.w	lr, lr
 801b85a:	435f      	muls	r7, r3
 801b85c:	fb0e 770a 	mla	r7, lr, sl, r7
 801b860:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b864:	fb01 770a 	mla	r7, r1, sl, r7
 801b868:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b86c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b870:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b874:	f896 8000 	ldrb.w	r8, [r6]
 801b878:	7876      	ldrb	r6, [r6, #1]
 801b87a:	fb03 f808 	mul.w	r8, r3, r8
 801b87e:	fb0e 8807 	mla	r8, lr, r7, r8
 801b882:	7817      	ldrb	r7, [r2, #0]
 801b884:	fb01 8807 	mla	r8, r1, r7, r8
 801b888:	7807      	ldrb	r7, [r0, #0]
 801b88a:	fb09 8707 	mla	r7, r9, r7, r8
 801b88e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b892:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b896:	ea47 070a 	orr.w	r7, r7, sl
 801b89a:	4373      	muls	r3, r6
 801b89c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801b8a0:	fb0e 330c 	mla	r3, lr, ip, r3
 801b8a4:	fb01 310a 	mla	r1, r1, sl, r3
 801b8a8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b8ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b8ae:	fb09 1a0a 	mla	sl, r9, sl, r1
 801b8b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b8b6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b8ba:	ea47 070a 	orr.w	r7, r7, sl
 801b8be:	801f      	strh	r7, [r3, #0]
 801b8c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b8c2:	3302      	adds	r3, #2
 801b8c4:	9309      	str	r3, [sp, #36]	@ 0x24
 801b8c6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b8c8:	449b      	add	fp, r3
 801b8ca:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b8cc:	441d      	add	r5, r3
 801b8ce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b8d0:	3b01      	subs	r3, #1
 801b8d2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b8d4:	e76f      	b.n	801b7b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b8d6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b8d8:	449b      	add	fp, r3
 801b8da:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b8dc:	441d      	add	r5, r3
 801b8de:	9b06      	ldr	r3, [sp, #24]
 801b8e0:	3b01      	subs	r3, #1
 801b8e2:	9306      	str	r3, [sp, #24]
 801b8e4:	9b07      	ldr	r3, [sp, #28]
 801b8e6:	3302      	adds	r3, #2
 801b8e8:	9307      	str	r3, [sp, #28]
 801b8ea:	e744      	b.n	801b776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b8ec:	d023      	beq.n	801b936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801b8ee:	9b06      	ldr	r3, [sp, #24]
 801b8f0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801b8f2:	3b01      	subs	r3, #1
 801b8f4:	fb00 b003 	mla	r0, r0, r3, fp
 801b8f8:	1400      	asrs	r0, r0, #16
 801b8fa:	f53f af58 	bmi.w	801b7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8fe:	3901      	subs	r1, #1
 801b900:	4288      	cmp	r0, r1
 801b902:	f6bf af54 	bge.w	801b7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b906:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801b908:	fb01 5303 	mla	r3, r1, r3, r5
 801b90c:	141b      	asrs	r3, r3, #16
 801b90e:	f53f af4e 	bmi.w	801b7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b912:	3a01      	subs	r2, #1
 801b914:	4293      	cmp	r3, r2
 801b916:	f6bf af4a 	bge.w	801b7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b91a:	9b06      	ldr	r3, [sp, #24]
 801b91c:	9309      	str	r3, [sp, #36]	@ 0x24
 801b91e:	9b07      	ldr	r3, [sp, #28]
 801b920:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b922:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b924:	2b00      	cmp	r3, #0
 801b926:	dc70      	bgt.n	801ba0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801b928:	9b06      	ldr	r3, [sp, #24]
 801b92a:	9a07      	ldr	r2, [sp, #28]
 801b92c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b930:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b934:	9307      	str	r3, [sp, #28]
 801b936:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b938:	2b00      	cmp	r3, #0
 801b93a:	f340 80eb 	ble.w	801bb14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b93e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b942:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b946:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b94a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b94c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b950:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b954:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b958:	eef0 6a62 	vmov.f32	s13, s5
 801b95c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b960:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b964:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b968:	ee16 ba90 	vmov	fp, s13
 801b96c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b970:	eef0 6a43 	vmov.f32	s13, s6
 801b974:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b978:	ee12 2a90 	vmov	r2, s5
 801b97c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b980:	fb92 f3f3 	sdiv	r3, r2, r3
 801b984:	ee13 2a10 	vmov	r2, s6
 801b988:	931b      	str	r3, [sp, #108]	@ 0x6c
 801b98a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b98c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b990:	931c      	str	r3, [sp, #112]	@ 0x70
 801b992:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b994:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b996:	3b01      	subs	r3, #1
 801b998:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b99c:	930a      	str	r3, [sp, #40]	@ 0x28
 801b99e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b9a0:	bf08      	it	eq
 801b9a2:	4613      	moveq	r3, r2
 801b9a4:	ee16 5a90 	vmov	r5, s13
 801b9a8:	9306      	str	r3, [sp, #24]
 801b9aa:	eeb0 3a67 	vmov.f32	s6, s15
 801b9ae:	eef0 2a47 	vmov.f32	s5, s14
 801b9b2:	e6d2      	b.n	801b75a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b9b4:	b149      	cbz	r1, 801b9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b9b6:	5cba      	ldrb	r2, [r7, r2]
 801b9b8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b9bc:	4422      	add	r2, r4
 801b9be:	4660      	mov	r0, ip
 801b9c0:	4666      	mov	r6, ip
 801b9c2:	e734      	b.n	801b82e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b9c4:	4660      	mov	r0, ip
 801b9c6:	4662      	mov	r2, ip
 801b9c8:	e731      	b.n	801b82e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b9ca:	4660      	mov	r0, ip
 801b9cc:	4662      	mov	r2, ip
 801b9ce:	e7f7      	b.n	801b9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801b9d0:	f110 0c01 	adds.w	ip, r0, #1
 801b9d4:	f53f af74 	bmi.w	801b8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9d8:	4562      	cmp	r2, ip
 801b9da:	f6ff af71 	blt.w	801b8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9de:	f116 0c01 	adds.w	ip, r6, #1
 801b9e2:	f53f af6d 	bmi.w	801b8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9e6:	4567      	cmp	r7, ip
 801b9e8:	f6ff af6a 	blt.w	801b8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b9ec:	b23f      	sxth	r7, r7
 801b9ee:	b212      	sxth	r2, r2
 801b9f0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801b9f4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801b9f8:	9200      	str	r2, [sp, #0]
 801b9fa:	9701      	str	r7, [sp, #4]
 801b9fc:	4623      	mov	r3, r4
 801b9fe:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ba02:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801ba04:	f7ff fde6 	bl	801b5d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801ba08:	e75a      	b.n	801b8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba0a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ba0c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ba10:	ea4f 462b 	mov.w	r6, fp, asr #16
 801ba14:	1428      	asrs	r0, r5, #16
 801ba16:	fb02 6000 	mla	r0, r2, r0, r6
 801ba1a:	9e08      	ldr	r6, [sp, #32]
 801ba1c:	f816 8000 	ldrb.w	r8, [r6, r0]
 801ba20:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ba24:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ba28:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ba2c:	1837      	adds	r7, r6, r0
 801ba2e:	eb04 0c08 	add.w	ip, r4, r8
 801ba32:	2b00      	cmp	r3, #0
 801ba34:	d060      	beq.n	801baf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801ba36:	787e      	ldrb	r6, [r7, #1]
 801ba38:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ba3c:	4426      	add	r6, r4
 801ba3e:	2900      	cmp	r1, #0
 801ba40:	d062      	beq.n	801bb08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801ba42:	18b8      	adds	r0, r7, r2
 801ba44:	5cba      	ldrb	r2, [r7, r2]
 801ba46:	7840      	ldrb	r0, [r0, #1]
 801ba48:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ba4c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ba50:	4422      	add	r2, r4
 801ba52:	4420      	add	r0, r4
 801ba54:	b29b      	uxth	r3, r3
 801ba56:	b289      	uxth	r1, r1
 801ba58:	fb03 f901 	mul.w	r9, r3, r1
 801ba5c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ba60:	011b      	lsls	r3, r3, #4
 801ba62:	b289      	uxth	r1, r1
 801ba64:	78b7      	ldrb	r7, [r6, #2]
 801ba66:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ba6a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ba6e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801ba72:	eba3 0309 	sub.w	r3, r3, r9
 801ba76:	b29b      	uxth	r3, r3
 801ba78:	ebae 0e01 	sub.w	lr, lr, r1
 801ba7c:	fa1f fe8e 	uxth.w	lr, lr
 801ba80:	435f      	muls	r7, r3
 801ba82:	fb0e 770a 	mla	r7, lr, sl, r7
 801ba86:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ba8a:	fb01 770a 	mla	r7, r1, sl, r7
 801ba8e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ba92:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ba96:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ba9a:	f896 8000 	ldrb.w	r8, [r6]
 801ba9e:	7876      	ldrb	r6, [r6, #1]
 801baa0:	fb03 f808 	mul.w	r8, r3, r8
 801baa4:	fb0e 8807 	mla	r8, lr, r7, r8
 801baa8:	7817      	ldrb	r7, [r2, #0]
 801baaa:	fb01 8807 	mla	r8, r1, r7, r8
 801baae:	7807      	ldrb	r7, [r0, #0]
 801bab0:	fb09 8707 	mla	r7, r9, r7, r8
 801bab4:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801bab8:	4373      	muls	r3, r6
 801baba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801babe:	7856      	ldrb	r6, [r2, #1]
 801bac0:	ea47 070a 	orr.w	r7, r7, sl
 801bac4:	fb0e 330c 	mla	r3, lr, ip, r3
 801bac8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801bacc:	fb01 3306 	mla	r3, r1, r6, r3
 801bad0:	fb09 3a0a 	mla	sl, r9, sl, r3
 801bad4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bad8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bada:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bade:	ea47 070a 	orr.w	r7, r7, sl
 801bae2:	f823 7b02 	strh.w	r7, [r3], #2
 801bae6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bae8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801baea:	449b      	add	fp, r3
 801baec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801baee:	441d      	add	r5, r3
 801baf0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801baf2:	3b01      	subs	r3, #1
 801baf4:	9309      	str	r3, [sp, #36]	@ 0x24
 801baf6:	e714      	b.n	801b922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801baf8:	b149      	cbz	r1, 801bb0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801bafa:	5cba      	ldrb	r2, [r7, r2]
 801bafc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bb00:	4422      	add	r2, r4
 801bb02:	4660      	mov	r0, ip
 801bb04:	4666      	mov	r6, ip
 801bb06:	e7a5      	b.n	801ba54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801bb08:	4660      	mov	r0, ip
 801bb0a:	4662      	mov	r2, ip
 801bb0c:	e7a2      	b.n	801ba54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801bb0e:	4660      	mov	r0, ip
 801bb10:	4662      	mov	r2, ip
 801bb12:	e7f7      	b.n	801bb04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801bb14:	b00f      	add	sp, #60	@ 0x3c
 801bb16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801bb1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb1e:	b085      	sub	sp, #20
 801bb20:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801bb24:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801bb28:	9102      	str	r1, [sp, #8]
 801bb2a:	2c00      	cmp	r4, #0
 801bb2c:	fb04 710c 	mla	r1, r4, ip, r7
 801bb30:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801bb34:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801bb38:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801bb3c:	eb02 0e01 	add.w	lr, r2, r1
 801bb40:	f2c0 8122 	blt.w	801bd88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801bb44:	45a0      	cmp	r8, r4
 801bb46:	f340 811f 	ble.w	801bd88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801bb4a:	2f00      	cmp	r7, #0
 801bb4c:	f2c0 811a 	blt.w	801bd84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801bb50:	45bc      	cmp	ip, r7
 801bb52:	f340 8117 	ble.w	801bd84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801bb56:	5c52      	ldrb	r2, [r2, r1]
 801bb58:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801bb5c:	1c7a      	adds	r2, r7, #1
 801bb5e:	f100 8116 	bmi.w	801bd8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801bb62:	4594      	cmp	ip, r2
 801bb64:	f340 8113 	ble.w	801bd8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801bb68:	2e00      	cmp	r6, #0
 801bb6a:	f000 8112 	beq.w	801bd92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801bb6e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bb72:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bb76:	3401      	adds	r4, #1
 801bb78:	f100 810f 	bmi.w	801bd9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801bb7c:	45a0      	cmp	r8, r4
 801bb7e:	f340 810c 	ble.w	801bd9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801bb82:	2800      	cmp	r0, #0
 801bb84:	f000 810c 	beq.w	801bda0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801bb88:	2f00      	cmp	r7, #0
 801bb8a:	f2c0 8104 	blt.w	801bd96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801bb8e:	45bc      	cmp	ip, r7
 801bb90:	f340 8101 	ble.w	801bd96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801bb94:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801bb98:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801bb9c:	3701      	adds	r7, #1
 801bb9e:	f100 8102 	bmi.w	801bda6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801bba2:	45bc      	cmp	ip, r7
 801bba4:	f340 80ff 	ble.w	801bda6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801bba8:	2e00      	cmp	r6, #0
 801bbaa:	f000 80fe 	beq.w	801bdaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801bbae:	44f4      	add	ip, lr
 801bbb0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801bbb4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801bbb8:	b2b6      	uxth	r6, r6
 801bbba:	b280      	uxth	r0, r0
 801bbbc:	fb00 fe06 	mul.w	lr, r0, r6
 801bbc0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801bbc4:	0136      	lsls	r6, r6, #4
 801bbc6:	eba6 070e 	sub.w	r7, r6, lr
 801bbca:	b280      	uxth	r0, r0
 801bbcc:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801bbd0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801bbd4:	b2bf      	uxth	r7, r7
 801bbd6:	1a1b      	subs	r3, r3, r0
 801bbd8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801bbdc:	b29b      	uxth	r3, r3
 801bbde:	fb0a f607 	mul.w	r6, sl, r7
 801bbe2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801bbe6:	fb0b 6603 	mla	r6, fp, r3, r6
 801bbea:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801bbee:	fb00 6609 	mla	r6, r0, r9, r6
 801bbf2:	fb0e 6608 	mla	r6, lr, r8, r6
 801bbf6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801bbfa:	9600      	str	r6, [sp, #0]
 801bbfc:	2e00      	cmp	r6, #0
 801bbfe:	f000 80be 	beq.w	801bd7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801bc02:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801bc06:	fb0b fc0c 	mul.w	ip, fp, ip
 801bc0a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801bc0e:	fb0b f505 	mul.w	r5, fp, r5
 801bc12:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801bc16:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801bc1a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bc1e:	44dc      	add	ip, fp
 801bc20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc24:	9501      	str	r5, [sp, #4]
 801bc26:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801bc2a:	9503      	str	r5, [sp, #12]
 801bc2c:	9d01      	ldr	r5, [sp, #4]
 801bc2e:	9e02      	ldr	r6, [sp, #8]
 801bc30:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801bc34:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801bc38:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801bc3c:	fb0a fc0c 	mul.w	ip, sl, ip
 801bc40:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801bc44:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801bc48:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bc4c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bc50:	4465      	add	r5, ip
 801bc52:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bc56:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801bc5a:	fb09 fc0c 	mul.w	ip, r9, ip
 801bc5e:	fb09 f904 	mul.w	r9, r9, r4
 801bc62:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801bc66:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801bc6a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801bc6e:	fb08 f404 	mul.w	r4, r8, r4
 801bc72:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bc76:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801bc7a:	fb08 f802 	mul.w	r8, r8, r2
 801bc7e:	fb0a fa01 	mul.w	sl, sl, r1
 801bc82:	0a22      	lsrs	r2, r4, #8
 801bc84:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801bc88:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801bc8c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801bc90:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801bc94:	4414      	add	r4, r2
 801bc96:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801bc9a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801bc9e:	0a2d      	lsrs	r5, r5, #8
 801bca0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801bca4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bca8:	9a03      	ldr	r2, [sp, #12]
 801bcaa:	8836      	ldrh	r6, [r6, #0]
 801bcac:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bcb0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bcb4:	437d      	muls	r5, r7
 801bcb6:	4461      	add	r1, ip
 801bcb8:	0a24      	lsrs	r4, r4, #8
 801bcba:	fb02 5503 	mla	r5, r2, r3, r5
 801bcbe:	0a09      	lsrs	r1, r1, #8
 801bcc0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801bcc4:	fb04 540e 	mla	r4, r4, lr, r5
 801bcc8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bccc:	fb01 4100 	mla	r1, r1, r0, r4
 801bcd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bcd4:	0a09      	lsrs	r1, r1, #8
 801bcd6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bcda:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801bcde:	fb07 f70a 	mul.w	r7, r7, sl
 801bce2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801bce6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801bcea:	fb03 7101 	mla	r1, r3, r1, r7
 801bcee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bcf2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801bcf6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801bcfa:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801bcfe:	fb00 e101 	mla	r1, r0, r1, lr
 801bd02:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801bd06:	9a00      	ldr	r2, [sp, #0]
 801bd08:	b287      	uxth	r7, r0
 801bd0a:	437a      	muls	r2, r7
 801bd0c:	0a09      	lsrs	r1, r1, #8
 801bd0e:	1c53      	adds	r3, r2, #1
 801bd10:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bd14:	4321      	orrs	r1, r4
 801bd16:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bd1a:	1235      	asrs	r5, r6, #8
 801bd1c:	0c0a      	lsrs	r2, r1, #16
 801bd1e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801bd22:	b2db      	uxtb	r3, r3
 801bd24:	fb12 f207 	smulbb	r2, r2, r7
 801bd28:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801bd2c:	fb05 2503 	mla	r5, r5, r3, r2
 801bd30:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801bd34:	10f2      	asrs	r2, r6, #3
 801bd36:	b2c8      	uxtb	r0, r1
 801bd38:	00f6      	lsls	r6, r6, #3
 801bd3a:	fb14 f407 	smulbb	r4, r4, r7
 801bd3e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801bd42:	b2f6      	uxtb	r6, r6
 801bd44:	fb10 f007 	smulbb	r0, r0, r7
 801bd48:	fb02 4203 	mla	r2, r2, r3, r4
 801bd4c:	b2ad      	uxth	r5, r5
 801bd4e:	fb06 0303 	mla	r3, r6, r3, r0
 801bd52:	b299      	uxth	r1, r3
 801bd54:	b294      	uxth	r4, r2
 801bd56:	1c6b      	adds	r3, r5, #1
 801bd58:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bd5c:	1c62      	adds	r2, r4, #1
 801bd5e:	1c4b      	adds	r3, r1, #1
 801bd60:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bd64:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801bd68:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801bd6c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bd70:	0952      	lsrs	r2, r2, #5
 801bd72:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bd76:	432b      	orrs	r3, r5
 801bd78:	4313      	orrs	r3, r2
 801bd7a:	9a02      	ldr	r2, [sp, #8]
 801bd7c:	8013      	strh	r3, [r2, #0]
 801bd7e:	b005      	add	sp, #20
 801bd80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd84:	2500      	movs	r5, #0
 801bd86:	e6e9      	b.n	801bb5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801bd88:	2100      	movs	r1, #0
 801bd8a:	460d      	mov	r5, r1
 801bd8c:	e6f3      	b.n	801bb76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801bd8e:	2100      	movs	r1, #0
 801bd90:	e6f1      	b.n	801bb76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801bd92:	4631      	mov	r1, r6
 801bd94:	e6ef      	b.n	801bb76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801bd96:	2400      	movs	r4, #0
 801bd98:	e700      	b.n	801bb9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801bd9a:	2200      	movs	r2, #0
 801bd9c:	4614      	mov	r4, r2
 801bd9e:	e70b      	b.n	801bbb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801bda0:	4602      	mov	r2, r0
 801bda2:	4604      	mov	r4, r0
 801bda4:	e708      	b.n	801bbb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801bda6:	2200      	movs	r2, #0
 801bda8:	e706      	b.n	801bbb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801bdaa:	4632      	mov	r2, r6
 801bdac:	e704      	b.n	801bbb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801bdae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bdae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdb2:	b09f      	sub	sp, #124	@ 0x7c
 801bdb4:	921b      	str	r2, [sp, #108]	@ 0x6c
 801bdb6:	9309      	str	r3, [sp, #36]	@ 0x24
 801bdb8:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801bdba:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801bdbe:	931c      	str	r3, [sp, #112]	@ 0x70
 801bdc0:	9119      	str	r1, [sp, #100]	@ 0x64
 801bdc2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801bdc6:	901d      	str	r0, [sp, #116]	@ 0x74
 801bdc8:	6850      	ldr	r0, [r2, #4]
 801bdca:	6812      	ldr	r2, [r2, #0]
 801bdcc:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801bdce:	fb00 1303 	mla	r3, r0, r3, r1
 801bdd2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bdd6:	930c      	str	r3, [sp, #48]	@ 0x30
 801bdd8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801bdda:	681b      	ldr	r3, [r3, #0]
 801bddc:	9312      	str	r3, [sp, #72]	@ 0x48
 801bdde:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801bde0:	685e      	ldr	r6, [r3, #4]
 801bde2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801bde6:	930d      	str	r3, [sp, #52]	@ 0x34
 801bde8:	3604      	adds	r6, #4
 801bdea:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801bdec:	2b00      	cmp	r3, #0
 801bdee:	dc03      	bgt.n	801bdf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bdf0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801bdf2:	2b00      	cmp	r3, #0
 801bdf4:	f340 8388 	ble.w	801c508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801bdf8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801bdfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bdfe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801be02:	1e48      	subs	r0, r1, #1
 801be04:	1e57      	subs	r7, r2, #1
 801be06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801be08:	2b00      	cmp	r3, #0
 801be0a:	f340 8195 	ble.w	801c138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801be0e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801be10:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801be14:	ea4f 4325 	mov.w	r3, r5, asr #16
 801be18:	d406      	bmi.n	801be28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801be1a:	4584      	cmp	ip, r0
 801be1c:	da04      	bge.n	801be28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801be1e:	2b00      	cmp	r3, #0
 801be20:	db02      	blt.n	801be28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801be22:	42bb      	cmp	r3, r7
 801be24:	f2c0 8189 	blt.w	801c13a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801be28:	f11c 0c01 	adds.w	ip, ip, #1
 801be2c:	f100 8177 	bmi.w	801c11e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801be30:	4561      	cmp	r1, ip
 801be32:	f2c0 8174 	blt.w	801c11e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801be36:	3301      	adds	r3, #1
 801be38:	f100 8171 	bmi.w	801c11e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801be3c:	429a      	cmp	r2, r3
 801be3e:	f2c0 816e 	blt.w	801c11e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801be42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801be44:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801be46:	931a      	str	r3, [sp, #104]	@ 0x68
 801be48:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801be4a:	2b00      	cmp	r3, #0
 801be4c:	f340 8193 	ble.w	801c176 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801be50:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801be52:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801be56:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801be58:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801be5c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801be5e:	141b      	asrs	r3, r3, #16
 801be60:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801be64:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801be68:	f100 81d6 	bmi.w	801c218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801be6c:	f100 38ff 	add.w	r8, r0, #4294967295
 801be70:	4543      	cmp	r3, r8
 801be72:	f280 81d1 	bge.w	801c218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801be76:	f1bc 0f00 	cmp.w	ip, #0
 801be7a:	f2c0 81cd 	blt.w	801c218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801be7e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801be82:	45c4      	cmp	ip, r8
 801be84:	f280 81c8 	bge.w	801c218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801be88:	b200      	sxth	r0, r0
 801be8a:	fb0c 3300 	mla	r3, ip, r0, r3
 801be8e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801be90:	eb04 0803 	add.w	r8, r4, r3
 801be94:	5ce3      	ldrb	r3, [r4, r3]
 801be96:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801be9a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801be9e:	2a00      	cmp	r2, #0
 801bea0:	f000 81af 	beq.w	801c202 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bea4:	f898 c001 	ldrb.w	ip, [r8, #1]
 801bea8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801beac:	940e      	str	r4, [sp, #56]	@ 0x38
 801beae:	0e24      	lsrs	r4, r4, #24
 801beb0:	9415      	str	r4, [sp, #84]	@ 0x54
 801beb2:	b179      	cbz	r1, 801bed4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801beb4:	eb08 0c00 	add.w	ip, r8, r0
 801beb8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801bebc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801bec0:	900a      	str	r0, [sp, #40]	@ 0x28
 801bec2:	0e00      	lsrs	r0, r0, #24
 801bec4:	9013      	str	r0, [sp, #76]	@ 0x4c
 801bec6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801beca:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801bece:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bed0:	0e00      	lsrs	r0, r0, #24
 801bed2:	9016      	str	r0, [sp, #88]	@ 0x58
 801bed4:	b292      	uxth	r2, r2
 801bed6:	b289      	uxth	r1, r1
 801bed8:	fb02 f901 	mul.w	r9, r2, r1
 801bedc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801bee0:	0112      	lsls	r2, r2, #4
 801bee2:	eba2 0809 	sub.w	r8, r2, r9
 801bee6:	b289      	uxth	r1, r1
 801bee8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801beec:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801beee:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bef0:	fa1f f888 	uxth.w	r8, r8
 801bef4:	1a52      	subs	r2, r2, r1
 801bef6:	b292      	uxth	r2, r2
 801bef8:	fb08 f000 	mul.w	r0, r8, r0
 801befc:	fb02 000e 	mla	r0, r2, lr, r0
 801bf00:	fb01 0004 	mla	r0, r1, r4, r0
 801bf04:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801bf06:	fb09 0004 	mla	r0, r9, r4, r0
 801bf0a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801bf0e:	2800      	cmp	r0, #0
 801bf10:	f000 80fa 	beq.w	801c108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bf14:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801bf18:	d01b      	beq.n	801bf52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801bf1a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bf1e:	fb0e fa0a 	mul.w	sl, lr, sl
 801bf22:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bf26:	fb0e fe03 	mul.w	lr, lr, r3
 801bf2a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bf2e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf32:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bf36:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801bf3a:	4453      	add	r3, sl
 801bf3c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bf40:	0a1b      	lsrs	r3, r3, #8
 801bf42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf46:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf4a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bf4e:	ea43 030c 	orr.w	r3, r3, ip
 801bf52:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bf54:	2cff      	cmp	r4, #255	@ 0xff
 801bf56:	d021      	beq.n	801bf9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801bf58:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bf5a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bf5e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bf60:	fb04 fb0b 	mul.w	fp, r4, fp
 801bf64:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bf66:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bf6a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bf6c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bf70:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf74:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf78:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bf7c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bf80:	44de      	add	lr, fp
 801bf82:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bf86:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bf8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf8e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf92:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bf96:	ea4e 040a 	orr.w	r4, lr, sl
 801bf9a:	940e      	str	r4, [sp, #56]	@ 0x38
 801bf9c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bf9e:	2cff      	cmp	r4, #255	@ 0xff
 801bfa0:	d021      	beq.n	801bfe6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801bfa2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801bfa4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bfa8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bfaa:	fb04 fb0b 	mul.w	fp, r4, fp
 801bfae:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801bfb0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bfb4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bfb6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bfba:	fb04 fa0a 	mul.w	sl, r4, sl
 801bfbe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfc2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bfc6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bfca:	44de      	add	lr, fp
 801bfcc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bfd0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bfd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfd8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfdc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bfe0:	ea4e 040a 	orr.w	r4, lr, sl
 801bfe4:	940a      	str	r4, [sp, #40]	@ 0x28
 801bfe6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801bfe8:	2cff      	cmp	r4, #255	@ 0xff
 801bfea:	d021      	beq.n	801c030 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801bfec:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801bfee:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bff2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801bff4:	fb04 fb0b 	mul.w	fp, r4, fp
 801bff8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801bffa:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bffe:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c000:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c004:	fb04 fa0a 	mul.w	sl, r4, sl
 801c008:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c00c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c010:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c014:	44de      	add	lr, fp
 801c016:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c01a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c01e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c022:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c026:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c02a:	ea4e 040a 	orr.w	r4, lr, sl
 801c02e:	940f      	str	r4, [sp, #60]	@ 0x3c
 801c030:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c032:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c036:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c038:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c03c:	fb08 fc0c 	mul.w	ip, r8, ip
 801c040:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c044:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c048:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c04a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c04e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c052:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c054:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c058:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c05c:	fb08 f80e 	mul.w	r8, r8, lr
 801c060:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c064:	fb02 8303 	mla	r3, r2, r3, r8
 801c068:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c06a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c06c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c070:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c072:	fb01 330a 	mla	r3, r1, sl, r3
 801c076:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801c07a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c07c:	fb09 3901 	mla	r9, r9, r1, r3
 801c080:	4342      	muls	r2, r0
 801c082:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c086:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c08a:	883b      	ldrh	r3, [r7, #0]
 801c08c:	1c50      	adds	r0, r2, #1
 801c08e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c092:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c096:	ea4c 0c09 	orr.w	ip, ip, r9
 801c09a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c09e:	1219      	asrs	r1, r3, #8
 801c0a0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801c0a4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801c0a8:	b2c0      	uxtb	r0, r0
 801c0aa:	fb12 f204 	smulbb	r2, r2, r4
 801c0ae:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c0b2:	fb01 2100 	mla	r1, r1, r0, r2
 801c0b6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801c0ba:	10da      	asrs	r2, r3, #3
 801c0bc:	fa5f fc8c 	uxtb.w	ip, ip
 801c0c0:	00db      	lsls	r3, r3, #3
 801c0c2:	fb1c fc04 	smulbb	ip, ip, r4
 801c0c6:	b2db      	uxtb	r3, r3
 801c0c8:	b289      	uxth	r1, r1
 801c0ca:	fb03 c300 	mla	r3, r3, r0, ip
 801c0ce:	fa1f fc83 	uxth.w	ip, r3
 801c0d2:	1c4b      	adds	r3, r1, #1
 801c0d4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c0d8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c0dc:	fb1e fe04 	smulbb	lr, lr, r4
 801c0e0:	f10c 0301 	add.w	r3, ip, #1
 801c0e4:	fb02 e200 	mla	r2, r2, r0, lr
 801c0e8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c0ec:	b292      	uxth	r2, r2
 801c0ee:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801c0f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c0f6:	430b      	orrs	r3, r1
 801c0f8:	1c51      	adds	r1, r2, #1
 801c0fa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c0fe:	0952      	lsrs	r2, r2, #5
 801c100:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c104:	4313      	orrs	r3, r2
 801c106:	803b      	strh	r3, [r7, #0]
 801c108:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c10a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c10c:	441a      	add	r2, r3
 801c10e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c110:	9229      	str	r2, [sp, #164]	@ 0xa4
 801c112:	441d      	add	r5, r3
 801c114:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801c116:	3b01      	subs	r3, #1
 801c118:	3702      	adds	r7, #2
 801c11a:	931a      	str	r3, [sp, #104]	@ 0x68
 801c11c:	e694      	b.n	801be48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c11e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c120:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c122:	441c      	add	r4, r3
 801c124:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c126:	9429      	str	r4, [sp, #164]	@ 0xa4
 801c128:	441d      	add	r5, r3
 801c12a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c12c:	3b01      	subs	r3, #1
 801c12e:	9309      	str	r3, [sp, #36]	@ 0x24
 801c130:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c132:	3302      	adds	r3, #2
 801c134:	930c      	str	r3, [sp, #48]	@ 0x30
 801c136:	e666      	b.n	801be06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c138:	d024      	beq.n	801c184 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801c13a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c13c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801c13e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c140:	3b01      	subs	r3, #1
 801c142:	fb00 4003 	mla	r0, r0, r3, r4
 801c146:	1400      	asrs	r0, r0, #16
 801c148:	f53f ae7b 	bmi.w	801be42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c14c:	3901      	subs	r1, #1
 801c14e:	4288      	cmp	r0, r1
 801c150:	f6bf ae77 	bge.w	801be42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c154:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801c156:	fb01 5303 	mla	r3, r1, r3, r5
 801c15a:	141b      	asrs	r3, r3, #16
 801c15c:	f53f ae71 	bmi.w	801be42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c160:	3a01      	subs	r2, #1
 801c162:	4293      	cmp	r3, r2
 801c164:	f6bf ae6d 	bge.w	801be42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c168:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801c16c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801c170:	f1bb 0f00 	cmp.w	fp, #0
 801c174:	dc70      	bgt.n	801c258 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801c176:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c178:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c17c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c17e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c182:	930c      	str	r3, [sp, #48]	@ 0x30
 801c184:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c186:	2b00      	cmp	r3, #0
 801c188:	f340 81be 	ble.w	801c508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801c18c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c190:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c194:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c198:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c19a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c19e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c1a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c1a6:	eef0 6a62 	vmov.f32	s13, s5
 801c1aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c1ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c1b6:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801c1ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c1be:	eef0 6a43 	vmov.f32	s13, s6
 801c1c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c1c6:	ee12 2a90 	vmov	r2, s5
 801c1ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c1ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1d2:	ee13 2a10 	vmov	r2, s6
 801c1d6:	932b      	str	r3, [sp, #172]	@ 0xac
 801c1d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c1da:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1de:	932c      	str	r3, [sp, #176]	@ 0xb0
 801c1e0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c1e2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801c1e4:	3b01      	subs	r3, #1
 801c1e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1ea:	9319      	str	r3, [sp, #100]	@ 0x64
 801c1ec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c1ee:	bf08      	it	eq
 801c1f0:	4613      	moveq	r3, r2
 801c1f2:	ee16 5a90 	vmov	r5, s13
 801c1f6:	9309      	str	r3, [sp, #36]	@ 0x24
 801c1f8:	eeb0 3a67 	vmov.f32	s6, s15
 801c1fc:	eef0 2a47 	vmov.f32	s5, s14
 801c200:	e5f3      	b.n	801bdea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c202:	2900      	cmp	r1, #0
 801c204:	f43f ae66 	beq.w	801bed4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c208:	f818 0000 	ldrb.w	r0, [r8, r0]
 801c20c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c210:	900a      	str	r0, [sp, #40]	@ 0x28
 801c212:	0e00      	lsrs	r0, r0, #24
 801c214:	9013      	str	r0, [sp, #76]	@ 0x4c
 801c216:	e65d      	b.n	801bed4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c218:	f113 0801 	adds.w	r8, r3, #1
 801c21c:	f53f af74 	bmi.w	801c108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c220:	4540      	cmp	r0, r8
 801c222:	f6ff af71 	blt.w	801c108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c226:	f11c 0801 	adds.w	r8, ip, #1
 801c22a:	f53f af6d 	bmi.w	801c108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c22e:	45c6      	cmp	lr, r8
 801c230:	f6ff af6a 	blt.w	801c108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c234:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801c236:	9302      	str	r3, [sp, #8]
 801c238:	b200      	sxth	r0, r0
 801c23a:	fa0f f38e 	sxth.w	r3, lr
 801c23e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801c242:	e9cd c203 	strd	ip, r2, [sp, #12]
 801c246:	9301      	str	r3, [sp, #4]
 801c248:	9000      	str	r0, [sp, #0]
 801c24a:	4633      	mov	r3, r6
 801c24c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c24e:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801c250:	4639      	mov	r1, r7
 801c252:	f7ff fc62 	bl	801bb1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801c256:	e757      	b.n	801c108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c258:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c25a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c25c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c260:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c262:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c266:	1427      	asrs	r7, r4, #16
 801c268:	142b      	asrs	r3, r5, #16
 801c26a:	fb01 7303 	mla	r3, r1, r3, r7
 801c26e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c270:	18e7      	adds	r7, r4, r3
 801c272:	5ce3      	ldrb	r3, [r4, r3]
 801c274:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c278:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c27c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c280:	2a00      	cmp	r2, #0
 801c282:	f000 8137 	beq.w	801c4f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801c286:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c28a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c28e:	9410      	str	r4, [sp, #64]	@ 0x40
 801c290:	0e24      	lsrs	r4, r4, #24
 801c292:	9417      	str	r4, [sp, #92]	@ 0x5c
 801c294:	b170      	cbz	r0, 801c2b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c296:	eb07 0e01 	add.w	lr, r7, r1
 801c29a:	5c79      	ldrb	r1, [r7, r1]
 801c29c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c2a0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c2a2:	0e09      	lsrs	r1, r1, #24
 801c2a4:	9114      	str	r1, [sp, #80]	@ 0x50
 801c2a6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c2aa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c2ae:	9111      	str	r1, [sp, #68]	@ 0x44
 801c2b0:	0e09      	lsrs	r1, r1, #24
 801c2b2:	9118      	str	r1, [sp, #96]	@ 0x60
 801c2b4:	b292      	uxth	r2, r2
 801c2b6:	b280      	uxth	r0, r0
 801c2b8:	fb02 f800 	mul.w	r8, r2, r0
 801c2bc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c2c0:	0112      	lsls	r2, r2, #4
 801c2c2:	eba2 0e08 	sub.w	lr, r2, r8
 801c2c6:	b280      	uxth	r0, r0
 801c2c8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c2cc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801c2ce:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c2d0:	fa1f fe8e 	uxth.w	lr, lr
 801c2d4:	1a12      	subs	r2, r2, r0
 801c2d6:	b292      	uxth	r2, r2
 801c2d8:	fb0e f101 	mul.w	r1, lr, r1
 801c2dc:	fb02 110c 	mla	r1, r2, ip, r1
 801c2e0:	fb00 1104 	mla	r1, r0, r4, r1
 801c2e4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c2e6:	fb08 1104 	mla	r1, r8, r4, r1
 801c2ea:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c2ee:	2900      	cmp	r1, #0
 801c2f0:	f000 80f5 	beq.w	801c4de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801c2f4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c2f8:	d019      	beq.n	801c32e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801c2fa:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c2fe:	fb0c fa0a 	mul.w	sl, ip, sl
 801c302:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c306:	fb0c fc03 	mul.w	ip, ip, r3
 801c30a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c30e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c312:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c316:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c31a:	4453      	add	r3, sl
 801c31c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c320:	0a1b      	lsrs	r3, r3, #8
 801c322:	0a3f      	lsrs	r7, r7, #8
 801c324:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c328:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c32c:	433b      	orrs	r3, r7
 801c32e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c330:	2cff      	cmp	r4, #255	@ 0xff
 801c332:	d020      	beq.n	801c376 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801c334:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c336:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c33a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c33c:	4367      	muls	r7, r4
 801c33e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c340:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c344:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c346:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c34a:	fb04 fa0a 	mul.w	sl, r4, sl
 801c34e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c352:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c356:	44bc      	add	ip, r7
 801c358:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c35c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c360:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c364:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c368:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c36c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c370:	ea4c 040a 	orr.w	r4, ip, sl
 801c374:	9410      	str	r4, [sp, #64]	@ 0x40
 801c376:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c378:	2cff      	cmp	r4, #255	@ 0xff
 801c37a:	d020      	beq.n	801c3be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801c37c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c37e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c382:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c384:	4367      	muls	r7, r4
 801c386:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c388:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c38c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c38e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c392:	fb04 fa0a 	mul.w	sl, r4, sl
 801c396:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c39a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c39e:	44bc      	add	ip, r7
 801c3a0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c3a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c3a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3b0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3b4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c3b8:	ea4c 040a 	orr.w	r4, ip, sl
 801c3bc:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c3be:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c3c0:	2cff      	cmp	r4, #255	@ 0xff
 801c3c2:	d020      	beq.n	801c406 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801c3c4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c3c6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c3ca:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c3cc:	4367      	muls	r7, r4
 801c3ce:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c3d0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c3d4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c3d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c3da:	fb04 fa0a 	mul.w	sl, r4, sl
 801c3de:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c3e2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3e6:	44bc      	add	ip, r7
 801c3e8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c3ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c3f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3f8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c400:	ea4c 040a 	orr.w	r4, ip, sl
 801c404:	9411      	str	r4, [sp, #68]	@ 0x44
 801c406:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c408:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c40c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c40e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c412:	fb0e f707 	mul.w	r7, lr, r7
 801c416:	fb02 770c 	mla	r7, r2, ip, r7
 801c41a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c41e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c420:	fb00 770c 	mla	r7, r0, ip, r7
 801c424:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c428:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c42a:	fb08 770c 	mla	r7, r8, ip, r7
 801c42e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c432:	fb0e fe0c 	mul.w	lr, lr, ip
 801c436:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c43a:	fb02 e303 	mla	r3, r2, r3, lr
 801c43e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c440:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c442:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c446:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c448:	fb00 330a 	mla	r3, r0, sl, r3
 801c44c:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801c450:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c454:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c456:	f8b9 0000 	ldrh.w	r0, [r9]
 801c45a:	434b      	muls	r3, r1
 801c45c:	0a3f      	lsrs	r7, r7, #8
 801c45e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c462:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c466:	1c59      	adds	r1, r3, #1
 801c468:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c46c:	ea47 070c 	orr.w	r7, r7, ip
 801c470:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c474:	1202      	asrs	r2, r0, #8
 801c476:	0c3b      	lsrs	r3, r7, #16
 801c478:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801c47c:	b2c9      	uxtb	r1, r1
 801c47e:	fb13 f304 	smulbb	r3, r3, r4
 801c482:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c486:	fb02 3201 	mla	r2, r2, r1, r3
 801c48a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801c48e:	10c3      	asrs	r3, r0, #3
 801c490:	b2ff      	uxtb	r7, r7
 801c492:	00c0      	lsls	r0, r0, #3
 801c494:	b292      	uxth	r2, r2
 801c496:	fb1c fc04 	smulbb	ip, ip, r4
 801c49a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c49e:	b2c0      	uxtb	r0, r0
 801c4a0:	fb17 f704 	smulbb	r7, r7, r4
 801c4a4:	fb03 c301 	mla	r3, r3, r1, ip
 801c4a8:	fb00 7001 	mla	r0, r0, r1, r7
 801c4ac:	f102 0c01 	add.w	ip, r2, #1
 801c4b0:	b280      	uxth	r0, r0
 801c4b2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801c4b6:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801c4ba:	1c42      	adds	r2, r0, #1
 801c4bc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c4c0:	b29b      	uxth	r3, r3
 801c4c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c4c6:	ea42 020c 	orr.w	r2, r2, ip
 801c4ca:	f103 0c01 	add.w	ip, r3, #1
 801c4ce:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801c4d2:	095b      	lsrs	r3, r3, #5
 801c4d4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c4d8:	431a      	orrs	r2, r3
 801c4da:	f8a9 2000 	strh.w	r2, [r9]
 801c4de:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c4e0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c4e2:	441a      	add	r2, r3
 801c4e4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c4e6:	9229      	str	r2, [sp, #164]	@ 0xa4
 801c4e8:	f109 0902 	add.w	r9, r9, #2
 801c4ec:	441d      	add	r5, r3
 801c4ee:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c4f2:	e63d      	b.n	801c170 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801c4f4:	2800      	cmp	r0, #0
 801c4f6:	f43f aedd 	beq.w	801c2b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c4fa:	5c79      	ldrb	r1, [r7, r1]
 801c4fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c500:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c502:	0e09      	lsrs	r1, r1, #24
 801c504:	9114      	str	r1, [sp, #80]	@ 0x50
 801c506:	e6d5      	b.n	801c2b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c508:	b01f      	add	sp, #124	@ 0x7c
 801c50a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c50e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801c50e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c512:	b089      	sub	sp, #36	@ 0x24
 801c514:	9101      	str	r1, [sp, #4]
 801c516:	9801      	ldr	r0, [sp, #4]
 801c518:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801c51c:	8800      	ldrh	r0, [r0, #0]
 801c51e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801c522:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801c526:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801c52a:	1206      	asrs	r6, r0, #8
 801c52c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801c530:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c534:	9602      	str	r6, [sp, #8]
 801c536:	10c6      	asrs	r6, r0, #3
 801c538:	00c0      	lsls	r0, r0, #3
 801c53a:	b2c0      	uxtb	r0, r0
 801c53c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c540:	9004      	str	r0, [sp, #16]
 801c542:	2f00      	cmp	r7, #0
 801c544:	fb07 100c 	mla	r0, r7, ip, r1
 801c548:	9603      	str	r6, [sp, #12]
 801c54a:	eb02 0e00 	add.w	lr, r2, r0
 801c54e:	f2c0 810a 	blt.w	801c766 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c552:	45b8      	cmp	r8, r7
 801c554:	f340 8107 	ble.w	801c766 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c558:	2900      	cmp	r1, #0
 801c55a:	f2c0 8102 	blt.w	801c762 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c55e:	458c      	cmp	ip, r1
 801c560:	f340 80ff 	ble.w	801c762 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c564:	5c12      	ldrb	r2, [r2, r0]
 801c566:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801c56a:	1c4a      	adds	r2, r1, #1
 801c56c:	f100 80fe 	bmi.w	801c76c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c570:	4594      	cmp	ip, r2
 801c572:	f340 80fb 	ble.w	801c76c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c576:	2d00      	cmp	r5, #0
 801c578:	f000 80fa 	beq.w	801c770 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801c57c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c580:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801c584:	3701      	adds	r7, #1
 801c586:	f100 80f7 	bmi.w	801c778 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c58a:	45b8      	cmp	r8, r7
 801c58c:	f340 80f4 	ble.w	801c778 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c590:	2c00      	cmp	r4, #0
 801c592:	f000 80f4 	beq.w	801c77e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801c596:	2900      	cmp	r1, #0
 801c598:	eb0e 020c 	add.w	r2, lr, ip
 801c59c:	f2c0 80ea 	blt.w	801c774 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c5a0:	458c      	cmp	ip, r1
 801c5a2:	f340 80e7 	ble.w	801c774 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c5a6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801c5aa:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801c5ae:	3101      	adds	r1, #1
 801c5b0:	f100 80e8 	bmi.w	801c784 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c5b4:	458c      	cmp	ip, r1
 801c5b6:	f340 80e5 	ble.w	801c784 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c5ba:	2d00      	cmp	r5, #0
 801c5bc:	f000 80e4 	beq.w	801c788 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801c5c0:	7852      	ldrb	r2, [r2, #1]
 801c5c2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801c5c6:	0e0b      	lsrs	r3, r1, #24
 801c5c8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801c5cc:	9300      	str	r3, [sp, #0]
 801c5ce:	b2a4      	uxth	r4, r4
 801c5d0:	b2ab      	uxth	r3, r5
 801c5d2:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801c5d6:	fb03 f904 	mul.w	r9, r3, r4
 801c5da:	fb0a f505 	mul.w	r5, sl, r5
 801c5de:	011b      	lsls	r3, r3, #4
 801c5e0:	eba3 0e09 	sub.w	lr, r3, r9
 801c5e4:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801c5e8:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801c5ec:	0a28      	lsrs	r0, r5, #8
 801c5ee:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801c5f2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801c5f6:	4405      	add	r5, r0
 801c5f8:	0a2d      	lsrs	r5, r5, #8
 801c5fa:	fb0a f303 	mul.w	r3, sl, r3
 801c5fe:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801c602:	9005      	str	r0, [sp, #20]
 801c604:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801c608:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801c60c:	0a1b      	lsrs	r3, r3, #8
 801c60e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801c612:	9306      	str	r3, [sp, #24]
 801c614:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801c618:	fb0b f303 	mul.w	r3, fp, r3
 801c61c:	0a1d      	lsrs	r5, r3, #8
 801c61e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801c622:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801c626:	fb0b f606 	mul.w	r6, fp, r6
 801c62a:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801c62e:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801c632:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c636:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c63a:	fb08 f707 	mul.w	r7, r8, r7
 801c63e:	441d      	add	r5, r3
 801c640:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801c644:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801c648:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801c64c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801c650:	fb08 fc0c 	mul.w	ip, r8, ip
 801c654:	0a1b      	lsrs	r3, r3, #8
 801c656:	9307      	str	r3, [sp, #28]
 801c658:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801c65c:	0e0b      	lsrs	r3, r1, #24
 801c65e:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801c662:	435f      	muls	r7, r3
 801c664:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c668:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801c66c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801c670:	4460      	add	r0, ip
 801c672:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c676:	b2a4      	uxth	r4, r4
 801c678:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c67c:	0a2d      	lsrs	r5, r5, #8
 801c67e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c682:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c686:	fa1f fe8e 	uxth.w	lr, lr
 801c68a:	4359      	muls	r1, r3
 801c68c:	1b12      	subs	r2, r2, r4
 801c68e:	9b05      	ldr	r3, [sp, #20]
 801c690:	44bc      	add	ip, r7
 801c692:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c696:	b292      	uxth	r2, r2
 801c698:	fb05 f50e 	mul.w	r5, r5, lr
 801c69c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c6a0:	fb03 5502 	mla	r5, r3, r2, r5
 801c6a4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c6a8:	9b06      	ldr	r3, [sp, #24]
 801c6aa:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801c6ae:	0a36      	lsrs	r6, r6, #8
 801c6b0:	0a00      	lsrs	r0, r0, #8
 801c6b2:	fb0c 5509 	mla	r5, ip, r9, r5
 801c6b6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801c6ba:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801c6be:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801c6c2:	fb00 5504 	mla	r5, r0, r4, r5
 801c6c6:	fb0e f606 	mul.w	r6, lr, r6
 801c6ca:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801c6ce:	0a09      	lsrs	r1, r1, #8
 801c6d0:	9b07      	ldr	r3, [sp, #28]
 801c6d2:	fb02 6000 	mla	r0, r2, r0, r6
 801c6d6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c6da:	fb09 0001 	mla	r0, r9, r1, r0
 801c6de:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c6e2:	fb0e fe0b 	mul.w	lr, lr, fp
 801c6e6:	fb04 0003 	mla	r0, r4, r3, r0
 801c6ea:	fb02 e20a 	mla	r2, r2, sl, lr
 801c6ee:	9b00      	ldr	r3, [sp, #0]
 801c6f0:	fb04 2408 	mla	r4, r4, r8, r2
 801c6f4:	fb09 4903 	mla	r9, r9, r3, r4
 801c6f8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801c6fc:	9b02      	ldr	r3, [sp, #8]
 801c6fe:	9a04      	ldr	r2, [sp, #16]
 801c700:	fa5f f989 	uxtb.w	r9, r9
 801c704:	fb03 f109 	mul.w	r1, r3, r9
 801c708:	9b03      	ldr	r3, [sp, #12]
 801c70a:	0a2d      	lsrs	r5, r5, #8
 801c70c:	0a00      	lsrs	r0, r0, #8
 801c70e:	fb03 f309 	mul.w	r3, r3, r9
 801c712:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801c716:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c71a:	4305      	orrs	r5, r0
 801c71c:	fb02 f909 	mul.w	r9, r2, r9
 801c720:	1c58      	adds	r0, r3, #1
 801c722:	1c4a      	adds	r2, r1, #1
 801c724:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c728:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c72c:	0a2b      	lsrs	r3, r5, #8
 801c72e:	0c2a      	lsrs	r2, r5, #16
 801c730:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c734:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801c738:	00db      	lsls	r3, r3, #3
 801c73a:	0212      	lsls	r2, r2, #8
 801c73c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801c740:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c744:	4313      	orrs	r3, r2
 801c746:	f109 0201 	add.w	r2, r9, #1
 801c74a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801c74e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801c752:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c756:	431d      	orrs	r5, r3
 801c758:	9b01      	ldr	r3, [sp, #4]
 801c75a:	801d      	strh	r5, [r3, #0]
 801c75c:	b009      	add	sp, #36	@ 0x24
 801c75e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c762:	2000      	movs	r0, #0
 801c764:	e701      	b.n	801c56a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801c766:	2600      	movs	r6, #0
 801c768:	4630      	mov	r0, r6
 801c76a:	e70b      	b.n	801c584 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c76c:	2600      	movs	r6, #0
 801c76e:	e709      	b.n	801c584 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c770:	462e      	mov	r6, r5
 801c772:	e707      	b.n	801c584 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c774:	2700      	movs	r7, #0
 801c776:	e71a      	b.n	801c5ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801c778:	2100      	movs	r1, #0
 801c77a:	460f      	mov	r7, r1
 801c77c:	e723      	b.n	801c5c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c77e:	4621      	mov	r1, r4
 801c780:	4627      	mov	r7, r4
 801c782:	e720      	b.n	801c5c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c784:	2100      	movs	r1, #0
 801c786:	e71e      	b.n	801c5c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c788:	4629      	mov	r1, r5
 801c78a:	e71c      	b.n	801c5c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801c78c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c790:	b09b      	sub	sp, #108	@ 0x6c
 801c792:	9218      	str	r2, [sp, #96]	@ 0x60
 801c794:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c796:	9116      	str	r1, [sp, #88]	@ 0x58
 801c798:	9307      	str	r3, [sp, #28]
 801c79a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801c79e:	9019      	str	r0, [sp, #100]	@ 0x64
 801c7a0:	6850      	ldr	r0, [r2, #4]
 801c7a2:	6812      	ldr	r2, [r2, #0]
 801c7a4:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801c7a6:	fb00 1303 	mla	r3, r0, r3, r1
 801c7aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c7ae:	930a      	str	r3, [sp, #40]	@ 0x28
 801c7b0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c7b2:	681b      	ldr	r3, [r3, #0]
 801c7b4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c7b6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c7b8:	685e      	ldr	r6, [r3, #4]
 801c7ba:	3604      	adds	r6, #4
 801c7bc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c7be:	2b00      	cmp	r3, #0
 801c7c0:	dc03      	bgt.n	801c7ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c7c2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c7c4:	2b00      	cmp	r3, #0
 801c7c6:	f340 8373 	ble.w	801ceb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c7ca:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c7cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c7d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c7d4:	1e48      	subs	r0, r1, #1
 801c7d6:	1e57      	subs	r7, r2, #1
 801c7d8:	9b07      	ldr	r3, [sp, #28]
 801c7da:	2b00      	cmp	r3, #0
 801c7dc:	f340 8190 	ble.w	801cb00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c7e0:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c7e2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c7e6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c7ea:	d406      	bmi.n	801c7fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c7ec:	4584      	cmp	ip, r0
 801c7ee:	da04      	bge.n	801c7fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c7f0:	2b00      	cmp	r3, #0
 801c7f2:	db02      	blt.n	801c7fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c7f4:	42bb      	cmp	r3, r7
 801c7f6:	f2c0 8184 	blt.w	801cb02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801c7fa:	f11c 0c01 	adds.w	ip, ip, #1
 801c7fe:	f100 8172 	bmi.w	801cae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c802:	4561      	cmp	r1, ip
 801c804:	f2c0 816f 	blt.w	801cae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c808:	3301      	adds	r3, #1
 801c80a:	f100 816c 	bmi.w	801cae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c80e:	429a      	cmp	r2, r3
 801c810:	f2c0 8169 	blt.w	801cae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c814:	9b07      	ldr	r3, [sp, #28]
 801c816:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c818:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c81a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c81c:	2b00      	cmp	r3, #0
 801c81e:	f340 818e 	ble.w	801cb3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801c822:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c824:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c828:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c82a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801c82e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c830:	141b      	asrs	r3, r3, #16
 801c832:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c836:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c83a:	f100 81d1 	bmi.w	801cbe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c83e:	f101 38ff 	add.w	r8, r1, #4294967295
 801c842:	4543      	cmp	r3, r8
 801c844:	f280 81cc 	bge.w	801cbe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c848:	f1bc 0f00 	cmp.w	ip, #0
 801c84c:	f2c0 81c8 	blt.w	801cbe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c850:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c854:	45c4      	cmp	ip, r8
 801c856:	f280 81c3 	bge.w	801cbe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c85a:	b209      	sxth	r1, r1
 801c85c:	fb0c 3301 	mla	r3, ip, r1, r3
 801c860:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c862:	eb04 0803 	add.w	r8, r4, r3
 801c866:	5ce3      	ldrb	r3, [r4, r3]
 801c868:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c86c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c870:	2a00      	cmp	r2, #0
 801c872:	f000 81aa 	beq.w	801cbca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801c876:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c87a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c87e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c880:	0e24      	lsrs	r4, r4, #24
 801c882:	9412      	str	r4, [sp, #72]	@ 0x48
 801c884:	b178      	cbz	r0, 801c8a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c886:	eb08 0c01 	add.w	ip, r8, r1
 801c88a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c88e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c892:	9108      	str	r1, [sp, #32]
 801c894:	0e09      	lsrs	r1, r1, #24
 801c896:	9110      	str	r1, [sp, #64]	@ 0x40
 801c898:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801c89c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c8a0:	910c      	str	r1, [sp, #48]	@ 0x30
 801c8a2:	0e09      	lsrs	r1, r1, #24
 801c8a4:	9113      	str	r1, [sp, #76]	@ 0x4c
 801c8a6:	b292      	uxth	r2, r2
 801c8a8:	b280      	uxth	r0, r0
 801c8aa:	fb02 f900 	mul.w	r9, r2, r0
 801c8ae:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c8b2:	0112      	lsls	r2, r2, #4
 801c8b4:	eba2 0809 	sub.w	r8, r2, r9
 801c8b8:	b280      	uxth	r0, r0
 801c8ba:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c8be:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c8c0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c8c2:	fa1f f888 	uxth.w	r8, r8
 801c8c6:	1a12      	subs	r2, r2, r0
 801c8c8:	b292      	uxth	r2, r2
 801c8ca:	fb08 f101 	mul.w	r1, r8, r1
 801c8ce:	fb02 110e 	mla	r1, r2, lr, r1
 801c8d2:	fb00 1104 	mla	r1, r0, r4, r1
 801c8d6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c8d8:	fb09 1104 	mla	r1, r9, r4, r1
 801c8dc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c8e0:	2900      	cmp	r1, #0
 801c8e2:	f000 80f5 	beq.w	801cad0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c8e6:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c8ea:	d01b      	beq.n	801c924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c8ec:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c8f0:	fb0e fa0a 	mul.w	sl, lr, sl
 801c8f4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c8f8:	fb0e fe03 	mul.w	lr, lr, r3
 801c8fc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c900:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c904:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c908:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c90c:	4453      	add	r3, sl
 801c90e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c912:	0a1b      	lsrs	r3, r3, #8
 801c914:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c918:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c91c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c920:	ea43 030c 	orr.w	r3, r3, ip
 801c924:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c926:	2cff      	cmp	r4, #255	@ 0xff
 801c928:	d021      	beq.n	801c96e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801c92a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c92c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c930:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c932:	fb04 fb0b 	mul.w	fp, r4, fp
 801c936:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c938:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c93c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c93e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c942:	fb04 fa0a 	mul.w	sl, r4, sl
 801c946:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c94a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c94e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c952:	44de      	add	lr, fp
 801c954:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c958:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c95c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c960:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c964:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c968:	ea4e 040a 	orr.w	r4, lr, sl
 801c96c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c96e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c970:	2cff      	cmp	r4, #255	@ 0xff
 801c972:	d021      	beq.n	801c9b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801c974:	9c08      	ldr	r4, [sp, #32]
 801c976:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c97a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c97c:	fb04 fb0b 	mul.w	fp, r4, fp
 801c980:	9c08      	ldr	r4, [sp, #32]
 801c982:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c986:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c988:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c98c:	fb04 fa0a 	mul.w	sl, r4, sl
 801c990:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c994:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c998:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c99c:	44de      	add	lr, fp
 801c99e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c9a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c9a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c9aa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c9ae:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c9b2:	ea4e 040a 	orr.w	r4, lr, sl
 801c9b6:	9408      	str	r4, [sp, #32]
 801c9b8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c9ba:	2cff      	cmp	r4, #255	@ 0xff
 801c9bc:	d021      	beq.n	801ca02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c9be:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c9c0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c9c4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c9c6:	fb04 fb0b 	mul.w	fp, r4, fp
 801c9ca:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c9cc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c9d0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c9d2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c9d6:	fb04 fa0a 	mul.w	sl, r4, sl
 801c9da:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c9de:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c9e2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c9e6:	44de      	add	lr, fp
 801c9e8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c9ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c9f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c9f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c9f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c9fc:	ea4e 040a 	orr.w	r4, lr, sl
 801ca00:	940c      	str	r4, [sp, #48]	@ 0x30
 801ca02:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ca04:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ca08:	9c08      	ldr	r4, [sp, #32]
 801ca0a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801ca0e:	fb08 fc0c 	mul.w	ip, r8, ip
 801ca12:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ca16:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ca1a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ca1c:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ca20:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ca24:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ca26:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ca2a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801ca2e:	fb08 f80e 	mul.w	r8, r8, lr
 801ca32:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ca36:	fb02 8303 	mla	r3, r2, r3, r8
 801ca3a:	9a08      	ldr	r2, [sp, #32]
 801ca3c:	f8b7 8000 	ldrh.w	r8, [r7]
 801ca40:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ca44:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ca46:	fb00 330a 	mla	r3, r0, sl, r3
 801ca4a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801ca4e:	fb09 3900 	mla	r9, r9, r0, r3
 801ca52:	43c9      	mvns	r1, r1
 801ca54:	ea4f 2228 	mov.w	r2, r8, asr #8
 801ca58:	fa5f fe81 	uxtb.w	lr, r1
 801ca5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ca60:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ca64:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ca68:	fb02 f20e 	mul.w	r2, r2, lr
 801ca6c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ca70:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ca74:	ea4c 0c09 	orr.w	ip, ip, r9
 801ca78:	1c53      	adds	r3, r2, #1
 801ca7a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ca7e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ca82:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ca86:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ca8a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ca8e:	4a63      	ldr	r2, [pc, #396]	@ (801cc1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ca90:	fb00 f00e 	mul.w	r0, r0, lr
 801ca94:	b2db      	uxtb	r3, r3
 801ca96:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ca9a:	1c43      	adds	r3, r0, #1
 801ca9c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801caa0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801caa4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801caa8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801caac:	b2c9      	uxtb	r1, r1
 801caae:	00db      	lsls	r3, r3, #3
 801cab0:	fb01 f10e 	mul.w	r1, r1, lr
 801cab4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cab8:	4313      	orrs	r3, r2
 801caba:	1c4a      	adds	r2, r1, #1
 801cabc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cac0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801cac4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801cac8:	ea4c 0c03 	orr.w	ip, ip, r3
 801cacc:	f8a7 c000 	strh.w	ip, [r7]
 801cad0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cad2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801cad4:	441a      	add	r2, r3
 801cad6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cad8:	9225      	str	r2, [sp, #148]	@ 0x94
 801cada:	441d      	add	r5, r3
 801cadc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801cade:	3b01      	subs	r3, #1
 801cae0:	3702      	adds	r7, #2
 801cae2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801cae4:	e699      	b.n	801c81a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cae6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cae8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801caea:	441c      	add	r4, r3
 801caec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801caee:	9425      	str	r4, [sp, #148]	@ 0x94
 801caf0:	441d      	add	r5, r3
 801caf2:	9b07      	ldr	r3, [sp, #28]
 801caf4:	3b01      	subs	r3, #1
 801caf6:	9307      	str	r3, [sp, #28]
 801caf8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cafa:	3302      	adds	r3, #2
 801cafc:	930a      	str	r3, [sp, #40]	@ 0x28
 801cafe:	e66b      	b.n	801c7d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801cb00:	d024      	beq.n	801cb4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801cb02:	9b07      	ldr	r3, [sp, #28]
 801cb04:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801cb06:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801cb08:	3b01      	subs	r3, #1
 801cb0a:	fb00 4003 	mla	r0, r0, r3, r4
 801cb0e:	1400      	asrs	r0, r0, #16
 801cb10:	f53f ae80 	bmi.w	801c814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cb14:	3901      	subs	r1, #1
 801cb16:	4288      	cmp	r0, r1
 801cb18:	f6bf ae7c 	bge.w	801c814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cb1c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801cb1e:	fb01 5303 	mla	r3, r1, r3, r5
 801cb22:	141b      	asrs	r3, r3, #16
 801cb24:	f53f ae76 	bmi.w	801c814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cb28:	3a01      	subs	r2, #1
 801cb2a:	4293      	cmp	r3, r2
 801cb2c:	f6bf ae72 	bge.w	801c814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cb30:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801cb34:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801cb38:	f1bb 0f00 	cmp.w	fp, #0
 801cb3c:	dc70      	bgt.n	801cc20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cb3e:	9b07      	ldr	r3, [sp, #28]
 801cb40:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cb44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cb46:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cb4a:	930a      	str	r3, [sp, #40]	@ 0x28
 801cb4c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cb4e:	2b00      	cmp	r3, #0
 801cb50:	f340 81ae 	ble.w	801ceb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801cb54:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb58:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cb5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cb60:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb66:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb6e:	eef0 6a62 	vmov.f32	s13, s5
 801cb72:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb7e:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801cb82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb86:	eef0 6a43 	vmov.f32	s13, s6
 801cb8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb8e:	ee12 2a90 	vmov	r2, s5
 801cb92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb96:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb9a:	ee13 2a10 	vmov	r2, s6
 801cb9e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801cba0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cba2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cba6:	9328      	str	r3, [sp, #160]	@ 0xa0
 801cba8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cbaa:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801cbac:	3b01      	subs	r3, #1
 801cbae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cbb2:	9316      	str	r3, [sp, #88]	@ 0x58
 801cbb4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cbb6:	bf08      	it	eq
 801cbb8:	4613      	moveq	r3, r2
 801cbba:	ee16 5a90 	vmov	r5, s13
 801cbbe:	9307      	str	r3, [sp, #28]
 801cbc0:	eeb0 3a67 	vmov.f32	s6, s15
 801cbc4:	eef0 2a47 	vmov.f32	s5, s14
 801cbc8:	e5f8      	b.n	801c7bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cbca:	2800      	cmp	r0, #0
 801cbcc:	f43f ae6b 	beq.w	801c8a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801cbd0:	f818 1001 	ldrb.w	r1, [r8, r1]
 801cbd4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cbd8:	9108      	str	r1, [sp, #32]
 801cbda:	0e09      	lsrs	r1, r1, #24
 801cbdc:	9110      	str	r1, [sp, #64]	@ 0x40
 801cbde:	e662      	b.n	801c8a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801cbe0:	f113 0801 	adds.w	r8, r3, #1
 801cbe4:	f53f af74 	bmi.w	801cad0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cbe8:	4541      	cmp	r1, r8
 801cbea:	f6ff af71 	blt.w	801cad0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cbee:	f11c 0801 	adds.w	r8, ip, #1
 801cbf2:	f53f af6d 	bmi.w	801cad0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cbf6:	45c6      	cmp	lr, r8
 801cbf8:	f6ff af6a 	blt.w	801cad0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cbfc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801cc00:	b209      	sxth	r1, r1
 801cc02:	fa0f f38e 	sxth.w	r3, lr
 801cc06:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801cc0a:	9301      	str	r3, [sp, #4]
 801cc0c:	9100      	str	r1, [sp, #0]
 801cc0e:	4633      	mov	r3, r6
 801cc10:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801cc12:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801cc14:	4639      	mov	r1, r7
 801cc16:	f7ff fc7a 	bl	801c50e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801cc1a:	e759      	b.n	801cad0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cc1c:	fffff800 	.word	0xfffff800
 801cc20:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801cc22:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801cc24:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cc28:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cc2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cc2e:	1427      	asrs	r7, r4, #16
 801cc30:	142b      	asrs	r3, r5, #16
 801cc32:	fb01 7303 	mla	r3, r1, r3, r7
 801cc36:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801cc38:	18e7      	adds	r7, r4, r3
 801cc3a:	5ce3      	ldrb	r3, [r4, r3]
 801cc3c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801cc40:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801cc44:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801cc48:	2a00      	cmp	r2, #0
 801cc4a:	f000 8127 	beq.w	801ce9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cc4e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801cc52:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801cc56:	940d      	str	r4, [sp, #52]	@ 0x34
 801cc58:	0e24      	lsrs	r4, r4, #24
 801cc5a:	9414      	str	r4, [sp, #80]	@ 0x50
 801cc5c:	b170      	cbz	r0, 801cc7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801cc5e:	eb07 0e01 	add.w	lr, r7, r1
 801cc62:	5c79      	ldrb	r1, [r7, r1]
 801cc64:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cc68:	9109      	str	r1, [sp, #36]	@ 0x24
 801cc6a:	0e09      	lsrs	r1, r1, #24
 801cc6c:	9111      	str	r1, [sp, #68]	@ 0x44
 801cc6e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801cc72:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cc76:	910e      	str	r1, [sp, #56]	@ 0x38
 801cc78:	0e09      	lsrs	r1, r1, #24
 801cc7a:	9115      	str	r1, [sp, #84]	@ 0x54
 801cc7c:	b292      	uxth	r2, r2
 801cc7e:	b280      	uxth	r0, r0
 801cc80:	fb02 f800 	mul.w	r8, r2, r0
 801cc84:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801cc88:	0112      	lsls	r2, r2, #4
 801cc8a:	eba2 0e08 	sub.w	lr, r2, r8
 801cc8e:	b280      	uxth	r0, r0
 801cc90:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801cc94:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cc96:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cc98:	fa1f fe8e 	uxth.w	lr, lr
 801cc9c:	1a09      	subs	r1, r1, r0
 801cc9e:	b289      	uxth	r1, r1
 801cca0:	fb0e f202 	mul.w	r2, lr, r2
 801cca4:	fb01 220c 	mla	r2, r1, ip, r2
 801cca8:	fb00 2204 	mla	r2, r0, r4, r2
 801ccac:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ccae:	fb08 2204 	mla	r2, r8, r4, r2
 801ccb2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ccb6:	2a00      	cmp	r2, #0
 801ccb8:	f000 80e5 	beq.w	801ce86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801ccbc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ccc0:	d019      	beq.n	801ccf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801ccc2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ccc6:	fb0c fa0a 	mul.w	sl, ip, sl
 801ccca:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ccce:	fb0c fc03 	mul.w	ip, ip, r3
 801ccd2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ccd6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ccda:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ccde:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801cce2:	4453      	add	r3, sl
 801cce4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801cce8:	0a1b      	lsrs	r3, r3, #8
 801ccea:	0a3f      	lsrs	r7, r7, #8
 801ccec:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ccf0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ccf4:	433b      	orrs	r3, r7
 801ccf6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ccf8:	2cff      	cmp	r4, #255	@ 0xff
 801ccfa:	d020      	beq.n	801cd3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801ccfc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ccfe:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cd02:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cd04:	4367      	muls	r7, r4
 801cd06:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cd08:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cd0c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cd0e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cd12:	fb04 fa0a 	mul.w	sl, r4, sl
 801cd16:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cd1a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd1e:	44bc      	add	ip, r7
 801cd20:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cd24:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cd28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd30:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd34:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cd38:	ea4c 040a 	orr.w	r4, ip, sl
 801cd3c:	940d      	str	r4, [sp, #52]	@ 0x34
 801cd3e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cd40:	2cff      	cmp	r4, #255	@ 0xff
 801cd42:	d020      	beq.n	801cd86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801cd44:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801cd46:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cd4a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cd4c:	4367      	muls	r7, r4
 801cd4e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801cd50:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cd54:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cd56:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cd5a:	fb04 fa0a 	mul.w	sl, r4, sl
 801cd5e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cd62:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd66:	44bc      	add	ip, r7
 801cd68:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cd6c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cd70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd78:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cd7c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cd80:	ea4c 040a 	orr.w	r4, ip, sl
 801cd84:	9409      	str	r4, [sp, #36]	@ 0x24
 801cd86:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801cd88:	2cff      	cmp	r4, #255	@ 0xff
 801cd8a:	d020      	beq.n	801cdce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801cd8c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cd8e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cd92:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801cd94:	4367      	muls	r7, r4
 801cd96:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cd98:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cd9c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801cd9e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cda2:	fb04 fa0a 	mul.w	sl, r4, sl
 801cda6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cdaa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cdae:	44bc      	add	ip, r7
 801cdb0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cdb4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cdb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cdbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cdc0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cdc4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cdc8:	ea4c 040a 	orr.w	r4, ip, sl
 801cdcc:	940e      	str	r4, [sp, #56]	@ 0x38
 801cdce:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cdd0:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cdd4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801cdd6:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801cdda:	fb0e f707 	mul.w	r7, lr, r7
 801cdde:	fb01 770c 	mla	r7, r1, ip, r7
 801cde2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801cde6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801cde8:	fb00 770c 	mla	r7, r0, ip, r7
 801cdec:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801cdf0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cdf2:	fb08 770c 	mla	r7, r8, ip, r7
 801cdf6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801cdfa:	fb0e fe0c 	mul.w	lr, lr, ip
 801cdfe:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ce02:	fb01 e303 	mla	r3, r1, r3, lr
 801ce06:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801ce08:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801ce0c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801ce0e:	fb00 330a 	mla	r3, r0, sl, r3
 801ce12:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801ce16:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ce1a:	f8b9 3000 	ldrh.w	r3, [r9]
 801ce1e:	43d2      	mvns	r2, r2
 801ce20:	1218      	asrs	r0, r3, #8
 801ce22:	b2d2      	uxtb	r2, r2
 801ce24:	10d9      	asrs	r1, r3, #3
 801ce26:	0a3f      	lsrs	r7, r7, #8
 801ce28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce2c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ce30:	00db      	lsls	r3, r3, #3
 801ce32:	4350      	muls	r0, r2
 801ce34:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801ce38:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ce3c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ce40:	b2db      	uxtb	r3, r3
 801ce42:	ea47 070c 	orr.w	r7, r7, ip
 801ce46:	4351      	muls	r1, r2
 801ce48:	4353      	muls	r3, r2
 801ce4a:	1c42      	adds	r2, r0, #1
 801ce4c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ce50:	0c3a      	lsrs	r2, r7, #16
 801ce52:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ce56:	4a18      	ldr	r2, [pc, #96]	@ (801ceb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801ce58:	b2c0      	uxtb	r0, r0
 801ce5a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801ce5e:	1c4a      	adds	r2, r1, #1
 801ce60:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ce64:	0a3a      	lsrs	r2, r7, #8
 801ce66:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ce6a:	00c9      	lsls	r1, r1, #3
 801ce6c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ce70:	4301      	orrs	r1, r0
 801ce72:	1c58      	adds	r0, r3, #1
 801ce74:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ce78:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ce7c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801ce80:	4308      	orrs	r0, r1
 801ce82:	f8a9 0000 	strh.w	r0, [r9]
 801ce86:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ce88:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801ce8a:	441a      	add	r2, r3
 801ce8c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ce8e:	9225      	str	r2, [sp, #148]	@ 0x94
 801ce90:	f109 0902 	add.w	r9, r9, #2
 801ce94:	441d      	add	r5, r3
 801ce96:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ce9a:	e64d      	b.n	801cb38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801ce9c:	2800      	cmp	r0, #0
 801ce9e:	f43f aeed 	beq.w	801cc7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801cea2:	5c79      	ldrb	r1, [r7, r1]
 801cea4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cea8:	9109      	str	r1, [sp, #36]	@ 0x24
 801ceaa:	0e09      	lsrs	r1, r1, #24
 801ceac:	9111      	str	r1, [sp, #68]	@ 0x44
 801ceae:	e6e5      	b.n	801cc7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ceb0:	b01b      	add	sp, #108	@ 0x6c
 801ceb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ceb6:	bf00      	nop
 801ceb8:	fffff800 	.word	0xfffff800

0801cebc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801cebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cec0:	b085      	sub	sp, #20
 801cec2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801cec6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801ceca:	9103      	str	r1, [sp, #12]
 801cecc:	fb00 7406 	mla	r4, r0, r6, r7
 801ced0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801ced4:	2800      	cmp	r0, #0
 801ced6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801ceda:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801cede:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801cee2:	9501      	str	r5, [sp, #4]
 801cee4:	eb03 0904 	add.w	r9, r3, r4
 801cee8:	f2c0 8150 	blt.w	801d18c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ceec:	4583      	cmp	fp, r0
 801ceee:	f340 814d 	ble.w	801d18c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801cef2:	2f00      	cmp	r7, #0
 801cef4:	f2c0 8146 	blt.w	801d184 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801cef8:	42be      	cmp	r6, r7
 801cefa:	f340 8143 	ble.w	801d184 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801cefe:	f813 c004 	ldrb.w	ip, [r3, r4]
 801cf02:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801cf06:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cf0a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801cf0e:	4355      	muls	r5, r2
 801cf10:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cf14:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801cf18:	fb0c f203 	mul.w	r2, ip, r3
 801cf1c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cf20:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801cf24:	441d      	add	r5, r3
 801cf26:	f102 0320 	add.w	r3, r2, #32
 801cf2a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cf2e:	0a1b      	lsrs	r3, r3, #8
 801cf30:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801cf34:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cf38:	431c      	orrs	r4, r3
 801cf3a:	1c7b      	adds	r3, r7, #1
 801cf3c:	f100 812b 	bmi.w	801d196 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801cf40:	429e      	cmp	r6, r3
 801cf42:	f340 8128 	ble.w	801d196 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801cf46:	2900      	cmp	r1, #0
 801cf48:	f000 8128 	beq.w	801d19c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801cf4c:	9a01      	ldr	r2, [sp, #4]
 801cf4e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801cf52:	8855      	ldrh	r5, [r2, #2]
 801cf54:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801cf58:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801cf5c:	fb08 f802 	mul.w	r8, r8, r2
 801cf60:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cf64:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801cf68:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801cf6c:	435d      	muls	r5, r3
 801cf6e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cf72:	44d0      	add	r8, sl
 801cf74:	f105 0a20 	add.w	sl, r5, #32
 801cf78:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801cf7c:	0a2d      	lsrs	r5, r5, #8
 801cf7e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801cf82:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cf86:	432a      	orrs	r2, r5
 801cf88:	3001      	adds	r0, #1
 801cf8a:	f100 810d 	bmi.w	801d1a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801cf8e:	4583      	cmp	fp, r0
 801cf90:	f340 810a 	ble.w	801d1a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801cf94:	f1be 0f00 	cmp.w	lr, #0
 801cf98:	f000 810b 	beq.w	801d1b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801cf9c:	2f00      	cmp	r7, #0
 801cf9e:	f2c0 8100 	blt.w	801d1a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801cfa2:	42be      	cmp	r6, r7
 801cfa4:	f340 80fd 	ble.w	801d1a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801cfa8:	9801      	ldr	r0, [sp, #4]
 801cfaa:	f819 5006 	ldrb.w	r5, [r9, r6]
 801cfae:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801cfb2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801cfb6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801cfba:	fb0a fa00 	mul.w	sl, sl, r0
 801cfbe:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801cfc2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801cfc6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801cfca:	fb05 f808 	mul.w	r8, r5, r8
 801cfce:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801cfd2:	4482      	add	sl, r0
 801cfd4:	f108 0020 	add.w	r0, r8, #32
 801cfd8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cfdc:	0a00      	lsrs	r0, r0, #8
 801cfde:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801cfe2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cfe6:	ea4b 0b00 	orr.w	fp, fp, r0
 801cfea:	3701      	adds	r7, #1
 801cfec:	f100 80e6 	bmi.w	801d1bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801cff0:	42be      	cmp	r6, r7
 801cff2:	f340 80e3 	ble.w	801d1bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801cff6:	2900      	cmp	r1, #0
 801cff8:	f000 80e3 	beq.w	801d1c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801cffc:	3601      	adds	r6, #1
 801cffe:	9801      	ldr	r0, [sp, #4]
 801d000:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d004:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d008:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d00c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d010:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d014:	fb09 f906 	mul.w	r9, r9, r6
 801d018:	fb07 f800 	mul.w	r8, r7, r0
 801d01c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d020:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d024:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d028:	44d1      	add	r9, sl
 801d02a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d02e:	f108 0020 	add.w	r0, r8, #32
 801d032:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d036:	0a00      	lsrs	r0, r0, #8
 801d038:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d03c:	4330      	orrs	r0, r6
 801d03e:	b28e      	uxth	r6, r1
 801d040:	fa1f f98e 	uxth.w	r9, lr
 801d044:	fb06 f809 	mul.w	r8, r6, r9
 801d048:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d04c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d050:	0136      	lsls	r6, r6, #4
 801d052:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d056:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d05a:	9601      	str	r6, [sp, #4]
 801d05c:	ea4a 0404 	orr.w	r4, sl, r4
 801d060:	fa1f f689 	uxth.w	r6, r9
 801d064:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d068:	fb11 f90e 	smulbb	r9, r1, lr
 801d06c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d070:	9602      	str	r6, [sp, #8]
 801d072:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d076:	4626      	mov	r6, r4
 801d078:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d07c:	f1ce 0410 	rsb	r4, lr, #16
 801d080:	1a64      	subs	r4, r4, r1
 801d082:	ea4a 0202 	orr.w	r2, sl, r2
 801d086:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d08a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d08e:	434a      	muls	r2, r1
 801d090:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d094:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d098:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d09c:	fb04 2406 	mla	r4, r4, r6, r2
 801d0a0:	ea4a 0000 	orr.w	r0, sl, r0
 801d0a4:	fb09 4200 	mla	r2, r9, r0, r4
 801d0a8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d0ac:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d0b0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d0b4:	ea44 0b0b 	orr.w	fp, r4, fp
 801d0b8:	9c01      	ldr	r4, [sp, #4]
 801d0ba:	9e02      	ldr	r6, [sp, #8]
 801d0bc:	9903      	ldr	r1, [sp, #12]
 801d0be:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801d0c2:	1ba4      	subs	r4, r4, r6
 801d0c4:	9e01      	ldr	r6, [sp, #4]
 801d0c6:	8808      	ldrh	r0, [r1, #0]
 801d0c8:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801d0cc:	eba6 0608 	sub.w	r6, r6, r8
 801d0d0:	b2b6      	uxth	r6, r6
 801d0d2:	b2a4      	uxth	r4, r4
 801d0d4:	4373      	muls	r3, r6
 801d0d6:	fb0c 3304 	mla	r3, ip, r4, r3
 801d0da:	9c02      	ldr	r4, [sp, #8]
 801d0dc:	fb04 3505 	mla	r5, r4, r5, r3
 801d0e0:	fb08 5707 	mla	r7, r8, r7, r5
 801d0e4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d0e8:	b289      	uxth	r1, r1
 801d0ea:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d0ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d0f2:	434f      	muls	r7, r1
 801d0f4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d0f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d0fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d100:	1c7b      	adds	r3, r7, #1
 801d102:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d106:	ea42 0e0e 	orr.w	lr, r2, lr
 801d10a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d10e:	fa1f f28e 	uxth.w	r2, lr
 801d112:	1203      	asrs	r3, r0, #8
 801d114:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801d118:	b2ff      	uxtb	r7, r7
 801d11a:	1215      	asrs	r5, r2, #8
 801d11c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d120:	fb13 f307 	smulbb	r3, r3, r7
 801d124:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d128:	fb05 3501 	mla	r5, r5, r1, r3
 801d12c:	10c3      	asrs	r3, r0, #3
 801d12e:	10d4      	asrs	r4, r2, #3
 801d130:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d134:	fb13 f307 	smulbb	r3, r3, r7
 801d138:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801d13c:	fb04 3401 	mla	r4, r4, r1, r3
 801d140:	00c3      	lsls	r3, r0, #3
 801d142:	00d2      	lsls	r2, r2, #3
 801d144:	b2db      	uxtb	r3, r3
 801d146:	fb13 f307 	smulbb	r3, r3, r7
 801d14a:	b2d2      	uxtb	r2, r2
 801d14c:	fb02 3101 	mla	r1, r2, r1, r3
 801d150:	b2ad      	uxth	r5, r5
 801d152:	b289      	uxth	r1, r1
 801d154:	b2a4      	uxth	r4, r4
 801d156:	1c6b      	adds	r3, r5, #1
 801d158:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d15c:	1c62      	adds	r2, r4, #1
 801d15e:	1c4b      	adds	r3, r1, #1
 801d160:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d164:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d168:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d16c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d170:	0964      	lsrs	r4, r4, #5
 801d172:	432b      	orrs	r3, r5
 801d174:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d178:	9a03      	ldr	r2, [sp, #12]
 801d17a:	4323      	orrs	r3, r4
 801d17c:	8013      	strh	r3, [r2, #0]
 801d17e:	b005      	add	sp, #20
 801d180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d184:	f04f 0c00 	mov.w	ip, #0
 801d188:	4664      	mov	r4, ip
 801d18a:	e6d6      	b.n	801cf3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801d18c:	2300      	movs	r3, #0
 801d18e:	469c      	mov	ip, r3
 801d190:	461a      	mov	r2, r3
 801d192:	461c      	mov	r4, r3
 801d194:	e6f8      	b.n	801cf88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d196:	2300      	movs	r3, #0
 801d198:	461a      	mov	r2, r3
 801d19a:	e6f5      	b.n	801cf88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d19c:	460b      	mov	r3, r1
 801d19e:	460a      	mov	r2, r1
 801d1a0:	e6f2      	b.n	801cf88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d1a2:	2500      	movs	r5, #0
 801d1a4:	46ab      	mov	fp, r5
 801d1a6:	e720      	b.n	801cfea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801d1a8:	2700      	movs	r7, #0
 801d1aa:	463d      	mov	r5, r7
 801d1ac:	4638      	mov	r0, r7
 801d1ae:	46bb      	mov	fp, r7
 801d1b0:	e745      	b.n	801d03e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d1b2:	4677      	mov	r7, lr
 801d1b4:	4675      	mov	r5, lr
 801d1b6:	4670      	mov	r0, lr
 801d1b8:	46f3      	mov	fp, lr
 801d1ba:	e740      	b.n	801d03e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d1bc:	2700      	movs	r7, #0
 801d1be:	4638      	mov	r0, r7
 801d1c0:	e73d      	b.n	801d03e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d1c2:	460f      	mov	r7, r1
 801d1c4:	4608      	mov	r0, r1
 801d1c6:	e73a      	b.n	801d03e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801d1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d1c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1cc:	b097      	sub	sp, #92	@ 0x5c
 801d1ce:	9214      	str	r2, [sp, #80]	@ 0x50
 801d1d0:	9308      	str	r3, [sp, #32]
 801d1d2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d1d4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801d1d8:	9312      	str	r3, [sp, #72]	@ 0x48
 801d1da:	9111      	str	r1, [sp, #68]	@ 0x44
 801d1dc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801d1e0:	9015      	str	r0, [sp, #84]	@ 0x54
 801d1e2:	6850      	ldr	r0, [r2, #4]
 801d1e4:	6812      	ldr	r2, [r2, #0]
 801d1e6:	fb00 1303 	mla	r3, r0, r3, r1
 801d1ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d1ee:	9309      	str	r3, [sp, #36]	@ 0x24
 801d1f0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d1f2:	681b      	ldr	r3, [r3, #0]
 801d1f4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d1f6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d1f8:	685b      	ldr	r3, [r3, #4]
 801d1fa:	930c      	str	r3, [sp, #48]	@ 0x30
 801d1fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801d200:	930a      	str	r3, [sp, #40]	@ 0x28
 801d202:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d204:	2b00      	cmp	r3, #0
 801d206:	dc03      	bgt.n	801d210 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d208:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d20a:	2b00      	cmp	r3, #0
 801d20c:	f340 83cb 	ble.w	801d9a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801d210:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d212:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d216:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d21a:	1e48      	subs	r0, r1, #1
 801d21c:	1e55      	subs	r5, r2, #1
 801d21e:	9b08      	ldr	r3, [sp, #32]
 801d220:	2b00      	cmp	r3, #0
 801d222:	f340 81a3 	ble.w	801d56c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801d226:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801d228:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d22a:	1436      	asrs	r6, r6, #16
 801d22c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d230:	d406      	bmi.n	801d240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d232:	4286      	cmp	r6, r0
 801d234:	da04      	bge.n	801d240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d236:	2b00      	cmp	r3, #0
 801d238:	db02      	blt.n	801d240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d23a:	42ab      	cmp	r3, r5
 801d23c:	f2c0 8197 	blt.w	801d56e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801d240:	3601      	adds	r6, #1
 801d242:	f100 8184 	bmi.w	801d54e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d246:	42b1      	cmp	r1, r6
 801d248:	f2c0 8181 	blt.w	801d54e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d24c:	3301      	adds	r3, #1
 801d24e:	f100 817e 	bmi.w	801d54e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d252:	429a      	cmp	r2, r3
 801d254:	f2c0 817b 	blt.w	801d54e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d258:	9b08      	ldr	r3, [sp, #32]
 801d25a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801d25c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d25e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d262:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d264:	2b00      	cmp	r3, #0
 801d266:	f340 81a4 	ble.w	801d5b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d26a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d26c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801d26e:	1418      	asrs	r0, r3, #16
 801d270:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d272:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d276:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d278:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d27c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d27e:	142d      	asrs	r5, r5, #16
 801d280:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d284:	f100 81f8 	bmi.w	801d678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d288:	f102 3eff 	add.w	lr, r2, #4294967295
 801d28c:	4575      	cmp	r5, lr
 801d28e:	f280 81f3 	bge.w	801d678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d292:	2800      	cmp	r0, #0
 801d294:	f2c0 81f0 	blt.w	801d678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d298:	f103 3eff 	add.w	lr, r3, #4294967295
 801d29c:	4570      	cmp	r0, lr
 801d29e:	f280 81eb 	bge.w	801d678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d2a2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d2a4:	b212      	sxth	r2, r2
 801d2a6:	fb00 5002 	mla	r0, r0, r2, r5
 801d2aa:	fa1f fe81 	uxth.w	lr, r1
 801d2ae:	eb03 0a00 	add.w	sl, r3, r0
 801d2b2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d2b6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d2ba:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d2be:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801d2c2:	b29b      	uxth	r3, r3
 801d2c4:	f1bc 0f00 	cmp.w	ip, #0
 801d2c8:	f000 81b9 	beq.w	801d63e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801d2cc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d2d0:	940d      	str	r4, [sp, #52]	@ 0x34
 801d2d2:	eb0a 0b02 	add.w	fp, sl, r2
 801d2d6:	fa1f fa8c 	uxth.w	sl, ip
 801d2da:	fb0a fe0e 	mul.w	lr, sl, lr
 801d2de:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d2e2:	fa1f fa8a 	uxth.w	sl, sl
 801d2e6:	eba5 050e 	sub.w	r5, r5, lr
 801d2ea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d2ee:	940e      	str	r4, [sp, #56]	@ 0x38
 801d2f0:	eba3 030a 	sub.w	r3, r3, sl
 801d2f4:	b2ad      	uxth	r5, r5
 801d2f6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d2f8:	b29b      	uxth	r3, r3
 801d2fa:	fb08 f505 	mul.w	r5, r8, r5
 801d2fe:	fb09 5303 	mla	r3, r9, r3, r5
 801d302:	fb0a 3304 	mla	r3, sl, r4, r3
 801d306:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d308:	fb0e 3304 	mla	r3, lr, r4, r3
 801d30c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d310:	2b00      	cmp	r3, #0
 801d312:	f000 810f 	beq.w	801d534 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d316:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d318:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d31c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d320:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d324:	f000 8190 	beq.w	801d648 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801d328:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d32c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d330:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d334:	fb09 f000 	mul.w	r0, r9, r0
 801d338:	fb0a fe0e 	mul.w	lr, sl, lr
 801d33c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d340:	f100 0b20 	add.w	fp, r0, #32
 801d344:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d348:	44ce      	add	lr, r9
 801d34a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d34e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d352:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d356:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d35a:	ea4e 0909 	orr.w	r9, lr, r9
 801d35e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d362:	8868      	ldrh	r0, [r5, #2]
 801d364:	d019      	beq.n	801d39a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d366:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d36a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d36e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d372:	fb08 f800 	mul.w	r8, r8, r0
 801d376:	fb0a fe0e 	mul.w	lr, sl, lr
 801d37a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d37e:	f108 0b20 	add.w	fp, r8, #32
 801d382:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d386:	4486      	add	lr, r0
 801d388:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d38c:	0a00      	lsrs	r0, r0, #8
 801d38e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d392:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d396:	ea4e 0000 	orr.w	r0, lr, r0
 801d39a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d39e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d3a2:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d3a6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d3aa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d3ae:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d3b2:	ea4e 0909 	orr.w	r9, lr, r9
 801d3b6:	ea4a 0000 	orr.w	r0, sl, r0
 801d3ba:	f1bc 0f00 	cmp.w	ip, #0
 801d3be:	f000 8145 	beq.w	801d64c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801d3c2:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d3c6:	3a01      	subs	r2, #1
 801d3c8:	0052      	lsls	r2, r2, #1
 801d3ca:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d3cc:	3202      	adds	r2, #2
 801d3ce:	2cff      	cmp	r4, #255	@ 0xff
 801d3d0:	eb05 0e02 	add.w	lr, r5, r2
 801d3d4:	5aaa      	ldrh	r2, [r5, r2]
 801d3d6:	d018      	beq.n	801d40a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d3d8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d3dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d3e0:	fb04 fa02 	mul.w	sl, r4, r2
 801d3e4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d3e8:	fb08 f805 	mul.w	r8, r8, r5
 801d3ec:	f10a 0520 	add.w	r5, sl, #32
 801d3f0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d3f4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d3f8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d3fc:	4442      	add	r2, r8
 801d3fe:	0a2d      	lsrs	r5, r5, #8
 801d400:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d404:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d408:	432a      	orrs	r2, r5
 801d40a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d40c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d410:	2cff      	cmp	r4, #255	@ 0xff
 801d412:	d01a      	beq.n	801d44a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801d414:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d418:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d41c:	fb04 fa05 	mul.w	sl, r4, r5
 801d420:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d424:	fb08 f80e 	mul.w	r8, r8, lr
 801d428:	f10a 0e20 	add.w	lr, sl, #32
 801d42c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d430:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d434:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d438:	4445      	add	r5, r8
 801d43a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d43e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d442:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d446:	ea45 050e 	orr.w	r5, r5, lr
 801d44a:	fb1c fe01 	smulbb	lr, ip, r1
 801d44e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d452:	f1cc 0810 	rsb	r8, ip, #16
 801d456:	eba8 0801 	sub.w	r8, r8, r1
 801d45a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d45e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d462:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d466:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d46a:	4341      	muls	r1, r0
 801d46c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d470:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d474:	ea4a 0202 	orr.w	r2, sl, r2
 801d478:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d47c:	fb09 1108 	mla	r1, r9, r8, r1
 801d480:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d484:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d488:	fb0c 1102 	mla	r1, ip, r2, r1
 801d48c:	ea4b 0505 	orr.w	r5, fp, r5
 801d490:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d494:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d498:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d49c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d4a0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d4a4:	ea42 0e0e 	orr.w	lr, r2, lr
 801d4a8:	fa1f f28e 	uxth.w	r2, lr
 801d4ac:	2bff      	cmp	r3, #255	@ 0xff
 801d4ae:	d103      	bne.n	801d4b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d4b0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d4b2:	29ff      	cmp	r1, #255	@ 0xff
 801d4b4:	f000 80de 	beq.w	801d674 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801d4b8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801d4ba:	8838      	ldrh	r0, [r7, #0]
 801d4bc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d4be:	434b      	muls	r3, r1
 801d4c0:	f103 0c01 	add.w	ip, r3, #1
 801d4c4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801d4c8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d4cc:	fa5f fc83 	uxtb.w	ip, r3
 801d4d0:	1203      	asrs	r3, r0, #8
 801d4d2:	1215      	asrs	r5, r2, #8
 801d4d4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d4d8:	fb13 f30c 	smulbb	r3, r3, ip
 801d4dc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d4e0:	fb05 3501 	mla	r5, r5, r1, r3
 801d4e4:	10c3      	asrs	r3, r0, #3
 801d4e6:	10d1      	asrs	r1, r2, #3
 801d4e8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d4ec:	fb13 f30c 	smulbb	r3, r3, ip
 801d4f0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d4f4:	fb01 3104 	mla	r1, r1, r4, r3
 801d4f8:	00c3      	lsls	r3, r0, #3
 801d4fa:	00d2      	lsls	r2, r2, #3
 801d4fc:	b2db      	uxtb	r3, r3
 801d4fe:	b2d2      	uxtb	r2, r2
 801d500:	fb13 f30c 	smulbb	r3, r3, ip
 801d504:	b2ad      	uxth	r5, r5
 801d506:	fb02 3304 	mla	r3, r2, r4, r3
 801d50a:	b29a      	uxth	r2, r3
 801d50c:	1c6b      	adds	r3, r5, #1
 801d50e:	b289      	uxth	r1, r1
 801d510:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d514:	1c53      	adds	r3, r2, #1
 801d516:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d51a:	1c4a      	adds	r2, r1, #1
 801d51c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d520:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d524:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d528:	0949      	lsrs	r1, r1, #5
 801d52a:	432b      	orrs	r3, r5
 801d52c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d530:	430b      	orrs	r3, r1
 801d532:	803b      	strh	r3, [r7, #0]
 801d534:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d536:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d538:	4413      	add	r3, r2
 801d53a:	9321      	str	r3, [sp, #132]	@ 0x84
 801d53c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d53e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d540:	441a      	add	r2, r3
 801d542:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d544:	9222      	str	r2, [sp, #136]	@ 0x88
 801d546:	3b01      	subs	r3, #1
 801d548:	3702      	adds	r7, #2
 801d54a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d54c:	e689      	b.n	801d262 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d54e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d550:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801d552:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801d554:	4433      	add	r3, r6
 801d556:	9321      	str	r3, [sp, #132]	@ 0x84
 801d558:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d55a:	441c      	add	r4, r3
 801d55c:	9b08      	ldr	r3, [sp, #32]
 801d55e:	9422      	str	r4, [sp, #136]	@ 0x88
 801d560:	3b01      	subs	r3, #1
 801d562:	9308      	str	r3, [sp, #32]
 801d564:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d566:	3302      	adds	r3, #2
 801d568:	9309      	str	r3, [sp, #36]	@ 0x24
 801d56a:	e658      	b.n	801d21e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801d56c:	d028      	beq.n	801d5c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d56e:	9b08      	ldr	r3, [sp, #32]
 801d570:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801d572:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801d574:	3b01      	subs	r3, #1
 801d576:	fb00 5003 	mla	r0, r0, r3, r5
 801d57a:	1400      	asrs	r0, r0, #16
 801d57c:	f53f ae6c 	bmi.w	801d258 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d580:	3901      	subs	r1, #1
 801d582:	4288      	cmp	r0, r1
 801d584:	f6bf ae68 	bge.w	801d258 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d588:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801d58a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801d58c:	fb01 0303 	mla	r3, r1, r3, r0
 801d590:	141b      	asrs	r3, r3, #16
 801d592:	f53f ae61 	bmi.w	801d258 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d596:	3a01      	subs	r2, #1
 801d598:	4293      	cmp	r3, r2
 801d59a:	f6bf ae5d 	bge.w	801d258 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d59e:	9b08      	ldr	r3, [sp, #32]
 801d5a0:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801d5a4:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d5a6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d5aa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d5ac:	2b00      	cmp	r3, #0
 801d5ae:	f300 8082 	bgt.w	801d6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801d5b2:	9b08      	ldr	r3, [sp, #32]
 801d5b4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d5b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d5ba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d5be:	9309      	str	r3, [sp, #36]	@ 0x24
 801d5c0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d5c2:	2b00      	cmp	r3, #0
 801d5c4:	f340 81ef 	ble.w	801d9a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801d5c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d5cc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d5d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d5d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d5da:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d5de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d5e2:	eef0 6a62 	vmov.f32	s13, s5
 801d5e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d5ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d5ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d5f2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801d5f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d5fa:	eef0 6a43 	vmov.f32	s13, s6
 801d5fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d602:	ee12 2a90 	vmov	r2, s5
 801d606:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d60a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d60e:	ee13 2a10 	vmov	r2, s6
 801d612:	9323      	str	r3, [sp, #140]	@ 0x8c
 801d614:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d616:	fb92 f3f3 	sdiv	r3, r2, r3
 801d61a:	9324      	str	r3, [sp, #144]	@ 0x90
 801d61c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d61e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d620:	3b01      	subs	r3, #1
 801d622:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d626:	9311      	str	r3, [sp, #68]	@ 0x44
 801d628:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d62a:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801d62e:	bf08      	it	eq
 801d630:	4613      	moveq	r3, r2
 801d632:	9308      	str	r3, [sp, #32]
 801d634:	eeb0 3a67 	vmov.f32	s6, s15
 801d638:	eef0 2a47 	vmov.f32	s5, s14
 801d63c:	e5e1      	b.n	801d202 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d63e:	fb08 f505 	mul.w	r5, r8, r5
 801d642:	fb09 5303 	mla	r3, r9, r3, r5
 801d646:	e661      	b.n	801d30c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801d648:	4681      	mov	r9, r0
 801d64a:	e688      	b.n	801d35e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d64c:	f1c1 0210 	rsb	r2, r1, #16
 801d650:	4341      	muls	r1, r0
 801d652:	fb09 1902 	mla	r9, r9, r2, r1
 801d656:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d65a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d65e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d662:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d666:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d66a:	ea42 0909 	orr.w	r9, r2, r9
 801d66e:	fa1f f289 	uxth.w	r2, r9
 801d672:	e71b      	b.n	801d4ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d674:	803a      	strh	r2, [r7, #0]
 801d676:	e75d      	b.n	801d534 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d678:	f115 0e01 	adds.w	lr, r5, #1
 801d67c:	f53f af5a 	bmi.w	801d534 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d680:	4572      	cmp	r2, lr
 801d682:	f6ff af57 	blt.w	801d534 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d686:	f110 0e01 	adds.w	lr, r0, #1
 801d68a:	f53f af53 	bmi.w	801d534 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d68e:	4573      	cmp	r3, lr
 801d690:	f6ff af50 	blt.w	801d534 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d694:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d696:	9502      	str	r5, [sp, #8]
 801d698:	b21b      	sxth	r3, r3
 801d69a:	b212      	sxth	r2, r2
 801d69c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801d6a0:	9301      	str	r3, [sp, #4]
 801d6a2:	9200      	str	r2, [sp, #0]
 801d6a4:	e9cd c405 	strd	ip, r4, [sp, #20]
 801d6a8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801d6ac:	4639      	mov	r1, r7
 801d6ae:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801d6b0:	f7ff fc04 	bl	801cebc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801d6b4:	e73e      	b.n	801d534 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d6b6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d6b8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d6bc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d6be:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d6c2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d6c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d6c8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d6ca:	141f      	asrs	r7, r3, #16
 801d6cc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d6ce:	141b      	asrs	r3, r3, #16
 801d6d0:	fb01 3707 	mla	r7, r1, r7, r3
 801d6d4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d6d6:	fa1f fc82 	uxth.w	ip, r2
 801d6da:	eb03 0a07 	add.w	sl, r3, r7
 801d6de:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d6e2:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d6e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d6ea:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d6ee:	b29b      	uxth	r3, r3
 801d6f0:	2d00      	cmp	r5, #0
 801d6f2:	f000 813d 	beq.w	801d970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801d6f6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d6fa:	940f      	str	r4, [sp, #60]	@ 0x3c
 801d6fc:	eb0a 0b01 	add.w	fp, sl, r1
 801d700:	fa1f fa85 	uxth.w	sl, r5
 801d704:	fb0a fc0c 	mul.w	ip, sl, ip
 801d708:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d70c:	fa1f fa8a 	uxth.w	sl, sl
 801d710:	eba0 000c 	sub.w	r0, r0, ip
 801d714:	eba3 030a 	sub.w	r3, r3, sl
 801d718:	b280      	uxth	r0, r0
 801d71a:	fb08 f000 	mul.w	r0, r8, r0
 801d71e:	b29b      	uxth	r3, r3
 801d720:	fb09 0303 	mla	r3, r9, r3, r0
 801d724:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d726:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d72a:	9410      	str	r4, [sp, #64]	@ 0x40
 801d72c:	fb0a 3300 	mla	r3, sl, r0, r3
 801d730:	fb0c 3304 	mla	r3, ip, r4, r3
 801d734:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d738:	2b00      	cmp	r3, #0
 801d73a:	f000 810b 	beq.w	801d954 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d73e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801d740:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d742:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d746:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d74a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d74e:	f000 8114 	beq.w	801d97a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801d752:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d756:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d75a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d75e:	fb09 f707 	mul.w	r7, r9, r7
 801d762:	fb0a fc0c 	mul.w	ip, sl, ip
 801d766:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d76a:	f107 0b20 	add.w	fp, r7, #32
 801d76e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d772:	44cc      	add	ip, r9
 801d774:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d778:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d77c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d780:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d784:	ea4c 0909 	orr.w	r9, ip, r9
 801d788:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d78c:	8847      	ldrh	r7, [r0, #2]
 801d78e:	d019      	beq.n	801d7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801d790:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d794:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d798:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d79c:	fb08 f807 	mul.w	r8, r8, r7
 801d7a0:	fb0a fc0c 	mul.w	ip, sl, ip
 801d7a4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d7a8:	f108 0b20 	add.w	fp, r8, #32
 801d7ac:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d7b0:	44bc      	add	ip, r7
 801d7b2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d7b6:	0a3f      	lsrs	r7, r7, #8
 801d7b8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d7bc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d7c0:	ea4c 0707 	orr.w	r7, ip, r7
 801d7c4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d7c8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d7cc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d7d0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d7d4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d7d8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d7dc:	ea4c 0909 	orr.w	r9, ip, r9
 801d7e0:	ea4a 0707 	orr.w	r7, sl, r7
 801d7e4:	2d00      	cmp	r5, #0
 801d7e6:	f000 80ca 	beq.w	801d97e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801d7ea:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d7ee:	3901      	subs	r1, #1
 801d7f0:	0049      	lsls	r1, r1, #1
 801d7f2:	3102      	adds	r1, #2
 801d7f4:	eb00 0c01 	add.w	ip, r0, r1
 801d7f8:	5a41      	ldrh	r1, [r0, r1]
 801d7fa:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d7fc:	28ff      	cmp	r0, #255	@ 0xff
 801d7fe:	d019      	beq.n	801d834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801d800:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d802:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d806:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d80a:	fb04 fa01 	mul.w	sl, r4, r1
 801d80e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d812:	fb08 f800 	mul.w	r8, r8, r0
 801d816:	f10a 0020 	add.w	r0, sl, #32
 801d81a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d81e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d822:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d826:	4441      	add	r1, r8
 801d828:	0a00      	lsrs	r0, r0, #8
 801d82a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d82e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d832:	4301      	orrs	r1, r0
 801d834:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d836:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d83a:	2cff      	cmp	r4, #255	@ 0xff
 801d83c:	d01a      	beq.n	801d874 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801d83e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d842:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d846:	fb04 fa00 	mul.w	sl, r4, r0
 801d84a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d84e:	fb08 f80c 	mul.w	r8, r8, ip
 801d852:	f10a 0c20 	add.w	ip, sl, #32
 801d856:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d85a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d85e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d862:	4440      	add	r0, r8
 801d864:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d868:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d86c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d870:	ea40 000c 	orr.w	r0, r0, ip
 801d874:	fb15 fc02 	smulbb	ip, r5, r2
 801d878:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d87c:	f1c5 0810 	rsb	r8, r5, #16
 801d880:	eba8 0802 	sub.w	r8, r8, r2
 801d884:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d888:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d88c:	437a      	muls	r2, r7
 801d88e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d892:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d896:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d89a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d89e:	fb09 2208 	mla	r2, r9, r8, r2
 801d8a2:	ea4a 0101 	orr.w	r1, sl, r1
 801d8a6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d8aa:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d8ae:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d8b2:	fb05 2201 	mla	r2, r5, r1, r2
 801d8b6:	ea4b 0000 	orr.w	r0, fp, r0
 801d8ba:	fb0c 2200 	mla	r2, ip, r0, r2
 801d8be:	0d57      	lsrs	r7, r2, #21
 801d8c0:	0952      	lsrs	r2, r2, #5
 801d8c2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d8c6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d8ca:	433a      	orrs	r2, r7
 801d8cc:	2bff      	cmp	r3, #255	@ 0xff
 801d8ce:	b292      	uxth	r2, r2
 801d8d0:	d102      	bne.n	801d8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d8d2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d8d4:	29ff      	cmp	r1, #255	@ 0xff
 801d8d6:	d063      	beq.n	801d9a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801d8d8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801d8da:	f8be 1000 	ldrh.w	r1, [lr]
 801d8de:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d8e0:	4343      	muls	r3, r0
 801d8e2:	1c58      	adds	r0, r3, #1
 801d8e4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801d8e8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d8ec:	1208      	asrs	r0, r1, #8
 801d8ee:	b2db      	uxtb	r3, r3
 801d8f0:	1215      	asrs	r5, r2, #8
 801d8f2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d8f6:	fb10 f003 	smulbb	r0, r0, r3
 801d8fa:	10cf      	asrs	r7, r1, #3
 801d8fc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d900:	00c9      	lsls	r1, r1, #3
 801d902:	fb05 0504 	mla	r5, r5, r4, r0
 801d906:	b2c9      	uxtb	r1, r1
 801d908:	10d0      	asrs	r0, r2, #3
 801d90a:	00d2      	lsls	r2, r2, #3
 801d90c:	fb11 f103 	smulbb	r1, r1, r3
 801d910:	b2d2      	uxtb	r2, r2
 801d912:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d916:	fb02 1204 	mla	r2, r2, r4, r1
 801d91a:	fb17 f703 	smulbb	r7, r7, r3
 801d91e:	b2ad      	uxth	r5, r5
 801d920:	b292      	uxth	r2, r2
 801d922:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d926:	fb00 7004 	mla	r0, r0, r4, r7
 801d92a:	1c6b      	adds	r3, r5, #1
 801d92c:	1c57      	adds	r7, r2, #1
 801d92e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d932:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d936:	b280      	uxth	r0, r0
 801d938:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d93c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d940:	433d      	orrs	r5, r7
 801d942:	1c47      	adds	r7, r0, #1
 801d944:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d948:	097f      	lsrs	r7, r7, #5
 801d94a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d94e:	433d      	orrs	r5, r7
 801d950:	f8ae 5000 	strh.w	r5, [lr]
 801d954:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d956:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d958:	4413      	add	r3, r2
 801d95a:	9321      	str	r3, [sp, #132]	@ 0x84
 801d95c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d95e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d960:	441a      	add	r2, r3
 801d962:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d964:	9222      	str	r2, [sp, #136]	@ 0x88
 801d966:	3b01      	subs	r3, #1
 801d968:	f10e 0e02 	add.w	lr, lr, #2
 801d96c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d96e:	e61c      	b.n	801d5aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801d970:	fb08 f000 	mul.w	r0, r8, r0
 801d974:	fb09 0303 	mla	r3, r9, r3, r0
 801d978:	e6dc      	b.n	801d734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801d97a:	46b9      	mov	r9, r7
 801d97c:	e704      	b.n	801d788 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801d97e:	f1c2 0110 	rsb	r1, r2, #16
 801d982:	437a      	muls	r2, r7
 801d984:	fb09 2901 	mla	r9, r9, r1, r2
 801d988:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d98c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d990:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d994:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d998:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d99c:	4302      	orrs	r2, r0
 801d99e:	e795      	b.n	801d8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801d9a0:	f8ae 2000 	strh.w	r2, [lr]
 801d9a4:	e7d6      	b.n	801d954 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d9a6:	b017      	add	sp, #92	@ 0x5c
 801d9a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d9ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d9ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9b0:	b085      	sub	sp, #20
 801d9b2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801d9b6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801d9ba:	9103      	str	r1, [sp, #12]
 801d9bc:	fb00 7406 	mla	r4, r0, r6, r7
 801d9c0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801d9c4:	2800      	cmp	r0, #0
 801d9c6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801d9ca:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801d9ce:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801d9d2:	9501      	str	r5, [sp, #4]
 801d9d4:	eb02 0904 	add.w	r9, r2, r4
 801d9d8:	f2c0 8141 	blt.w	801dc5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d9dc:	4583      	cmp	fp, r0
 801d9de:	f340 813e 	ble.w	801dc5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d9e2:	2f00      	cmp	r7, #0
 801d9e4:	f2c0 8137 	blt.w	801dc56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d9e8:	42be      	cmp	r6, r7
 801d9ea:	f340 8134 	ble.w	801dc56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d9ee:	f812 c004 	ldrb.w	ip, [r2, r4]
 801d9f2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801d9f6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d9fa:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801d9fe:	4355      	muls	r5, r2
 801da00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801da04:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801da08:	fb0c f203 	mul.w	r2, ip, r3
 801da0c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801da10:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801da14:	441d      	add	r5, r3
 801da16:	f102 0320 	add.w	r3, r2, #32
 801da1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801da1e:	0a1b      	lsrs	r3, r3, #8
 801da20:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801da24:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801da28:	431c      	orrs	r4, r3
 801da2a:	1c7b      	adds	r3, r7, #1
 801da2c:	f100 811c 	bmi.w	801dc68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801da30:	429e      	cmp	r6, r3
 801da32:	f340 8119 	ble.w	801dc68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801da36:	2900      	cmp	r1, #0
 801da38:	f000 8119 	beq.w	801dc6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801da3c:	9a01      	ldr	r2, [sp, #4]
 801da3e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801da42:	8855      	ldrh	r5, [r2, #2]
 801da44:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801da48:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801da4c:	fb08 f802 	mul.w	r8, r8, r2
 801da50:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801da54:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801da58:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801da5c:	435d      	muls	r5, r3
 801da5e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801da62:	44d0      	add	r8, sl
 801da64:	f105 0a20 	add.w	sl, r5, #32
 801da68:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801da6c:	0a2d      	lsrs	r5, r5, #8
 801da6e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801da72:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801da76:	432a      	orrs	r2, r5
 801da78:	3001      	adds	r0, #1
 801da7a:	f100 80fe 	bmi.w	801dc7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801da7e:	4583      	cmp	fp, r0
 801da80:	f340 80fb 	ble.w	801dc7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801da84:	f1be 0f00 	cmp.w	lr, #0
 801da88:	f000 80fc 	beq.w	801dc84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801da8c:	2f00      	cmp	r7, #0
 801da8e:	f2c0 80f1 	blt.w	801dc74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801da92:	42be      	cmp	r6, r7
 801da94:	f340 80ee 	ble.w	801dc74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801da98:	9801      	ldr	r0, [sp, #4]
 801da9a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801da9e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801daa2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801daa6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801daaa:	fb0a fa00 	mul.w	sl, sl, r0
 801daae:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801dab2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801dab6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801daba:	fb05 f808 	mul.w	r8, r5, r8
 801dabe:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801dac2:	4482      	add	sl, r0
 801dac4:	f108 0020 	add.w	r0, r8, #32
 801dac8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801dacc:	0a00      	lsrs	r0, r0, #8
 801dace:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801dad2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dad6:	ea4b 0b00 	orr.w	fp, fp, r0
 801dada:	3701      	adds	r7, #1
 801dadc:	f100 80d7 	bmi.w	801dc8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801dae0:	42be      	cmp	r6, r7
 801dae2:	f340 80d4 	ble.w	801dc8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801dae6:	2900      	cmp	r1, #0
 801dae8:	f000 80d4 	beq.w	801dc94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801daec:	3601      	adds	r6, #1
 801daee:	9801      	ldr	r0, [sp, #4]
 801daf0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801daf4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801daf8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801dafc:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801db00:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801db04:	fb09 f906 	mul.w	r9, r9, r6
 801db08:	fb07 f800 	mul.w	r8, r7, r0
 801db0c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801db10:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801db14:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801db18:	44d1      	add	r9, sl
 801db1a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801db1e:	f108 0020 	add.w	r0, r8, #32
 801db22:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801db26:	0a00      	lsrs	r0, r0, #8
 801db28:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801db2c:	4330      	orrs	r0, r6
 801db2e:	b28e      	uxth	r6, r1
 801db30:	fa1f f98e 	uxth.w	r9, lr
 801db34:	fb06 f809 	mul.w	r8, r6, r9
 801db38:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801db3c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801db40:	0136      	lsls	r6, r6, #4
 801db42:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801db46:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801db4a:	9601      	str	r6, [sp, #4]
 801db4c:	ea4a 0404 	orr.w	r4, sl, r4
 801db50:	fa1f f689 	uxth.w	r6, r9
 801db54:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801db58:	fb11 f90e 	smulbb	r9, r1, lr
 801db5c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801db60:	9602      	str	r6, [sp, #8]
 801db62:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801db66:	4626      	mov	r6, r4
 801db68:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801db6c:	f1ce 0410 	rsb	r4, lr, #16
 801db70:	1a64      	subs	r4, r4, r1
 801db72:	ea4a 0202 	orr.w	r2, sl, r2
 801db76:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801db7a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801db7e:	434a      	muls	r2, r1
 801db80:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801db84:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801db88:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801db8c:	fb04 2406 	mla	r4, r4, r6, r2
 801db90:	ea4a 0000 	orr.w	r0, sl, r0
 801db94:	fb09 4200 	mla	r2, r9, r0, r4
 801db98:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801db9c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801dba0:	9801      	ldr	r0, [sp, #4]
 801dba2:	9903      	ldr	r1, [sp, #12]
 801dba4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801dba8:	ea44 0b0b 	orr.w	fp, r4, fp
 801dbac:	9c02      	ldr	r4, [sp, #8]
 801dbae:	8809      	ldrh	r1, [r1, #0]
 801dbb0:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801dbb4:	1b00      	subs	r0, r0, r4
 801dbb6:	9c01      	ldr	r4, [sp, #4]
 801dbb8:	eba4 0608 	sub.w	r6, r4, r8
 801dbbc:	b2b6      	uxth	r6, r6
 801dbbe:	b280      	uxth	r0, r0
 801dbc0:	4373      	muls	r3, r6
 801dbc2:	fb0c 3300 	mla	r3, ip, r0, r3
 801dbc6:	9802      	ldr	r0, [sp, #8]
 801dbc8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801dbcc:	fb00 3505 	mla	r5, r0, r5, r3
 801dbd0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801dbd4:	fb08 5707 	mla	r7, r8, r7, r5
 801dbd8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801dbdc:	120b      	asrs	r3, r1, #8
 801dbde:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801dbe2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801dbe6:	b2ff      	uxtb	r7, r7
 801dbe8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dbec:	10c8      	asrs	r0, r1, #3
 801dbee:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801dbf2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801dbf6:	00c9      	lsls	r1, r1, #3
 801dbf8:	437b      	muls	r3, r7
 801dbfa:	ea42 0e0e 	orr.w	lr, r2, lr
 801dbfe:	b2c9      	uxtb	r1, r1
 801dc00:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801dc04:	fa1f f28e 	uxth.w	r2, lr
 801dc08:	4378      	muls	r0, r7
 801dc0a:	434f      	muls	r7, r1
 801dc0c:	1c59      	adds	r1, r3, #1
 801dc0e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801dc12:	1213      	asrs	r3, r2, #8
 801dc14:	f023 0307 	bic.w	r3, r3, #7
 801dc18:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dc1c:	1c41      	adds	r1, r0, #1
 801dc1e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801dc22:	10d1      	asrs	r1, r2, #3
 801dc24:	f021 0103 	bic.w	r1, r1, #3
 801dc28:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801dc2c:	021b      	lsls	r3, r3, #8
 801dc2e:	00c9      	lsls	r1, r1, #3
 801dc30:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dc34:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801dc38:	430b      	orrs	r3, r1
 801dc3a:	1c79      	adds	r1, r7, #1
 801dc3c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801dc40:	00d2      	lsls	r2, r2, #3
 801dc42:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801dc46:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dc4a:	431a      	orrs	r2, r3
 801dc4c:	9b03      	ldr	r3, [sp, #12]
 801dc4e:	801a      	strh	r2, [r3, #0]
 801dc50:	b005      	add	sp, #20
 801dc52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc56:	f04f 0c00 	mov.w	ip, #0
 801dc5a:	4664      	mov	r4, ip
 801dc5c:	e6e5      	b.n	801da2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801dc5e:	2300      	movs	r3, #0
 801dc60:	469c      	mov	ip, r3
 801dc62:	461a      	mov	r2, r3
 801dc64:	461c      	mov	r4, r3
 801dc66:	e707      	b.n	801da78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dc68:	2300      	movs	r3, #0
 801dc6a:	461a      	mov	r2, r3
 801dc6c:	e704      	b.n	801da78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dc6e:	460b      	mov	r3, r1
 801dc70:	460a      	mov	r2, r1
 801dc72:	e701      	b.n	801da78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dc74:	2500      	movs	r5, #0
 801dc76:	46ab      	mov	fp, r5
 801dc78:	e72f      	b.n	801dada <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801dc7a:	2700      	movs	r7, #0
 801dc7c:	463d      	mov	r5, r7
 801dc7e:	4638      	mov	r0, r7
 801dc80:	46bb      	mov	fp, r7
 801dc82:	e754      	b.n	801db2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dc84:	4677      	mov	r7, lr
 801dc86:	4675      	mov	r5, lr
 801dc88:	4670      	mov	r0, lr
 801dc8a:	46f3      	mov	fp, lr
 801dc8c:	e74f      	b.n	801db2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dc8e:	2700      	movs	r7, #0
 801dc90:	4638      	mov	r0, r7
 801dc92:	e74c      	b.n	801db2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dc94:	460f      	mov	r7, r1
 801dc96:	4608      	mov	r0, r1
 801dc98:	e749      	b.n	801db2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801dc9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dca0:	b093      	sub	sp, #76	@ 0x4c
 801dca2:	9210      	str	r2, [sp, #64]	@ 0x40
 801dca4:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801dca6:	910e      	str	r1, [sp, #56]	@ 0x38
 801dca8:	9306      	str	r3, [sp, #24]
 801dcaa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801dcae:	9011      	str	r0, [sp, #68]	@ 0x44
 801dcb0:	6850      	ldr	r0, [r2, #4]
 801dcb2:	6812      	ldr	r2, [r2, #0]
 801dcb4:	fb00 1303 	mla	r3, r0, r3, r1
 801dcb8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dcbc:	9307      	str	r3, [sp, #28]
 801dcbe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dcc0:	681b      	ldr	r3, [r3, #0]
 801dcc2:	9308      	str	r3, [sp, #32]
 801dcc4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dcc6:	685b      	ldr	r3, [r3, #4]
 801dcc8:	9309      	str	r3, [sp, #36]	@ 0x24
 801dcca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801dccc:	2b00      	cmp	r3, #0
 801dcce:	dc03      	bgt.n	801dcd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801dcd0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801dcd2:	2b00      	cmp	r3, #0
 801dcd4:	f340 83b4 	ble.w	801e440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801dcd8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dcda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dcde:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dce2:	1e48      	subs	r0, r1, #1
 801dce4:	1e55      	subs	r5, r2, #1
 801dce6:	9b06      	ldr	r3, [sp, #24]
 801dce8:	2b00      	cmp	r3, #0
 801dcea:	f340 8163 	ble.w	801dfb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801dcee:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801dcf0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801dcf2:	1436      	asrs	r6, r6, #16
 801dcf4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801dcf8:	d406      	bmi.n	801dd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dcfa:	4286      	cmp	r6, r0
 801dcfc:	da04      	bge.n	801dd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dcfe:	2b00      	cmp	r3, #0
 801dd00:	db02      	blt.n	801dd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dd02:	42ab      	cmp	r3, r5
 801dd04:	f2c0 8157 	blt.w	801dfb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801dd08:	3601      	adds	r6, #1
 801dd0a:	f100 8144 	bmi.w	801df96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801dd0e:	42b1      	cmp	r1, r6
 801dd10:	f2c0 8141 	blt.w	801df96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801dd14:	3301      	adds	r3, #1
 801dd16:	f100 813e 	bmi.w	801df96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801dd1a:	429a      	cmp	r2, r3
 801dd1c:	f2c0 813b 	blt.w	801df96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801dd20:	9b06      	ldr	r3, [sp, #24]
 801dd22:	9f07      	ldr	r7, [sp, #28]
 801dd24:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dd26:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801dd2a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dd2c:	2b00      	cmp	r3, #0
 801dd2e:	f340 8164 	ble.w	801dffa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801dd32:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801dd34:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801dd36:	1418      	asrs	r0, r3, #16
 801dd38:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801dd3a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801dd3e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801dd40:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801dd44:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dd46:	142d      	asrs	r5, r5, #16
 801dd48:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801dd4c:	f100 81ee 	bmi.w	801e12c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801dd50:	f102 3eff 	add.w	lr, r2, #4294967295
 801dd54:	4575      	cmp	r5, lr
 801dd56:	f280 81e9 	bge.w	801e12c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801dd5a:	2800      	cmp	r0, #0
 801dd5c:	f2c0 81e6 	blt.w	801e12c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801dd60:	f103 3eff 	add.w	lr, r3, #4294967295
 801dd64:	4570      	cmp	r0, lr
 801dd66:	f280 81e1 	bge.w	801e12c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801dd6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd6c:	b212      	sxth	r2, r2
 801dd6e:	fb00 5002 	mla	r0, r0, r2, r5
 801dd72:	fa1f fe81 	uxth.w	lr, r1
 801dd76:	eb03 0a00 	add.w	sl, r3, r0
 801dd7a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801dd7e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801dd82:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801dd86:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801dd8a:	b29b      	uxth	r3, r3
 801dd8c:	f1bc 0f00 	cmp.w	ip, #0
 801dd90:	f000 8179 	beq.w	801e086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801dd94:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801dd98:	940a      	str	r4, [sp, #40]	@ 0x28
 801dd9a:	eb0a 0b02 	add.w	fp, sl, r2
 801dd9e:	fa1f fa8c 	uxth.w	sl, ip
 801dda2:	fb0a fe0e 	mul.w	lr, sl, lr
 801dda6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ddaa:	fa1f fa8a 	uxth.w	sl, sl
 801ddae:	eba5 050e 	sub.w	r5, r5, lr
 801ddb2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ddb6:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ddb8:	eba3 030a 	sub.w	r3, r3, sl
 801ddbc:	b2ad      	uxth	r5, r5
 801ddbe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ddc0:	b29b      	uxth	r3, r3
 801ddc2:	fb08 f505 	mul.w	r5, r8, r5
 801ddc6:	fb09 5303 	mla	r3, r9, r3, r5
 801ddca:	fb0a 3304 	mla	r3, sl, r4, r3
 801ddce:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ddd0:	fb0e 3304 	mla	r3, lr, r4, r3
 801ddd4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ddd8:	2b00      	cmp	r3, #0
 801ddda:	f000 80cf 	beq.w	801df7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ddde:	9c08      	ldr	r4, [sp, #32]
 801dde0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801dde4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801dde8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ddec:	f000 8150 	beq.w	801e090 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801ddf0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801ddf4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ddf8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ddfc:	fb09 f000 	mul.w	r0, r9, r0
 801de00:	fb0a fe0e 	mul.w	lr, sl, lr
 801de04:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801de08:	f100 0b20 	add.w	fp, r0, #32
 801de0c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801de10:	44ce      	add	lr, r9
 801de12:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801de16:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801de1a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801de1e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801de22:	ea4e 0909 	orr.w	r9, lr, r9
 801de26:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801de2a:	8868      	ldrh	r0, [r5, #2]
 801de2c:	d019      	beq.n	801de62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801de2e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801de32:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801de36:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801de3a:	fb08 f800 	mul.w	r8, r8, r0
 801de3e:	fb0a fe0e 	mul.w	lr, sl, lr
 801de42:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801de46:	f108 0b20 	add.w	fp, r8, #32
 801de4a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801de4e:	4486      	add	lr, r0
 801de50:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801de54:	0a00      	lsrs	r0, r0, #8
 801de56:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801de5a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801de5e:	ea4e 0000 	orr.w	r0, lr, r0
 801de62:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801de66:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801de6a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801de6e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801de72:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801de76:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801de7a:	ea4e 0909 	orr.w	r9, lr, r9
 801de7e:	ea4a 0000 	orr.w	r0, sl, r0
 801de82:	f1bc 0f00 	cmp.w	ip, #0
 801de86:	f000 8105 	beq.w	801e094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801de8a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801de8e:	3a01      	subs	r2, #1
 801de90:	0052      	lsls	r2, r2, #1
 801de92:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801de94:	3202      	adds	r2, #2
 801de96:	2cff      	cmp	r4, #255	@ 0xff
 801de98:	eb05 0e02 	add.w	lr, r5, r2
 801de9c:	5aaa      	ldrh	r2, [r5, r2]
 801de9e:	d018      	beq.n	801ded2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801dea0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801dea4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dea8:	fb04 fa02 	mul.w	sl, r4, r2
 801deac:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801deb0:	fb08 f805 	mul.w	r8, r8, r5
 801deb4:	f10a 0520 	add.w	r5, sl, #32
 801deb8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801debc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801dec0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801dec4:	4442      	add	r2, r8
 801dec6:	0a2d      	lsrs	r5, r5, #8
 801dec8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801decc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ded0:	432a      	orrs	r2, r5
 801ded2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ded4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ded8:	2cff      	cmp	r4, #255	@ 0xff
 801deda:	d01a      	beq.n	801df12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801dedc:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801dee0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801dee4:	fb04 fa05 	mul.w	sl, r4, r5
 801dee8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801deec:	fb08 f80e 	mul.w	r8, r8, lr
 801def0:	f10a 0e20 	add.w	lr, sl, #32
 801def4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801def8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801defc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801df00:	4445      	add	r5, r8
 801df02:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801df06:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801df0a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801df0e:	ea45 050e 	orr.w	r5, r5, lr
 801df12:	fb1c fe01 	smulbb	lr, ip, r1
 801df16:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801df1a:	f1cc 0810 	rsb	r8, ip, #16
 801df1e:	eba8 0801 	sub.w	r8, r8, r1
 801df22:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801df26:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801df2a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801df2e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801df32:	4341      	muls	r1, r0
 801df34:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801df38:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801df3c:	ea4a 0202 	orr.w	r2, sl, r2
 801df40:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801df44:	fb09 1108 	mla	r1, r9, r8, r1
 801df48:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801df4c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801df50:	fb0c 1102 	mla	r1, ip, r2, r1
 801df54:	ea4b 0505 	orr.w	r5, fp, r5
 801df58:	fb0e 1e05 	mla	lr, lr, r5, r1
 801df5c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801df60:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801df64:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801df68:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801df6c:	ea42 0e0e 	orr.w	lr, r2, lr
 801df70:	fa1f f28e 	uxth.w	r2, lr
 801df74:	2bff      	cmp	r3, #255	@ 0xff
 801df76:	f040 80a1 	bne.w	801e0bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801df7a:	803a      	strh	r2, [r7, #0]
 801df7c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801df7e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801df80:	4413      	add	r3, r2
 801df82:	931d      	str	r3, [sp, #116]	@ 0x74
 801df84:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801df86:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801df88:	441a      	add	r2, r3
 801df8a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801df8c:	921e      	str	r2, [sp, #120]	@ 0x78
 801df8e:	3b01      	subs	r3, #1
 801df90:	3702      	adds	r7, #2
 801df92:	930f      	str	r3, [sp, #60]	@ 0x3c
 801df94:	e6c9      	b.n	801dd2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801df96:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801df98:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801df9a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801df9c:	4433      	add	r3, r6
 801df9e:	931d      	str	r3, [sp, #116]	@ 0x74
 801dfa0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dfa2:	441c      	add	r4, r3
 801dfa4:	9b06      	ldr	r3, [sp, #24]
 801dfa6:	941e      	str	r4, [sp, #120]	@ 0x78
 801dfa8:	3b01      	subs	r3, #1
 801dfaa:	9306      	str	r3, [sp, #24]
 801dfac:	9b07      	ldr	r3, [sp, #28]
 801dfae:	3302      	adds	r3, #2
 801dfb0:	9307      	str	r3, [sp, #28]
 801dfb2:	e698      	b.n	801dce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801dfb4:	d028      	beq.n	801e008 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dfb6:	9b06      	ldr	r3, [sp, #24]
 801dfb8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801dfba:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801dfbc:	3b01      	subs	r3, #1
 801dfbe:	fb00 5003 	mla	r0, r0, r3, r5
 801dfc2:	1400      	asrs	r0, r0, #16
 801dfc4:	f53f aeac 	bmi.w	801dd20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dfc8:	3901      	subs	r1, #1
 801dfca:	4288      	cmp	r0, r1
 801dfcc:	f6bf aea8 	bge.w	801dd20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dfd0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801dfd2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801dfd4:	fb01 0303 	mla	r3, r1, r3, r0
 801dfd8:	141b      	asrs	r3, r3, #16
 801dfda:	f53f aea1 	bmi.w	801dd20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dfde:	3a01      	subs	r2, #1
 801dfe0:	4293      	cmp	r3, r2
 801dfe2:	f6bf ae9d 	bge.w	801dd20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dfe6:	9b06      	ldr	r3, [sp, #24]
 801dfe8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801dfec:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dfee:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801dff2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dff4:	2b00      	cmp	r3, #0
 801dff6:	f300 80b6 	bgt.w	801e166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801dffa:	9b06      	ldr	r3, [sp, #24]
 801dffc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e000:	9b07      	ldr	r3, [sp, #28]
 801e002:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e006:	9307      	str	r3, [sp, #28]
 801e008:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e00a:	2b00      	cmp	r3, #0
 801e00c:	f340 8218 	ble.w	801e440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801e010:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e014:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e018:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e01c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e01e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e022:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e026:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e02a:	eef0 6a62 	vmov.f32	s13, s5
 801e02e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e032:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e036:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e03a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801e03e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e042:	eef0 6a43 	vmov.f32	s13, s6
 801e046:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e04a:	ee12 2a90 	vmov	r2, s5
 801e04e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e052:	fb92 f3f3 	sdiv	r3, r2, r3
 801e056:	ee13 2a10 	vmov	r2, s6
 801e05a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e05c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e05e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e062:	9320      	str	r3, [sp, #128]	@ 0x80
 801e064:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e066:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e068:	3b01      	subs	r3, #1
 801e06a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e06e:	930e      	str	r3, [sp, #56]	@ 0x38
 801e070:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e072:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801e076:	bf08      	it	eq
 801e078:	4613      	moveq	r3, r2
 801e07a:	9306      	str	r3, [sp, #24]
 801e07c:	eeb0 3a67 	vmov.f32	s6, s15
 801e080:	eef0 2a47 	vmov.f32	s5, s14
 801e084:	e621      	b.n	801dcca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801e086:	fb08 f505 	mul.w	r5, r8, r5
 801e08a:	fb09 5303 	mla	r3, r9, r3, r5
 801e08e:	e6a1      	b.n	801ddd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801e090:	4681      	mov	r9, r0
 801e092:	e6c8      	b.n	801de26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801e094:	f1c1 0210 	rsb	r2, r1, #16
 801e098:	4341      	muls	r1, r0
 801e09a:	fb09 1902 	mla	r9, r9, r2, r1
 801e09e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e0a2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e0a6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e0aa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e0ae:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e0b2:	ea42 0909 	orr.w	r9, r2, r9
 801e0b6:	fa1f f289 	uxth.w	r2, r9
 801e0ba:	e75b      	b.n	801df74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e0bc:	f8b7 c000 	ldrh.w	ip, [r7]
 801e0c0:	43db      	mvns	r3, r3
 801e0c2:	ea4f 202c 	mov.w	r0, ip, asr #8
 801e0c6:	fa5f fe83 	uxtb.w	lr, r3
 801e0ca:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e0ce:	fb00 f00e 	mul.w	r0, r0, lr
 801e0d2:	1c41      	adds	r1, r0, #1
 801e0d4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e0d8:	1211      	asrs	r1, r2, #8
 801e0da:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e0de:	f021 0107 	bic.w	r1, r1, #7
 801e0e2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801e0e6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e0ea:	48d7      	ldr	r0, [pc, #860]	@ (801e448 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801e0ec:	fb05 f50e 	mul.w	r5, r5, lr
 801e0f0:	b2c9      	uxtb	r1, r1
 801e0f2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801e0f6:	1c69      	adds	r1, r5, #1
 801e0f8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e0fc:	10d1      	asrs	r1, r2, #3
 801e0fe:	f021 0103 	bic.w	r1, r1, #3
 801e102:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801e106:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e10a:	b2db      	uxtb	r3, r3
 801e10c:	00c9      	lsls	r1, r1, #3
 801e10e:	fb03 f30e 	mul.w	r3, r3, lr
 801e112:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e116:	4301      	orrs	r1, r0
 801e118:	1c58      	adds	r0, r3, #1
 801e11a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e11e:	00d2      	lsls	r2, r2, #3
 801e120:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e124:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e128:	430a      	orrs	r2, r1
 801e12a:	e726      	b.n	801df7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801e12c:	f115 0e01 	adds.w	lr, r5, #1
 801e130:	f53f af24 	bmi.w	801df7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e134:	4572      	cmp	r2, lr
 801e136:	f6ff af21 	blt.w	801df7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e13a:	f110 0e01 	adds.w	lr, r0, #1
 801e13e:	f53f af1d 	bmi.w	801df7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e142:	4573      	cmp	r3, lr
 801e144:	f6ff af1a 	blt.w	801df7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e148:	b21b      	sxth	r3, r3
 801e14a:	b212      	sxth	r2, r2
 801e14c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801e150:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801e154:	9301      	str	r3, [sp, #4]
 801e156:	9200      	str	r2, [sp, #0]
 801e158:	4639      	mov	r1, r7
 801e15a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801e15e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e160:	f7ff fc24 	bl	801d9ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801e164:	e70a      	b.n	801df7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e166:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e168:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e16c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e16e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e172:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e174:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e178:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e17a:	141f      	asrs	r7, r3, #16
 801e17c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e17e:	141b      	asrs	r3, r3, #16
 801e180:	fb01 3707 	mla	r7, r1, r7, r3
 801e184:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e186:	fa1f fc82 	uxth.w	ip, r2
 801e18a:	eb03 0a07 	add.w	sl, r3, r7
 801e18e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e192:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e196:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e19a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e19e:	b29b      	uxth	r3, r3
 801e1a0:	2d00      	cmp	r5, #0
 801e1a2:	f000 80fe 	beq.w	801e3a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801e1a6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e1aa:	940c      	str	r4, [sp, #48]	@ 0x30
 801e1ac:	eb0a 0b01 	add.w	fp, sl, r1
 801e1b0:	fa1f fa85 	uxth.w	sl, r5
 801e1b4:	fb0a fc0c 	mul.w	ip, sl, ip
 801e1b8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e1bc:	fa1f fa8a 	uxth.w	sl, sl
 801e1c0:	eba0 000c 	sub.w	r0, r0, ip
 801e1c4:	eba3 030a 	sub.w	r3, r3, sl
 801e1c8:	b280      	uxth	r0, r0
 801e1ca:	fb08 f000 	mul.w	r0, r8, r0
 801e1ce:	b29b      	uxth	r3, r3
 801e1d0:	fb09 0303 	mla	r3, r9, r3, r0
 801e1d4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801e1d6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e1da:	940d      	str	r4, [sp, #52]	@ 0x34
 801e1dc:	fb0a 3300 	mla	r3, sl, r0, r3
 801e1e0:	fb0c 3304 	mla	r3, ip, r4, r3
 801e1e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e1e8:	2b00      	cmp	r3, #0
 801e1ea:	f000 80cc 	beq.w	801e386 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801e1ee:	9808      	ldr	r0, [sp, #32]
 801e1f0:	9c08      	ldr	r4, [sp, #32]
 801e1f2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e1f6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e1fa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e1fe:	f000 80d5 	beq.w	801e3ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801e202:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e206:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e20a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e20e:	fb09 f707 	mul.w	r7, r9, r7
 801e212:	fb0a fc0c 	mul.w	ip, sl, ip
 801e216:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801e21a:	f107 0b20 	add.w	fp, r7, #32
 801e21e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801e222:	44cc      	add	ip, r9
 801e224:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801e228:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e22c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e230:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e234:	ea4c 0909 	orr.w	r9, ip, r9
 801e238:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801e23c:	8847      	ldrh	r7, [r0, #2]
 801e23e:	d019      	beq.n	801e274 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801e240:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e244:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e248:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e24c:	fb08 f807 	mul.w	r8, r8, r7
 801e250:	fb0a fc0c 	mul.w	ip, sl, ip
 801e254:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801e258:	f108 0b20 	add.w	fp, r8, #32
 801e25c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801e260:	44bc      	add	ip, r7
 801e262:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801e266:	0a3f      	lsrs	r7, r7, #8
 801e268:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e26c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e270:	ea4c 0707 	orr.w	r7, ip, r7
 801e274:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801e278:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801e27c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e280:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e284:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e288:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e28c:	ea4c 0909 	orr.w	r9, ip, r9
 801e290:	ea4a 0707 	orr.w	r7, sl, r7
 801e294:	2d00      	cmp	r5, #0
 801e296:	f000 808b 	beq.w	801e3b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801e29a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e29e:	3901      	subs	r1, #1
 801e2a0:	0049      	lsls	r1, r1, #1
 801e2a2:	3102      	adds	r1, #2
 801e2a4:	eb00 0c01 	add.w	ip, r0, r1
 801e2a8:	5a41      	ldrh	r1, [r0, r1]
 801e2aa:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801e2ac:	28ff      	cmp	r0, #255	@ 0xff
 801e2ae:	d019      	beq.n	801e2e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801e2b0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801e2b2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801e2b6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e2ba:	fb04 fa01 	mul.w	sl, r4, r1
 801e2be:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e2c2:	fb08 f800 	mul.w	r8, r8, r0
 801e2c6:	f10a 0020 	add.w	r0, sl, #32
 801e2ca:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801e2ce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801e2d2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e2d6:	4441      	add	r1, r8
 801e2d8:	0a00      	lsrs	r0, r0, #8
 801e2da:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801e2de:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e2e2:	4301      	orrs	r1, r0
 801e2e4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e2e6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801e2ea:	2cff      	cmp	r4, #255	@ 0xff
 801e2ec:	d01a      	beq.n	801e324 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801e2ee:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801e2f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e2f6:	fb04 fa00 	mul.w	sl, r4, r0
 801e2fa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e2fe:	fb08 f80c 	mul.w	r8, r8, ip
 801e302:	f10a 0c20 	add.w	ip, sl, #32
 801e306:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801e30a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801e30e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e312:	4440      	add	r0, r8
 801e314:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e318:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801e31c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e320:	ea40 000c 	orr.w	r0, r0, ip
 801e324:	fb15 fc02 	smulbb	ip, r5, r2
 801e328:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801e32c:	f1c5 0810 	rsb	r8, r5, #16
 801e330:	eba8 0802 	sub.w	r8, r8, r2
 801e334:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e338:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801e33c:	437a      	muls	r2, r7
 801e33e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e342:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801e346:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e34a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e34e:	fb09 2208 	mla	r2, r9, r8, r2
 801e352:	ea4a 0101 	orr.w	r1, sl, r1
 801e356:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801e35a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e35e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e362:	fb05 2201 	mla	r2, r5, r1, r2
 801e366:	ea4b 0000 	orr.w	r0, fp, r0
 801e36a:	fb0c 2200 	mla	r2, ip, r0, r2
 801e36e:	0d57      	lsrs	r7, r2, #21
 801e370:	0952      	lsrs	r2, r2, #5
 801e372:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e376:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e37a:	433a      	orrs	r2, r7
 801e37c:	2bff      	cmp	r3, #255	@ 0xff
 801e37e:	b292      	uxth	r2, r2
 801e380:	d127      	bne.n	801e3d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801e382:	f8ae 2000 	strh.w	r2, [lr]
 801e386:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e388:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801e38a:	4413      	add	r3, r2
 801e38c:	931d      	str	r3, [sp, #116]	@ 0x74
 801e38e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801e390:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e392:	441a      	add	r2, r3
 801e394:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e396:	921e      	str	r2, [sp, #120]	@ 0x78
 801e398:	3b01      	subs	r3, #1
 801e39a:	f10e 0e02 	add.w	lr, lr, #2
 801e39e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e3a0:	e627      	b.n	801dff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e3a2:	fb08 f000 	mul.w	r0, r8, r0
 801e3a6:	fb09 0303 	mla	r3, r9, r3, r0
 801e3aa:	e71b      	b.n	801e1e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801e3ac:	46b9      	mov	r9, r7
 801e3ae:	e743      	b.n	801e238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801e3b0:	f1c2 0110 	rsb	r1, r2, #16
 801e3b4:	437a      	muls	r2, r7
 801e3b6:	fb09 2901 	mla	r9, r9, r1, r2
 801e3ba:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e3be:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801e3c2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801e3c6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e3ca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e3ce:	4302      	orrs	r2, r0
 801e3d0:	e7d4      	b.n	801e37c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801e3d2:	f8be 7000 	ldrh.w	r7, [lr]
 801e3d6:	4c1c      	ldr	r4, [pc, #112]	@ (801e448 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801e3d8:	43db      	mvns	r3, r3
 801e3da:	1238      	asrs	r0, r7, #8
 801e3dc:	fa5f fc83 	uxtb.w	ip, r3
 801e3e0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e3e4:	10fd      	asrs	r5, r7, #3
 801e3e6:	fb00 f00c 	mul.w	r0, r0, ip
 801e3ea:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e3ee:	fb05 f10c 	mul.w	r1, r5, ip
 801e3f2:	1c45      	adds	r5, r0, #1
 801e3f4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e3f8:	1215      	asrs	r5, r2, #8
 801e3fa:	f025 0507 	bic.w	r5, r5, #7
 801e3fe:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e402:	1c4d      	adds	r5, r1, #1
 801e404:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801e408:	10d1      	asrs	r1, r2, #3
 801e40a:	f021 0103 	bic.w	r1, r1, #3
 801e40e:	00fb      	lsls	r3, r7, #3
 801e410:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e414:	b2db      	uxtb	r3, r3
 801e416:	b2c0      	uxtb	r0, r0
 801e418:	00c9      	lsls	r1, r1, #3
 801e41a:	fb03 f30c 	mul.w	r3, r3, ip
 801e41e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e422:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801e426:	4308      	orrs	r0, r1
 801e428:	1c59      	adds	r1, r3, #1
 801e42a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e42e:	00d2      	lsls	r2, r2, #3
 801e430:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e434:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801e438:	4318      	orrs	r0, r3
 801e43a:	f8ae 0000 	strh.w	r0, [lr]
 801e43e:	e7a2      	b.n	801e386 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801e440:	b013      	add	sp, #76	@ 0x4c
 801e442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e446:	bf00      	nop
 801e448:	fffff800 	.word	0xfffff800

0801e44c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801e44c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e450:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801e454:	fb05 4c03 	mla	ip, r5, r3, r4
 801e458:	2d00      	cmp	r5, #0
 801e45a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801e45e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801e462:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801e466:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801e46a:	8808      	ldrh	r0, [r1, #0]
 801e46c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801e470:	f2c0 80a7 	blt.w	801e5c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e474:	45aa      	cmp	sl, r5
 801e476:	f340 80a4 	ble.w	801e5c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e47a:	2c00      	cmp	r4, #0
 801e47c:	f2c0 809f 	blt.w	801e5be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e480:	42a3      	cmp	r3, r4
 801e482:	f340 809c 	ble.w	801e5be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e486:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801e48a:	1c62      	adds	r2, r4, #1
 801e48c:	f100 809c 	bmi.w	801e5c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e490:	4293      	cmp	r3, r2
 801e492:	f340 8099 	ble.w	801e5c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e496:	f1b9 0f00 	cmp.w	r9, #0
 801e49a:	f000 8095 	beq.w	801e5c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e49e:	f8be c002 	ldrh.w	ip, [lr, #2]
 801e4a2:	3501      	adds	r5, #1
 801e4a4:	f100 8094 	bmi.w	801e5d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e4a8:	45aa      	cmp	sl, r5
 801e4aa:	f340 8091 	ble.w	801e5d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e4ae:	2f00      	cmp	r7, #0
 801e4b0:	f000 808e 	beq.w	801e5d0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e4b4:	2c00      	cmp	r4, #0
 801e4b6:	f2c0 8089 	blt.w	801e5cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e4ba:	42a3      	cmp	r3, r4
 801e4bc:	f340 8086 	ble.w	801e5cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e4c0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801e4c4:	3401      	adds	r4, #1
 801e4c6:	f100 8086 	bmi.w	801e5d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e4ca:	42a3      	cmp	r3, r4
 801e4cc:	f340 8083 	ble.w	801e5d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e4d0:	f1b9 0f00 	cmp.w	r9, #0
 801e4d4:	d07f      	beq.n	801e5d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e4d6:	3301      	adds	r3, #1
 801e4d8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801e4dc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e4e0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e4e4:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801e4e8:	fb19 fe07 	smulbb	lr, r9, r7
 801e4ec:	ea44 0808 	orr.w	r8, r4, r8
 801e4f0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e4f4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e4f8:	f1c7 0210 	rsb	r2, r7, #16
 801e4fc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e500:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e504:	ea44 0c0c 	orr.w	ip, r4, ip
 801e508:	eba2 0209 	sub.w	r2, r2, r9
 801e50c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e510:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e514:	fb04 f40c 	mul.w	r4, r4, ip
 801e518:	fb02 4808 	mla	r8, r2, r8, r4
 801e51c:	041a      	lsls	r2, r3, #16
 801e51e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e522:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e526:	4313      	orrs	r3, r2
 801e528:	042a      	lsls	r2, r5, #16
 801e52a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e52e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e532:	fb0e 8303 	mla	r3, lr, r3, r8
 801e536:	432a      	orrs	r2, r5
 801e538:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e53c:	fb07 3202 	mla	r2, r7, r2, r3
 801e540:	0d53      	lsrs	r3, r2, #21
 801e542:	0952      	lsrs	r2, r2, #5
 801e544:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e548:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e54c:	431a      	orrs	r2, r3
 801e54e:	b293      	uxth	r3, r2
 801e550:	b2b4      	uxth	r4, r6
 801e552:	1202      	asrs	r2, r0, #8
 801e554:	43f6      	mvns	r6, r6
 801e556:	b2f6      	uxtb	r6, r6
 801e558:	121d      	asrs	r5, r3, #8
 801e55a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e55e:	fb12 f206 	smulbb	r2, r2, r6
 801e562:	10c7      	asrs	r7, r0, #3
 801e564:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e568:	00c0      	lsls	r0, r0, #3
 801e56a:	fb05 2504 	mla	r5, r5, r4, r2
 801e56e:	b2c0      	uxtb	r0, r0
 801e570:	10da      	asrs	r2, r3, #3
 801e572:	00db      	lsls	r3, r3, #3
 801e574:	b2db      	uxtb	r3, r3
 801e576:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e57a:	fb10 f006 	smulbb	r0, r0, r6
 801e57e:	b2ad      	uxth	r5, r5
 801e580:	fb03 0004 	mla	r0, r3, r4, r0
 801e584:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e588:	fb17 f706 	smulbb	r7, r7, r6
 801e58c:	b280      	uxth	r0, r0
 801e58e:	1c6b      	adds	r3, r5, #1
 801e590:	fb02 7204 	mla	r2, r2, r4, r7
 801e594:	b292      	uxth	r2, r2
 801e596:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e59a:	1c43      	adds	r3, r0, #1
 801e59c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e5a0:	1c50      	adds	r0, r2, #1
 801e5a2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e5a6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e5aa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e5ae:	0952      	lsrs	r2, r2, #5
 801e5b0:	432b      	orrs	r3, r5
 801e5b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e5b6:	4313      	orrs	r3, r2
 801e5b8:	800b      	strh	r3, [r1, #0]
 801e5ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e5be:	4680      	mov	r8, r0
 801e5c0:	e763      	b.n	801e48a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801e5c2:	4684      	mov	ip, r0
 801e5c4:	4680      	mov	r8, r0
 801e5c6:	e76c      	b.n	801e4a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801e5c8:	4684      	mov	ip, r0
 801e5ca:	e76a      	b.n	801e4a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801e5cc:	4605      	mov	r5, r0
 801e5ce:	e779      	b.n	801e4c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801e5d0:	4603      	mov	r3, r0
 801e5d2:	4605      	mov	r5, r0
 801e5d4:	e782      	b.n	801e4dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801e5d6:	4603      	mov	r3, r0
 801e5d8:	e780      	b.n	801e4dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801e5da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e5da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5de:	b093      	sub	sp, #76	@ 0x4c
 801e5e0:	461d      	mov	r5, r3
 801e5e2:	9210      	str	r2, [sp, #64]	@ 0x40
 801e5e4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e5e6:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801e5ea:	920b      	str	r2, [sp, #44]	@ 0x2c
 801e5ec:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801e5f0:	910a      	str	r1, [sp, #40]	@ 0x28
 801e5f2:	6859      	ldr	r1, [r3, #4]
 801e5f4:	681b      	ldr	r3, [r3, #0]
 801e5f6:	9011      	str	r0, [sp, #68]	@ 0x44
 801e5f8:	fb01 2707 	mla	r7, r1, r7, r2
 801e5fc:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801e600:	9307      	str	r3, [sp, #28]
 801e602:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e604:	681b      	ldr	r3, [r3, #0]
 801e606:	9309      	str	r3, [sp, #36]	@ 0x24
 801e608:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e60a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801e60e:	43db      	mvns	r3, r3
 801e610:	b2db      	uxtb	r3, r3
 801e612:	9308      	str	r3, [sp, #32]
 801e614:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e616:	2b00      	cmp	r3, #0
 801e618:	dc03      	bgt.n	801e622 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e61a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e61c:	2b00      	cmp	r3, #0
 801e61e:	f340 8203 	ble.w	801ea28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e622:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e624:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e628:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e62c:	1e48      	subs	r0, r1, #1
 801e62e:	f102 3cff 	add.w	ip, r2, #4294967295
 801e632:	2d00      	cmp	r5, #0
 801e634:	f340 80da 	ble.w	801e7ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801e638:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e63c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e640:	d406      	bmi.n	801e650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e642:	4586      	cmp	lr, r0
 801e644:	da04      	bge.n	801e650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e646:	2b00      	cmp	r3, #0
 801e648:	db02      	blt.n	801e650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e64a:	4563      	cmp	r3, ip
 801e64c:	f2c0 80cf 	blt.w	801e7ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e650:	f11e 0e01 	adds.w	lr, lr, #1
 801e654:	f100 80c1 	bmi.w	801e7da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e658:	4571      	cmp	r1, lr
 801e65a:	f2c0 80be 	blt.w	801e7da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e65e:	3301      	adds	r3, #1
 801e660:	f100 80bb 	bmi.w	801e7da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e664:	429a      	cmp	r2, r3
 801e666:	f2c0 80b8 	blt.w	801e7da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e66a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801e66e:	46a9      	mov	r9, r5
 801e670:	f1b9 0f00 	cmp.w	r9, #0
 801e674:	f340 80d8 	ble.w	801e828 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801e678:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e67a:	1421      	asrs	r1, r4, #16
 801e67c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e680:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e684:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e688:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e68c:	f100 8111 	bmi.w	801e8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e690:	f10e 3aff 	add.w	sl, lr, #4294967295
 801e694:	4551      	cmp	r1, sl
 801e696:	f280 810c 	bge.w	801e8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e69a:	2800      	cmp	r0, #0
 801e69c:	f2c0 8109 	blt.w	801e8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e6a0:	f103 3aff 	add.w	sl, r3, #4294967295
 801e6a4:	4550      	cmp	r0, sl
 801e6a6:	f280 8104 	bge.w	801e8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e6aa:	fa0f f38e 	sxth.w	r3, lr
 801e6ae:	fb00 1103 	mla	r1, r0, r3, r1
 801e6b2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801e6b4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801e6b8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801e6bc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801e6c0:	f1bc 0f00 	cmp.w	ip, #0
 801e6c4:	d007      	beq.n	801e6d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801e6c6:	005b      	lsls	r3, r3, #1
 801e6c8:	eb0a 0003 	add.w	r0, sl, r3
 801e6cc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801e6d0:	930c      	str	r3, [sp, #48]	@ 0x30
 801e6d2:	8843      	ldrh	r3, [r0, #2]
 801e6d4:	930d      	str	r3, [sp, #52]	@ 0x34
 801e6d6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801e6da:	fb12 f30c 	smulbb	r3, r2, ip
 801e6de:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e6e2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e6e6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e6ea:	10db      	asrs	r3, r3, #3
 801e6ec:	ea40 000e 	orr.w	r0, r0, lr
 801e6f0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e6f4:	f1cc 0e10 	rsb	lr, ip, #16
 801e6f8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e6fc:	ebae 0e02 	sub.w	lr, lr, r2
 801e700:	ea4a 0101 	orr.w	r1, sl, r1
 801e704:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e708:	4351      	muls	r1, r2
 801e70a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e70c:	9f08      	ldr	r7, [sp, #32]
 801e70e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e712:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e716:	0410      	lsls	r0, r2, #16
 801e718:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e71c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e720:	4310      	orrs	r0, r2
 801e722:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e724:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e726:	0412      	lsls	r2, r2, #16
 801e728:	fb03 e000 	mla	r0, r3, r0, lr
 801e72c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e730:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e734:	ea42 020e 	orr.w	r2, r2, lr
 801e738:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e73c:	fb03 0302 	mla	r3, r3, r2, r0
 801e740:	0d5a      	lsrs	r2, r3, #21
 801e742:	095b      	lsrs	r3, r3, #5
 801e744:	f8b8 0000 	ldrh.w	r0, [r8]
 801e748:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e74c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e750:	4313      	orrs	r3, r2
 801e752:	b29b      	uxth	r3, r3
 801e754:	1201      	asrs	r1, r0, #8
 801e756:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801e75a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e75e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e762:	fb11 f107 	smulbb	r1, r1, r7
 801e766:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e76a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e76e:	00c0      	lsls	r0, r0, #3
 801e770:	fb0c 1c02 	mla	ip, ip, r2, r1
 801e774:	b2c0      	uxtb	r0, r0
 801e776:	10d9      	asrs	r1, r3, #3
 801e778:	00db      	lsls	r3, r3, #3
 801e77a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e77e:	b2db      	uxtb	r3, r3
 801e780:	fb10 f007 	smulbb	r0, r0, r7
 801e784:	fa1f fc8c 	uxth.w	ip, ip
 801e788:	fb03 0302 	mla	r3, r3, r2, r0
 801e78c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e790:	fb1e fe07 	smulbb	lr, lr, r7
 801e794:	fb01 e102 	mla	r1, r1, r2, lr
 801e798:	b29a      	uxth	r2, r3
 801e79a:	f10c 0301 	add.w	r3, ip, #1
 801e79e:	b289      	uxth	r1, r1
 801e7a0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e7a4:	1c53      	adds	r3, r2, #1
 801e7a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e7aa:	1c4a      	adds	r2, r1, #1
 801e7ac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e7b0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e7b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e7b8:	0949      	lsrs	r1, r1, #5
 801e7ba:	ea43 030c 	orr.w	r3, r3, ip
 801e7be:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e7c2:	430b      	orrs	r3, r1
 801e7c4:	f8a8 3000 	strh.w	r3, [r8]
 801e7c8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e7ca:	441c      	add	r4, r3
 801e7cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e7ce:	f108 0802 	add.w	r8, r8, #2
 801e7d2:	441e      	add	r6, r3
 801e7d4:	f109 39ff 	add.w	r9, r9, #4294967295
 801e7d8:	e74a      	b.n	801e670 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e7da:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e7dc:	441c      	add	r4, r3
 801e7de:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e7e0:	441e      	add	r6, r3
 801e7e2:	9b07      	ldr	r3, [sp, #28]
 801e7e4:	3302      	adds	r3, #2
 801e7e6:	3d01      	subs	r5, #1
 801e7e8:	9307      	str	r3, [sp, #28]
 801e7ea:	e722      	b.n	801e632 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e7ec:	d022      	beq.n	801e834 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801e7ee:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801e7f0:	1e6b      	subs	r3, r5, #1
 801e7f2:	fb00 4003 	mla	r0, r0, r3, r4
 801e7f6:	1400      	asrs	r0, r0, #16
 801e7f8:	f53f af37 	bmi.w	801e66a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e7fc:	3901      	subs	r1, #1
 801e7fe:	4288      	cmp	r0, r1
 801e800:	f6bf af33 	bge.w	801e66a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e804:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801e806:	fb01 6303 	mla	r3, r1, r3, r6
 801e80a:	141b      	asrs	r3, r3, #16
 801e80c:	f53f af2d 	bmi.w	801e66a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e810:	3a01      	subs	r2, #1
 801e812:	4293      	cmp	r3, r2
 801e814:	f6bf af29 	bge.w	801e66a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e818:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801e81c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801e820:	46a8      	mov	r8, r5
 801e822:	f1b8 0f00 	cmp.w	r8, #0
 801e826:	dc5e      	bgt.n	801e8e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e828:	9b07      	ldr	r3, [sp, #28]
 801e82a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e82e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e832:	9307      	str	r3, [sp, #28]
 801e834:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e836:	2b00      	cmp	r3, #0
 801e838:	f340 80f6 	ble.w	801ea28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e83c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e840:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e844:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e848:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e84a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e84e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e852:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e856:	eef0 6a62 	vmov.f32	s13, s5
 801e85a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e85e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e862:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e866:	ee16 4a90 	vmov	r4, s13
 801e86a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e86e:	eef0 6a43 	vmov.f32	s13, s6
 801e872:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e876:	ee12 2a90 	vmov	r2, s5
 801e87a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e87e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e882:	ee13 2a10 	vmov	r2, s6
 801e886:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e888:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e88a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e88e:	9320      	str	r3, [sp, #128]	@ 0x80
 801e890:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e892:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e894:	3b01      	subs	r3, #1
 801e896:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e89a:	930a      	str	r3, [sp, #40]	@ 0x28
 801e89c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e89e:	ee16 6a90 	vmov	r6, s13
 801e8a2:	bf14      	ite	ne
 801e8a4:	461d      	movne	r5, r3
 801e8a6:	4615      	moveq	r5, r2
 801e8a8:	eeb0 3a67 	vmov.f32	s6, s15
 801e8ac:	eef0 2a47 	vmov.f32	s5, s14
 801e8b0:	e6b0      	b.n	801e614 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e8b2:	f111 0a01 	adds.w	sl, r1, #1
 801e8b6:	d487      	bmi.n	801e7c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e8b8:	45d6      	cmp	lr, sl
 801e8ba:	db85      	blt.n	801e7c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e8bc:	f110 0a01 	adds.w	sl, r0, #1
 801e8c0:	d482      	bmi.n	801e7c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e8c2:	4553      	cmp	r3, sl
 801e8c4:	db80      	blt.n	801e7c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e8c6:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801e8c8:	9101      	str	r1, [sp, #4]
 801e8ca:	b21b      	sxth	r3, r3
 801e8cc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801e8d0:	9300      	str	r3, [sp, #0]
 801e8d2:	e9cd c704 	strd	ip, r7, [sp, #16]
 801e8d6:	fa0f f38e 	sxth.w	r3, lr
 801e8da:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e8dc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e8de:	4641      	mov	r1, r8
 801e8e0:	f7ff fdb4 	bl	801e44c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801e8e4:	e770      	b.n	801e7c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e8e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e8e8:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801e8ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e8ee:	1430      	asrs	r0, r6, #16
 801e8f0:	1423      	asrs	r3, r4, #16
 801e8f2:	fb01 3000 	mla	r0, r1, r0, r3
 801e8f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e8f8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801e8fc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801e900:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e904:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e908:	8858      	ldrh	r0, [r3, #2]
 801e90a:	f1be 0f00 	cmp.w	lr, #0
 801e90e:	d00b      	beq.n	801e928 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e910:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e914:	3901      	subs	r1, #1
 801e916:	0049      	lsls	r1, r1, #1
 801e918:	3102      	adds	r1, #2
 801e91a:	eb03 0b01 	add.w	fp, r3, r1
 801e91e:	5a5b      	ldrh	r3, [r3, r1]
 801e920:	930e      	str	r3, [sp, #56]	@ 0x38
 801e922:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e926:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e928:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801e92c:	fb12 f30e 	smulbb	r3, r2, lr
 801e930:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e934:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e938:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801e93c:	10db      	asrs	r3, r3, #3
 801e93e:	ea41 010c 	orr.w	r1, r1, ip
 801e942:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e946:	f1ce 0c10 	rsb	ip, lr, #16
 801e94a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e94e:	ebac 0c02 	sub.w	ip, ip, r2
 801e952:	ea4b 0000 	orr.w	r0, fp, r0
 801e956:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e95a:	4350      	muls	r0, r2
 801e95c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e95e:	9f08      	ldr	r7, [sp, #32]
 801e960:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e964:	fb0c 0c01 	mla	ip, ip, r1, r0
 801e968:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e96c:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801e970:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801e972:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e974:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e978:	0412      	lsls	r2, r2, #16
 801e97a:	ea4b 0101 	orr.w	r1, fp, r1
 801e97e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e982:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e986:	fb03 c101 	mla	r1, r3, r1, ip
 801e98a:	4302      	orrs	r2, r0
 801e98c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e990:	fb03 1202 	mla	r2, r3, r2, r1
 801e994:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801e998:	0952      	lsrs	r2, r2, #5
 801e99a:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801e99e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801e9a2:	f8b9 2000 	ldrh.w	r2, [r9]
 801e9a6:	ea4b 0303 	orr.w	r3, fp, r3
 801e9aa:	b29b      	uxth	r3, r3
 801e9ac:	1211      	asrs	r1, r2, #8
 801e9ae:	1218      	asrs	r0, r3, #8
 801e9b0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e9b4:	fb11 f107 	smulbb	r1, r1, r7
 801e9b8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801e9bc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e9c0:	00d2      	lsls	r2, r2, #3
 801e9c2:	fb00 100a 	mla	r0, r0, sl, r1
 801e9c6:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801e9ca:	10d9      	asrs	r1, r3, #3
 801e9cc:	b2d2      	uxtb	r2, r2
 801e9ce:	00db      	lsls	r3, r3, #3
 801e9d0:	fb1c fc07 	smulbb	ip, ip, r7
 801e9d4:	fb12 f207 	smulbb	r2, r2, r7
 801e9d8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e9dc:	b2db      	uxtb	r3, r3
 801e9de:	b280      	uxth	r0, r0
 801e9e0:	fb01 c10a 	mla	r1, r1, sl, ip
 801e9e4:	fb03 230a 	mla	r3, r3, sl, r2
 801e9e8:	b29b      	uxth	r3, r3
 801e9ea:	b289      	uxth	r1, r1
 801e9ec:	1c42      	adds	r2, r0, #1
 801e9ee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e9f2:	f101 0c01 	add.w	ip, r1, #1
 801e9f6:	1c5a      	adds	r2, r3, #1
 801e9f8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e9fc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ea00:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ea02:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801ea06:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ea0a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ea0e:	4310      	orrs	r0, r2
 801ea10:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ea14:	441c      	add	r4, r3
 801ea16:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ea18:	ea40 000c 	orr.w	r0, r0, ip
 801ea1c:	f829 0b02 	strh.w	r0, [r9], #2
 801ea20:	441e      	add	r6, r3
 801ea22:	f108 38ff 	add.w	r8, r8, #4294967295
 801ea26:	e6fc      	b.n	801e822 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801ea28:	b013      	add	sp, #76	@ 0x4c
 801ea2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ea2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801ea2e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ea32:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801ea36:	fb0e 4703 	mla	r7, lr, r3, r4
 801ea3a:	f1be 0f00 	cmp.w	lr, #0
 801ea3e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801ea42:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801ea46:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801ea4a:	8808      	ldrh	r0, [r1, #0]
 801ea4c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801ea50:	db60      	blt.n	801eb14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ea52:	45f1      	cmp	r9, lr
 801ea54:	dd5e      	ble.n	801eb14 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ea56:	2c00      	cmp	r4, #0
 801ea58:	db5a      	blt.n	801eb10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ea5a:	42a3      	cmp	r3, r4
 801ea5c:	dd58      	ble.n	801eb10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ea5e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801ea62:	1c62      	adds	r2, r4, #1
 801ea64:	d459      	bmi.n	801eb1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ea66:	4293      	cmp	r3, r2
 801ea68:	dd57      	ble.n	801eb1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ea6a:	2d00      	cmp	r5, #0
 801ea6c:	d055      	beq.n	801eb1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ea6e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801ea72:	f11e 0e01 	adds.w	lr, lr, #1
 801ea76:	d454      	bmi.n	801eb22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ea78:	45f1      	cmp	r9, lr
 801ea7a:	dd52      	ble.n	801eb22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ea7c:	2e00      	cmp	r6, #0
 801ea7e:	d050      	beq.n	801eb22 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ea80:	2c00      	cmp	r4, #0
 801ea82:	db4c      	blt.n	801eb1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801ea84:	42a3      	cmp	r3, r4
 801ea86:	dd4a      	ble.n	801eb1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801ea88:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801ea8c:	3401      	adds	r4, #1
 801ea8e:	d405      	bmi.n	801ea9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ea90:	42a3      	cmp	r3, r4
 801ea92:	dd03      	ble.n	801ea9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ea94:	b115      	cbz	r5, 801ea9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ea96:	3301      	adds	r3, #1
 801ea98:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801ea9c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801eaa0:	fb15 f406 	smulbb	r4, r5, r6
 801eaa4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eaa8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801eaac:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801eab0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801eab4:	ea43 0c0c 	orr.w	ip, r3, ip
 801eab8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801eabc:	f1c6 0310 	rsb	r3, r6, #16
 801eac0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801eac4:	1b5b      	subs	r3, r3, r5
 801eac6:	ea4e 0707 	orr.w	r7, lr, r7
 801eaca:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801eace:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ead2:	437d      	muls	r5, r7
 801ead4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ead8:	0403      	lsls	r3, r0, #16
 801eada:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eade:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801eae2:	4318      	orrs	r0, r3
 801eae4:	0413      	lsls	r3, r2, #16
 801eae6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eaea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801eaee:	4313      	orrs	r3, r2
 801eaf0:	fb04 c000 	mla	r0, r4, r0, ip
 801eaf4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801eaf8:	fb06 0003 	mla	r0, r6, r3, r0
 801eafc:	0d43      	lsrs	r3, r0, #21
 801eafe:	0940      	lsrs	r0, r0, #5
 801eb00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eb04:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801eb08:	4318      	orrs	r0, r3
 801eb0a:	8008      	strh	r0, [r1, #0]
 801eb0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801eb10:	4684      	mov	ip, r0
 801eb12:	e7a6      	b.n	801ea62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801eb14:	4607      	mov	r7, r0
 801eb16:	4684      	mov	ip, r0
 801eb18:	e7ab      	b.n	801ea72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801eb1a:	4607      	mov	r7, r0
 801eb1c:	e7a9      	b.n	801ea72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801eb1e:	4602      	mov	r2, r0
 801eb20:	e7b4      	b.n	801ea8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801eb22:	4602      	mov	r2, r0
 801eb24:	e7ba      	b.n	801ea9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801eb26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eb26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb2a:	b08f      	sub	sp, #60	@ 0x3c
 801eb2c:	461d      	mov	r5, r3
 801eb2e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801eb30:	920c      	str	r2, [sp, #48]	@ 0x30
 801eb32:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801eb36:	9107      	str	r1, [sp, #28]
 801eb38:	6859      	ldr	r1, [r3, #4]
 801eb3a:	681b      	ldr	r3, [r3, #0]
 801eb3c:	900d      	str	r0, [sp, #52]	@ 0x34
 801eb3e:	fb01 2707 	mla	r7, r1, r7, r2
 801eb42:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801eb46:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eb48:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801eb4c:	f8d3 8000 	ldr.w	r8, [r3]
 801eb50:	9b07      	ldr	r3, [sp, #28]
 801eb52:	2b00      	cmp	r3, #0
 801eb54:	dc03      	bgt.n	801eb5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801eb56:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801eb58:	2b00      	cmp	r3, #0
 801eb5a:	f340 8181 	ble.w	801ee60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801eb5e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eb60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eb64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eb68:	1e48      	subs	r0, r1, #1
 801eb6a:	f102 3cff 	add.w	ip, r2, #4294967295
 801eb6e:	2d00      	cmp	r5, #0
 801eb70:	f340 809b 	ble.w	801ecaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801eb74:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801eb78:	ea4f 4326 	mov.w	r3, r6, asr #16
 801eb7c:	d406      	bmi.n	801eb8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eb7e:	4586      	cmp	lr, r0
 801eb80:	da04      	bge.n	801eb8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eb82:	2b00      	cmp	r3, #0
 801eb84:	db02      	blt.n	801eb8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eb86:	4563      	cmp	r3, ip
 801eb88:	f2c0 8090 	blt.w	801ecac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eb8c:	f11e 0e01 	adds.w	lr, lr, #1
 801eb90:	f100 8084 	bmi.w	801ec9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb94:	4571      	cmp	r1, lr
 801eb96:	f2c0 8081 	blt.w	801ec9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb9a:	3301      	adds	r3, #1
 801eb9c:	d47e      	bmi.n	801ec9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb9e:	429a      	cmp	r2, r3
 801eba0:	db7c      	blt.n	801ec9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eba2:	46aa      	mov	sl, r5
 801eba4:	46b9      	mov	r9, r7
 801eba6:	f1ba 0f00 	cmp.w	sl, #0
 801ebaa:	f340 8099 	ble.w	801ece0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801ebae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ebb0:	1421      	asrs	r1, r4, #16
 801ebb2:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ebb6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ebba:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ebbe:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801ebc2:	f100 80d0 	bmi.w	801ed66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ebc6:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ebca:	4559      	cmp	r1, fp
 801ebcc:	f280 80cb 	bge.w	801ed66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ebd0:	2800      	cmp	r0, #0
 801ebd2:	f2c0 80c8 	blt.w	801ed66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ebd6:	f103 3bff 	add.w	fp, r3, #4294967295
 801ebda:	4558      	cmp	r0, fp
 801ebdc:	f280 80c3 	bge.w	801ed66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ebe0:	fa0f fe8e 	sxth.w	lr, lr
 801ebe4:	fb00 110e 	mla	r1, r0, lr, r1
 801ebe8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ebec:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801ebf0:	8841      	ldrh	r1, [r0, #2]
 801ebf2:	f1bc 0f00 	cmp.w	ip, #0
 801ebf6:	d00b      	beq.n	801ec10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801ebf8:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801ebfc:	3b01      	subs	r3, #1
 801ebfe:	005b      	lsls	r3, r3, #1
 801ec00:	3302      	adds	r3, #2
 801ec02:	eb00 0e03 	add.w	lr, r0, r3
 801ec06:	5ac3      	ldrh	r3, [r0, r3]
 801ec08:	9308      	str	r3, [sp, #32]
 801ec0a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801ec0e:	9309      	str	r3, [sp, #36]	@ 0x24
 801ec10:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801ec14:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ec18:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801ec1c:	ea40 000b 	orr.w	r0, r0, fp
 801ec20:	fb12 f30c 	smulbb	r3, r2, ip
 801ec24:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ec28:	10db      	asrs	r3, r3, #3
 801ec2a:	f1cc 0e10 	rsb	lr, ip, #16
 801ec2e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ec32:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ec36:	ebae 0e02 	sub.w	lr, lr, r2
 801ec3a:	ea4b 0101 	orr.w	r1, fp, r1
 801ec3e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ec42:	4351      	muls	r1, r2
 801ec44:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ec46:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801ec4a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801ec4e:	0410      	lsls	r0, r2, #16
 801ec50:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ec54:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ec58:	4310      	orrs	r0, r2
 801ec5a:	9a08      	ldr	r2, [sp, #32]
 801ec5c:	9908      	ldr	r1, [sp, #32]
 801ec5e:	0412      	lsls	r2, r2, #16
 801ec60:	fb03 e000 	mla	r0, r3, r0, lr
 801ec64:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ec68:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801ec6c:	ea42 020e 	orr.w	r2, r2, lr
 801ec70:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ec74:	fb03 0302 	mla	r3, r3, r2, r0
 801ec78:	0d5a      	lsrs	r2, r3, #21
 801ec7a:	095b      	lsrs	r3, r3, #5
 801ec7c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ec80:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ec84:	4313      	orrs	r3, r2
 801ec86:	f8a9 3000 	strh.w	r3, [r9]
 801ec8a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ec8c:	441c      	add	r4, r3
 801ec8e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ec90:	f109 0902 	add.w	r9, r9, #2
 801ec94:	441e      	add	r6, r3
 801ec96:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ec9a:	e784      	b.n	801eba6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ec9c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ec9e:	441c      	add	r4, r3
 801eca0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801eca2:	3d01      	subs	r5, #1
 801eca4:	441e      	add	r6, r3
 801eca6:	3702      	adds	r7, #2
 801eca8:	e761      	b.n	801eb6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ecaa:	d01d      	beq.n	801ece8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801ecac:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801ecae:	1e6b      	subs	r3, r5, #1
 801ecb0:	fb00 4003 	mla	r0, r0, r3, r4
 801ecb4:	1400      	asrs	r0, r0, #16
 801ecb6:	f53f af74 	bmi.w	801eba2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ecba:	3901      	subs	r1, #1
 801ecbc:	4288      	cmp	r0, r1
 801ecbe:	f6bf af70 	bge.w	801eba2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ecc2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801ecc4:	fb01 6303 	mla	r3, r1, r3, r6
 801ecc8:	141b      	asrs	r3, r3, #16
 801ecca:	f53f af6a 	bmi.w	801eba2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ecce:	3a01      	subs	r2, #1
 801ecd0:	4293      	cmp	r3, r2
 801ecd2:	f6bf af66 	bge.w	801eba2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ecd6:	46a9      	mov	r9, r5
 801ecd8:	46ba      	mov	sl, r7
 801ecda:	f1b9 0f00 	cmp.w	r9, #0
 801ecde:	dc5a      	bgt.n	801ed96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801ece0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ece4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ece8:	9b07      	ldr	r3, [sp, #28]
 801ecea:	2b00      	cmp	r3, #0
 801ecec:	f340 80b8 	ble.w	801ee60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801ecf0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ecf4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ecf8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ecfc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ecfe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ed02:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ed06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ed0a:	eef0 6a62 	vmov.f32	s13, s5
 801ed0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ed12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed16:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ed1a:	ee16 4a90 	vmov	r4, s13
 801ed1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ed22:	eef0 6a43 	vmov.f32	s13, s6
 801ed26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ed2a:	ee12 2a90 	vmov	r2, s5
 801ed2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ed32:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed36:	ee13 2a10 	vmov	r2, s6
 801ed3a:	931b      	str	r3, [sp, #108]	@ 0x6c
 801ed3c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ed3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed42:	931c      	str	r3, [sp, #112]	@ 0x70
 801ed44:	9b07      	ldr	r3, [sp, #28]
 801ed46:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ed48:	3b01      	subs	r3, #1
 801ed4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed4e:	9307      	str	r3, [sp, #28]
 801ed50:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ed52:	ee16 6a90 	vmov	r6, s13
 801ed56:	bf14      	ite	ne
 801ed58:	461d      	movne	r5, r3
 801ed5a:	4615      	moveq	r5, r2
 801ed5c:	eeb0 3a67 	vmov.f32	s6, s15
 801ed60:	eef0 2a47 	vmov.f32	s5, s14
 801ed64:	e6f4      	b.n	801eb50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ed66:	f111 0b01 	adds.w	fp, r1, #1
 801ed6a:	d48e      	bmi.n	801ec8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed6c:	45de      	cmp	lr, fp
 801ed6e:	db8c      	blt.n	801ec8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed70:	f110 0b01 	adds.w	fp, r0, #1
 801ed74:	d489      	bmi.n	801ec8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed76:	455b      	cmp	r3, fp
 801ed78:	db87      	blt.n	801ec8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed7a:	b21b      	sxth	r3, r3
 801ed7c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801ed80:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801ed84:	9300      	str	r3, [sp, #0]
 801ed86:	4642      	mov	r2, r8
 801ed88:	fa0f f38e 	sxth.w	r3, lr
 801ed8c:	4649      	mov	r1, r9
 801ed8e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801ed90:	f7ff fe4d 	bl	801ea2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801ed94:	e779      	b.n	801ec8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed96:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ed98:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ed9c:	1420      	asrs	r0, r4, #16
 801ed9e:	1431      	asrs	r1, r6, #16
 801eda0:	fb03 0101 	mla	r1, r3, r1, r0
 801eda4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801eda8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801edac:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801edb0:	8841      	ldrh	r1, [r0, #2]
 801edb2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801edb6:	f1be 0f00 	cmp.w	lr, #0
 801edba:	d00b      	beq.n	801edd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801edbc:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801edc0:	3b01      	subs	r3, #1
 801edc2:	005b      	lsls	r3, r3, #1
 801edc4:	3302      	adds	r3, #2
 801edc6:	eb00 0b03 	add.w	fp, r0, r3
 801edca:	5ac3      	ldrh	r3, [r0, r3]
 801edcc:	930a      	str	r3, [sp, #40]	@ 0x28
 801edce:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801edd2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801edd4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801edd8:	fb12 f30e 	smulbb	r3, r2, lr
 801eddc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ede0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ede4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ede8:	10db      	asrs	r3, r3, #3
 801edea:	ea40 000c 	orr.w	r0, r0, ip
 801edee:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801edf2:	f1ce 0c10 	rsb	ip, lr, #16
 801edf6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801edfa:	ebac 0c02 	sub.w	ip, ip, r2
 801edfe:	ea4b 0101 	orr.w	r1, fp, r1
 801ee02:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ee06:	4351      	muls	r1, r2
 801ee08:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ee0a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801ee0e:	fb0c 1c00 	mla	ip, ip, r0, r1
 801ee12:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801ee16:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801ee1a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ee1c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801ee1e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ee22:	0412      	lsls	r2, r2, #16
 801ee24:	ea4b 0000 	orr.w	r0, fp, r0
 801ee28:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ee2c:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801ee30:	fb03 c000 	mla	r0, r3, r0, ip
 801ee34:	ea42 0b0b 	orr.w	fp, r2, fp
 801ee38:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801ee3c:	fb03 000b 	mla	r0, r3, fp, r0
 801ee40:	0d43      	lsrs	r3, r0, #21
 801ee42:	0940      	lsrs	r0, r0, #5
 801ee44:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ee48:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ee4c:	4318      	orrs	r0, r3
 801ee4e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ee50:	f82a 0b02 	strh.w	r0, [sl], #2
 801ee54:	441c      	add	r4, r3
 801ee56:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ee58:	f109 39ff 	add.w	r9, r9, #4294967295
 801ee5c:	441e      	add	r6, r3
 801ee5e:	e73c      	b.n	801ecda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801ee60:	b00f      	add	sp, #60	@ 0x3c
 801ee62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ee66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801ee66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee6a:	b085      	sub	sp, #20
 801ee6c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ee70:	9102      	str	r1, [sp, #8]
 801ee72:	2c00      	cmp	r4, #0
 801ee74:	fb04 7103 	mla	r1, r4, r3, r7
 801ee78:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801ee7c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ee80:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801ee84:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ee88:	f2c0 811b 	blt.w	801f0c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ee8c:	45a6      	cmp	lr, r4
 801ee8e:	f340 8118 	ble.w	801f0c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ee92:	2f00      	cmp	r7, #0
 801ee94:	f2c0 8113 	blt.w	801f0be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ee98:	42bb      	cmp	r3, r7
 801ee9a:	f340 8110 	ble.w	801f0be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ee9e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801eea2:	1c7a      	adds	r2, r7, #1
 801eea4:	f100 8110 	bmi.w	801f0c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801eea8:	4293      	cmp	r3, r2
 801eeaa:	f340 810d 	ble.w	801f0c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801eeae:	2e00      	cmp	r6, #0
 801eeb0:	f000 810c 	beq.w	801f0cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801eeb4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801eeb8:	3401      	adds	r4, #1
 801eeba:	f100 810b 	bmi.w	801f0d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801eebe:	45a6      	cmp	lr, r4
 801eec0:	f340 8108 	ble.w	801f0d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801eec4:	2800      	cmp	r0, #0
 801eec6:	f000 8108 	beq.w	801f0da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801eeca:	2f00      	cmp	r7, #0
 801eecc:	f2c0 8100 	blt.w	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801eed0:	42bb      	cmp	r3, r7
 801eed2:	f340 80fd 	ble.w	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801eed6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801eeda:	3701      	adds	r7, #1
 801eedc:	f100 8100 	bmi.w	801f0e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801eee0:	42bb      	cmp	r3, r7
 801eee2:	f340 80fd 	ble.w	801f0e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801eee6:	2e00      	cmp	r6, #0
 801eee8:	f000 80fc 	beq.w	801f0e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801eeec:	3301      	adds	r3, #1
 801eeee:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801eef2:	b2b6      	uxth	r6, r6
 801eef4:	b280      	uxth	r0, r0
 801eef6:	fb00 fe06 	mul.w	lr, r0, r6
 801eefa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801eefe:	0136      	lsls	r6, r6, #4
 801ef00:	eba6 070e 	sub.w	r7, r6, lr
 801ef04:	b280      	uxth	r0, r0
 801ef06:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801ef0a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ef0e:	b2bf      	uxth	r7, r7
 801ef10:	1a1b      	subs	r3, r3, r0
 801ef12:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ef16:	b29b      	uxth	r3, r3
 801ef18:	fb0a f607 	mul.w	r6, sl, r7
 801ef1c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ef20:	fb0b 6603 	mla	r6, fp, r3, r6
 801ef24:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ef28:	fb00 6609 	mla	r6, r0, r9, r6
 801ef2c:	fb0e 6608 	mla	r6, lr, r8, r6
 801ef30:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ef34:	9600      	str	r6, [sp, #0]
 801ef36:	2e00      	cmp	r6, #0
 801ef38:	f000 80be 	beq.w	801f0b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801ef3c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ef40:	fb0b fc0c 	mul.w	ip, fp, ip
 801ef44:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801ef48:	fb0b f505 	mul.w	r5, fp, r5
 801ef4c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ef50:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801ef54:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ef58:	44dc      	add	ip, fp
 801ef5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef5e:	9501      	str	r5, [sp, #4]
 801ef60:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ef64:	9503      	str	r5, [sp, #12]
 801ef66:	9d01      	ldr	r5, [sp, #4]
 801ef68:	9e02      	ldr	r6, [sp, #8]
 801ef6a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ef6e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ef72:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ef76:	fb0a fc0c 	mul.w	ip, sl, ip
 801ef7a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ef7e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ef82:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ef86:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ef8a:	4465      	add	r5, ip
 801ef8c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ef90:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ef94:	fb09 fc0c 	mul.w	ip, r9, ip
 801ef98:	fb09 f904 	mul.w	r9, r9, r4
 801ef9c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801efa0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801efa4:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801efa8:	fb08 f404 	mul.w	r4, r8, r4
 801efac:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801efb0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801efb4:	fb08 f802 	mul.w	r8, r8, r2
 801efb8:	fb0a fa01 	mul.w	sl, sl, r1
 801efbc:	0a22      	lsrs	r2, r4, #8
 801efbe:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801efc2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801efc6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801efca:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801efce:	4414      	add	r4, r2
 801efd0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801efd4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801efd8:	0a2d      	lsrs	r5, r5, #8
 801efda:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801efde:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801efe2:	9a03      	ldr	r2, [sp, #12]
 801efe4:	8836      	ldrh	r6, [r6, #0]
 801efe6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801efea:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801efee:	437d      	muls	r5, r7
 801eff0:	4461      	add	r1, ip
 801eff2:	0a24      	lsrs	r4, r4, #8
 801eff4:	fb02 5503 	mla	r5, r2, r3, r5
 801eff8:	0a09      	lsrs	r1, r1, #8
 801effa:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801effe:	fb04 540e 	mla	r4, r4, lr, r5
 801f002:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f006:	fb01 4100 	mla	r1, r1, r0, r4
 801f00a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f00e:	0a09      	lsrs	r1, r1, #8
 801f010:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f014:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f018:	fb07 f70a 	mul.w	r7, r7, sl
 801f01c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f020:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f024:	fb03 7101 	mla	r1, r3, r1, r7
 801f028:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f02c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f030:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f034:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f038:	fb00 e101 	mla	r1, r0, r1, lr
 801f03c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801f040:	9a00      	ldr	r2, [sp, #0]
 801f042:	b287      	uxth	r7, r0
 801f044:	437a      	muls	r2, r7
 801f046:	0a09      	lsrs	r1, r1, #8
 801f048:	1c53      	adds	r3, r2, #1
 801f04a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f04e:	4321      	orrs	r1, r4
 801f050:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f054:	1235      	asrs	r5, r6, #8
 801f056:	0c0a      	lsrs	r2, r1, #16
 801f058:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801f05c:	b2db      	uxtb	r3, r3
 801f05e:	fb12 f207 	smulbb	r2, r2, r7
 801f062:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f066:	fb05 2503 	mla	r5, r5, r3, r2
 801f06a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801f06e:	10f2      	asrs	r2, r6, #3
 801f070:	b2c8      	uxtb	r0, r1
 801f072:	00f6      	lsls	r6, r6, #3
 801f074:	fb14 f407 	smulbb	r4, r4, r7
 801f078:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f07c:	b2f6      	uxtb	r6, r6
 801f07e:	fb10 f007 	smulbb	r0, r0, r7
 801f082:	fb02 4203 	mla	r2, r2, r3, r4
 801f086:	b2ad      	uxth	r5, r5
 801f088:	fb06 0303 	mla	r3, r6, r3, r0
 801f08c:	b299      	uxth	r1, r3
 801f08e:	b294      	uxth	r4, r2
 801f090:	1c6b      	adds	r3, r5, #1
 801f092:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f096:	1c62      	adds	r2, r4, #1
 801f098:	1c4b      	adds	r3, r1, #1
 801f09a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f09e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801f0a2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f0a6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f0aa:	0952      	lsrs	r2, r2, #5
 801f0ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f0b0:	432b      	orrs	r3, r5
 801f0b2:	4313      	orrs	r3, r2
 801f0b4:	9a02      	ldr	r2, [sp, #8]
 801f0b6:	8013      	strh	r3, [r2, #0]
 801f0b8:	b005      	add	sp, #20
 801f0ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0be:	2500      	movs	r5, #0
 801f0c0:	e6ef      	b.n	801eea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801f0c2:	2100      	movs	r1, #0
 801f0c4:	460d      	mov	r5, r1
 801f0c6:	e6f7      	b.n	801eeb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f0c8:	2100      	movs	r1, #0
 801f0ca:	e6f5      	b.n	801eeb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f0cc:	4631      	mov	r1, r6
 801f0ce:	e6f3      	b.n	801eeb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f0d0:	2400      	movs	r4, #0
 801f0d2:	e702      	b.n	801eeda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801f0d4:	2200      	movs	r2, #0
 801f0d6:	4614      	mov	r4, r2
 801f0d8:	e70b      	b.n	801eef2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f0da:	4602      	mov	r2, r0
 801f0dc:	4604      	mov	r4, r0
 801f0de:	e708      	b.n	801eef2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f0e0:	2200      	movs	r2, #0
 801f0e2:	e706      	b.n	801eef2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f0e4:	4632      	mov	r2, r6
 801f0e6:	e704      	b.n	801eef2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801f0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f0e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0ec:	b09d      	sub	sp, #116	@ 0x74
 801f0ee:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801f0f2:	9219      	str	r2, [sp, #100]	@ 0x64
 801f0f4:	9307      	str	r3, [sp, #28]
 801f0f6:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801f0f8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801f0fc:	931a      	str	r3, [sp, #104]	@ 0x68
 801f0fe:	9117      	str	r1, [sp, #92]	@ 0x5c
 801f100:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801f104:	901b      	str	r0, [sp, #108]	@ 0x6c
 801f106:	6850      	ldr	r0, [r2, #4]
 801f108:	6812      	ldr	r2, [r2, #0]
 801f10a:	fb00 1303 	mla	r3, r0, r3, r1
 801f10e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f112:	930a      	str	r3, [sp, #40]	@ 0x28
 801f114:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f116:	681b      	ldr	r3, [r3, #0]
 801f118:	9310      	str	r3, [sp, #64]	@ 0x40
 801f11a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801f11e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f120:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f122:	2b00      	cmp	r3, #0
 801f124:	dc03      	bgt.n	801f12e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801f126:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801f128:	2b00      	cmp	r3, #0
 801f12a:	f340 8375 	ble.w	801f818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f12e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f130:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f134:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f138:	1e48      	subs	r0, r1, #1
 801f13a:	1e57      	subs	r7, r2, #1
 801f13c:	9b07      	ldr	r3, [sp, #28]
 801f13e:	2b00      	cmp	r3, #0
 801f140:	f340 818e 	ble.w	801f460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f144:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f148:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f14c:	d406      	bmi.n	801f15c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f14e:	4584      	cmp	ip, r0
 801f150:	da04      	bge.n	801f15c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f152:	2b00      	cmp	r3, #0
 801f154:	db02      	blt.n	801f15c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f156:	42bb      	cmp	r3, r7
 801f158:	f2c0 8183 	blt.w	801f462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801f15c:	f11c 0c01 	adds.w	ip, ip, #1
 801f160:	f100 8173 	bmi.w	801f44a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f164:	4561      	cmp	r1, ip
 801f166:	f2c0 8170 	blt.w	801f44a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f16a:	3301      	adds	r3, #1
 801f16c:	f100 816d 	bmi.w	801f44a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f170:	429a      	cmp	r2, r3
 801f172:	f2c0 816a 	blt.w	801f44a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f176:	9b07      	ldr	r3, [sp, #28]
 801f178:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f17a:	9318      	str	r3, [sp, #96]	@ 0x60
 801f17c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f17e:	2b00      	cmp	r3, #0
 801f180:	f340 818c 	ble.w	801f49c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801f184:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801f186:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f188:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f18c:	689b      	ldr	r3, [r3, #8]
 801f18e:	1422      	asrs	r2, r4, #16
 801f190:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f194:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f198:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f19c:	f100 81cd 	bmi.w	801f53a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f1a0:	f103 38ff 	add.w	r8, r3, #4294967295
 801f1a4:	4542      	cmp	r2, r8
 801f1a6:	f280 81c8 	bge.w	801f53a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f1aa:	f1bc 0f00 	cmp.w	ip, #0
 801f1ae:	f2c0 81c4 	blt.w	801f53a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f1b2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f1b6:	45c4      	cmp	ip, r8
 801f1b8:	f280 81bf 	bge.w	801f53a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f1bc:	b21b      	sxth	r3, r3
 801f1be:	fb0c 2203 	mla	r2, ip, r3, r2
 801f1c2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f1c4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f1c8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f1cc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f1d0:	2800      	cmp	r0, #0
 801f1d2:	f000 81a9 	beq.w	801f528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801f1d6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f1da:	950c      	str	r5, [sp, #48]	@ 0x30
 801f1dc:	0e2d      	lsrs	r5, r5, #24
 801f1de:	9513      	str	r5, [sp, #76]	@ 0x4c
 801f1e0:	b181      	cbz	r1, 801f204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f1e2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f1e6:	3b01      	subs	r3, #1
 801f1e8:	009b      	lsls	r3, r3, #2
 801f1ea:	3304      	adds	r3, #4
 801f1ec:	eb08 0c03 	add.w	ip, r8, r3
 801f1f0:	f858 3003 	ldr.w	r3, [r8, r3]
 801f1f4:	9308      	str	r3, [sp, #32]
 801f1f6:	0e1b      	lsrs	r3, r3, #24
 801f1f8:	9311      	str	r3, [sp, #68]	@ 0x44
 801f1fa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f1fe:	930d      	str	r3, [sp, #52]	@ 0x34
 801f200:	0e1b      	lsrs	r3, r3, #24
 801f202:	9314      	str	r3, [sp, #80]	@ 0x50
 801f204:	b280      	uxth	r0, r0
 801f206:	b289      	uxth	r1, r1
 801f208:	fb00 f901 	mul.w	r9, r0, r1
 801f20c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f210:	0100      	lsls	r0, r0, #4
 801f212:	eba0 0809 	sub.w	r8, r0, r9
 801f216:	b289      	uxth	r1, r1
 801f218:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801f21c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f21e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f220:	fa1f f888 	uxth.w	r8, r8
 801f224:	1a5b      	subs	r3, r3, r1
 801f226:	b29b      	uxth	r3, r3
 801f228:	fb08 f000 	mul.w	r0, r8, r0
 801f22c:	fb03 000e 	mla	r0, r3, lr, r0
 801f230:	fb01 0005 	mla	r0, r1, r5, r0
 801f234:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f236:	fb09 0005 	mla	r0, r9, r5, r0
 801f23a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801f23e:	2800      	cmp	r0, #0
 801f240:	f000 80fa 	beq.w	801f438 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f244:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801f248:	d01b      	beq.n	801f282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801f24a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801f24e:	fb0e fa0a 	mul.w	sl, lr, sl
 801f252:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f256:	fb0e fe02 	mul.w	lr, lr, r2
 801f25a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f25e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f262:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f266:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801f26a:	4452      	add	r2, sl
 801f26c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f270:	0a12      	lsrs	r2, r2, #8
 801f272:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f276:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f27a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f27e:	ea42 020c 	orr.w	r2, r2, ip
 801f282:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f284:	2dff      	cmp	r5, #255	@ 0xff
 801f286:	d021      	beq.n	801f2cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801f288:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f28a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f28e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f290:	fb05 fb0b 	mul.w	fp, r5, fp
 801f294:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f296:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f29a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f29c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f2a0:	fb05 fa0a 	mul.w	sl, r5, sl
 801f2a4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2a8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f2ac:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f2b0:	44de      	add	lr, fp
 801f2b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f2b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f2ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2c2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f2c6:	ea4e 050a 	orr.w	r5, lr, sl
 801f2ca:	950c      	str	r5, [sp, #48]	@ 0x30
 801f2cc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f2ce:	2dff      	cmp	r5, #255	@ 0xff
 801f2d0:	d021      	beq.n	801f316 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f2d2:	9d08      	ldr	r5, [sp, #32]
 801f2d4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f2d8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f2da:	fb05 fb0b 	mul.w	fp, r5, fp
 801f2de:	9d08      	ldr	r5, [sp, #32]
 801f2e0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f2e4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f2e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f2ea:	fb05 fa0a 	mul.w	sl, r5, sl
 801f2ee:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2f2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f2f6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f2fa:	44de      	add	lr, fp
 801f2fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f300:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f304:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f308:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f30c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f310:	ea4e 050a 	orr.w	r5, lr, sl
 801f314:	9508      	str	r5, [sp, #32]
 801f316:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f318:	2dff      	cmp	r5, #255	@ 0xff
 801f31a:	d021      	beq.n	801f360 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801f31c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f31e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f322:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f324:	fb05 fb0b 	mul.w	fp, r5, fp
 801f328:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f32a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f32e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f330:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f334:	fb05 fa0a 	mul.w	sl, r5, sl
 801f338:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f33c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f340:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f344:	44de      	add	lr, fp
 801f346:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f34a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f34e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f352:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f356:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f35a:	ea4e 050a 	orr.w	r5, lr, sl
 801f35e:	950d      	str	r5, [sp, #52]	@ 0x34
 801f360:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f362:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f366:	9d08      	ldr	r5, [sp, #32]
 801f368:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801f36c:	fb08 fc0c 	mul.w	ip, r8, ip
 801f370:	fb03 cc0e 	mla	ip, r3, lr, ip
 801f374:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f378:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f37a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f37e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f382:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f384:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f388:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f38c:	fb08 f80e 	mul.w	r8, r8, lr
 801f390:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f394:	fb03 8202 	mla	r2, r3, r2, r8
 801f398:	9b08      	ldr	r3, [sp, #32]
 801f39a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f39c:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801f3a0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f3a2:	fb01 220a 	mla	r2, r1, sl, r2
 801f3a6:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801f3aa:	fb09 2901 	mla	r9, r9, r1, r2
 801f3ae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f3b0:	883b      	ldrh	r3, [r7, #0]
 801f3b2:	4342      	muls	r2, r0
 801f3b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f3b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f3bc:	1c50      	adds	r0, r2, #1
 801f3be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f3c2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801f3c6:	ea4c 0c09 	orr.w	ip, ip, r9
 801f3ca:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801f3ce:	1219      	asrs	r1, r3, #8
 801f3d0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801f3d4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801f3d8:	b2c0      	uxtb	r0, r0
 801f3da:	fb12 f205 	smulbb	r2, r2, r5
 801f3de:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f3e2:	fb01 2100 	mla	r1, r1, r0, r2
 801f3e6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801f3ea:	10da      	asrs	r2, r3, #3
 801f3ec:	fa5f fc8c 	uxtb.w	ip, ip
 801f3f0:	00db      	lsls	r3, r3, #3
 801f3f2:	fb1c fc05 	smulbb	ip, ip, r5
 801f3f6:	b2db      	uxtb	r3, r3
 801f3f8:	b289      	uxth	r1, r1
 801f3fa:	fb03 c300 	mla	r3, r3, r0, ip
 801f3fe:	fa1f fc83 	uxth.w	ip, r3
 801f402:	1c4b      	adds	r3, r1, #1
 801f404:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f408:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f40c:	fb1e fe05 	smulbb	lr, lr, r5
 801f410:	f10c 0301 	add.w	r3, ip, #1
 801f414:	fb02 e200 	mla	r2, r2, r0, lr
 801f418:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f41c:	b292      	uxth	r2, r2
 801f41e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801f422:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f426:	430b      	orrs	r3, r1
 801f428:	1c51      	adds	r1, r2, #1
 801f42a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f42e:	0952      	lsrs	r2, r2, #5
 801f430:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f434:	4313      	orrs	r3, r2
 801f436:	803b      	strh	r3, [r7, #0]
 801f438:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f43a:	441c      	add	r4, r3
 801f43c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f43e:	441e      	add	r6, r3
 801f440:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f442:	3b01      	subs	r3, #1
 801f444:	3702      	adds	r7, #2
 801f446:	9318      	str	r3, [sp, #96]	@ 0x60
 801f448:	e698      	b.n	801f17c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f44a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f44c:	441c      	add	r4, r3
 801f44e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f450:	441e      	add	r6, r3
 801f452:	9b07      	ldr	r3, [sp, #28]
 801f454:	3b01      	subs	r3, #1
 801f456:	9307      	str	r3, [sp, #28]
 801f458:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f45a:	3302      	adds	r3, #2
 801f45c:	930a      	str	r3, [sp, #40]	@ 0x28
 801f45e:	e66d      	b.n	801f13c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801f460:	d023      	beq.n	801f4aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801f462:	9b07      	ldr	r3, [sp, #28]
 801f464:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801f466:	3b01      	subs	r3, #1
 801f468:	fb00 4003 	mla	r0, r0, r3, r4
 801f46c:	1400      	asrs	r0, r0, #16
 801f46e:	f53f ae82 	bmi.w	801f176 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f472:	3901      	subs	r1, #1
 801f474:	4288      	cmp	r0, r1
 801f476:	f6bf ae7e 	bge.w	801f176 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f47a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801f47c:	fb01 6303 	mla	r3, r1, r3, r6
 801f480:	141b      	asrs	r3, r3, #16
 801f482:	f53f ae78 	bmi.w	801f176 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f486:	3a01      	subs	r2, #1
 801f488:	4293      	cmp	r3, r2
 801f48a:	f6bf ae74 	bge.w	801f176 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f48e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f492:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801f496:	f1bb 0f00 	cmp.w	fp, #0
 801f49a:	dc6c      	bgt.n	801f576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f49c:	9b07      	ldr	r3, [sp, #28]
 801f49e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f4a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f4a4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f4a8:	930a      	str	r3, [sp, #40]	@ 0x28
 801f4aa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f4ac:	2b00      	cmp	r3, #0
 801f4ae:	f340 81b3 	ble.w	801f818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f4b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f4b6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f4ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f4be:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f4c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f4c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f4c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f4cc:	eef0 6a62 	vmov.f32	s13, s5
 801f4d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f4d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f4d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f4dc:	ee16 4a90 	vmov	r4, s13
 801f4e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f4e4:	eef0 6a43 	vmov.f32	s13, s6
 801f4e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f4ec:	ee12 2a90 	vmov	r2, s5
 801f4f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f4f4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4f8:	ee13 2a10 	vmov	r2, s6
 801f4fc:	9329      	str	r3, [sp, #164]	@ 0xa4
 801f4fe:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f500:	fb92 f3f3 	sdiv	r3, r2, r3
 801f504:	932a      	str	r3, [sp, #168]	@ 0xa8
 801f506:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f508:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801f50a:	3b01      	subs	r3, #1
 801f50c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f510:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f512:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f514:	bf08      	it	eq
 801f516:	4613      	moveq	r3, r2
 801f518:	ee16 6a90 	vmov	r6, s13
 801f51c:	9307      	str	r3, [sp, #28]
 801f51e:	eeb0 3a67 	vmov.f32	s6, s15
 801f522:	eef0 2a47 	vmov.f32	s5, s14
 801f526:	e5fb      	b.n	801f120 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f528:	2900      	cmp	r1, #0
 801f52a:	f43f ae6b 	beq.w	801f204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f52e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f532:	9308      	str	r3, [sp, #32]
 801f534:	0e1b      	lsrs	r3, r3, #24
 801f536:	9311      	str	r3, [sp, #68]	@ 0x44
 801f538:	e664      	b.n	801f204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f53a:	f112 0801 	adds.w	r8, r2, #1
 801f53e:	f53f af7b 	bmi.w	801f438 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f542:	4543      	cmp	r3, r8
 801f544:	f6ff af78 	blt.w	801f438 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f548:	f11c 0801 	adds.w	r8, ip, #1
 801f54c:	f53f af74 	bmi.w	801f438 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f550:	45c6      	cmp	lr, r8
 801f552:	f6ff af71 	blt.w	801f438 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f556:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801f558:	9201      	str	r2, [sp, #4]
 801f55a:	fa0f f28e 	sxth.w	r2, lr
 801f55e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801f562:	e9cd c002 	strd	ip, r0, [sp, #8]
 801f566:	9200      	str	r2, [sp, #0]
 801f568:	b21b      	sxth	r3, r3
 801f56a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f56c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801f56e:	4639      	mov	r1, r7
 801f570:	f7ff fc79 	bl	801ee66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801f574:	e760      	b.n	801f438 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f576:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f578:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f57a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f57e:	1427      	asrs	r7, r4, #16
 801f580:	1433      	asrs	r3, r6, #16
 801f582:	fb01 7303 	mla	r3, r1, r3, r7
 801f586:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801f58a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f58e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f592:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f596:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f59a:	2a00      	cmp	r2, #0
 801f59c:	f000 8133 	beq.w	801f806 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801f5a0:	687d      	ldr	r5, [r7, #4]
 801f5a2:	950e      	str	r5, [sp, #56]	@ 0x38
 801f5a4:	0e2d      	lsrs	r5, r5, #24
 801f5a6:	9515      	str	r5, [sp, #84]	@ 0x54
 801f5a8:	b178      	cbz	r0, 801f5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f5aa:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801f5ae:	3901      	subs	r1, #1
 801f5b0:	0089      	lsls	r1, r1, #2
 801f5b2:	3104      	adds	r1, #4
 801f5b4:	eb07 0e01 	add.w	lr, r7, r1
 801f5b8:	5879      	ldr	r1, [r7, r1]
 801f5ba:	9109      	str	r1, [sp, #36]	@ 0x24
 801f5bc:	0e09      	lsrs	r1, r1, #24
 801f5be:	9112      	str	r1, [sp, #72]	@ 0x48
 801f5c0:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f5c4:	910f      	str	r1, [sp, #60]	@ 0x3c
 801f5c6:	0e09      	lsrs	r1, r1, #24
 801f5c8:	9116      	str	r1, [sp, #88]	@ 0x58
 801f5ca:	b292      	uxth	r2, r2
 801f5cc:	b280      	uxth	r0, r0
 801f5ce:	fb02 f800 	mul.w	r8, r2, r0
 801f5d2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f5d6:	0112      	lsls	r2, r2, #4
 801f5d8:	eba2 0e08 	sub.w	lr, r2, r8
 801f5dc:	b280      	uxth	r0, r0
 801f5de:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801f5e2:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801f5e4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f5e6:	fa1f fe8e 	uxth.w	lr, lr
 801f5ea:	1a12      	subs	r2, r2, r0
 801f5ec:	b292      	uxth	r2, r2
 801f5ee:	fb0e f101 	mul.w	r1, lr, r1
 801f5f2:	fb02 110c 	mla	r1, r2, ip, r1
 801f5f6:	fb00 1105 	mla	r1, r0, r5, r1
 801f5fa:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f5fc:	fb08 1105 	mla	r1, r8, r5, r1
 801f600:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f604:	2900      	cmp	r1, #0
 801f606:	f000 80f5 	beq.w	801f7f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801f60a:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f60e:	d019      	beq.n	801f644 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801f610:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f614:	fb0c fa0a 	mul.w	sl, ip, sl
 801f618:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f61c:	fb0c fc03 	mul.w	ip, ip, r3
 801f620:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f624:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f628:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f62c:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f630:	4453      	add	r3, sl
 801f632:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f636:	0a1b      	lsrs	r3, r3, #8
 801f638:	0a3f      	lsrs	r7, r7, #8
 801f63a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f63e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f642:	433b      	orrs	r3, r7
 801f644:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f646:	2dff      	cmp	r5, #255	@ 0xff
 801f648:	d020      	beq.n	801f68c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801f64a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f64c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f650:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f652:	436f      	muls	r7, r5
 801f654:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f656:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f65a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f65c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f660:	fb05 fa0a 	mul.w	sl, r5, sl
 801f664:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f668:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f66c:	44bc      	add	ip, r7
 801f66e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f672:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f676:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f67a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f67e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f682:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f686:	ea4c 050a 	orr.w	r5, ip, sl
 801f68a:	950e      	str	r5, [sp, #56]	@ 0x38
 801f68c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f68e:	2dff      	cmp	r5, #255	@ 0xff
 801f690:	d020      	beq.n	801f6d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801f692:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f694:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f698:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f69a:	436f      	muls	r7, r5
 801f69c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f69e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f6a2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f6a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f6a8:	fb05 fa0a 	mul.w	sl, r5, sl
 801f6ac:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f6b0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f6b4:	44bc      	add	ip, r7
 801f6b6:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f6ba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f6be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f6c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f6c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f6ca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f6ce:	ea4c 050a 	orr.w	r5, ip, sl
 801f6d2:	9509      	str	r5, [sp, #36]	@ 0x24
 801f6d4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f6d6:	2dff      	cmp	r5, #255	@ 0xff
 801f6d8:	d020      	beq.n	801f71c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801f6da:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f6dc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f6e0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f6e2:	436f      	muls	r7, r5
 801f6e4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f6e6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f6ea:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f6ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f6f0:	fb05 fa0a 	mul.w	sl, r5, sl
 801f6f4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f6f8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f6fc:	44bc      	add	ip, r7
 801f6fe:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f702:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f706:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f70a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f70e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f712:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f716:	ea4c 050a 	orr.w	r5, ip, sl
 801f71a:	950f      	str	r5, [sp, #60]	@ 0x3c
 801f71c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f71e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f722:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f724:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f728:	fb0e f707 	mul.w	r7, lr, r7
 801f72c:	fb02 770c 	mla	r7, r2, ip, r7
 801f730:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f734:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f736:	fb00 770c 	mla	r7, r0, ip, r7
 801f73a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f73e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f740:	fb08 770c 	mla	r7, r8, ip, r7
 801f744:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f748:	fb0e fe0c 	mul.w	lr, lr, ip
 801f74c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f750:	fb02 e303 	mla	r3, r2, r3, lr
 801f754:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f756:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f758:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801f75c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f75e:	fb00 330a 	mla	r3, r0, sl, r3
 801f762:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801f766:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f76a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f76c:	f8b9 0000 	ldrh.w	r0, [r9]
 801f770:	4359      	muls	r1, r3
 801f772:	0a3f      	lsrs	r7, r7, #8
 801f774:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f778:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f77c:	1c4b      	adds	r3, r1, #1
 801f77e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f782:	ea47 070c 	orr.w	r7, r7, ip
 801f786:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f78a:	1202      	asrs	r2, r0, #8
 801f78c:	0c3b      	lsrs	r3, r7, #16
 801f78e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f792:	b2c9      	uxtb	r1, r1
 801f794:	fb13 f305 	smulbb	r3, r3, r5
 801f798:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801f79c:	fb02 3201 	mla	r2, r2, r1, r3
 801f7a0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f7a4:	10c3      	asrs	r3, r0, #3
 801f7a6:	b2ff      	uxtb	r7, r7
 801f7a8:	00c0      	lsls	r0, r0, #3
 801f7aa:	b2c0      	uxtb	r0, r0
 801f7ac:	fb17 f705 	smulbb	r7, r7, r5
 801f7b0:	fb00 7001 	mla	r0, r0, r1, r7
 801f7b4:	b292      	uxth	r2, r2
 801f7b6:	fb1c fc05 	smulbb	ip, ip, r5
 801f7ba:	b280      	uxth	r0, r0
 801f7bc:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f7c0:	fb03 c301 	mla	r3, r3, r1, ip
 801f7c4:	1c51      	adds	r1, r2, #1
 801f7c6:	f100 0c01 	add.w	ip, r0, #1
 801f7ca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f7ce:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801f7d2:	b29b      	uxth	r3, r3
 801f7d4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f7d8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801f7dc:	ea4c 0202 	orr.w	r2, ip, r2
 801f7e0:	f103 0c01 	add.w	ip, r3, #1
 801f7e4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f7e8:	095b      	lsrs	r3, r3, #5
 801f7ea:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f7ee:	431a      	orrs	r2, r3
 801f7f0:	f8a9 2000 	strh.w	r2, [r9]
 801f7f4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f7f6:	441c      	add	r4, r3
 801f7f8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f7fa:	f109 0902 	add.w	r9, r9, #2
 801f7fe:	441e      	add	r6, r3
 801f800:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f804:	e647      	b.n	801f496 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f806:	2800      	cmp	r0, #0
 801f808:	f43f aedf 	beq.w	801f5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f80c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801f810:	9109      	str	r1, [sp, #36]	@ 0x24
 801f812:	0e09      	lsrs	r1, r1, #24
 801f814:	9112      	str	r1, [sp, #72]	@ 0x48
 801f816:	e6d8      	b.n	801f5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f818:	b01d      	add	sp, #116	@ 0x74
 801f81a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f81e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801f81e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f822:	b085      	sub	sp, #20
 801f824:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801f828:	9102      	str	r1, [sp, #8]
 801f82a:	2c00      	cmp	r4, #0
 801f82c:	fb04 7103 	mla	r1, r4, r3, r7
 801f830:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801f834:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f838:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801f83c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f840:	f2c0 810c 	blt.w	801fa5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f844:	45a6      	cmp	lr, r4
 801f846:	f340 8109 	ble.w	801fa5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f84a:	2f00      	cmp	r7, #0
 801f84c:	f2c0 8104 	blt.w	801fa58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f850:	42bb      	cmp	r3, r7
 801f852:	f340 8101 	ble.w	801fa58 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f856:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f85a:	1c7a      	adds	r2, r7, #1
 801f85c:	f100 8101 	bmi.w	801fa62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f860:	4293      	cmp	r3, r2
 801f862:	f340 80fe 	ble.w	801fa62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f866:	2e00      	cmp	r6, #0
 801f868:	f000 80fd 	beq.w	801fa66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801f86c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f870:	3401      	adds	r4, #1
 801f872:	f100 80fc 	bmi.w	801fa6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f876:	45a6      	cmp	lr, r4
 801f878:	f340 80f9 	ble.w	801fa6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f87c:	2800      	cmp	r0, #0
 801f87e:	f000 80f9 	beq.w	801fa74 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801f882:	2f00      	cmp	r7, #0
 801f884:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801f888:	f2c0 80ef 	blt.w	801fa6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f88c:	42bb      	cmp	r3, r7
 801f88e:	f340 80ec 	ble.w	801fa6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f892:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f896:	3701      	adds	r7, #1
 801f898:	f100 80ef 	bmi.w	801fa7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f89c:	42bb      	cmp	r3, r7
 801f89e:	f340 80ec 	ble.w	801fa7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f8a2:	2e00      	cmp	r6, #0
 801f8a4:	f000 80eb 	beq.w	801fa7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801f8a8:	6852      	ldr	r2, [r2, #4]
 801f8aa:	b2b6      	uxth	r6, r6
 801f8ac:	b280      	uxth	r0, r0
 801f8ae:	fb00 fe06 	mul.w	lr, r0, r6
 801f8b2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f8b6:	0136      	lsls	r6, r6, #4
 801f8b8:	eba6 070e 	sub.w	r7, r6, lr
 801f8bc:	b280      	uxth	r0, r0
 801f8be:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801f8c2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f8c6:	b2bf      	uxth	r7, r7
 801f8c8:	1a1b      	subs	r3, r3, r0
 801f8ca:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f8ce:	b29b      	uxth	r3, r3
 801f8d0:	fb07 f60a 	mul.w	r6, r7, sl
 801f8d4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f8d8:	fb0b 6603 	mla	r6, fp, r3, r6
 801f8dc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f8e0:	fb00 6609 	mla	r6, r0, r9, r6
 801f8e4:	fb0e 6608 	mla	r6, lr, r8, r6
 801f8e8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f8ec:	9600      	str	r6, [sp, #0]
 801f8ee:	2e00      	cmp	r6, #0
 801f8f0:	f000 80af 	beq.w	801fa52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801f8f4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f8f8:	fb0b fc0c 	mul.w	ip, fp, ip
 801f8fc:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801f900:	fb0b f505 	mul.w	r5, fp, r5
 801f904:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f908:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801f90c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f910:	44dc      	add	ip, fp
 801f912:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f916:	9501      	str	r5, [sp, #4]
 801f918:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801f91c:	9503      	str	r5, [sp, #12]
 801f91e:	9d01      	ldr	r5, [sp, #4]
 801f920:	9e02      	ldr	r6, [sp, #8]
 801f922:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801f926:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f92a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801f92e:	fb0a fc0c 	mul.w	ip, sl, ip
 801f932:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f936:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f93a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f93e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f942:	4465      	add	r5, ip
 801f944:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f948:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801f94c:	fb09 fc0c 	mul.w	ip, r9, ip
 801f950:	fb09 f904 	mul.w	r9, r9, r4
 801f954:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801f958:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f95c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801f960:	fb08 f404 	mul.w	r4, r8, r4
 801f964:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f968:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f96c:	fb08 f802 	mul.w	r8, r8, r2
 801f970:	fb0a fa01 	mul.w	sl, sl, r1
 801f974:	0a22      	lsrs	r2, r4, #8
 801f976:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801f97a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f97e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801f982:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f986:	4414      	add	r4, r2
 801f988:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f98c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801f990:	0a2d      	lsrs	r5, r5, #8
 801f992:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f996:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f99a:	9a03      	ldr	r2, [sp, #12]
 801f99c:	8836      	ldrh	r6, [r6, #0]
 801f99e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f9a2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f9a6:	437d      	muls	r5, r7
 801f9a8:	4461      	add	r1, ip
 801f9aa:	0a24      	lsrs	r4, r4, #8
 801f9ac:	fb02 5503 	mla	r5, r2, r3, r5
 801f9b0:	0a09      	lsrs	r1, r1, #8
 801f9b2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801f9b6:	fb04 540e 	mla	r4, r4, lr, r5
 801f9ba:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f9be:	fb01 4100 	mla	r1, r1, r0, r4
 801f9c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f9c6:	0a09      	lsrs	r1, r1, #8
 801f9c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f9cc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f9d0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f9d4:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f9d8:	fb07 f70a 	mul.w	r7, r7, sl
 801f9dc:	fb03 7101 	mla	r1, r3, r1, r7
 801f9e0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f9e4:	9b00      	ldr	r3, [sp, #0]
 801f9e6:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f9ea:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f9ee:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f9f2:	fb00 e101 	mla	r1, r0, r1, lr
 801f9f6:	43da      	mvns	r2, r3
 801f9f8:	1233      	asrs	r3, r6, #8
 801f9fa:	b2d2      	uxtb	r2, r2
 801f9fc:	10f0      	asrs	r0, r6, #3
 801f9fe:	0a09      	lsrs	r1, r1, #8
 801fa00:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801fa04:	00f6      	lsls	r6, r6, #3
 801fa06:	4353      	muls	r3, r2
 801fa08:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801fa0c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fa10:	b2f6      	uxtb	r6, r6
 801fa12:	4321      	orrs	r1, r4
 801fa14:	4350      	muls	r0, r2
 801fa16:	4356      	muls	r6, r2
 801fa18:	1c5a      	adds	r2, r3, #1
 801fa1a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fa1e:	0c0b      	lsrs	r3, r1, #16
 801fa20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fa24:	1c42      	adds	r2, r0, #1
 801fa26:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fa2a:	0a0a      	lsrs	r2, r1, #8
 801fa2c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801fa30:	021b      	lsls	r3, r3, #8
 801fa32:	00d2      	lsls	r2, r2, #3
 801fa34:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fa38:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801fa3c:	4313      	orrs	r3, r2
 801fa3e:	1c72      	adds	r2, r6, #1
 801fa40:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801fa44:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801fa48:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801fa4c:	4319      	orrs	r1, r3
 801fa4e:	9b02      	ldr	r3, [sp, #8]
 801fa50:	8019      	strh	r1, [r3, #0]
 801fa52:	b005      	add	sp, #20
 801fa54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa58:	2500      	movs	r5, #0
 801fa5a:	e6fe      	b.n	801f85a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801fa5c:	2100      	movs	r1, #0
 801fa5e:	460d      	mov	r5, r1
 801fa60:	e706      	b.n	801f870 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801fa62:	2100      	movs	r1, #0
 801fa64:	e704      	b.n	801f870 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801fa66:	4631      	mov	r1, r6
 801fa68:	e702      	b.n	801f870 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801fa6a:	2400      	movs	r4, #0
 801fa6c:	e713      	b.n	801f896 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801fa6e:	2200      	movs	r2, #0
 801fa70:	4614      	mov	r4, r2
 801fa72:	e71a      	b.n	801f8aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fa74:	4602      	mov	r2, r0
 801fa76:	4604      	mov	r4, r0
 801fa78:	e717      	b.n	801f8aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fa7a:	2200      	movs	r2, #0
 801fa7c:	e715      	b.n	801f8aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fa7e:	4632      	mov	r2, r6
 801fa80:	e713      	b.n	801f8aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801fa84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa88:	b09b      	sub	sp, #108	@ 0x6c
 801fa8a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801fa8e:	9218      	str	r2, [sp, #96]	@ 0x60
 801fa90:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801fa92:	9116      	str	r1, [sp, #88]	@ 0x58
 801fa94:	9307      	str	r3, [sp, #28]
 801fa96:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801fa9a:	9019      	str	r0, [sp, #100]	@ 0x64
 801fa9c:	6850      	ldr	r0, [r2, #4]
 801fa9e:	6812      	ldr	r2, [r2, #0]
 801faa0:	fb00 1303 	mla	r3, r0, r3, r1
 801faa4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801faa8:	930a      	str	r3, [sp, #40]	@ 0x28
 801faaa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801faac:	681b      	ldr	r3, [r3, #0]
 801faae:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fab0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801fab2:	2b00      	cmp	r3, #0
 801fab4:	dc03      	bgt.n	801fabe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fab6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fab8:	2b00      	cmp	r3, #0
 801faba:	f340 8386 	ble.w	80201ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801fabe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801fac0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fac4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fac8:	1e48      	subs	r0, r1, #1
 801faca:	1e57      	subs	r7, r2, #1
 801facc:	9b07      	ldr	r3, [sp, #28]
 801face:	2b00      	cmp	r3, #0
 801fad0:	f340 8166 	ble.w	801fda0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801fad4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fad8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fadc:	d406      	bmi.n	801faec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fade:	4584      	cmp	ip, r0
 801fae0:	da04      	bge.n	801faec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fae2:	2b00      	cmp	r3, #0
 801fae4:	db02      	blt.n	801faec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fae6:	42bb      	cmp	r3, r7
 801fae8:	f2c0 815b 	blt.w	801fda2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801faec:	f11c 0c01 	adds.w	ip, ip, #1
 801faf0:	f100 814b 	bmi.w	801fd8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801faf4:	4561      	cmp	r1, ip
 801faf6:	f2c0 8148 	blt.w	801fd8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fafa:	3301      	adds	r3, #1
 801fafc:	f100 8145 	bmi.w	801fd8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fb00:	429a      	cmp	r2, r3
 801fb02:	f2c0 8142 	blt.w	801fd8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fb06:	9b07      	ldr	r3, [sp, #28]
 801fb08:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801fb0a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801fb0c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fb0e:	2b00      	cmp	r3, #0
 801fb10:	f340 8165 	ble.w	801fdde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fb14:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801fb16:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801fb18:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fb1c:	689b      	ldr	r3, [r3, #8]
 801fb1e:	1422      	asrs	r2, r4, #16
 801fb20:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801fb24:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801fb28:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fb2c:	f100 81d5 	bmi.w	801feda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fb30:	f103 38ff 	add.w	r8, r3, #4294967295
 801fb34:	4542      	cmp	r2, r8
 801fb36:	f280 81d0 	bge.w	801feda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fb3a:	f1bc 0f00 	cmp.w	ip, #0
 801fb3e:	f2c0 81cc 	blt.w	801feda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fb42:	f10e 38ff 	add.w	r8, lr, #4294967295
 801fb46:	45c4      	cmp	ip, r8
 801fb48:	f280 81c7 	bge.w	801feda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fb4c:	b21b      	sxth	r3, r3
 801fb4e:	fb0c 2203 	mla	r2, ip, r3, r2
 801fb52:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801fb54:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801fb58:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801fb5c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801fb60:	2900      	cmp	r1, #0
 801fb62:	f000 8182 	beq.w	801fe6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fb66:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801fb6a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801fb6c:	0e2d      	lsrs	r5, r5, #24
 801fb6e:	9512      	str	r5, [sp, #72]	@ 0x48
 801fb70:	b180      	cbz	r0, 801fb94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fb72:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801fb76:	3b01      	subs	r3, #1
 801fb78:	009b      	lsls	r3, r3, #2
 801fb7a:	3304      	adds	r3, #4
 801fb7c:	eb08 0c03 	add.w	ip, r8, r3
 801fb80:	f858 3003 	ldr.w	r3, [r8, r3]
 801fb84:	9308      	str	r3, [sp, #32]
 801fb86:	0e1b      	lsrs	r3, r3, #24
 801fb88:	9310      	str	r3, [sp, #64]	@ 0x40
 801fb8a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801fb8e:	930c      	str	r3, [sp, #48]	@ 0x30
 801fb90:	0e1b      	lsrs	r3, r3, #24
 801fb92:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fb94:	b289      	uxth	r1, r1
 801fb96:	b280      	uxth	r0, r0
 801fb98:	fb01 f900 	mul.w	r9, r1, r0
 801fb9c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801fba0:	0109      	lsls	r1, r1, #4
 801fba2:	eba1 0809 	sub.w	r8, r1, r9
 801fba6:	b280      	uxth	r0, r0
 801fba8:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801fbac:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801fbae:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fbb0:	fa1f f888 	uxth.w	r8, r8
 801fbb4:	1a09      	subs	r1, r1, r0
 801fbb6:	b289      	uxth	r1, r1
 801fbb8:	fb08 f303 	mul.w	r3, r8, r3
 801fbbc:	fb01 330e 	mla	r3, r1, lr, r3
 801fbc0:	fb00 3305 	mla	r3, r0, r5, r3
 801fbc4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fbc6:	fb09 3305 	mla	r3, r9, r5, r3
 801fbca:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fbce:	2b00      	cmp	r3, #0
 801fbd0:	f000 80d2 	beq.w	801fd78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fbd4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801fbd8:	d01b      	beq.n	801fc12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801fbda:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801fbde:	fb0e fa0a 	mul.w	sl, lr, sl
 801fbe2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fbe6:	fb0e fe02 	mul.w	lr, lr, r2
 801fbea:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801fbee:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fbf2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801fbf6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801fbfa:	4452      	add	r2, sl
 801fbfc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fc00:	0a12      	lsrs	r2, r2, #8
 801fc02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fc06:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fc0a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801fc0e:	ea42 020c 	orr.w	r2, r2, ip
 801fc12:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fc14:	2dff      	cmp	r5, #255	@ 0xff
 801fc16:	d021      	beq.n	801fc5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801fc18:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fc1a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fc1e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fc20:	fb05 fb0b 	mul.w	fp, r5, fp
 801fc24:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fc26:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fc2a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fc2c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fc30:	fb05 fa0a 	mul.w	sl, r5, sl
 801fc34:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc38:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fc3c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fc40:	44de      	add	lr, fp
 801fc42:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fc46:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fc4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc4e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc52:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fc56:	ea4e 050a 	orr.w	r5, lr, sl
 801fc5a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801fc5c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fc5e:	2dff      	cmp	r5, #255	@ 0xff
 801fc60:	d021      	beq.n	801fca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801fc62:	9d08      	ldr	r5, [sp, #32]
 801fc64:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fc68:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fc6a:	fb05 fb0b 	mul.w	fp, r5, fp
 801fc6e:	9d08      	ldr	r5, [sp, #32]
 801fc70:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801fc74:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fc76:	fb05 fa0e 	mul.w	sl, r5, lr
 801fc7a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fc7e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc82:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fc86:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fc8a:	44de      	add	lr, fp
 801fc8c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fc90:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fc94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc98:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fc9c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fca0:	ea4e 050a 	orr.w	r5, lr, sl
 801fca4:	9508      	str	r5, [sp, #32]
 801fca6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fca8:	2dff      	cmp	r5, #255	@ 0xff
 801fcaa:	d021      	beq.n	801fcf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801fcac:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fcae:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fcb2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fcb4:	fb05 fb0b 	mul.w	fp, r5, fp
 801fcb8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fcba:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fcbe:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fcc0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fcc4:	fb05 fa0a 	mul.w	sl, r5, sl
 801fcc8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fccc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fcd0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fcd4:	44de      	add	lr, fp
 801fcd6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fcda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fcde:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fce2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fce6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fcea:	ea4e 050a 	orr.w	r5, lr, sl
 801fcee:	950c      	str	r5, [sp, #48]	@ 0x30
 801fcf0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fcf2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801fcf6:	9d08      	ldr	r5, [sp, #32]
 801fcf8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801fcfc:	fb08 fc0c 	mul.w	ip, r8, ip
 801fd00:	fb01 cc0e 	mla	ip, r1, lr, ip
 801fd04:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801fd08:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fd0a:	fb00 cc0e 	mla	ip, r0, lr, ip
 801fd0e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801fd12:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fd14:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fd18:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801fd1c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fd20:	fb08 f80e 	mul.w	r8, r8, lr
 801fd24:	fb01 8202 	mla	r2, r1, r2, r8
 801fd28:	9908      	ldr	r1, [sp, #32]
 801fd2a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801fd2e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801fd30:	fb00 220a 	mla	r2, r0, sl, r2
 801fd34:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801fd38:	fb09 2900 	mla	r9, r9, r0, r2
 801fd3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd40:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fd44:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fd48:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801fd4c:	ea4c 0c09 	orr.w	ip, ip, r9
 801fd50:	2bff      	cmp	r3, #255	@ 0xff
 801fd52:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801fd56:	f040 8091 	bne.w	801fe7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801fd5a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801fd5e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801fd62:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fd66:	f022 0207 	bic.w	r2, r2, #7
 801fd6a:	431a      	orrs	r2, r3
 801fd6c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801fd70:	ea4c 0c02 	orr.w	ip, ip, r2
 801fd74:	f8a7 c000 	strh.w	ip, [r7]
 801fd78:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801fd7a:	441c      	add	r4, r3
 801fd7c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fd7e:	441e      	add	r6, r3
 801fd80:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fd82:	3b01      	subs	r3, #1
 801fd84:	3702      	adds	r7, #2
 801fd86:	9317      	str	r3, [sp, #92]	@ 0x5c
 801fd88:	e6c0      	b.n	801fb0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fd8a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801fd8c:	441c      	add	r4, r3
 801fd8e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fd90:	441e      	add	r6, r3
 801fd92:	9b07      	ldr	r3, [sp, #28]
 801fd94:	3b01      	subs	r3, #1
 801fd96:	9307      	str	r3, [sp, #28]
 801fd98:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fd9a:	3302      	adds	r3, #2
 801fd9c:	930a      	str	r3, [sp, #40]	@ 0x28
 801fd9e:	e695      	b.n	801facc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fda0:	d024      	beq.n	801fdec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801fda2:	9b07      	ldr	r3, [sp, #28]
 801fda4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801fda6:	3b01      	subs	r3, #1
 801fda8:	fb00 4003 	mla	r0, r0, r3, r4
 801fdac:	1400      	asrs	r0, r0, #16
 801fdae:	f53f aeaa 	bmi.w	801fb06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fdb2:	3901      	subs	r1, #1
 801fdb4:	4288      	cmp	r0, r1
 801fdb6:	f6bf aea6 	bge.w	801fb06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fdba:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801fdbc:	fb01 6303 	mla	r3, r1, r3, r6
 801fdc0:	141b      	asrs	r3, r3, #16
 801fdc2:	f53f aea0 	bmi.w	801fb06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fdc6:	3a01      	subs	r2, #1
 801fdc8:	4293      	cmp	r3, r2
 801fdca:	f6bf ae9c 	bge.w	801fb06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fdce:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fdd2:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801fdd6:	f1bb 0f00 	cmp.w	fp, #0
 801fdda:	f300 809a 	bgt.w	801ff12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801fdde:	9b07      	ldr	r3, [sp, #28]
 801fde0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fde4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fde6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801fdea:	930a      	str	r3, [sp, #40]	@ 0x28
 801fdec:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801fdee:	2b00      	cmp	r3, #0
 801fdf0:	f340 81eb 	ble.w	80201ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801fdf4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fdf8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fdfc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fe00:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fe06:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fe0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fe0e:	eef0 6a62 	vmov.f32	s13, s5
 801fe12:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fe16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fe1e:	ee16 4a90 	vmov	r4, s13
 801fe22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fe26:	eef0 6a43 	vmov.f32	s13, s6
 801fe2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fe2e:	ee12 2a90 	vmov	r2, s5
 801fe32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fe36:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe3a:	ee13 2a10 	vmov	r2, s6
 801fe3e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801fe40:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe42:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe46:	9328      	str	r3, [sp, #160]	@ 0xa0
 801fe48:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801fe4a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801fe4c:	3b01      	subs	r3, #1
 801fe4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe52:	9316      	str	r3, [sp, #88]	@ 0x58
 801fe54:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe56:	bf08      	it	eq
 801fe58:	4613      	moveq	r3, r2
 801fe5a:	ee16 6a90 	vmov	r6, s13
 801fe5e:	9307      	str	r3, [sp, #28]
 801fe60:	eeb0 3a67 	vmov.f32	s6, s15
 801fe64:	eef0 2a47 	vmov.f32	s5, s14
 801fe68:	e622      	b.n	801fab0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801fe6a:	2800      	cmp	r0, #0
 801fe6c:	f43f ae92 	beq.w	801fb94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fe70:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801fe74:	9308      	str	r3, [sp, #32]
 801fe76:	0e1b      	lsrs	r3, r3, #24
 801fe78:	9310      	str	r3, [sp, #64]	@ 0x40
 801fe7a:	e68b      	b.n	801fb94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fe7c:	8839      	ldrh	r1, [r7, #0]
 801fe7e:	4dd4      	ldr	r5, [pc, #848]	@ (80201d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801fe80:	43db      	mvns	r3, r3
 801fe82:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801fe86:	fa5f f883 	uxtb.w	r8, r3
 801fe8a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801fe8e:	fb0e fe08 	mul.w	lr, lr, r8
 801fe92:	10c8      	asrs	r0, r1, #3
 801fe94:	00cb      	lsls	r3, r1, #3
 801fe96:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fe9a:	f10e 0101 	add.w	r1, lr, #1
 801fe9e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801fea2:	fb00 f008 	mul.w	r0, r0, r8
 801fea6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801feaa:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801feae:	f100 0e01 	add.w	lr, r0, #1
 801feb2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801feb6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801feba:	b2db      	uxtb	r3, r3
 801febc:	b2c9      	uxtb	r1, r1
 801febe:	00d2      	lsls	r2, r2, #3
 801fec0:	fb03 f308 	mul.w	r3, r3, r8
 801fec4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801fec8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fecc:	430a      	orrs	r2, r1
 801fece:	1c59      	adds	r1, r3, #1
 801fed0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fed4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801fed8:	e748      	b.n	801fd6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801feda:	f112 0801 	adds.w	r8, r2, #1
 801fede:	f53f af4b 	bmi.w	801fd78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fee2:	4543      	cmp	r3, r8
 801fee4:	f6ff af48 	blt.w	801fd78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fee8:	f11c 0801 	adds.w	r8, ip, #1
 801feec:	f53f af44 	bmi.w	801fd78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fef0:	45c6      	cmp	lr, r8
 801fef2:	f6ff af41 	blt.w	801fd78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fef6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801fefa:	fa0f f28e 	sxth.w	r2, lr
 801fefe:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ff02:	9200      	str	r2, [sp, #0]
 801ff04:	b21b      	sxth	r3, r3
 801ff06:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ff08:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801ff0a:	4639      	mov	r1, r7
 801ff0c:	f7ff fc87 	bl	801f81e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ff10:	e732      	b.n	801fd78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ff12:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ff14:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ff16:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ff1a:	1421      	asrs	r1, r4, #16
 801ff1c:	1433      	asrs	r3, r6, #16
 801ff1e:	fb07 1303 	mla	r3, r7, r3, r1
 801ff22:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ff24:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ff28:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ff2c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ff30:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ff34:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ff38:	2a00      	cmp	r2, #0
 801ff3a:	f000 8107 	beq.w	802014c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801ff3e:	684d      	ldr	r5, [r1, #4]
 801ff40:	950d      	str	r5, [sp, #52]	@ 0x34
 801ff42:	0e2d      	lsrs	r5, r5, #24
 801ff44:	9514      	str	r5, [sp, #80]	@ 0x50
 801ff46:	b178      	cbz	r0, 801ff68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ff48:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801ff4c:	3f01      	subs	r7, #1
 801ff4e:	00bf      	lsls	r7, r7, #2
 801ff50:	3704      	adds	r7, #4
 801ff52:	eb01 0e07 	add.w	lr, r1, r7
 801ff56:	59c9      	ldr	r1, [r1, r7]
 801ff58:	9109      	str	r1, [sp, #36]	@ 0x24
 801ff5a:	0e09      	lsrs	r1, r1, #24
 801ff5c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ff5e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ff62:	910e      	str	r1, [sp, #56]	@ 0x38
 801ff64:	0e09      	lsrs	r1, r1, #24
 801ff66:	9115      	str	r1, [sp, #84]	@ 0x54
 801ff68:	b292      	uxth	r2, r2
 801ff6a:	b280      	uxth	r0, r0
 801ff6c:	fb02 f900 	mul.w	r9, r2, r0
 801ff70:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ff74:	0112      	lsls	r2, r2, #4
 801ff76:	eba2 0e09 	sub.w	lr, r2, r9
 801ff7a:	b280      	uxth	r0, r0
 801ff7c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801ff80:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ff82:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ff84:	fa1f fe8e 	uxth.w	lr, lr
 801ff88:	1a09      	subs	r1, r1, r0
 801ff8a:	b289      	uxth	r1, r1
 801ff8c:	fb0e f202 	mul.w	r2, lr, r2
 801ff90:	fb01 220c 	mla	r2, r1, ip, r2
 801ff94:	fb00 2205 	mla	r2, r0, r5, r2
 801ff98:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ff9a:	fb09 2205 	mla	r2, r9, r5, r2
 801ff9e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ffa2:	2a00      	cmp	r2, #0
 801ffa4:	f000 80c9 	beq.w	802013a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ffa8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ffac:	d019      	beq.n	801ffe2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ffae:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ffb2:	fb0c fa0a 	mul.w	sl, ip, sl
 801ffb6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ffba:	fb0c fc03 	mul.w	ip, ip, r3
 801ffbe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ffc2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ffc6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ffca:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ffce:	4453      	add	r3, sl
 801ffd0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ffd4:	0a1b      	lsrs	r3, r3, #8
 801ffd6:	0a3f      	lsrs	r7, r7, #8
 801ffd8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ffdc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ffe0:	433b      	orrs	r3, r7
 801ffe2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ffe4:	2dff      	cmp	r5, #255	@ 0xff
 801ffe6:	d020      	beq.n	802002a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ffe8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ffea:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ffee:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fff0:	436f      	muls	r7, r5
 801fff2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fff4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fff8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fffa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fffe:	fb05 fa0a 	mul.w	sl, r5, sl
 8020002:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020006:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802000a:	44bc      	add	ip, r7
 802000c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020010:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020014:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020018:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802001c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020020:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020024:	ea4c 050a 	orr.w	r5, ip, sl
 8020028:	950d      	str	r5, [sp, #52]	@ 0x34
 802002a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802002c:	2dff      	cmp	r5, #255	@ 0xff
 802002e:	d020      	beq.n	8020072 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8020030:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020032:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8020036:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020038:	436f      	muls	r7, r5
 802003a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802003c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8020040:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020042:	fb05 fa0c 	mul.w	sl, r5, ip
 8020046:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802004a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802004e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020052:	44bc      	add	ip, r7
 8020054:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020058:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802005c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020060:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020064:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020068:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802006c:	ea4c 050a 	orr.w	r5, ip, sl
 8020070:	9509      	str	r5, [sp, #36]	@ 0x24
 8020072:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020074:	2dff      	cmp	r5, #255	@ 0xff
 8020076:	d020      	beq.n	80200ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8020078:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802007a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802007e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020080:	436f      	muls	r7, r5
 8020082:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020084:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020088:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802008a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802008e:	fb05 fa0a 	mul.w	sl, r5, sl
 8020092:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020096:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802009a:	44bc      	add	ip, r7
 802009c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80200a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80200a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80200a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80200ac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80200b0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80200b4:	ea4c 050a 	orr.w	r5, ip, sl
 80200b8:	950e      	str	r5, [sp, #56]	@ 0x38
 80200ba:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80200bc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80200c0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80200c2:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80200c6:	fb0e f707 	mul.w	r7, lr, r7
 80200ca:	fb01 770c 	mla	r7, r1, ip, r7
 80200ce:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80200d2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80200d4:	fb00 770c 	mla	r7, r0, ip, r7
 80200d8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80200dc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80200de:	fb09 770c 	mla	r7, r9, ip, r7
 80200e2:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80200e6:	fb0e fe0c 	mul.w	lr, lr, ip
 80200ea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80200ee:	fb01 e303 	mla	r3, r1, r3, lr
 80200f2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80200f4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80200f8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80200fa:	fb00 330a 	mla	r3, r0, sl, r3
 80200fe:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8020102:	fb09 3c0c 	mla	ip, r9, ip, r3
 8020106:	0a3f      	lsrs	r7, r7, #8
 8020108:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802010c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020110:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020114:	ea47 070c 	orr.w	r7, r7, ip
 8020118:	2aff      	cmp	r2, #255	@ 0xff
 802011a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802011e:	d11e      	bne.n	802015e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8020120:	097a      	lsrs	r2, r7, #5
 8020122:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8020126:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802012a:	f023 0307 	bic.w	r3, r3, #7
 802012e:	4313      	orrs	r3, r2
 8020130:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8020134:	431f      	orrs	r7, r3
 8020136:	f8a8 7000 	strh.w	r7, [r8]
 802013a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802013c:	441c      	add	r4, r3
 802013e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020140:	f108 0802 	add.w	r8, r8, #2
 8020144:	441e      	add	r6, r3
 8020146:	f10b 3bff 	add.w	fp, fp, #4294967295
 802014a:	e644      	b.n	801fdd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802014c:	2800      	cmp	r0, #0
 802014e:	f43f af0b 	beq.w	801ff68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020152:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8020156:	9109      	str	r1, [sp, #36]	@ 0x24
 8020158:	0e09      	lsrs	r1, r1, #24
 802015a:	9111      	str	r1, [sp, #68]	@ 0x44
 802015c:	e704      	b.n	801ff68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802015e:	f8b8 1000 	ldrh.w	r1, [r8]
 8020162:	43d2      	mvns	r2, r2
 8020164:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8020168:	fa5f fe82 	uxtb.w	lr, r2
 802016c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020170:	fb0c fc0e 	mul.w	ip, ip, lr
 8020174:	10c8      	asrs	r0, r1, #3
 8020176:	00ca      	lsls	r2, r1, #3
 8020178:	f10c 0101 	add.w	r1, ip, #1
 802017c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020180:	0c39      	lsrs	r1, r7, #16
 8020182:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020186:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802018a:	4911      	ldr	r1, [pc, #68]	@ (80201d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802018c:	fb00 f00e 	mul.w	r0, r0, lr
 8020190:	fa5f fc8c 	uxtb.w	ip, ip
 8020194:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8020198:	b2d2      	uxtb	r2, r2
 802019a:	1c41      	adds	r1, r0, #1
 802019c:	fb02 f20e 	mul.w	r2, r2, lr
 80201a0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80201a4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80201a8:	1c51      	adds	r1, r2, #1
 80201aa:	00c0      	lsls	r0, r0, #3
 80201ac:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80201b0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80201b4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80201b8:	ea4c 0c00 	orr.w	ip, ip, r0
 80201bc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80201c0:	ea47 0c0c 	orr.w	ip, r7, ip
 80201c4:	f8a8 c000 	strh.w	ip, [r8]
 80201c8:	e7b7      	b.n	802013a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80201ca:	b01b      	add	sp, #108	@ 0x6c
 80201cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201d0:	fffff800 	.word	0xfffff800

080201d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80201d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80201d8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80201dc:	2d00      	cmp	r5, #0
 80201de:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80201e2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80201e6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80201ea:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80201ee:	fb05 0e03 	mla	lr, r5, r3, r0
 80201f2:	f2c0 808c 	blt.w	802030e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80201f6:	45a9      	cmp	r9, r5
 80201f8:	f340 8089 	ble.w	802030e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80201fc:	2800      	cmp	r0, #0
 80201fe:	f2c0 8084 	blt.w	802030a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8020202:	4580      	cmp	r8, r0
 8020204:	f340 8081 	ble.w	802030a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8020208:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802020c:	f01e 0f01 	tst.w	lr, #1
 8020210:	5d16      	ldrb	r6, [r2, r4]
 8020212:	bf0c      	ite	eq
 8020214:	f006 060f 	andeq.w	r6, r6, #15
 8020218:	1136      	asrne	r6, r6, #4
 802021a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802021e:	b2f6      	uxtb	r6, r6
 8020220:	1c44      	adds	r4, r0, #1
 8020222:	d477      	bmi.n	8020314 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8020224:	45a0      	cmp	r8, r4
 8020226:	dd75      	ble.n	8020314 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8020228:	2f00      	cmp	r7, #0
 802022a:	d075      	beq.n	8020318 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802022c:	f10e 0a01 	add.w	sl, lr, #1
 8020230:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020234:	f01a 0f01 	tst.w	sl, #1
 8020238:	5d14      	ldrb	r4, [r2, r4]
 802023a:	bf0c      	ite	eq
 802023c:	f004 040f 	andeq.w	r4, r4, #15
 8020240:	1124      	asrne	r4, r4, #4
 8020242:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020246:	b2e4      	uxtb	r4, r4
 8020248:	3501      	adds	r5, #1
 802024a:	d469      	bmi.n	8020320 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802024c:	45a9      	cmp	r9, r5
 802024e:	dd67      	ble.n	8020320 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8020250:	f1bc 0f00 	cmp.w	ip, #0
 8020254:	d067      	beq.n	8020326 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8020256:	2800      	cmp	r0, #0
 8020258:	db60      	blt.n	802031c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802025a:	4580      	cmp	r8, r0
 802025c:	dd5e      	ble.n	802031c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802025e:	eb03 090e 	add.w	r9, r3, lr
 8020262:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8020266:	f019 0f01 	tst.w	r9, #1
 802026a:	5d55      	ldrb	r5, [r2, r5]
 802026c:	bf0c      	ite	eq
 802026e:	f005 050f 	andeq.w	r5, r5, #15
 8020272:	112d      	asrne	r5, r5, #4
 8020274:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8020278:	b2ed      	uxtb	r5, r5
 802027a:	3001      	adds	r0, #1
 802027c:	d456      	bmi.n	802032c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802027e:	4580      	cmp	r8, r0
 8020280:	dd54      	ble.n	802032c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8020282:	2f00      	cmp	r7, #0
 8020284:	d054      	beq.n	8020330 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8020286:	3301      	adds	r3, #1
 8020288:	449e      	add	lr, r3
 802028a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802028e:	f01e 0f01 	tst.w	lr, #1
 8020292:	5cd0      	ldrb	r0, [r2, r3]
 8020294:	bf0c      	ite	eq
 8020296:	f000 000f 	andeq.w	r0, r0, #15
 802029a:	1100      	asrne	r0, r0, #4
 802029c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80202a0:	b2c3      	uxtb	r3, r0
 80202a2:	b2ba      	uxth	r2, r7
 80202a4:	fa1f fc8c 	uxth.w	ip, ip
 80202a8:	fb02 f00c 	mul.w	r0, r2, ip
 80202ac:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80202b0:	0112      	lsls	r2, r2, #4
 80202b2:	fa1f fc8c 	uxth.w	ip, ip
 80202b6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 80202ba:	1a12      	subs	r2, r2, r0
 80202bc:	eba7 070c 	sub.w	r7, r7, ip
 80202c0:	b292      	uxth	r2, r2
 80202c2:	b2bf      	uxth	r7, r7
 80202c4:	4362      	muls	r2, r4
 80202c6:	fb06 2207 	mla	r2, r6, r7, r2
 80202ca:	fb0c 2505 	mla	r5, ip, r5, r2
 80202ce:	fb00 5303 	mla	r3, r0, r3, r5
 80202d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80202d6:	b1b3      	cbz	r3, 8020306 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80202d8:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 80202dc:	435a      	muls	r2, r3
 80202de:	1c53      	adds	r3, r2, #1
 80202e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80202e4:	4a2d      	ldr	r2, [pc, #180]	@ (802039c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80202e6:	121b      	asrs	r3, r3, #8
 80202e8:	6812      	ldr	r2, [r2, #0]
 80202ea:	2bff      	cmp	r3, #255	@ 0xff
 80202ec:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80202f0:	d120      	bne.n	8020334 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80202f2:	4b2b      	ldr	r3, [pc, #172]	@ (80203a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80202f4:	0950      	lsrs	r0, r2, #5
 80202f6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80202fa:	4033      	ands	r3, r6
 80202fc:	4318      	orrs	r0, r3
 80202fe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020302:	4302      	orrs	r2, r0
 8020304:	800a      	strh	r2, [r1, #0]
 8020306:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802030a:	2600      	movs	r6, #0
 802030c:	e788      	b.n	8020220 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802030e:	2400      	movs	r4, #0
 8020310:	4626      	mov	r6, r4
 8020312:	e799      	b.n	8020248 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020314:	2400      	movs	r4, #0
 8020316:	e797      	b.n	8020248 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020318:	463c      	mov	r4, r7
 802031a:	e795      	b.n	8020248 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802031c:	2500      	movs	r5, #0
 802031e:	e7ac      	b.n	802027a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8020320:	2300      	movs	r3, #0
 8020322:	461d      	mov	r5, r3
 8020324:	e7bd      	b.n	80202a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020326:	4663      	mov	r3, ip
 8020328:	4665      	mov	r5, ip
 802032a:	e7ba      	b.n	80202a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802032c:	2300      	movs	r3, #0
 802032e:	e7b8      	b.n	80202a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020330:	463b      	mov	r3, r7
 8020332:	e7b6      	b.n	80202a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020334:	880d      	ldrh	r5, [r1, #0]
 8020336:	b29f      	uxth	r7, r3
 8020338:	122c      	asrs	r4, r5, #8
 802033a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802033e:	43db      	mvns	r3, r3
 8020340:	b2db      	uxtb	r3, r3
 8020342:	fb10 f007 	smulbb	r0, r0, r7
 8020346:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802034a:	fb04 0403 	mla	r4, r4, r3, r0
 802034e:	b2f6      	uxtb	r6, r6
 8020350:	10e8      	asrs	r0, r5, #3
 8020352:	b2d2      	uxtb	r2, r2
 8020354:	00ed      	lsls	r5, r5, #3
 8020356:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802035a:	fb12 f207 	smulbb	r2, r2, r7
 802035e:	fb16 f607 	smulbb	r6, r6, r7
 8020362:	b2ed      	uxtb	r5, r5
 8020364:	b2a4      	uxth	r4, r4
 8020366:	fb00 6603 	mla	r6, r0, r3, r6
 802036a:	fb05 2303 	mla	r3, r5, r3, r2
 802036e:	b29a      	uxth	r2, r3
 8020370:	1c63      	adds	r3, r4, #1
 8020372:	b2b0      	uxth	r0, r6
 8020374:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020378:	1c53      	adds	r3, r2, #1
 802037a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802037e:	1c42      	adds	r2, r0, #1
 8020380:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020384:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020388:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802038c:	0940      	lsrs	r0, r0, #5
 802038e:	4323      	orrs	r3, r4
 8020390:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020394:	4303      	orrs	r3, r0
 8020396:	800b      	strh	r3, [r1, #0]
 8020398:	e7b5      	b.n	8020306 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802039a:	bf00      	nop
 802039c:	20014050 	.word	0x20014050
 80203a0:	00fff800 	.word	0x00fff800

080203a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80203a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203a8:	b097      	sub	sp, #92	@ 0x5c
 80203aa:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 80203ae:	9214      	str	r2, [sp, #80]	@ 0x50
 80203b0:	9309      	str	r3, [sp, #36]	@ 0x24
 80203b2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80203b4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80203b8:	910d      	str	r1, [sp, #52]	@ 0x34
 80203ba:	930f      	str	r3, [sp, #60]	@ 0x3c
 80203bc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 80203c0:	9015      	str	r0, [sp, #84]	@ 0x54
 80203c2:	6850      	ldr	r0, [r2, #4]
 80203c4:	6812      	ldr	r2, [r2, #0]
 80203c6:	fb00 1303 	mla	r3, r0, r3, r1
 80203ca:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80203ce:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80203d0:	689b      	ldr	r3, [r3, #8]
 80203d2:	3301      	adds	r3, #1
 80203d4:	f023 0301 	bic.w	r3, r3, #1
 80203d8:	930a      	str	r3, [sp, #40]	@ 0x28
 80203da:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80203dc:	681f      	ldr	r7, [r3, #0]
 80203de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80203e0:	2b00      	cmp	r3, #0
 80203e2:	dc03      	bgt.n	80203ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80203e4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80203e6:	2b00      	cmp	r3, #0
 80203e8:	f340 8287 	ble.w	80208fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80203ec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80203ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80203f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80203f6:	1e48      	subs	r0, r1, #1
 80203f8:	f102 3cff 	add.w	ip, r2, #4294967295
 80203fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80203fe:	2b00      	cmp	r3, #0
 8020400:	f340 80c4 	ble.w	802058c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8020404:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020408:	ea4f 4326 	mov.w	r3, r6, asr #16
 802040c:	d406      	bmi.n	802041c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802040e:	4586      	cmp	lr, r0
 8020410:	da04      	bge.n	802041c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020412:	2b00      	cmp	r3, #0
 8020414:	db02      	blt.n	802041c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020416:	4563      	cmp	r3, ip
 8020418:	f2c0 80b9 	blt.w	802058e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802041c:	f11e 0e01 	adds.w	lr, lr, #1
 8020420:	f100 80aa 	bmi.w	8020578 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020424:	4571      	cmp	r1, lr
 8020426:	f2c0 80a7 	blt.w	8020578 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802042a:	3301      	adds	r3, #1
 802042c:	f100 80a4 	bmi.w	8020578 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020430:	429a      	cmp	r2, r3
 8020432:	f2c0 80a1 	blt.w	8020578 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020436:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020438:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 802043c:	930e      	str	r3, [sp, #56]	@ 0x38
 802043e:	46c8      	mov	r8, r9
 8020440:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020442:	2b00      	cmp	r3, #0
 8020444:	f340 80c3 	ble.w	80205ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020448:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802044a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802044e:	1423      	asrs	r3, r4, #16
 8020450:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020454:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020458:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802045c:	f100 814d 	bmi.w	80206fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020460:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020464:	455b      	cmp	r3, fp
 8020466:	f280 8148 	bge.w	80206fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802046a:	2800      	cmp	r0, #0
 802046c:	f2c0 8145 	blt.w	80206fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020470:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020474:	4558      	cmp	r0, fp
 8020476:	f280 8140 	bge.w	80206fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802047a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802047c:	fb00 3305 	mla	r3, r0, r5, r3
 8020480:	0858      	lsrs	r0, r3, #1
 8020482:	07dd      	lsls	r5, r3, #31
 8020484:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020488:	bf54      	ite	pl
 802048a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802048e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020492:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020496:	fa5f fc8c 	uxtb.w	ip, ip
 802049a:	2a00      	cmp	r2, #0
 802049c:	f000 80db 	beq.w	8020656 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80204a0:	1c58      	adds	r0, r3, #1
 80204a2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80204a6:	07c0      	lsls	r0, r0, #31
 80204a8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80204ac:	bf54      	ite	pl
 80204ae:	f00e 0e0f 	andpl.w	lr, lr, #15
 80204b2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80204b6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80204ba:	fa5f f08e 	uxtb.w	r0, lr
 80204be:	9010      	str	r0, [sp, #64]	@ 0x40
 80204c0:	b1c9      	cbz	r1, 80204f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80204c2:	4453      	add	r3, sl
 80204c4:	0858      	lsrs	r0, r3, #1
 80204c6:	07dd      	lsls	r5, r3, #31
 80204c8:	5c38      	ldrb	r0, [r7, r0]
 80204ca:	bf54      	ite	pl
 80204cc:	f000 000f 	andpl.w	r0, r0, #15
 80204d0:	1100      	asrmi	r0, r0, #4
 80204d2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80204d6:	3301      	adds	r3, #1
 80204d8:	b2c0      	uxtb	r0, r0
 80204da:	900b      	str	r0, [sp, #44]	@ 0x2c
 80204dc:	0858      	lsrs	r0, r3, #1
 80204de:	07dd      	lsls	r5, r3, #31
 80204e0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80204e4:	bf54      	ite	pl
 80204e6:	f00e 030f 	andpl.w	r3, lr, #15
 80204ea:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80204ee:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80204f2:	b2db      	uxtb	r3, r3
 80204f4:	9311      	str	r3, [sp, #68]	@ 0x44
 80204f6:	b292      	uxth	r2, r2
 80204f8:	b289      	uxth	r1, r1
 80204fa:	fb02 f301 	mul.w	r3, r2, r1
 80204fe:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8020502:	0112      	lsls	r2, r2, #4
 8020504:	b289      	uxth	r1, r1
 8020506:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802050a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802050c:	1ad2      	subs	r2, r2, r3
 802050e:	1a40      	subs	r0, r0, r1
 8020510:	b292      	uxth	r2, r2
 8020512:	436a      	muls	r2, r5
 8020514:	b280      	uxth	r0, r0
 8020516:	fb0c 2c00 	mla	ip, ip, r0, r2
 802051a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802051c:	fb01 c102 	mla	r1, r1, r2, ip
 8020520:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020522:	fb03 1302 	mla	r3, r3, r2, r1
 8020526:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802052a:	b1db      	cbz	r3, 8020564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802052c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802052e:	4353      	muls	r3, r2
 8020530:	1c5a      	adds	r2, r3, #1
 8020532:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020536:	4ac6      	ldr	r2, [pc, #792]	@ (8020850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8020538:	121b      	asrs	r3, r3, #8
 802053a:	6812      	ldr	r2, [r2, #0]
 802053c:	2bff      	cmp	r3, #255	@ 0xff
 802053e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8020542:	f040 8099 	bne.w	8020678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8020546:	0953      	lsrs	r3, r2, #5
 8020548:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802054c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020550:	f02c 0c07 	bic.w	ip, ip, #7
 8020554:	ea43 0c0c 	orr.w	ip, r3, ip
 8020558:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802055c:	ea4c 0202 	orr.w	r2, ip, r2
 8020560:	f8a8 2000 	strh.w	r2, [r8]
 8020564:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020566:	441c      	add	r4, r3
 8020568:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802056a:	441e      	add	r6, r3
 802056c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802056e:	3b01      	subs	r3, #1
 8020570:	f108 0802 	add.w	r8, r8, #2
 8020574:	930e      	str	r3, [sp, #56]	@ 0x38
 8020576:	e763      	b.n	8020440 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020578:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802057a:	441c      	add	r4, r3
 802057c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802057e:	441e      	add	r6, r3
 8020580:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020582:	3b01      	subs	r3, #1
 8020584:	9309      	str	r3, [sp, #36]	@ 0x24
 8020586:	f109 0902 	add.w	r9, r9, #2
 802058a:	e737      	b.n	80203fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802058c:	d024      	beq.n	80205d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802058e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020590:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8020592:	3b01      	subs	r3, #1
 8020594:	fb00 4003 	mla	r0, r0, r3, r4
 8020598:	1400      	asrs	r0, r0, #16
 802059a:	f53f af4c 	bmi.w	8020436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802059e:	3901      	subs	r1, #1
 80205a0:	4288      	cmp	r0, r1
 80205a2:	f6bf af48 	bge.w	8020436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205a6:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80205a8:	fb01 6303 	mla	r3, r1, r3, r6
 80205ac:	141b      	asrs	r3, r3, #16
 80205ae:	f53f af42 	bmi.w	8020436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205b2:	3a01      	subs	r2, #1
 80205b4:	4293      	cmp	r3, r2
 80205b6:	f6bf af3e 	bge.w	8020436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205ba:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80205be:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80205c2:	930e      	str	r3, [sp, #56]	@ 0x38
 80205c4:	46c8      	mov	r8, r9
 80205c6:	f1bb 0f00 	cmp.w	fp, #0
 80205ca:	f300 80b7 	bgt.w	802073c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80205ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80205d0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80205d4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80205d8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80205da:	2b00      	cmp	r3, #0
 80205dc:	f340 818d 	ble.w	80208fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80205e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80205e4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80205e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80205ec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80205ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80205f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80205f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80205fa:	eef0 6a62 	vmov.f32	s13, s5
 80205fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020602:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020606:	ee77 2a62 	vsub.f32	s5, s14, s5
 802060a:	ee16 4a90 	vmov	r4, s13
 802060e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020612:	eef0 6a43 	vmov.f32	s13, s6
 8020616:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802061a:	ee12 2a90 	vmov	r2, s5
 802061e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020622:	fb92 f3f3 	sdiv	r3, r2, r3
 8020626:	ee13 2a10 	vmov	r2, s6
 802062a:	9323      	str	r3, [sp, #140]	@ 0x8c
 802062c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802062e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020632:	9324      	str	r3, [sp, #144]	@ 0x90
 8020634:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020636:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020638:	3b01      	subs	r3, #1
 802063a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802063e:	930d      	str	r3, [sp, #52]	@ 0x34
 8020640:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020642:	bf08      	it	eq
 8020644:	4613      	moveq	r3, r2
 8020646:	ee16 6a90 	vmov	r6, s13
 802064a:	9309      	str	r3, [sp, #36]	@ 0x24
 802064c:	eeb0 3a67 	vmov.f32	s6, s15
 8020650:	eef0 2a47 	vmov.f32	s5, s14
 8020654:	e6c3      	b.n	80203de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020656:	2900      	cmp	r1, #0
 8020658:	f43f af4d 	beq.w	80204f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802065c:	eb0a 0003 	add.w	r0, sl, r3
 8020660:	0843      	lsrs	r3, r0, #1
 8020662:	07c0      	lsls	r0, r0, #31
 8020664:	5cfb      	ldrb	r3, [r7, r3]
 8020666:	bf54      	ite	pl
 8020668:	f003 030f 	andpl.w	r3, r3, #15
 802066c:	111b      	asrmi	r3, r3, #4
 802066e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020672:	b2db      	uxtb	r3, r3
 8020674:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020676:	e73e      	b.n	80204f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020678:	f8b8 e000 	ldrh.w	lr, [r8]
 802067c:	fa1f fb83 	uxth.w	fp, r3
 8020680:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020684:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020688:	43db      	mvns	r3, r3
 802068a:	b2db      	uxtb	r3, r3
 802068c:	fb11 f10b 	smulbb	r1, r1, fp
 8020690:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020694:	fb00 1003 	mla	r0, r0, r3, r1
 8020698:	fa5f fc8c 	uxtb.w	ip, ip
 802069c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80206a0:	b2d2      	uxtb	r2, r2
 80206a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80206a6:	b280      	uxth	r0, r0
 80206a8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80206ac:	fb1c fc0b 	smulbb	ip, ip, fp
 80206b0:	fa5f fe8e 	uxtb.w	lr, lr
 80206b4:	fb12 fb0b 	smulbb	fp, r2, fp
 80206b8:	fb01 cc03 	mla	ip, r1, r3, ip
 80206bc:	fb0e bb03 	mla	fp, lr, r3, fp
 80206c0:	1c43      	adds	r3, r0, #1
 80206c2:	fa1f fc8c 	uxth.w	ip, ip
 80206c6:	fa1f fb8b 	uxth.w	fp, fp
 80206ca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80206ce:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 80206d2:	f10c 0101 	add.w	r1, ip, #1
 80206d6:	f10b 0001 	add.w	r0, fp, #1
 80206da:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80206de:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80206e2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80206e6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80206ea:	4318      	orrs	r0, r3
 80206ec:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80206f0:	ea40 000c 	orr.w	r0, r0, ip
 80206f4:	f8a8 0000 	strh.w	r0, [r8]
 80206f8:	e734      	b.n	8020564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80206fa:	f113 0b01 	adds.w	fp, r3, #1
 80206fe:	f53f af31 	bmi.w	8020564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020702:	45dc      	cmp	ip, fp
 8020704:	f6ff af2e 	blt.w	8020564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020708:	f110 0b01 	adds.w	fp, r0, #1
 802070c:	f53f af2a 	bmi.w	8020564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020710:	45de      	cmp	lr, fp
 8020712:	f6ff af27 	blt.w	8020564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020716:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020718:	9302      	str	r3, [sp, #8]
 802071a:	fa0f f38e 	sxth.w	r3, lr
 802071e:	9301      	str	r3, [sp, #4]
 8020720:	fa0f f38c 	sxth.w	r3, ip
 8020724:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020728:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802072c:	9300      	str	r3, [sp, #0]
 802072e:	463a      	mov	r2, r7
 8020730:	4653      	mov	r3, sl
 8020732:	4641      	mov	r1, r8
 8020734:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020736:	f7ff fd4d 	bl	80201d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802073a:	e713      	b.n	8020564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802073c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802073e:	1422      	asrs	r2, r4, #16
 8020740:	1433      	asrs	r3, r6, #16
 8020742:	fb05 2303 	mla	r3, r5, r3, r2
 8020746:	085a      	lsrs	r2, r3, #1
 8020748:	07dd      	lsls	r5, r3, #31
 802074a:	5cba      	ldrb	r2, [r7, r2]
 802074c:	bf54      	ite	pl
 802074e:	f002 020f 	andpl.w	r2, r2, #15
 8020752:	1112      	asrmi	r2, r2, #4
 8020754:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020758:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802075c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020760:	b2d2      	uxtb	r2, r2
 8020762:	2900      	cmp	r1, #0
 8020764:	d076      	beq.n	8020854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020766:	f103 0e01 	add.w	lr, r3, #1
 802076a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802076e:	f01e 0f01 	tst.w	lr, #1
 8020772:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020776:	bf0c      	ite	eq
 8020778:	f00c 0c0f 	andeq.w	ip, ip, #15
 802077c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8020780:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020784:	fa5f f58c 	uxtb.w	r5, ip
 8020788:	9512      	str	r5, [sp, #72]	@ 0x48
 802078a:	b300      	cbz	r0, 80207ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802078c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802078e:	442b      	add	r3, r5
 8020790:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020794:	07dd      	lsls	r5, r3, #31
 8020796:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802079a:	bf54      	ite	pl
 802079c:	f00c 0c0f 	andpl.w	ip, ip, #15
 80207a0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80207a4:	3301      	adds	r3, #1
 80207a6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80207aa:	fa5f f58c 	uxtb.w	r5, ip
 80207ae:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80207b2:	950c      	str	r5, [sp, #48]	@ 0x30
 80207b4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80207b8:	07dd      	lsls	r5, r3, #31
 80207ba:	bf54      	ite	pl
 80207bc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80207c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80207c4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80207c8:	fa5f f38c 	uxtb.w	r3, ip
 80207cc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80207ce:	b289      	uxth	r1, r1
 80207d0:	b280      	uxth	r0, r0
 80207d2:	fb01 f300 	mul.w	r3, r1, r0
 80207d6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80207da:	0109      	lsls	r1, r1, #4
 80207dc:	b280      	uxth	r0, r0
 80207de:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 80207e2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80207e4:	1ac9      	subs	r1, r1, r3
 80207e6:	ebac 0c00 	sub.w	ip, ip, r0
 80207ea:	b289      	uxth	r1, r1
 80207ec:	4369      	muls	r1, r5
 80207ee:	fa1f fc8c 	uxth.w	ip, ip
 80207f2:	fb02 120c 	mla	r2, r2, ip, r1
 80207f6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80207f8:	fb00 2001 	mla	r0, r0, r1, r2
 80207fc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80207fe:	fb03 0302 	mla	r3, r3, r2, r0
 8020802:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020806:	b1d3      	cbz	r3, 802083e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8020808:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802080a:	4353      	muls	r3, r2
 802080c:	1c5a      	adds	r2, r3, #1
 802080e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020812:	4a0f      	ldr	r2, [pc, #60]	@ (8020850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8020814:	121b      	asrs	r3, r3, #8
 8020816:	6812      	ldr	r2, [r2, #0]
 8020818:	2bff      	cmp	r3, #255	@ 0xff
 802081a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802081e:	d12d      	bne.n	802087c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8020820:	0953      	lsrs	r3, r2, #5
 8020822:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8020826:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802082a:	f02c 0c07 	bic.w	ip, ip, #7
 802082e:	ea43 0c0c 	orr.w	ip, r3, ip
 8020832:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020836:	ea4c 0202 	orr.w	r2, ip, r2
 802083a:	f8a8 2000 	strh.w	r2, [r8]
 802083e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020840:	441c      	add	r4, r3
 8020842:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020844:	f108 0802 	add.w	r8, r8, #2
 8020848:	441e      	add	r6, r3
 802084a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802084e:	e6ba      	b.n	80205c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8020850:	20014050 	.word	0x20014050
 8020854:	2800      	cmp	r0, #0
 8020856:	d0ba      	beq.n	80207ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020858:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802085a:	442b      	add	r3, r5
 802085c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020860:	07db      	lsls	r3, r3, #31
 8020862:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020866:	bf54      	ite	pl
 8020868:	f00c 0c0f 	andpl.w	ip, ip, #15
 802086c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020870:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020874:	fa5f f38c 	uxtb.w	r3, ip
 8020878:	930c      	str	r3, [sp, #48]	@ 0x30
 802087a:	e7a8      	b.n	80207ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802087c:	f8b8 e000 	ldrh.w	lr, [r8]
 8020880:	fa1f fa83 	uxth.w	sl, r3
 8020884:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020888:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802088c:	43db      	mvns	r3, r3
 802088e:	b2db      	uxtb	r3, r3
 8020890:	fb11 f10a 	smulbb	r1, r1, sl
 8020894:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020898:	fb00 1003 	mla	r0, r0, r3, r1
 802089c:	b2d2      	uxtb	r2, r2
 802089e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80208a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80208a6:	fa5f fe8e 	uxtb.w	lr, lr
 80208aa:	fb12 f20a 	smulbb	r2, r2, sl
 80208ae:	fb0e 2203 	mla	r2, lr, r3, r2
 80208b2:	fa5f fc8c 	uxtb.w	ip, ip
 80208b6:	b280      	uxth	r0, r0
 80208b8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80208bc:	b292      	uxth	r2, r2
 80208be:	fb1c fc0a 	smulbb	ip, ip, sl
 80208c2:	fb01 cc03 	mla	ip, r1, r3, ip
 80208c6:	1c43      	adds	r3, r0, #1
 80208c8:	1c51      	adds	r1, r2, #1
 80208ca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80208ce:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80208d2:	fa1f fc8c 	uxth.w	ip, ip
 80208d6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80208da:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80208de:	4308      	orrs	r0, r1
 80208e0:	f10c 0101 	add.w	r1, ip, #1
 80208e4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80208e8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80208ec:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80208f0:	ea40 000c 	orr.w	r0, r0, ip
 80208f4:	f8a8 0000 	strh.w	r0, [r8]
 80208f8:	e7a1      	b.n	802083e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80208fa:	b017      	add	sp, #92	@ 0x5c
 80208fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020900 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8020900:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020904:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8020908:	2d00      	cmp	r5, #0
 802090a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802090e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8020912:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8020916:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802091a:	fb05 0e03 	mla	lr, r5, r3, r0
 802091e:	f2c0 80b0 	blt.w	8020a82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8020922:	45a9      	cmp	r9, r5
 8020924:	f340 80ad 	ble.w	8020a82 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8020928:	2800      	cmp	r0, #0
 802092a:	f2c0 80a8 	blt.w	8020a7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802092e:	4580      	cmp	r8, r0
 8020930:	f340 80a5 	ble.w	8020a7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8020934:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8020938:	f01e 0f01 	tst.w	lr, #1
 802093c:	5d16      	ldrb	r6, [r2, r4]
 802093e:	bf0c      	ite	eq
 8020940:	f006 060f 	andeq.w	r6, r6, #15
 8020944:	1136      	asrne	r6, r6, #4
 8020946:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802094a:	b2f6      	uxtb	r6, r6
 802094c:	1c44      	adds	r4, r0, #1
 802094e:	f100 809b 	bmi.w	8020a88 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8020952:	45a0      	cmp	r8, r4
 8020954:	f340 8098 	ble.w	8020a88 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8020958:	2f00      	cmp	r7, #0
 802095a:	f000 8097 	beq.w	8020a8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802095e:	f10e 0a01 	add.w	sl, lr, #1
 8020962:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020966:	f01a 0f01 	tst.w	sl, #1
 802096a:	5d14      	ldrb	r4, [r2, r4]
 802096c:	bf0c      	ite	eq
 802096e:	f004 040f 	andeq.w	r4, r4, #15
 8020972:	1124      	asrne	r4, r4, #4
 8020974:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020978:	b2e4      	uxtb	r4, r4
 802097a:	3501      	adds	r5, #1
 802097c:	f100 808a 	bmi.w	8020a94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020980:	45a9      	cmp	r9, r5
 8020982:	f340 8087 	ble.w	8020a94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020986:	f1bc 0f00 	cmp.w	ip, #0
 802098a:	f000 8086 	beq.w	8020a9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802098e:	2800      	cmp	r0, #0
 8020990:	db7e      	blt.n	8020a90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020992:	4580      	cmp	r8, r0
 8020994:	dd7c      	ble.n	8020a90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020996:	eb03 090e 	add.w	r9, r3, lr
 802099a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802099e:	f019 0f01 	tst.w	r9, #1
 80209a2:	5d55      	ldrb	r5, [r2, r5]
 80209a4:	bf0c      	ite	eq
 80209a6:	f005 050f 	andeq.w	r5, r5, #15
 80209aa:	112d      	asrne	r5, r5, #4
 80209ac:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80209b0:	b2ed      	uxtb	r5, r5
 80209b2:	3001      	adds	r0, #1
 80209b4:	d474      	bmi.n	8020aa0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80209b6:	4580      	cmp	r8, r0
 80209b8:	dd72      	ble.n	8020aa0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80209ba:	2f00      	cmp	r7, #0
 80209bc:	d072      	beq.n	8020aa4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80209be:	3301      	adds	r3, #1
 80209c0:	449e      	add	lr, r3
 80209c2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80209c6:	f01e 0f01 	tst.w	lr, #1
 80209ca:	5cd0      	ldrb	r0, [r2, r3]
 80209cc:	bf0c      	ite	eq
 80209ce:	f000 000f 	andeq.w	r0, r0, #15
 80209d2:	1100      	asrne	r0, r0, #4
 80209d4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80209d8:	b2c3      	uxtb	r3, r0
 80209da:	b2ba      	uxth	r2, r7
 80209dc:	fa1f fc8c 	uxth.w	ip, ip
 80209e0:	fb02 f00c 	mul.w	r0, r2, ip
 80209e4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80209e8:	0112      	lsls	r2, r2, #4
 80209ea:	fa1f fc8c 	uxth.w	ip, ip
 80209ee:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 80209f2:	1a12      	subs	r2, r2, r0
 80209f4:	eba7 070c 	sub.w	r7, r7, ip
 80209f8:	b292      	uxth	r2, r2
 80209fa:	b2bf      	uxth	r7, r7
 80209fc:	4362      	muls	r2, r4
 80209fe:	fb06 2207 	mla	r2, r6, r7, r2
 8020a02:	fb0c 2505 	mla	r5, ip, r5, r2
 8020a06:	fb00 5303 	mla	r3, r0, r3, r5
 8020a0a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020a0e:	b3a3      	cbz	r3, 8020a7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8020a10:	4a25      	ldr	r2, [pc, #148]	@ (8020aa8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8020a12:	880e      	ldrh	r6, [r1, #0]
 8020a14:	6815      	ldr	r5, [r2, #0]
 8020a16:	1234      	asrs	r4, r6, #8
 8020a18:	b29a      	uxth	r2, r3
 8020a1a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8020a1e:	43db      	mvns	r3, r3
 8020a20:	b2db      	uxtb	r3, r3
 8020a22:	fb10 f002 	smulbb	r0, r0, r2
 8020a26:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020a2a:	fb04 0403 	mla	r4, r4, r3, r0
 8020a2e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8020a32:	10f0      	asrs	r0, r6, #3
 8020a34:	b2ed      	uxtb	r5, r5
 8020a36:	00f6      	lsls	r6, r6, #3
 8020a38:	fb17 f702 	smulbb	r7, r7, r2
 8020a3c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020a40:	fb15 f202 	smulbb	r2, r5, r2
 8020a44:	b2f6      	uxtb	r6, r6
 8020a46:	b2a4      	uxth	r4, r4
 8020a48:	fb00 7003 	mla	r0, r0, r3, r7
 8020a4c:	fb06 2303 	mla	r3, r6, r3, r2
 8020a50:	b29a      	uxth	r2, r3
 8020a52:	1c63      	adds	r3, r4, #1
 8020a54:	b280      	uxth	r0, r0
 8020a56:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020a5a:	1c53      	adds	r3, r2, #1
 8020a5c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020a60:	1c42      	adds	r2, r0, #1
 8020a62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020a66:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020a6a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020a6e:	0940      	lsrs	r0, r0, #5
 8020a70:	4323      	orrs	r3, r4
 8020a72:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020a76:	4303      	orrs	r3, r0
 8020a78:	800b      	strh	r3, [r1, #0]
 8020a7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020a7e:	2600      	movs	r6, #0
 8020a80:	e764      	b.n	802094c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8020a82:	2400      	movs	r4, #0
 8020a84:	4626      	mov	r6, r4
 8020a86:	e778      	b.n	802097a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020a88:	2400      	movs	r4, #0
 8020a8a:	e776      	b.n	802097a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020a8c:	463c      	mov	r4, r7
 8020a8e:	e774      	b.n	802097a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020a90:	2500      	movs	r5, #0
 8020a92:	e78e      	b.n	80209b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8020a94:	2300      	movs	r3, #0
 8020a96:	461d      	mov	r5, r3
 8020a98:	e79f      	b.n	80209da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020a9a:	4663      	mov	r3, ip
 8020a9c:	4665      	mov	r5, ip
 8020a9e:	e79c      	b.n	80209da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020aa0:	2300      	movs	r3, #0
 8020aa2:	e79a      	b.n	80209da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020aa4:	463b      	mov	r3, r7
 8020aa6:	e798      	b.n	80209da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020aa8:	20014050 	.word	0x20014050

08020aac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020aac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ab0:	b093      	sub	sp, #76	@ 0x4c
 8020ab2:	461d      	mov	r5, r3
 8020ab4:	920c      	str	r2, [sp, #48]	@ 0x30
 8020ab6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8020ab8:	9107      	str	r1, [sp, #28]
 8020aba:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8020abe:	9011      	str	r0, [sp, #68]	@ 0x44
 8020ac0:	6850      	ldr	r0, [r2, #4]
 8020ac2:	6812      	ldr	r2, [r2, #0]
 8020ac4:	fb00 1303 	mla	r3, r0, r3, r1
 8020ac8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020acc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020ace:	689b      	ldr	r3, [r3, #8]
 8020ad0:	3301      	adds	r3, #1
 8020ad2:	f023 0301 	bic.w	r3, r3, #1
 8020ad6:	9306      	str	r3, [sp, #24]
 8020ad8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020ada:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8020ade:	681f      	ldr	r7, [r3, #0]
 8020ae0:	9b07      	ldr	r3, [sp, #28]
 8020ae2:	2b00      	cmp	r3, #0
 8020ae4:	dc03      	bgt.n	8020aee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020ae6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020ae8:	2b00      	cmp	r3, #0
 8020aea:	f340 8267 	ble.w	8020fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020aee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020af0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020af4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020af8:	1e48      	subs	r0, r1, #1
 8020afa:	f102 3cff 	add.w	ip, r2, #4294967295
 8020afe:	2d00      	cmp	r5, #0
 8020b00:	f340 80b8 	ble.w	8020c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8020b04:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020b08:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020b0c:	d406      	bmi.n	8020b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020b0e:	4586      	cmp	lr, r0
 8020b10:	da04      	bge.n	8020b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020b12:	2b00      	cmp	r3, #0
 8020b14:	db02      	blt.n	8020b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020b16:	4563      	cmp	r3, ip
 8020b18:	f2c0 80ad 	blt.w	8020c76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8020b1c:	f11e 0e01 	adds.w	lr, lr, #1
 8020b20:	f100 80a0 	bmi.w	8020c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020b24:	4571      	cmp	r1, lr
 8020b26:	f2c0 809d 	blt.w	8020c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020b2a:	3301      	adds	r3, #1
 8020b2c:	f100 809a 	bmi.w	8020c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020b30:	429a      	cmp	r2, r3
 8020b32:	f2c0 8097 	blt.w	8020c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020b36:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8020b3a:	9509      	str	r5, [sp, #36]	@ 0x24
 8020b3c:	46c8      	mov	r8, r9
 8020b3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020b40:	2b00      	cmp	r3, #0
 8020b42:	f340 80b6 	ble.w	8020cb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8020b46:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8020b4a:	9308      	str	r3, [sp, #32]
 8020b4c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020b4e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8020b52:	1423      	asrs	r3, r4, #16
 8020b54:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020b58:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020b5c:	f100 813e 	bmi.w	8020ddc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b60:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020b64:	455b      	cmp	r3, fp
 8020b66:	f280 8139 	bge.w	8020ddc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b6a:	2800      	cmp	r0, #0
 8020b6c:	f2c0 8136 	blt.w	8020ddc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b70:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020b74:	4558      	cmp	r0, fp
 8020b76:	f280 8131 	bge.w	8020ddc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b7a:	9a06      	ldr	r2, [sp, #24]
 8020b7c:	fb00 3302 	mla	r3, r0, r2, r3
 8020b80:	0858      	lsrs	r0, r3, #1
 8020b82:	07da      	lsls	r2, r3, #31
 8020b84:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020b88:	9a08      	ldr	r2, [sp, #32]
 8020b8a:	bf54      	ite	pl
 8020b8c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020b90:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020b94:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020b98:	fa5f fc8c 	uxtb.w	ip, ip
 8020b9c:	2a00      	cmp	r2, #0
 8020b9e:	f000 80cb 	beq.w	8020d38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020ba2:	1c58      	adds	r0, r3, #1
 8020ba4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020ba8:	07c0      	lsls	r0, r0, #31
 8020baa:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020bae:	bf54      	ite	pl
 8020bb0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020bb4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020bb8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020bbc:	fa5f fe8e 	uxtb.w	lr, lr
 8020bc0:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8020bc4:	b1b9      	cbz	r1, 8020bf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020bc6:	4453      	add	r3, sl
 8020bc8:	0858      	lsrs	r0, r3, #1
 8020bca:	07da      	lsls	r2, r3, #31
 8020bcc:	5c38      	ldrb	r0, [r7, r0]
 8020bce:	bf54      	ite	pl
 8020bd0:	f000 000f 	andpl.w	r0, r0, #15
 8020bd4:	1100      	asrmi	r0, r0, #4
 8020bd6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020bda:	b2c0      	uxtb	r0, r0
 8020bdc:	900a      	str	r0, [sp, #40]	@ 0x28
 8020bde:	1c58      	adds	r0, r3, #1
 8020be0:	0843      	lsrs	r3, r0, #1
 8020be2:	07c2      	lsls	r2, r0, #31
 8020be4:	5cfb      	ldrb	r3, [r7, r3]
 8020be6:	bf54      	ite	pl
 8020be8:	f003 030f 	andpl.w	r3, r3, #15
 8020bec:	111b      	asrmi	r3, r3, #4
 8020bee:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020bf2:	b2db      	uxtb	r3, r3
 8020bf4:	930e      	str	r3, [sp, #56]	@ 0x38
 8020bf6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8020bfa:	b289      	uxth	r1, r1
 8020bfc:	fb02 f301 	mul.w	r3, r2, r1
 8020c00:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8020c04:	0112      	lsls	r2, r2, #4
 8020c06:	b289      	uxth	r1, r1
 8020c08:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8020c0c:	1a40      	subs	r0, r0, r1
 8020c0e:	fa1f fe80 	uxth.w	lr, r0
 8020c12:	1ad2      	subs	r2, r2, r3
 8020c14:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020c16:	b292      	uxth	r2, r2
 8020c18:	4342      	muls	r2, r0
 8020c1a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8020c1e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020c20:	fb01 c102 	mla	r1, r1, r2, ip
 8020c24:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020c26:	fb03 1302 	mla	r3, r3, r2, r1
 8020c2a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020c2e:	2bff      	cmp	r3, #255	@ 0xff
 8020c30:	f040 8093 	bne.w	8020d5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8020c34:	4bbe      	ldr	r3, [pc, #760]	@ (8020f30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020c36:	681a      	ldr	r2, [r3, #0]
 8020c38:	4bbe      	ldr	r3, [pc, #760]	@ (8020f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020c3a:	0951      	lsrs	r1, r2, #5
 8020c3c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020c40:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020c44:	430b      	orrs	r3, r1
 8020c46:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020c4a:	4313      	orrs	r3, r2
 8020c4c:	f8a8 3000 	strh.w	r3, [r8]
 8020c50:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020c52:	441c      	add	r4, r3
 8020c54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020c56:	441e      	add	r6, r3
 8020c58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020c5a:	3b01      	subs	r3, #1
 8020c5c:	f108 0802 	add.w	r8, r8, #2
 8020c60:	9309      	str	r3, [sp, #36]	@ 0x24
 8020c62:	e76c      	b.n	8020b3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020c64:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020c66:	441c      	add	r4, r3
 8020c68:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020c6a:	3d01      	subs	r5, #1
 8020c6c:	441e      	add	r6, r3
 8020c6e:	f109 0902 	add.w	r9, r9, #2
 8020c72:	e744      	b.n	8020afe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020c74:	d021      	beq.n	8020cba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020c76:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020c78:	1e6b      	subs	r3, r5, #1
 8020c7a:	fb00 4003 	mla	r0, r0, r3, r4
 8020c7e:	1400      	asrs	r0, r0, #16
 8020c80:	f53f af59 	bmi.w	8020b36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c84:	3901      	subs	r1, #1
 8020c86:	4288      	cmp	r0, r1
 8020c88:	f6bf af55 	bge.w	8020b36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c8c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8020c8e:	fb01 6303 	mla	r3, r1, r3, r6
 8020c92:	141b      	asrs	r3, r3, #16
 8020c94:	f53f af4f 	bmi.w	8020b36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c98:	3a01      	subs	r2, #1
 8020c9a:	4293      	cmp	r3, r2
 8020c9c:	f6bf af4b 	bge.w	8020b36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020ca0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8020ca4:	9308      	str	r3, [sp, #32]
 8020ca6:	46a8      	mov	r8, r5
 8020ca8:	46ce      	mov	lr, r9
 8020caa:	f1b8 0f00 	cmp.w	r8, #0
 8020cae:	f300 80b5 	bgt.w	8020e1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020cb2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020cb6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020cba:	9b07      	ldr	r3, [sp, #28]
 8020cbc:	2b00      	cmp	r3, #0
 8020cbe:	f340 817d 	ble.w	8020fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020cc2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cc6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020cca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cce:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020cd0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020cd4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020cd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020cdc:	eef0 6a62 	vmov.f32	s13, s5
 8020ce0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020ce4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020ce8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020cec:	ee16 4a90 	vmov	r4, s13
 8020cf0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020cf4:	eef0 6a43 	vmov.f32	s13, s6
 8020cf8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020cfc:	ee12 2a90 	vmov	r2, s5
 8020d00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020d04:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d08:	ee13 2a10 	vmov	r2, s6
 8020d0c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020d0e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020d10:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d14:	9320      	str	r3, [sp, #128]	@ 0x80
 8020d16:	9b07      	ldr	r3, [sp, #28]
 8020d18:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020d1a:	3b01      	subs	r3, #1
 8020d1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d20:	9307      	str	r3, [sp, #28]
 8020d22:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020d24:	ee16 6a90 	vmov	r6, s13
 8020d28:	bf14      	ite	ne
 8020d2a:	461d      	movne	r5, r3
 8020d2c:	4615      	moveq	r5, r2
 8020d2e:	eeb0 3a67 	vmov.f32	s6, s15
 8020d32:	eef0 2a47 	vmov.f32	s5, s14
 8020d36:	e6d3      	b.n	8020ae0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020d38:	2900      	cmp	r1, #0
 8020d3a:	f43f af5c 	beq.w	8020bf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020d3e:	eb0a 0003 	add.w	r0, sl, r3
 8020d42:	0843      	lsrs	r3, r0, #1
 8020d44:	07c0      	lsls	r0, r0, #31
 8020d46:	5cfb      	ldrb	r3, [r7, r3]
 8020d48:	bf54      	ite	pl
 8020d4a:	f003 030f 	andpl.w	r3, r3, #15
 8020d4e:	111b      	asrmi	r3, r3, #4
 8020d50:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020d54:	b2db      	uxtb	r3, r3
 8020d56:	930a      	str	r3, [sp, #40]	@ 0x28
 8020d58:	e74d      	b.n	8020bf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020d5a:	2b00      	cmp	r3, #0
 8020d5c:	f43f af78 	beq.w	8020c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020d60:	4a73      	ldr	r2, [pc, #460]	@ (8020f30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020d62:	f8b8 c000 	ldrh.w	ip, [r8]
 8020d66:	6810      	ldr	r0, [r2, #0]
 8020d68:	fa1f fe83 	uxth.w	lr, r3
 8020d6c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020d70:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020d74:	43db      	mvns	r3, r3
 8020d76:	b2db      	uxtb	r3, r3
 8020d78:	fb12 f20e 	smulbb	r2, r2, lr
 8020d7c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020d80:	fb01 2103 	mla	r1, r1, r3, r2
 8020d84:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020d88:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020d8c:	b2c0      	uxtb	r0, r0
 8020d8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020d92:	fb1b fb0e 	smulbb	fp, fp, lr
 8020d96:	b289      	uxth	r1, r1
 8020d98:	fb10 fe0e 	smulbb	lr, r0, lr
 8020d9c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020da0:	fa5f fc8c 	uxtb.w	ip, ip
 8020da4:	fb02 b203 	mla	r2, r2, r3, fp
 8020da8:	1c48      	adds	r0, r1, #1
 8020daa:	fb0c e303 	mla	r3, ip, r3, lr
 8020dae:	b292      	uxth	r2, r2
 8020db0:	b29b      	uxth	r3, r3
 8020db2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8020db6:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8020dba:	f102 0b01 	add.w	fp, r2, #1
 8020dbe:	1c59      	adds	r1, r3, #1
 8020dc0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020dc4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020dc8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020dcc:	0952      	lsrs	r2, r2, #5
 8020dce:	4301      	orrs	r1, r0
 8020dd0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020dd4:	4311      	orrs	r1, r2
 8020dd6:	f8a8 1000 	strh.w	r1, [r8]
 8020dda:	e739      	b.n	8020c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020ddc:	f113 0b01 	adds.w	fp, r3, #1
 8020de0:	f53f af36 	bmi.w	8020c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020de4:	45dc      	cmp	ip, fp
 8020de6:	f6ff af33 	blt.w	8020c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020dea:	f110 0b01 	adds.w	fp, r0, #1
 8020dee:	f53f af2f 	bmi.w	8020c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020df2:	45de      	cmp	lr, fp
 8020df4:	f6ff af2c 	blt.w	8020c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020df8:	9a08      	ldr	r2, [sp, #32]
 8020dfa:	9302      	str	r3, [sp, #8]
 8020dfc:	fa0f f38e 	sxth.w	r3, lr
 8020e00:	9301      	str	r3, [sp, #4]
 8020e02:	fa0f f38c 	sxth.w	r3, ip
 8020e06:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020e0a:	9105      	str	r1, [sp, #20]
 8020e0c:	9300      	str	r3, [sp, #0]
 8020e0e:	463a      	mov	r2, r7
 8020e10:	4653      	mov	r3, sl
 8020e12:	4641      	mov	r1, r8
 8020e14:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020e16:	f7ff fd73 	bl	8020900 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8020e1a:	e719      	b.n	8020c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020e1c:	9906      	ldr	r1, [sp, #24]
 8020e1e:	1422      	asrs	r2, r4, #16
 8020e20:	1433      	asrs	r3, r6, #16
 8020e22:	fb01 2303 	mla	r3, r1, r3, r2
 8020e26:	085a      	lsrs	r2, r3, #1
 8020e28:	07d9      	lsls	r1, r3, #31
 8020e2a:	5cba      	ldrb	r2, [r7, r2]
 8020e2c:	bf54      	ite	pl
 8020e2e:	f002 020f 	andpl.w	r2, r2, #15
 8020e32:	1112      	asrmi	r2, r2, #4
 8020e34:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020e38:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020e3c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020e40:	b2d2      	uxtb	r2, r2
 8020e42:	2800      	cmp	r0, #0
 8020e44:	d062      	beq.n	8020f0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8020e46:	f103 0a01 	add.w	sl, r3, #1
 8020e4a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8020e4e:	f01a 0f01 	tst.w	sl, #1
 8020e52:	5c79      	ldrb	r1, [r7, r1]
 8020e54:	bf0c      	ite	eq
 8020e56:	f001 010f 	andeq.w	r1, r1, #15
 8020e5a:	1109      	asrne	r1, r1, #4
 8020e5c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020e60:	b2c9      	uxtb	r1, r1
 8020e62:	910f      	str	r1, [sp, #60]	@ 0x3c
 8020e64:	f1bc 0f00 	cmp.w	ip, #0
 8020e68:	d019      	beq.n	8020e9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020e6a:	9908      	ldr	r1, [sp, #32]
 8020e6c:	440b      	add	r3, r1
 8020e6e:	0859      	lsrs	r1, r3, #1
 8020e70:	f013 0f01 	tst.w	r3, #1
 8020e74:	5c79      	ldrb	r1, [r7, r1]
 8020e76:	bf0c      	ite	eq
 8020e78:	f001 010f 	andeq.w	r1, r1, #15
 8020e7c:	1109      	asrne	r1, r1, #4
 8020e7e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020e82:	b2c9      	uxtb	r1, r1
 8020e84:	3301      	adds	r3, #1
 8020e86:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020e88:	0859      	lsrs	r1, r3, #1
 8020e8a:	07db      	lsls	r3, r3, #31
 8020e8c:	5c79      	ldrb	r1, [r7, r1]
 8020e8e:	bf54      	ite	pl
 8020e90:	f001 010f 	andpl.w	r1, r1, #15
 8020e94:	1109      	asrmi	r1, r1, #4
 8020e96:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020e9a:	b2c9      	uxtb	r1, r1
 8020e9c:	9110      	str	r1, [sp, #64]	@ 0x40
 8020e9e:	b280      	uxth	r0, r0
 8020ea0:	fa1f fc8c 	uxth.w	ip, ip
 8020ea4:	fb00 f30c 	mul.w	r3, r0, ip
 8020ea8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020eac:	0100      	lsls	r0, r0, #4
 8020eae:	fa1f fc8c 	uxth.w	ip, ip
 8020eb2:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8020eb6:	eba1 010c 	sub.w	r1, r1, ip
 8020eba:	fa1f fa81 	uxth.w	sl, r1
 8020ebe:	1ac0      	subs	r0, r0, r3
 8020ec0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8020ec2:	b280      	uxth	r0, r0
 8020ec4:	4348      	muls	r0, r1
 8020ec6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8020ec8:	fb02 020a 	mla	r2, r2, sl, r0
 8020ecc:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020ed0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020ed2:	fb03 c302 	mla	r3, r3, r2, ip
 8020ed6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020eda:	2bff      	cmp	r3, #255	@ 0xff
 8020edc:	d12c      	bne.n	8020f38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8020ede:	4b14      	ldr	r3, [pc, #80]	@ (8020f30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020ee0:	681a      	ldr	r2, [r3, #0]
 8020ee2:	4b14      	ldr	r3, [pc, #80]	@ (8020f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020ee4:	0951      	lsrs	r1, r2, #5
 8020ee6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020eea:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020eee:	430b      	orrs	r3, r1
 8020ef0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020ef4:	4313      	orrs	r3, r2
 8020ef6:	f8ae 3000 	strh.w	r3, [lr]
 8020efa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020efc:	441c      	add	r4, r3
 8020efe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020f00:	f10e 0e02 	add.w	lr, lr, #2
 8020f04:	441e      	add	r6, r3
 8020f06:	f108 38ff 	add.w	r8, r8, #4294967295
 8020f0a:	e6ce      	b.n	8020caa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8020f0c:	f1bc 0f00 	cmp.w	ip, #0
 8020f10:	d0c5      	beq.n	8020e9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020f12:	9908      	ldr	r1, [sp, #32]
 8020f14:	440b      	add	r3, r1
 8020f16:	0859      	lsrs	r1, r3, #1
 8020f18:	07db      	lsls	r3, r3, #31
 8020f1a:	5c79      	ldrb	r1, [r7, r1]
 8020f1c:	bf54      	ite	pl
 8020f1e:	f001 010f 	andpl.w	r1, r1, #15
 8020f22:	1109      	asrmi	r1, r1, #4
 8020f24:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020f28:	b2c9      	uxtb	r1, r1
 8020f2a:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020f2c:	e7b7      	b.n	8020e9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020f2e:	bf00      	nop
 8020f30:	20014050 	.word	0x20014050
 8020f34:	fffff800 	.word	0xfffff800
 8020f38:	2b00      	cmp	r3, #0
 8020f3a:	d0de      	beq.n	8020efa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020f3c:	4a21      	ldr	r2, [pc, #132]	@ (8020fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8020f3e:	f8be c000 	ldrh.w	ip, [lr]
 8020f42:	6810      	ldr	r0, [r2, #0]
 8020f44:	fa1f fa83 	uxth.w	sl, r3
 8020f48:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020f4c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020f50:	43db      	mvns	r3, r3
 8020f52:	b2db      	uxtb	r3, r3
 8020f54:	fb12 f20a 	smulbb	r2, r2, sl
 8020f58:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020f5c:	fb01 2103 	mla	r1, r1, r3, r2
 8020f60:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020f64:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020f68:	b2c0      	uxtb	r0, r0
 8020f6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020f6e:	fa5f fc8c 	uxtb.w	ip, ip
 8020f72:	fb10 f00a 	smulbb	r0, r0, sl
 8020f76:	fb0c 0003 	mla	r0, ip, r3, r0
 8020f7a:	b289      	uxth	r1, r1
 8020f7c:	fb1b fb0a 	smulbb	fp, fp, sl
 8020f80:	b280      	uxth	r0, r0
 8020f82:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020f86:	fb02 b203 	mla	r2, r2, r3, fp
 8020f8a:	1c4b      	adds	r3, r1, #1
 8020f8c:	f100 0b01 	add.w	fp, r0, #1
 8020f90:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020f94:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020f98:	b292      	uxth	r2, r2
 8020f9a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8020f9e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8020fa2:	ea4b 0101 	orr.w	r1, fp, r1
 8020fa6:	f102 0b01 	add.w	fp, r2, #1
 8020faa:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020fae:	0952      	lsrs	r2, r2, #5
 8020fb0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020fb4:	4311      	orrs	r1, r2
 8020fb6:	f8ae 1000 	strh.w	r1, [lr]
 8020fba:	e79e      	b.n	8020efa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020fbc:	b013      	add	sp, #76	@ 0x4c
 8020fbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020fc2:	bf00      	nop
 8020fc4:	20014050 	.word	0x20014050

08020fc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8020fc8:	b570      	push	{r4, r5, r6, lr}
 8020fca:	1208      	asrs	r0, r1, #8
 8020fcc:	b29e      	uxth	r6, r3
 8020fce:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8020fd2:	1213      	asrs	r3, r2, #8
 8020fd4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020fd8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020fdc:	fb13 f305 	smulbb	r3, r3, r5
 8020fe0:	fb10 f006 	smulbb	r0, r0, r6
 8020fe4:	4418      	add	r0, r3
 8020fe6:	10cc      	asrs	r4, r1, #3
 8020fe8:	10d3      	asrs	r3, r2, #3
 8020fea:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020fee:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8020ff2:	fb13 f305 	smulbb	r3, r3, r5
 8020ff6:	fb14 f406 	smulbb	r4, r4, r6
 8020ffa:	00c9      	lsls	r1, r1, #3
 8020ffc:	00d2      	lsls	r2, r2, #3
 8020ffe:	441c      	add	r4, r3
 8021000:	b2d2      	uxtb	r2, r2
 8021002:	b2cb      	uxtb	r3, r1
 8021004:	fb12 f205 	smulbb	r2, r2, r5
 8021008:	b280      	uxth	r0, r0
 802100a:	fb13 f306 	smulbb	r3, r3, r6
 802100e:	4413      	add	r3, r2
 8021010:	1c42      	adds	r2, r0, #1
 8021012:	b29b      	uxth	r3, r3
 8021014:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021018:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 802101c:	1c58      	adds	r0, r3, #1
 802101e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021022:	b2a4      	uxth	r4, r4
 8021024:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021028:	4310      	orrs	r0, r2
 802102a:	1c62      	adds	r2, r4, #1
 802102c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021030:	0964      	lsrs	r4, r4, #5
 8021032:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021036:	4320      	orrs	r0, r4
 8021038:	bd70      	pop	{r4, r5, r6, pc}
	...

0802103c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802103c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021040:	b08f      	sub	sp, #60	@ 0x3c
 8021042:	461c      	mov	r4, r3
 8021044:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8021048:	9004      	str	r0, [sp, #16]
 802104a:	460d      	mov	r5, r1
 802104c:	4616      	mov	r6, r2
 802104e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021050:	2f00      	cmp	r7, #0
 8021052:	f000 80f6 	beq.w	8021242 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8021056:	6820      	ldr	r0, [r4, #0]
 8021058:	6861      	ldr	r1, [r4, #4]
 802105a:	aa0a      	add	r2, sp, #40	@ 0x28
 802105c:	c203      	stmia	r2!, {r0, r1}
 802105e:	6818      	ldr	r0, [r3, #0]
 8021060:	6859      	ldr	r1, [r3, #4]
 8021062:	aa0c      	add	r2, sp, #48	@ 0x30
 8021064:	c203      	stmia	r2!, {r0, r1}
 8021066:	a80a      	add	r0, sp, #40	@ 0x28
 8021068:	f7ee fdda 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802106c:	4621      	mov	r1, r4
 802106e:	a80c      	add	r0, sp, #48	@ 0x30
 8021070:	f7ee fdfe 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021074:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8021078:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802107c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8021080:	f002 0301 	and.w	r3, r2, #1
 8021084:	9306      	str	r3, [sp, #24]
 8021086:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802108a:	f003 0101 	and.w	r1, r3, #1
 802108e:	9105      	str	r1, [sp, #20]
 8021090:	9805      	ldr	r0, [sp, #20]
 8021092:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8021096:	4403      	add	r3, r0
 8021098:	fb01 2303 	mla	r3, r1, r3, r2
 802109c:	f04f 0802 	mov.w	r8, #2
 80210a0:	fb93 f3f8 	sdiv	r3, r3, r8
 80210a4:	441d      	add	r5, r3
 80210a6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80210aa:	441a      	add	r2, r3
 80210ac:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80210b0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80210b4:	4419      	add	r1, r3
 80210b6:	4b64      	ldr	r3, [pc, #400]	@ (8021248 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80210b8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80210bc:	6818      	ldr	r0, [r3, #0]
 80210be:	6803      	ldr	r3, [r0, #0]
 80210c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80210c2:	4798      	blx	r3
 80210c4:	4a61      	ldr	r2, [pc, #388]	@ (802124c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80210c6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80210ca:	8813      	ldrh	r3, [r2, #0]
 80210cc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 80210d0:	2fff      	cmp	r7, #255	@ 0xff
 80210d2:	fb03 a404 	mla	r4, r3, r4, sl
 80210d6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80210da:	f106 0604 	add.w	r6, r6, #4
 80210de:	4611      	mov	r1, r2
 80210e0:	fb03 fb0b 	mul.w	fp, r3, fp
 80210e4:	d06b      	beq.n	80211be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80210e6:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 80210ea:	9303      	str	r3, [sp, #12]
 80210ec:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80210f0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80210f4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80210f8:	9b07      	ldr	r3, [sp, #28]
 80210fa:	42a3      	cmp	r3, r4
 80210fc:	f240 809c 	bls.w	8021238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8021100:	9b06      	ldr	r3, [sp, #24]
 8021102:	2b00      	cmp	r3, #0
 8021104:	d039      	beq.n	802117a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8021106:	782b      	ldrb	r3, [r5, #0]
 8021108:	8822      	ldrh	r2, [r4, #0]
 802110a:	9804      	ldr	r0, [sp, #16]
 802110c:	f003 030f 	and.w	r3, r3, #15
 8021110:	f105 0801 	add.w	r8, r5, #1
 8021114:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021118:	9b03      	ldr	r3, [sp, #12]
 802111a:	9300      	str	r3, [sp, #0]
 802111c:	463b      	mov	r3, r7
 802111e:	f7ff ff53 	bl	8020fc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021122:	f824 0b02 	strh.w	r0, [r4], #2
 8021126:	f109 3bff 	add.w	fp, r9, #4294967295
 802112a:	f1bb 0f01 	cmp.w	fp, #1
 802112e:	46a2      	mov	sl, r4
 8021130:	f104 0404 	add.w	r4, r4, #4
 8021134:	dd24      	ble.n	8021180 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8021136:	f898 3000 	ldrb.w	r3, [r8]
 802113a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802113e:	9804      	ldr	r0, [sp, #16]
 8021140:	091b      	lsrs	r3, r3, #4
 8021142:	f1ab 0b02 	sub.w	fp, fp, #2
 8021146:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802114a:	9b03      	ldr	r3, [sp, #12]
 802114c:	9300      	str	r3, [sp, #0]
 802114e:	463b      	mov	r3, r7
 8021150:	f7ff ff3a 	bl	8020fc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021154:	f824 0c04 	strh.w	r0, [r4, #-4]
 8021158:	f818 3b01 	ldrb.w	r3, [r8], #1
 802115c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8021160:	9804      	ldr	r0, [sp, #16]
 8021162:	f003 030f 	and.w	r3, r3, #15
 8021166:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802116a:	9b03      	ldr	r3, [sp, #12]
 802116c:	9300      	str	r3, [sp, #0]
 802116e:	463b      	mov	r3, r7
 8021170:	f7ff ff2a 	bl	8020fc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021174:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021178:	e7d7      	b.n	802112a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802117a:	46a8      	mov	r8, r5
 802117c:	46cb      	mov	fp, r9
 802117e:	e7d4      	b.n	802112a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8021180:	d10e      	bne.n	80211a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8021182:	f898 3000 	ldrb.w	r3, [r8]
 8021186:	f8ba 2000 	ldrh.w	r2, [sl]
 802118a:	9804      	ldr	r0, [sp, #16]
 802118c:	091b      	lsrs	r3, r3, #4
 802118e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021192:	9b03      	ldr	r3, [sp, #12]
 8021194:	9300      	str	r3, [sp, #0]
 8021196:	463b      	mov	r3, r7
 8021198:	f7ff ff16 	bl	8020fc8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802119c:	f82a 0b02 	strh.w	r0, [sl], #2
 80211a0:	9b08      	ldr	r3, [sp, #32]
 80211a2:	9a05      	ldr	r2, [sp, #20]
 80211a4:	881c      	ldrh	r4, [r3, #0]
 80211a6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80211aa:	eba4 0409 	sub.w	r4, r4, r9
 80211ae:	4413      	add	r3, r2
 80211b0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80211b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80211b6:	fb93 f3f2 	sdiv	r3, r3, r2
 80211ba:	441d      	add	r5, r3
 80211bc:	e79c      	b.n	80210f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80211be:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80211c2:	45a3      	cmp	fp, r4
 80211c4:	d938      	bls.n	8021238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80211c6:	9b06      	ldr	r3, [sp, #24]
 80211c8:	b1f3      	cbz	r3, 8021208 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80211ca:	782b      	ldrb	r3, [r5, #0]
 80211cc:	f003 030f 	and.w	r3, r3, #15
 80211d0:	1c6a      	adds	r2, r5, #1
 80211d2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80211d6:	8023      	strh	r3, [r4, #0]
 80211d8:	f109 30ff 	add.w	r0, r9, #4294967295
 80211dc:	3402      	adds	r4, #2
 80211de:	2801      	cmp	r0, #1
 80211e0:	4623      	mov	r3, r4
 80211e2:	f104 0404 	add.w	r4, r4, #4
 80211e6:	dd12      	ble.n	802120e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80211e8:	7813      	ldrb	r3, [r2, #0]
 80211ea:	091b      	lsrs	r3, r3, #4
 80211ec:	3802      	subs	r0, #2
 80211ee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80211f2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80211f6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80211fa:	f003 030f 	and.w	r3, r3, #15
 80211fe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021202:	f824 3c02 	strh.w	r3, [r4, #-2]
 8021206:	e7ea      	b.n	80211de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8021208:	462a      	mov	r2, r5
 802120a:	4648      	mov	r0, r9
 802120c:	e7e7      	b.n	80211de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802120e:	d106      	bne.n	802121e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8021210:	7812      	ldrb	r2, [r2, #0]
 8021212:	0912      	lsrs	r2, r2, #4
 8021214:	3302      	adds	r3, #2
 8021216:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802121a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802121e:	880c      	ldrh	r4, [r1, #0]
 8021220:	9a05      	ldr	r2, [sp, #20]
 8021222:	eba4 0409 	sub.w	r4, r4, r9
 8021226:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802122a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802122e:	4413      	add	r3, r2
 8021230:	fb93 f3f8 	sdiv	r3, r3, r8
 8021234:	441d      	add	r5, r3
 8021236:	e7c4      	b.n	80211c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8021238:	4b03      	ldr	r3, [pc, #12]	@ (8021248 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802123a:	6818      	ldr	r0, [r3, #0]
 802123c:	6803      	ldr	r3, [r0, #0]
 802123e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021240:	4798      	blx	r3
 8021242:	b00f      	add	sp, #60	@ 0x3c
 8021244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021248:	20014040 	.word	0x20014040
 802124c:	20014038 	.word	0x20014038

08021250 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8021250:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021252:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8021256:	2dff      	cmp	r5, #255	@ 0xff
 8021258:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802125c:	d10c      	bne.n	8021278 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802125e:	2bff      	cmp	r3, #255	@ 0xff
 8021260:	d10a      	bne.n	8021278 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8021262:	4b25      	ldr	r3, [pc, #148]	@ (80212f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8021264:	0948      	lsrs	r0, r1, #5
 8021266:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802126a:	403b      	ands	r3, r7
 802126c:	4318      	orrs	r0, r3
 802126e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021272:	4308      	orrs	r0, r1
 8021274:	b280      	uxth	r0, r0
 8021276:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021278:	fb15 f503 	smulbb	r5, r5, r3
 802127c:	b2ab      	uxth	r3, r5
 802127e:	1c5d      	adds	r5, r3, #1
 8021280:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8021284:	1214      	asrs	r4, r2, #8
 8021286:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802128a:	fa1f fc85 	uxth.w	ip, r5
 802128e:	10d6      	asrs	r6, r2, #3
 8021290:	00d0      	lsls	r0, r2, #3
 8021292:	43ed      	mvns	r5, r5
 8021294:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021298:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802129c:	b2eb      	uxtb	r3, r5
 802129e:	b2c0      	uxtb	r0, r0
 80212a0:	fb12 f20c 	smulbb	r2, r2, ip
 80212a4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80212a8:	fb04 2403 	mla	r4, r4, r3, r2
 80212ac:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80212b0:	b2c8      	uxtb	r0, r1
 80212b2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80212b6:	b2fd      	uxtb	r5, r7
 80212b8:	fb10 f00c 	smulbb	r0, r0, ip
 80212bc:	b2a4      	uxth	r4, r4
 80212be:	fb02 0003 	mla	r0, r2, r3, r0
 80212c2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80212c6:	fb15 f50c 	smulbb	r5, r5, ip
 80212ca:	fb06 5503 	mla	r5, r6, r3, r5
 80212ce:	b283      	uxth	r3, r0
 80212d0:	1c60      	adds	r0, r4, #1
 80212d2:	b2ad      	uxth	r5, r5
 80212d4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80212d8:	1c58      	adds	r0, r3, #1
 80212da:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80212de:	1c6b      	adds	r3, r5, #1
 80212e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80212e4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80212e8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80212ec:	096d      	lsrs	r5, r5, #5
 80212ee:	4320      	orrs	r0, r4
 80212f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80212f4:	4328      	orrs	r0, r5
 80212f6:	e7be      	b.n	8021276 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80212f8:	00fff800 	.word	0x00fff800

080212fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80212fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021300:	461c      	mov	r4, r3
 8021302:	b08d      	sub	sp, #52	@ 0x34
 8021304:	460d      	mov	r5, r1
 8021306:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021308:	6861      	ldr	r1, [r4, #4]
 802130a:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 802130e:	4680      	mov	r8, r0
 8021310:	6820      	ldr	r0, [r4, #0]
 8021312:	4616      	mov	r6, r2
 8021314:	aa08      	add	r2, sp, #32
 8021316:	c203      	stmia	r2!, {r0, r1}
 8021318:	6818      	ldr	r0, [r3, #0]
 802131a:	6859      	ldr	r1, [r3, #4]
 802131c:	aa0a      	add	r2, sp, #40	@ 0x28
 802131e:	c203      	stmia	r2!, {r0, r1}
 8021320:	a808      	add	r0, sp, #32
 8021322:	f7ee fc7d 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021326:	4621      	mov	r1, r4
 8021328:	a80a      	add	r0, sp, #40	@ 0x28
 802132a:	f7ee fca1 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802132e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8021332:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8021336:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 802133a:	f002 0301 	and.w	r3, r2, #1
 802133e:	9303      	str	r3, [sp, #12]
 8021340:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8021344:	f003 0101 	and.w	r1, r3, #1
 8021348:	9102      	str	r1, [sp, #8]
 802134a:	9802      	ldr	r0, [sp, #8]
 802134c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8021350:	4403      	add	r3, r0
 8021352:	fb01 2303 	mla	r3, r1, r3, r2
 8021356:	f04f 0a02 	mov.w	sl, #2
 802135a:	fb93 f3fa 	sdiv	r3, r3, sl
 802135e:	441d      	add	r5, r3
 8021360:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8021364:	441a      	add	r2, r3
 8021366:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802136a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802136e:	4a3f      	ldr	r2, [pc, #252]	@ (802146c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8021370:	9205      	str	r2, [sp, #20]
 8021372:	4419      	add	r1, r3
 8021374:	6810      	ldr	r0, [r2, #0]
 8021376:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802137a:	6803      	ldr	r3, [r0, #0]
 802137c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802137e:	4798      	blx	r3
 8021380:	4b3b      	ldr	r3, [pc, #236]	@ (8021470 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8021382:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8021386:	8819      	ldrh	r1, [r3, #0]
 8021388:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802138c:	fb01 c404 	mla	r4, r1, r4, ip
 8021390:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021394:	434f      	muls	r7, r1
 8021396:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802139a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802139e:	3604      	adds	r6, #4
 80213a0:	9204      	str	r2, [sp, #16]
 80213a2:	9b04      	ldr	r3, [sp, #16]
 80213a4:	429c      	cmp	r4, r3
 80213a6:	d258      	bcs.n	802145a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80213a8:	9b03      	ldr	r3, [sp, #12]
 80213aa:	2b00      	cmp	r3, #0
 80213ac:	d034      	beq.n	8021418 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80213ae:	782b      	ldrb	r3, [r5, #0]
 80213b0:	f003 030f 	and.w	r3, r3, #15
 80213b4:	1c6f      	adds	r7, r5, #1
 80213b6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80213ba:	0e0b      	lsrs	r3, r1, #24
 80213bc:	d006      	beq.n	80213cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80213be:	8822      	ldrh	r2, [r4, #0]
 80213c0:	9300      	str	r3, [sp, #0]
 80213c2:	4640      	mov	r0, r8
 80213c4:	464b      	mov	r3, r9
 80213c6:	f7ff ff43 	bl	8021250 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80213ca:	8020      	strh	r0, [r4, #0]
 80213cc:	3402      	adds	r4, #2
 80213ce:	f10b 3aff 	add.w	sl, fp, #4294967295
 80213d2:	f1ba 0f01 	cmp.w	sl, #1
 80213d6:	dd22      	ble.n	802141e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80213d8:	783b      	ldrb	r3, [r7, #0]
 80213da:	091b      	lsrs	r3, r3, #4
 80213dc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80213e0:	0e0b      	lsrs	r3, r1, #24
 80213e2:	d006      	beq.n	80213f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80213e4:	8822      	ldrh	r2, [r4, #0]
 80213e6:	9300      	str	r3, [sp, #0]
 80213e8:	4640      	mov	r0, r8
 80213ea:	464b      	mov	r3, r9
 80213ec:	f7ff ff30 	bl	8021250 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80213f0:	8020      	strh	r0, [r4, #0]
 80213f2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80213f6:	f003 030f 	and.w	r3, r3, #15
 80213fa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80213fe:	0e0b      	lsrs	r3, r1, #24
 8021400:	d006      	beq.n	8021410 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8021402:	8862      	ldrh	r2, [r4, #2]
 8021404:	9300      	str	r3, [sp, #0]
 8021406:	4640      	mov	r0, r8
 8021408:	464b      	mov	r3, r9
 802140a:	f7ff ff21 	bl	8021250 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802140e:	8060      	strh	r0, [r4, #2]
 8021410:	3404      	adds	r4, #4
 8021412:	f1aa 0a02 	sub.w	sl, sl, #2
 8021416:	e7dc      	b.n	80213d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8021418:	462f      	mov	r7, r5
 802141a:	46da      	mov	sl, fp
 802141c:	e7d9      	b.n	80213d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802141e:	d10d      	bne.n	802143c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8021420:	783b      	ldrb	r3, [r7, #0]
 8021422:	091b      	lsrs	r3, r3, #4
 8021424:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021428:	0e0b      	lsrs	r3, r1, #24
 802142a:	d006      	beq.n	802143a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802142c:	8822      	ldrh	r2, [r4, #0]
 802142e:	9300      	str	r3, [sp, #0]
 8021430:	4640      	mov	r0, r8
 8021432:	464b      	mov	r3, r9
 8021434:	f7ff ff0c 	bl	8021250 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021438:	8020      	strh	r0, [r4, #0]
 802143a:	3402      	adds	r4, #2
 802143c:	9b06      	ldr	r3, [sp, #24]
 802143e:	9a02      	ldr	r2, [sp, #8]
 8021440:	881b      	ldrh	r3, [r3, #0]
 8021442:	eba3 030b 	sub.w	r3, r3, fp
 8021446:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802144a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802144e:	4413      	add	r3, r2
 8021450:	9a07      	ldr	r2, [sp, #28]
 8021452:	fb93 f3f2 	sdiv	r3, r3, r2
 8021456:	441d      	add	r5, r3
 8021458:	e7a3      	b.n	80213a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802145a:	9b05      	ldr	r3, [sp, #20]
 802145c:	6818      	ldr	r0, [r3, #0]
 802145e:	6803      	ldr	r3, [r0, #0]
 8021460:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021462:	4798      	blx	r3
 8021464:	b00d      	add	sp, #52	@ 0x34
 8021466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802146a:	bf00      	nop
 802146c:	20014040 	.word	0x20014040
 8021470:	20014038 	.word	0x20014038

08021474 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8021474:	b570      	push	{r4, r5, r6, lr}
 8021476:	1214      	asrs	r4, r2, #8
 8021478:	788d      	ldrb	r5, [r1, #2]
 802147a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802147e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021482:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021486:	fb15 f503 	smulbb	r5, r5, r3
 802148a:	fb04 5506 	mla	r5, r4, r6, r5
 802148e:	10d0      	asrs	r0, r2, #3
 8021490:	784c      	ldrb	r4, [r1, #1]
 8021492:	7809      	ldrb	r1, [r1, #0]
 8021494:	00d2      	lsls	r2, r2, #3
 8021496:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802149a:	b2d2      	uxtb	r2, r2
 802149c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80214a0:	fb14 f403 	smulbb	r4, r4, r3
 80214a4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80214a8:	fb11 f303 	smulbb	r3, r1, r3
 80214ac:	fb00 4406 	mla	r4, r0, r6, r4
 80214b0:	fb02 3306 	mla	r3, r2, r6, r3
 80214b4:	b2ad      	uxth	r5, r5
 80214b6:	b29b      	uxth	r3, r3
 80214b8:	b2a4      	uxth	r4, r4
 80214ba:	1c68      	adds	r0, r5, #1
 80214bc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80214c0:	1c62      	adds	r2, r4, #1
 80214c2:	1c58      	adds	r0, r3, #1
 80214c4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80214c8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80214cc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80214d0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80214d4:	0964      	lsrs	r4, r4, #5
 80214d6:	4328      	orrs	r0, r5
 80214d8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80214dc:	4320      	orrs	r0, r4
 80214de:	bd70      	pop	{r4, r5, r6, pc}

080214e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80214e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214e4:	b08f      	sub	sp, #60	@ 0x3c
 80214e6:	461c      	mov	r4, r3
 80214e8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80214ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80214ee:	4682      	mov	sl, r0
 80214f0:	460e      	mov	r6, r1
 80214f2:	4615      	mov	r5, r2
 80214f4:	2f00      	cmp	r7, #0
 80214f6:	f000 8142 	beq.w	802177e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80214fa:	6820      	ldr	r0, [r4, #0]
 80214fc:	6861      	ldr	r1, [r4, #4]
 80214fe:	aa0a      	add	r2, sp, #40	@ 0x28
 8021500:	c203      	stmia	r2!, {r0, r1}
 8021502:	6818      	ldr	r0, [r3, #0]
 8021504:	6859      	ldr	r1, [r3, #4]
 8021506:	aa0c      	add	r2, sp, #48	@ 0x30
 8021508:	c203      	stmia	r2!, {r0, r1}
 802150a:	a80a      	add	r0, sp, #40	@ 0x28
 802150c:	f7ee fb88 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021510:	4621      	mov	r1, r4
 8021512:	a80c      	add	r0, sp, #48	@ 0x30
 8021514:	f7ee fbac 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021518:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802151c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8021520:	f002 0301 	and.w	r3, r2, #1
 8021524:	9306      	str	r3, [sp, #24]
 8021526:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802152a:	f003 0101 	and.w	r1, r3, #1
 802152e:	9105      	str	r1, [sp, #20]
 8021530:	9805      	ldr	r0, [sp, #20]
 8021532:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8021536:	4403      	add	r3, r0
 8021538:	fb01 2303 	mla	r3, r1, r3, r2
 802153c:	f04f 0802 	mov.w	r8, #2
 8021540:	fb93 f3f8 	sdiv	r3, r3, r8
 8021544:	441e      	add	r6, r3
 8021546:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802154a:	441a      	add	r2, r3
 802154c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8021550:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8021554:	4419      	add	r1, r3
 8021556:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802155a:	9303      	str	r3, [sp, #12]
 802155c:	4b89      	ldr	r3, [pc, #548]	@ (8021784 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802155e:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8021562:	6818      	ldr	r0, [r3, #0]
 8021564:	6803      	ldr	r3, [r0, #0]
 8021566:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021568:	4798      	blx	r3
 802156a:	4a87      	ldr	r2, [pc, #540]	@ (8021788 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802156c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8021570:	8813      	ldrh	r3, [r2, #0]
 8021572:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8021576:	2fff      	cmp	r7, #255	@ 0xff
 8021578:	fb03 9404 	mla	r4, r3, r4, r9
 802157c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021580:	f105 0504 	add.w	r5, r5, #4
 8021584:	4694      	mov	ip, r2
 8021586:	fb03 f30b 	mul.w	r3, r3, fp
 802158a:	d071      	beq.n	8021670 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802158c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021590:	43f9      	mvns	r1, r7
 8021592:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021596:	b2c9      	uxtb	r1, r1
 8021598:	9104      	str	r1, [sp, #16]
 802159a:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802159e:	9b07      	ldr	r3, [sp, #28]
 80215a0:	42a3      	cmp	r3, r4
 80215a2:	f240 80e7 	bls.w	8021774 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80215a6:	9b06      	ldr	r3, [sp, #24]
 80215a8:	2b00      	cmp	r3, #0
 80215aa:	d03d      	beq.n	8021628 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80215ac:	7831      	ldrb	r1, [r6, #0]
 80215ae:	9b04      	ldr	r3, [sp, #16]
 80215b0:	8822      	ldrh	r2, [r4, #0]
 80215b2:	9300      	str	r3, [sp, #0]
 80215b4:	f001 010f 	and.w	r1, r1, #15
 80215b8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80215bc:	463b      	mov	r3, r7
 80215be:	4429      	add	r1, r5
 80215c0:	4650      	mov	r0, sl
 80215c2:	f7ff ff57 	bl	8021474 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80215c6:	9b03      	ldr	r3, [sp, #12]
 80215c8:	f824 0b02 	strh.w	r0, [r4], #2
 80215cc:	f106 0801 	add.w	r8, r6, #1
 80215d0:	f103 3bff 	add.w	fp, r3, #4294967295
 80215d4:	f1bb 0f01 	cmp.w	fp, #1
 80215d8:	46a1      	mov	r9, r4
 80215da:	f104 0404 	add.w	r4, r4, #4
 80215de:	dd27      	ble.n	8021630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80215e0:	f898 1000 	ldrb.w	r1, [r8]
 80215e4:	9b04      	ldr	r3, [sp, #16]
 80215e6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80215ea:	9300      	str	r3, [sp, #0]
 80215ec:	0909      	lsrs	r1, r1, #4
 80215ee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80215f2:	463b      	mov	r3, r7
 80215f4:	4429      	add	r1, r5
 80215f6:	4650      	mov	r0, sl
 80215f8:	f7ff ff3c 	bl	8021474 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80215fc:	f824 0c04 	strh.w	r0, [r4, #-4]
 8021600:	f818 1b01 	ldrb.w	r1, [r8], #1
 8021604:	9b04      	ldr	r3, [sp, #16]
 8021606:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802160a:	9300      	str	r3, [sp, #0]
 802160c:	f001 010f 	and.w	r1, r1, #15
 8021610:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021614:	463b      	mov	r3, r7
 8021616:	4429      	add	r1, r5
 8021618:	4650      	mov	r0, sl
 802161a:	f7ff ff2b 	bl	8021474 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802161e:	f1ab 0b02 	sub.w	fp, fp, #2
 8021622:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021626:	e7d5      	b.n	80215d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8021628:	46b0      	mov	r8, r6
 802162a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802162e:	e7d1      	b.n	80215d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8021630:	d10f      	bne.n	8021652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8021632:	f898 1000 	ldrb.w	r1, [r8]
 8021636:	9b04      	ldr	r3, [sp, #16]
 8021638:	f8b9 2000 	ldrh.w	r2, [r9]
 802163c:	9300      	str	r3, [sp, #0]
 802163e:	0909      	lsrs	r1, r1, #4
 8021640:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021644:	463b      	mov	r3, r7
 8021646:	4429      	add	r1, r5
 8021648:	4650      	mov	r0, sl
 802164a:	f7ff ff13 	bl	8021474 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802164e:	f829 0b02 	strh.w	r0, [r9], #2
 8021652:	9b08      	ldr	r3, [sp, #32]
 8021654:	9a05      	ldr	r2, [sp, #20]
 8021656:	881c      	ldrh	r4, [r3, #0]
 8021658:	9b03      	ldr	r3, [sp, #12]
 802165a:	1ae4      	subs	r4, r4, r3
 802165c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021660:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021664:	4413      	add	r3, r2
 8021666:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021668:	fb93 f3f2 	sdiv	r3, r3, r2
 802166c:	441e      	add	r6, r3
 802166e:	e796      	b.n	802159e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8021670:	4f46      	ldr	r7, [pc, #280]	@ (802178c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8021672:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021676:	42a3      	cmp	r3, r4
 8021678:	d97c      	bls.n	8021774 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802167a:	9a06      	ldr	r2, [sp, #24]
 802167c:	2a00      	cmp	r2, #0
 802167e:	d054      	beq.n	802172a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8021680:	7830      	ldrb	r0, [r6, #0]
 8021682:	f000 000f 	and.w	r0, r0, #15
 8021686:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802168a:	eb05 0e00 	add.w	lr, r5, r0
 802168e:	5c28      	ldrb	r0, [r5, r0]
 8021690:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8021694:	f89e e001 	ldrb.w	lr, [lr, #1]
 8021698:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802169c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80216a0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80216a4:	ea42 020e 	orr.w	r2, r2, lr
 80216a8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80216ac:	f824 2b02 	strh.w	r2, [r4], #2
 80216b0:	9a03      	ldr	r2, [sp, #12]
 80216b2:	1c71      	adds	r1, r6, #1
 80216b4:	f102 3eff 	add.w	lr, r2, #4294967295
 80216b8:	f1be 0f01 	cmp.w	lr, #1
 80216bc:	4620      	mov	r0, r4
 80216be:	f104 0404 	add.w	r4, r4, #4
 80216c2:	dd36      	ble.n	8021732 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80216c4:	7808      	ldrb	r0, [r1, #0]
 80216c6:	0900      	lsrs	r0, r0, #4
 80216c8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80216cc:	eb05 0a00 	add.w	sl, r5, r0
 80216d0:	f1ae 0e02 	sub.w	lr, lr, #2
 80216d4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80216d8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80216dc:	00d2      	lsls	r2, r2, #3
 80216de:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80216e2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80216e6:	ea49 0202 	orr.w	r2, r9, r2
 80216ea:	f815 9000 	ldrb.w	r9, [r5, r0]
 80216ee:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80216f2:	f824 2c04 	strh.w	r2, [r4, #-4]
 80216f6:	f811 0b01 	ldrb.w	r0, [r1], #1
 80216fa:	f000 000f 	and.w	r0, r0, #15
 80216fe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021702:	eb05 0a00 	add.w	sl, r5, r0
 8021706:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802170a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802170e:	00d2      	lsls	r2, r2, #3
 8021710:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8021714:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021718:	ea49 0202 	orr.w	r2, r9, r2
 802171c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021720:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8021724:	f824 2c02 	strh.w	r2, [r4, #-2]
 8021728:	e7c6      	b.n	80216b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802172a:	4631      	mov	r1, r6
 802172c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8021730:	e7c2      	b.n	80216b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8021732:	d111      	bne.n	8021758 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8021734:	7809      	ldrb	r1, [r1, #0]
 8021736:	0909      	lsrs	r1, r1, #4
 8021738:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802173c:	186c      	adds	r4, r5, r1
 802173e:	5c69      	ldrb	r1, [r5, r1]
 8021740:	78a2      	ldrb	r2, [r4, #2]
 8021742:	7864      	ldrb	r4, [r4, #1]
 8021744:	00e4      	lsls	r4, r4, #3
 8021746:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802174a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802174e:	4322      	orrs	r2, r4
 8021750:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8021754:	f820 2b02 	strh.w	r2, [r0], #2
 8021758:	9a03      	ldr	r2, [sp, #12]
 802175a:	f8bc 4000 	ldrh.w	r4, [ip]
 802175e:	9905      	ldr	r1, [sp, #20]
 8021760:	1aa4      	subs	r4, r4, r2
 8021762:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8021766:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802176a:	440a      	add	r2, r1
 802176c:	fb92 f2f8 	sdiv	r2, r2, r8
 8021770:	4416      	add	r6, r2
 8021772:	e780      	b.n	8021676 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8021774:	4b03      	ldr	r3, [pc, #12]	@ (8021784 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021776:	6818      	ldr	r0, [r3, #0]
 8021778:	6803      	ldr	r3, [r0, #0]
 802177a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802177c:	4798      	blx	r3
 802177e:	b00f      	add	sp, #60	@ 0x3c
 8021780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021784:	20014040 	.word	0x20014040
 8021788:	20014038 	.word	0x20014038
 802178c:	fffff800 	.word	0xfffff800

08021790 <CRC_Lock>:
 8021790:	b530      	push	{r4, r5, lr}
 8021792:	4a2d      	ldr	r2, [pc, #180]	@ (8021848 <CRC_Lock+0xb8>)
 8021794:	6813      	ldr	r3, [r2, #0]
 8021796:	f023 0301 	bic.w	r3, r3, #1
 802179a:	6013      	str	r3, [r2, #0]
 802179c:	4b2b      	ldr	r3, [pc, #172]	@ (802184c <CRC_Lock+0xbc>)
 802179e:	681c      	ldr	r4, [r3, #0]
 80217a0:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 80217a4:	4014      	ands	r4, r2
 80217a6:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80217aa:	42ac      	cmp	r4, r5
 80217ac:	d005      	beq.n	80217ba <CRC_Lock+0x2a>
 80217ae:	681c      	ldr	r4, [r3, #0]
 80217b0:	f24c 2570 	movw	r5, #49776	@ 0xc270
 80217b4:	4014      	ands	r4, r2
 80217b6:	42ac      	cmp	r4, r5
 80217b8:	d125      	bne.n	8021806 <CRC_Lock+0x76>
 80217ba:	4b25      	ldr	r3, [pc, #148]	@ (8021850 <CRC_Lock+0xc0>)
 80217bc:	681b      	ldr	r3, [r3, #0]
 80217be:	2b00      	cmp	r3, #0
 80217c0:	d139      	bne.n	8021836 <CRC_Lock+0xa6>
 80217c2:	4b24      	ldr	r3, [pc, #144]	@ (8021854 <CRC_Lock+0xc4>)
 80217c4:	681a      	ldr	r2, [r3, #0]
 80217c6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80217ca:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 80217ce:	d00d      	beq.n	80217ec <CRC_Lock+0x5c>
 80217d0:	681a      	ldr	r2, [r3, #0]
 80217d2:	f240 4483 	movw	r4, #1155	@ 0x483
 80217d6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80217da:	42a2      	cmp	r2, r4
 80217dc:	d006      	beq.n	80217ec <CRC_Lock+0x5c>
 80217de:	681b      	ldr	r3, [r3, #0]
 80217e0:	f240 4285 	movw	r2, #1157	@ 0x485
 80217e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80217e8:	4293      	cmp	r3, r2
 80217ea:	d124      	bne.n	8021836 <CRC_Lock+0xa6>
 80217ec:	4b1a      	ldr	r3, [pc, #104]	@ (8021858 <CRC_Lock+0xc8>)
 80217ee:	2201      	movs	r2, #1
 80217f0:	601a      	str	r2, [r3, #0]
 80217f2:	681a      	ldr	r2, [r3, #0]
 80217f4:	2a00      	cmp	r2, #0
 80217f6:	d1fc      	bne.n	80217f2 <CRC_Lock+0x62>
 80217f8:	4b18      	ldr	r3, [pc, #96]	@ (802185c <CRC_Lock+0xcc>)
 80217fa:	6018      	str	r0, [r3, #0]
 80217fc:	6818      	ldr	r0, [r3, #0]
 80217fe:	1a43      	subs	r3, r0, r1
 8021800:	4258      	negs	r0, r3
 8021802:	4158      	adcs	r0, r3
 8021804:	e00e      	b.n	8021824 <CRC_Lock+0x94>
 8021806:	681b      	ldr	r3, [r3, #0]
 8021808:	4013      	ands	r3, r2
 802180a:	f24d 2220 	movw	r2, #53792	@ 0xd220
 802180e:	4293      	cmp	r3, r2
 8021810:	d111      	bne.n	8021836 <CRC_Lock+0xa6>
 8021812:	4b13      	ldr	r3, [pc, #76]	@ (8021860 <CRC_Lock+0xd0>)
 8021814:	681b      	ldr	r3, [r3, #0]
 8021816:	f240 4286 	movw	r2, #1158	@ 0x486
 802181a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802181e:	4293      	cmp	r3, r2
 8021820:	d001      	beq.n	8021826 <CRC_Lock+0x96>
 8021822:	2000      	movs	r0, #0
 8021824:	bd30      	pop	{r4, r5, pc}
 8021826:	4b0f      	ldr	r3, [pc, #60]	@ (8021864 <CRC_Lock+0xd4>)
 8021828:	2201      	movs	r2, #1
 802182a:	601a      	str	r2, [r3, #0]
 802182c:	681a      	ldr	r2, [r3, #0]
 802182e:	2a00      	cmp	r2, #0
 8021830:	d1fc      	bne.n	802182c <CRC_Lock+0x9c>
 8021832:	4b0d      	ldr	r3, [pc, #52]	@ (8021868 <CRC_Lock+0xd8>)
 8021834:	e7e1      	b.n	80217fa <CRC_Lock+0x6a>
 8021836:	4b0d      	ldr	r3, [pc, #52]	@ (802186c <CRC_Lock+0xdc>)
 8021838:	2201      	movs	r2, #1
 802183a:	601a      	str	r2, [r3, #0]
 802183c:	681a      	ldr	r2, [r3, #0]
 802183e:	2a00      	cmp	r2, #0
 8021840:	d1fc      	bne.n	802183c <CRC_Lock+0xac>
 8021842:	4b0b      	ldr	r3, [pc, #44]	@ (8021870 <CRC_Lock+0xe0>)
 8021844:	e7d9      	b.n	80217fa <CRC_Lock+0x6a>
 8021846:	bf00      	nop
 8021848:	e0002000 	.word	0xe0002000
 802184c:	e000ed00 	.word	0xe000ed00
 8021850:	e0042000 	.word	0xe0042000
 8021854:	5c001000 	.word	0x5c001000
 8021858:	58024c08 	.word	0x58024c08
 802185c:	58024c00 	.word	0x58024c00
 8021860:	46008ff0 	.word	0x46008ff0
 8021864:	46024c08 	.word	0x46024c08
 8021868:	46024c00 	.word	0x46024c00
 802186c:	40023008 	.word	0x40023008
 8021870:	40023000 	.word	0x40023000

08021874 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8021874:	6101      	str	r1, [r0, #16]
 8021876:	4770      	bx	lr

08021878 <_ZN8touchgfx8Gestures4tickEv>:
 8021878:	7b83      	ldrb	r3, [r0, #14]
 802187a:	b14b      	cbz	r3, 8021890 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802187c:	8903      	ldrh	r3, [r0, #8]
 802187e:	3301      	adds	r3, #1
 8021880:	b29b      	uxth	r3, r3
 8021882:	2b07      	cmp	r3, #7
 8021884:	8103      	strh	r3, [r0, #8]
 8021886:	bf81      	itttt	hi
 8021888:	2300      	movhi	r3, #0
 802188a:	8143      	strhhi	r3, [r0, #10]
 802188c:	8183      	strhhi	r3, [r0, #12]
 802188e:	7383      	strbhi	r3, [r0, #14]
 8021890:	4770      	bx	lr
	...

08021894 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8021894:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8021898:	4698      	mov	r8, r3
 802189a:	8883      	ldrh	r3, [r0, #4]
 802189c:	f8ad 3006 	strh.w	r3, [sp, #6]
 80218a0:	eba8 0303 	sub.w	r3, r8, r3
 80218a4:	b21b      	sxth	r3, r3
 80218a6:	4604      	mov	r4, r0
 80218a8:	2b00      	cmp	r3, #0
 80218aa:	4617      	mov	r7, r2
 80218ac:	4a18      	ldr	r2, [pc, #96]	@ (8021910 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80218ae:	9200      	str	r2, [sp, #0]
 80218b0:	bfb8      	it	lt
 80218b2:	425b      	neglt	r3, r3
 80218b4:	8aa2      	ldrh	r2, [r4, #20]
 80218b6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80218ba:	f8ad 800a 	strh.w	r8, [sp, #10]
 80218be:	b21b      	sxth	r3, r3
 80218c0:	460e      	mov	r6, r1
 80218c2:	4293      	cmp	r3, r2
 80218c4:	88c1      	ldrh	r1, [r0, #6]
 80218c6:	f8ad 1008 	strh.w	r1, [sp, #8]
 80218ca:	f04f 0000 	mov.w	r0, #0
 80218ce:	f88d 0004 	strb.w	r0, [sp, #4]
 80218d2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80218d6:	dc07      	bgt.n	80218e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80218d8:	1a69      	subs	r1, r5, r1
 80218da:	b209      	sxth	r1, r1
 80218dc:	2900      	cmp	r1, #0
 80218de:	bfb8      	it	lt
 80218e0:	4249      	neglt	r1, r1
 80218e2:	b209      	sxth	r1, r1
 80218e4:	428a      	cmp	r2, r1
 80218e6:	da10      	bge.n	802190a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80218e8:	6920      	ldr	r0, [r4, #16]
 80218ea:	6803      	ldr	r3, [r0, #0]
 80218ec:	4669      	mov	r1, sp
 80218ee:	685b      	ldr	r3, [r3, #4]
 80218f0:	4798      	blx	r3
 80218f2:	eba8 0606 	sub.w	r6, r8, r6
 80218f6:	2300      	movs	r3, #0
 80218f8:	1bef      	subs	r7, r5, r7
 80218fa:	2001      	movs	r0, #1
 80218fc:	8123      	strh	r3, [r4, #8]
 80218fe:	8166      	strh	r6, [r4, #10]
 8021900:	81a7      	strh	r7, [r4, #12]
 8021902:	f8a4 8004 	strh.w	r8, [r4, #4]
 8021906:	80e5      	strh	r5, [r4, #6]
 8021908:	73a0      	strb	r0, [r4, #14]
 802190a:	b004      	add	sp, #16
 802190c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021910:	08025df8 	.word	0x08025df8

08021914 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8021914:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021916:	461e      	mov	r6, r3
 8021918:	1e4b      	subs	r3, r1, #1
 802191a:	2b01      	cmp	r3, #1
 802191c:	b085      	sub	sp, #20
 802191e:	4604      	mov	r4, r0
 8021920:	460d      	mov	r5, r1
 8021922:	4617      	mov	r7, r2
 8021924:	d84b      	bhi.n	80219be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8021926:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802192a:	1cd3      	adds	r3, r2, #3
 802192c:	b29b      	uxth	r3, r3
 802192e:	2b06      	cmp	r3, #6
 8021930:	d916      	bls.n	8021960 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8021932:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80219d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8021936:	f8cd c004 	str.w	ip, [sp, #4]
 802193a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802193e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8021942:	6900      	ldr	r0, [r0, #16]
 8021944:	f8ad 100c 	strh.w	r1, [sp, #12]
 8021948:	f04f 0c00 	mov.w	ip, #0
 802194c:	f88d c008 	strb.w	ip, [sp, #8]
 8021950:	f8ad 200a 	strh.w	r2, [sp, #10]
 8021954:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021958:	6803      	ldr	r3, [r0, #0]
 802195a:	a901      	add	r1, sp, #4
 802195c:	689b      	ldr	r3, [r3, #8]
 802195e:	4798      	blx	r3
 8021960:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021964:	1cd3      	adds	r3, r2, #3
 8021966:	b29b      	uxth	r3, r3
 8021968:	2b06      	cmp	r3, #6
 802196a:	d916      	bls.n	802199a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802196c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80219d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8021970:	f8cd c004 	str.w	ip, [sp, #4]
 8021974:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021978:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802197c:	6920      	ldr	r0, [r4, #16]
 802197e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8021982:	f04f 0c01 	mov.w	ip, #1
 8021986:	f88d c008 	strb.w	ip, [sp, #8]
 802198a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802198e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021992:	6803      	ldr	r3, [r0, #0]
 8021994:	a901      	add	r1, sp, #4
 8021996:	689b      	ldr	r3, [r3, #8]
 8021998:	4798      	blx	r3
 802199a:	4b0d      	ldr	r3, [pc, #52]	@ (80219d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802199c:	9301      	str	r3, [sp, #4]
 802199e:	6920      	ldr	r0, [r4, #16]
 80219a0:	f88d 5008 	strb.w	r5, [sp, #8]
 80219a4:	2300      	movs	r3, #0
 80219a6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80219aa:	f8ad 600c 	strh.w	r6, [sp, #12]
 80219ae:	f8ad 300e 	strh.w	r3, [sp, #14]
 80219b2:	6803      	ldr	r3, [r0, #0]
 80219b4:	a901      	add	r1, sp, #4
 80219b6:	681b      	ldr	r3, [r3, #0]
 80219b8:	4798      	blx	r3
 80219ba:	b005      	add	sp, #20
 80219bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80219be:	2900      	cmp	r1, #0
 80219c0:	d1eb      	bne.n	802199a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80219c2:	80a2      	strh	r2, [r4, #4]
 80219c4:	80c6      	strh	r6, [r0, #6]
 80219c6:	60a1      	str	r1, [r4, #8]
 80219c8:	81a1      	strh	r1, [r4, #12]
 80219ca:	73a1      	strb	r1, [r4, #14]
 80219cc:	e7e5      	b.n	802199a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80219ce:	bf00      	nop
 80219d0:	08025de4 	.word	0x08025de4
 80219d4:	08025e0c 	.word	0x08025e0c

080219d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 80219d8:	10c9      	asrs	r1, r1, #3
 80219da:	2900      	cmp	r1, #0
 80219dc:	bfb8      	it	lt
 80219de:	4249      	neglt	r1, r1
 80219e0:	2801      	cmp	r0, #1
 80219e2:	d108      	bne.n	80219f6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80219e4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80219e8:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 80219ec:	4601      	mov	r1, r0
 80219ee:	dd02      	ble.n	80219f6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 80219f0:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 80219f4:	4770      	bx	lr
 80219f6:	29ff      	cmp	r1, #255	@ 0xff
 80219f8:	bfa8      	it	ge
 80219fa:	21ff      	movge	r1, #255	@ 0xff
 80219fc:	4608      	mov	r0, r1
 80219fe:	4770      	bx	lr

08021a00 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8021a00:	b410      	push	{r4}
 8021a02:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8021a06:	429c      	cmp	r4, r3
 8021a08:	d803      	bhi.n	8021a12 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8021a0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021a0e:	f7ed b8ad 	b.w	800eb6c <_ZN8touchgfx7Outline6lineToEii>
 8021a12:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021a16:	4770      	bx	lr

08021a18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8021a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a1c:	b08b      	sub	sp, #44	@ 0x2c
 8021a1e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8021a22:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8021a26:	9308      	str	r3, [sp, #32]
 8021a28:	4606      	mov	r6, r0
 8021a2a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8021a2e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021a30:	468a      	mov	sl, r1
 8021a32:	f7ed fa08 	bl	800ee46 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8021a36:	68b5      	ldr	r5, [r6, #8]
 8021a38:	4604      	mov	r4, r0
 8021a3a:	2d00      	cmp	r5, #0
 8021a3c:	d044      	beq.n	8021ac8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021a3e:	6873      	ldr	r3, [r6, #4]
 8021a40:	42ab      	cmp	r3, r5
 8021a42:	d33d      	bcc.n	8021ac0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8021a44:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8021a48:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8021a4c:	eb02 0b03 	add.w	fp, r2, r3
 8021a50:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8021a54:	fb02 1203 	mla	r2, r2, r3, r1
 8021a58:	9205      	str	r2, [sp, #20]
 8021a5a:	1e6a      	subs	r2, r5, #1
 8021a5c:	9204      	str	r2, [sp, #16]
 8021a5e:	f04f 0800 	mov.w	r8, #0
 8021a62:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8021a66:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021a6a:	454b      	cmp	r3, r9
 8021a6c:	463a      	mov	r2, r7
 8021a6e:	d008      	beq.n	8021a82 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8021a70:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8021a74:	eb03 0b09 	add.w	fp, r3, r9
 8021a78:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8021a7c:	fb03 1309 	mla	r3, r3, r9, r1
 8021a80:	9305      	str	r3, [sp, #20]
 8021a82:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8021a86:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8021a8a:	4498      	add	r8, r3
 8021a8c:	9b04      	ldr	r3, [sp, #16]
 8021a8e:	3b01      	subs	r3, #1
 8021a90:	9304      	str	r3, [sp, #16]
 8021a92:	9b04      	ldr	r3, [sp, #16]
 8021a94:	3301      	adds	r3, #1
 8021a96:	d015      	beq.n	8021ac4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8021a98:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8021a9c:	42bb      	cmp	r3, r7
 8021a9e:	d117      	bne.n	8021ad0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8021aa0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8021aa4:	9b04      	ldr	r3, [sp, #16]
 8021aa6:	4548      	cmp	r0, r9
 8021aa8:	f103 33ff 	add.w	r3, r3, #4294967295
 8021aac:	d17f      	bne.n	8021bae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8021aae:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8021ab2:	4401      	add	r1, r0
 8021ab4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021ab8:	4480      	add	r8, r0
 8021aba:	e7e9      	b.n	8021a90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8021abc:	461f      	mov	r7, r3
 8021abe:	e044      	b.n	8021b4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8021ac0:	2000      	movs	r0, #0
 8021ac2:	e002      	b.n	8021aca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8021ac4:	2900      	cmp	r1, #0
 8021ac6:	d16f      	bne.n	8021ba8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8021ac8:	2001      	movs	r0, #1
 8021aca:	b00b      	add	sp, #44	@ 0x2c
 8021acc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ad0:	2900      	cmp	r1, #0
 8021ad2:	d030      	beq.n	8021b36 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8021ad4:	2f00      	cmp	r7, #0
 8021ad6:	db29      	blt.n	8021b2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021ad8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8021adc:	42bb      	cmp	r3, r7
 8021ade:	dd25      	ble.n	8021b2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021ae0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8021ae4:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8021ae8:	f7ff ff76 	bl	80219d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8021aec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021aee:	fb10 f003 	smulbb	r0, r0, r3
 8021af2:	b280      	uxth	r0, r0
 8021af4:	1c41      	adds	r1, r0, #1
 8021af6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021afa:	1209      	asrs	r1, r1, #8
 8021afc:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8021b00:	d014      	beq.n	8021b2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021b02:	9808      	ldr	r0, [sp, #32]
 8021b04:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8021b06:	b2c9      	uxtb	r1, r1
 8021b08:	b2ba      	uxth	r2, r7
 8021b0a:	9102      	str	r1, [sp, #8]
 8021b0c:	2101      	movs	r1, #1
 8021b0e:	4413      	add	r3, r2
 8021b10:	9101      	str	r1, [sp, #4]
 8021b12:	4402      	add	r2, r0
 8021b14:	fa0f f18b 	sxth.w	r1, fp
 8021b18:	f8da 0000 	ldr.w	r0, [sl]
 8021b1c:	9100      	str	r1, [sp, #0]
 8021b1e:	6941      	ldr	r1, [r0, #20]
 8021b20:	b21b      	sxth	r3, r3
 8021b22:	460d      	mov	r5, r1
 8021b24:	b212      	sxth	r2, r2
 8021b26:	9905      	ldr	r1, [sp, #20]
 8021b28:	4650      	mov	r0, sl
 8021b2a:	47a8      	blx	r5
 8021b2c:	9b04      	ldr	r3, [sp, #16]
 8021b2e:	3301      	adds	r3, #1
 8021b30:	f107 0201 	add.w	r2, r7, #1
 8021b34:	d0c8      	beq.n	8021ac8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021b36:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021b3a:	1abb      	subs	r3, r7, r2
 8021b3c:	2b00      	cmp	r3, #0
 8021b3e:	dd31      	ble.n	8021ba4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021b40:	2a00      	cmp	r2, #0
 8021b42:	dabb      	bge.n	8021abc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8021b44:	2f00      	cmp	r7, #0
 8021b46:	dd2d      	ble.n	8021ba4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021b48:	2200      	movs	r2, #0
 8021b4a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8021b4e:	19d1      	adds	r1, r2, r7
 8021b50:	4299      	cmp	r1, r3
 8021b52:	db02      	blt.n	8021b5a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8021b54:	1a9f      	subs	r7, r3, r2
 8021b56:	2f00      	cmp	r7, #0
 8021b58:	dd24      	ble.n	8021ba4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021b5a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8021b5e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8021b62:	f7ff ff39 	bl	80219d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8021b66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021b68:	fb10 f003 	smulbb	r0, r0, r3
 8021b6c:	b280      	uxth	r0, r0
 8021b6e:	1c41      	adds	r1, r0, #1
 8021b70:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021b74:	1209      	asrs	r1, r1, #8
 8021b76:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8021b7a:	d013      	beq.n	8021ba4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021b7c:	9808      	ldr	r0, [sp, #32]
 8021b7e:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8021b80:	b292      	uxth	r2, r2
 8021b82:	b2c9      	uxtb	r1, r1
 8021b84:	4413      	add	r3, r2
 8021b86:	9102      	str	r1, [sp, #8]
 8021b88:	4402      	add	r2, r0
 8021b8a:	b23f      	sxth	r7, r7
 8021b8c:	f8da 0000 	ldr.w	r0, [sl]
 8021b90:	9701      	str	r7, [sp, #4]
 8021b92:	fa0f f18b 	sxth.w	r1, fp
 8021b96:	9100      	str	r1, [sp, #0]
 8021b98:	6947      	ldr	r7, [r0, #20]
 8021b9a:	9905      	ldr	r1, [sp, #20]
 8021b9c:	b21b      	sxth	r3, r3
 8021b9e:	b212      	sxth	r2, r2
 8021ba0:	4650      	mov	r0, sl
 8021ba2:	47b8      	blx	r7
 8021ba4:	464b      	mov	r3, r9
 8021ba6:	e75c      	b.n	8021a62 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8021ba8:	2f00      	cmp	r7, #0
 8021baa:	da95      	bge.n	8021ad8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8021bac:	e78c      	b.n	8021ac8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021bae:	2900      	cmp	r1, #0
 8021bb0:	d0f8      	beq.n	8021ba4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021bb2:	e78f      	b.n	8021ad4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08021bb4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8021bb4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8021bb8:	461e      	mov	r6, r3
 8021bba:	4b36      	ldr	r3, [pc, #216]	@ (8021c94 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8021bbc:	e9c0 3100 	strd	r3, r1, [r0]
 8021bc0:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8021bc4:	8103      	strh	r3, [r0, #8]
 8021bc6:	2500      	movs	r5, #0
 8021bc8:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8021bcc:	7283      	strb	r3, [r0, #10]
 8021bce:	f100 0814 	add.w	r8, r0, #20
 8021bd2:	4604      	mov	r4, r0
 8021bd4:	8185      	strh	r5, [r0, #12]
 8021bd6:	81c5      	strh	r5, [r0, #14]
 8021bd8:	8205      	strh	r5, [r0, #16]
 8021bda:	8245      	strh	r5, [r0, #18]
 8021bdc:	4640      	mov	r0, r8
 8021bde:	4617      	mov	r7, r2
 8021be0:	f7ec fafc 	bl	800e1dc <_ZN8touchgfx7OutlineC1Ev>
 8021be4:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8021be8:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8021bec:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8021bf0:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8021bf4:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8021bf8:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8021bfc:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8021c00:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8021c04:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8021c08:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8021c0c:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8021c10:	6830      	ldr	r0, [r6, #0]
 8021c12:	6871      	ldr	r1, [r6, #4]
 8021c14:	8872      	ldrh	r2, [r6, #2]
 8021c16:	8835      	ldrh	r5, [r6, #0]
 8021c18:	466b      	mov	r3, sp
 8021c1a:	c303      	stmia	r3!, {r0, r1}
 8021c1c:	887b      	ldrh	r3, [r7, #2]
 8021c1e:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8021c22:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8021c26:	4413      	add	r3, r2
 8021c28:	883a      	ldrh	r2, [r7, #0]
 8021c2a:	81e3      	strh	r3, [r4, #14]
 8021c2c:	442a      	add	r2, r5
 8021c2e:	81a2      	strh	r2, [r4, #12]
 8021c30:	8220      	strh	r0, [r4, #16]
 8021c32:	8261      	strh	r1, [r4, #18]
 8021c34:	4668      	mov	r0, sp
 8021c36:	4639      	mov	r1, r7
 8021c38:	f7ee f81a 	bl	800fc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021c3c:	f104 000c 	add.w	r0, r4, #12
 8021c40:	f7ed ffee 	bl	800fc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021c44:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021c48:	f8bd 2000 	ldrh.w	r2, [sp]
 8021c4c:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8021c50:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8021c54:	4640      	mov	r0, r8
 8021c56:	f7ec faa5 	bl	800e1a4 <_ZN8touchgfx7Outline5resetEv>
 8021c5a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8021c5e:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8021c62:	015b      	lsls	r3, r3, #5
 8021c64:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8021c66:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021c6a:	015b      	lsls	r3, r3, #5
 8021c6c:	6523      	str	r3, [r4, #80]	@ 0x50
 8021c6e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8021c72:	015b      	lsls	r3, r3, #5
 8021c74:	6563      	str	r3, [r4, #84]	@ 0x54
 8021c76:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8021c7a:	015b      	lsls	r3, r3, #5
 8021c7c:	65a3      	str	r3, [r4, #88]	@ 0x58
 8021c7e:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8021c82:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8021c86:	4620      	mov	r0, r4
 8021c88:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8021c8c:	b002      	add	sp, #8
 8021c8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021c92:	bf00      	nop
 8021c94:	08026148 	.word	0x08026148

08021c98 <_ZN8touchgfx6Canvas5closeEv>:
 8021c98:	b538      	push	{r3, r4, r5, lr}
 8021c9a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8021c9e:	4604      	mov	r4, r0
 8021ca0:	b193      	cbz	r3, 8021cc8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8021ca2:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8021ca6:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8021caa:	4213      	tst	r3, r2
 8021cac:	d10c      	bne.n	8021cc8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8021cae:	f100 0514 	add.w	r5, r0, #20
 8021cb2:	b123      	cbz	r3, 8021cbe <_ZN8touchgfx6Canvas5closeEv+0x26>
 8021cb4:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8021cb8:	4628      	mov	r0, r5
 8021cba:	f7ff fea1 	bl	8021a00 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021cbe:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8021cc2:	4628      	mov	r0, r5
 8021cc4:	f7ff fe9c 	bl	8021a00 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021cc8:	2300      	movs	r3, #0
 8021cca:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8021cce:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8021cd2:	4298      	cmp	r0, r3
 8021cd4:	bf34      	ite	cc
 8021cd6:	2000      	movcc	r0, #0
 8021cd8:	2001      	movcs	r0, #1
 8021cda:	bd38      	pop	{r3, r4, r5, pc}

08021cdc <_ZN8touchgfx6Canvas6renderEh>:
 8021cdc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8021ce0:	7a85      	ldrb	r5, [r0, #10]
 8021ce2:	4369      	muls	r1, r5
 8021ce4:	1c4d      	adds	r5, r1, #1
 8021ce6:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8021cea:	122d      	asrs	r5, r5, #8
 8021cec:	4604      	mov	r4, r0
 8021cee:	f000 8099 	beq.w	8021e24 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8021cf2:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8021cf6:	2b00      	cmp	r3, #0
 8021cf8:	f000 8094 	beq.w	8021e24 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8021cfc:	f7ff ffcc 	bl	8021c98 <_ZN8touchgfx6Canvas5closeEv>
 8021d00:	4607      	mov	r7, r0
 8021d02:	2800      	cmp	r0, #0
 8021d04:	d045      	beq.n	8021d92 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8021d06:	6860      	ldr	r0, [r4, #4]
 8021d08:	4e47      	ldr	r6, [pc, #284]	@ (8021e28 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 8021d0a:	6803      	ldr	r3, [r0, #0]
 8021d0c:	6837      	ldr	r7, [r6, #0]
 8021d0e:	689b      	ldr	r3, [r3, #8]
 8021d10:	4798      	blx	r3
 8021d12:	4601      	mov	r1, r0
 8021d14:	4638      	mov	r0, r7
 8021d16:	f7e9 ff4b 	bl	800bbb0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8021d1a:	4607      	mov	r7, r0
 8021d1c:	f7e1 f914 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 8021d20:	6803      	ldr	r3, [r0, #0]
 8021d22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021d24:	4798      	blx	r3
 8021d26:	4680      	mov	r8, r0
 8021d28:	f7e1 f90e 	bl	8002f48 <_ZN8touchgfx3HAL3lcdEv>
 8021d2c:	6803      	ldr	r3, [r0, #0]
 8021d2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021d30:	4798      	blx	r3
 8021d32:	280b      	cmp	r0, #11
 8021d34:	d85b      	bhi.n	8021dee <_ZN8touchgfx6Canvas6renderEh+0x112>
 8021d36:	e8df f000 	tbb	[pc, r0]
 8021d3a:	5c51      	.short	0x5c51
 8021d3c:	305a066c 	.word	0x305a066c
 8021d40:	65656540 	.word	0x65656540
 8021d44:	6565      	.short	0x6565
 8021d46:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021d4a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8021d4e:	2208      	movs	r2, #8
 8021d50:	fb91 f2f2 	sdiv	r2, r1, r2
 8021d54:	fb08 2303 	mla	r3, r8, r3, r2
 8021d58:	441f      	add	r7, r3
 8021d5a:	424b      	negs	r3, r1
 8021d5c:	f003 0307 	and.w	r3, r3, #7
 8021d60:	f001 0107 	and.w	r1, r1, #7
 8021d64:	bf58      	it	pl
 8021d66:	4259      	negpl	r1, r3
 8021d68:	b2c9      	uxtb	r1, r1
 8021d6a:	b2ed      	uxtb	r5, r5
 8021d6c:	463a      	mov	r2, r7
 8021d6e:	e9cd 1500 	strd	r1, r5, [sp]
 8021d72:	fa0f f388 	sxth.w	r3, r8
 8021d76:	6861      	ldr	r1, [r4, #4]
 8021d78:	f104 0014 	add.w	r0, r4, #20
 8021d7c:	f7ff fe4c 	bl	8021a18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8021d80:	4607      	mov	r7, r0
 8021d82:	6860      	ldr	r0, [r4, #4]
 8021d84:	6803      	ldr	r3, [r0, #0]
 8021d86:	691b      	ldr	r3, [r3, #16]
 8021d88:	4798      	blx	r3
 8021d8a:	6830      	ldr	r0, [r6, #0]
 8021d8c:	6803      	ldr	r3, [r0, #0]
 8021d8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021d90:	4798      	blx	r3
 8021d92:	4638      	mov	r0, r7
 8021d94:	b002      	add	sp, #8
 8021d96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021d9a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021d9e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8021da2:	2204      	movs	r2, #4
 8021da4:	fb91 f2f2 	sdiv	r2, r1, r2
 8021da8:	fb08 2303 	mla	r3, r8, r3, r2
 8021dac:	441f      	add	r7, r3
 8021dae:	424b      	negs	r3, r1
 8021db0:	f003 0303 	and.w	r3, r3, #3
 8021db4:	f001 0103 	and.w	r1, r1, #3
 8021db8:	e7d4      	b.n	8021d64 <_ZN8touchgfx6Canvas6renderEh+0x88>
 8021dba:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8021dbe:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021dc2:	2900      	cmp	r1, #0
 8021dc4:	f04f 0202 	mov.w	r2, #2
 8021dc8:	fb91 f2f2 	sdiv	r2, r1, r2
 8021dcc:	f001 0101 	and.w	r1, r1, #1
 8021dd0:	fb08 2303 	mla	r3, r8, r3, r2
 8021dd4:	441f      	add	r7, r3
 8021dd6:	bfb8      	it	lt
 8021dd8:	4249      	neglt	r1, r1
 8021dda:	e7c5      	b.n	8021d68 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8021ddc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021de0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021de4:	fb08 f303 	mul.w	r3, r8, r3
 8021de8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8021dec:	441f      	add	r7, r3
 8021dee:	2100      	movs	r1, #0
 8021df0:	e7bb      	b.n	8021d6a <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8021df2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021df6:	fb08 f203 	mul.w	r2, r8, r3
 8021dfa:	89a3      	ldrh	r3, [r4, #12]
 8021dfc:	2103      	movs	r1, #3
 8021dfe:	fb13 2301 	smlabb	r3, r3, r1, r2
 8021e02:	e7f3      	b.n	8021dec <_ZN8touchgfx6Canvas6renderEh+0x110>
 8021e04:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021e08:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021e0c:	fb08 2303 	mla	r3, r8, r3, r2
 8021e10:	e7ec      	b.n	8021dec <_ZN8touchgfx6Canvas6renderEh+0x110>
 8021e12:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021e16:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021e1a:	fb08 f303 	mul.w	r3, r8, r3
 8021e1e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8021e22:	e7e3      	b.n	8021dec <_ZN8touchgfx6Canvas6renderEh+0x110>
 8021e24:	2701      	movs	r7, #1
 8021e26:	e7b4      	b.n	8021d92 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8021e28:	20014040 	.word	0x20014040

08021e2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8021e2c:	b510      	push	{r4, lr}
 8021e2e:	4b06      	ldr	r3, [pc, #24]	@ (8021e48 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 8021e30:	781b      	ldrb	r3, [r3, #0]
 8021e32:	2b01      	cmp	r3, #1
 8021e34:	d107      	bne.n	8021e46 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 8021e36:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8021e3a:	680b      	ldr	r3, [r1, #0]
 8021e3c:	6814      	ldr	r4, [r2, #0]
 8021e3e:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8021e42:	6013      	str	r3, [r2, #0]
 8021e44:	600c      	str	r4, [r1, #0]
 8021e46:	bd10      	pop	{r4, pc}
 8021e48:	20014036 	.word	0x20014036

08021e4c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8021e4c:	b513      	push	{r0, r1, r4, lr}
 8021e4e:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8021e52:	4604      	mov	r4, r0
 8021e54:	e9cd 2100 	strd	r2, r1, [sp]
 8021e58:	b9a3      	cbnz	r3, 8021e84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8021e5a:	466a      	mov	r2, sp
 8021e5c:	a901      	add	r1, sp, #4
 8021e5e:	4620      	mov	r0, r4
 8021e60:	f7ff ffe4 	bl	8021e2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021e64:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8021e66:	9901      	ldr	r1, [sp, #4]
 8021e68:	9a00      	ldr	r2, [sp, #0]
 8021e6a:	1ac9      	subs	r1, r1, r3
 8021e6c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8021e6e:	9101      	str	r1, [sp, #4]
 8021e70:	1ad2      	subs	r2, r2, r3
 8021e72:	2a00      	cmp	r2, #0
 8021e74:	9200      	str	r2, [sp, #0]
 8021e76:	da0b      	bge.n	8021e90 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8021e78:	2301      	movs	r3, #1
 8021e7a:	2900      	cmp	r1, #0
 8021e7c:	da0e      	bge.n	8021e9c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8021e7e:	f043 0304 	orr.w	r3, r3, #4
 8021e82:	e013      	b.n	8021eac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8021e84:	f7ff ff08 	bl	8021c98 <_ZN8touchgfx6Canvas5closeEv>
 8021e88:	2800      	cmp	r0, #0
 8021e8a:	d1e6      	bne.n	8021e5a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8021e8c:	b002      	add	sp, #8
 8021e8e:	bd10      	pop	{r4, pc}
 8021e90:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8021e92:	429a      	cmp	r2, r3
 8021e94:	bfac      	ite	ge
 8021e96:	2302      	movge	r3, #2
 8021e98:	2300      	movlt	r3, #0
 8021e9a:	e7ee      	b.n	8021e7a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8021e9c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8021e9e:	4281      	cmp	r1, r0
 8021ea0:	bfac      	ite	ge
 8021ea2:	2008      	movge	r0, #8
 8021ea4:	2000      	movlt	r0, #0
 8021ea6:	4318      	orrs	r0, r3
 8021ea8:	b2c3      	uxtb	r3, r0
 8021eaa:	b158      	cbz	r0, 8021ec4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8021eac:	2200      	movs	r2, #0
 8021eae:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8021eb2:	9901      	ldr	r1, [sp, #4]
 8021eb4:	9a00      	ldr	r2, [sp, #0]
 8021eb6:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8021eb8:	6722      	str	r2, [r4, #112]	@ 0x70
 8021eba:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 8021ebe:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8021ec2:	e7e3      	b.n	8021e8c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8021ec4:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021ec8:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8021ecc:	4298      	cmp	r0, r3
 8021ece:	d803      	bhi.n	8021ed8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8021ed0:	f104 0014 	add.w	r0, r4, #20
 8021ed4:	f7ec fe64 	bl	800eba0 <_ZN8touchgfx7Outline6moveToEii>
 8021ed8:	2301      	movs	r3, #1
 8021eda:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8021ede:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8021ee2:	2300      	movs	r3, #0
 8021ee4:	e7e5      	b.n	8021eb2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08021ee6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8021ee6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021ee8:	ab02      	add	r3, sp, #8
 8021eea:	4604      	mov	r4, r0
 8021eec:	f843 2d08 	str.w	r2, [r3, #-8]!
 8021ef0:	9101      	str	r1, [sp, #4]
 8021ef2:	461a      	mov	r2, r3
 8021ef4:	a901      	add	r1, sp, #4
 8021ef6:	f7ff ff99 	bl	8021e2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021efa:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8021efc:	9901      	ldr	r1, [sp, #4]
 8021efe:	9a00      	ldr	r2, [sp, #0]
 8021f00:	1ac9      	subs	r1, r1, r3
 8021f02:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8021f04:	9101      	str	r1, [sp, #4]
 8021f06:	1ad2      	subs	r2, r2, r3
 8021f08:	2a00      	cmp	r2, #0
 8021f0a:	9200      	str	r2, [sp, #0]
 8021f0c:	db1c      	blt.n	8021f48 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8021f0e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8021f10:	429a      	cmp	r2, r3
 8021f12:	bfac      	ite	ge
 8021f14:	2002      	movge	r0, #2
 8021f16:	2000      	movlt	r0, #0
 8021f18:	2900      	cmp	r1, #0
 8021f1a:	db17      	blt.n	8021f4c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8021f1c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8021f1e:	4299      	cmp	r1, r3
 8021f20:	bfac      	ite	ge
 8021f22:	2308      	movge	r3, #8
 8021f24:	2300      	movlt	r3, #0
 8021f26:	4303      	orrs	r3, r0
 8021f28:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8021f2c:	b2dd      	uxtb	r5, r3
 8021f2e:	b978      	cbnz	r0, 8021f50 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8021f30:	f104 0014 	add.w	r0, r4, #20
 8021f34:	f7ff fd64 	bl	8021a00 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021f38:	9b01      	ldr	r3, [sp, #4]
 8021f3a:	6623      	str	r3, [r4, #96]	@ 0x60
 8021f3c:	9b00      	ldr	r3, [sp, #0]
 8021f3e:	6663      	str	r3, [r4, #100]	@ 0x64
 8021f40:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 8021f44:	b002      	add	sp, #8
 8021f46:	bd70      	pop	{r4, r5, r6, pc}
 8021f48:	2001      	movs	r0, #1
 8021f4a:	e7e5      	b.n	8021f18 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8021f4c:	2304      	movs	r3, #4
 8021f4e:	e7ea      	b.n	8021f26 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8021f50:	b113      	cbz	r3, 8021f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8021f52:	ea10 0305 	ands.w	r3, r0, r5
 8021f56:	d11c      	bne.n	8021f92 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8021f58:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8021f5c:	f104 0614 	add.w	r6, r4, #20
 8021f60:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8021f64:	b98b      	cbnz	r3, 8021f8a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8021f66:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021f6a:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8021f6e:	4298      	cmp	r0, r3
 8021f70:	d802      	bhi.n	8021f78 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8021f72:	4630      	mov	r0, r6
 8021f74:	f7ec fe14 	bl	800eba0 <_ZN8touchgfx7Outline6moveToEii>
 8021f78:	2301      	movs	r3, #1
 8021f7a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8021f7e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8021f82:	e9dd 2100 	ldrd	r2, r1, [sp]
 8021f86:	4630      	mov	r0, r6
 8021f88:	e7d4      	b.n	8021f34 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8021f8a:	4630      	mov	r0, r6
 8021f8c:	f7ff fd38 	bl	8021a00 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021f90:	e7f7      	b.n	8021f82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8021f92:	461d      	mov	r5, r3
 8021f94:	e7d0      	b.n	8021f38 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08021f98 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8021f98:	b538      	push	{r3, r4, r5, lr}
 8021f9a:	ed2d 8b10 	vpush	{d8-d15}
 8021f9e:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 8021fa2:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 802210c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8021fa6:	4605      	mov	r5, r0
 8021fa8:	eeb0 ca40 	vmov.f32	s24, s0
 8021fac:	eef0 ca60 	vmov.f32	s25, s1
 8021fb0:	eeb0 da41 	vmov.f32	s26, s2
 8021fb4:	eef0 da61 	vmov.f32	s27, s3
 8021fb8:	eeb0 ea42 	vmov.f32	s28, s4
 8021fbc:	eef0 ea62 	vmov.f32	s29, s5
 8021fc0:	460c      	mov	r4, r1
 8021fc2:	eef0 aa6b 	vmov.f32	s21, s23
 8021fc6:	2c08      	cmp	r4, #8
 8021fc8:	d86e      	bhi.n	80220a8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 8021fca:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 8021fce:	ee7d 7aee 	vsub.f32	s15, s27, s29
 8021fd2:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8021fd6:	ee3e 7aec 	vsub.f32	s14, s29, s25
 8021fda:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 8021fde:	ee3c fa0d 	vadd.f32	s30, s24, s26
 8021fe2:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021fe6:	ee7c faad 	vadd.f32	s31, s25, s27
 8021fea:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 8021fee:	ee3d aaae 	vadd.f32	s20, s27, s29
 8021ff2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8021ff6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021ffa:	ee2f fa2b 	vmul.f32	s30, s30, s23
 8021ffe:	ee6f faab 	vmul.f32	s31, s31, s23
 8022002:	ee69 9aab 	vmul.f32	s19, s19, s23
 8022006:	ee2a aa2b 	vmul.f32	s20, s20, s23
 802200a:	bf48      	it	mi
 802200c:	eef1 7a67 	vnegmi.f32	s15, s15
 8022010:	ee7f 8a29 	vadd.f32	s17, s30, s19
 8022014:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8022018:	eef4 7acb 	vcmpe.f32	s15, s22
 802201c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022020:	ee68 8aab 	vmul.f32	s17, s17, s23
 8022024:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8022028:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 802202c:	dd3f      	ble.n	80220ae <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 802202e:	ee27 7a07 	vmul.f32	s14, s14, s14
 8022032:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8022036:	eea6 7aa6 	vfma.f32	s14, s13, s13
 802203a:	ee27 7a06 	vmul.f32	s14, s14, s12
 802203e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8022042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022046:	d847      	bhi.n	80220d8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8022048:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 802204c:	ee3e 0aed 	vsub.f32	s0, s29, s27
 8022050:	f000 fa3b 	bl	80224ca <atan2f>
 8022054:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8022058:	eeb0 8a40 	vmov.f32	s16, s0
 802205c:	ee3d 0aec 	vsub.f32	s0, s27, s25
 8022060:	f000 fa33 	bl	80224ca <atan2f>
 8022064:	ee38 0a40 	vsub.f32	s0, s16, s0
 8022068:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8022110 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 802206c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022074:	bf48      	it	mi
 8022076:	eeb1 0a40 	vnegmi.f32	s0, s0
 802207a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802207e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022082:	bfa4      	itt	ge
 8022084:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 8022114 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8022088:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802208c:	eddf 7a22 	vldr	s15, [pc, #136]	@ 8022118 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 8022090:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8022094:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022098:	d51e      	bpl.n	80220d8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802209a:	eef0 0a49 	vmov.f32	s1, s18
 802209e:	eeb0 0a68 	vmov.f32	s0, s17
 80220a2:	4628      	mov	r0, r5
 80220a4:	f7ea ff8c 	bl	800cfc0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80220a8:	ecbd 8b10 	vpop	{d8-d15}
 80220ac:	bd38      	pop	{r3, r4, r5, pc}
 80220ae:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 80220b2:	eeb0 7a68 	vmov.f32	s14, s17
 80220b6:	eea7 7aea 	vfms.f32	s14, s15, s21
 80220ba:	ee7c 7aae 	vadd.f32	s15, s25, s29
 80220be:	eef0 6a49 	vmov.f32	s13, s18
 80220c2:	eee7 6aea 	vfms.f32	s13, s15, s21
 80220c6:	ee66 7aa6 	vmul.f32	s15, s13, s13
 80220ca:	eee7 7a07 	vfma.f32	s15, s14, s14
 80220ce:	eef4 7ac6 	vcmpe.f32	s15, s12
 80220d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80220d6:	d9e0      	bls.n	802209a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 80220d8:	3401      	adds	r4, #1
 80220da:	eef0 0a6c 	vmov.f32	s1, s25
 80220de:	eeb0 0a4c 	vmov.f32	s0, s24
 80220e2:	4621      	mov	r1, r4
 80220e4:	eef0 2a49 	vmov.f32	s5, s18
 80220e8:	eeb0 2a68 	vmov.f32	s4, s17
 80220ec:	eef0 1a6f 	vmov.f32	s3, s31
 80220f0:	eeb0 1a4f 	vmov.f32	s2, s30
 80220f4:	4628      	mov	r0, r5
 80220f6:	f7ff ff4f 	bl	8021f98 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 80220fa:	eef0 da4a 	vmov.f32	s27, s20
 80220fe:	eeb0 da69 	vmov.f32	s26, s19
 8022102:	eef0 ca49 	vmov.f32	s25, s18
 8022106:	eeb0 ca68 	vmov.f32	s24, s17
 802210a:	e75c      	b.n	8021fc6 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 802210c:	2edbe6ff 	.word	0x2edbe6ff
 8022110:	40490fdb 	.word	0x40490fdb
 8022114:	40c90fdb 	.word	0x40c90fdb
 8022118:	3dcccccd 	.word	0x3dcccccd

0802211c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 802211c:	b530      	push	{r4, r5, lr}
 802211e:	ed2d 8b10 	vpush	{d8-d15}
 8022122:	4604      	mov	r4, r0
 8022124:	b085      	sub	sp, #20
 8022126:	eef0 8a40 	vmov.f32	s17, s0
 802212a:	eef0 9a60 	vmov.f32	s19, s1
 802212e:	eef0 fa41 	vmov.f32	s31, s2
 8022132:	eeb0 fa61 	vmov.f32	s30, s3
 8022136:	eef0 ba42 	vmov.f32	s23, s4
 802213a:	eeb0 ca62 	vmov.f32	s24, s5
 802213e:	eef0 aa43 	vmov.f32	s21, s6
 8022142:	eeb0 ba63 	vmov.f32	s22, s7
 8022146:	460d      	mov	r5, r1
 8022148:	2d08      	cmp	r5, #8
 802214a:	f200 8115 	bhi.w	8022378 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 802214e:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 8022152:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022156:	ee7f 6aab 	vadd.f32	s13, s31, s23
 802215a:	ee26 6a27 	vmul.f32	s12, s12, s15
 802215e:	ee38 daaf 	vadd.f32	s26, s17, s31
 8022162:	ed8d 6a01 	vstr	s12, [sp, #4]
 8022166:	eea6 6aa7 	vfma.f32	s12, s13, s15
 802216a:	ee2d da27 	vmul.f32	s26, s26, s15
 802216e:	ee7c ca0b 	vadd.f32	s25, s24, s22
 8022172:	eeb0 ea4d 	vmov.f32	s28, s26
 8022176:	eea6 eaa7 	vfma.f32	s28, s13, s15
 802217a:	ee6c caa7 	vmul.f32	s25, s25, s15
 802217e:	ee66 6a27 	vmul.f32	s13, s12, s15
 8022182:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8022186:	edcd 6a03 	vstr	s13, [sp, #12]
 802218a:	ee79 da8f 	vadd.f32	s27, s19, s30
 802218e:	eef0 6a6c 	vmov.f32	s13, s25
 8022192:	eee7 6a27 	vfma.f32	s13, s14, s15
 8022196:	ee6d daa7 	vmul.f32	s27, s27, s15
 802219a:	ee2e ea27 	vmul.f32	s28, s28, s15
 802219e:	eef0 ea6d 	vmov.f32	s29, s27
 80221a2:	eee7 ea27 	vfma.f32	s29, s14, s15
 80221a6:	ee26 7aa7 	vmul.f32	s14, s13, s15
 80221aa:	ee6e eaa7 	vmul.f32	s29, s29, s15
 80221ae:	ed8d 7a02 	vstr	s14, [sp, #8]
 80221b2:	ed9d 7a03 	vldr	s14, [sp, #12]
 80221b6:	ee3e 9a07 	vadd.f32	s18, s28, s14
 80221ba:	ed9d 7a02 	vldr	s14, [sp, #8]
 80221be:	ee3e aa87 	vadd.f32	s20, s29, s14
 80221c2:	ee29 9a27 	vmul.f32	s18, s18, s15
 80221c6:	ee2a aa27 	vmul.f32	s20, s20, s15
 80221ca:	eef0 6a67 	vmov.f32	s13, s15
 80221ce:	2d00      	cmp	r5, #0
 80221d0:	f000 810d 	beq.w	80223ee <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80221d4:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 80221d8:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 80221dc:	ee7b 7a69 	vsub.f32	s15, s22, s19
 80221e0:	ee3f 6aea 	vsub.f32	s12, s31, s21
 80221e4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80221e8:	ee3b 5aea 	vsub.f32	s10, s23, s21
 80221ec:	eea6 7a27 	vfma.f32	s14, s12, s15
 80221f0:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 80221f4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80221f8:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 80221fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022200:	eea5 6a27 	vfma.f32	s12, s10, s15
 8022204:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8022434 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8022208:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 802220c:	bf48      	it	mi
 802220e:	eeb1 7a47 	vnegmi.f32	s14, s14
 8022212:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022216:	eeb4 7ae4 	vcmpe.f32	s14, s9
 802221a:	bf48      	it	mi
 802221c:	eeb1 6a46 	vnegmi.f32	s12, s12
 8022220:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022224:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8022228:	f340 80aa 	ble.w	8022380 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 802222c:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8022230:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022234:	dd5c      	ble.n	80222f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 8022236:	ee65 5aa5 	vmul.f32	s11, s11, s11
 802223a:	ee37 7a06 	vadd.f32	s14, s14, s12
 802223e:	eee7 5aa7 	vfma.f32	s11, s15, s15
 8022242:	ee27 7a07 	vmul.f32	s14, s14, s14
 8022246:	ee65 7a85 	vmul.f32	s15, s11, s10
 802224a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802224e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022252:	f200 80cc 	bhi.w	80223ee <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8022256:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802225a:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802225e:	f000 f934 	bl	80224ca <atan2f>
 8022262:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8022266:	eeb0 8a40 	vmov.f32	s16, s0
 802226a:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802226e:	f000 f92c 	bl	80224ca <atan2f>
 8022272:	ee38 fa40 	vsub.f32	s30, s16, s0
 8022276:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 802227a:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 802227e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022282:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8022286:	bf48      	it	mi
 8022288:	eeb1 fa4f 	vnegmi.f32	s30, s30
 802228c:	f000 f91d 	bl	80224ca <atan2f>
 8022290:	ee30 0a48 	vsub.f32	s0, s0, s16
 8022294:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8022438 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8022298:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802229c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80222a0:	eeb4 fae7 	vcmpe.f32	s30, s15
 80222a4:	bf48      	it	mi
 80222a6:	eeb1 0a40 	vnegmi.f32	s0, s0
 80222aa:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8022438 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 80222ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80222b2:	bfa8      	it	ge
 80222b4:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 802243c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80222b8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80222bc:	bfa8      	it	ge
 80222be:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 80222c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80222c6:	bfa8      	it	ge
 80222c8:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 802243c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80222cc:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022440 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 80222d0:	bfa8      	it	ge
 80222d2:	ee37 0a40 	vsubge.f32	s0, s14, s0
 80222d6:	ee3f 0a00 	vadd.f32	s0, s30, s0
 80222da:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80222de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80222e2:	f140 8084 	bpl.w	80223ee <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80222e6:	eef0 0a4a 	vmov.f32	s1, s20
 80222ea:	eeb0 0a49 	vmov.f32	s0, s18
 80222ee:	e040      	b.n	8022372 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 80222f0:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80222f4:	ee27 7a07 	vmul.f32	s14, s14, s14
 80222f8:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80222fc:	ee67 7a85 	vmul.f32	s15, s15, s10
 8022300:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8022304:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022308:	d871      	bhi.n	80223ee <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802230a:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802230e:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8022312:	f000 f8da 	bl	80224ca <atan2f>
 8022316:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802231a:	eeb0 8a40 	vmov.f32	s16, s0
 802231e:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8022322:	f000 f8d2 	bl	80224ca <atan2f>
 8022326:	ee38 0a40 	vsub.f32	s0, s16, s0
 802232a:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8022438 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802232e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022336:	bf48      	it	mi
 8022338:	eeb1 0a40 	vnegmi.f32	s0, s0
 802233c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8022340:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022344:	bfa4      	itt	ge
 8022346:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 802243c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802234a:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802234e:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8022440 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8022352:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8022356:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802235a:	d548      	bpl.n	80223ee <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802235c:	eef0 0a4f 	vmov.f32	s1, s30
 8022360:	eeb0 0a6f 	vmov.f32	s0, s31
 8022364:	4620      	mov	r0, r4
 8022366:	f7ea fe2b 	bl	800cfc0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 802236a:	eef0 0a4c 	vmov.f32	s1, s24
 802236e:	eeb0 0a6b 	vmov.f32	s0, s23
 8022372:	4620      	mov	r0, r4
 8022374:	f7ea fe24 	bl	800cfc0 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8022378:	b005      	add	sp, #20
 802237a:	ecbd 8b10 	vpop	{d8-d15}
 802237e:	bd30      	pop	{r4, r5, pc}
 8022380:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8022434 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8022384:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8022388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802238c:	dd19      	ble.n	80223c2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 802238e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8022392:	ee26 7a06 	vmul.f32	s14, s12, s12
 8022396:	eee5 7aa5 	vfma.f32	s15, s11, s11
 802239a:	ee67 7a85 	vmul.f32	s15, s15, s10
 802239e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80223a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80223a6:	d822      	bhi.n	80223ee <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80223a8:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 80223ac:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 80223b0:	f000 f88b 	bl	80224ca <atan2f>
 80223b4:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80223b8:	eeb0 8a40 	vmov.f32	s16, s0
 80223bc:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80223c0:	e7af      	b.n	8022322 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 80223c2:	ee78 7aaa 	vadd.f32	s15, s17, s21
 80223c6:	eeb0 7a49 	vmov.f32	s14, s18
 80223ca:	eea7 7ae6 	vfms.f32	s14, s15, s13
 80223ce:	ee79 7a8b 	vadd.f32	s15, s19, s22
 80223d2:	eeb0 6a4a 	vmov.f32	s12, s20
 80223d6:	eea7 6ae6 	vfms.f32	s12, s15, s13
 80223da:	ee66 7a06 	vmul.f32	s15, s12, s12
 80223de:	eee7 7a07 	vfma.f32	s15, s14, s14
 80223e2:	eef4 7ac5 	vcmpe.f32	s15, s10
 80223e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80223ea:	f67f af7c 	bls.w	80222e6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 80223ee:	3501      	adds	r5, #1
 80223f0:	eef0 0a69 	vmov.f32	s1, s19
 80223f4:	eeb0 0a68 	vmov.f32	s0, s17
 80223f8:	4629      	mov	r1, r5
 80223fa:	eef0 3a4a 	vmov.f32	s7, s20
 80223fe:	eeb0 3a49 	vmov.f32	s6, s18
 8022402:	eef0 2a6e 	vmov.f32	s5, s29
 8022406:	eeb0 2a4e 	vmov.f32	s4, s28
 802240a:	eef0 1a6d 	vmov.f32	s3, s27
 802240e:	eeb0 1a4d 	vmov.f32	s2, s26
 8022412:	4620      	mov	r0, r4
 8022414:	f7ff fe82 	bl	802211c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8022418:	eeb0 ca6c 	vmov.f32	s24, s25
 802241c:	eddd ba01 	vldr	s23, [sp, #4]
 8022420:	ed9d fa02 	vldr	s30, [sp, #8]
 8022424:	eddd fa03 	vldr	s31, [sp, #12]
 8022428:	eef0 9a4a 	vmov.f32	s19, s20
 802242c:	eef0 8a49 	vmov.f32	s17, s18
 8022430:	e68a      	b.n	8022148 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8022432:	bf00      	nop
 8022434:	2edbe6ff 	.word	0x2edbe6ff
 8022438:	40490fdb 	.word	0x40490fdb
 802243c:	40c90fdb 	.word	0x40c90fdb
 8022440:	3dcccccd 	.word	0x3dcccccd

08022444 <_ZN8touchgfx6CanvasD1Ev>:
 8022444:	b510      	push	{r4, lr}
 8022446:	4b04      	ldr	r3, [pc, #16]	@ (8022458 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8022448:	4604      	mov	r4, r0
 802244a:	f840 3b14 	str.w	r3, [r0], #20
 802244e:	f7eb fea1 	bl	800e194 <_ZN8touchgfx7OutlineD1Ev>
 8022452:	4620      	mov	r0, r4
 8022454:	bd10      	pop	{r4, pc}
 8022456:	bf00      	nop
 8022458:	08026148 	.word	0x08026148

0802245c <_ZN8touchgfx6CanvasD0Ev>:
 802245c:	b510      	push	{r4, lr}
 802245e:	4604      	mov	r4, r0
 8022460:	f7ff fff0 	bl	8022444 <_ZN8touchgfx6CanvasD1Ev>
 8022464:	4620      	mov	r0, r4
 8022466:	2174      	movs	r1, #116	@ 0x74
 8022468:	f000 f807 	bl	802247a <_ZdlPvj>
 802246c:	4620      	mov	r0, r4
 802246e:	bd10      	pop	{r4, pc}

08022470 <__aeabi_atexit>:
 8022470:	460b      	mov	r3, r1
 8022472:	4601      	mov	r1, r0
 8022474:	4618      	mov	r0, r3
 8022476:	f001 b865 	b.w	8023544 <__cxa_atexit>

0802247a <_ZdlPvj>:
 802247a:	f000 b812 	b.w	80224a2 <_ZdlPv>

0802247e <__cxa_guard_acquire>:
 802247e:	6802      	ldr	r2, [r0, #0]
 8022480:	07d2      	lsls	r2, r2, #31
 8022482:	4603      	mov	r3, r0
 8022484:	d405      	bmi.n	8022492 <__cxa_guard_acquire+0x14>
 8022486:	7842      	ldrb	r2, [r0, #1]
 8022488:	b102      	cbz	r2, 802248c <__cxa_guard_acquire+0xe>
 802248a:	deff      	udf	#255	@ 0xff
 802248c:	2001      	movs	r0, #1
 802248e:	7058      	strb	r0, [r3, #1]
 8022490:	4770      	bx	lr
 8022492:	2000      	movs	r0, #0
 8022494:	4770      	bx	lr

08022496 <__cxa_guard_release>:
 8022496:	2301      	movs	r3, #1
 8022498:	6003      	str	r3, [r0, #0]
 802249a:	4770      	bx	lr

0802249c <__cxa_pure_virtual>:
 802249c:	b508      	push	{r3, lr}
 802249e:	f000 f80f 	bl	80224c0 <_ZSt9terminatev>

080224a2 <_ZdlPv>:
 80224a2:	f000 bf99 	b.w	80233d8 <free>

080224a6 <_ZN10__cxxabiv111__terminateEPFvvE>:
 80224a6:	b508      	push	{r3, lr}
 80224a8:	4780      	blx	r0
 80224aa:	f000 ff61 	bl	8023370 <abort>
	...

080224b0 <_ZSt13get_terminatev>:
 80224b0:	4b02      	ldr	r3, [pc, #8]	@ (80224bc <_ZSt13get_terminatev+0xc>)
 80224b2:	6818      	ldr	r0, [r3, #0]
 80224b4:	f3bf 8f5b 	dmb	ish
 80224b8:	4770      	bx	lr
 80224ba:	bf00      	nop
 80224bc:	20000210 	.word	0x20000210

080224c0 <_ZSt9terminatev>:
 80224c0:	b508      	push	{r3, lr}
 80224c2:	f7ff fff5 	bl	80224b0 <_ZSt13get_terminatev>
 80224c6:	f7ff ffee 	bl	80224a6 <_ZN10__cxxabiv111__terminateEPFvvE>

080224ca <atan2f>:
 80224ca:	f000 b993 	b.w	80227f4 <__ieee754_atan2f>
	...

080224d0 <sqrtf>:
 80224d0:	b508      	push	{r3, lr}
 80224d2:	ed2d 8b02 	vpush	{d8}
 80224d6:	eeb0 8a40 	vmov.f32	s16, s0
 80224da:	f000 f8a1 	bl	8022620 <__ieee754_sqrtf>
 80224de:	eeb4 8a48 	vcmp.f32	s16, s16
 80224e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80224e6:	d60c      	bvs.n	8022502 <sqrtf+0x32>
 80224e8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8022508 <sqrtf+0x38>
 80224ec:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80224f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80224f4:	d505      	bpl.n	8022502 <sqrtf+0x32>
 80224f6:	f001 fa81 	bl	80239fc <__errno>
 80224fa:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80224fe:	2321      	movs	r3, #33	@ 0x21
 8022500:	6003      	str	r3, [r0, #0]
 8022502:	ecbd 8b02 	vpop	{d8}
 8022506:	bd08      	pop	{r3, pc}
 8022508:	00000000 	.word	0x00000000

0802250c <cosf>:
 802250c:	ee10 3a10 	vmov	r3, s0
 8022510:	b507      	push	{r0, r1, r2, lr}
 8022512:	4a1e      	ldr	r2, [pc, #120]	@ (802258c <cosf+0x80>)
 8022514:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8022518:	4293      	cmp	r3, r2
 802251a:	d806      	bhi.n	802252a <cosf+0x1e>
 802251c:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8022590 <cosf+0x84>
 8022520:	b003      	add	sp, #12
 8022522:	f85d eb04 	ldr.w	lr, [sp], #4
 8022526:	f000 b8c5 	b.w	80226b4 <__kernel_cosf>
 802252a:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802252e:	d304      	bcc.n	802253a <cosf+0x2e>
 8022530:	ee30 0a40 	vsub.f32	s0, s0, s0
 8022534:	b003      	add	sp, #12
 8022536:	f85d fb04 	ldr.w	pc, [sp], #4
 802253a:	4668      	mov	r0, sp
 802253c:	f000 f9fa 	bl	8022934 <__ieee754_rem_pio2f>
 8022540:	f000 0003 	and.w	r0, r0, #3
 8022544:	2801      	cmp	r0, #1
 8022546:	d009      	beq.n	802255c <cosf+0x50>
 8022548:	2802      	cmp	r0, #2
 802254a:	d010      	beq.n	802256e <cosf+0x62>
 802254c:	b9b0      	cbnz	r0, 802257c <cosf+0x70>
 802254e:	eddd 0a01 	vldr	s1, [sp, #4]
 8022552:	ed9d 0a00 	vldr	s0, [sp]
 8022556:	f000 f8ad 	bl	80226b4 <__kernel_cosf>
 802255a:	e7eb      	b.n	8022534 <cosf+0x28>
 802255c:	eddd 0a01 	vldr	s1, [sp, #4]
 8022560:	ed9d 0a00 	vldr	s0, [sp]
 8022564:	f000 f8fe 	bl	8022764 <__kernel_sinf>
 8022568:	eeb1 0a40 	vneg.f32	s0, s0
 802256c:	e7e2      	b.n	8022534 <cosf+0x28>
 802256e:	eddd 0a01 	vldr	s1, [sp, #4]
 8022572:	ed9d 0a00 	vldr	s0, [sp]
 8022576:	f000 f89d 	bl	80226b4 <__kernel_cosf>
 802257a:	e7f5      	b.n	8022568 <cosf+0x5c>
 802257c:	eddd 0a01 	vldr	s1, [sp, #4]
 8022580:	ed9d 0a00 	vldr	s0, [sp]
 8022584:	2001      	movs	r0, #1
 8022586:	f000 f8ed 	bl	8022764 <__kernel_sinf>
 802258a:	e7d3      	b.n	8022534 <cosf+0x28>
 802258c:	3f490fd8 	.word	0x3f490fd8
 8022590:	00000000 	.word	0x00000000

08022594 <sinf>:
 8022594:	ee10 3a10 	vmov	r3, s0
 8022598:	b507      	push	{r0, r1, r2, lr}
 802259a:	4a1f      	ldr	r2, [pc, #124]	@ (8022618 <sinf+0x84>)
 802259c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80225a0:	4293      	cmp	r3, r2
 80225a2:	d807      	bhi.n	80225b4 <sinf+0x20>
 80225a4:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 802261c <sinf+0x88>
 80225a8:	2000      	movs	r0, #0
 80225aa:	b003      	add	sp, #12
 80225ac:	f85d eb04 	ldr.w	lr, [sp], #4
 80225b0:	f000 b8d8 	b.w	8022764 <__kernel_sinf>
 80225b4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80225b8:	d304      	bcc.n	80225c4 <sinf+0x30>
 80225ba:	ee30 0a40 	vsub.f32	s0, s0, s0
 80225be:	b003      	add	sp, #12
 80225c0:	f85d fb04 	ldr.w	pc, [sp], #4
 80225c4:	4668      	mov	r0, sp
 80225c6:	f000 f9b5 	bl	8022934 <__ieee754_rem_pio2f>
 80225ca:	f000 0003 	and.w	r0, r0, #3
 80225ce:	2801      	cmp	r0, #1
 80225d0:	d00a      	beq.n	80225e8 <sinf+0x54>
 80225d2:	2802      	cmp	r0, #2
 80225d4:	d00f      	beq.n	80225f6 <sinf+0x62>
 80225d6:	b9c0      	cbnz	r0, 802260a <sinf+0x76>
 80225d8:	eddd 0a01 	vldr	s1, [sp, #4]
 80225dc:	ed9d 0a00 	vldr	s0, [sp]
 80225e0:	2001      	movs	r0, #1
 80225e2:	f000 f8bf 	bl	8022764 <__kernel_sinf>
 80225e6:	e7ea      	b.n	80225be <sinf+0x2a>
 80225e8:	eddd 0a01 	vldr	s1, [sp, #4]
 80225ec:	ed9d 0a00 	vldr	s0, [sp]
 80225f0:	f000 f860 	bl	80226b4 <__kernel_cosf>
 80225f4:	e7e3      	b.n	80225be <sinf+0x2a>
 80225f6:	eddd 0a01 	vldr	s1, [sp, #4]
 80225fa:	ed9d 0a00 	vldr	s0, [sp]
 80225fe:	2001      	movs	r0, #1
 8022600:	f000 f8b0 	bl	8022764 <__kernel_sinf>
 8022604:	eeb1 0a40 	vneg.f32	s0, s0
 8022608:	e7d9      	b.n	80225be <sinf+0x2a>
 802260a:	eddd 0a01 	vldr	s1, [sp, #4]
 802260e:	ed9d 0a00 	vldr	s0, [sp]
 8022612:	f000 f84f 	bl	80226b4 <__kernel_cosf>
 8022616:	e7f5      	b.n	8022604 <sinf+0x70>
 8022618:	3f490fd8 	.word	0x3f490fd8
 802261c:	00000000 	.word	0x00000000

08022620 <__ieee754_sqrtf>:
 8022620:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8022624:	4770      	bx	lr
	...

08022628 <round>:
 8022628:	ec51 0b10 	vmov	r0, r1, d0
 802262c:	b570      	push	{r4, r5, r6, lr}
 802262e:	f3c1 540a 	ubfx	r4, r1, #20, #11
 8022632:	f2a4 32ff 	subw	r2, r4, #1023	@ 0x3ff
 8022636:	2a13      	cmp	r2, #19
 8022638:	460b      	mov	r3, r1
 802263a:	4605      	mov	r5, r0
 802263c:	dc1b      	bgt.n	8022676 <round+0x4e>
 802263e:	2a00      	cmp	r2, #0
 8022640:	da0b      	bge.n	802265a <round+0x32>
 8022642:	f001 4300 	and.w	r3, r1, #2147483648	@ 0x80000000
 8022646:	3201      	adds	r2, #1
 8022648:	bf04      	itt	eq
 802264a:	f043 537f 	orreq.w	r3, r3, #1069547520	@ 0x3fc00000
 802264e:	f443 1340 	orreq.w	r3, r3, #3145728	@ 0x300000
 8022652:	2200      	movs	r2, #0
 8022654:	4619      	mov	r1, r3
 8022656:	4610      	mov	r0, r2
 8022658:	e015      	b.n	8022686 <round+0x5e>
 802265a:	4c15      	ldr	r4, [pc, #84]	@ (80226b0 <round+0x88>)
 802265c:	4114      	asrs	r4, r2
 802265e:	ea04 0601 	and.w	r6, r4, r1
 8022662:	4306      	orrs	r6, r0
 8022664:	d00f      	beq.n	8022686 <round+0x5e>
 8022666:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
 802266a:	fa41 f202 	asr.w	r2, r1, r2
 802266e:	4413      	add	r3, r2
 8022670:	ea23 0304 	bic.w	r3, r3, r4
 8022674:	e7ed      	b.n	8022652 <round+0x2a>
 8022676:	2a33      	cmp	r2, #51	@ 0x33
 8022678:	dd08      	ble.n	802268c <round+0x64>
 802267a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 802267e:	d102      	bne.n	8022686 <round+0x5e>
 8022680:	4602      	mov	r2, r0
 8022682:	f7dd fe13 	bl	80002ac <__adddf3>
 8022686:	ec41 0b10 	vmov	d0, r0, r1
 802268a:	bd70      	pop	{r4, r5, r6, pc}
 802268c:	f2a4 4613 	subw	r6, r4, #1043	@ 0x413
 8022690:	f04f 34ff 	mov.w	r4, #4294967295
 8022694:	40f4      	lsrs	r4, r6
 8022696:	4204      	tst	r4, r0
 8022698:	d0f5      	beq.n	8022686 <round+0x5e>
 802269a:	f1c2 0133 	rsb	r1, r2, #51	@ 0x33
 802269e:	2201      	movs	r2, #1
 80226a0:	408a      	lsls	r2, r1
 80226a2:	1952      	adds	r2, r2, r5
 80226a4:	bf28      	it	cs
 80226a6:	3301      	addcs	r3, #1
 80226a8:	ea22 0204 	bic.w	r2, r2, r4
 80226ac:	e7d2      	b.n	8022654 <round+0x2c>
 80226ae:	bf00      	nop
 80226b0:	000fffff 	.word	0x000fffff

080226b4 <__kernel_cosf>:
 80226b4:	ee10 3a10 	vmov	r3, s0
 80226b8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80226bc:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80226c0:	eef0 6a40 	vmov.f32	s13, s0
 80226c4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80226c8:	d204      	bcs.n	80226d4 <__kernel_cosf+0x20>
 80226ca:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 80226ce:	ee17 2a90 	vmov	r2, s15
 80226d2:	b342      	cbz	r2, 8022726 <__kernel_cosf+0x72>
 80226d4:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80226d8:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8022744 <__kernel_cosf+0x90>
 80226dc:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8022748 <__kernel_cosf+0x94>
 80226e0:	4a1a      	ldr	r2, [pc, #104]	@ (802274c <__kernel_cosf+0x98>)
 80226e2:	eea7 6a27 	vfma.f32	s12, s14, s15
 80226e6:	4293      	cmp	r3, r2
 80226e8:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022750 <__kernel_cosf+0x9c>
 80226ec:	eee6 7a07 	vfma.f32	s15, s12, s14
 80226f0:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8022754 <__kernel_cosf+0xa0>
 80226f4:	eea7 6a87 	vfma.f32	s12, s15, s14
 80226f8:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8022758 <__kernel_cosf+0xa4>
 80226fc:	eee6 7a07 	vfma.f32	s15, s12, s14
 8022700:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 802275c <__kernel_cosf+0xa8>
 8022704:	eea7 6a87 	vfma.f32	s12, s15, s14
 8022708:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 802270c:	ee26 6a07 	vmul.f32	s12, s12, s14
 8022710:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022714:	eee7 0a06 	vfma.f32	s1, s14, s12
 8022718:	ee67 7a27 	vmul.f32	s15, s14, s15
 802271c:	d804      	bhi.n	8022728 <__kernel_cosf+0x74>
 802271e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8022722:	ee30 0a67 	vsub.f32	s0, s0, s15
 8022726:	4770      	bx	lr
 8022728:	4a0d      	ldr	r2, [pc, #52]	@ (8022760 <__kernel_cosf+0xac>)
 802272a:	4293      	cmp	r3, r2
 802272c:	bf9a      	itte	ls
 802272e:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8022732:	ee07 3a10 	vmovls	s14, r3
 8022736:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802273a:	ee30 0a47 	vsub.f32	s0, s0, s14
 802273e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022742:	e7ec      	b.n	802271e <__kernel_cosf+0x6a>
 8022744:	ad47d74e 	.word	0xad47d74e
 8022748:	310f74f6 	.word	0x310f74f6
 802274c:	3e999999 	.word	0x3e999999
 8022750:	b493f27c 	.word	0xb493f27c
 8022754:	37d00d01 	.word	0x37d00d01
 8022758:	bab60b61 	.word	0xbab60b61
 802275c:	3d2aaaab 	.word	0x3d2aaaab
 8022760:	3f480000 	.word	0x3f480000

08022764 <__kernel_sinf>:
 8022764:	ee10 3a10 	vmov	r3, s0
 8022768:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802276c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8022770:	d204      	bcs.n	802277c <__kernel_sinf+0x18>
 8022772:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8022776:	ee17 3a90 	vmov	r3, s15
 802277a:	b35b      	cbz	r3, 80227d4 <__kernel_sinf+0x70>
 802277c:	ee20 7a00 	vmul.f32	s14, s0, s0
 8022780:	eddf 7a15 	vldr	s15, [pc, #84]	@ 80227d8 <__kernel_sinf+0x74>
 8022784:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 80227dc <__kernel_sinf+0x78>
 8022788:	eea7 6a27 	vfma.f32	s12, s14, s15
 802278c:	eddf 7a14 	vldr	s15, [pc, #80]	@ 80227e0 <__kernel_sinf+0x7c>
 8022790:	eee6 7a07 	vfma.f32	s15, s12, s14
 8022794:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 80227e4 <__kernel_sinf+0x80>
 8022798:	eea7 6a87 	vfma.f32	s12, s15, s14
 802279c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 80227e8 <__kernel_sinf+0x84>
 80227a0:	ee60 6a07 	vmul.f32	s13, s0, s14
 80227a4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80227a8:	b930      	cbnz	r0, 80227b8 <__kernel_sinf+0x54>
 80227aa:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 80227ec <__kernel_sinf+0x88>
 80227ae:	eea7 6a27 	vfma.f32	s12, s14, s15
 80227b2:	eea6 0a26 	vfma.f32	s0, s12, s13
 80227b6:	4770      	bx	lr
 80227b8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80227bc:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80227c0:	eee0 7a86 	vfma.f32	s15, s1, s12
 80227c4:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80227c8:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80227f0 <__kernel_sinf+0x8c>
 80227cc:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80227d0:	ee30 0a60 	vsub.f32	s0, s0, s1
 80227d4:	4770      	bx	lr
 80227d6:	bf00      	nop
 80227d8:	2f2ec9d3 	.word	0x2f2ec9d3
 80227dc:	b2d72f34 	.word	0xb2d72f34
 80227e0:	3638ef1b 	.word	0x3638ef1b
 80227e4:	b9500d01 	.word	0xb9500d01
 80227e8:	3c088889 	.word	0x3c088889
 80227ec:	be2aaaab 	.word	0xbe2aaaab
 80227f0:	3e2aaaab 	.word	0x3e2aaaab

080227f4 <__ieee754_atan2f>:
 80227f4:	ee10 2a90 	vmov	r2, s1
 80227f8:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 80227fc:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022800:	b510      	push	{r4, lr}
 8022802:	eef0 7a40 	vmov.f32	s15, s0
 8022806:	d806      	bhi.n	8022816 <__ieee754_atan2f+0x22>
 8022808:	ee10 0a10 	vmov	r0, s0
 802280c:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8022810:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8022814:	d904      	bls.n	8022820 <__ieee754_atan2f+0x2c>
 8022816:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802281a:	eeb0 0a67 	vmov.f32	s0, s15
 802281e:	bd10      	pop	{r4, pc}
 8022820:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8022824:	d103      	bne.n	802282e <__ieee754_atan2f+0x3a>
 8022826:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802282a:	f000 b9b3 	b.w	8022b94 <atanf>
 802282e:	1794      	asrs	r4, r2, #30
 8022830:	f004 0402 	and.w	r4, r4, #2
 8022834:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8022838:	b943      	cbnz	r3, 802284c <__ieee754_atan2f+0x58>
 802283a:	2c02      	cmp	r4, #2
 802283c:	d05e      	beq.n	80228fc <__ieee754_atan2f+0x108>
 802283e:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8022910 <__ieee754_atan2f+0x11c>
 8022842:	2c03      	cmp	r4, #3
 8022844:	bf08      	it	eq
 8022846:	eef0 7a47 	vmoveq.f32	s15, s14
 802284a:	e7e6      	b.n	802281a <__ieee754_atan2f+0x26>
 802284c:	b941      	cbnz	r1, 8022860 <__ieee754_atan2f+0x6c>
 802284e:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8022914 <__ieee754_atan2f+0x120>
 8022852:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8022918 <__ieee754_atan2f+0x124>
 8022856:	2800      	cmp	r0, #0
 8022858:	bfa8      	it	ge
 802285a:	eef0 7a47 	vmovge.f32	s15, s14
 802285e:	e7dc      	b.n	802281a <__ieee754_atan2f+0x26>
 8022860:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022864:	d110      	bne.n	8022888 <__ieee754_atan2f+0x94>
 8022866:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802286a:	f104 34ff 	add.w	r4, r4, #4294967295
 802286e:	d107      	bne.n	8022880 <__ieee754_atan2f+0x8c>
 8022870:	2c02      	cmp	r4, #2
 8022872:	d846      	bhi.n	8022902 <__ieee754_atan2f+0x10e>
 8022874:	4b29      	ldr	r3, [pc, #164]	@ (802291c <__ieee754_atan2f+0x128>)
 8022876:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 802287a:	edd3 7a00 	vldr	s15, [r3]
 802287e:	e7cc      	b.n	802281a <__ieee754_atan2f+0x26>
 8022880:	2c02      	cmp	r4, #2
 8022882:	d841      	bhi.n	8022908 <__ieee754_atan2f+0x114>
 8022884:	4b26      	ldr	r3, [pc, #152]	@ (8022920 <__ieee754_atan2f+0x12c>)
 8022886:	e7f6      	b.n	8022876 <__ieee754_atan2f+0x82>
 8022888:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802288c:	d0df      	beq.n	802284e <__ieee754_atan2f+0x5a>
 802288e:	1a5b      	subs	r3, r3, r1
 8022890:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8022894:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8022898:	da1a      	bge.n	80228d0 <__ieee754_atan2f+0xdc>
 802289a:	2a00      	cmp	r2, #0
 802289c:	da01      	bge.n	80228a2 <__ieee754_atan2f+0xae>
 802289e:	313c      	adds	r1, #60	@ 0x3c
 80228a0:	db19      	blt.n	80228d6 <__ieee754_atan2f+0xe2>
 80228a2:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 80228a6:	f000 fa49 	bl	8022d3c <fabsf>
 80228aa:	f000 f973 	bl	8022b94 <atanf>
 80228ae:	eef0 7a40 	vmov.f32	s15, s0
 80228b2:	2c01      	cmp	r4, #1
 80228b4:	d012      	beq.n	80228dc <__ieee754_atan2f+0xe8>
 80228b6:	2c02      	cmp	r4, #2
 80228b8:	d017      	beq.n	80228ea <__ieee754_atan2f+0xf6>
 80228ba:	2c00      	cmp	r4, #0
 80228bc:	d0ad      	beq.n	802281a <__ieee754_atan2f+0x26>
 80228be:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8022924 <__ieee754_atan2f+0x130>
 80228c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80228c6:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8022928 <__ieee754_atan2f+0x134>
 80228ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80228ce:	e7a4      	b.n	802281a <__ieee754_atan2f+0x26>
 80228d0:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8022918 <__ieee754_atan2f+0x124>
 80228d4:	e7ed      	b.n	80228b2 <__ieee754_atan2f+0xbe>
 80228d6:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802292c <__ieee754_atan2f+0x138>
 80228da:	e7ea      	b.n	80228b2 <__ieee754_atan2f+0xbe>
 80228dc:	ee17 3a90 	vmov	r3, s15
 80228e0:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 80228e4:	ee07 3a90 	vmov	s15, r3
 80228e8:	e797      	b.n	802281a <__ieee754_atan2f+0x26>
 80228ea:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8022924 <__ieee754_atan2f+0x130>
 80228ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 80228f2:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8022928 <__ieee754_atan2f+0x134>
 80228f6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80228fa:	e78e      	b.n	802281a <__ieee754_atan2f+0x26>
 80228fc:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8022928 <__ieee754_atan2f+0x134>
 8022900:	e78b      	b.n	802281a <__ieee754_atan2f+0x26>
 8022902:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8022930 <__ieee754_atan2f+0x13c>
 8022906:	e788      	b.n	802281a <__ieee754_atan2f+0x26>
 8022908:	eddf 7a08 	vldr	s15, [pc, #32]	@ 802292c <__ieee754_atan2f+0x138>
 802290c:	e785      	b.n	802281a <__ieee754_atan2f+0x26>
 802290e:	bf00      	nop
 8022910:	c0490fdb 	.word	0xc0490fdb
 8022914:	bfc90fdb 	.word	0xbfc90fdb
 8022918:	3fc90fdb 	.word	0x3fc90fdb
 802291c:	08026160 	.word	0x08026160
 8022920:	08026154 	.word	0x08026154
 8022924:	33bbbd2e 	.word	0x33bbbd2e
 8022928:	40490fdb 	.word	0x40490fdb
 802292c:	00000000 	.word	0x00000000
 8022930:	3f490fdb 	.word	0x3f490fdb

08022934 <__ieee754_rem_pio2f>:
 8022934:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022936:	ee10 6a10 	vmov	r6, s0
 802293a:	4b88      	ldr	r3, [pc, #544]	@ (8022b5c <__ieee754_rem_pio2f+0x228>)
 802293c:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8022940:	429d      	cmp	r5, r3
 8022942:	b087      	sub	sp, #28
 8022944:	4604      	mov	r4, r0
 8022946:	d805      	bhi.n	8022954 <__ieee754_rem_pio2f+0x20>
 8022948:	2300      	movs	r3, #0
 802294a:	ed80 0a00 	vstr	s0, [r0]
 802294e:	6043      	str	r3, [r0, #4]
 8022950:	2000      	movs	r0, #0
 8022952:	e022      	b.n	802299a <__ieee754_rem_pio2f+0x66>
 8022954:	4b82      	ldr	r3, [pc, #520]	@ (8022b60 <__ieee754_rem_pio2f+0x22c>)
 8022956:	429d      	cmp	r5, r3
 8022958:	d83a      	bhi.n	80229d0 <__ieee754_rem_pio2f+0x9c>
 802295a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802295e:	2e00      	cmp	r6, #0
 8022960:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8022b64 <__ieee754_rem_pio2f+0x230>
 8022964:	4a80      	ldr	r2, [pc, #512]	@ (8022b68 <__ieee754_rem_pio2f+0x234>)
 8022966:	f023 030f 	bic.w	r3, r3, #15
 802296a:	dd18      	ble.n	802299e <__ieee754_rem_pio2f+0x6a>
 802296c:	4293      	cmp	r3, r2
 802296e:	ee70 7a47 	vsub.f32	s15, s0, s14
 8022972:	bf09      	itett	eq
 8022974:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8022b6c <__ieee754_rem_pio2f+0x238>
 8022978:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8022b70 <__ieee754_rem_pio2f+0x23c>
 802297c:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8022b74 <__ieee754_rem_pio2f+0x240>
 8022980:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8022984:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8022988:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802298c:	ed80 7a00 	vstr	s14, [r0]
 8022990:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8022994:	edc0 7a01 	vstr	s15, [r0, #4]
 8022998:	2001      	movs	r0, #1
 802299a:	b007      	add	sp, #28
 802299c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802299e:	4293      	cmp	r3, r2
 80229a0:	ee70 7a07 	vadd.f32	s15, s0, s14
 80229a4:	bf09      	itett	eq
 80229a6:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8022b6c <__ieee754_rem_pio2f+0x238>
 80229aa:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8022b70 <__ieee754_rem_pio2f+0x23c>
 80229ae:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8022b74 <__ieee754_rem_pio2f+0x240>
 80229b2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80229b6:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80229ba:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80229be:	ed80 7a00 	vstr	s14, [r0]
 80229c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80229c6:	edc0 7a01 	vstr	s15, [r0, #4]
 80229ca:	f04f 30ff 	mov.w	r0, #4294967295
 80229ce:	e7e4      	b.n	802299a <__ieee754_rem_pio2f+0x66>
 80229d0:	4b69      	ldr	r3, [pc, #420]	@ (8022b78 <__ieee754_rem_pio2f+0x244>)
 80229d2:	429d      	cmp	r5, r3
 80229d4:	d873      	bhi.n	8022abe <__ieee754_rem_pio2f+0x18a>
 80229d6:	f000 f9b1 	bl	8022d3c <fabsf>
 80229da:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8022b7c <__ieee754_rem_pio2f+0x248>
 80229de:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80229e2:	eee0 7a07 	vfma.f32	s15, s0, s14
 80229e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80229ea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80229ee:	ee17 0a90 	vmov	r0, s15
 80229f2:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022b64 <__ieee754_rem_pio2f+0x230>
 80229f6:	eea7 0a67 	vfms.f32	s0, s14, s15
 80229fa:	281f      	cmp	r0, #31
 80229fc:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022b70 <__ieee754_rem_pio2f+0x23c>
 8022a00:	ee67 7a27 	vmul.f32	s15, s14, s15
 8022a04:	eeb1 6a47 	vneg.f32	s12, s14
 8022a08:	ee70 6a67 	vsub.f32	s13, s0, s15
 8022a0c:	ee16 1a90 	vmov	r1, s13
 8022a10:	dc09      	bgt.n	8022a26 <__ieee754_rem_pio2f+0xf2>
 8022a12:	4a5b      	ldr	r2, [pc, #364]	@ (8022b80 <__ieee754_rem_pio2f+0x24c>)
 8022a14:	1e47      	subs	r7, r0, #1
 8022a16:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8022a1a:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8022a1e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8022a22:	4293      	cmp	r3, r2
 8022a24:	d107      	bne.n	8022a36 <__ieee754_rem_pio2f+0x102>
 8022a26:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8022a2a:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8022a2e:	2a08      	cmp	r2, #8
 8022a30:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8022a34:	dc14      	bgt.n	8022a60 <__ieee754_rem_pio2f+0x12c>
 8022a36:	6021      	str	r1, [r4, #0]
 8022a38:	ed94 7a00 	vldr	s14, [r4]
 8022a3c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8022a40:	2e00      	cmp	r6, #0
 8022a42:	ee30 0a67 	vsub.f32	s0, s0, s15
 8022a46:	ed84 0a01 	vstr	s0, [r4, #4]
 8022a4a:	daa6      	bge.n	802299a <__ieee754_rem_pio2f+0x66>
 8022a4c:	eeb1 7a47 	vneg.f32	s14, s14
 8022a50:	eeb1 0a40 	vneg.f32	s0, s0
 8022a54:	ed84 7a00 	vstr	s14, [r4]
 8022a58:	ed84 0a01 	vstr	s0, [r4, #4]
 8022a5c:	4240      	negs	r0, r0
 8022a5e:	e79c      	b.n	802299a <__ieee754_rem_pio2f+0x66>
 8022a60:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8022b6c <__ieee754_rem_pio2f+0x238>
 8022a64:	eef0 6a40 	vmov.f32	s13, s0
 8022a68:	eee6 6a25 	vfma.f32	s13, s12, s11
 8022a6c:	ee70 7a66 	vsub.f32	s15, s0, s13
 8022a70:	eee6 7a25 	vfma.f32	s15, s12, s11
 8022a74:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8022b74 <__ieee754_rem_pio2f+0x240>
 8022a78:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8022a7c:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8022a80:	ee15 2a90 	vmov	r2, s11
 8022a84:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8022a88:	1a5b      	subs	r3, r3, r1
 8022a8a:	2b19      	cmp	r3, #25
 8022a8c:	dc04      	bgt.n	8022a98 <__ieee754_rem_pio2f+0x164>
 8022a8e:	edc4 5a00 	vstr	s11, [r4]
 8022a92:	eeb0 0a66 	vmov.f32	s0, s13
 8022a96:	e7cf      	b.n	8022a38 <__ieee754_rem_pio2f+0x104>
 8022a98:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8022b84 <__ieee754_rem_pio2f+0x250>
 8022a9c:	eeb0 0a66 	vmov.f32	s0, s13
 8022aa0:	eea6 0a25 	vfma.f32	s0, s12, s11
 8022aa4:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8022aa8:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8022b88 <__ieee754_rem_pio2f+0x254>
 8022aac:	eee6 7a25 	vfma.f32	s15, s12, s11
 8022ab0:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8022ab4:	ee30 7a67 	vsub.f32	s14, s0, s15
 8022ab8:	ed84 7a00 	vstr	s14, [r4]
 8022abc:	e7bc      	b.n	8022a38 <__ieee754_rem_pio2f+0x104>
 8022abe:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8022ac2:	d306      	bcc.n	8022ad2 <__ieee754_rem_pio2f+0x19e>
 8022ac4:	ee70 7a40 	vsub.f32	s15, s0, s0
 8022ac8:	edc0 7a01 	vstr	s15, [r0, #4]
 8022acc:	edc0 7a00 	vstr	s15, [r0]
 8022ad0:	e73e      	b.n	8022950 <__ieee754_rem_pio2f+0x1c>
 8022ad2:	15ea      	asrs	r2, r5, #23
 8022ad4:	3a86      	subs	r2, #134	@ 0x86
 8022ad6:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8022ada:	ee07 3a90 	vmov	s15, r3
 8022ade:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8022ae2:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8022b8c <__ieee754_rem_pio2f+0x258>
 8022ae6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8022aea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022aee:	ed8d 7a03 	vstr	s14, [sp, #12]
 8022af2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8022af6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8022afa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8022afe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022b02:	ed8d 7a04 	vstr	s14, [sp, #16]
 8022b06:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8022b0a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8022b0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022b12:	edcd 7a05 	vstr	s15, [sp, #20]
 8022b16:	d11e      	bne.n	8022b56 <__ieee754_rem_pio2f+0x222>
 8022b18:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8022b1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022b20:	bf0c      	ite	eq
 8022b22:	2301      	moveq	r3, #1
 8022b24:	2302      	movne	r3, #2
 8022b26:	491a      	ldr	r1, [pc, #104]	@ (8022b90 <__ieee754_rem_pio2f+0x25c>)
 8022b28:	9101      	str	r1, [sp, #4]
 8022b2a:	2102      	movs	r1, #2
 8022b2c:	9100      	str	r1, [sp, #0]
 8022b2e:	a803      	add	r0, sp, #12
 8022b30:	4621      	mov	r1, r4
 8022b32:	f000 f90b 	bl	8022d4c <__kernel_rem_pio2f>
 8022b36:	2e00      	cmp	r6, #0
 8022b38:	f6bf af2f 	bge.w	802299a <__ieee754_rem_pio2f+0x66>
 8022b3c:	edd4 7a00 	vldr	s15, [r4]
 8022b40:	eef1 7a67 	vneg.f32	s15, s15
 8022b44:	edc4 7a00 	vstr	s15, [r4]
 8022b48:	edd4 7a01 	vldr	s15, [r4, #4]
 8022b4c:	eef1 7a67 	vneg.f32	s15, s15
 8022b50:	edc4 7a01 	vstr	s15, [r4, #4]
 8022b54:	e782      	b.n	8022a5c <__ieee754_rem_pio2f+0x128>
 8022b56:	2303      	movs	r3, #3
 8022b58:	e7e5      	b.n	8022b26 <__ieee754_rem_pio2f+0x1f2>
 8022b5a:	bf00      	nop
 8022b5c:	3f490fd8 	.word	0x3f490fd8
 8022b60:	4016cbe3 	.word	0x4016cbe3
 8022b64:	3fc90f80 	.word	0x3fc90f80
 8022b68:	3fc90fd0 	.word	0x3fc90fd0
 8022b6c:	37354400 	.word	0x37354400
 8022b70:	37354443 	.word	0x37354443
 8022b74:	2e85a308 	.word	0x2e85a308
 8022b78:	43490f80 	.word	0x43490f80
 8022b7c:	3f22f984 	.word	0x3f22f984
 8022b80:	0802616c 	.word	0x0802616c
 8022b84:	2e85a300 	.word	0x2e85a300
 8022b88:	248d3132 	.word	0x248d3132
 8022b8c:	43800000 	.word	0x43800000
 8022b90:	080261ec 	.word	0x080261ec

08022b94 <atanf>:
 8022b94:	b538      	push	{r3, r4, r5, lr}
 8022b96:	ee10 5a10 	vmov	r5, s0
 8022b9a:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 8022b9e:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 8022ba2:	eef0 7a40 	vmov.f32	s15, s0
 8022ba6:	d310      	bcc.n	8022bca <atanf+0x36>
 8022ba8:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8022bac:	d904      	bls.n	8022bb8 <atanf+0x24>
 8022bae:	ee70 7a00 	vadd.f32	s15, s0, s0
 8022bb2:	eeb0 0a67 	vmov.f32	s0, s15
 8022bb6:	bd38      	pop	{r3, r4, r5, pc}
 8022bb8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8022cf0 <atanf+0x15c>
 8022bbc:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8022cf4 <atanf+0x160>
 8022bc0:	2d00      	cmp	r5, #0
 8022bc2:	bfc8      	it	gt
 8022bc4:	eef0 7a47 	vmovgt.f32	s15, s14
 8022bc8:	e7f3      	b.n	8022bb2 <atanf+0x1e>
 8022bca:	4b4b      	ldr	r3, [pc, #300]	@ (8022cf8 <atanf+0x164>)
 8022bcc:	429c      	cmp	r4, r3
 8022bce:	d810      	bhi.n	8022bf2 <atanf+0x5e>
 8022bd0:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8022bd4:	d20a      	bcs.n	8022bec <atanf+0x58>
 8022bd6:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8022cfc <atanf+0x168>
 8022bda:	ee30 7a07 	vadd.f32	s14, s0, s14
 8022bde:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8022be2:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8022be6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022bea:	dce2      	bgt.n	8022bb2 <atanf+0x1e>
 8022bec:	f04f 33ff 	mov.w	r3, #4294967295
 8022bf0:	e013      	b.n	8022c1a <atanf+0x86>
 8022bf2:	f000 f8a3 	bl	8022d3c <fabsf>
 8022bf6:	4b42      	ldr	r3, [pc, #264]	@ (8022d00 <atanf+0x16c>)
 8022bf8:	429c      	cmp	r4, r3
 8022bfa:	d84f      	bhi.n	8022c9c <atanf+0x108>
 8022bfc:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8022c00:	429c      	cmp	r4, r3
 8022c02:	d841      	bhi.n	8022c88 <atanf+0xf4>
 8022c04:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8022c08:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8022c0c:	eea0 7a27 	vfma.f32	s14, s0, s15
 8022c10:	2300      	movs	r3, #0
 8022c12:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022c16:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022c1a:	1c5a      	adds	r2, r3, #1
 8022c1c:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8022c20:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8022d04 <atanf+0x170>
 8022c24:	eddf 5a38 	vldr	s11, [pc, #224]	@ 8022d08 <atanf+0x174>
 8022c28:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8022d0c <atanf+0x178>
 8022c2c:	ee66 6a06 	vmul.f32	s13, s12, s12
 8022c30:	eee6 5a87 	vfma.f32	s11, s13, s14
 8022c34:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8022d10 <atanf+0x17c>
 8022c38:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8022c3c:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8022d14 <atanf+0x180>
 8022c40:	eee7 5a26 	vfma.f32	s11, s14, s13
 8022c44:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8022d18 <atanf+0x184>
 8022c48:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8022c4c:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8022d1c <atanf+0x188>
 8022c50:	eee7 5a26 	vfma.f32	s11, s14, s13
 8022c54:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8022d20 <atanf+0x18c>
 8022c58:	eea6 5a87 	vfma.f32	s10, s13, s14
 8022c5c:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8022d24 <atanf+0x190>
 8022c60:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022c64:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 8022d28 <atanf+0x194>
 8022c68:	eea7 5a26 	vfma.f32	s10, s14, s13
 8022c6c:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8022d2c <atanf+0x198>
 8022c70:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022c74:	ee27 7a26 	vmul.f32	s14, s14, s13
 8022c78:	eea5 7a86 	vfma.f32	s14, s11, s12
 8022c7c:	ee27 7a87 	vmul.f32	s14, s15, s14
 8022c80:	d121      	bne.n	8022cc6 <atanf+0x132>
 8022c82:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022c86:	e794      	b.n	8022bb2 <atanf+0x1e>
 8022c88:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8022c8c:	ee30 7a67 	vsub.f32	s14, s0, s15
 8022c90:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022c94:	2301      	movs	r3, #1
 8022c96:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022c9a:	e7be      	b.n	8022c1a <atanf+0x86>
 8022c9c:	4b24      	ldr	r3, [pc, #144]	@ (8022d30 <atanf+0x19c>)
 8022c9e:	429c      	cmp	r4, r3
 8022ca0:	d80b      	bhi.n	8022cba <atanf+0x126>
 8022ca2:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8022ca6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022caa:	eea0 7a27 	vfma.f32	s14, s0, s15
 8022cae:	2302      	movs	r3, #2
 8022cb0:	ee70 6a67 	vsub.f32	s13, s0, s15
 8022cb4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8022cb8:	e7af      	b.n	8022c1a <atanf+0x86>
 8022cba:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8022cbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022cc2:	2303      	movs	r3, #3
 8022cc4:	e7a9      	b.n	8022c1a <atanf+0x86>
 8022cc6:	4a1b      	ldr	r2, [pc, #108]	@ (8022d34 <atanf+0x1a0>)
 8022cc8:	491b      	ldr	r1, [pc, #108]	@ (8022d38 <atanf+0x1a4>)
 8022cca:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8022cce:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8022cd2:	edd3 6a00 	vldr	s13, [r3]
 8022cd6:	ee37 7a66 	vsub.f32	s14, s14, s13
 8022cda:	2d00      	cmp	r5, #0
 8022cdc:	ee37 7a67 	vsub.f32	s14, s14, s15
 8022ce0:	edd2 7a00 	vldr	s15, [r2]
 8022ce4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022ce8:	bfb8      	it	lt
 8022cea:	eef1 7a67 	vneglt.f32	s15, s15
 8022cee:	e760      	b.n	8022bb2 <atanf+0x1e>
 8022cf0:	bfc90fdb 	.word	0xbfc90fdb
 8022cf4:	3fc90fdb 	.word	0x3fc90fdb
 8022cf8:	3edfffff 	.word	0x3edfffff
 8022cfc:	7149f2ca 	.word	0x7149f2ca
 8022d00:	3f97ffff 	.word	0x3f97ffff
 8022d04:	3c8569d7 	.word	0x3c8569d7
 8022d08:	3d4bda59 	.word	0x3d4bda59
 8022d0c:	bd6ef16b 	.word	0xbd6ef16b
 8022d10:	3d886b35 	.word	0x3d886b35
 8022d14:	3dba2e6e 	.word	0x3dba2e6e
 8022d18:	3e124925 	.word	0x3e124925
 8022d1c:	3eaaaaab 	.word	0x3eaaaaab
 8022d20:	bd15a221 	.word	0xbd15a221
 8022d24:	bd9d8795 	.word	0xbd9d8795
 8022d28:	bde38e38 	.word	0xbde38e38
 8022d2c:	be4ccccd 	.word	0xbe4ccccd
 8022d30:	401bffff 	.word	0x401bffff
 8022d34:	08026514 	.word	0x08026514
 8022d38:	08026504 	.word	0x08026504

08022d3c <fabsf>:
 8022d3c:	ee10 3a10 	vmov	r3, s0
 8022d40:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8022d44:	ee00 3a10 	vmov	s0, r3
 8022d48:	4770      	bx	lr
	...

08022d4c <__kernel_rem_pio2f>:
 8022d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d50:	ed2d 8b04 	vpush	{d8-d9}
 8022d54:	b0d9      	sub	sp, #356	@ 0x164
 8022d56:	4690      	mov	r8, r2
 8022d58:	9001      	str	r0, [sp, #4]
 8022d5a:	4ab6      	ldr	r2, [pc, #728]	@ (8023034 <__kernel_rem_pio2f+0x2e8>)
 8022d5c:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8022d5e:	f118 0f04 	cmn.w	r8, #4
 8022d62:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8022d66:	460f      	mov	r7, r1
 8022d68:	f103 3bff 	add.w	fp, r3, #4294967295
 8022d6c:	db26      	blt.n	8022dbc <__kernel_rem_pio2f+0x70>
 8022d6e:	f1b8 0203 	subs.w	r2, r8, #3
 8022d72:	bf48      	it	mi
 8022d74:	f108 0204 	addmi.w	r2, r8, #4
 8022d78:	10d2      	asrs	r2, r2, #3
 8022d7a:	1c55      	adds	r5, r2, #1
 8022d7c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8022d7e:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8023044 <__kernel_rem_pio2f+0x2f8>
 8022d82:	00e8      	lsls	r0, r5, #3
 8022d84:	eba2 060b 	sub.w	r6, r2, fp
 8022d88:	9002      	str	r0, [sp, #8]
 8022d8a:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8022d8e:	eb0a 0c0b 	add.w	ip, sl, fp
 8022d92:	ac1c      	add	r4, sp, #112	@ 0x70
 8022d94:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8022d98:	2000      	movs	r0, #0
 8022d9a:	4560      	cmp	r0, ip
 8022d9c:	dd10      	ble.n	8022dc0 <__kernel_rem_pio2f+0x74>
 8022d9e:	a91c      	add	r1, sp, #112	@ 0x70
 8022da0:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8022da4:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8022da8:	2600      	movs	r6, #0
 8022daa:	4556      	cmp	r6, sl
 8022dac:	dc24      	bgt.n	8022df8 <__kernel_rem_pio2f+0xac>
 8022dae:	f8dd e004 	ldr.w	lr, [sp, #4]
 8022db2:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8023044 <__kernel_rem_pio2f+0x2f8>
 8022db6:	4684      	mov	ip, r0
 8022db8:	2400      	movs	r4, #0
 8022dba:	e016      	b.n	8022dea <__kernel_rem_pio2f+0x9e>
 8022dbc:	2200      	movs	r2, #0
 8022dbe:	e7dc      	b.n	8022d7a <__kernel_rem_pio2f+0x2e>
 8022dc0:	42c6      	cmn	r6, r0
 8022dc2:	bf5d      	ittte	pl
 8022dc4:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8022dc8:	ee07 1a90 	vmovpl	s15, r1
 8022dcc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8022dd0:	eef0 7a47 	vmovmi.f32	s15, s14
 8022dd4:	ece4 7a01 	vstmia	r4!, {s15}
 8022dd8:	3001      	adds	r0, #1
 8022dda:	e7de      	b.n	8022d9a <__kernel_rem_pio2f+0x4e>
 8022ddc:	ecfe 6a01 	vldmia	lr!, {s13}
 8022de0:	ed3c 7a01 	vldmdb	ip!, {s14}
 8022de4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022de8:	3401      	adds	r4, #1
 8022dea:	455c      	cmp	r4, fp
 8022dec:	ddf6      	ble.n	8022ddc <__kernel_rem_pio2f+0x90>
 8022dee:	ece9 7a01 	vstmia	r9!, {s15}
 8022df2:	3601      	adds	r6, #1
 8022df4:	3004      	adds	r0, #4
 8022df6:	e7d8      	b.n	8022daa <__kernel_rem_pio2f+0x5e>
 8022df8:	a908      	add	r1, sp, #32
 8022dfa:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8022dfe:	9104      	str	r1, [sp, #16]
 8022e00:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8022e02:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8023040 <__kernel_rem_pio2f+0x2f4>
 8022e06:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 802303c <__kernel_rem_pio2f+0x2f0>
 8022e0a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8022e0e:	9203      	str	r2, [sp, #12]
 8022e10:	4654      	mov	r4, sl
 8022e12:	00a2      	lsls	r2, r4, #2
 8022e14:	9205      	str	r2, [sp, #20]
 8022e16:	aa58      	add	r2, sp, #352	@ 0x160
 8022e18:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8022e1c:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8022e20:	a944      	add	r1, sp, #272	@ 0x110
 8022e22:	aa08      	add	r2, sp, #32
 8022e24:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8022e28:	4694      	mov	ip, r2
 8022e2a:	4626      	mov	r6, r4
 8022e2c:	2e00      	cmp	r6, #0
 8022e2e:	dc4c      	bgt.n	8022eca <__kernel_rem_pio2f+0x17e>
 8022e30:	4628      	mov	r0, r5
 8022e32:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8022e36:	f000 f9f1 	bl	802321c <scalbnf>
 8022e3a:	eeb0 8a40 	vmov.f32	s16, s0
 8022e3e:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8022e42:	ee28 0a00 	vmul.f32	s0, s16, s0
 8022e46:	f000 fa4f 	bl	80232e8 <floorf>
 8022e4a:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8022e4e:	eea0 8a67 	vfms.f32	s16, s0, s15
 8022e52:	2d00      	cmp	r5, #0
 8022e54:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8022e58:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8022e5c:	ee17 9a90 	vmov	r9, s15
 8022e60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022e64:	ee38 8a67 	vsub.f32	s16, s16, s15
 8022e68:	dd41      	ble.n	8022eee <__kernel_rem_pio2f+0x1a2>
 8022e6a:	f104 3cff 	add.w	ip, r4, #4294967295
 8022e6e:	a908      	add	r1, sp, #32
 8022e70:	f1c5 0e08 	rsb	lr, r5, #8
 8022e74:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8022e78:	fa46 f00e 	asr.w	r0, r6, lr
 8022e7c:	4481      	add	r9, r0
 8022e7e:	fa00 f00e 	lsl.w	r0, r0, lr
 8022e82:	1a36      	subs	r6, r6, r0
 8022e84:	f1c5 0007 	rsb	r0, r5, #7
 8022e88:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8022e8c:	4106      	asrs	r6, r0
 8022e8e:	2e00      	cmp	r6, #0
 8022e90:	dd3c      	ble.n	8022f0c <__kernel_rem_pio2f+0x1c0>
 8022e92:	f04f 0e00 	mov.w	lr, #0
 8022e96:	f109 0901 	add.w	r9, r9, #1
 8022e9a:	4670      	mov	r0, lr
 8022e9c:	4574      	cmp	r4, lr
 8022e9e:	dc68      	bgt.n	8022f72 <__kernel_rem_pio2f+0x226>
 8022ea0:	2d00      	cmp	r5, #0
 8022ea2:	dd03      	ble.n	8022eac <__kernel_rem_pio2f+0x160>
 8022ea4:	2d01      	cmp	r5, #1
 8022ea6:	d074      	beq.n	8022f92 <__kernel_rem_pio2f+0x246>
 8022ea8:	2d02      	cmp	r5, #2
 8022eaa:	d07d      	beq.n	8022fa8 <__kernel_rem_pio2f+0x25c>
 8022eac:	2e02      	cmp	r6, #2
 8022eae:	d12d      	bne.n	8022f0c <__kernel_rem_pio2f+0x1c0>
 8022eb0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8022eb4:	ee30 8a48 	vsub.f32	s16, s0, s16
 8022eb8:	b340      	cbz	r0, 8022f0c <__kernel_rem_pio2f+0x1c0>
 8022eba:	4628      	mov	r0, r5
 8022ebc:	9306      	str	r3, [sp, #24]
 8022ebe:	f000 f9ad 	bl	802321c <scalbnf>
 8022ec2:	9b06      	ldr	r3, [sp, #24]
 8022ec4:	ee38 8a40 	vsub.f32	s16, s16, s0
 8022ec8:	e020      	b.n	8022f0c <__kernel_rem_pio2f+0x1c0>
 8022eca:	ee60 7a28 	vmul.f32	s15, s0, s17
 8022ece:	3e01      	subs	r6, #1
 8022ed0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022ed4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022ed8:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8022edc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8022ee0:	ecac 0a01 	vstmia	ip!, {s0}
 8022ee4:	ed30 0a01 	vldmdb	r0!, {s0}
 8022ee8:	ee37 0a80 	vadd.f32	s0, s15, s0
 8022eec:	e79e      	b.n	8022e2c <__kernel_rem_pio2f+0xe0>
 8022eee:	d105      	bne.n	8022efc <__kernel_rem_pio2f+0x1b0>
 8022ef0:	1e60      	subs	r0, r4, #1
 8022ef2:	a908      	add	r1, sp, #32
 8022ef4:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8022ef8:	11f6      	asrs	r6, r6, #7
 8022efa:	e7c8      	b.n	8022e8e <__kernel_rem_pio2f+0x142>
 8022efc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022f00:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8022f04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022f08:	da31      	bge.n	8022f6e <__kernel_rem_pio2f+0x222>
 8022f0a:	2600      	movs	r6, #0
 8022f0c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022f10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022f14:	f040 8098 	bne.w	8023048 <__kernel_rem_pio2f+0x2fc>
 8022f18:	1e60      	subs	r0, r4, #1
 8022f1a:	2200      	movs	r2, #0
 8022f1c:	4550      	cmp	r0, sl
 8022f1e:	da4b      	bge.n	8022fb8 <__kernel_rem_pio2f+0x26c>
 8022f20:	2a00      	cmp	r2, #0
 8022f22:	d065      	beq.n	8022ff0 <__kernel_rem_pio2f+0x2a4>
 8022f24:	3c01      	subs	r4, #1
 8022f26:	ab08      	add	r3, sp, #32
 8022f28:	3d08      	subs	r5, #8
 8022f2a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8022f2e:	2b00      	cmp	r3, #0
 8022f30:	d0f8      	beq.n	8022f24 <__kernel_rem_pio2f+0x1d8>
 8022f32:	4628      	mov	r0, r5
 8022f34:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8022f38:	f000 f970 	bl	802321c <scalbnf>
 8022f3c:	1c63      	adds	r3, r4, #1
 8022f3e:	aa44      	add	r2, sp, #272	@ 0x110
 8022f40:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8023040 <__kernel_rem_pio2f+0x2f4>
 8022f44:	0099      	lsls	r1, r3, #2
 8022f46:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8022f4a:	4623      	mov	r3, r4
 8022f4c:	2b00      	cmp	r3, #0
 8022f4e:	f280 80a9 	bge.w	80230a4 <__kernel_rem_pio2f+0x358>
 8022f52:	4623      	mov	r3, r4
 8022f54:	2b00      	cmp	r3, #0
 8022f56:	f2c0 80c7 	blt.w	80230e8 <__kernel_rem_pio2f+0x39c>
 8022f5a:	aa44      	add	r2, sp, #272	@ 0x110
 8022f5c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8022f60:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8023038 <__kernel_rem_pio2f+0x2ec>
 8022f64:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8023044 <__kernel_rem_pio2f+0x2f8>
 8022f68:	2000      	movs	r0, #0
 8022f6a:	1ae2      	subs	r2, r4, r3
 8022f6c:	e0b1      	b.n	80230d2 <__kernel_rem_pio2f+0x386>
 8022f6e:	2602      	movs	r6, #2
 8022f70:	e78f      	b.n	8022e92 <__kernel_rem_pio2f+0x146>
 8022f72:	f852 1b04 	ldr.w	r1, [r2], #4
 8022f76:	b948      	cbnz	r0, 8022f8c <__kernel_rem_pio2f+0x240>
 8022f78:	b121      	cbz	r1, 8022f84 <__kernel_rem_pio2f+0x238>
 8022f7a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8022f7e:	f842 1c04 	str.w	r1, [r2, #-4]
 8022f82:	2101      	movs	r1, #1
 8022f84:	f10e 0e01 	add.w	lr, lr, #1
 8022f88:	4608      	mov	r0, r1
 8022f8a:	e787      	b.n	8022e9c <__kernel_rem_pio2f+0x150>
 8022f8c:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8022f90:	e7f5      	b.n	8022f7e <__kernel_rem_pio2f+0x232>
 8022f92:	f104 3cff 	add.w	ip, r4, #4294967295
 8022f96:	aa08      	add	r2, sp, #32
 8022f98:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8022f9c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8022fa0:	a908      	add	r1, sp, #32
 8022fa2:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8022fa6:	e781      	b.n	8022eac <__kernel_rem_pio2f+0x160>
 8022fa8:	f104 3cff 	add.w	ip, r4, #4294967295
 8022fac:	aa08      	add	r2, sp, #32
 8022fae:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8022fb2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8022fb6:	e7f3      	b.n	8022fa0 <__kernel_rem_pio2f+0x254>
 8022fb8:	a908      	add	r1, sp, #32
 8022fba:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8022fbe:	3801      	subs	r0, #1
 8022fc0:	430a      	orrs	r2, r1
 8022fc2:	e7ab      	b.n	8022f1c <__kernel_rem_pio2f+0x1d0>
 8022fc4:	3201      	adds	r2, #1
 8022fc6:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8022fca:	2e00      	cmp	r6, #0
 8022fcc:	d0fa      	beq.n	8022fc4 <__kernel_rem_pio2f+0x278>
 8022fce:	9905      	ldr	r1, [sp, #20]
 8022fd0:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8022fd4:	eb0d 0001 	add.w	r0, sp, r1
 8022fd8:	18e6      	adds	r6, r4, r3
 8022fda:	a91c      	add	r1, sp, #112	@ 0x70
 8022fdc:	f104 0c01 	add.w	ip, r4, #1
 8022fe0:	384c      	subs	r0, #76	@ 0x4c
 8022fe2:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8022fe6:	4422      	add	r2, r4
 8022fe8:	4562      	cmp	r2, ip
 8022fea:	da04      	bge.n	8022ff6 <__kernel_rem_pio2f+0x2aa>
 8022fec:	4614      	mov	r4, r2
 8022fee:	e710      	b.n	8022e12 <__kernel_rem_pio2f+0xc6>
 8022ff0:	9804      	ldr	r0, [sp, #16]
 8022ff2:	2201      	movs	r2, #1
 8022ff4:	e7e7      	b.n	8022fc6 <__kernel_rem_pio2f+0x27a>
 8022ff6:	9903      	ldr	r1, [sp, #12]
 8022ff8:	f8dd e004 	ldr.w	lr, [sp, #4]
 8022ffc:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8023000:	9105      	str	r1, [sp, #20]
 8023002:	ee07 1a90 	vmov	s15, r1
 8023006:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802300a:	2400      	movs	r4, #0
 802300c:	ece6 7a01 	vstmia	r6!, {s15}
 8023010:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8023044 <__kernel_rem_pio2f+0x2f8>
 8023014:	46b1      	mov	r9, r6
 8023016:	455c      	cmp	r4, fp
 8023018:	dd04      	ble.n	8023024 <__kernel_rem_pio2f+0x2d8>
 802301a:	ece0 7a01 	vstmia	r0!, {s15}
 802301e:	f10c 0c01 	add.w	ip, ip, #1
 8023022:	e7e1      	b.n	8022fe8 <__kernel_rem_pio2f+0x29c>
 8023024:	ecfe 6a01 	vldmia	lr!, {s13}
 8023028:	ed39 7a01 	vldmdb	r9!, {s14}
 802302c:	3401      	adds	r4, #1
 802302e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8023032:	e7f0      	b.n	8023016 <__kernel_rem_pio2f+0x2ca>
 8023034:	08026550 	.word	0x08026550
 8023038:	08026524 	.word	0x08026524
 802303c:	43800000 	.word	0x43800000
 8023040:	3b800000 	.word	0x3b800000
 8023044:	00000000 	.word	0x00000000
 8023048:	9b02      	ldr	r3, [sp, #8]
 802304a:	eeb0 0a48 	vmov.f32	s0, s16
 802304e:	eba3 0008 	sub.w	r0, r3, r8
 8023052:	f000 f8e3 	bl	802321c <scalbnf>
 8023056:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 802303c <__kernel_rem_pio2f+0x2f0>
 802305a:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802305e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023062:	db19      	blt.n	8023098 <__kernel_rem_pio2f+0x34c>
 8023064:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8023040 <__kernel_rem_pio2f+0x2f4>
 8023068:	ee60 7a27 	vmul.f32	s15, s0, s15
 802306c:	aa08      	add	r2, sp, #32
 802306e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8023072:	3508      	adds	r5, #8
 8023074:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8023078:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802307c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8023080:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8023084:	ee10 3a10 	vmov	r3, s0
 8023088:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802308c:	ee17 3a90 	vmov	r3, s15
 8023090:	3401      	adds	r4, #1
 8023092:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8023096:	e74c      	b.n	8022f32 <__kernel_rem_pio2f+0x1e6>
 8023098:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802309c:	aa08      	add	r2, sp, #32
 802309e:	ee10 3a10 	vmov	r3, s0
 80230a2:	e7f6      	b.n	8023092 <__kernel_rem_pio2f+0x346>
 80230a4:	a808      	add	r0, sp, #32
 80230a6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80230aa:	9001      	str	r0, [sp, #4]
 80230ac:	ee07 0a90 	vmov	s15, r0
 80230b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80230b4:	3b01      	subs	r3, #1
 80230b6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80230ba:	ee20 0a07 	vmul.f32	s0, s0, s14
 80230be:	ed62 7a01 	vstmdb	r2!, {s15}
 80230c2:	e743      	b.n	8022f4c <__kernel_rem_pio2f+0x200>
 80230c4:	ecfc 6a01 	vldmia	ip!, {s13}
 80230c8:	ecb5 7a01 	vldmia	r5!, {s14}
 80230cc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80230d0:	3001      	adds	r0, #1
 80230d2:	4550      	cmp	r0, sl
 80230d4:	dc01      	bgt.n	80230da <__kernel_rem_pio2f+0x38e>
 80230d6:	4290      	cmp	r0, r2
 80230d8:	ddf4      	ble.n	80230c4 <__kernel_rem_pio2f+0x378>
 80230da:	a858      	add	r0, sp, #352	@ 0x160
 80230dc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80230e0:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 80230e4:	3b01      	subs	r3, #1
 80230e6:	e735      	b.n	8022f54 <__kernel_rem_pio2f+0x208>
 80230e8:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80230ea:	2b02      	cmp	r3, #2
 80230ec:	dc09      	bgt.n	8023102 <__kernel_rem_pio2f+0x3b6>
 80230ee:	2b00      	cmp	r3, #0
 80230f0:	dc27      	bgt.n	8023142 <__kernel_rem_pio2f+0x3f6>
 80230f2:	d040      	beq.n	8023176 <__kernel_rem_pio2f+0x42a>
 80230f4:	f009 0007 	and.w	r0, r9, #7
 80230f8:	b059      	add	sp, #356	@ 0x164
 80230fa:	ecbd 8b04 	vpop	{d8-d9}
 80230fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023102:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8023104:	2b03      	cmp	r3, #3
 8023106:	d1f5      	bne.n	80230f4 <__kernel_rem_pio2f+0x3a8>
 8023108:	aa30      	add	r2, sp, #192	@ 0xc0
 802310a:	1f0b      	subs	r3, r1, #4
 802310c:	4413      	add	r3, r2
 802310e:	461a      	mov	r2, r3
 8023110:	4620      	mov	r0, r4
 8023112:	2800      	cmp	r0, #0
 8023114:	dc50      	bgt.n	80231b8 <__kernel_rem_pio2f+0x46c>
 8023116:	4622      	mov	r2, r4
 8023118:	2a01      	cmp	r2, #1
 802311a:	dc5d      	bgt.n	80231d8 <__kernel_rem_pio2f+0x48c>
 802311c:	ab30      	add	r3, sp, #192	@ 0xc0
 802311e:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8023044 <__kernel_rem_pio2f+0x2f8>
 8023122:	440b      	add	r3, r1
 8023124:	2c01      	cmp	r4, #1
 8023126:	dc67      	bgt.n	80231f8 <__kernel_rem_pio2f+0x4ac>
 8023128:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802312c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8023130:	2e00      	cmp	r6, #0
 8023132:	d167      	bne.n	8023204 <__kernel_rem_pio2f+0x4b8>
 8023134:	edc7 6a00 	vstr	s13, [r7]
 8023138:	ed87 7a01 	vstr	s14, [r7, #4]
 802313c:	edc7 7a02 	vstr	s15, [r7, #8]
 8023140:	e7d8      	b.n	80230f4 <__kernel_rem_pio2f+0x3a8>
 8023142:	ab30      	add	r3, sp, #192	@ 0xc0
 8023144:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8023044 <__kernel_rem_pio2f+0x2f8>
 8023148:	440b      	add	r3, r1
 802314a:	4622      	mov	r2, r4
 802314c:	2a00      	cmp	r2, #0
 802314e:	da24      	bge.n	802319a <__kernel_rem_pio2f+0x44e>
 8023150:	b34e      	cbz	r6, 80231a6 <__kernel_rem_pio2f+0x45a>
 8023152:	eef1 7a47 	vneg.f32	s15, s14
 8023156:	edc7 7a00 	vstr	s15, [r7]
 802315a:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 802315e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023162:	aa31      	add	r2, sp, #196	@ 0xc4
 8023164:	2301      	movs	r3, #1
 8023166:	429c      	cmp	r4, r3
 8023168:	da20      	bge.n	80231ac <__kernel_rem_pio2f+0x460>
 802316a:	b10e      	cbz	r6, 8023170 <__kernel_rem_pio2f+0x424>
 802316c:	eef1 7a67 	vneg.f32	s15, s15
 8023170:	edc7 7a01 	vstr	s15, [r7, #4]
 8023174:	e7be      	b.n	80230f4 <__kernel_rem_pio2f+0x3a8>
 8023176:	ab30      	add	r3, sp, #192	@ 0xc0
 8023178:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8023044 <__kernel_rem_pio2f+0x2f8>
 802317c:	440b      	add	r3, r1
 802317e:	2c00      	cmp	r4, #0
 8023180:	da05      	bge.n	802318e <__kernel_rem_pio2f+0x442>
 8023182:	b10e      	cbz	r6, 8023188 <__kernel_rem_pio2f+0x43c>
 8023184:	eef1 7a67 	vneg.f32	s15, s15
 8023188:	edc7 7a00 	vstr	s15, [r7]
 802318c:	e7b2      	b.n	80230f4 <__kernel_rem_pio2f+0x3a8>
 802318e:	ed33 7a01 	vldmdb	r3!, {s14}
 8023192:	3c01      	subs	r4, #1
 8023194:	ee77 7a87 	vadd.f32	s15, s15, s14
 8023198:	e7f1      	b.n	802317e <__kernel_rem_pio2f+0x432>
 802319a:	ed73 7a01 	vldmdb	r3!, {s15}
 802319e:	3a01      	subs	r2, #1
 80231a0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80231a4:	e7d2      	b.n	802314c <__kernel_rem_pio2f+0x400>
 80231a6:	eef0 7a47 	vmov.f32	s15, s14
 80231aa:	e7d4      	b.n	8023156 <__kernel_rem_pio2f+0x40a>
 80231ac:	ecb2 7a01 	vldmia	r2!, {s14}
 80231b0:	3301      	adds	r3, #1
 80231b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80231b6:	e7d6      	b.n	8023166 <__kernel_rem_pio2f+0x41a>
 80231b8:	ed72 7a01 	vldmdb	r2!, {s15}
 80231bc:	edd2 6a01 	vldr	s13, [r2, #4]
 80231c0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80231c4:	3801      	subs	r0, #1
 80231c6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80231ca:	ed82 7a00 	vstr	s14, [r2]
 80231ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80231d2:	edc2 7a01 	vstr	s15, [r2, #4]
 80231d6:	e79c      	b.n	8023112 <__kernel_rem_pio2f+0x3c6>
 80231d8:	ed73 7a01 	vldmdb	r3!, {s15}
 80231dc:	edd3 6a01 	vldr	s13, [r3, #4]
 80231e0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80231e4:	3a01      	subs	r2, #1
 80231e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80231ea:	ed83 7a00 	vstr	s14, [r3]
 80231ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80231f2:	edc3 7a01 	vstr	s15, [r3, #4]
 80231f6:	e78f      	b.n	8023118 <__kernel_rem_pio2f+0x3cc>
 80231f8:	ed33 7a01 	vldmdb	r3!, {s14}
 80231fc:	3c01      	subs	r4, #1
 80231fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8023202:	e78f      	b.n	8023124 <__kernel_rem_pio2f+0x3d8>
 8023204:	eef1 6a66 	vneg.f32	s13, s13
 8023208:	eeb1 7a47 	vneg.f32	s14, s14
 802320c:	edc7 6a00 	vstr	s13, [r7]
 8023210:	ed87 7a01 	vstr	s14, [r7, #4]
 8023214:	eef1 7a67 	vneg.f32	s15, s15
 8023218:	e790      	b.n	802313c <__kernel_rem_pio2f+0x3f0>
 802321a:	bf00      	nop

0802321c <scalbnf>:
 802321c:	ee10 3a10 	vmov	r3, s0
 8023220:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8023224:	d02b      	beq.n	802327e <scalbnf+0x62>
 8023226:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802322a:	d302      	bcc.n	8023232 <scalbnf+0x16>
 802322c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8023230:	4770      	bx	lr
 8023232:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8023236:	d123      	bne.n	8023280 <scalbnf+0x64>
 8023238:	4b24      	ldr	r3, [pc, #144]	@ (80232cc <scalbnf+0xb0>)
 802323a:	eddf 7a25 	vldr	s15, [pc, #148]	@ 80232d0 <scalbnf+0xb4>
 802323e:	4298      	cmp	r0, r3
 8023240:	ee20 0a27 	vmul.f32	s0, s0, s15
 8023244:	db17      	blt.n	8023276 <scalbnf+0x5a>
 8023246:	ee10 3a10 	vmov	r3, s0
 802324a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802324e:	3a19      	subs	r2, #25
 8023250:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8023254:	4288      	cmp	r0, r1
 8023256:	dd15      	ble.n	8023284 <scalbnf+0x68>
 8023258:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 80232d4 <scalbnf+0xb8>
 802325c:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 80232d8 <scalbnf+0xbc>
 8023260:	ee10 3a10 	vmov	r3, s0
 8023264:	eeb0 7a67 	vmov.f32	s14, s15
 8023268:	2b00      	cmp	r3, #0
 802326a:	bfb8      	it	lt
 802326c:	eef0 7a66 	vmovlt.f32	s15, s13
 8023270:	ee27 0a87 	vmul.f32	s0, s15, s14
 8023274:	4770      	bx	lr
 8023276:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80232dc <scalbnf+0xc0>
 802327a:	ee27 0a80 	vmul.f32	s0, s15, s0
 802327e:	4770      	bx	lr
 8023280:	0dd2      	lsrs	r2, r2, #23
 8023282:	e7e5      	b.n	8023250 <scalbnf+0x34>
 8023284:	4410      	add	r0, r2
 8023286:	28fe      	cmp	r0, #254	@ 0xfe
 8023288:	dce6      	bgt.n	8023258 <scalbnf+0x3c>
 802328a:	2800      	cmp	r0, #0
 802328c:	dd06      	ble.n	802329c <scalbnf+0x80>
 802328e:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8023292:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8023296:	ee00 3a10 	vmov	s0, r3
 802329a:	4770      	bx	lr
 802329c:	f110 0f16 	cmn.w	r0, #22
 80232a0:	da09      	bge.n	80232b6 <scalbnf+0x9a>
 80232a2:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 80232dc <scalbnf+0xc0>
 80232a6:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 80232e0 <scalbnf+0xc4>
 80232aa:	ee10 3a10 	vmov	r3, s0
 80232ae:	eeb0 7a67 	vmov.f32	s14, s15
 80232b2:	2b00      	cmp	r3, #0
 80232b4:	e7d9      	b.n	802326a <scalbnf+0x4e>
 80232b6:	3019      	adds	r0, #25
 80232b8:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80232bc:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80232c0:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 80232e4 <scalbnf+0xc8>
 80232c4:	ee07 3a90 	vmov	s15, r3
 80232c8:	e7d7      	b.n	802327a <scalbnf+0x5e>
 80232ca:	bf00      	nop
 80232cc:	ffff3cb0 	.word	0xffff3cb0
 80232d0:	4c000000 	.word	0x4c000000
 80232d4:	7149f2ca 	.word	0x7149f2ca
 80232d8:	f149f2ca 	.word	0xf149f2ca
 80232dc:	0da24260 	.word	0x0da24260
 80232e0:	8da24260 	.word	0x8da24260
 80232e4:	33000000 	.word	0x33000000

080232e8 <floorf>:
 80232e8:	ee10 3a10 	vmov	r3, s0
 80232ec:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80232f0:	3a7f      	subs	r2, #127	@ 0x7f
 80232f2:	2a16      	cmp	r2, #22
 80232f4:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 80232f8:	dc2b      	bgt.n	8023352 <floorf+0x6a>
 80232fa:	2a00      	cmp	r2, #0
 80232fc:	da12      	bge.n	8023324 <floorf+0x3c>
 80232fe:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8023364 <floorf+0x7c>
 8023302:	ee30 0a27 	vadd.f32	s0, s0, s15
 8023306:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802330a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802330e:	dd06      	ble.n	802331e <floorf+0x36>
 8023310:	2b00      	cmp	r3, #0
 8023312:	da24      	bge.n	802335e <floorf+0x76>
 8023314:	2900      	cmp	r1, #0
 8023316:	4b14      	ldr	r3, [pc, #80]	@ (8023368 <floorf+0x80>)
 8023318:	bf08      	it	eq
 802331a:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802331e:	ee00 3a10 	vmov	s0, r3
 8023322:	4770      	bx	lr
 8023324:	4911      	ldr	r1, [pc, #68]	@ (802336c <floorf+0x84>)
 8023326:	4111      	asrs	r1, r2
 8023328:	420b      	tst	r3, r1
 802332a:	d0fa      	beq.n	8023322 <floorf+0x3a>
 802332c:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8023364 <floorf+0x7c>
 8023330:	ee30 0a27 	vadd.f32	s0, s0, s15
 8023334:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8023338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802333c:	ddef      	ble.n	802331e <floorf+0x36>
 802333e:	2b00      	cmp	r3, #0
 8023340:	bfbe      	ittt	lt
 8023342:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8023346:	fa40 f202 	asrlt.w	r2, r0, r2
 802334a:	189b      	addlt	r3, r3, r2
 802334c:	ea23 0301 	bic.w	r3, r3, r1
 8023350:	e7e5      	b.n	802331e <floorf+0x36>
 8023352:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8023356:	d3e4      	bcc.n	8023322 <floorf+0x3a>
 8023358:	ee30 0a00 	vadd.f32	s0, s0, s0
 802335c:	4770      	bx	lr
 802335e:	2300      	movs	r3, #0
 8023360:	e7dd      	b.n	802331e <floorf+0x36>
 8023362:	bf00      	nop
 8023364:	7149f2ca 	.word	0x7149f2ca
 8023368:	bf800000 	.word	0xbf800000
 802336c:	007fffff 	.word	0x007fffff

08023370 <abort>:
 8023370:	b508      	push	{r3, lr}
 8023372:	2006      	movs	r0, #6
 8023374:	f000 fa72 	bl	802385c <raise>
 8023378:	2001      	movs	r0, #1
 802337a:	f7df fc3f 	bl	8002bfc <_exit>
	...

08023380 <__assert_func>:
 8023380:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8023382:	4614      	mov	r4, r2
 8023384:	461a      	mov	r2, r3
 8023386:	4b09      	ldr	r3, [pc, #36]	@ (80233ac <__assert_func+0x2c>)
 8023388:	681b      	ldr	r3, [r3, #0]
 802338a:	4605      	mov	r5, r0
 802338c:	68d8      	ldr	r0, [r3, #12]
 802338e:	b14c      	cbz	r4, 80233a4 <__assert_func+0x24>
 8023390:	4b07      	ldr	r3, [pc, #28]	@ (80233b0 <__assert_func+0x30>)
 8023392:	9100      	str	r1, [sp, #0]
 8023394:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8023398:	4906      	ldr	r1, [pc, #24]	@ (80233b4 <__assert_func+0x34>)
 802339a:	462b      	mov	r3, r5
 802339c:	f000 f984 	bl	80236a8 <fiprintf>
 80233a0:	f7ff ffe6 	bl	8023370 <abort>
 80233a4:	4b04      	ldr	r3, [pc, #16]	@ (80233b8 <__assert_func+0x38>)
 80233a6:	461c      	mov	r4, r3
 80233a8:	e7f3      	b.n	8023392 <__assert_func+0x12>
 80233aa:	bf00      	nop
 80233ac:	20000220 	.word	0x20000220
 80233b0:	0802533e 	.word	0x0802533e
 80233b4:	0802534b 	.word	0x0802534b
 80233b8:	0802530c 	.word	0x0802530c

080233bc <atexit>:
 80233bc:	2300      	movs	r3, #0
 80233be:	4601      	mov	r1, r0
 80233c0:	461a      	mov	r2, r3
 80233c2:	4618      	mov	r0, r3
 80233c4:	f000 bb56 	b.w	8023a74 <__register_exitproc>

080233c8 <malloc>:
 80233c8:	4b02      	ldr	r3, [pc, #8]	@ (80233d4 <malloc+0xc>)
 80233ca:	4601      	mov	r1, r0
 80233cc:	6818      	ldr	r0, [r3, #0]
 80233ce:	f000 b82d 	b.w	802342c <_malloc_r>
 80233d2:	bf00      	nop
 80233d4:	20000220 	.word	0x20000220

080233d8 <free>:
 80233d8:	4b02      	ldr	r3, [pc, #8]	@ (80233e4 <free+0xc>)
 80233da:	4601      	mov	r1, r0
 80233dc:	6818      	ldr	r0, [r3, #0]
 80233de:	f000 bba5 	b.w	8023b2c <_free_r>
 80233e2:	bf00      	nop
 80233e4:	20000220 	.word	0x20000220

080233e8 <sbrk_aligned>:
 80233e8:	b570      	push	{r4, r5, r6, lr}
 80233ea:	4e0f      	ldr	r6, [pc, #60]	@ (8023428 <sbrk_aligned+0x40>)
 80233ec:	460c      	mov	r4, r1
 80233ee:	6831      	ldr	r1, [r6, #0]
 80233f0:	4605      	mov	r5, r0
 80233f2:	b911      	cbnz	r1, 80233fa <sbrk_aligned+0x12>
 80233f4:	f000 fae0 	bl	80239b8 <_sbrk_r>
 80233f8:	6030      	str	r0, [r6, #0]
 80233fa:	4621      	mov	r1, r4
 80233fc:	4628      	mov	r0, r5
 80233fe:	f000 fadb 	bl	80239b8 <_sbrk_r>
 8023402:	1c43      	adds	r3, r0, #1
 8023404:	d103      	bne.n	802340e <sbrk_aligned+0x26>
 8023406:	f04f 34ff 	mov.w	r4, #4294967295
 802340a:	4620      	mov	r0, r4
 802340c:	bd70      	pop	{r4, r5, r6, pc}
 802340e:	1cc4      	adds	r4, r0, #3
 8023410:	f024 0403 	bic.w	r4, r4, #3
 8023414:	42a0      	cmp	r0, r4
 8023416:	d0f8      	beq.n	802340a <sbrk_aligned+0x22>
 8023418:	1a21      	subs	r1, r4, r0
 802341a:	4628      	mov	r0, r5
 802341c:	f000 facc 	bl	80239b8 <_sbrk_r>
 8023420:	3001      	adds	r0, #1
 8023422:	d1f2      	bne.n	802340a <sbrk_aligned+0x22>
 8023424:	e7ef      	b.n	8023406 <sbrk_aligned+0x1e>
 8023426:	bf00      	nop
 8023428:	20014a9c 	.word	0x20014a9c

0802342c <_malloc_r>:
 802342c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023430:	1ccd      	adds	r5, r1, #3
 8023432:	f025 0503 	bic.w	r5, r5, #3
 8023436:	3508      	adds	r5, #8
 8023438:	2d0c      	cmp	r5, #12
 802343a:	bf38      	it	cc
 802343c:	250c      	movcc	r5, #12
 802343e:	2d00      	cmp	r5, #0
 8023440:	4606      	mov	r6, r0
 8023442:	db01      	blt.n	8023448 <_malloc_r+0x1c>
 8023444:	42a9      	cmp	r1, r5
 8023446:	d904      	bls.n	8023452 <_malloc_r+0x26>
 8023448:	230c      	movs	r3, #12
 802344a:	6033      	str	r3, [r6, #0]
 802344c:	2000      	movs	r0, #0
 802344e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023452:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8023528 <_malloc_r+0xfc>
 8023456:	f000 f869 	bl	802352c <__malloc_lock>
 802345a:	f8d8 3000 	ldr.w	r3, [r8]
 802345e:	461c      	mov	r4, r3
 8023460:	bb44      	cbnz	r4, 80234b4 <_malloc_r+0x88>
 8023462:	4629      	mov	r1, r5
 8023464:	4630      	mov	r0, r6
 8023466:	f7ff ffbf 	bl	80233e8 <sbrk_aligned>
 802346a:	1c43      	adds	r3, r0, #1
 802346c:	4604      	mov	r4, r0
 802346e:	d158      	bne.n	8023522 <_malloc_r+0xf6>
 8023470:	f8d8 4000 	ldr.w	r4, [r8]
 8023474:	4627      	mov	r7, r4
 8023476:	2f00      	cmp	r7, #0
 8023478:	d143      	bne.n	8023502 <_malloc_r+0xd6>
 802347a:	2c00      	cmp	r4, #0
 802347c:	d04b      	beq.n	8023516 <_malloc_r+0xea>
 802347e:	6823      	ldr	r3, [r4, #0]
 8023480:	4639      	mov	r1, r7
 8023482:	4630      	mov	r0, r6
 8023484:	eb04 0903 	add.w	r9, r4, r3
 8023488:	f000 fa96 	bl	80239b8 <_sbrk_r>
 802348c:	4581      	cmp	r9, r0
 802348e:	d142      	bne.n	8023516 <_malloc_r+0xea>
 8023490:	6821      	ldr	r1, [r4, #0]
 8023492:	1a6d      	subs	r5, r5, r1
 8023494:	4629      	mov	r1, r5
 8023496:	4630      	mov	r0, r6
 8023498:	f7ff ffa6 	bl	80233e8 <sbrk_aligned>
 802349c:	3001      	adds	r0, #1
 802349e:	d03a      	beq.n	8023516 <_malloc_r+0xea>
 80234a0:	6823      	ldr	r3, [r4, #0]
 80234a2:	442b      	add	r3, r5
 80234a4:	6023      	str	r3, [r4, #0]
 80234a6:	f8d8 3000 	ldr.w	r3, [r8]
 80234aa:	685a      	ldr	r2, [r3, #4]
 80234ac:	bb62      	cbnz	r2, 8023508 <_malloc_r+0xdc>
 80234ae:	f8c8 7000 	str.w	r7, [r8]
 80234b2:	e00f      	b.n	80234d4 <_malloc_r+0xa8>
 80234b4:	6822      	ldr	r2, [r4, #0]
 80234b6:	1b52      	subs	r2, r2, r5
 80234b8:	d420      	bmi.n	80234fc <_malloc_r+0xd0>
 80234ba:	2a0b      	cmp	r2, #11
 80234bc:	d917      	bls.n	80234ee <_malloc_r+0xc2>
 80234be:	1961      	adds	r1, r4, r5
 80234c0:	42a3      	cmp	r3, r4
 80234c2:	6025      	str	r5, [r4, #0]
 80234c4:	bf18      	it	ne
 80234c6:	6059      	strne	r1, [r3, #4]
 80234c8:	6863      	ldr	r3, [r4, #4]
 80234ca:	bf08      	it	eq
 80234cc:	f8c8 1000 	streq.w	r1, [r8]
 80234d0:	5162      	str	r2, [r4, r5]
 80234d2:	604b      	str	r3, [r1, #4]
 80234d4:	4630      	mov	r0, r6
 80234d6:	f000 f82f 	bl	8023538 <__malloc_unlock>
 80234da:	f104 000b 	add.w	r0, r4, #11
 80234de:	1d23      	adds	r3, r4, #4
 80234e0:	f020 0007 	bic.w	r0, r0, #7
 80234e4:	1ac2      	subs	r2, r0, r3
 80234e6:	bf1c      	itt	ne
 80234e8:	1a1b      	subne	r3, r3, r0
 80234ea:	50a3      	strne	r3, [r4, r2]
 80234ec:	e7af      	b.n	802344e <_malloc_r+0x22>
 80234ee:	6862      	ldr	r2, [r4, #4]
 80234f0:	42a3      	cmp	r3, r4
 80234f2:	bf0c      	ite	eq
 80234f4:	f8c8 2000 	streq.w	r2, [r8]
 80234f8:	605a      	strne	r2, [r3, #4]
 80234fa:	e7eb      	b.n	80234d4 <_malloc_r+0xa8>
 80234fc:	4623      	mov	r3, r4
 80234fe:	6864      	ldr	r4, [r4, #4]
 8023500:	e7ae      	b.n	8023460 <_malloc_r+0x34>
 8023502:	463c      	mov	r4, r7
 8023504:	687f      	ldr	r7, [r7, #4]
 8023506:	e7b6      	b.n	8023476 <_malloc_r+0x4a>
 8023508:	461a      	mov	r2, r3
 802350a:	685b      	ldr	r3, [r3, #4]
 802350c:	42a3      	cmp	r3, r4
 802350e:	d1fb      	bne.n	8023508 <_malloc_r+0xdc>
 8023510:	2300      	movs	r3, #0
 8023512:	6053      	str	r3, [r2, #4]
 8023514:	e7de      	b.n	80234d4 <_malloc_r+0xa8>
 8023516:	230c      	movs	r3, #12
 8023518:	6033      	str	r3, [r6, #0]
 802351a:	4630      	mov	r0, r6
 802351c:	f000 f80c 	bl	8023538 <__malloc_unlock>
 8023520:	e794      	b.n	802344c <_malloc_r+0x20>
 8023522:	6005      	str	r5, [r0, #0]
 8023524:	e7d6      	b.n	80234d4 <_malloc_r+0xa8>
 8023526:	bf00      	nop
 8023528:	20014aa0 	.word	0x20014aa0

0802352c <__malloc_lock>:
 802352c:	4801      	ldr	r0, [pc, #4]	@ (8023534 <__malloc_lock+0x8>)
 802352e:	f000 ba90 	b.w	8023a52 <__retarget_lock_acquire_recursive>
 8023532:	bf00      	nop
 8023534:	20014be4 	.word	0x20014be4

08023538 <__malloc_unlock>:
 8023538:	4801      	ldr	r0, [pc, #4]	@ (8023540 <__malloc_unlock+0x8>)
 802353a:	f000 ba8b 	b.w	8023a54 <__retarget_lock_release_recursive>
 802353e:	bf00      	nop
 8023540:	20014be4 	.word	0x20014be4

08023544 <__cxa_atexit>:
 8023544:	b510      	push	{r4, lr}
 8023546:	4604      	mov	r4, r0
 8023548:	4804      	ldr	r0, [pc, #16]	@ (802355c <__cxa_atexit+0x18>)
 802354a:	4613      	mov	r3, r2
 802354c:	b120      	cbz	r0, 8023558 <__cxa_atexit+0x14>
 802354e:	460a      	mov	r2, r1
 8023550:	2002      	movs	r0, #2
 8023552:	4621      	mov	r1, r4
 8023554:	f000 fa8e 	bl	8023a74 <__register_exitproc>
 8023558:	bd10      	pop	{r4, pc}
 802355a:	bf00      	nop
 802355c:	08023a75 	.word	0x08023a75

08023560 <std>:
 8023560:	2300      	movs	r3, #0
 8023562:	b510      	push	{r4, lr}
 8023564:	4604      	mov	r4, r0
 8023566:	e9c0 3300 	strd	r3, r3, [r0]
 802356a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802356e:	6083      	str	r3, [r0, #8]
 8023570:	8181      	strh	r1, [r0, #12]
 8023572:	6643      	str	r3, [r0, #100]	@ 0x64
 8023574:	81c2      	strh	r2, [r0, #14]
 8023576:	6183      	str	r3, [r0, #24]
 8023578:	4619      	mov	r1, r3
 802357a:	2208      	movs	r2, #8
 802357c:	305c      	adds	r0, #92	@ 0x5c
 802357e:	f000 f93c 	bl	80237fa <memset>
 8023582:	4b0d      	ldr	r3, [pc, #52]	@ (80235b8 <std+0x58>)
 8023584:	6263      	str	r3, [r4, #36]	@ 0x24
 8023586:	4b0d      	ldr	r3, [pc, #52]	@ (80235bc <std+0x5c>)
 8023588:	62a3      	str	r3, [r4, #40]	@ 0x28
 802358a:	4b0d      	ldr	r3, [pc, #52]	@ (80235c0 <std+0x60>)
 802358c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802358e:	4b0d      	ldr	r3, [pc, #52]	@ (80235c4 <std+0x64>)
 8023590:	6323      	str	r3, [r4, #48]	@ 0x30
 8023592:	4b0d      	ldr	r3, [pc, #52]	@ (80235c8 <std+0x68>)
 8023594:	6224      	str	r4, [r4, #32]
 8023596:	429c      	cmp	r4, r3
 8023598:	d006      	beq.n	80235a8 <std+0x48>
 802359a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802359e:	4294      	cmp	r4, r2
 80235a0:	d002      	beq.n	80235a8 <std+0x48>
 80235a2:	33d0      	adds	r3, #208	@ 0xd0
 80235a4:	429c      	cmp	r4, r3
 80235a6:	d105      	bne.n	80235b4 <std+0x54>
 80235a8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80235ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80235b0:	f000 ba4e 	b.w	8023a50 <__retarget_lock_init_recursive>
 80235b4:	bd10      	pop	{r4, pc}
 80235b6:	bf00      	nop
 80235b8:	08023775 	.word	0x08023775
 80235bc:	08023797 	.word	0x08023797
 80235c0:	080237cf 	.word	0x080237cf
 80235c4:	080237f3 	.word	0x080237f3
 80235c8:	20014aa4 	.word	0x20014aa4

080235cc <stdio_exit_handler>:
 80235cc:	4a02      	ldr	r2, [pc, #8]	@ (80235d8 <stdio_exit_handler+0xc>)
 80235ce:	4903      	ldr	r1, [pc, #12]	@ (80235dc <stdio_exit_handler+0x10>)
 80235d0:	4803      	ldr	r0, [pc, #12]	@ (80235e0 <stdio_exit_handler+0x14>)
 80235d2:	f000 b87b 	b.w	80236cc <_fwalk_sglue>
 80235d6:	bf00      	nop
 80235d8:	20000214 	.word	0x20000214
 80235dc:	08024515 	.word	0x08024515
 80235e0:	20000224 	.word	0x20000224

080235e4 <cleanup_stdio>:
 80235e4:	6841      	ldr	r1, [r0, #4]
 80235e6:	4b0c      	ldr	r3, [pc, #48]	@ (8023618 <cleanup_stdio+0x34>)
 80235e8:	4299      	cmp	r1, r3
 80235ea:	b510      	push	{r4, lr}
 80235ec:	4604      	mov	r4, r0
 80235ee:	d001      	beq.n	80235f4 <cleanup_stdio+0x10>
 80235f0:	f000 ff90 	bl	8024514 <_fflush_r>
 80235f4:	68a1      	ldr	r1, [r4, #8]
 80235f6:	4b09      	ldr	r3, [pc, #36]	@ (802361c <cleanup_stdio+0x38>)
 80235f8:	4299      	cmp	r1, r3
 80235fa:	d002      	beq.n	8023602 <cleanup_stdio+0x1e>
 80235fc:	4620      	mov	r0, r4
 80235fe:	f000 ff89 	bl	8024514 <_fflush_r>
 8023602:	68e1      	ldr	r1, [r4, #12]
 8023604:	4b06      	ldr	r3, [pc, #24]	@ (8023620 <cleanup_stdio+0x3c>)
 8023606:	4299      	cmp	r1, r3
 8023608:	d004      	beq.n	8023614 <cleanup_stdio+0x30>
 802360a:	4620      	mov	r0, r4
 802360c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023610:	f000 bf80 	b.w	8024514 <_fflush_r>
 8023614:	bd10      	pop	{r4, pc}
 8023616:	bf00      	nop
 8023618:	20014aa4 	.word	0x20014aa4
 802361c:	20014b0c 	.word	0x20014b0c
 8023620:	20014b74 	.word	0x20014b74

08023624 <global_stdio_init.part.0>:
 8023624:	b510      	push	{r4, lr}
 8023626:	4b0b      	ldr	r3, [pc, #44]	@ (8023654 <global_stdio_init.part.0+0x30>)
 8023628:	4c0b      	ldr	r4, [pc, #44]	@ (8023658 <global_stdio_init.part.0+0x34>)
 802362a:	4a0c      	ldr	r2, [pc, #48]	@ (802365c <global_stdio_init.part.0+0x38>)
 802362c:	601a      	str	r2, [r3, #0]
 802362e:	4620      	mov	r0, r4
 8023630:	2200      	movs	r2, #0
 8023632:	2104      	movs	r1, #4
 8023634:	f7ff ff94 	bl	8023560 <std>
 8023638:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802363c:	2201      	movs	r2, #1
 802363e:	2109      	movs	r1, #9
 8023640:	f7ff ff8e 	bl	8023560 <std>
 8023644:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8023648:	2202      	movs	r2, #2
 802364a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802364e:	2112      	movs	r1, #18
 8023650:	f7ff bf86 	b.w	8023560 <std>
 8023654:	20014bdc 	.word	0x20014bdc
 8023658:	20014aa4 	.word	0x20014aa4
 802365c:	080235cd 	.word	0x080235cd

08023660 <__sfp_lock_acquire>:
 8023660:	4801      	ldr	r0, [pc, #4]	@ (8023668 <__sfp_lock_acquire+0x8>)
 8023662:	f000 b9f6 	b.w	8023a52 <__retarget_lock_acquire_recursive>
 8023666:	bf00      	nop
 8023668:	20014be6 	.word	0x20014be6

0802366c <__sfp_lock_release>:
 802366c:	4801      	ldr	r0, [pc, #4]	@ (8023674 <__sfp_lock_release+0x8>)
 802366e:	f000 b9f1 	b.w	8023a54 <__retarget_lock_release_recursive>
 8023672:	bf00      	nop
 8023674:	20014be6 	.word	0x20014be6

08023678 <__sinit>:
 8023678:	b510      	push	{r4, lr}
 802367a:	4604      	mov	r4, r0
 802367c:	f7ff fff0 	bl	8023660 <__sfp_lock_acquire>
 8023680:	6a23      	ldr	r3, [r4, #32]
 8023682:	b11b      	cbz	r3, 802368c <__sinit+0x14>
 8023684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023688:	f7ff bff0 	b.w	802366c <__sfp_lock_release>
 802368c:	4b04      	ldr	r3, [pc, #16]	@ (80236a0 <__sinit+0x28>)
 802368e:	6223      	str	r3, [r4, #32]
 8023690:	4b04      	ldr	r3, [pc, #16]	@ (80236a4 <__sinit+0x2c>)
 8023692:	681b      	ldr	r3, [r3, #0]
 8023694:	2b00      	cmp	r3, #0
 8023696:	d1f5      	bne.n	8023684 <__sinit+0xc>
 8023698:	f7ff ffc4 	bl	8023624 <global_stdio_init.part.0>
 802369c:	e7f2      	b.n	8023684 <__sinit+0xc>
 802369e:	bf00      	nop
 80236a0:	080235e5 	.word	0x080235e5
 80236a4:	20014bdc 	.word	0x20014bdc

080236a8 <fiprintf>:
 80236a8:	b40e      	push	{r1, r2, r3}
 80236aa:	b503      	push	{r0, r1, lr}
 80236ac:	4601      	mov	r1, r0
 80236ae:	ab03      	add	r3, sp, #12
 80236b0:	4805      	ldr	r0, [pc, #20]	@ (80236c8 <fiprintf+0x20>)
 80236b2:	f853 2b04 	ldr.w	r2, [r3], #4
 80236b6:	6800      	ldr	r0, [r0, #0]
 80236b8:	9301      	str	r3, [sp, #4]
 80236ba:	f000 fc03 	bl	8023ec4 <_vfiprintf_r>
 80236be:	b002      	add	sp, #8
 80236c0:	f85d eb04 	ldr.w	lr, [sp], #4
 80236c4:	b003      	add	sp, #12
 80236c6:	4770      	bx	lr
 80236c8:	20000220 	.word	0x20000220

080236cc <_fwalk_sglue>:
 80236cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80236d0:	4607      	mov	r7, r0
 80236d2:	4688      	mov	r8, r1
 80236d4:	4614      	mov	r4, r2
 80236d6:	2600      	movs	r6, #0
 80236d8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80236dc:	f1b9 0901 	subs.w	r9, r9, #1
 80236e0:	d505      	bpl.n	80236ee <_fwalk_sglue+0x22>
 80236e2:	6824      	ldr	r4, [r4, #0]
 80236e4:	2c00      	cmp	r4, #0
 80236e6:	d1f7      	bne.n	80236d8 <_fwalk_sglue+0xc>
 80236e8:	4630      	mov	r0, r6
 80236ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80236ee:	89ab      	ldrh	r3, [r5, #12]
 80236f0:	2b01      	cmp	r3, #1
 80236f2:	d907      	bls.n	8023704 <_fwalk_sglue+0x38>
 80236f4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80236f8:	3301      	adds	r3, #1
 80236fa:	d003      	beq.n	8023704 <_fwalk_sglue+0x38>
 80236fc:	4629      	mov	r1, r5
 80236fe:	4638      	mov	r0, r7
 8023700:	47c0      	blx	r8
 8023702:	4306      	orrs	r6, r0
 8023704:	3568      	adds	r5, #104	@ 0x68
 8023706:	e7e9      	b.n	80236dc <_fwalk_sglue+0x10>

08023708 <sniprintf>:
 8023708:	b40c      	push	{r2, r3}
 802370a:	b530      	push	{r4, r5, lr}
 802370c:	4b18      	ldr	r3, [pc, #96]	@ (8023770 <sniprintf+0x68>)
 802370e:	1e0c      	subs	r4, r1, #0
 8023710:	681d      	ldr	r5, [r3, #0]
 8023712:	b09d      	sub	sp, #116	@ 0x74
 8023714:	da08      	bge.n	8023728 <sniprintf+0x20>
 8023716:	238b      	movs	r3, #139	@ 0x8b
 8023718:	602b      	str	r3, [r5, #0]
 802371a:	f04f 30ff 	mov.w	r0, #4294967295
 802371e:	b01d      	add	sp, #116	@ 0x74
 8023720:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8023724:	b002      	add	sp, #8
 8023726:	4770      	bx	lr
 8023728:	f44f 7302 	mov.w	r3, #520	@ 0x208
 802372c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8023730:	f04f 0300 	mov.w	r3, #0
 8023734:	931b      	str	r3, [sp, #108]	@ 0x6c
 8023736:	bf14      	ite	ne
 8023738:	f104 33ff 	addne.w	r3, r4, #4294967295
 802373c:	4623      	moveq	r3, r4
 802373e:	9304      	str	r3, [sp, #16]
 8023740:	9307      	str	r3, [sp, #28]
 8023742:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8023746:	9002      	str	r0, [sp, #8]
 8023748:	9006      	str	r0, [sp, #24]
 802374a:	f8ad 3016 	strh.w	r3, [sp, #22]
 802374e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8023750:	ab21      	add	r3, sp, #132	@ 0x84
 8023752:	a902      	add	r1, sp, #8
 8023754:	4628      	mov	r0, r5
 8023756:	9301      	str	r3, [sp, #4]
 8023758:	f000 fa8e 	bl	8023c78 <_svfiprintf_r>
 802375c:	1c43      	adds	r3, r0, #1
 802375e:	bfbc      	itt	lt
 8023760:	238b      	movlt	r3, #139	@ 0x8b
 8023762:	602b      	strlt	r3, [r5, #0]
 8023764:	2c00      	cmp	r4, #0
 8023766:	d0da      	beq.n	802371e <sniprintf+0x16>
 8023768:	9b02      	ldr	r3, [sp, #8]
 802376a:	2200      	movs	r2, #0
 802376c:	701a      	strb	r2, [r3, #0]
 802376e:	e7d6      	b.n	802371e <sniprintf+0x16>
 8023770:	20000220 	.word	0x20000220

08023774 <__sread>:
 8023774:	b510      	push	{r4, lr}
 8023776:	460c      	mov	r4, r1
 8023778:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802377c:	f000 f8f6 	bl	802396c <_read_r>
 8023780:	2800      	cmp	r0, #0
 8023782:	bfab      	itete	ge
 8023784:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8023786:	89a3      	ldrhlt	r3, [r4, #12]
 8023788:	181b      	addge	r3, r3, r0
 802378a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802378e:	bfac      	ite	ge
 8023790:	6563      	strge	r3, [r4, #84]	@ 0x54
 8023792:	81a3      	strhlt	r3, [r4, #12]
 8023794:	bd10      	pop	{r4, pc}

08023796 <__swrite>:
 8023796:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802379a:	461f      	mov	r7, r3
 802379c:	898b      	ldrh	r3, [r1, #12]
 802379e:	05db      	lsls	r3, r3, #23
 80237a0:	4605      	mov	r5, r0
 80237a2:	460c      	mov	r4, r1
 80237a4:	4616      	mov	r6, r2
 80237a6:	d505      	bpl.n	80237b4 <__swrite+0x1e>
 80237a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80237ac:	2302      	movs	r3, #2
 80237ae:	2200      	movs	r2, #0
 80237b0:	f000 f8ca 	bl	8023948 <_lseek_r>
 80237b4:	89a3      	ldrh	r3, [r4, #12]
 80237b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80237ba:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80237be:	81a3      	strh	r3, [r4, #12]
 80237c0:	4632      	mov	r2, r6
 80237c2:	463b      	mov	r3, r7
 80237c4:	4628      	mov	r0, r5
 80237c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80237ca:	f000 b905 	b.w	80239d8 <_write_r>

080237ce <__sseek>:
 80237ce:	b510      	push	{r4, lr}
 80237d0:	460c      	mov	r4, r1
 80237d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80237d6:	f000 f8b7 	bl	8023948 <_lseek_r>
 80237da:	1c43      	adds	r3, r0, #1
 80237dc:	89a3      	ldrh	r3, [r4, #12]
 80237de:	bf15      	itete	ne
 80237e0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80237e2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80237e6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80237ea:	81a3      	strheq	r3, [r4, #12]
 80237ec:	bf18      	it	ne
 80237ee:	81a3      	strhne	r3, [r4, #12]
 80237f0:	bd10      	pop	{r4, pc}

080237f2 <__sclose>:
 80237f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80237f6:	f000 b839 	b.w	802386c <_close_r>

080237fa <memset>:
 80237fa:	4402      	add	r2, r0
 80237fc:	4603      	mov	r3, r0
 80237fe:	4293      	cmp	r3, r2
 8023800:	d100      	bne.n	8023804 <memset+0xa>
 8023802:	4770      	bx	lr
 8023804:	f803 1b01 	strb.w	r1, [r3], #1
 8023808:	e7f9      	b.n	80237fe <memset+0x4>

0802380a <_raise_r>:
 802380a:	291f      	cmp	r1, #31
 802380c:	b538      	push	{r3, r4, r5, lr}
 802380e:	4605      	mov	r5, r0
 8023810:	460c      	mov	r4, r1
 8023812:	d904      	bls.n	802381e <_raise_r+0x14>
 8023814:	2316      	movs	r3, #22
 8023816:	6003      	str	r3, [r0, #0]
 8023818:	f04f 30ff 	mov.w	r0, #4294967295
 802381c:	bd38      	pop	{r3, r4, r5, pc}
 802381e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8023820:	b112      	cbz	r2, 8023828 <_raise_r+0x1e>
 8023822:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8023826:	b94b      	cbnz	r3, 802383c <_raise_r+0x32>
 8023828:	4628      	mov	r0, r5
 802382a:	f000 f8c3 	bl	80239b4 <_getpid_r>
 802382e:	4622      	mov	r2, r4
 8023830:	4601      	mov	r1, r0
 8023832:	4628      	mov	r0, r5
 8023834:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023838:	f000 b8aa 	b.w	8023990 <_kill_r>
 802383c:	2b01      	cmp	r3, #1
 802383e:	d00a      	beq.n	8023856 <_raise_r+0x4c>
 8023840:	1c59      	adds	r1, r3, #1
 8023842:	d103      	bne.n	802384c <_raise_r+0x42>
 8023844:	2316      	movs	r3, #22
 8023846:	6003      	str	r3, [r0, #0]
 8023848:	2001      	movs	r0, #1
 802384a:	e7e7      	b.n	802381c <_raise_r+0x12>
 802384c:	2100      	movs	r1, #0
 802384e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8023852:	4620      	mov	r0, r4
 8023854:	4798      	blx	r3
 8023856:	2000      	movs	r0, #0
 8023858:	e7e0      	b.n	802381c <_raise_r+0x12>
	...

0802385c <raise>:
 802385c:	4b02      	ldr	r3, [pc, #8]	@ (8023868 <raise+0xc>)
 802385e:	4601      	mov	r1, r0
 8023860:	6818      	ldr	r0, [r3, #0]
 8023862:	f7ff bfd2 	b.w	802380a <_raise_r>
 8023866:	bf00      	nop
 8023868:	20000220 	.word	0x20000220

0802386c <_close_r>:
 802386c:	b538      	push	{r3, r4, r5, lr}
 802386e:	4d06      	ldr	r5, [pc, #24]	@ (8023888 <_close_r+0x1c>)
 8023870:	2300      	movs	r3, #0
 8023872:	4604      	mov	r4, r0
 8023874:	4608      	mov	r0, r1
 8023876:	602b      	str	r3, [r5, #0]
 8023878:	f7df f9e2 	bl	8002c40 <_close>
 802387c:	1c43      	adds	r3, r0, #1
 802387e:	d102      	bne.n	8023886 <_close_r+0x1a>
 8023880:	682b      	ldr	r3, [r5, #0]
 8023882:	b103      	cbz	r3, 8023886 <_close_r+0x1a>
 8023884:	6023      	str	r3, [r4, #0]
 8023886:	bd38      	pop	{r3, r4, r5, pc}
 8023888:	20014be0 	.word	0x20014be0

0802388c <_reclaim_reent>:
 802388c:	4b2d      	ldr	r3, [pc, #180]	@ (8023944 <_reclaim_reent+0xb8>)
 802388e:	681b      	ldr	r3, [r3, #0]
 8023890:	4283      	cmp	r3, r0
 8023892:	b570      	push	{r4, r5, r6, lr}
 8023894:	4604      	mov	r4, r0
 8023896:	d053      	beq.n	8023940 <_reclaim_reent+0xb4>
 8023898:	69c3      	ldr	r3, [r0, #28]
 802389a:	b31b      	cbz	r3, 80238e4 <_reclaim_reent+0x58>
 802389c:	68db      	ldr	r3, [r3, #12]
 802389e:	b163      	cbz	r3, 80238ba <_reclaim_reent+0x2e>
 80238a0:	2500      	movs	r5, #0
 80238a2:	69e3      	ldr	r3, [r4, #28]
 80238a4:	68db      	ldr	r3, [r3, #12]
 80238a6:	5959      	ldr	r1, [r3, r5]
 80238a8:	b9b1      	cbnz	r1, 80238d8 <_reclaim_reent+0x4c>
 80238aa:	3504      	adds	r5, #4
 80238ac:	2d80      	cmp	r5, #128	@ 0x80
 80238ae:	d1f8      	bne.n	80238a2 <_reclaim_reent+0x16>
 80238b0:	69e3      	ldr	r3, [r4, #28]
 80238b2:	4620      	mov	r0, r4
 80238b4:	68d9      	ldr	r1, [r3, #12]
 80238b6:	f000 f939 	bl	8023b2c <_free_r>
 80238ba:	69e3      	ldr	r3, [r4, #28]
 80238bc:	6819      	ldr	r1, [r3, #0]
 80238be:	b111      	cbz	r1, 80238c6 <_reclaim_reent+0x3a>
 80238c0:	4620      	mov	r0, r4
 80238c2:	f000 f933 	bl	8023b2c <_free_r>
 80238c6:	69e3      	ldr	r3, [r4, #28]
 80238c8:	689d      	ldr	r5, [r3, #8]
 80238ca:	b15d      	cbz	r5, 80238e4 <_reclaim_reent+0x58>
 80238cc:	4629      	mov	r1, r5
 80238ce:	4620      	mov	r0, r4
 80238d0:	682d      	ldr	r5, [r5, #0]
 80238d2:	f000 f92b 	bl	8023b2c <_free_r>
 80238d6:	e7f8      	b.n	80238ca <_reclaim_reent+0x3e>
 80238d8:	680e      	ldr	r6, [r1, #0]
 80238da:	4620      	mov	r0, r4
 80238dc:	f000 f926 	bl	8023b2c <_free_r>
 80238e0:	4631      	mov	r1, r6
 80238e2:	e7e1      	b.n	80238a8 <_reclaim_reent+0x1c>
 80238e4:	6961      	ldr	r1, [r4, #20]
 80238e6:	b111      	cbz	r1, 80238ee <_reclaim_reent+0x62>
 80238e8:	4620      	mov	r0, r4
 80238ea:	f000 f91f 	bl	8023b2c <_free_r>
 80238ee:	69e1      	ldr	r1, [r4, #28]
 80238f0:	b111      	cbz	r1, 80238f8 <_reclaim_reent+0x6c>
 80238f2:	4620      	mov	r0, r4
 80238f4:	f000 f91a 	bl	8023b2c <_free_r>
 80238f8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80238fa:	b111      	cbz	r1, 8023902 <_reclaim_reent+0x76>
 80238fc:	4620      	mov	r0, r4
 80238fe:	f000 f915 	bl	8023b2c <_free_r>
 8023902:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8023904:	b111      	cbz	r1, 802390c <_reclaim_reent+0x80>
 8023906:	4620      	mov	r0, r4
 8023908:	f000 f910 	bl	8023b2c <_free_r>
 802390c:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 802390e:	b111      	cbz	r1, 8023916 <_reclaim_reent+0x8a>
 8023910:	4620      	mov	r0, r4
 8023912:	f000 f90b 	bl	8023b2c <_free_r>
 8023916:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8023918:	b111      	cbz	r1, 8023920 <_reclaim_reent+0x94>
 802391a:	4620      	mov	r0, r4
 802391c:	f000 f906 	bl	8023b2c <_free_r>
 8023920:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8023922:	b111      	cbz	r1, 802392a <_reclaim_reent+0x9e>
 8023924:	4620      	mov	r0, r4
 8023926:	f000 f901 	bl	8023b2c <_free_r>
 802392a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 802392c:	b111      	cbz	r1, 8023934 <_reclaim_reent+0xa8>
 802392e:	4620      	mov	r0, r4
 8023930:	f000 f8fc 	bl	8023b2c <_free_r>
 8023934:	6a23      	ldr	r3, [r4, #32]
 8023936:	b11b      	cbz	r3, 8023940 <_reclaim_reent+0xb4>
 8023938:	4620      	mov	r0, r4
 802393a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802393e:	4718      	bx	r3
 8023940:	bd70      	pop	{r4, r5, r6, pc}
 8023942:	bf00      	nop
 8023944:	20000220 	.word	0x20000220

08023948 <_lseek_r>:
 8023948:	b538      	push	{r3, r4, r5, lr}
 802394a:	4d07      	ldr	r5, [pc, #28]	@ (8023968 <_lseek_r+0x20>)
 802394c:	4604      	mov	r4, r0
 802394e:	4608      	mov	r0, r1
 8023950:	4611      	mov	r1, r2
 8023952:	2200      	movs	r2, #0
 8023954:	602a      	str	r2, [r5, #0]
 8023956:	461a      	mov	r2, r3
 8023958:	f7df f97c 	bl	8002c54 <_lseek>
 802395c:	1c43      	adds	r3, r0, #1
 802395e:	d102      	bne.n	8023966 <_lseek_r+0x1e>
 8023960:	682b      	ldr	r3, [r5, #0]
 8023962:	b103      	cbz	r3, 8023966 <_lseek_r+0x1e>
 8023964:	6023      	str	r3, [r4, #0]
 8023966:	bd38      	pop	{r3, r4, r5, pc}
 8023968:	20014be0 	.word	0x20014be0

0802396c <_read_r>:
 802396c:	b538      	push	{r3, r4, r5, lr}
 802396e:	4d07      	ldr	r5, [pc, #28]	@ (802398c <_read_r+0x20>)
 8023970:	4604      	mov	r4, r0
 8023972:	4608      	mov	r0, r1
 8023974:	4611      	mov	r1, r2
 8023976:	2200      	movs	r2, #0
 8023978:	602a      	str	r2, [r5, #0]
 802397a:	461a      	mov	r2, r3
 802397c:	f7df f944 	bl	8002c08 <_read>
 8023980:	1c43      	adds	r3, r0, #1
 8023982:	d102      	bne.n	802398a <_read_r+0x1e>
 8023984:	682b      	ldr	r3, [r5, #0]
 8023986:	b103      	cbz	r3, 802398a <_read_r+0x1e>
 8023988:	6023      	str	r3, [r4, #0]
 802398a:	bd38      	pop	{r3, r4, r5, pc}
 802398c:	20014be0 	.word	0x20014be0

08023990 <_kill_r>:
 8023990:	b538      	push	{r3, r4, r5, lr}
 8023992:	4d07      	ldr	r5, [pc, #28]	@ (80239b0 <_kill_r+0x20>)
 8023994:	2300      	movs	r3, #0
 8023996:	4604      	mov	r4, r0
 8023998:	4608      	mov	r0, r1
 802399a:	4611      	mov	r1, r2
 802399c:	602b      	str	r3, [r5, #0]
 802399e:	f7df f925 	bl	8002bec <_kill>
 80239a2:	1c43      	adds	r3, r0, #1
 80239a4:	d102      	bne.n	80239ac <_kill_r+0x1c>
 80239a6:	682b      	ldr	r3, [r5, #0]
 80239a8:	b103      	cbz	r3, 80239ac <_kill_r+0x1c>
 80239aa:	6023      	str	r3, [r4, #0]
 80239ac:	bd38      	pop	{r3, r4, r5, pc}
 80239ae:	bf00      	nop
 80239b0:	20014be0 	.word	0x20014be0

080239b4 <_getpid_r>:
 80239b4:	f7df b918 	b.w	8002be8 <_getpid>

080239b8 <_sbrk_r>:
 80239b8:	b538      	push	{r3, r4, r5, lr}
 80239ba:	4d06      	ldr	r5, [pc, #24]	@ (80239d4 <_sbrk_r+0x1c>)
 80239bc:	2300      	movs	r3, #0
 80239be:	4604      	mov	r4, r0
 80239c0:	4608      	mov	r0, r1
 80239c2:	602b      	str	r3, [r5, #0]
 80239c4:	f7df f948 	bl	8002c58 <_sbrk>
 80239c8:	1c43      	adds	r3, r0, #1
 80239ca:	d102      	bne.n	80239d2 <_sbrk_r+0x1a>
 80239cc:	682b      	ldr	r3, [r5, #0]
 80239ce:	b103      	cbz	r3, 80239d2 <_sbrk_r+0x1a>
 80239d0:	6023      	str	r3, [r4, #0]
 80239d2:	bd38      	pop	{r3, r4, r5, pc}
 80239d4:	20014be0 	.word	0x20014be0

080239d8 <_write_r>:
 80239d8:	b538      	push	{r3, r4, r5, lr}
 80239da:	4d07      	ldr	r5, [pc, #28]	@ (80239f8 <_write_r+0x20>)
 80239dc:	4604      	mov	r4, r0
 80239de:	4608      	mov	r0, r1
 80239e0:	4611      	mov	r1, r2
 80239e2:	2200      	movs	r2, #0
 80239e4:	602a      	str	r2, [r5, #0]
 80239e6:	461a      	mov	r2, r3
 80239e8:	f7df f91c 	bl	8002c24 <_write>
 80239ec:	1c43      	adds	r3, r0, #1
 80239ee:	d102      	bne.n	80239f6 <_write_r+0x1e>
 80239f0:	682b      	ldr	r3, [r5, #0]
 80239f2:	b103      	cbz	r3, 80239f6 <_write_r+0x1e>
 80239f4:	6023      	str	r3, [r4, #0]
 80239f6:	bd38      	pop	{r3, r4, r5, pc}
 80239f8:	20014be0 	.word	0x20014be0

080239fc <__errno>:
 80239fc:	4b01      	ldr	r3, [pc, #4]	@ (8023a04 <__errno+0x8>)
 80239fe:	6818      	ldr	r0, [r3, #0]
 8023a00:	4770      	bx	lr
 8023a02:	bf00      	nop
 8023a04:	20000220 	.word	0x20000220

08023a08 <__libc_init_array>:
 8023a08:	b570      	push	{r4, r5, r6, lr}
 8023a0a:	4d0d      	ldr	r5, [pc, #52]	@ (8023a40 <__libc_init_array+0x38>)
 8023a0c:	4c0d      	ldr	r4, [pc, #52]	@ (8023a44 <__libc_init_array+0x3c>)
 8023a0e:	1b64      	subs	r4, r4, r5
 8023a10:	10a4      	asrs	r4, r4, #2
 8023a12:	2600      	movs	r6, #0
 8023a14:	42a6      	cmp	r6, r4
 8023a16:	d109      	bne.n	8023a2c <__libc_init_array+0x24>
 8023a18:	4d0b      	ldr	r5, [pc, #44]	@ (8023a48 <__libc_init_array+0x40>)
 8023a1a:	4c0c      	ldr	r4, [pc, #48]	@ (8023a4c <__libc_init_array+0x44>)
 8023a1c:	f000 ff0a 	bl	8024834 <_init>
 8023a20:	1b64      	subs	r4, r4, r5
 8023a22:	10a4      	asrs	r4, r4, #2
 8023a24:	2600      	movs	r6, #0
 8023a26:	42a6      	cmp	r6, r4
 8023a28:	d105      	bne.n	8023a36 <__libc_init_array+0x2e>
 8023a2a:	bd70      	pop	{r4, r5, r6, pc}
 8023a2c:	f855 3b04 	ldr.w	r3, [r5], #4
 8023a30:	4798      	blx	r3
 8023a32:	3601      	adds	r6, #1
 8023a34:	e7ee      	b.n	8023a14 <__libc_init_array+0xc>
 8023a36:	f855 3b04 	ldr.w	r3, [r5], #4
 8023a3a:	4798      	blx	r3
 8023a3c:	3601      	adds	r6, #1
 8023a3e:	e7f2      	b.n	8023a26 <__libc_init_array+0x1e>
 8023a40:	08026738 	.word	0x08026738
 8023a44:	08026738 	.word	0x08026738
 8023a48:	08026738 	.word	0x08026738
 8023a4c:	0802674c 	.word	0x0802674c

08023a50 <__retarget_lock_init_recursive>:
 8023a50:	4770      	bx	lr

08023a52 <__retarget_lock_acquire_recursive>:
 8023a52:	4770      	bx	lr

08023a54 <__retarget_lock_release_recursive>:
 8023a54:	4770      	bx	lr

08023a56 <memcpy>:
 8023a56:	440a      	add	r2, r1
 8023a58:	4291      	cmp	r1, r2
 8023a5a:	f100 33ff 	add.w	r3, r0, #4294967295
 8023a5e:	d100      	bne.n	8023a62 <memcpy+0xc>
 8023a60:	4770      	bx	lr
 8023a62:	b510      	push	{r4, lr}
 8023a64:	f811 4b01 	ldrb.w	r4, [r1], #1
 8023a68:	f803 4f01 	strb.w	r4, [r3, #1]!
 8023a6c:	4291      	cmp	r1, r2
 8023a6e:	d1f9      	bne.n	8023a64 <memcpy+0xe>
 8023a70:	bd10      	pop	{r4, pc}
	...

08023a74 <__register_exitproc>:
 8023a74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023a78:	4d27      	ldr	r5, [pc, #156]	@ (8023b18 <__register_exitproc+0xa4>)
 8023a7a:	4607      	mov	r7, r0
 8023a7c:	6828      	ldr	r0, [r5, #0]
 8023a7e:	4691      	mov	r9, r2
 8023a80:	460e      	mov	r6, r1
 8023a82:	4698      	mov	r8, r3
 8023a84:	f7ff ffe5 	bl	8023a52 <__retarget_lock_acquire_recursive>
 8023a88:	4a24      	ldr	r2, [pc, #144]	@ (8023b1c <__register_exitproc+0xa8>)
 8023a8a:	6814      	ldr	r4, [r2, #0]
 8023a8c:	b93c      	cbnz	r4, 8023a9e <__register_exitproc+0x2a>
 8023a8e:	4b24      	ldr	r3, [pc, #144]	@ (8023b20 <__register_exitproc+0xac>)
 8023a90:	6013      	str	r3, [r2, #0]
 8023a92:	4a24      	ldr	r2, [pc, #144]	@ (8023b24 <__register_exitproc+0xb0>)
 8023a94:	b112      	cbz	r2, 8023a9c <__register_exitproc+0x28>
 8023a96:	6812      	ldr	r2, [r2, #0]
 8023a98:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8023a9c:	4c20      	ldr	r4, [pc, #128]	@ (8023b20 <__register_exitproc+0xac>)
 8023a9e:	6863      	ldr	r3, [r4, #4]
 8023aa0:	2b1f      	cmp	r3, #31
 8023aa2:	dd06      	ble.n	8023ab2 <__register_exitproc+0x3e>
 8023aa4:	6828      	ldr	r0, [r5, #0]
 8023aa6:	f7ff ffd5 	bl	8023a54 <__retarget_lock_release_recursive>
 8023aaa:	f04f 30ff 	mov.w	r0, #4294967295
 8023aae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023ab2:	b32f      	cbz	r7, 8023b00 <__register_exitproc+0x8c>
 8023ab4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8023ab8:	b968      	cbnz	r0, 8023ad6 <__register_exitproc+0x62>
 8023aba:	4b1b      	ldr	r3, [pc, #108]	@ (8023b28 <__register_exitproc+0xb4>)
 8023abc:	2b00      	cmp	r3, #0
 8023abe:	d0f1      	beq.n	8023aa4 <__register_exitproc+0x30>
 8023ac0:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8023ac4:	f7ff fc80 	bl	80233c8 <malloc>
 8023ac8:	2800      	cmp	r0, #0
 8023aca:	d0eb      	beq.n	8023aa4 <__register_exitproc+0x30>
 8023acc:	2300      	movs	r3, #0
 8023ace:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8023ad2:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8023ad6:	6863      	ldr	r3, [r4, #4]
 8023ad8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8023adc:	2201      	movs	r2, #1
 8023ade:	409a      	lsls	r2, r3
 8023ae0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8023ae4:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8023ae8:	4313      	orrs	r3, r2
 8023aea:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8023aee:	2f02      	cmp	r7, #2
 8023af0:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8023af4:	bf02      	ittt	eq
 8023af6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8023afa:	4313      	orreq	r3, r2
 8023afc:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8023b00:	6863      	ldr	r3, [r4, #4]
 8023b02:	6828      	ldr	r0, [r5, #0]
 8023b04:	1c5a      	adds	r2, r3, #1
 8023b06:	3302      	adds	r3, #2
 8023b08:	6062      	str	r2, [r4, #4]
 8023b0a:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8023b0e:	f7ff ffa1 	bl	8023a54 <__retarget_lock_release_recursive>
 8023b12:	2000      	movs	r0, #0
 8023b14:	e7cb      	b.n	8023aae <__register_exitproc+0x3a>
 8023b16:	bf00      	nop
 8023b18:	20000270 	.word	0x20000270
 8023b1c:	20014c74 	.word	0x20014c74
 8023b20:	20014be8 	.word	0x20014be8
 8023b24:	0802655c 	.word	0x0802655c
 8023b28:	080233c9 	.word	0x080233c9

08023b2c <_free_r>:
 8023b2c:	b538      	push	{r3, r4, r5, lr}
 8023b2e:	4605      	mov	r5, r0
 8023b30:	2900      	cmp	r1, #0
 8023b32:	d041      	beq.n	8023bb8 <_free_r+0x8c>
 8023b34:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023b38:	1f0c      	subs	r4, r1, #4
 8023b3a:	2b00      	cmp	r3, #0
 8023b3c:	bfb8      	it	lt
 8023b3e:	18e4      	addlt	r4, r4, r3
 8023b40:	f7ff fcf4 	bl	802352c <__malloc_lock>
 8023b44:	4a1d      	ldr	r2, [pc, #116]	@ (8023bbc <_free_r+0x90>)
 8023b46:	6813      	ldr	r3, [r2, #0]
 8023b48:	b933      	cbnz	r3, 8023b58 <_free_r+0x2c>
 8023b4a:	6063      	str	r3, [r4, #4]
 8023b4c:	6014      	str	r4, [r2, #0]
 8023b4e:	4628      	mov	r0, r5
 8023b50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023b54:	f7ff bcf0 	b.w	8023538 <__malloc_unlock>
 8023b58:	42a3      	cmp	r3, r4
 8023b5a:	d908      	bls.n	8023b6e <_free_r+0x42>
 8023b5c:	6820      	ldr	r0, [r4, #0]
 8023b5e:	1821      	adds	r1, r4, r0
 8023b60:	428b      	cmp	r3, r1
 8023b62:	bf01      	itttt	eq
 8023b64:	6819      	ldreq	r1, [r3, #0]
 8023b66:	685b      	ldreq	r3, [r3, #4]
 8023b68:	1809      	addeq	r1, r1, r0
 8023b6a:	6021      	streq	r1, [r4, #0]
 8023b6c:	e7ed      	b.n	8023b4a <_free_r+0x1e>
 8023b6e:	461a      	mov	r2, r3
 8023b70:	685b      	ldr	r3, [r3, #4]
 8023b72:	b10b      	cbz	r3, 8023b78 <_free_r+0x4c>
 8023b74:	42a3      	cmp	r3, r4
 8023b76:	d9fa      	bls.n	8023b6e <_free_r+0x42>
 8023b78:	6811      	ldr	r1, [r2, #0]
 8023b7a:	1850      	adds	r0, r2, r1
 8023b7c:	42a0      	cmp	r0, r4
 8023b7e:	d10b      	bne.n	8023b98 <_free_r+0x6c>
 8023b80:	6820      	ldr	r0, [r4, #0]
 8023b82:	4401      	add	r1, r0
 8023b84:	1850      	adds	r0, r2, r1
 8023b86:	4283      	cmp	r3, r0
 8023b88:	6011      	str	r1, [r2, #0]
 8023b8a:	d1e0      	bne.n	8023b4e <_free_r+0x22>
 8023b8c:	6818      	ldr	r0, [r3, #0]
 8023b8e:	685b      	ldr	r3, [r3, #4]
 8023b90:	6053      	str	r3, [r2, #4]
 8023b92:	4408      	add	r0, r1
 8023b94:	6010      	str	r0, [r2, #0]
 8023b96:	e7da      	b.n	8023b4e <_free_r+0x22>
 8023b98:	d902      	bls.n	8023ba0 <_free_r+0x74>
 8023b9a:	230c      	movs	r3, #12
 8023b9c:	602b      	str	r3, [r5, #0]
 8023b9e:	e7d6      	b.n	8023b4e <_free_r+0x22>
 8023ba0:	6820      	ldr	r0, [r4, #0]
 8023ba2:	1821      	adds	r1, r4, r0
 8023ba4:	428b      	cmp	r3, r1
 8023ba6:	bf04      	itt	eq
 8023ba8:	6819      	ldreq	r1, [r3, #0]
 8023baa:	685b      	ldreq	r3, [r3, #4]
 8023bac:	6063      	str	r3, [r4, #4]
 8023bae:	bf04      	itt	eq
 8023bb0:	1809      	addeq	r1, r1, r0
 8023bb2:	6021      	streq	r1, [r4, #0]
 8023bb4:	6054      	str	r4, [r2, #4]
 8023bb6:	e7ca      	b.n	8023b4e <_free_r+0x22>
 8023bb8:	bd38      	pop	{r3, r4, r5, pc}
 8023bba:	bf00      	nop
 8023bbc:	20014aa0 	.word	0x20014aa0

08023bc0 <__ssputs_r>:
 8023bc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023bc4:	688e      	ldr	r6, [r1, #8]
 8023bc6:	461f      	mov	r7, r3
 8023bc8:	42be      	cmp	r6, r7
 8023bca:	680b      	ldr	r3, [r1, #0]
 8023bcc:	4682      	mov	sl, r0
 8023bce:	460c      	mov	r4, r1
 8023bd0:	4690      	mov	r8, r2
 8023bd2:	d82d      	bhi.n	8023c30 <__ssputs_r+0x70>
 8023bd4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8023bd8:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8023bdc:	d026      	beq.n	8023c2c <__ssputs_r+0x6c>
 8023bde:	6965      	ldr	r5, [r4, #20]
 8023be0:	6909      	ldr	r1, [r1, #16]
 8023be2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023be6:	eba3 0901 	sub.w	r9, r3, r1
 8023bea:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8023bee:	1c7b      	adds	r3, r7, #1
 8023bf0:	444b      	add	r3, r9
 8023bf2:	106d      	asrs	r5, r5, #1
 8023bf4:	429d      	cmp	r5, r3
 8023bf6:	bf38      	it	cc
 8023bf8:	461d      	movcc	r5, r3
 8023bfa:	0553      	lsls	r3, r2, #21
 8023bfc:	d527      	bpl.n	8023c4e <__ssputs_r+0x8e>
 8023bfe:	4629      	mov	r1, r5
 8023c00:	f7ff fc14 	bl	802342c <_malloc_r>
 8023c04:	4606      	mov	r6, r0
 8023c06:	b360      	cbz	r0, 8023c62 <__ssputs_r+0xa2>
 8023c08:	6921      	ldr	r1, [r4, #16]
 8023c0a:	464a      	mov	r2, r9
 8023c0c:	f7ff ff23 	bl	8023a56 <memcpy>
 8023c10:	89a3      	ldrh	r3, [r4, #12]
 8023c12:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8023c16:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8023c1a:	81a3      	strh	r3, [r4, #12]
 8023c1c:	6126      	str	r6, [r4, #16]
 8023c1e:	6165      	str	r5, [r4, #20]
 8023c20:	444e      	add	r6, r9
 8023c22:	eba5 0509 	sub.w	r5, r5, r9
 8023c26:	6026      	str	r6, [r4, #0]
 8023c28:	60a5      	str	r5, [r4, #8]
 8023c2a:	463e      	mov	r6, r7
 8023c2c:	42be      	cmp	r6, r7
 8023c2e:	d900      	bls.n	8023c32 <__ssputs_r+0x72>
 8023c30:	463e      	mov	r6, r7
 8023c32:	6820      	ldr	r0, [r4, #0]
 8023c34:	4632      	mov	r2, r6
 8023c36:	4641      	mov	r1, r8
 8023c38:	f000 fd28 	bl	802468c <memmove>
 8023c3c:	68a3      	ldr	r3, [r4, #8]
 8023c3e:	1b9b      	subs	r3, r3, r6
 8023c40:	60a3      	str	r3, [r4, #8]
 8023c42:	6823      	ldr	r3, [r4, #0]
 8023c44:	4433      	add	r3, r6
 8023c46:	6023      	str	r3, [r4, #0]
 8023c48:	2000      	movs	r0, #0
 8023c4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023c4e:	462a      	mov	r2, r5
 8023c50:	f000 fd36 	bl	80246c0 <_realloc_r>
 8023c54:	4606      	mov	r6, r0
 8023c56:	2800      	cmp	r0, #0
 8023c58:	d1e0      	bne.n	8023c1c <__ssputs_r+0x5c>
 8023c5a:	6921      	ldr	r1, [r4, #16]
 8023c5c:	4650      	mov	r0, sl
 8023c5e:	f7ff ff65 	bl	8023b2c <_free_r>
 8023c62:	230c      	movs	r3, #12
 8023c64:	f8ca 3000 	str.w	r3, [sl]
 8023c68:	89a3      	ldrh	r3, [r4, #12]
 8023c6a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023c6e:	81a3      	strh	r3, [r4, #12]
 8023c70:	f04f 30ff 	mov.w	r0, #4294967295
 8023c74:	e7e9      	b.n	8023c4a <__ssputs_r+0x8a>
	...

08023c78 <_svfiprintf_r>:
 8023c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c7c:	4698      	mov	r8, r3
 8023c7e:	898b      	ldrh	r3, [r1, #12]
 8023c80:	061b      	lsls	r3, r3, #24
 8023c82:	b09d      	sub	sp, #116	@ 0x74
 8023c84:	4607      	mov	r7, r0
 8023c86:	460d      	mov	r5, r1
 8023c88:	4614      	mov	r4, r2
 8023c8a:	d510      	bpl.n	8023cae <_svfiprintf_r+0x36>
 8023c8c:	690b      	ldr	r3, [r1, #16]
 8023c8e:	b973      	cbnz	r3, 8023cae <_svfiprintf_r+0x36>
 8023c90:	2140      	movs	r1, #64	@ 0x40
 8023c92:	f7ff fbcb 	bl	802342c <_malloc_r>
 8023c96:	6028      	str	r0, [r5, #0]
 8023c98:	6128      	str	r0, [r5, #16]
 8023c9a:	b930      	cbnz	r0, 8023caa <_svfiprintf_r+0x32>
 8023c9c:	230c      	movs	r3, #12
 8023c9e:	603b      	str	r3, [r7, #0]
 8023ca0:	f04f 30ff 	mov.w	r0, #4294967295
 8023ca4:	b01d      	add	sp, #116	@ 0x74
 8023ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023caa:	2340      	movs	r3, #64	@ 0x40
 8023cac:	616b      	str	r3, [r5, #20]
 8023cae:	2300      	movs	r3, #0
 8023cb0:	9309      	str	r3, [sp, #36]	@ 0x24
 8023cb2:	2320      	movs	r3, #32
 8023cb4:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8023cb8:	f8cd 800c 	str.w	r8, [sp, #12]
 8023cbc:	2330      	movs	r3, #48	@ 0x30
 8023cbe:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8023e5c <_svfiprintf_r+0x1e4>
 8023cc2:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8023cc6:	f04f 0901 	mov.w	r9, #1
 8023cca:	4623      	mov	r3, r4
 8023ccc:	469a      	mov	sl, r3
 8023cce:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023cd2:	b10a      	cbz	r2, 8023cd8 <_svfiprintf_r+0x60>
 8023cd4:	2a25      	cmp	r2, #37	@ 0x25
 8023cd6:	d1f9      	bne.n	8023ccc <_svfiprintf_r+0x54>
 8023cd8:	ebba 0b04 	subs.w	fp, sl, r4
 8023cdc:	d00b      	beq.n	8023cf6 <_svfiprintf_r+0x7e>
 8023cde:	465b      	mov	r3, fp
 8023ce0:	4622      	mov	r2, r4
 8023ce2:	4629      	mov	r1, r5
 8023ce4:	4638      	mov	r0, r7
 8023ce6:	f7ff ff6b 	bl	8023bc0 <__ssputs_r>
 8023cea:	3001      	adds	r0, #1
 8023cec:	f000 80a7 	beq.w	8023e3e <_svfiprintf_r+0x1c6>
 8023cf0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023cf2:	445a      	add	r2, fp
 8023cf4:	9209      	str	r2, [sp, #36]	@ 0x24
 8023cf6:	f89a 3000 	ldrb.w	r3, [sl]
 8023cfa:	2b00      	cmp	r3, #0
 8023cfc:	f000 809f 	beq.w	8023e3e <_svfiprintf_r+0x1c6>
 8023d00:	2300      	movs	r3, #0
 8023d02:	f04f 32ff 	mov.w	r2, #4294967295
 8023d06:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023d0a:	f10a 0a01 	add.w	sl, sl, #1
 8023d0e:	9304      	str	r3, [sp, #16]
 8023d10:	9307      	str	r3, [sp, #28]
 8023d12:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8023d16:	931a      	str	r3, [sp, #104]	@ 0x68
 8023d18:	4654      	mov	r4, sl
 8023d1a:	2205      	movs	r2, #5
 8023d1c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023d20:	484e      	ldr	r0, [pc, #312]	@ (8023e5c <_svfiprintf_r+0x1e4>)
 8023d22:	f7dc fa6d 	bl	8000200 <memchr>
 8023d26:	9a04      	ldr	r2, [sp, #16]
 8023d28:	b9d8      	cbnz	r0, 8023d62 <_svfiprintf_r+0xea>
 8023d2a:	06d0      	lsls	r0, r2, #27
 8023d2c:	bf44      	itt	mi
 8023d2e:	2320      	movmi	r3, #32
 8023d30:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023d34:	0711      	lsls	r1, r2, #28
 8023d36:	bf44      	itt	mi
 8023d38:	232b      	movmi	r3, #43	@ 0x2b
 8023d3a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023d3e:	f89a 3000 	ldrb.w	r3, [sl]
 8023d42:	2b2a      	cmp	r3, #42	@ 0x2a
 8023d44:	d015      	beq.n	8023d72 <_svfiprintf_r+0xfa>
 8023d46:	9a07      	ldr	r2, [sp, #28]
 8023d48:	4654      	mov	r4, sl
 8023d4a:	2000      	movs	r0, #0
 8023d4c:	f04f 0c0a 	mov.w	ip, #10
 8023d50:	4621      	mov	r1, r4
 8023d52:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023d56:	3b30      	subs	r3, #48	@ 0x30
 8023d58:	2b09      	cmp	r3, #9
 8023d5a:	d94b      	bls.n	8023df4 <_svfiprintf_r+0x17c>
 8023d5c:	b1b0      	cbz	r0, 8023d8c <_svfiprintf_r+0x114>
 8023d5e:	9207      	str	r2, [sp, #28]
 8023d60:	e014      	b.n	8023d8c <_svfiprintf_r+0x114>
 8023d62:	eba0 0308 	sub.w	r3, r0, r8
 8023d66:	fa09 f303 	lsl.w	r3, r9, r3
 8023d6a:	4313      	orrs	r3, r2
 8023d6c:	9304      	str	r3, [sp, #16]
 8023d6e:	46a2      	mov	sl, r4
 8023d70:	e7d2      	b.n	8023d18 <_svfiprintf_r+0xa0>
 8023d72:	9b03      	ldr	r3, [sp, #12]
 8023d74:	1d19      	adds	r1, r3, #4
 8023d76:	681b      	ldr	r3, [r3, #0]
 8023d78:	9103      	str	r1, [sp, #12]
 8023d7a:	2b00      	cmp	r3, #0
 8023d7c:	bfbb      	ittet	lt
 8023d7e:	425b      	neglt	r3, r3
 8023d80:	f042 0202 	orrlt.w	r2, r2, #2
 8023d84:	9307      	strge	r3, [sp, #28]
 8023d86:	9307      	strlt	r3, [sp, #28]
 8023d88:	bfb8      	it	lt
 8023d8a:	9204      	strlt	r2, [sp, #16]
 8023d8c:	7823      	ldrb	r3, [r4, #0]
 8023d8e:	2b2e      	cmp	r3, #46	@ 0x2e
 8023d90:	d10a      	bne.n	8023da8 <_svfiprintf_r+0x130>
 8023d92:	7863      	ldrb	r3, [r4, #1]
 8023d94:	2b2a      	cmp	r3, #42	@ 0x2a
 8023d96:	d132      	bne.n	8023dfe <_svfiprintf_r+0x186>
 8023d98:	9b03      	ldr	r3, [sp, #12]
 8023d9a:	1d1a      	adds	r2, r3, #4
 8023d9c:	681b      	ldr	r3, [r3, #0]
 8023d9e:	9203      	str	r2, [sp, #12]
 8023da0:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8023da4:	3402      	adds	r4, #2
 8023da6:	9305      	str	r3, [sp, #20]
 8023da8:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8023e6c <_svfiprintf_r+0x1f4>
 8023dac:	7821      	ldrb	r1, [r4, #0]
 8023dae:	2203      	movs	r2, #3
 8023db0:	4650      	mov	r0, sl
 8023db2:	f7dc fa25 	bl	8000200 <memchr>
 8023db6:	b138      	cbz	r0, 8023dc8 <_svfiprintf_r+0x150>
 8023db8:	9b04      	ldr	r3, [sp, #16]
 8023dba:	eba0 000a 	sub.w	r0, r0, sl
 8023dbe:	2240      	movs	r2, #64	@ 0x40
 8023dc0:	4082      	lsls	r2, r0
 8023dc2:	4313      	orrs	r3, r2
 8023dc4:	3401      	adds	r4, #1
 8023dc6:	9304      	str	r3, [sp, #16]
 8023dc8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023dcc:	4824      	ldr	r0, [pc, #144]	@ (8023e60 <_svfiprintf_r+0x1e8>)
 8023dce:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8023dd2:	2206      	movs	r2, #6
 8023dd4:	f7dc fa14 	bl	8000200 <memchr>
 8023dd8:	2800      	cmp	r0, #0
 8023dda:	d036      	beq.n	8023e4a <_svfiprintf_r+0x1d2>
 8023ddc:	4b21      	ldr	r3, [pc, #132]	@ (8023e64 <_svfiprintf_r+0x1ec>)
 8023dde:	bb1b      	cbnz	r3, 8023e28 <_svfiprintf_r+0x1b0>
 8023de0:	9b03      	ldr	r3, [sp, #12]
 8023de2:	3307      	adds	r3, #7
 8023de4:	f023 0307 	bic.w	r3, r3, #7
 8023de8:	3308      	adds	r3, #8
 8023dea:	9303      	str	r3, [sp, #12]
 8023dec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023dee:	4433      	add	r3, r6
 8023df0:	9309      	str	r3, [sp, #36]	@ 0x24
 8023df2:	e76a      	b.n	8023cca <_svfiprintf_r+0x52>
 8023df4:	fb0c 3202 	mla	r2, ip, r2, r3
 8023df8:	460c      	mov	r4, r1
 8023dfa:	2001      	movs	r0, #1
 8023dfc:	e7a8      	b.n	8023d50 <_svfiprintf_r+0xd8>
 8023dfe:	2300      	movs	r3, #0
 8023e00:	3401      	adds	r4, #1
 8023e02:	9305      	str	r3, [sp, #20]
 8023e04:	4619      	mov	r1, r3
 8023e06:	f04f 0c0a 	mov.w	ip, #10
 8023e0a:	4620      	mov	r0, r4
 8023e0c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8023e10:	3a30      	subs	r2, #48	@ 0x30
 8023e12:	2a09      	cmp	r2, #9
 8023e14:	d903      	bls.n	8023e1e <_svfiprintf_r+0x1a6>
 8023e16:	2b00      	cmp	r3, #0
 8023e18:	d0c6      	beq.n	8023da8 <_svfiprintf_r+0x130>
 8023e1a:	9105      	str	r1, [sp, #20]
 8023e1c:	e7c4      	b.n	8023da8 <_svfiprintf_r+0x130>
 8023e1e:	fb0c 2101 	mla	r1, ip, r1, r2
 8023e22:	4604      	mov	r4, r0
 8023e24:	2301      	movs	r3, #1
 8023e26:	e7f0      	b.n	8023e0a <_svfiprintf_r+0x192>
 8023e28:	ab03      	add	r3, sp, #12
 8023e2a:	9300      	str	r3, [sp, #0]
 8023e2c:	462a      	mov	r2, r5
 8023e2e:	4b0e      	ldr	r3, [pc, #56]	@ (8023e68 <_svfiprintf_r+0x1f0>)
 8023e30:	a904      	add	r1, sp, #16
 8023e32:	4638      	mov	r0, r7
 8023e34:	f3af 8000 	nop.w
 8023e38:	1c42      	adds	r2, r0, #1
 8023e3a:	4606      	mov	r6, r0
 8023e3c:	d1d6      	bne.n	8023dec <_svfiprintf_r+0x174>
 8023e3e:	89ab      	ldrh	r3, [r5, #12]
 8023e40:	065b      	lsls	r3, r3, #25
 8023e42:	f53f af2d 	bmi.w	8023ca0 <_svfiprintf_r+0x28>
 8023e46:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8023e48:	e72c      	b.n	8023ca4 <_svfiprintf_r+0x2c>
 8023e4a:	ab03      	add	r3, sp, #12
 8023e4c:	9300      	str	r3, [sp, #0]
 8023e4e:	462a      	mov	r2, r5
 8023e50:	4b05      	ldr	r3, [pc, #20]	@ (8023e68 <_svfiprintf_r+0x1f0>)
 8023e52:	a904      	add	r1, sp, #16
 8023e54:	4638      	mov	r0, r7
 8023e56:	f000 f9bb 	bl	80241d0 <_printf_i>
 8023e5a:	e7ed      	b.n	8023e38 <_svfiprintf_r+0x1c0>
 8023e5c:	0802537a 	.word	0x0802537a
 8023e60:	08025384 	.word	0x08025384
 8023e64:	00000000 	.word	0x00000000
 8023e68:	08023bc1 	.word	0x08023bc1
 8023e6c:	08025380 	.word	0x08025380

08023e70 <__sfputc_r>:
 8023e70:	6893      	ldr	r3, [r2, #8]
 8023e72:	3b01      	subs	r3, #1
 8023e74:	2b00      	cmp	r3, #0
 8023e76:	b410      	push	{r4}
 8023e78:	6093      	str	r3, [r2, #8]
 8023e7a:	da08      	bge.n	8023e8e <__sfputc_r+0x1e>
 8023e7c:	6994      	ldr	r4, [r2, #24]
 8023e7e:	42a3      	cmp	r3, r4
 8023e80:	db01      	blt.n	8023e86 <__sfputc_r+0x16>
 8023e82:	290a      	cmp	r1, #10
 8023e84:	d103      	bne.n	8023e8e <__sfputc_r+0x1e>
 8023e86:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023e8a:	f000 bb6b 	b.w	8024564 <__swbuf_r>
 8023e8e:	6813      	ldr	r3, [r2, #0]
 8023e90:	1c58      	adds	r0, r3, #1
 8023e92:	6010      	str	r0, [r2, #0]
 8023e94:	7019      	strb	r1, [r3, #0]
 8023e96:	4608      	mov	r0, r1
 8023e98:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023e9c:	4770      	bx	lr

08023e9e <__sfputs_r>:
 8023e9e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023ea0:	4606      	mov	r6, r0
 8023ea2:	460f      	mov	r7, r1
 8023ea4:	4614      	mov	r4, r2
 8023ea6:	18d5      	adds	r5, r2, r3
 8023ea8:	42ac      	cmp	r4, r5
 8023eaa:	d101      	bne.n	8023eb0 <__sfputs_r+0x12>
 8023eac:	2000      	movs	r0, #0
 8023eae:	e007      	b.n	8023ec0 <__sfputs_r+0x22>
 8023eb0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023eb4:	463a      	mov	r2, r7
 8023eb6:	4630      	mov	r0, r6
 8023eb8:	f7ff ffda 	bl	8023e70 <__sfputc_r>
 8023ebc:	1c43      	adds	r3, r0, #1
 8023ebe:	d1f3      	bne.n	8023ea8 <__sfputs_r+0xa>
 8023ec0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08023ec4 <_vfiprintf_r>:
 8023ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ec8:	460d      	mov	r5, r1
 8023eca:	b09d      	sub	sp, #116	@ 0x74
 8023ecc:	4614      	mov	r4, r2
 8023ece:	4698      	mov	r8, r3
 8023ed0:	4606      	mov	r6, r0
 8023ed2:	b118      	cbz	r0, 8023edc <_vfiprintf_r+0x18>
 8023ed4:	6a03      	ldr	r3, [r0, #32]
 8023ed6:	b90b      	cbnz	r3, 8023edc <_vfiprintf_r+0x18>
 8023ed8:	f7ff fbce 	bl	8023678 <__sinit>
 8023edc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8023ede:	07d9      	lsls	r1, r3, #31
 8023ee0:	d405      	bmi.n	8023eee <_vfiprintf_r+0x2a>
 8023ee2:	89ab      	ldrh	r3, [r5, #12]
 8023ee4:	059a      	lsls	r2, r3, #22
 8023ee6:	d402      	bmi.n	8023eee <_vfiprintf_r+0x2a>
 8023ee8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023eea:	f7ff fdb2 	bl	8023a52 <__retarget_lock_acquire_recursive>
 8023eee:	89ab      	ldrh	r3, [r5, #12]
 8023ef0:	071b      	lsls	r3, r3, #28
 8023ef2:	d501      	bpl.n	8023ef8 <_vfiprintf_r+0x34>
 8023ef4:	692b      	ldr	r3, [r5, #16]
 8023ef6:	b99b      	cbnz	r3, 8023f20 <_vfiprintf_r+0x5c>
 8023ef8:	4629      	mov	r1, r5
 8023efa:	4630      	mov	r0, r6
 8023efc:	f000 fb70 	bl	80245e0 <__swsetup_r>
 8023f00:	b170      	cbz	r0, 8023f20 <_vfiprintf_r+0x5c>
 8023f02:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8023f04:	07dc      	lsls	r4, r3, #31
 8023f06:	d504      	bpl.n	8023f12 <_vfiprintf_r+0x4e>
 8023f08:	f04f 30ff 	mov.w	r0, #4294967295
 8023f0c:	b01d      	add	sp, #116	@ 0x74
 8023f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f12:	89ab      	ldrh	r3, [r5, #12]
 8023f14:	0598      	lsls	r0, r3, #22
 8023f16:	d4f7      	bmi.n	8023f08 <_vfiprintf_r+0x44>
 8023f18:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023f1a:	f7ff fd9b 	bl	8023a54 <__retarget_lock_release_recursive>
 8023f1e:	e7f3      	b.n	8023f08 <_vfiprintf_r+0x44>
 8023f20:	2300      	movs	r3, #0
 8023f22:	9309      	str	r3, [sp, #36]	@ 0x24
 8023f24:	2320      	movs	r3, #32
 8023f26:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8023f2a:	f8cd 800c 	str.w	r8, [sp, #12]
 8023f2e:	2330      	movs	r3, #48	@ 0x30
 8023f30:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80240e0 <_vfiprintf_r+0x21c>
 8023f34:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8023f38:	f04f 0901 	mov.w	r9, #1
 8023f3c:	4623      	mov	r3, r4
 8023f3e:	469a      	mov	sl, r3
 8023f40:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023f44:	b10a      	cbz	r2, 8023f4a <_vfiprintf_r+0x86>
 8023f46:	2a25      	cmp	r2, #37	@ 0x25
 8023f48:	d1f9      	bne.n	8023f3e <_vfiprintf_r+0x7a>
 8023f4a:	ebba 0b04 	subs.w	fp, sl, r4
 8023f4e:	d00b      	beq.n	8023f68 <_vfiprintf_r+0xa4>
 8023f50:	465b      	mov	r3, fp
 8023f52:	4622      	mov	r2, r4
 8023f54:	4629      	mov	r1, r5
 8023f56:	4630      	mov	r0, r6
 8023f58:	f7ff ffa1 	bl	8023e9e <__sfputs_r>
 8023f5c:	3001      	adds	r0, #1
 8023f5e:	f000 80a7 	beq.w	80240b0 <_vfiprintf_r+0x1ec>
 8023f62:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023f64:	445a      	add	r2, fp
 8023f66:	9209      	str	r2, [sp, #36]	@ 0x24
 8023f68:	f89a 3000 	ldrb.w	r3, [sl]
 8023f6c:	2b00      	cmp	r3, #0
 8023f6e:	f000 809f 	beq.w	80240b0 <_vfiprintf_r+0x1ec>
 8023f72:	2300      	movs	r3, #0
 8023f74:	f04f 32ff 	mov.w	r2, #4294967295
 8023f78:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023f7c:	f10a 0a01 	add.w	sl, sl, #1
 8023f80:	9304      	str	r3, [sp, #16]
 8023f82:	9307      	str	r3, [sp, #28]
 8023f84:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8023f88:	931a      	str	r3, [sp, #104]	@ 0x68
 8023f8a:	4654      	mov	r4, sl
 8023f8c:	2205      	movs	r2, #5
 8023f8e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023f92:	4853      	ldr	r0, [pc, #332]	@ (80240e0 <_vfiprintf_r+0x21c>)
 8023f94:	f7dc f934 	bl	8000200 <memchr>
 8023f98:	9a04      	ldr	r2, [sp, #16]
 8023f9a:	b9d8      	cbnz	r0, 8023fd4 <_vfiprintf_r+0x110>
 8023f9c:	06d1      	lsls	r1, r2, #27
 8023f9e:	bf44      	itt	mi
 8023fa0:	2320      	movmi	r3, #32
 8023fa2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023fa6:	0713      	lsls	r3, r2, #28
 8023fa8:	bf44      	itt	mi
 8023faa:	232b      	movmi	r3, #43	@ 0x2b
 8023fac:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023fb0:	f89a 3000 	ldrb.w	r3, [sl]
 8023fb4:	2b2a      	cmp	r3, #42	@ 0x2a
 8023fb6:	d015      	beq.n	8023fe4 <_vfiprintf_r+0x120>
 8023fb8:	9a07      	ldr	r2, [sp, #28]
 8023fba:	4654      	mov	r4, sl
 8023fbc:	2000      	movs	r0, #0
 8023fbe:	f04f 0c0a 	mov.w	ip, #10
 8023fc2:	4621      	mov	r1, r4
 8023fc4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023fc8:	3b30      	subs	r3, #48	@ 0x30
 8023fca:	2b09      	cmp	r3, #9
 8023fcc:	d94b      	bls.n	8024066 <_vfiprintf_r+0x1a2>
 8023fce:	b1b0      	cbz	r0, 8023ffe <_vfiprintf_r+0x13a>
 8023fd0:	9207      	str	r2, [sp, #28]
 8023fd2:	e014      	b.n	8023ffe <_vfiprintf_r+0x13a>
 8023fd4:	eba0 0308 	sub.w	r3, r0, r8
 8023fd8:	fa09 f303 	lsl.w	r3, r9, r3
 8023fdc:	4313      	orrs	r3, r2
 8023fde:	9304      	str	r3, [sp, #16]
 8023fe0:	46a2      	mov	sl, r4
 8023fe2:	e7d2      	b.n	8023f8a <_vfiprintf_r+0xc6>
 8023fe4:	9b03      	ldr	r3, [sp, #12]
 8023fe6:	1d19      	adds	r1, r3, #4
 8023fe8:	681b      	ldr	r3, [r3, #0]
 8023fea:	9103      	str	r1, [sp, #12]
 8023fec:	2b00      	cmp	r3, #0
 8023fee:	bfbb      	ittet	lt
 8023ff0:	425b      	neglt	r3, r3
 8023ff2:	f042 0202 	orrlt.w	r2, r2, #2
 8023ff6:	9307      	strge	r3, [sp, #28]
 8023ff8:	9307      	strlt	r3, [sp, #28]
 8023ffa:	bfb8      	it	lt
 8023ffc:	9204      	strlt	r2, [sp, #16]
 8023ffe:	7823      	ldrb	r3, [r4, #0]
 8024000:	2b2e      	cmp	r3, #46	@ 0x2e
 8024002:	d10a      	bne.n	802401a <_vfiprintf_r+0x156>
 8024004:	7863      	ldrb	r3, [r4, #1]
 8024006:	2b2a      	cmp	r3, #42	@ 0x2a
 8024008:	d132      	bne.n	8024070 <_vfiprintf_r+0x1ac>
 802400a:	9b03      	ldr	r3, [sp, #12]
 802400c:	1d1a      	adds	r2, r3, #4
 802400e:	681b      	ldr	r3, [r3, #0]
 8024010:	9203      	str	r2, [sp, #12]
 8024012:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8024016:	3402      	adds	r4, #2
 8024018:	9305      	str	r3, [sp, #20]
 802401a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80240f0 <_vfiprintf_r+0x22c>
 802401e:	7821      	ldrb	r1, [r4, #0]
 8024020:	2203      	movs	r2, #3
 8024022:	4650      	mov	r0, sl
 8024024:	f7dc f8ec 	bl	8000200 <memchr>
 8024028:	b138      	cbz	r0, 802403a <_vfiprintf_r+0x176>
 802402a:	9b04      	ldr	r3, [sp, #16]
 802402c:	eba0 000a 	sub.w	r0, r0, sl
 8024030:	2240      	movs	r2, #64	@ 0x40
 8024032:	4082      	lsls	r2, r0
 8024034:	4313      	orrs	r3, r2
 8024036:	3401      	adds	r4, #1
 8024038:	9304      	str	r3, [sp, #16]
 802403a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802403e:	4829      	ldr	r0, [pc, #164]	@ (80240e4 <_vfiprintf_r+0x220>)
 8024040:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8024044:	2206      	movs	r2, #6
 8024046:	f7dc f8db 	bl	8000200 <memchr>
 802404a:	2800      	cmp	r0, #0
 802404c:	d03f      	beq.n	80240ce <_vfiprintf_r+0x20a>
 802404e:	4b26      	ldr	r3, [pc, #152]	@ (80240e8 <_vfiprintf_r+0x224>)
 8024050:	bb1b      	cbnz	r3, 802409a <_vfiprintf_r+0x1d6>
 8024052:	9b03      	ldr	r3, [sp, #12]
 8024054:	3307      	adds	r3, #7
 8024056:	f023 0307 	bic.w	r3, r3, #7
 802405a:	3308      	adds	r3, #8
 802405c:	9303      	str	r3, [sp, #12]
 802405e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024060:	443b      	add	r3, r7
 8024062:	9309      	str	r3, [sp, #36]	@ 0x24
 8024064:	e76a      	b.n	8023f3c <_vfiprintf_r+0x78>
 8024066:	fb0c 3202 	mla	r2, ip, r2, r3
 802406a:	460c      	mov	r4, r1
 802406c:	2001      	movs	r0, #1
 802406e:	e7a8      	b.n	8023fc2 <_vfiprintf_r+0xfe>
 8024070:	2300      	movs	r3, #0
 8024072:	3401      	adds	r4, #1
 8024074:	9305      	str	r3, [sp, #20]
 8024076:	4619      	mov	r1, r3
 8024078:	f04f 0c0a 	mov.w	ip, #10
 802407c:	4620      	mov	r0, r4
 802407e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8024082:	3a30      	subs	r2, #48	@ 0x30
 8024084:	2a09      	cmp	r2, #9
 8024086:	d903      	bls.n	8024090 <_vfiprintf_r+0x1cc>
 8024088:	2b00      	cmp	r3, #0
 802408a:	d0c6      	beq.n	802401a <_vfiprintf_r+0x156>
 802408c:	9105      	str	r1, [sp, #20]
 802408e:	e7c4      	b.n	802401a <_vfiprintf_r+0x156>
 8024090:	fb0c 2101 	mla	r1, ip, r1, r2
 8024094:	4604      	mov	r4, r0
 8024096:	2301      	movs	r3, #1
 8024098:	e7f0      	b.n	802407c <_vfiprintf_r+0x1b8>
 802409a:	ab03      	add	r3, sp, #12
 802409c:	9300      	str	r3, [sp, #0]
 802409e:	462a      	mov	r2, r5
 80240a0:	4b12      	ldr	r3, [pc, #72]	@ (80240ec <_vfiprintf_r+0x228>)
 80240a2:	a904      	add	r1, sp, #16
 80240a4:	4630      	mov	r0, r6
 80240a6:	f3af 8000 	nop.w
 80240aa:	4607      	mov	r7, r0
 80240ac:	1c78      	adds	r0, r7, #1
 80240ae:	d1d6      	bne.n	802405e <_vfiprintf_r+0x19a>
 80240b0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80240b2:	07d9      	lsls	r1, r3, #31
 80240b4:	d405      	bmi.n	80240c2 <_vfiprintf_r+0x1fe>
 80240b6:	89ab      	ldrh	r3, [r5, #12]
 80240b8:	059a      	lsls	r2, r3, #22
 80240ba:	d402      	bmi.n	80240c2 <_vfiprintf_r+0x1fe>
 80240bc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80240be:	f7ff fcc9 	bl	8023a54 <__retarget_lock_release_recursive>
 80240c2:	89ab      	ldrh	r3, [r5, #12]
 80240c4:	065b      	lsls	r3, r3, #25
 80240c6:	f53f af1f 	bmi.w	8023f08 <_vfiprintf_r+0x44>
 80240ca:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80240cc:	e71e      	b.n	8023f0c <_vfiprintf_r+0x48>
 80240ce:	ab03      	add	r3, sp, #12
 80240d0:	9300      	str	r3, [sp, #0]
 80240d2:	462a      	mov	r2, r5
 80240d4:	4b05      	ldr	r3, [pc, #20]	@ (80240ec <_vfiprintf_r+0x228>)
 80240d6:	a904      	add	r1, sp, #16
 80240d8:	4630      	mov	r0, r6
 80240da:	f000 f879 	bl	80241d0 <_printf_i>
 80240de:	e7e4      	b.n	80240aa <_vfiprintf_r+0x1e6>
 80240e0:	0802537a 	.word	0x0802537a
 80240e4:	08025384 	.word	0x08025384
 80240e8:	00000000 	.word	0x00000000
 80240ec:	08023e9f 	.word	0x08023e9f
 80240f0:	08025380 	.word	0x08025380

080240f4 <_printf_common>:
 80240f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80240f8:	4616      	mov	r6, r2
 80240fa:	4698      	mov	r8, r3
 80240fc:	688a      	ldr	r2, [r1, #8]
 80240fe:	690b      	ldr	r3, [r1, #16]
 8024100:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8024104:	4293      	cmp	r3, r2
 8024106:	bfb8      	it	lt
 8024108:	4613      	movlt	r3, r2
 802410a:	6033      	str	r3, [r6, #0]
 802410c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8024110:	4607      	mov	r7, r0
 8024112:	460c      	mov	r4, r1
 8024114:	b10a      	cbz	r2, 802411a <_printf_common+0x26>
 8024116:	3301      	adds	r3, #1
 8024118:	6033      	str	r3, [r6, #0]
 802411a:	6823      	ldr	r3, [r4, #0]
 802411c:	0699      	lsls	r1, r3, #26
 802411e:	bf42      	ittt	mi
 8024120:	6833      	ldrmi	r3, [r6, #0]
 8024122:	3302      	addmi	r3, #2
 8024124:	6033      	strmi	r3, [r6, #0]
 8024126:	6825      	ldr	r5, [r4, #0]
 8024128:	f015 0506 	ands.w	r5, r5, #6
 802412c:	d106      	bne.n	802413c <_printf_common+0x48>
 802412e:	f104 0a19 	add.w	sl, r4, #25
 8024132:	68e3      	ldr	r3, [r4, #12]
 8024134:	6832      	ldr	r2, [r6, #0]
 8024136:	1a9b      	subs	r3, r3, r2
 8024138:	42ab      	cmp	r3, r5
 802413a:	dc26      	bgt.n	802418a <_printf_common+0x96>
 802413c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8024140:	6822      	ldr	r2, [r4, #0]
 8024142:	3b00      	subs	r3, #0
 8024144:	bf18      	it	ne
 8024146:	2301      	movne	r3, #1
 8024148:	0692      	lsls	r2, r2, #26
 802414a:	d42b      	bmi.n	80241a4 <_printf_common+0xb0>
 802414c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8024150:	4641      	mov	r1, r8
 8024152:	4638      	mov	r0, r7
 8024154:	47c8      	blx	r9
 8024156:	3001      	adds	r0, #1
 8024158:	d01e      	beq.n	8024198 <_printf_common+0xa4>
 802415a:	6823      	ldr	r3, [r4, #0]
 802415c:	6922      	ldr	r2, [r4, #16]
 802415e:	f003 0306 	and.w	r3, r3, #6
 8024162:	2b04      	cmp	r3, #4
 8024164:	bf02      	ittt	eq
 8024166:	68e5      	ldreq	r5, [r4, #12]
 8024168:	6833      	ldreq	r3, [r6, #0]
 802416a:	1aed      	subeq	r5, r5, r3
 802416c:	68a3      	ldr	r3, [r4, #8]
 802416e:	bf0c      	ite	eq
 8024170:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8024174:	2500      	movne	r5, #0
 8024176:	4293      	cmp	r3, r2
 8024178:	bfc4      	itt	gt
 802417a:	1a9b      	subgt	r3, r3, r2
 802417c:	18ed      	addgt	r5, r5, r3
 802417e:	2600      	movs	r6, #0
 8024180:	341a      	adds	r4, #26
 8024182:	42b5      	cmp	r5, r6
 8024184:	d11a      	bne.n	80241bc <_printf_common+0xc8>
 8024186:	2000      	movs	r0, #0
 8024188:	e008      	b.n	802419c <_printf_common+0xa8>
 802418a:	2301      	movs	r3, #1
 802418c:	4652      	mov	r2, sl
 802418e:	4641      	mov	r1, r8
 8024190:	4638      	mov	r0, r7
 8024192:	47c8      	blx	r9
 8024194:	3001      	adds	r0, #1
 8024196:	d103      	bne.n	80241a0 <_printf_common+0xac>
 8024198:	f04f 30ff 	mov.w	r0, #4294967295
 802419c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80241a0:	3501      	adds	r5, #1
 80241a2:	e7c6      	b.n	8024132 <_printf_common+0x3e>
 80241a4:	18e1      	adds	r1, r4, r3
 80241a6:	1c5a      	adds	r2, r3, #1
 80241a8:	2030      	movs	r0, #48	@ 0x30
 80241aa:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80241ae:	4422      	add	r2, r4
 80241b0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80241b4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80241b8:	3302      	adds	r3, #2
 80241ba:	e7c7      	b.n	802414c <_printf_common+0x58>
 80241bc:	2301      	movs	r3, #1
 80241be:	4622      	mov	r2, r4
 80241c0:	4641      	mov	r1, r8
 80241c2:	4638      	mov	r0, r7
 80241c4:	47c8      	blx	r9
 80241c6:	3001      	adds	r0, #1
 80241c8:	d0e6      	beq.n	8024198 <_printf_common+0xa4>
 80241ca:	3601      	adds	r6, #1
 80241cc:	e7d9      	b.n	8024182 <_printf_common+0x8e>
	...

080241d0 <_printf_i>:
 80241d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80241d4:	7e0f      	ldrb	r7, [r1, #24]
 80241d6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80241d8:	2f78      	cmp	r7, #120	@ 0x78
 80241da:	4691      	mov	r9, r2
 80241dc:	4680      	mov	r8, r0
 80241de:	460c      	mov	r4, r1
 80241e0:	469a      	mov	sl, r3
 80241e2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80241e6:	d807      	bhi.n	80241f8 <_printf_i+0x28>
 80241e8:	2f62      	cmp	r7, #98	@ 0x62
 80241ea:	d80a      	bhi.n	8024202 <_printf_i+0x32>
 80241ec:	2f00      	cmp	r7, #0
 80241ee:	f000 80d1 	beq.w	8024394 <_printf_i+0x1c4>
 80241f2:	2f58      	cmp	r7, #88	@ 0x58
 80241f4:	f000 80b8 	beq.w	8024368 <_printf_i+0x198>
 80241f8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80241fc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8024200:	e03a      	b.n	8024278 <_printf_i+0xa8>
 8024202:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8024206:	2b15      	cmp	r3, #21
 8024208:	d8f6      	bhi.n	80241f8 <_printf_i+0x28>
 802420a:	a101      	add	r1, pc, #4	@ (adr r1, 8024210 <_printf_i+0x40>)
 802420c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8024210:	08024269 	.word	0x08024269
 8024214:	0802427d 	.word	0x0802427d
 8024218:	080241f9 	.word	0x080241f9
 802421c:	080241f9 	.word	0x080241f9
 8024220:	080241f9 	.word	0x080241f9
 8024224:	080241f9 	.word	0x080241f9
 8024228:	0802427d 	.word	0x0802427d
 802422c:	080241f9 	.word	0x080241f9
 8024230:	080241f9 	.word	0x080241f9
 8024234:	080241f9 	.word	0x080241f9
 8024238:	080241f9 	.word	0x080241f9
 802423c:	0802437b 	.word	0x0802437b
 8024240:	080242a7 	.word	0x080242a7
 8024244:	08024335 	.word	0x08024335
 8024248:	080241f9 	.word	0x080241f9
 802424c:	080241f9 	.word	0x080241f9
 8024250:	0802439d 	.word	0x0802439d
 8024254:	080241f9 	.word	0x080241f9
 8024258:	080242a7 	.word	0x080242a7
 802425c:	080241f9 	.word	0x080241f9
 8024260:	080241f9 	.word	0x080241f9
 8024264:	0802433d 	.word	0x0802433d
 8024268:	6833      	ldr	r3, [r6, #0]
 802426a:	1d1a      	adds	r2, r3, #4
 802426c:	681b      	ldr	r3, [r3, #0]
 802426e:	6032      	str	r2, [r6, #0]
 8024270:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8024274:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8024278:	2301      	movs	r3, #1
 802427a:	e09c      	b.n	80243b6 <_printf_i+0x1e6>
 802427c:	6833      	ldr	r3, [r6, #0]
 802427e:	6820      	ldr	r0, [r4, #0]
 8024280:	1d19      	adds	r1, r3, #4
 8024282:	6031      	str	r1, [r6, #0]
 8024284:	0606      	lsls	r6, r0, #24
 8024286:	d501      	bpl.n	802428c <_printf_i+0xbc>
 8024288:	681d      	ldr	r5, [r3, #0]
 802428a:	e003      	b.n	8024294 <_printf_i+0xc4>
 802428c:	0645      	lsls	r5, r0, #25
 802428e:	d5fb      	bpl.n	8024288 <_printf_i+0xb8>
 8024290:	f9b3 5000 	ldrsh.w	r5, [r3]
 8024294:	2d00      	cmp	r5, #0
 8024296:	da03      	bge.n	80242a0 <_printf_i+0xd0>
 8024298:	232d      	movs	r3, #45	@ 0x2d
 802429a:	426d      	negs	r5, r5
 802429c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80242a0:	4858      	ldr	r0, [pc, #352]	@ (8024404 <_printf_i+0x234>)
 80242a2:	230a      	movs	r3, #10
 80242a4:	e011      	b.n	80242ca <_printf_i+0xfa>
 80242a6:	6821      	ldr	r1, [r4, #0]
 80242a8:	6833      	ldr	r3, [r6, #0]
 80242aa:	0608      	lsls	r0, r1, #24
 80242ac:	f853 5b04 	ldr.w	r5, [r3], #4
 80242b0:	d402      	bmi.n	80242b8 <_printf_i+0xe8>
 80242b2:	0649      	lsls	r1, r1, #25
 80242b4:	bf48      	it	mi
 80242b6:	b2ad      	uxthmi	r5, r5
 80242b8:	2f6f      	cmp	r7, #111	@ 0x6f
 80242ba:	4852      	ldr	r0, [pc, #328]	@ (8024404 <_printf_i+0x234>)
 80242bc:	6033      	str	r3, [r6, #0]
 80242be:	bf14      	ite	ne
 80242c0:	230a      	movne	r3, #10
 80242c2:	2308      	moveq	r3, #8
 80242c4:	2100      	movs	r1, #0
 80242c6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80242ca:	6866      	ldr	r6, [r4, #4]
 80242cc:	60a6      	str	r6, [r4, #8]
 80242ce:	2e00      	cmp	r6, #0
 80242d0:	db05      	blt.n	80242de <_printf_i+0x10e>
 80242d2:	6821      	ldr	r1, [r4, #0]
 80242d4:	432e      	orrs	r6, r5
 80242d6:	f021 0104 	bic.w	r1, r1, #4
 80242da:	6021      	str	r1, [r4, #0]
 80242dc:	d04b      	beq.n	8024376 <_printf_i+0x1a6>
 80242de:	4616      	mov	r6, r2
 80242e0:	fbb5 f1f3 	udiv	r1, r5, r3
 80242e4:	fb03 5711 	mls	r7, r3, r1, r5
 80242e8:	5dc7      	ldrb	r7, [r0, r7]
 80242ea:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80242ee:	462f      	mov	r7, r5
 80242f0:	42bb      	cmp	r3, r7
 80242f2:	460d      	mov	r5, r1
 80242f4:	d9f4      	bls.n	80242e0 <_printf_i+0x110>
 80242f6:	2b08      	cmp	r3, #8
 80242f8:	d10b      	bne.n	8024312 <_printf_i+0x142>
 80242fa:	6823      	ldr	r3, [r4, #0]
 80242fc:	07df      	lsls	r7, r3, #31
 80242fe:	d508      	bpl.n	8024312 <_printf_i+0x142>
 8024300:	6923      	ldr	r3, [r4, #16]
 8024302:	6861      	ldr	r1, [r4, #4]
 8024304:	4299      	cmp	r1, r3
 8024306:	bfde      	ittt	le
 8024308:	2330      	movle	r3, #48	@ 0x30
 802430a:	f806 3c01 	strble.w	r3, [r6, #-1]
 802430e:	f106 36ff 	addle.w	r6, r6, #4294967295
 8024312:	1b92      	subs	r2, r2, r6
 8024314:	6122      	str	r2, [r4, #16]
 8024316:	f8cd a000 	str.w	sl, [sp]
 802431a:	464b      	mov	r3, r9
 802431c:	aa03      	add	r2, sp, #12
 802431e:	4621      	mov	r1, r4
 8024320:	4640      	mov	r0, r8
 8024322:	f7ff fee7 	bl	80240f4 <_printf_common>
 8024326:	3001      	adds	r0, #1
 8024328:	d14a      	bne.n	80243c0 <_printf_i+0x1f0>
 802432a:	f04f 30ff 	mov.w	r0, #4294967295
 802432e:	b004      	add	sp, #16
 8024330:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024334:	6823      	ldr	r3, [r4, #0]
 8024336:	f043 0320 	orr.w	r3, r3, #32
 802433a:	6023      	str	r3, [r4, #0]
 802433c:	4832      	ldr	r0, [pc, #200]	@ (8024408 <_printf_i+0x238>)
 802433e:	2778      	movs	r7, #120	@ 0x78
 8024340:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8024344:	6823      	ldr	r3, [r4, #0]
 8024346:	6831      	ldr	r1, [r6, #0]
 8024348:	061f      	lsls	r7, r3, #24
 802434a:	f851 5b04 	ldr.w	r5, [r1], #4
 802434e:	d402      	bmi.n	8024356 <_printf_i+0x186>
 8024350:	065f      	lsls	r7, r3, #25
 8024352:	bf48      	it	mi
 8024354:	b2ad      	uxthmi	r5, r5
 8024356:	6031      	str	r1, [r6, #0]
 8024358:	07d9      	lsls	r1, r3, #31
 802435a:	bf44      	itt	mi
 802435c:	f043 0320 	orrmi.w	r3, r3, #32
 8024360:	6023      	strmi	r3, [r4, #0]
 8024362:	b11d      	cbz	r5, 802436c <_printf_i+0x19c>
 8024364:	2310      	movs	r3, #16
 8024366:	e7ad      	b.n	80242c4 <_printf_i+0xf4>
 8024368:	4826      	ldr	r0, [pc, #152]	@ (8024404 <_printf_i+0x234>)
 802436a:	e7e9      	b.n	8024340 <_printf_i+0x170>
 802436c:	6823      	ldr	r3, [r4, #0]
 802436e:	f023 0320 	bic.w	r3, r3, #32
 8024372:	6023      	str	r3, [r4, #0]
 8024374:	e7f6      	b.n	8024364 <_printf_i+0x194>
 8024376:	4616      	mov	r6, r2
 8024378:	e7bd      	b.n	80242f6 <_printf_i+0x126>
 802437a:	6833      	ldr	r3, [r6, #0]
 802437c:	6825      	ldr	r5, [r4, #0]
 802437e:	6961      	ldr	r1, [r4, #20]
 8024380:	1d18      	adds	r0, r3, #4
 8024382:	6030      	str	r0, [r6, #0]
 8024384:	062e      	lsls	r6, r5, #24
 8024386:	681b      	ldr	r3, [r3, #0]
 8024388:	d501      	bpl.n	802438e <_printf_i+0x1be>
 802438a:	6019      	str	r1, [r3, #0]
 802438c:	e002      	b.n	8024394 <_printf_i+0x1c4>
 802438e:	0668      	lsls	r0, r5, #25
 8024390:	d5fb      	bpl.n	802438a <_printf_i+0x1ba>
 8024392:	8019      	strh	r1, [r3, #0]
 8024394:	2300      	movs	r3, #0
 8024396:	6123      	str	r3, [r4, #16]
 8024398:	4616      	mov	r6, r2
 802439a:	e7bc      	b.n	8024316 <_printf_i+0x146>
 802439c:	6833      	ldr	r3, [r6, #0]
 802439e:	1d1a      	adds	r2, r3, #4
 80243a0:	6032      	str	r2, [r6, #0]
 80243a2:	681e      	ldr	r6, [r3, #0]
 80243a4:	6862      	ldr	r2, [r4, #4]
 80243a6:	2100      	movs	r1, #0
 80243a8:	4630      	mov	r0, r6
 80243aa:	f7db ff29 	bl	8000200 <memchr>
 80243ae:	b108      	cbz	r0, 80243b4 <_printf_i+0x1e4>
 80243b0:	1b80      	subs	r0, r0, r6
 80243b2:	6060      	str	r0, [r4, #4]
 80243b4:	6863      	ldr	r3, [r4, #4]
 80243b6:	6123      	str	r3, [r4, #16]
 80243b8:	2300      	movs	r3, #0
 80243ba:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80243be:	e7aa      	b.n	8024316 <_printf_i+0x146>
 80243c0:	6923      	ldr	r3, [r4, #16]
 80243c2:	4632      	mov	r2, r6
 80243c4:	4649      	mov	r1, r9
 80243c6:	4640      	mov	r0, r8
 80243c8:	47d0      	blx	sl
 80243ca:	3001      	adds	r0, #1
 80243cc:	d0ad      	beq.n	802432a <_printf_i+0x15a>
 80243ce:	6823      	ldr	r3, [r4, #0]
 80243d0:	079b      	lsls	r3, r3, #30
 80243d2:	d413      	bmi.n	80243fc <_printf_i+0x22c>
 80243d4:	68e0      	ldr	r0, [r4, #12]
 80243d6:	9b03      	ldr	r3, [sp, #12]
 80243d8:	4298      	cmp	r0, r3
 80243da:	bfb8      	it	lt
 80243dc:	4618      	movlt	r0, r3
 80243de:	e7a6      	b.n	802432e <_printf_i+0x15e>
 80243e0:	2301      	movs	r3, #1
 80243e2:	4632      	mov	r2, r6
 80243e4:	4649      	mov	r1, r9
 80243e6:	4640      	mov	r0, r8
 80243e8:	47d0      	blx	sl
 80243ea:	3001      	adds	r0, #1
 80243ec:	d09d      	beq.n	802432a <_printf_i+0x15a>
 80243ee:	3501      	adds	r5, #1
 80243f0:	68e3      	ldr	r3, [r4, #12]
 80243f2:	9903      	ldr	r1, [sp, #12]
 80243f4:	1a5b      	subs	r3, r3, r1
 80243f6:	42ab      	cmp	r3, r5
 80243f8:	dcf2      	bgt.n	80243e0 <_printf_i+0x210>
 80243fa:	e7eb      	b.n	80243d4 <_printf_i+0x204>
 80243fc:	2500      	movs	r5, #0
 80243fe:	f104 0619 	add.w	r6, r4, #25
 8024402:	e7f5      	b.n	80243f0 <_printf_i+0x220>
 8024404:	0802538b 	.word	0x0802538b
 8024408:	0802539c 	.word	0x0802539c

0802440c <__sflush_r>:
 802440c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8024410:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024414:	0716      	lsls	r6, r2, #28
 8024416:	4605      	mov	r5, r0
 8024418:	460c      	mov	r4, r1
 802441a:	d454      	bmi.n	80244c6 <__sflush_r+0xba>
 802441c:	684b      	ldr	r3, [r1, #4]
 802441e:	2b00      	cmp	r3, #0
 8024420:	dc02      	bgt.n	8024428 <__sflush_r+0x1c>
 8024422:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8024424:	2b00      	cmp	r3, #0
 8024426:	dd48      	ble.n	80244ba <__sflush_r+0xae>
 8024428:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802442a:	2e00      	cmp	r6, #0
 802442c:	d045      	beq.n	80244ba <__sflush_r+0xae>
 802442e:	2300      	movs	r3, #0
 8024430:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8024434:	682f      	ldr	r7, [r5, #0]
 8024436:	6a21      	ldr	r1, [r4, #32]
 8024438:	602b      	str	r3, [r5, #0]
 802443a:	d030      	beq.n	802449e <__sflush_r+0x92>
 802443c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802443e:	89a3      	ldrh	r3, [r4, #12]
 8024440:	0759      	lsls	r1, r3, #29
 8024442:	d505      	bpl.n	8024450 <__sflush_r+0x44>
 8024444:	6863      	ldr	r3, [r4, #4]
 8024446:	1ad2      	subs	r2, r2, r3
 8024448:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802444a:	b10b      	cbz	r3, 8024450 <__sflush_r+0x44>
 802444c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802444e:	1ad2      	subs	r2, r2, r3
 8024450:	2300      	movs	r3, #0
 8024452:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8024454:	6a21      	ldr	r1, [r4, #32]
 8024456:	4628      	mov	r0, r5
 8024458:	47b0      	blx	r6
 802445a:	1c43      	adds	r3, r0, #1
 802445c:	89a3      	ldrh	r3, [r4, #12]
 802445e:	d106      	bne.n	802446e <__sflush_r+0x62>
 8024460:	6829      	ldr	r1, [r5, #0]
 8024462:	291d      	cmp	r1, #29
 8024464:	d82b      	bhi.n	80244be <__sflush_r+0xb2>
 8024466:	4a2a      	ldr	r2, [pc, #168]	@ (8024510 <__sflush_r+0x104>)
 8024468:	40ca      	lsrs	r2, r1
 802446a:	07d6      	lsls	r6, r2, #31
 802446c:	d527      	bpl.n	80244be <__sflush_r+0xb2>
 802446e:	2200      	movs	r2, #0
 8024470:	6062      	str	r2, [r4, #4]
 8024472:	04d9      	lsls	r1, r3, #19
 8024474:	6922      	ldr	r2, [r4, #16]
 8024476:	6022      	str	r2, [r4, #0]
 8024478:	d504      	bpl.n	8024484 <__sflush_r+0x78>
 802447a:	1c42      	adds	r2, r0, #1
 802447c:	d101      	bne.n	8024482 <__sflush_r+0x76>
 802447e:	682b      	ldr	r3, [r5, #0]
 8024480:	b903      	cbnz	r3, 8024484 <__sflush_r+0x78>
 8024482:	6560      	str	r0, [r4, #84]	@ 0x54
 8024484:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8024486:	602f      	str	r7, [r5, #0]
 8024488:	b1b9      	cbz	r1, 80244ba <__sflush_r+0xae>
 802448a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802448e:	4299      	cmp	r1, r3
 8024490:	d002      	beq.n	8024498 <__sflush_r+0x8c>
 8024492:	4628      	mov	r0, r5
 8024494:	f7ff fb4a 	bl	8023b2c <_free_r>
 8024498:	2300      	movs	r3, #0
 802449a:	6363      	str	r3, [r4, #52]	@ 0x34
 802449c:	e00d      	b.n	80244ba <__sflush_r+0xae>
 802449e:	2301      	movs	r3, #1
 80244a0:	4628      	mov	r0, r5
 80244a2:	47b0      	blx	r6
 80244a4:	4602      	mov	r2, r0
 80244a6:	1c50      	adds	r0, r2, #1
 80244a8:	d1c9      	bne.n	802443e <__sflush_r+0x32>
 80244aa:	682b      	ldr	r3, [r5, #0]
 80244ac:	2b00      	cmp	r3, #0
 80244ae:	d0c6      	beq.n	802443e <__sflush_r+0x32>
 80244b0:	2b1d      	cmp	r3, #29
 80244b2:	d001      	beq.n	80244b8 <__sflush_r+0xac>
 80244b4:	2b16      	cmp	r3, #22
 80244b6:	d11e      	bne.n	80244f6 <__sflush_r+0xea>
 80244b8:	602f      	str	r7, [r5, #0]
 80244ba:	2000      	movs	r0, #0
 80244bc:	e022      	b.n	8024504 <__sflush_r+0xf8>
 80244be:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80244c2:	b21b      	sxth	r3, r3
 80244c4:	e01b      	b.n	80244fe <__sflush_r+0xf2>
 80244c6:	690f      	ldr	r7, [r1, #16]
 80244c8:	2f00      	cmp	r7, #0
 80244ca:	d0f6      	beq.n	80244ba <__sflush_r+0xae>
 80244cc:	0793      	lsls	r3, r2, #30
 80244ce:	680e      	ldr	r6, [r1, #0]
 80244d0:	bf08      	it	eq
 80244d2:	694b      	ldreq	r3, [r1, #20]
 80244d4:	600f      	str	r7, [r1, #0]
 80244d6:	bf18      	it	ne
 80244d8:	2300      	movne	r3, #0
 80244da:	eba6 0807 	sub.w	r8, r6, r7
 80244de:	608b      	str	r3, [r1, #8]
 80244e0:	f1b8 0f00 	cmp.w	r8, #0
 80244e4:	dde9      	ble.n	80244ba <__sflush_r+0xae>
 80244e6:	6a21      	ldr	r1, [r4, #32]
 80244e8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80244ea:	4643      	mov	r3, r8
 80244ec:	463a      	mov	r2, r7
 80244ee:	4628      	mov	r0, r5
 80244f0:	47b0      	blx	r6
 80244f2:	2800      	cmp	r0, #0
 80244f4:	dc08      	bgt.n	8024508 <__sflush_r+0xfc>
 80244f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80244fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80244fe:	81a3      	strh	r3, [r4, #12]
 8024500:	f04f 30ff 	mov.w	r0, #4294967295
 8024504:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024508:	4407      	add	r7, r0
 802450a:	eba8 0800 	sub.w	r8, r8, r0
 802450e:	e7e7      	b.n	80244e0 <__sflush_r+0xd4>
 8024510:	20400001 	.word	0x20400001

08024514 <_fflush_r>:
 8024514:	b538      	push	{r3, r4, r5, lr}
 8024516:	690b      	ldr	r3, [r1, #16]
 8024518:	4605      	mov	r5, r0
 802451a:	460c      	mov	r4, r1
 802451c:	b913      	cbnz	r3, 8024524 <_fflush_r+0x10>
 802451e:	2500      	movs	r5, #0
 8024520:	4628      	mov	r0, r5
 8024522:	bd38      	pop	{r3, r4, r5, pc}
 8024524:	b118      	cbz	r0, 802452e <_fflush_r+0x1a>
 8024526:	6a03      	ldr	r3, [r0, #32]
 8024528:	b90b      	cbnz	r3, 802452e <_fflush_r+0x1a>
 802452a:	f7ff f8a5 	bl	8023678 <__sinit>
 802452e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024532:	2b00      	cmp	r3, #0
 8024534:	d0f3      	beq.n	802451e <_fflush_r+0xa>
 8024536:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8024538:	07d0      	lsls	r0, r2, #31
 802453a:	d404      	bmi.n	8024546 <_fflush_r+0x32>
 802453c:	0599      	lsls	r1, r3, #22
 802453e:	d402      	bmi.n	8024546 <_fflush_r+0x32>
 8024540:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8024542:	f7ff fa86 	bl	8023a52 <__retarget_lock_acquire_recursive>
 8024546:	4628      	mov	r0, r5
 8024548:	4621      	mov	r1, r4
 802454a:	f7ff ff5f 	bl	802440c <__sflush_r>
 802454e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8024550:	07da      	lsls	r2, r3, #31
 8024552:	4605      	mov	r5, r0
 8024554:	d4e4      	bmi.n	8024520 <_fflush_r+0xc>
 8024556:	89a3      	ldrh	r3, [r4, #12]
 8024558:	059b      	lsls	r3, r3, #22
 802455a:	d4e1      	bmi.n	8024520 <_fflush_r+0xc>
 802455c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802455e:	f7ff fa79 	bl	8023a54 <__retarget_lock_release_recursive>
 8024562:	e7dd      	b.n	8024520 <_fflush_r+0xc>

08024564 <__swbuf_r>:
 8024564:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024566:	460e      	mov	r6, r1
 8024568:	4614      	mov	r4, r2
 802456a:	4605      	mov	r5, r0
 802456c:	b118      	cbz	r0, 8024576 <__swbuf_r+0x12>
 802456e:	6a03      	ldr	r3, [r0, #32]
 8024570:	b90b      	cbnz	r3, 8024576 <__swbuf_r+0x12>
 8024572:	f7ff f881 	bl	8023678 <__sinit>
 8024576:	69a3      	ldr	r3, [r4, #24]
 8024578:	60a3      	str	r3, [r4, #8]
 802457a:	89a3      	ldrh	r3, [r4, #12]
 802457c:	071a      	lsls	r2, r3, #28
 802457e:	d501      	bpl.n	8024584 <__swbuf_r+0x20>
 8024580:	6923      	ldr	r3, [r4, #16]
 8024582:	b943      	cbnz	r3, 8024596 <__swbuf_r+0x32>
 8024584:	4621      	mov	r1, r4
 8024586:	4628      	mov	r0, r5
 8024588:	f000 f82a 	bl	80245e0 <__swsetup_r>
 802458c:	b118      	cbz	r0, 8024596 <__swbuf_r+0x32>
 802458e:	f04f 37ff 	mov.w	r7, #4294967295
 8024592:	4638      	mov	r0, r7
 8024594:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024596:	6823      	ldr	r3, [r4, #0]
 8024598:	6922      	ldr	r2, [r4, #16]
 802459a:	1a98      	subs	r0, r3, r2
 802459c:	6963      	ldr	r3, [r4, #20]
 802459e:	b2f6      	uxtb	r6, r6
 80245a0:	4283      	cmp	r3, r0
 80245a2:	4637      	mov	r7, r6
 80245a4:	dc05      	bgt.n	80245b2 <__swbuf_r+0x4e>
 80245a6:	4621      	mov	r1, r4
 80245a8:	4628      	mov	r0, r5
 80245aa:	f7ff ffb3 	bl	8024514 <_fflush_r>
 80245ae:	2800      	cmp	r0, #0
 80245b0:	d1ed      	bne.n	802458e <__swbuf_r+0x2a>
 80245b2:	68a3      	ldr	r3, [r4, #8]
 80245b4:	3b01      	subs	r3, #1
 80245b6:	60a3      	str	r3, [r4, #8]
 80245b8:	6823      	ldr	r3, [r4, #0]
 80245ba:	1c5a      	adds	r2, r3, #1
 80245bc:	6022      	str	r2, [r4, #0]
 80245be:	701e      	strb	r6, [r3, #0]
 80245c0:	6962      	ldr	r2, [r4, #20]
 80245c2:	1c43      	adds	r3, r0, #1
 80245c4:	429a      	cmp	r2, r3
 80245c6:	d004      	beq.n	80245d2 <__swbuf_r+0x6e>
 80245c8:	89a3      	ldrh	r3, [r4, #12]
 80245ca:	07db      	lsls	r3, r3, #31
 80245cc:	d5e1      	bpl.n	8024592 <__swbuf_r+0x2e>
 80245ce:	2e0a      	cmp	r6, #10
 80245d0:	d1df      	bne.n	8024592 <__swbuf_r+0x2e>
 80245d2:	4621      	mov	r1, r4
 80245d4:	4628      	mov	r0, r5
 80245d6:	f7ff ff9d 	bl	8024514 <_fflush_r>
 80245da:	2800      	cmp	r0, #0
 80245dc:	d0d9      	beq.n	8024592 <__swbuf_r+0x2e>
 80245de:	e7d6      	b.n	802458e <__swbuf_r+0x2a>

080245e0 <__swsetup_r>:
 80245e0:	b538      	push	{r3, r4, r5, lr}
 80245e2:	4b29      	ldr	r3, [pc, #164]	@ (8024688 <__swsetup_r+0xa8>)
 80245e4:	4605      	mov	r5, r0
 80245e6:	6818      	ldr	r0, [r3, #0]
 80245e8:	460c      	mov	r4, r1
 80245ea:	b118      	cbz	r0, 80245f4 <__swsetup_r+0x14>
 80245ec:	6a03      	ldr	r3, [r0, #32]
 80245ee:	b90b      	cbnz	r3, 80245f4 <__swsetup_r+0x14>
 80245f0:	f7ff f842 	bl	8023678 <__sinit>
 80245f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80245f8:	0719      	lsls	r1, r3, #28
 80245fa:	d422      	bmi.n	8024642 <__swsetup_r+0x62>
 80245fc:	06da      	lsls	r2, r3, #27
 80245fe:	d407      	bmi.n	8024610 <__swsetup_r+0x30>
 8024600:	2209      	movs	r2, #9
 8024602:	602a      	str	r2, [r5, #0]
 8024604:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8024608:	81a3      	strh	r3, [r4, #12]
 802460a:	f04f 30ff 	mov.w	r0, #4294967295
 802460e:	e033      	b.n	8024678 <__swsetup_r+0x98>
 8024610:	0758      	lsls	r0, r3, #29
 8024612:	d512      	bpl.n	802463a <__swsetup_r+0x5a>
 8024614:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8024616:	b141      	cbz	r1, 802462a <__swsetup_r+0x4a>
 8024618:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802461c:	4299      	cmp	r1, r3
 802461e:	d002      	beq.n	8024626 <__swsetup_r+0x46>
 8024620:	4628      	mov	r0, r5
 8024622:	f7ff fa83 	bl	8023b2c <_free_r>
 8024626:	2300      	movs	r3, #0
 8024628:	6363      	str	r3, [r4, #52]	@ 0x34
 802462a:	89a3      	ldrh	r3, [r4, #12]
 802462c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8024630:	81a3      	strh	r3, [r4, #12]
 8024632:	2300      	movs	r3, #0
 8024634:	6063      	str	r3, [r4, #4]
 8024636:	6923      	ldr	r3, [r4, #16]
 8024638:	6023      	str	r3, [r4, #0]
 802463a:	89a3      	ldrh	r3, [r4, #12]
 802463c:	f043 0308 	orr.w	r3, r3, #8
 8024640:	81a3      	strh	r3, [r4, #12]
 8024642:	6923      	ldr	r3, [r4, #16]
 8024644:	b94b      	cbnz	r3, 802465a <__swsetup_r+0x7a>
 8024646:	89a3      	ldrh	r3, [r4, #12]
 8024648:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802464c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8024650:	d003      	beq.n	802465a <__swsetup_r+0x7a>
 8024652:	4621      	mov	r1, r4
 8024654:	4628      	mov	r0, r5
 8024656:	f000 f887 	bl	8024768 <__smakebuf_r>
 802465a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802465e:	f013 0201 	ands.w	r2, r3, #1
 8024662:	d00a      	beq.n	802467a <__swsetup_r+0x9a>
 8024664:	2200      	movs	r2, #0
 8024666:	60a2      	str	r2, [r4, #8]
 8024668:	6962      	ldr	r2, [r4, #20]
 802466a:	4252      	negs	r2, r2
 802466c:	61a2      	str	r2, [r4, #24]
 802466e:	6922      	ldr	r2, [r4, #16]
 8024670:	b942      	cbnz	r2, 8024684 <__swsetup_r+0xa4>
 8024672:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8024676:	d1c5      	bne.n	8024604 <__swsetup_r+0x24>
 8024678:	bd38      	pop	{r3, r4, r5, pc}
 802467a:	0799      	lsls	r1, r3, #30
 802467c:	bf58      	it	pl
 802467e:	6962      	ldrpl	r2, [r4, #20]
 8024680:	60a2      	str	r2, [r4, #8]
 8024682:	e7f4      	b.n	802466e <__swsetup_r+0x8e>
 8024684:	2000      	movs	r0, #0
 8024686:	e7f7      	b.n	8024678 <__swsetup_r+0x98>
 8024688:	20000220 	.word	0x20000220

0802468c <memmove>:
 802468c:	4288      	cmp	r0, r1
 802468e:	b510      	push	{r4, lr}
 8024690:	eb01 0402 	add.w	r4, r1, r2
 8024694:	d902      	bls.n	802469c <memmove+0x10>
 8024696:	4284      	cmp	r4, r0
 8024698:	4623      	mov	r3, r4
 802469a:	d807      	bhi.n	80246ac <memmove+0x20>
 802469c:	1e43      	subs	r3, r0, #1
 802469e:	42a1      	cmp	r1, r4
 80246a0:	d008      	beq.n	80246b4 <memmove+0x28>
 80246a2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80246a6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80246aa:	e7f8      	b.n	802469e <memmove+0x12>
 80246ac:	4402      	add	r2, r0
 80246ae:	4601      	mov	r1, r0
 80246b0:	428a      	cmp	r2, r1
 80246b2:	d100      	bne.n	80246b6 <memmove+0x2a>
 80246b4:	bd10      	pop	{r4, pc}
 80246b6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80246ba:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80246be:	e7f7      	b.n	80246b0 <memmove+0x24>

080246c0 <_realloc_r>:
 80246c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80246c4:	4607      	mov	r7, r0
 80246c6:	4614      	mov	r4, r2
 80246c8:	460d      	mov	r5, r1
 80246ca:	b921      	cbnz	r1, 80246d6 <_realloc_r+0x16>
 80246cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80246d0:	4611      	mov	r1, r2
 80246d2:	f7fe beab 	b.w	802342c <_malloc_r>
 80246d6:	b92a      	cbnz	r2, 80246e4 <_realloc_r+0x24>
 80246d8:	f7ff fa28 	bl	8023b2c <_free_r>
 80246dc:	4625      	mov	r5, r4
 80246de:	4628      	mov	r0, r5
 80246e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80246e4:	f000 f89e 	bl	8024824 <_malloc_usable_size_r>
 80246e8:	4284      	cmp	r4, r0
 80246ea:	4606      	mov	r6, r0
 80246ec:	d802      	bhi.n	80246f4 <_realloc_r+0x34>
 80246ee:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80246f2:	d8f4      	bhi.n	80246de <_realloc_r+0x1e>
 80246f4:	4621      	mov	r1, r4
 80246f6:	4638      	mov	r0, r7
 80246f8:	f7fe fe98 	bl	802342c <_malloc_r>
 80246fc:	4680      	mov	r8, r0
 80246fe:	b908      	cbnz	r0, 8024704 <_realloc_r+0x44>
 8024700:	4645      	mov	r5, r8
 8024702:	e7ec      	b.n	80246de <_realloc_r+0x1e>
 8024704:	42b4      	cmp	r4, r6
 8024706:	4622      	mov	r2, r4
 8024708:	4629      	mov	r1, r5
 802470a:	bf28      	it	cs
 802470c:	4632      	movcs	r2, r6
 802470e:	f7ff f9a2 	bl	8023a56 <memcpy>
 8024712:	4629      	mov	r1, r5
 8024714:	4638      	mov	r0, r7
 8024716:	f7ff fa09 	bl	8023b2c <_free_r>
 802471a:	e7f1      	b.n	8024700 <_realloc_r+0x40>

0802471c <__swhatbuf_r>:
 802471c:	b570      	push	{r4, r5, r6, lr}
 802471e:	460c      	mov	r4, r1
 8024720:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024724:	2900      	cmp	r1, #0
 8024726:	b096      	sub	sp, #88	@ 0x58
 8024728:	4615      	mov	r5, r2
 802472a:	461e      	mov	r6, r3
 802472c:	da0d      	bge.n	802474a <__swhatbuf_r+0x2e>
 802472e:	89a3      	ldrh	r3, [r4, #12]
 8024730:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8024734:	f04f 0100 	mov.w	r1, #0
 8024738:	bf14      	ite	ne
 802473a:	2340      	movne	r3, #64	@ 0x40
 802473c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8024740:	2000      	movs	r0, #0
 8024742:	6031      	str	r1, [r6, #0]
 8024744:	602b      	str	r3, [r5, #0]
 8024746:	b016      	add	sp, #88	@ 0x58
 8024748:	bd70      	pop	{r4, r5, r6, pc}
 802474a:	466a      	mov	r2, sp
 802474c:	f000 f848 	bl	80247e0 <_fstat_r>
 8024750:	2800      	cmp	r0, #0
 8024752:	dbec      	blt.n	802472e <__swhatbuf_r+0x12>
 8024754:	9901      	ldr	r1, [sp, #4]
 8024756:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802475a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802475e:	4259      	negs	r1, r3
 8024760:	4159      	adcs	r1, r3
 8024762:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8024766:	e7eb      	b.n	8024740 <__swhatbuf_r+0x24>

08024768 <__smakebuf_r>:
 8024768:	898b      	ldrh	r3, [r1, #12]
 802476a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802476c:	079d      	lsls	r5, r3, #30
 802476e:	4606      	mov	r6, r0
 8024770:	460c      	mov	r4, r1
 8024772:	d507      	bpl.n	8024784 <__smakebuf_r+0x1c>
 8024774:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8024778:	6023      	str	r3, [r4, #0]
 802477a:	6123      	str	r3, [r4, #16]
 802477c:	2301      	movs	r3, #1
 802477e:	6163      	str	r3, [r4, #20]
 8024780:	b003      	add	sp, #12
 8024782:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024784:	ab01      	add	r3, sp, #4
 8024786:	466a      	mov	r2, sp
 8024788:	f7ff ffc8 	bl	802471c <__swhatbuf_r>
 802478c:	9f00      	ldr	r7, [sp, #0]
 802478e:	4605      	mov	r5, r0
 8024790:	4639      	mov	r1, r7
 8024792:	4630      	mov	r0, r6
 8024794:	f7fe fe4a 	bl	802342c <_malloc_r>
 8024798:	b948      	cbnz	r0, 80247ae <__smakebuf_r+0x46>
 802479a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802479e:	059a      	lsls	r2, r3, #22
 80247a0:	d4ee      	bmi.n	8024780 <__smakebuf_r+0x18>
 80247a2:	f023 0303 	bic.w	r3, r3, #3
 80247a6:	f043 0302 	orr.w	r3, r3, #2
 80247aa:	81a3      	strh	r3, [r4, #12]
 80247ac:	e7e2      	b.n	8024774 <__smakebuf_r+0xc>
 80247ae:	89a3      	ldrh	r3, [r4, #12]
 80247b0:	6020      	str	r0, [r4, #0]
 80247b2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80247b6:	81a3      	strh	r3, [r4, #12]
 80247b8:	9b01      	ldr	r3, [sp, #4]
 80247ba:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80247be:	b15b      	cbz	r3, 80247d8 <__smakebuf_r+0x70>
 80247c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80247c4:	4630      	mov	r0, r6
 80247c6:	f000 f81d 	bl	8024804 <_isatty_r>
 80247ca:	b128      	cbz	r0, 80247d8 <__smakebuf_r+0x70>
 80247cc:	89a3      	ldrh	r3, [r4, #12]
 80247ce:	f023 0303 	bic.w	r3, r3, #3
 80247d2:	f043 0301 	orr.w	r3, r3, #1
 80247d6:	81a3      	strh	r3, [r4, #12]
 80247d8:	89a3      	ldrh	r3, [r4, #12]
 80247da:	431d      	orrs	r5, r3
 80247dc:	81a5      	strh	r5, [r4, #12]
 80247de:	e7cf      	b.n	8024780 <__smakebuf_r+0x18>

080247e0 <_fstat_r>:
 80247e0:	b538      	push	{r3, r4, r5, lr}
 80247e2:	4d07      	ldr	r5, [pc, #28]	@ (8024800 <_fstat_r+0x20>)
 80247e4:	2300      	movs	r3, #0
 80247e6:	4604      	mov	r4, r0
 80247e8:	4608      	mov	r0, r1
 80247ea:	4611      	mov	r1, r2
 80247ec:	602b      	str	r3, [r5, #0]
 80247ee:	f7de fa2a 	bl	8002c46 <_fstat>
 80247f2:	1c43      	adds	r3, r0, #1
 80247f4:	d102      	bne.n	80247fc <_fstat_r+0x1c>
 80247f6:	682b      	ldr	r3, [r5, #0]
 80247f8:	b103      	cbz	r3, 80247fc <_fstat_r+0x1c>
 80247fa:	6023      	str	r3, [r4, #0]
 80247fc:	bd38      	pop	{r3, r4, r5, pc}
 80247fe:	bf00      	nop
 8024800:	20014be0 	.word	0x20014be0

08024804 <_isatty_r>:
 8024804:	b538      	push	{r3, r4, r5, lr}
 8024806:	4d06      	ldr	r5, [pc, #24]	@ (8024820 <_isatty_r+0x1c>)
 8024808:	2300      	movs	r3, #0
 802480a:	4604      	mov	r4, r0
 802480c:	4608      	mov	r0, r1
 802480e:	602b      	str	r3, [r5, #0]
 8024810:	f7de fa1e 	bl	8002c50 <_isatty>
 8024814:	1c43      	adds	r3, r0, #1
 8024816:	d102      	bne.n	802481e <_isatty_r+0x1a>
 8024818:	682b      	ldr	r3, [r5, #0]
 802481a:	b103      	cbz	r3, 802481e <_isatty_r+0x1a>
 802481c:	6023      	str	r3, [r4, #0]
 802481e:	bd38      	pop	{r3, r4, r5, pc}
 8024820:	20014be0 	.word	0x20014be0

08024824 <_malloc_usable_size_r>:
 8024824:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024828:	1f18      	subs	r0, r3, #4
 802482a:	2b00      	cmp	r3, #0
 802482c:	bfbc      	itt	lt
 802482e:	580b      	ldrlt	r3, [r1, r0]
 8024830:	18c0      	addlt	r0, r0, r3
 8024832:	4770      	bx	lr

08024834 <_init>:
 8024834:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024836:	bf00      	nop
 8024838:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802483a:	bc08      	pop	{r3}
 802483c:	469e      	mov	lr, r3
 802483e:	4770      	bx	lr

08024840 <_fini>:
 8024840:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024842:	bf00      	nop
 8024844:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8024846:	bc08      	pop	{r3}
 8024848:	469e      	mov	lr, r3
 802484a:	4770      	bx	lr
